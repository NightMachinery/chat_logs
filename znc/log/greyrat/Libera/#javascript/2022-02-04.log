[00:02:02] *** Joins: d33tah (~d33tah@2a03:b0c0:3:d0::14d2:c001)
[00:02:37] *** Quits: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[00:02:47] <daoumilseitek> my bad it's working; i had a layout = {}
[00:03:07] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[00:03:17] *** Quits: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 240 seconds)
[00:03:40] <d33tah> hi! i'm looking for a tool - or framework - that would let me debug front-end code using command line. the way i envision it is some kind of JS VM that you plug into your website and it runs all of the JS in it, but also connects over websocket and gives you reverse shell for debugging purposes. is there anything like this already?
[00:04:47] <d33tah> (or a similar thing that would help me write something like this on my own?)
[00:05:54] <Decker> d33tah the debug console is detachable from the frontend... and later hookable  you can use the same gui
[00:07:23] <d33tah> Decker: the thing is that i want to script it, automate debugging, experiment with new tools.
[00:07:29] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:07:43] <d33tah> for example, there's currently no time-travel debugging for javascript front-end, right?
[00:08:57] *** Joins: Supavisah (~Supavisah@user/supavisah)
[00:10:15] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:10:24] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[00:11:36] <daoumilseitek> time-travel debugging ?
[00:12:08] <daoumilseitek> https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/time-travel-debugging-overview
[00:12:23] <daoumilseitek> interesting
[00:12:59] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[00:14:16] <Decker> d33tah https://developer.chrome.com/docs/extensions/reference/debugger/ *shrug*
[00:14:18] <stagas> d33tah: puppeteer
[00:14:31] <Decker> not sure if that's a chromebook thing maybe specicfically or android or
[00:14:37] <bobdobbs> cypress?
[00:14:40] <jaawerth> d33tah: chrome has a whole remote devtools/debugger protocol that can go in both directions (puppeteer also uses it); https://github.com/ChromeDevTools/awesome-chrome-devtools#chrome-devtools-protocol  < this has a bunch of links to resources
[00:15:16] <systemfault> jaawerth: You sure it can do time-traveling debugging?
[00:15:16] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:fff2:9747:6e59:f1b0:31ec) (Remote host closed the connection)
[00:15:17] <d33tah> Decker, stagas, jaawerth: thanks! that could actually work with my use case
[00:15:17] <Decker> right puppeteer is that sort of thing
[00:15:25] *** Joins: N4buc0 (~N4buc0@177.156.214.250)
[00:15:37] <d33tah> is there some general-purpose CLI debugger already written on top of this chrome API?
[00:15:47] <Decker> check that last gihub link
[00:15:56] <jaawerth> systemfault: no I'm not sure, but that wasn't the first thing they asked about
[00:16:03] <bobdobbs> d33tah: I'm not 100% sure what you are looking for. But yesterday I discovered a tool called cypress. Cypress does something that can be described as "time travel debugging". As a project it aims to outcompete puppeteer
[00:16:20] <bobdobbs> https://www.cypress.io/features/
[00:16:34] <daoumilseitek> d33tah: only alt console i know is https://eruda.liriliri.io, but i don't think it will fit your purpose
[00:16:44] <jaawerth> I haven't needed to bother with time travel debugging with JS. I don't actually use debuggers all that often unless something's gone wrong. I'm ore of a REPL + tests kinda guy
[00:16:48] <d33tah> bobdobbs: by time travel debugging i mean recording complete execution - each variable change, each function call, everything - in a way that lets me rewind to a given moment
[00:17:04] <jaawerth> (well you can argue that the debugger is also  REPL but my point is I love m some REPL)
[00:17:10] <jaawerth> it's the lisp dev in me
[00:17:19] <d33tah> i guess that part of my interest is that i'm curious how large-scale organizations do team-work reverse engineering
[00:18:01] <bobdobbs> d33tah: yeah, def check out cypress
[00:18:11] <d33tah> i'm looking for something that would try to do to javascript what IDA is doing to machine code
[00:18:17] <d33tah> bobdobbs: thanks, will do
[00:18:56] <bobdobbs> I mean, I'm not 100% if it will be the tool that you want. But it might be a stab in teh right direction
[00:19:15] <stagas> d33tah: it's not possible with js to do that with 100% accuracy because there are magic objects
[00:19:39] <stagas> like Proxy
[00:19:39] <bobdobbs> jaawerth: speaking of lisp/repl/js, I finally got Indium working recently. It's pretty cool.
[00:20:07] <stagas> d33tah: unless u implement the VM from scratch to support it
[00:20:08] <d33tah> stagas: hm, sounds like something i should read up on. is there a resoure you could recommend regarding that?
[00:20:25] <d33tah> stagas: that's one of the reasons i started by asking about a JS-in-JS VM
[00:20:26] <BinarySavior> I'm new to js, is this code okay? https://jsfiddle.net/hqvtkcgp/30/Â  if I need to reuse this for multiple span elements with multiple modals, how can I reuse this code?
[00:20:42] *** Quits: hamess (~hamess@user/hamess) (Quit: **BRB** dyed my hair bLacK. Mom got so mad lol)
[00:21:00] <ljharb> dylanj: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[00:21:12] <ThePendulum> BinarySavior: use const instead of let, otherwise it looks fine on the surface
[00:21:53] <ThePendulum> not sure I have the full picture of the elements you want to reuse
[00:22:00] *** Joins: crashrep (~crashrep@user/crashrep)
[00:22:27] *** Joins: hamess (~hamess@user/hamess)
[00:22:57] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[00:23:18] *** boris[m]12 is now known as zb[m]
[00:23:24] <stagas> d33tah: the problem is the hypothetical VM that would support such execution would have to mirror exactly the behavior of V8 or other engines, so u end up with the same situation of not being 100% accurate in the reproduction. so essentially all tests in js are acceptance tests because of that, there will be spots in the execution it can't rewind as you'd like
[00:24:07] *** Joins: ejjfunky (~ejjfunky2@125.164.22.168)
[00:26:03] <jaawerth> bobdobbs: oh neat, I am a neovim user but I should try that out on my next foray into emacs
[00:26:48] <jaawerth> stagas: I'd say that's debatable so long as such an engine is spec-compliant
[00:26:51] *** Joins: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com)
[00:26:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:27:08] <stagas> d33tah: the problem is js is a very dynamic language as the code can essentially rewrite its own source code on runtime
[00:27:13] <jumpcutking> I'm looking for a pure javascript solution like this https://jquery-textfill.github.io/ that auto fills text
[00:27:14] <jaawerth> JS tests should theoretically be fine - browser-environment-specific ones maybe not
[00:27:16] <jumpcutking> auto scales
[00:27:18] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[00:27:23] <bobdobbs> jaawerth: I spent ages looking for a way to have js expressions passed from emacs to a browser for evaluation. Indium has that feature.
[00:27:25] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[00:28:28] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[00:28:31] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[00:29:03] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[00:30:04] <jaawerth> bobdobbs: did dap-mode not work? or did you not try that one?
[00:30:19] <jaawerth> by which I mean https://github.com/emacs-lsp/dap-mode
[00:30:33] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:31:15] <bobdobbs> jaawerth: I think I'm using dap for on-the-fly linting, using default configs from... somewhere
[00:31:24] <jaawerth> ahh
[00:31:31] <jaawerth> I've used the similar nvim-dap a bit here and there
[00:31:46] <bobdobbs> but I think that the dap linting I'm using checks against node, and not against chrome
[00:31:52] <SpiceMan> how are they defaults if you got them from somewhere else? xD
[00:31:53] * SpiceMan runs
[00:31:54] *** Joins: onosendi (~onosendi@user/onosendi)
[00:32:14] <jaawerth> though nvim is a bit of a special beast since it's all about the RPC apis - there are even weird browser plugins like firenvim that let you effectively embed it in the browser
[00:33:04] <jaawerth> I never considered using it for linting tbh, just eslint + lsp has been plenty
[00:34:41] <bobdobbs> jaawerth: I've played with nvim. But I'm a classic victim of Emacs-Specific Stockholm Syndrome
[00:34:47] * ThePendulum looks at his vim linter still being fucked
[00:35:01] * bobdobbs steals ThePendulum's vim linter
[00:35:05] <ThePendulum> thanks
[00:35:10] <bobdobbs> np
[00:35:35] <ThePendulum> this is what I've been looking at for a while now https://i.imgur.com/LUi1BzY.png
[00:35:48] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[00:35:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[00:36:15] <jaawerth> oh I get it. despite fennel being able to run natively in nvim there are at least as many eamacs users in the community as there are nvim users, because lisp + emacs. the lead maintainer even uses exwm
[00:36:19] <bobdobbs> jaawerth: In my last foray into vim/nvim, I just couldn't figure out how to create nvim configs. The learning curve for configuration alone was too steep for me
[00:37:10] <jaawerth> it's in abit of a chaotic state right now too due to all the new lua apis leading to a cambrian explosion in the ecosystem
[00:37:37] <bobdobbs> jaawerth: I like how nvim just opens and runs to quickly though. Emacs is slower to start. Especially with a ton of extensions
[00:37:57] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[00:38:28] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Remote host closed the connection)
[00:38:53] <BinarySavior> https://jsfiddle.net/hqvtkcgp/48/Â  Hi escape is not working to close modal for some reason
[00:38:53] <ThePendulum> ugh why does css not have a :last-of-class
[00:39:03] <jaawerth> I'm just thankful that LSP means if you want it you can get roughly the same level of tooling (especially for JS) regardless of what editor you use. I may not use vscode, but I AM thankful for it ;-)
[00:39:30] <bobdobbs> jaawerth: tangential to your metaphor, I just learned the other day about the Edicarian Explosion. A kind of pre-cambrian explosion
[00:40:11] <onosendi> jaawerth: indeed.
[00:40:48] <bobdobbs> jaawerth: but I was reading about it in a journal from 2017. So the implications of edicarian life on the cambrian explosion might be understood differently now.
[00:41:12] <bobdobbs> geez. I should drop the topic-skipping and get back to my javascript homework
[00:41:13] <jaawerth> oh yeah Stephen Jay Gould (whom I was assigned to read by a particularly enthusiastic high school teacher back in the day) wrote about that a bit
[00:42:33] <bobdobbs> jaawerth: yeah, I was specifically looking at topics around the cambrian explosion because I'd encounted some criticism of SJG... that have apparently been around since before Wonderful Life but aren't in popular scientific reading. That's how I found out about the edicarians
[00:42:58] <jaawerth> lol, funny coincidence. I haven't talked to anyone about him in years
[00:43:38] <bobdobbs> jaawerth: Wonderful Life is a great popsci book. It made me a SJG fanboi. But there's some stuff behind it. Hang on, I'll try to find it...
[00:43:51] <KevinX> BinarySavior use keydown
[00:44:18] <BinarySavior> thanks kevinx that worked
[00:46:07] *** Joins: sudomann (~sudomann@98.219.211.182)
[00:46:26] <bobdobbs> jaawerth: personally I think that this necessary reading for people interested in epistimiologies of popular science... which everyone interested in science should be interested in: http://cogweb.ucla.edu/Debate/CEP_Gould.html
[00:49:25] <jaawerth> neat, I'll bookmark it for after work - been a while since I've read anything related to him. book-wise I've only read 8 Little Piggies and The MisMeasure of Man
[00:50:02] <jaawerth> these days when I talk about cambrian explosions I'm pretty muc halways talking about software libraries ;)
[00:50:43] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[00:51:29] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[00:52:29] *** Quits: Supavisah (~Supavisah@user/supavisah) (Remote host closed the connection)
[00:52:32] <bobdobbs> jaawerth: I like that article mostly for it's metaphor of the security camera. I'm interested in the science of human sex. And popsci gets this so horrendously wrong, so far from the primary literature, that even many (maybe even most) non-specialist scientists are emotionally comitted to complete myths.
[00:53:07] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[00:58:18] *** Quits: D4mned (~D1mned@212.101.253.43) (Read error: Connection reset by peer)
[00:59:40] *** Joins: D4mned (~D1mned@212.101.251.182)
[01:02:03] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[01:10:05] *** Joins: Akiva (~Akiva@user/Akiva)
[01:13:22] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[01:14:17] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[01:15:18] <dapinitial> I am having some trouble with a react hook, setting the state inside a conditional and then I want to override/toggle it when I click a button. I think I am using useState() wrong. Is this the channel to ask a purely React question?
[01:16:26] <KevinX> yes but better to share a demo
[01:16:48] <dapinitial> I don't really have a demo because it's a component and it's not working :-P
[01:17:29] <dapinitial> basically I am {size.window > 885 ? setShowsSidebar(true) : setShowSidebar(false)} which is forcing it to be true or false
[01:18:07] <dapinitial> then I have an onClick={() => toggleSidebar()} that isn't working
[01:18:27] <dapinitial> let [showSidebar, setShowSidebar] = useState();
[01:18:37] *** Quits: pmercado (~pmercado@190.22.160.49) (Ping timeout: 240 seconds)
[01:18:49] <KevinX> setShowsSidebar typo?
[01:19:11] *** Quits: Arisc (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br) (Ping timeout: 250 seconds)
[01:19:22] <dapinitial> and then the toggleSidebar = () => with a conditional inside... if(showSidebar) { setShowSidebar(false) } else if (!showSidebar) { setShowSidebar(true) }
[01:19:27] *** Joins: theglass (~glass@user/theglass)
[01:19:34] <KevinX> otherwise it could be many things. You can put a demo on codepen.io
[01:19:38] *** Joins: sudomann (~sudomann@98.219.211.182)
[01:19:44] <dapinitial> ok, on moment please
[01:19:52] <dapinitial> typo, ONE moment please
[01:19:53] <theskillwithin> codesandbox for react
[01:20:13] <KevinX> yeah easier there probably
[01:20:20] <KevinX> codepen works though
[01:20:34] <dapinitial> one second please while I see what I am looking at
[01:21:27] <KevinX> ugh codepen doesnt have a react starter? lame
[01:22:21] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[01:23:35] <KevinX> they have some buried https://codepen.io/topic/react/templates
[01:23:47] *** Joins: Arisc (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br)
[01:23:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[01:25:49] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[01:27:16] <dapinitial> This is going to be a pain to make. Yay... says infinite loop with my minor example https://codesandbox.io/s/elated-wildflower-68bkd?file=/src/App.js
[01:27:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:27:55] <dapinitial> basically I want to be able to toggle something open and close when the screen is a specified size... and then i want to use the button to toggle it open and closed as well
[01:29:43] <KevinX> add a useEffect hook that watches size for changes then changes state there
[01:29:55] <KevinX> dont change state inline like that
[01:30:03] <dapinitial> maybe that ternary under App should be showSidebar vs using the inline state
[01:30:04] <rustyshackleford> I write javascript for my day job. any of you guys put together a side hustle?
[01:30:28] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:30:31] <dapinitial> I still rob drug dealers in my spare time
[01:30:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:30:44] <rustyshackleford> I can try to find a higher paying job too
[01:30:50] <KevinX> dapinitial useEffect(() => { setShowSidebar(size.width > 885) }, [size])
[01:30:51] <rustyshackleford> that might be a better use of my time
[01:32:04] <ox1eef> i'm working on a few side projects but none that could make money
[01:32:33] <dapinitial> Kevin, genius
[01:32:38] <rustyshackleford> its kinda hard to use be self employed in this field
[01:32:42] <dapinitial> I am still new to react hooks
[01:33:02] <rustyshackleford> I don't want to make a startup, ya know?
[01:33:17] <ox1eef> probably the easiest field to be self employed in, or to be working remotely
[01:33:31] <rustyshackleford> self employed != working remotely
[01:33:50] <ox1eef> yeah startup culture tends to go boom then bust, or boom and sold. either way its not a reliable environment.
[01:35:16] <dapinitial> KevinX: i think i don't understand the way it's returning the array with size in the useEffect method
[01:35:24] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[01:35:35] <dapinitial> What is happening there?
[01:35:44] <rustyshackleford> I just want enough money so I can go fishing all the time
[01:35:46] <rustyshackleford> instead of working
[01:35:48] <rustyshackleford> lmao
[01:36:00] <KevinX> dapinitial what do you mean
[01:36:42] <dapinitial> rustyshackleford: be a real outdoorsman, they don't need a lot of money. Just live in a trailer on someone else's property and start an earthworm garden and lift up logs and look for night crawlers and stuff. Eat the fish you catch and wipe in the creek
[01:37:09] <dapinitial> KevinX: I don't understand what it's returning exactly, why did we return an array with size versus returning an empty array
[01:37:10] <rustyshackleford> you have a point
[01:37:39] <ox1eef> all you truly need then is a fishing rod
[01:37:45] <rustyshackleford> I want to do the glamping equivalent of that
[01:37:48] <ox1eef> and maybe a tent
[01:37:54] <rustyshackleford> RV, a nice boat
[01:38:02] <ox1eef> nice dream
[01:38:17] <rustyshackleford> but you're right. I could just be a bum
[01:38:35] <rustyshackleford> no bills
[01:39:22] <KevinX> dapinitial that's a dependency list. React will run the first argument (the function) if anything in that [] changes. In this case, you want to update when size changes
[01:39:25] <dapinitial> if you grow weed or spin fire you might even find yourself a hippy chick
[01:39:36] <dapinitial> KevinX: CLEAR! Thank you!
[01:40:31] <dapinitial> rustyshackleford: so many people in my city (25,000) are doing it... shoot, this one huge encampment has a STRUCTURE with a read door on hinges
[01:40:32] <rustyshackleford> you guys are selling this lifestyle so well
[01:40:54] <rustyshackleford> no showers
[01:40:58] <dapinitial> they have computers and wifi, they are plugged into the city with extension cords, etc
[01:40:58] <rustyshackleford> no 9am standup calls
[01:41:02] <dapinitial> they just shower @ YMCA
[01:41:17] <rustyshackleford> is this Portland?
[01:41:20] <ox1eef> we're walking in your shoes in the truest sense.
[01:41:28] <dapinitial> so they work out all the time and eat protein shakes and get super ripped and practice rock climbing and then they goto the mountains nearby to dirtbag it all summer
[01:41:41] <dapinitial> rustyshackleford: San Francisco
[01:41:51] <rustyshackleford> my friend quit his Bay Area engineer job to live in his car
[01:41:57] <rustyshackleford> and go skiing lol
[01:42:01] <dapinitial> rustyshackleford: word em up
[01:42:03] <ox1eef> im not from us but SF is made to sound like a failed city
[01:42:27] <rustyshackleford> I don't mind getting dirty
[01:42:31] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[01:42:32] <rustyshackleford> but I like to have plumbing
[01:42:33] <dapinitial> rustyshackleford: I quick my design code to learn code and rob drug dealers. Then when I started to learn code I kept robbing drug dealers as a hobby. I consider myself a hero
[01:42:49] <ox1eef> youre like omar from The Wire
[01:42:51] <dapinitial> I heard there was a super hero syndicate in Seattle with bullet proof super suits
[01:42:57] <dapinitial> I can't wait to leave California and move up there
[01:43:02] <ox1eef> of course youd meet that type in #javascript, typical
[01:43:28] <dapinitial> It's called the "RAIN CITY MOVEMENT" and it's led by PHOENIX JONES
[01:43:40] <KevinX> im in florida. its wild here too
[01:43:53] <ox1eef> flordia is trump country
[01:44:04] <dapinitial> just a little more React skills and I'll be ready for such a move. I don't want to have to fall back onto my mustache twisting and coffee slurping
[01:45:02] <dapinitial> What type of fishing pole you got? If you have a tenkara rod you'd probably find a fine stripper in portland to live with who is into living minimal and ultralight backpacking
[01:45:18] <KevinX> ox1eef florida is becoming more obsessed with desantis. I stay out of that mess though and hate them all generally
[01:45:24] <ljharb> ox1eef: it's really not
[01:45:39] <ljharb> it's that all the republican states bus their homeless people to california
[01:45:50] <dapinitial> make sure you're 'nare fully tatted and know the difference between hybridization and anastomosis of mycological fungus before you move
[01:45:55] <ox1eef> that's us politics generally, best left alone and never discussed. a toxic pit, ever since social media blew up.
[01:46:26] <dapinitial> My apologies for luring us all down into this pit. Let's climb out!
[01:46:43] <rustyshackleford> dapinitial: instead of buying a house, I bet I have enough to outfit a pretty sweet van
[01:47:51] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[01:50:45] <KevinX> i bought my house a year ago right before it doubled in value
[01:50:46] <ox1eef> when it comes to inputs of type range, is the accuracy suppose to be awful?
[01:51:03] <dapinitial> KevinX: lucky mfer
[01:51:03] <KevinX> i should sell it and buy a van
[01:51:34] <KevinX> i would live on a boat and sail around the world actually if it were practical
[01:51:35] <ox1eef> i slide one way , it goes the other. i want to move by 1, it moves by 10.
[01:51:53] <KevinX> Ive been fully remote the past decade
[01:51:59] <dapinitial> KevinX: def. before it plummets. I bought in 2008 at ~6.7% interest. I took the 8500 tax credit and used it on student loans. My company closed a year later and I had to move so it was no longer my primary residence. I rented it and was forced by the IRS to repay the 8500 immediately
[01:52:02] <rustyshackleford> covid's got us feeling cooped up huh?
[01:52:19] <dapinitial> KevinX: over the next 10 years I lived meagerly through my 20s and 30s
[01:52:24] <KevinX> yeah but it could also not collapse too
[01:52:31] <dapinitial> KevinX: I tried to apply for Obama's HARP and HAMP and HAMP 2.0
[01:52:45] <rustyshackleford> KevinX: I guess you could get starlink internet
[01:52:51] <rustyshackleford> and work from the middle of the ocean
[01:52:57] <dapinitial> KevinX: I was always denied and my loan was always shuffled around. I never received the loan modification I qualified for
[01:53:20] <dapinitial> KevinX: I believe it was because I am Latino and have a Spanish name which makes me high risk.
[01:53:40] *** Joins: sudomann (~sudomann@98.219.211.182)
[01:53:49] <KevinX> I dont know much about that stuff. I deal with the government and banks as little as possible
[01:54:00] <dapinitial> KevinX: I paid about 200K more than I should have... which I lost ultimately in increased mortgage payments when I should have been able to refinance. My debt to income ratio between the house, cars, and the student loans made me unable to join the military
[01:54:31] <KevinX> geez, that's surprising
[01:54:39] <dapinitial> KevinX: I sold the house for a minor profit in 2018... I made ~30K... now my house is worth 350K more than I sold it for... suicidal tendancies are real
[01:54:41] <KevinX> you dodged a bullet there though
[01:54:48] <rustyshackleford> maybe literally
[01:54:50] <dapinitial> KevinX: God is watching out for me
[01:55:08] <dapinitial> I'm looking for a house now and have been since I sold my house...
[01:55:23] <dapinitial> and I cannot find one... homes that are STARTING at are going for 800-1.5 million
[01:55:34] <KevinX> well thats the thing. everything goes up eventually, even if just because of inflation
[01:55:40] <dapinitial> starting at 500K i meant, are selling for 800K-1.5M
[01:55:55] <dapinitial> Idk if it's gonna keep going up but it doesn't make a lot of sense to me...
[01:56:35] <KevinX> yeah houses where I live are few
[01:56:40] <KevinX> and expensive
[01:56:46] <dapinitial> let's say I spend 300K more than a 500K house is worth... and in ten years, that 500K house I bought for 800K is worth 1.1 Million... in ten years could I not have saved $30K a year NOT owning a home with all the labor expenses and maintainence?
[01:57:20] <dapinitial> probably better to slug it away in my employer matched 401K and live with my girlfriend in her 1 bedroom
[01:57:25] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-057.um10.pools.vodafone-ip.de)
[01:57:28] <KevinX> yeah if you can rent for less and invest the difference then renting could be a better option
[01:57:46] <KevinX> depends on the interest rate you get too
[01:58:03] <KevinX> you pay most the interest up front though which sucks
[01:58:20] <dapinitial> yeah... I do want a house though so my fam can visit me... but they like the AirBNBs I rent for them when they do. I am perplexed. I am just having to reimagine... the american dream is still here... but the ideals of home ownership maybe are not so idylic and that is okay
[01:58:29] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[01:58:33] <dapinitial> that's what I am learning to reconcile with. I may never have kids a dog or a yard
[01:58:47] <rustyshackleford> well you could move farther outside a metro area
[01:58:56] <dapinitial> KevinX: exactly. In ten years you may still owe about the same as you financed
[01:58:57] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[01:59:03] <dapinitial> amoritization is a bad mother
[01:59:04] <neshpion> it's called the american dream because you have to be asleep to believe in it
[01:59:09] <KevinX> you can choose the life you want too, and it doesn't have to fit a cookie cutout
[01:59:10] <ox1eef> lol
[01:59:13] <rustyshackleford> I hate that quote
[01:59:14] <ox1eef> good one
[01:59:26] <dapinitial> rustyshackleford: even 3-4 hours from where I am homes are selling for the same. Nothing is being built anymore because of the costs of materials
[01:59:45] <KevinX> isnt that a Carlin quote? ha ha
[01:59:50] <neshpion> yeah
[01:59:58] <dapinitial> KevinX: true. and I am learning to love that
[02:00:00] <rustyshackleford> KevinX: yeah I love Carlin haha
[02:00:03] <ox1eef> making people laugh from the grave
[02:00:24] <rustyshackleford> but I hate how often people say that. it usually comes off as whiney
[02:00:49] <rustyshackleford> if you don't believe that working hard leads to success then idk how you do anything
[02:01:11] <KevinX> it doesnt help as much as you might think
[02:01:19] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 256 seconds)
[02:01:20] <KevinX> mostly luck
[02:01:27] <dapinitial> hard work works, it's just hard
[02:01:28] <KevinX> and working smart shoudl be the motto over working hard
[02:01:50] <neshpion> the american dream, the definition i've always heard, is that you can give your children a life better than the one you had
[02:01:55] <KevinX> its about being prepared for when luck comes your way
[02:01:57] <dapinitial> I'm a liberal but I believe that when people say "Be a man" they mean suck it up butter cup, life is a fucking bitch and it's hard and you're gonna have to endure
[02:02:13] <dapinitial> that's not a bad or sexist thing... but people who don't want to work don't like the idea of having to work so they make it a bad thing
[02:02:19] <rustyshackleford> my grandpa used to say, "wish in one hand and shit in the other, see which one fills up first"
[02:02:20] <systemfault> dapinitial: That's a far-right belief :P
[02:02:22] <rustyshackleford> I like it
[02:02:29] <neshpion> well... i think that used to be true, but it's approaching apogee if it hasn't crossed it already
[02:03:17] *** Quits: Senz (whoa@ool-ad0244e9.dyn.optonline.net) (Ping timeout: 240 seconds)
[02:03:31] <neshpion> one thing i'm pretty sick of hearing is how "far-right" things are; the scare is akin to suburbanite soccer moms' panic over satanism
[02:03:40] <systemfault> Everything is far-right now.
[02:03:52] <neshpion> everything is satanic
[02:03:59] <systemfault> 666
[02:04:15] <dapinitial> all my friends who grew up in radical leftist households left their rich white parents and moved to the south lol
[02:04:18] <neshpion> whoah you can't just type that, do you want to get demon possessed
[02:04:36] <dapinitial> they are nurses and engineers and they are like, I don't believe in that anymore
[02:04:51] <KevinX> systemfault the world would be better off
[02:04:56] <dapinitial> but I don't have many friends so I'm just meer peasant in this landscape
[02:05:07] <ljharb> neshpion: except that it's true?
[02:05:12] <ljharb> neshpion: not the satanic part, ofc
[02:05:16] <systemfault> ljharb: Ah :(
[02:05:31] <systemfault> The satanic part was fun...
[02:05:34] <neshpion> ljharb: i've been in here long enough to know better than to take your perspective very seriously
[02:05:37] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e2c7:ae5c:c5e4:1022)
[02:05:44] <KevinX> I meant to tag neshpion
[02:05:48] <ljharb> neshpion: that's a pretty hostile response
[02:06:08] <neshpion> it's dismissive
[02:06:12] <ljharb> yes, which is hostile.
[02:06:22] <KevinX> I definitely thing the world is much worse off with how far right it is
[02:06:22] <rustyshackleford> shots fired
[02:06:30] <neshpion> no, dismissive isn't hostile
[02:06:31] <ljharb> KevinX: objectively, yes
[02:06:32] <dapinitial> i'll see you all down by the fire, playing music before our satanic debauchery and doing qigong yoga with some reishi sound therapy singing bowls and all that
[02:06:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:06:45] <ljharb> neshpion: it's hostile, and it's also pretty foolish, but those two aren't related
[02:06:53] <dapinitial> the night time is the right time
[02:07:00] <ljharb> neshpion: what exactly is an example of something that's called "far-right" but you don't think is?
[02:07:21] <ljharb> (bearing in mind that all US politics are right-wing, compared to most of the world's metric)
[02:07:30] <dapinitial> ljharb: I don't think that the belief that hard work is essential to success is a far right belief
[02:07:32] <neshpion> dapinitial gave an example just a few lines up
[02:07:39] <KevinX> space force :P
[02:07:43] <ljharb> dapinitial: sure, i agree
[02:07:46] <dapinitial> Space force is so legit
[02:07:51] <ljharb> dapinitial: but believing that someone who doesn't work hard deserves to die, is.
[02:08:06] <dapinitial> ljharb: I didn't say someone deserves to die because they don't work hard
[02:08:14] <ljharb> dapinitial: nope! but right-wing politics do.
[02:08:30] <rustyshackleford> it would solve our homeless problem
[02:08:30] <dapinitial> ljharb: I also don't think that punishing people EQUALLY for their crimes is a right-wing belief
[02:08:33] <ljharb> dapinitial: iow, any time food, medicine, and shelter is dependent on work? that's a right-wing belief.
[02:08:51] <ljharb> dapinitial: i'm not sure how you define "equally", so we'll have to clarify that too
[02:09:02] <dapinitial> ljharb: If you're white and on drugs and do crime you shouldn't get drug court from the white prosecutor because you're suffering from a disease and a self imposed poverty
[02:09:05] <ljharb> dapinitial: but also, the criminal justice system is not *supposed* to be punishment. it's supposed to be rehabilitation. it's just, not.
[02:09:17] <ljharb> dapinitial: nobody's suffering from self-imposed poverty.
[02:09:20] <dapinitial> ljharb: we have obamacare for that, I didn't say anything about that
[02:09:40] <ljharb> dapinitial: sure. but guess which side of the spectrum opposes obamacare
[02:09:51] <ljharb> dapinitial: i'm not making claims about you here. i'm making claims about what things are "right-wing"
[02:09:59] <dapinitial> ljharb: I'm fighting a case of a guy who's family has tried to buy me off when he broke into my building and stole my vehicle
[02:10:01] <ox1eef> is america really this divided or is it just the internet
[02:10:15] <systemfault> Both sides? Because Obamacare is bad... you guys would be better off with a universal healthcare...
[02:10:18] <rustyshackleford> ox1eef: its amazingly divided
[02:10:20] <ljharb> ox1eef: both
[02:10:26] <dapinitial> ljharb: they are discriminatory prosecuting him offering him drug court saying he's dealing with the effects of drugs and poverty
[02:10:32] <rustyshackleford> there are two americas
[02:10:36] <ljharb> systemfault: the only thing worse than obamacare is the nothing we had before that, tho.
[02:10:41] <ljharb> dapinitial: ok so let's step back
[02:10:53] <KevinX> i think the end goal for humans should be to never have to work at all if you choose not to. why does everyone glorify working hard anyway
[02:11:00] <dapinitial> he's been release and caught over 30 times in the last four years for everything from drugs, and breaking and entering, to aggravated assaults and batteries, using fire aarms, and domestic violence
[02:11:02] *** Joins: nulysses1 (~Thunderbi@p5dd17e85.dip0.t-ipconnect.de)
[02:11:04] <ljharb> dapinitial: first, you're talking about something that's personal, so it'll be hard for you to be objective. but you're saying some guy broke into your building and stole your car
[02:11:06] <KevinX> the rich dont work hard
[02:11:09] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[02:11:17] <rustyshackleford> KevinX: many of them worked hard to get there
[02:11:21] <KevinX> false
[02:11:25] <ljharb> dapinitial: so, what? the cops arrest them, your insurance pays you back, you're inconvenienced but that's about it.
[02:11:28] <KevinX> some*
[02:11:29] <ljharb> rustyshackleford: very false
[02:11:29] <neshpion> working hard reaches a point where it becomes equivocal to devaluing your own paycheck
[02:11:31] *** Quits: nulysses (~Thunderbi@p200300c5171f2e009014822a574bf69b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:11:49] <ljharb> KevinX: and yes, you're right. the primary measurement of human progress is how many jobs we eliminate.
[02:11:56] <ljharb> "preserving jobs" is regressive and backwards.
[02:11:57] <dapinitial> who can afford insurance? you're living that elitist reality
[02:12:16] <ljharb> dapinitial: if you can't afford car insurance, then you can't afford the car either
[02:12:19] <dapinitial> the poor and working class are hurting
[02:12:27] <rustyshackleford> and even if you didn't earn it and you're rich, you can still work hard
[02:12:31] <ljharb> dapinitial: i'm not implying everyone can afford those things, ofc. just saying that they go together. by law, in some states.
[02:12:34] <rustyshackleford> use all of that capital you have to make some shit happen
[02:12:48] <ljharb> rustyshackleford: right but that's objectively not what rich people do. they hoard it, like a dragon on a pile of gold.
[02:12:51] <wez> .o/
[02:12:54] *** Joins: mdemo (~mdemo@user/mdemo22)
[02:12:59] <dapinitial> you are implying that and in my state it's not required for the type of vehicle I had stolen, and it wasn't a vehicle I bought either, but one I built over two years time
[02:13:06] <neshpion> ljharb: no, one can certainly afford to buy and maintain a vehicle without *comprehensive* insurance, as long as liability is covered
[02:13:23] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[02:13:24] <dapinitial> it's easy to see that neither people on left or right actually care about the facts or each other
[02:13:34] <rustyshackleford> The Millionaire Next Door claims that 80% of millionaires did not inherit their wealth
[02:13:37] <dapinitial> they only care about arguing their side that they feel compelled to signal
[02:13:39] <ljharb> dapinitial: ok so, yes, without insurance that sucks for you, and you're left only with suing the person. who probably has no money.
[02:13:42] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[02:13:50] <ljharb> dapinitial: but that just means your state failed to have that kind of a law
[02:13:55] <dapinitial> suing? Who wants money? I want people to be prosecuted properly
[02:13:56] <rustyshackleford> if you're talking billionaire status, then I'd imagine a lot more of that is inherited
[02:14:06] *** Quits: D4mned (~D1mned@212.101.251.182) (Quit: Leaving)
[02:14:06] <ljharb> dapinitial: that's punishment tho, and that's not what the criminal justice system is for
[02:14:08] <dapinitial> i caught the guy2. days later with my friends. Myself latino, and my friends both black
[02:14:13] <ljharb> dapinitial: you don't GET to ensure people are punished. that's not the point.
[02:14:14] <dapinitial> the police who showed up, all black
[02:14:19] <dapinitial> we laught "We fit the profile"
[02:14:31] <ljharb> if your goal is punishment, then you're definitely not left-wing.
[02:14:36] <dapinitial> if we had done the same crime there is no doubt in our minds we would be on the way to prison
[02:14:38] <ljharb> it's pretty right-wing to want revenge.
[02:14:48] <rustyshackleford> revenge feels pretty good though
[02:14:49] <ljharb> dapinitial: sure, discrimination sucks
[02:14:53] <dapinitial> especially with the litany of other felonies he commmited before and after this singular incident
[02:14:56] <dapinitial> yeah,
[02:15:01] <rustyshackleford> it makes an excellent plot for a movie also
[02:15:05] <ljharb> dapinitial: the problem isn't that the white guy didn't go to jail. it's that if he wasn't, he would have.
[02:15:13] <dapinitial> they are discriminating against us by NOT applying the law the same way
[02:15:15] <ljharb> dapinitial: yes
[02:15:18] <dapinitial> they are giving him preferential treatment
[02:15:26] <dapinitial> because's he's a "sick guy"
[02:15:29] <ljharb> dapinitial: right. but the treatment he's getting is what *you* should get too
[02:15:40] <dapinitial> and are giving their preferred class a priviledge and a pass
[02:15:47] <ljharb> dapinitial: if someone has that many problems then throwing them in jail isn't going to help anything
[02:15:47] <dapinitial> NO
[02:15:57] <dapinitial> there is no incentive for him to change
[02:16:04] <rustyshackleford> do you guys see the Back the Blue flag often?
[02:16:05] <ljharb> dapinitial: that's not how human beings work.
[02:16:06] <dapinitial> there is no incentive for him to do crime
[02:16:09] <neshpion> it stops them being able to continue to steal people's things
[02:16:13] <dapinitial> it's not up to YOU a bystander to decide
[02:16:14] <ljharb> dapinitial: you can't incentivize people to change like that. you have to address the root causes.
[02:16:16] <systemfault> ljharb: No, but there are to be consequences.... forced therapy or something.
[02:16:17] <dapinitial> it should be up to the victim, ME
[02:16:24] <ljharb> systemfault: sure
[02:16:25] <ljharb> dapinitial: no
[02:16:31] <dapinitial> to decide based on the facts what the punishment should be
[02:16:32] <ljharb> dapinitial: that's not how it does work, nor how it should work
[02:16:34] <ljharb> dapinitial: that's "eye for an eye"
[02:16:40] <ljharb> dapinitial: there's no such thing as punishment
[02:16:42] <neshpion> ljharb: the biggest motivator for behavior is avoidance of discomfort
[02:16:47] <ljharb> dapinitial: the law exists for rehabilitation. it just really sucks at that.
[02:16:49] <dapinitial> just because he HARMED me doesn't mean i will hard him
[02:16:52] <ljharb> neshpion: that's not actually true
[02:16:55] <dapinitial> If i want to rob a bank
[02:16:57] <ljharb> neshpion: there's GOBS of objective studies on that stuff
[02:17:05] <dapinitial> or rape your wife while my friend holds you at gunpoint
[02:17:11] <dapinitial> should I claim "I'm on drugs" and get drug court?
[02:17:16] <neshpion> ljharb: so what is the biggest factor?
[02:17:18] <joepie91> FYI, it's basically been exhaustively proven by this point that punitive 'justice' systems just do not work
[02:17:19] <ljharb> dapinitial: it doesn't matter what was done to you; a system where you get to decide a punishment is not a good one.
[02:17:23] <joepie91> and often make things worse
[02:17:24] <ljharb> neshpion: go read up on "rat park"
[02:17:28] <joepie91> there's not even really a discussion anymore if you care to look at the research
[02:17:40] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[02:18:11] <sheetjs> rustyshackleford: it wasn't unreasonable in the past to grind a million dollars by living within means and enjoying asset appreciation as interest rates fell
[02:18:15] <ljharb> neshpion: people do bad things because they feel they have no other choice, or, because they've learned some coping mechanisms and keep using them
[02:18:24] <systemfault> ljharb: Or they're just bad people.
[02:18:34] <joepie91> in other words: the discussion about "should justice systems be punitive, or restorative/rehabilitating" is *purely* an ideological discussion, that shows how you feel other people should be treated, it has nothing to do with what works on a societal level because that debate was settled a long long time ago
[02:18:42] <ljharb> systemfault: nope, that doesn't exist, if you actually look at the psych and neurology studies on this sort of thing
[02:19:03] <ljharb> systemfault: everybody's redeemable, it's just that society doesn't choose to put forth the required effort
[02:19:36] <systemfault> I disagree, some humans are just not redeemable...
[02:19:59] <ljharb> systemfault: and yet, every expert on this sort of thing disagrees with you. feel free to publish a paper tho
[02:20:13] <ljharb> altho it's very right-wing to believe that people who do things you don't like are inherently bad :-)
[02:20:19] <systemfault> ljharb: My paper would probably have as much credibility as theirs...
[02:20:34] <systemfault> That's the problem with the pseudo-sciences.
[02:20:44] <systemfault> Like sociology for example...
[02:20:47] <sheetjs> lets move onto a more JS-appropriate topic
[02:20:56] <ljharb> systemfault: they're not pseudo-sciences. lol are you tom cruise now
[02:21:19] <systemfault> ljharb: The reproducibility crisis is a hoax?
[02:21:29] <systemfault> ljharb: Probably pushed by Fox News and Trump?
[02:22:00] <joepie91> criminology, neurology, etc. are definitely not pseudo-sciences
[02:22:01] <stenno> https://imgs.xkcd.com/comics/purity.png
[02:22:03] <systemfault> There's that right-wing dude who managed to get troll papers published.
[02:22:08] <rustyshackleford> sheetjs: so java and javascript are basically the same thing, right?
[02:22:17] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[02:22:19] <dapinitial> society should be protected from the people who are abusive to it. we don't need to bend the rules to people who don't want to live in reality. My mother is a twin. Her twin killed someone when I was 5. He was 24. He started breaking kids' arms and stuff when he was in elemetary school. He is a bad person. He has morals, but they aren't in line with ours... with societies'... when the judge asked why he killed someone ove
[02:22:19] <dapinitial> r $200, he said "I don't care if it was $2, nobody steals from me". He did his time unapologetically. He doesn't kill people anymore. He still mades BAD choices that harm others in other ways
[02:22:20] <neshpion> rustyshackleford: only if you write java scripts
[02:22:50] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[02:23:07] <sheetjs> is anyone working on a JS x86/aarch64 disassembler
[02:23:26] <stenno> maybe Kirjava ?
[02:23:26] <dapinitial> I also believe that the only help some people have is prison to protect us. He's told me himself, "Nephew, there are so many people who are alive today because I wasn't out on the street"
[02:23:29] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[02:23:34] <stenno> Kirjava does that kind of stuff
[02:23:38] <stenno> or something like that
[02:23:46] <dapinitial> when he was 14 he was breaking into a mechanic's shop to steal tools to buy beer
[02:23:58] <dapinitial> he found a tool box and inside was cocaine and heroin
[02:23:59] *** Quits: flughafen (~flughafen@p5de8ed0b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:24:03] <sheetjs> ghidra is java and radare2 is python
[02:24:48] <dapinitial> he went to a local gang and he that's how he wound up killing someone, he said had it not been for the gang he would have still killed someone. He was already violent from the time he was young. He grew up with great parents in a great household. He said "You're mom is my twin. She was the angel. I was always the devil"
[02:25:00] *** Joins: mdemo (~mdemo@user/mdemo22)
[02:25:23] <dapinitial> Sure maybe we could have saved him, somehow. He's still alive. He's just you know...
[02:25:40] <dapinitial> Then there are Nikko Jenkins out there
[02:26:21] *** Quits: mdemo (~mdemo@user/mdemo22) (Client Quit)
[02:26:27] <systemfault> Always strange how right-wing most of the mainstream US policies are... but it really looks, sometimes, like progressives are overcompensating.
[02:26:42] <neshpion> muh dialectics
[02:27:18] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:27:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:28:35] <dapinitial> "There's only so much time left in this crazy world... I'm just crumblin herb"
[02:29:09] <stenno> in the usa, social democracy is progressive lol
[02:29:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:29:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:29:41] *** Joins: wroathe (~wroathe@user/wroathe)
[02:31:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:31:35] <daoumilseitek> you went a little far from #javascript there
[02:32:18] <neshpion> what? it's politics.js
[02:32:34] <dapinitial> tight like hallways smoked out allways
[02:32:42] *** Quits: pizdets_ (~pizdets@183.182.110.216) (Ping timeout: 250 seconds)
[02:32:55] <jaawerth> dan_berg_pub_: I'm like 90% the problem is that in your ternary you're running setState in either condition
[02:32:58] <dapinitial> it's great to imagine how great the world could be when you haven't really lived this world's experiences
[02:32:58] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: see you later)
[02:33:05] <jaawerth> oh lol I was scrolled WAY up
[02:33:08] <jaawerth> you probably already figured that out
[02:33:14] <dapinitial> how many of use are walking around with visible deformities from being attacked?
[02:33:22] <stenno> lets talk about react hooks instead
[02:33:26] <dapinitial> stenno:
[02:33:31] <dapinitial> stenno: Yes, KevinX helped me with that
[02:33:56] *** Joins: pizdets (~pizdets@183.182.111.49)
[02:34:28] <ljharb> systemfault: "reproducibility crisis"?
[02:34:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:35:01] <systemfault> Replication crisis https://en.wikipedia.org/wiki/Replication_crisis
[02:35:21] <sheetjs> anyone familiar with nuxt?
[02:35:49] <ljharb> systemfault: certainly that a given study may not be reproducible casts lots of doubt on that study. but it doesn't cast doubt on studies as a concept.
[02:36:20] <systemfault> ljharb: It matters when policies are created based on flawed studies... that's what I'm saying here.
[02:36:47] <systemfault> I'm not saying that people are making bad studies on purpose or anything...
[02:36:48] <dapinitial> i concur. it may make sense to you in your mind but that's just your beliefs how things should be
[02:36:58] <ljharb> systemfault: sure. that doesn't mean all policies based on studies are bad either.
[02:37:03] <dapinitial> accidents happen we learn as we go
[02:37:33] <dapinitial> nobody is saying that either. science is real. we only have do much data at any given delta
[02:37:46] <ljharb> sure
[02:38:10] <ljharb> but earlier, systemfault was implying that all psych studies weren't credible because some percentage - even a high one - aren't
[02:38:34] <ox1eef> psychology does untold harm, no doubt
[02:38:59] <dapinitial> well i mean, it's a soft science
[02:39:06] <stenno> hey, lets change the topic a bit to javascript again, ok?
[02:39:13] <dapinitial> yes, let's talk JS!!!
[02:39:20] <ox1eef> their response can only be as good as their understanding, and their understanding is basic
[02:39:46] <systemfault> stenno: Write us some JSX in JS hackery :P
[02:40:00] <dapinitial> hooootie hooo. tight like hallways, smoked out all ways
[02:40:09] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[02:40:16] <neshpion> what is that phrase supposed to mean
[02:40:19] <stenno> n>div=0,1        <div>'Hello'</div>          /
[02:40:21] <jellobot> (okay) false
[02:40:45] <stenno> can someone come up with something better?
[02:40:57] <stenno> can we get parameters? :D
[02:41:23] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[02:41:44] <stenno> i guess inside the reegexp literal
[02:42:19] <ljharb> n> var div = { valueOf() { return 3; } }, 0                <div>4</div>               / @ stenno
[02:42:20] <jellobot> stenno, SyntaxError: Unexpected number
[02:42:24] <ljharb> lol aww
[02:42:36] <stenno> n>div,a=0,1        <div>'Hello'</div><a href='/login'></a>        /
[02:42:37] <jellobot> (fail) SyntaxError: Invalid regular expression flags
[02:42:40] <stenno> damn
[02:42:43] <stenno> ooh ok
[02:43:01] <stenno> n>div,a=0,1        <div>'Hello'</div><a href='\/login'></a>        /
[02:43:02] <jellobot> (fail) SyntaxError: Invalid regular expression flags
[02:43:08] <stenno> n>div,a=0,1        <div>'Hello'</div><a href='\/login'></ a>        /
[02:43:09] <jellobot> (fail) SyntaxError: Unexpected identifier
[02:43:12] <stenno> yeah ok
[02:43:23] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[02:43:26] <sheetjs> is the goal to make an html expression pass the JS parser?
[02:43:29] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[02:43:30] <stenno> yess
[02:43:33] <stenno> -s
[02:43:44] <stenno> 'JSX in JS' as systemfault calls it
[02:43:48] *** Joins: onosendi (~onosendi@user/onosendi)
[02:44:45] <neshpion> n>div,a=0,1        <div>'Hello'</div><a href='\/login'><\/ a>      /
[02:44:46] <jellobot> (fail) ReferenceError: div is not defined
[02:44:57] <neshpion> i don't know the rules of this fuckery
[02:44:58] *** Joins: Senz (whoa@ool-ad0244e9.dyn.optonline.net)
[02:45:00] <stenno> mm
[02:45:02] <ljharb> n>--> <div><JSX /></div> i can do anything i want here @ stenno
[02:45:03] <jellobot> stenno, undefined
[02:45:22] <stenno> wait
[02:45:26] <stenno> n> --> Hello
[02:45:27] <jellobot> (okay) undefined
[02:45:31] *** Quits: ox1eef (~0x1eef@user/ox1eef) (Quit: Leaving)
[02:45:31] <stenno> nani the fuck
[02:45:36] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[02:45:43] <stenno> didn't think i'd actually learn something with this
[02:45:45] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[02:45:48] *** Joins: ox1eef (~0x1eef@user/ox1eef)
[02:45:48] <ljharb> stenno: html comments
[02:45:52] <stenno> well yeah
[02:46:00] <stenno> but why
[02:46:09] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[02:46:32] <ljharb> because that's how browsers work, so it was added to the language
[02:46:58] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[02:47:04] <stenno> n> let bla = 23; bla --> 21
[02:47:05] <jellobot> (okay) true
[02:47:16] <stenno> does it have to be first in the line?
[02:47:32] <joepie91> sociology isn't either
[02:47:36] <stenno> n> eval('let bla = 23; bla \n--> 21')
[02:47:37] <jellobot> (okay) 23
[02:47:49] <stenno> n> eval('let bla = 23; bla --> 21')
[02:47:49] <jellobot> (okay) true
[02:47:52] <stenno> aah i see
[02:47:54] <stenno> first in line
[02:48:20] <joepie91> the reproducibility crisis is real, but not constrained to one or even a few fields of study, and a very different thing from 'pseudoscience'
[02:48:26] <stenno> joepie91: pls
[02:49:15] <joepie91> systemfault: what makes a pseudoscience a pseudoscience is not that there is misconduct within the field, but rather that the field itself was never meant to adhere to scientific principles at all, and any such claim was only ever a superficial coat of paint with no real intention behind it
[02:49:21] <stenno> joepie91: PLS
[02:49:22] <joepie91> systemfault: all the aforementioned fields are genuine scientific fields which have suffered from misconduct in various forms
[02:49:29] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[02:49:50] <stenno> joepie91: i am op in this channel and i am asking you to stop this offtopic
[02:49:55] <austincheney> injecting --> into JS does not work in the chrome console
[02:49:58] <joepie91> dapinitial: 1) you're completely overlooking the question of "why do they behave like that", and 2) I'll save you some time and jump straight to the logical conclusion of that line of reasoning: every criminal should get the death penalty, because the alternative is lifelong imprisonment and that is inhumane torture
[02:50:15] <systemfault> joepie91: We kind of moved on to other topic... so, let's argue next time? :/
[02:50:17] <ox1eef> that escalated quickly
[02:50:21] <joepie91> if society "needs to be protected from someone", and they are "unsalvageable", then that by definition would remain true for their entire life
[02:50:23] *** ChanServ sets mode: +o stenno
[02:50:28] <neshpion> joepie about to get the javascript death penalty
[02:50:32] * neshpion watches
[02:50:33] <joepie91> I do not agree with any of those premises, but if those are the premises you hold to be true, then the only outcome is "death penalty for all"
[02:50:42] <joepie91> I hope I don't need to explain why that is problematic
[02:50:42] *** stenno sets mode: +q *!*@user/joepie91
[02:50:57] *** stenno sets mode: -o stenno
[02:51:23] *** Joins: not-joepie91 (~not-sven@user/joepie91)
[02:51:50] *** ChanServ sets mode: +o litharge
[02:51:51] *** litharge sets mode: -qo *!*@user/joepie91 litharge
[02:52:47] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[02:52:59] <stenno> 1 minute quiet because i assume you started pasting before reading my messages
[02:53:08] <not-joepie91> wasn't a paste
[02:53:14] <not-joepie91> they were literally just messages that I sent while the discussion was ongoing
[02:53:18] <not-joepie91> and that got caught in a network storm
[02:53:25] <stenno> oh!
[02:53:27] <not-joepie91> and stuff is catching up now :p
[02:53:34] <dave0> are you sure you're not a chatbot?
[02:53:38] <neshpion> and you had to watch in horror as your lagself disobeyed op instructions
[02:53:44] <not-joepie91> basically, yep :p
[02:53:49] <stenno> i was already wondering
[02:53:52] <not-joepie91> dave0: not last time I checked anyway, but you never know for sure
[02:54:00] <systemfault> Pretty sure that joepie is a pie... not sure what's in it though...
[02:54:03] <not-joepie91> you know how it is
[02:54:13] <stenno> joe is 91 pies
[02:54:16] <neshpion> everybody in here is a chatbot, with varying degrees of biochemical mass driving it
[02:54:21] <not-joepie91> lol
[02:54:25] <stenno> correct
[02:54:26] *** Joins: Ungy (~Ugot2Bkid@ip68-6-182-127.sd.sd.cox.net)
[02:54:27] <systemfault> Let's pick something less common... like rhubarb pie
[02:54:42] <dave0> pumpkin pie with warm apple cider
[02:54:51] <ox1eef> thats quite a clinical perception
[02:54:57] <not-joepie91> still amusing to me how people read 'joepie' as 'joe pie'
[02:55:17] <stenno> people read 'stennowork' as 'sten no work' :(
[02:55:35] * neshpion attempts to re-read it as 'hÃ¶ppi'
[02:56:16] <ox1eef> joe and pie are the first words that hit me. i think joep is a dutch name though.
[02:56:21] <systemfault> not-joepie91: We should write our nicknames in IPA
[02:56:34] <not-joepie91> I can write it in phonetic english, but it... does not really improve things
[02:56:37] <neshpion> but i don't know how to pronounce those characters
[02:56:42] <not-joepie91> "you pee"
[02:56:43] <neshpion> the only good IPA is the one you can drink
[02:56:45] <joepie91> hm?
[02:56:45] <not-joepie91> see what I mean?
[02:57:10] <not-joepie91> ah, lagself is only a few minutes behind now
[02:57:17] <systemfault> https://en.wikipedia.org/wiki/International_Phonetic_Alphabet or https://en.wikipedia.org/wiki/India_pale_ale ? :p Combination of both!?
[02:57:18] <neshpion> ghost it
[02:57:27] <stenno> regain > ghost
[02:57:27] <joepie91> oh god I'm still lagging aren't I
[02:57:30] <not-joepie91> that will probably break the bridge in some dumb way
[02:57:33] <joepie91> test
[02:57:55] <neshpion> who needs a bridge when there's tor :^)
[02:58:02] <systemfault> I'm a stout beer guy... IPA tastes like piss to me
[02:58:06] <EdFletcher> not-joepie91: lol what client/bridge do you use? this is a fun, hilarious failure mode ð
[02:58:09] <not-joepie91> not that kind of bridge :p
[02:58:11] <neshpion> systemfault: brÃ¶Ã¶ther
[02:58:12] <joepie91> test2
[02:58:18] <not-joepie91> okay, <1 minute lag now
[02:58:25] <not-joepie91> EdFletcher: Matrix bridge, but not the libera.chat one
[02:58:33] <not-joepie91> but my entire homeserver just took a dump
[02:58:46] <EdFletcher> not-joepie91: ahhhh yup that explains it, gotcha! thanks, for the explanation and the fun ð
[02:58:50] <not-joepie91> thing is that the bridge part was fine, so it was just queueing up messages
[02:58:57] *** Joins: crashrep (~crashrep@user/crashrep)
[02:59:05] <EdFletcher> yup clearly, but looks like it's getting rate-limited on the outbound send?
[02:59:06] <not-joepie91> or more accurately, it was showing the incoming messages in realtime
[02:59:14] <not-joepie91> but the outbound messages got stuck in sender hell on the homeserver side
[02:59:16] <not-joepie91> for minutes
[02:59:19] <EdFletcher> oh my
[02:59:24] <not-joepie91> as it was trying to catch up
[02:59:25] <stenno> matrix, that thing that gets k-lined every now and then?
[02:59:40] <not-joepie91> stenno: I don't use the big bridge
[02:59:54] <neshpion> use the shady sekrit bridge
[03:00:02] <EdFletcher> that big network-wide bridge falls down pretty often too
[03:00:02] <not-joepie91> EdFletcher: https://stats.pixie.town/d/synapse/synapse?orgId=1&refresh=5m&from=now-3h&to=now
[03:00:08] <not-joepie91> note the failure mode :p
[03:00:21] <not-joepie91> particularly the event send time
[03:00:28] <systemfault> Stop using a Commodore 64 as your home server :/
[03:00:37] <not-joepie91> lol it's not that
[03:00:43] <EdFletcher> not-joepie91: lol still loading, but is grafana so i'm sure this will be cool to see ð
[03:00:46] <not-joepie91> it actually ran out of bandwidth for dumb reasons
[03:01:06] <neshpion> just download more bandwidth
[03:01:13] <not-joepie91> my homeserver is hosted on a DSL connection (yes, seriously) and that *usually* isn't a problem, but it *is* a problem when there's a sudden peak of traffic due to Poor Decisions(tm)
[03:01:17] <not-joepie91> well
[03:01:19] <not-joepie91> "my" homeserver
[03:01:23] <not-joepie91> the homeserver I use*, it's run by a friend
[03:01:31] <stenno> joepie91 actually knows what i mean when i say 'use more bandwidth' iirc
[03:01:32] <EdFletcher> not-joepie91: holy crap that failure mode is OBVIOUS when visualized HAHA, you weren't kidding
[03:01:37] <not-joepie91> right?! :D
[03:01:42] <neshpion> you mean the friend who's spending years collecting telemetry on you for blackmail at a later date?
[03:01:43] <not-joepie91> stenno: definitely :p
[03:01:46] <stenno> :)
[03:01:51] <stenno> 22c3
[03:01:59] *** Joins: mdemo (~mdemo@user/mdemo22)
[03:02:02] <not-joepie91> my first was... 31, I think?
[03:02:09] <not-joepie91> no, 30
[03:02:12] <stenno> late to the party then
[03:02:15] <not-joepie91> yep
[03:02:31] <stenno> 22c3 was my first, i think 27c3 was my last
[03:02:36] *** Joins: ferdna (~ferdna@user/ferdna)
[03:02:46] <stenno> those were all in berlin
[03:03:00] <not-joepie91> EdFletcher: but yeah, you can see how basically everything is slow and fucked as it's trying to work through that backlog from the partial outage :p
[03:03:54] <EdFletcher> not-joepie91: yeah you really can, this is such a great illustration of how powerful visualization can be. it just jumps out!
[03:04:14] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:04:14] <not-joepie91> yep!
[03:04:24] <not-joepie91> unfortunately not all synapse failure modes are that obvious
[03:04:37] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-057.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[03:04:41] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[03:05:24] <not-joepie91> anyway, see https://pixie.town/about/ for the stats of the *previous* system that this homeserver was hosted on, Terra specifically
[03:06:44] *** Quits: hax (~hax@user/hax) (Remote host closed the connection)
[03:06:49] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:f9b1:3765:d0cf:c4b9) (Remote host closed the connection)
[03:08:45] <not-joepie91> systemfault: current server has 16GB RAM, and a Ryzen 5 2600 :p
[03:08:56] <not-joepie91> and a bunch of SSDs and HDDs
[03:08:59] <not-joepie91> definitely not a C64
[03:09:33] <joepie91> test
[03:09:38] <joepie91> it's aliiiiive!
[03:09:47] *** Quits: not-joepie91 (~not-sven@user/joepie91) (Quit: Konversation terminated!)
[03:10:05] <stenno> https://c.tenor.com/V5FNCh31UH4AAAAC/frankenstein-its-alive.gif
[03:12:18] <Kirjava> oh hey stenno
[03:12:23] <Kirjava> (ââ¡ââ¿)
[03:12:30] <stenno> sup sup
[03:12:49] <stenno> whenever i hear funky stuff like disassembling i have to think of you
[03:12:55] <Kirjava> <3
[03:12:59] <stenno> :) <#
[03:13:01] <stenno> <3 even
[03:13:04] <Kirjava> unfortunately x86 isnt my forte
[03:13:05] <systemfault> For some reason.. when I read "It's alive!!" I thing of Ace Ventura... :/
[03:13:09] <systemfault> *think
[03:13:16] <stenno> ah, pity
[03:13:57] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[03:14:04] <Kirjava> I should idle here more I guess, it's been a while
[03:14:24] <stenno> we have nice discussions sometimes
[03:14:29] <stenno> and sometimes silly discussions
[03:14:34] <stenno> but mostly nice
[03:14:57] <Kirjava> im only here for the off-topic-but-also-kind-of-on discussion
[03:15:07] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:15:21] <stenno> sounds good
[03:16:36] <Kirjava> I dont know why, but adding fetch to node seems weird to me
[03:17:01] <systemfault> I don't think it's weird... as long as both implementations behave the exact same way...
[03:17:10] <Kirjava> good luck with that :^)
[03:17:12] <systemfault> But it doesn't seem like it's the case...
[03:17:24] *** Joins: c4017w_ (~c4017@2605:8d80:4c0:3dca:59b7:9ca3:e0f:776b)
[03:17:48] <systemfault> I mean, I understand differences like... Node fetch not having to deal with SOP...
[03:17:50] <stenno> well i thought the consensus was that its kinda impossible that both implementations behave the exact way
[03:18:09] <Kirjava> ofc it is
[03:18:28] <stenno> ljharb had the example with the relative url
[03:18:40] <stenno> like what would fetch('/bla') do
[03:19:45] <systemfault> It wouldn't work and I don't see a problem with that....
[03:19:51] <Kirjava> why not just require('node-fetch') < I say this but I enjoy the fact that deno has fetch built in
[03:20:00] <Kirjava> Â¯\_(ã)_/Â¯
[03:20:07] <systemfault> What I want, personally, is that I can write code using fetch and being able to use it from NodeJS and the Browser
[03:20:26] <stenno> yes
[03:20:28] <stenno> err
[03:20:33] <stenno> dunno
[03:20:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:20:52] <Kirjava> I mean you can probably do that in all your use cases even if it's only Mostly Correctâ¢
[03:21:06] *** Joins: c4017w (~c4017@209.52.68.8)
[03:22:07] <systemfault> Let's say.... that you want to write your own Axios, it would be nice to leverage fetch in both Node/Browser...
[03:22:18] <ThePendulum> Kirjava: have you played data wing?
[03:22:28] <systemfault> Differences like the handling of relative URL wouldn't really be an issue I believe....
[03:23:23] <Kirjava> ThePendulum: no but I absolutely love the astroids/cute aesthetic
[03:23:38] <Kirjava> looks fun
[03:24:37] *** Quits: c4017w_ (~c4017@2605:8d80:4c0:3dca:59b7:9ca3:e0f:776b) (Ping timeout: 240 seconds)
[03:24:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:25:11] <ThePendulum> Kirjava: ahhh  I asked because (ââ¡ââ¿) made an appearance. it is a fun mobile racing game, still recommended
[03:26:18] <Kirjava> (~Ëâ¾Ë)~ it there was a desktop version I'd be playing it already ^_^
[03:26:22] <Kirjava> *if
[03:27:07] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:28:19] <ThePendulum> nah itÂ´s a mobile game, that does remind me of a completely irrelevant dos game where you had to jump over boxes
[03:28:59] <ThePendulum> Sky Roads :D https://www.playdosgames.com/assets/screenshots/skyroads.png
[03:29:18] <rustyshackleford> when you see salary data
[03:29:28] <rustyshackleford> does that include 401k matching and bonuses? or just base pay?
[03:30:11] <Kirjava> hah, now I have actually played sky roads :D
[03:30:54] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[03:31:00] <stenno> wait why the fuck do you know skyroads
[03:31:03] <ljharb> stenno: the problem is that in order to write code using fetch and use it in both places, *all code* has to either meet that criteria, or, loudly fail in one of the envs
[03:31:09] <stenno> that was the first game i played
[03:31:19] <ljharb> systemfault: iow, if there's *anything* that doesn't fail, and does different things in node vs the browser, then it's a bug farn
[03:31:21] <ljharb> *farm
[03:31:39] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[03:32:03] <stenno> ThePendulum: https://www.youtube.com/watch?v=GVj7PZeI6R8
[03:32:04] <skillbot> YouTube Title: SkyRoads music - Intro
[03:32:07] <ThePendulum> I guess itÂ´s vaguely similar to data wing in that you have to control a spaceship by timing your inputs
[03:32:18] <systemfault> ljharb: I disagree for the URL only, because nobody in their right mind would use a relative URL on Node, it simply doesn't make sense... but anything else would be really bad.
[03:32:24] <stenno> 8bit greatness
[03:32:24] <Kirjava> I think I played Hover on w95 before I played sky roads even
[03:32:46] <ThePendulum> stenno: yeeeeess, for me also https://www.youtube.com/watch?v=UR6HfITvbFw
[03:32:47] <skillbot> YouTube Title: Stunts / 4D Sports Driving music - Race Menu (PC-AdLib)
[03:33:07] <systemfault> ljharb: I believe you told me that cookies were not supported in any shape with Node fetch, right? So.... it's bad.
[03:33:54] *** Joins: CalamityBlue (~CalamityB@2603-8000-d907-cec8-414b-3d39-bc9b-3dcb.res6.spectrum.com)
[03:34:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:34:54] <stenno> ThePendulum: hocus pocus
[03:35:22] <stenno> anyway, bedtime, got my jf in 9 hours lol
[03:36:20] <ThePendulum> jf?
[03:36:30] <Kirjava> jam festival
[03:37:03] *** Joins: Akiva (~Akiva@user/Akiva)
[03:37:40] <stenno> jour fixe
[03:38:05] <systemfault> Oui oui ð¥
[03:38:20] <Kirjava> sounds arty
[03:38:21] <stenno> oui oui baguette gerard depardieu
[03:38:35] <systemfault> Vin et fromage
[03:38:36] <stenno> la vache qui rit
[03:40:14] <systemfault> Depardieu is kind of an asshole... became really famous in France but moved to Belgium just to save on taxation
[03:40:39] <systemfault> So, he profited from the system... but when it was time for him to pay back...
[03:40:48] <ljharb> systemfault: right
[03:41:06] <ljharb> systemfault: and people *will* copy paste code between envs if it seems like it'll work
[03:41:17] *** Quits: mat001_ (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[03:44:16] *** Joins: sudomann (~sudomann@98.219.211.182)
[03:44:48] <KevinX> dang, Github confirmed my security vulnerability in npm 6.14.16 (just released, but in maintenance) but denied the bounty. I don't care about the bounty but worried about just opening a PR to expose it
[03:45:32] <KevinX> Thanks for the submission! We have reviewed your report and validated your findings. After internally assessing the findings, we have determined that they do not present a significant security risk and are therefore not eligible for a reward under the Bug Bounty program.
[03:45:32] <KevinX> Neither Node v14.18.3 nor npm 6.14.15 are current releases.
[03:45:51] <systemfault> I'm surprised that NPM 6.x is still supported, hmm... probably because it's shipped with NodeJS versions that aren't EOLed?
[03:46:10] <KevinX> Yeah its in maintenance until april 2023
[03:46:13] <KevinX> with node 14
[03:47:07] <ljharb> it's not really supported
[03:47:10] <ljharb> npm doesn't have an LTS policy
[03:47:31] <KevinX> it ships with node 14 though and i think you're locked in
[03:47:32] <ljharb> they're just doing tiny bugfixes, dep updates, and security patches to npm 6, specifically as a courtesy because it's still in node 12 and 14
[03:47:37] <ljharb> KevinX: you are never locked in
[03:47:43] <KevinX> or you have to opt out explicitly ?
[03:47:45] <ljharb> KevinX: you can `npm install -g npm` and get npm 8 on node 12+
[03:48:04] <ljharb> you can't easily avoid having npm installed, ofc, but that's fine
[03:48:05] <KevinX> i wonder how common that is
[03:48:08] <ljharb> very
[03:48:16] <KevinX> what about people using fnm or nvm?
[03:48:17] <ljharb> KevinX: is the security thing in npm, or via a dep? is it related to a CVE?
[03:48:27] <ljharb> KevinX: those are node version managers, and have no relevance to npm
[03:48:39] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[03:48:40] <systemfault> There's a switch with nvm to get latest npm IIRC
[03:48:43] <ljharb> KevinX: also, nvm has `nvm install-latest-npm`, which i recommend all nvm users use
[03:48:54] <KevinX> but they are commonly used when youre on a project that requires node 14
[03:48:56] <ox1eef> they could block your account if you did that, i guess
[03:48:57] <ljharb> (because `npm install -g npm` might break horribly if you don't check versions first)
[03:49:17] <ljharb> ox1eef: huh? no they couldn't and wouldn't
[03:49:37] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[03:49:53] <ox1eef> in some circles i think its bad etiquette
[03:49:59] <ox1eef> controlversial topic though
[03:50:15] <KevinX> its sending the registry token to anywhere listed in the package location if your config has always-auth true, so "prettier": "badurl.com/binary.tgz" would send the token to badurl.com
[03:50:51] <ljharb> ox1eef: of course it is. but if it was already sent in responsibly, via the security policy, then by definition it's safe to post publicly
[03:51:06] <KevinX> a package i contributed to has react native binaries hosted outside npm and my tokenw as sent there
[03:51:17] <ljharb> KevinX: but that's only if you have a dep downloading from a remote url, which is absurdly rare and a bad practice
[03:51:28] <ljharb> KevinX: also always-auth=true is very rarely used
[03:51:45] <ljharb> KevinX: but that does seem subpar. you could certainly try filing it, but if it's fixed in npm 8, it's unlikely they'll fix it in npm 6
[03:52:16] <ljharb> KevinX: meaning, usually when binaries are hosted outside npm, postinstall scripts download them. things in "dependencies" should only be an npm registry, or a git url.
[03:52:28] <KevinX> Well, there's one popular repo where all the stars align
[03:52:48] <ljharb> always-auth isn't a dep setting tho, it'd be in your project
[03:52:55] <ljharb> so it's your npm config, combined with that popular repo's dep?
[03:53:04] <KevinX> although its currently hosted on raw.githubusercontent.com so not really bad in this case
[03:53:11] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (Ping timeout: 256 seconds)
[03:53:19] <ljharb> indeed
[03:53:23] <KevinX> always-auth is in my .npmrc file
[03:53:35] <KevinX> it must have been placed there when my tokenw as added way back
[03:54:07] <ljharb> i'd remove that, regardless
[03:54:39] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[03:54:39] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[03:54:53] <KevinX> Yeah I removed it. is it set on anyone else's ~/.npmrc file here?
[03:55:14] <ljharb> i've never seen it set anywhere
[03:56:12] <KevinX> I dont remember when or how it was added but I cant imagine adding it myself (who knows though)
[03:57:55] <KevinX> I still feel like it's something they should reset the tokens for though. A bad actor could trick someone into running `npm install` and their their token
[03:58:19] *** Joins: spronkey (~spronkey@2002:7a3a:4b4c:0:8562:1ca6:3468:393e)
[03:58:29] <KevinX> You'd have to bet on them having always-auth true though. I don't know if that's super rare or just rare
[03:58:42] <KevinX> If i have it though it can't be that rare
[04:00:22] *** Joins: sudomann (~sudomann@98.219.211.182)
[04:01:50] <KevinX> not sure how telling this is either: https://grep.app/search?q=always-auth
[04:02:49] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[04:02:59] *** Joins: audiobirb (~audio@user/audio)
[04:03:00] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[04:04:51] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[04:05:34] <theskillwithin> didn't know about this one https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at
[04:06:04] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:06:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[04:06:47] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[04:06:47] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Read error: Connection reset by peer)
[04:08:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:08:21] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[04:08:25] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:b505:cbf4:6fcf:2d2a)
[04:11:23] *** Joins: mihael (~mihael@180.190.197.197)
[04:16:38] <austincheney> theskillwithin, what is the benefit of that over just square brackets?
[04:17:31] <austincheney> i guess the negative values are beneficial in that you can get the last item without knowning array length
[04:17:37] *** Quits: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net) (Quit: Leaving)
[04:17:38] <ljharb> theskillwithin: https://npmjs.com/array.prototype.at
[04:17:43] <ljharb> austincheney: yes, the benefit is for negative values
[04:18:01] <ljharb> KevinX: is it still an issue with npm 8?
[04:18:16] *** Joins: deadmund (~quassel@155.68.54.74)
[04:18:19] <austincheney> I remember proposing something similar to that to TC39 many years ago and then never followed up on it
[04:18:19] <KevinX> no they removed always-auth completely
[04:18:26] *** Joins: sudomann (~sudomann@98.219.211.182)
[04:21:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:21:30] *** Joins: wroathe (~wroathe@user/wroathe)
[04:22:30] <ljharb> austincheney: when?
[04:22:34] <ljharb> KevinX: lol ok, there you go
[04:22:57] <KevinX> well the issue is that npm 6 is getting updates and ships with node 14
[04:23:36] <KevinX> I dont know what % of projects are locked to node 14 though
[04:23:55] <KevinX> it would probably only effect people with npm packages too
[04:23:59] *** Quits: mihael (~mihael@180.190.197.197) (Quit: Client closed)
[04:24:13] <KevinX> and people who created them ~2+ years ago
[04:24:55] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:25:21] <KevinX> I realize it's low impact, but it affected me so I can't think it's that rare simply because nothing special happens to me
[04:26:08] <ljharb> if npm's security policy points you to the github people who already declined, then i'd file an issue on npm/cli, but be clear it only affects v6
[04:27:30] <KevinX> Yeah I'll do that.
[04:28:00] <KevinX> I noticed it contributing to WordPress's React thing (gutenberg)
[04:28:41] <theskillwithin> ah I just noticed .at isn't even supported in Safari
[04:29:50] <ljharb> theskillwithin: i think it's in safari technical preview, so it'll be in the next one
[04:29:53] <KevinX> cloning gitenberg and running npm install is likely common, but probably not with people who have npm tokens set
[04:30:04] <ljharb> right
[04:30:08] <ljharb> and also with alwaysAuth=true
[04:32:19] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:32:19] *** Joins: mihael (~mihael@180.190.197.197)
[04:32:56] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[04:33:33] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e2c7:ae5c:c5e4:1022) (Remote host closed the connection)
[04:33:38] <KevinX> app crashed in an odd way. didnt get the last few messages if anything was addressed to me
[04:33:54] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7d65:4803:5dd7:22ab)
[04:38:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7d65:4803:5dd7:22ab) (Ping timeout: 240 seconds)
[04:43:10] *** Quits: mihael (~mihael@180.190.197.197) (Quit: Client closed)
[04:48:00] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[04:50:53] *** Joins: mihael (~mihael@180.190.197.197)
[04:56:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[04:58:50] *** Joins: nomic (~nomic@185.217.117.244)
[05:03:12] *** Quits: deadmund (~quassel@155.68.54.74) (Remote host closed the connection)
[05:06:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:06:17] *** Joins: pmercado (~pmercado@190.22.160.49)
[05:06:57] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:06:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:09:02] *** Joins: funhouse (~funhouse@user/funhouse)
[05:11:54] *** Joins: src (~src@user/src)
[05:12:50] *** Quits: mihael (~mihael@180.190.197.197) (Quit: Client closed)
[05:13:26] *** Quits: ingo (~ingo@user/ingo) (Quit: Leaving)
[05:14:17] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[05:17:38] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[05:18:14] *** Joins: jazzy (~jaziz@user/jaziz)
[05:19:53] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[05:21:16] *** Joins: Rockwood (~Rocky@user/rocky)
[05:21:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:25:33] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:26:19] *** Joins: mihael (~mihael@180.190.197.197)
[05:26:26] *** Joins: jazzy2 (~jaziz@user/jaziz)
[05:28:37] *** Joins: sudomann (~sudomann@98.219.211.182)
[05:29:31] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[05:29:37] *** Quits: mihael (~mihael@180.190.197.197) (Client Quit)
[05:37:07] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[05:38:01] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[05:39:24] *** Joins: jazzy3 (~jaziz@user/jaziz)
[05:41:21] *** Joins: vysn (~vysn@user/vysn)
[05:42:17] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[05:45:23] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Ping timeout: 256 seconds)
[05:46:24] *** Quits: spronkey (~spronkey@2002:7a3a:4b4c:0:8562:1ca6:3468:393e) (Quit: you are feeeling very sleeeeeepyy......)
[05:48:42] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[05:51:17] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[05:51:54] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[05:52:57] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[05:53:08] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[05:53:41] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[05:56:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:58:10] *** Joins: sperpblerp (~sperpbler@66.186.212.157)
[05:58:18] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[05:58:30] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[06:00:17] *** Joins: goddard (~goddard@user/goddard)
[06:00:30] *** Joins: spronkey (~spronkey@2002:7a3a:4b4c:0:8562:1ca6:3468:393e)
[06:00:55] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:01:04] *** Quits: spronkey (~spronkey@2002:7a3a:4b4c:0:8562:1ca6:3468:393e) (Client Quit)
[06:02:45] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:03:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:04:59] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 256 seconds)
[06:05:09] *** Quits: sperpblerp (~sperpbler@66.186.212.157) (Quit: Client closed)
[06:06:01] *** Joins: spronkey (~spronkey@2002:7a3a:4b4c:0:8562:1ca6:3468:393e)
[06:06:55] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:06:59] *** Quits: spronkey (~spronkey@2002:7a3a:4b4c:0:8562:1ca6:3468:393e) (Client Quit)
[06:08:05] *** Joins: spronkey (~spronkey@2002:7a3a:4b4c:0:dc20:dffb:cb47:cb66)
[06:08:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:09:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:15:25] <Rockwood> KevinX, hi
[06:15:37] <KevinX> hi
[06:15:53] <Rockwood> i upgraded and working now thanks a lots
[06:16:39] <Rockwood> KevinX, https://dpaste.com/B2BB9QNQM <-- like this
[06:17:49] *** Joins: nomic2 (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130)
[06:18:11] <Rockwood> but now my concern is i have 2 lists which means having 2 different array data
[06:18:32] <Rockwood> so i have to make 2 fetchData?
[06:18:42] <Rockwood> or any more way for this?
[06:19:13] <Rockwood>     const fetchData = async () => { <-- i am talking about
[06:20:11] *** Quits: nomic (~nomic@185.217.117.244) (Ping timeout: 256 seconds)
[06:20:17] *** nomic2 is now known as nomic
[06:21:24] <KevinX> Yeah you can use Promise.all() and make multiple requests, then update your state when they all resolve
[06:21:59] <KevinX> I would abstract only the fetch requests though and not set state within that fetchData() method
[06:22:07] <KevinX> Return the data and set the state within the useEffect
[06:22:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:22:41] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[06:23:06] <KevinX> https://javascript.info/promise-api
[06:24:14] <KevinX> but if the application doesn't rely on all the data you might want to break them into separate components
[06:26:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:26:35] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[06:27:12] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Quit: Leaving)
[06:27:34] <Rockwood> https://dpaste.com/CCJNVVYM8
[06:27:43] <Rockwood> oops sorry i was updating code
[06:28:26] *** Joins: goddard (~goddard@user/goddard)
[06:29:04] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:a151:152f:1fb7:8c9f) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[06:29:06] *** jazzy3 is now known as jazzy
[06:29:14] *** Joins: nulysses (~Thunderbi@p200300c517124b008889ff8e656cc1f8.dip0.t-ipconnect.de)
[06:30:29] *** Quits: nulysses1 (~Thunderbi@p5dd17e85.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:32:22] <KevinX> i think you're fine just doing something like this Fetch('listRight', { method: 'get' }).then((data) => setIsListRight(data))
[06:32:57] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[06:34:47] <Rockwood> Fetch is wrapper
[06:35:13] <KevinX> does it return a promise?
[06:37:31] <Rockwood> 2 second showing
[06:37:34] <Rockwood> yes
[06:38:15] <KevinX> Then you can chain a .then
[06:38:40] <Rockwood> https://dpaste.com/5UAWDZU5H
[06:38:50] <Rockwood> this is my Fetch.js
[06:39:56] <KevinX> It often comes down to what makes the code more readable to you
[06:40:21] <KevinX> You can add `method: params?.method ?? 'GET'` to that Fetch method and then not pass it in when using get requests
[06:40:30] <KevinX> Save your brain some processing power
[06:42:41] *** Joins: junebug (~junebug@2600:1700:3db0:2540:28cc:6923:954d:b773)
[06:42:51] *** Quits: junebug (~junebug@2600:1700:3db0:2540:28cc:6923:954d:b773) (Remote host closed the connection)
[06:45:17] *** Joins: thojanssens (~thojansse@49.230.133.120)
[06:47:44] *** Joins: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29)
[06:53:12] <Rockwood> KevinX, yes done
[06:53:29] <Rockwood> params?.method ?? 'GET' i have done
[06:54:26] <KevinX> nice
[06:55:35] <Rockwood> any more change do you like to suggest in my Fetch.js?
[06:55:50] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[06:57:27] <KevinX> Seems fine. You could just do `return await ky(baseURL, options).json()` instead of having an intermeediate variable
[06:57:51] <KevinX> Personally I wouldn't name Fetch there with a capital F
[06:58:22] <KevinX> I would probably call it `const api = ...`
[06:58:56] <KevinX> or maybe `listApi` if you want to be specific
[07:00:35] <KevinX> I have a hot take too. Personally I never use default exports. so I would do `export const api = (url, params) => {}`
[07:01:12] <KevinX> It's not necessarily what others would recommend though :P
[07:03:10] *** Joins: Rockwood (~Rocky@user/rocky)
[07:04:20] <Rockwood> KevinX, sorry internet was broken
[07:04:37] *** Quits: pmercado (~pmercado@190.22.160.49) (Ping timeout: 240 seconds)
[07:04:41] <neshpion> not the internet!
[07:05:00] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:05:17] <Rockwood> means
[07:07:06] <Rockwood> KevinX, https://dpaste.com/CR26H6VQN#line-10 should be like this?
[07:08:10] <Rockwood> oops mistake in
[07:08:21] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[07:08:24] <Rockwood> double time using fetch
[07:10:23] *** Quits: N4buc0 (~N4buc0@177.156.214.250) (Ping timeout: 256 seconds)
[07:11:04] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:11:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:11:37] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:36bb:8b7:cefe:38a1) (Ping timeout: 240 seconds)
[07:11:46] <KevinX> I think u just need `return Promise.all(['listRight', 'listLeft'].map(url => Fetch(url))`
[07:13:36] <KevinX> await Promise.all
[07:14:02] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:15:37] <Rockwood> let me try that is
[07:15:48] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:18:37] <jaawerth> are you intending to use the native fetch before the custom Fetch in `let requests = urls.map(url => fetch(url));`?
[07:19:56] <Rockwood> jaawerth, yes i am thinking that is better instead ky
[07:20:02] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[07:20:11] <Rockwood> but right now not
[07:20:37] <jaawerth> I"m justconfused why you're using both together on the same URL's
[07:20:47] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[07:21:25] <jaawerth> regarding Proise.all like that, it depends on whether you want to make ll the rqeuests at once with no limit on concurrency or if you want them in order, or batched, etc
[07:21:44] <Rockwood> jaawerth, new code is like https://dpaste.com/G665744J5
[07:21:57] <Rockwood> right now i am working on custom one
[07:22:33] <Rockwood> is looks correct --> https://dpaste.com/G665744J5 KevinX
[07:22:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:23:41] <jaawerth> almost
[07:24:28] <jaawerth> the `return await` is not going to do anything because async functions always return a Promise, and `await` just "unwraps" it inside the context of the async function. the setResponseData(fetchData) is still going to set responseData to a promise
[07:25:17] <jaawerth> you *probably* want fetchData().then(results => setResponseData(results))
[07:25:34] <jaawerth> inside that useEffect
[07:26:07] <Rockwood> Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'data')
[07:26:23] <Rockwood> i think data also need to something else
[07:26:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:27:16] <jaawerth> it doesn't even look like you're indexing it anywhere though
[07:28:15] <Rockwood> jaawerth, https://dpaste.com/8LS7F33XC
[07:28:19] <KevinX> why not do const [listItems, setListItems] instead
[07:28:46] <jaawerth> that naming would be clearer, yes
[07:29:01] <Rockwood>         return await Promise.all([ 'listRight', 'listLeft' ].map(url => Fetch(url)));
[07:29:15] <Rockwood> so i have to make it const first?
[07:29:17] <jaawerth> the wait there is doing nothing
[07:29:26] <KevinX> you can remove that await too like jaawerth said
[07:29:49] <jaawerth> otherwise, that code is fine, though
[07:29:53] <jaawerth> that line I mean
[07:29:59] <KevinX> just put that in the useEffect too. its short anyway
[07:30:45] <jaawerth> it's a function definitoin so it can be anywhere though
[07:30:46] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[07:31:39] <KevinX> yeah
[07:31:44] <jaawerth> but the first useEffect should, I think, be `useEffect(() => { fetchData().then(setResponseData); }, [])` so tht it sets the *array*, not the promise of the array
[07:32:12] <jaawerth> setResponseData(fetchData()) will set responseData to the promise
[07:32:50] <jaawerth> which wouldn't wrk with the .map that coms later
[07:33:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:34:13] <Rockwood> useEffect(() => { fetchData().then(setResponseData);   is for second useefect?
[07:34:38] <jaawerth> no, for the first
[07:35:02] <Rockwood> https://dpaste.com/75UPRL6E5
[07:35:05] <Rockwood> ah okay
[07:35:17] <KevinX> so much easier to just set up a cpdesandbox :P
[07:35:31] <Rockwood> ok
[07:35:48] <jaawerth> yep. you could als just do fetchData().then(setResponseData) since the then passes one arg and setResponseData needs one arg but that way's fine too if you find it easier to read
[07:35:59] <KevinX> well i think you're about done now though
[07:36:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:36:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:36:59] *** Joins: wroathe (~wroathe@user/wroathe)
[07:38:00] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[07:40:38] <Rockwood> https://codesandbox.io/s/interesting-feistel-i8hh5?file=/src/App.js
[07:40:56] <Rockwood> error on param too in fetch
[07:42:25] <Rockwood> KevinX, ^^
[07:42:48] <Rockwood> jaawerth, more things its need to pass arg
[07:43:59] <jaawerth> GET requests don't need and aren't expected to have a body anyway. ust give params a default value `async (url, {method = 'GET', ...params} = {}) => {`, and if the method is GET you don't need to include body in the options at all
[07:44:00] <KevinX> your fetch function needs a second argument
[07:44:35] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[07:44:35] <KevinX> or params?.data ?? ''
[07:45:21] <Rockwood> i am going to with jaawerth statement on this
[07:45:50] <jaawerth> strictly speaking, I think it's an HTTP spec violation for a GET request to even have a body, it just doesn't necessarily break anything
[07:46:00] <Stinger> are there builtin filter functions that work on iterables/iterators?
[07:46:07] <Stinger> filter/map
[07:46:17] <jaawerth> Stinger: not yet, there's an IteratorHelpers proposal in the works though
[07:46:19] <KevinX> good idea. often its about doing what's clear to you
[07:46:34] <KevinX> yeah maybe remove the body prop if theres no body
[07:46:41] <Stinger> dang, does lodash or similar provide these?
[07:47:08] <KevinX> js has filter and map
[07:47:24] <KevinX> oh nevermind i misread
[07:47:27] <Rockwood> KevinX, actually i was doing JSON.stringify( on data on body
[07:48:29] <jaawerth> I know ramda's methods work on iterators. I assume lodash's would by now but I only use lodash when a projeect already includs it so I'm not sure - it'd b in their docs for sure though. there are also a number of other libraries that do it, both small util ones and big ones
[07:49:33] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[07:52:10] <Rockwood> jaawerth, KevinX https://codesandbox.io/s/interesting-feistel-i8hh5?file=/src/Fetch.js is correct now?
[07:52:32] *** Joins: paule32 (~paul@nat-91-137-17-17.net.encoline.de)
[07:52:32] *** Quits: paule32 (~paul@nat-91-137-17-17.net.encoline.de) (Changing host)
[07:52:32] *** Joins: paule32 (~paul@user/paule32)
[07:53:14] *** Joins: junebug (~junebug@2600:1700:3db0:2540:28cc:6923:954d:b773)
[07:54:01] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[07:54:51] <jaawerth> Stinger: this one looks decent https://github.com/leebyron/iterall
[07:55:41] <Stinger> hmm ok thanks I was about to ask for slim recommendations
[07:56:40] <jaawerth> hm yeah, I don't know if that one lets you only require the specific functions you need or if it's all-or-nothing (or if tree-shaking works well on it)
[07:56:42] <Rockwood> jaawerth, but in case of post i will pass data too
[07:57:10] <jaawerth> personally I tend to use transducer libraries, which can be made to work with iterables or just about anything else, but that is a bit more learning curve and not a common thing to do in js
[07:57:23] <jaawerth> since it's a concept ported from clojjure
[07:57:54] <jaawerth> Stinger: oh I think there was one called iter-tools that had a good rep
[07:58:09] <Rockwood>         return await Promise.all([ 'listRight', 'listLeft' ].map(url => Fetch(url, {data:data}))); in this case??
[07:58:26] <Rockwood> oops
[07:58:30] <Rockwood> 2 sec
[07:58:36] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:59:16] <jaawerth> get rid of that pointless await already :P
[07:59:31] *** Quits: junebug (~junebug@2600:1700:3db0:2540:28cc:6923:954d:b773) (Quit: Leaving)
[08:00:43] <jaawerth> Stinger: yeah this looks better documented, and it has ways both to require individual methods *and* an entrypoint of ES module exports for tree-shaking purposees https://github.com/iter-tools/iter-tools
[08:00:56] <jaawerth> and it's the one I'd heard of beore
[08:01:05] <jaawerth> that said it's not that hard to write them either
[08:01:12] <Stinger> looks not bad, thanks
[08:01:24] <jaawerth> np
[08:03:03] <Rockwood> https://codesandbox.io/s/interesting-feistel-i8hh5?file=/src/App.js <-- like this
[08:03:10] <Rockwood> jaawerth, ^^
[08:04:00] <Rockwood> oops
[08:04:10] <Rockwood> mistake again
[08:05:27] <jaawerth> yeah other than turnin the `=` to a `:`, why is it suddenly a POST? also you're trying to pass data but you havent' defined it
[08:05:38] <Rockwood> https://codesandbox.io/s/interesting-feistel-i8hh5?file=/src/App.js
[08:06:33] <jaawerth> getting closer
[08:06:36] <Rockwood> jaawerth, i am making Fetch.js to call anywhere in my app
[08:07:00] <jaawerth> now you just have to fix that Ftch.js lines 18
[08:07:51] <jaawerth> I'm not sure what you're trying to do there but an error is just an error, it wouldn't have a .response.json() unless you had set something like that on it elsewhere
[08:09:17] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 240 seconds)
[08:12:16] *** Quits: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29) (Quit: MadcapJake)
[08:12:25] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:12:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[08:14:07] <Rockwood_> so the error part shouldn't be in Fetch.js
[08:14:16] <Rockwood_> jaawerth, am correct?
[08:15:34] <Rockwood_> jaawerth, https://codesandbox.io/s/interesting-feistel-i8hh5?file=/src/App.js is now?
[08:15:57] *** Quits: MassDebates (~MassDebat@2600:1700:1184:4510:cc1:8b5b:491e:23ed) (Ping timeout: 240 seconds)
[08:16:54] <jaawerth> well, I'm not sure wy you're JSON.strinigfying the error, and the await on line 14 and existence of line 15 are both unnecesary
[08:17:32] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[08:17:44] <jaawerth> you can replace lines 14 and 15 with just `return ky(baseURL, options).json();`
[08:18:12] <jaawerth> async functions' return values are always wrapped in promises. if you're just going to return, there's no reason to await first
[08:19:13] <jaawerth> and I would get rid of the try/catch and remove line 18 entirely. it's the job of the code calling fetch to handle the rejection according to what needs to be done for that particular http call to respond to the error
[08:19:50] <jaawerth> Rockwood_: once you clean that up it should be more or less good to go
[08:20:00] <jaawerth> and it's my bedtime
[08:20:04] <jaawerth> so good night :)
[08:20:09] <Rockwood_> jaawerth, g n thx
[08:20:58] <Rockwood_> KevinX, thanks
[08:21:30] <Rockwood_> i am thinking about axios now bcz ky is not useful in cases
[08:21:32] *** Quits: spronkey (~spronkey@2002:7a3a:4b4c:0:dc20:dffb:cb47:cb66) (Quit: you are feeeling very sleeeeeepyy......)
[08:23:13] <KevinX> cant just use fetch?
[08:23:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:23:39] <Rockwood_> yes i can
[08:26:26] <Rockwood_> KevinX, https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch liket his?
[08:26:28] <Rockwood_> like
[08:26:53] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:27:05] <KevinX> Yeah sure
[08:29:41] <Rockwood_> i am confuse about use it
[08:29:45] <Rockwood_> how to
[08:30:00] *** Joins: goddard (~goddard@user/goddard)
[08:30:41] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[08:30:52] *** Joins: ksynwa (~ksynwa@5.45.111.57)
[08:32:58] <ksynwa> Sorry for noob question. If I have the Set-Cookie header in string format, is there a way use it to set the cookie appropriately using javascript?
[08:33:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[08:35:09] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 256 seconds)
[08:38:23] *** Joins: zebrag (~chris@user/zebrag)
[08:41:26] <ljharb> ksynwa: not necessarily. some cookies are http only.
[08:41:45] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[08:42:01] *** Quits: mikey_p (uid129477@id-129477.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:42:10] <ksynwa> ljharb: Got it. Thanks.
[08:43:17] *** Joins: masoudd (~masoudd@user/masoudd)
[08:46:08] <Rockwood_> KevinX, https://codesandbox.io/s/interesting-feistel-i8hh5?file=/src/Fetch.js its throwing syntax
[08:46:34] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:47:59] <Rockwood_> https://codesandbox.io/s/interesting-feistel-i8hh5?file=/src/Fetch.js small change
[08:48:45] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:49:08] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:49:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:49:41] <Rockwood_> that i was looked another way to use it
[08:49:43] <Rockwood_> https://codesandbox.io/s/interesting-feistel-i8hh5?file=/src/Fetch.js:104-124
[08:54:10] <Stinger> hmmm if I have a div with display:contents  will a dblclick event bubble into it?
[08:54:36] <Stinger> or a click event in general
[08:56:24] <theskillwithin> just test it out and see?
[08:56:41] <theskillwithin> warning tho, double check it works on safari, cuz i think works a little different on safari
[08:56:58] <Stinger> appears it does
[08:57:20] <Stinger> Im lucky in that im writing an electron app so I know my browser
[09:00:19] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[09:03:16] *** Rockwood_ is now known as Rockwood
[09:03:36] <Rockwood> oops fetch still say error there
[09:04:38] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:04:38] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:04:38] *** Joins: wroathe (~wroathe@user/wroathe)
[09:06:31] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[09:07:07] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:07:10] <Stinger> do relative hyperlinks disappear when moving nodes into another document?
[09:07:38] <Stinger> relative is probably the wrong word - I mean href="#internal"
[09:09:07] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[09:09:12] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:09:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:10:18] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[09:14:18] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Quit: Leaving)
[09:16:06] <theskillwithin> I wish there was a wirecutters article for good laptop for your mom who's old and can't see well,  but isn't into gaming
[09:18:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:18:37] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[09:23:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:26:52] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[09:27:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:28:02] *** Quits: Ungy (~Ugot2Bkid@ip68-6-182-127.sd.sd.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[09:31:23] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:727:6870:ff1f:d20f)
[09:32:23] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:33:46] *** Joins: han-solo (~hanish@user/han-solo)
[09:35:04] *** Joins: D4mned (~D1mned@212.101.251.182)
[09:35:07] *** Parts: ksynwa (~ksynwa@5.45.111.57) (WeeChat 2.8)
[09:36:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:36:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:36:48] *** Joins: wroathe (~wroathe@user/wroathe)
[09:39:44] <sheetjs> not a laptop, that's why
[09:40:00] <sheetjs> theskillwithin: an ipad or other tablet is almost assuredly a better choice
[09:40:35] <theskillwithin> already has an ipad,  wants to get all the stuff off of really old windows tower to a laptop
[09:40:46] <ljharb> a laptop is fine, what does gaming have to do with it
[09:40:54] <ljharb> just get her a mac and be done with it
[09:41:27] <theskillwithin> the gaming thing was a joke,  meaning it doesn't have to be powerful
[09:41:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:41:55] *** Quits: thojanssens (~thojansse@49.230.133.120) (Ping timeout: 256 seconds)
[09:44:36] <ljharb> right but it's not about power, it's about how long it'll take before it needs to be replaced
[09:44:46] <ljharb> old people can't handle the reality that 3-4 years makes something obsolete
[09:45:04] <ljharb> go with top of the line, so when it finally dies in 8 years, they'll be ok with getting a new one :-p
[09:45:23] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[09:45:55] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[09:47:59] <cis> I've got a 10 year old macbook pro that still works fine
[09:48:35] <cis> they're good quality
[09:48:44] <ejjfunky> 10 year old macbook! how slow is it?
[09:48:54] <ejjfunky> i mean, fast.
[09:48:57] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[09:49:03] <theskillwithin> i have a 10 year old mac pro
[09:49:20] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[09:49:23] <ejjfunky> can you still play latest games on it?
[09:49:37] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[09:49:40] *** Joins: thojanssens (~thojansse@49.230.133.120)
[09:50:00] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[09:50:11] <cis> well, no, but you could still do development work, and certainly basic tasks
[09:50:30] <ejjfunky> dont apple get automatically expired like in 3 years or something?
[09:50:45] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[09:51:23] <theskillwithin> ejjfunky ehh,  no I don't think I can play cs:go on it anymore, but haven't tried in a bit
[09:51:29] <ejjfunky> cis, ic. one reason why i never go an apple because i was told it get expired real quick. good to know.
[09:51:36] <ljharb> ejjfunky: no more than anything else
[09:51:52] <ljharb> ejjfunky: apple has never "expired real quick". they're more expensive, and they last longer without repairs over time.
[09:52:00] <cis> ejjfunky: I mean, I have a relatively new one I work on, but I'm just saying the old one held up better than I ever expected, even though it traveled a lot and got kicked around
[09:52:01] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[09:52:07] <ljharb> (which makes them cheaper overall)
[09:52:15] <sheetjs> powerpc was dropped very quickly
[09:52:25] <ljharb> no it wasn't
[09:52:37] <ejjfunky> or maybe just devices then. i had an ipod once. after certain date, it just died.
[09:52:45] <ljharb> it launched in the 90s, and was replaced about a decade later
[09:52:51] <ljharb> given moore's law, that's a long time
[09:52:57] <sheetjs> between "the last powerpc macs sold" and "OS did not support powerpc" was ~2 years iirc
[09:53:03] <theskillwithin> ljharb my moms current machine, for all I know could be 20 years old,  so im not picky on a new one at this point
[09:53:23] <ejjfunky> read somewhere that apple deliberately kills its products after certain lifetime of use
[09:53:29] <ljharb> sheetjs: ah i see what you mean
[09:53:37] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[09:53:59] <ljharb> sheetjs: that's fine tho, you don't have to always be on the newest OS
[09:54:01] <ljharb> ejjfunky: lol that's stupid
[09:54:12] <leduyquang753> ejjfunky That's not as clear as that they are hard-soldering everything onto the motherboard now so repair is a pain in the ass.
[09:54:18] <ejjfunky> my ipod was like that. died after an update.
[09:54:19] <ljharb> ejjfunky: "planned obsolescence" is either a conspiracy theory, or a natural consequence of capitalism, but either way it's not specific to any one company
[09:54:22] <cis> ejjfunky: I think I remember something about software limiting battery charge capacity after a certain amount of time for safety reasons...
[09:54:28] <theskillwithin> I hate the like, your the tech guy cuz you do that.   but its like no, I study software, not hardware.  I can figure it out probably, but don't assume like I'm a magic wizard that knows everything
[09:54:41] <ljharb> cis: true. but then they added a toggle so you could allow your battery to die faster, if you wanted.
[09:55:16] <ljharb> leduyquang753: that, at least, is true. but to 99% of consumers that will ever exist across human history, it doesn't matter. it's only that 1% that cares.
[09:55:17] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[09:55:19] <ejjfunky> cis, ic. could be that.
[09:55:30] <leduyquang753> Battery dying fast was never a problem back in the day as you could easily swap them.
[09:55:50] <ljharb> true. but you can't easily swap them in anything now, really
[09:56:01] <ljharb> and also, they last long enough in everything that it doesn't matter
[09:56:09] <ejjfunky> i should pry it open. see if i can find a replacement on ebay
[09:56:54] <ejjfunky> all my good songs were there. didn't save them in time
[09:57:15] <ejjfunky> who knew it could die after an update?
[09:57:38] <silly> ljharb, your phone battery certainly won't last long enough if you practically never disconnect it from the charger
[09:57:52] *** Joins: _ev (ev@user/ev/x-8999918)
[09:59:14] <ljharb> silly: ok but it's a phone, who does that
[10:00:04] <ljharb> ejjfunky: icloud backup would have covered that. how long ago did this happen
[10:00:15] <silly> ejjfunky, ironically, apple is the company that supports battery charging thresholds and provides updates for your phone 10 years longer than any android manufacturer
[10:00:18] <ljharb> ejjfunky: if it was before icloud backup existed, then "back it up to your computer" was the norml
[10:00:41] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130) (Quit: Leaving)
[10:00:54] <silly> ljharb, i connect mine when i come home, and disconnect when i go outside
[10:01:22] <ejjfunky> ljharb. long time ago. didn't have icloud, i think. it was like 3rd gen ipod
[10:01:24] <silly> and it can be days or even weeks when i'm in "home office"
[10:01:54] <ljharb> ejjfunky: ok well that was back in the day when everyone backed up to the computer via itunes. soooo kind of on you
[10:01:56] <silly> it's a phone... what do you want me to do with it?!
[10:02:09] <ljharb> silly: you unplug it when you wake up, and keep it in your pocket?
[10:02:25] <ejjfunky> ljharb, exactly.
[10:02:28] <silly> in my pocket while i walk around the house?
[10:02:32] <silly> no
[10:03:13] *** Quits: D4mned (~D1mned@212.101.251.182) (Read error: Connection reset by peer)
[10:03:24] <silly> unplug? only to worry every now and then if i should connect it again?
[10:03:33] <silly> i don't see the point
[10:03:57] <ljharb> silly: yes, of course
[10:03:58] <theskillwithin> ljharb the lighbulb shit was true I believe.  and ya that doesn't look good for capitalism.  however now we have LED bulbs so capitalism worked that out
[10:04:12] <ljharb> silly: what kind of psycho risks the phone buzzing when they're across the house
[10:04:13] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[10:04:38] *** Joins: D4mned (~D1mned@212.101.251.35)
[10:05:10] <silly> my phone rings less than once a week
[10:05:18] *** Quits: Decker (~d3x0r@user/d3x0r) (Read error: Connection reset by peer)
[10:05:36] <ljharb> silly: i said "buzzing". includes calls, texts, and push notifications
[10:05:43] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:05:49] <ejjfunky> silly, if you have a second phone, you can make it ring more than once a week.
[10:05:52] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[10:05:58] *** Joins: Decker (~d3x0r@user/d3x0r)
[10:06:00] <silly> all the rest i get on my computer too
[10:06:33] <theskillwithin> most calls I don't pickup because unknown number
[10:06:34] <ljharb> silly: ok fair. but then you're stuck with only one screen at a time
[10:06:42] <ljharb> when i'm at my computer, i have my phone and my laptop
[10:06:47] <silly> i thought about buying a chargie for $50, but fuck no!
[10:06:52] <ljharb> and ipad
[10:07:21] <silly> ljharb, me, too, since it's charging at my desk
[10:07:27] <theskillwithin> ljharb I hate your setup,  I need more
[10:07:48] <silly> i just don't take it always with me, i leave it there, connected to a charger
[10:07:53] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[10:08:17] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:08:19] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[10:08:22] <cis> theskillwithin: the phoebus cartel? would it have worked for them too were it not for the outbreak of the second world war?
[10:08:30] <ejjfunky> silly, think on how much electricity that you're wasting on.
[10:08:31] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[10:08:33] <theskillwithin> I need at least two external monitors if its a laptop
[10:08:50] <ljharb> theskillwithin: i have zero of those, mainly because then i'm missing a limb when i travel
[10:08:51] <ejjfunky> theskillwithin, me too.
[10:09:01] <ljharb> cis: ?
[10:09:20] <cis> ljharb: thought he was talking about the lightbulb planned obsolescence conspiracy
[10:09:45] <silly> yeah lightbulbs too!!!
[10:10:35] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[10:11:15] <silly> uh that reminds me, ikea in germany is 33% cheaper than the croatian ikea :/
[10:11:15] <ejjfunky> why lightbulbs when you got led monitors
[10:11:24] <theskillwithin> ljharb I would be in pain while I travel without monitors, sure.  but home is home,  I don't make my decisions about what my desk is at home based on travel
[10:12:47] <theskillwithin> ljharb I mean think about it, you wouldn't model your kitchen that way, nor your bedroom
[10:13:01] <theskillwithin> why deprive yourself
[10:13:28] <ljharb> theskillwithin: same reason i use a stock vim, and use default controls on video games. it's training in altitude.
[10:13:34] <ljharb> theskillwithin: why get used to a crutch
[10:13:37] <silly> once you got used to a multi monitor setup, there's no going back
[10:14:27] <ejjfunky> ljharb, is it true people prefer either vim or emac?
[10:14:33] *** Parts: stagas (~stagas@2a02:587:c40c:7fd2:727:6870:ff1f:d20f) (Leaving)
[10:14:37] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[10:14:56] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:727:6870:ff1f:d20f)
[10:15:26] <theskillwithin> ljharb thats hardcore, thats like how joe rogan would program,  but like cmon really your just making yourself slower at home
[10:16:01] <ljharb> ejjfunky: that's like asking if you prefer star trek and star wars. scifi and fantasy aren't comparable, and neither are text editors and operating systems
[10:16:15] <ljharb> theskillwithin: or, making myself faster everywhere
[10:16:18] <ejjfunky> didn't know joe rogan was/is a programmer. wow. he could do it all, couldn't he?
[10:16:28] <ljharb> silly: yes, once you get used to heroin, there's no going back also.
[10:16:33] <theskillwithin> ljharb id argue it doesn't make you that much faster everywhere than is worth it
[10:16:39] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[10:16:45] <silly> i like heroin
[10:16:46] <ejjfunky> ljharb, oh ok. i tried vim. it's HARD!
[10:16:50] <silly> oh wait...
[10:17:09] <ljharb> theskillwithin: i think i'm comfortable with my fasterness as-is
[10:17:52] <theskillwithin> ljharb i think you might be fooling yourself a little,  but im not you, so ill take your word for it
[10:17:57] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:18:57] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:19:10] <silly> theskillwithin, the truth is, you can always look at only one screen at a time
[10:19:24] <theskillwithin> that is true
[10:19:29] <silly> and trained window switching fingers are almost as fast as is your neck
[10:19:34] <ljharb> theskillwithin: it sounds like you're implying that having extra monitors would make me even more productive
[10:19:43] <ljharb> theskillwithin: in which case, it wouldn't be fair to everyone else, so i'll pass
[10:19:55] <silly> i almost feel like
[10:20:04] <ejjfunky> silly, i need the monitors because the cache in my brain is limited. i like to have them right in front of me instead.
[10:20:07] <silly> it's in fact counter productive
[10:20:08] <theskillwithin> ljharb not fair to anyone else?
[10:20:43] <ejjfunky> i think only super programmers need only 1 monitor.
[10:20:44] <silly> i feel like i did dive in deeper when it was only one monitor
[10:21:02] <ljharb> theskillwithin: as in, an unfair advantage :-p
[10:21:23] <theskillwithin> ljharb then throwout all your computers, cuz thats unfair advantage to most of the world
[10:21:26] <ejjfunky> silly, you're a super programmer.
[10:21:33] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130)
[10:21:35] <deltab> iirc, the developer of a line-based predecessor of vi (ed? em? ex?) said that he'd've made his editor a screen editor like vi if he'd thought of it
[10:21:37] <silly> i have 4 monitors
[10:22:00] <ejjfunky> hehehe. i got three. you win.
[10:22:09] *** Quits: thojanssens (~thojansse@49.230.133.120) (Quit: Leaving)
[10:22:16] <theskillwithin> ljharb if I had only 1 monitor, I would prob help on irc 80% less
[10:22:31] <ljharb> theskillwithin: i'm willing to start the race a notch back, i'm not willing to run without shoes
[10:22:51] <silly> mainly because i didn't want to throw away the 2 24" when they were replaced. now one is for the console, the other for tv/videoo
[10:23:08] <silly> oh video and tv, i think this really is counter productive
[10:24:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:24:41] <theskillwithin> btw I am a huge fan of sandals,  im picky about my sandals,  but im trying something new,  in a few days getting north face thermoball traction  wtver its called
[10:25:48] <theskillwithin> ljharb does it hurt to try it out?
[10:26:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[10:26:21] <ejjfunky> theskillwithin, sound really hitech stuff
[10:26:26] *** Joins: flughafen (~flughafen@p5de8ed0b.dip0.t-ipconnect.de)
[10:27:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:28:08] <ljharb> theskillwithin: lol i have, at work. it doesn't help me
[10:28:18] <theskillwithin> ah, well then thats that
[10:29:14] <theskillwithin> you specifically CHOOSE to go without an extra monitor.  mad respect.  I could not do it
[10:30:11] <ejjfunky> he's the super programmer.
[10:30:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:30:18] <theskillwithin> ya
[10:30:19] <ejjfunky> like the chosen one? :D
[10:31:11] *** Joins: goddard (~goddard@user/goddard)
[10:31:53] <ljharb> but i also have the high ground
[10:33:33] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[10:35:57] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[10:36:49] <theskillwithin> the sandal I recommend: https://www.rainbowsandals.com/product/302ALL00_MENS
[10:37:15] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[10:37:55] <theskillwithin> second best up https://freewaters.com/products/the-dillon-mens-sandals
[10:38:15] <theskillwithin> for just walking onto the balcony or into backyard https://freewaters.com/collections/mens/products/open-country-2-0-mens-sandals
[10:40:00] <theskillwithin> and hey btw before you purchase rainbow sandal, know you gotta work them in for a week,  then its like a glove
[10:40:57] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[10:42:34] <theskillwithin> really should experience all 3 sandals in my opinion
[10:44:18] <theskillwithin> work at home, something like https://www.amazon.com/gp/product/B01JJJLOEI or https://www.amazon.com/gp/product/B081WSQL4R
[10:44:22] <ejjfunky> nice looking sandals.
[10:46:11] <ejjfunky> good thing about WFH, i can take a nap whenever i want.
[10:46:47] <theskillwithin> haha I used to take naps in the office
[10:47:46] <ejjfunky> anybody here using tailwind. i'm trying to learn it now. kinda weird using it.
[10:47:53] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[10:47:58] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Client Quit)
[10:48:34] <theskillwithin> a lot of people like tailwind,  but for me its... idk its not more me
[10:48:59] <ejjfunky> yea, everything goes into the class. looks messy to me.
[10:49:12] <theskillwithin> like when I need to do more complex stuff,  which is often.  tailwind isn't gunna get me thru
[10:49:16] *** Quits: g2anj (~v@58.228.230.4) (Ping timeout: 250 seconds)
[10:50:11] <ejjfunky> and the 'good stuffs' aka ready to use stuffs are seem to be on paywall
[10:50:29] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[10:50:37] <theskillwithin> ejjfunky huh?
[10:50:54] <ejjfunky> ready made templates.
[10:51:03] <theskillwithin> ah
[10:51:09] <silly> oh look, stupid xiami phone went 100% battery charging level when it really really should not
[10:51:12] <theskillwithin> well just learn css, and you can do anything
[10:51:32] <silly> who's responsible for android again?
[10:52:51] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 256 seconds)
[10:53:05] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:53:56] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[10:55:59] <ejjfunky> silly, google?
[10:56:01] <ljharb> silly: google and apple getting into a fight, and turning android into an iphone ripoff instead of just making internet services for iphone
[10:56:17] <ljharb> just imagine a world where apple makes all the phones but google makes all the software
[10:56:21] <ljharb> an no android
[10:56:28] <buu> Dr. Light
[10:56:33] <ljharb> no walled gardens either
[10:56:45] <ljharb> but nope, we're in one of the dark timelines
[10:57:00] <buu> ljharb: How exactly do we end up in a world where apple doesn't want a monopoly
[10:57:48] <silly> lol, i certainly don't want to rely on google's shitty software, that would be the worst possible scenario
[10:57:57] <buu> I mean, yeah
[10:58:23] <silly> i mean... who's responsible for android again?
[10:58:24] <silly> lol
[10:58:38] <buu> dr light
[10:58:40] <buu> I told you
[11:02:40] <theskillwithin> buu how can I meet dr. light?
[11:03:56] <paulcarroty> android not designed to be responsible or secure, lol. updates schedule is laughable in general.
[11:04:01] <ljharb> buu: nah, it was google that tableflipped
[11:04:16] <ljharb> silly: true. But they do internet services well.
[11:04:59] <silly> these should be public services provided from governments
[11:05:21] * cis involuntarily shudders
[11:05:36] <theskillwithin> that is their nightmare,  so they will give all your data to gov to resist that
[11:05:52] <theskillwithin> in secret courts
[11:06:43] <theskillwithin> we've already gone as a public as like, welp wtver thats fine
[11:12:52] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130) (Quit: Leaving)
[11:14:53] <theskillwithin> BAD citizen, we cut your internet
[11:15:54] *** Joins: plitter (~plitter@192.108.100.200)
[11:15:54] *** Quits: plitter (~plitter@192.108.100.200) (Changing host)
[11:15:54] *** Joins: plitter (~plitter@user/plitter)
[11:18:31] *** Quits: plitter (~plitter@user/plitter) (Client Quit)
[11:19:13] <MootPoot> no! not my internet!
[11:19:17] <MootPoot> nooooooooooo
[11:19:46] *** Joins: thomas25 (thomas25@brought.to.you.by.bnc4free.com)
[11:19:53] <thomas25> github copilot is... INSANE???
[11:20:13] <theskillwithin> every time I visit china, I know buying alcohol is negative social credits,  but buying diapers is positive social credit.  so I always buy as many diapers as beer
[11:20:31] <cis> thomas25: why, did it write a manifesto?
[11:20:39] <thomas25> lol
[11:20:58] <MootPoot> theskillwithin: wrap your beer in diapers
[11:21:02] <thomas25> just installed it, trying it for the first time, i can't believe how good it is (for not the simplest of test cases)
[11:21:09] <theskillwithin> github coplit is sometimes legit tbh
[11:21:22] <cis> theskillwithin: would you prefer the secret system where these things are politely hidden from view, or the overt system where your social credit score appears next to your user avatar?
[11:21:56] <theskillwithin> cis I prefer the system where I can own a gun
[11:22:12] <thomas25> https://monosnap.com/file/WlG5bNFR6Ssh4WGNy5M4fiFOxDy3vR
[11:22:39] <thomas25> after defining types all I had to do was to write "// Map loc"
[11:23:01] <thomas25> obviously i need to edit the actual return values but still, this is insane.
[11:24:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:25:13] <cis> I'd like to give it a try, but I really don't like the idea of it potentially sending secret keys and such.
[11:26:18] *** Quits: blezz (~blez@213-130-92-213.ip.btc-net.bg) (Read error: No route to host)
[11:26:38] *** Joins: blezz (~blez@213-130-92-213.ip.btc-net.bg)
[11:27:00] <cis> maybe I'm being overly paranoid
[11:28:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:29:21] *** Joins: programmar (~whatever@118.69.128.37)
[11:29:21] *** Quits: programmar (~whatever@118.69.128.37) (Client Quit)
[11:35:41] *** Joins: salad (~cucumber@82.76.150.118)
[11:43:11] <buu> Guns aren't going to save you from a fascist government
[11:43:51] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:48:28] <theskillwithin> buu so then its inevitable?
[11:49:13] <buu> No, they just aren't a magical safety blanket
[11:49:21] <buu> or the only, or even best, answer
[11:49:57] <theskillwithin> well... is there a better safety blanket?
[11:50:21] <buu> No, it takes actual work
[11:50:54] <theskillwithin> so we just trust the elite's to determine it all?
[11:51:58] <buu> No, you need the source of all actual power, organized action
[11:52:19] <cis> and what's the source of that?
[11:53:26] <theskillwithin> so all the power shouldn't be in government
[11:53:36] <silly> there's a billion other ways to kill people... nobody needs, i mean nobody should be allowed to possess a gun or any weapon really
[11:53:37] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[11:53:38] <theskillwithin> the power is derived from the people
[11:54:00] <sheetjs> somehow in the last week politics has crept into #javascript
[11:54:07] <theskillwithin> if the people lose control, then we are fucked.
[11:54:52] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[11:56:53] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[11:59:17] *** Joins: MassDebates (~MassDebat@2600:1700:1184:4510:80e2:266:9fc2:cebb)
[11:59:42] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:00:54] <buu> sheetjs: Politics is any group of people talking
[12:02:19] <theskillwithin> free speech is a human right
[12:02:46] <sheetjs> this is #javascript
[12:03:13] <theskillwithin> you know what I mean
[12:03:21] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[12:03:42] <cis> javascript is a human right
[12:03:54] *** Joins: tarek58 (~tarek58@user/tarek58)
[12:04:41] <sheetjs> ok #javascript talk: are proxies ready for prime time?
[12:07:09] <cis> sheetjs: what do you use them for?
[12:08:29] <buu> Doesn't vue use them heavily?
[12:12:03] *** zb[m] is now known as boris[m]
[12:12:09] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[12:13:38] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[12:14:25] <sheetjs> trying to reshape a data structure, debating whether to use proxies or just break a bunch of code
[12:14:56] *** Joins: plitter (~plitter@192.108.100.200)
[12:14:56] *** Quits: plitter (~plitter@192.108.100.200) (Changing host)
[12:14:56] *** Joins: plitter (~plitter@user/plitter)
[12:17:37] <stenno> i like proxies just because they are silly, however i came to distaste metaprogramming
[12:17:56] <sheetjs> stenno: you wrote the thing last year
[12:17:59] <stenno> i guess if you program a library its different
[12:18:03] <buu> stenno: Let me tell you about my adventures into the world of dynamically generated classes
[12:18:05] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[12:18:06] <sheetjs> https://gist.github.com/stenno/2d22ed774d9ee1684c198322126c60ed
[12:19:17] <stenno> sheetjs: yes, but i wonder if its the best way of doing something like that
[12:19:33] <sheetjs> the best way is to make a breaking change
[12:20:11] <stagas> that's what typescript is for
[12:20:15] <stenno> buu: i come from ruby, i am well aware of those concepts :D
[12:20:24] <stagas> you change a shape and immediately see the breakings everywhere it's being used
[12:20:25] <theskillwithin> buu then shit hits the fan, and all the sudden my most liberal friends are asking me how to buy a gun
[12:20:30] <buu> stenno: Well, these are in perl </one-up>
[12:20:59] <stagas> *across* projects
[12:21:13] <buu> theskillwithin: I mean, sure, it can make people feel better, my point was about reality not feelings though
[12:21:41] <stenno> sheetjs: it will be really difficult for me to justify using proxies anywhere in lieu of a 'proper' implementation
[12:21:44] <buu> I mean, liberal doesn't have much to do with gun ownership
[12:21:52] <stenno> can we drop the politics stuff please for once
[12:22:00] <stenno> this is #javascript, not #politics
[12:22:07] <buu> In short, no
[12:22:07] <stagas> so it's mostly safe to change any shape whenever and the editor will warn you about it everywhere you need to look
[12:22:10] <stenno> #politics is for politics, #javascript is for javascript
[12:22:28] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:22:36] *** ChanServ sets mode: +o sheetjs
[12:22:37] <buu> I thought #politics was for anime
[12:22:43] *** buu was kicked by sheetjs ("shots fired")
[12:22:55] *** ChanServ sets mode: -o sheetjs
[12:23:04] *** Quits: src (~src@user/src) (Quit: Leaving)
[12:23:57] <stenno> if you think that talking about politics in #javascript is about 'free speech', then you have not understood what 'free speech' is, neither have you ever been suppressed your right of free speech
[12:24:23] <theskillwithin> you realize buu owned #javascript before
[12:24:31] <silly> oh the irony
[12:24:38] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[12:24:58] <Maxdamantus> sheetjs has taken too much power, needs to be stopped.
[12:25:10] <buu> This is what happens when you get sniped I guess
[12:25:19] <Maxdamantus> Why did we let them have all the guns instead of building up a democratic society?
[12:25:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:25:44] <sheetjs> let's move onto a new topic
[12:26:01] <stenno> we just talked about the feasability of metaprogramming which is an excellent topic imo
[12:28:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:28:39] <stenno> i will discuss with ljharb in private on how we can avoid stuff like this in the future
[12:28:48] *** Joins: voltage_ (voltage@user/voltage)
[12:28:49] <sheetjs> the proxy might actually be a worst-of-both-worlds situation
[12:29:28] <stenno> i am sure you can be 'meta' enough without having to use proxy
[12:29:32] <stenno> its almost code smell
[12:29:41] <buu> #javascript has never been a topic limited channel
[12:29:45] <buu> I doubt it'll start now
[12:30:05] <theskillwithin> #javascript isn't broken, don't change it
[12:30:21] <ejjfunky> you want to be limitedless? use var.
[12:31:00] <ejjfunky> limitless*
[12:31:00] <buu> Ok, I was lying, that is the one forbidden topic
[12:31:09] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:31:17] <buu> Although I'm suddenly having flashbacks to explaining how var inside for loops actually works
[12:31:26] <buu> We had a bot factoid and everything
[12:31:52] <sheetjs> esbuild doesnt support const/let in ES5 targets
[12:32:53] *** Joins: goddard (~goddard@user/goddard)
[12:32:54] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Remote host closed the connection)
[12:32:56] *** Quits: theskillwithin (~theskillw@user/theskillwithin) (Remote host closed the connection)
[12:33:15] *** Joins: theskillwithin (~theskillw@li1200-69.members.linode.com)
[12:33:15] *** Quits: theskillwithin (~theskillw@li1200-69.members.linode.com) (Changing host)
[12:33:15] *** Joins: theskillwithin (~theskillw@user/theskillwithin)
[12:33:32] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[12:33:43] <silly> const and let are es6
[12:34:27] <sheetjs> esbuild will happy transpile `var x = (y) => y+1;` to `var x = function(y) { return y+1; };`
[12:34:41] <sheetjs> but it will error on `const x = (y) => y+1;`
[12:34:57] <stenno> you know whats interesting wrt scoping? i figured that out a few days ago:
[12:35:15] <stenno> n> const foo = (x,y=x+1) => [x,y]; foo(1)
[12:35:16] <jellobot> (okay) [ 1, 2 ]
[12:35:22] <ejjfunky> why don't we just put var X; on top and use it for all variables we need to use?
[12:35:33] <stenno> i hthink thats fascinating and surprising
[12:35:39] <silly> stenno, indeeed
[12:36:24] <silly> n> const foo = (x,y=x.toUpperCase()) => [x,y]; foo('x')
[12:36:25] <jellobot> (okay) [ 'x', 'X' ]
[12:36:56] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:37:37] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[12:39:53] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:41:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:50:27] *** Joins: mat001 (~mat001@213.143.69.121)
[12:50:53] <stenno> b> const foo = (x, y=do(if (x < 2) { throw 'x is < 2'; })), foo(1)
[12:50:54] <jellobot> An async internal error occured: Unexpected token, expected "{" (1:21)
[12:51:13] <stenno> b> const foo = (x, y=do({if (x < 2) { throw 'x is < 2'; }})), foo(1)
[12:51:14] <jellobot> An async internal error occured: Unexpected token, expected "{" (1:21)
[12:51:17] <stenno> mp
[12:51:21] <stenno> something like that
[12:51:28] <stenno> throw-expressions would help here too
[12:53:47] <stenno> b> const foo = do { y = 2; y }; foo
[12:53:48] <jellobot> (okay) 2
[12:54:56] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[12:55:24] *** Joins: goddard (~goddard@user/goddard)
[12:55:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[12:58:51] *** Joins: voltage (voltage@user/voltage)
[12:59:07] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[13:00:54] *** Joins: Guest92 (~Guest92@2a00:23c6:718e:801:f4d3:662b:53b1:18d4)
[13:01:23] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[13:02:41] *** Joins: mat001 (~mat001@213.143.69.121)
[13:03:45] *** Quits: voltage (voltage@user/voltage) (Ping timeout: 256 seconds)
[13:05:53] *** Joins: voltage_ (voltage@user/voltage)
[13:06:15] <stenno> b> const foo = (x,y=do { x % 2}) => [x,y]; foo(4)
[13:06:16] <jellobot> (okay) [ 4, 0 ]
[13:06:26] <stenno> wow, ok
[13:06:28] <stenno> lol
[13:06:41] <stenno> why even write function bodies Kappa
[13:07:59] <stenno> b> const foo = (x, y=do { if (x < 2) throw 'x is < 2'; 23 }) => [x,y]; foo(1)
[13:08:00] <jellobot> (fail) x is < 2
[13:08:05] <stenno> b> const foo = (x, y=do { if (x < 2) throw 'x is < 2'; 23 }) => [x,y]; foo(2)
[13:08:06] <jellobot> (okay) [ 2, 23 ]
[13:08:13] <stenno> lul
[13:08:51] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130)
[13:09:49] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d142:9ff8:db64:1336)
[13:19:54] <stenno> do-expressions might not be a good idea :P
[13:25:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:25:56] <hassoon_> i like while
[13:26:30] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:27:32] <stenno> while is a thing that is really difficult to do with array methods in lieu of .take/.takeUntil
[13:27:37] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 240 seconds)
[13:28:08] <stenno> i would like if we just would get .takeUntil as an array method
[13:29:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:29:07] <silly> how many exit early methods are there?
[13:29:11] <stenno> .find
[13:29:13] <stenno> .some
[13:29:16] <stenno> .every
[13:29:17] <silly> .every
[13:29:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:29:25] <silly> that's it
[13:30:24] <stenno> you can mitigate it with .find/.some and really nasty array mutation
[13:34:37] <silly> that's terrible, i'd rather use plain for loops
[13:35:04] <stenno> yep, but thats also not cool because of FP
[13:35:15] <wez> Hi JS pplz
[13:35:16] <stenno> do-expressions are not the right answer here either
[13:35:30] <stenno> iterator-helpers however......
[13:35:50] <wez> .race
[13:36:02] <wez> oh wait, for array
[13:36:27] <silly> you can't uses for loops in functional programming?
[13:36:29] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[13:36:32] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[13:36:36] <silly> who said that?
[13:36:45] <stenno> silly: well, you cannot assign a block to something
[13:37:05] <stenno> i don't say its not possible, its just really nasty to handle
[13:37:21] <stenno> and also, break/continue is probably not cool
[13:37:27] <silly> seems like i don't really know what fp is
[13:37:39] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Quit: Leaving...)
[13:38:25] <stenno> well then scratch the fp thing
[13:38:52] <stenno> what i wanted to say is, break/continue will make code more difficult to maintain and to grasp
[13:39:03] <silly> done
[13:39:09] <stenno> for-of would probably be fine if it wasn't for break/continue
[13:40:52] *** Quits: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net) (Ping timeout: 250 seconds)
[13:41:22] <stenno> .takeUntil would imply .take if it followed the standard array function callback signature
[13:41:53] <stenno> const take = (ary, limit) => ary.takeUntil((,i) => i > limit)
[13:42:19] <stenno> ck la
[13:42:25] <stenno> compare that to for-of
[13:42:45] *** jazzy is now known as jaziz
[13:43:19] <stenno> let result = []; for (element of ary) { if (condition(element)) break; result.push(element) } return result
[13:43:29] *** jaziz is now known as jazzy
[13:43:32] <stenno> something like that?
[13:43:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[13:44:04] <zitter> Array.filter() returns an array. Is there a way to return back a single item of that array? I'm seeing .reduce() dunno if it is right way
[13:44:19] <silly> .find
[13:44:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:44:40] <silly> n> [1,2,3,1,2,3].find(i=>i===2)
[13:44:41] <jellobot> (okay) 2
[13:45:55] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[13:46:51] <silly> does .slice iterate? ayye hope not...
[13:47:22] <stenno> shouldn't
[13:47:40] <silly> i somehow feel like your takeUntil can be done with .slice and .map too
[13:48:15] <silly> and that it would be more descriptive
[13:48:30] <stenno> no
[13:48:42] <stenno> not if you want to short-circuit/exit early
[13:48:43] <silly> is there something in the pipeline?
[13:48:53] <stenno> iterator helpers
[13:49:10] <silly> well, yeah there's no exit early with .slice
[13:49:16] <zitter> silly, TY
[13:49:40] <stenno> silly: without short circuiting you can just use .filter
[13:49:48] <stenno> .filter + .slice
[13:50:08] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[13:50:08] <silly> .findIndex and .slice?
[13:50:31] <stenno> yeah sure, thats better
[13:50:38] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130) (Quit: Leaving)
[13:50:41] <stenno> hmmm
[13:50:59] <stenno> wait isn't that it then
[13:51:47] <stenno> n> const takeUntil = (ary,pred) => ary.slice(0,ary.findIndex(pred)); takeUntil([1,2,3,4], (i) => i === 3)
[13:51:48] <jellobot> (okay) [ 1, 2 ]
[13:52:09] <stenno> well blimey
[13:52:59] <stenno> seems good?
[13:53:08] <stenno> it short-circuited
[13:53:20] <stenno> gotta work with ??
[13:53:29] <stenno> n> const takeUntil = (ary,pred) => ary.slice(0,ary.findIndex(pred) ?? ary.length); takeUntil([1,2,3,4], (i) => i === 3)
[13:53:30] <jellobot> (okay) [ 1, 2 ]
[13:53:31] <silly> it's gotta be missing somethign
[13:53:44] <stenno> n> [1].findIndex(2)
[13:53:45] <jellobot> (fail) TypeError: 2 is not a function
[13:53:52] <stenno> n> [1].findIndex(i => i == 2)
[13:53:53] <jellobot> (okay) -1
[13:53:55] <stenno> fuck
[13:54:15] <stenno> n> [1].slice(0,-1)
[13:54:16] <jellobot> (okay) []
[13:54:24] <stenno> ok, its not a problem
[13:54:31] <stenno> no ?? needed
[13:54:35] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[13:54:45] <stenno> n> const takeUntil = (ary,pred) => ary.slice(0,ary.findIndex(pred)); takeUntil([1,2,3,4], (i) => i === 3)
[13:54:46] <jellobot> (okay) [ 1, 2 ]
[13:54:51] <stenno> n> const takeUntil = (ary,pred) => ary.slice(0,ary.findIndex(pred)); takeUntil([1,2,3,4], (i) => i === 17)
[13:54:52] <jellobot> (okay) [ 1, 2, 3 ]
[13:54:59] <stenno> off by 1
[13:55:13] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[13:55:37] <stenno> n> const takeUntil = (ary,pred) => ary.slice(0,ary.findIndex(pred)+1); takeUntil([1,2,3,4], (i) => i === 17)
[13:55:38] <jellobot> (okay) []
[13:55:41] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:55:41] <stenno> ouch..
[13:55:44] <stenno> its not that easy
[13:56:03] <silly> n> [[1,2,3,4].slice(0,-1),[1,2,3,4].slice(0,1)]
[13:56:03] <jellobot> (okay) [ [ 1, 2, 3 ], [ 1 ] ]
[13:56:45] <stenno> gotta ternary i guess
[13:56:57] <stenno> and work with intermediate values
[13:57:09] <stenno> suddenly its much less elegant
[13:57:29] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it)
[13:57:31] <clamiax> hi
[13:58:08] *** Joins: vysn (~vysn@user/vysn)
[13:58:10] *** Quits: jochum (~quassel@user/jochum) (Quit: No Ping reply in 180 seconds.)
[13:59:26] <stenno> hi
[13:59:55] *** Joins: jochum (~quassel@user/jochum)
[14:01:10] <clamiax> I'm trying to understand something and google was not helpful yet. I wonder if and how is it possible to get object return value or if it's lost forever.
[14:01:23] <clamiax> new function() { this.foo = "bar"; return "baz"; } /* How can I get "baz"? */
[14:02:45] <Svitkona> umm
[14:02:59] <silly> lol
[14:03:01] <Svitkona> you just... get it?
[14:03:24] <clamiax> I don't, I just get object instance not its return value
[14:03:25] <Svitkona> call the function and store the result somewhere
[14:03:27] <silly> clamiax, did you mean bar?
[14:03:33] <silly> or foo?
[14:03:35] <clamiax> silly: no I mean "baz"
[14:04:15] <clamiax> Svitkona: result is {foo:"bar"}
[14:04:17] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[14:04:21] <stenno> without 'new'
[14:04:36] <silly> either execute the function and get it's return value or parse the functions toString() output
[14:05:04] <silly> ah, it's from a new instance
[14:06:07] <silly> n> (new function() { this.foo = "bar"; return "baz"; }).constructor()
[14:06:08] <jellobot> (okay) 'baz'
[14:06:15] <stenno> nice!
[14:06:26] <silly> where does this come from anyway?
[14:06:30] <stenno> idk lmao
[14:06:34] <stenno> hysterical raisins
[14:06:41] <clamiax> silly: it doesn't works as you expect. .constructor() create a new instance each time
[14:06:54] <clamiax> silly: this way I loose the instance internal state
[14:06:56] <silly> yes, but it's lost too
[14:07:16] <silly> and your...
[14:07:40] <silly> n> x = new function() { this.foo = "bar"; return "baz"; }; [x,x.constructor(),x]
[14:07:41] <jellobot> (okay) [ { foo: 'bar' }, 'baz', { foo: 'bar' } ]
[14:08:22] <stenno> n> let c = 0;  x = new function() { this.c = ++c; this.foo = "bar"; return "baz"; }; [x,x.constructor(),x]
[14:08:23] <jellobot> (okay) [ { c: 2, foo: 'bar' }, 'baz', { c: 2, foo: 'bar' } ]
[14:08:35] <stenno> err
[14:08:51] <stenno> wtf lol
[14:09:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:09:02] <stenno> i don't even know whats happening anymore
[14:09:06] <clamiax> mmhm
[14:09:18] <silly> yea rofl me too
[14:09:30] <clamiax> you're running ++c twice: one with new and one with .constructor()
[14:09:47] <clamiax> first instance is lost and second instance is the one you got with c = 2
[14:10:09] <Svitkona> are you actually returning a string literal?
[14:10:15] <Svitkona> or is that a placeholder for something else
[14:10:44] <Svitkona> if you're returning an object it should work just fine
[14:10:49] <clamiax> I want to return some internal variable
[14:11:06] <silly> clamiax, i'd expect c:1 there
[14:11:07] <Svitkona> n> (new function() { this.foo = 'bar'; return { baz: 40 }; });
[14:11:08] <jellobot> (okay) { baz: 40 }
[14:11:17] <stenno> yes we should focus on the actual question which is probably code smell
[14:11:39] <Svitkona> but i don't see the point of this
[14:11:47] <stenno> a constructor not returning an instance is code smell
[14:11:56] <clamiax> Svitkona: my intent is to keep object internal state and render it via the return functio
[14:12:16] <clamiax> To make things clear, is much similar to what does React Native
[14:12:18] <stenno> wait so this is basically about scoping?
[14:13:30] <stenno> related https://stackoverflow.com/questions/30689817/es6-call-class-constructor-without-new-keyword
[14:13:34] <clamiax> err, I meant ReactJS
[14:13:58] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:15:04] <silly> oh i love experiments, are you building your own react like lib?
[14:15:32] <stenno> may i interest you in this new cool way to write JSX in JS :D
[14:15:36] <clamiax> silly: not the whole lib, I just would like to consistently manage states
[14:17:01] <silly> stenno, is it indefinitely nestable? js in jsx in js in jsx in while true?
[14:17:15] <stenno> i have not investigated any further :D
[14:17:18] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[14:17:42] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[14:19:29] *** Joins: g2anj (~v@58.228.230.4)
[14:20:27] <stenno> n> c=0,x=function(){this.c=++c};y=new x();z=new x();y.constructor();z
[14:20:27] <jellobot> (okay) x { c: 2 }
[14:20:47] <stenno> ok
[14:21:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:21:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:22:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:23:04] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[14:23:53] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[14:24:48] <clamiax> ok guys, thanks for your help. Basically I learned that or I get object instance or its return value but there is no way to access both
[14:24:50] <clamiax> good to know
[14:25:23] <stenno> i think you should find a different approach to solve your issue
[14:26:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:26:56] <clamiax> Yes, I'm playing around
[14:27:04] <silly> i fear there might be some terrible and hacky workaround tho
[14:27:15] <clamiax> silly: I would love it
[14:29:24] *** Joins: cheater (~Username@user/cheater)
[14:29:26] <cheater> hi
[14:29:38] <cheater> what's the best way to check if an array is just [""] ?
[14:29:53] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:30:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:30:22] <stenno> n> ''+['']
[14:30:23] <jellobot> (okay) ''
[14:30:52] <stenno> cheater: i would just be explicit here i think
[14:31:01] <silly> n> ''+[]
[14:31:02] <jellobot> (okay) ''
[14:31:05] <stenno> so check if length is 1, and then check if the element is ''
[14:31:08] <cheater> i tried foo == [""] but that says false.
[14:31:12] <cheater> hmm ok
[14:31:14] <cheater> thanks
[14:31:32] <stenno> yeah that wouldn't work, as it compares references
[14:32:20] <cheater> thanks
[14:32:29] <cheater> also how do i check if an array is []? just length == 0?
[14:32:37] <cheater> or is there some better way
[14:32:53] <stenno> yes, thats a good way
[14:33:14] <stenno> 0 is falsy so you can technically just check if (ary.length)
[14:33:22] <stenno> but again it doesn't hurt to be explicit imo
[14:33:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:34:14] <cheater> thanks
[14:35:36] <stenno> tuples/records will make this easier depending on your specific situation
[14:36:58] <cheater> thanks
[14:37:32] <stenno> (just to clarify, tuples/records are unfortunately not in the language (yet))
[14:38:09] *** Joins: paule32 (~paul@nat-91-137-17-17.net.encoline.de)
[14:38:09] *** Quits: paule32 (~paul@nat-91-137-17-17.net.encoline.de) (Changing host)
[14:38:09] *** Joins: paule32 (~paul@user/paule32)
[14:38:10] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:46:18] <theskillwithin> tuples/records and temporal are the awesome sauce I am waiting for
[14:49:04] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[14:49:25] <cheater> what's the difference between those two regexes?
[14:49:26] <cheater> "[foo]x".match(/(?:|\[(foo)\])(x)/)
[14:49:34] <cheater> "[foo]x".match(/(?:\[(foo)\]|)(x)/)
[14:49:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[14:49:49] <cheater> i'm moving the pipe before or after the literal[]'s
[14:51:08] <clamiax> No difference I think
[14:51:16] <theskillwithin> cheater when I wan't to figure out how my regex is working, I use something like https://regexr.com/ or https://regex101.com/ (select js)
[14:51:50] <clamiax> both match empty string or the foo pattern
[14:52:35] <cheater> right, but will one match the empty string more than [foo]?
[14:52:41] <cheater> i don't know which to use
[14:52:57] *** Quits: MassDebates (~MassDebat@2600:1700:1184:4510:80e2:266:9fc2:cebb) (Ping timeout: 240 seconds)
[14:53:03] <SpiceMan> what do you mean "more"
[14:53:08] <SpiceMan> it'll match both
[14:53:55] <SpiceMan> tbh, ^(\[foo])?x  conveys the intention better
[14:54:07] <SpiceMan> ^(\[foo\])?x
[14:54:24] <cheater> i'm not using ^
[14:54:41] <cheater> also i need the [] not to be in the match that matches foo
[14:55:08] <cheater> so it'd be like (?:\[(foo)\])?x, right?
[14:55:35] <SpiceMan> the point is that (regex)? is clearer than [regex|]
[14:55:39] <clamiax> cheater: what you're *actually* doing?
[14:55:48] <cheater> SpiceMan: i think you meant (regex|) right?
[14:56:04] <cheater> clamiax: i'm not getting into some form of x/y rabbit hole
[14:56:07] <SpiceMan> no, (regex)?. ? matches one or zero
[14:56:24] <SpiceMan> you are not capturing (since you use ?:)
[14:56:32] <clamiax> I was thinking more to YX problem
[14:56:32] <SpiceMan> so having [regex|] is needlesly complicated
[14:56:36] <cheater> SpiceMan: i don't know where you got [regex|] from.
[14:56:37] <clamiax> *XY
[14:57:07] <cheater> clamiax: i'm not doing that
[14:57:18] <SpiceMan> sorry, still sleepy. I mean []|<empty string>
[14:57:24] <SpiceMan> just do []?
[14:57:58] <cheater> oh, that's what you mean
[14:58:16] <cheater> yeah, it would make sense. but my actual regex is a bit more complicated, but thanks for mentioning that
[15:00:51] <SpiceMan> and yeah, regexes are very context sensitivy. actual input data and actual regex would be better for your question.
[15:00:57] <theskillwithin> thing we forget about often, make sure your css works when zooming.  your parents with bad eyes will thank you by calling you less for how to work their device
[15:01:03] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:01:52] <cheater> speaking of zooming, i did something in firefox and every time i open dev tools (F12) it's zoomed in 3x. anyone know what that is? it happens on every website.
[15:02:02] <cheater> doesn't happen on other firefox profiles, only on the main one that i always use.
[15:02:40] * Maxdamantus wonders if they've figured out yet that object values should be allowed in tuples.
[15:03:09] <Maxdamantus> Nope.
[15:03:25] <stenno> b> #{x:#{a: 23}}
[15:03:26] <jellobot> (okay) Record { x: Record { a: 23 } }
[15:03:31] <stenno> b> #{x:{a: 23}}
[15:03:32] <jellobot> (fail) Error: TypeError: cannot use an object as a value in a record
[15:04:12] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[15:04:41] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[15:04:50] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:05:08] <stenno> b> const recordify = (obj) => #{...obj}; recordify({a: 23})
[15:05:09] <jellobot> (okay) Record { a: 23 }
[15:07:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:07:30] <Maxdamantus> b> function bothEq(a, b, c, d){ return #[a, b] === #[c, d]; } const a = 2, b = 3; bothEq(a, b, a, b);
[15:07:31] <jellobot> (okay) true
[15:07:38] <Maxdamantus> b> function bothEq(a, b, c, d){ return #[a, b] === #[c, d]; } const a = {}, b = {}; bothEq(a, b, a, b);
[15:07:39] <jellobot> (fail) Error: TypeError: cannot use an object as a value in a record
[15:08:01] <theskillwithin> Maxdamantus only primatives are allowed in tuples, so if an object value is a primative then why not
[15:08:37] <theskillwithin> an object is not, because an object is not a primative
[15:08:39] <Maxdamantus> theskillwithin: you mean like humans?
[15:09:12] <Maxdamantus> theskillwithin: is a record a primative?
[15:09:17] <theskillwithin> yes
[15:09:25] <theskillwithin> also a tuple is a primative
[15:09:56] <Maxdamantus> Bit of an abuse of terminology, but that doesn't rationalise the restriction anyway.
[15:10:31] <Maxdamantus> > Records and Tuples can only contain primitives and other Records and Tuples.
[15:10:42] <Maxdamantus> So actually records/tuples are not primitives.
[15:10:57] <Maxdamantus> Terminology is okay. Just has a pointless restriction.
[15:10:58] <theskillwithin> records and tuples will actually become another type in itself
[15:11:13] <stenno> semantics, but records and tuples are primitives
[15:11:18] <stenno> thats the intention behind them
[15:11:24] <stenno> its poorly worded
[15:11:34] <Maxdamantus> They're not primitives, because they're composed of other values.
[15:11:35] <theskillwithin> Maxdamantus I suspect you already knew all this already btw lol
[15:12:22] <Maxdamantus> They're just not objects.
[15:12:37] <stenno> a string is a primitive, yet has a length attribute (via autoboxing i assume?)
[15:12:49] <stenno> you can compose a string by concatenating strings
[15:13:04] <Maxdamantus> No, the length of a string is derived from the value.
[15:13:13] <Maxdamantus> You can't have the string "foo" with length 5.
[15:13:31] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:13:37] <theskillwithin> prototype methods. hmm
[15:14:00] <theskillwithin> https://developer.mozilla.org/en-US/docs/Glossary/Primitive
[15:14:03] <Maxdamantus> concatenating strings gives you a new string which has no relation to the old string.
[15:14:21] <Maxdamantus> you can't get the old string back.
[15:14:42] *** Quits: Guest92 (~Guest92@2a00:23c6:718e:801:f4d3:662b:53b1:18d4) (Quit: Client closed)
[15:14:43] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130)
[15:16:39] <Maxdamantus> In C, noone would call structs "primitives".
[15:16:54] <Maxdamantus> because they are made to contain other values.
[15:17:08] <Maxdamantus> just like records or objects or tuples or arrays.
[15:17:17] <theskillwithin> string.concat doesn't mutate the original string
[15:17:20] <stenno> you cannot change a value of a record
[15:17:26] <stenno> you would get a new record
[15:17:28] <Maxdamantus> you cannot change the value of a struct
[15:17:32] <Maxdamantus> you get a new struct
[15:17:40] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:17:45] <stenno> you can change one of the struct fields just fine, can't you?
[15:17:48] <stenno> during runtime
[15:17:54] <Maxdamantus> Inside a variable, sure.
[15:18:03] <stenno> i can say structInstance.foo = 23; // oslt
[15:18:41] <stenno> i cannot say recordInstance.foo = 42
[15:18:58] <Maxdamantus> You can't say `giveStruct().foo = 23;`
[15:19:15] <Maxdamantus> as for `recordInstance.foo = 42;`, you can imagine JS supporting that in the future.
[15:19:31] <Alexendoo> It explicitly is immutable
[15:19:37] <theskillwithin> no methods
[15:19:38] <Maxdamantus> where it effectively does `recordInstance = #{ ...recordInstance, foo: 42 };`
[15:19:53] <Maxdamantus> Alexendoo: sure, and my code above does not mutate the record.
[15:20:11] <Maxdamantus> Alexendoo: that's what happens when you do `structVar.foo = 42;` in C.
[15:20:27] <theskillwithin> Maxdamantus first of all can you admit your concat isn't a proper example?
[15:20:30] <Maxdamantus> It just modifies the variable.
[15:21:23] <Maxdamantus> b> let recordInstance = #{ foo: 50, bar: 43 }; recordInstance = #{ ...recordInstance, foo: 42 };
[15:21:24] <jellobot> (okay) Record { bar: 43, foo: 42 }
[15:21:30] <Maxdamantus> theskillwithin: seems to work.
[15:22:00] <stenno> this is re-assignment of a different value
[15:22:03] <Alexendoo> Maxdamantus: Adding some magic syntax would mean you're not mutating it still.. which has no bearing on it being primitive
[15:22:16] <Maxdamantus> stenno: right, and that's what happens when you assign to a field in a struct variable in C.
[15:22:24] <Maxdamantus> stenno: it just changes what value is stored in the variable.
[15:22:57] <Maxdamantus> stenno: it doesn't make sense to talk about modifying a field of a struct value, just as it doesn't make sense to talk about modifying the lower 16 bits of a 32-bit int value.
[15:23:10] <stenno> n> let foo = 'str'; str = str + 'bar'; // like this Maxdamantus ?
[15:23:11] <jellobot> (fail) ReferenceError: str is not defined
[15:23:15] <stenno> err
[15:23:24] <stenno> n> let foo = 'str'; foo = foo + 'bar'; // like this Maxdamantus ?
[15:23:24] <jellobot> (okay) 'strbar'
[15:23:29] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[15:23:37] <Maxdamantus> stenno: yes. That's also just modifying the variable.
[15:23:41] <Maxdamantus> stenno: you're not modifying the string.
[15:23:57] <Alexendoo> Of course it makes sense to talk about modifying a field in a struct
[15:24:44] <stenno> i assume i am too daft to see the difference
[15:25:02] <Maxdamantus> n> let foo = Math.random()*Math.pow(2, 53); foo |= 0xff; foo.toString(2);
[15:25:02] <jellobot> (okay) '-100100001111111001000000000001'
[15:25:29] <theskillwithin> i think I am seeing a point here,  but that is just reassignment of a variable.  you can't mutate the actual record itself
[15:25:30] <Maxdamantus> eh, signs.
[15:25:31] *** Joins: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net)
[15:25:41] <Maxdamantus> n> let foo = Math.random()*Math.pow(2, 31); foo |= 0xff; foo.toString(2);
[15:25:41] <jellobot> (okay) '1001100101111000010101011111111'
[15:25:59] <Maxdamantus> Look, all those lower 8 bits are 1. Did I modify an integer value there?
[15:26:07] <Maxdamantus> or did I just modify part of a variable?
[15:26:31] <Maxdamantus> theskillwithin: right. This is exactly how structs work in C.
[15:26:47] <Maxdamantus> theskillwithin: if a function returns a struct, you can't assign to its field: foo().bar = baz;
[15:26:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:27:05] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[15:27:08] <Maxdamantus> `foo().bar = baz;` is always an error in C. You can only modify fields in variables that hold struct values.
[15:27:40] <Maxdamantus> (where "variable" could also be memory allocated by `malloc` or similar)
[15:27:49] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[15:27:58] <Alexendoo> That is a ridiculous definition of variable
[15:28:05] <Alexendoo> Mutation doesn't exist then
[15:28:40] *** Quits: goddard (~goddard@user/goddard) (Remote host closed the connection)
[15:28:47] <Maxdamantus> a = foo(); b = a; a.bar = 42; b.bar = 50; a.bar != b.bar;
[15:29:05] *** Joins: goddard (~goddard@user/goddard)
[15:29:21] <stenno> wont htis be false
[15:29:28] <stenno> n> a = foo(); b = a; a.bar = 42; b.bar = 50; a.bar != b.bar;
[15:29:29] <jellobot> (fail) ReferenceError: foo is not defined
[15:29:30] <Maxdamantus> No. It will be true, in C.
[15:29:35] <stenno> oh in C
[15:30:00] <Maxdamantus> after `b = a;`, each variable holds a copy of the same value.
[15:30:16] <Maxdamantus> then `a.bar = 42;` changes the value in `a` and `b.bar = 50;` changes the value in `b`.
[15:30:25] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:30:26] <Maxdamantus> now `a` and `b` hold different values.
[15:30:45] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 256 seconds)
[15:30:56] <Maxdamantus> Record variables in JS could conceivably also have that functionality.
[15:31:16] *** Joins: sudorm (~sudorm@atoulouse-556-1-147-235.w92-162.abo.wanadoo.fr)
[15:31:19] <Maxdamantus> it would basically just be a nice-to-have, though there might be some conceptual difficulties around semantics due to the dynamic typing in JS.
[15:31:36] <sudorm> Is there a way to prevent an UTF8 emoji to render differently on the different browser?
[15:32:13] <Maxdamantus> b> let a = #{ bar: 0 }; a.bar = 42;
[15:32:14] <jellobot> (okay) 42
[15:32:17] <Maxdamantus> O_o
[15:32:28] <sudorm> I'd like a smiley to render the same on Chrome, Firefox, etc. but *still* be able to use simply use UT8 characters (and not use a <img src="...")
[15:32:34] <Maxdamantus> b> let a = #{ bar: 0 }; let b = a; a.bar = 42; b.bar = 43; [a, b];
[15:32:34] <jellobot> (okay) [ Record { bar: 0 }, Record { bar: 0 } ]
[15:32:39] <theskillwithin> Maxdamantus I feel like people in the past who had concerns didn't read the entire https://github.com/tc39/proposal-record-tuple
[15:32:59] <Maxdamantus> theskillwithin: I read the entire thing, maybe a year ago or so.
[15:33:31] <Maxdamantus> theskillwithin: they didn't really address the object value issue properly. iirc they had a different nonsensical section about it which seems to have been removed.
[15:33:49] <theskillwithin> Maxdamantus the babel example you just gave, shows it didn't mutate
[15:33:52] <Maxdamantus> theskillwithin: they had some nonsense example of emulating object fields by using symbols.
[15:34:10] <Maxdamantus> theskillwithin: right, I hope that's a bug in babel.
[15:34:20] <Maxdamantus> theskillwithin: I expect it should throw an error.
[15:34:40] <theskillwithin> ya prob
[15:35:10] <Maxdamantus> If it throws an error, then conceivably in the future someone could propose changing the behaviour so it actually modifies the variable.
[15:35:15] <theskillwithin> i mean its still in stage 2
[15:35:32] <stenno> sudorm: not possible i think
[15:35:48] <sudorm> stenno, how do people use font-awesome?
[15:36:02] <sudorm> I tried it and thought it would be for this, but it doesn't change anything
[15:36:29] <stenno> ok you can just a custom font i guess
[15:36:39] <stenno> but this wont enforce it
[15:37:18] <Alexendoo> font-awesome's characters are in the private use area, it's not a font providing regular emoji
[15:37:24] <theskillwithin> b> let a = #{ bar: 0 }; a.bar = 42; a
[15:37:25] <jellobot> (okay) Record { bar: 0 }
[15:37:49] <theskillwithin> Maxdamantus HA you almost got me!
[15:38:29] <theskillwithin> Maxdamantus your way smarter than me so I probably shouldn't gloat haha
[15:38:41] *** Quits: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 256 seconds)
[15:39:02] <stenno> 12:48:41 <stenno> i cannot say recordInstance.foo = 42
[15:40:17] <theskillwithin> b> let a = #{ bar: 0 }; a.bar = 42; a.bar
[15:40:18] <jellobot> (okay) 0
[15:40:23] <theskillwithin> boom immutable
[15:41:18] <Maxdamantus> b> b> let a = #{ bar: 0 }; delete a.bar; a;
[15:41:19] <jellobot> An async internal error occured: Missing semicolon. (1:7)
[15:41:21] <Maxdamantus> b> let a = #{ bar: 0 }; delete a.bar; a;
[15:41:22] <jellobot> (okay) Record { bar: 0 }
[15:41:44] <Maxdamantus> b> let a = #{ bar: 0 }; Object.defineProperty(a, "bar", { value: 42 }); a;
[15:41:45] <jellobot> (fail) TypeError: Cannot redefine property: bar
[15:41:59] *** Joins: pmercado (~pmercado@190.22.160.49)
[15:43:07] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[15:43:21] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:44:52] <Maxdamantus> Ah right, it will be using frozen objects.
[15:45:05] <theskillwithin> Maxdamantus so I was right?
[15:45:11] <Maxdamantus> That probably explains why it silently ignores the set operations.
[15:45:14] <Maxdamantus> theskillwithin: about what?
[15:45:21] *** Joins: duds- (~duds-@user/duds)
[15:45:27] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:45:41] <Maxdamantus> b> Object.isFrozen(#{ foo: 0 });
[15:45:42] <jellobot> (okay) true
[15:47:00] <cheater> thanks for the help guys and gals
[15:47:03] <cheater> see you
[15:47:03] <theskillwithin> who cares what polyfill does.  record and tuple are going to be actual new types not a poly
[15:47:04] *** Parts: cheater (~Username@user/cheater) (BitchX by panasync)
[15:47:12] <theskillwithin> not sugar
[15:47:33] <Maxdamantus> theskillwithin: right, and I expect it should throw rather than ignore, as current frozen objects do.
[15:47:45] <Maxdamantus> (though I'd need to check the proposal for the intended behaviour)
[15:48:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:48:05] <Maxdamantus> b> const a = #{ foo: 42 }, b = #{ ...a, foo: 42 }; Function("a", "b", "return a === b;")(a, b);
[15:48:06] <jellobot> (okay) true
[15:48:43] * Maxdamantus wonders how the polyfill manages to do that.
[15:48:45] *** Quits: flughafen (~flughafen@p5de8ed0b.dip0.t-ipconnect.de) (Quit: WeeChat 2.8)
[15:49:02] <Maxdamantus> Maybe it keeps a map of all the values.
[15:49:53] <theskillwithin> b> const a = #{ foo: 42 }, b = #{ ...a, foo: 42 }; a === b;
[15:49:54] <jellobot> (okay) true
[15:50:07] <theskillwithin> huh, thats interesting
[15:50:09] <stenno> err what
[15:50:12] <Maxdamantus> b> let a = #{ foo: 42 }; for(let x = 0; x < 1e6; x++) a = #{ ...a, foo: foo.a + 1 };
[15:50:13] <jellobot> (fail) ReferenceError: foo is not defined
[15:50:23] <Maxdamantus> b> let a = #{ foo: 42 }; for(let x = 0; x < 1e6; x++) a = #{ ...a, foo: a.foo + 1 };
[15:50:29] <jellobot> An async internal error occured: Command failed: docker kill --signal=9 jseval-2150dd4fc97a13f1 Error response from daemon: Cannot kill container: jseval-2150dd4fc97a13f1: Container a8cd85c45c2cc1e4c6c5dba736eb54ed104dab9302c1899f8eb4ea8d9705d99c is not running
[15:50:37] <stenno> ouchhhhh
[15:50:42] <Maxdamantus> Hm, I guess it does the big global map.
[15:50:43] <stenno> time for a bug report
[15:51:03] <Maxdamantus> so it runs out of memory if you create a record in a loop?
[15:51:33] <Maxdamantus> b> "oke";
[15:51:34] <jellobot> (okay) 'oke'
[15:51:55] <stenno> that looks much worse than just running out of memory
[15:52:00] <theskillwithin> it runs a new instance for each command.  so don't worry about breaking it
[15:52:04] <Maxdamantus> Looks like running out of memory to me.
[15:52:10] <Maxdamantus> It probably got OOM killed.
[15:52:20] <stenno> cannot kill container, container is not running?
[15:52:28] <Maxdamantus> Right, because it probably got OOM killed.
[15:52:34] <Maxdamantus> why else would it stop in the middle of the loop?
[15:53:35] <theskillwithin> https://github.com/ljharb/jellobot/issues
[15:53:49] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:54:27] <stenno> so it runs oom before running into timeout
[15:54:33] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 256 seconds)
[15:54:40] <Maxdamantus> That's my guess at least.
[15:54:59] <theskillwithin> its still sorta safe tho?  right?
[15:55:09] <theskillwithin> not a big deal
[15:55:42] <stenno> not a question of safety here
[15:55:44] <theskillwithin> im still scratching my head about this
[15:55:46] <Maxdamantus> Pretty much. As long as there's nothing else on the system that could have a higher OOM score.
[15:55:46] <theskillwithin> b> const a = #{ foo: 42 }, b = #{ ...a, foo: 42 }; a === b;
[15:55:47] <jellobot> (okay) true
[15:55:51] <stenno> those kind of errors are just not nice
[15:57:23] <Maxdamantus> b> const cache = Object.create(null); function cached(a){ const j = JSON.stringfy(a); return cache[j] || (cache[j] = a); } let a = { foo: 42 }; for(let x = 0; x < 1e6; x++) a = cached({ ...a, foo: a.foo + 1 });
[15:57:24] <jellobot> (fail) TypeError: JSON.stringfy is not a function
[15:57:30] *** Joins: duds- (~duds-@user/duds)
[15:57:30] <Maxdamantus> b> const cache = Object.create(null); function cached(a){ const j = JSON.stringify(a); return cache[j] || (cache[j] = a); } let a = { foo: 42 }; for(let x = 0; x < 1e6; x++) a = cached({ ...a, foo: a.foo + 1 });
[15:57:35] <jellobot> (timeout)
[15:57:41] <Maxdamantus> Hmm..
[15:57:51] <Maxdamantus> b> let a = #{ foo: 42 }; for(let x = 0; x < 1e6; x++) a = #{ ...a, foo: a.foo + 1 };
[15:57:57] <jellobot> (timeout)
[15:58:13] <Maxdamantus> Maybe it was a fluke before.
[15:58:45] <Maxdamantus> Anyway, I'm guessing the polyfill does something similar to my code above.
[15:59:29] <theskillwithin> b> const a = #{ foo: 42 }; const b = #{ ...a, foo: 42 }; a === b;
[15:59:29] <jellobot> (okay) true
[15:59:40] <theskillwithin> ohhh
[15:59:50] <theskillwithin> b> const a = #{ foo: 42 }; const b = #{ ...a, bar: 42 }; a === b;
[15:59:51] <jellobot> (okay) false
[16:00:13] <Maxdamantus> Oh, it uses WeakRefs
[16:00:17] <Maxdamantus> Didn't realise JS had those.
[16:00:28] <theskillwithin> its literally comparing them
[16:01:16] <theskillwithin> which is kinda awesome feature of it
[16:01:48] <theskillwithin> can't do it like that with objects
[16:02:08] <Maxdamantus> It's the same object in the polyfill.
[16:02:31] <Maxdamantus> It basically does my `cache` thing above, though it uses `WeafRef` so it theoretically shouldn't run out of memory.
[16:02:37] <Maxdamantus> WeakRef*
[16:03:00] <theskillwithin> make the loop much much shorter
[16:03:08] <theskillwithin> don't challenge the bot work with it
[16:05:06] *** Joins: Guest1974 (~Guest19@77.38.89.90)
[16:05:20] *** Parts: Guest1974 (~Guest19@77.38.89.90) ()
[16:05:28] <stenno> the bot must be challenged
[16:05:52] <theskillwithin> yes, but at the same time if you want result don't challenge it
[16:07:15] <Maxdamantus> b> const cache = Object.create(null); function R(a){ const j = JSON.stringify(a); return cache[j] || (cache[j] = a); } R({ foo: 42 }) === R({ foo: 42 });
[16:07:15] <jellobot> (okay) true
[16:07:56] *** Quits: rickbutton (sid410078@id-410078.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[16:08:05] *** Joins: rickbutton (sid410078@id-410078.helmsley.irccloud.com)
[16:08:33] <Maxdamantus> b> let a = #{ foo: null }; for(let x = 0; x < 1e6; x++) a = #{ foo: a }; 42;
[16:08:38] <jellobot> (timeout)
[16:09:15] <theskillwithin> idk what your doing
[16:09:34] <Maxdamantus> Neither.
[16:10:04] <theskillwithin> Maxdamantus so I was kinda right about primitives and such?
[16:10:16] <Maxdamantus> theskillwithin: no.
[16:11:01] <Maxdamantus> theskillwithin: at the moment in JS, objects are the only non-primitives, because objects are the only things which can contain other values.
[16:11:37] <theskillwithin> b> let a = #{ bar: 0 }; a.bar = 42; a
[16:11:38] <jellobot> (okay) Record { bar: 0 }
[16:11:41] <Maxdamantus> theskillwithin: but with the records/tuples proposal, there would be non-object types that can contain other values, so objects will no longer be the only primitives.
[16:11:55] <Maxdamantus> er, the only non-primitives
[16:12:51] <stenno> Records and Tuples can only contain primitives and other Records and Tuples. You could think of Records and Tuples as "compound primitives". By being thoroughly based on primitives, not objects, Records and Tuples are deeply immutable.
[16:13:01] *** Joins: Phineas (~Phineas@user/Phineas)
[16:13:05] <stenno> the wording really sound slike they are special as opposed to primitives
[16:13:30] <stenno> so a compound primitive is not a primitive, but more like a primitive-like
[16:13:35] <Maxdamantus> Right, because they contain other values, hence not "primitive".
[16:13:47] <Maxdamantus> What do you think "primitive" means?
[16:14:03] <theskillwithin> stenno has it right
[16:14:36] <Maxdamantus> "compound primitive" sounds like nonsense to me.
[16:14:43] <stenno> Maxdamantus: so your argument is that it cannot be a primitive because its composed of primitives?
[16:14:51] <Maxdamantus> The first sentence sounds fine, and I think it was quoted from the proposal.
[16:14:59] <Maxdamantus> stenno: it's composed of other values.
[16:15:02] <stenno> yes, this is a quote from the proposoal
[16:15:22] <stenno> you pasted the first sentence here before
[16:15:31] <stenno> and i just said that its bad semantics, but it really isn't
[16:15:31] <Maxdamantus> in general, a "primitive" is something that other things are made of.
[16:15:58] <Maxdamantus> eg, a primitive life form would be something like a single-cell organism.
[16:16:13] <Maxdamantus> all other life forms are made of cells.
[16:16:43] <Maxdamantus> https://en.wikipedia.org/wiki/Primitive_data_type
[16:16:48] <Maxdamantus> > Primitive types are almost always value types, but composite types may also be value types.[5]
[16:17:00] <Maxdamantus> > Data types which are not primitive are referred to as derived or composite data types.[3]
[16:17:12] <Maxdamantus> https://en.wikipedia.org/wiki/Composite_data_type
[16:17:17] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:17:18] <Maxdamantus> > In computer science, a composite data type or compound data type is any data type which can be constructed in a program using the programming language's primitive data types and other composite types. It is sometimes called a structure or aggregate data type
[16:17:59] *** Joins: pulse (~pulse@user/pulse)
[16:18:38] <theskillwithin> from your wikipedia In JavaScript, there are 7 primitive data types: string, number, bigint, boolean, undefined, symbol, and null. These are not objects and have no methods.[18]
[16:19:25] <Maxdamantus> theskillwithin: yes. That is not inconsistent with anything I've said.
[16:19:51] <Maxdamantus> theskillwithin: when tuples/records become mainstream. I expect that list will still not contain "tuples/records".
[16:20:22] <Maxdamantus> because tuples/records are composite, not primitive.
[16:21:23] <theskillwithin> thats why they were called composite primatives
[16:21:44] <Maxdamantus> Who calls them that?
[16:21:46] <theskillwithin> they are still deeply comparable, and immutable.  thats all that matters
[16:22:13] <Maxdamantus> Do they drive a four-wheeled bicycle?
[16:22:23] *** Quits: sudorm (~sudorm@atoulouse-556-1-147-235.w92-162.abo.wanadoo.fr) (Quit: Leaving)
[16:23:46] <theskillwithin> i mean its the first line in the proposal its mention, and stenno mentioned it before so idk what to tell ya
[16:24:20] <stenno> one could argue that a compound primitive is by definition not a primitive
[16:24:32] <stenno> but a composite data type
[16:24:44] <stenno> or rather, that any composite data type is also a compound primitive
[16:24:59] <stenno> i can see how the term 'compound primitive' doesn't really make sense
[16:25:39] <theskillwithin> they put it in quotes for a reason probably
[16:25:43] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Ping timeout: 256 seconds)
[16:26:17] <theskillwithin> lest not twist words here and get technical.  cuz the sentence is: You could think of Records and Tuples as "compound primitives"
[16:26:20] <stenno> because in JS, we have certain expectations about what a 'primitive' is
[16:26:42] <stenno> we are talking about a spec proposal, we _have_ to get technical
[16:27:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:28:17] <theskillwithin> so you can only use primitives, or the new types of record and tuple inside of.  thats it.
[16:30:31] <stenno> it took me a long time but i can finally follow Maxdamantus argumentation
[16:30:46] <Maxdamantus> Yes, I think it is just alluding to the current expectations in JS, where "primitive" basically means "everything except an object"
[16:30:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:31:18] <Maxdamantus> Sort of like how people call "?:" the "ternary operator"
[16:31:52] <Maxdamantus> it's only accurate because there are currently arguably no other ternary operators in JS.
[16:32:07] <stenno> _the_ ternary operator
[16:32:14] <stenno> :D
[16:32:22] <theskillwithin> well I only know JS so I can't only tell you the JS
[16:32:57] <Maxdamantus> Right, I will always refer to it as "the conditional operator", though plenty of people will call it "the ternary operator" and it's understood.
[16:33:34] <stenno> are there any other ternary operators that come to your mind?
[16:33:46] <theskillwithin> idk what all those failed examples you were trying to do was trying to prove then but ok
[16:33:53] <stenno> (outside of js)
[16:34:02] <Maxdamantus> I would say that method calls could be considered a ternary operation in JS.
[16:34:25] <Maxdamantus> `a.b(c)` has the target object, the method name and the arguments.
[16:34:41] <Maxdamantus> and importantly, it's not the same as `const f = a.b; f(c);`
[16:34:52] <Maxdamantus> so it is quite ternary.
[16:34:53] <stenno> call `b` of `a` with `c`
[16:34:56] <stenno> right, nice
[16:37:20] <theskillwithin> at the end of the day, aren't you going to use them when they come out?
[16:38:12] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[16:38:23] <Maxdamantus> Sure, I think it's a positive development, but the inability to use object values inside a record is just a weird omission to me.
[16:38:43] <Maxdamantus> It's at least taking a conservative semantics where it could be enabled later.
[16:39:26] <Maxdamantus> Maybe if I can be bothered I might raise an issue about it, if there isn't already one.
[16:40:27] <theskillwithin> can you convert an object into a record?
[16:40:52] <stenno> yes
[16:41:02] <Maxdamantus> imo, yes, you should be able to convert any object into a record.
[16:41:08] <stenno> b> const a = {a: 23}; const b = #{...a}; b
[16:41:09] *** Joins: eXtre3m0 (~eXtr3m0@user/eXtr3m0)
[16:41:09] <jellobot> (okay) Record { a: 23 }
[16:41:28] <Maxdamantus> with the current proposal, it won't work for objects that have properties with object values.
[16:41:37] <stenno> yep
[16:41:55] <theskillwithin> b> const a = {a: {}}; const b = #{...a}; b
[16:41:56] <jellobot> (fail) Error: TypeError: cannot use an object as a value in a record
[16:42:09] <Maxdamantus> but imo that should be allowed, so `Object.is(#{ ...a }.b, a.b)`
[16:42:30] <theskillwithin> ya, id like to be able to convert an object to a record
[16:42:55] <theskillwithin> so ya good point there
[16:44:19] <theskillwithin> welp 6am for me, I should have gone to bed 8 hours ago.  thats it for me
[16:45:09] <Maxdamantus> n> function test(a){ console.log(Object.is(#{ ...a }.b, a.b)); } test({ b: 42 }); test({ b: "hello" }); test({ b: #[] }); test({ b: [] });
[16:45:10] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[16:45:15] <Maxdamantus> b> function test(a){ console.log(Object.is(#{ ...a }.b, a.b)); } test({ b: 42 }); test({ b: "hello" }); test({ b: #[] }); test({ b: [] });
[16:45:16] <jellobot> (fail) true true true Error: TypeError: cannot use an object as a value in a record
[16:46:44] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[16:52:34] <Maxdamantus> https://rickbutton.github.io/record-tuple-playground/#eyJjb250ZW50IjoiI3sgZm9vOiA0MiB9LmZvbyA9IFwiYmFyXCI7Iiwic3ludGF4IjoiaGFzaCIsImRvbU1vZGUiOmZhbHNlfQ==
[16:52:41] <Maxdamantus> This version throws an error on assignment.
[16:53:27] *** Joins: flughafen (~flughafen@p5de8ed0b.dip0.t-ipconnect.de)
[16:53:31] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[16:54:27] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[16:56:18] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:57:07] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Ping timeout: 256 seconds)
[16:57:35] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[16:58:18] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[16:58:34] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:59:16] <stenno> still have to consider that this is a stage-2 proposal
[17:02:30] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:17:11] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:17:44] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[17:20:15] *** Joins: chao (~stenno@user/stenno)
[17:22:43] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[17:24:46] *** Joins: han-solo (~hanish@user/han-solo)
[17:27:36] *** Quits: gpap (~pap@athedsl-383055.home.otenet.gr) (Quit: Leaving)
[17:27:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:31:27] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:35:57] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:37:20] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[17:37:50] *** Joins: Aljone (~Aljone1@87.70.161.66)
[17:38:03] <Aljone> i dont understand this function
[17:38:17] <Aljone> static existsAndAuthorized(unauthorizedError) {         return async (req, res, next) => {            if( await check(req, res, false, unauthorizedError) ) next()        }     }
[17:38:22] <Aljone> where "(req, res, next)" this come from?
[17:40:00] <han-solo> wherever this `existsAndAuthorized` is binded to
[17:40:07] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:40:29] <Aljone> so its basically automaticly have access to the global properties?
[17:40:42] <Aljone> xport default class {    static existsAndAuthorized(unauthorizedError) {
[17:40:46] <Cork> Aljone: when exitAndAuthorized is called it returns a new unnamed function, that function then takes erq, res, next as arguments
[17:40:48] <Aljone> export
[17:41:02] <han-solo> some middleware function i assume ?
[17:41:02] <Cork> erq==req
[17:41:16] <Aljone> yes
[17:41:41] <Aljone> router.patch(
[17:41:41] <Aljone>   "/:id",
[17:41:41] <Aljone>   MenuMiddleware.existsAndAuthorized(),
[17:41:48] <Cork> ya, that is where it comes from
[17:41:51] <Svitkona> n> function foo() { return (bar) => { console.log(bar); } }; const f = foo(); f(1);
[17:41:53] <jellobot> (okay) 1
[17:42:05] <Aljone> but as u can see i pass nothing to existsAndAuthorized()
[17:42:20] *** Joins: d[-_-]b (~stenno@user/stenno)
[17:42:21] <han-solo> yea, that seems weird
[17:42:34] <Cork> Aljone: so that argument becomes undefined
[17:42:52] <Aljone> but i did see it have data inside
[17:43:00] <joepie91> Aljone: note that existsAndAuthorized is a function *that returns another function*, it's that returned function which takes (req, res, next), but the function is passed as-is to Express without calling it, Express will call it internally at a later time. but yes, separately from that the unauthorizedError argument is also missing
[17:43:55] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[17:44:35] <Aljone> im so confused with it
[17:44:53] <Cork> n> (function(unauthorizedError) { return (req,res,next) => console.log(req,res,next,unathorizedError); }("noop"))(1,2,3);
[17:44:54] <jellobot> (fail) ReferenceError: unathorizedError is not defined
[17:45:02] <Cork> n> (function(unauthorizedError) { return (req,res,next) => console.log(req,res,next,unauthorizedError); }("noop"))(1,2,3);
[17:45:03] <jellobot> (okay) 1 2 3 noop
[17:45:09] <Cork> that is what happens
[17:46:19] <Aljone> hmm
[17:46:47] <Aljone> so where is it passing the (req,res,next) im still confused about that
[17:47:03] <Cork> that is the same as
[17:47:25] <Svitkona> express will pass those when it calls the function
[17:47:31] <Aljone> i see
[17:47:33] <Cork> n> function build(unauthorizedError) { return (req,res,next) => console.log(req,res,next,unauthorizedError); }; let callback = build("noop"); callback(1,2,3);
[17:47:34] <jellobot> (okay) 1 2 3 noop
[17:48:12] <han-solo> https://expressjs.com/en/guide/writing-middleware.html
[17:51:34] <Aljone> i see
[17:51:41] <Aljone> so it pass a function after
[17:53:21] *** d[-_-]b is now known as stenno
[17:53:58] <stenno> req,res,next is an express pattern
[17:54:01] <stenno> ah yeah
[17:55:39] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:55:39] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:55:39] *** Joins: wroathe (~wroathe@user/wroathe)
[17:56:57] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[17:57:56] <Aljone> thank you guys
[18:05:38] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:06:07] *** Joins: MassDebates (~MassDebat@2600:1700:1184:4510:5c98:6cda:8aa6:d1c5)
[18:08:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[18:12:06] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[18:33:13] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 256 seconds)
[18:39:00] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:39:50] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:42:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:44:33] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:45:25] *** Joins: mihael (~mihael@180.190.197.197)
[18:46:22] *** Quits: flughafen (~flughafen@p5de8ed0b.dip0.t-ipconnect.de) (Quit: WeeChat 2.8)
[18:47:36] *** Joins: mseidl (~flughafen@p5de8ed0b.dip0.t-ipconnect.de)
[18:47:38] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Read error: Connection reset by peer)
[18:48:53] *** Joins: jackfirelam (~jackfirel@106.213.99.63)
[18:49:05] *** Joins: zebrag (~chris@user/zebrag)
[18:49:09] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:49:09] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:49:09] *** Joins: wroathe (~wroathe@user/wroathe)
[18:49:23] *** Quits: jackfirelam (~jackfirel@106.213.99.63) (Client Quit)
[18:49:24] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e2dd:ac35:d905:e9b4)
[18:53:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:55:37] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[18:56:21] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:57:59] <systemfault> ljharb: Any chance we're getting Temporal this year or it's already too late... so likely 2023?
[18:58:01] *** Joins: The_Blode (uid537595@user/the-blode/x-7164444)
[18:58:49] <ljharb> systemfault: itâs stage 3, and isnât finished making changes anyways, so definitely not for ES2022, which is basically ready to be cut
[18:59:13] <systemfault> That's what I thought, just wanted a confirmation
[18:59:37] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[19:05:11] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[19:05:29] *** Joins: thojanssens (~thojansse@49.230.133.120)
[19:05:50] <thojanssens> n> const foo = { a: 1 }; foo[[['a']]]
[19:05:51] <jellobot> (okay) 1
[19:06:02] <thojanssens> uhmm, why does the above work?
[19:06:42] <thojanssens> n> const foo = { a: 2 }; foo[[['a']]]
[19:06:43] <jellobot> (okay) 2
[19:10:19] <clamiax> thojanssens: because [[['a']]].toString() == 'a'
[19:10:50] <thojanssens> oh ty clamiax
[19:11:01] <clamiax> yw
[19:12:03] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.73)
[19:13:14] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[19:17:03] <interop_madness> can I attach multiple .then() callbacks to the same promise? reason is, I have an API which returns new Promise(...) and said API must internally do some cleanup if the promise rejects
[19:17:46] <interop_madness> I can't change the code to async/await easily since the API is a jQuery plugin and the return type depends on the method called .-.
[19:19:29] <systemfault> Yes.
[19:20:00] <interop_madness> and the external code which relies on the returned promise is unaffected by my additional .catch() ?
[19:20:05] <interop_madness> nice
[19:20:37] *** Quits: mihael (~mihael@180.190.197.197) (Quit: Client closed)
[19:24:29] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[19:25:07] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[19:27:21] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130) (Quit: Leaving)
[19:29:44] *** Joins: Rockwood (~Rocky@user/rocky)
[19:30:11] <Rockwood> o/
[19:30:34] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Read error: Connection reset by peer)
[19:32:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e2dd:ac35:d905:e9b4) (Ping timeout: 240 seconds)
[19:34:37] <Rockwood> https://codesandbox.io/s/mystifying-leaf-p699t?file=/src/Fetch.js:0-530
[19:34:47] <Rockwood> i am getting error
[19:35:59] <ljharb> systemfault: the yearly edition doesnât matter tho; itâs a living standard. Once itâs merged itâs in the spec.
[19:38:27] <jaawerth> temporal aside I would be content with a date.parse function that works with standard %-style replacements :)
[19:39:31] <Rockwood> jaawerth, wb
[19:40:41] <jaawerth> thanks
[19:40:48] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:40:58] <jaawerth> your error is because your brackets aren't balanced btw
[19:41:31] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c)
[19:42:09] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[19:42:11] <Rockwood> which one?
[19:42:12] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:42:51] <jaawerth> oh wait no it isn't, it's the fetch call that's happening in the middle of an assignment and an arrow fn
[19:42:58] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:43:04] <jaawerth> the first line
[19:43:18] *** Joins: Rockwood_ (~Rocky@user/rocky)
[19:44:23] <Rockwood_> jaawerth, which one?
[19:44:55] *** Joins: kakashiA1 (~kakashi@p5b31684e.dip0.t-ipconnect.de)
[19:45:07] <jaawerth> Rockwood_: which one what?
[19:45:11] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[19:45:21] <jaawerth> it's just malformed just, try copying it into your actual editor and it might be easier to spot
[19:45:31] <jaawerth> the problem is the first line of the fetch module
[19:45:46] <Rockwood_> i am using Vscode
[19:45:59] <Rockwood_> any yeah notpad++ also i ve
[19:46:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[19:47:26] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 245 seconds)
[19:48:17] <jaawerth> specifically the `const Response = fetch("https://api.rockwood.test/api/" + url, { method = "GET", ...params } = {}) => {` - it looks like you're trying to call fetch and declare a function at the same time :)
[19:52:10] *** Joins: D3mned (~D1mned@212.101.251.35)
[19:52:39] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e2e2:d030:77ec:b316)
[19:52:57] *** Quits: D4mned (~D1mned@212.101.251.35) (Ping timeout: 240 seconds)
[19:52:58] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[19:54:27] *** Rockwood_ is now known as Rockwood
[19:56:58] <ljharb> jaawerth: i don't know what "%-style replacements" means
[19:59:49] <systemfault> Format strings...
[20:00:27] <ljharb> in dates?
[20:00:33] <systemfault> Date.parse('2022-02-04', 'YYYY-MM-DD')
[20:03:27] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c) (Quit: dingdreher)
[20:04:48] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[20:05:49] *** Quits: thojanssens (~thojansse@49.230.133.120) (Ping timeout: 256 seconds)
[20:08:52] <mseidl> Im using puppeteer, and found a trick for getting the text to enter, by using a delay... await page.keyboard.type(bid, {delay: 50});  but with this delay, the next thing to click on the bid button, rarely works. if I take the delay off, it works everytime but the text isn't
[20:12:46] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:17:17] <jaawerth> ljharb: yeah. Not necessarily with the % itself (that's how the C-based stuff and the unix `date` commadn do it so I was using it as a shorthand reference), but point bein the standard "parse using a format string to describe the expected date format"
[20:17:29] <jaawerth> like systemfault's example, or the date-fns method that does similar
[20:18:20] <ljharb> i think Intl.DateTimeFormatter is the way to do that
[20:19:06] <jaawerth> that just serializes, no?
[20:19:50] <ljharb> ohhh right, you want that as input
[20:21:42] <jaawerth> yep! it's already easy to do the formatting than the parsing even without Intl, so something as simple as being able to provide a format string to tell it how you want it parsed goes a lot way, less human error than regex parsing to figure out what to pass to Date.UTC et al
[20:22:23] <theskillwithin> someone should make a iCanHazTemporalYet.com site
[20:22:59] <jaawerth> most JS host runtimes probably already have a system library that impleemnts most of the common specifiers anyway so it'd just be a matter of describing what specifiers to use in JS. engine implements wuld prbably just need to translte it to the equivalent thing in their library
[20:24:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e2e2:d030:77ec:b316) (Ping timeout: 240 seconds)
[20:24:59] <jaawerth> well, not necessarily I guess
[20:26:33] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[20:26:41] <theskillwithin> sounds like its going to take some time
[20:27:05] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:27:20] <jaawerth> lol
[20:28:00] <jaawerth> Rockwood: I would suggest changing that fetch stuff to look  something more like this btw http://ix.io/3OEo/js
[20:28:10] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[20:29:36] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[20:29:39] <jaawerth> Rockwood: the await stuff isn't necessary, I was just feeling lazy haha. In particular, using new URL to resolve the passed-in url/path with your base URL is going to be more reliable than string concatenation, and since fetch won't do it for you, for higher-level wrappers it's good to check response.ok and reject
[20:29:54] <jaawerth> and i wouldn't call the library Response since that's already a DOM builtin class
[20:30:36] *** Quits: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it) (Read error: Connection reset by peer)
[20:31:19] *** Quits: Aljone (~Aljone1@87.70.161.66) (Ping timeout: 256 seconds)
[20:31:34] *** Joins: Aljone (~Aljone1@87.71.30.58)
[20:32:12] *** Joins: Akiva (~Akiva@user/Akiva)
[20:32:47] <pulse> will JS ever get pointers
[20:33:11] *** Joins: han-solo (~han-solo@user/han-solo)
[20:33:18] <ljharb> pulse: god no
[20:33:25] <pulse> :(
[20:33:40] <pulse> it would simplify some situations
[20:33:53] <ljharb> no it wouldn't
[20:34:02] <ljharb> it would make everything worse
[20:34:17] <austincheney> pulse, why would any language with GC and without optional compilation benefit from pointers?
[20:35:34] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:35:48] <pulse> you could refer to variables without having them correspond to a key inside an object
[20:35:51] * pulse shrugs
[20:36:06] <jaawerth> I mean, there's wasm
[20:36:11] <ljharb> pulse: you can already do that?
[20:36:14] *** Joins: mat001 (~mat001@72.28.108.216)
[20:36:18] <ljharb> variables point to values
[20:36:24] <jaawerth> I could see atoms and pointers working in js, maybe, but pointers? big yikes energy
[20:36:25] *** Quits: nulysses (~Thunderbi@p200300c517124b008889ff8e656cc1f8.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:37:05] <systemfault> We'd get PHP's $$... which makes me want to vomit.
[20:37:33] <pulse> var x = "blah"; var y = &x;
[20:37:34] <pulse> :P
[20:37:46] <jaawerth> but whyy
[20:38:12] <pulse> yeah i can see it getting messy
[20:38:14] <jaawerth> being able to actually rely on call-by-value semantics saves you from a bunch of zalgo scenarios and in exchange for not having pointers, we get first-class functions
[20:38:26] <austincheney> in pulse's defense it would be nice if there were something like TypeScript that mandated types and compiled directly into an executable.  In that case I can see a massive benefit to pointers.
[20:38:27] <pulse> you're probably right
[20:38:39] <pulse> but still in some corner cases it would actually come in handy
[20:38:55] *** Joins: voltage_ (voltage@user/voltage)
[20:39:05] <jaawerth> perhaps, but it doesn't take much to write an abstraction for it - react Refs are sorta that already
[20:39:16] <ljharb> i still don't think it would come in handy ever
[20:39:48] <jaawerth> plus, like half (ok I didn't actually count) the C pointer I see is just passing pointers into functions for setting callbacks because functions aren't first class :)
[20:39:54] <jaawerth> the C pointer stuff*
[20:40:21] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:39e9:9943:8cd0:5689)
[20:40:37] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:40:51] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.73) (Quit: Client closed)
[20:41:19] <jaawerth> pulse: souds like you might enjoy you some wasm though
[20:41:25] <pulse> hmm
[20:42:27] <austincheney> 90mb xml files are hard on the browser
[20:42:34] <pulse> ugh, xml
[20:42:49] <pulse> if xml never existed it would have too much existence
[20:43:27] <systemfault> austincheney: Does the browser have a SAX parser?
[20:43:35] <austincheney> i have no idea
[20:43:37] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[20:43:38] <systemfault> austincheney: DOM is inevitably going to be slow as F
[20:43:46] *** Joins: matsaman (~matsaman@user/matsaman)
[20:43:48] <jaawerth> hmm did I ever save the XML thing as a factoid
[20:43:50] <jaawerth> !xml
[20:44:03] <jaawerth> guss not. anyway, compulsory :D https://wiki.postgresql.org/images/b/b4/Pg-as-nosql-pgday-fosdem-2013.pdf#page=11
[20:44:22] <ljharb> lol
[20:44:25] <ljharb> xml is terrible tho
[20:44:49] <jaawerth> thatsthejoke.gif
[20:45:02] <systemfault> Yup.... but it's stupidly powerful
[20:45:08] <systemfault> XLST, XPath...
[20:45:23] <systemfault> That said, the less I use it... the better I feel
[20:45:25] <ljharb> sure, but that doesn't make it good
[20:45:27] <ljharb> yup
[20:45:41] <jaawerth> XLST I'll rant you to an extent but there's already an equivalent json RFC for XPath
[20:45:57] <matsaman> jaawerth: that first slide =P
[20:46:15] <austincheney> most implementations in XML really do read like a spaghetti disaster, but I have a soft spot for XML.  XML solved a problem space eons ago that GraphQL, which is now all the rage, is reinventing the wheel on
[20:46:29] <jaawerth> matsaman: lol, the "PostgreSQL: a schemaless database" thing?
[20:46:30] <matsaman> yeah I would say xpath is good in spite of XML, and still has a terrible syntax
[20:46:49] <matsaman> jaawerth: "XML: It seemed like a good idea at the time." =)
[20:46:54] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[20:48:28] <jaawerth> oh yeah that's why I linked it haha. I came across that deck years ago when I was rading up on postgres's json/jsonb capabilitites for a gnarly project and I was so amused by tht XML slid I bookmarked it immediately
[20:48:45] <jaawerth> *by that XML slide
[20:50:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:51:33] *** Joins: stenno (~stenno@user/stenno)
[20:52:39] <pulse> i wrote a compliant GML (geo XML) parser on my first job. since then, i hate XML with all my might
[20:53:15] <stenno> having to write an actual xml parser sounds like the worst shit ever
[20:53:22] <stenno> don't you have schemas for that?
[20:53:23] <systemfault> pulse: Have you mentally recovered yet? :/
[20:53:27] <pulse> systemfault, no
[20:53:30] <systemfault> :'(
[20:53:38] <matsaman> it's pretty easy. The trouble is people always change their XML
[20:53:55] <Rockwood> jaawerth,  const url = new URL(_url, baseURL || defaultBaseURL);  actually my url something like --> "https://api.rockwood.test/api/" + urlPart
[20:55:15] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:56:31] <ljharb> austincheney: not really solving it if it's that horrific
[20:57:25] <jaawerth> n> const {URL} = require('url'); new URL('urlPart', 'https://api.rockwood.test/api/').toString() @Rockwood
[20:57:26] <jellobot> Rockwood, 'https://api.rockwood.test/api/urlPart'
[20:57:56] <jaawerth> like I said, using the URL constructor for this is like doing concatenation, but better
[21:00:01] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:01:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:04:49] *** Joins: belst (~belst@bel.st)
[21:05:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:05:54] <belst> hello, I have a weird problem. I have an eventlistener on body mousemove but sometimes event.clientY jumps by 30 pixels when I hover over a specific element even tho I only move my mouse horizontal
[21:07:52] <pulse> that does sound like a weird problem
[21:08:18] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Read error: Connection reset by peer)
[21:08:33] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[21:08:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[21:09:28] *** Joins: MadcapJake (~MadcapJak@047-012-202-057.res.spectrum.com)
[21:10:09] *** Joins: z_lehinsun__ (~lehinsun@188.244.142.69)
[21:10:10] <pulse> in my experience events and CSS combined can make you go totally crazy
[21:10:25] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[21:10:26] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7cc6:c8a3:cf2c:c4f6)
[21:10:58] <pulse> when 7 layers of things start interacting in odd ways you just get odd results
[21:11:05] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:727:6870:ff1f:d20f) (Ping timeout: 256 seconds)
[21:11:56] *** Joins: stagas (~stagas@2a02:587:c441:b777:656b:8bfb:d9b2:c7ff)
[21:13:15] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Ping timeout: 256 seconds)
[21:13:26] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c)
[21:15:20] <theskillwithin> ð»
[21:15:32] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[21:15:42] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:19:56] <Rockwood> Uncaught (in promise) TypeError: URL is not a constructor
[21:20:42] <Rockwood> n> const {URL} = require('url'); new URL('urlPart', 'https://api.rockwood.test/api/').toString()
[21:20:43] <jellobot> (okay) 'https://api.rockwood.test/api/urlPart'
[21:25:25] <Rockwood> Uncaught (in promise) TypeError: URL is not a constructor
[21:25:34] *** Quits: MadcapJake (~MadcapJak@047-012-202-057.res.spectrum.com) (Quit: MadcapJake)
[21:27:09] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[21:27:29] <ljharb> Rockwood: you must be using old node
[21:27:33] *** Joins: goddard (~goddard@user/goddard)
[21:27:47] <Rockwood> old node?
[21:28:01] <Rockwood> why?
[21:28:32] <Rockwood> node -v
[21:28:33] <Rockwood> v15.14.0
[21:29:42] <Rockwood> https://dpaste.com/3UN2MBXEE
[21:29:43] *** Joins: Naan (~Naan@user/naan)
[21:31:04] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:32:12] *** Joins: funhouse (~funhouse@user/funhouse)
[21:34:02] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[21:36:13] *** Joins: DrAnything (uid538291@id-538291.lymington.irccloud.com)
[21:36:56] *** Quits: goddard (~goddard@user/goddard) (Quit: WeeChat 3.4)
[21:37:10] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c) (Quit: dingdreher)
[21:39:18] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[21:41:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[21:42:34] <wyre> hi guys, do you think possible to make a desktop app of deepl.com with nativefier to translate selected text with a shortcut like ctrl+c+c?
[21:43:34] <since_> https://www.deepl.com/app/thanks?os=windows "Translate everywhere with Ctrl+C+C or set up your own shortcut."
[21:43:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:44:09] <since_> wyre: you can do this with a 3 line shell script aswell
[21:44:41] <since_> but by using the first one, yyou do not violate ToS
[21:47:23] *** Joins: tavares (~tavares@user/tavares)
[21:52:21] *** Joins: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de)
[21:53:37] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[21:55:01] *** Joins: SevenCats (~SevenCats@135-23-44-80.cpe.pppoe.ca)
[21:58:17] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:58:43] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c)
[22:01:19] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c) (Client Quit)
[22:01:22] *** Quits: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[22:01:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:02:58] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[22:04:11] *** Joins: onosendi (~onosendi@user/onosendi)
[22:04:38] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[22:04:38] *** Quits: D3mned (~D1mned@212.101.251.35) (Read error: Connection reset by peer)
[22:05:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:06:01] <KevinX> Rockwoo URL is probably undefined. If you'r ein the browser you don't need that package
[22:06:08] <KevinX> oh they left
[22:06:12] *** Joins: D3mned (~D1mned@212.101.251.189)
[22:08:07] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[22:08:22] <ljharb> but also, many browser versions won't have it. so it's best to use a package.
[22:09:39] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[22:09:54] <KevinX> mm I didn't realize that
[22:13:57] *** Joins: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de)
[22:15:18] <qswz> !ciu URL
[22:15:18] <jellobot> qswz, URL API (Edge 12, FF 26, Chrome 32, Opera 19, Safari 7.1, iOS 8, Android 4.4.3-4.4.4) 95.45% https://caniuse.com/url
[22:16:01] <qswz> pretty safe to me
[22:16:16] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:18:59] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:19:12] <qswz> n> if (new Boolean(false)) { console.log(1) }
[22:19:13] <jellobot> (okay) 1
[22:20:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:20:05] *** Quits: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[22:20:22] *** Joins: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de)
[22:20:42] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c)
[22:20:42] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7cc6:c8a3:cf2c:c4f6) (Quit: Leaving)
[22:20:49] <qswz> why if() doesn't it box it to a primitive
[22:21:08] <qswz> I don't use in my code, just curious
[22:22:18] <stenno> you mean unbox?
[22:22:24] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c) (Client Quit)
[22:22:28] <stenno> doesn't go in that direction, does it
[22:22:38] <stenno> objects are truthy
[22:22:53] *** Parts: Selicre (~x@hello.i.am.selic.re) (Blasting off again)
[22:23:07] <stenno> n> new Boolean(false).valueOf()
[22:23:08] <jellobot> (okay) false
[22:23:10] <stenno> hmm
[22:23:52] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[22:24:14] <stenno> n> typeof new Boolean(false)
[22:24:14] <jellobot> (okay) 'object'
[22:24:17] <stenno> right
[22:24:21] <qswz> yea I alwwyas mix up
[22:24:27] <stenno> n> new Boolean(false) === false
[22:24:27] <jellobot> (okay) false
[22:24:42] <stenno> should work without `new` though
[22:24:56] <stenno> new Primitive is always wrong
[22:25:09] <qswz> for example when doing comparisons (<) those objects are unboxed
[22:25:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:25:23] <qswz> it's stupid if() doesn't do it
[22:25:48] <stenno> i assume that that would call toPrimitive
[22:25:54] <qswz> n> [new Boolean(false), Boolean(false)].filter(Boolean)
[22:25:55] <jellobot> (okay) [ [Boolean: false] ]
[22:26:38] <stenno> yeah objects are truthy :P
[22:26:52] <stenno> Boolean(false) just creates a primitive
[22:27:11] <stenno> new Boolean(false) creates an object, which is the same object that gets created during boxing
[22:28:34] *** Quits: tofran (~tofran@bl15-47-228.dsl.telepac.pt) (Read error: Connection reset by peer)
[22:28:45] <stenno> i would really guess that using < and > triggers toPrimitive symbol, whereas === doesn't
[22:29:14] *** dirigible_ is now known as dirigible
[22:29:15] <ljharb> qswz: that doesnât cover quirks, just the presence of the constructor
[22:29:18] *** Quits: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Quit: Leaving)
[22:29:32] *** Parts: tavares (~tavares@user/tavares) ()
[22:29:33] <stenno> n> const foo = {[Symbol.toPrimitive]() { console.log('hello'); return 23;}; [foo === 23, foo < 23]
[22:29:34] *** Joins: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[22:29:34] <jellobot> (fail) SyntaxError: Unexpected token ';'
[22:29:36] <ljharb> qswz: because if uses ToBoolean, and all objects are truthy
[22:29:49] <stenno> n> const foo = {[Symbol.toPrimitive]() { console.log('hello'); return 23;}}; [foo === 23, foo < 23]
[22:29:50] <jellobot> (okay) hello [ false, false ]
[22:29:57] <qswz> ok
[22:29:59] <stenno> yeah only to primitive once
[22:31:56] <stenno> n> const foo = {[Symbol.toPrimitive]() { return 23;}}; [foo === 23, foo < 23, foo > 23]
[22:31:56] <jellobot> (okay) [ false, false, false ]
[22:32:00] *** Joins: hax (~hax@69.165.175.67)
[22:32:00] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[22:32:00] *** Joins: hax (~hax@user/hax)
[22:32:02] <stenno> :>
[22:32:33] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[22:35:05] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[22:35:09] *** Quits: z_lehinsun__ (~lehinsun@188.244.142.69) (Ping timeout: 250 seconds)
[22:36:30] *** Joins: Schultz (~ivillarro@user/Schultz)
[22:37:09] *** Quits: rosseaux (~BeRo@2a00:1828:2000:859::2) (Quit: Bye)
[22:37:23] <qswz> I'd totally fail this kind of tricky js interview questions
[22:37:26] *** Joins: toadtoad (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[22:38:07] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[22:38:08] <stenno> that'd be a really bad interview question
[22:38:19] <qswz> n> const foo = {[Symbol.toPrimitive]() { return 23;}}; [foo == 23, +foo, !foo]
[22:38:20] <jellobot> (okay) [ true, 23, false ]
[22:38:21] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[22:38:53] *** Joins: salad1 (~cucumber@82.76.150.118)
[22:38:53] *** Quits: salad (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[22:39:01] *** Quits: Schultz (~ivillarro@user/Schultz) (Quit: WeeChat 3.4)
[22:39:09] <stenno> surprise coercion
[22:39:19] <qswz> n> const foo = {[Symbol.toPrimitive]() { console.log('@'); return 23;}}; [foo == 23, +foo, !foo]
[22:39:20] <jellobot> (okay) @ @ [ true, 23, false ]
[22:39:46] <qswz> n> const foo = {[Symbol.toPrimitive]() { console.log('@'); return 23;}}; [+foo, !foo]
[22:39:47] <jellobot> (okay) @ [ 23, false ]
[22:39:54] <qswz> n> const foo = {[Symbol.toPrimitive]() { console.log('@'); return 23;}}; [!foo]
[22:39:55] <jellobot> (okay) [ false ]
[22:41:05] <qswz> coercion souns like circumcision to me
[22:41:12] *** Joins: Harlin_ (~DonQixote@75-163-136-96.clsp.qwest.net)
[22:41:30] <stenno> i have to think of coaxing
[22:41:34] <qswz> in myimaginary world
[22:42:06] <qswz> Amanda Coax
[22:42:07] *** Joins: rosseaux (~BeRo@2a00:1828:2000:859::2)
[22:43:13] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[22:43:41] *** Quits: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net) (Ping timeout: 256 seconds)
[22:43:49] <qswz> I see sometimes a guy living in his van nearby, besides lack of running water and electricity, I kinda envy this
[22:44:33] <ljharb> that sounds awful
[22:44:51] <qswz> in terms of hygien maybe?
[22:45:22] *** Joins: crashrep (~crashrep@user/crashrep)
[22:45:29] <qswz> possible, cars have been proven to be dirtier than toilets
[22:45:34] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[22:46:07] <qswz> I could rework the inside, like a mobile home
[22:46:18] <stenno> i am glad that i live in side a flat with several rooms
[22:46:18] <qswz> gotta get a container
[22:46:35] <qswz> stenno: with fucking neighbors tho?
[22:46:45] <qswz> that's the only problem I have
[22:46:48] <stenno> i dont hear any neighbours fucking too much
[22:47:15] <qswz> mine is fucking the walls, the TV, eveeything
[22:47:32] <qswz> fucking is throat full of covid too
[22:47:36] <qswz> her*
[22:47:41] <stenno> there can be outside noise every now and then
[22:47:55] <qswz> I'm fine with outside
[22:47:56] <stenno> i just got used to it from living my life in the city
[22:48:08] <qswz> yea me too
[22:48:11] <stenno> outside is cool if the weather is good and its warm
[22:48:17] <stenno> in the summer
[22:48:20] <qswz> what I don't want is be forced to live the life of my neighbor
[22:48:57] <pulse> a nice lonely forest lodge with a fireplace would be a nice setting for some zen coding
[22:50:04] <qswz> yea, but then you need some vehicle to get food in the city
[22:50:18] <qswz> or else you need hunting, but I prefer fruits hah
[22:50:18] <pulse> just pack the car with supplies for 2 weeks
[22:51:02] *** Quits: ckdCreations (~ckdCreati@147.55.133.129) (Quit: Leaving)
[22:51:04] <qswz> fruits don't always want to wait 2 weeks
[22:51:27] <qswz> but yea, possible
[22:51:47] <qswz> but honestly I don't need to get that far
[22:51:49] <pulse> canned fruits do!
[22:51:55] <qswz> just need respectful neighbors
[22:52:22] <stenno> yeah i can understand how having loud neighbours is annoying
[22:53:00] <stenno> the flat next to my old flat got refurbished, it took several month
[22:53:19] <pulse> i got new neighbors about a year ago and the first thing they did is blast music from the balcony for 3 months straight, very rude
[22:53:28] <pulse> they stopped doing it since
[22:53:39] <stenno> each day i got woken up by jackhammer noises who made my flat shake
[22:53:43] <pulse> who moves into a new neighborhood and immediately starts blasting music
[22:53:44] <stenno> which
[22:54:11] <stenno> one of the worst times of my life, its really terrible what noise does to your quality of living
[22:54:25] <pulse> construction noises in general are bad
[22:55:38] *** Joins: mikrosis (~mikrosis@dynamic-046-114-168-157.46.114.pool.telefonica.de)
[22:56:26] <mikrosis> hi
[22:56:37] <mikrosis> when I add a new event listener, I would also pass an options object
[22:56:55] <mikrosis> when I later remove it again, do I have to pass the same options object to removeEventListener
[22:56:57] <mikrosis> ?
[22:59:55] <ljharb> qswz: it sounds awful to live in a tiny space that's difficult to insulate well
[23:00:07] <ljharb> qswz: and yes, neighbors are good, we live in a society
[23:00:39] <stenno> mikrosis: no, just the reference to the function is enough
[23:00:49] <stenno> if i understood you correctly
[23:01:10] *** Quits: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:01:22] <ljharb> qswz: also for someone who likes fruit so much, you should just buy property and put fruit trees on it
[23:01:30] <ljharb> qswz: that way you don't have to scavenge or steal
[23:01:58] <stenno> also stuff like fox tapeworm can make you really ill
[23:02:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:02:38] <stenno> like you can die from it
[23:02:42] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[23:02:53] <stenno> https://en.wikipedia.org/wiki/Alveolar_hydatid_disease
[23:03:42] <matsaman> foxes are everywhere
[23:04:38] <qswz> ljharb: sure, but I steal fruits that would just rot else or left for squirrels/birds, but right I know. Ilike to reduce my footprint, by eating stuff just available
[23:04:58] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[23:05:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:10:03] *** Quits: D3mned (~D1mned@212.101.251.189) (Quit: Leaving)
[23:11:34] <qswz> I'm taking clementines currently
[23:12:03] <qswz> in abandoned old greenhouses
[23:12:25] <silly> ivermectine is good for this?
[23:12:56] <stenno> against tapeworms? probably
[23:12:58] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[23:13:15] <matsaman> silly: hurrr =)
[23:13:35] <qswz> kids nowadays would be afraid to eat fruit on a tree
[23:13:56] <qswz> for those reasons, "what if I got ill"
[23:14:00] <matsaman> I mean bird shit is pretty disgusting
[23:14:12] <matsaman> but you should wash even store bought produce
[23:14:29] <qswz> there worms shit sometimes in fruit
[23:14:42] <systemfault> That's probably your only source of proteins...
[23:14:43] <matsaman> fruit eating worms are disgusting but not usually problematic to eat
[23:14:44] <qswz> but the worm ate the fruit, so I don't care so much
[23:15:02] <silly> it's a different kind of worm
[23:15:02] <matsaman> no holes, probably no worms
[23:15:14] <matsaman> split it in half, looks good, probably is good
[23:15:17] <matsaman> still wash it =P
[23:15:36] <qswz> figs are tricky
[23:15:42] <silly> what's worse than a worm in an apple?
[23:15:53] <matsaman> lots of worms in your cheese?
[23:15:53] <systemfault> Half a worm?
[23:15:57] <silly> half a worm in an appl
[23:15:59] <silly> lolya
[23:16:00] <matsaman> a worm in a crabapple?!
[23:16:01] <fakuve> Hey Peeps , Does anyone know how I can check the objects and methods that has the Adobe Illustrator Scripting Language based on Javascript? It is basically called Extended Script , and I'm using its console , it is weird cause you cannot do a `console.log(varName)` but you do `varName;` and it will give you the ouput
[23:16:10] <stenno> we are talking about tapeworms, not worms
[23:16:50] <silly> can we not talk about tapeworms? lol
[23:16:51] <qswz> n> Object('test') === 'test'
[23:16:52] <jellobot> (okay) false
[23:16:55] <matsaman> silly: hahah
[23:17:01] <systemfault> Anyway, tapeworms are probably less dangerous than a fruit diet...
[23:17:08] <systemfault> Ask Steve Jobs.
[23:17:12] <matsaman> how do the tapeworms get onto the fruit?
[23:17:19] <qswz> n> let x={}; Object(x) === x
[23:17:19] <jellobot> (okay) true
[23:17:29] <stenno> matsaman: i linked it above
[23:17:33] <matsaman> I'm not saying foxes can't scale trees and inexplicably rub their asses on fruit, but...
[23:17:35] <qswz> (seen there https://github.com/heapwolf/prompt-sync/blob/master/index.js#L53)
[23:17:36] <matsaman> stenno: oh, missed it
[23:17:45] <matsaman> oh alveolar disease?
[23:17:46] <stenno> but yeah ok, lets not talk about that anymore
[23:18:07] <qswz> rocks are better to rub your ass if you shit outside
[23:18:10] <stenno> matsaman: fox eats rodent, shits on berries
[23:18:15] <qswz> :))
[23:18:23] <matsaman> rodents on fruit trees, okay
[23:18:27] *** Joins: haslo (uid390999@id-390999.uxbridge.irccloud.com)
[23:18:30] <matsaman> plausible I suppose
[23:18:54] <stenno> there is fruit that grows in bushes
[23:19:02] <matsaman> f'sho
[23:19:02] <silly> street cats right outside my door have all kinds of worms and other infections
[23:19:11] <stenno> yeah
[23:19:20] <silly> that's why i don't let mine go outside
[23:19:31] <matsaman> you would want them vaccinated at least
[23:19:42] <silly> and not outside
[23:19:54] <stenno> fakuve: is there no documentation about that dialect?
[23:20:05] <matsaman> I'm pretty sure that properly vaccinated the odds of a dangerous illness contracted from another cat are very low
[23:20:15] <matsaman> but they will live longer locked up in your house probably, yeah
[23:20:33] <matsaman> some people get upset about non-native cats eating birds
[23:20:33] <silly> is that like actionscript6? or so...
[23:20:54] <ljharb> qswz: so you're stealing fertilizer and future seeds from that location then instead
[23:20:57] <systemfault> What is a non-native cat?
[23:20:58] <stenno> sounds like AS, yeah
[23:21:11] <ljharb> qswz: the fruit that falls from my trees and rots is important to keep the tree healthy; i'd not let anybody steal those either.
[23:21:17] <matsaman> systemfault: most small "domesticated" house cats people think of
[23:21:22] <systemfault> Ahh okay
[23:21:35] <systemfault> Cats are assholes :P
[23:21:39] <matsaman> yeah =)
[23:21:42] <qswz> ljharb: I make sure to spit the seeds at a good place, that's actually how trees spread the best
[23:21:47] <ljharb> systemfault: nah, they're just psycopaths and murderers
[23:21:57] <ljharb> qswz: the rotting flesh is still good mulch
[23:22:13] <ljharb> qswz: and that's birds and animals spreading seeds, not people :-p
[23:22:13] <qswz> right
[23:22:30] <qswz> we're animals too tho
[23:22:32] <ljharb> it's a critical part of that mechanism that the seed lands embedded in rich fertilizer material
[23:22:35] <ljharb> which spitting doesn't achieve
[23:22:43] <matsaman> qswz: not me, I'm a prime ate
[23:22:51] <ljharb> and if you're taking craps to spread the fruit seeds, then you have way more problems than we can fix here
[23:23:07] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 256 seconds)
[23:23:25] <qswz> well haha
[23:23:30] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:23:34] <ljharb> :-p
[23:24:22] <stenno> :I
[23:24:23] *** Joins: duds- (~duds-@user/duds)
[23:24:47] <systemfault> Fun fact, birds are immune to capsaicin
[23:25:00] *** Joins: Betal (~Betal@user/betal)
[23:26:57] <matsaman> they used some kind of grape extract as a natural bird repellant over here over heree
[23:33:08] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:36:06] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[23:36:23] *** Quits: kakashiA1 (~kakashi@p5b31684e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:36:48] *** Quits: The_Blode (uid537595@user/the-blode/x-7164444) (Quit: Connection closed for inactivity)
[23:37:01] <pulse> systemfault, some people too, seemingly
[23:37:38] <pulse> i've seen a person eat two huge and ripe carolina reapers and not even break a sweat
[23:37:39] <systemfault> I don't know, give them a few "Carolina Reapers"...
[23:37:50] <systemfault> pulse: A bit crazy
[23:38:15] <pulse> i downed 1/2 of a moruga scorpion once and thought i was going to die
[23:38:25] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:39e9:9943:8cd0:5689) (Ping timeout: 256 seconds)
[23:42:02] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[23:43:14] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:45:24] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:45:52] *** Quits: DrAnything (uid538291@id-538291.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:48:35] <qswz> how did it taste?
[23:49:12] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.30.236)
[23:49:12] *** ChanServ sets mode: +b *!*@78.84.30.236
[23:49:12] *** Ronalds_Mazitis_ was kicked by ChanServ (Banned: disruptive)
[23:49:12] *** ChanServ sets mode: +o litharge
[23:49:23] *** litharge sets mode: -o litharge
[23:49:30] <qswz> JackieChanServ
[23:49:40] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:b505:cbf4:6fcf:2d2a) (Read error: Connection reset by peer)
[23:49:58] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[23:50:02] *** Joins: eXtr3m0 (~eXtr3m0@p54861df4.dip0.t-ipconnect.de)
[23:50:08] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[23:50:31] <qswz> my boss told me my code was too dense hah
[23:50:39] <qswz> gotta air it up
[23:50:44] <sheetjs> fetch does that to people
[23:50:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[23:50:57] <qswz> the fetch effect
[23:51:09] <sheetjs> await (await fetch(...)).arrayBuffer()
[23:52:59] <sheetjs> n> Math.clz32(12345)
[23:53:00] <jellobot> (okay) 18
[23:53:13] <qswz> wot
[23:53:36] <qswz> clamp 32 bit maybe
[23:53:44] <sheetjs> "count leading zeroes"
[23:53:57] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[23:54:08] <sheetjs> too bad Math.popcnt isn't a thing
[23:54:15] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[23:54:36] <qswz> n> 32 - Math.log10(12345)
[23:54:36] <jellobot> (okay) 27.90850890573205
[23:54:48] <sheetjs> 32 bit
[23:54:59] <sheetjs> n> 32 - Math.log2(12345)
[23:55:00] <jellobot> (okay) 18.408360783969854
[23:55:07] <qswz> right
[23:55:16] *** Quits: eXtr3m0 (~eXtr3m0@p54861df4.dip0.t-ipconnect.de) (Changing host)
[23:55:16] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[23:55:20] <sheetjs> "leading zeroes" in the binary representation
[23:55:30] <sheetjs> !mdn clz32
[23:55:31] <jellobot> sheetjs, Math.clz32() function returns the number of leading zero bits in the 32-bit binary representation of a number. https://mdn.io/clz32
[23:55:38] <qswz> n> 0b12345
[23:55:39] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[23:55:53] *** Joins: tokie (~tokie@thales.strtok.net)
[23:55:56] <sheetjs> mdn describes this as a "true performance masterpiece"
[23:56:14] <sheetjs> "Make these helper functions into ASM.JS module; then, you have a true performance masterpiece. Situations like these are exactly what ASM.JS was designed for."
[23:56:16] <qswz> n> (12345).toString(2)
[23:56:16] <jellobot> (okay) '11000000111001'
