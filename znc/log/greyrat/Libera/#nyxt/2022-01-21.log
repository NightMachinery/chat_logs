[00:09:12] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[00:10:24] <edgarvincent[m]> waleee: No, it is up-to-date.
[00:14:42] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[00:18:58] <waleee> aartaka: the 1st non-working commit was https://github.com/atlas-engineer/nyxt/commit/73178ca6942098377078d1468ce21f97e6c7738e
[00:19:39] <waleee> well, possibly the one right before, but I haven' checked it yet since it looked less suspicous
[00:20:03] <aartaka> waleee: Yes, that does make sense.
[00:20:32] <aartaka> apply needs the last argument to be a list.
[00:21:27] <aartaka> waleee: Now, can you pull and see whether parenscript-macro.lisp contains `apply #'str:concat`?
[00:21:55] <waleee> HEAD or a specific commit?
[00:22:06] <aartaka> waleee: HEAD.
[00:22:12] <waleee> will do
[00:23:24] <waleee> (commit 4df71688 was innocent, the one right before 7317...)
[00:24:18] <aartaka> waleee: That was expectable too :)
[00:24:26] <waleee> aartaka: no apply in sight in parenscript-marco.lisp on HEAD
[00:24:34] <aartaka> Hmmmm.
[00:25:01] <aartaka> This error has literally nowhere to appear from 0_o
[00:29:37] <aartaka> I'm too distracted to understand this now. Gotta go and get some sleep. Good night!
[00:29:46] <waleee> ok good night!
[00:32:51] <waleee> there is a (reduce #'(lambda (x e) (str:concat x e "/")) in mode/web.lisp but that looks like the closest you get to an "apply #'str:concat"
[00:33:57] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[00:34:59] <waleee> and that can't be the culprit since it has been in that file for 6 months
[00:51:11] *** Joins: tekakutli (~user@201.141.28.4)
[01:28:32] <waleee> ... freaking heisen-error. Dissappeared for unknown reasons after another recompilation of master
[01:33:41] <waleee> hah, an old instance of nyxt (from a commit on 2022-01-19 with the error) hadn't closed properly in another workspace. I guess that could have had some freakish effects
[01:38:46] *** Quits: rotateq (~user@ipservice-092-209-022-135.092.209.pools.vodafone-ip.de) (Quit: tschav mit 'v')
[01:51:22] *** Quits: tekakutli (~user@201.141.28.4) (Remote host closed the connection)
[02:22:37] *** Joins: tekakutli (~user@201.141.28.4)
[02:46:57] *** Joins: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de)
[03:30:43] *** Joins: okok (~okok@198.27.183.199)
[03:31:12] *** Quits: okok (~okok@198.27.183.199) (Client Quit)
[03:46:37] *** Quits: ardon (~user@user/ardon) (Ping timeout: 240 seconds)
[04:00:33] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[04:10:49] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[04:13:28] *** ynakao_ is now known as ynakao
[04:18:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:23:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:24:03] <Kabouik> waleee, I have built from master yesterday and today, no suck issue. qhong built within the last two days too.
[04:24:40] <Kabouik> I used `make all` though, not the fancy lisp method that I vaguely remmember from the Readme but am totally incapable of using.
[04:24:57] <Kabouik> Thanks for revealing the hidden truth jmercouris!
[04:27:08] <Kabouik> oO
[04:27:18] <Kabouik> s/no suck issue/no such issue. ._.
[04:40:13] <jmercouris> Indeed
[04:51:06] *** Quits: tekakutli (~user@201.141.28.4) (Remote host closed the connection)
[04:52:32] *** Quits: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:18:24] *** Joins: taiju (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925)
[06:58:11] <qhong> is there some hook that is called after every command loop iteration in Nyxt?
[06:58:23] <qhong> Or something alike. I'm trying to find a place to call my `redisplay'
[07:04:01] *** Joins: tekakutli (~user@201.141.28.4)
[07:26:34] <qhong> A bit of research shows that I may use `window.requestAnimationFrame'. However that will require JavaScript to call Lisp code (basically making a Lisp callback). Is there a way to do it?
[07:28:54] <qhong> It seem to require WebKitUserMessage, but Nyxt doesn't seem to export it yet.
[07:30:16] <qhong> Ah I found it in `nyxt/web-extensions'. Sry for the noises!
[07:34:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[09:07:59] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:25:02] *** Quits: taiju (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925) (Remote host closed the connection)
[10:27:44] *** Quits: wheelsucker (~user@2600:8801:8c24:d000:25e1:aacc:8c79:dcd3) (Remote host closed the connection)
[10:44:03] *** Joins: taiju (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925)
[10:48:09] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[11:04:26] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[11:08:26] <jmercouris> qhong: there is no command loop
[11:08:36] <jmercouris> All is event driven
[11:08:45] <jmercouris> You could use the GTK loop or whatever
[11:08:53] <jmercouris> Or the path that you’ve discovered as well
[11:09:06] <jmercouris> Or you could bind all ffi commands in your own hook
[11:15:04] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:315f:3454:b0d8:112e)
[13:22:32] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:315f:3454:b0d8:112e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:24:28] *** Quits: taiju (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925) (Remote host closed the connection)
[13:31:58] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:81fd:e333:1e93:e27e)
[13:32:06] *** Joins: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de)
[13:46:10] *** Quits: lagooned (lagooned@irc.nathanic.org) (Quit: ZNC 1.7.3 - https://znc.in)
[13:58:02] <sirmacik> \o
[14:17:17] <rotateq> ohai sirmacik
[14:56:02] *** Quits: kagevf_ (~jfh@ip68-108-33-76.lv.lv.cox.net) (Ping timeout: 240 seconds)
[14:58:46] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:01:16] *** Joins: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net)
[15:02:41] <rotateq> firefox died out of nothing. again, jeeez
[15:10:27] *** Joins: ardon (~user@user/ardon)
[15:12:53] *** Quits: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net) (Ping timeout: 256 seconds)
[15:13:06] *** Joins: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net)
[15:33:24] *** Quits: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb) (Remote host closed the connection)
[15:33:50] *** Joins: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb)
[16:02:56] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[16:04:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:29:25] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[16:40:45] *** Quits: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de) (Quit: tschav mit 'v')
[17:08:37] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[17:09:52] *** Quits: santiagopim (~user@90.167.94.91) (Remote host closed the connection)
[18:01:37] *** Joins: linarcx (~linarcx@151.242.188.51)
[18:12:29] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:16:18] *** Quits: linarcx (~linarcx@151.242.188.51) (Quit: Connection closed)
[18:20:10] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[18:21:01] *** Quits: tekakutli (~user@201.141.28.4) (Remote host closed the connection)
[18:25:47] *** Joins: linarcx (~linarcx@151.242.188.51)
[18:37:10] *** Quits: linarcx (~linarcx@151.242.188.51) (Quit: Connection closed)
[18:43:38] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Read error: Connection reset by peer)
[18:44:10] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:05:00] *** Joins: linarcx (~linarcx@151.242.188.51)
[19:16:59] *** Quits: linarcx (~linarcx@151.242.188.51) (Quit: Connection closed)
[19:26:28] *** Joins: linarcx (~linarcx@151.242.188.51)
[19:37:51] <waleee> aartaka: it looks like the issue last night was that an instance of nyxt (commit around that parenscript-macro.lisp) hadn't closed properly and was keeping a thread alive in another of my workspaces
[19:39:03] <waleee> * that parenscript-macro.lisp change
[19:41:32] <aartaka> waleee: I knew it!
[19:41:33] *** Joins: rotateq (~user@185.66.193.48)
[19:42:12] <aartaka> But you've thrilled me with this heisenbug, ahah :D
[19:42:25] <lagash_> Is there gonna be an article on the new hooks thing? I'm looking at you qhong :)
[19:48:26] *** Joins: lagooned (lagooned@irc.nathanic.org)
[19:54:49] *** Quits: lagash_ (lagash@lagash.shelltalk.net) (Quit: ZNC - https://znc.in)
[19:55:16] *** Joins: lagash (lagash@lagash.shelltalk.net)
[19:57:50] *** Quits: linarcx (~linarcx@151.242.188.51) (Quit: Connection closed)
[20:02:48] *** Quits: stonekyx (~stonekyx@user/stonekyx) (Quit: ZNC 1.8.2 - https://znc.in)
[20:03:22] *** Joins: stonekyx (~stonekyx@user/stonekyx)
[20:04:30] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:81fd:e333:1e93:e27e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:04:37] *** Joins: linarcx (~linarcx@151.242.188.51)
[20:07:16] <jmercouris> Thanks qhong , great stuff, new hooks are even easier to use!
[20:07:45] <jmercouris> Hello sirmacik !
[20:11:43] *** Quits: linarcx (~linarcx@151.242.188.51) (Quit: Connection closed)
[20:12:50] <lagash> jmercouris: for input-edit mode, would it be OK to patch it so Emacs' keybindings bind C-a to start of line, C-e to end of line, etc? That C-a especially might have issues, since it's select all generally..
[20:14:47] <jmercouris> lagash: yes, I don’t see why it would not be OK to patch it
[20:14:55] <jmercouris> Did I not already implement those bindings?
[20:15:09] <jmercouris> Or were they unbound by some PR at some time?
[20:16:58] <lagash> I'm working on it right now :)
[20:17:16] <lagash> And no, they aren't in input-edit mode yet
[20:24:30] *** Joins: linarcx (~linarcx@151.242.188.51)
[20:44:22] *** Quits: linarcx (~linarcx@151.242.188.51) (Quit: Connection closed)
[21:02:28] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[21:07:25] *** Joins: linarcx (~linarcx@151.242.188.51)
[21:17:34] <jmercouris> Ah, OK
[21:17:39] <jmercouris> Thank you my Sumerian friend
[21:22:53] <lagash> There a particular reason (cluffer:cursor-position cursor) is called twice all over the place?? https://github.com/atlas-engineer/nyxt/blob/master/source/mode/input-edit.lisp#L89
[21:24:31] <lagash> Honestly the amount of code duplication I see everywhere... *shudders*
[21:29:11] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[21:29:33] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[22:02:56] <jmercouris> :-D
[22:03:05] <jmercouris> Sometimes I duplicate code on purpose
[22:03:18] <jmercouris> It depends on whether a piece of code will evolve in lockstep with other pieces
[22:03:38] <jmercouris> Another reason for this strange code is because we had some interesting cursor logic added later
[22:04:52] <jmercouris> Well, of course all code could use some improvement:-)
[22:17:42] *** Quits: linarcx (~linarcx@151.242.188.51) (Quit: Connection closed)
[22:22:57] *** Quits: Fade (fade@outrider.deepsky.com) (Remote host closed the connection)
[22:27:42] *** Joins: fade (fade@outrider.deepsky.com)
[22:28:58] *** fade is now known as Fade
[23:42:38] <qhong> lagash: I'm not a good writer and usually write either code or document/tutorial. I think nhooks is pretty simple and documents itself, so...
[23:43:08] <qhong> Also do people think we'd better have pre-command-hook and post-command-hook? It is useful for implementing, say, undo/redo system
[23:44:09] <qhong> Or maybe we can just provide one single around-command-hook, which combines the functionality of pre/post hooks and allows hook to cancel execution of a command
[23:51:22] <qhong> It maybe also useful for `redisplay' btw. I'm currently `redisplay'ing in a separate thread at fixed interval, but I could do it after every command instead. I'm not sure which one is better. The former will give more "real time" feedback on long-running command while the latter redisplay at well defined moments and won't show intermediate state
