[01:57:27] *** Joins: ahorek[m] (~ahorekmat@2001:470:69fc:105::30e2)
[04:49:14] *** Joins: subbu (~subbu@user/subbu)
[05:07:04] *** Quits: subbu (~subbu@user/subbu) (Quit: Leaving)
[05:50:46] *** Joins: Petruchio (~ray@dynamic-acs-24-154-115-19.zoominternet.net)
[05:54:39] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[06:15:37] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[19:50:40] *** Joins: distant[m] (~distantma@2001:470:69fc:105::1:d57f)
[19:51:03] <distant[m]> Hello, I'm a developer working on a project for Fabric Loader.
[19:51:36] <distant[m]> I'm working on a language adapter to allow for the creation of mods and utilities using JRuby.
[19:52:42] * distant[m] uploaded an image: (50KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/TguPwbsjKnTEMJZiJwCaLRYb/rubbie.png >
[19:52:43] <distant[m]> However, it seems that JRuby's really not fond of how it's configured.
[19:53:56] <distant[m]> How would I go about trying to fix this?
[19:56:37] <distant[m]> (I don't know if it matters or not, but JRuby is being shaded in Fabric Language Ruby.)
[19:58:28] <nilsding> hi, how do you currently load jruby?
[19:58:51] <distant[m]> Via the Fabric Language Ruby jar.
[19:58:51] <distant[m]> It loads embedded in a Fabric mod that plugs into Fabric as a language adapter.
[19:59:20] <nilsding> ah, so that one already exists?
[19:59:23] <distant[m]> (Similar to how an abandoned-yet-still-working Fabric Language Jython did it.)
[19:59:41] <distant[m]> nilsding: Yes, it is loaded.
[20:01:24] <distant[m]> I can provide logs if it'd help.
[20:01:52] <distant[m]> https://paste.ee/p/83Iw6
[20:08:41] <nilsding> hm, the logs aren't too helpful to me
[20:08:41] <nilsding> have you tried another way of embedding jruby yet, e.g. https://github.com/jruby/jruby/wiki/Embedding-with-JSR-223?  last time I tried (okay, that was five years ago, but still) this worked well for me
[20:08:41] <nilsding> without some code of what you're doing to initialise it I can only take wild guesses ^^'
[20:11:18] <distant[m]> > <@nilsding:rrerr.net> hm, the logs aren't too helpful to me... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/8ac38ed91006ce130d380901e53fb3476914c4e4)
[20:11:31] * distant[m] sent a ruby code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/59b7c00eebb39943bc4773d81165100ca8e1efd7
[20:13:32] <distant[m]> I'm still pretty new to Ruby, so I don't know how well-written it is, especially since it's not even reaching the point to where it'd crash because of this.
[20:14:28] <distant[m]> Anyway I mean prepackaging, not that embedding.
[20:14:43] <distant[m]> Like, providing JRuby inside of the Fabric Language Ruby jar.
[20:14:50] <distant[m]> Why did that send twice?
[20:18:57] <distant[m]> Anyway, the goal is to provide JRuby, as well as the language adapter, to Fabric as a mod.
[20:18:57] <distant[m]> (As that's the easiest way to provide things to Fabric Loader.)
[20:19:45] <distant[m]> O_O Webclient's broken...
[20:19:49] <distant[m]> I just refreshed, it's not sending twice.
[20:20:27] <distant[m]> The goal is to provide JRuby and the language adapter to Fabric as a mod, as that's the easiest way to do so.
[20:20:38] <nilsding> ah, so you embed your ruby in the jar itself, I think I get you now
[20:20:40] <distant[m]> I can force JRuby into libraries instead, if that breaks JRuby though...
[20:20:50] <nilsding> * your ruby code in the
[20:20:56] <distant[m]> (It's not ideal, as then it becomes more dependent on Minecraft.)
[20:22:06] <distant[m]> nilsding: That, and the entirety of JRuby.
[20:22:41] * distant[m] uploaded an image: (54KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/NBDKaFQSKxbjPkWKdntscUEP/jrubbie.png >
[20:23:35] <distant[m]> I'm making a utility that others can use to write mods in JRuby.
[20:24:14] <distant[m]> It launches by itself, but it crashes when it launches any mod with a Ruby entrypoint class (the point from which a mod launches).
[20:25:01] <distant[m]> It's blaming the crash on this:
[20:25:01] <distant[m]> > org.jruby.exceptions.NoMethodError: (NoMethodError) undefined method `load_defaults' for Gem::Specification:Class's blaming the crash on this:
[20:25:32] <distant[m]> Which is a property here:
[20:25:32] <distant[m]> > META-INF/jruby.home/lib/ruby/stdlib/rubygems.rb
[20:26:10] <distant[m]>  * It's blaming the crash on this:
[20:26:10] <distant[m]> > org.jruby.exceptions.NoMethodError: (NoMethodError) undefined method `load_defaults' for Gem::Specification:Class
[20:26:20] <distant[m]> WebClient stop being broken for 5 minutes please.
[20:29:21] *** Joins: subbu (~subbu@user/subbu)
[20:29:39] <distant[m]> Welcome.
[20:44:45] <distant[m]> ðŸ˜¢
[20:48:20] <byteit101[m]> Who is using ExampleMod class?
[20:48:30] <byteit101[m]> does ruby pass it in, or does java load it?
[20:48:50] <byteit101[m]> oh, you are using jrubyc?
[20:49:59] <byteit101[m]> If you are doing minecract, have a look at perugin
[20:50:38] <byteit101[m]> *purugin
[20:50:40] <byteit101[m]> https://github.com/enebo/Purugin
[20:52:18] <distant[m]> byteit101[m]: Fabric loads it in.
[20:52:50] <byteit101[m]> Compilied using jrubyc?
[20:53:32] <distant[m]> byteit101[m]: The LanguageAdapter class is, yes.
[20:54:38] <distant[m]> (I also did ExampleMod's entrypoint because Fabric Loader's not reading `.rb` files, but anything outside of entrypoint should be able to just remain as `.rb` files.)
[20:55:36] * distant[m] uploaded an image: (48KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/vfTtiIThAPgJrGxCZNpVgNdz/jrubyadapter.png >
[20:55:45] <byteit101[m]> > JRuby is being shaded in Fabric Language Ruby.
[20:55:45] <byteit101[m]> That... may require some fixup
[20:56:06] <distant[m]> JRuby doesn't like being shaded?
[20:56:55] <distant[m]> I was hoping that wasn't it...
[20:56:55] <distant[m]> I guess I could try to get Loader's current libs directory at runtime...
[20:57:02] <byteit101[m]> I'm not sure. I know that there used to be load path issues with jar vs filesystem. Changing the loadpath may or may not help, as lots of gems are present in some paths in the jruby jar
[20:57:27] <byteit101[m]> iirc if you crack open the jruby jar there is a folder calls gems in the root of the zip
[20:57:38] <byteit101[m]> no idea if that has to or has to not move
[20:58:10] <distant[m]> `gems` is in META-INF/jruby.home/lib/ruby
[20:58:48] <byteit101[m]> on a hunch, I'm going to say shading isn't going to help unless the shader knows how to re-write the ruby code in the stdlib to know the paths to some jruby classes
[20:58:59] <byteit101[m]> but again, not 100% sure. enebo or headius would know
[20:59:35] <byteit101[m]> maybe I'm thinking of warbler packaging
[21:05:44] <distant[m]> Oh, right.
[21:05:44] <distant[m]> Is there a working jruby Gradle plugin?
[21:07:03] <distant[m]> https://github.com/jruby-gradle/jruby-gradle-plugin/issues/432
[21:07:03] <distant[m]> The one I found had a issue with newer versions of Gradle (versions I need for Loom to work).
[21:07:57] <distant[m]> As much as I'd like to throw Gradle out of a 15 story window, I kinda need it for this...
[21:12:34] <distant[m]> I can *import* JRuby just fine, but Gradle doesn't seem to care much for `jrubyc`...
[21:57:15] <enebo[m]>            I am not sure how much help I can be in this problem but jrubyc uses an implicitly loaded jruby runtime which has a specific embedded configuration 
[21:57:43] <enebo[m]> I am not sure how much help I can be in this problem but jrubyc uses an implicitly loaded jruby runtime which has a specific embedded configuration 
[21:57:55] <enebo[m]> https://github.com/jruby/jruby/wiki/RedBridge
[21:58:23] <enebo[m]> This is the more flexible option for embedding but I don't actually know if jrubyc will bridge to this or not
[21:58:46] <enebo[m]> It gives a better mechanism over lifecycle of objects and I believe you can set the classloader used etc
[22:21:49] *** Quits: headius (~headius@2001:470:69fc:105::3027) (Ping timeout: 240 seconds)
[22:22:03] *** Joins: headius (~headius@2001:470:69fc:105::3027)
[22:30:21] <distant[m]> I'm actually not that great at Gradle dev... ;-;
[22:30:57] <distant[m]> I can do some ASM, and I've gotten Fabric Loader on all sorts of games, but I cannot for the life of me figure out how to make a Gradle plugin.
[22:39:05] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (Quit: Leaving.)
[22:45:50] <enebo[m]> I have not ever done more than run gradle a small number of times
[22:59:54] <distant[m]> Oof
[23:31:01] <distant[m]> Let's ignore Minecraft and Fabric...
[23:31:01] <distant[m]> Say I'm working on a perfectly normal and not edge case at all JRuby/Java project, and it refuses to start because of this.
[23:31:01] <distant[m]> > org.jruby.exceptions.NoMethodError: (NoMethodError) undefined method `load_defaults' for Gem::Specification:Classses
[23:31:30] <distant[m]>  * Let's ignore Minecraft and Fabric...
[23:31:30] <distant[m]> Say I'm working on a perfectly normal and not edge case at all JRuby/Java project, and it refuses to start because of this.
[23:31:30] <distant[m]> > org.jruby.exceptions.NoMethodError: (NoMethodError) undefined method `load_defaults' for Gem::Specification:Classses
[23:31:30] <distant[m]> > at RUBY.<main>(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/rubygems.rb:1354)r Gem::Specification:Classses
[23:31:56] <distant[m]> Is this a problem that can be fixed, or at least worked around?
[23:36:00] <distant[m]> Is it a known problem?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/10b986d3fccd3fc08564d9641531cb2f9dae10fc)
