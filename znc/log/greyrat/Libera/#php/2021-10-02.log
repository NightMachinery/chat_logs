[00:04:27] *** Quits: Simplar (~quassel@188.163.92.105) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:07:24] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:08:04] *** Quits: magla (~gelignite@55d4bce1.access.ecotel.net) (Quit: Stay safe!)
[00:10:43] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[00:13:23] *** Quits: genom (~g@37.214.30.134) (Remote host closed the connection)
[00:15:45] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:27:23] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[00:32:01] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[00:34:15] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[00:36:47] *** Quits: tex (~super@user/dix) (Ping timeout: 246 seconds)
[00:50:16] *** Quits: guido (~guido@host-79-23-86-147.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[01:12:31] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[01:15:43] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:15:57] *** Joins: Forza (~Forza@user/forza)
[01:16:06] *** Quits: Forza (~Forza@user/forza) (Client Quit)
[01:16:16] *** Joins: Forza (~Forza@user/forza)
[01:16:19] *** Quits: Forza (~Forza@user/forza) (Client Quit)
[01:23:07] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[01:25:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:28:16] *** Quits: junktext (~junktext@109.201.152.179) (Ping timeout: 252 seconds)
[01:29:29] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[01:39:56] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2.1)
[01:47:50] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:49:40] *** Quits: Junxter (~Junxter@222.95.221.25) (Ping timeout: 252 seconds)
[02:09:31] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[02:21:17] *** Joins: ferdna (~ferdna@user/ferdna)
[02:24:08] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260)
[02:33:08] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:35:48] *** Joins: Forza (~Forza@user/forza)
[02:38:14] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[02:51:50] *** Joins: semeion (~semeion@user/semeion)
[03:02:18] *** Quits: mactron (~mactron@APN-123-214-101-gprs.simobil.net) (Read error: Connection reset by peer)
[03:02:43] *** Joins: mactron (~mactron@apn-123-214-101-gprs.simobil.net)
[03:04:33] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:07:31] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[03:08:12] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[03:09:23] *** Quits: pmercado (~pmercado@186.107.35.198) (Ping timeout: 246 seconds)
[03:59:06] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:02:13] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[04:04:25] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[04:05:51] *** Joins: keypusher (keypusher@user/keypusher)
[04:07:28] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:10:28] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[04:12:26] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:15:25] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[04:22:47] *** Ellenor is now known as Reinhilde
[04:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:34:53] *** Joins: vlm (~vlm@user/vlm)
[04:43:19] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[04:44:01] *** Joins: WishBoy (~WishBoy@user/wishboy)
[04:49:21] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-583d-bbd0-681f-045b.res6.spectrum.com) (Quit: Leaving.)
[04:50:05] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-583d-bbd0-681f-045b.res6.spectrum.com)
[04:57:58] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[05:17:18] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:20:29] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[05:26:18] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:30:04] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[05:35:18] <puff> Evening.  I'm following this example and trying to figure out what the right values for the paths are https://www.thedevfiles.com/2014/08/simplifying-database-interactions-with-doctrine-dbal
[05:36:38] <puff> I had to manually install composer, so now I have a "vendor" subdirectory in my web directory, and vendor contains both a composer and doctrine subdirectory.  But the tutorial says to use the path to doctrine/common/ClassLoader and the only ClassLoader.php I find is in vendor/composer, not vendor/doctrine.
[05:51:31] <Blondie101010> you sound like you're mixing composer and non-composer installs
[05:51:54] <Blondie101010> be more specific on the error you get and show *your* code
[06:00:01] *** Parts: Alex123 (~Adium@2603-8000-f640-d482-583d-bbd0-681f-045b.res6.spectrum.com) ()
[06:04:08] <puff> Blondie101010: I'm not sure what you mean about mixing installs. I'm pretty much following the example above.
[06:05:07] <Blondie101010> where is your code?
[06:05:30] <Blondie101010> if you used composer, the only include you do is for the composer autoloader
[06:05:33] <puff> Blondie101010: I started by following the "Install Locally" instructions here: https://help.dreamhost.com/hc/en-us/articles/214899037-Installing-Composer-overview
[06:05:44] <Blondie101010> I asked for YOUR code
[06:05:50] <Blondie101010> I looked at that page
[06:05:52] <puff> Sure, what paste site?
[06:06:05] <Blondie101010> !+pastebin
[06:06:05] <php-bot> Submit your code to https://gist.github.com/ or https://paste.gg/ (both support multiple files in a single paste); https://3v4l.org/ (for an actually runnable code, if you actually need it); or any of the other hundred similar Pastebins and post the URL and a summary of your issue to the channel. Please don't flood by pasting code directly into ##php.
[06:07:33] <puff> https://gist.github.com/stevenjowens/507e25abf1a8b30e9bc92c1ee46f3842
[06:10:53] <puff> Blondie101010: I just added a comment with the output from using composer, etc, and a find command.
[06:14:02] <Blondie101010> ugh
[06:14:17] <Blondie101010> require "vendor/autoload.php";
[06:14:34] <Blondie101010> remove all that crap you did for the non composer version and whatever else you were thinking
[06:15:16] <puff> I'm not sure what "the non composer version is".  And all I was trying to do was recreate the example.
[06:15:23] <puff> Heck, I'm not even at querying the database yet.
[06:15:29] <Blondie101010> I mean delete lines 4-10
[06:15:48] <Blondie101010> and put the line I gave you instead
[06:15:53] <puff> Aha.
[06:15:54] <puff> okay.
[06:16:20] <Blondie101010> then remove the catch
[06:16:38] <Blondie101010> only *ever* catch an Exception if you can do something about it
[06:17:22] <puff> So more like this? https://gist.github.com/stevenjowens/cd2f316aace688c2a971bb03e2508ba3
[06:17:33] <Blondie101010> like using exceptions for form validation...  exception must not crash the app and instead send the proper response to the client
[06:17:34] <puff> Yeah, that's my policy. In this case I was trying to avoid having to tail the error log, but eh.
[06:18:01] <Blondie101010> remove the try catch
[06:18:13] <Blondie101010> not even related to tailing the error log
[06:18:43] <Blondie101010> only catch when you can do something useful with the event
[06:18:54] <puff> https://gist.github.com/stevenjowens/6d1813b2e9c28eb5cd1ffb94c10ca5d7
[06:19:00] <Blondie101010> otherwise it should bubble up to a level that knows how to deal with it
[06:19:06] <Blondie101010> last resort is report the error
[06:20:00] <puff> Same error.
[06:20:10] <Blondie101010> show it
[06:20:16] <puff> PHP Fatal error:  Uncaught Error: Class 'Doctrine\\Common\\ClassLoader' not found in /home/foo/bar.example.com/dbal_test.php:8
[06:21:24] <Blondie101010> hmmmmmmmmm
[06:21:28] <Blondie101010> show your composer.json
[06:21:30] <puff> Hm, maybe forard slashes?
[06:21:35] <Blondie101010> no
[06:21:56] <puff> Comment added.
[06:22:00] <puff> Same gist.
[06:22:34] <Blondie101010> ok I'll test it locally to compare I guess
[06:25:38] <Blondie101010> something doesn't make sense
[06:25:49] <Blondie101010> this code runs fine here
[06:26:16] <Blondie101010> the problem is probably related to composer
[06:26:40] <puff> Hm, maybe the way I installed composer is bad then.
[06:26:45] <puff> Dreamhost shared hosting.
[06:27:02] <Blondie101010> do you have shell access?
[06:27:24] <puff> Yeah.
[06:27:28] <Blondie101010> composer dump-autoload
[06:27:39] <Blondie101010> then try again
[06:28:08] <puff> ah, it ran without errors that time.
[06:28:12] <puff> Thanks. What just happened?
[06:28:35] <Blondie101010> not sure what you did wrong, but you messed up your composer command
[06:29:08] <Blondie101010> for me it was simply: composer require doctrine/dbal
[06:29:18] <Blondie101010> then I pasted your code in a test.php and it worked
[06:29:25] <puff> Odd.
[06:29:33] <Blondie101010> next time will be easier
[06:29:38] <puff> That's pretty much what I did.
[06:29:54] <puff> I wonder if it's something about how I had to install composer.
[06:30:07] <Blondie101010> composer does not require an installation
[06:30:07] <puff> Initially I did "php composer.phar require doctrine/dbal"
[06:30:15] <Blondie101010> sure that works
[06:30:34] <puff> That created a composer.json, and a vendor directory, at one point I rm -rf'd the vendor and then ran "php composer.phar install"
[06:30:57] <Blondie101010> you just described the mess you did
[06:31:01] <puff> Blondie101010: Composer requires an installationif it's not installed.
[06:31:29] <Blondie101010> no but anyways
[06:31:43] <Blondie101010> you caused the problem by messing around
[06:31:50] <puff> I'm not sure what you're saying here.  Dreamhost shell accounts don't come with composer already installed.
[06:32:00] <Blondie101010> I get that
[06:32:06] <Blondie101010> it's a single script
[06:32:11] <puff> Aas I said, I followed the dreamhost page's instructions to curl the installer and pipe it to php.
[06:32:16] <puff> https://help.dreamhost.com/hc/en-us/articles/214899037-Installing-Composer-overview
[06:33:07] <Blondie101010> again you're showing instructions, not what you did, which was OBVIOUSLY wrong
[06:33:16] <Blondie101010> there is no point is pursuing this
[06:33:33] <Blondie101010> you have it fixed now
[06:33:38] <puff> The instructions are what I did.
[06:33:41] <puff> Okay then.
[06:34:06] <Blondie101010> note that explaining a problem can be 50-1000 longer and more difficult
[06:34:12] <Blondie101010> than solving it
[06:34:49] <puff> Sometimes, but understanding the solution to the problem is how you avoid (or solve) it in the future.
[06:35:03] <Blondie101010> I gave you the command to fix composer's autoload
[06:35:06] <puff> If you like, I can pastebin the shell history.
[06:35:10] <puff> Yeah.
[06:35:19] <Blondie101010> because I suspected (from the start) that you had a composer issue
[06:35:26] <Blondie101010> but your code was a mess
[06:36:46] *** Quits: mactron (~mactron@apn-123-214-101-gprs.simobil.net) (Ping timeout: 252 seconds)
[06:37:05] <Blondie101010> it's a good thing you're using composer though...  at first I thought you wanted to avoid it
[06:37:48] <puff> No, just trying to figure it out.
[06:39:29] <puff> https://gist.github.com/stevenjowens/708ee93d538bb8a5452f018945b22dc3
[06:40:11] <puff> Blondie101010: Thanks for the help.
[06:41:35] <Blondie101010> np
[06:51:42] <Blondie101010> yeah, 50 lines more than necessary :)
[06:52:35] <puff> ?
[06:52:38] <puff> The history?
[06:52:55] <puff> I included the entire thing, so you'd know I wasn't leaving anything out.
[06:53:23] <Blondie101010> as I told you, I only did: composer require doctrine/dbal
[06:53:26] <Blondie101010> nothing else
[06:53:33] <puff> Yeah, and you had composer already installed.
[06:53:40] <Blondie101010> it doesn't matter
[06:53:49] <puff> All I did was run the installer (line 10), do EXACTLY what you just said (line 14).
[06:54:03] <Blondie101010> I could have done like you mentioned earlier: php composer.phar require doctrine/dbal
[06:54:06] <Blondie101010> you had that fine
[06:54:09] <Blondie101010> and then you messed it up
[06:54:15] <puff> Where?
[06:54:29] <Blondie101010> when you removed vendor and didn't know what you were doing
[06:54:43] <puff> When it didn't work, I tried removing the vendor directory (line 41) and re-running composer install (line 42).
[06:54:44] <Blondie101010> that part was done
[06:54:57] <Blondie101010> yes but what wasn't working was not that
[06:55:01] <puff> Aha.
[06:55:02] <Blondie101010> it was your code
[06:55:47] <puff> So the tutorial is wrong.
[06:56:10] <Blondie101010> no, my very first answer was probably on the nose
[06:56:37] <Blondie101010> you didn't follow their instructions attentively, but perhaps they might be made clearer
[06:57:06] <Blondie101010> they say "we suggest you use composer" and then give a long description of how to work without composer
[06:57:14] <Blondie101010> because the composer part is SIMPLE
[06:57:18] <puff> Aha, okay, that explains it.
[06:59:28] <puff> Hm, now I'm getting an error about a legacy API.  Maybe I should switch to a different tutorial.
[06:59:45] <Blondie101010> what's the error?
[07:00:35] <puff> PHP Fatal error:  Uncaught LogicException: Only fetch modes declared on Doctrine\\DBAL\\FetchMode are supported by legacy API.
[07:00:44] <Blondie101010> but that tutorial is indeed quite old (dated 2014)
[07:00:59] *** Joins: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:e5a5:5737:6a48:8bf8)
[07:01:38] <puff> On this line:  $rows = $sth->fetchAll(PDO::FETCH_KEY_PAIR);
[07:01:49] <puff> Yeah, time for a more up to date tutorial.
[07:02:59] <Blondie101010> https://github.com/doctrine/dbal/blob/3.1.x/src/Result.php#L309
[07:03:16] <Blondie101010> the supported options are therefore right above that
[07:03:32] <puff> Right, thanks.
[07:05:25] <puff> Guess I'll read this next https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/data-retrieval-and-manipulation.html#data-retrieval-and-manipulation
[07:06:29] <Blondie101010> seems like a good idea
[07:07:43] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[07:10:31] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[07:16:52] *** Joins: Robdgreat (~rob@user/robdgreat)
[07:24:14] *** Quits: mactron (~mactron@APN-123-214-101-gprs.simobil.net) (Ping timeout: 252 seconds)
[08:04:54] *** Joins: tex (~super@user/dix)
[08:10:39] *** Joins: guido (~guido@host-87-17-253-254.retail.telecomitalia.it)
[08:18:01] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[08:27:03] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Ping timeout: 268 seconds)
[08:27:29] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[09:07:10] *** Joins: stenno (~stenno@user/stenno)
[09:11:31] *** Joins: Rockwood (~Rocky@user/rocky)
[09:12:22] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[09:37:16] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[09:39:34] *** Joins: stenno (~stenno@user/stenno)
[09:42:17] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[09:43:31] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[09:50:29] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[09:56:45] *** Quits: iogue (~iogue@gateway/tor-sasl/iogue) (Quit: iogue)
[10:21:58] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[10:22:00] *** Joins: Rockwood_ (~Rocky@user/rocky)
[10:25:43] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[10:27:28] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[10:31:06] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 250 seconds)
[10:39:25] *** Joins: Rockwood_ (~Rocky@user/rocky)
[10:42:26] *** Quits: ___Rockwood__ (~Rocky@user/rocky) (Ping timeout: 260 seconds)
[10:47:43] *** Joins: Rockwood (~Rocky@user/rocky)
[10:49:54] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 260 seconds)
[10:52:48] *** Joins: Hiccup (cHoy@user/hiccup)
[11:04:59] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[11:12:10] *** Quits: Hiccup (cHoy@user/hiccup) (Remote host closed the connection)
[11:14:41] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[11:27:40] *** Joins: semeion (~semeion@user/semeion)
[11:41:15] *** Joins: ArchNoob (~maotora@user/archnoob)
[11:52:49] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:36:38] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[12:50:46] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 252 seconds)
[12:52:05] *** Quits: stenno (~stenno@user/stenno) (Quit: WeeChat 3.2)
[13:02:08] *** Joins: Warped (~Warped@user/warped)
[13:03:25] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Remote host closed the connection)
[13:06:56] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:21:41] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[13:26:04] *** Joins: ms49434 (~ms49434@user/ms49434)
[13:30:31] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[14:24:16] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[14:29:51] <deksar> For achieving best performance on overall PHP, in terms of hardware, specifically; CPU, what matters most? Higher CPU base clock frequency, or having as multiple cores as possible?
[14:31:23] <TinoDidriksen> Each PHP request/process is single-threaded.
[14:32:08] <TinoDidriksen> So multiple cores affects how many simultaneous requests the HTTP daemon can serve.
[14:32:44] <TinoDidriksen> In general, multiple cores matters more than frequency.
[14:36:31] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 252 seconds)
[14:40:38] <deksar> Thanks TinoDidriksen.
[14:40:42] <deksar> That was interesting, btw; https://haydenjames.io/php-performance-additional-cpu-cores-vs-faster-cpu-cores/
[14:45:12] *** Joins: mactron_ (~mactron@APN-123-214-101-gprs.simobil.net)
[14:46:52] <TinoDidriksen> 1-3 seconds per request on a 2 GHz core is very very slow.
[14:49:08] *** Quits: mactron (~mactron@APN-123-214-101-gprs.simobil.net) (Ping timeout: 252 seconds)
[14:54:44] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[14:58:53] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 264 seconds)
[15:14:40] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:24:20] *** Quits: mactron_ (~mactron@APN-123-214-101-gprs.simobil.net) (Ping timeout: 252 seconds)
[15:25:34] *** Joins: genom (~g@37.214.30.134)
[15:29:58] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[15:34:28] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[15:45:12] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e)
[16:13:44] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[16:15:44] <NCS_One> Hi
[16:16:11] <NCS_One> is there some function lik ltrim() but that only strips the first char?
[16:16:18] <NCS_One> s/lik/like
[16:18:31] <Blondie101010> when it takes longer to look for alternatives than just do it yourself, you're either overthinking it or being way too lazy
[16:20:02] <AllenJB> If you mean always strip the first char: substr; if you mean only strip the first char if it's one of a certain set of characters: preg_replace
[16:20:08] <Blondie101010> if (in_array($str[0], [' ', "\t"])) { $str = substr($str, 1); }
[16:20:44] *** Joins: Letzi (~Letzi@2a02:678:5d6:bb00:8927:f9ce:3b30:e023)
[16:22:20] <NCS_One> just checking if there was a better way
[16:22:39] <Blondie101010> and I commented precisely on that
[16:22:48] <NCS_One> maybe I'm doing this wrong
[16:23:57] <Blondie101010> if you keep doing that, you block yourself from doing stuff, and therefore are less efficient at your task, AND at learning new things
[16:24:25] <NCS_One> I'm using `DateTimeImmutable->setTime()` but the hours and minutes are strings like: '00', '24, ...
[16:24:39] <Blondie101010> you're thinking "if I can find a better way for that 2 minute thing, I'll become better", but in reality you will have wasted hours instead of putting those hours to good use
[16:25:01] <Blondie101010> and then you come up with another and another and another question instead of coding!
[16:25:16] <Blondie101010> focus on real problems instead
[16:26:17] <AllenJB> NCS_One: setTime() takes integers, so to turn '01' into 1 (int), you can just use (for example): (int) $hour
[16:27:55] <Blondie101010> AllenJB:  what's the point of that?
[16:28:25] <AllenJB> For one thing, if you're using strict types in recent versions of PHP, you have to cast strings to integers when calling setTime()
[16:30:06] <Blondie101010> you gave a solution to a problem they don't have and skipped the problem with what they said
[16:30:24] <Blondie101010> <NCS_One> I'm using `DateTimeImmutable->setTime()` but the hours and minutes are strings like: '00', '24, ...
[16:31:07] <Blondie101010> NCS_One:  may I suggest looking up "immutable" in the dictionary
[16:32:08] <NCS_One> AllenJB: (int) '00'   and (int) 'foo'    gives the same value
[16:32:13] <NCS_One> no validation
[16:32:17] <Blondie101010> of course
[16:32:36] <Blondie101010> he probably didn't expect you to be on your very first script
[16:33:00] <Blondie101010> casting is not validation
[16:33:04] <Blondie101010> in any form
[16:33:16] <NCS_One> I was using ltrim+filter_var
[16:33:28] <Blondie101010> why ltrim()?
[16:33:33] <Blondie101010> what's the input like?
[16:33:45] <NCS_One> '00', '01', ...
[16:33:55] <Blondie101010> why do you need to trim it?
[16:34:10] <NCS_One> setTime() accepts int
[16:34:49] <Blondie101010> what problem do you have when you don't trim it?
[16:35:37] <NCS_One> filter_var('01', FILTER_VALIDATE_INT);    return nothing
[16:35:39] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:37:07] <Blondie101010> it does NOT
[16:37:12] <Blondie101010> learn to var_dump()
[16:38:02] <NCS_One> Î'm doing: `php -r "echo filter_var('01', FILTER_VALIDATE_INT);"`
[16:38:19] <Blondie101010> ok and where are you using var_dump() in that line???
[16:38:48] <NCS_One> var_dump return false
[16:38:49] <Blondie101010> NCS_One: if you want to validate an hour, what matters the most?
[16:39:02] <Blondie101010> give the real useful conditions/requirements
[16:39:45] <biberu> NCS_One: filter var returns false on failure, not nothing, but when you attempt to echo that it'll be converted to an empty string, that's why it's important to use var_dump instead
[16:40:37] <Blondie101010> NCS_One:  my question is not a million dollar question and I'm asking you that to point you in the right direction
[16:40:50] <Blondie101010> so, what are the conditions for an 'hour' input?
[16:42:04] <NCS_One> from 1 to 24
[16:42:11] <NCS_One> sorry
[16:42:18] <NCS_One> from 0 to 23
[16:43:30] <Blondie101010> yes, and therefore that it's numeric
[16:44:51] <Blondie101010> there is one small tricky aspect about this validation, or rather about how PHP will parse a 0 prefixed number
[16:47:32] <NCS_One> that is?
[16:47:39] <Blondie101010> https://3v4l.org/6WBco
[16:48:12] <__adrian> [A
[16:48:13] <Blondie101010> `010 == "010"` should be true but that's just not how it was implemented
[16:48:58] <Blondie101010> so the implementation makes it easy to understand for a less advanced programmer
[16:49:09] <Blondie101010> but is inconsistant
[16:49:44] <Blondie101010> `1e1 == "1e1"` is proper
[16:54:10] <Blondie101010> NCS_One:  in the end, it means that your required validation in PHP is:  if (!is_numeric($input) || $input < 0 || $input > 23) { throw new Exception("invalid hour: $input"); }
[16:55:17] <Blondie101010> that was discovered / clarified through real unit testing (the steps I showed above)
[16:56:46] <NCS_One> Blondie101010: the hour if validated to be from '00' ... '23'
[16:57:02] <Blondie101010> test it and see (but yes)
[16:57:03] <NCS_One> and minute '00' ... '55'
[16:57:11] <Blondie101010> no 59?
[16:57:17] <NCS_One> no
[16:57:26] <Blondie101010> ok then sure
[16:57:38] <NCS_One> '00, '05', '10', ...
[16:58:05] <Blondie101010> how would you validate that it is a multiple of 5/
[16:58:06] <Blondie101010> ?
[16:58:25] <__adrian> filter_var is still the most direct + most proper validation
[16:58:37] <__adrian> is_numeric doesn't account for types
[16:59:23] <__adrian> ofc the better solution is to not send leading zeros so you don't have to trim them... but that's fine in the end
[16:59:50] <Blondie101010> you use what works for you
[16:59:56] <Blondie101010> and with what you have
[17:00:36] <Blondie101010> NCS_One:  so, how would you validate that it is a multiple of 5/
[17:00:44] <Blondie101010> (darn I could have fixed the ?)
[17:01:57] <__adrian> but then how would you prove your kb has an [↑] key?
[17:03:07] <NCS_One> Blondie101010: I'm validating it against an array of valid values ['00, '01', '02', ...]
[17:03:27] <Blondie101010> nooo
[17:03:32] <NCS_One> ['00', '05', '10, ...]   for the minutes
[17:03:39] <Blondie101010> that's why I'm doing the exercise with you
[17:03:59] <Blondie101010> how do you validate a number can be dividided by 5?
[17:04:24] <NCS_One> the remainer is 0
[17:04:32] <Blondie101010> yes, so do that: https://3v4l.org/1hYh1
[17:06:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:08:51] <Blondie101010> the difference is logical "abstraction" which is a skill you need to practice
[17:09:58] <Blondie101010> for simple cases like this one, the difference is minor, but as you develop the skill, it prepares you to do more advanced algos
[17:13:43] <Blondie101010> in case it's not clear, the point is not "good code vs bad code" but a hint on the mindset needed to become a better programmer
[17:15:12] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:15:33] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[17:16:41] <Blondie101010> and I would not like to see the line where you validate the day :)
[17:17:22] <Blondie101010> s/day/year/
[17:17:56] <Blondie101010> (don't know why I was thinking in Julian)
[17:18:53] <znf> shouldn't pm.process_idle_timeout=10s terminate the fpm children after a 10s idle time?
[17:19:59] <Blondie101010> that's the type of question that should be looked up in the manual: https://www.php.net/manual/en/install.fpm.configuration.php
[17:20:18] <Blondie101010> the only condition is there
[17:21:04] *** Joins: brvadiraj46 (~vadiraj@103.93.197.140)
[17:21:33] <znf> yeah, I've read that already, hence why I'm wonder why I'm looking at the number of fpm processes not dropping as fast as they should be, by any logical means
[17:22:52] <Blondie101010> is your pm static, ondemand, or dynamic?
[17:23:02] <znf> it's ondemand, as that's the only thing it applies to
[17:23:10] <Blondie101010> wanted to confirm
[17:23:29] <Blondie101010> ok and what tells you fpm doesn't do what you want?
[17:23:37] <znf> idle processes:       1648
[17:23:37] <znf> active processes:     4946
[17:23:37] <znf> total processes:      6594
[17:23:53] <znf> that :)
[17:23:55] <Blondie101010> processes of what?
[17:24:13] <Blondie101010> and that doesn't show how long each has been idle
[17:24:36] <Blondie101010> so even if they were all fpm workers, it might still be valid and following the config
[17:24:48] <Blondie101010> that check is not useful
[17:25:28] <znf> what about this? https://pastie.dev/bnqZMr.yaml
[17:25:52] *** Quits: brvadiraj46 (~vadiraj@103.93.197.140) (Quit: Leaving)
[17:26:05] <znf> I'm not sure how else I could actually check the life-cycle of the worker
[17:26:11] <Blondie101010> are you calling sleep?
[17:26:26] *** Joins: brvadiraj46 (~vadiraj@103.93.197.140)
[17:26:45] <znf> the app uses usleep() while it's serving a request
[17:26:50] *** Quits: brvadiraj46 (~vadiraj@103.93.197.140) (Client Quit)
[17:27:03] <Blondie101010> consider that a hint on what to look for
[17:27:25] <Blondie101010> sleep doesn't use processing time
[17:27:33] *** Joins: brvadiraj46 (~vadiraj@103.93.197.140)
[17:27:37] <znf> but shouldn't the fpm status show that the specific worker is actually handling a request in that case?
[17:28:46] <Blondie101010> that is solely for reporting, and probably just does the same as `ps` to get the information
[17:29:22] <znf> ah, I see
[17:29:51] <znf> indeed, stracing a random pig does show it getting a hit every now and then for a split second
[17:30:11] <znf> pid*
[17:30:24] <Blondie101010> your numbers, though larger than most, are not abnormal for a 10s idle timeout
[17:30:38] <Blondie101010> you have 4946 active requests
[17:31:06] <Blondie101010> each of those will take 10s to disappear once it's done
[17:31:10] <brvadiraj46> does php specify the charset in the returned output
[17:31:33] <brvadiraj46> how can i see the full returned output from php
[17:31:37] <brvadiraj46> any tools?
[17:31:39] <Blondie101010> brvadiraj46:  that is your code's job, not the language
[17:31:54] <Blondie101010> eyes mainly!
[17:31:59] <Blondie101010> and I'm dead serious!
[17:32:14] <znf> yeah, each user online = 1 fpm process, basically, but the workload is tiny (think 0.10% CPU and ~8MB ram each), so the numbers do look crazy at first glance
[17:32:25] <brvadiraj46> oh ok thx
[17:32:26] <Blondie101010> php outputs what you tell it to output, and if you want to see it, your run it (and look at the raw output)
[17:32:44] <Blondie101010> znf:  slow operations like DB maybe?
[17:32:52] <brvadiraj46> in firefox how can i see raw output?
[17:33:13] <Blondie101010> most browsers, you right click in the windows and look for view source or similar
[17:33:23] <brvadiraj46> ok cool
[17:34:31] <znf> Blondie101010, no, it's mostly reading data from ramdisk -- a split video segment (HLS); so most time (the usleep()) is waiting for a new segment to be available, when it becomes available, reads from ramdisk, sends it down the pipe, then goes back to waiting
[17:34:47] <Blondie101010> ah ok, that does fit
[17:34:55] <brvadiraj46> I mean the headers and meta data
[17:35:18] <Blondie101010> that's in the browser's dev tools
[17:36:01] <znf> yup, most of the workers are long lived, like:  took:5707.282s mem:31mb cpu:0.08% status:200 so it's idle-town :)
[17:36:49] <znf> just keep in mind that most Headers you see are added by your web-server (nginx, apache etc.) brvadiraj46
[17:37:07] <znf> unless you actually send them with header()
[17:37:49] <znf> also, obviously, you will not see any header() output when running the script via CLI, for... obvious reasons :)
[17:38:55] <brvadiraj46> i am trying to see in inspector
[17:39:01] <brvadiraj46> in browser
[17:39:33] <brvadiraj46> but i think http headers can't be seen there also
[17:39:49] <Blondie101010> sure they can, but I can't go in Firefox right now
[17:40:10] <znf> look at the Network tab
[17:40:13] <znf> and inspect the requests
[17:40:23] <brvadiraj46> oh yeah znf
[17:40:24] <znf> Click on each, individually
[17:41:06] <brvadiraj46> who adds this charset?
[17:41:13] <brvadiraj46> UTF-8 etc
[17:41:16] <brvadiraj46> apache??
[17:41:23] <Blondie101010> probably
[17:41:34] <Blondie101010> and that is a sane choice
[17:41:42] <znf> You'll have to be more specific as to which header you're talking about, but generally so
[17:42:59] <znf> I don't recall the web server just randomly adding a character set header
[17:44:43] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[17:45:08] <znf> ah, nevermind -- if you output text/html, a charset is also provideed
[17:45:22] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (Remote host closed the connection)
[17:46:33] <znf> brvadiraj46, https://www.php.net/manual/en/ini.core.php#ini.default-mimetype
[17:46:41] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[17:49:16] <znf> tl;dr - the charset appended to content-type is the one defined by default_charset, which is UTF-8
[17:51:14] <brvadiraj46> oh cool
[17:51:48] <znf> there are rarely any good reasons to ever stray away from UTF-8, just a warning :)
[18:22:55] *** Quits: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:e5a5:5737:6a48:8bf8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:34:09] *** Joins: stenno (~stenno@user/stenno)
[18:34:55] *** Quits: Ducki (~ducki@user/ducki) (Remote host closed the connection)
[18:37:20] *** Quits: bytestream (~bytestrea@user/bytestream) (Remote host closed the connection)
[18:37:23] *** Joins: Ducki (~ducki@user/ducki)
[18:50:01] *** Joins: Rockwood_ (~Rocky@user/rocky)
[19:11:32] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e) (Remote host closed the connection)
[19:26:15] *** Rockwood_ is now known as Rockwood
[19:44:53] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:47:10] *** Quits: brvadiraj46 (~vadiraj@103.93.197.140) (Ping timeout: 252 seconds)
[20:29:38] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[20:44:56] *** Joins: ferdna (~ferdna@user/ferdna)
[21:22:48] *** Joins: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be)
[22:05:15] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:13:40] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[22:23:49] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[22:36:41] *** Quits: Letzi (~Letzi@2a02:678:5d6:bb00:8927:f9ce:3b30:e023) (Ping timeout: 252 seconds)
[22:41:46] *** Joins: WarpedAI (~Warped@user/warped)
[22:43:40] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[22:43:52] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 250 seconds)
[22:55:17] *** Joins: magla (~gelignite@55d46010.access.ecotel.net)
[22:59:23] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:9027:b6b5:d361:d3bb)
[23:37:21] *** Quits: magla (~gelignite@55d46010.access.ecotel.net) (Quit: Stay safe!)
[23:52:27] *** Quits: guido (~guido@host-87-17-253-254.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[23:59:52] *** Quits: genom (~g@37.214.30.134) (Remote host closed the connection)
