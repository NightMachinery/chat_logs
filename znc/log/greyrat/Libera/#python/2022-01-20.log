[00:00:00] <SnoopJ> nceric, try: `py -3.9 -c "import sys; print(sys.executable)"`
[00:00:17] *** Joins: dre (~dre@2001:8003:c932:c301:154c:d733:7b9b:7bcb)
[00:00:38] *** Joins: ano (~ano@user/ano)
[00:02:19] <nceric> Cool, that works
[00:02:40] <nceric> now I'll try to get it working under 3.10 otherwise I just downloaded 1.7G for nothing.  I think I may need to reboot
[00:02:47] * nceric will brb
[00:02:52] *** Quits: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (Quit: Client closed)
[00:03:00] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[00:03:20] <SnoopJ> for some value of 'nothing'
[00:03:48] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[00:03:57] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Ping timeout: 240 seconds)
[00:04:16] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[00:05:02] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[00:05:15] *** Joins: you (~ShmoSeph@173-167-220-193-ip-static.hfc.comcastbusiness.net)
[00:06:15] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:07:23] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:07:44] *** Joins: mickey8 (~user@user/mickey)
[00:07:58] *** Quits: mingdao_ (~mingdao@107-146-172-064.res.spectrum.com) (Quit: leaving)
[00:08:08] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[00:10:33] *** Quits: teut (~teut@2401:4900:1c68:6b85:14d9:4273:1b4:ada6) (Quit: Client closed)
[00:11:00] *** Joins: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[00:11:13] <nceric> cool... seems to work now w/ either 3.9 or 3.10
[00:11:25] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Remote host closed the connection)
[00:11:39] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[00:12:01] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[00:12:15] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[00:12:42] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[00:13:49] *** trench_ is now known as trench
[00:14:59] *** Quits: bencd (~bencd@142.59.168.97) (Quit: WeeChat 3.4)
[00:15:11] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:16:10] *** Quits: brookesy66 (~will@118.208.120.76) (Quit: WeeChat 3.4)
[00:16:31] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[00:16:36] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[00:17:00] *** Joins: matsaman (~matsaman@user/matsaman)
[00:17:28] *** Joins: marcello42 (~mp@2001:1a81:13ee:e600:7579:d375:3cfe:86fd)
[00:18:30] *** Quits: you (~ShmoSeph@173-167-220-193-ip-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[00:18:34] *** Joins: summersault (~summersau@179.221.251.36)
[00:20:19] *** Parts: Tha_14 (~Tha_14@user/tha-14/x-4134127) ()
[00:20:40] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[00:21:04] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[00:21:47] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[00:22:05] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[00:22:16] *** Joins: ravan__ (~ravan@user/ravan)
[00:22:43] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[00:22:51] *** Quits: control (~v1@user/control) (Quit: leaving)
[00:22:57] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[00:23:11] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:bdbb:8d27:443c:f2d2)
[00:23:12] <jiffe1> what's the proper way to handle a try/except block in another except block?  If an exception is thrown in the second block the result is output indicating both exceptions
[00:23:17] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:23:26] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[00:23:48] <jiffe1> do I basically need to move the second try/except logic outside the first except block ?
[00:23:55] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:24:00] <meejah> jiffe1: can you show us code?
[00:24:26] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[00:24:32] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 240 seconds)
[00:25:12] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:25:13] *** Quits: xx (~xx@user/xx) (Ping timeout: 268 seconds)
[00:26:07] <jiffe1> meejah: https://bpa.st/QMKQ
[00:27:46] <BrenBarn> so what do you want to happen?
[00:29:32] <jiffe1> maybe this is just a default exception handling artifact, my intent is to just have the last thrown exception displayed
[00:30:12] *** Joins: summersault (~summersau@179.221.251.36)
[00:30:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:30:30] <BrenBarn> you can try to add `from None` to your raise line
[00:32:07] <jiffe1> oh interesting, I like that, thanks
[00:32:20] <BrenBarn> hmmm, I guess maybe that doesn't work
[00:32:51] <BrenBarn> oh yes it does I just made a typo in checking it
[00:33:13] <BrenBarn> there is some explanation here: https://www.python.org/dev/peps/pep-3134/#implicit-exception-chaining
[00:33:40] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:33:42] <BrenBarn> but basically when an exception is raised a "context" is noted and if another exception is raised while that context is active, then the second one is chained to the first
[00:33:51] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:34:04] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9841-fdb7-086b-ec04.res6.spectrum.com) (Remote host closed the connection)
[00:34:17] <BrenBarn> and the context isn't cleared until the end of the except block so if you have another try in there it inherits the context
[00:34:50] *** Joins: summersault (~summersau@179.221.251.36)
[00:35:07] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[00:36:12] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[00:38:03] *** Joins: skraito (~skraito@user/skraito)
[00:38:06] * skraito let's go to https://ircnow.org , For Oday Chat :) . do you like Our new os prince ? irc.ircnow.org channel #0day or #0dev
[00:38:15] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[00:38:55] *** Joins: punk (~pnk@user/punk)
[00:39:55] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:40:08] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:41:08] *** Quits: parv (~quass@user/parv) (Quit: parv)
[00:42:14] *** Joins: foobaz212 (~foobaz212@213.205.198.53)
[00:42:23] *** Joins: vicfred (~vicfred@user/vicfred)
[00:42:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:31ff:a70b:b24e:509e) (Quit: Client closed)
[00:42:53] *** Quits: foobaz212 (~foobaz212@213.205.198.53) (Client Quit)
[00:43:02] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[00:48:27] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:48:58] *** Quits: marcello42 (~mp@2001:1a81:13ee:e600:7579:d375:3cfe:86fd) (Read error: Connection reset by peer)
[00:49:06] <Swayze> :/
[00:49:10] <Swayze> really
[00:49:10] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[00:49:29] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:5172:391f:376e:2f53)
[00:52:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[00:52:58] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[00:53:00] <jiffe1> BrenBarn: makes sense
[00:54:06] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:54:15] *** Joins: somazero (~somazero@2600:8805:b00:10::19b5)
[00:55:04] *** Joins: fikran (~fikran@user/fikran)
[00:56:22] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[00:56:22] *** Quits: dreamon (~dreamon@pd9503284.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:57:35] *** Quits: upsala (~zcb@185.209.196.170) (Quit: WeeChat 3.4)
[00:57:36] *** Quits: zrsm (~mrrobot@173.171.254.123) (Quit: BitchX-1.2.1-419-geaf6456 -- just do it.)
[01:00:12] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Quit: Textual IRC Client: www.textualapp.com)
[01:05:39] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[01:06:38] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:07:53] <ThePhilgrim> Hi, I'm usually not writing docstrings in my code, and I'm now trying to get better at doing this. I've been reading some docstring styleguides (for example, Google's). They recommend describing all parameters & returns, including their types. However, I've got mypy type annotations in all my functions/methods etc. Would it then be redundant to write this info in docstrings as well?
[01:08:14] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[01:08:18] *** Joins: nomad1 (~nomad@user/spacenomad)
[01:08:18] <bjs> ThePhilgrim: yes it would be redundant,  those styles were invented a very long time before we got type annotations
[01:09:23] *** Joins: smotchkkiss (~smotchkki@91.193.4.104)
[01:09:25] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[01:09:36] <matsaman> I also wouldn't ordinarily look to Google as an example of doing things the best way
[01:09:38] *** Quits: ouestbillie (~gallup@45.83.220.194) (Quit: leaving)
[01:09:52] *** Joins: ouestbillie (~gallup@45.83.220.194)
[01:10:24] <ThePhilgrim> Okay, but I was under the impression that docstrings should allow somebody to understand the code without actually reading the code. If the types are only in the annotations, the developer has to read the code
[01:10:30] *** Joins: bluedust_ (~bluedust@185.248.85.41)
[01:10:43] <ThePhilgrim> Do you guys know any other good resource for what to include in a docstring?
[01:10:52] *** Joins: marcello42 (~mp@2001:1a81:13ee:e600:7579:d375:3cfe:86fd)
[01:11:29] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:6124:8097:4737:3d31) (Quit: Textual IRC Client: www.textualapp.com)
[01:12:37] *** Quits: jamea (~jamea@189.231.32.223) (Ping timeout: 256 seconds)
[01:12:37] *** Quits: bluedust (~bluedust@59.89.209.234) (Ping timeout: 240 seconds)
[01:12:37] <grym> docstrings are certainly in the code like annotations are, no?
[01:12:49] *** Joins: jamea (~jamea@201.77.110.253)
[01:13:41] <SnoopJ> ThePhilgrim, numpydoc is good
[01:14:00] <ThePhilgrim> SnoopJ: Okay, I'll do a search for that!
[01:14:14] <grym> ThePhilgrim: https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html#type-annotations  has some discussion as well
[01:14:36] <grym> ThePhilgrim: since a large use case for docstrings is "introspect and generate sweet readthedocs webpages"
[01:15:23] <grym> which really means "run sphinx on your code"
[01:15:38] *** Quits: jay-m126 (~jay-m@154.72.162.87) (Ping timeout: 256 seconds)
[01:17:07] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[01:17:37] *** Quits: bluedust_ (~bluedust@185.248.85.41) (Ping timeout: 240 seconds)
[01:17:45] <ThePhilgrim> Thanks grym
[01:17:48] *** Quits: Barones (~Barones@189.50.80.77) (Quit: Leaving)
[01:17:50] <matsaman> grym: =)
[01:18:59] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:19:05] *** Joins: wovixo (~wovixo@128.104.205.49)
[01:19:35] *** Joins: goldcrest (~goldcrest@212.252.83.164)
[01:20:31] *** Joins: crashrep (~crashrep@user/crashrep)
[01:23:44] <ThePhilgrim> I also read that the docstring for the whole module/file should include a short summary of each class/function in the file, and that all Class docstrings should contain a summary of each method in that class. Would you say that is redundant too?
[01:24:08] *** Joins: bluedust (~bluedust@static-198-54-131-105.cust.tzulo.com)
[01:24:31] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:31ff:a70b:b24e:509e)
[01:24:37] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 240 seconds)
[01:24:47] <grym> ThePhilgrim: for me, things like that are answered by reading something like attr's docs and seeing how they do it.  "what would i want to read on a docs website? and how do i get it in there?"
[01:24:50] <SnoopJ> Summarizing the methods in the class docstring is definitely not mandatory, and may even be a terrible idea
[01:24:57] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Read error: Connection reset by peer)
[01:25:14] <grym> it's a great place to forget to update when you refactor :(
[01:25:39] <ssbr> ThePhilgrim: Usually I'd advocate for the module docstring to give an overview of the module and how its pieces integrate with each other. For example, copy-pastable code that shows how to use the module, that sort of thing. You don't need to religiously list out everything.
[01:25:58] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:26:07] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:26:27] <ThePhilgrim> Bleh, this is why I avoid documenting my code. It's so hard to understand what should be included and what is redundant
[01:26:45] <grym> ThePhilgrim: who are your projected documentation readers
[01:26:49] <ssbr> ThePhilgrim: what should be included is what you would wish were included if you were reading this.
[01:27:04] <grym> who's your audience.  there, much terser
[01:27:09] <ssbr> yeah, that
[01:27:25] <ssbr> It's just the same as any other technical writing task, you write for your audience.
[01:27:40] <ssbr> anything that serves the audience is a good idea, and anything that hurts the audience is a bad idea
[01:27:53] *** Joins: bluedust_ (~bluedust@103.160.233.171)
[01:28:05] <ThePhilgrim> Well, it's mostly hobby projects that nobody reads anyways :P But as a beginner, I just realize that I wish other people would explain their code (since reading code as a beginner is really difficult)
[01:28:33] <ThePhilgrim> So I would like to give a clear overview of my project
[01:28:41] <ssbr> ThePhilgrim: FWIW, a beginner is probably a poor choice of target audience, as they need too much explained. Usually want to pretend to target people who are familiar with the language and its conventions
[01:28:56] <ssbr> unless, of course, your library is aimed specifically at beginners, in which case that's what it is
[01:29:50] <ssbr> For example, a beginner will need explained to them things like "the foo parameter is optional" in `def f(foo=1): ...`, but this is usually left to automated tooling to spell out.
[01:29:51] <ThePhilgrim> ssbr: Okay, well..it's not aimed specifically at beginners so. I guess I'll try to include what I believe is important info
[01:30:12] <ThePhilgrim> Yeah, i'm not talking about that detailed help for beginners
[01:30:35] <ThePhilgrim> But I remember how confused I was the first time I had to git grep / ctrl + f around a rather large project
[01:30:51] <ThePhilgrim> trying to understand how different classes / functions work together
[01:31:38] *** Quits: bluedust (~bluedust@static-198-54-131-105.cust.tzulo.com) (Ping timeout: 250 seconds)
[01:31:50] *** Quits: jamiejackson (~jamiejack@107.116.83.38) (Quit: Connection closed)
[01:31:59] <SnoopJ> ThePhilgrim, it helps to stop thinking of documentation as a thing that is either there or not-there. It's about communicating some amount of information to whoever is reading it
[01:32:08] <grym> ThePhilgrim: i know of no other thing that has ever worked for me than "drop a breakpoint in the {entry point, unit test of interest, ...}  and step through", if i really want to get inside the codebase and i intend on changing it
[01:32:22] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[01:32:37] <grym> ^ docs _help_ there, but i don't get it until i see variables i can poke at during execution
[01:32:38] <SnoopJ> i.e. I would love to have a complete numpydoc for every function that I see, but if I can't have that, a one-liner explaining the purpose of a function is better than nothing at all
[01:33:13] <ssbr> grym: I usually do that, except I execute it in the virtual machine in my brain (I *read* starting at some entry point)
[01:33:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[01:33:19] <ssbr> it's a really good way to understand anything
[01:33:24] *** Quits: bluedust_ (~bluedust@103.160.233.171) (Remote host closed the connection)
[01:33:32] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[01:33:37] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e460041ce17e23aff7435.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[01:33:42] <ThePhilgrim> Okay, I'll start writing some stuff and see where it takes me. :)
[01:33:45] <ThePhilgrim> Thanks guys
[01:33:57] <ssbr> I think I'd probably enjoy using a reversible debugger this way though. It'd be nice to go both backwards and forwards to determine how state evolved
[01:34:20] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[01:34:43] *** Parts: octav1a (~quassel@173.195.145.98) (~Called off to Sentinal the Sand Temple~)
[01:34:54] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:35:53] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:35:57] *** Joins: vlm (~vlm@user/vlm)
[01:36:19] <johnkeats6> ThePhilgrim, the ideal is to have your code so clear that you don't even need to explain it
[01:36:44] <ssbr> johnkeats6: even if that were so, users shouldn't even be reading the implementation code to begin with.
[01:36:58] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[01:37:03] <ssbr> so that's good advice for comments, but not for user-facing documentation (including docstrings)
[01:37:04] <ThePhilgrim> johnkeats6: Yeah, I get this, but I guess that mostly concerns comments
[01:37:23] <SnoopJ> it concerns both
[01:37:53] <SnoopJ> code should be the authority on "what," documentation is the authority on "why" and *maybe* "how" in complex cases
[01:38:08] <ssbr> not really.
[01:38:10] <grym> ssbr: i can kind of do that, but it took a long time.  and i'm lazy and i'd rather make F10 do the work :)
[01:38:30] <SnoopJ> ssbr, oh, well, my opinion stands thoroughly rebuffed
[01:38:40] *** Joins: Naan (~Naan@user/naan)
[01:38:50] <toma> grym: what does "make F10 do the work"?
[01:38:54] <AhmedAmerican> am trying to iterate over 2 file under `async for` but looks like the first iteration is only happen. is `async for` should loop only over 1 pattern ?
[01:38:54] <ssbr> grym: the problem is the -- ah, it's very easy to say "I understand it" looking at what happened after the fact, but that doesn't guarantee that you can predict what would happen in advance.
[01:39:06] <grym> toma: oh, F10 is "step" in my debugger :)
[01:39:06] <ssbr> SnoopJ: Sorry about that.
[01:39:14] <toma> grym: thanks
[01:39:32] <ssbr> SnoopJ: I view documentation as the authority on "how to use it", not why code works the way it does, or how it does what it does -- users don't need to know that.
[01:39:43] <grym> toma: so what i mean is that i will sit there and whack F10 and watch the nice green highlighted line go tic tic tic through the code and now i saw how the needle threads
[01:39:43] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:26a9:5d61:afe9:66b1) (Quit: Leaving)
[01:39:53] <ssbr> but in the kinds of codebases where they do, or for developer-oriented documentation, you're right.
[01:40:08] <SnoopJ> ssbr, if you had framed it in terms of your perspective instead of dismissing mine, I'd feel differently about it
[01:40:27] <ssbr> SnoopJ: my bad
[01:40:32] <SnoopJ> ThePhilgrim, there was a good talk about documentation (for devs) at PyCon https://www.youtube.com/watch?v=eWaWvUhpseM
[01:40:48] <AhmedAmerican> https://bpa.st/BSSQ @grym
[01:41:19] <ThePhilgrim> SnoopJ: Yay, awesome!
[01:41:20] <ThePhilgrim> thanks
[01:41:34] <SnoopJ> the tl;dw of the talk is https://diataxis.fr/ with the exception of one change the presenter thinks that framework needs
[01:41:42] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[01:41:57] <grym> AhmedAmerican: why did you ping me?
[01:42:06] <AhmedAmerican> ^ sorry wrong ping
[01:42:07] <SnoopJ> (splitting documentation along two axes: practical-theoretical, study-work)
[01:42:42] <grym> AhmedAmerican: ok cool because i'm crap at async :D
[01:42:53] <AhmedAmerican> lol
[01:42:56] <SnoopJ> but at the end of the day, docs are 'just' another form of communication; work out who your audience is and what needs to be communicated to them, and go from there
[01:44:21] *** Quits: marcello42 (~mp@2001:1a81:13ee:e600:7579:d375:3cfe:86fd) (Read error: Connection reset by peer)
[01:44:36] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[01:45:35] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10f2:194d:cb9:cc5e:e1e1:b058)
[01:47:41] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Remote host closed the connection)
[01:48:00] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:48:13] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:48:58] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:48:59] <hodapp> what is the term for libraries with APIs that can be used like Foo(...).do_thing(...).do_other_thing(...)...?
[01:49:21] <hodapp> i.e. with calls that can be chained thus
[01:49:27] <SnoopJ> hodapp, "method chaining," usually
[01:49:50] <hodapp> hrm, I thought there was some other shorter term they used... was it 'fluent' or something like that?
[01:50:03] <grym> fluent is the term i know
[01:50:05] <SnoopJ> probably. people love to invent more obtuse jargon
[01:50:16] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[01:50:19] <ssbr> hodapp: fluent and, if it's used to construct an object with a .build() (or similar) call at the very end, "builder pattern"
[01:50:32] <ssbr> it's not very useful in Python compared to e.g. Java
[01:50:36] <hodapp> yeah, part of why I don't know the term is because in coming from Haskell-land it was such a common thing that it didn't even have a term
[01:50:49] <grym> i first came across fluent in the context of .NET's entity framework ORM-thingie
[01:51:08] * SnoopJ is mostly familiar with it from d3.js
[01:51:32] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[01:52:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[01:53:36] *** Quits: k5tux (~k5tux@67.6.92.143) (Ping timeout: 256 seconds)
[01:54:00] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:55:07] *** Quits: strugee (~strugee@ool-4575d6b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[01:55:07] *** Joins: k5tux (~k5tux@67.6.92.143)
[01:55:49] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:56:06] *** Quits: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[01:56:14] <grym> i don't mind operating on strings and Paths this way, but it's not the be-all and end-all of styles in python either
[01:56:19] *** Joins: aod (~a@190-203-240-94.dyn.dsl.cantv.net)
[01:56:38] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[01:56:52] <aod> hi loles. happy birday and newyear to all.
[01:56:55] <grym> "foo\nbar".upper().replace(...).strip().splitlines() or whatever
[01:56:56] *** Joins: aphysically (~aphysical@user/aphysically)
[01:57:29] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:58:33] <johnkeats6> that shows up a lot in pyspark
[01:58:48] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[01:58:53] <johnkeats6> when(condition1, bla1).when(condition2, bla2)...
[01:59:03] <SnoopJ> I've never met a method-chaining API that didn't have the "how much is too much?" slippery slope problem
[01:59:11] <grym> see also, computing
[01:59:40] <aod> how do i make a file from 1 to 10 with not the number 5 with a for loop, if is the best way to do it?
[02:00:11] <aod> i though will be very easy but i don't know how to do it.
[02:00:37] <toma> aod: do you mean just for loops or can you use an if statement to look for the 5?
[02:01:04] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:01:14] <aod> toma did you try it, because result i very messed up
[02:01:26] *** Quits: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (Quit: Client closed)
[02:01:31] <toma> aod: I'm not 100 on what you're asking.
[02:01:42] <toma> aod: can you post a link to what you tried?
[02:01:57] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[02:02:03] <toma> aod: use https://bpa.st/+python
[02:02:08] <apocalyptech> Probably difficult to say what the "best" way is for such an abstract problem.  "1\n2\n3\n4\n6\n7\n8\n9\n10\n" is an "efficient" string containing the numbers from 1 to 10, minus 5, but that's probably not what you're looking for.  :)
[02:02:46] <aod> yes, i have a file with `5` on it, and i want to make a `1 2 3 4 6 7 8 9`
[02:02:46] *** Quits: mantiX (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:03:01] <SnoopJ> `>>> Path("a:b").write_text("hello")`  fails on win32 with FileNotFoundError because ':' is forbidden in filenames (reserved for streams?), right?
[02:03:03] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10f2:194d:cb9:cc5e:e1e1:b058) (Read error: Network is unreachable)
[02:03:23] *** Joins: marcello42 (~mp@2001:1a81:13ee:e600:7579:d375:3cfe:86fd)
[02:03:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:04:11] <grym> https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file#naming-conventions  i think this is the full list.  Colons are verboten
[02:04:44] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[02:05:15] *** Joins: strugee (~strugee@ool-4575d6b1.dyn.optonline.net)
[02:05:23] <The-Compiler> SnoopJ: that's indeed what seems to happen for me on Windows 11
[02:05:27] <SnoopJ> grym, my question is about why the Python error occurs
[02:05:32] <SnoopJ> not whether or not the character is allowed
[02:05:46] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[02:05:55] <SnoopJ> (concerningly, `touch "a:b"` seems to be meaningful and I have no idea what it's done)
[02:07:20] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:07:28] <SnoopJ> I would kinda expect OSError, although that's actually what I see in the code I'm testing, I'm not really sure what the distinction is
[02:07:51] <SnoopJ> Specifically OSError wrapped around Errno 22, "Invalid argument"
[02:08:03] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[02:08:35] <aod> toma https://bpa.st/IRHQ
[02:09:27] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[02:09:52] *** Quits: marcello42 (~mp@2001:1a81:13ee:e600:7579:d375:3cfe:86fd) (Read error: Connection reset by peer)
[02:10:02] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:10:05] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Client Quit)
[02:10:33] <BrenBarn> SnoopJ I wonder if the colon is making it interpret the a as a drive letter?
[02:10:40] <BrenBarn> I get a different error with "a<b" as the filename
[02:10:55] <ChrisWarrick> SnoopJ: where did you run that touch command?
[02:11:03] <ChrisWarrick> BrenBarn: that’s very likely
[02:11:11] <ChrisWarrick> BrenBarn: try "c:b" perhaps?
[02:11:18] <BrenBarn> hmmm, and with "abc:b" it just open the file as "abc"
[02:11:37] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:11:53] <ChrisWarrick> BrenBarn: NTFS alternate data streams?
[02:12:06] <SnoopJ> ChrisWarrick, in the command prompt, it's touch.exe from msys64
[02:12:19] <ChrisWarrick> SnoopJ: for msys64 stuff, all bets are off
[02:12:38] <SnoopJ> I figured as much, it looks like the filename doesn't _actually_ contain a colon anyway
[02:12:47] <ChrisWarrick> depends who you ask
[02:12:53] <SnoopJ> point
[02:13:07] <ChrisWarrick> I used msysgit’s `touch a:b`, and `wsl` shows the colon
[02:13:15] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[02:13:16] <ChrisWarrick> WSL can create files Windows claims not to support
[02:13:25] <ChrisWarrick> Explorer shows them as ab
[02:13:29] <ChrisWarrick> (a middot b)
[02:13:36] <SnoopJ> I think that's what it gave me, too
[02:13:39] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[02:14:37] *** Joins: marcello42 (~mp@2001:1a81:13ee:e600:2429:f440:aff0:8b70)
[02:14:42] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:14:49] <aod> toma :D, and?
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:16] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[02:15:27] <Evolver> what's a good and maintained package for an ordered set?
[02:15:27] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[02:15:37] <Evolver> or maybe I should just use dict keys
[02:15:49] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:24] *** Quits: somazero (~somazero@2600:8805:b00:10::19b5) (Quit: WeeChat 3.3)
[02:16:28] <ChrisWarrick> SnoopJ: https://i.imgur.com/mBwzE0T.png
[02:16:31] *** Joins: nomad1 (~nomad@user/spacenomad)
[02:16:38] <aod> can someone help me with this, https://bpa.st/IRHQ?
[02:16:44] <aod> please, thanks
[02:16:52] <SnoopJ> ChrisWarrick, oh wow are those all the same on the explorer side?
[02:17:01] <ChrisWarrick> SnoopJ: that's what it seems to be
[02:17:19] <toma> aod: i'm trying to understand your problem and i'm not sure I do. this might help you: https://bpa.st/4X4Q
[02:17:26] <SnoopJ> what the heck, does it do normalization to some random char
[02:18:16] <ChrisWarrick> SnoopJ: I pasted colon before asterisk in explorer, and it looks correct in wsl
[02:18:16] <BrenBarn> wow that's weird behavior
[02:18:18] <ChrisWarrick> 00000000: ef80 ba20 2863 6f6c 6f6e 29ef 80aa 2028  ... (colon)... (
[02:18:19] <SnoopJ> anyway, I see the same behavior, where ls.exe sees the file as I created it, and explorer renders what looks like a middle dot (although weirdly if I copy it, I seem to get "a:b")
[02:18:26] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[02:19:01] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Read error: Connection reset by peer)
[02:19:50] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[02:19:50] *** Quits: Kebianizao (~Kebianiza@188.127.160.11) (Read error: Connection reset by peer)
[02:20:40] <SnoopJ> I wonder what codepath I'm hitting that gives EINVAL (22) instead of ENOENT (2)
[02:21:32] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[02:21:37] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 240 seconds)
[02:21:47] <ChrisWarrick> the stupidest one possible
[02:21:54] <SnoopJ> bottom part of the stack trace in the EINVAL case https://bpa.st/HIPA
[02:22:09] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Read error: Connection reset by peer)
[02:22:50] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[02:23:21] <ChrisWarrick> SnoopJ: https://i.imgur.com/B8awK04.png
[02:23:26] <ChrisWarrick> SnoopJ: windows is a trainwreck sometimes
[02:23:37] *** Quits: punk (~pnk@user/punk) (Ping timeout: 268 seconds)
[02:24:03] *** Joins: caveman_ (~caveman@gateway/tor-sasl/caveman)
[02:24:32] <SnoopJ> ChrisWarrick, thanks, that's even *more* confusing :)
[02:24:33] <ChrisWarrick> SnoopJ: https://devblogs.microsoft.com/oldnewthing/20101011-00/?p=12563
[02:25:01] <ChrisWarrick> the million dollar question is how python knows the other drive's cwd
[02:25:08] <SnoopJ> but sure, I can accept that I just hit a quirk here and tell the upstream to stop putting win-incompatible things in filenames
[02:25:40] <SnoopJ> too weird not to poke around a bit though, I'm not sure I knew NTFS streams were a thing before I started in on this
[02:27:15] <SnoopJ> ...I'm not sure I knew CP/M didn't have subdirectories, either, but that makes a lot of sense.
[02:27:50] *** Quits: smotchkkiss (~smotchkki@91.193.4.104) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:28:15] *** caveman_ is now known as caveman
[02:28:25] *** Joins: smotchkkiss (~smotchkki@91.193.4.104)
[02:29:03] *** Joins: Kebianizao (~Kebianiza@188.127.160.11)
[02:29:57] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[02:30:03] *** Quits: km (znc@user/km) (Remote host closed the connection)
[02:30:06] *** Quits: mixfix41 (~homefame@user/mixfix41) (Quit: leaving)
[02:30:39] *** Quits: Bakunin (~Bakunin@user/lindis) (Remote host closed the connection)
[02:31:48] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a3757sta4eeun.ipv6.telus.net) (Quit: Leaving)
[02:31:56] *** Joins: driib20 (~driib@c-94bee655.017-99-73746f1.bbcust.telenor.se)
[02:32:18] *** Joins: km (znc@user/km)
[02:32:42] <BrenBarn> I thought the drive cwd would just be part of the OS call
[02:32:54] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com)
[02:33:10] <SnoopJ> that post is pointing out that "drive CWD" is actually a fiction on win32
[02:33:32] *** Quits: driib2 (~driib@185.65.135.252) (Ping timeout: 240 seconds)
[02:33:32] *** driib20 is now known as driib2
[02:34:17] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[02:34:33] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:34:57] <SnoopJ> apparently it stores the cwd for e.g. C: in %=C:%
[02:35:48] <aod> toma thanks very much.
[02:36:40] <SnoopJ> ChrisWarrick, thanks, that was a good read
[02:36:45] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:36:58] <ChrisWarrick> SnoopJ: you’re welcome
[02:37:07] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:38:00] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Read error: Connection reset by peer)
[02:38:17] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:38:23] *** Parts: dbear (~david@mesa.ha.school) ()
[02:38:59] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[02:39:02] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[02:39:08] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[02:39:59] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[02:41:21] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:42:13] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[02:42:59] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:1619:ead6:822:30d1) (Remote host closed the connection)
[02:43:46] *** Quits: magla (~gelignite@55d4c25e.access.ecotel.net) (Quit: Stay safe!)
[02:45:23] *** Quits: aod (~a@190-203-240-94.dyn.dsl.cantv.net) (Quit: leaving)
[02:45:44] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:45:44] *** Quits: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se) (Ping timeout: 250 seconds)
[02:46:26] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:bdbb:8d27:443c:f2d2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:47:15] *** Quits: iob (~iob@nat1.prg.suse.com) (Ping timeout: 256 seconds)
[02:47:37] *** Quits: ouestbillie (~gallup@45.83.220.194) (Ping timeout: 240 seconds)
[02:47:50] *** Joins: KombuchaKip (~kip@192.252.230.5)
[02:48:03] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:48:57] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[02:49:02] *** Joins: Bakunin (~Bakunin@user/lindis)
[02:49:15] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:49:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:49:33] *** Joins: iob (~iob@nat1.prg.suse.com)
[02:49:38] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[02:50:05] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[02:50:16] *** Quits: Kebianizao (~Kebianiza@188.127.160.11) (Ping timeout: 256 seconds)
[02:50:35] *** Quits: szkl_ (uid110435@id-110435.uxbridge.irccloud.com) ()
[02:50:50] *** Quits: spiderma1 (~spiderman@user/spiderman) (Ping timeout: 256 seconds)
[02:50:58] *** Joins: szkl_ (uid110435@id-110435.uxbridge.irccloud.com)
[02:51:25] *** Quits: szkl_ (uid110435@id-110435.uxbridge.irccloud.com) (Client Quit)
[02:51:44] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[02:52:31] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[02:54:31] *** Joins: ld_ (~a0z1@185.248.85.37)
[02:54:45] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[02:54:55] *** Quits: ld_ (~a0z1@185.248.85.37) (Remote host closed the connection)
[02:55:06] *** Joins: Kebianizao (~Kebianiza@188.127.160.11)
[02:55:17] *** Joins: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com)
[02:56:01] *** Quits: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[02:56:17] *** Quits: _ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Remote host closed the connection)
[02:57:04] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:57:38] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[02:57:57] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[02:58:15] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:58:32] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[02:59:09] *** Quits: jamea (~jamea@201.77.110.253) (Ping timeout: 256 seconds)
[02:59:31] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[03:02:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[03:03:06] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Remote host closed the connection)
[03:03:56] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[03:04:25] *** Joins: fikran (~fikran@user/fikran)
[03:06:06] *** Quits: davor (~davor@user/davor) (Ping timeout: 250 seconds)
[03:06:41] *** Quits: k5tux (~k5tux@67.6.92.143) (Quit: leaving)
[03:06:54] *** Joins: davor (~davor@user/davor)
[03:07:49] *** guntbert_ is now known as guntbert
[03:09:00] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.4)
[03:09:00] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:10:04] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[03:12:37] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:f023:de31:af4a:c8a4) (Ping timeout: 240 seconds)
[03:13:19] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[03:13:30] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[03:13:46] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[03:13:58] *** Joins: matsaman (~matsaman@user/matsaman)
[03:14:49] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[03:16:00] *** Joins: jamea (~jamea@189.237.61.168)
[03:17:39] *** Quits: gjvc (~gjvc@29.68.246.35.bc.googleusercontent.com) (Changing host)
[03:17:39] *** Joins: gjvc (~gjvc@user/gjvc)
[03:18:59] *** Quits: sydbarret (~anton@static-186-121-195-147.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:20:18] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[03:22:05] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:23:01] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Remote host closed the connection)
[03:23:26] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:24:44] *** Joins: tuxer_ (~tuxer@fixed-189-203-7-133.totalplay.net)
[03:24:53] *** Joins: k5tux (~k5tux@67.6.92.143)
[03:26:31] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[03:27:45] *** Quits: tuxer_ (~tuxer@fixed-189-203-7-133.totalplay.net) (Quit: Lost terminal)
[03:27:51] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:28:28] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:29:01] *** Joins: tuxer (~tuxer@fixed-189-203-7-133.totalplay.net)
[03:30:07] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:30:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:31:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[03:33:11] <aphysically> jinsun: I don't know why I didn't think of suggesting both overloads before https://github.com/microsoft/pyright/issues/2898
[03:34:16] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:34:57] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Remote host closed the connection)
[03:35:30] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:31ff:a70b:b24e:509e) (Quit: Client closed)
[03:36:09] *** Joins: nomad1 (~nomad@user/spacenomad)
[03:36:34] *** Joins: vats (~vats@180.149.226.41)
[03:37:13] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com)
[03:37:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com) (Client Quit)
[03:38:11] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[03:39:10] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[03:39:20] *** Quits: Kruppt (~Kruppt@50.111.28.175) (Quit: Leaving)
[03:40:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:42:05] *** Joins: skraito (~skraito@user/skraito)
[03:42:07] * skraito hi all , come to irc.ircnow.org , lets chat about 0day channel #0dev and channel #0day
[03:42:15] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[03:42:37] *** Quits: marcello42 (~mp@2001:1a81:13ee:e600:2429:f440:aff0:8b70) (Ping timeout: 240 seconds)
[03:43:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[03:44:55] *** Joins: marcello42 (~mp@2001:1a81:1204:8a00:ea0c:2047:6cd8:7a12)
[03:45:17] *** Quits: five64333 (~five6@8.40.26.70) (Ping timeout: 240 seconds)
[03:46:24] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[03:46:24] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:48:53] *** Joins: five64333 (~five6@8.40.26.70)
[03:50:31] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[03:50:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:50:34] *** Quits: marcello42 (~mp@2001:1a81:1204:8a00:ea0c:2047:6cd8:7a12) (Ping timeout: 268 seconds)
[03:50:40] *** audiobirb is now known as audiocat
[03:50:59] <jinsun> aphysically: ah right, that solves it, just treating the value_type specially is what you needed, I guess you and Eric both were thinking that this would need special logic in pyright code instead of just overloads
[03:51:01] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:51:17] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:51:37] <aphysically> yes
[03:52:20] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:55:14] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[03:56:44] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 268 seconds)
[03:57:09] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[03:58:44] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:59:49] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:e8d1:56a0:bebb:6b03) (Ping timeout: 268 seconds)
[04:05:29] *** Quits: kts (~kts@103.73.237.13) (Quit: Konversation terminated!)
[04:05:35] *** Joins: jamea22 (~jamea@189.237.61.168)
[04:06:01] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[04:06:54] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:07:28] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[04:07:39] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[04:09:02] *** Quits: jamea (~jamea@189.237.61.168) (Ping timeout: 256 seconds)
[04:10:17] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Ping timeout: 240 seconds)
[04:12:44] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:12:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:13:21] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:15:26] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[04:16:54] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:e477:8c1b:94d5:fd66)
[04:17:02] *** Joins: jazzy (~jaziz@user/jaziz)
[04:17:17] *** Joins: Wulf (~Wulf@user/wulf)
[04:17:55] *** Joins: kaiseisei (~Thunderbi@171.116.77.170)
[04:18:06] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[04:18:11] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:18:37] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:19:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:19:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[04:19:45] *** Quits: jcsteele (~j@104-2-180-239.lightspeed.rlghnc.sbcglobal.net) (Changing host)
[04:19:45] *** Joins: jcsteele (~j@user/jcsteele)
[04:19:52] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:20:24] *** Quits: portalrat_ (~portalrat@user/portalrat) (Quit: Leaving)
[04:22:03] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:22:07] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[04:22:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:22:51] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[04:23:04] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:23:28] *** Joins: vn3t (~botnet@152.37.64.86)
[04:23:30] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Quit: beastDiv1)
[04:23:51] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[04:24:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:25:04] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[04:25:13] *** Quits: vn3t (~botnet@152.37.64.86) (Quit: leaving)
[04:25:15] *** Joins: isk (~isk@c-67-176-120-242.hsd1.co.comcast.net)
[04:25:25] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[04:25:28] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:25:44] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[04:26:02] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[04:27:00] *** [_] is now known as [itchyjunk]
[04:27:24] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[04:27:30] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[04:27:58] *** Joins: vn3t (~quassel@2a01:4b00:9210:7f00:a273:d639:39e5:fd9b)
[04:28:13] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:bd39:d592:20fe:cdf4) (Quit: Leaving)
[04:28:17] *** Joins: panella32 (~panella32@164.215.206.60)
[04:29:13] *** Quits: vn3t (~quassel@2a01:4b00:9210:7f00:a273:d639:39e5:fd9b) (Remote host closed the connection)
[04:29:29] *** Joins: vn3t (~quassel@2a01:4b00:9210:7f00:a273:d639:39e5:fd9b)
[04:29:53] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:699d:242:fb03:618d) (Quit: Textual IRC Client: www.textualapp.com)
[04:30:02] *** Quits: vn3t (~quassel@2a01:4b00:9210:7f00:a273:d639:39e5:fd9b) (Client Quit)
[04:30:35] *** Joins: vn3t (quassel@gateway/vpn/protonvpn/vn3t)
[04:30:58] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[04:31:20] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[04:31:42] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:32:18] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:33:28] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[04:33:30] *** Quits: goldcrest (~goldcrest@212.252.83.164) (Quit: Leaving)
[04:33:39] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:35:06] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 256 seconds)
[04:35:34] <isk> Can any of you recommend any guides or examples of a "reusable" setup.py ? I have been fighting with some insidious bugs caused by pip re-executing setup.py at install-time--namely pip rejects the package because the install-time metadata is different from the package's metadata
[04:35:48] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 250 seconds)
[04:35:49] *** Quits: Vornotron (~Vornicus@2603-8000-5d07-7ef0-49e1-8f43-b7ec-23cc.res6.spectrum.com) (Read error: Connection reset by peer)
[04:36:08] <isk> Is there a standard method of "compiling" a setup.py into a setup.cfg that can be packaged with the dist tar so that the module's metadata is constant when installed?
[04:37:48] *** Joins: moog_ (~moog@107.126.53.173)
[04:40:31] *** Quits: moog (~moog@107.112.217.106) (Ping timeout: 268 seconds)
[04:40:58] *** Joins: pepper (~pepper@user/pepper)
[04:41:00] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[04:42:15] *** Joins: punk (~pnk@2804:14c:da96:a77d:60a4:8167:7ed5:17fc)
[04:43:03] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[04:45:06] *** Joins: nomad1 (~nomad@user/spacenomad)
[04:45:26] *** Quits: vn3t (quassel@gateway/vpn/protonvpn/vn3t) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:47:57] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[04:48:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:49:55] *** Joins: trainsley69_ (~trainsley@c91-128-219-127.bredband.tele2.se)
[04:51:15] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:51:17] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 240 seconds)
[04:54:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:55:25] <nedbat_> isk: do you need an executable setup.py? why not just write a setup.cfg?
[04:55:28] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[04:55:34] <gambl0re> nedbat_: hey
[04:55:43] <nedbat_> isk: or, ship wheels instead of source packages
[04:55:50] *** nedbat_ is now known as nedbat
[04:55:55] <nedbat> gambl0re: hi
[04:56:07] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[04:56:22] <gambl0re> discord is too busy right?
[04:56:33] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 268 seconds)
[04:57:00] <nedbat> gambl0re: it's very different
[04:57:32] *** Joins: thorbw_ (~tw@46.230.130.50)
[04:57:44] <klys> yeah discord inlines a load of media and caters to a new crowd
[04:58:05] *** Quits: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:59:02] <gambl0re> nedbat: i know right... sometimes I can't stand it there
[04:59:05] <matsaman> I don't really understand their whole invitation approach
[04:59:23] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[05:00:48] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[05:01:04] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:01:31] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[05:02:08] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:03:38] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[05:03:48] <isk> nedbat: I suppose it's mostly pedantic, but I want the setup.py to find the information in the files of the git repo such that I can copy the setup.py to a different repo and have it work dynamically
[05:04:22] <isk> I was considering writing a setup.cfg jinja template to sort of achieve that same end but I was curious if such an idea had already been implemented and was widely used
[05:05:25] <SnoopJ> isk, are you familiar with cookiecutter?
[05:05:29] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:31ff:a70b:b24e:509e)
[05:05:42] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[05:05:48] <isk> nope, is that similar to what I'm describing?
[05:05:48] *** Joins: _Ev (~ev@user/ev/x-8999918)
[05:06:18] <SnoopJ> yes, specifically the "template" part, although as I think about it, I'm not entirely sure if it lets you do this for setup.py or not
[05:06:34] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[05:07:42] *** Parts: _Ev (~ev@user/ev/x-8999918) ()
[05:07:43] <SnoopJ> ah, it does
[05:07:44] <isk> seems vaguely relevant, but I guess my need would be a "living" template
[05:07:48] <isk> oh really?
[05:07:49] <SnoopJ> e.g. https://github.com/audreyfeldroy/cookiecutter-pypackage/blob/master/%7B%7Bcookiecutter.project_slug%7D%7D/setup.py
[05:07:57] <isk> interesting
[05:08:14] <SnoopJ> cookiecutter's use-case is a lot more "make me a project from this template" than it is "living" though
[05:08:33] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:08:46] *** Joins: ST47 (~ST47@wikimedia/st47)
[05:09:22] <isk> I see so they basically just did my idea for me
[05:09:42] *** Joins: nomad1 (~nomad@user/spacenomad)
[05:09:47] *** Joins: moog (~moog@107.77.244.90)
[05:09:48] <nedbat> isk: do you need any kind of dynamism after the project is created, or just at project creation?
[05:09:58] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[05:10:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:10:20] <isk> nedbat: version is dynamic but the rest is just a nice-to-have I suppose
[05:10:46] <Soni> does anyone actually use multiple inheritance?
[05:10:55] <isk> e.g. reading requirements.txt for install_requires
[05:10:56] <SnoopJ> giving it a spin might be a good idea, then. for dynamic versioning, versioneer is relatively popular, although I can't say I care for it
[05:11:15] <SnoopJ> versioning of *your* package, I mean
[05:11:32] <SnoopJ> Soni, yep
[05:11:36] <isk> sounds worth looking into, I just use some bespoke code in my CI/CD stuff
[05:11:38] <Soni> SnoopJ: why
[05:11:51] <jinsun> isk: usually people do the opposite, requirements.txt is created from install_requires
[05:11:52] <SnoopJ> Soni, because they want to have behavior defined in multiple base classes, usually.
[05:11:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:11:57] *** Quits: moog_ (~moog@107.126.53.173) (Ping timeout: 240 seconds)
[05:12:04] <isk> jinsun: interesting...
[05:12:05] <SnoopJ> or mixins
[05:12:11] <BrenBarn> some kinds of frameworks make use of mixins
[05:12:32] <isk> Soni: I am forced to use it in some of my infrastructure code for AWS
[05:12:46] <Soni> doesn't MI pretty much require every class to be aware of eachother?
[05:13:04] * SnoopJ can't think of any reason it would
[05:13:10] <isk> ^
[05:13:44] <SnoopJ> isk, your remark about requirements.txt has me thinking you might also be interested in pip-tools, if you are interested in updating pinned versions of your dependencies.
[05:13:46] *** Joins: fikran (~fikran@user/fikran)
[05:13:48] *** Joins: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net)
[05:14:08] <Soni> well if the class isn't built with super().__init__(*args, **kwargs) that's probably gonna be a problem no?
[05:14:15] <nedbat> isk: some people have used cog to interpolate files into their setup files: https://twitter.com/hynek/status/1460897764338974725
[05:14:42] <nedbat> Soni: MI is easy to get wrong
[05:14:50] <elb0w> Hi, QQ. I took a break from python for last year. I am writing something now. 1) Should I strive to use type hints? 2) If I create a custom class and a function I wrote returns an instance of that class do I notate `-> MyClass` or something else?
[05:15:13] <isk> SnoopJ: I will look into it, thanks for the suggestion
[05:15:30] <SnoopJ> Soni, not all classes will necessarily do that, i.e. mixins are often more about providing functionality that has nothing to do with initialization
[05:15:32] <isk> I just wrote a horrible Makefile rule to update the frozen versions :^)
[05:15:32] <nedbat> elb0w: use type hints if you want to do static type checking.
[05:15:48] <nedbat> isk: pip-tools has a pip-compile command for updating requirements.
[05:16:01] <isk> that is good to know
[05:16:12] <Soni> SnoopJ: ah that's fair. those are like """interfaces""" then?
[05:16:23] <isk> nedbat: that tweet is compelling, thanks for sharing
[05:16:24] <SnoopJ> Soni, they're kind of the opposite
[05:16:47] <Soni> SnoopJ: mixins are opposite of interfaces?
[05:16:51] <SnoopJ> "kind of"
[05:16:59] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[05:17:08] <Soni> what does that even mean?
[05:17:10] *** Joins: u0_a4161 (~xxNightxO@120.20.212.198)
[05:17:17] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 240 seconds)
[05:17:17] *** Quits: jamea22 (~jamea@189.237.61.168) (Ping timeout: 240 seconds)
[05:17:17] <SnoopJ> an interface is "here is a description of some functions, implementing them is your problem."  A mixin is "here are some functions"
[05:17:18] <Soni> what's the opposite of a whole concept?
[05:17:53] <BrenBarn> the opposite concept
[05:17:58] <Soni> ah
[05:17:59] *** Quits: Balzy_ (~Balzy@host-80-116-10-150.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[05:17:59] *** Joins: jamea (~jamea@189.237.61.168)
[05:18:48] <Soni> BrenBarn: hmm
[05:18:54] <Soni> well "interfaces" is taxonomy
[05:19:05] <Soni> what's the opposite of a taxonomy?
[05:19:24] <BrenBarn> a grantonomy :-)
[05:19:34] <Soni> it's like saying imaginary numbers are the opposite of real numbers
[05:20:08] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:26] *** Quits: u0_a416 (~xxNightxO@120.20.41.150) (Ping timeout: 256 seconds)
[05:20:46] <BrenBarn> anyway, Snoop already explained what was meant by that
[05:21:33] <BrenBarn> I mean it's not really the opposite because the opposite of "description but no implementation" would be "implementation but no description" which wouldn't be that useful
[05:21:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:31ff:a70b:b24e:509e) (Quit: Client closed)
[05:22:15] <SnoopJ> perhaps it would have been better if I'd just answered "no"
[05:23:05] *** Quits: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) (Ping timeout: 256 seconds)
[05:23:20] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[05:23:43] <Soni> well anyway, how do you make a subclass with initialization stuff?
[05:23:48] *** Joins: Terexen (~terexen@user/terexen)
[05:24:08] <SnoopJ> `class Derived(Base): def __init__(self, ...): do_whatever_needs_doing()`
[05:24:23] *** Joins: Guest64 (~Guest64@pool-100-37-224-229.nycmny.fios.verizon.net)
[05:24:56] <SnoopJ> some derived classes will want functionality provided by Base in their initializer, some won't
[05:25:06] *** Quits: Guest64 (~Guest64@pool-100-37-224-229.nycmny.fios.verizon.net) (Client Quit)
[05:25:59] <elb0w> So for typehints, if my type is a class but I dont have an import for that in current module. Is there a practiced way vs importing that class just for the hint?
[05:26:15] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[05:27:22] *** Quits: isk (~isk@c-67-176-120-242.hsd1.co.comcast.net) (Ping timeout: 250 seconds)
[05:28:02] <jinsun> if you don't want to import it at runtime then you can import it inside an if TYPE_CHECKING: block
[05:28:17] *** Quits: moog (~moog@107.77.244.90) (Ping timeout: 240 seconds)
[05:28:41] <jinsun> but then you'll have to quote the class in the annotation or enable the postponed evaluation of annotations with the future import
[05:28:54] <nedbat> elb0w: is it a problem to add the import?
[05:29:50] <elb0w> nedbat: probably no, but im just thinking if this can introduce circular imports anywhere for the sake of type checking
[05:29:52] <SnoopJ> if it's been imported anywhere else in your code, it's basically free to import it there, otherwise what jinsun said
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:26] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[05:33:42] *** Joins: califax- (~califax@user/califx)
[05:34:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:36:19] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:37:32] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:37:32] *** brabrax_ is now known as brabrax
[05:37:51] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:37:52] *** califax- is now known as califax
[05:40:26] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[05:41:12] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:42:46] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:43:44] *** Quits: punk (~pnk@2804:14c:da96:a77d:60a4:8167:7ed5:17fc) (Quit: Leaving)
[05:44:03] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:45:38] *** Joins: rje (~textual@50.35.241.164)
[05:46:05] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:46:18] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:48:11] *** BillyZane2 is now known as BillyZane
[05:48:31] *** Joins: seednode99 (~seednode@user/seednode)
[05:49:57] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[05:51:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:55:34] *** Quits: panella32 (~panella32@164.215.206.60) (Quit: Textual IRC Client: www.textualapp.com)
[05:55:56] *** Joins: jamea22 (~jamea@189.237.61.168)
[05:56:27] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:56:47] <Soni> how do you indicate that a method is "protected"?
[05:57:01] <Soni> (conventionally)
[05:57:17] *** Quits: jamea (~jamea@189.237.61.168) (Ping timeout: 240 seconds)
[05:57:23] <SnoopJ> what does protected mean? "this isn't for public use?"
[05:58:01] <Soni> SnoopJ: "this is for subclass use"
[05:58:02] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[05:58:13] <jinsun> prefixing with underscore is the way
[05:58:34] *** Joins: seednode99 (~seednode@user/seednode)
[05:58:35] <SnoopJ> yea I would probably use an underscore
[06:01:14] <jinsun> and if you don't want subclasses to use it then prefix it with a double underscore
[06:01:29] *** Joins: isk (~isk@c-67-176-120-242.hsd1.co.comcast.net)
[06:02:04] <jinsun> that actually changes the runtime behavior though, not just convention
[06:02:12] *** Joins: _Ev (~ev@user/ev/x-8999918)
[06:07:17] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Ping timeout: 240 seconds)
[06:09:01] *** Joins: KombuchaKip (~kip@192.252.230.5)
[06:10:24] *** Joins: portalrat (~portalrat@user/portalrat)
[06:12:26] *** Quits: vats (~vats@180.149.226.41) (Ping timeout: 250 seconds)
[06:13:00] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com)
[06:13:05] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:13:09] *** Joins: freefall (~owner@2600:6c40:1600:39ec:5cc1:e168:836e:c76)
[06:13:47] *** Joins: jmdaemon (~jmdaemon@142.207.76.198)
[06:14:21] <freefall> good day all. question. im try to return a floating point number from a sub but i get a error
[06:15:08] <freefall> i get a typeerror: 'float' object is not subscriptable
[06:15:18] *** Quits: jmdaemon (~jmdaemon@142.207.76.198) (Changing host)
[06:15:18] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:15:28] *** Quits: jamea22 (~jamea@189.237.61.168) (Ping timeout: 250 seconds)
[06:15:33] <leduyquang753> You are trying to access it as if it were an array somewhere.
[06:15:45] <freefall> it say exception in tkinter
[06:16:11] <leduyquang753> That mean it is expecting a list/tuple.
[06:16:14] <leduyquang753> means
[06:16:19] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[06:16:20] <freefall> it maybe from the yfinance libary
[06:16:36] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[06:16:44] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[06:17:18] *** Joins: seednode99 (~seednode@user/seednode)
[06:18:26] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Client Quit)
[06:18:35] <freefall> how would i be able to tell
[06:18:46] *** Quits: ornxka (~ornxka@user/ornxka) (Quit: WeeChat 3.3)
[06:19:17] <freefall> the line im using is getqoute = float(stock.info['regularMarketPrice'])
[06:20:19] <jinsun> the full traceback should tell where exactly the problem is
[06:21:20] *** Joins: frost (~frost@user/frost)
[06:22:41] <freefall> traceback (most recent call last): file "/usr/lib/python3.7/tinter/___init___.py" line 1705, in call return self.func (*args)
[06:22:44] <jinsun> freefall: can you paste the code and the full traceback https://bpa.st/+python+pytb
[06:22:53] <jinsun> dont paste here
[06:23:07] <freefall> i type it out sorry
[06:25:01] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:27:10] <freefall> https://bpa.st/532A
[06:27:31] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:27:52] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:28:32] <jinsun> freefall: okay the problem is line 34 in your code "stock sim.py", tkiner is just calling it
[06:28:57] <jinsun> freefall: what is getqoute ?
[06:28:57] *** byzandula1 is now known as byzafk
[06:29:03] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[06:29:17] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[06:30:02] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-3191-c339-6ac6-44c8.res6.spectrum.com)
[06:30:47] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:44] *** Joins: Unode (~Unode@194.94.44.220)
[06:32:16] <freefall> http://bpa.st/GL7A
[06:33:17] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-7c3a-da49-c036-254f.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:33:25] *** Joins: petern (~dayim@50.233.164.147)
[06:33:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:34:18] *** Quits: audiocat (~audio@user/audio) (Read error: Connection reset by peer)
[06:35:12] *** Quits: petern (~dayim@50.233.164.147) (Client Quit)
[06:35:17] *** Joins: audiocat (~audio@user/audio)
[06:35:28] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[06:36:02] <freefall> it take a text in an it to return a floating number
[06:36:27] *** Quits: summonner (~summonner@188.26.74.156) (Ping timeout: 268 seconds)
[06:36:57] <jinsun> so getqoute is already a float, then you can't do getqoute['Close'][0], what did you expect it to do?
[06:37:11] <jinsun> maybe you just want `return getqoute`
[06:37:24] *** Quits: _Ev (~ev@user/ev/x-8999918) (Quit: Leaving.)
[06:38:22] *** Quits: jcsteele (~j@user/jcsteele) (Quit: jcsteele)
[06:38:52] *** Joins: Fiji- (~Fiji@user/fiji)
[06:39:05] <freefall> i just follow the example i found. i dont know what the close or 0 mean
[06:39:17] *** Quits: rje (~textual@50.35.241.164) (Read error: Connection reset by peer)
[06:39:20] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[06:39:29] *** Joins: jcsteele (~j@user/jcsteele)
[06:39:34] *** Joins: rje (~textual@50.35.241.164)
[06:40:22] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:40:35] <freefall> https://stackoverflow.com/questions/61104362/how-to-get-actual-stock-prices-with-yfinance
[06:41:06] *** Joins: millido (~millido@84.210.150.128)
[06:42:08] *** Joins: jcsteele (~j@user/jcsteele)
[06:42:17] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[06:42:36] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:44:04] *** Joins: jcsteele (~j@user/jcsteele)
[06:44:12] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[06:44:37] *** Joins: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[06:44:58] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:45:28] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[06:46:10] *** Joins: ebrau (~ebrau@142.126.175.200)
[06:46:12] *** Quits: cdown (~cdown@163.114.131.1) (Remote host closed the connection)
[06:46:25] *** Joins: cdown (~cdown@163.114.131.1)
[06:46:37] *** Quits: ebrau (~ebrau@142.126.175.200) (Client Quit)
[06:46:38] *** Joins: jcsteele (~j@user/jcsteele)
[06:47:11] *** jarthur_ is now known as jarthur
[06:47:34] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:48:05] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 256 seconds)
[06:48:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[06:49:13] *** Joins: jamea (~jamea@177.239.81.39)
[06:49:18] *** Joins: jcsteele (~j@user/jcsteele)
[06:49:31] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[06:50:09] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:50:58] <Soni> how do context managers work again?
[06:51:16] *** comruminoAlt is now known as comrumino
[06:51:34] *** Joins: jcsteele (~j@user/jcsteele)
[06:51:58] <freefall> jcsteele
[06:52:01] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:52:30] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:53:40] *** Joins: jcsteele (~j@user/jcsteele)
[06:54:36] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:56:16] *** Joins: jcsteele (~j@user/jcsteele)
[06:56:48] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[06:56:49] *** Joins: Betal (~Betal@user/betal)
[06:57:12] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:58:50] *** Quits: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net) (Quit: leaving)
[06:58:54] *** Joins: jcsteele (~j@user/jcsteele)
[06:59:34] *** Joins: crashrep (~crashrep@user/crashrep)
[06:59:46] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:59:48] <Soni> can you pass Path to subprocess.run?
[07:00:30] <jmdaemon> as a string?
[07:01:26] *** Joins: jcsteele (~j@user/jcsteele)
[07:02:05] <Soni> jmdaemon: as a Path
[07:02:21] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:02:29] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[07:02:58] *** Quits: raym (~raym@user/raym) (Ping timeout: 268 seconds)
[07:04:04] *** Joins: jcsteele (~j@user/jcsteele)
[07:04:32] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:04:58] *** Joins: cismee (~cisme_@2600:1700:d980:1a40:f5a:e3ce:b523:2768)
[07:05:50] *** Joins: jcsteele (~j@user/jcsteele)
[07:06:04] <freefall> jmdeamon how would i convert a this from a list to a string.. i guess that what it done
[07:06:37] <freefall> even thought it seem like a one value object
[07:06:42] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:06:45] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[07:07:02] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 240 seconds)
[07:07:32] *** Quits: cisme__ (~cisme_@2600:1700:d980:1a40:182a:4ef3:47e9:95ff) (Ping timeout: 240 seconds)
[07:08:24] *** Joins: jcsteele (~j@user/jcsteele)
[07:08:43] *** Joins: skapata (~Skapata@user/skapata)
[07:08:57] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[07:09:16] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:09:25] *** Joins: raym (~raym@user/raym)
[07:09:48] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Quit: WeeChat 3.3)
[07:10:57] *** Joins: jcsteele (~j@user/jcsteele)
[07:11:49] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:13:02] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[07:13:32] *** Joins: jcsteele (~j@user/jcsteele)
[07:13:57] *** Joins: fef (~thedawn@user/thedawn)
[07:14:03] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[07:14:26] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:15:21] *** Joins: adeliktas5 (~adeliktas@i59F52DD4.versanet.de)
[07:16:12] *** Joins: jcsteele (~j@user/jcsteele)
[07:17:02] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:17:33] *** Quits: adeliktas (~adeliktas@i59F52CE1.versanet.de) (Ping timeout: 256 seconds)
[07:17:33] *** adeliktas5 is now known as adeliktas
[07:17:53] *** Joins: user (~user@103.66.233.238)
[07:18:07] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[07:18:44] *** Joins: jcsteele (~j@user/jcsteele)
[07:19:38] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:20:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:21:19] *** Joins: jcsteele (~j@user/jcsteele)
[07:21:43] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[07:21:51] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[07:21:59] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[07:22:05] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[07:22:09] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:22:13] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:22:17] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[07:23:07] *** Joins: fikran (~fikran@user/fikran)
[07:23:58] *** Joins: jcsteele (~j@user/jcsteele)
[07:24:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[07:25:40] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[07:25:44] *** Joins: ebrau (~ebrau@142.126.175.200)
[07:27:15] *** Joins: raym (~raym@user/raym)
[07:27:22] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:27:22] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:27:22] *** finn_elija is now known as FinnElija
[07:28:17] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 240 seconds)
[07:28:47] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.4)
[07:29:18] <frost> hello, every, is there a simple way to count the number of occurrences of an element in a list?
[07:30:03] *** Joins: Guest2527 (~Guest25@103.113.189.245)
[07:30:12] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:15] *** Quits: raym (~raym@user/raym) (Read error: Connection reset by peer)
[07:30:24] *** Joins: humberto1 (~humbertow@189.236.30.209)
[07:30:26] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[07:30:35] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[07:31:01] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:455b:c754:d1e5:81c5)
[07:32:01] *** Quits: freefall (~owner@2600:6c40:1600:39ec:5cc1:e168:836e:c76) (Quit: Leaving)
[07:32:24] <BrenBarn> lists have a `.count()` method
[07:32:34] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:51] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[07:33:08] *** Joins: jcsteele (~j@user/jcsteele)
[07:33:31] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[07:33:31] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[07:33:31] *** Joins: nortoh (~nortoh@user/nortoh)
[07:34:00] <frost> oh, so nice, thanks
[07:34:00] *** Joins: cheater (~Username@user/cheater)
[07:34:02] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:34:37] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[07:35:45] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:35:45] *** Joins: jcsteele (~j@user/jcsteele)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:38] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:36:53] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:455b:c754:d1e5:81c5) (Ping timeout: 268 seconds)
[07:38:21] *** Joins: jcsteele (~j@user/jcsteele)
[07:38:48] *** Joins: humberto1 (~humbertow@189.236.30.209)
[07:39:10] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:40:30] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[07:40:37] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[07:40:40] <Repiphany> Also have a look at collections.Counter
[07:40:45] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:40:54] *** Joins: jcsteele (~j@user/jcsteele)
[07:41:14] *** Joins: han-solo (~hanish@user/han-solo)
[07:41:44] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:42:24] *** Joins: Echoz (~chris@user/echoz)
[07:43:25] *** Joins: jcsteele (~j@user/jcsteele)
[07:44:20] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:44:23] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[07:44:23] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[07:44:23] *** Joins: JordiGH (~jordi@user/jordigh)
[07:44:37] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[07:46:06] *** Joins: jcsteele (~j@user/jcsteele)
[07:46:07] *** Joins: avaxar (~avaxar@36.80.211.14)
[07:46:41] *** Joins: Balzy (~Balzy@host-87-9-210-116.retail.telecomitalia.it)
[07:46:55] *** Quits: ebrau (~ebrau@142.126.175.200) (Quit: WeeChat 3.3)
[07:46:55] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:47:14] *** Joins: killadi (~u0_a161@49.15.84.56)
[07:48:40] *** Joins: jcsteele (~j@user/jcsteele)
[07:49:04] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[07:49:30] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:49:56] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:49:57] *** Joins: shangxiao (~davids@101.165.198.94)
[07:50:21] *** Quits: killadi (~u0_a161@49.15.84.56) (Client Quit)
[07:50:57] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 240 seconds)
[07:51:00] *** Joins: killadi (~u0_a161@49.15.84.56)
[07:51:17] *** Joins: jcsteele (~j@user/jcsteele)
[07:52:05] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:53:39] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[07:53:47] *** Joins: jcsteele (~j@user/jcsteele)
[07:56:04] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Remote host closed the connection)
[07:57:18] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[07:57:34] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[07:57:54] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[07:58:32] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 256 seconds)
[07:58:56] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[07:59:09] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[07:59:31] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:59:43] <Soni> hmm looks like you can throw Path at subprocess.run
[08:00:55] *** Joins: otty1 (~otty@49.15.84.56)
[08:01:33] *** Quits: nicode (~nic@2607:f2c0:9479:8500:ad40:7e49:f3e:3cbe) (Ping timeout: 268 seconds)
[08:01:37] <Soni> since 3.6
[08:02:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:02:28] <Soni> as usual, because python docs are awful, here's a free suggestion: why isn't this more prominent?
[08:03:48] *** Quits: nullheroes2 (~nullheroe@168.235.66.22) (Quit: WeeChat 2.3)
[08:05:35] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[08:05:35] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[08:05:35] *** Joins: JordiGH (~jordi@user/jordigh)
[08:05:47] *** nvz_ is now known as nvz
[08:06:37] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 240 seconds)
[08:06:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:07:31] *** Quits: laslmtdwbcs^ (~laslmtdwb@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[08:08:52] *** Joins: jpic (~jpic@82.142.9.130)
[08:09:32] *** Quits: sreve (~quassel@p4ff44ea0.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:10:01] *** Joins: sreve (~quassel@p549d70a6.dip0.t-ipconnect.de)
[08:10:18] *** queue is now known as queue-
[08:10:18] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[08:10:29] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[08:10:29] *** Joins: queue- (~nerd@user/queue/x-7267619)
[08:12:02] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 250 seconds)
[08:12:49] *** Joins: eyepeetee (~aa@user/eyepeetee)
[08:13:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[08:14:58] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[08:15:09] *** Quits: queue- (~nerd@user/queue/x-7267619) (K-Lined)
[08:15:30] *** Quits: killadi (~u0_a161@49.15.84.56) (Ping timeout: 250 seconds)
[08:15:30] *** Quits: voidcat (~voidcat@user/voidcat) (Ping timeout: 250 seconds)
[08:15:40] *** Quits: resmo (~resmo@2a00:d420:9:8a00:6129:5bf3:b814:fcae) (Remote host closed the connection)
[08:15:53] *** Joins: resmo (~resmo@2a00:d420:9:8a00:a0e5:da5c:7447:47da)
[08:18:01] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net)
[08:18:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:18:49] *** Joins: madduck (~madduck@user/madduck)
[08:21:47] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[08:22:10] *** Joins: killadi (~u0_a161@49.15.84.56)
[08:23:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:23:54] *** Joins: KombuchaKip (~kip@192.252.230.5)
[08:24:38] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:24:56] *** Joins: voidcat (~voidcat@user/voidcat)
[08:26:14] *** Joins: jmdaemon (~jmdaemon@142.207.63.195)
[08:29:40] *** Joins: parv (~quass@user/parv)
[08:30:03] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:30:05] *** Quits: Guest07 (~Guest07@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:30:17] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:31:32] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:31:58] *** Quits: five64333 (~five6@8.40.26.70) (Ping timeout: 250 seconds)
[08:34:38] *** Joins: xx (~xx@user/xx)
[08:34:56] *** Joins: teut (~teut@2401:4900:1c68:6b85:14d9:4273:1b4:ada6)
[08:35:02] *** Joins: frost (~frost@user/frost)
[08:35:02] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 240 seconds)
[08:35:22] *** Quits: ario (~ario@159.65.220.102) (Ping timeout: 256 seconds)
[08:36:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:36:26] *** Quits: shangxiao (~davids@101.165.198.94) (Quit: WeeChat 3.4)
[08:36:29] <xavierdarkness>  
[08:36:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:37:07] *** Joins: skraito (~skraito@user/skraito)
[08:37:15] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[08:37:53] *** Quits: defjam (~eb0t@90.203.120.248) (Read error: Connection reset by peer)
[08:39:51] *** Joins: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882)
[08:39:52] *** Quits: killadi (~u0_a161@49.15.84.56) (Remote host closed the connection)
[08:40:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:40:32] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 240 seconds)
[08:41:59] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[08:43:06] *** Joins: otty2 (~otty@27.97.181.107)
[08:43:42] *** Joins: defjam (~eb0t@90.209.247.249)
[08:46:08] *** Quits: otty1 (~otty@49.15.84.56) (Ping timeout: 256 seconds)
[08:46:18] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Quit: Leaving...)
[08:46:28] *** Joins: raym (~raym@user/raym)
[08:47:07] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[08:48:52] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[08:49:23] *** Joins: five64333 (~five6@8.40.26.70)
[08:49:34] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[08:51:36] *** Quits: dfkfs (~dfkfs@178.49.152.151) (Quit: Client closed)
[08:51:37] *** Joins: bluedust (~bluedust@103.160.233.171)
[08:52:11] *** Quits: Guest2527 (~Guest25@103.113.189.245) (Ping timeout: 256 seconds)
[08:52:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:53:35] *** Joins: otty (~u0_a161@27.97.181.107)
[08:54:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[08:56:36] *** Quits: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882) (Quit: WeeChat 3.4)
[08:56:40] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:56:41] *** Joins: Guest2523 (~Guest25@103.113.189.240)
[08:57:06] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 250 seconds)
[08:59:05] *** Quits: cs (~ovnicraft@186.70.222.62) (Read error: Connection reset by peer)
[09:00:02] *** Quits: teut (~teut@2401:4900:1c68:6b85:14d9:4273:1b4:ada6) (Quit: Client closed)
[09:01:30] *** Quits: Guest2523 (~Guest25@103.113.189.240) (Client Quit)
[09:01:41] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:5061:7926:72a1:8ddf)
[09:01:52] *** Quits: emerent (~quassel@p200300cd5704432fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:02:09] *** Joins: emerent (~quassel@p200300cd57044360ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:03:16] *** Joins: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882)
[09:04:04] *** Joins: otty3 (~otty@27.97.174.61)
[09:04:22] *** Joins: killadi (~u0_a161@27.97.174.61)
[09:05:46] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[09:05:47] *** Joins: xkuru (~xkuru@user/xkuru)
[09:06:57] *** Quits: otty (~u0_a161@27.97.181.107) (Ping timeout: 240 seconds)
[09:06:57] *** Quits: otty2 (~otty@27.97.181.107) (Ping timeout: 240 seconds)
[09:08:23] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[09:08:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:08:40] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[09:09:03] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[09:09:03] *** Quits: birkoff (birkoff@birkoff.thunderirc.net) (Changing host)
[09:09:03] *** Joins: birkoff (birkoff@user/birkoff)
[09:10:17] *** Quits: killadi (~u0_a161@27.97.174.61) (Ping timeout: 240 seconds)
[09:11:04] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[09:11:06] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[09:11:27] *** Quits: otty3 (~otty@27.97.174.61) (Ping timeout: 256 seconds)
[09:11:44] <very_sneaky> I'm looking for a way to approximate cmake's configure_file, where it takes an input file with variables annotated with `@` prefix and suffix, and replaces these values with values defined in cmake. Is the best way to go about this using something like jinja? or is there an easier way that i'm not seeing
[09:12:01] <very_sneaky> er, creates an output file with the values replaced*
[09:12:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:13:58] *** Quits: jmdaemon (~jmdaemon@142.207.63.195) (Changing host)
[09:13:58] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:16:20] *** Joins: dvx (~dvx@5.181.92.64)
[09:17:35] <celphi> im making irc bot-- how do i add color to font?
[09:19:05] *** Quits: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882) (Quit: WeeChat 3.4)
[09:19:37] *** Joins: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882)
[09:22:13] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:23:25] <phy1729> celphi: https://www.mirc.com/colors.html
[09:23:57] *** ravan__ is now known as ravan
[09:24:04] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[09:24:15] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[09:24:25] <phy1729> Also please use a library like irctokens to do the protocol parsing. It's quite common to just do string formatting and send that down the wire and that almost always has bugs.
[09:25:11] *** Joins: bluedust_ (~bluedust@static-198-54-130-137.cust.tzulo.com)
[09:25:18] *** Quits: bluedust (~bluedust@103.160.233.171) (Remote host closed the connection)
[09:25:44] *** Joins: vanessa (~annada@103.160.128.7)
[09:25:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:25:53] <celphi> phy1729: this isnt making sense to me
[09:26:08] <celphi> i have a string-- cant i just use `\3`
[09:26:17] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:f5a:e3ce:b523:2768) (Ping timeout: 240 seconds)
[09:26:17] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[09:26:33] *** Joins: bluedust (~bluedust@103.160.233.171)
[09:26:46] <Soni> is shutil.rmtree broken with symlinks like shutil.copytree?
[09:27:28] *** Joins: crashrep (~crashrep@user/crashrep)
[09:28:04] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[09:29:28] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[09:29:35] *** Quits: bluedust_ (~bluedust@static-198-54-130-137.cust.tzulo.com) (Ping timeout: 256 seconds)
[09:30:01] <very_sneaky> Soni: i know that it wasn't introduced until python 3.8, i think
[09:30:08] <very_sneaky> so if you're using an earlier version it won't exist?
[09:30:11] <very_sneaky> but it's worked for me in the past
[09:30:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:30:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:30:51] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[09:31:29] *** Joins: stblaha (~stblaha@user/stblaha)
[09:31:33] *** Quits: subopt (~subopt@2603-8081-2302-459a-480f-254b-3ab7-7488.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:32:28] *** Joins: fikran (~fikran@user/fikran)
[09:34:09] *** Joins: frost (~frost@user/frost)
[09:34:14] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[09:34:53] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:1cb:469c:e868:928d)
[09:34:53] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:1cb:469c:e868:928d) (Changing host)
[09:34:53] *** Joins: skapata (~Skapata@user/skapata)
[09:35:27] *** Joins: Pseudocr1 (~sudo@user/pseudocrat)
[09:36:01] *** Quits: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de) (Remote host closed the connection)
[09:36:26] *** Joins: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de)
[09:36:57] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[09:37:06] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Remote host closed the connection)
[09:37:08] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[09:37:18] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[09:38:05] *** Quits: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882) (Quit: WeeChat 3.4)
[09:38:28] *** Joins: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882)
[09:39:29] *** Quits: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882) (Client Quit)
[09:40:03] *** Joins: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882)
[09:40:12] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[09:40:53] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:41:40] *** Quits: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882) (Client Quit)
[09:42:10] *** Joins: ovnicraft (~ovnicraft@186.70.222.62)
[09:42:57] *** Quits: five64333 (~five6@8.40.26.70) (Ping timeout: 240 seconds)
[09:48:48] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d4f1:e8d1:c5:6a0e)
[09:49:27] *** Joins: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr)
[09:53:58] *** Joins: cliluw (~cliluw@47.147.73.223)
[09:54:18] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[09:54:48] *** Joins: five64333 (~five6@8.40.26.70)
[09:55:54] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:56:54] *** Quits: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Ping timeout: 250 seconds)
[09:57:01] <parv> Soni, What is the issue with rmtree & symbolic links?
[09:57:18] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[09:57:27] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:57:59] <Soni> parv: no, copytree doesn't support preserving symbolic links
[09:58:04] <Soni> rmtree... no idea
[09:58:09] <Soni> it's probably fine
[09:58:10] *** Joins: LordOfLive (~igloo@172.58.236.149)
[09:58:12] *** Quits: LordOfLive (~igloo@172.58.236.149) (Max SendQ exceeded)
[09:58:22] *** Joins: koo5_ (~quassel@51.140.155.227)
[09:58:28] <parv> Soni, Ah.
[09:58:42] *** Joins: LordOfLive (~igloo@172.58.236.127)
[09:58:44] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[09:58:54] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[09:59:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:59:31] *** Quits: kaiseisei (~Thunderbi@171.116.77.170) (Remote host closed the connection)
[09:59:51] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[09:59:55] *** Joins: kaiseisei (~Thunderbi@171.116.77.170)
[10:01:05] *** Joins: humberto1 (~humbertow@189.236.30.209)
[10:02:38] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:03:17] *** Quits: LordOfLive (~igloo@172.58.236.127) (Ping timeout: 240 seconds)
[10:03:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:03:44] *** Quits: Bakunin (~Bakunin@user/lindis) (Remote host closed the connection)
[10:04:21] *** Joins: killadi (~u0_a161@42.109.144.5)
[10:06:46] *** Joins: bobbybob (~Guest14@2405:201:3003:8024:348e:466c:a606:1eb8)
[10:07:18] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[10:08:02] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[10:09:56] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[10:10:00] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:10:01] *** Quits: bobbybob (~Guest14@2405:201:3003:8024:348e:466c:a606:1eb8) (Quit: Client closed)
[10:10:19] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[10:10:39] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[10:11:16] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[10:13:36] *** Joins: manti7 (~manti7@176.10.104.94)
[10:18:12] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:18:40] *** Joins: wei2912 (~wei2912@138.75.71.147)
[10:19:49] *** Joins: summonner (~summonner@188.24.73.45)
[10:20:46] *** Quits: killadi (~u0_a161@42.109.144.5) (Ping timeout: 256 seconds)
[10:21:50] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-3191-c339-6ac6-44c8.res6.spectrum.com) (Quit: jarthur)
[10:23:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:23:39] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[10:23:46] *** Joins: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr)
[10:24:53] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com)
[10:25:22] *** Joins: otty3 (~otty@27.97.174.61)
[10:25:45] *** Joins: Deepspeed (~yep@235.sub-174-215-149.myvzw.com)
[10:26:29] <Deepspeed> I need a python tutor to help with a few basic challenges if anyone is available to chat.
[10:26:52] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-233.poda.cz)
[10:28:56] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[10:29:55] *** Joins: jmd_ (~jmdaemon@142.207.120.123)
[10:30:18] <avu> Deepspeed: probably works best if you ask your concrete questions to the whole channel instead of trying to get somebody to commit to helping you before even knowing what question(s) you have :)
[10:30:24] *** Quits: otty3 (~otty@27.97.174.61) (Ping timeout: 256 seconds)
[10:30:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[10:31:06] <aoei> avu: no doubt
[10:31:25] <icy_hot> Don't ask to ask, and you'll get the help you need:)
[10:33:26] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:33:48] *** Joins: BurgerW (~BurgerW@222.247.110.185)
[10:33:57] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-233.poda.cz) (Quit: Leaving)
[10:34:14] <Deepspeed> I have to do a coding assessment for a job, but it has C and Python questions.  I got the C part easily, but I'm a total noob with python and need some help getting the basics done.  I don't need to learn the entire language, just a crash course in making functions and a few basic tricks.
[10:34:35] <Deepspeed> But it's a bunch of simple questions, not just a single thing I can ask quickly, and I didn't wanna spam up the main room with it all.
[10:34:45] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-233.poda.cz)
[10:35:17] <han-solo> https://j.mp/23X7emF
[10:35:26] <avu> Deepspeed: if you already know a few languages, picking up these simple things like "making functions" from the tutorial in a few minutes
[10:35:40] <avu> Deepspeed: https://docs.python.org/3/tutorial/index.html
[10:36:00] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:36:18] <Deepspeed> I have several ebooks on python and online tutorials, was just looking for a more direct route than having to skim several books to find the things I need.
[10:36:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:36:28] <Deepspeed> I'm working my way through tutorials atm.
[10:36:51] <avu> Deepspeed: don't use any tutorial, try with the official one first
[10:37:10] <avu> Deepspeed: there is not only good material out there on the 'net :)
[10:37:15] *** Joins: upsala (~zcb@185.209.196.170)
[10:37:19] *** Joins: killadi (~u0_a161@27.97.174.61)
[10:37:25] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[10:37:35] <very_sneaky> Deepspeed: probably the best way for us to help is for you to continue with the tutorials and ask concrete questions to the channel when you have them - that's completely ontopic here so don't feel like you're spamming
[10:37:38] *** Quits: jmd_ (~jmdaemon@142.207.120.123) (Quit: ZNC 1.8.2 - https://znc.in)
[10:37:41] *** Joins: mickey8 (~user@user/mickey)
[10:37:58] *** Joins: jmdaemon (~jmdaemon@142.207.120.123)
[10:38:51] <Deepspeed> well, one quick relevant question would be how to find odd numbers in a list. in C I'd go for modulo division.  what's the operator for that in py?
[10:39:19] <avu> Deepspeed: same as in C
[10:39:25] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 268 seconds)
[10:39:25] <Deepspeed> cool
[10:40:07] <avu> Deepspeed: also quite probably the first hit on your favorite search engine looking for 'python modulo' ;)
[10:40:08] *** Quits: bluedust (~bluedust@103.160.233.171) (Read error: Connection reset by peer)
[10:40:14] <very_sneaky> Deepspeed: if you have a terminal handy, you can open an interpreter by executing "python". you should be able to test things like that out quickly
[10:40:31] *** Joins: bluedust (~bluedust@103.160.233.171)
[10:40:34] *** Joins: panella32 (~panella32@173.245.219.235)
[10:40:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:40:44] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[10:41:14] *** Joins: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr)
[10:45:42] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[10:46:12] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[10:46:18] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:49:13] *** Quits: panella32 (~panella32@173.245.219.235) (Quit: Textual IRC Client: www.textualapp.com)
[10:49:21] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:49:47] <aoei> depending on OS you may want to type 'python3'
[10:49:52] *** Joins: seednode99 (~seednode@user/seednode)
[10:50:03] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[10:51:09] <Deepspeed> yeah, I'm having to use python3.  I'm in Bodhi.  It's  ubuntu-based.
[10:51:36] <Deepspeed> I've figured that much out.  and I can write basic stuff.  I'm just unfamiliar with this syntax
[10:51:56] <parv> Soni, I did not have any issue (with python 3.10) keeping symbolic links as such, including dangling one: https://termbin.com/fcuo
[10:52:06] <Deepspeed> like passing data between functions, etc.  Still feels foreign.
[10:53:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:54:50] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[10:55:51] <jinsun> Deepspeed: http://bit.ly/pynames1 should clear things up
[10:57:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:57:42] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[10:59:40] *** Joins: cyphase (~cyphase@user/cyphase)
[11:00:23] <Deepspeed> skimming now
[11:02:07] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[11:02:41] *** Quits: wei2912 (~wei2912@138.75.71.147) (Remote host closed the connection)
[11:02:47] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[11:03:42] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[11:05:36] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[11:06:09] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[11:06:25] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[11:08:13] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:10:32] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:10:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:11:00] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[11:11:29] <Deepspeed> This is what I was given for the start of one problem:
[11:11:34] *** Joins: you (~ShmoSeph@173-167-220-193-ip-static.hfc.comcastbusiness.net)
[11:11:38] <Deepspeed> chunkify(‘ABCDEFG’, 3, ‘x’) -> [‘ABC’, ‘DEF’, Gxx’]
[11:11:38] <Deepspeed> def chunkify(s, n, fill=’x’):
[11:11:57] <Deepspeed> what's with the "fill = 'x'" bit in the function declaration?
[11:12:40] <Deepspeed> wouldn't that just be "fill" ?
[11:12:56] <han-solo> that's `fill` with default value 'x'
[11:13:05] *** Joins: palasso (~palasso@user/palasso)
[11:14:01] <han-solo> so you can call that `chunkify('something', 3)` or `chunkify('something', 3, '<some other fill char>')` and it will use that char to fill
[11:14:16] *** Joins: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[11:14:22] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[11:14:24] *** Joins: mrwick (~mrwick@user/mrwick)
[11:14:27] <very_sneaky> equivalent to `void chunkify(T s, U n, std::string fill = "x");`
[11:14:36] <Deepspeed> so it's defaulted to x but can be set to other things.  Gotcha.
[11:14:40] *** Quits: resmo (~resmo@2a00:d420:9:8a00:a0e5:da5c:7447:47da) (Remote host closed the connection)
[11:14:53] *** Joins: resmo (~resmo@2a00:d420:9:8a00:2e4d:3b0f:47c6:9c76)
[11:15:45] *** Joins: slav0nic (slav0nic@python.su)
[11:15:49] *** Joins: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr)
[11:17:17] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[11:17:40] *** Quits: tuxer (~tuxer@fixed-189-203-7-133.totalplay.net) (Remote host closed the connection)
[11:18:14] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:18:44] *** Joins: gusto (~Augustus@109.255.100.54)
[11:18:57] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 240 seconds)
[11:19:30] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:19:39] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:20:17] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[11:20:45] *** Quits: smotchkkiss (~smotchkki@91.193.4.104) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:21:36] *** Joins: smotchkkiss (~smotchkki@2001:ac8:28:89::a11e)
[11:22:30] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[11:22:34] *** Joins: zmt00 (~zmt00@user/zmt00)
[11:22:43] *** Joins: moose` (~moose@user/moose)
[11:23:43] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[11:23:58] *** Joins: huoy99 (~huoy99@gateway/vpn/pia/huoy99)
[11:24:48] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[11:25:25] <huoy99> is there some way with matplotlib to set the output image's (i guess it's the figure?) height to be greater than the screen size? i'm trying to fit a bunch of graphs in an image but fig.set_figheight isn't working
[11:26:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:27:20] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[11:28:27] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[11:28:46] *** Joins: d0ku (~d0ku@178.43.152.233.ipv4.supernova.orange.pl)
[11:30:33] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:30:36] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[11:30:57] *** Quits: huoy99 (~huoy99@gateway/vpn/pia/huoy99) (Quit: Client closed)
[11:32:08] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[11:32:20] *** Joins: zaquest (~notzaques@5.130.79.72)
[11:33:45] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:34:33] *** Joins: marcello42 (~mp@2001:1a81:1204:8a00:ea0c:2047:6cd8:7a12)
[11:34:37] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[11:37:34] *** Joins: ubert (~Thunderbi@p200300ecdf099440f4ae4d8df8b0fc6d.dip0.t-ipconnect.de)
[11:37:52] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[11:38:38] <dante-as> Hi guys, how can I declare the type of a default variable when injecting it in a function? I would need something like def test(a=3: str): but it doesn't work
[11:39:07] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[11:39:45] <jinsun> do the assignment after the annotation, `def test(a: str = 3):`
[11:40:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:40:52] <jinsun> 3 is not a good value for str btw
[11:41:05] *** Quits: capn (~capn@user/capn) (Ping timeout: 268 seconds)
[11:41:47] *** Joins: capn (~capn@user/capn)
[11:41:49] *** Joins: fikran (~fikran@user/fikran)
[11:41:51] *** Joins: dntreou (~yakiza@105-209-140-135.access.mtnbusiness.co.za)
[11:42:00] *** Joins: parv (~quass@user/parv)
[11:44:23] <cluelessperson> dante-as, for future reference, annotation is hinting as to what the variable should be, but it's up to you to actually check the variable.
[11:46:57] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[11:46:59] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[11:47:19] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[11:47:33] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[11:49:19] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[11:49:26] *** Quits: Pseudocr1 (~sudo@user/pseudocrat) (Quit: WeeChat 3.4)
[11:49:48] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[11:49:55] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[11:50:41] <dba> speaking of annotation, it is possible to specify a date format for a variable?
[11:51:05] <dba> for example accept only this forma 2022-31-01
[11:52:15] *** Joins: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr)
[11:52:20] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[11:52:35] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[11:53:44] <wyre> hi guys, I've set logging config through logging.config.dictConfig() and I've passed to it this dictionary https://bpa.st/L7ZQ ... but ... once set like this ... cannot I use logging.setLevel(logging.DEBUG) to modify the logging level?
[11:54:00] *** Joins: frost (~frost@user/frost)
[11:55:03] *** Joins: someuser (~user@197.54.58.85)
[11:55:05] *** Quits: killadi (~u0_a161@27.97.174.61) (Read error: Connection reset by peer)
[11:55:13] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 256 seconds)
[11:55:16] <wyre> maybe I'm not setting properly a logging level
[11:56:32] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:57:46] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[11:57:48] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[12:00:37] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 240 seconds)
[12:01:15] *** Joins: kosh (~kosh@user/kosh)
[12:03:48] *** Joins: chele (~chele@user/chele)
[12:04:54] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[12:05:47] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[12:06:06] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[12:06:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:06:27] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[12:06:40] *** Joins: pycode (~pycode3@2001:b07:5d28:551:b749:d1fc:f160:1a98)
[12:07:12] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[12:07:33] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:07:47] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:07:53] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:08:41] <dante-as> jinsun: thanks.
[12:08:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[12:09:08] *** Joins: killadi (~u0_a161@42.107.198.13)
[12:09:23] <dante-as> I have also another question: what type is, for example, logging.LogRecord? I would need to hint the type of a variable which has this assignment
[12:10:17] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[12:10:27] *** Joins: weedmic (~weedmic@5.102.235.240)
[12:10:48] *** Joins: eson123 (~whatever@118.69.128.37)
[12:11:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:12:29] *** Joins: Sylhouette (~johan@87.233.191.146)
[12:12:38] <eson123> question about killing processes, so i have something like "p = subprocess.Popen(["python3", "script.py"])" inside my main.py script, and in another terminal, i try to kill that p.pid with os.kill(<PID>, signal.SIGTERM), but when i do that the Popen process is still appearing in my system monitor, only that its memory is now set to "N/A", does that mean it has been killed or not ?
[12:13:04] *** Joins: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de)
[12:14:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:14:43] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[12:14:53] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[12:14:57] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[12:16:32] *** Quits: gitly2 (~gitly@148.252.128.242) (Ping timeout: 240 seconds)
[12:16:33] <avu> dante-as: classes are types, so the type of a logging.LogRecord instance is logging.LogRecord
[12:17:14] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[12:17:18] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (Ping timeout: 250 seconds)
[12:17:37] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:17:39] <Peng> eson123: It might be a zombie?
[12:17:50] <eson123> a zombie ?
[12:17:53] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Ping timeout: 256 seconds)
[12:18:10] *** Quits: dntreou (~yakiza@105-209-140-135.access.mtnbusiness.co.za) (Ping timeout: 250 seconds)
[12:18:23] <lericson> eson123: you have to p.wait() for the process
[12:18:27] <avu> eson123: killed processes are kept around by the system until their parent wait()s for them
[12:18:31] <Peng> https://en.wikipedia.org/wiki/Zombie_process
[12:18:38] <dante-as> avu: Thanks for explanation:)
[12:18:49] *** Joins: gitly2 (~gitly@85.255.233.145)
[12:18:51] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[12:20:10] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--51d.oracle-ocna.com)
[12:20:36] <emx> I have a littel mess in my head because of deploying flask based applications (details: https://stackoverflow.com/questions/51025893/flask-at-first-run-do-not-use-the-development-server-in-a-production-environmen). What I see on the page is that to run the dev server I need app.run(), to run production server (waitress) I need serve() and if I use waitress command line I need "return app" in the code. So there are three versions and none of them
[12:20:37] <emx> lets me write code that fits them all. Do I actually need to write two files where one is for dev server and the other suiting production server (either waitress or waitress-serve)?
[12:21:36] *** Quits: smotchkkiss (~smotchkki@2001:ac8:28:89::a11e) (Quit: Textual IRC Client: www.textualapp.com)
[12:21:43] <eson123> hm, sounds like i can only kill this Popen process inside the main.py itself, i can't do it from another terinal
[12:21:45] <Helle> emx: you typically have multiple entry point files, but they call the same app
[12:22:05] <Peng> eson123: Why?
[12:22:29] <eson123> after terminating, i have to wait, so that could mean "p.terminate();p.wait()"
[12:22:33] <eson123> and i can't do that in another terminal
[12:22:57] <eson123> that would mean two different parents
[12:23:08] <emx> Helle, so I segregate the "constant" part into an "app file" and create two files, one used in dev and one in productoin?
[12:23:33] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[12:24:00] <Helle> emx: yep, and in my case, I combine the dev part with the app, so there is a if __name__ == "__main__":\n    app.run() there and then a second file that just includes the first one, and runs it in my case when it is served via WSGI
[12:24:01] <avu> emx: no two files needed, you just have one file that has both a create_app function used by waitress or gunicorn or such and also a  if __name__ == '__main__' block you can use to start the dev server
[12:25:36] <avu> eson123: the parent just has to react to SIGCHLD
[12:25:48] <vanessa> why does something like, str.join(iter([i for i in range(5)])) throw a type error?
[12:25:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:25:59] <avu> eson123: that's the signal it gets from the system if a child is killed and needs to be wait()ed on
[12:26:50] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:26:55] *** gentooclimax is now known as climax
[12:27:03] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[12:27:05] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[12:27:46] <vanessa> why does something like, str.join(iter([str(i) for i in range(5)])) throw a type error?
[12:28:23] <avu> vanessa: seems you are using `str` both for a variable name and to refer to the str type?
[12:28:37] <eson123> avu: ok if i understand u correctly, i have to send signal.SIGCHLD to the parent's ID of which i spawn the child process ? in this case it's the main.py ?
[12:28:42] <avu> vanessa: or are you really trying to call the join method on the type instead of an instance?
[12:29:03] <avu> eson123: no, SIGCHLD is automatically sent to any process that just had a child of his die
[12:29:30] <avu> eson123: you just need to react to that signal. Or explicitly set it to ignore thus letting the system do the reaping for you
[12:29:50] <avu> eson123: https://en.wikipedia.org/wiki/Child_process is a decent overview for the basics
[12:30:01] <emx> Helle, avu thanks, that helped.
[12:31:37] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--51d.oracle-ocna.com) (Ping timeout: 240 seconds)
[12:31:54] <avu> vanessa: also, the wrap in iter() is weird and unneeded, as is using a list comprehension instead of a generator expression. You can just write something like `', '.join(str(i) for i in range(5))`
[12:32:28] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[12:32:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:32:52] <vanessa> I did that since the docs told, str.join(iterable)
[12:33:27] <avu> vanessa: yes, a generator expression like `str(i) for i in range(5)` creates an iterable
[12:33:40] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[12:33:41] *** Joins: Xardas (~Xardas@149.233.51.127)
[12:34:56] <avu> vanessa: many things in Python are iterables and you (almost?) never need to explicitly call `iter()` to turn an iterable into an iterator
[12:36:07] <eson123> avu: hm is this how you do the reacting ? signal.signal(signal.SIGCHLD, recvSig)
[12:36:16] <eson123> where recvSig is a function
[12:36:26] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[12:36:31] <avu> eson123: have you tried? :)
[12:36:34] <vanessa> avu, got it, but what is the difference between a iterator and a generator?
[12:36:35] <eson123> i did
[12:36:37] <eson123> doesn't work
[12:36:37] *** Joins: tejr (~tejr@user/tejr)
[12:37:01] <avu> vanessa: a generator is one kind of iterator
[12:37:06] <eson123> the died child still has an entry
[12:37:18] <avu> eson123: is your function called?
[12:37:34] <eson123> which function ?
[12:37:37] <eson123> the recvSig ?
[12:37:39] <avu> yes
[12:37:42] <eson123> nope
[12:37:54] <avu> and you are doing this in the parent, right? Not the child.
[12:37:59] <eson123> os.kill(<child PID>, signal.SIGTERM) in another terminal
[12:38:04] <eson123> in "another" parent
[12:38:17] <avu> there is no "other" parent, each process has only one
[12:38:55] <eson123> the child is spawn inside main.py, after running that i open another tab on my terminal, run the python console, import os and signal and try to kill the child of the other
[12:38:57] <eson123> that's what i mean
[12:39:10] <vanessa> the docs says, str.join(iterable) and you said, str(i) for i in range(5) is a iterator, but str.join(str(i) for i in range(10)) doesn't work
[12:39:23] <avu> eson123: the signal handler has to be in the parent of the process being killed
[12:39:48] <avu> vanessa: which comes back to my first comment about your code
[12:39:49] <eson123> i do put that handler in the parent of the process being killed which is the main.py
[12:39:54] <Repiphany> vanessa: str.join is an instance method, you need to call something like ' '.join(...) or ', '.join(...)
[12:40:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:40:33] <avu> eson123: can you show the code of that main.py?
[12:40:37] *** Quits: BurgerW (~BurgerW@222.247.110.185) (Ping timeout: 240 seconds)
[12:40:39] *** climax is now known as gentooclimax
[12:40:51] <Repiphany> (or `str.join(' ', strings)`)
[12:40:56] <Repiphany> but that's weird
[12:41:19] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:41:31] *** Joins: dntreou (~yakiza@inet-160-34-126-160.oracle-ocna.com)
[12:41:41] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[12:42:01] *** Joins: Naan (~Naan@user/naan)
[12:42:01] <eson123> avu: oh wait actualyl i know why it is not called now, sorry for wasting your time :P
[12:42:13] <eson123> but still, after the function has been called, the child is still in the process table
[12:42:31] <avu> eson123: well, in that function, you have to wait() on the process
[12:42:51] *** Joins: BurgerW (~BurgerW@222.247.110.185)
[12:42:59] <avu> eson123: ideally, you still have that Popen instance around and just call the wait() method on it to clean everything up properly
[12:43:15] <eson123> awh ok
[12:43:16] <eson123> gotcha
[12:43:19] <vanessa> '',string <- why is this an iterable? the input to str.join is iterable and I think '',sting is a tuple
[12:43:21] *** Joins: rendar (~rendar@user/rendar)
[12:43:34] <avu> vanessa: a tuple is an iterable
[12:44:28] <eson123> ok works now :P thk
[12:44:34] *** Joins: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr)
[12:44:45] <avu> vanessa: as I said, many things in Python are iterables. Generators, lists, tuples, strings, dicts, ...
[12:44:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:45:05] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[12:45:42] <vanessa> avu, then why does, str.join('',strings) work as Repiphany said, but not str.join(strings) work?
[12:46:06] <Repiphany> str.join is an instance method
[12:46:08] <jinsun> vanessa: there "", strings is not a tuple
[12:46:11] *** Quits: Myst3 (~Myst@user/myst) (Quit: Ping timeout (120 seconds))
[12:46:18] <avu> vanessa: because in that case, you are calling an instance attribute on str by passing the instance (the `self`) manually as the first argument
[12:46:27] *** Joins: agireud (~agireud@2605:a601:ab06:c700:211:32ff:fe32:e15f)
[12:46:29] *** Joins: Myst3 (~Myst@user/myst)
[12:46:30] <jinsun> vanessa: "" is one argument to join and strings is another
[12:46:55] <avu> vanessa: don't ever write it like that, write it as `''.join(strings)` which is the same thing as `str.join('', strings)` only not written weird :)
[12:46:56] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:1233:e1cf:a62a:92d8)
[12:48:57] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[12:49:02] <vanessa> so, the first '' was a string passed to '' as self and it created a instance to which the other string was concatenated.
[12:49:18] *** Quits: maddagaska (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Remote host closed the connection)
[12:49:37] <jinsun> the docs do say `str.join(iterable)` which is not the best way to present it I would say, though not sure what would be better, putting self everywhere also doesn't seem good
[12:49:57] *** Joins: Deneb (~johnch@101.111.189.80.dyn.plus.net)
[12:49:57] *** Quits: you (~ShmoSeph@173-167-220-193-ip-static.hfc.comcastbusiness.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:50:16] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[12:50:25] <vanessa> jinsun: I agree but, not putting self threw me off as a beginner
[12:50:48] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[12:51:14] <avu> well, that whole section in the docs is describing str instance methods and is generally quite explicit about that, with many examples (although of course more examples are always better)
[12:51:51] <Repiphany> `help(str.join)`
[12:51:59] *** Joins: carl- (~carl-@185.103.188.130)
[12:52:25] <vanessa> it must also be true that for any class, we can call a instance member as either, object.mem_func(args) or, class.mem_func(object, args) as self is the first positional argument to the constructor.
[12:52:42] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:52:51] <avu> vanessa: yes, that's the case
[12:52:58] <jinsun> yeah I think an example would be good there, it can be confusing otherwise
[12:53:06] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:a0a9:cf81:3210:bd96)
[12:53:52] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:55:00] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 250 seconds)
[12:56:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:57:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[12:58:23] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:58:32] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:59:37] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[13:00:01] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[13:00:36] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:01:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:01:37] *** Quits: killadi (~u0_a161@42.107.198.13) (Ping timeout: 240 seconds)
[13:02:32] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[13:02:59] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[13:03:19] *** Joins: Klinda (~superleag@user/klinda)
[13:03:26] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[13:03:31] *** Joins: OPK (~OPK@user/opk)
[13:03:40] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[13:03:55] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[13:04:10] *** Joins: you (~ShmoSeph@173-167-220-193-ip-static.hfc.comcastbusiness.net)
[13:04:55] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 256 seconds)
[13:04:57] *** Joins: stonkey (~stonkey@user/stonkey)
[13:05:21] *** Joins: gdd (~gdd@129.199.146.230)
[13:05:29] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[13:07:01] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[13:08:34] *** Quits: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.4)
[13:09:04] *** Quits: eson123 (~whatever@118.69.128.37) (Ping timeout: 256 seconds)
[13:11:53] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[13:12:15] *** Joins: shad (~shad@user/shad)
[13:12:26] *** Joins: rsx (~dummy@ppp-188-174-141-153.dynamic.mnet-online.de)
[13:12:29] *** Joins: plastico (~plastico@neomutt/plastico)
[13:13:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:13:09] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:e477:8c1b:94d5:fd66) (Read error: Connection reset by peer)
[13:13:40] *** Joins: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de)
[13:14:30] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 250 seconds)
[13:14:58] *** Joins: a0z1 (~a0z1@86.106.136.213)
[13:15:24] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[13:16:02] *** Joins: xensie (~xensie@88-115-236-81.elisa-laajakaista.fi)
[13:16:41] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:17:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:18:05] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[13:18:36] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-113.wlan.tudelft.nl)
[13:18:42] *** Joins: weedmic (~weedmic@5.102.235.240)
[13:19:23] *** Joins: euouae (~euouae@user/euouae)
[13:20:01] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[13:20:09] <euouae> Hello I'm trying to translate this small script into python3, can someone help me? https://bpa.st/Q4NQ In particular line 23 gives "TypeError: from_buffer() cannot return the address of a unicode object"
[13:21:10] <euouae> (just noticed line 20 has a typo "x00" instead of "\x00" but ignoere that part)
[13:21:12] <The-Compiler> euouae: p = "x00" * 16   will give you a string containing the literal characters "x00x00x00x00..."
[13:21:44] *** Joins: user3456 (user3456@user/user3456)
[13:21:53] <euouae> You're right, I fixed that.
[13:22:14] <The-Compiler> euouae: it might need to be a bytes object though, i.e. b"\x00"
[13:22:31] <The-Compiler> euouae: also, don't roll your own crypto unless this is for learning purposes or something
[13:22:45] <euouae> It's a crypto book I'm following
[13:25:18] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[13:25:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:26:05] *** Quits: you (~ShmoSeph@173-167-220-193-ip-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[13:26:16] *** Joins: hightower2 (~hightower@95.168.118.7)
[13:26:18] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:26:22] <euouae> I fixed it, I had to change "\x00" with b"\x00"
[13:26:35] <euouae> it was the difference between python 2 strings and python 3 strings and bytestrnigs
[13:27:18] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:28:12] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[13:29:21] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:29:34] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:30:03] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[13:30:03] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[13:30:55] *** Joins: trekta (~trekta@ip5f5be271.dynamic.kabel-deutschland.de)
[13:32:07] *** Quits: harshhpareek (~harshhpar@c-67-188-113-15.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[13:34:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:34:32] *** Joins: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr)
[13:34:37] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[13:35:02] *** Quits: user (~user@103.66.233.238) (Read error: Connection reset by peer)
[13:35:57] *** Quits: dntreou (~yakiza@inet-160-34-126-160.oracle-ocna.com) (Ping timeout: 240 seconds)
[13:36:27] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[13:36:58] <dfkfs> i compiled python 2.5.6, but it missing the 'operator'  module for some reason
[13:37:25] <euouae> dfkfs you compiled the source code?
[13:38:10] *** Joins: dntreou (~yakiza@105-209-140-135.access.mtnbusiness.co.za)
[13:38:28] <dfkfs> yes, I configured and compiled ir
[13:38:41] <euouae> https://docs.python.org/release/2.5.4/lib/module-operator.html shouldn't be missing
[13:39:01] <Deepspeed> https://pastebin.com/7WPXyyx2   Can anyone tell me why i get an error on line 9 here?
[13:39:14] <Deepspeed> I reference len(chunks[m]) in other places and it works fine.  But fails here.
[13:39:30] <dfkfs> is gcc 2.95.3 too old for that python version?
[13:39:32] *** Quits: Deneb (~johnch@101.111.189.80.dyn.plus.net) (Quit: Leaving)
[13:39:49] *** Quits: hightower2 (~hightower@95.168.118.7) (Read error: Connection reset by peer)
[13:40:19] <euouae> dfkfs why are you using that python version? Python 2.5.6 was released may-2011
[13:40:38] <euouae> So you could probably go all the way up to GCC 4.6.0 with no trouble
[13:40:38] <supakeen> Deepspeed: Well, if you run that code then `m = 3`, but `chunks` only has 3 items in there, I'd guess you are off by one.
[13:40:52] <supakeen> A list of length 3 has a last index of 2 (since we start at 0).
[13:40:55] <The-Compiler> Deepspeed: can you show the error so we don't have to guess?
[13:41:15] <supakeen> (it's IndexError: list index out of range)
[13:41:18] *** Quits: trekta (~trekta@ip5f5be271.dynamic.kabel-deutschland.de) (Quit: Going offline, see ya! (www.adiirc.com))
[13:41:51] *** Joins: hightower2 (~hightower@95.168.118.7)
[13:42:27] <The-Compiler> detective supakeen
[13:42:27] <Deepspeed> ^
[13:42:42] <supakeen> And that without running the code!
[13:42:49] <supakeen> (I just ran it to confirm the error here)
[13:43:06] <The-Compiler> Deepspeed: still, it makes it easier to people helping you if you include errors with full traceback for future questions :)
[13:43:23] <Deepspeed> I just didn't want to spam and forgot to paste the output
[13:43:29] <The-Compiler> no worries
[13:44:23] <Deepspeed> The thing is, that exact phrase works fine in the else: block if you add a char or two to the string in the function call.
[13:44:32] <euouae> dfkfs my guess would be that 1) either you misconfigured the installation 2) you are incorrectly trying to import the module, maybe missing some detail 3) your up-to-date packages come into conflict with the requirements of PYthon 2.5.6
[13:44:47] <Deepspeed> and it makes the padded version of the string just fine.  But that same reference to chunks[m] fails in the first if:
[13:45:43] <Deepspeed> and if I make the first reference chunks[m-1] it causes the else: block to never be triggered because it's reading the wrong value in 'chunks'.
[13:46:05] <lericson> if (l % n) == 0, Deepspeed
[13:46:10] <lericson> n divides l evenly
[13:46:23] <lericson> also don't use lowercase L as a variable name
[13:46:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:47:15] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[13:47:44] <Deepspeed> I need to fix var names.  Just hacking this together for now
[13:48:02] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (Ping timeout: 240 seconds)
[13:48:12] <euouae> long names are better than short names
[13:48:37] <euouae> you can fix a long name with a quick regexp, short names on the other hand... :P
[13:48:54] *** Joins: eson123 (~whatever@118.69.128.37)
[13:49:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:49:36] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[13:50:26] *** Quits: dntreou (~yakiza@105-209-140-135.access.mtnbusiness.co.za) (Ping timeout: 256 seconds)
[13:50:30] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[13:50:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:51:10] *** Joins: fikran (~fikran@user/fikran)
[13:52:30] *** Joins: dntreou (~yakiza@105-209-140-135.access.mtnbusiness.co.za)
[13:52:53] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:53:21] <Deepspeed> The modulo division for the condition worked.
[13:53:22] *** Joins: lord_daemon (~lord_daem@187.36.203.244)
[13:53:25] <Deepspeed> Thanks :)
[13:53:52] <Deepspeed> Should I add any other touches to that code to make it better?  Aside from better var names?
[13:54:14] *** Joins: alex11 (~alex11@user/alex11)
[13:54:47] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:54:47] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:54:47] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:54:52] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[13:56:01] *** Joins: nomic (~nomic@185.192.69.41)
[13:56:32] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:56:34] *** Quits: onichomp (~onichomp@2806:264:4408:1d4:5114:cff5:46e4:516f) (Read error: Connection reset by peer)
[13:56:39] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[13:56:48] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[13:57:07] <jmiehe> what's the difference between `{}` and `set()`? I wanna explicitly test for an empty set, but `assert var == {}` fails, while `set()` works, but is even less explicit than `not var` at that point …
[13:57:12] *** Joins: onichomp (~onichomp@2806:264:4408:1d4:5114:cff5:46e4:516f)
[13:57:30] *** Quits: onichomp (~onichomp@2806:264:4408:1d4:5114:cff5:46e4:516f) (Read error: Connection reset by peer)
[13:57:48] <jinsun> {} is a dict not set
[13:58:35] <jinsun> there is no syntax for empty set, you have to use set() if you want to create empty one
[13:58:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:58:39] <jmiehe> Oooooooh, of course jinsun
[13:58:46] <jmiehe> thanks!
[13:58:53] <jinsun> to check if an exising set is empty, just use len(var) though
[13:59:05] <jinsun> len would be 0 if it is empty
[13:59:13] *** Quits: dntreou (~yakiza@105-209-140-135.access.mtnbusiness.co.za) (Ping timeout: 268 seconds)
[13:59:45] <jmiehe> still, `{1} - {1} == {}` being False seems odd for python standards
[13:59:45] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[13:59:58] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:00:06] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[14:00:09] <jmiehe> jinsun: len is a nice compromise there, thanks again
[14:00:49] *** Joins: dntreou (~yakiza@105-209-140-135.access.mtnbusiness.co.za)
[14:01:37] *** Quits: isk (~isk@c-67-176-120-242.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[14:01:41] <mrwick> {1} is not a syntax error?
[14:01:52] <The-Compiler> mrwick: it's a set literal with an 1 in that set
[14:02:16] <mrwick> oh duh, yeah. thanks
[14:02:24] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[14:03:05] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:03:11] <parv> set & dict creation share some of the syntax, namely {}
[14:03:23] <The-Compiler> yeah, I really wish they did not
[14:03:47] <The-Compiler> set and tuple syntax are both kind of weird
[14:04:14] *** Quits: jmdaemon (~jmdaemon@142.207.120.123) (Changing host)
[14:04:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[14:04:49] <mrwick> read the article on LWN that said set uses frozenset internally
[14:05:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:05:44] *** Quits: dntreou (~yakiza@105-209-140-135.access.mtnbusiness.co.za) (Ping timeout: 256 seconds)
[14:06:04] *** Quits: eson123 (~whatever@118.69.128.37) (Ping timeout: 250 seconds)
[14:06:15] <parv> One way of looking at set is a dict where values do not matter
[14:07:02] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[14:07:08] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--3b5.oracle-ocna.com)
[14:07:24] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:2c0a:4451:b68c:ba77)
[14:08:13] <mrwick> a dict of only keys
[14:09:46] *** Joins: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr)
[14:10:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:12:12] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[14:12:51] <wyre> hi guys, I'd like to log also messages from Flask like these https://bpa.st/T5TA ... I've got this formatting string
[14:12:53] <wyre> "%(asctime)s | [%(levelname)s] -> %(pathname)s.%(module)s | %(funcName)s:%(lineno)d - %(message)s"
[14:13:18] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:14:02] <wyre> but ... pathname is too long ... and moduleName, name, processName don't contains any reference to Flask or werkzeug
[14:14:02] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[14:14:14] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:14:49] <wyre> how could I show the package name? (the _internal.py module is apparently part of this package)
[14:15:00] <wyre> (I mean the werkzeug package)
[14:15:11] *** Quits: kaiseisei (~Thunderbi@171.116.77.170) (Ping timeout: 256 seconds)
[14:16:02] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[14:16:08] *** Lord_of_Life_ is now known as Lord_of_Life
[14:17:20] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--3b5.oracle-ocna.com) (Ping timeout: 250 seconds)
[14:17:35] *** Joins: blackleitus (~blackleit@189.195.195.100)
[14:17:38] <blackleitus> what exactly means integration developer? someone know integrate codes from some else ( github, own code , third party codes ) into a functional one with easy to integration , scalability, faster, different vertical industry application etc.
[14:22:11] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[14:24:28] *** Joins: frost (~frost@user/frost)
[14:26:13] *** Joins: kts (~kts@103.73.237.138)
[14:26:41] *** Quits: kts (~kts@103.73.237.138) (Client Quit)
[14:27:43] <wyre> why INFO is after DEBUG? https://docs.python.org/3/library/logging.html#levels
[14:28:05] <wyre> I'd say INFO should be a lower level than DEBUG 🤔
[14:28:31] *** Joins: LimeOn (~user@user/limeon)
[14:28:50] *** Joins: kts (~kts@103.73.237.138)
[14:29:13] <The-Compiler> wyre: why? Debug is usually way more verbose and thus less important than info
[14:30:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[14:31:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[14:31:43] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[14:32:04] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[14:32:47] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Remote host closed the connection)
[14:33:42] *** Quits: kts (~kts@103.73.237.138) (Client Quit)
[14:33:53] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:33:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[14:34:04] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[14:35:25] <wyre> The-Compiler, so I should read the table from top to bottom, I see
[14:35:42] *** Joins: raym (~raym@user/raym)
[14:36:13] <wyre> I guess when I set the level to INFO ... WARNING, ERROR and CRITICAL will be also logged with logger.warning() or their corresponding methods, right?
[14:36:27] *** Quits: hightower2 (~hightower@95.168.118.7) (Read error: Connection reset by peer)
[14:36:54] <lericson> yes
[14:37:23] <The-Compiler> wyre: exactly - I like to think of those levels as the "importance" of a message, and by setting the level, you say that you are not interested in messages with a lower importance
[14:37:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:38:04] <wyre> I see, thank you guys 😊
[14:38:42] *** Joins: arseru (uid515527@user/arseru)
[14:39:03] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:39:57] <arseru> Hiya :) I need to strip html tags from a string, what would be the most pythonic way to do that?
[14:40:15] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[14:40:31] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:295b:27c3:87b1:2b8f)
[14:41:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:44:00] <p-i-_> How can I write a pandas dataframe in human readable format?
[14:44:22] <p-i-_> I'm trying to realtime monitor deployment of multiple machines
[14:44:37] *** Quits: BurgerW (~BurgerW@222.247.110.185) (Ping timeout: 240 seconds)
[14:44:47] <p-i-_> Columns will be the state, and rows will be the machine instances
[14:44:56] <p-i-_> I'd like to see it populate in realtime
[14:46:31] *** Joins: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr)
[14:47:20] <The-Compiler> arseru: if you don't mind the dependency, https://www.crummy.com/software/BeautifulSoup/bs4/doc/#get-text
[14:47:56] <The-Compiler> arseru: if you prefer something from the stdlib, Django seems to have some inspiration: https://github.com/django/django/blob/main/django/utils/html.py#L139-L180
[14:48:38] <wyre> The-Compiler, lericson, could I also use different numeric values to set different DEBUG levels? 🤔
[14:48:50] *** Joins: pudup (~pudup@180.148.44.210)
[14:49:01] <lericson> wyre: possibly but that is not generally done
[14:49:02] <bjs> wyre: well "DEBUG" is hard-coded to mean 10.  But you can make your own levels with your own names
[14:49:18] <bjs> if you wanted
[14:49:33] <The-Compiler> wyre: yes, I do this for VDEBUG https://github.com/qutebrowser/qutebrowser/blob/master/qutebrowser/utils/log.py#L85-L118
[14:49:38] <lericson> wyre: generally you'd set the level per logger instead, so you could silence for example werkzeug's debug output while keeping yours
[14:49:39] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:49:44] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:49:52] *** Quits: pudup (~pudup@180.148.44.210) (Client Quit)
[14:50:12] <The-Compiler> I wrote this 8 years ago though, there might be a simpler way
[14:50:19] *** Quits: a0z1 (~a0z1@86.106.136.213) (Ping timeout: 256 seconds)
[14:50:20] <bjs> wyre: note you can also create many loggers (e.g. one for each file) and then set the level for each differently, or to selectively enable/disable them
[14:50:29] <wyre> lericson, werkzeug is apparently logged by the root logger
[14:50:37] <lericson> it is not, wyre
[14:50:39] <bjs> which can also sometimes achieve what you want. (all files INFO, except <this> which is DEBUG)
[14:51:36] <lericson> wyre: https://github.com/pallets/werkzeug/blob/a3b4572a34269efaca4d91fa4cd07dd7f6f94b6d/docs/utils.rst#logging
[14:51:39] <wyre> lericson, I've created a custom logger, and Flask output (werkzeug) was printed directly in stdout
[14:52:12] <wyre> oh, I see
[14:52:17] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[14:52:35] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[14:52:37] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[14:53:03] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[14:53:09] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 256 seconds)
[14:53:33] <arseru> The-Compiler: nice, I'll use the one in bs4, thanks! :)
[14:54:02] <arseru> p-i-_: what do you mean in human readable format? something like copy it to the clipboard?
[14:54:20] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Quit: Leaving)
[14:54:22] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[14:54:32] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:54:42] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[14:54:52] *** Joins: fef (~thedawn@user/thedawn)
[14:55:09] <wyre> lericson, so ... should I include "werkzeug" as a logger in my dictconf? 🤔
[14:55:21] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[14:55:30] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:55:42] <lericson> probably ¯\_(ツ)_/¯
[14:55:43] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:84e4:6ca6:2acc:8b3a:8bbc) (Quit: Leaving...)
[14:55:43] <bjs> wyre: what are you trying to do?
[14:56:00] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[14:56:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:56:11] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:56:11] <bjs> if you're trying to configure just werkzeug then probably yes
[14:56:42] <wyre> bjs, I'd like to control the DEBUG level differently for my API and for Flask
[14:56:53] <wyre> so I guess ... I could use two different loggers 🤔
[14:56:57] <bjs> wyre: you mean you want one of them to be debug and one not to be?
[14:57:14] <bjs> wyre: yes you should (at minimum) make a new logger for each file.
[14:57:23] <bjs> Have you seen `logger = logging.getLogger(__name__)` before?
[14:57:42] <wyre> bjs, yes I think I have an idea about how to tackle this 🤔
[14:57:53] <bjs> wyre: yes, by using the line I just gave you?
[14:58:03] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Client Quit)
[15:00:02] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[15:00:11] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[15:00:20] <wyre> bjs, sure, my concern was if I should include "werkzeug" as a logger in my dictconfig to set some handlers for it or if I could just use logging.getLogger("werkzeug")
[15:00:33] *** Quits: upsala (~zcb@185.209.196.170) (Quit: WeeChat 3.4)
[15:00:37] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[15:00:40] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:00:42] <wyre> but ... probably I could do in both ways, because I guess I could use logging methods to manage the "werkzeug" settings
[15:00:45] <bjs> wyre: what do you mean by "just use"
[15:01:03] <wyre> bjs, I mean the logger will need handlers, won't it?
[15:01:05] <bjs> wyre: in general the point of dictConfig and the like is to avoid having to manually access and fiddle with the actual logger objects thesmelves
[15:01:19] <wyre> I say this because in particular I'm using custom handlers
[15:01:23] <bjs> wyre: yes that's why you call dictconfig isn't it? to make handlers and set things up etc
[15:01:27] <wyre> and of course I'd like Flask use them
[15:01:58] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 250 seconds)
[15:02:12] <wyre> so I guess I could add "werkzeug" to my dictconfig as a separate logger 😜
[15:02:30] <bjs> wyre: but werkzeug *is* a separate logger, and yes you can configure it
[15:02:34] <bjs> i'm not sure why you say it like that
[15:02:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:03:05] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:7383:58e3:41e7:460a)
[15:03:06] <wyre> bjs, but could I configure it in my custom dictconfig?
[15:03:13] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:03:17] <bjs> wyre: of course?
[15:03:20] <wyre> or should I do this through logging available methods?
[15:03:24] <bjs> the werkzeug logger isn't magic, it's just any other logging logger
[15:03:58] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[15:04:02] *** Joins: a0z1 (~a0z1@185.248.85.10)
[15:04:13] <wyre> so I guess logging is able to override the "werkzeug" logging config made by itself, right?
[15:04:51] *** Joins: Nutte35 (~Nutte@202.153.80.254)
[15:04:57] <wyre> through both ways, using dictconfig and using logging specific methods
[15:04:59] <wyre> right?
[15:05:05] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:05:06] *** Joins: ice9 (~ice9@user/ice9)
[15:05:07] <bjs> wyre: the link lericson gave literally said "IF the logger is not setup" then it creates its own configuration
[15:05:11] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[15:05:19] <bjs> so if you use dictconfig werkzeug won't setup its own config
[15:05:24] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f2:194d:493b:6ac0:af6e:1637)
[15:05:48] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 256 seconds)
[15:05:53] <bjs> wyre: yes you can do it in any way, either way, both ways. I don't really know why you would. Why not just have 1 dictconfig that configures everything, isn't that easier?
[15:06:49] *** Parts: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de) ()
[15:06:50] <wyre> bjs, oh, yes, but it talks just about the level, however ... I guess this can be extended for other logger settings :blush
[15:07:11] <bjs> wyre: it also talks about the handler
[15:07:36] <wyre> sure :)
[15:08:04] <wyre> I guess that's all any logger needs, hehe
[15:09:07] <bjs> wyre: yes, and it can all be setup from the dictConfig (or any other configuration)
[15:09:24] <bjs> and it's probably easier to do it all in one place to configure everything.
[15:09:31] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:2c0a:4451:b68c:ba77) (Ping timeout: 268 seconds)
[15:09:37] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Ping timeout: 240 seconds)
[15:09:44] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:10:18] <wyre> I see, thank you all for the clarifications, you have helped me a lot 😊
[15:14:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:15:25] *** Joins: aakashi2001 (~aakashi20@103.61.255.10)
[15:15:25] *** Quits: aakashi2001 (~aakashi20@103.61.255.10) (Changing host)
[15:15:25] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[15:16:32] *** Quits: pycode (~pycode3@2001:b07:5d28:551:b749:d1fc:f160:1a98) (Ping timeout: 240 seconds)
[15:18:39] <dfkfs> I have rebuilt it with gcc 3.0.4 and it seems to work now
[15:19:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:20:10] *** Quits: dre (~dre@2001:8003:c932:c301:154c:d733:7b9b:7bcb) (Ping timeout: 250 seconds)
[15:21:23] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[15:22:20] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[15:22:21] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94)
[15:22:57] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[15:24:13] *** Joins: ice9 (~ice9@user/ice9)
[15:24:17] *** Quits: OsKaR31415 (~OsKaR3141@2a01cb008b0e4600dd1b862ee26621ec.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[15:25:42] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:26:22] *** Joins: killadi (~u0_a161@2402:8100:3908:f7f8:ac90:f10:bc5c:4a89)
[15:27:02] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 240 seconds)
[15:28:26] *** Joins: drogas (~drogas@jump2.jet.uk)
[15:28:41] *** morrigan_ is now known as morrigan
[15:28:51] *** Quits: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[15:29:13] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b)
[15:29:37] <drogas> okay lads, I have an issue with interpolation. My dataset is limited and the value of y that I want at point x is not in the dataset, so I interpolated it. Now the interpolation works fine, but near the end of it, it looks wobbly wrong.
[15:30:10] <drogas> Uploaded file: https://uploads.kiwiirc.com/files/4bfc91e819ea27ecb5f5ef1a94bbc479/image.png
[15:30:27] <drogas> look, the orange is the interpolation the green is the original dataset
[15:30:34] <drogas> what can I do to mitigate this
[15:31:07] *** Quits: LuKaRo (~LuKaRo@p4fc32532.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:31:16] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[15:31:22] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:32:02] *** Joins: dre (~dre@2001:8003:c932:c301:6ef3:5315:93ef:2b0a)
[15:32:05] *** Joins: constxd_ (~brad@142.167.170.88)
[15:32:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:33:34] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f2:194d:493b:6ac0:af6e:1637) (Ping timeout: 268 seconds)
[15:33:55] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:33:57] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[15:34:44] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:04] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f2:194d:493b:6ac0:af6e:1637)
[15:37:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:37:43] <gitesh> which is python debugger?
[15:38:25] *** Joins: hightower2 (~hightower@95.168.118.7)
[15:39:46] *** Quits: hightower2 (~hightower@95.168.118.7) (Read error: Connection reset by peer)
[15:40:22] *** Joins: hightower2 (~hightower@95.168.118.7)
[15:40:28] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:40:45] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[15:42:16] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[15:42:38] *** Quits: Deepspeed (~yep@235.sub-174-215-149.myvzw.com) (Ping timeout: 256 seconds)
[15:43:17] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[15:44:56] *** killadi is now known as alove
[15:44:57] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[15:45:12] *** alove is now known as dead
[15:45:19] *** dead is now known as otty
[15:46:06] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:917f:5682:2150:7527)
[15:47:34] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[15:48:58] *** Joins: LuKaRo_ (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:49:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:49:57] *** Joins: killadi (~u0_a161@49.15.91.139)
[15:50:02] <bjs> gitesh: are you asking about pdb?
[15:50:22] <gitesh> bjs: yes
[15:50:31] <gitesh> let me check is it debugger
[15:50:50] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b) (Ping timeout: 268 seconds)
[15:51:10] <gitesh> bjs: ok i have MU python debugger in my PC, just don't know how to use it, thanks
[15:51:19] <bjs> gitesh: yes, it is the Python debugger
[15:51:24] <gitesh> yeha
[15:51:26] *** Joins: pycode (~pycode3@2001:b07:5d28:551:e711:dd4:a517:3ae1)
[15:51:35] <bjs> gitesh: I don't know what that is
[15:51:43] <gitesh> yeah*
[15:53:02] *** Quits: otty (~u0_a161@2402:8100:3908:f7f8:ac90:f10:bc5c:4a89) (Ping timeout: 240 seconds)
[15:54:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:54:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:54:33] *** Joins: bancroft (~bancroft@user/bancroft)
[15:55:12] <bancroft> is there a way to tell python what directory i'm in so that I can use -m without cd-ing into a directory?
[15:55:46] <bjs> bancroft: no. Maybe what you want is to install the module (e.g. with pip) so that you can -m from anywhere
[15:56:36] <bancroft> bjs: that's also not possible, so I guess my docker entrypoint will need to be a script in the end
[15:56:48] <bancroft> (too much work)
[15:58:14] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[15:58:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[15:59:52] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:00:08] *** Joins: BurgerW (~BurgerW@222.244.79.166)
[16:00:31] *** Joins: fikran (~fikran@user/fikran)
[16:00:31] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[16:00:39] <bjs> bancroft: scripts can always see the other modules in the same directory as it.  Just note that this doesn't extend to imports.
[16:01:06] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[16:01:14] <bjs> Uh let me clarify that, the imports can see the modules in the same directory as the script,  but they can't automatically see the modules in their own directories so you have to use relative imports
[16:01:52] <bancroft> bjs: I just mean that I can put a cd in the entrypoint.sh script so then I can call /home/www-data/pyenv/shims/python -m and we should be good
[16:02:39] <bjs> bancroft: I still don't quite follow why you can't pip install it, but yeah that will work too
[16:02:43] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[16:03:27] <bancroft> bjs: it's a big monorepo i've been building for a very long time with every project as a module so I can just do -m something.version2
[16:03:37] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 240 seconds)
[16:04:19] <bancroft> it's basically all my shameful hacks since I started lol
[16:04:44] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Ping timeout: 256 seconds)
[16:04:49] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[16:05:41] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[16:07:25] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[16:07:57] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[16:11:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[16:11:48] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Ping timeout: 268 seconds)
[16:11:49] *** Quits: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:13:30] <drogas> is there a way to annotate one point in the data set? I just want the specific values of  x,y to be shown when I plot the dataset
[16:13:53] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[16:14:32] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:fdbe:513b:57e2:ec26)
[16:14:58] <lericson> drogas: matplotlib?
[16:15:02] <lericson> plt.scatter(x,y)
[16:15:57] <drogas> yes using matplotlib, I don't know the y value. But I know I want the corresponding y value at x to be annotated in the plot
[16:15:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[16:16:30] <lericson> you want to linearly interpolate between the two neighboring values?
[16:16:55] <lericson> https://numpy.org/doc/stable/reference/generated/numpy.interp.html
[16:17:15] <drogas> lericson well I did first cubic interpolation and it didn't turn out well as you can see in the image, so yes now I've settled with linear interpolation
[16:17:19] <drogas> so I'm done with that part
[16:17:37] <drogas> now I want to annotate the point x,y
[16:17:40] <lericson> what image?
[16:17:42] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:17:49] <drogas> Uploaded file: https://uploads.kiwiirc.com/files/f6fc7727c4ebe84a31a09dea6ab721b4/image.png
[16:18:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[16:18:24] <lericson> uh
[16:18:28] <lericson> it sounds like your interpolation is wrong
[16:19:22] *** Joins: esther (~esther@2607:fb90:5fed:c5f3:b33b:d180:d9c0:24a)
[16:19:30] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[16:20:00] <drogas> yes because it has trouble near the end as there're some datapoints giving sinus wave-ish form and it doesn't know exactly how to interpolate it so it overfits
[16:20:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:e711:dd4:a517:3ae1) (Ping timeout: 250 seconds)
[16:21:04] <lericson> linear interpolation is dead simple, just use np.interp if nothing else
[16:21:21] <lericson> even a sinusoidal function would be ok
[16:22:48] *** Joins: ub (~Thunderbi@p200300ecdf0994402d77270a91cab57e.dip0.t-ipconnect.de)
[16:22:50] <drogas> uh yes that's what I did after cubic didn't work. anyways I'm past that point as I said
[16:23:04] <drogas> just want to know how to annotate a specific point in the dataset
[16:23:17] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[16:23:33] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[16:23:37] *** Quits: esther (~esther@2607:fb90:5fed:c5f3:b33b:d180:d9c0:24a) (Ping timeout: 240 seconds)
[16:23:41] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[16:24:07] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:24:57] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 256 seconds)
[16:25:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[16:25:25] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:26:06] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[16:26:50] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[16:28:11] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:29:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[16:29:47] *** Joins: Plain-Sight (~Plain-Sig@152.26.89.234)
[16:30:40] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:30:40] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:30:40] *** Joins: JordiGH (~jordi@user/jordigh)
[16:31:26] <dante-as> Hi guys, I am trying to push a message using logging library from Python, but I do not get why the message is not posted to the console. I have these 3 files: https://bpa.st/4PPA https://bpa.st/YQZQ https://bpa.st/P3FA
[16:31:43] <dante-as> Can someone have a look into them and check if it's any mistake?
[16:32:26] *** Joins: sammie (~sammie@217-122-207-100.cable.dynamic.v4.ziggo.nl)
[16:32:34] *** Joins: otty1 (~u0_a161@157.44.195.38)
[16:32:37] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[16:33:31] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[16:34:21] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[16:35:01] <very_sneaky> i'm getting inconsistent behaviour on windows and linux when running bash scripts using `subprocess.check_call`: https://bpa.st/F2EQ. On linux, this runs fine. On windows, I get the error "-f was unexpected at this time" - running in git bash. Interestingly, the command runs fine in the full bash shell, just not when invoked from python. anybody have any idea what might cause this?
[16:35:57] *** Quits: killadi (~u0_a161@49.15.91.139) (Ping timeout: 240 seconds)
[16:36:25] <Yhg1s> very_sneaky: on Windows, it's not executing bash. It's executing the Windows shell.
[16:36:56] <Yhg1s> very_sneaky: I would recommend running 'subprocess.check_call(['bash', '-c', 'if [ -f "script.sh" ]; then bash script.sh; fi']) instead.
[16:37:05] *** Joins: jim87 (~gfurlan@93.55.249.30)
[16:38:35] *** Joins: fef (~thedawn@user/thedawn)
[16:39:02] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[16:41:10] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:41:27] <jim87> Hello! I've got a problem which starts with a misconfigured website which doesn't send the CA cert bundle and me who has the bundle (PEM) downloaded via the browser. I now need to use the requests library to get a file on that misconfigured server. I tried requesting via requests.get(URL, cert=pem_bundle_absolute_path), though it still  runs into an exception: SSLError: Caused by SSLError(SSLError(9, '[SSL] PEM lib (_ssl.c:4067)')) - any idea? Thanks :)
[16:41:56] *** Quits: hightower2 (~hightower@95.168.118.7) (Read error: Connection reset by peer)
[16:42:29] *** Parts: bancroft (~bancroft@user/bancroft) (WeeChat 3.2)
[16:42:42] *** Joins: anodesni (~anodesni@178.239.173.168)
[16:43:17] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[16:43:30] <anodesni> Hi, I'm using prospector to check my code, but I get "import-error / Unable to import" while these modules are installed. Any idea how to fix this?
[16:43:31] *** Quits: otty1 (~u0_a161@157.44.195.38) (Remote host closed the connection)
[16:43:58] *** Joins: hightower2 (~hightower@95.168.118.7)
[16:44:40] *** Joins: killadi (~u0_a161@157.44.195.38)
[16:46:29] *** Joins: Guest17 (~Guest17@197.210.84.235)
[16:46:57] *** Quits: Guest17 (~Guest17@197.210.84.235) (Client Quit)
[16:47:49] <very_sneaky> Yhg1s: even from git bash?
[16:47:56] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[16:49:47] <very_sneaky> Yhg1s: but thanks, i'll give that a go - i can't change the format of call unfortunately, so i'm assuming `subprocess.check_call(["bash -c 'if [ -f \"script.sh\" ]; then bash script.sh; fi'")` would be fine
[16:50:16] <Yhg1s> very_sneaky: it's about Python, not about how Python is invoked, so yes, even from git bash.
[16:51:12] <very_sneaky> i guess that makes sense - i always thought subprocess reached out to work out what the parent process was
[16:51:14] <very_sneaky> TIL
[16:51:35] <Yhg1s> No, there's no way to do that. It starts a new process.
[16:52:23] <very_sneaky> yeah, i just meant i thought it would inherit the env properties in the new process. anyway, i can see that it doesn't now
[16:52:43] <Yhg1s> It does inherit the environment, yes. That doesn't affect what shell is executed.
[16:52:54] <very_sneaky> gotcha
[16:53:09] *** Quits: killadi (~u0_a161@157.44.195.38) (Read error: Connection reset by peer)
[16:53:27] <very_sneaky> i think i might factor the shell script out to python anyway to make it more cross platform
[16:55:02] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[16:55:05] *** Joins: shad (~shad@user/shad)
[16:55:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Quit: Leaving)
[16:56:06] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:57:32] *** Joins: myusername (~sleeeepin@2001:4641:6e62:0:9dce:76e7:4731:23dd)
[16:57:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:58:23] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[16:58:56] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[16:59:09] *** Joins: killadi (~u0_a161@157.44.195.38)
[17:00:36] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:00:36] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[17:00:57] *** Quits: someuser (~user@197.54.58.85) (Ping timeout: 240 seconds)
[17:00:57] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[17:01:37] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[17:01:42] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Quit: Client closed)
[17:01:53] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:02:06] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[17:02:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:03:25] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:05:00] <jim87> anodesni: any virtual env? Do you have the __init__.py file within your module(s)?
[17:05:11] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[17:05:16] <anodesni> jim87, yes I use a venv
[17:06:20] <anodesni> It complains about standard modules such as tensorflow
[17:06:47] *** Joins: nomic (~nomic@185.192.69.41)
[17:07:47] <jim87> anodesni: tensorflow is not a standard module... have you installed in your virtual environment? And have you run the app within the virtual env?
[17:08:18] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[17:09:23] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[17:09:31] *** dob1_ is now known as dob1
[17:09:56] *** Joins: Fiji- (~Fiji@user/fiji)
[17:10:44] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[17:11:32] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[17:11:52] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:11:55] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:12:50] *** Quits: dre (~dre@2001:8003:c932:c301:6ef3:5315:93ef:2b0a) (Ping timeout: 250 seconds)
[17:13:33] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[17:14:11] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[17:15:29] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[17:15:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:16:55] *** Quits: KnowledgeShark (~Knowledge@50.34.206.168) (Read error: Connection reset by peer)
[17:17:11] *** Parts: Plain-Sight (~Plain-Sig@152.26.89.234) ()
[17:17:19] *** Joins: KnowledgeShark (~Knowledge@50.34.206.168)
[17:18:19] <grym> anodesni: have you installed prospector in the venv as well? "For best results, you should install prospector to the same place as your project and its dependencies. That is, if you are using virtual environments, install pip into that virtual environment alongside your code. This allows the underlying tools to give better results, as they can infer and use knowledge of libraries that you use. If you install
[17:18:25] <grym> prospector system-wide and use it on a project in a virtual environment, you will see several incorrect errors because prospector cannot access the libraries your project uses."
[17:18:28] <grym> https://prospector.readthedocs.io/en/latest/#installation
[17:19:37] *** Joins: kts (~kts@103.73.237.211)
[17:20:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:20:06] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[17:20:44] *** Joins: marcello1 (~mp@2001:1a81:1204:8a00:3991:cbbc:67fd:83b3)
[17:21:29] *** Quits: marcello42 (~mp@2001:1a81:1204:8a00:ea0c:2047:6cd8:7a12) (Ping timeout: 268 seconds)
[17:22:11] *** Joins: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net)
[17:25:01] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[17:25:12] *** Joins: pycode (~pycode3@2001:b07:5d28:551:eb25:ad9f:142e:2ae1)
[17:25:17] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 240 seconds)
[17:25:23] <anodesni> jim87, yes, it is installed.
[17:25:33] *** Joins: dre (~dre@2001:8003:c932:c301:5559:1784:a76e:c418)
[17:25:38] <anodesni> grym, yes I did install it inside the venv
[17:26:05] <grym> anodesni: are you running the version of prospector that you installed in the venv?
[17:26:45] <grym> anodesni: does thevenv/bin/python -m pip list show you the modules you expect (including prospector and tensorflow?)
[17:29:48] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:5cef:e512:2284:6d3c)
[17:29:48] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:5cef:e512:2284:6d3c) (Changing host)
[17:29:48] *** Joins: skapata (~Skapata@user/skapata)
[17:30:37] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 240 seconds)
[17:30:59] <jim87> anodesni: (linux / macos?) within your virtual environment, what does "which prospector" respond? How are you calling prospector?
[17:31:13] *** Joins: alex11 (~alex11@user/alex11)
[17:32:27] *** Joins: someuser (~user@197.54.58.85)
[17:32:30] <anodesni> jim87, linux
[17:32:37] <anodesni> grym, yes all modules are listed
[17:33:04] <grym> anodesni: ok, then you should be gtg
[17:33:09] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[17:33:44] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:33:45] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[17:34:15] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[17:34:15] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[17:34:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:34:25] <anodesni> grym, but prospector isn't ...
[17:34:30] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 250 seconds)
[17:34:48] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:fdbe:513b:57e2:ec26) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[17:34:54] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:35:04] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:fdbe:513b:57e2:ec26)
[17:35:04] <grym> anodesni: can you try invoking prospector by /the/full/path/to/the/venv/bin/python -m prospector  instead of any other means of launching it, and repeat?
[17:35:27] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[17:35:56] <grym> you might be shadowing the name in your shell if you've installed prospector in multiple locations
[17:36:27] *** Joins: jpic (~jpic@82.142.9.130)
[17:36:32] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[17:36:45] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[17:37:33] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[17:38:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:38:56] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[17:39:50] *** Joins: bloody (~bloody@user/bloody)
[17:40:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:41:24] <anodesni> It is invoked by tox, which is outside the venv of course. But propspector is only installed inside the venv
[17:41:49] <grym> ok, but; does it work if you invoke it manually
[17:44:18] *** Quits: marcello1 (~mp@2001:1a81:1204:8a00:3991:cbbc:67fd:83b3) (Ping timeout: 268 seconds)
[17:44:38] *** Joins: d1cor (~diego@179.63.242.120)
[17:45:25] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[17:45:51] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[17:45:59] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 256 seconds)
[17:46:23] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[17:48:54] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Quit: rwbrambler)
[17:51:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:51:49] *** Joins: eson123 (~whatever@118.69.128.37)
[17:52:45] *** Joins: humberto1 (~humbertow@189.236.30.209)
[17:53:08] <anodesni> Well, it seems most are my own files (not modules). For example here "pylint: import-error / Unable to import 'protocols'" the file protocols is in a subfolder where prospector is run..
[17:53:53] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[17:54:37] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[17:54:40] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[17:54:51] <grym> files are modules
[17:55:28] *** Quits: ovnicraft (~ovnicraft@186.70.222.62) (Quit: Textual IRC Client: www.textualapp.com)
[17:56:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:57:46] *** Quits: xensie (~xensie@88-115-236-81.elisa-laajakaista.fi) (Quit: Textual IRC Client: www.textualapp.com)
[17:58:33] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Read error: Connection reset by peer)
[18:00:43] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94) (Ping timeout: 256 seconds)
[18:01:26] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[18:01:41] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[18:02:07] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[18:04:12] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94)
[18:04:17] *** Quits: driib2 (~driib@c-94bee655.017-99-73746f1.bbcust.telenor.se) (Quit: The Lounge - https://thelounge.chat)
[18:04:58] *** Joins: driib2 (~driib@c-94bee655.017-99-73746f1.bbcust.telenor.se)
[18:06:14] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:06:23] *** Quits: killadi (~u0_a161@157.44.195.38) (Ping timeout: 256 seconds)
[18:06:23] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 256 seconds)
[18:07:00] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:07:08] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:07:18] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94) (Remote host closed the connection)
[18:07:31] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[18:07:31] *** Quits: dfkfs (~dfkfs@178.49.152.151) (Ping timeout: 256 seconds)
[18:07:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[18:07:47] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:08:12] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:09:27] <anodesni> grym, I think I got it. I just import the files that are in the same directory as scripts that I run. But I had to use relative imports ("from . import protocols")
[18:09:44] *** Quits: eson123 (~whatever@118.69.128.37) (Quit: Leaving)
[18:09:52] *** Joins: fikran (~fikran@user/fikran)
[18:09:57] <grym> anodesni: i recommend absolute imports and a package, at least at some point
[18:10:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[18:12:03] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[18:12:32] *** Quits: Sadale (~Sadale@user/sadale) (Excess Flood)
[18:12:54] *** Joins: Sadale (~Sadale@user/sadale)
[18:14:37] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[18:15:02] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[18:16:12] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl488ehhylc6vc96r.ipv6.telus.net)
[18:17:17] *** Quits: someuser (~user@197.54.58.85) (Ping timeout: 240 seconds)
[18:17:43] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:a011:180:f68f:b20b)
[18:18:43] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[18:18:45] *** Joins: stonkey (~stonkey@user/stonkey)
[18:18:59] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[18:19:02] *** Quits: myusername (~sleeeepin@2001:4641:6e62:0:9dce:76e7:4731:23dd) (Ping timeout: 240 seconds)
[18:19:27] *** Joins: someuser (~user@197.54.58.85)
[18:22:50] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:24:14] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com)
[18:24:23] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:a0a9:cf81:3210:bd96) (Ping timeout: 268 seconds)
[18:26:10] *** Joins: rapha (~jrs@user/rapha)
[18:26:14] <rapha> hi all
[18:26:56] <Dan39> hi rapha
[18:27:28] <rapha> i'm looking at an open source project where i'd like to improve a little thing, but don't know how, and was hoping to get some help here maybe
[18:27:29] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[18:27:56] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:28:21] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:2131:4609:8e04:334c)
[18:28:37] <rapha> in https://gitlab.com/scripta/escriptorium/-/blob/develop/app/apps/imports/parsers.py#L126-127 ... "filename" is the name of a zip file, which includes multiple xml files. the error message is missing the name of the XML file where the error occured. at least the contents of page_nb (line 103) would be nice. but how do you access page_nb inside the "except:" branch?
[18:28:59] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:30:09] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:32:37] *** Joins: georgios (~georgios@user/georgios)
[18:34:22] *** Quits: Nutte35 (~Nutte@202.153.80.254) (Read error: Connection reset by peer)
[18:34:25] *** Quits: anodesni (~anodesni@178.239.173.168) (Quit: Leaving)
[18:34:25] *** Joins: frost (~frost@user/frost)
[18:37:25] *** Joins: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[18:37:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[18:40:02] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:54dd:df69:2b7e:e11c)
[18:41:22] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[18:42:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[18:42:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:43:21] *** Quits: resmo (~resmo@2a00:d420:9:8a00:2e4d:3b0f:47c6:9c76) (Read error: Connection reset by peer)
[18:43:25] *** Joins: resmo_ (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[18:46:02] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:46:07] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:46:35] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[18:46:40] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[18:47:31] *** Joins: bluedust_ (~bluedust@117.241.183.103)
[18:47:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[18:48:13] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:48:54] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[18:49:28] *** Quits: ejjfunky2 (~ejjfunky@125.164.22.116) (Quit: Leaving)
[18:49:41] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:49:49] *** Joins: node1 (~hex@user/node1)
[18:49:53] <node1> Hello
[18:49:58] <mefistofeles> hi
[18:50:04] <node1> Any packages do exist to draw venn diagram?
[18:50:46] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 250 seconds)
[18:50:54] <node1> In python is there any packages that helps to draw Venn diagram? of sets operations?
[18:51:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:51:09] *** Quits: bluedust (~bluedust@103.160.233.171) (Ping timeout: 256 seconds)
[18:51:18] <SnoopJ> some https://pypi.org/search/?q=venn+diagram
[18:51:46] *** Joins: Nutte35 (~Nutte@202.153.80.254)
[18:51:59] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:52:25] *** Quits: Nutte35 (~Nutte@202.153.80.254) (Remote host closed the connection)
[18:52:40] *** Joins: Nutte35 (~Nutte@202.153.80.254)
[18:52:57] <node1> SnoopJ, Thanks
[18:54:04] <xheimlich> I'm trying to make this regex capture all function arguments that have type annotations:
[18:54:07] <xheimlich> https://pythex.org/?regex=class%20(%5Cw%2B)%5C(%5Cw%2B%5C)%3A%5Cs*def%5Cs%2B(%5Cw%2B).*&test_string=class%20SubClass(MasterClass)%3A%0A%20%20%20def%20fn0(untyped_arg)%3A%20%0A%20%20%20def%20goo(arg1%2Carg2)%3A%0A%0A%20%20def%20fn1(typed_a%3A%20type%2C%20untyped_b)%3A%0A%20%20%20def%20fn(arg%3A%20type%2C%20marg%3Amother)%3A%0A&ignorecase=0&multiline=0&dotall=0&verbose=0
[18:54:12] <xheimlich> whoa, what a stupid long url
[18:54:40] <xheimlich> anyway, my actual regex is
[18:54:43] <xheimlich> class (\w+)\(\w+\):\s*def\s+(\w+).*
[18:55:12] <xheimlich> this picks up the name of the class and the first function
[18:55:23] <xheimlich> I'm trying first to capture the name of all functions.
[18:55:49] <xheimlich> or actually -- the full line that defines them, as I have another regex that picks up the typed arguments.
[18:55:55] <d3x> xheimlich, that's not something regex is designed for
[18:56:05] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6445-a70e-e260-03f3.res6.spectrum.com)
[18:56:36] <xheimlich> I briefly looked at lark. I half-heartedly started writing a text adventure game in the Before Times with lark.
[18:57:08] <xheimlich> but it looks like such overkill and I already can process lines that start with a def. All I want is to group them by class.
[18:58:06] *** Joins: barry1 (~Thunderbi@222.129.38.226)
[18:58:13] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[18:58:45] <xheimlich> I could try and count the initial whitespaces somehow. look for a class definition and loop in a naive way while more indented than class line.
[18:59:32] <xheimlich> somehow it feels like I should be able to capture more than one (\s*def\s+(\w+).*
[18:59:55] *** Joins: donoban (~user@178.237.224.200)
[19:01:07] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[19:01:09] <donoban> Hi, I'm experimenting a race condition. Some func started async creates an unix socket and then launches another program (brwap) with tries to mount bind it
[19:01:32] <donoban> https://github.com/igo95862/bubblejail/issues/13
[19:01:41] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Remote host closed the connection)
[19:01:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:01:47] *** Joins: marcello1 (~mp@2001:1a81:1204:8a00:3991:cbbc:67fd:83b3)
[19:01:52] <donoban> currently I feel that it has something to do with python or bubblejail code
[19:01:55] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[19:02:08] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[19:02:35] <donoban> uhM
[19:02:36] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[19:02:42] <donoban> beh looks a bubblejail error
[19:03:51] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[19:04:33] *** Parts: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Leaving)
[19:04:57] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[19:05:18] *** Quits: marcello1 (~mp@2001:1a81:1204:8a00:3991:cbbc:67fd:83b3) (Read error: Connection reset by peer)
[19:05:29] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:05:38] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[19:05:42] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 268 seconds)
[19:05:42] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 268 seconds)
[19:06:04] *** Joins: myusername (~sleeeepin@2001:4641:6e62:0:406c:71b5:d48e:398c)
[19:06:52] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[19:07:12] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:07:27] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[19:08:06] <rapha> Dan39: did i ask my question in a bad way?
[19:08:43] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 256 seconds)
[19:08:48] <Dan39> rapha: i don't think so... i just can't help right now :P
[19:08:52] <donoban> anyone knows if I there is some way for add a wait "init" to finish here? https://github.com/igo95862/bubblejail/blob/2cf8cd937bc4900d1af7571f99886ae19df3d1fe/bubblejail/bubblejail_instance.py#L317
[19:08:57] <d3x> xheimlich, python's got a builtin python parser (surprise!). You don't have to invent your own. https://docs.python.org/3/library/ast.html
[19:09:20] <d3x> xheimlich, sample code to print method arguments annotations: https://replit.com/@MichalBielawski/IntrepidCornsilkFlashmemory#main.py
[19:09:51] <xheimlich> oh.
[19:09:54] <xheimlich> will study that
[19:09:56] *** Joins: anotheruser (~user@45.130.86.11)
[19:10:17] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[19:10:37] *** Quits: hightower2 (~hightower@95.168.118.7) (Read error: Connection reset by peer)
[19:11:06] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[19:11:17] *** Joins: Deana (~Deana@188.18.196.125)
[19:11:23] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[19:11:51] <InPhase> rapha: What's stopping you from just accessing it?  Have you tried it?
[19:11:57] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[19:12:50] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[19:12:57] *** Quits: someuser (~user@197.54.58.85) (Ping timeout: 240 seconds)
[19:13:19] <InPhase> rapha: You might be thinking of scoping rules from other languages, but this is not a scope boundary for Python.
[19:13:32] *** Quits: dre (~dre@2001:8003:c932:c301:5559:1784:a76e:c418) (Ping timeout: 240 seconds)
[19:13:33] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:2131:4609:8e04:334c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:15:15] <xheimlich> this little project is just to produce a graphviz of is-a and has-a class dependencies.
[19:17:29] <grym> xheimlich: would inspect.get_annotations() be of more use to you here
[19:17:34] <grym> (than regex)
[19:17:42] *** Quits: myusername (~sleeeepin@2001:4641:6e62:0:406c:71b5:d48e:398c) (Quit: Leaving)
[19:17:58] *** Joins: myusername (~sleeeepin@2001:4641:6e62:0:406c:71b5:d48e:398c)
[19:18:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[19:19:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:19:06] <xheimlich> but I have a dream project this could make possible, which is to specify a restricted version of python with some compile-time toposort magic that doesn't fit the margin of this chatbox.
[19:19:09] *** Quits: sn_fk_n (~snufkin@2.221.192.124) (Quit: Lost terminal)
[19:19:19] <xheimlich> (It's a holiday here, but the baby just woke up anyway)
[19:19:54] *** Joins: magla (~gelignite@55d4ea14.access.ecotel.net)
[19:20:25] *** Joins: hex_ (~hex@43.230.42.79)
[19:20:32] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[19:20:43] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[19:21:05] *** Quits: myusername (~sleeeepin@2001:4641:6e62:0:406c:71b5:d48e:398c) (Client Quit)
[19:22:14] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:22:42] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:22:53] *** Quits: node1 (~hex@user/node1) (Ping timeout: 256 seconds)
[19:22:53] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 256 seconds)
[19:23:03] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:23:04] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[19:23:21] *** Joins: gdd (~gdd@129.199.146.230)
[19:24:10] *** Quits: bluedust_ (~bluedust@117.241.183.103) (Remote host closed the connection)
[19:24:22] *** Joins: myusername (~sleeeepin@2001:4641:6e62:0:406c:71b5:d48e:398c)
[19:24:56] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[19:25:48] *** Joins: dre (~dre@2001:8003:c932:c301:f51b:a6a3:7655:7551)
[19:25:55] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:26:08] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:26:14] *** Quits: Deana (~Deana@188.18.196.125) (Quit: Konversation terminated!)
[19:27:59] *** Quits: BurgerW (~BurgerW@222.244.79.166) (Ping timeout: 256 seconds)
[19:29:30] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:30:00] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:30:02] <zerosum> hey all, trying to figure out what the best way will be of traversing this nested dictionary.. my code and output is the following  https://bpa.st/RKYQ
[19:30:17] <zerosum> ideally what I want to do is just get a list of all ipv4 ips and another for ipv6
[19:31:49] *** Joins: awmv (~awmv@213.55.225.60)
[19:32:22] *** Joins: tekniq (~tekniq@82-169-181-124.biz.kpn.net)
[19:32:22] *** Quits: u0_a4161 (~xxNightxO@120.20.212.198) (Ping timeout: 250 seconds)
[19:32:24] <apocalyptech> A nested series of `for k, v in d.items():` should get you to the data; looks like the output's pretty well formed
[19:32:37] *** Quits: Nutte35 (~Nutte@202.153.80.254) (Ping timeout: 240 seconds)
[19:33:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[19:34:47] *** Quits: anotheruser (~user@45.130.86.11) (Ping timeout: 256 seconds)
[19:35:55] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-233.poda.cz) (Ping timeout: 268 seconds)
[19:36:20] *** Joins: subopt (~subopt@2603-8081-2302-459a-0182-3974-5f38-face.res6.spectrum.com)
[19:36:35] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl488ehhylc6vc96r.ipv6.telus.net) (Quit: Leaving)
[19:37:47] *** Joins: Barones (~Barones@189.50.80.77)
[19:38:23] *** Quits: hex_ (~hex@43.230.42.79) (Quit: Leaving)
[19:38:48] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:40:26] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[19:40:32] <rapha> InPhase: oh! indeed that's what was stopping me. okay, let me try to rid myself of these fears then...
[19:41:08] <rendar> should i use parquet or hdf5? anyone experienced them?
[19:41:09] <MacGyver> It feels weird that the address is a key for a nested dict.
[19:42:23] *** Joins: sn_fk_n (~snufkin@2.221.192.124)
[19:42:57] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[19:43:00] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[19:43:28] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[19:43:51] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[19:43:56] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Remote host closed the connection)
[19:45:32] *** Quits: onu (~onufn@gibbs.uberspace.de) (Read error: Connection reset by peer)
[19:45:46] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[19:46:04] *** Quits: sammie (~sammie@217-122-207-100.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.0.1)
[19:46:23] *** Quits: barry1 (~Thunderbi@222.129.38.226) (Quit: barry1)
[19:46:28] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[19:46:33] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[19:46:38] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:46:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:47:17] *** Joins: Bakunin (~Bakunin@user/lindis)
[19:47:42] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:47:51] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[19:49:03] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[19:49:09] <dante-as> Hi guys, I have a question: I am having these 2 files: https://bpa.st/XFBQ and https://bpa.st/VH6A. If I am running it like in this files, I am getting this error: AttributeError: type object 'ConsoleHandler' has no attribute 'level'
[19:49:12] *** Joins: onu (~onufn@gibbs.uberspace.de)
[19:50:02] <dante-as> If I am running it with logs = Log(handlers=ConsoleHandler().console(), name=os.path.basename(__file__)) https://bpa.st/XFBQ , it works
[19:50:18] <dante-as> I am doing a Pythonic mistake, but I am not finding out what I am doing wrong
[19:50:20] <grym> dante-as: i suspect you want logs = Log(handlers=ConsoleHandler(), ...
[19:50:24] <SnoopJ> dante-as, what is Log?  (it's really hard to see the problem behind all the obfuscation)
[19:50:57] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[19:51:20] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[19:51:26] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[19:51:27] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[19:51:40] *** Quits: mpmc (~mpmc@user/mpmc) (Quit: ZNC - https://znc.in)
[19:51:44] *** Joins: Guest19 (~Guest19@120-069-158-163.dynamic.caiway.nl)
[19:51:46] *** Joins: Guest82 (~Guest82@103.113.189.244)
[19:52:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:52:30] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:52:33] *** Joins: Fiji_ (~Fiji@user/fiji)
[19:53:28] *** Joins: fef (~thedawn@user/thedawn)
[19:54:06] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:54:34] <dante-as> @SnoopJ: https://bpa.st/2YSQ This is the file that contains Log
[19:54:42] *** Joins: ebrau (~ebrau@142.126.175.200)
[19:55:18] <dante-as> @grym: logs = Log(handlers=ConsoleHandler() didn't worked out, it's basically the same as ConsoleHandler doesn't have any input parameters
[19:55:30] <zerosum> apocalyptech I have something like this now: https://bpa.st/7Q7Q but I'm having trouble understanding the data structure
[19:55:51] <zerosum> is it a dictionary with a list as a value ?
[19:56:12] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[19:56:22] *** Quits: awmv (~awmv@213.55.225.60) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:56:23] *** Joins: lastshell (~lastshell@user/lastshell)
[19:56:31] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:56:49] <grym> dante-as: then it seems like you should run it the way it works, then.  ConsoleHandler is the class object itself, which is the wrong thing to pass, and i guess so is an instance of it
[19:56:49] *** Joins: mpmc (~mpmc@user/mpmc)
[19:56:54] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:57:18] *** Joins: rje (~textual@50.35.241.164)
[19:57:45] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:58:04] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:58:57] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:54dd:df69:2b7e:e11c) (Ping timeout: 240 seconds)
[19:59:06] <apocalyptech> zerosum: Nah, it's just a bunch of nested dicts
[20:00:12] <zerosum> yikes, so  I should be able to just traverse my values with indexes right?
[20:00:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[20:00:50] <zerosum> but when I do something like v[1].result I get list index out of range
[20:00:53] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:01:12] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:5061:7926:72a1:8ddf) (Ping timeout: 268 seconds)
[20:01:23] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:01:25] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[20:01:28] <apocalyptech> zerosum: No, dictionaries don't have numeric indicies
[20:01:32] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f2:194d:493b:6ac0:af6e:1637) (Read error: Connection reset by peer)
[20:01:35] <zerosum> I wish i can make this dictionary output more readable to help me see the levels
[20:01:36] <apocalyptech> zerosum: Here you go, you'd want to do something like this: https://bpa.st/NF4Q
[20:01:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[20:02:11] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:31da:f492:e26b:89fa)
[20:02:18] <apocalyptech> Producing this output: https://bpa.st/AIEQ
[20:02:24] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[20:02:55] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[20:02:58] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:03:01] <apocalyptech> obvs. what you'd be after is to shove it into a more immediately-useful set of objects rather than just printing out, but that'd get you all the way through the structure
[20:03:07] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[20:03:19] <zerosum> for sure, appreciate that apocalyptech
[20:03:27] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:03:28] <apocalyptech> np, good luck!
[20:04:19] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:04:34] <apocalyptech> If you were trying to access individual elements in the structure, you'd be doing something like: d['get_interfaces_ip'['
[20:04:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:04:37] <apocalyptech> (oops)
[20:04:49] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[20:04:59] <InPhase> rapha: I've found HDF5 under Python pretty convenient.  The build system in the HDF5 C++ library under Windows however was a bit more of a mess though, sufficiently so that I actually dropped HDF5 from one project just to avoid it.  So that might be a concern depending on your language portability needs.
[20:05:08] <apocalyptech> If you were trying to access individual elements in the structure, you'd be doing something like: d['get_interfaces_ip']['jsrv.1']['ipv4'], if you wanted to get the dict that describes all of jsrv.1's v4 addresses, for instance
[20:05:49] <InPhase> rapha: I had no problems with HDF5 in C++ under Linux though, and it's very simple with Python.
[20:05:54] <apocalyptech> Numeric indicies would only be used for lists.  (Of course, if you had a dict whose keys were integers, it'd look similar when accessing, but that's beside the point)
[20:05:56] *** Quits: Guest82 (~Guest82@103.113.189.244) (Quit: Client closed)
[20:05:57] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 256 seconds)
[20:06:16] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[20:06:40] *** Joins: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net)
[20:06:48] *** gentooclimax is now known as climax
[20:06:49] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:07:45] *** Joins: andreasbuhr (~quassel@p548ddbb2.dip0.t-ipconnect.de)
[20:07:45] *** Quits: andreasbuhr (~quassel@p548ddbb2.dip0.t-ipconnect.de) (Client Quit)
[20:07:59] *** Joins: pflo (~pflo@user/pflo)
[20:09:08] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:09:42] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:10:03] <InPhase> rapha: If you have small data though, just go with CSV files and never suffer.  Things like HDF5 are for very big piles of numerical data.
[20:10:44] *** Quits: ngp (~ngp@199.180.249.183) (Quit: connection reset by purr)
[20:11:22] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 250 seconds)
[20:11:38] *** Joins: ngp (~ngp@199.180.249.183)
[20:11:41] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:31da:f492:e26b:89fa) (Ping timeout: 268 seconds)
[20:11:56] <zerosum> apocalyptech so I wouldn't iterate through the dictionaries and just do print(get_interfaces_ip_result['get_interfaces_ip'['jsrv.1']['ipv4']]) ?
[20:12:11] *** Joins: cosimone (~user@93-47-229-195.ip115.fastwebnet.it)
[20:12:51] <m_tadeu> hi....does anyone knows how to get a date from string using a timezone in this format (+00:00)? seems it only supports +0000
[20:13:17] *** Joins: jpic (~jpic@82.142.9.130)
[20:13:25] <SnoopJ> m_tadeu, (+00:00) looks like it is indicating only a time, not a date
[20:13:35] <zerosum> I want to create a list of all IPs, one for v4 and one for v6 so I think the block of code you sent is what I need :D
[20:13:48] <SnoopJ> oh, it's supposed to be the timezone
[20:13:56] *** Joins: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:13:57] *** Joins: michagogo (uid14316@user/michagogo)
[20:14:02] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[20:14:19] <m_tadeu> the date format is this "2020-08-26 15:10:14.369000+00:00"
[20:14:36] *** Joins: hightower2 (~hightower@95.168.118.7)
[20:14:46] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:16:39] <pflo> that looks like its ISO 8601 m_tadeu
[20:16:51] <SnoopJ> almost, it has more precision
[20:17:18] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:17:23] <SnoopJ> or does ISO 8601 let you go to microseconds? I can't recall
[20:17:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[20:17:29] <m_tadeu> I think the ISO has the T in place of the space, am I wrong?
[20:17:57] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:18:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[20:18:56] <pflo> according to wikipedia: There is no limit on the number of decimal places for the decimal fraction.
[20:19:13] *** Joins: fikran (~fikran@user/fikran)
[20:19:59] <pflo> and Earlier versions omitted the T (representing time) in both formats.
[20:20:03] <grym> pflo: hey if i had 160 swiss francs i could tell you for real!
[20:20:20] <SnoopJ> m_tadeu, pendulum.parse() can handle this string, although you end up with Timezone('+00:00'), which might not be what you had in mind
[20:20:44] <pflo> i find it anoying that standards are that expensive too
[20:20:55] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:20:56] <grym> it's only an extra 180 for the extras :P
[20:21:27] <m_tadeu> SnoopJ: I'll try that....thanks guys
[20:21:30] *** Joins: harshhpareek (~harshhpar@c-67-188-113-15.hsd1.ca.comcast.net)
[20:21:49] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[20:22:00] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:23:44] *** Joins: e2m4n (~ezman@user/e2m4n)
[20:25:35] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[20:25:47] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[20:25:59] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:26:05] *** Quits: harshhpareek (~harshhpar@c-67-188-113-15.hsd1.ca.comcast.net) (Client Quit)
[20:26:28] *** Joins: vicfred (~vicfred@user/vicfred)
[20:26:36] *** Quits: ngp (~ngp@199.180.249.183) (Quit: connection reset by purr)
[20:26:43] <apocalyptech> zerosum: If you wanted to collect the info in there and get it in a more useful format, you'd want to iterate through the whole structure like I'd put in that pastebin
[20:26:46] *** Joins: ngp (~ngp@199.180.249.183)
[20:27:00] <apocalyptech> zerosum: Was just giving an example of if you *did* want to reference a particular bit of info inside the dict, directly
[20:29:06] *** climax is now known as gentooclimax
[20:29:22] *** Quits: d0ku (~d0ku@178.43.152.233.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[20:31:22] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:31da:f492:e26b:89fa)
[20:31:51] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10f2:194d:7058:4772:5881:e06)
[20:32:15] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10f2:194d:7058:4772:5881:e06) (Read error: No route to host)
[20:32:23] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10f2:194d:e0c8:18f6:f07a:a6a9)
[20:32:49] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:32:58] *** Joins: nyah (~nyah@94.6.71.219)
[20:33:43] *** Joins: blingrang (~blingrang@user/blingrang)
[20:34:25] <zerosum> apocalyptech got it ty, my code looks like this now but getting following error.. not sure what I missed https://bpa.st/PSWA
[20:34:59] <zerosum> get is that Result object being created
[20:35:02] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[20:35:03] <zerosum> where*
[20:35:39] <apocalyptech> Ah, it's being created by the nornir library; you'll have to look at their docs to see how to iterate over it
[20:36:21] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:31da:f492:e26b:89fa) (Ping timeout: 268 seconds)
[20:36:43] *** Quits: mrec_ (~markus@sundtek.de) (Changing host)
[20:36:43] *** Joins: mrec_ (~markus@user/mrec)
[20:38:38] <apocalyptech> Aha, so looking more closely at your original example, you'd basically want to start iterating over `get_interfaces_ip_result['vmx-dc1'][0].result` rather than just `get_interfaces_ip_result`
[20:38:46] *** Parts: pflo (~pflo@user/pflo) (Leaving)
[20:38:55] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[20:39:07] *** Joins: ST47 (~ST47@wikimedia/st47)
[20:40:32] *** Joins: Arw| (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[20:40:42] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[20:41:32] *** Quits: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[20:42:03] <apocalyptech> zerosum: https://bpa.st/UX3A <- that'd possibly do ya, if you wanted to be as generic as possible (iterate over all servers in the result list, and also all result lists)
[20:42:32] <apocalyptech> var names in there might not be totally appropriate 'cause I'm not at all familiar with the library you're using
[20:43:32] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[20:43:37] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:44:08] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:45:40] <zerosum> apocalyptech that did it, thanks so much.. how long have you been coding?
[20:45:43] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[20:46:13] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f9:d1b2:e0c8:18f6:f07a:a6a9)
[20:47:10] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[20:47:37] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:fdbe:513b:57e2:ec26) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:47:53] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:fdbe:513b:57e2:ec26)
[20:48:08] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:48:26] <apocalyptech> zerosum: np, enjoy!  Ever since the Apple II days, though I've never done it professionally (and believe me, it shows -- my coding has tended to remain rather amateurish)
[20:48:57] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[20:48:59] <apocalyptech> I swear half my comments in code are just me apologizing to any future readers.  :D
[20:49:55] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10f2:194d:e0c8:18f6:f07a:a6a9) (Ping timeout: 268 seconds)
[20:49:57] *** Quits: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net) (Remote host closed the connection)
[20:50:33] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:51:20] *** Quits: kts (~kts@103.73.237.211) (Quit: Konversation terminated!)
[20:51:37] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:1233:e1cf:a62a:92d8) (Quit: Leaving)
[20:51:43] <rapha> InPhase: sorry, what does HDF5 have to do with the variable scope thing?
[20:51:58] *** Joins: samarjeetlearnin (~samarjeet@150.129.67.119)
[20:52:03] *** Joins: maryo (~Maryo@user/maryo)
[20:52:36] *** Joins: cyphase (~cyphase@user/cyphase)
[20:52:50] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[20:52:59] <SnoopJ> rapha, I suspect InPhase meant to highlight rendar
[20:53:05] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[20:53:10] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[20:53:20] *** Quits: samarjeetlearnin (~samarjeet@150.129.67.119) (Client Quit)
[20:53:26] <rendar> oh
[20:53:33] <InPhase> Oh, yeah...
[20:53:44] <rendar> InPhase, i don't have small data
[20:53:48] <InPhase> Wrong r tab, then I just get going with the wrong r tab.  :)
[20:53:57] <rendar> i have gigabytes of data
[20:54:11] <rendar> mostly numerical data, like stock prices
[20:54:20] <SnoopJ> rendar, HDF5 shines brightest with large data
[20:54:34] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[20:54:49] <InPhase> rendar: Yeah, it can be a fine choice there.
[20:54:58] <rendar> yes i think so, but i read that parquet was created by the pandas creator itself, so i thought it was much better, because i'll use pandas a lot
[20:55:15] *** Quits: ebrau (~ebrau@142.126.175.200) (Ping timeout: 256 seconds)
[20:56:47] <SnoopJ> Parquet always struck me as really specific to Hadoop
[20:58:16] *** Joins: Samar1409 (~Samar1409@115.96.135.112)
[20:58:28] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:8d27:e107:2edb:b4a9)
[20:58:32] <Samar1409> #gsoc
[20:58:45] *** Joins: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch)
[20:58:48] <Samar1409> join channel #gsoc
[20:59:23] *** Joins: bluedust (~bluedust@117.241.183.103)
[20:59:55] *** Joins: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net)
[21:00:34] <zerosum> apocalyptech that's great, I'm picking up coding more seriously now (cause of work) but my head hurts and not sure if that'll get better w/ time or maybe not the best career choice for me at this point :-)
[21:01:12] *** Quits: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[21:01:17] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 240 seconds)
[21:01:40] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 256 seconds)
[21:02:04] <InPhase> rendar: I don't know about parquet as I haven't used it, but it seems the python support is based on a C++ conversion of the Java library (because who wants to deal with a Java library under Python), and it seems this C++ port of the parquet was last marked as "being developed" and has its most recent commits 3 years ago.  Proceed with caution I guess.
[21:02:06] <Samar1409> why??
[21:02:15] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 268 seconds)
[21:02:45] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Quit: Guest143332)
[21:02:54] <rendar> InPhase, uhm i see
[21:02:54] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[21:03:04] <rendar> InPhase, after these facts, i think hdf5 is a solid choice
[21:03:19] <InPhase> rendar: Personally I don't find it too hard to make up binary formats and readers/loaders for these when you have well-defined needs that don't match an existing system.
[21:03:33] <rendar> yep
[21:03:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:03:35] <InPhase> rendar: For simple mostly tabular data this is not very hard at all.
[21:03:37] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[21:04:19] <rendar> i think so
[21:05:35] <SnoopJ> it shouldn't be hard to change your mind *away* from HDF5, at least
[21:05:42] *** Quits: bluedust (~bluedust@117.241.183.103) (Remote host closed the connection)
[21:05:47] <salparad1> what is the value of pipx that I don't get from $(pyenv which <app>)? All I am getting is that it puts the entry point in $PATH, surely there is more.
[21:05:51] *** Parts: donoban (~user@178.237.224.200) (WeeChat 3.3)
[21:06:10] *** salparad1 is now known as salparadise
[21:06:20] *** Joins: marcello42 (~mp@2001:1a81:1204:8a00:ea0c:2047:6cd8:7a12)
[21:06:42] <grym> salparad1: it wraps `python<version> -m venv somevenv; somevenv/bin/python -m pip install app; ln -s somevenv/bin/<app-entry-point> ~/.local/bin`
[21:06:43] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1011:cc80:b7f7:3c19)
[21:06:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:07:01] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[21:07:02] *** Joins: kts (~kts@103.73.237.211)
[21:07:04] <grym> so you get the entry point in the path, and the tool in a venv instead of in local
[21:07:15] *** Joins: maromau (~mauro@151.95.107.126)
[21:07:33] <grym> there are also convenience commands to inject extra packages in the same venv, and update /remove/... things
[21:07:40] <SnoopJ> salparadise, pyenv doesn't really do much related to virtual environments. In this sense it's pretty poorly named.
[21:07:59] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:08:08] <grym> (i like to `pipx install ipython; pipx inject ipython attrs pydantic requests httpx numpy pandas ....` and have one slushbox of a venv that's nicely walled off)
[21:08:13] <SnoopJ> there's a plugin that does it, but...eghhh...
[21:09:10] *** Quits: Samar1409 (~Samar1409@115.96.135.112) (Quit: Client closed)
[21:09:59] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-113.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:10:18] *** Quits: dre (~dre@2001:8003:c932:c301:f51b:a6a3:7655:7551) (Ping timeout: 250 seconds)
[21:10:37] *** Quits: thorbw_ (~tw@46.230.130.50) (Ping timeout: 240 seconds)
[21:10:53] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 268 seconds)
[21:10:54] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:11:09] *** Joins: mickey8 (~user@user/mickey)
[21:11:49] <salparadise> SnoopJ: right, I forget that pyenv-virtualenv is an addon
[21:12:02] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:12:09] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[21:12:30] *** Joins: mickey8 (~user@user/mickey)
[21:12:37] <SnoopJ> salparadise, the main difference between pipx and that plugin is that pipx provides isolation per-application
[21:13:00] <grym> the other difference is that pipx won't install things that don't provide entry_points
[21:13:29] <salparadise> SnoopJ:I see, the way I get that with pyenv-virtualenv is to create a separate venv for each app, yeah?
[21:13:32] <grym> `pipx install attrs`, e.g., returns "No apps associated with package attrs or its dependencies. If you are attempting to install a library, pipx should not be used. Consider using pip or a
[21:13:36] <grym> similar tool instead."
[21:13:40] <SnoopJ> salparadise, yea, you'd have to do all that work for yourself
[21:13:42] *** Joins: goldfish (~goldfish@user/goldfish)
[21:13:46] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[21:13:54] <SnoopJ> I've always understood pipx as "I absolutely do not want to think about virtual environments, but I want them"
[21:13:58] *** Quits: chgtg (~chg@116.3.16.5) (Ping timeout: 268 seconds)
[21:14:15] <grym> i'd add "and i want them to run applications with"
[21:14:25] <grym> (ie, not to set up a dev environment)
[21:14:27] <SnoopJ> I thought that was relatively clear since pipx doesn't do anything else
[21:14:44] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[21:14:48] <salparadise> sure, pipx saves me from: `pyenv virtualenv <version> <app>` and then `pyenv activate <app>` and then `$(pyenv which pip) install <app>`
[21:15:03] <SnoopJ> something like that
[21:15:08] <salparadise> (with the caveat of entrypoint is needed)
[21:15:17] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[21:15:23] <salparadise> > I've always understood pipx as "I absolutely do not want to think about virtual environments, but I want them"
[21:15:33] <salparadise> ^^ ok that makes sense.
[21:15:38] *** Joins: isk (~isk@c-67-176-120-242.hsd1.co.comcast.net)
[21:15:57] <grym> for fast-moving python projects that i use as cli utils, it's very handy
[21:16:10] <grym> yt-dlp updates like every 8 hours sometimes :P
[21:16:20] <salparadise> yep, we do a lot of that, but hard to change your workflow
[21:16:39] <SnoopJ> pipx is basically workflow-in-a-box, there's no real room to hang your opinions off of it
[21:16:59] *** Quits: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch) (Read error: Connection reset by peer)
[21:17:12] <grym> (and i have zero compunctions about ignoring my distro package manager, which can be the other option for such tools)
[21:17:13] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:17:34] <grym> s/the/an
[21:17:36] *** Joins: Guest2457 (~Guest24@2409:4070:241a:8cdd:b193:1728:50e2:f1ac)
[21:18:05] *** Quits: Guest2457 (~Guest24@2409:4070:241a:8cdd:b193:1728:50e2:f1ac) (Client Quit)
[21:18:25] *** Joins: Guest2465 (~Guest24@2409:4070:241a:8cdd:b193:1728:50e2:f1ac)
[21:19:30] *** Quits: Guest2465 (~Guest24@2409:4070:241a:8cdd:b193:1728:50e2:f1ac) (Client Quit)
[21:20:12] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:20:30] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[21:20:35] *** Quits: SaadKnight (~NIXKnight@198.98.57.76) (Quit: bye)
[21:20:56] *** Joins: z1haze (~z1haze@ip24-251-237-210.ph.ph.cox.net)
[21:20:56] *** Quits: z1haze (~z1haze@ip24-251-237-210.ph.ph.cox.net) (Changing host)
[21:20:56] *** Joins: z1haze (~z1haze@user/z1haze)
[21:21:30] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[21:22:23] *** Joins: killadi (~u0_a161@157.44.219.185)
[21:22:30] *** Joins: dre (~dre@2001:8003:c932:c301:ce6d:d9b0:21ac:1ee2)
[21:22:36] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 268 seconds)
[21:23:45] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[21:25:29] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[21:26:16] <z1haze> could anyone assist me with an issue im having with selenium being unable to locate a link through any means that i've attemped? By.LINK_TEXT, XPATH, PARTIAL_LINK_TEXT, CSS_SELECTOR, CLASS_NAME, etc.. none of which will locate the link, even though i know its there. Also I am _not_ a python dev, I just have been asked to rig something up for a project, please be gentlem here is my current state of code https://bpa.st/BXVQ
[21:27:21] <SnoopJ> z1haze, this code gets stuck at the wait?
[21:27:23] *** Joins: Guest2456 (~Guest24@2409:4070:241a:8cdd:b193:1728:50e2:f1ac)
[21:27:37] <z1haze> yeah it ends in a timeout exception on the wait
[21:27:52] <SnoopJ> ah, I missed the timeout
[21:27:55] <z1haze> but before that ive attempted just finding the link without the wait, etc. through all of the above mentioned ways but it never dins it
[21:28:27] <z1haze> line 44 is the issue
[21:28:50] <z1haze> i have even been running it without headless so i can visibly see the links on the page, but it still can't find them
[21:29:40] *** Joins: onichomp (~onichomp@2806:264:4408:1d4:2535:2f81:327c:26d8)
[21:29:50] <z1haze> i wasnt sure if this stuff ran synchonously or not, so i added several sleeps in there to see if that was the issue, but it isnt
[21:30:14] <SnoopJ> it'll block the Python program, yea
[21:30:14] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[21:30:31] <dba> z1haze: what is the url = "some url"?
[21:31:41] <SnoopJ> z1haze, any chance you can share the content of the document after the timeout? My main guesses here would be that the selector is bad, or that the visibility criterion may not be meaningful for the actual rendering taking place. Of those two I'd suspect the former more.
[21:31:41] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f9:d1b2:e0c8:18f6:f07a:a6a9) (Read error: Connection reset by peer)
[21:31:41] <z1haze> a url i believe I cannot share. its a link to a page that passes a token then redirects to a different page. then from the new page i grab the domain and append a new path to the url and navigate to that. all of this works
[21:32:15] *** Joins: ebrau (~ebrau@142.126.175.200)
[21:32:19] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[21:33:09] <z1haze> everything is working as expected up until line 44, where it just refuses to find the link. I guess i can clip the source. but like i said ive tried locating the element through every which way
[21:33:42] <z1haze> aha!
[21:33:53] <z1haze> its a freakin iframe
[21:33:56] <z1haze> why in the hell
[21:34:01] *** Joins: p-i- (~Ohmu@2403:6200:8978:84e4:f981:e2b1:518d:d697)
[21:34:21] *** Joins: withered1wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[21:34:29] <rapha> SnoopJ: oh, well, that makes sense then :)
[21:34:30] *** Joins: nomic (~nomic@185.192.69.41)
[21:34:37] *** Quits: withered1wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Client Quit)
[21:34:37] <p-i-> https://bpa.st/YCGA <-- is there any more Pythonic way to write this code?
[21:34:55] *** Joins: ravan (~ravan@user/ravan)
[21:35:08] <SnoopJ> z1haze, ah, that makes sense
[21:35:11] <z1haze> well, given that this is an iframe.. is there a way to locate elements in an iframe?
[21:35:37] *** Quits: isk (~isk@c-67-176-120-242.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[21:36:11] *** Joins: kathadris (~jwisbell3@174-080-085-082.res.spectrum.com)
[21:36:32] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Remote host closed the connection)
[21:37:35] <grym> p-i-: that seems pretty straightforward to me
[21:37:39] *** Joins: pigweed (~pigweed@97.119.204.166)
[21:39:57] *** Quits: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com) (Quit: cemotyz09)
[21:40:10] <Cheaterman> Hello buddiez I hope y'all doing goodie
[21:40:20] *** Joins: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com)
[21:40:21] *** Joins: rje (~textual@65.141.156.170)
[21:41:17] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Ping timeout: 240 seconds)
[21:41:26] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[21:41:37] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 240 seconds)
[21:41:43] *** Quits: a0z1 (~a0z1@185.248.85.10) (Ping timeout: 256 seconds)
[21:41:45] <Cheaterman> I'm wrapping some C++ code and I wanna provide access to a singleton. What do you think would be the most idiomatic way for my users to access it? Importing the instance from my module, calling a classmethod on the wrapper class (and perhaps forbidding constructing it otherwise), make the wrapper class constructor return the singleton using a metaclass?
[21:42:17] *** Quits: magla (~gelignite@55d4ea14.access.ecotel.net) (Quit: Stay safe!)
[21:42:37] <Cheaterman> Thanks in advance :-) - obviously feel free to ask for more context (speaking of which, code is here: https://github.com/Cheaterman/OMPy )
[21:43:02] <Swayze> https://stackoverflow.com/questions/12516954/exposing-a-c-singleton-in-python
[21:43:29] <SnoopJ> Cheaterman, do you need the *wrapper* to also be a singleton?
[21:43:41] *** Joins: ouestbillie (~gallup@185.213.154.231)
[21:43:54] <Cheaterman> SnoopJ: Not really ; but all instances *will* need to share the underlying C++ singleton instance as member
[21:44:28] *** Joins: yemel (~yemel@user/yemel)
[21:44:42] <ablegreen> does anyone know which CVE vulnerability in Python this post is referencing? https://github.com/samuelcolvin/pydantic/issues/1477#issuecomment-753694537
[21:44:45] <Cheaterman> You think it's fine if the C++ singleton is a class attribute (or something along those lines), and my users can create instances of the wrapper as they please?
[21:45:21] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[21:45:25] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 268 seconds)
[21:45:33] *** Quits: Guest2456 (~Guest24@2409:4070:241a:8cdd:b193:1728:50e2:f1ac) (Quit: Client closed)
[21:46:19] <Cheaterman> ablegreen: this perhaps: https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh
[21:46:37] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[21:46:50] <SnoopJ> That's a matter of aesthetics, I think. I have one such class in $employer code that is wrapped by SWIG that lets you do it either way, but the interface I expose calls methods as `Widget.func()`
[21:46:54] <nedbat> p-i-: I would write line 4 as:  if J['power_status'] == "running" and J['status'] == "active":
[21:47:00] *** Quits: ajf_ (~ajf_@user/ajf/x-9593112) (Ping timeout: 256 seconds)
[21:47:43] *** Quits: cdown (~cdown@163.114.131.1) (Remote host closed the connection)
[21:47:49] <Cheaterman> SnoopJ: (yes! it's totally a matter of aesthetics, and that's totally what I'm asking about :-) - I feel like my metaclass solution could be a bit astonishing? like, "a, b = Core(), Core() ; a is b  # True" is perhaps unexpected)
[21:47:56] *** Joins: cdown (~cdown@163.114.131.1)
[21:48:23] <nedbat> Cheaterman: why not:  a = Core().get_singleton()
[21:48:24] <Cheaterman> SnoopJ: Oh, so basically in your example the class is considered the singleton, and all exposed methods are classmethods?
[21:48:26] <SnoopJ> hmm, I'm slightly wrong actually. The class is not a singleton, but all of the API is static methods so :)
[21:48:50] *** Joins: greentree (~greentree@user/greentree)
[21:49:07] <Cheaterman> nedbat: That's what I considered first :-D then I was pondering the need of the classmethod ; plus I was also pondering the fact that my users could instantiate the wrapper (and whether it was problematic)
[21:49:08] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[21:49:21] <Cheaterman> nedbat: Do you think I should prevent direct instantiation if I go this route?
[21:49:38] <SnoopJ> Cheaterman, my aesthetic preference is as little "class-y" stuff in the binding layer as possible if it's unlikely to become not-a-singleton in the future
[21:49:44] *** Quits: xx (~xx@user/xx) (Ping timeout: 250 seconds)
[21:49:54] <Cheaterman> SnoopJ: literally impossible - global "core" object of the system I'm wrapping
[21:49:54] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[21:49:57] <dba> z1haze: you have to move to the iframe anad then locate it
[21:50:21] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 268 seconds)
[21:50:30] <Cheaterman> SnoopJ: the reason I like "class-y" stuff here is to conform to the source API
[21:50:49] <Cheaterman> (again, least astonishment for people coming from the actual C++ system I'm wrapping)
[21:51:06] *** Joins: Milady (~Laidy@2a01:e0a:468:a170:8d43:bde3:6363:c8e4)
[21:51:07] <SnoopJ> If they're driving the design, it might be a better question for them, then
[21:51:31] *** Quits: rje (~textual@65.141.156.170) (Quit: Textual IRC Client: www.textualapp.com)
[21:51:50] <Cheaterman> They don't know Python at all :-) no idea what's idiomatic or not ; my question is mostly about what would look "good enough", knowing that it will never look "quite perfect" given I'm matching C++ idioms where needed
[21:51:51] <SnoopJ> I don't see what value is added by having any class on the Python side, I'd probably do it nedbat's way and just access the instance as needed. But if you absolutely must have a class, I'd probably call methods directly on it
[21:52:32] *** Quits: Milady (~Laidy@2a01:e0a:468:a170:8d43:bde3:6363:c8e4) (Quit: Client closed)
[21:52:42] <SnoopJ> Constructing instances is probably just gonna cause confusion and it's not really worth the fuss to make the wrapper class *also* a singleton
[21:52:45] <Cheaterman> just realized nedbat's example instantiates the core before calling get_singleton() on it, I assume it's a typo?
[21:53:26] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 268 seconds)
[21:53:50] <Cheaterman> SnoopJ: Wait, I'm confused now. So you're suggesting that the users don't instantiate my wrapper, but that my wrapper also isn't a singleton?
[21:53:57] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[21:54:02] *** Joins: ajf_ (~ajf_@user/ajf/x-9593112)
[21:54:22] <SnoopJ> Cheaterman, I'm saying that `Singleton().func()` is worse than `Singleton.func()` because constructing an instance of the wrapper is completely meaningless
[21:54:46] <Cheaterman> Right now it looks like « core = Core.get(); core.print_ln('some text here') »
[21:54:54] *** Quits: killadi (~u0_a161@157.44.219.185) (Read error: Connection reset by peer)
[21:54:55] <SnoopJ> the case I mentioned may be a special one since the methods are static (and SWIG therefore maps them to @staticmethods)
[21:55:19] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[21:55:22] <Cheaterman> (which was my initial idea, and I think seems pretty close to what nedbat was suggesting)
[21:55:57] <SnoopJ> Maybe. I'm having a hard time following.
[21:56:01] <Cheaterman> If you think that looks OK, then the real question is simply whether I should prevent my user from instantiating Core directly with Core()
[21:56:30] <SnoopJ> I wouldn't go out of my way to prevent it unless you think it will confuse users that this does nothing meaningful
[21:56:30] <Cheaterman> Core.get() → gets my wrapper singleton. core.print_ln() calls a method on it (which is forwarded to C++)
[21:56:56] <SnoopJ> But since those users are the key constraint, I don't really have all of the problem in front of me :/
[21:57:01] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[21:57:02] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:a011:180:f68f:b20b) (Ping timeout: 240 seconds)
[21:58:11] <Cheaterman> SnoopJ: OK - so realistically if it's not harmful for them to create it themselves (and accesses the same underlying C++ singleton) I can let them do it, basically?
[21:58:22] * SnoopJ shrugs
[21:58:25] <Cheaterman> Even though my docs can (should?) only mention the .get() classmethod to get the singleton?
[21:59:05] <SnoopJ> That mod's name bugs me, unrelatedly. I thought this was related to OpenMP at first :)
[22:00:52] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d4f1:e8d1:c5:6a0e) (Quit: Textual IRC Client: www.textualapp.com)
[22:01:14] <Cheaterman> SnoopJ: It gets worse hahahahahahaha
[22:01:20] <Cheaterman> https://open.mp/
[22:01:45] <SnoopJ> right
[22:02:05] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[22:02:12] <SnoopJ> "Totally different...but we got here second and you'll just deal with it"
[22:02:14] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:02:36] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d4f1:e8d1:c5:6a0e)
[22:02:40] *** Joins: jay-m126 (~jay-m@154.72.162.87)
[22:02:42] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[22:03:02] <Cheaterman> SnoopJ: basically yeah... and TBF it summarizes a lot of the attitude in the SA-MP community... what can you do, it's an old mode
[22:03:04] <SnoopJ> OTOH people aren't generally familiar with OpenMP so it's not a big bother
[22:03:06] <Cheaterman> mod*
[22:03:29] <Cheaterman> I mean, still makes me chuckle when I install eg llvm and I get libopenmp
[22:03:33] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:03:52] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[22:04:41] <Cheaterman> (or libomp for that matter, since we are also squatting the initialism)
[22:05:24] *** Joins: WantToHelp (~WantToHel@user/wanttohelp)
[22:05:36] *** Quits: deltab_ (~deltab@95.154.230.49) (Changing host)
[22:05:36] *** Joins: deltab_ (~deltab@user/deltab)
[22:05:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[22:05:46] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 250 seconds)
[22:05:59] *** Joins: mud (~mud@user/kadoban)
[22:06:12] *** deltab_ is now known as deltab
[22:07:09] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[22:07:12] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:07:23] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[22:07:25] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:07:32] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[22:09:56] *** Joins: ChunkyFunk (~Srain@91-167-197-121.subs.proxad.net)
[22:10:14] *** Quits: jay-m126 (~jay-m@154.72.162.87) (Ping timeout: 256 seconds)
[22:11:23] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 250 seconds)
[22:11:56] *** Quits: Lightsword (~Lightswor@user/lightsword) (Ping timeout: 256 seconds)
[22:12:04] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:dcfe:cbe2:37e2:8eb3)
[22:12:17] *** Joins: jay-m126 (~jay-m@154.72.162.87)
[22:12:44] *** Joins: Auron (~Auron956@user/auron)
[22:12:48] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10f9:d1b2:c1db:1bd4:b840:144f)
[22:13:01] *** Quits: ChunkyFunk (~Srain@91-167-197-121.subs.proxad.net) (Remote host closed the connection)
[22:13:04] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Ping timeout: 256 seconds)
[22:13:13] *** Joins: klys (~mdasoh@show.op8.us)
[22:13:16] *** Joins: henistein (~henistein@2001:8a0:fc86:4d01:194f:7fa3:e9fa:55e0)
[22:13:19] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[22:15:10] *** Quits: maromau (~mauro@151.95.107.126) (Quit: Konversation terminated!)
[22:16:24] *** Joins: Lightsword (~Lightswor@user/lightsword)
[22:16:29] <henistein> have you some ideas how to convert this (https://bpa.st/SA2A) 3 lines of code into a single line?
[22:16:32] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[22:16:52] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:dcfe:cbe2:37e2:8eb3) (Ping timeout: 268 seconds)
[22:17:07] *** Quits: mud (~mud@user/kadoban) (Remote host closed the connection)
[22:17:39] <SnoopJ> henistein, `for i in lst: lst.bar = None`
[22:18:10] <Repiphany> What's the point of setting `lst.bar = None` len(lst) times
[22:18:27] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[22:18:38] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:18:42] <z1haze> how do you send request headers in selenium?
[22:19:55] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:20:24] <bjs> henistein: that code is weird, you don't use `i`
[22:20:31] *** Joins: mud (~mud@user/kadoban)
[22:20:35] <bjs> is that correct?
[22:20:42] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com)
[22:20:56] <henistein> ah, I wanted to: i.bar = None
[22:20:59] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[22:21:17] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[22:21:21] <henistein> https://bpa.st/JOFA
[22:21:44] <bjs> henistein: i is a weird choice for a name (usually "i" implies index or something).  But those 3 lines look pretty good, anything on a single line would probably be less nice/readable
[22:22:26] <henistein> I know but it is a code golf challenge, just wanted to know if could be possible
[22:22:42] <bjs> henistein: if it's a code golf challenge then get rid of those verbose classes and methods :P
[22:22:53] *** Joins: RayT (~RayT@2a01cb0c04d44a004907a0588c84c4f4.ipv6.abo.wanadoo.fr)
[22:23:29] <henistein> I thought doing this: `foo = lambda self, lst: for i in lst: i.bar = None`
[22:23:42] <SnoopJ> you can't have statements in lambdas
[22:23:46] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:5172:391f:376e:2f53) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:23:49] <henistein> exactly
[22:24:01] <johnkeats6> what if you call eval?
[22:24:02] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:24:25] *** Quits: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:25:43] <SnoopJ> henistein, since its golf, you can do something truly awful and use a comprehension with side effects: `lambda self, lst: [setattr(i, "bar", None) for i in lst]`. Tack an `and None` on the end if you need the return value to be None
[22:25:46] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[22:26:39] *** Joins: vassenn (~vassen@178.35.114.149)
[22:26:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:26:47] <KnowledgeShark> I have a text file that I want to parse to CSV in python. Each paragraph or multiple paragraphs of text is wrapped between start line "*** SSTART 005.0 001.0 0 WA 1889 ***" and end line "*** SEND ***" ... each of the numbers in the start line changes based on the section and article paragraph (State Constitutions). What would be the best starting point for a python newbie like myself to start if I want the start line numbers as column #1, the
[22:26:47] <KnowledgeShark> text between both start and stop lines in column #2. Do I want to extract all "SSTART 005.0 001.0 0 WA 1889" lines into 1 .txt using "find >" ? first and then somehow in python write a batch -> csv based on that information + the SSTART list and somehow distinguish each text paragraphs and send to CSV accurately? I feel in over my head on this feat at my beginner level. However I can fiddle and get results sometimes and active on
[22:26:48] <KnowledgeShark> python-forum.io. Thank you everyone in advance!
[22:27:09] <henistein> SnoopJ alright, ty
[22:27:31] <bjs> henistein: it seems weird to want to "reset" things to None in the middle of a code golf
[22:27:33] <bjs> to me
[22:27:36] *** Joins: sabry (~sabry@197.37.33.246)
[22:27:37] <SnoopJ> very
[22:27:38] <bjs> there's probably a way to just avoid doing that
[22:27:50] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:28:34] *** Joins: fikran (~fikran@user/fikran)
[22:28:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:29:54] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:30:02] *** Joins: Roey (~Roey@user/Roey)
[22:30:26] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10f9:d1b2:c1db:1bd4:b840:144f) (Ping timeout: 268 seconds)
[22:30:26] <Cheaterman> SnoopJ: I actually found a rather good comparison with what I'm trying to do (and the potential reason I was wondering about preventing users instancing my wrapper class) - in a sense it's a bit comparable to file objects in Python and how users are always supposed to use open() to instantiate them
[22:30:38] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:30:48] <jim> is there something more recommended than asyncio for something like a bot?
[22:31:16] <Cheaterman> jim: I use trio, but programming a bot and needing an async event loop seem like orthogonal issues
[22:31:58] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[22:33:24] <jim> how would I say (let's say, to trio): start a timer for 30 secs, generate an event that gets fired at 30 secs
[22:35:02] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[22:35:27] *** Joins: mickey87 (~user@user/mickey)
[22:35:29] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:35:29] *** mickey87 is now known as mickey8
[22:35:53] <Cheaterman> jim: await trio.sleep(30); do_something()
[22:35:55] *** Joins: Narrat (~omnius@p200300df5f0d7b8106ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:36:16] <Cheaterman> (not really a trio thing either)
[22:36:38] <RayT> Hi everyone, a quick question about tkinter's events formatting : is there a way to ensure any given "<Modifier-Type-Detail>" string is a valid thing to use (with binds or event_generate), without going thru a try/except block ? Something like a root.isValidEventString(str) returning a True or False ?
[22:36:55] <Cheaterman> SnoopJ: made it work with bot .get() and instantiation. now pondering if I really need .get(). hahaha
[22:36:59] <Cheaterman> both*
[22:37:29] <Cheaterman> (get has literally become a longer way to call cls()...)
[22:38:57] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:40:27] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:42:16] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com)
[22:45:01] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[22:45:39] *** Quits: sabry (~sabry@197.37.33.246) (Quit: Client closed)
[22:46:48] *** Joins: a0z1 (~a0z1@194.37.96.117)
[22:48:03] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:4191:8199:222e:e61d)
[22:49:03] *** Quits: a0z1 (~a0z1@194.37.96.117) (Client Quit)
[22:49:26] *** Quits: kathadris (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[22:49:35] *** Quits: dfkfs (~dfkfs@178.49.152.151) (Quit: Client closed)
[22:50:04] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[22:51:25] *** Quits: henistein (~henistein@2001:8a0:fc86:4d01:194f:7fa3:e9fa:55e0) (Ping timeout: 256 seconds)
[22:51:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[22:51:52] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:52:21] <kungp_> is it ridiculous to do imports conditionally?
[22:53:03] <kungp_> making a tool for work that can be used with a tkinter gui or not - most people will use it CLI
[22:53:27] <kungp_> and if used without the gui i don't need matplotlib and stuff
[22:54:10] *** Joins: aknot (~aknot@2603:900a:1503:17bb:8061:bf4c:95c9:6d2)
[22:54:32] <kungp_> but i've never seen imports anywhere else than the top..
[22:55:44] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:57:30] <grym> you can have conditional top imports
[22:57:32] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[22:57:35] <grym> it's relatively common
[22:58:19] *** Joins: magla (~gelignite@55d4ea14.access.ecotel.net)
[22:58:32] *** Quits: pycode (~pycode3@2001:b07:5d28:551:eb25:ad9f:142e:2ae1) (Ping timeout: 240 seconds)
[22:58:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:59:56] <mawk> this sounds like a laudable usage of that yes kungp_
[23:00:08] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[23:00:09] <mawk> also define the modules to be None in the else branch of the if
[23:00:16] <mawk> to prevent "reference before assignment" linter errors
[23:00:16] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[23:00:24] <kungp_> but it would be at the top of main() so still under other code :S
[23:00:36] *** Quits: rsx (~dummy@ppp-188-174-141-153.dynamic.mnet-online.de) (Quit: rsx)
[23:00:44] <mawk> ah, importing inside a function is another thing
[23:00:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[23:01:02] <kungp_> the gui decision is set with a --gui argument
[23:01:24] <bjs> kungp_: well then that's where it has to go,  it's a bit unusual but it makes sense for your situation
[23:01:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:01:53] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[23:02:07] <apocalyptech> kungp_: If you wanted to potentially overarchitect it, you could have a "core" set of functionality which separate CLI and GUI scripts use to do the actual work.  So that the dependencies in the GUI file are only pulled in when requested
[23:02:31] <apocalyptech> kungp_: So the entry point script itself does your argparse-or-whatever work and at least wraps it all up like that
[23:02:38] <apocalyptech> I suppose you're sort of left with the same issue there, though, aren't you?
[23:02:43] <SnoopJ> kungp_, it's not ridiculous, no
[23:02:45] <apocalyptech> So maybe nevermind
[23:03:33] <SnoopJ> although it's somewhat more common to `try: import something; except: something = None` or similar, and then check availability at the site of use
[23:03:54] <SnoopJ> (i.e. the name is bound in all cases)
[23:03:56] *** Joins: parv (~quass@user/parv)
[23:04:01] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:d1f9:413d:96f3:931c)
[23:04:15] <kungp_> well i guess that could work fine also, didn'ẗ think of it
[23:04:39] <phy1729> I've see the try block with a have_foo boolean as well
[23:04:44] <kungp_> the reason for this is for people not to have to deal with getting modules
[23:05:15] <kungp_> so i guess try: import matplotlib etc, except: disable gui functionality
[23:05:20] <kungp_> could work
[23:05:34] *** Joins: k5tux_ (~k5tux@67.6.92.143)
[23:05:39] <phy1729> I'd except ImportError:
[23:05:55] <apocalyptech> Yeah, could even alter your argparse-or-whatever handling to suit what libraries are found, too
[23:05:59] <RayT> I'd say python mostly doesn't care, as long as it's not compiled. Not an expert here (it can probably happen in specific cases) , but have you ever had problems with importing a module after having already entered a ton of code into Idle when testing some functions ? (like, "oh, right, I should use this module now that I know exactly how the
[23:05:59] <RayT> results are done..." after hundred of lines ...) (also, many use the "version" or "os" to know what imports they need... it still runs a function to get those results...)
[23:06:13] *** Joins: BurgerW (~BurgerW@222.244.79.166)
[23:06:19] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[23:06:20] *** Joins: bluedust (~bluedust@117.241.183.103)
[23:06:21] *** Quits: driib2 (~driib@c-94bee655.017-99-73746f1.bbcust.telenor.se) (Quit: The Lounge - https://thelounge.chat)
[23:06:24] *** Quits: k5tux_ (~k5tux@67.6.92.143) (Client Quit)
[23:06:26] *** Quits: onichomp (~onichomp@2806:264:4408:1d4:2535:2f81:327c:26d8) (Read error: Connection reset by peer)
[23:06:27] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[23:06:57] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Quit: Leaving)
[23:07:02] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[23:07:03] <dba> I guess I am having some messed up logic in here https://bpa.st/BNOA any thoughts/comments why it is not working as supposed to?
[23:07:04] *** Joins: onichomp (~onichomp@2806:264:4408:1d4:2535:2f81:327c:26d8)
[23:07:37] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[23:07:55] *** Joins: driib2 (~driib@185.65.135.232)
[23:08:26] <blackleitus> what exactly means integration developer? someone know integrate codes from some else ( github, own code , third party codes ) into a functional one with easy to integration , scalability, faster, different vertical industry application etc.
[23:09:17] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 268 seconds)
[23:09:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:09:38] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[23:10:08] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:54ab:7c50:4fb:60e1)
[23:10:12] *** Joins: KombuchaKip (~kip@192.252.230.5)
[23:10:37] *** Quits: bluedust (~bluedust@117.241.183.103) (Ping timeout: 240 seconds)
[23:10:53] *** Quits: vassenn (~vassen@178.35.114.149) (Quit: Good bye!)
[23:11:03] <apocalyptech> dba: One issue is that both functions don't reliably return something.  There's no `else` in the first function, and the `elif` on the second doesn't return anything either
[23:11:34] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[23:11:34] <apocalyptech> dba: Also in that `elif`, your code's expecting a tuple back but the function would only ever give you a single value
[23:11:43] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:11:55] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:12:43] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[23:13:17] *** Quits: BurgerW (~BurgerW@222.244.79.166) (Ping timeout: 240 seconds)
[23:13:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[23:14:36] <dba> apocalyptech: I did fix that tuple issue. but is that particular case it is supposed to return the same url as all the conditions are met. or am I missing something here?
[23:15:23] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[23:15:26] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[23:15:38] <apocalyptech> dba: Dunno about the actual logic in there, didn't look that closely -- there's no `return` in that stanza, though, so nothing gets returned if you end up in there
[23:16:14] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:16:37] <dba> apocalyptech: elif would do the recursion and if the recursion happen it should return something
[23:17:01] <apocalyptech> Not unless there's a `return` in there, it won't.  :)
[23:17:03] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[23:17:04] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[23:17:33] *** Joins: zebrag (~chris@user/zebrag)
[23:17:46] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:17:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[23:19:14] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[23:19:18] <dba> apocalyptech: yeah return instantiating the function worked :D. Interesting...
[23:19:26] <dba> Thanks
[23:19:30] <apocalyptech> np, enjoy!
[23:19:38] *** Joins: jmd (~user@de.cellform.com)
[23:19:40] <ELFrederich> I'm on Ubuntu 20.04, what's the best place to get newer Python versions?... the deadsnakes ppa?
[23:19:58] <dba> python.org
[23:20:19] <ELFrederich> dba, they provide .deb packages?
[23:20:27] <Repiphany> ELFrederich: pyenv
[23:20:46] *** Joins: upsala (~zcb@185.209.196.170)
[23:21:47] <ELFrederich> dba, I've done my share of ./configure && make && make install and it's problematic.  You have to build it the same way your OS expects it to be built or it'll be incompatible with other libraries.  I think on RHEL I did it once and it used 8 instead of 16 for unicode or something, screwed everything up
[23:22:23] <ELFrederich> Repiphany, that ends up automating the compilation and installation right?
[23:22:46] <Repiphany> Yes
[23:23:18] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:23:24] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:23:41] *** Quits: michagogo (uid14316@user/michagogo) (Quit: Connection closed for inactivity)
[23:24:06] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:26:02] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:26:19] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b)
[23:26:21] *** Joins: jmd (~user@de.cellform.com)
[23:26:36] *** Joins: greedom (~greedom@p200300de6718db00ecea82a06443de9b.dip0.t-ipconnect.de)
[23:26:55] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[23:27:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:27:41] *** Joins: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net)
[23:27:48] <ELFrederich> Is there a new way to declare attributes on classes besides dataclasses?... or do you still have to do it in __init__?
[23:28:22] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[23:28:36] *** Joins: dreamon (~dreamon@pd9503284.dip0.t-ipconnect.de)
[23:30:04] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:30:09] <ammar2> ELFrederich: __init__ is usually where you do it but there's nothing stopping you from doing it elsewhere
[23:30:28] *** Quits: myusername (~sleeeepin@2001:4641:6e62:0:406c:71b5:d48e:398c) (Quit: Leaving)
[23:30:47] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:30:57] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Ping timeout: 240 seconds)
[23:31:05] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 256 seconds)
[23:31:55] <ELFrederich> ammar2, if you do it outside of __init__ on the class then it belongs to the class though, it'll be shared among all instances
[23:32:38] <ELFrederich> I thought I remembered some way to declare it at the class level with types and everything, but maybe that was only on dataclasses.  I thought you could do it with non dataclasses too
[23:32:40] <ammar2> oh well yes, you gotta do it on an instance
[23:32:51] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[23:36:14] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[23:37:30] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[23:38:54] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[23:39:18] <SnoopJ> ELFrederich, you can declare slots but that doesn't address the type part of this question
[23:39:39] <ELFrederich> yeah, that's more a C memory optimization thing right?
[23:39:54] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:3547:6761:cb41:5054)
[23:40:00] *** Quits: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[23:40:03] <SnoopJ> kiiiinda
[23:40:10] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Remote host closed the connection)
[23:40:32] <SnoopJ> semantically I think about it as declaring "I know exactly what attributes I care about ahead of time" and the memory thing is a cute side effect
[23:41:01] *** Quits: kts (~kts@103.73.237.211) (Quit: Konversation terminated!)
[23:41:56] *** Quits: dfkfs (~dfkfs@178.49.152.151) (Quit: Client closed)
[23:41:58] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:54ab:7c50:4fb:60e1) (Ping timeout: 250 seconds)
[23:42:00] <aphysically> jinsun: I wonder how much of pyright is genuinely built around the early binding logic
[23:42:37] <aphysically> or if it's possible you could do something like specify the type of a variable as auto as a hint to try to solve the type like rust/mypy
[23:44:57] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Ping timeout: 240 seconds)
[23:45:06] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[23:45:31] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[23:46:57] *** Quits: ouestbillie (~gallup@185.213.154.231) (Ping timeout: 256 seconds)
[23:46:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[23:48:54] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[23:49:57] *** Joins: moog (~moog@107.77.244.61)
[23:52:46] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[23:53:24] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl487lo5o8at1bg85.ipv6.telus.net)
[23:53:56] *** Joins: crashrep (~crashrep@user/crashrep)
[23:54:34] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[23:54:56] *** Joins: networkcops (~quassel@88.236.70.180)
[23:55:43] *** Joins: sbrown (~sbrown@66.44.16.44)
[23:56:11] <ELFrederich> just found functools.cached_property.  Nice addition.  I've decorated a lot of methods with @property and @lru_cache and I always forget which to put first, now I can just use this one
[23:56:21] <networkcops> hi guys!
[23:56:30] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[23:57:01] *** Quits: networkcops (~quassel@88.236.70.180) (Client Quit)
[23:57:18] *** Joins: erdem (~quassel@88.236.70.180)
[23:57:19] <aphysically> ELFrederich: note it behaves differently (in a way you almost certainly want)
[23:57:44] <aphysically> lru_cache will cause class instances to live forever, but cached_property won't
[23:57:45] <ELFrederich> aphysically, want or don't want?.... in what way?
[23:57:50] *** Joins: stonkey (~stonkey@user/stonkey)
[23:57:55] <ELFrederich> aphysically, ah... nice
[23:58:01] *** Parts: kline (~freedom0@libera/staff/kline) ()
[23:58:14] <ELFrederich> aphysically, does @cache also cause them to live forever?
[23:58:32] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[23:58:35] *** Quits: stonkey (~stonkey@user/stonkey) (Max SendQ exceeded)
[23:58:37] <aphysically> yes, you probably won't notice unless you have something creating classes that expected them to be cleaned up that was running for a long time though
[23:59:12] *** Joins: stonkey (~stonkey@user/stonkey)
[23:59:40] *** Joins: thumbs (1000@apache/committer/thumbs)
[23:59:48] *** Quits: stonkey (~stonkey@user/stonkey) (Max SendQ exceeded)
[23:59:53] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
