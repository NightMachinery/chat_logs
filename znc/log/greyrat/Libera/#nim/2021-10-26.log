[01:25:29] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[01:26:27] <NimEventer> New post on r/nim by lattakia: I want to create a nim library that wraps a C library., see https://reddit.com/r/nim/comments/qfrfok/i_want_to_create_a_nim_library_that_wraps_a_c/
[01:39:06] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:44:25] <FromDiscord> <pietroppeter> There is a 48 hour Nim donation matching drive on HN: https://news.ycombinator.com/item?id=28993476
[01:47:03] *** kayabaNerve_ is now known as kayabaNerve
[01:47:51] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[02:19:37] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[02:28:36] <FromDiscord> <dom96> Yep! up to $500 matched (it can be donated anywhere afaik)
[02:33:08] <FromDiscord> <ajusa> Man it just hit me that Nim is somewhat known for being used in crypto and malware - usually not the greatest look
[02:35:07] <NimEventer> New thread by Dom96: Donation matching drive via HN, see https://forum.nim-lang.org/t/8545
[02:52:42] *** Parts: boardwalk19 (~boardwalk@136.49.88.66) (The Lounge - https://thelounge.chat)
[02:56:37] <FromDiscord> <dom96> In reply to @ajusa "Man it just hit": if that's Nim's niche, I'll take it
[02:58:17] *** Quits: MightyJoe (~joe@201.150.5.24) (Quit: No Ping reply in 180 seconds.)
[02:59:26] *** Joins: cyraxjoe (~joe@201.159.96.1)
[03:00:13] <FromDiscord> <aHaquer> that's the spirit
[03:01:52] <FromDiscord> <dom96> I've definitely built some sus tools: https://github.com/dom96/deauther/ 😄
[03:20:11] <nrds> <06Prestige99> Is there a way to bundle assets into an executable or would I need to use something like https://github.com/xmonader/nimassets ?
[03:20:26] <FromDiscord> <Elegantbeef> `staticRead`
[03:21:15] <nrds> <06Prestige99> neat, thanks
[03:22:21] <FromDiscord> <Elegantbeef> Use zippy to make a zip then use physfs for the most fun
[03:22:21] <FromDiscord> <Elegantbeef> Up to you ofc
[03:22:21] <FromDiscord> <Elegantbeef> Or use supersnappy
[03:35:48] <FromDiscord> <HuskyHacks> Hey Nim Discord, so @dom96 just came through one of the security research discords and hung out for a bit. The topic of the erroneous Defender triggers on the compiled binaries came up
[03:36:25] <FromDiscord> <HuskyHacks> if you want, I can help you find out exactly what is flagging in the Nim compiled binaries
[03:36:34] <FromDiscord> <HuskyHacks> The security community makes use of a tool called ThreatCheck to weaponeer payloads, i.e. find out which bytes Defender and AMSI are triggering on. But of course the same tool can be used to identify an erroneous Defender trigger for a legitimate binary and troubleshoot it from there
[03:36:38] <FromDiscord> <ynfle (ynfle)> Its a big issue for many newcomers
[03:37:51] <nrds> <06Prestige99> When cross compiling from linux to windows and overriding libraries, do I need to download and point at the windows libs? Or should I only need the .so files?
[03:38:37] <nrds> <06Prestige99> Attempting to link sdl2 and sdl_gpu to compile for windows
[03:41:24] <nrds> <06Prestige99> Specifically trying --dynlibOverride:SDL2 --passL:/usr/lib/libSDL2.so `x86_64-w64-mingw32/bin/ld: /usr/lib/libSDL2.so: error adding symbols: file in wrong format`
[03:41:37] <FromDiscord> <impbox [ftsf]> you'll need the dll i believe
[03:41:44] <FromDiscord> <impbox [ftsf]> you don't need the .lib files
[03:41:45] <nrds> <06Prestige99> ah, alright
[03:46:32] <FromDiscord> <impbox [ftsf]> `--passL:-lSDL` should do it i think
[03:47:37] <nrds> <06Prestige99> I passed in the .dll and it seems to have worked
[03:47:51] <nrds> <06Prestige99> only problem is now, is there's no dll for sdl_gpu
[03:48:29] <FromDiscord> <Elegantbeef> can you build it using mingw?
[03:48:48] <FromDiscord> <impbox [ftsf]> yeah
[03:49:11] <FromDiscord> <impbox [ftsf]> `-lSDL2` will work cross platform
[03:49:19] <FromDiscord> <impbox [ftsf]> so you don't need to specify the full path/name
[03:49:25] <FromDiscord> <Elegantbeef> well i meant for `sdl2_gpu`
[03:49:31] <FromDiscord> <impbox [ftsf]> but yeah, good luck with sdl2_gpu
[03:49:51] <nrds> <06Prestige99> Weird, mine doesn't compile with --passL:-lSDL2
[03:49:59] <nrds> <06Prestige99> cannot find -lSDL2
[03:50:13] <FromDiscord> <impbox [ftsf]> hmm probably not in your library path
[03:50:24] <FromDiscord> <impbox [ftsf]> `-L.` if it's in current dir
[03:51:55] <nrds> <06Prestige99> in what way?
[03:52:44] <nrds> <06Prestige99> (it works if I compile for linux but not windows, SDL2.dll is in the current dir)
[03:57:41] <FromDiscord> <impbox [ftsf]> ahh probably needs to be called libSDL2.dll
[04:00:44] <nrds> <06Prestige99> rename it to that and do -d:mingw --dynlibOverride:SDL2 --passL:-lSDL ?
[04:00:54] <FromDiscord> <impbox [ftsf]> yep
[04:00:56] <FromDiscord> <impbox [ftsf]> -lSDL2
[04:01:21] <nrds> <06Prestige99> hmm still x86_64-w64-mingw32/bin/ld: cannot find -lSDL2
[04:01:58] <FromDiscord> <impbox [ftsf]> and `--passL:-L.` to tell it to look in the current dir, or whatever path the library is in
[04:02:29] <FromDiscord> <impbox [ftsf]> unless it's under  `x86_64-w64-mingw32/lib/`
[04:02:43] <nrds> <06Prestige99> ah adding that --passL:-L. did the trick, thanks
[04:03:19] <nrds> <06Prestige99> It actually expected it to be called SDL2.dll 
[04:04:39] <FromDiscord> <impbox [ftsf]> oh ok then, sorry
[04:04:52] <nrds> <06Prestige99> no worries 🙂 thanks for the help
[04:46:51] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[04:49:03] <FromDiscord> <Hi02Hi> In reply to @eyecon "Can I initialize a": I don't think I saw a response, but in sequtils there is newSeqWith(), so `is_prime = new_seq_with(maxnum + 1, true)`
[04:50:11] <FromDiscord> <Elegantbeef> What was teh question? \:d
[04:55:02] <FromDiscord> <eyecon> In reply to @Hi02Hi "I don't think I": Ah, thanks
[05:06:28] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Read error: Connection reset by peer)
[05:09:15] <FromDiscord> <impbox [ftsf]> missing out on the context in matrix it seems
[05:10:04] <FromDiscord> <Elegantbeef> Yea replies dont properly reply on the bridge
[07:12:13] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:16:37] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:20:13] <NimEventer> New thread by Vsajip: How do you get the actual exception from doAssertRaises?, see https://forum.nim-lang.org/t/8546
[09:36:29] <FromDiscord> <Rika> @beef regards the forum post this doesn’t assert that the exception is raised
[09:37:25] <FromDiscord> <Elegantbeef> Oh right
[09:38:00] <FromDiscord> <Elegantbeef> Thanks now it looks sillier but accomplishes
[10:00:38] *** Joins: kenran (~kenran@b2b-37-24-119-190.unitymedia.biz)
[10:30:12] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[10:41:46] *** Joins: pro (~pro@user/pro)
[10:44:16] <FromDiscord> <Revenant> hey, just trying to get to confirm my observation that the 32-bit version of Nim seems to be quite badly broken, at least on Windows. using the latest 1.6.0 version
[10:44:47] <FromDiscord> <Revenant> which is sad, because then i can only provide 64-bit binaries to my users...
[10:44:57] <FromDiscord> <impbox [ftsf]> broken how?
[10:45:43] <FromDiscord> <Revenant> random memory violations, e.g. i'm passing a string to a simple proc, then the string suddenly changes address after a few loop iterations, resulting in a crash when compiled on 32-bits
[10:45:48] <FromDiscord> <Revenant> on 64-bits, no problems
[10:46:12] <FromDiscord> <Elegantbeef> Well make issues, but 32bit is quite a unicorn now
[10:46:20] <FromDiscord> <Revenant> in what sense?
[10:46:32] <FromDiscord> <Elegantbeef> If you can easily reproduce it i'd like to see the code
[10:46:49] <FromDiscord> <Elegantbeef> 32bit isnt a commonly used architecture anymore
[10:47:13] <FromDiscord> <Revenant> how about windows 7 users? quite a few are on 32-bit still, and there's still 32-bit win 10 installations around
[10:47:16] <FromDiscord> <Revenant> maybe not for linux 🙂
[10:47:48] <FromDiscord> <Elegantbeef> Supporting EOL software sound silly to me atleast
[10:47:49] <FromDiscord> <Revenant> ok, probably less than 10%... but that's still a few millions of people...
[10:47:54] <madprops> isn't nim development made on windows?
[10:47:59] <FromDiscord> <impbox [ftsf]> it's still supported, so if you have a way to reproduce it worth filing an issue
[10:48:08] <FromDiscord> <impbox [ftsf]> but are you sure it's not user error?
[10:48:11] <FromDiscord> <Revenant> yeah that's fine too, but then they should remove the 32-bit installer from the website
[10:48:15] <FromDiscord> <Revenant> as i said, quite badly broken
[10:48:27] <FromDiscord> <Revenant> and state, "64-bits only"
[10:48:29] <FromDiscord> <impbox [ftsf]> are you wrapping C libs and not using the correct types
[10:49:06] <FromDiscord> <impbox [ftsf]> but yeah, we obviously want it to still work on win32, so if you have an example that isn't working, please share it so we can look into it
[10:49:08] <FromDiscord> <Revenant> could be, it's in my glfw wrapper project
[10:49:36] <FromDiscord> <Revenant> check this↵https://github.com/johnnovak/nim-glfw/blob/master/examples/glad/gl.nim#L3010
[10:50:06] <FromDiscord> <Revenant> so extname is just a string arg of that proc, and after a few iterations the pointer has a value of 8
[10:50:08] <FromDiscord> <Revenant> never a good thing 🙂
[10:50:17] <FromDiscord> <Revenant> maybe memory corruption?
[10:50:24] <FromDiscord> <impbox [ftsf]> well if you're corrupting memory it could be happening anywhere
[10:50:29] <FromDiscord> <Revenant> yeah
[10:50:47] <FromDiscord> <impbox [ftsf]> those types look dangerous
[10:50:54] <FromDiscord> <impbox [ftsf]> if they are int in c they should use cint
[10:51:00] <FromDiscord> <impbox [ftsf]> likewise unsigned int should be cuint
[10:51:02] <FromDiscord> <Revenant> you mean the {.cdecl.} stuff?
[10:51:23] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3CUb
[10:51:54] <FromDiscord> <Revenant> ah yeah... that's doesn't look good
[10:52:17] <FromDiscord> <Revenant> well, it's been working on 64bit nim fine, it's the first time i'm trying it on 32bit
[10:52:20] <FromDiscord> <impbox [ftsf]> but you'd need to check the C header to check they're correct
[10:52:27] <FromDiscord> <Revenant> i'll try specifying the width for every type, etc
[10:52:28] <FromDiscord> <Revenant> thanks
[10:52:30] <FromDiscord> <impbox [ftsf]> yep, my guess is it's a mismatch in int size or something
[10:52:54] <FromDiscord> <Revenant> it would be good if it's something as simple as that 🙂
[10:53:26] <FromDiscord> <Revenant> i converted those manually from the official khronos opengl headers, those just use c types
[10:53:42] <FromDiscord> <impbox [ftsf]> yep, so if it says "int" in C, use "cint" in nim
[10:53:48] <FromDiscord> <impbox [ftsf]> and unsigned int -> cuint in nim
[10:53:59] <FromDiscord> <Revenant> they should be int32, clearly
[10:54:06] <FromDiscord> <Revenant> yeah okay
[10:54:16] <FromDiscord> <impbox [ftsf]> if they're int in C don't use int32
[10:54:21] <FromDiscord> <impbox [ftsf]> use cint
[10:54:25] <FromDiscord> <Revenant> okay
[10:54:28] <madprops> why is that?
[10:54:48] <FromDiscord> <impbox [ftsf]> because the c compiler needs to agree with nim about what size they are
[10:54:50] <FromDiscord> <Revenant> i thought ints in C are always 32-bit, then you have long for 64-bit ints
[10:54:58] <FromDiscord> <Revenant> but i guess that's only generally true, not always
[10:56:04] <FromDiscord> <impbox [ftsf]> int can be 64 bits on 64 bit linux, but it's up to the compiler
[10:56:14] <FromDiscord> <impbox [ftsf]> so you want to ensure they're using the same thing
[10:56:27] <FromDiscord> <impbox [ftsf]> so just remember int in C -> cint, unsigned int in C -> cuint
[10:56:42] <FromDiscord> <Revenant> yep, cheers
[10:56:53] <FromDiscord> <impbox [ftsf]> if the c header specifies a bit size, specify the same size
[10:57:03] <FromDiscord> <impbox [ftsf]> eg uint32_t -> uint32
[11:08:27] <Amun-Ra> int has to be min. 16-bit
[11:12:41] <FromDiscord> <Rika> Huh?
[11:13:00] <FromDiscord> <impbox [ftsf]> in C
[11:13:07] <Amun-Ra> yes
[11:13:09] <FromDiscord> <impbox [ftsf]> according to the spec i think
[11:13:17] <Amun-Ra> mhm
[11:14:05] <FromDiscord> <impbox [ftsf]> has anyone targeted an 8 bit architecture with nim?
[11:14:54] <FromDiscord> <Elegantbeef> I figure the issue with that is the C compiler, unlikely you'd get C from Nim it could compile
[11:15:02] <FromDiscord> <Rika> Oh that’s what you mean
[11:15:25] <FromDiscord> <Rika> Yeah the sizes of int and unsigned are not specific numbers
[11:15:36] <Amun-Ra> impbox [ftsf]: I've found https://disconnected.systems/blog/nim-on-adruino
[11:15:43] <PMunch> impbox_[ftsf], yup. On various microcontrollers
[11:16:13] <FromDiscord> <impbox [ftsf]> mmm arduino isn't 8 bit though is it?
[11:16:25] <FromDiscord> <impbox [ftsf]> i imagine someone might have targeted z80 for gameboy or something
[11:16:29] <FromDiscord> <Rika> It is afaik?
[11:16:35] <Amun-Ra> arduino is not an architecture
[11:16:39] <PMunch> Most of them are I believe
[11:16:45] <FromDiscord> <Rika> The uno (base and most popular) is 8
[11:16:50] <PMunch> The underlying chips of course
[11:16:54] <FromDiscord> <Rika> Duo and others are 32
[11:17:02] <FromDiscord> <impbox [ftsf]> ahh atmega328 is 8 bit, interesting
[11:17:24] <PMunch> I've used the ATmega32u4 in both a Leonardo and a Teensy 2.0, and it is 8-bit
[11:17:43] <FromDiscord> <impbox [ftsf]> cool
[11:18:16] <FromDiscord> <impbox [ftsf]> i've done some arduino stuff, never realised it was 8 bit though, only done teensy 3.6 which is 32 bit i think
[11:18:24] <FromDiscord> <impbox [ftsf]> need to try do some nim stuff with teensy
[11:18:52] <Amun-Ra> teensy 3.6 uses ARM
[11:18:55] <FromDiscord> <Elegantbeef> Dont mention microcontrollers it just reminds me i've not done any more wrapping of the pico-sdk!
[11:19:09] <supakeen> Arduino is both a bootloader and a 'standard library' that is implemented for many chipsets.
[11:20:10] <PMunch> Oh yeah, I haven't looked at that any more either
[11:20:32] <PMunch> I still plan on wrapping all the AVR chips and setting up a common Nim ecosystem for microcontrollers
[11:20:40] <PMunch> Basically an alternative to Arduino
[11:20:46] <supakeen> You should speak to dom on that :)
[11:20:53] <supakeen> (also that is a *lot* of work)
[11:21:00] <PMunch> I know
[11:21:16] <FromDiscord> <Elegantbeef> I dont have the hardware to continue wrapping the pico library
[11:21:30] <supakeen> You'd be better off wrapping the ESP32 HAL (or Arduino) and to get support for Nim in platformio :)
[11:21:36] <FromDiscord> <Elegantbeef> Hard to test stuff you cannot test \:P
[11:21:38] <supakeen> (or writing a different toolchain for that bit)
[11:21:41] <FromDiscord> <impbox [ftsf]> i have a bunch of picos i have no use for
[11:21:53] <supakeen> Elegantbeef: What hardware do you need?
[11:21:58] <PMunch> But wrapping Arduino doesn't give us any benefits..
[11:22:06] <FromDiscord> <Elegantbeef> Actual shit to drive
[11:22:20] <PMunch> I mean my pure Nim -> AVR code is super fast and compact compared to Arduino
[11:22:34] <FromDiscord> <Elegantbeef> I guess i do have an arduino so i can technically test everything
[11:22:46] <supakeen> Elegantbeef: name some stuff, radios? Sensors?
[11:23:36] <FromDiscord> <Elegantbeef> i2c stuff, pretty much anything more complex than just gpio operations
[11:23:39] <supakeen> Ok.
[11:24:13] <supakeen> If you PM me your address I can send you some stuff that speaks I2C, SPI, and I2S (some temperature, pressure, audio, dust, etc sensors).
[11:24:22] <supakeen> Only if you want, of course :)
[11:24:23] <FromDiscord> <Elegantbeef> I do know one person uses my bindings and the i2c bindings seem to work (they printed their name to their scope)
[11:25:07] <meowray> how to create a seq[cint] from  nums: ptr UncheckedArray[cint], n: int ?
[11:26:35] <PMunch> var data = newSeqOfCap(n); for i in 0..<n: data.add nums[i]
[11:27:07] <PMunch> I guess you could also use memcpy
[11:27:10] <FromDiscord> <Rika> Collect where smh
[11:28:08] <PMunch> var data = newSeq[cint](n); copyMem(data[0].addr, nums, n*sizeof(cint))
[11:28:12] <PMunch> Something like that
[11:29:20] <FromDiscord> <Elegantbeef> `import std/sugar; var data = collect(newSeq): for i in 0..<n : nums[i]` for rika's sanity
[11:30:05] <PMunch> Unfortunately there is no way to create a seq without copying. This is simply because seqs are GCd, so you can't just make one frome any kind of data.
[11:31:22] <FromDiscord> <Elegantbeef> Depending what you're doing `nums.toOpenArray(0, n - 1)` could be used, but cannot be stored to a variable
[11:32:02] <PMunch> Ah yes, that is true
[11:32:28] <meowray> i fail to find an API converting `nums.toOpenArray(0, n - 1)` to a seq:(  i go with `var a = newSeq[cint](n); for i in 0..<n: a[i] = nums[i] ` currently
[11:32:59] <meowray> the drawback of `copyMem` is like `memcpy` vs `std::copy_n`. the former needs `sizeof(cint)` which is error-prone
[11:33:55] <FromDiscord> <Elegantbeef> Yea it doesnt convert to a seq, it converts it to an `openArray` as the name implies, which is useful if you're iterating or applying operations to it
[11:35:06] <FromDiscord> <Elegantbeef> Though to be able to use it easily without view types you'd probably want to do the unsafe thing of `template numsOa: openArray[cint] = nums.toOpenArray(0, n - 1)` but i digress
[11:35:07] <meowray> the version i currently have:) https://github.com/MaskRay/LeetCode/blob/master/find-k-th-smallest-pair-distance.nim (yeah, i generate self-contained C with the help of https://github.com/goblint/cil/
[11:36:53] <meowray> follow-up question about testing: any better way than `let a = @[1,6,1].mapIt(cast[cint](it)).toSeq; echo smallestDistancePair(cast[ptr UncheckedArray[cint]](unsafeAddr a[0]), 3, 3)` ?
[11:37:21] <FromDiscord> <Rika> What the hell lol
[11:37:35] <FromDiscord> <Rika> Do you really need to go through so many hoops to do that
[11:37:59] <FromDiscord> <Rika> And what reason
[11:41:29] <meowray> i know it's ugly but LeetCode's "C" language requires such an ugly function signature. https://0x0.st/-ddR.jpg 
[11:41:33] <FromDiscord> <Elegantbeef> damn you cannot get a var open array from a pointer
[11:42:44] <meowray> i use the approach from https://zen.su/posts/amalgamating-nim-programs/ (actually, https://maskray.me/blog/2021-09-26-competitive-programming-in-nim ) to get a self-contained C source file that I can submit on leetcode...
[12:03:26] *** Quits: pro (~pro@user/pro) (Read error: Connection reset by peer)
[12:04:01] *** Joins: pro (~pro@user/pro)
[12:09:21] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.3)
[12:16:25] <arkanoid> is there any nim porgram/package known to be using CPS?
[12:18:50] <FromDiscord> <Elegantbeef> https://github.com/alaviss/nim-sys https://github.com/nim-works/loony
[12:19:16] <FromDiscord> <tandy> honestly tho, the team needs to hire someone to work on the compiler
[12:19:20] <FromDiscord> <tandy> maybe some more marketting too
[12:19:45] <FromDiscord> <tandy> if money is left over hire someone to make the js backend much more supported by stdlib, make stuff like jstring happen, etc
[12:19:51] <FromDiscord> <haxscramper> There are already people who are hired by status to work on compiler
[12:19:59] <FromDiscord> <tandy> moar
[12:20:33] <FromDiscord> <haxscramper> https://forum.nim-lang.org/t/8540#55418The fulltime paid devs are me and Narimiran; xflywind is paid for his work too but he is not a fulltime developer yet. We also sponsor Kiloneie's work on the "edutainment" YouTube videos.
[12:20:37] <FromDiscord> <Rika> 100k isn’t much to hire someone is it
[12:20:59] <FromDiscord> <Elegantbeef> It's enough for fulltime for a year roughly
[12:21:19] <FromDiscord> <Rika> “Me” being Araq by the way
[12:21:45] <FromDiscord> <haxscramper> Nim core devs have to come up with some shared vision for the language, and ecosystem and what we are aiming to advertise
[12:21:56] <FromDiscord> <haxscramper> But instead we are piling up new random features
[12:22:06] <FromDiscord> <haxscramper> 15 new stdlib modules, right
[12:22:18] <FromDiscord> <tandy> no not really↵(@Rika)
[12:22:33] <FromDiscord> <tandy> oh good to hear ur paid
[12:22:40] <FromDiscord> <Rika> Tandy read what I said
[12:22:48] <FromDiscord> <Rika> The “me” refers to Araq
[12:22:51] <FromDiscord> <haxscramper> "me" is araq
[12:22:52] <FromDiscord> <Elegantbeef> He's not that was a quote from araq
[12:22:54] <FromDiscord> <tandy> oh lmao↵(@Rika)
[12:22:56] <FromDiscord> <haxscramper> This is a quote from forum
[12:23:00] <FromDiscord> <Rika> Lol
[12:23:01] <FromDiscord> <tandy> fuck
[12:23:03] <FromDiscord> <haxscramper> I'm not getting paid shit
[12:23:07] <FromDiscord> <Elegantbeef> Hax loves ambiguity
[12:23:20] <FromDiscord> <Rika> Someone pay hax to complain about the state of Nim
[12:23:29] <FromDiscord> <tandy> i havent seen namiran in the repos much
[12:23:30] <FromDiscord> <haxscramper> Well, I write RFCs
[12:23:38] <FromDiscord> <haxscramper> Neither did i
[12:23:38] <FromDiscord> <Elegantbeef> Why would we pay him for something he does for charity 😛
[12:23:53] <FromDiscord> <haxscramper> He has been described earlier as a community manager
[12:24:00] <FromDiscord> <Rika> RFCs are just fancy complaints
[12:24:08] <FromDiscord> <haxscramper> Twitter/announcements/website maintenance and so on
[12:24:08] <FromDiscord> <Rika> I’m kidding
[12:24:22] <FromDiscord> <tandy> interesting, yeah i think i remember him tellin us off for offtopic in telegram chat
[12:24:28] <FromDiscord> <haxscramper> But that is true for the most part↵(@Rika)
[12:24:57] <arkanoid> will nim ever takeoff?
[12:25:21] <FromDiscord> <haxscramper> Honestly - not sure
[12:25:37] <FromDiscord> <haxscramper> Not with current level of interest for promotion and driving people in
[12:25:49] <FromDiscord> <haxscramper> The language is good
[12:26:10] <PMunch> I think Nim is on a similar path to Python, a slow but steady incline
[12:26:19] <FromDiscord> <haxscramper> The people who manage it I have some complaints about
[12:26:29] <FromDiscord> <haxscramper> But the underlying idea is very good
[12:26:35] <FromDiscord> <Rika> The incline may be slow but I am not so sure about the steadiness
[12:26:53] <FromDiscord> <haxscramper> See commit pulse for the last year on GitHub
[12:26:59] <FromDiscord> <haxscramper> It looks like it is declining
[12:27:26] <FromDiscord> <haxscramper> image.png https://media.discordapp.net/attachments/371759389889003532/902481031989448704/image.png
[12:27:36] <FromDiscord> <Elegantbeef> I just think bug fixes/ promised features need to be realized
[12:28:35] <FromDiscord> <Elegantbeef> Many cases of people leave Nim is due to bugs in the present feature set
[12:29:00] <emery> maybe some of use like nice, quiet, hipster languages
[12:29:40] <FromDiscord> <Rika> I wish there were less bugs but I haven’t encountered much so I’m not that fussed
[12:29:50] <FromDiscord> <xflywind> In reply to @haxscramper "https://forum.nim-lang.org/t/8540#55418The fulltime": precisely was paid in March this year
[12:30:13] <arkanoid> if you would leave nim, but keep working on system programming languages, where would you go today? C? Rust? Zig? Ada? Else?
[12:30:15] <FromDiscord> <Elegantbeef> Well i address the low hanging ones when i see them
[12:30:24] <FromDiscord> <tandy> would araq ever retire or something?
[12:30:44] <FromDiscord> <Elegantbeef> I dont like none of the alternatives really
[12:30:46] <FromDiscord> <haxscramper> I want to try out ada, but would probably go for rust↵(<@709044657232936960_arkanoid=5b=49=52=43=5d>)
[12:30:51] <FromDiscord> <haxscramper> Zig is just too limiting
[12:31:20] <FromDiscord> <Elegantbeef> Nim gives me a bunch of stuff i feel is very nice for gamedev related stuff, the others dont do it as nicely imo
[12:31:27] <FromDiscord> <haxscramper> I like the language that give you options for rocket science reactor-tier complexity in your code
[12:31:39] <FromDiscord> <haxscramper> Cxx goes into this as well
[12:32:21] <arkanoid> I'm scared by Cxx, brainfuck is better in everything
[12:32:40] <FromDiscord> <haxscramper> I don't even know what is going on to be honest with this
[12:33:10] <FromDiscord> <haxscramper> There is literally zero effort to manage community expectations
[12:33:26] <FromDiscord> <haxscramper> like, this is the same discussion v5 IIRC
[12:33:31] <FromDiscord> <haxscramper> I had this rant already multiple times
[12:34:49] <FromDiscord> <haxscramper> so I'm going to spare your time, and summarize my complaints as - The underlying ideas for a language are extremely good, but due to lack of singular direction it feels like we are just rowing in circles without any aim, and I haven't seen any clear push from any of the core developers araq just listed to change this
[12:35:04] <arkanoid> the two things that scare me the most are: antivirus problem on windows, general bus-factor 1 on many important modules
[12:35:38] <FromDiscord> <haxscramper> we are working on half a dozen fantastic features, while having ossified compiler codebase that everyone is too afraid to break because muh `--nimPreviewRandomGarbage`
[12:36:23] <FromDiscord> <haxscramper> that reminds
[12:36:26] <FromDiscord> <haxscramper> (edit) "that reminds ... " 03added "me"
[12:38:53] <FromDiscord> <haxscramper> In reply to @HuskyHacks "if you want, I": I suppose help like that would really be appreciated, though it could probably be discussed in the #internals  channel, because as you can see #main has quite a lot of ongoing discussion, so there is a chance your message would simply go unnoticed
[12:40:00] <FromDiscord> <haxscramper> but damn this is depressing
[12:40:21] <FromDiscord> <haxscramper> this whole advertisement/management thing
[12:41:43] <FromDiscord> <haxscramper> I really want the language to succeed, and I hear all of these "2021 is a year of tooling", "we should focus on bugfixes" (every single commuity survery), "IC is the next big thing", get my hopes up
[12:41:45] <FromDiscord> <haxscramper> and then bam
[12:41:53] <FromDiscord> <haxscramper> 15 new stdlib modules with bus factor of 1
[12:42:00] <FromDiscord> <haxscramper> more garbage to maintain
[12:43:26] <FromDiscord> <tandy> i cri
[12:43:28] <emery> i think it would be better to push new coders towards nim rather than experienced coders, but thats hard.
[12:43:38] <FromDiscord> <Elegantbeef> Hey setutils is nice!
[12:43:45] <FromDiscord> <haxscramper> yeah, everything is nice
[12:44:09] <FromDiscord> <haxscramper> the question is not whether modules are bad and all
[12:44:12] <FromDiscord> <Elegantbeef> I'm clearly joking cause I started it and added a few procs
[12:44:33] <FromDiscord> <haxscramper> but whether they should be the part of stdlib which increases maintenance burned on the langauge itself
[12:46:48] <supakeen> Some of them are indeed 'interesting'.
[12:47:01] <supakeen> I'm not that fond of things ending up in stdlib that say their API is 'experimental'.
[12:47:25] <FromDiscord> <haxscramper> we had fusion,
[12:47:32] <FromDiscord> <haxscramper> "supposedly"
[12:47:40] <FromDiscord> <haxscramper> except it is dead
[12:48:11] <supakeen> Anyways, you do have a point in that a large stdlib isn't necessarily good and a 'bad' stdlib reflects badly on the language.
[12:48:32] <supakeen> I should look at my old PRs and revive them.
[12:49:18] <supakeen> They got marked by stale-bot recently.
[12:49:34] <supakeen> And I don't know if for example the header handling in the http stdlib things is now correct.
[12:50:07] <supakeen> I kinda went AWOL on this: https://github.com/nim-lang/Nim/pull/15478 :(
[13:03:22] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 258 seconds)
[13:06:17] <FromDiscord> <Kiloneie> Holy cow. https://media.discordapp.net/attachments/371759389889003532/902490809377652746/unknown.png
[13:06:30] <FromDiscord> <Kiloneie> This one is doing really well.
[13:07:33] <FromDiscord> <Kiloneie> If i recall correctly, my very first Nim video got 200 views after a MONTH. This one is 355 in 18 hours, yay.
[13:07:54] <FromDiscord> <Kiloneie> More interesting topics is the lesson here i believe.
[13:08:20] <supakeen> things more people want/need :)
[13:08:50] <FromDiscord> <Kiloneie> ii mean 169 views on this one, but a high score of my channel either way.
[13:08:51] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[13:09:06] <FromDiscord> <Kiloneie> yeah, i need towrite a new list for this
[13:09:14] <FromDiscord> <dom96> Need more clickbait titles 🙂
[13:09:15] <FromDiscord> <Rika> What’s the retention?
[13:10:04] <FromDiscord> <Kiloneie> retention as in click trough rate or ? i don't understand D:
[13:10:12] <FromDiscord> <Rika> Watch retention
[13:10:20] <FromDiscord> <Kiloneie> oh , let me see
[13:10:21] <FromDiscord> <Rika> How long each view watches the video for
[13:10:49] <FromDiscord> <Kiloneie> well it says 4:52 min is the average on this one, which is btw huge, but i can get more info.
[13:11:00] <FromDiscord> <Rika> I personally wouldn’t call it a win if 90% of the views only watched like 10% of the video
[13:11:08] <FromDiscord> <Rika> Nice
[13:11:18] <FromDiscord> <Rika> That sounds okay, how long is the video
[13:11:23] <FromDiscord> <Kiloneie> 25 min video
[13:11:31] <FromDiscord> <Rika> Well that sounds good enough yes
[13:12:24] <FromDiscord> <Kiloneie> Heres how the rest of my top videos are doing https://media.discordapp.net/attachments/371759389889003532/902492347810611220/unknown.png
[13:12:41] <FromDiscord> <Kiloneie> For some reason people love Tables
[13:13:28] <FromDiscord> <Rika> I wish I could make videos but I already have my time split over so many projects
[13:13:51] <FromDiscord> <Kiloneie> It is a very time consuming thing to do.
[13:14:29] <FromDiscord> <Rika> I know, I’ve done it before
[13:21:34] <FromDiscord> <Hamid Bluri> In reply to @Kiloneie "It is a very": and when you make a mistake,.... you have to rerecord 😮‍💨
[13:22:12] <FromDiscord> <Hamid Bluri> i really want to make library
[13:22:35] <FromDiscord> <Hamid Bluri> to visualize/animate
[13:23:33] <FromDiscord> <Hamid Bluri> algorithms, but it seems quite hard
[13:23:48] <FromDiscord> <Hamid Bluri> (edit) "i really want to make ... library" 03added "a"
[13:26:04] <FromDiscord> <Hamid Bluri> i continue in `#offtopic`
[13:26:47] <FromDiscord> <Rika> In reply to @hamidb80 "and when you make": Some people make videos with minor mistakes but edit/handle it elegantly
[13:27:52] <FromDiscord> <xflywind> In reply to @haxscramper "so I'm going to": > I haven't seen any clear push from any of the core developers araq just listed to change this↵↵I'm not a core developer. Araq, dom96, timotheecour are core developers. I'm only being a member of Nim organization recently. Actually I worked for Nim for only one month in March.
[13:29:36] *** tinytoast is now known as tinystoat
[13:33:07] <arkanoid> I have to say that I had that video playing yesterday night and I went sleep with my laptop on, and possibly the cats have been walking and restarting the video all night long
[13:34:02] <FromDiscord> <haxscramper> dom does not write a lot of code and is not paid to work on nim full-time IIRC↵(@xflywind)
[13:34:08] <FromDiscord> <haxscramper> well, "transparency"
[13:37:07] <arkanoid> outside casual/hobby programmers, is the whole language rolling on 1 company and 3 people outside of it?
[13:38:32] <FromDiscord> <xflywind> In reply to @haxscramper "dom does not write": I think core developers mean making great contributions to Nim. And dom maintain nim-lang/nimble
[13:39:54] <FromDiscord> <xflywind> nether did timotheer get paid but he has been contributing to Nim
[13:41:37] <FromDiscord> <xflywind> In reply to @haxscramper "well, "transparency"": you can check the expenses of opencollective
[13:42:13] <FromDiscord> <Kiloneie> sent a long message, see http://ix.io/3CVd
[13:42:31] <PMunch> arkanoid, I use it for work. But I'm the only one at the company who does
[13:43:30] <FromDiscord> <xflywind> In reply to @flywind "you can check the": that should be all of the expenses of non-fulltime work
[13:45:22] <FromDiscord> <haxscramper> I think core developers mean full-time work on nim↵(@xflywind)
[13:45:29] <FromDiscord> <xflywind> In reply to @haxscramper "well, "transparency"": see https://opencollective.com/nim/expenses
[13:45:32] <FromDiscord> <haxscramper> "former core developer" yes, but
[13:54:52] *** Joins: arkurious (~arkurious@user/arkurious)
[13:57:22] <FromDiscord> <xflywind> In reply to @haxscramper "I think core developers": Make sense, but it also depends on how much they are paid
[13:58:03] <FromDiscord> <haxscramper> I don't think we would ever see exact numbers that are not on the opencollective
[14:03:50] <FromDiscord> <qb> Anyone a Idea how I could make `foobar`  visible for `testlib` ? `dlsym`  keep returning nil https://play.nim-lang.org/#ix=3CVh
[14:03:58] <FromDiscord> <qb> (edit) "keep" => "keeps"
[14:06:07] <FromDiscord> <haxscramper> https://nim-lang.org/docs/manual.html#foreign-function-interface-dynlib-pragma-for-export
[14:06:32] <PMunch> @qb, you might also want to use the dynlib module
[14:09:20] <PMunch> And you can't pass nil as the handle to dlsym I believe
[14:12:28] <FromDiscord> <qb> Mh not sure if dynlib makes sense. What I'm trying to do is to get a pointer to the foobar function provided by the main function from the library which is load
[14:12:52] <FromDiscord> <qb> (edit) "function" => "process"
[14:15:00] <FromDiscord> <qb> not sure if thats technically even doable
[14:15:24] <PMunch> Should be doable
[14:17:36] <arkanoid> PMunch: I also use it at work, but I'm the only IT man there, so it's just my preference
[14:17:54] <arkanoid> (working great so far)
[14:20:22] <FromDiscord> <qb> In reply to @PMunch "And you can't pass": `If handle is RTLD_DEFAULT, dlsym() searches all objects in the current process, in load-order. `  Guess ` define RTLD_DEFAULT        ((void ) 0)` could be translated to `cast[pointer](0)` or just nil?
[14:21:05] <PMunch> Just nil should work there
[14:29:04] <PMunch> Hmm, honestly not sure why this isn't working
[14:31:25] <FromDiscord> <qb> Alright. Was just for testing purposes
[14:32:04] <PMunch> It's definitely possible to get a procedure from the program you're imported into though
[14:32:16] <PMunch> I do that in a DLL/so for work
[14:40:06] *** Quits: kenran (~kenran@b2b-37-24-119-190.unitymedia.biz) (Ping timeout: 245 seconds)
[14:45:07] <PMunch> Hmm, so apparently passing --passL:"-Wl,--export-dynamic" to the binary makes it work
[14:47:40] <PMunch> And adding the `dynlib` pragma to the foobar proc
[14:50:54] <FromDiscord> <dom96> In reply to @haxscramper "I think core developers": I don’t think “core developer” should mean “paid full-time developer”
[14:52:54] <FromDiscord> <dom96> In reply to @haxscramper "dom does not write": Can confirm I’m not paid to work on Nim. Neither full-time nor part-time.
[14:54:10] <PMunch> Oh wait, no this doesn't work at all..
[15:03:25] <FromDiscord> <eyecon> I'm taking a look at `std/streams`
[15:03:39] <FromDiscord> <eyecon> And I'm scratching my head as to how we would detect the end of file
[15:03:51] <FromDiscord> <eyecon> Do we just watch for an `IOError`?
[15:04:24] <FromDiscord> <eyecon> Use case: I'm writing, and will be reading back, a number of `uint32`s, but don't know where they end
[15:04:33] <FromDiscord> <eyecon> So I read until the end of the file into a seq
[15:07:10] <FromDiscord> <eyecon> I read https://forum.nim-lang.org/t/2787 and concluded that it might be an open point, but wanted to ask regardless
[15:08:31] <FromDiscord> <Rika> “at end” function
[15:08:32] <FromDiscord> <Rika> ?
[15:09:30] *** Joins: casionaut (~casionaut@user/casionaut)
[15:30:28] *** Joins: kenran (~kenran@200116b82be34a0057089fd82850b09a.dip.versatel-1u1.de)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:02:23] *** Joins: rockcavera (~rc@192.12.112.105)
[16:02:23] *** Quits: rockcavera (~rc@192.12.112.105) (Changing host)
[16:02:23] *** Joins: rockcavera (~rc@user/rockcavera)
[16:05:23] <Amun-Ra> is there a way of checking if type is distinct?
[16:25:59] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:35:52] <FromDiscord> <impbox [ftsf]> I'm sure there is at compile time
[16:36:07] <FromDiscord> <impbox [ftsf]> Using a macro you can inspect the typedef
[16:37:52] <arkanoid> Amun-Ra: https://play.nim-lang.org/#ix=3CW6
[16:38:14] <arkanoid> please mind that it won't work in play.nim-lang.org as it's a compile time thing
[16:39:35] <FromDiscord> <narimiran> @arkanoid: click on "showing: output", and you can see compile-time stuff too 😉
[16:41:09] <Amun-Ra> arkanoid: thanks
[16:42:18] <arkanoid> narimiran, thanks for the correction
[16:57:40] <FromDiscord> <demotomohiro> !eval type DInt = distinct int; echo DInt is distinct
[16:57:44] <NimBot> true
[17:00:06] <arkanoid> oh! that's new
[17:00:26] <Amun-Ra> hmm
[17:01:11] <arkanoid> demotomohiro, how did you found out that?
[17:02:12] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/manual.html#generics-type-classes
[17:03:19] <FromDiscord> <Rika> !eval echo int is distinct
[17:03:19] <FromDiscord> <demotomohiro> I'm just using softweres after reading the manual :)
[17:03:30] <NimBot> false
[17:09:15] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[17:15:27] <arkanoid> demotomohiro, second name rainman?
[17:22:56] <FromDiscord> <forlorn> In reply to @haxscramper "Zig is just too": What in particular did you find limiting
[17:26:46] <FromDiscord> <demotomohiro> You don't need to remember eveythings in manual. If you know how type class works, you can get details of type class in manual just by searching for "type class".
[17:27:05] <FromDiscord> <forlorn> sent a code paste, see https://play.nim-lang.org/#ix=3CWk
[17:28:32] <FromDiscord> <forlorn> (edit) "https://play.nim-lang.org/#ix=3CWk" => "https://play.nim-lang.org/#ix=3CWl"
[17:38:20] <FromDiscord> <haxscramper> `int | float` is a compile-time thing. `union(int | float)` is a runtime thing
[17:38:40] <FromDiscord> <haxscramper> not really useful in procedure arguments, but if you want to return different types based on some runtime logic this is the only solution
[17:42:33] <FromDiscord> <IsaacPaul> Well I'm nitpicking, but it's not the _only_ solution lol
[17:51:13] <FromDiscord> <haxscramper> yes, you can create variant object of course
[17:52:44] <arkanoid> never used union objects before, when should I use them?
[17:55:08] <FromDiscord> <IsaacPaul> On the readme for alaviss/union the use case was a making a value an optional (value vs None). If it supports it I'd see it being used to return union(result | error).
[17:57:52] <FromDiscord> <Rika> bet they are
[18:03:01] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3CWu
[18:03:52] <FromDiscord> <Gumber> sent a code paste, see https://play.nim-lang.org/#ix=3CWv
[18:04:04] <FromDiscord> <IsaacPaul> really.. I should have just tried it then xD
[18:04:07] <FromDiscord> <IsaacPaul> (edit) "https://play.nim-lang.org/#ix=3CWu" => "https://paste.rs/Smh"
[18:04:40] <FromDiscord> <Gumber> the `importcpp` section of the manual holds all sorts of useful tips for learning how to make `importcpp` your biatch
[18:04:57] <FromDiscord> <Gumber> it's the only way you'll interop with C++
[18:05:15] <FromDiscord> <Gumber> is learning how to emit the correct C++ with it and `emit`
[18:05:21] <FromDiscord> <Gumber> and sometimes it's a real PITA
[18:05:40] <FromDiscord> <demotomohiro> Nim standard library has `option` module that can represent (value | none).
[18:05:51] <FromDiscord> <Gumber> and sometimes you just have no choice - like in the case of virtual classes / interfaces
[18:05:58] <FromDiscord> <Gumber> where you need to supply an implementation in userland
[18:06:07] <FromDiscord> <Gumber> you'll be stuck using `emit`
[18:06:24] <FromDiscord> <Gumber> or writing some C++ implementation and compiling it in your Nim code
[18:07:00] <FromDiscord> <Gumber> (edit) "userland" => "user land"
[18:07:34] <FromDiscord> <IsaacPaul> ah ok I skimmed over the importcc section. Reading it more thoroughly will help.
[18:07:52] <FromDiscord> <IsaacPaul> Just hate reading. I like doing lol
[18:11:32] <FromDiscord> <IsaacPaul> @Gumber  Do you know any open source code that uses importcc for an interface that I can take a look at?
[18:11:41] <FromDiscord> <IsaacPaul> off the top of your head
[18:14:20] <FromDiscord> <demotomohiro> In Nim, unlike C/C++, you cannot do `a = b = c` to copy variable c to a anc b. Making `=` operator returns anything is not a Nim way. Because when you write `foo(a = b):` while you actually need to write `foo(a == b)`, compiler might not report error.
[18:15:15] <FromDiscord> <Rika> i assume the double equals was only done because he couldnt do `x := y` like he wanted
[18:16:19] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3CWC
[18:16:29] <FromDiscord> <Gumber> In reply to @IsaacPaul "<@!204328759715692544>  Do you": well I can share some of my code I use `importcpp` a lot
[18:16:50] <FromDiscord> <Gumber> I'll throw up my code later today on github but for now I can share a module
[18:17:28] <FromDiscord> <IsaacPaul> Awesome, I usually learn a lot more reading code over docs 😅
[18:17:30] <FromDiscord> <Gumber> here - I was wrapping steamworks with this from valve
[18:17:51] <FromDiscord> <Gumber> https://gist.github.com/zacharycarter/cb259acbde43effaae9c0d26fda5dab3
[18:18:22] <FromDiscord> <Gumber> they're not complete but what is there works
[18:18:31] <FromDiscord> <Gumber> so what is there is correct in other words 🙂
[18:18:57] <FromDiscord> <Gumber> only thing that COULD be missing is some `bycopy` pragmas but I've never had issues omitting those - even with the C++ backend
[18:20:23] <FromDiscord> <IsaacPaul> ah ok cool. I see what you did to handle callbacks awesome ya this helpful.
[18:20:26] <FromDiscord> <IsaacPaul> (edit) "ah ok cool. I see what you did to handle callbacks awesome ya this ... helpful." 03added "is"
[18:24:48] *** Quits: kenran (~kenran@200116b82be34a0057089fd82850b09a.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[18:59:52] *** Quits: casionaut (~casionaut@user/casionaut) (Remote host closed the connection)
[19:09:45] *** Joins: Guest65 (~Guest65@p5dc2fad1.dip0.t-ipconnect.de)
[19:13:58] *** Quits: Guest65 (~Guest65@p5dc2fad1.dip0.t-ipconnect.de) (Quit: Client closed)
[19:20:22] <FromDiscord> <xflywind> https://www.reddit.com/r/programming/comments/qg2srd/nim_receives_100k_in_bitcoin_donations/
[19:21:42] <FromDiscord> <dom96> oh cool
[19:42:55] <NimEventer> New thread by Pumpus: NIM IDE, see https://forum.nim-lang.org/t/8547
[19:44:35] <nrds> <06Prestige99> Wasn't there a post exactly like this a few days ago/last week?
[19:49:18] <FromDiscord> <demotomohiro> This one?
[19:49:19] <FromDiscord> <demotomohiro> https://forum.nim-lang.org/t/8515
[19:49:46] *** Joins: rockcavera (~rc@192.12.112.105)
[19:49:46] *** Quits: rockcavera (~rc@192.12.112.105) (Changing host)
[19:49:46] *** Joins: rockcavera (~rc@user/rockcavera)
[19:50:05] <nrds> <06Prestige99> Yep
[19:53:10] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Ping timeout: 260 seconds)
[19:55:05] <FromDiscord> <haxscramper> NIM SHOULD NOT BE WRITTEN AS NIM incoming
[19:59:11] <FromDiscord> <dom96> Aporia 🪦
[20:01:17] <nrds> <06Prestige99> no mention of moe?
[20:01:34] <FromDiscord> <IsaacPaul> I don't know if it's just me, but I can seem to get the nimsaem nim plugin to highlight syntax errors. Following symbols and  autocomplete works tho
[20:04:54] <FromDiscord> <Rika> moe isnt really an ide
[20:07:28] <nrds> <06Prestige99> what is it?
[20:08:23] <FromDiscord> <Rika> isnt it more like a regular traditional editor
[20:10:53] *** Joins: vicfred (~vicfred@user/vicfred)
[20:34:34] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[20:40:35] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Ping timeout: 264 seconds)
[20:42:04] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[21:05:08] *** Joins: neurocyte0132889 (~neurocyte@185.117.68.82)
[21:05:08] *** Quits: neurocyte0132889 (~neurocyte@185.117.68.82) (Changing host)
[21:05:08] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:15:19] <FromDiscord> <dom96> wow, moe is so cool
[21:15:58] <FromDiscord> <dom96> I especially like how the number 1 feature on its website is "Written in Nim" :nim1:
[21:41:20] <NimEventer> New thread by V3ss0n: Great  to see Nim popularity rising , Top post of /r/programming on reddit now., see https://forum.nim-lang.org/t/8548
[21:47:49] <FromDiscord> <Yardanico> From that thread: apparently https://store.steampowered.com/app/1444480 is made with Godot and Nim
[21:48:03] <FromDiscord> <Yardanico> Will need to manually verify then add to the list :P
[21:50:56] <FromDiscord> <Yardanico> https://steamcommunity.com/app/1444480/discussions/0/2952663522496620840/
[21:51:17] <FromDiscord> <Yardanico> "strutils.nim(1115) parseInt↵Error: unhandled exception: invalid integer: [ValueError]" so at least some of it is Nim for sure :)
[22:14:46] <FromDiscord> <jos> are there any
[22:14:50] <FromDiscord> <jos> large open source nim projects
[22:15:08] <FromDiscord> <jos> preferably with some users
[22:16:34] <FromDiscord> <Yardanico> nitter
[22:16:35] <FromDiscord> <Yardanico> nim
[22:17:31] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[22:17:47] <mst> huh, had never occurred to me that's why nitter was called that
[22:23:47] *** Joins: neurocyte0132889 (~neurocyte@185.117.68.82)
[22:23:47] *** Quits: neurocyte0132889 (~neurocyte@185.117.68.82) (Changing host)
[22:23:47] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:31:14] <FromDiscord> <reilly> Compiling something for a Raspberry Pi using a custom build script, and getting this error I've never seen before: `/usr/bin/ld: /home/pi/Desktop/nanolab-gui/gui/.nimcache/stdlib_unicode.nim.cpp.o: file not recognized: file truncated`
[22:34:02] <FromDiscord> <reilly> Deleting the `.nimcache` folder did the trick. A build must have gotten interrupted earlier and I didn't know it...
[22:34:25] <FromDiscord> <IsaacPaul> yea I was going to say it seems like the linking couldn't finish parsing the object file
[22:43:11] <FromDiscord> <demotomohiro> Maybe the sdcard your Raspberry PI using is going to die.
[22:44:33] <FromDiscord> <demotomohiro> I heard using sdcard with Raspberry PI doesn't last long time and I lost a sdcard used with raspberry PI 3.
[22:46:14] <FromDiscord> <reilly> I can worry about a dying SD card later, right now I'm wonder why `glfwCreateWindow()` isn't working on the RPi.
[22:47:28] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3CYX
[22:53:59] <FromDiscord> <reilly> Well, I half-solved it. It's still failing to create the window, but instead of failing inside of `glfwCreateWindow()`, it's failing in my own assertion instead. The window is always nil but I don't know why.
[23:00:32] <FromDiscord> <Goel> Wasn't 1.6 going to change the `gc` of Nim to `arc`/`orc` by default? I see the default is still `refc`
[23:02:19] <FromDiscord> <demotomohiro> You are trying to create a window with OpenGL version that is not supported by raspberry pi?
[23:04:43] <FromDiscord> <deech> How do I check to see if the current backend is `cpp` inside a macro?
[23:05:14] <FromDiscord> <Elegantbeef> `when defined(cpp)`
[23:05:36] <FromDiscord> <Elegantbeef> or just `let isCpp = defined(cpp)`
[23:06:08] <FromDiscord> <deech> Duh! Thanks!
[23:06:26] <FromDiscord> <Elegantbeef> No problem, and forgot to say good talk on tuples 😛
[23:07:46] <FromDiscord> <deech> Thanks!
[23:08:14] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3CZ4
[23:08:39] <FromDiscord> <reilly> Now I'm worried that NimGL just doesn't support older OpenGL versions...
[23:10:04] <FromDiscord> <Elegantbeef> That's the gflw version no?
[23:11:02] <FromDiscord> <demotomohiro> NimGL just wrap GLFW for Nim. It should support any OpenGL version GLFW supports.
[23:11:47] <FromDiscord> <reilly> "NimGL only supports modern OpenGL." - the readme
[23:12:32] <FromDiscord> <reilly> In reply to @Elegantbeef "That's the gflw version": As far as I can tell, that is how you specify your OpenGL version.
[23:13:41] <FromDiscord> <reilly> I actually hadn't tried it on the RPi without using the `GLFWOpenglProfile` hint until a minute ago, and that actually does initialize the window properly.
[23:14:38] <FromDiscord> <reilly> The problem now is that it "failed to compile vertex shader," telling me that GLSL 3.30 is not supported and that only 1.10, 1.20, 1.00 ES, and 3.00 ES are.
[23:21:25] <FromDiscord> <Gumber> moden opengl meaning anything not legacy opengl
[23:21:33] <FromDiscord> <Gumber> 2.1 is still modern opengl
[23:21:48] <FromDiscord> <Gumber> you should probably be using GLES if you want to write OpenGL for a raspberry Pi
[23:23:10] <FromDiscord> <Gumber> sent a code paste, see https://paste.rs/QEl
[23:23:35] <FromDiscord> <Gumber> you need to specify the version of GLSL you're shaders should be compiled against in the shaders themeslves
[23:23:45] <FromDiscord> <Gumber> it has nothing to do with the version of the OpenGL graphics context you created
[23:23:58] <FromDiscord> <Gumber> (edit) "you're" => "your"
[23:24:01] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3CZ9
[23:24:13] <FromDiscord> <Gumber> yeah this has nothing to do with GLFW honestly
[23:24:21] <FromDiscord> <Gumber> its user error / not knowing enough about OpenGL
[23:24:28] <FromDiscord> <Gumber> (edit) "yeah this has nothing to do with GLFW honestly ... " 03added "or Nim or NimGL"
[23:24:50] <FromDiscord> <Gumber> (edit) "its user error / not knowing enough about OpenGL ... " 03added "& GLSL"
[23:42:36] <FromDiscord> <Alea> so you can use unicode operators↵has anyone ever implemented APL in nim?
[23:45:32] <FromDiscord> <Elegantbeef> You can use a limited selection of unicode operators
[23:48:49] <FromDiscord> <haxscramper> you can use any unicode if you are wiling to deal with the resulting AST
[23:49:20] <FromDiscord> <haxscramper> `ф у н к ц и я(12 ∈ 123)` is technically valid IIRC
[23:50:02] <FromDiscord> <haxscramper> https://wandbox.org/permlink/o6heAvejNox2xKAP
[23:50:03] <FromDiscord> <haxscramper> yes
[23:50:22] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#lexical-analysis-unicode-operators
[23:51:37] <FromDiscord> <haxscramper> tbh we should've enabled this from the start
[23:51:42] <FromDiscord> <haxscramper> nobody uses these operators anyway
[23:52:55] <FromDiscord> <haxscramper> if you want some traditional APL you might also write things in a single operators and then split them
[23:53:07] <FromDiscord> <haxscramper> Like `#$%^&I(` and then iterate over runes
