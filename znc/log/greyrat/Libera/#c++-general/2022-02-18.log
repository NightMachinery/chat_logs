[00:02:29] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[00:09:49] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[00:10:54] *** Joins: paul424 (~tom@ip-5-172-236-175.multi.internet.cyfrowypolsat.pl)
[00:14:41] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18)
[00:18:23] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1aa) (Quit: Leaving)
[00:20:22] *** Tobbi__ is now known as Tobbi
[00:21:55] <leonardus> if someone is using a build system that's built into the IDE for their project, and they want to send it to someone else and want them to be able to build it, do they then have to write a makefile just so they can build it, or require that the user be using the same IDE, or is there a better way to go about doing that? because if not, I don't see why anyone is using ide build systems for anything but small personal projects,
[00:21:55] <leonardus> or a company project where everyone is on the same ide
[00:22:18] <rpav> modern IDEs/editors/etc can all more or less use cmake
[00:22:47] <rpav> so the idea is you write cmake, load that in your ide/whatever, and then whoever else needs to use it can do so with cmake too
[00:23:16] <MaddHatter> What IDE has its own built-in bulid system?
[00:23:47] <rpav> well you can split hairs about "built-in" or not, but VS would generally be considered to have its build system "built in"
[00:24:06] <leonardus> MaddHatter: codewarrior does it I think
[00:24:43] <rpav> so do probably most aging IDEs .. qt creator uses cmake now, though it probably used qmake before .. but eclipse surely does? Xcode ... err
[00:25:00] <MaddHatter> rpav: yeah, I was thinking that, but it's really more of a proprietary build system that VS (and others, like msbuild) happen to implement
[00:25:17] <niko3> clion is the best ide
[00:25:19] <rpav> MaddHatter: sure but it's close enough as to be what anyone would mean
[00:25:29] <rpav> clion is pretty good
[00:25:44] <MaddHatter> does clion have its own build system?
[00:25:48] <rpav> no, it uses cmake
[00:26:07] <MaddHatter> I never got clion to work for me
[00:26:28] <rpav> how is that possible .. it's a pretty painless out of the box experience
[00:27:14] *** test_ is now known as _flood
[00:27:16] <MaddHatter> ate up a huge amount of memory; crashed a lot; didn't understand the code so always jumping to the wrong places or unable to find stuff
[00:27:30] <rpav> weird
[00:27:54] <MaddHatter> it felt virtually identical to eclipse, which suffers the same issues
[00:28:05] <rpav> it will definitely eat a chunk of memory, but i don't really remember it crashing much if at all .. when i was using it, it was just starting to transition to lsp/clangd so it occasionally had trouble grokking c++17, but
[00:28:18] <rpav> maybe someone `ln -s eclipse clion`
[00:29:01] <MaddHatter> no, I downloaded both to try out at one point, because whatever I was using before was also not doing well
[00:29:14] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[00:29:26] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[00:30:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:32:06] <antto> MaddHatter, C::B has its own build system
[00:32:44] <MaddHatter> antto: oh yeah, I think I've heard of that before
[00:33:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:34:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:37:49] *** Quits: MatSharrow (~matthew@60.102.9.51.dyn.plus.net) (Quit: Konversation terminated!)
[00:41:27] *** Quits: proller (~p@2a02:6b8:b081:7212::1:22) (Ping timeout: 252 seconds)
[00:42:41] <Alipha> DSpider: i generally don't see people bother with constexpr for lambdas. as a whole, i don't think people bother with constexpr other than for creating named constants for integers/bools
[00:43:01] <rpav> what about all the constexpr functions D:
[00:43:18] <Alipha> DSpider: unless they specifically need constexpr because they need a constant for an array index or template parameter
[00:44:08] <Alipha> rpav: as a library writer, it's good to constexpr everything you can. as an application writer, i wouldn't bother with constexpr unless you specifically need it for one of the above situations
[00:44:24] <rpav> Alipha: oh, yeah
[00:44:41] <rpav> i can't imagine not writing a bunch of utility stuff though
[00:45:54] <Alipha> noexcept is another thing that i don't think the people should generally bother with, except on move constructors and move operator=. worrying about whether a function is constexpr or noexcept just slows you down for no gain
[00:46:12] <Alipha> slows the programmer down, to clarify
[00:46:37] <rpav> i'm lucky to remember noexcept on move, mostly because even writing a bunch of library stuff, i so _rarely_ need explicit move ctors
[00:47:46] <rpav> mostly for RAII .. but i wrote this easy_raii thing that takes two lambdas .. one for immediate use and one for "do this on delete," i think probably i'd use that or a subclassable variation for future raii stuff
[00:48:24] <cbreak> sounds like boost's scope guard thing
[00:48:41] <rpav> although i think there's an annoying issue where you can't do subclassing raii because of dtor order
[00:49:05] <rpav> cbreak: probably, but it's raii, and you can move it around for passing the responsibility, which is pretty neat
[00:49:21] <rpav> and/so
[00:50:15] <rpav> { easy_raii handle{...}; ... if(condition) { try_later(..., std::move(handle)); } ... }
[00:50:16] <geordi> error: 'easy_raii' was not declared in this scope
[00:50:23] <rpav> err, didn't meant to geordi that, but yeah
[00:50:35] <DSpider> thanks
[00:51:52] *** Quits: Tokamak (~Tokamak@172.58.191.81) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:52:03] <rpav> i wonder if winding order gets complicated (or makes any kind of sense) in higher dimensions
[00:53:51] *** Quits: paul424 (~tom@ip-5-172-236-175.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:57:36] *** Joins: proller (~p@2a02:6b8:b081:5::1:20)
[01:02:33] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[01:02:53] *** Joins: pulse (~pulse@user/pulse)
[01:03:24] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[01:06:01] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[01:08:23] *** PJBoy is now known as Guest4631
[01:08:23] *** Quits: Guest4631 (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[01:08:29] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:09:18] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:13:03] *** Quits: robod34 (~Username@92.81.151.141) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:15:44] <AmR> I need some help to use SOCI project, I want add some sqlite3 lib to be build 1st and then config soci to use that local lib , Can Any one Help me with that ?
[01:21:25] *** Joins: abf (~abf@user/abf)
[01:30:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:34:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[01:35:42] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:39:29] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Read error: Connection reset by peer)
[01:39:51] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[01:40:11] *** Joins: Tokamak (~Tokamak@172.58.191.81)
[01:40:12] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Ping timeout: 240 seconds)
[01:41:45] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[01:42:38] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:42:46] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:42:46] *** ChanServ sets mode: +v npaperbot
[01:43:57] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1aa)
[01:46:15] *** Joins: markong (~kvirc@213.146.188.203)
[01:58:59] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:00:37] *** Quits: magla (~gelignite@55d4275f.access.ecotel.net) (Quit: Stay safe!)
[02:02:14] *** Joins: troller (~p@80.240.216.69)
[02:02:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:02:51] *** Quits: proller (~p@2a02:6b8:b081:5::1:20) (Ping timeout: 252 seconds)
[02:03:12] *** Joins: KillAnimals (~anon@208.98.223.107)
[02:03:24] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[02:06:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:06:36] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[02:06:38] *** Joins: MatSharrow (~matthew@249.99.9.51.dyn.plus.net)
[02:08:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[02:08:57] *** Quits: MatSharrow (~matthew@249.99.9.51.dyn.plus.net) (Client Quit)
[02:19:12] *** Joins: troller (~p@2a02:6b8:b081:19::1:29)
[02:19:55] <night_wulfe> In this Cppcon talk, https://youtu.be/I8QJLGI0GOE?t=2091, Line 3 of the code on the slide has `if constexpr (memcpyable<InputIterator, InputSentinel, OutputIterator>)` followed by `if (!std::is_constant_evaluated()). The else branch on both conditions do the same thing, so my question is why is line 4 necessary? Doesn't the `if constexpr` on line already do this check?
[02:22:03] <night_wulfe> I should clarify I realize they're doing the opposite, but I don't see why it couldn't just be written as `if constexpr (memcpyable....) { return uninitialized(...); } else { cpp_memcpy(...); }
[02:23:45] *** Quits: Leone (~Leo@108.175.224.215) (Read error: Connection reset by peer)
[02:24:38] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:27:00] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[02:31:26] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[02:32:13] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:32:29] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[02:32:35] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 240 seconds)
[02:36:14] <pulse> clangd with vscode is actually very comfy
[02:36:57] *** Quits: jsbach (~jsbach@2a01:c22:accf:9400:f89c:8bec:657d:22e8) (Ping timeout: 252 seconds)
[02:37:48] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[02:41:54] *** Quits: troller (~p@2a02:6b8:b081:19::1:29) (Ping timeout: 252 seconds)
[02:44:41] *** Quits: Oxyd (~oxyd@user/oxyd) (Ping timeout: 256 seconds)
[02:44:56] *** Quits: xq (~xq@user/xq) (Ping timeout: 245 seconds)
[02:46:45] *** Joins: pulse_ (~pulse@user/pulse)
[02:47:15] *** Quits: tachoknight (~textual@2600:1700:3060:3ee0:f467:fda7:b67f:3b6) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:47:51] *** Quits: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6bb0) (Quit: Leaving)
[02:48:22] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[02:49:48] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[02:50:06] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:51:00] *** Joins: Oxyd (~oxyd@user/oxyd)
[02:53:41] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[03:02:06] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:02:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:02:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:04:35] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 240 seconds)
[03:06:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:08:43] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[03:08:59] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[03:09:59] * antto injects a cactus in the middle
[03:21:35] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:36:21] *** Quits: ville (~ville@user/ville) (Quit: ville)
[03:39:17] *** Joins: ville (~ville@user/ville)
[03:40:04] *** Joins: ferdna (~ferdna@user/ferdna)
[03:49:55] <Alipha> night_wulfe: "if constexpr" actually has nothing to do with constexpr expressions. "if constexpr" means "once the template arguments are known, evaluate this expression. If it's true, compile this block. Else compile this block"
[03:50:43] *** pulse_ is now known as pulse
[03:51:31] <causative> don't constexpr expressions work a similar way?
[03:55:32] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:56:37] <Alipha> So, if you consider "constexpr" means "at compile-time", then yes, they're similar
[03:58:14] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[03:58:35] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[03:59:16] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 272 seconds)
[04:03:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:07:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:09:47] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:30:01] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[04:30:31] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:41:53] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:44:00] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:44:57] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:49:36] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[04:50:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:04:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:07:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:09:41] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:20:18] <night_wulfe> Alipha: Right, I get that. That's why the nested `if (std::is_constant_evaluated())` seems redundant to me.
[05:20:45] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[05:21:13] <AmR> How tell cmake not use lib from system but from local script ?
[05:28:30] *** Quits: KillAnimals (~anon@208.98.223.107) (Quit: Konversation terminated!)
[05:29:59] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d) (Remote host closed the connection)
[05:30:47] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:49c:f20:1b75:1542)
[05:34:41] <hnOsmium0001[m]> night_wulfe: in more layman's terms, the body of an `if constexpr` is not constexpr; it's as if you specialized a template function based on the condition - the body of the function is not necessarily evaluated at compile time, despite the condition is
[05:40:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:40:43] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[05:42:39] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:42:49] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:42:49] *** ChanServ sets mode: +v npaperbot
[05:44:21] <night_wulfe> hnOsmium0001[m]: I must be missing something obvious. As I understand it, if constexpr may result in the evaluated block staying and the rest removed for that template instantiation. Conceptually similar to doing #if defined(USE_MEMCPY) ... #else ... #endif. What I don't understand is what the `is_constant_evaluated()` check is adding that isn't already handled by the `if constexpr` statement
[05:45:57] <night_wulfe> Let me ask a different way
[05:46:05] <hnOsmium0001[m]> night_wulfe: let's simplify the function to: `template <bool v> constexpr void f() { if constexpr(v) { a(); } else { b(); } }`
[05:46:58] <hnOsmium0001[m]> can the call to `a()` be not constexpr? Yes, because you can call f() in a non-constexpr context, and if you take the analogy of #ifdef, by instanciating the template all you get is a function like `void f<true>() { a(); }`, which has nothing "constexpr" in it
[05:48:04] <hnOsmium0001[m]> maybe you are missing the part where a constexpr function can be called in a non-constexpr context, and all it will do is move the computation runtime?
[05:48:54] <night_wulfe> hnOsmium0001[m]: Being called outside of a constexpr context is something I forgot about, but wouldn't is_constant_evaluated() then return false? Maybe it's because I don't know what is_constant_evaluated really does and I'm making false assumptions about what it returns
[05:49:26] <hnOsmium0001[m]> it could return true or false depending on whether you called it in a constexpr context or ot
[05:49:33] <night_wulfe> Ok, that's what I thought
[05:49:39] <night_wulfe> One sec, let me ask this a different way
[05:49:47] <night_wulfe> I'll use your simplified code
[05:50:33] <hnOsmium0001[m]> { cout << call(); } constexpr int foo() { if(is_constant_evaluated()) {return 0;} else {return 1;} }  void call() { foo(); }
[05:50:33] <geordi> error: no match for 'operator<<' in 'cout << call()' (operand types are 'ostream' {aka 'ostream'} and 'void')
[05:50:43] <hnOsmium0001[m]> { cout << call(); } constexpr int foo() { if(is_constant_evaluated()) {return 0;} else {return 1;} }  int call() { return foo(); }
[05:50:43] <geordi> 1
[05:50:53] <hnOsmium0001[m]> { cout << call(); } constexpr int foo() { if(is_constant_evaluated()) {return 0;} else {return 1;} } constexpr int call() { return foo(); }
[05:50:54] <geordi> 1
[05:51:06] <hnOsmium0001[m]> oops
[05:51:28] <hnOsmium0001[m]> { constexpr n = call(); cout << n; } constexpr int foo() { if(is_constant_evaluated()) {return 0;} else {return 1;} }
[05:51:28] <geordi> error: 'n' does not name a type
[05:51:39] <hnOsmium0001[m]> { constexpr int n = call(); cout << n; } constexpr int foo() { if(is_constant_evaluated()) {return 0;} else {return 1;} }
[05:51:39] <geordi> error: 'call' was not declared in this scope
[05:51:49] <hnOsmium0001[m]> this really is not quite working out
[05:51:53] <hnOsmium0001[m]> let me move to #geordi for a second
[05:52:31] <night_wulfe> Oh, I think it's almost clicking. I can feel it tipping but it's not quite happening
[05:52:42] <night_wulfe> The bulb flickered
[05:53:16] <hnOsmium0001[m]> { constexpr /*invoking foo() in constexpr context*/ int n = foo(); cout << n; } constexpr int foo() { if(is_constant_evaluated()) {return 0;} else {return 1;} }
[05:53:17] <geordi> 0
[05:53:33] <hnOsmium0001[m]> { int n = foo() /* invoking foo() in runtime */; cout << n; } constexpr int foo() { if(is_constant_evaluated()) {return 0;} else {return 1;} }
[05:53:34] <geordi> 1
[05:53:46] <night_wulfe> Ok, that outputs as I expect
[05:54:15] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 240 seconds)
[05:55:52] <night_wulfe> I think my issue is that I am treating the `if constexpr(memcpyable)` as if it will have the same return value `if (std::is_constant_evaluated())` which I suppose is not true. Though I can't think of a situation where that would be the case.
[05:57:08] <hnOsmium0001[m]> { int n = foo<true>(); cout << n << ' '; int m = foo<false>(); cout << m; } template <bool addTen> constexpr int foo() { if constexpr(addTen) { if(is_constant_evaluated()) {return 10;} else {return 11;} } else {  if(is_constant_evaluated()) {return 0;} else {return 1;} }
[05:57:08] <geordi> error: Unexpected end of request. Expected '}' or balanced code.
[05:57:23] <hnOsmium0001[m]> of course when I copied it back I missed the last brace
[05:57:29] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[05:57:33] <hnOsmium0001[m]> { int n = foo<true>(); cout << n << ' '; int m = foo<false>(); cout << m; } template <bool addTen> constexpr int foo() { if constexpr(addTen) { if(is_constant_evaluated()) {return 10;} else {return 11;} } else {  if(is_constant_evaluated()) {return 0;} else {return 1;} } }
[05:57:34] <geordi> 11 1
[05:57:59] <hnOsmium0001[m]> sorry for the convoluted code, but my point is: if constexpr trims the body, it doesn't affect the constexpr-ness of it
[06:01:05] <night_wulfe> hnOsmium0001[m]: No worries. Thanks, I dropped it in wandbox and am playing with it
[06:02:56] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[06:04:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:08:28] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[06:10:12] <night_wulfe> hnOsmium0001[m]: Ok. I think I get it. The first check is determining if the type can be trivially copied, which is something known at compile time and therefore can be constexpr. However, just because that is known doesn't mean the actual copy is occurring in a constexpr context, so it has to delegate to either cpp's memcpy or a custom constexpr memcpy depending on is_constant_evaluated
[06:13:05] <hnOsmium0001[m]> :)
[06:15:19] <night_wulfe> thanks!
[06:23:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:30:11] *** johnny_ is now known as johnny
[06:32:54] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[06:36:10] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[06:41:35] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[06:44:34] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 272 seconds)
[07:05:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:07:02] *** Joins: adeliktas4 (~adeliktas@i59F52D25.versanet.de)
[07:07:16] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:08:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:08:34] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[07:09:00] *** Quits: adeliktas (~adeliktas@i59F52BE7.versanet.de) (Ping timeout: 240 seconds)
[07:09:00] *** adeliktas4 is now known as adeliktas
[07:10:41] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:20:08] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[07:23:24] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[07:25:28] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[07:33:03] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[07:37:42] *** Joins: txtsd (~txtsd@user/txtsd)
[07:46:24] <pulse> how do you get your linux app into official packages of various distros
[07:46:39] <pulse> do you just go from one to another and request to be added
[07:46:47] <pulse> or does someone add it at random
[07:46:50] <pulse> how does that work
[08:05:00] *** Quits: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[08:05:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:09:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[08:30:32] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:32:06] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[08:34:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[08:34:03] *** vinleod is now known as vdamewood
[08:38:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:41:52] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[08:47:48] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[08:50:07] *** Joins: txtsd (~txtsd@user/txtsd)
[08:52:43] *** Quits: AmR (~AmREiSa@156.199.14.65) (Quit: Konversation terminated!)
[09:06:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:10:14] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[09:14:00] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[09:14:33] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:16:39] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:27:45] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[09:33:49] *** Joins: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu)
[09:36:02] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[09:36:03] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Read error: Connection reset by peer)
[09:36:28] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[09:38:27] *** Joins: malloy (~jimery@116.30.220.175)
[09:39:08] *** Quits: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu) (Quit: Leaving.)
[09:39:40] *** Joins: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu)
[09:41:33] *** Quits: niko3 (~mmk@198-200-74-246.cpe.distributel.net) (Quit: Leaving)
[09:42:39] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:42:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:42:47] *** ChanServ sets mode: +v npaperbot
[09:49:00] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[09:53:48] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[09:55:47] *** Joins: malloy (~jimery@116.30.220.175)
[09:57:43] <xkoncek> is there a reasonably good way to #include / rename just a few existing macros ideally into constexpr constants which can be further used for example as array sizes but without having to include all that there is in that header?
[10:01:39] *** Joins: joaofukuda_ (~joaofukuk@2804:431:c7f4:a77a:a70f:b80e:1d75:ee1f)
[10:02:01] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[10:03:33] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18) (Ping timeout: 252 seconds)
[10:04:11] *** Quits: joaofukuda_ (~joaofukuk@2804:431:c7f4:a77a:a70f:b80e:1d75:ee1f) (Read error: Connection reset by peer)
[10:06:06] *** Joins: joaofukuda_ (~joaofukuk@2804:431:c7f4:a77a:a70f:b80e:1d75:ee1f)
[10:06:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:06:54] <xkoncek> probably just steal the definition and static_assert their equality?
[10:07:13] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:10:01] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:10:16] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[10:12:06] *** Joins: malloy (~jimery@116.30.220.175)
[10:12:39] <ville> pulse: depends on the distro. most direct is that you are an offical packager for that distro of course. then probably writing the packages your self and asking on a mailing list if they would be accepted. they'll probably end up in a "testing" repo of some kind for a period.
[10:14:26] <ville> pulse: to improve your chances there, you know iron out any bugs and such, make the packages and if the distro has some kind of user-run repos try getting on one of those before the official ones. some have route to get included from there into the official ones
[10:15:46] <ville> pulse: many distros have the ability to add additional package repos anyway, so you can run your own of those as well until such time you get into the official repo
[10:18:40] <pulse> i see
[10:21:07] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:30c6:5266:d9db:c38f)
[10:21:23] <ville> one of the simplest to-package-for is arch in my experience. their "aur" is then the "unofficial-official" repo you'd aim for after testing your packages on your own systems for awhile i guess
[10:25:04] *** Quits: BluesBoy (~bboy@user/bluesboy) (Quit: leaving)
[10:26:37] *** Quits: causative (~halberd@user/causative) (Ping timeout: 240 seconds)
[10:27:10] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[10:28:22] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[10:29:26] *** Joins: malloy (~jimery@116.30.220.175)
[10:32:36] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 240 seconds)
[10:36:12] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:36:54] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[10:40:37] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[10:53:00] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:53:40] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[10:55:49] *** Quits: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu) (Quit: Leaving.)
[10:57:15] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:57:45] *** Joins: andreasbuhr (~quassel@p549dbc15.dip0.t-ipconnect.de)
[10:59:52] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[11:02:58] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:07:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:10:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:18:30] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:26:34] *** Joins: BluesBoy (~bboy@user/bluesboy)
[11:28:59] *** Joins: DSpider (~DSpider@82.79.237.62)
[11:31:18] *** gentooclimax is now known as climax
[11:31:55] *** Joins: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu)
[11:32:27] *** climax is now known as gentooclimax
[11:32:37] *** Joins: jsbach (~jsbach@2a01:c22:349e:1800:2c43:5ba2:d3cf:5429)
[11:38:59] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[11:39:03] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Ping timeout: 250 seconds)
[11:39:51] *** Joins: evangeline (~Eleanor@178.79.105.181)
[11:40:17] *** Joins: NovumDXW (~NovumDXW@2409:8a28:361c:d160:f997:1e25:38ff:d600)
[11:44:25] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[11:44:55] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[11:45:03] *** Joins: sord937_ (~sord937@gateway/tor-sasl/sord937)
[11:45:30] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[11:46:40] *** Quits: immibis_ (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Ping timeout: 272 seconds)
[11:49:57] *** Joins: Furai (~Furai@furai.pl)
[11:51:21] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:52:00] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:52:41] *** Joins: fldme (~fldme@178.49.152.151)
[11:53:33] *** Joins: txtsd (~txtsd@user/txtsd)
[11:58:39] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[11:58:57] *** Quits: CalamityBlue (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[12:02:29] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:04:03] *** Quits: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu) (Quit: leaving)
[12:04:18] *** Joins: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu)
[12:07:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:07:34] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[12:11:22] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:24:27] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:25:10] *** Joins: robod34 (Username@79.113.243.73)
[12:26:44] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[12:27:01] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[12:33:41] *** Joins: letto2 (~letto@188.26.152.131)
[12:33:48] *** Quits: letto (~letto@188.26.157.245) (Ping timeout: 240 seconds)
[12:38:38] *** Joins: ivii (~ivan@user/ivii)
[12:41:05] *** Joins: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de)
[12:45:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[12:45:22] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[12:46:48] <Haohmaru> !fact
[12:46:49] <nolyc> Haohmaru: If a function is explicitly defaulted on its first declaration,
[12:47:10] <Haohmaru> i don't always finish my sentences. but when i do,
[12:49:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Client Quit)
[12:49:21] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[12:49:46] *** Quits: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu) (Quit: leaving)
[12:50:01] *** Joins: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu)
[12:52:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Client Quit)
[12:52:07] <LordKalma> !rq
[12:52:07] <nolyc> LordKalma: <LordKalma> maybe you wanted to say "don't mind me in your asshole"
[12:52:21] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[13:00:44] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[13:01:30] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[13:04:12] <LordKalma> https://twitter.com/cmuratori/status/1494431326325260305
[13:04:13] <LordKalma> laugh
[13:08:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:10:28] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:11:51] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[13:13:36] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[13:13:40] *** Joins: Burgundy (~NA@86.121.143.206)
[13:13:56] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[13:17:06] <fldme> are c++ knowledge from 2001 useful today?
[13:17:49] <LordKalma> C++11 (2011) marked what we call "modern C++"
[13:17:55] <LordKalma> you'll have to refresh your knowledge
[13:17:59] <LordKalma> but it's always useful :)
[13:19:16] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:26:00] <DSpider> practices have changed a lot in recent years
[13:26:41] <DSpider> one of the features of C++11 that I use a lot are lambdas
[13:26:57] <DSpider> which are basically functions within functions
[13:27:04] <DSpider> they're fantastic
[13:27:12] <DSpider> Visual Studio hates them, tho
[13:30:11] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:32:11] *** Joins: theArthurDent (~user@user/theArthurDent)
[13:32:25] *** Quits: arch-angel (~quassel@user/arch-angel) (Remote host closed the connection)
[13:39:51] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:39:54] *** Joins: paul424 (~tom@ip-5-172-234-116.multi.internet.cyfrowypolsat.pl)
[13:42:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:42:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:42:48] *** ChanServ sets mode: +v npaperbot
[13:43:26] *** Quits: scjg (~scjgmatri@2001:470:69fc:105::f5d6) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: capjack[m] (~raffaem@2001:470:69fc:105::393) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: epiktitos[m] (~epiktitos@2001:470:69fc:105::f76) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: ambasta (~ambasta@2001:470:69fc:105::1:3973) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: wielding (~wielding@user/wielding) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Quit: Bridge terminating on SIGTERM)
[13:46:27] *** Joins: scjg (~scjgmatri@2001:470:69fc:105::f5d6)
[13:47:17] <ville> fldme: yes
[13:47:30] *** Joins: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21)
[13:47:30] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[13:47:45] *** Joins: epiktitos[m] (~epiktitos@2001:470:69fc:105::f76)
[13:47:59] *** Joins: wielding (~wielding@user/wielding)
[13:48:14] *** Joins: ambasta (~ambasta@2001:470:69fc:105::1:3973)
[13:48:14] *** Joins: capjack[m] (~raffaem@2001:470:69fc:105::393)
[13:50:40] <ville> fldme: i recommend you look at wikipedia's articles for c++11, 14, 17 and 20. they should serve as reasonable lists of what's new in each version and you can then learn whatever topic looks interesting now that you know what it is called
[13:56:52] <Haohmaru> +1
[13:57:33] *** Joins: arch-angel (~quassel@user/arch-angel)
[14:07:24] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[14:08:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:08:36] *** Joins: p-i-_ (~Ohmu@183.89.29.122)
[14:11:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:49c:f20:1b75:1542) (Ping timeout: 240 seconds)
[14:12:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:12:57] *** Joins: HvszrStykp (~X@81.171.62.82)
[14:16:12] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[14:21:00] *** Joins: evangeline (~Eleanor@APN-123-243-233-gprs.simobil.net)
[14:23:33] *** Quits: malloy (~jimery@116.30.220.175) (Quit: WeeChat 3.0)
[14:24:55] *** Joins: proller (~p@2a02:6b8:0:40c:e2ba:e91a:e7a4:474e)
[14:38:50] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[14:42:06] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 272 seconds)
[14:45:06] *** rwb is now known as rb
[14:48:43] *** Joins: markong (~kvirc@213.146.188.203)
[14:50:42] *** Joins: joaofukuda__ (~joaofukuk@189-47-30-112.dsl.telesp.net.br)
[14:52:37] *** Quits: joaofukuda_ (~joaofukuk@2804:431:c7f4:a77a:a70f:b80e:1d75:ee1f) (Ping timeout: 240 seconds)
[15:09:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:10:12] *** Quits: NovumDXW (~NovumDXW@2409:8a28:361c:d160:f997:1e25:38ff:d600) (Ping timeout: 240 seconds)
[15:12:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[15:17:00] *** Quits: artok (~azo@mobile-access-b0486a-201.dhcp.inet.fi) (Ping timeout: 240 seconds)
[15:27:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:32:33] *** Joins: NovumDXW (~NovumDXW@2409:8a28:361c:d160:b5c2:c146:3d16:3e5f)
[15:35:56] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[15:48:35] *** Joins: Mocp (~Mocp@2409:8970:ae1:f128:3978:6d71:9b45:f846)
[15:50:56] *** Quits: Mocp (~Mocp@2409:8970:ae1:f128:3978:6d71:9b45:f846) (Quit: Quit)
[15:51:46] *** Quits: AbleBacon_ (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:52:02] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:07:45] *** Joins: Leone (~Leo@108.175.224.215)
[16:09:06] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[16:09:31] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:13:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:20:17] *** Joins: epony (epony@user/epony)
[16:26:30] *** Quits: paul424 (~tom@ip-5-172-234-116.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[16:54:24] <LordKalma> https://godbolt.org/z/b97E154Yz
[16:54:29] <LordKalma> why does this print 1?
[16:58:00] <PJBoy> because pointers to members are convertible to bool
[16:58:10] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:3933:29:5fe1:cb6b) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:59:03] <PJBoy> wow godbolt doesn't work in my browser anymore
[16:59:12] <PJBoy> oh it's because I disabled click hijacking
[17:00:17] <PJBoy> anyways https://godbolt.org/z/bcooW1h5E
[17:00:50] <PJBoy> https://godbolt.org/z/E19PaqYdn too
[17:02:01] *** Joins: k8yun (~k8yun@user/k8yun)
[17:05:05] <xkoncek> Alipha most of libsodium's encryption function explicitly state that the original (source) byte array and the target range can overlap, but not this one: https://doc.libsodium.org/public-key_cryptography/sealed_boxes
[17:07:25] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 240 seconds)
[17:09:00] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e029:79e4:6493:91cc)
[17:09:00] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e029:79e4:6493:91cc) (Changing host)
[17:09:00] *** Joins: skapata (~Skapata@user/skapata)
[17:09:23] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[17:10:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:13:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:16:57] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:3d23:94e0:3c0f:8df3)
[17:21:31] <evangeline> Hey, is it possible to make this whole class + instance constexpr (everything is known at compile-time): https://godbolt.org/z/TWrbqsqE3 ?
[17:23:34] *** Quits: evangeline (~Eleanor@APN-123-243-233-gprs.simobil.net) (Read error: Connection reset by peer)
[17:24:59] *** Joins: xkuru (~xkuru@user/xkuru)
[17:33:26] <PJBoy> just about https://godbolt.org/z/bfrE3srff
[17:35:32] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:36:36] <PJBoy> C++17 version https://godbolt.org/z/vcfff89n5
[17:40:21] *** Joins: evangeline (~Eleanor@178.79.105.181)
[17:42:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:42:43] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[17:42:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:42:48] *** ChanServ sets mode: +v npaperbot
[17:44:41] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[17:46:11] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[17:48:41] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 250 seconds)
[17:50:50] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[17:52:41] *** Joins: teepee (~teepee@openscad/teepee)
[17:55:52] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[17:56:42] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[17:57:48] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Ping timeout: 272 seconds)
[17:58:05] *** Quits: p-i-_ (~Ohmu@183.89.29.122) (Remote host closed the connection)
[17:58:41] *** Joins: p-i- (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th)
[18:01:20] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[18:04:29] *** Joins: gehn (~gehn@user/gehn)
[18:06:26] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:07:15] *** Quits: gehn (~gehn@user/gehn) (Client Quit)
[18:08:01] *** Joins: gehn (~gehn@user/gehn)
[18:09:08] *** Quits: NovumDXW (~NovumDXW@2409:8a28:361c:d160:b5c2:c146:3d16:3e5f) (Read error: Connection reset by peer)
[18:10:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:12:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:13:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:23:36] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:24:55] *** Quits: luizfrds (~Luiz@152.250.243.147) (Quit: Leaving)
[18:28:25] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[18:30:07] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:32:23] <Alipha> xkoncek: interesting. I wonder if they can't overlap or if that's a miss in the documentation. I'd be kinda surprised if they can't overlap when everything else can
[18:35:52] *** Joins: xq (~xq@user/xq)
[18:36:15] *** Quits: dblsaiko (~saiko@crispy.dblsaiko.net) (Quit: ZNC 1.8.2 - https://znc.in)
[18:36:44] *** Joins: dblsaiko (~saiko@crispy.dblsaiko.net)
[18:42:18] <Alipha> fldme: I would definitely get a newer book that covers at least c++11 because c++11 introduced some complex new concepts, like move semantics and smart pointers
[18:43:32] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:52:52] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[18:53:15] *** Joins: k8yun (~k8yun@user/k8yun)
[18:56:44] *** Joins: niko3 (~mmk@198-200-74-246.cpe.distributel.net)
[18:57:10] *** Joins: Guest5883 (~Guest@host110.181-14-187.telecom.net.ar)
[19:11:02] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:13:06] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:6dd8:7cde:f63:8efb)
[19:14:35] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:21:55] *** Joins: pulse (~pulse@user/pulse)
[19:34:43] *** Quits: fldme (~fldme@178.49.152.151) (Ping timeout: 256 seconds)
[19:35:53] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:42:44] *** Quits: Cienisty (Cienisty@user/cienisty) (Quit: Error 606 | Demon not found)
[19:43:16] *** Joins: Cienisty (Cienisty@user/cienisty)
[19:51:27] *** Joins: filename (~kilitary@185.193.143.131)
[19:55:05] *** Quits: veverak (~veverak@ip-89-102-98-161.net.upcbroadband.cz) (Ping timeout: 268 seconds)
[19:55:46] *** Joins: veverak (~veverak@ip-89-102-98-161.net.upcbroadband.cz)
[20:03:53] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[20:11:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:14:01] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[20:15:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:24:21] *** Quits: HvszrStykp (~X@81.171.62.82) (Ping timeout: 256 seconds)
[20:25:25] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[20:41:09] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:44:55] *** Quits: ville (~ville@user/ville) (Quit: ville)
[20:49:15] *** Joins: ville (~ville@user/ville)
[20:53:11] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 256 seconds)
[20:53:18] *** Quits: proller (~p@2a02:6b8:0:40c:e2ba:e91a:e7a4:474e) (Ping timeout: 250 seconds)
[20:54:38] *** Quits: theArthurDent (~user@user/theArthurDent) (Remote host closed the connection)
[20:54:47] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[21:01:30] *** Quits: joaofukuda__ (~joaofukuk@189-47-30-112.dsl.telesp.net.br) (Remote host closed the connection)
[21:03:27] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[21:12:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:13:11] *** Joins: immibis_ (~hexchat@dynamic-089-204-138-049.89.204.138.pool.telefonica.de)
[21:15:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:15:35] *** Quits: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Ping timeout: 256 seconds)
[21:17:16] <evangeline> Hey, is it possible to make this whole class + instance constexpr (everything is known at compile-time): https://godbolt.org/z/TWrbqsqE3 ?
[21:21:50] <MaddHatter>  you quit before PJBoy responded last time -- https://godbolt.org/z/bfrE3srff, https://godbolt.org/z/vcfff89n5
[21:21:53] *** Joins: AmR (~AmREiSa@156.199.14.65)
[21:29:23] *** Joins: paul424 (~tom@ip-5-172-233-77.multi.internet.cyfrowypolsat.pl)
[21:42:41] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:42:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:42:48] *** ChanServ sets mode: +v npaperbot
[21:48:20] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 272 seconds)
[21:56:32] *** Quits: filename (~kilitary@185.193.143.131) (Read error: Connection reset by peer)
[21:59:01] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:f058:960c:b5ef:b751)
[22:01:48] *** Quits: p-i- (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th) (Ping timeout: 240 seconds)
[22:12:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:16:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[22:17:43] <AmR> I need help with cmake, I use https://github.com/SOCI/soci lib in my project and enable sqlite3, I want now use my Owen sqlite3 lib not one that in system, I want now use my Owen sqlite3 lib not one that in system, I want tell CMake to link with that when building SOCI And that not By editing SOCI CMake script I want do that in my main CMake main script CMakeLists.txt outside SOCI, By other word override find sqlite3. How I can do that ?
[22:18:54] <AmR> I will use https://github.com/utelle/SQLite3MultipleCiphers
[22:27:06] *** Quits: sord937_ (~sord937@gateway/tor-sasl/sord937) (Quit: sord937_)
[22:30:12] *** Joins: HvszrStykp (~X@81.171.62.82)
[22:32:26] *** Quits: autark (~autark@ti0048a400-0869.bb.online.no) (Read error: Connection reset by peer)
[22:44:54] <AmR> What is bad in this cmake " if( MINGW OR CMAKE_SYSTEM_NAME MATCHES Linux OR ${CMAKE_CXX_COMPILER_ID} STREQUAL GNU ) "
[22:49:19] *** Quits: Guest5883 (~Guest@host110.181-14-187.telecom.net.ar) (Remote host closed the connection)
[22:56:07] <rpav> AmR: message("XXX '${MINGW}' '${CMAKE_SYSTEM_NAME}' '${CMAKE_CXX_COMPILER_ID}')
[22:56:14] <rpav> +"
[23:03:20] *** Quits: paul424 (~tom@ip-5-172-233-77.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[23:05:02] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:06:15] *** Joins: teepee (~teepee@openscad/teepee)
[23:08:10] *** Joins: DavidMilestone (~DavidMile@182.64.13.254)
[23:13:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:13:49] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:16:33] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:21:41] *** Joins: noarb- (~noarb@user/noarb)
[23:21:54] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[23:26:37] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[23:27:34] *** Joins: noarb (~noarb@user/noarb)
[23:28:36] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 240 seconds)
[23:30:54] *** Joins: gareppa (~gareppa@user/gareppa)
[23:32:36] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[23:33:55] *** Joins: Simplar (~Simplar@188.163.93.241)
[23:34:21] *** Quits: DavidMilestone (~DavidMile@182.64.13.254) (Quit: Client closed)
[23:35:21] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 252 seconds)
[23:36:51] *** Quits: andreasbuhr (~quassel@p549dbc15.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:37:52] *** Joins: Terminus (~null@user/terminus)
[23:40:07] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:51:20] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:56:23] *** Joins: magla (~gelignite@55d44f7e.access.ecotel.net)
[23:56:23] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
