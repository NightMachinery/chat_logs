[00:00:36] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[00:03:58] *** Joins: dadinn (~DADINN@host81-155-239-240.range81-155.btcentralplus.com)
[00:04:10] *** Quits: dadinn (~DADINN@host81-155-239-240.range81-155.btcentralplus.com) (Client Quit)
[00:04:49] *** Joins: dadinn (~DADINN@host81-155-239-240.range81-155.btcentralplus.com)
[00:06:10] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[00:10:42] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 260 seconds)
[00:11:57] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[00:16:33] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[00:21:17] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[00:26:07] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[00:35:51] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[00:40:32] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[00:42:26] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[00:47:08] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[01:05:30] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[01:12:59] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[01:14:05] *** Quits: op2 (~op@user/op2) (Quit: rcirc on GNU Emacs 28.0.50)
[01:15:23] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[01:16:44] *** Joins: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e)
[01:34:17] *** Quits: fanthomas (~fanthomas@gw105-92.imafex.sk) (Quit: Client closed)
[01:47:06] *** Quits: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e) (Remote host closed the connection)
[01:47:21] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[03:33:43] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:f1aa:cb1f:b2aa:34a9) (Ping timeout: 252 seconds)
[03:34:49] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:6daf:7cb1:25f6:bef8)
[04:12:50] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[04:29:37] *** Joins: dadinn_ (~DADINN@host81-155-239-240.range81-155.btcentralplus.com)
[04:33:41] *** Quits: dadinn_ (~DADINN@host81-155-239-240.range81-155.btcentralplus.com) (Client Quit)
[05:27:09] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[05:40:10] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::6a2) (Ping timeout: 260 seconds)
[06:29:23] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[06:29:48] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:47:13] *** Joins: yoonkn (~user@175.197.208.79)
[08:47:26] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Ping timeout: 265 seconds)
[08:57:35] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[09:01:31] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[09:17:35] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[09:22:14] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[09:48:42] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[10:41:27] *** Quits: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (Changing host)
[10:41:27] *** Joins: jjhoo (~jahakala@user/jjhoo)
[11:25:06] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[11:25:20] *** Joins: fanthomas (~fanthomas@gw105-92.imafex.sk)
[11:42:44] *** Quits: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net) (Ping timeout: 246 seconds)
[11:50:58] *** Joins: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net)
[12:54:41] *** Quits: xsperry (~as@user/xsperry) (Read error: Connection reset by peer)
[13:03:41] *** Joins: xsperry (~xs@user/xsperry)
[13:04:57] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[13:10:49] *** Joins: xsperry (~xs@user/xsperry)
[13:28:46] *** Quits: dim (~dimlibera@212.85.154.83) (Ping timeout: 252 seconds)
[13:36:38] *** Joins: seschwar (~seschwar@user/seschwar)
[13:46:40] *** Joins: to-hu (~Thunderbi@p200300e9af0e9c0004cb9f0ee49950f8.dip0.t-ipconnect.de)
[13:57:54] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[13:58:22] *** Joins: xsperry (~xs@user/xsperry)
[15:25:53] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::6a2)
[15:37:47] *** Quits: dadinn (~DADINN@host81-155-239-240.range81-155.btcentralplus.com) (Ping timeout: 265 seconds)
[15:39:12] *** Quits: xsperry (~xs@user/xsperry) (Quit: quit)
[15:48:23] *** Quits: DasBrain (DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[15:48:31] *** Joins: DasBrain_ (DasBrain@user/dasbrain)
[15:49:01] *** Joins: xsperry (~xs@user/xsperry)
[15:58:32] *** Joins: Guest92 (~Guest92@2402:e280:2117:297:f5a4:1339:fd63:345a)
[16:00:18] *** Parts: Guest92 (~Guest92@2402:e280:2117:297:f5a4:1339:fd63:345a) ()
[16:05:42] *** Joins: etiago (~etiago@user/etiago)
[16:38:58] <sobel> a true story: some java code my extremely talented peer wrote (scraping/data acquisition) is decaying because of bad assumptions about GC and not having a C++-style destructor. my clojure code in a related role, written when i barely knew clojure, is still one of the most reliable players in my whole crontab.
[16:40:37] <sobel> he's gone, i discovered the GC assumption a bit after a change to jdk11 and one System.gc() removal improved performance but excacerbated a db connection leak
[16:41:06] <sobel> he's good but his only mistakes are pretty hard to make in clojure
[16:56:57] *** Joins: op2 (~op@user/op2)
[17:01:11] *** Joins: jespada (~jespada@2803:9800:9842:7a62:8558:368:788c:6dc6)
[17:02:41] <jjhoo> bad assumptions even for the jdk / vm that was in use during his time?
[17:10:00] *** Joins: dadinn (~DADINN@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net)
[17:10:38] <Para> That's so very 15 years ago.
[17:11:01] <Para> A lot of C/C++ programmers moving to Java would assume GC to be trash and litter their code with System.gc() etc. exactly as you described :)
[17:11:08] <Para> Turns out most of the code like that runs like ass.
[17:12:45] <sobel> i believe it was a bad assumption for jdk8 when it was made, but it's worse now for jdk11
[17:14:05] <sobel> that System.gc() was in a tight spot so removing it earned a nice performance boost but eventually i figured out it caused the app to hang with high CPU utility instead of exiting.
[17:14:51] <sobel> so i could cut the timeout way down with the useful runtime being more predictable
[17:17:08] <Para> Thankfully the threading tricks of old have phased out entirely :)
[17:17:47] <Para> ThreadLocals are still in a lot of places, of course.
[17:41:12] *** Joins: stevea (~stevea@user/stevea)
[17:45:29] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Read error: Connection reset by peer)
[17:47:18] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[18:08:10] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[18:08:12] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Read error: Connection reset by peer)
[18:09:21] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[18:09:33] *** Quits: X-Scale (~ARM@83.223.233.176) (Ping timeout: 265 seconds)
[18:10:13] *** X-Scale` is now known as X-Scale
[18:19:02] *** Quits: dadinn (~DADINN@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net) (Quit: leaving)
[18:19:13] *** Joins: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e)
[18:23:08] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[18:46:16] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[19:23:14] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[19:29:17] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[19:29:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e) (Remote host closed the connection)
[19:35:42] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:06:36] *** Joins: dadinn (~DADINN@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net)
[20:28:56] *** Quits: jespada (~jespada@2803:9800:9842:7a62:8558:368:788c:6dc6) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:31:53] *** Quits: dadinn (~DADINN@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net) (Quit: leaving)
[20:43:32] *** Quits: xsperry (~xs@user/xsperry) ()
[20:59:02] <Ingvix> what would be a good way to loop through sequence when there's need to refer the previous and next items in the sequence during the current iteration?
[21:00:34] <opqdonut> you can do something like `(map (fn [prev cur nxt] ...) sequence (rest sequence) (rest (rest sequence)))`
[21:01:15] <opqdonut> alternatively, you can use `(partition 3 1 sequence)`
[21:01:32] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[21:01:48] <opqdonut> alternatively, you can loop over a list of indexes and index the sequence (inefficient for large lists, ok for vectors of all sizes)
[21:02:46] <Ingvix> the sequence would be a list of 3D vectors with no limit on the amount
[21:06:37] <Ingvix> either at the end or the beginning I would need to refer to the first as next or last as previous to go sort of full circle so the indexed one might be a good fit
[21:07:21] <Ingvix> but I'm not quite sure whether this can or can't be done with the other methods too
[21:07:46] <opqdonut> it sure can
[21:08:00] <opqdonut> you just need to modify the sequence a bit
[21:08:31] <Ingvix> yeah I guess could just add the first as last as well
[21:08:59] <opqdonut> ,(let [xs (range 6)] (partition 3 1 (concat [(last xs)] xs [(first xs)])))  -- e.g.
[21:09:17] <opqdonut> oh, nobot
[21:09:28] <opqdonut> well anyway, that's ((5 0 1) (0 1 2) (1 2 3) (2 3 4) (3 4 5) (4 5 0))
[21:10:51] <opqdonut> btw if it's a long lazy sequence, it might be better to use (concat xs (take 2 xs)) instead, and handle the first element of xs last
[21:11:07] <opqdonut> since computing (last xs) will force the whole sequence
[21:11:50] <Ingvix> yeah, I think I can manage with this knowledge, thanks
[21:20:00] *** Quits: to-hu (~Thunderbi@p200300e9af0e9c0004cb9f0ee49950f8.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:25:36] *** Joins: xsperry (~xs@user/xsperry)
[21:54:49] *** Quits: sailorCa` (~user@p200300f6a70c4a3ea9c344d31c53aaba.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[21:56:45] *** Joins: sailorCa` (~user@p200300f6a70c4a4025ec43df42d4da4a.dip0.t-ipconnect.de)
[22:17:42] *** Quits: fanthomas (~fanthomas@gw105-92.imafex.sk) (Ping timeout: 256 seconds)
[22:23:26] *** Joins: fanthomas (~fanthomas@gw105-92.imafex.sk)
[22:43:51] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzzâ€¦)
[22:54:19] *** Joins: stevea (~stevea@user/stevea)
[22:59:10] *** Joins: X-Scale` (~ARM@92.250.96.13)
[23:00:13] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 250 seconds)
[23:01:54] *** X-Scale` is now known as X-Scale
[23:06:51] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[23:26:31] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[23:27:34] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzzâ€¦)
[23:27:59] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:28:25] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:34:50] *** Joins: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de)
[23:40:09] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[23:40:46] *** Quits: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de) (Remote host closed the connection)
