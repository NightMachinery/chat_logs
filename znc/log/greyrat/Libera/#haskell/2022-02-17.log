[00:00:00] <xerox> decoding = let in code
[00:00:02] <EvanR> just juggling zillions of sets of • here
[00:00:05] <monochrom> Ah that is why I added the hamming distance part. :)
[00:00:55] <EvanR> when you start coding, you don't have a blank file, you have the set of all programs, and you do minus to narrow it down
[00:01:15] <EvanR> which is why it usually doesn't work
[00:01:44] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:02:03] <monochrom> Is that Schrödiger's cat programming? :)
[00:02:19] *** Quits: ubert1 (~Thunderbi@p200300ecdf0994b46944f41320f0055f.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:03:02] <EvanR> no... that would be limited to all programs whose norm is 1
[00:03:23] <EvanR> which I guess might be better
[00:03:23] *** Quits: machinedgod (~machinedg@24.105.81.50) (Remote host closed the connection)
[00:03:31] <EvanR> linear logic for all of you
[00:04:20] *** Joins: machinedgod (~machinedg@24.105.81.50)
[00:05:38] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[00:06:59] <monochrom> Every program can be renormalized to have norm 1. This is known as the Church-Feynman thesis.
[00:07:17] <monochrom> Step 1. Read the code very carefully.
[00:07:22] <monochrom> Step 2. Think very hard.
[00:07:43] <monochrom> Step 3. Write down "the norm is 1".
[00:07:44] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[00:07:56] *** Joins: deadmarshal (~deadmarsh@95.38.231.90)
[00:08:12] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[00:08:33] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[00:12:42] *** Joins: acidjnk (~acidjnk@p200300d0c7212778fd46ee7c5cdf4a6b.dip0.t-ipconnect.de)
[00:12:58] *** Quits: deadmarshal (~deadmarsh@95.38.231.90) (Ping timeout: 272 seconds)
[00:13:34] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:17:02] *** Joins: sander (~sander@user/sander)
[00:17:49] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[00:18:39] *** Joins: finsternis (~X@23.226.237.192)
[00:18:49] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[00:19:56] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[00:20:34] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[00:22:49] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:24:41] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[00:27:02] <jle`> hm, am i missing a thing that's simpler than liftA2 + sequence?
[00:27:20] <jle`> (a -> b -> m c) -> f a -> f b -> m (f c)
[00:28:19] *** Joins: emf (~emf@2620:10d:c090:400::5:dcea)
[00:28:32] <[exa]> zipWithM ?
[00:28:54] <monochrom> I think liftA2+sequence is right.  traverse is liftA1+sequence. :)
[00:29:11] <[exa]> also called `traverse2` in util
[00:30:58] <[exa]> other than that, I'd say liftA2 + sequence is probably the way to go, at least until traverse2 gets to base :]
[00:31:02] *** Quits: vektor (~vektor@IP-094046083008.dynamic.medianet-world.de) (Quit: Client closed)
[00:31:26] *** Quits: AlexNoo (~AlexNoo@94.233.240.208) (Quit: Leaving)
[00:32:18] *** Joins: AlexNoo (~AlexNoo@94.233.240.208)
[00:34:47] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4)
[00:35:57] <jle`> thanks :)
[00:36:22] <jle`> i guess it happens non-often enough to not warrant having a name
[00:37:43] <EvanR> Data.Aviary.Birds would disagree
[00:38:00] <[exa]> O_o
[00:40:27] <jackson99> is this expected behavior? it seems like a bug to me, or at least a very peculiar behavior 
[00:40:46] <jackson99> scrapHtmlWith (texts "span") "<body><span><span>test</span></span>"
[00:40:53] <jackson99> Just ["test","test"]
[00:41:13] <jackson99> this is scalpel package
[00:41:44] <EvanR> you gotta ask where there are "really" two spans there or not
[00:41:50] <EvanR> whether
[00:42:04] <jackson99> there are. it took me a while to figure out what was going on
[00:42:28] <juri_> hmm. is there a good way to have HSpec+QuickCheck generate lists for me of a given length? I've tried generating them in the 'Gen' monad in my property test, but when a test is falsified, hspec doesn't display the Gen'd list.
[00:43:09] <[exa]> jackson99: sounds like it is documented ("possibly nested" note here: https://hackage.haskell.org/package/scalpel-0.6.1/docs/Text-HTML-Scalpel.html#v:htmls )
[00:44:05] *** Joins: ub (~Thunderbi@193.32.127.226)
[00:45:24] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[00:45:24] *** ub is now known as ubert
[00:45:40] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[00:46:06] *** Joins: acidjnk_new (~acidjnk@p200300d0c721277849d4c4c73f702833.dip0.t-ipconnect.de)
[00:47:10] *** Quits: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com) (Ping timeout: 272 seconds)
[00:47:55] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[00:49:09] *** Joins: jakalx (~jakalx@base.jakalx.net)
[00:49:10] <EvanR> iinm blaze uses something like DList to generate output. It's called blaze so it must be fast (ignoring the previous discussion of meaningless names)
[00:49:31] *** Quits: acidjnk (~acidjnk@p200300d0c7212778fd46ee7c5cdf4a6b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[00:50:03] *** Joins: Guest82 (~Guest82@h-5-150-236-164.A980.priv.bahnhof.se)
[00:50:06] <jackson99> I don't mind the nested behavior if elements are different, for example I like that it would get text from <span..><b>text</b></span>. but if the same element is nested multiple times, it does not seem useful to repeat same string multiple times
[00:50:33] <jackson99> not sure how to handle this. plain nub doesn't work, strings are different
[00:50:39] <[exa]> juri_: if you really need to generate lists of precise size, you might need to pass the size in the type parameter for Arbitrary. Other than that, you could generate non-empty lists of random size and use `take n $ repeat theList` as the value to be tested
[00:50:51] <jackson99> recursively get into span element by element, and get text (not texts)?
[00:54:38] <[exa]> juri_: re displaying, it normally uses the Show instance, right?
[00:55:23] <juri_> [exa]: i think it uses show, but it only tries to display the arguments to the property test, not the results of using generators in the test.
[01:00:53] <[exa]> hm, would you have a code sample?
[01:01:07] *** Joins: ub (~Thunderbi@86.107.21.10)
[01:01:48] *** Quits: ubert (~Thunderbi@193.32.127.226) (Ping timeout: 240 seconds)
[01:01:49] *** ub is now known as ubert
[01:02:05] <juri_> https://github.com/Haskell-Things/HSlice/pull/61/files#diff-8bac62059346f8dc8b7487fd7cccc3d877486e58a6cd4621f1f595726e6f4850R641
[01:03:00] <juri_> radians and dists in that function are generated. if that function is falsified, it will only display the two arguments, centerX and centerY.
[01:03:43] *** Joins: w1n5t0n (~w1n5t0n@cpc83645-brig20-2-0-cust528.3-3.cable.virginm.net)
[01:03:51] <[exa]> uuuh what line in that diff?
[01:04:39] <juri_> 641?
[01:05:03] <[exa]> none such there, you sure it's the right link?
[01:05:05] <w1n5t0n> Hey all, is it possible to compile a stack project so that it can be loaded on GHCi (not Stack GHCi) on other computers running the same OS?
[01:05:24] <w1n5t0n> I'm running a workshop on live coding music using a Haskell library, but I don't want to put participants through the process of having to build it on their machines
[01:05:27] <juri_> generally any of the prop_ functions that are actually using the Gen monad show what i'm talking about tho. radians and dists are not shown, but the arguments to the function are.
[01:05:56] <w1n5t0n> The library has to be loaded in a GHCi session, which is what we'll be using for the workshop
[01:06:03] *** Quits: fendor_ (~fendor@91.141.40.92.wireless.dyn.drei.com) (Remote host closed the connection)
[01:06:05] <juri_> [exa]: it's a large diff. github breaks stuff. *sigh*
[01:06:09] <[exa]> :(
[01:06:40] <[exa]> juri_: link a file in a tree if you can, that's less breaky
[01:08:59] <[exa]> w1n5t0n: if everything fails you may try packing it up in a docker
[01:10:09] <juri_> https://github.com/Haskell-Things/HSlice/pull/61/commits/6a315af1568d15ff4b2829f97af2e6e0f602cfa8#diff-8bac62059346f8dc8b7487fd7cccc3d877486e58a6cd4621f1f595726e6f4850R649
[01:10:25] <w1n5t0n> [exa] yeah I thought of that, but I'd like to avoid it if possible because it may complicate things with the realtime audio aspect of it
[01:10:27] <juri_> hmm. at what point do github links get long enough to be spam... ;)
[01:10:46] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[01:10:49] <w1n5t0n> To begin with I was just wondering if it's possible to take a bunch of .hi and .o files that have been compiled and load them to a GHCi session
[01:13:13] <[exa]> juri_: uuh yes I see the problem. perhaps `label` could help to get the info out? https://hackage.haskell.org/package/QuickCheck-2.14.2/docs/Test-QuickCheck.html#v:label
[01:14:45] <geekosaur> w1n5t0n, stack generally wants to keep tight control of those and in particular any libraries it needs will be hidden inside of stack
[01:16:14] <w1n5t0n> geekosaur I get that stack keeps everything under wraps behind the scenes, but after running `stack build` I can locate and extract the .hi and .o files that were built. Assuming that they were built for the right OS/architecture, shouldn't they be loadable by a bare instance of GHCi?
[01:16:20] <juri_> [exa]: but isn't this for reporting for successful cases? i just want things to show when i have a fail.
[01:16:35] <[exa]> w1n5t0n: hm. perhaps "podman" (less isolation than docker) or the "singularity" containers would do?
[01:16:54] <geekosaur> w1n5t0n, again, only if they don't have any dependencies
[01:17:03] <sm> w1n5t0n: I think you'd be fighting the tools and it wouldn't be worth it. stack's raison d'etre is to ensure things like stack ghci are repeatable
[01:17:13] <juri_> [exa]: maybe counterexample is more correct?
[01:17:18] <jackson99> I am going insane trying to parse this. ^_^
[01:17:30] <geekosaur> well, you could dig those out too but you'd have to re-package them to use them and build your own package database so ghc can find them
[01:17:45] <geekosaur> major pain and almost certainly not worth it
[01:18:28] <w1n5t0n> Yes I see what you mean, in my particular case there's also a dependency on an external C library so that would complicate things even more
[01:18:37] <w1n5t0n> Ugh this is turning out to be a bigger problem than I thought it would
[01:18:40] *** Joins: alp (~alp@user/alp)
[01:18:42] <jackson99> scrapHtmlWith (texts "span") "<span class= \"one-click-content css-nnyc96 e1q3nk1v1\"><span class= \"luna-label italic\">Slang</span>.</span> <span class= \"one-click-content css-nnyc96 e1q3nk1v1\">to complain; gripe: <span class=\"luna-example italic\">They complained about the service, then about the bill.</span></span>"
[01:18:44] <jackson99> Just ["Slang.","to complain; gripe: They complained about the service, then about the bill.","They complained about the service, then about the bill.","Slang"]
[01:19:31] *** Quits: ubert (~Thunderbi@86.107.21.10) (Quit: ubert)
[01:19:38] <w1n5t0n> It's also tricky asking people to install Docker because, at least if they're on Windows, they may have to tinker with BIOS settings
[01:19:45] <sm> w1n5t0n: would having them run in a cloud-based image be an option ? there are some tools like that
[01:20:30] <[exa]> juri_: you can attach label only if it comes out false, right?
[01:21:25] <w1n5t0n> sm the way the system works is that 1) emacs sends some code to GHCi as a string -> 2) GHCi runs that code and uses it to write some .wav files to disk -> 3) it then sends a message through UDP to another local process (SuperCollider) with the path of those files -> 4) it waits for a UDP response
[01:22:06] <sm> cool but kind of the nightmare scenario for a just-works deployment to new users :)
[01:22:14] <w1n5t0n> Exactly :(
[01:22:25] <sm> I think a cloud image could work, it will require some fancy setup on your part though
[01:22:38] <sm> there's something built in to vs code, but I'm not familiar
[01:23:05] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:e573:86f9:f0cd:7c1f) (Remote host closed the connection)
[01:23:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:23:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:23:05] *** Joins: wroathe (~wroathe@user/wroathe)
[01:23:17] <w1n5t0n> How could it work if the files that GHCi produces need to be availably locally and at minimum delay?
[01:23:22] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Remote host closed the connection)
[01:23:31] <w1n5t0n> i.e. downloading them every time wouldn't be an option
[01:23:49] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[01:24:00] <sm> hmm.. indeed you'd need the cloud image to send sound output to local machine somehow, which is an added wrinkle
[01:24:25] <sm> I bet it's doable, but not simple
[01:24:43] <sm> what can you assume about users' expertise / machines ?
[01:24:48] <w1n5t0n> Would it be realistic to prepare a folder for each major OS that contains a GHCi binary, all the dependencies required, and a little boot script to set everything up and point GHCi to the right locations?
[01:25:26] <[exa]> how long does it take for stack to build the thing?
[01:25:49] <w1n5t0n> I need to assume they're complete beginners and may be running any of Windows, Mac, Linux
[01:25:53] <sm> yes, I think that might be the best option. Perhaps prepared for each platform with github CI
[01:26:04] <w1n5t0n> Not too long, but downloading everything required takes quite a while
[01:26:30] <sm> or.. docker. Doesn't it work on windows yet ?
[01:26:32] <w1n5t0n> And if I have 10+ people downloading it at the same time on the same wifi connection I can only assume it will take much longer
[01:26:53] <[exa]> sm: the last time I checked, docker on windows just spawned linux VM in the background
[01:27:09] <w1n5t0n> Docker may work but I think it'll take some significant setting up as well
[01:27:16] <davean> w1n5t0n: Realtime streaming is low latency.
[01:27:23] <sm> multipass is much more lightweight, might be an alternative (installs ubuntu vms, easy to use)
[01:27:46] <[exa]> +1 ^
[01:27:52] <juri_> [exa]: hmm. no idea how no do that. i'm now working with Property, but Expectation.
[01:28:20] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[01:28:58] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Ping timeout: 272 seconds)
[01:29:43] <w1n5t0n> davean unfortunately not low enough for my purposes, there's a tight loop where every half a second or so a few tens of wav files need to be ready and loaded
[01:29:52] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[01:30:04] <w1n5t0n> I.e. it's not a case of streaming one audio file and playing it out the speakers
[01:30:14] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[01:30:23] <w1n5t0n> sm thanks for the suggestion, looking at it now
[01:30:33] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222)
[01:30:34] <davean> Half a second is far longer than streaming
[01:30:41] <davean> w1n5t0n: theres a reason you can stream FPS games
[01:31:01] <davean> Streaming latency is often < 60ms
[01:31:26] <sm> I think you want some kind of standard vm you can rely on, otherwise you'll be debugging weird failures on half the machines at the start of every class
[01:31:38] <sm> vm/image
[01:32:00] <davean> Why produce waves instead of feed it directly into the audio out buffer?
[01:32:31] <w1n5t0n> davean this particular case is a bit more complex than video games, the resulting wavs don't hold audio that's meant to be played out the speakers but instead control signals that are meant to be indexed by SuperCollider's own synth engine
[01:32:33] <jackson99> sorry for flooding the channel earlier. here's the issue I am having on paste. I am thinking about filtering every element that is subset of some other element, but that isn't ideal, and could give me incorrect string for some other html. hopefully there's a way to handle this in Scalpel. https://paste.tomsmeding.com/1vCO1ZjN
[01:32:59] <davean> w1n5t0n: Ok, but it still produces an audio stream out
[01:33:20] <davean> And unlike video games, its open loop, not closed
[01:33:23] <davean> so I think its a LOT simpler
[01:33:31] <w1n5t0n> SuperCollider does, yes, so in theory I could stream that output
[01:33:48] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[01:34:02] <w1n5t0n> Unfortunately I don't personally know how to set any of that up in time for the workshop which is in 3 days
[01:34:26] <[exa]> juri_: I guess you'd need to make a labeled version of the (-/>)
[01:34:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222) (Ping timeout: 240 seconds)
[01:34:53] <sm> ha, 3 days you say
[01:35:01] *** Quits: acidjnk_new (~acidjnk@p200300d0c721277849d4c4c73f702833.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:35:03] <[exa]> like, manually check the equality, label if false, finally run the `shouldNotBe`
[01:35:40] <[exa]> w1n5t0n: ask everyone to install vmware or virtualbox or something and throw around a small ubuntu VM, that must work :D
[01:36:55] <monochrom> Yikes, that's kinda last resort, it's much more stuff to download and much longer installation time...
[01:36:56] <w1n5t0n> sm it seems that multipass needs to use VirtualBox on Windows 10 Home edition, in that case how is it different than using just VirtualBox straight?
[01:37:16] <w1n5t0n> I could distribute the image around on a USB drive, hopefully that may speed things up
[01:37:28] <sm> w1n5t0n: under the hood I have no idea, but the main thing it's an easy and standard install page for all three platforms
[01:37:50] <w1n5t0n> My initial thinking was to get everyone to boot of a live USB running some Ubuntu or something, but I found out that macbooks don't allow that apparently
[01:38:54] *** Joins: acidjnk (~acidjnk@p200300d0c724284749d4c4c73f702833.dip0.t-ipconnect.de)
[01:39:28] <sm> if they all install that, you can be pretty sure to get them all running the same ubuntu environment. Now you can (quickest) write a standard bash setup script that will run in that, or (harder, saves build time for them) find out how to make and publish a custom image they can pull 
[01:40:18] <sm> with the 3 day deadline, I'd pursue the bash script first
[01:41:10] <w1n5t0n> Yes that's probably what I'll do, my only concern is that I've heard it can be tricky to get realtime audio to work well inside VirtualBox VMs when on a Linux host
[01:41:42] <w1n5t0n> So if that's a problem I might need to have them install and run SuperCollider locally and then get the VM to talk to that
[01:42:04] <sm> yes, try it on your own machine, set up your app in the vm, make sure it plays sound. My experience with multipass makes me think it might just work
[01:42:55] <w1n5t0n> It just finished installing so I'll try it now, thanks!
[01:43:00] <sm> (I'm on a mac)
[01:43:08] <sm> let us know how it goes
[01:46:46] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[01:46:51] *** Joins: acidjnk_new (~acidjnk@pd9e0bb2f.dip0.t-ipconnect.de)
[01:47:09] *** Quits: acidjnk (~acidjnk@p200300d0c724284749d4c4c73f702833.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:47:58] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[01:49:13] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222)
[01:54:14] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[01:54:28] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Remote host closed the connection)
[01:54:43] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[01:55:25] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[01:59:27] *** Quits: Guest82 (~Guest82@h-5-150-236-164.A980.priv.bahnhof.se) (Quit: Client closed)
[01:59:35] <juri_> [exa]: yuck, that means i'd need to use different ones in different situations. :/
[02:00:39] *** Joins: BrokenClutch (~pioneer@2804:d41:c291:0:6129:66a9:49aa:83e7)
[02:00:52] <BrokenClutch> I remembered my password!!!!!
[02:01:03] <juri_> Oh no!
[02:01:23] *** Quits: w1n5t0n (~w1n5t0n@cpc83645-brig20-2-0-cust528.3-3.cable.virginm.net) (Ping timeout: 256 seconds)
[02:01:27] <BrokenClutch> me back to ask dumb questions :D
[02:03:42] <monochrom> You should write down your password and hide it in a framed photo.
[02:04:36] <monochrom> (That was a plot device in a TV show I just watched. The person hid an important signed contract there decades ago, then forgot that it was hid there.)
[02:04:46] <monochrom> err, was hidden!  Damn English.
[02:05:29] <davean> Why would you hide a signed contract? That seems weird.
[02:06:10] <davean> contrived really
[02:06:58] <monochrom> Haha I don't know. And the person didn't think in terms of hiding, he was actually thinking "this is a prominent place! I will never forget! It's the family portrait, right? RIGHT?"
[02:07:49] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Remote host closed the connection)
[02:08:51] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:11:39] <texasmynsted> There are many options... "https://github.com/psibi/shell-conduit" looks like what I am looking for but it says it is _experimental_. . . 
[02:12:21] *** Joins: vicfred (~vicfred@user/vicfred)
[02:12:27] <texasmynsted> I want to replace some of my shell scripts with Haskell. I would like to take advantage of streams. I see things like Streamly... 
[02:13:46] <texasmynsted> What would you recommend? Shell conduit? Streamly and just find a way to work with the shell from it?
[02:14:14] *** Joins: k8yun (~k8yun@user/k8yun)
[02:14:37] <texasmynsted> Streamly has an example that seems to work with the shell -> https://github.com/composewell/streamly-examples/blob/master/examples/CoreUtils.hs
[02:18:17] *** Quits: emf (~emf@2620:10d:c090:400::5:dcea) (Ping timeout: 240 seconds)
[02:18:43] <sm> texasmynsted: I'm quite fond of the Cmd system that's part of Shake. You have to build Shake to use it, but then you also have a dependency engine available for your scripts.
[02:19:23] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:19:47] <sm> there's nothing as usable as https://github.com/CZ-NIC/pz AFAIK (someone should try to clone that I think)
[02:23:56] <texasmynsted> I like shake for making build systems
[02:24:18] *** Quits: Ariakenom (~Ariakenom@h-82-196-111-63.NA.cust.bahnhof.se) (Read error: Connection reset by peer)
[02:24:26] <davean> I dislike making build systems
[02:24:32] <texasmynsted> right.
[02:24:56] <texasmynsted> I did not consider using shake to make _shell script_ replacements
[02:24:58] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[02:25:11] <EvanR> build systems to build the build systems to ...
[02:25:21] *** Quits: michalz (~michalz@185.246.204.89) (Remote host closed the connection)
[02:25:23] <texasmynsted> python in bash? No thank you.
[02:25:54] <monochrom> Do you prefer making build systems? >:)
[02:26:08] <monochrom> Err sorry! building make systems!
[02:26:26] *** Joins: w1n5t0n (~w1n5t0n@cpc83645-brig20-2-0-cust528.3-3.cable.virginm.net)
[02:26:30] *** Joins: thyriaen (~thyriaen@simnet-nat-pool-185-130-54-167.stargrpns.pp.ua)
[02:27:23] <texasmynsted> I find in most cases existing build systems work find and are understandable by others. 
[02:27:33] <texasmynsted> s/find/fine/
[02:27:50] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[02:29:02] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[02:29:32] <juri_> [exa]: well, i figgured out how to do what i needed, but it's ugly. I defined a newtype ListOfThree, and gave it an arbitrary instance of fmap ListOfThree $ vector 3
[02:29:43] <juri_> [exa]: now i want to throw up a little.
[02:29:53] <maerwald> texasmynsted: yes, I also think using less powerful build systems is generally better
[02:29:59] *** Quits: thyriaen (~thyriaen@simnet-nat-pool-185-130-54-167.stargrpns.pp.ua) (Client Quit)
[02:30:50] <sm> my point was just that the shell scripting api in shake is quite nice and complete, having the build system available if you need it is a bonus (quite useful for some scripts, not at all for others)
[02:31:33] <sm> nice, complete, and maintained
[02:31:47] <texasmynsted> It is a nice solution/ good idea.
[02:32:12] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:32:34] <sm> combine it with a stack script header and your script will run for others too
[02:32:40] *** Joins: otherwise (~otherwise@2601:602:880:90f0:5c9b:1a43:72d3:910)
[02:33:51] <sm> but... on first run, will take massively more time & space than a bash script...
[02:34:12] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 272 seconds)
[02:35:20] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[02:36:30] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[02:36:56] <sm> (this sad fact, plus the awesome shellcheck, has made me ok with using bash quite often)
[02:38:13] *** Quits: w1n5t0n (~w1n5t0n@cpc83645-brig20-2-0-cust528.3-3.cable.virginm.net) (Ping timeout: 256 seconds)
[02:39:59] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[02:40:54] *** Quits: acidjnk_new (~acidjnk@pd9e0bb2f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:41:54] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222) (Remote host closed the connection)
[02:41:58] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[02:42:15] <texasmynsted> yes, I LOVE shellcheck
[02:42:39] <koala_man> aww, I'm happy you find it useful!
[02:43:03] *** Joins: acidjnk (~acidjnk@dynamic-046-114-170-094.46.114.pool.telefonica.de)
[02:43:24] <texasmynsted> koala_man: Did you write it?
[02:43:32] <koala_man> yes
[02:45:01] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 240 seconds)
[02:45:35] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: taking a break.  remember kids, sekai is better than kotonoha)
[02:46:15] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[02:46:22] <sm> koala_man! thanks as always! you literally made shell scripting safe for humans
[02:46:41] <texasmynsted> Wow! Well done! I use it and recommend it all the time!
[02:47:18] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[02:47:22] <maerwald> what started as a rainy weekend project quickly escalated :D
[02:47:27] <maerwald> at least that's my guess
[02:47:31] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[02:47:54] <texasmynsted> On some repos I have a pre-commit script run and if the shell scripts fail shellcheck they can not be committed. 
[02:48:11] <maerwald> I still wish the parser was a separate package
[02:48:27] <maerwald> there aren't many good (and performant) bash parser in haskell
[02:49:02] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[02:49:21] <maerwald> https://hackage.haskell.org/package/language-bash <- tried this once, performance wasn't good
[02:50:02] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 272 seconds)
[02:50:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 250 seconds)
[02:55:21] *** Joins: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com)
[02:57:20] *** Joins: leah2 (~leah@vuxu.org)
[02:59:07] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:e156:8ff4:a2d2:fade)
[02:59:20] <texasmynsted> Okay, one last thing about shellcheck... It has been a really nice learning tool. I have it running in vi and the "suggestions" have really improved my Bash skill. 
[03:00:59] <sm> absolutely. Makes you wonder if a similar UX could accelerate haskell learning
[03:01:10] <koala_man> ShellCheck's parser is pretty inherently tied to the checking process with lookaheads for common bugs and such, and I'm glad I don't have to worry about breaking too many downstream users
[03:02:38] <koala_man> haha isn't that just ghc's type checking?
[03:03:09] <maerwald[m]> Nah, not even close
[03:04:08] <maerwald[m]> Typechecker doesn't tell  me when I broke laziness accidentally or broke streaming by keeping a reference 
[03:05:02] *** Quits: edwardk (sid47016@haskell/developer/edwardk) (Ping timeout: 240 seconds)
[03:05:17] <maerwald[m]> We have a lazy language, but very few tools to analyze it
[03:05:21] *** Quits: AndreasK (sid320732@id-320732.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[03:05:21] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[03:05:25] *** Quits: awpr (uid446117@id-446117.lymington.irccloud.com) (Ping timeout: 240 seconds)
[03:05:25] *** Quits: nrr___ (sid20938@id-20938.lymington.irccloud.com) (Ping timeout: 240 seconds)
[03:05:25] *** Quits: integral (sid296274@user/integral) (Ping timeout: 240 seconds)
[03:05:25] *** Quits: astra (sid289983@user/amish) (Ping timeout: 240 seconds)
[03:05:28] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:05:32] *** Quits: elvishjerricco (sid237756@id-237756.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[03:05:32] *** Quits: jmct_ (sid160793@id-160793.tinside.irccloud.com) (Ping timeout: 240 seconds)
[03:05:38] *** Quits: caasih (sid13241@id-13241.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[03:05:38] *** Quits: jonrh (sid5185@id-5185.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[03:05:38] *** Quits: grfn (sid449115@id-449115.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[03:05:40] *** Quits: gonz_____ (sid304396@id-304396.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:05:40] *** Quits: hamishmack_ (sid389057@id-389057.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:05:40] *** Quits: sooch_ (sid533113@id-533113.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:05:40] *** Quits: lexi-lambda (sid92601@id-92601.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:05:40] *** Quits: scav (sid309693@id-309693.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:05:40] *** Quits: dpratt__ (sid193493@id-193493.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:05:40] *** Quits: travv0 (sid293381@user/travv0) (Read error: Connection reset by peer)
[03:05:40] *** Quits: typetetris (sid275937@id-275937.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:05:41] *** Quits: whez (sid470288@id-470288.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:05:41] *** Quits: carter (sid14827@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[03:05:41] *** Quits: hubvu_ (sid495858@tinside.irccloud.com) (Ping timeout: 256 seconds)
[03:05:41] *** Quits: lally (sid388228@id-388228.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:05:41] *** Quits: davetapley (sid666@id-666.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:05:41] *** Quits: rtpg (sid443069@id-443069.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:41] *** Quits: ysh (sid6017@id-6017.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:41] *** Quits: SethTisue (sid14912@id-14912.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:41] *** Quits: gmc (sid58314@id-58314.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:41] *** Quits: sa1 (sid7690@id-7690.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:41] *** Quits: supersven (sid501114@id-501114.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:42] *** Quits: ehamberg (sid18208@id-18208.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:05:43] *** Quits: dsal (sid13060@id-13060.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:05:45] *** Quits: bitmapper (uid464869@id-464869.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:05:47] *** Quits: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[03:05:47] *** Quits: T_S_ (sid501726@id-501726.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:05:48] *** Joins: jmct_ (sid160793@id-160793.tinside.irccloud.com)
[03:05:49] *** Quits: PotatoGim (sid99505@id-99505.lymington.irccloud.com) (Ping timeout: 240 seconds)
[03:05:49] *** Quits: hook54321 (sid149355@user/hook54321) (Ping timeout: 240 seconds)
[03:05:50] *** Joins: AndreasK (sid320732@id-320732.uxbridge.irccloud.com)
[03:05:50] *** Joins: awpr (uid446117@id-446117.lymington.irccloud.com)
[03:05:51] *** Quits: jackdk (sid373013@cssa/jackdk) (Read error: Connection reset by peer)
[03:05:51] *** Joins: SethTisue (sid14912@id-14912.ilkley.irccloud.com)
[03:05:51] *** Quits: idnar (sid12240@debian/mithrandi) (Read error: Connection reset by peer)
[03:05:52] *** Joins: davetapley (sid666@id-666.uxbridge.irccloud.com)
[03:05:52] *** Joins: dsal (sid13060@id-13060.lymington.irccloud.com)
[03:05:53] *** Joins: edwardk (sid47016@haskell/developer/edwardk)
[03:05:53] *** Joins: ysh (sid6017@id-6017.ilkley.irccloud.com)
[03:05:53] *** Joins: jonrh (sid5185@id-5185.ilkley.irccloud.com)
[03:05:53] *** Quits: taktoa[c] (sid282096@id-282096.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:05:53] *** Quits: christiaanb (sid84827@id-84827.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:05:53] *** Quits: aria (sid380617@lymington.irccloud.com) (Read error: Connection reset by peer)
[03:05:54] *** Joins: hamishmack_ (sid389057@id-389057.hampstead.irccloud.com)
[03:05:54] *** Joins: gonz_____ (sid304396@id-304396.lymington.irccloud.com)
[03:05:55] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[03:05:55] *** Quits: _0x47_ (sid508683@id-508683.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:05:56] *** Quits: pepeiborra (sid443799@id-443799.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:58] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:05:58] *** Joins: supersven (sid501114@id-501114.ilkley.irccloud.com)
[03:05:59] *** Quits: glowcoil_ (sid3405@id-3405.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:05:59] *** Joins: rtpg (sid443069@id-443069.ilkley.irccloud.com)
[03:05:59] *** Joins: gmc (sid58314@id-58314.ilkley.irccloud.com)
[03:06:00] *** Quits: sunarch (uid526836@user/sunarch) (Read error: Connection reset by peer)
[03:06:00] *** Quits: bw (sid2730@user/betawaffle) (Read error: Connection reset by peer)
[03:06:00] *** Quits: tritlo (sid58727@user/tritlo) (Read error: Connection reset by peer)
[03:06:00] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: mustafa (sid502723@rockylinux/releng/mustafa) (Read error: Connection reset by peer)
[03:06:01] *** Joins: T_S_ (sid501726@id-501726.uxbridge.irccloud.com)
[03:06:02] *** Quits: caimeo (uid540603@id-540603.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:06:02] *** Quits: Firedancer (sid336191@id-336191.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:06:02] *** Quits: jakesyl__ (sid56879@id-56879.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:06:02] *** Quits: gregberns__ (sid315709@id-315709.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:06:07] *** Joins: idnar (sid12240@debian/mithrandi)
[03:06:07] *** Joins: typetetris (sid275937@id-275937.tinside.irccloud.com)
[03:06:13] *** Joins: gregberns__ (sid315709@id-315709.helmsley.irccloud.com)
[03:06:14] *** Joins: sooch_ (sid533113@id-533113.hampstead.irccloud.com)
[03:06:14] *** Joins: nrr___ (sid20938@id-20938.lymington.irccloud.com)
[03:06:19] *** Joins: pepeiborra (sid443799@id-443799.ilkley.irccloud.com)
[03:06:21] *** Joins: taktoa[c] (sid282096@id-282096.tinside.irccloud.com)
[03:06:21] *** Joins: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com)
[03:06:23] *** Joins: _0x47_ (sid508683@id-508683.tinside.irccloud.com)
[03:06:26] *** Joins: caasih (sid13241@id-13241.ilkley.irccloud.com)
[03:06:26] *** Joins: carter (sid14827@id-14827.helmsley.irccloud.com)
[03:06:27] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[03:06:27] *** Joins: caimeo (uid540603@id-540603.lymington.irccloud.com)
[03:06:28] *** Joins: hubvu_ (sid495858@id-495858.tinside.irccloud.com)
[03:06:31] *** Joins: whez (sid470288@2a03:5180:f:2::7:2d10)
[03:06:31] *** Joins: ehamberg (sid18208@id-18208.hampstead.irccloud.com)
[03:06:32] *** Joins: glowcoil_ (sid3405@2a03:5180:f::d4d)
[03:06:36] *** Joins: lally (sid388228@id-388228.uxbridge.irccloud.com)
[03:06:41] *** Joins: christiaanb (sid84827@id-84827.lymington.irccloud.com)
[03:06:44] *** Joins: grfn (sid449115@2a03:5180:f:1::6:da5b)
[03:06:44] *** Joins: sa1 (sid7690@2a03:5180:f:3::1e0a)
[03:06:44] *** Joins: sunarch (sid526836@user/sunarch)
[03:06:50] *** Joins: jackdk (sid373013@cssa/jackdk)
[03:06:50] *** Joins: lexi-lambda (sid92601@id-92601.hampstead.irccloud.com)
[03:06:50] *** Joins: aria (sid380617@2a03:5180:f:2::5:cec9)
[03:06:51] *** Joins: travv0 (sid293381@user/travv0)
[03:06:51] *** Joins: tritlo (sid58727@user/tritlo)
[03:06:51] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[03:06:53] *** Joins: elvishjerricco (sid237756@id-237756.helmsley.irccloud.com)
[03:06:53] *** Joins: scav (sid309693@id-309693.helmsley.irccloud.com)
[03:06:55] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[03:06:55] *** Joins: Firedancer (sid336191@id-336191.hampstead.irccloud.com)
[03:06:59] *** Joins: dpratt__ (sid193493@2a03:5180:f:1::2:f3d5)
[03:06:59] *** Joins: jakesyl__ (sid56879@2a03:5180:f:4::de2f)
[03:07:06] *** Joins: mustafa (sid502723@rockylinux/releng/mustafa)
[03:07:07] *** Joins: bw (sid2730@user/betawaffle)
[03:07:08] *** Joins: astra (sid289983@2a03:5180:f:4::4:6cbf)
[03:07:08] *** Joins: integral (sid296274@user/integral)
[03:07:10] *** Joins: sa (sid1055@2a03:5180:f::41f)
[03:07:40] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:e156:8ff4:a2d2:fade) (Quit: Leaving)
[03:07:55] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:e156:8ff4:a2d2:fade)
[03:08:07] *** Joins: hook54321 (sid149355@user/hook54321)
[03:09:01] <monochrom> C and shell have too many low hanging fruits, this is why a lint tool that merely looks for "if (n = 4)" and "printf("%s", 5)" pays off, and hlint feels so different even though (actually because) it is just picking on similar low hanging fruits.
[03:09:09] <EvanR> on the bright side, we could be using javascript, whose type system doesn't tell you about performance or anything else
[03:09:18] <monochrom> (i.e., lint feels profound whereas hlint feels superficial)
[03:09:56] <monochrom> Yes laziness mistakes and eagerness mistakes are much wanted, unfortunately they mean crazy static analyses that linter writers can't do.
[03:11:19] <monochrom> i.e., a C or shell linter can be just a pushdown automaton, a laziness and eagerness warner takes much more than that.
[03:11:42] *** Quits: acidjnk (~acidjnk@dynamic-046-114-170-094.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[03:13:15] <koala_man> there's always dynamic analysis
[03:13:41] *** Joins: jgeerds (~jgeerds@55d4b9df.access.ecotel.net)
[03:16:22] <koala_man> it's incredible what V8 can do with a language as optimization hostile as JS
[03:17:02] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Remote host closed the connection)
[03:17:48] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 240 seconds)
[03:18:14] <sm> I guess hlint and hls' other plugins are doing the kind of thing for my haskell code that shellcheck is doing for bash. (Popping up useful warnings and hints as I edit.) Obviously it's a bigger, more multi-level task for Haskell
[03:18:29] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[03:18:43] <monochrom> Here is a low hanging fruit though. GHC already does a good chunk of the crazy strictness analysis, not perfect but if it's good enough for code optimization it's very good.  It records its finding in FC (aka core, but now I like the name FC more) and STG outputs.  If you could just add code to bring that annotation back to source level and show in your editor...
[03:19:24] <sm> they should take a leaf from shellcheck's book: name common errors and link to a wiki page
[03:19:44] <Rembane> Is there enough information in FC to bring it back? Or have they thrown away all of that.
[03:19:49] <sm> agreed, monochrom 
[03:19:54] <geekosaur> the AST has source annotations
[03:19:55] <monochrom> It doesn't tell you whether your laziness decisions are right or wrong, but at least it tells you what GHC is seeing, and you can compare against what you expect.
[03:20:17] <geekosaur> they may be complicated by inlining and rewrites, though
[03:22:21] <sm> aside: https://hfpug.org/event/joey-hess-programming-ardinos-with-haskell-and-nasas-copilot starting in 1h
[03:23:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[03:28:28] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222)
[03:29:45] *** Quits: otherwise (~otherwise@2601:602:880:90f0:5c9b:1a43:72d3:910) (Remote host closed the connection)
[03:33:10] <janus> that sounds super cool
[03:38:29] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Read error: Connection reset by peer)
[03:39:47] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:40:13] *** Joins: xkuru (~xkuru@user/xkuru)
[03:40:35] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 240 seconds)
[03:40:35] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[03:40:50] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:41:00] *** Joins: hololeap (~hololeap@user/hololeap)
[03:41:07] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Ping timeout: 256 seconds)
[03:41:28] *** Quits: elkcl (~elkcl@broadband-37-110-156-162.ip.moscow.rt.ru) (Read error: Connection reset by peer)
[03:41:35] *** Joins: elkcl (~elkcl@broadband-37-110-156-162.ip.moscow.rt.ru)
[03:41:35] *** Quits: tiferrei (~tiferrei@user/tiferrei) (Ping timeout: 240 seconds)
[03:41:41] *** Quits: xdej (~xdej@quatramaran.salle-s.org) (Ping timeout: 256 seconds)
[03:43:10] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[03:43:10] *** Joins: xdej (~xdej@quatramaran.salle-s.org)
[03:43:28] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[03:44:52] *** Quits: Alex_test (~al_test@94.233.240.208) (Read error: Connection reset by peer)
[03:44:55] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[03:45:08] *** Joins: Alex_test (~al_test@94.233.240.208)
[03:48:21] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[03:49:55] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[03:52:00] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[03:52:29] *** Joins: k8yun (~k8yun@user/k8yun)
[03:54:12] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[03:55:31] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[03:55:42] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[03:56:42] *** Joins: yauhsien_ (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net)
[03:56:43] *** Joins: ph88^ (~ph88@2a02:8109:9e00:71d0:a0c0:cbe9:2589:5782)
[03:56:44] <[itchyjunk]> Hi
[03:56:44] *** Joins: x_kuru (~xkuru@user/xkuru)
[03:56:58] <[itchyjunk]> I slacked off and I can't remember anything it seems. Could someone proof read this for me?
[03:57:00] <[itchyjunk]> https://bpa.st/QLQA
[03:57:24] *** Joins: tzh_ (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[03:57:24] <[itchyjunk]> I tested it and it kinda seems to work now but i don't know if i checked all cases
[03:57:32] *** Joins: jinsun (~jinsun@user/jinsun)
[03:57:39] *** Joins: vicfred_ (~vicfred@user/vicfred)
[03:57:53] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[03:57:53] *** Quits: vicfred (~vicfred@user/vicfred) (Read error: Connection reset by peer)
[03:57:53] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[03:57:53] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Write error: Connection reset by peer)
[03:58:05] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[03:58:11] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[03:58:39] <monochrom> I think it's right.
[03:58:50] <[itchyjunk]> phew
[03:58:57] <monochrom> Have you tested it?
[03:59:26] <[itchyjunk]> i tried one case of [1,2] [1..5]
[03:59:42] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Ping timeout: 272 seconds)
[03:59:50] <[itchyjunk]> Guess i have mastered cartisian product
[04:00:01] *** Joins: cheater1__ (~Username@user/cheater)
[04:00:21] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: ph88 (~ph88@ip5f5af71f.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: yauhsien (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[04:00:25] *** cheater1__ is now known as cheater
[04:00:43] *** Joins: otherwise (~otherwise@2601:602:880:90f0:b4d0:57c1:4b9f:3ace)
[04:01:41] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[04:02:12] *** Quits: dhil (~dhil@cpc103052-sgyl39-2-0-cust260.18-2.cable.virginm.net) (Ping timeout: 240 seconds)
[04:02:57] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[04:03:42] *** Quits: BrokenClutch (~pioneer@2804:d41:c291:0:6129:66a9:49aa:83e7) (Remote host closed the connection)
[04:05:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:05:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:05:36] *** Joins: wroathe (~wroathe@user/wroathe)
[04:05:38] *** Quits: max22- (~maxime@2a01cb088335980088882a515c4c342d.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[04:09:35] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[04:11:59] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[04:12:36] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 240 seconds)
[04:14:55] *** Quits: jgeerds (~jgeerds@55d4b9df.access.ecotel.net) (Ping timeout: 250 seconds)
[04:18:57] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Quit: Konversation terminated!)
[04:19:40] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::99e7)
[04:20:04] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[04:26:26] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:e156:8ff4:a2d2:fade) (Quit: Leaving)
[04:27:34] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:74f2:75c0:910a:f39d)
[04:28:15] <[itchyjunk]> Does haskell have affine types?
[04:28:30] <[itchyjunk]> Apparently if you pass something to a function, it stops existing in original scope
[04:28:33] <[itchyjunk]> for affine types
[04:30:24] *** Joins: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[04:34:57] *** Quits: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[04:34:59] <hpc> i think an extension for it is in progress?
[04:35:14] <hpc> or it's released fairly recently and i am just out of the loop
[04:35:50] <geekosaur> I thought that was only linear, not affine
[04:36:12] <geekosaur> 9.x has linear types
[04:37:15] <geekosaur> https://downloads.haskell.org/ghc/latest/docs/html/users_guide/exts/linear_types.html
[04:37:58] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[04:38:02] <hpc> that's what it was
[04:40:32] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:40:52] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 272 seconds)
[04:41:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[04:45:54] *** Joins: capo_greco (~textual@60-241-161-167.static.tpgi.com.au)
[04:46:40] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:47:12] *** Quits: capo_greco (~textual@60-241-161-167.static.tpgi.com.au) (Read error: Connection reset by peer)
[04:47:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:47:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:47:31] *** Joins: wroathe (~wroathe@user/wroathe)
[04:51:08] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[04:51:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[04:53:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[04:53:33] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[04:53:59] *** Joins: k8yun (~k8yun@user/k8yun)
[04:57:20] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Ping timeout: 272 seconds)
[04:58:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:58:37] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:58:37] *** Joins: wroathe (~wroathe@user/wroathe)
[05:12:24] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:16:05] *** Quits: EvanR (~EvanR@user/evanr) (Remote host closed the connection)
[05:16:25] *** Joins: EvanR (~EvanR@user/evanr)
[05:22:40] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 272 seconds)
[05:23:39] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222) (Remote host closed the connection)
[05:24:34] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[05:25:51] *** Joins: Guest|64 (~Guest|64@201.143.122.9.dsl.dyn.telnor.net)
[05:26:02] <Guest|64> Hello, is anyone online?
[05:26:18] <dibblego> quick everyone, he's here, run! Go offline!
[05:26:36] *** Joins: pavonia (~user@user/siracusa)
[05:26:48] <Guest|64> Yeah sure hhaha, i need someone who knows about installing heskell
[05:27:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:27:38] <Guest|64> I tried to install it by GHCup but when i add the code given by the page it doesn't work
[05:30:33] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:31:38] *** Joins: k8yun (~k8yun@user/k8yun)
[05:31:42] <sm> @where paste , Guest|64 
[05:31:42] <lambdabot> Help us help you: please paste full code, input and/or output at e.g. https://paste.tomsmeding.com
[05:33:02] *** Quits: unyu (~pyon@user/pyon) (Quit: Reboot.)
[05:33:23] *** Joins: k8yun_ (~k8yun@user/k8yun)
[05:33:29] *** Quits: wroathe (~wroathe@user/wroathe) (Read error: Connection reset by peer)
[05:33:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:33:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:33:42] *** Joins: wroathe (~wroathe@user/wroathe)
[05:36:55] *** Joins: mixfix41 (~homefame@user/mixfix41)
[05:37:00] *** Quits: Guest|64 (~Guest|64@201.143.122.9.dsl.dyn.telnor.net) (Ping timeout: 240 seconds)
[05:37:52] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 272 seconds)
[05:38:40] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[05:38:46] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[05:38:52] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:39:48] *** Quits: alphabeta (~kilolympu@31.205.200.235) (Ping timeout: 240 seconds)
[05:42:20] *** Joins: vysn (~vysn@user/vysn)
[05:43:53] *** Joins: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk)
[05:45:04] *** Joins: Guest65 (~Guest65@2607:fea8:929c:cc00:3d8d:6a28:2200:cb82)
[05:45:26] <Guest65> Just curious, why not use discord?
[05:46:01] *** Joins: mbuf (~Shakthi@122.162.135.157)
[05:46:20] *** Quits: Guest65 (~Guest65@2607:fea8:929c:cc00:3d8d:6a28:2200:cb82) (Client Quit)
[05:47:30] <jackdk> must not have been that curious
[05:49:00] *** Quits: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com) (Ping timeout: 252 seconds)
[05:52:39] <mixfix41> can it be bad if ghc-pkg list has the same package twice?
[05:54:44] <mixfix41> welp doesnt seem to be the case as my hackage-security package as progress further after configure library profiling 8-D
[05:55:06] <mixfix41> has*
[05:55:11] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[05:55:30] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[05:57:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 250 seconds)
[05:57:44] *** [_] is now known as [itchyjunk]
[05:58:17] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[06:01:56] *** Joins: hololeap_ (~hololeap@user/hololeap)
[06:03:22] *** Joins: ph88_ (~ph88@2a02:8109:9e00:71d0:885b:9523:dc87:45b3)
[06:03:33] *** Quits: justGhost (~justache@user/justache) (Remote host closed the connection)
[06:03:40] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:3511:c1b2:b4e7:7f1c)
[06:04:32] *** Joins: justGhost (~justache@user/justache)
[06:06:43] *** Quits: ph88^ (~ph88@2a02:8109:9e00:71d0:a0c0:cbe9:2589:5782) (Ping timeout: 250 seconds)
[06:07:00] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[06:07:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c9dd:301:29f7:88f5) (Ping timeout: 250 seconds)
[06:08:15] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[06:10:09] *** Joins: gaff (~gaff@49.207.200.248)
[06:17:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[06:17:36] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222)
[06:20:17] *** Joins: unyu (~pyon@user/pyon)
[06:20:28] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:22:33] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[06:23:39] *** Quits: xff0x (~xff0x@2001:1a81:5217:d600:567:b7a:e54:e078) (Ping timeout: 252 seconds)
[06:24:10] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:24:46] *** Quits: kanin (~kanin@112.41.64.39) (Read error: Connection reset by peer)
[06:25:26] *** Joins: xff0x (~xff0x@2001:1a81:5253:2500:d5b4:d592:9ef0:44dd)
[06:33:04] *** Quits: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a) (Quit: Konversation terminated!)
[06:33:36] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 272 seconds)
[06:39:34] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[06:40:02] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[06:40:11] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[06:41:12] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[06:42:46] *** Joins: ttys (~ttys@cpc83645-brig20-2-0-cust528.3-3.cable.virginm.net)
[06:44:36] *** Joins: c209e6dc-4d76-47 (~aditya@c-73-103-92-95.hsd1.in.comcast.net)
[06:44:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[06:44:51] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[06:45:36] *** Quits: c209e6dc-4d76-47 (~aditya@c-73-103-92-95.hsd1.in.comcast.net) (Client Quit)
[06:46:00] *** Quits: ttys (~ttys@cpc83645-brig20-2-0-cust528.3-3.cable.virginm.net) (Client Quit)
[06:51:30] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:51:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:51:31] *** finn_elija is now known as FinnElija
[06:54:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:57:28] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[06:57:44] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[06:57:48] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:58:18] *** Quits: td_ (~td@muedsl-82-207-238-242.citykom.de) (Ping timeout: 252 seconds)
[06:59:15] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[06:59:27] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[07:00:15] *** Joins: td_ (~td@muedsl-82-207-238-135.citykom.de)
[07:01:33] *** Joins: hyiltiz (~quassel@31.220.5.250)
[07:02:21] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:05:15] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Ping timeout: 240 seconds)
[07:05:53] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[07:10:53] *** Quits: gaff (~gaff@49.207.200.248) (Remote host closed the connection)
[07:11:09] *** Joins: gaff (~gaff@49.207.200.248)
[07:14:27] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[07:15:27] *** Joins: deadmarshal (~deadmarsh@95.38.116.130)
[07:18:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:18:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[07:23:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:23:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:23:31] *** Joins: wroathe (~wroathe@user/wroathe)
[07:28:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:30:12] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:3511:c1b2:b4e7:7f1c) (Ping timeout: 240 seconds)
[07:34:43] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[07:34:43] *** Joins: k8yun__ (~k8yun@user/k8yun)
[07:38:12] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[07:40:13] *** Quits: drdo (~drdo@roach0.drdo.eu) (Quit: Ping timeout (120 seconds))
[07:40:29] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[07:40:35] *** Joins: drdo (~drdo@roach0.drdo.eu)
[07:41:41] *** Quits: k8yun__ (~k8yun@user/k8yun) (Quit: Leaving)
[07:42:25] *** Joins: little_mac_ (~little_ma@2601:410:4300:3ce0:74f2:75c0:910a:f39d)
[07:42:42] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:74f2:75c0:910a:f39d) (Read error: Connection reset by peer)
[07:47:03] *** Joins: capo_greco (~textual@60-241-161-167.static.tpgi.com.au)
[07:48:02] *** Quits: capo_greco (~textual@60-241-161-167.static.tpgi.com.au) (Client Quit)
[07:51:33] *** Joins: lavaman (~lavaman@98.38.249.169)
[07:56:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 272 seconds)
[08:16:12] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 272 seconds)
[08:16:23] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[08:17:20] *** Joins: zaquest (~notzaques@5.130.79.72)
[08:18:49] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[08:19:00] *** Quits: deadmarshal (~deadmarsh@95.38.116.130) (Ping timeout: 240 seconds)
[08:21:06] *** Quits: gaff (~gaff@49.207.200.248) (Quit: Bye ...)
[08:22:31] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[08:30:37] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::99e7) (Ping timeout: 240 seconds)
[08:32:21] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 252 seconds)
[08:33:05] *** Quits: otherwise (~otherwise@2601:602:880:90f0:b4d0:57c1:4b9f:3ace) (Remote host closed the connection)
[08:34:15] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Read error: Connection reset by peer)
[08:34:58] *** Joins: Erutuon (~Erutuon@user/erutuon)
[08:44:58] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[08:45:17] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:48:53] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:51:28] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[08:55:31] *** Quits: bitmapper (uid464869@id-464869.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:55:48] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[09:08:03] *** Joins: otherwise (~otherwise@2601:602:880:90f0:f487:90ca:651c:5bea)
[09:11:11] *** Joins: bahamas (~lucian@84.232.140.52)
[09:17:41] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[09:25:48] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[09:29:42] *** Joins: deadmarshal (~deadmarsh@95.38.116.130)
[09:34:27] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[09:34:54] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[09:37:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:39:15] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[09:39:20] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:42:17] *** Quits: gawen (~gawen@user/gawen) (Ping timeout: 240 seconds)
[09:43:09] *** Quits: Hecate (~mariposa@user/hecate) (Ping timeout: 250 seconds)
[09:43:20] *** Quits: drdo (~drdo@roach0.drdo.eu) (Quit: Ping timeout (120 seconds))
[09:44:37] *** Joins: drdo (~drdo@roach0.drdo.eu)
[09:51:24] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 240 seconds)
[10:08:33] *** Joins: thevishy (~Nishant@2405:201:f005:c007:c978:2cb1:53a0:d8f2)
[10:12:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:12:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:12:44] *** Joins: wroathe (~wroathe@user/wroathe)
[10:17:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:24:57] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[10:26:25] *** Joins: coot (~coot@213.134.190.95)
[10:29:50] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 272 seconds)
[10:30:49] *** Joins: rusrushal13 (~rusrushal@103.85.18.34)
[10:34:35] *** Joins: chronon (~chronon@user/chronon)
[10:41:36] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[10:44:57] *** Quits: Megant (megant@user/megant) (Ping timeout: 240 seconds)
[10:53:49] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:54:42] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[10:58:17] *** Quits: kritzefitz (~kritzefit@debian/kritzefitz) (Ping timeout: 256 seconds)
[10:58:48] *** hololeap_ is now known as hololeap
[11:01:40] *** glowcoil_ is now known as glowcoil
[11:07:27] *** Quits: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[11:09:09] *** Joins: fendor (~fendor@91.141.40.92.wireless.dyn.drei.com)
[11:12:00] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:12:45] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[11:12:50] *** Joins: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se)
[11:13:10] *** Joins: finsternis (~X@23.226.237.192)
[11:15:44] *** Joins: Pickchea (~private@user/pickchea)
[11:19:50] *** Joins: Ariakenom (~Ariakenom@2001:9b1:efe:9d00:a132:2afd:4a89:be79)
[11:20:41] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:6a70:b054:9876:b7fc)
[11:22:05] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 256 seconds)
[11:25:17] *** Joins: Ariakenom_ (~Ariakenom@h-82-196-111-63.NA.cust.bahnhof.se)
[11:27:49] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:27:52] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[11:28:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:28:33] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:28:33] *** Joins: wroathe (~wroathe@user/wroathe)
[11:29:07] *** Quits: Ariakenom (~Ariakenom@2001:9b1:efe:9d00:a132:2afd:4a89:be79) (Ping timeout: 250 seconds)
[11:32:03] *** Joins: MajorBiscuit (~MajorBisc@c-001-018-023.client.tudelft.eduvpn.nl)
[11:32:57] *** Joins: michalz (~michalz@185.246.204.73)
[11:33:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[11:38:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:38:13] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[11:38:17] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[11:38:29] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:38:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:38:50] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:38:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:39:13] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:39:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:39:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:39:41] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:39:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:40:05] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:40:15] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:40:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:40:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:40:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:40:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:41:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:41:14] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:41:29] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:41:36] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:41:50] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:41:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:42:08] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[11:42:13] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:42:20] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:42:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:42:41] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:42:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:43:04] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:43:19] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:43:25] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:43:39] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:43:47] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:43:47] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[11:44:01] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:44:09] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:44:11] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:44:23] *** Joins: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[11:44:24] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:44:31] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:44:44] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:44:52] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:45:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:45:14] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:45:28] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:45:36] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:45:42] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:45:50] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:45:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:46:14] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:46:21] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:46:32] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 240 seconds)
[11:46:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:46:43] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:46:59] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:47:06] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:47:21] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:47:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:47:36] *** Quits: xff0x (~xff0x@2001:1a81:5253:2500:d5b4:d592:9ef0:44dd) (Ping timeout: 252 seconds)
[11:47:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:47:50] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:48:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:48:09] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:48:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:48:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:48:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:48:36] *** Joins: xff0x (~xff0x@2001:1a81:5253:2500:44fe:2888:7933:5a26)
[11:48:47] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:48:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:49:09] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:49:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:49:35] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:49:38] *** Quits: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[11:49:42] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:49:56] *** Joins: alp (~alp@user/alp)
[11:49:56] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:50:04] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:50:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:50:27] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:50:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:50:50] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:50:50] *** Joins: ubert (~Thunderbi@p200300ecdf09942d5bc34c7f8597781f.dip0.t-ipconnect.de)
[11:51:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:51:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:51:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:51:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:51:47] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:51:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:52:12] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:52:18] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:52:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:52:41] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 256 seconds)
[11:52:43] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:53:25] *** Joins: tomku (~tomku@user/tomku)
[11:54:17] *** Quits: phma (~phma@host-67-44-209-104.hnremote.net) (Read error: Connection reset by peer)
[11:55:19] *** Joins: phma (~phma@2001:5b0:210d:a1c8:150f:54c0:3978:d9e2)
[11:58:01] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:59:14] *** Joins: wolfshappen (~waff@irc.furworks.de)
[11:59:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:59:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:59:20] *** Joins: wroathe (~wroathe@user/wroathe)
[11:59:52] *** Quits: wolfshappen (~waff@irc.furworks.de) (Client Quit)
[12:01:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:02:30] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:02:34] *** Quits: hugo (znc@verdigris.lysator.liu.se) (Quit: ZNC 1.8.2 - https://znc.in)
[12:02:39] *** Joins: kfj (~kfj@94.198.43.75)
[12:02:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[12:04:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[12:05:43] *** Joins: wolfshappen (~waff@irc.furworks.de)
[12:07:34] *** Joins: cosimone (~user@93-47-231-171.ip115.fastwebnet.it)
[12:08:54] *** Quits: little_mac_ (~little_ma@2601:410:4300:3ce0:74f2:75c0:910a:f39d) (Quit: Leaving)
[12:14:12] *** Quits: ubert (~Thunderbi@p200300ecdf09942d5bc34c7f8597781f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:19:10] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:20:58] *** Joins: acidjnk (~acidjnk@p200300d0c70f8418e9705765d4d48bc6.dip0.t-ipconnect.de)
[12:22:24] *** Joins: hugo (znc@verdigris.lysator.liu.se)
[12:23:05] *** Joins: max22- (~maxime@2a01cb08833598000fe24484831421bf.ipv6.abo.wanadoo.fr)
[12:23:21] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:25:09] *** Quits: otherwise (~otherwise@2601:602:880:90f0:f487:90ca:651c:5bea) ()
[12:27:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[12:29:17] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[12:30:06] *** Quits: carmysilna (~brightly-@2001:470:69fc:105::2190) (Quit: You have been kicked for being idle)
[12:30:08] *** Quits: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11) (Quit: You have been kicked for being idle)
[12:30:28] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:31:41] *** Joins: kuribas (~user@ip-188-118-57-242.reverse.destiny.be)
[12:32:09] *** Joins: ardell (~ardell@user/ardell)
[12:32:33] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[12:37:26] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[12:38:40] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[12:39:00] *** Quits: deadmarshal (~deadmarsh@95.38.116.130) (Ping timeout: 240 seconds)
[12:40:02] *** Joins: deadmarshal (~deadmarsh@95.38.116.130)
[12:41:43] *** Joins: wonko (~wjc@user/wonko)
[12:47:10] *** Joins: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[12:47:44] *** Joins: img (~img@user/img)
[12:48:35] <dminuoso>     do-notation in pattern     Possibly caused by a missing 'do'? 
[12:48:46] <dminuoso> Thanks GHC. Really helpful!
[12:51:57] *** Quits: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[12:52:20] *** Quits: ardell (~ardell@user/ardell) (Ping timeout: 272 seconds)
[12:58:40] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[12:58:48] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:03:00] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[13:03:26] *** Quits: tzh_ (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[13:06:28] *** Joins: ardell (~ardell@user/ardell)
[13:12:21] *** Joins: chele (~chele@user/chele)
[13:15:44] *** Joins: alphabeta (~kilolympu@vpn-fn-230.net.ed.ac.uk)
[13:16:24] *** Quits: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 272 seconds)
[13:16:53] <fendor[m]> Can I add haddock documentation to functions that aren't top-level? Is that just going to be ignored by haddock or does it land in the .hi file?
[13:19:24] *** Quits: td_ (~td@muedsl-82-207-238-135.citykom.de) (Ping timeout: 240 seconds)
[13:20:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[13:22:38] *** Joins: ccntrq (~Thunderbi@2a01:e34:eccb:b060:e6dd:69f1:f693:42d5)
[13:23:22] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 272 seconds)
[13:24:29] <kuribas> fendor[m]: no
[13:24:34] <kuribas> how would you even call them?
[13:24:42] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[13:25:06] <kuribas> haddock is for functions which you can call.
[13:25:08] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[13:25:12] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Remote host closed the connection)
[13:25:30] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[13:25:42] <fendor[m]> I mean, I can call the functions, just not from outside the function context
[13:25:54] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[13:26:12] <kuribas> I mean, haddock is for documenting the module.
[13:26:33] <kuribas> you can just put comments there.
[13:26:36] *** Joins: td_ (~td@muedsl-82-207-238-135.citykom.de)
[13:26:50] <fendor[m]> functions that aren't exported can be documented as well
[13:27:11] <kuribas> not with haddock AFAIK.
[13:27:24] *** Joins: Guest96 (~Guest96@144-124-99-115.pip.aber.ac.uk)
[13:27:42] *** Quits: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Ping timeout: 252 seconds)
[13:27:58] *** Quits: Guest96 (~Guest96@144-124-99-115.pip.aber.ac.uk) (Client Quit)
[13:28:16] <fendor[m]> parsing a module with -haddock includes haddock comments for functions that aren't exported afaict
[13:28:45] <fendor[m]> or should I see haddock-the-executable as something different to ghc -haddock?
[13:31:56] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Remote host closed the connection)
[13:34:15] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[13:34:34] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[13:35:27] *** Joins: jonathanx (~jonathan@h-178-174-176-109.a357.priv.bahnhof.se)
[13:35:34] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[13:40:08] <fendor[m]> haddock itself has the option `ignore-exports` which ignores the export list and generates the documentation for non-exposed functions as well.
[13:42:08] <fendor[m]> I want haddock documentation for inner functions, because it makes it firstly possible to document functions consistently, and it helps you read source code. E.g. when I hover over a private function in haddock (when viewing sources) or hls, I can see the documentation just as usual
[13:43:15] <fendor[m]> "inner functions" meaning functions that are only defined within the scope of a function
[13:44:03] *** Joins: dhil (~dhil@cpc103052-sgyl39-2-0-cust260.18-2.cable.virginm.net)
[13:50:19] *** Joins: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[13:50:33] *** Joins: kritzefitz (~kritzefit@debian/kritzefitz)
[13:51:33] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:52:34] *** Joins: gawen (~gawen@user/gawen)
[13:52:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:52:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:52:52] *** Joins: wroathe (~wroathe@user/wroathe)
[13:53:03] *** Joins: Vajb (~Vajb@85-76-72-4-nat.elisa-mobile.fi)
[13:53:46] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[13:53:47] *** Quits: Vajb (~Vajb@85-76-72-4-nat.elisa-mobile.fi) (Read error: Connection reset by peer)
[13:55:00] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[13:55:05] *** Quits: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[13:57:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[13:58:03] <sshine> fendor[m], that makes a lot of sense; I can imagine how documentation for a function might look like when it also includes stuff for inner functions; then again, I might also find that a little disingenuous, since I'd get the expectation that that function is something I can call, when it's not. :)
[13:58:46] <geekosaur> my possibly incorrect understanding is that this is still in development, including "fat hi files"
[13:58:49] <sshine> fendor[m], I try to make inner functions mostly do wrapping and unwrapping, so if it's something that might have general value, at least I put it at the top level but don't export it.
[13:59:13] <geekosaur> intended specifically to provide extra information for IDEs
[13:59:24] <fendor[m]> I didnt mean that haddock's html page includes the documentation for such inner functions, I just want other tooling to be able to present me the documentation when desired
[13:59:30] <geekosaur> it may work better with later ghc versions
[13:59:39] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:00:06] <sshine> fendor[m], sure.
[14:00:23] *** Quits: gawen (~gawen@user/gawen) (Quit: cya)
[14:01:18] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[14:02:14] *** Parts: kfj (~kfj@94.198.43.75) ()
[14:02:42] <fendor[m]> I think haddock doesn't parse haddock docs for anything else than top-level functions right now. Not sure whether later ghc versions would change that
[14:03:10] <geekosaur> given that it would be going into .hi or .hie files, it'd be ghc
[14:03:29] <geekosaur> ghc and haddock are already pretty tightly tied together
[14:04:50] <fendor[m]> true, for the information to be available in haddock's source browsing, it needs to be in .hi files
[14:05:05] <geekosaur> I *think* ghc does the parsing and haddock the formatting; in this case it'd be the IDE that pulled out the part it wanted and formatted it
[14:05:18] <geekosaur> (e.g. HLS)
[14:05:59] <fendor[m]> that makes sense, going to check HLS code for details
[14:09:31] *** Joins: gawen (~gawen@user/gawen)
[14:12:27] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:6a70:b054:9876:b7fc) (Quit: WeeChat 2.8)
[14:13:00] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[14:14:58] *** Joins: bahamas (~lucian@84.232.140.52)
[14:15:04] <dminuoso> How does current directory from `directory` interact across multiple threads?
[14:17:42] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:18:50] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[14:24:21] *** Quits: michalz (~michalz@185.246.204.73) (Ping timeout: 252 seconds)
[14:26:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:29:08] <geekosaur> don't understand the question if it'snot answered by "In a multithreaded program, the current working directory is a global state shared among all threads of the process. Therefore, when performing filesystem operations from multiple threads, it is highly recommended to use absolute rather than relative paths (see: makeAbsolute)."
[14:30:00] <geekosaur> current directory is an attribute of a process, not a thread
[14:32:03] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:32] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:38:43] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:40:16] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222) (Remote host closed the connection)
[14:44:07] *** Quits: acidjnk (~acidjnk@p200300d0c70f8418e9705765d4d48bc6.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:45:57] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[14:47:19] *** Joins: fendor_ (~fendor@178.115.59.89.wireless.dyn.drei.com)
[14:48:18] *** Joins: michalz (~michalz@185.246.204.89)
[14:49:48] *** Quits: fendor (~fendor@91.141.40.92.wireless.dyn.drei.com) (Ping timeout: 240 seconds)
[14:55:45] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[14:57:44] *** Joins: xkuru (~xkuru@user/xkuru)
[14:59:00] *** Quits: td_ (~td@muedsl-82-207-238-135.citykom.de) (Ping timeout: 272 seconds)
[14:59:30] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[15:00:14] *** Joins: td_ (~td@muedsl-82-207-238-135.citykom.de)
[15:01:15] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[15:01:20] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Remote host closed the connection)
[15:01:27] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[15:01:36] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[15:02:20] *** Joins: bahamas (~lucian@84.232.140.52)
[15:04:21] *** Joins: xkuru (~xkuru@user/xkuru)
[15:04:56] *** Quits: bjobjo (~bjobjo@user/bjobjo) (Ping timeout: 250 seconds)
[15:05:12] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[15:06:23] *** Quits: td_ (~td@muedsl-82-207-238-135.citykom.de) (Quit: waking up from the american dream ...)
[15:06:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[15:07:31] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Ping timeout: 250 seconds)
[15:08:21] *** Quits: max22- (~maxime@2a01cb08833598000fe24484831421bf.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[15:11:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[15:12:11] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[15:12:43] *** Quits: kritzefitz (~kritzefit@debian/kritzefitz) (Ping timeout: 256 seconds)
[15:13:35] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[15:17:01] *** Joins: akegalj (~akegalj@93-138-38-201.adsl.net.t-com.hr)
[15:18:10] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:de86:d03c:7719:1796)
[15:19:19] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[15:20:57] *** Quits: michalz (~michalz@185.246.204.89) (Ping timeout: 250 seconds)
[15:24:40] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[15:27:36] *** Quits: MajorBiscuit (~MajorBisc@c-001-018-023.client.tudelft.eduvpn.nl) (Ping timeout: 252 seconds)
[15:31:43] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:31:44] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:32:33] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[15:32:50] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[15:34:28] *** Quits: foul_owl (~kerry@23.82.193.104) (Ping timeout: 272 seconds)
[15:34:29] *** Joins: Pickchea (~private@user/pickchea)
[15:36:36] *** Quits: jlamothe (~jlamothe@198.251.61.229) (Ping timeout: 240 seconds)
[15:39:14] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:f688:b78:9b5f:f629)
[15:40:40] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222)
[15:44:36] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[15:44:50] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:45:00] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222) (Ping timeout: 240 seconds)
[15:48:05] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-023.client.tudelft.eduvpn.nl)
[15:50:03] *** Joins: foul_owl (~kerry@23.82.193.88)
[15:53:03] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:54:06] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[15:54:45] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 272 seconds)
[15:55:57] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[15:55:57] *** Joins: td_ (~td@muedsl-82-207-238-135.citykom.de)
[15:56:18] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[15:56:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:58:21] *** Quits: bbear_ (~znc@21212.s.t4vps.eu) (Ping timeout: 256 seconds)
[15:58:26] *** Joins: michalz (~michalz@185.246.204.57)
[15:58:35] *** Joins: bbear (~znc@21212.s.t4vps.eu)
[16:00:49] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Ping timeout: 250 seconds)
[16:01:01] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[16:02:13] *** Joins: Hecate_ (~mariposa@user/hecate)
[16:02:23] *** Hecate_ is now known as Hecate
[16:03:20] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:04:35] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[16:05:09] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Ping timeout: 250 seconds)
[16:06:31] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[16:09:32] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[16:10:33] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:10:57] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[16:11:45] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[16:11:45] <romesrf> hey everyone, what's your preferred way of writing something like this run = (>>= putStrLn) . runX
[16:12:18] <romesrf> I don't quite love this one
[16:12:30] <romesrf> (>>= g) . f
[16:12:48] <merijn> romesrf: fish operator?
[16:12:52] <merijn> :t (>=>)
[16:12:53] <lambdabot> Monad m => (a -> m b) -> (b -> m c) -> a -> m c
[16:13:10] <merijn> Looks like your example is just "runX >=> putStrLn"
[16:13:21] <romesrf> ah!!!
[16:13:23] <romesrf> perfect!
[16:14:11] <romesrf> that's exactly it
[16:15:35] <romesrf> ty
[16:16:29] *** Joins: bahamas (~lucian@84.232.140.52)
[16:16:50] <merijn> Entirely unrelatedly. It looks like for the first time since 2020 the NL-FP day is back on \o/
[16:18:48] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[16:20:17] *** Joins: cfricke (~cfricke@user/cfricke)
[16:20:19] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Ping timeout: 250 seconds)
[16:22:25] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[16:22:36] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 272 seconds)
[16:23:17] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[16:23:22] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[16:24:40] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[16:25:54] *** Joins: bahamas (~lucian@84.232.140.52)
[16:27:41] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:28:25] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[16:30:12] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[16:39:59] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:40:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[16:40:49] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Read error: Connection reset by peer)
[16:40:58] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[16:42:39] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[16:45:00] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 240 seconds)
[16:45:23] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Ping timeout: 256 seconds)
[16:46:05] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[16:48:05] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[16:48:13] *** Joins: kritzefitz (~kritzefit@debian/kritzefitz)
[16:55:50] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[16:59:18] *** Joins: Pickchea (~private@user/pickchea)
[16:59:20] *** Quits: alphabeta (~kilolympu@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 272 seconds)
[17:00:35] *** Joins: lavaman (~lavaman@98.38.249.169)
[17:02:49] *** Joins: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk)
[17:05:40] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 272 seconds)
[17:07:00] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Ping timeout: 240 seconds)
[17:09:07] *** Joins: max22- (~maxime@2a01cb08833598003c62700c4284530c.ipv6.abo.wanadoo.fr)
[17:14:55] *** Joins: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com)
[17:15:47] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:16:41] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[17:17:24] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[17:22:17] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:24:25] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[17:28:02] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:32:12] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:40:55] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 250 seconds)
[17:41:07] <dminuoso> merijn: Mmm, where is the sign up link?
[17:41:29] *** Joins: jakalx (~jakalx@base.jakalx.net)
[17:42:41] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222)
[17:42:59] <merijn> https://wouter-swierstra.github.io/fp-dag/
[17:45:48] <dminuoso> Ah nice, might just do that. Getting to Utrecht is quite doable. :)
[17:46:15] *** Joins: __monty__ (~toonn@user/toonn)
[17:46:39] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[17:47:00] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222) (Ping timeout: 240 seconds)
[17:47:04] *** Joins: simendsjo (~user@84.211.91.241)
[17:47:39] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:47:47] *** Joins: jgeerds (~jgeerds@55d4b9df.access.ecotel.net)
[17:47:50] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Remote host closed the connection)
[17:52:34] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[17:52:58] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[17:53:17] *** Joins: bahamas (~lucian@84.232.140.52)
[17:57:48] <romesrf> dminuoso: I'm excited for the year to come, i'll be joining a lot of those (as many as i can :) for the first time
[17:58:00] <romesrf> I'm pretty set onn going to ZuriHac
[17:58:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:58:33] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:58:33] *** Joins: wroathe (~wroathe@user/wroathe)
[17:58:34] <romesrf> i'll be studying in Germany by that time, so it'll be really neat to go to those meetups
[17:59:19] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-023.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[17:59:33] <dminuoso> Yeah, ZuriHac is already on my timetable :)
[17:59:44] <merijn> NL-FP is nice and accessible :)
[18:00:47] <maerwald> I missed NL-FP in 2020
[18:01:15] <merijn> :O
[18:01:30] <merijn> You missed Athas talking about Futhark, then :p
[18:02:03] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[18:03:20] <romesrf> what's NL-FP?
[18:03:35] *** Quits: rusrushal13 (~rusrushal@103.85.18.34) (Ping timeout: 256 seconds)
[18:03:41] <romesrf> i'm guessing netherlands fp but :)
[18:03:48] <romesrf> links are welcome
[18:03:59] *** Joins: alx741 (~alx741@157.100.197.240)
[18:05:01] <geekosaur> merijn gave one earlier, I think
[18:05:34] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[18:07:37] *** Joins: maroloccio (~marolocci@pousada3ja.mma.com.br)
[18:08:56] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[18:09:12] <merijn> romesrf: https://wouter-swierstra.github.io/fp-dag/
[18:09:18] *** Quits: jgeerds (~jgeerds@55d4b9df.access.ecotel.net) (Ping timeout: 252 seconds)
[18:09:27] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[18:09:46] *** Joins: __monty__ (~toonn@user/toonn)
[18:10:05] <merijn> romesrf: It's essentially a kinda in between "academic" conference/workshop and meetup :p
[18:10:37] *** Quits: __monty__ (~toonn@user/toonn) (Client Quit)
[18:10:54] *** Joins: __monty__ (~toonn@user/toonn)
[18:11:06] <merijn> Everyone remotely involved with/interested in FP research in NL will be there. But also lots of hobbyists and people from industry
[18:11:30] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[18:12:05] <Franciman> i can't wait to experiment with polarisation
[18:12:10] <Franciman> i expect to get very high gains
[18:12:18] <Franciman> in predicatability
[18:12:33] <Franciman> while retanining same or better performance that haskell
[18:12:50] <Franciman> predictability*
[18:13:33] *** Joins: jakalx (~jakalx@base.jakalx.net)
[18:14:03] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 256 seconds)
[18:14:16] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[18:16:21] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:17:12] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[18:17:21] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[18:17:31] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:19:20] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[18:22:49] <jackson99> is it possible to catch Ctrl+C exception portably?
[18:23:00] <merijn> jackson99: "haha, no"
[18:23:13] <dminuoso> What do you mean by "Ctrl-C exception" and "portably" any way?
[18:23:26] *** Joins: alx741 (~alx741@157.100.197.240)
[18:23:29] <merijn> If you mean "unix only" then it becomes merely "well, I hope you enjoy suffering!"
[18:23:32] <jackson99> ctrl+c crashes program, I want to catch that and perform some cleanup before quitting
[18:23:56] <dminuoso> Ctrl-C on some shells causes SIGINT to be sent to the running program
[18:24:08] <merijn> ctrl-c just triggers an IO exception. If you use bracket/finally you should be able to clean up that way
[18:24:12] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Ping timeout: 272 seconds)
[18:24:13] <merijn> Or rather
[18:24:15] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[18:24:20] <merijn> SIGINT triggers an IO exception
[18:24:41] <jackson99> and that should work on all OSes?
[18:24:44] <dminuoso> No.
[18:24:57] <dminuoso> This behavior is Linux specific. 
[18:25:13] <dminuoso> Windows doesn't even have a notion of POSIX signals
[18:25:14] <[exa]> macs don't have SIGINT?
[18:25:31] <merijn> [exa]: To be fair, I said unix :p
[18:25:36] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[18:25:41] <dminuoso> [exa]: I wouldnt know, to be honest. :)
[18:25:43] <merijn> Anyway, GHC's signal handling is still kinda of a mess
[18:25:58] <merijn> So, whether "it works" on linux is debatable as well :p
[18:26:23] <dminuoso> jackson99: That being said, if you're fine with "it will probably work except in edge cases", https://hackage.haskell.org/package/unix-2.7.2.2/docs/System-Posix-Signals.html
[18:26:24] <dminuoso> Has you covered
[18:26:33] <dminuoso> installHandler in particular
[18:27:11] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[18:27:23] <merijn> In my professional opinion anyone attempting to do signal handling via the unix package is already hosed :p
[18:27:28] <dminuoso> It's good enough for the vast majority of use cases, but like merijn points out GHC has some serious deficiencies in the signal handling.
[18:27:35] <dminuoso> Nah.
[18:27:43] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:27:46] <dminuoso> What other options do you propose?
[18:29:06] <jackson99> I am interested in doing this portably, or at least on linux and windows. it doesn't seem hard to do this on windows using winapi, but I was hoping this can be done in pure haskell
[18:29:15] <jackson99> I guess not
[18:29:58] <dminuoso> jackson99: The interface and semantics differ.
[18:30:01] <geekosaur> there are lots of things you can get maybe 70% if you try to do them portably. more than 70% is unlikely. ctrl-c is not 70%
[18:30:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[18:31:15] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 240 seconds)
[18:31:34] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[18:32:21] <dminuoso> jackson99: They differ so wildly, you will find it absurdly complicated to build some common abstraction. What you'd rather do, is simply CPP your way out of this.
[18:32:31] <[exa]> +1 for #ifdef
[18:32:57] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[18:33:04] <[exa]> I'd expect that linux, macs and bsds will just work with `unix` unless you do something very complicated
[18:33:20] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[18:33:21] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:33:30] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 252 seconds)
[18:33:31] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:33:34] <[exa]> on windows, copy the first cheap trick from stackoverflow and prepare to replace it as needed. :D
[18:33:48] <dminuoso> We use a simple SIGINT handler in all our servers just do have some better control over cleanup and output when people run and interrupt servers from the command line..
[18:33:55] <geekosaur> SetCtrlCHandler isn't too bad
[18:33:55] <dminuoso> Works just fine for us.
[18:34:17] <geekosaur> it just doesn;t behave anything like SIGINT
[18:34:20] *** Quits: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com) (Remote host closed the connection)
[18:34:21] <merijn> [exa]: For some value of work :p
[18:34:42] *** Joins: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com)
[18:35:29] <[exa]> it's unix, it's meant to be 95%
[18:36:24] *** Quits: hays (rootvegeta@fsf/member/hays) ()
[18:36:37] <merijn> I give signal handling a 70-80% of working at best
[18:37:02] <merijn> Still better than the "fork" in unix, which I give approximately 0.0005% chance of working correctly
[18:37:09] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[18:37:16] <merijn> And a solid 40-50% chance of ruining your day at some point in the near future
[18:37:39] <dminuoso> I think you're overexaggerating a lot.
[18:37:51] <merijn> For signal handling, maybe
[18:38:06] <[exa]> I agree on fork() tho. :D
[18:38:09] <geekosaur> fork'sbasically made of corner cases
[18:38:19] <merijn> unix' fork is utterly cursed and I'm fairly confident it simply *cannot* be used in a sane way
[18:38:35] <dminuoso> merijn: Do you have any writeup why that is the case?
[18:38:38] <merijn> Honestly, unix' fork is literally worse than accuredUnutterablePerformIO
[18:38:40] <dminuoso> Ive never felt the urge to use `fork`, so..
[18:39:07] <[exa]> merijn: you first need to reach the zen and let go of all programs of more than 100 lines of k&r C. Then fork() works
[18:39:09] <merijn> dminuoso: I mean, let's start with point one: it use fork() which is already literally impossible to use correctly in C unless you program is single-threaded
[18:39:30] <geekosaur> dminuoso, for one, there is no way at all to deal with threads. for another, you can kiss your critical regions goodbye
[18:39:37] <merijn> dminuoso: unix' then layers a bunch of *super* hairy GHC RTS issues on top of fork()
[18:40:05] <geekosaur> you can't clean up any "locked" state
[18:40:23] *** Joins: hays (rootvegeta@fsf/member/hays)
[18:40:23] <merijn> dminuoso: Essentially, fork() only copies 1 random threat from the GHC runtime into a new process with 0 controls on what locks/etc. are active in the runtime
[18:40:26] <geekosaur> you can't even know about any locked state
[18:40:34] <merijn> dminuoso: Then pretends you can keep running Haskell code
[18:40:48] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[18:41:08] <merijn> dminuoso: The only thing you can safely do after fork() is: exec() (well, and using any functions that are "async signal safe" (i.e. basically none))
[18:41:36] <merijn> dminuoso: Like, what even happens to the IO manager when you fork?
[18:41:46] <merijn> I don't even wanna think about horrors like that
[18:42:23] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:f688:b78:9b5f:f629) (Quit: WeeChat 2.8)
[18:42:25] <geekosaur> I thought they shut it down during the fork and restarted afterward
[18:42:32] <geekosaur> again only reliable if singlethreaded
[18:42:42] <dminuoso> By single threaded do you mean haskell threads?
[18:42:48] <merijn> dminuoso: OS threads
[18:42:50] <geekosaur> don't even dream of forking if -threaded
[18:42:59] <merijn> dminuoso: Using fork() in any application with more than 1 OS thread is folly
[18:43:14] <dminuoso> merijn: I dont have any POSIX knowledge of fork at all. so..
[18:43:16] <dminuoso> Mmm
[18:43:29] <geekosaur> apache went through this years ago, forks first *then* threads or everything goes wrong
[18:43:32] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[18:43:38] <merijn> dminuoso: fork() has been known to be dangerous and (essentially) deprecated for over 2 decades
[18:43:49] <merijn> dminuoso: The "proper" posix way to create a new process is posix_spawn()
[18:44:48] *** Joins: alx741 (~alx741@181.199.42.143)
[18:45:05] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:45:16] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:46:16] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:47:29] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[18:48:37] *** Quits: marquis_andras (~marquis_a@124.170.163.166) (Ping timeout: 256 seconds)
[18:49:31] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[18:49:53] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[18:51:06] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:52:14] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[18:54:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:56:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[18:56:51] *** Quits: hays (rootvegeta@fsf/member/hays) ()
[18:58:12] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 240 seconds)
[18:58:15] <xdej> merijn and [exa] thanks for the comments about fork()
[18:58:19] *** Joins: hays (rootvegeta@fsf/member/hays)
[18:59:27] *** Joins: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[19:01:28] <merijn> xdej: fork() is best though of as an Eldritch horror from a Lovecraft novel. Using it will slowly chip away at your sanity by causing all sorts of freaky, intermittent, spooky-action-at-a-distance style weirdness you can't figure out :p
[19:01:43] *** Joins: fef (~thedawn@user/thedawn)
[19:03:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:04:12] *** Quits: cfricke (~cfricke@user/cfricke) (Ping timeout: 240 seconds)
[19:04:13] *** Quits: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[19:06:12] *** Joins: alx741 (~alx741@157.100.197.240)
[19:06:12] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 240 seconds)
[19:08:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:08:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:08:52] *** Joins: wroathe (~wroathe@user/wroathe)
[19:09:35] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 240 seconds)
[19:10:04] <jackson99> the joy using FFI: it worked! 10 seconds later.. internal error: st00:00:03.0957 64_unknown_mingw32)0.2 for x86_00:00:03.0976 ghc/reportabugbug:  http://www.haskell.org/00:00:03.1016
[19:10:22] *** Joins: marquis_andras (~marquis_a@124.170.160.147)
[19:10:30] <[exa]> lol what do you FFI?
[19:10:49] <jackson99> SetConsoleCtrlHandler 
[19:11:32] *** Quits: mbuf (~Shakthi@122.162.135.157) (Quit: Leaving)
[19:11:50] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[19:12:19] <[exa]> oh f
[19:12:33] <[exa]> rule of sane programming in windows environment: never touch WINAPI
[19:13:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:13:35] <jackson99> I probably did something wrong. it has been years since I used C functions that take a function pointer in haskell
[19:13:47] <[exa]> if you want a reasonable non-intrusive way, you can FFI some calls from `conio.h` to catch escape, which windows people will use more than ctrl+c anyway
[19:14:34] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:15:37] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:17:03] <[exa]> also there's some way to disable ctrl+c from console afaik (I'm not going to touch MSDN today tho)
[19:18:36] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[19:20:35] *** Quits: polyphem (~rod@2a02:810d:840:8754:448e:47ff:4575:7cfb) (Ping timeout: 250 seconds)
[19:20:39] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[19:20:39] *** Joins: polyphem_ (~rod@2a02:810d:840:8754:22de:a5de:2070:f535)
[19:21:27] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[19:21:46] *** Joins: hueso (~root@user/hueso)
[19:22:45] *** Joins: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net)
[19:24:43] *** Quits: hueso (~root@user/hueso) (Client Quit)
[19:26:50] *** Joins: shryke (~shryke@91.103.43.254)
[19:28:50] *** Quits: thevishy (~Nishant@2405:201:f005:c007:c978:2cb1:53a0:d8f2) (Quit: Leaving)
[19:30:06] *** Quits: fcortesi (~fcortesi@2001:470:69fc:105::f3a9) (Quit: You have been kicked for being idle)
[19:31:25] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[19:31:27] *** Joins: alx741 (~alx741@181.199.42.143)
[19:33:52] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[19:36:01] *** Joins: Midjak (~Midjak@91-169-30-149.subs.proxad.net)
[19:36:21] *** Joins: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[19:36:32] <jackson99> here's the code if I'm doing something obviously wrong. https://paste.tomsmeding.com/u32XV1vO
[19:37:03] <jackson99> I am getting these warnings when compiling, not sure if that is relevant.  * the 'stdcall' calling convention is unsupported on this platform, treating as ccall
[19:37:53] <merijn> Weird, are you using WSL or something?
[19:38:00] <merijn> Why would it report stdcall unsupported?
[19:38:26] <jackson99> I am not using WSL. and I don't know
[19:38:35] <jackson99> crash happens when I press C-c btw
[19:39:01] <merijn> Consider using CApiFFI and see if that works?
[19:39:37] *** Quits: akegalj (~akegalj@93-138-38-201.adsl.net.t-com.hr) (Ping timeout: 256 seconds)
[19:40:02] <ski> are you sure you should free the `FunPtr (...)', directly after setting the handler ?
[19:40:19] <jackson99> I am not!
[19:40:33] <jackson99> thinking about it, I probably shouldn't free it at all
[19:41:12] <jackson99> since SetConsoleCtrlHandler  has to store function pointer to be able to call it
[19:42:16] <jackson99> that was it.. what a silly mistake
[19:42:21] <geekosaur> that was my question after looking it over
[19:43:57] * [exa] wonders about what happens after the 3168.89 years of threadDelay
[19:44:25] <jackson99> works without issues now, thanks ski
[19:44:27] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222)
[19:46:12] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:46:29] <ski> np
[19:46:30] *** Joins: akegalj (~akegalj@93-138-38-201.adsl.net.t-com.hr)
[19:47:45] <ski> (i guess you could perhaps free in the handler, maybe)
[19:48:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222) (Ping timeout: 240 seconds)
[19:50:17] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Read error: Connection reset by peer)
[19:50:34] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[19:50:49] *** Joins: alx741 (~alx741@157.100.197.240)
[19:50:56] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[19:51:36] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:53:52] <jackson99> second argument of SetConsoleCtrlHandler controlers whether handler is added or removed. not sure how one would expose that interface in haskell, since functions don't implement Eq? have it accept FuncPtr instead of haskell function?
[19:53:58] <jackson99> controls*
[19:54:18] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:54:34] <[exa]> added or _replaced_, not removed
[19:56:39] *** Joins: coot (~coot@213.134.190.95)
[19:59:04] *** Joins: notzmv (~zmv@user/notzmv)
[20:00:35] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[20:01:48] *** Quits: EvanR (~EvanR@user/evanr) (Ping timeout: 240 seconds)
[20:03:18] <jackson99> If this parameter is TRUE, the handler is added; if it is FALSE, the handler is removed.
[20:04:37] <ski> what's the returned `BOOL' ?
[20:05:00] <jackson99> "If the function succeeds, the return value is nonzero.  If the function fails, the return value is zero. To get extended error information, call GetLastError."
[20:05:07] <jackson99> oerhaos I should just throw IO exception there
[20:05:10] <jackson99> perhaps*
[20:05:36] <ski> perhaps you could make your wrapper return the `FunPtr (...)'
[20:07:04] *** Joins: hud (~hud@uwyo-129-72-161-67.uwyo.edu)
[20:08:41] <hud> hi all, does anyone have a good primer for creating docs using haddock?
[20:08:41] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[20:09:24] *** Quits: deadmarshal (~deadmarsh@95.38.116.130) (Ping timeout: 240 seconds)
[20:10:12] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[20:10:46] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[20:11:04] *** Joins: alx741 (~alx741@181.199.42.143)
[20:11:49] *** Joins: jlamothe (~jlamothe@198.251.61.229)
[20:14:40] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[20:15:07] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[20:15:36] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Quit: Leaving)
[20:16:02] *** Quits: jlamothe (~jlamothe@198.251.61.229) (Client Quit)
[20:16:47] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[20:18:06] <jackson99> ski, what can I do with it though? it is not safe to free it, as handler can be called at any point during the duration of the program
[20:19:00] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:19:01] *** Joins: jakalx (~jakalx@base.jakalx.net)
[20:19:10] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[20:20:05] <ski> i was thinking you could pass it to `SetConsoleCtrlHandler' again, if you wanted to remove it
[20:20:05] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[20:20:35] <sm> hud: haddock's manual ?
[20:21:24] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 240 seconds)
[20:30:46] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:32:27] *** Joins: alx741 (~alx741@181.199.42.143)
[20:34:02] *** Quits: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[20:34:18] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:34:18] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[20:34:57] *** Joins: alx741 (~alx741@181.199.42.143)
[20:36:06] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[20:41:32] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[20:42:17] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[20:43:11] *** Quits: tomsmeding (~tomsmedin@tomsmeding.com) (Quit: ZNC 1.8.2 - https://znc.in)
[20:44:16] <jackson99> what do you think about this interface? https://paste.tomsmeding.com/qK1OZchC
[20:45:46] *** Joins: tomsmeding (~tomsmedin@2a01:4f8:c0c:5e5e::2)
[20:46:19] <geekosaur> strikes me as potentially error-prone; I'd make it more of a bracket-style construct withConsoleCtrlHandler
[20:46:57] *** Joins: jlamothe (~jlamothe@198.251.61.229)
[20:47:29] *** Quits: fendor_ (~fendor@178.115.59.89.wireless.dyn.drei.com) (Remote host closed the connection)
[20:48:31] <akegalj> why is "> length (1,2) == 1" ? 
[20:49:01] <ski> @type length
[20:49:02] <lambdabot> Foldable t => t a -> Int
[20:49:52] <geekosaur> that is a question some of us have been asking ever since someone got the odd idea of nmaking tuples Foldable
[20:49:54] <ski> there is an instance `Foldable (a,)'. this treats a value of type `(a,b)' as a collection of values of type `b'. seen as such a collection, it contains exactly one `b'
[20:49:56] <Hecate> akegalj: you're using a method of the `Foldable` interface on the 2-tuple type, I'd encourage you to see how Foldable is implemented for the 2-tuple
[20:49:58] <geekosaur> since you can't fold across their contents
[20:50:52] <akegalj> thanks all
[20:51:02] *** Quits: jonathanx (~jonathan@h-178-174-176-109.a357.priv.bahnhof.se) (Remote host closed the connection)
[20:51:08] <akegalj> is it useful to have Foldable defined for tuple ?
[20:51:15] <Hecate> https://hackage.haskell.org/package/base-4.16.0.0/docs/src/Data.Foldable.html#line-763 akegalj 
[20:51:15] <dolio> Yes.
[20:51:21] <Hecate> yes it's always useful
[20:51:23] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[20:51:26] <Hecate> just that it does something
[20:51:29] <Hecate> specific
[20:51:31] *** Joins: wonko (~wjc@user/wonko)
[20:51:41] <Hecate> and if you want another thing, use another interface, like Bifunctor :)
[20:51:49] *** Joins: Guest87 (~Guest87@144-124-24-105.pip.aber.ac.uk)
[20:51:53] *** Quits: wonko (~wjc@user/wonko) (Remote host closed the connection)
[20:51:59] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[20:52:47] *** Quits: Guest87 (~Guest87@144-124-24-105.pip.aber.ac.uk) (Client Quit)
[20:53:19] <akegalj> thanks
[20:55:33] *** Joins: wonko (~wjc@user/wonko)
[20:55:43] *** Quits: wonko (~wjc@user/wonko) (Remote host closed the connection)
[20:57:23] *** Quits: tomsmeding (~tomsmedin@2a01:4f8:c0c:5e5e::2) (Quit: ZNC 1.8.2 - https://znc.in)
[20:58:02] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:58:24] *** Joins: alx741 (~alx741@157.100.197.240)
[20:58:35] *** Joins: tomsmeding (~tomsmedin@static.21.109.88.23.clients.your-server.de)
[20:58:56] *** Joins: wonko (~wjc@user/wonko)
[21:00:19] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:01:09] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:01:35] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[21:05:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 272 seconds)
[21:05:23] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222)
[21:08:34] *** Joins: wonko- (~wjc@user/wonko)
[21:08:52] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 272 seconds)
[21:09:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:09:25] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[21:09:40] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:10:02] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[21:10:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:11:17] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[21:11:31] *** Quits: kuribas (~user@ip-188-118-57-242.reverse.destiny.be) (Remote host closed the connection)
[21:14:33] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 250 seconds)
[21:17:30] *** Joins: alx741 (~alx741@181.199.42.143)
[21:18:50] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[21:19:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Remote host closed the connection)
[21:20:32] *** Joins: Akiva (~Akiva@user/Akiva)
[21:20:40] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[21:20:56] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[21:22:09] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[21:25:23] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[21:25:53] *** Joins: econo (uid147250@user/econo)
[21:26:06] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[21:26:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[21:28:26] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:30:13] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:de86:d03c:7719:1796) (Remote host closed the connection)
[21:32:13] *** Joins: malc (~malc@2a00:1370:8180:aa79:1516:c12d:fb90:440e)
[21:35:52] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[21:36:17] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[21:40:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[21:42:46] *** Joins: alx741 (~alx741@181.199.42.143)
[21:46:39] *** Joins: deadmarshal (~deadmarsh@95.38.116.130)
[21:46:47] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[21:47:07] *** Quits: dcoutts (~duncan@host109-149-1-225.range109-149.btcentralplus.com) (Ping timeout: 256 seconds)
[21:48:11] *** Joins: zebrag (~chris@user/zebrag)
[21:48:27] *** Joins: Lobux (~Lobux@nat.ds14.agh.edu.pl)
[21:48:34] *** Quits: mncheck (~mncheck@193.224.205.254) (Read error: Connection reset by peer)
[21:50:24] <Lobux> hi! just have a quick questions - does the network package support timeouts? (for example for the accept function or recv)
[21:51:33] *** Quits: maroloccio (~marolocci@pousada3ja.mma.com.br) (Quit: WeeChat 3.0)
[21:52:16] <geekosaur> not directly. System.Timeout may work with it.but why would you use a timeout instead of a thread?
[21:52:20] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222) (Remote host closed the connection)
[21:52:30] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[21:52:48] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[21:53:31] <hololeap> @hackage connections -- Lobux, you might want to have a look at this package instead. it's higher-level
[21:53:31] <lambdabot> https://hackage.haskell.org/package/connections -- Lobux, you might want to have a look at this package instead. it's higher-level
[21:53:57] *** Joins: EvanR (~EvanR@user/evanr)
[21:54:18] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[21:55:33] <monochrom> To a large extent I wouldn't care about timing out accept, even in C.
[21:56:24] <monochrom> I guess IRC DCC and FTP are exceptions.
[21:56:53] <EvanR> forkIO or async thread doing the accept
[21:57:04] <EvanR> then simply kill it or not
[21:58:14] <Lobux> EvanR thanks! didn't think about killing (had an loop idea in mind with some messaging through mvar)
[21:58:14] <monochrom> Yeah. The timeout package packages that idiom.
[21:58:43] <EvanR> oh, is System.Timeout no longer in base
[21:58:44] <monochrom> There are a few more timing-out packages on hackage.
[21:59:00] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[21:59:00] *** Quits: hud (~hud@uwyo-129-72-161-67.uwyo.edu) (Quit: Client closed)
[21:59:13] <monochrom> Ooops, System.Timeout is in base, no need for another package.
[22:00:09] *** Quits: EvanR (~EvanR@user/evanr) (Quit: Leaving)
[22:01:09] *** Joins: EvanR (~EvanR@user/evanr)
[22:02:30] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[22:04:10] *** Joins: alx741 (~alx741@181.199.42.143)
[22:04:15] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[22:04:58] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[22:05:35] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[22:09:57] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[22:10:38] *** Joins: alx741 (~alx741@181.199.42.143)
[22:12:08] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:12:47] *** Quits: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net) (Remote host closed the connection)
[22:15:22] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[22:16:21] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222)
[22:18:06] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[22:19:38] <energizer> how come * doesn't do cartesian product on collections like List and Set?
[22:20:40] <EvanR> type mismatch?
[22:20:44] <Rembane> energizer: Because lists and sets aren't numbers. 
[22:20:57] <EvanR> * :: a -> a -> a
[22:21:15] <EvanR> x :: f a -> f a -> f (a,a)
[22:21:35] <EvanR> er
[22:21:39] <EvanR> x :: f a -> f b -> f (a,b)
[22:23:27] <energizer> ok
[22:24:19] *** Joins: slack1256 (~slack1256@186.11.99.12)
[22:24:40] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:68e2:4c30:8ca1:db3)
[22:24:54] <Rembane> energizer: If you're in a festive mood, you could implement the Num typeclass for lists. 
[22:25:14] <ski> > liftA2 (,) "abc" [0,1]
[22:25:15] <lambdabot>  [('a',0),('a',1),('b',0),('b',1),('c',0),('c',1)]
[22:25:48] <tomsmeding> @let (×) = liftA2 (,)
[22:25:49] <lambdabot>  Defined.
[22:25:57] <tomsmeding> > "abc" × [0,1]
[22:25:59] <lambdabot>  [('a',0),('a',1),('b',0),('b',1),('c',0),('c',1)]
[22:27:03] <tomsmeding> (and if you feel that's not the right definition: feel free to define ✕ and ✖ alongside)
[22:28:00] <alexfmpe[m]> I thought ghc 9.2 with Impredicative types was meant to make polymorphic types first-class ? this doesn't seem to work
[22:28:00] <alexfmpe[m]> type family Meh a :: *
[22:28:00] <alexfmpe[m]> type instance Meh () = forall x. [x]
[22:28:00] <alexfmpe[m]>     • Illegal polymorphic type: forall x. [x]
[22:28:43] <ski> @slap GHC
[22:28:43] * lambdabot would never hurt GHC!
[22:28:51] <ski> (that's not a polymorphic type)
[22:28:56] <alexfmpe[m]> https://downloads.haskell.org/ghc/latest/docs/html/users_guide/exts/impredicative_types.html basically only mentions adding polymorphic types under constructors
[22:29:46] <alexfmpe[m]> is it expected to get closer to first class in future releases or this is already as implemented as it's currently expected to be?
[22:29:49] <alexfmpe[m]> ski: hmm?
[22:30:04] <ski> @kind Const
[22:30:05] <lambdabot> * -> k -> *
[22:30:10] <ski> `Const' is a polymorphic type
[22:31:10] <ski> `forall x. [x]' is a monomorphic type. it is, however, the type of "polymorphic lists". it is a universal / `forall'- type. universal types have polymorphic values
[22:31:39] <ski> (universal kinds, like `forall k. * -> k -> *', have polymorphic types, like `Const')
[22:31:51] <alexfmpe[m]> ah fair enough
[22:31:56] *** Joins: alx741 (~alx741@157.100.197.240)
[22:32:00] *** Quits: ccntrq (~Thunderbi@2a01:e34:eccb:b060:e6dd:69f1:f693:42d5) (Remote host closed the connection)
[22:33:49] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[22:33:51] <alexfmpe[m]> so am I holding it wrong or is the illegally-quantified-type not go in that slot for the time being?
[22:34:11] <slack1256> To use "google cloud secret management <https://cloud.google.com/secret-manager/docs/reference/libraries>, which gogol-* should I use if any?
[22:35:00] *** Parts: malc (~malc@2a00:1370:8180:aa79:1516:c12d:fb90:440e) (ERC (IRC client for Emacs 28.0.50))
[22:35:19] <ski> alexfmpe[m] : i guess not ?
[22:35:23] <ski> perhaps ask on mailing list ?
[22:35:57] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 240 seconds)
[22:37:37] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Read error: Connection reset by peer)
[22:37:39] *** Parts: coot (~coot@213.134.190.95) ()
[22:40:23] *** Joins: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba)
[22:41:14] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[22:41:14] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[22:41:14] *** Joins: turlando (~turlando@user/turlando)
[22:42:25] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[22:42:37] *** Quits: slowtype- (~slowtyper@2a02:214c:8494:a100:8f:b3ce:d37b:a68d) (Ping timeout: 240 seconds)
[22:47:07] *** Joins: slowtype- (~slowtyper@79.103.111.41.dsl.dyn.forthnet.gr)
[22:47:17] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 250 seconds)
[22:47:45] *** Quits: deadmarshal (~deadmarsh@95.38.116.130) (Ping timeout: 256 seconds)
[22:50:38] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[22:51:28] *** Joins: alx741 (~alx741@181.199.42.143)
[22:51:37] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[22:51:51] *** Joins: dcoutts (~duncan@host213-122-143-131.range213-122.btcentralplus.com)
[22:52:00] <fryguybob> > fromEnum (2 ^ 66 :: Integer)
[22:52:01] <lambdabot>  0
[22:52:07] *** Quits: slowtype- (~slowtyper@79.103.111.41.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[22:52:20] <EvanR> seems legit
[22:52:29] <fryguybob> > fromEnum (2 ^ 66 + 1:: Integer)
[22:52:30] <lambdabot>  1
[22:52:55] <fryguybob> "`fromEnum` and `toEnum` should give a runtime error if the result value is not representable in the result type."
[22:53:35] <fryguybob> "should" is doing a lot of work there :D
[22:53:45] <janus> is it best to try out mtl-2.3 rc3 or rc4? because rc4 has the re-exports reinserted, but it seems like they will be removed again, according to https://github.com/haskell/mtl/pull/103#issuecomment-1024522023
[22:55:01] <EvanR> what good is a specification if you can't ignore it
[22:59:10] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[22:59:17] *** Joins: jgeerds (~jgeerds@55d4b9df.access.ecotel.net)
[22:59:17] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[22:59:29] *** Joins: lavaman (~lavaman@98.38.249.169)
[22:59:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[22:59:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[22:59:57] *** Joins: alx741 (~alx741@157.100.197.240)
[22:59:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:00:09] *** Quits: dcoutts (~duncan@host213-122-143-131.range213-122.btcentralplus.com) (Remote host closed the connection)
[23:00:14] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:00:20] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:00:27] *** Joins: dcoutts (~duncan@host213-122-143-131.range213-122.btcentralplus.com)
[23:00:35] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:00:42] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:00:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:01:03] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:01:17] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:01:25] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:01:34] *** Joins: slowtype- (~slowtyper@79.103.224.184.dsl.dyn.forthnet.gr)
[23:01:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:01:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:02:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:02:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:02:13] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 256 seconds)
[23:02:13] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[23:02:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:02:32] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[23:02:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:02:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:02:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:03:12] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:03:20] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:04:26] *** Quits: jgeerds (~jgeerds@55d4b9df.access.ecotel.net) (Remote host closed the connection)
[23:05:53] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 256 seconds)
[23:09:11] *** Joins: deadmarshal (~deadmarsh@95.38.116.130)
[23:09:55] *** Joins: dcoutts_ (~duncan@host86-144-78-249.range86-144.btcentralplus.com)
[23:10:07] *** Joins: ubert (~Thunderbi@p200300ecdf09942db6b20453daa25e1f.dip0.t-ipconnect.de)
[23:11:19] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:11:44] *** Quits: dcoutts (~duncan@host213-122-143-131.range213-122.btcentralplus.com) (Ping timeout: 272 seconds)
[23:13:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:13:01] *** Lord_of_Life_ is now known as Lord_of_Life
[23:14:42] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:17:48] *** Joins: vicfred (~vicfred@user/vicfred)
[23:19:01] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[23:19:34] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[23:20:22] *** Joins: alx741 (~alx741@181.199.42.143)
[23:22:20] *** Joins: Lycurgus (~juan@98.4.112.204)
[23:25:56] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:26:06] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[23:26:07] *** Joins: alp_ (~alp@user/alp)
[23:28:24] *** Quits: slack1256 (~slack1256@186.11.99.12) (Remote host closed the connection)
[23:29:28] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[23:31:48] *** Joins: Megant (megant@user/megant)
[23:33:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:34:58] *** Quits: machinedgod (~machinedg@24.105.81.50) (Remote host closed the connection)
[23:35:30] *** Quits: akegalj (~akegalj@93-138-38-201.adsl.net.t-com.hr) (Quit: leaving)
[23:35:48] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 272 seconds)
[23:37:49] *** Joins: juhp (~juhp@128.106.188.82)
[23:38:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 272 seconds)
[23:45:42] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[23:46:47] *** Joins: alx741 (~alx741@157.100.197.240)
[23:50:37] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[23:50:51] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[23:52:15] *** Joins: thyriaen (~thyriaen@simnet-nat-pool-185-130-54-205.stargrpns.pp.ua)
[23:52:16] *** Quits: deadmarshal (~deadmarsh@95.38.116.130) (Ping timeout: 272 seconds)
[23:52:37] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[23:53:32] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4)
[23:53:33] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[23:53:58] *** Quits: bollu (~bollu@159.65.151.13) (Ping timeout: 260 seconds)
[23:54:13] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:fd00:8e82:1c4b:4222) (Remote host closed the connection)
[23:55:06] *** Joins: bollu (~bollu@159.65.151.13)
[23:56:32] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[23:56:53] *** Joins: capo_greco (~textual@60-241-161-167.static.tpgi.com.au)
[23:57:03] *** Quits: alp_ (~alp@user/alp) (Ping timeout: 250 seconds)
