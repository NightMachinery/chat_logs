[00:00:04] *** Quits: Colt (~Colt@user/colt) (Read error: Connection reset by peer)
[00:05:05] <FromDiscord> <krisppurg> sent a code paste, see https://play.nim-lang.org/#ix=3JHm
[00:05:17] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[00:05:22] <FromDiscord> <krisppurg> (edit) "https://play.nim-lang.org/#ix=3JHm" => "https://play.nim-lang.org/#ix=3JHn"
[00:09:03] <FromDiscord> <tbrekalo> https://play.nim-lang.org/#ix=3JHp so this is a known compiler issue?
[00:12:46] <FromDiscord> <Solitude> In reply to @tbrekalo "https://play.nim-lang.org/#ix=3JHp so this is": you can use borrow only for distinct types
[00:12:56] <FromDiscord> <Solitude> there is no point otherwise
[00:13:13] <FromDiscord> <tbrekalo> sorry; wrong link
[00:14:00] <FromDiscord> <tbrekalo> I have similar snippet in my project and it breaks
[00:15:28] <FromDiscord> <tbrekalo> nvm; solved the issue; it was due to imports
[00:15:46] <FromDiscord> <tbrekalo> btw. are there any success stories of nim in production?‚Üµcould someone link an example
[00:16:15] <FromDiscord> <treeform> In reply to @krisppurg "`web` and `mobile` are": your json data is like that? `"client_status": {"desktop": "idle"},` -> `clientStatus: ("", "idle", "")`
[00:16:29] <FromDiscord> <treeform> oh you set them in new hook
[00:16:55] <FromDiscord> <treeform> you should use a `postHook` or `newHook` right on the tuple
[00:18:55] <FromDiscord> <treeform> hmm I don't do `newHook` for tuples
[00:21:21] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3JHs
[00:22:00] <FromDiscord> <krisppurg> I was thinking of that, but for other objects like slash commands (I wont rewrite them yet since it's going to be a lot of work)
[00:22:12] <FromDiscord> <krisppurg> (edit) "I was thinking of that, but for other objects like slash commands (I wont rewrite them yet since it's going to be a lot of work) ... " 03added "they have fields that should be defaulted to true"
[00:22:28] <FromDiscord> <krisppurg> especially types as well
[00:22:37] <FromDiscord> <krisppurg> (edit) "types" => "`type`/`kind`s"
[00:24:22] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[00:28:48] <FromDiscord> <krisppurg> https://play.nim-lang.org/#ix=3JHw
[00:30:36] <FromDiscord> <krisppurg> again same issue@treeform
[00:33:04] *** Joins: xet7 (~xet7@user/xet7)
[00:54:16] <NimEventer> New thread by Isofruit: Is the DbTypeKind in db_sqlite always DbTypeKind.dbNull ? If yes, why?, see https://forum.nim-lang.org/t/8748
[01:07:17] *** Joins: drewr (~drew@user/drewr)
[01:19:57] *** Quits: drewr (~drew@user/drewr) (Ping timeout: 240 seconds)
[01:30:56] <FromDiscord> <Elegantbeef> @TryAngleUhh nothing looks like it should error there, is there a clonable example anyway?
[01:31:21] *** Joins: drewr (~drew@user/drewr)
[01:35:36] *** Quits: drewr (~drew@user/drewr) (Client Quit)
[01:43:46] <FromDiscord> <TryAngle> In reply to @Elegantbeef "<@147447489316913152>Uhh nothing looks like": Idk the best I could find out is either clone the repo and run tutils under test or try copy the module structure with also std/math
[01:45:19] <FromDiscord> <TryAngle> It's weird because if I implement it manually without any templates it works
[01:45:40] <FromDiscord> <Elegantbeef> Ok so where is the repo
[01:46:03] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429)
[02:21:14] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3JI3
[02:22:18] <FromDiscord> <Elegantbeef> Change `proc` to template
[02:22:38] <FromDiscord> <Elegantbeef> The issue with a proc is the code is  generated at declaration so it already has `echo msg`
[02:23:32] <FromDiscord> <geekrelief> hmm, yeah I changed the `when` to `if` and it works..
[02:23:49] <FromDiscord> <Elegantbeef> That also works
[02:23:56] <FromDiscord> <geekrelief> thanks!
[02:34:31] <FromDiscord> <Shiba> Can someome tell me what is his average compile time on first try
[02:35:02] <FromDiscord> <Elegantbeef> Hello world compiled in 2.38s
[02:35:07] <FromDiscord> <Elegantbeef> .238s\
[02:35:18] <FromDiscord> <Elegantbeef> release build in .279s
[02:35:35] <FromDiscord> <Elegantbeef> danger build + LTO 1.1s
[02:36:27] <FromDiscord> <Elegantbeef> My 3D game on a danger build took 11s
[02:37:37] <FromDiscord> <Elegantbeef> The compiler/tooling takes around 2minutes to compile, so it's relatively quick imo
[02:55:13] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[02:56:06] *** Joins: xet7 (~xet7@user/xet7)
[03:04:08] <FromDiscord> <sOkam!> In reply to @Elegantbeef "My 3D game on": self-made engine?
[03:05:02] <FromDiscord> <Elegantbeef> "Engine" yes
[03:05:30] <FromDiscord> <sOkam!> was looking for some simple 3D engine/framework to toy with, but didn't find anything too exciting
[03:05:55] <FromDiscord> <sOkam!> any you would recommend? or better to just go with nimgl/sdl?
[03:05:56] <FromDiscord> <Elegantbeef> Mine is super basic, i expand it as i need it for my project
[03:06:20] <FromDiscord> <Elegantbeef> There isnt much in the way of good 3D engines for Nim
[03:06:38] <FromDiscord> <sOkam!> ic
[03:06:48] <FromDiscord> <sOkam!> what libs are you using for yours?
[03:06:53] <FromDiscord> <Elegantbeef> https://github.com/abisxir/alasgar is interesting, though havent used it
[03:07:02] <FromDiscord> <Elegantbeef> I'm using Opengl/Sdl/Assimp
[03:07:29] <FromDiscord> <sOkam!> looked into nimgl? you think its worth it, or just go with sdl?
[03:08:17] <FromDiscord> <Elegantbeef> Nimgl doesnt really offer much that i can tell over the raw bindings
[03:09:08] <FromDiscord> <Elegantbeef> https://github.com/beef331/truss3d my undoccument non production ready framework üòÄ
[03:09:17] <FromDiscord> <Elegantbeef> undocumented\
[03:11:47] <FromDiscord> <sOkam!> nice! ty, will look into them üôÇ
[03:11:50] *** Quits: Guest2440 (~amir@IGLD-84-228-29-213.inter.net.il) (Quit: Konversation terminated!)
[03:16:20] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[03:25:37] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[03:25:39] <FromDiscord> <Shiba> In reply to @Elegantbeef "My 3D game on": 11 s to just test a thing, this is insane
[03:25:48] <FromDiscord> <Elegantbeef> danger
[03:25:54] <FromDiscord> <Elegantbeef> That's an optimized release build
[03:27:46] <FromDiscord> <Elegantbeef> It's around 3s compile time in a debug build
[03:28:06] <FromDiscord> <Shiba> On first time i compile hello world it's take a solid 4 secons and then. It's drops to 400ms.  Does that happen fo you too?
[03:28:28] <FromDiscord> <Elegantbeef> Yes that's to be expected since it doesnt recompile if no changes
[03:29:12] <FromDiscord> <Shiba> Mine is a dual core pentium
[03:29:25] <FromDiscord> <Shiba> (edit) "Mine" => "My cpu"
[03:30:10] <FromDiscord> <Elegantbeef> I have a xeon1231v3 my IPC isnt supremely high but it's decent
[03:30:27] <FromDiscord> <Shiba> (edit) "pentium" => "pentium,  2.13ghz"
[03:34:18] <FromDiscord> <Shiba> I choosed freedom over speed,  and learned nim while i had lua, i have to face the consequences
[03:34:34] <FromDiscord> <Elegantbeef> What?
[03:34:43] <FromDiscord> <Yardanico> In reply to @Shiba "I choosed freedom over": what
[03:34:53] <FromDiscord> <Yardanico> compilation is a one time thing
[03:35:00] <FromDiscord> <Yardanico> then your nim programs will RUN faster than your lua programs
[03:35:01] <FromDiscord> <Yardanico> much faster
[03:37:26] <FromDiscord> <Shiba> Don't take what i said seriously, it's 2 am here and my brain hurts, i should stop saying dump things and perhaps go sleep
[03:38:47] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[03:41:03] <FromDiscord> <sOkam!> What's the correct syntax to just declare the type of this object element?‚ÜµIf relevant: Tileset is also a ref object, but of RootObj https://media.discordapp.net/attachments/371759389889003532/925178998974193664/unknown.png
[03:41:14] <FromDiscord> <Yardanico> Table[string, seq[int]]
[03:41:19] <FromDiscord> <Elegantbeef> `Table[string, seq[int]]`
[03:41:21] <FromDiscord> <Yardanico> generic parameters in nim use bracket syntax
[03:41:28] <FromDiscord> <sOkam!> oh square brackets, tyty
[03:41:33] <FromDiscord> <Yardanico> also better write anim: Table
[03:41:42] <FromDiscord> <Yardanico> just a but more idiomatic :P
[03:41:48] <FromDiscord> <sOkam!> no components?
[03:42:04] <FromDiscord> <sOkam!> does it not make the table flexible, or is it flexible anyway?
[03:42:05] <FromDiscord> <Yardanico> ?
[03:42:09] <FromDiscord> <Yardanico> In reply to @sOkam! "does it not make": as in?
[03:42:25] <FromDiscord> <sOkam!> I just want two columns in the table
[03:42:50] <FromDiscord> <sOkam!> Thought that if I don't define the two, it might interpret the table as expandable
[03:42:59] <FromDiscord> <Yardanico> not sure what you mean
[03:43:05] <FromDiscord> <Yardanico> Table is a mapping from one type to another
[03:43:16] <FromDiscord> <Yardanico> in your case it maps different strings to their corresponding seq[int] values
[03:43:36] <FromDiscord> <Yardanico> it's like dict in python if you know that
[03:43:45] <FromDiscord> <Yardanico> but type limited
[03:43:48] <FromDiscord> <sOkam!> exactly. how does it know what to map if not declared on the type?
[03:43:59] <FromDiscord> <Yardanico> ??? it's declared in your type
[03:44:03] <FromDiscord> <Yardanico> Table[string, seq[int]]
[03:44:08] <FromDiscord> <Yardanico> says that you want to map from strings to seq[int]
[03:44:14] <FromDiscord> <sOkam!> In reply to @Yardanico "also better write anim*:": ‚òùÔ∏è
[03:44:21] <FromDiscord> <Yardanico> i meant for :
[03:44:28] <FromDiscord> <Yardanico> i didn't write the full definition of table to save time
[03:44:31] <FromDiscord> <sOkam!> ah for the asterisk, kk
[03:44:31] <FromDiscord> <Yardanico> I meant spacing around :
[03:44:47] <FromDiscord> <Elegantbeef> in nim you do `field: type`
[03:44:59] <FromDiscord> <Elegantbeef> Conventionally atleast
[03:47:16] <FromDiscord> <sOkam!> what's the issue on this one? ü§î https://media.discordapp.net/attachments/371759389889003532/925180565907451924/unknown.png
[03:47:29] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 256 seconds)
[03:47:29] <FromDiscord> <sOkam!> I have another one like that with 2 definitions, and it works well
[03:47:37] <FromDiscord> <Yardanico> tuple
[03:47:52] <FromDiscord> <impbox [ftsf]> Tuples don't use  on fields
[03:48:00] <FromDiscord> <Yardanico> you don't export fields in a tuple, they're always exported
[03:48:01] <FromDiscord> <sOkam!> oh
[03:48:07] <FromDiscord> <impbox [ftsf]> Only on objects
[03:48:17] <FromDiscord> <Elegantbeef> Well more accurately tuple fields are shorthand for indexing
[03:48:27] <FromDiscord> <Elegantbeef> The fields dont actually exist!
[03:49:04] <FromDiscord> <sOkam!> does that apply to regular types too?
[03:49:10] <FromDiscord> <Elegantbeef> Nope
[03:49:14] <FromDiscord> <sOkam!> or just for tuples explicitly
[03:49:23] <FromDiscord> <sOkam!> kk
[03:49:33] <FromDiscord> <Elegantbeef> Named fields on tuples are just expanded as `yourTuple[indexOfField]`
[04:06:07] <FromDiscord> <sOkam!>  https://media.discordapp.net/attachments/371759389889003532/925185310923575376/unknown.png
[04:06:37] <FromDiscord> <Yardanico> ?
[04:06:39] <FromDiscord> <sOkam!>  https://media.discordapp.net/attachments/371759389889003532/925185445355192370/unknown.png
[04:07:10] <FromDiscord> <sOkam!>  https://media.discordapp.net/attachments/371759389889003532/925185569334644756/unknown.png
[04:07:34] <FromDiscord> <sOkam!> If I hover over it... it recognizes it. But the compiler says nope üò¶
[04:07:43] <FromDiscord> <Yardanico> maybe you import in the wrong order?
[04:07:47] <FromDiscord> <Yardanico> or something, idk
[04:07:53] <FromDiscord> <Yardanico> maybe it's related to nico
[04:08:11] <FromDiscord> <Yardanico> it's better if you ask nico stuff in #gamedev maybe
[04:08:45] <FromDiscord> <sOkam!> I thought it was more syntax-related than gamedev per se, since the issue seems to be the relationship
[04:08:46] <FromDiscord> <fenrave> In reply to @Elegantbeef "https://github.com/abisxir/alasgar is interesting, ": Lol https://media.discordapp.net/attachments/371759389889003532/925185975456522250/unknown.png
[04:09:28] <FromDiscord> <fenrave> Tried the example out because i have nothing better to do
[04:09:32] <FromDiscord> <fenrave> Weird type safety issue
[04:11:28] <FromDiscord> <fenrave> It is a float32..? https://media.discordapp.net/attachments/371759389889003532/925186655676153886/unknown.png
[04:11:34] <FromDiscord> <fenrave> huh
[04:12:09] <FromDiscord> <Yardanico> float32 isn't compatible with float64
[04:12:15] <FromDiscord> <Yardanico> you need to convert
[04:12:20] <FromDiscord> <fenrave> yeah
[04:12:35] <FromDiscord> <fenrave> i think the example was made after the guy whose writing it was converting it for some reason
[04:12:40] <FromDiscord> <fenrave> or before
[04:12:53] <FromDiscord> <fenrave> i'm sure he would have ran his own example from time to time
[04:12:59] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 256 seconds)
[04:13:12] <FromDiscord> <fenrave> oh
[04:13:19] <FromDiscord> <fenrave> no its my own system libraries
[04:17:58] <FromDiscord> <sOkam!> Oh, I just noticed this‚ÜµIs there an intended way to do imports with circular dependencies? https://media.discordapp.net/attachments/371759389889003532/925188289575673886/unknown.png
[04:20:28] <FromDiscord> <Elegantbeef> Layout your code so you import just before you need
[04:20:29] <FromDiscord> <Elegantbeef> If there is a tight cyclical dependency you're SOL
[04:23:07] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 250 seconds)
[04:25:19] <FromDiscord> <sOkam!> whats sol?
[04:25:36] <FromDiscord> <Elegantbeef> Shit outta luck
[04:26:06] <FromDiscord> <Elegantbeef> Or "sweet" if 4 swears scare you
[04:26:12] <FromDiscord> <Elegantbeef> if swears\
[04:31:04] <FromDiscord> <sOkam!> How come this works... https://media.discordapp.net/attachments/371759389889003532/925191587535917116/unknown.png
[04:31:57] <FromDiscord> <sOkam!> But this doesn't? https://media.discordapp.net/attachments/371759389889003532/925191811557896222/unknown.png
[04:32:15] <FromDiscord> <sOkam!> Is it not the exact same thing, or am I really blind? üòî
[04:32:48] <FromDiscord> <Elegantbeef> Where does `uiDir`/`envDir` come from in that example they're both 1 line
[04:33:41] <FromDiscord> <sOkam!> In reply to @Elegantbeef "Where does `uiDir`/`envDir` come": not sure I understand
[04:33:58] <FromDiscord> <Elegantbeef> The code on the left side of the above examples are both 1 line module
[04:34:07] <FromDiscord> <Elegantbeef> So where does `uiDir` and `envDir` come from
[04:34:25] <FromDiscord> <sOkam!> The right side file is the same, the left side is included in both cases
[04:35:12] <FromDiscord> <sOkam!> uiDir and envDir are defined in the right file, the cfg one
[04:35:32] <FromDiscord> <Elegantbeef> Oh your're including
[04:35:53] <FromDiscord> <sOkam!> yeah, to avoid importing since it breaks dependencies
[04:36:06] <FromDiscord> <sOkam!> and they are just asset lists anyway, so its fine
[04:36:52] <FromDiscord> <sOkam!> Both included, both defined in the exact same way... but one breaks and the other seems fine? ü•¥
[04:37:54] <FromDiscord> <Elegantbeef> I could be wrong but this should be doable with imports
[04:38:52] <FromDiscord> <sOkam!> I got the cyclic dependancy issue before with imports
[04:41:06] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/925194111793909770/image.png
[04:41:07] <FromDiscord> <Elegantbeef> Works just fine for me
[04:42:19] <FromDiscord> <Shiba> Can tables store functions
[04:42:42] <FromDiscord> <Elegantbeef> Yes
[04:42:57] <FromDiscord> <Shiba> Oh so i can make objects
[04:42:57] <FromDiscord> <Elegantbeef> They have to be the homogenous so you may need an object variant
[04:43:30] <FromDiscord> <fenrave> How are functions in tables done exactly? In lua its pretty easy to add a function to table
[04:43:34] <FromDiscord> <Yardanico> In reply to @Shiba "Oh so i can": you don't need tables with functions for that
[04:43:39] <FromDiscord> <Yardanico> In reply to @fenrave "How are functions in": procedures are first-class in nim
[04:43:43] <FromDiscord> <Yardanico> you can pass them around and store them'
[04:43:45] <FromDiscord> <Yardanico> (edit) "them'" => "them"
[04:43:46] <FromDiscord> <fenrave> I mean procedures
[04:43:51] <FromDiscord> <Yardanico> so what I said
[04:43:54] <FromDiscord> <fenrave> oh
[04:43:56] <FromDiscord> <Yardanico> you just store them as any other type
[04:43:58] <FromDiscord> <fenrave> misinterpreted that
[04:43:59] <FromDiscord> <fenrave> i see
[04:44:07] <FromDiscord> <Elegantbeef> The only issue is they need to be homogenous
[04:44:18] <FromDiscord> <Elegantbeef> If they're not homogenous you need to box them using an object variant
[04:44:47] <FromDiscord> <Elegantbeef> Like you cannot store `proc(a: int)` and `proc()` in the same table without a box
[04:44:57] <FromDiscord> <Shiba> In reply to @Yardanico "you don't need tables": Why isn't easy to call every table's update function
[04:45:13] <FromDiscord> <Elegantbeef> Nim has objects
[04:45:14] <FromDiscord> <Shiba> (edit) "In reply to @Yardanico "you don't need tables": Why isn't ... easy" 03added "it"
[04:45:18] <FromDiscord> <Elegantbeef> We dont use tables to emulate actual logic
[04:45:44] <FromDiscord> <Yardanico> exactly
[04:45:50] <FromDiscord> <Yardanico> lua needs that because it doesn't have actual objects :)
[04:45:52] <FromDiscord> <fenrave> sent a code paste, see https://play.nim-lang.org/#ix=3JIt
[04:45:55] <FromDiscord> <fenrave> yeah
[04:46:06] <FromDiscord> <fenrave> mimicking objects is fun though
[04:46:18] <FromDiscord> <fenrave> (edit) "https://play.nim-lang.org/#ix=3JIt" => "https://play.nim-lang.org/#ix=3JIu"
[04:46:29] <FromDiscord> <fenrave> mimicry is the best kind of flattery
[04:46:38] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3JIv
[04:46:58] <FromDiscord> <Elegantbeef> Or you use the OOP mechanism
[04:47:38] <FromDiscord> <Shiba> Iam trying to delete the concep of oop in my mind after 2 years of c#
[04:48:00] <FromDiscord> <Yardanico> in nim you can do most of traditional oop without methods
[04:48:03] <FromDiscord> <Yardanico> because we have UFCS (MCS)
[04:49:38] <FromDiscord> <Shiba> And can you like self.accesOtherVariables
[04:49:38] <FromDiscord> <fenrave> In reply to @Shiba "Iam trying to delete": Coming from lua its pretty easy to not think about them
[04:50:04] <FromDiscord> <sOkam!> In reply to @Elegantbeef "image.png": i tried the imports before, but they were at the beginning of the files‚Üµwhen switching the words in those sshots to import, instead of include, they worked fine ü§∑‚Äç‚ôÇÔ∏è
[04:50:12] <FromDiscord> <Elegantbeef> Exactly
[04:50:39] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:50:40] <FromDiscord> <sOkam!> sounds like magic, if you ask me
[04:51:51] <FromDiscord> <Elegantbeef> Nope just import order
[04:52:24] <FromDiscord> <Elegantbeef> you can order your imports to prevent cyclical imports
[04:53:06] <FromDiscord> <sOkam!> i see. definitely fancy, need to get a better grasp on it
[04:53:07] <FromDiscord> <Elegantbeef> When you do the import at the top the module importing it attempts to import itself so errors
[04:53:40] <FromDiscord> <sOkam!> how are files accessed? how's the order layed out?
[04:54:11] <FromDiscord> <Elegantbeef> First in first imported üòÄ
[04:54:14] <FromDiscord> <sOkam!> In c/cpp I understood the compiler gets all imported files layed out all at once, to be read at once
[04:55:10] <FromDiscord> <sOkam!> In reply to @Elegantbeef "First in first imported": I see. Whats the difference between importing and including?
[04:55:19] <FromDiscord> <Elegantbeef> Include copies the contents
[04:55:23] <FromDiscord> <Elegantbeef> Import doesnt
[04:55:48] <FromDiscord> <sOkam!> Yeah, but like... what does import mean if the contents are not copied?
[04:56:06] <FromDiscord> <Elegantbeef> Only exported symbols are avaliable
[04:56:17] <FromDiscord> <fenrave> if i recall correctly, nim just imports what you actually use and strips out unused stuff for smaller binary sizes
[04:56:28] <FromDiscord> <Elegantbeef> Well it imports it all
[04:56:33] <FromDiscord> <Elegantbeef> But it doesnt compile it out
[04:56:39] <FromDiscord> <fenrave> yeah
[04:56:47] <FromDiscord> <sOkam!> ic
[04:57:05] <FromDiscord> <sOkam!> so its similar to including, but the code is selectively filtered?
[04:57:22] <FromDiscord> <Elegantbeef> Well include pastes the file at the call site
[04:57:32] <FromDiscord> <Elegantbeef> Import adds exported symbols to the symbol table for this module
[04:58:02] <FromDiscord> <Elegantbeef> So in the import example `someDir` isnt exported so you'll want to either `export modA` or `export someDir`
[04:58:28] <FromDiscord> <sOkam!> oh, so they are actually not added to the sequence
[04:58:49] <FromDiscord> <Elegantbeef> In the include method they're added to the symbol table of this module since they're declared there now
[04:58:50] <FromDiscord> <sOkam!> just referenced for when the code is called?
[04:58:54] <FromDiscord> <Elegantbeef> Include works like C's include
[04:59:00] <FromDiscord> <Elegantbeef> It pastes the file there
[04:59:21] <FromDiscord> <Elegantbeef> Import is a properly thought out way to make up code
[04:59:38] <FromDiscord> <Elegantbeef> Default to `import` and use `include` only when you need to
[04:59:43] <FromDiscord> <Elegantbeef> There isnt much reason to use include imo
[04:59:57] <FromDiscord> <sOkam!> kk
[05:09:04] <FromDiscord> <tandy> is nim suitable for real time programming?‚Üµpeople seem to see garbage collector and run away..‚Üµhttps://old.reddit.com/r/nim/comments/jc7zxk/hard_real_time_resource/
[05:09:08] <FromDiscord> <Yardanico> it is
[05:09:16] <FromDiscord> <Yardanico> with --gc:arc
[05:11:31] <FromDiscord> <Yardanico> even refc has soft realtime capabilities
[05:42:43] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Quit: noeontheend)
[05:44:02] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:46:26] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[05:46:34] <FromDiscord> <sOkam!> Is this syntax wrong? ü§î https://media.discordapp.net/attachments/371759389889003532/925210588504813648/unknown.png
[05:48:09] <FromDiscord> <Elegantbeef> Yes
[05:48:45] <FromDiscord> <Elegantbeef> Or i think so
[05:49:16] <FromDiscord> <Elegantbeef> Never mind that's right
[05:49:35] <FromDiscord> <sOkam!> Compiler not likey
[05:50:02] <FromDiscord> <Elegantbeef> Well the compiler has an error message which is helpful
[05:50:23] <FromDiscord> <sOkam!> Not much, tbh üò¶ https://media.discordapp.net/attachments/371759389889003532/925211548761354260/unknown.png
[05:50:32] <FromDiscord> <Elegantbeef> That's very helpful
[05:50:38] <FromDiscord> <Elegantbeef> go to line 14 what do you do
[05:51:09] <FromDiscord> <sOkam!>  https://media.discordapp.net/attachments/371759389889003532/925211737605681163/unknown.png
[05:51:44] <FromDiscord> <Elegantbeef> Ok so you dont export tiles from `envData`
[05:51:46] <FromDiscord> <Elegantbeef> We did it
[05:52:24] <FromDiscord> <sOkam!> oh nvm im dumb
[05:52:27] <FromDiscord> <Elegantbeef> so now go to `../env/data` and `export tiles` or throw `` on `tiles`
[05:52:39] <FromDiscord> <sOkam!> its not exporting, i just didnt add the tiles variable üôà
[05:52:43] <FromDiscord> <Elegantbeef> See error messages are helpful
[05:53:43] <FromDiscord> <sOkam!> Would be more helpful if it said: Hey! You totally forgot to add this variable, you dummy with goldfish memory who actually thought about doing it... and didnt‚Üµü§∑‚Äç‚ôÇÔ∏è
[05:53:45] <FromDiscord> <sOkam!> üòÑ
[05:54:07] <FromDiscord> <Elegantbeef> Eh Nim's semantic error messages are generally helpful
[05:54:22] <FromDiscord> <Elegantbeef> Nim's parsing error messages are a hit or a miss
[05:54:36] <FromDiscord> <sOkam!> whats the latter?
[05:54:47] <FromDiscord> <Elegantbeef> "Indentation error"
[05:56:52] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3JIB
[07:41:10] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:59:54] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:57:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[08:59:13] *** Joins: drewr (~drew@user/drewr)
[11:12:00] *** Joins: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com)
[11:14:57] *** Quits: drewr (~drew@user/drewr) (Ping timeout: 240 seconds)
[11:59:24] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[12:02:20] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[12:31:06] <FromDiscord> <Esther> Heya - I'm using vscode with the Nim extension and a nimble library that has some declarations hidden behind a 'when x:' thingo. How do I tell the autocomplete whatsit to define that 'x'?
[12:40:06] <FromDiscord> <Rika> You do that on the compile command, not in code
[12:44:39] <FromDiscord> <Elegantbeef> You make a config file and have `--define:yourDefine`
[12:44:52] <FromDiscord> <Elegantbeef> Sorry for rika's lying to you
[12:45:21] <FromDiscord> <Elegantbeef> @Esther\: ^ üòÄ
[12:45:39] <FromDiscord> <Elegantbeef> `config.nims`in the root of your current file
[12:45:45] <FromDiscord> <Elegantbeef> current project\
[12:47:11] <FromDiscord> <Esther> That seems to have done it, thank you!
[12:47:52] <FromDiscord> <Elegantbeef> No problem
[12:49:10] <FromDiscord> <Esther> Also, is there a language keyword index in the docs anywhere? I was trying to find what the 'when' keyword actually does in the docs but had a lot of trouble
[12:49:37] <FromDiscord> <Rika> In reply to @Elegantbeef "Sorry for rika's lying": It's still not in code, it's in configuration
[12:50:07] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#statements-and-expressions-when-statement
[12:53:45] <FromDiscord> <evoalg> In reply to @Esther "Also, is there a": If you know the word you're looking for, but you're having trouble finding it in the docs (and "nim keyword" isn't helping), then go to https://nim-lang.org/docs/theindex.html and search the page for your key word
[12:54:03] <FromDiscord> <Elegantbeef> That index doesnt have keywords
[12:54:07] <FromDiscord> <Elegantbeef> The manual has keywords
[12:54:11] <FromDiscord> <evoalg> ahhh
[12:54:25] <FromDiscord> <evoalg> in that case you've been lied to again Esther
[12:55:00] <FromDiscord> <Elegantbeef> the index does have a list of all builtin types
[12:55:16] <FromDiscord> <evoalg> gotcha ok
[12:55:42] <FromDiscord> <evoalg> beef is the fountain of truth üòâ
[12:55:46] <FromDiscord> <Elegantbeef> only cause all builtin types are implemented in system.nim
[12:56:05] <FromDiscord> <Elegantbeef> Nah i'm just an dumb asshole that's almost always active üòõ
[12:56:46] <FromDiscord> <evoalg> I like how you have exactly the same waking hours as me, even though I'm in New Zealand üôÇ
[12:57:28] <FromDiscord> <Rika> In reply to @evoalg "beef is the fountain": I mean he twists the truth very often as well
[12:57:32] <FromDiscord> <Elegantbeef> That says more about me than it should
[12:58:18] <FromDiscord> <Elegantbeef> Do i twist the truth or am i ignorant?
[12:58:37] <FromDiscord> <Rika> I never said it was intentional
[12:58:55] <FromDiscord> <Elegantbeef> Twisting the truth means i'd know i'm lying!
[12:59:31] <FromDiscord> <Rika> Sometimes you do you just forgot
[12:59:53] <FromDiscord> <Elegantbeef> Rika knows my mind better than I apparently
[13:00:07] *** Joins: xet7 (~xet7@user/xet7)
[13:00:22] <FromDiscord> <Rika> Of course I do I'm just a figment of your imagination after all
[13:00:35] <FromDiscord> <evoalg> Neal Asher (scifi writer) wrote of an ancient life form that humans called "dragon" who knew a lot but spoke in riddles ... maybe it's the same with beef
[13:00:37] <FromDiscord> <Elegantbeef> Would be cooler if you were just a pigment
[13:01:55] <FromDiscord> <Rika> Sorry, I'm colourblind
[13:02:53] <FromDiscord> <evoalg> figment or pigment, Rika would still be part of you beef?
[13:03:02] <FromDiscord> <Rika> Lewd
[13:04:02] <FromDiscord> <evoalg> if that part was a big part ... I meant really big, like 100%, then Rika would actually be beef
[13:04:17] <FromDiscord> <TryAngle> üò≥
[13:04:51] <FromDiscord> <evoalg> ok, ok ... I'll shut up
[13:05:13] <FromDiscord> <Rika> I didn't know you were this perverted evo
[13:05:35] <FromDiscord> <evoalg> When you're my age, you've seen it all
[13:06:03] <FromDiscord> <Elegantbeef> He's also a kiwi
[13:06:07] <FromDiscord> <Elegantbeef> So that doesnt help
[13:06:42] <FromDiscord> <evoalg> kiwi means I've not only seen it all
[13:09:36] <FromDiscord> <Solitude> NICE nim discussion
[13:09:47] <FromDiscord> <Elegantbeef> Thanks
[13:09:54] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[13:10:55] *** Joins: xet7 (~xet7@user/xet7)
[13:12:01] <FromDiscord> <Rika> You're welcome
[13:15:20] <FromDiscord> <Elegantbeef> So evo i do wonder are you working on any main project with Nim or still just learning stuffs?
[13:17:48] <FromDiscord> <Rika> Can't keep on just learning forever, to progress you should make something
[13:18:05] <FromDiscord> <valerga> i want to make something in nim called animal(s)
[13:18:12] <FromDiscord> <valerga> but no idea what yet lol
[13:18:23] <FromDiscord> <valerga> (it probably already exists)
[13:18:50] <FromDiscord> <Elegantbeef> I feel like `animals` is a good name of a rust like trait package
[13:19:04] <FromDiscord> <Rika> I can't believe you know things about rust beef
[13:19:08] <FromDiscord> <Rika> You've betrayed us
[13:19:23] <FromDiscord> <Elegantbeef> Hey i learn things about all the other system languages
[13:19:24] <FromDiscord> <evoalg> he was lying to us the whole time
[13:19:26] <FromDiscord> <Elegantbeef> They have interesting things
[13:19:52] <FromDiscord> <Rika> I'm joking, I kinda like the idea of traits
[13:20:15] <FromDiscord> <Elegantbeef> Yea i seen the cone language today and it has them
[13:20:19] <FromDiscord> <Rika> It sounds like a good extension for Nim's types
[13:20:58] <FromDiscord> <Elegantbeef> They're a bit like concepts plus
[13:21:11] <FromDiscord> <Rika> I often think Nim APIs need some (but not a lot of) standardisation
[13:22:00] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3JJB
[13:22:06] <FromDiscord> <Elegantbeef> It's a bit ehh about a 1\:1 API
[13:22:06] <FromDiscord> <evoalg> but yea I should start a project, as it's the best way to learn ... I'll start one. BTW does `nim secret` still work in 1.6.2?
[13:22:24] <FromDiscord> <Elegantbeef> Yea i totally agree there needs to be standardization
[13:22:33] <FromDiscord> <Elegantbeef> Concepts should be used
[13:22:43] <FromDiscord> <Rika> In reply to @evoalg "but yea I should": Probably
[13:22:52] <FromDiscord> <Elegantbeef> It seems it works
[13:22:55] <FromDiscord> <Rika> In reply to @Elegantbeef "Concepts should be used": Concepts need to be improved
[13:22:58] <FromDiscord> <Rika> Then it can be used
[13:23:11] <FromDiscord> <Rika> Can y'all in matrix see replies now
[13:23:12] <FromDiscord> <Rika> Btw
[13:23:15] <FromDiscord> <evoalg> but it's my brew installation that broke nim secret
[13:23:17] <FromDiscord> <Elegantbeef> Yea
[13:23:24] <FromDiscord> <Rika> Ok
[13:23:32] <FromDiscord> <Elegantbeef> what needs to be done to concepts?
[13:23:36] <FromDiscord> <Rika> In reply to @evoalg "but it's my brew": Imagine using macOS smh
[13:23:37] <FromDiscord> <Elegantbeef> There are a few bugs ofc
[13:23:38] <FromDiscord> <Rika> I'm joking
[13:23:49] <FromDiscord> <Rika> In reply to @Elegantbeef "There are a few": Well yeah its pretty much just bugs
[13:23:52] <FromDiscord> <Rika> Then the field thing
[13:23:58] <FromDiscord> <Rika> Though AFAIK it's possible
[13:24:07] <FromDiscord> <Elegantbeef> the field thing?
[13:24:12] <FromDiscord> <Elegantbeef> Are we talking about the newconcepts?
[13:24:19] <FromDiscord> <Rika> Ah yeah
[13:24:21] <FromDiscord> <Rika> I thought we were
[13:24:37] <FromDiscord> <valerga> I've been wondering. Would this proposal make nim harder to learn, remove some of the flexibility people seem to like? https://github.com/nim-lang/RFCs/issues/380
[13:24:43] <FromDiscord> <Elegantbeef> I was talking in general
[13:24:51] <FromDiscord> <Elegantbeef> Both have their benefits and their detriments
[13:25:00] <FromDiscord> <Elegantbeef> It'd make it easier
[13:25:22] <FromDiscord> <Elegantbeef> The issue with that is one it's not done at the type scope imo
[13:25:25] <FromDiscord> <Elegantbeef> Just like destructors and stuff
[13:25:37] <FromDiscord> <Elegantbeef> They're done presently in an unintuitive way
[13:26:08] <FromDiscord> <Elegantbeef> Regardless of the concept bugs there are many things in the stdlib and other libraries that should use them
[13:26:25] <FromDiscord> <Rika> In reply to @Elegantbeef "Regardless of the concept": Yeah
[13:26:38] <FromDiscord> <Elegantbeef> There's also an issue with not being able to extend modules after definition
[13:27:15] <FromDiscord> <Rika> In reply to @valerga "I've been wondering. Would": More thought would need to be put into it
[13:27:19] <FromDiscord> <Rika> Hard to tell
[13:27:39] <FromDiscord> <Elegantbeef> I do not like the idea of having types operations outside of the type definition
[13:27:43] <FromDiscord> <Elegantbeef> But regardless
[13:28:02] <FromDiscord> <Elegantbeef> Type bound operations arent really a bad thing, they just need to be made clear imo
[13:28:28] <FromDiscord> <valerga> would it introduce new keywords to learn about or would most of it be automatic?
[13:28:40] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3JJC
[13:28:58] <FromDiscord> <Rika> In reply to @Elegantbeef "for instance a destructor": Cursed
[13:29:08] <FromDiscord> <Elegantbeef> I think araq's idea is to bind the functions declared in a module with the type by the first parameter
[13:29:54] <FromDiscord> <Elegantbeef> More cursed than manually declaring a proc in the same definition as the type is declared with a specific definition?
[13:30:00] <FromDiscord> <Rika> In reply to @Elegantbeef "I think araq's idea": I think it's good, but I cannot tell without actually trying it tbh
[13:30:02] <FromDiscord> <Elegantbeef> same module definition\
[13:30:12] <FromDiscord> <Rika> In reply to @Elegantbeef "More cursed than manually": No just the syntax
[13:30:13] <FromDiscord> <Rika> Lol
[13:30:30] <FromDiscord> <Elegantbeef> Well it could be `destroy:` but that interferes with a field named destroy
[13:30:49] <FromDiscord> <Elegantbeef> so i guess we could make it so accquoted `destroy` is field and otherwise is a destructor
[13:30:51] <FromDiscord> <Rika> The more I think about it the more I think it is a good idea tbh
[13:31:17] <FromDiscord> <Elegantbeef> I do also think this post is something else that is needed https://forum.nim-lang.org/t/8658#56393
[13:35:57] <FromDiscord> <Elegantbeef> That feature mixed with concepts makes life so much simpler
[13:36:30] <FromDiscord> <Elegantbeef> You want to use code but dont want to use a specific type you just replace it with your own that fits all the required procs
[13:42:18] <FromDiscord> <hmmm> yo what can I use that is similar to .lines but works with variables and not files
[13:42:43] <FromDiscord> <evoalg> variables like a seq ?
[13:42:49] <FromDiscord> <evoalg> you mean?
[13:42:56] <FromDiscord> <hmmm> more like a blob of text
[13:43:05] <FromDiscord> <hmmm> like what you get after you do readfile
[13:43:11] <FromDiscord> <evoalg> ahh
[13:43:21] <FromDiscord> <evoalg> then it's already in memory
[13:43:25] <FromDiscord> <hmmm> yep
[13:43:33] <FromDiscord> <hmmm> I want each line
[13:43:37] <FromDiscord> <Solitude> splitLines
[13:43:44] <FromDiscord> <hmmm> oh
[13:43:52] <FromDiscord> <hmmm> I'll try
[13:43:59] <FromDiscord> <Solitude> be careful
[13:44:03] <FromDiscord> <hmmm> what
[13:44:04] <FromDiscord> <hmmm> why
[13:47:06] <FromDiscord> <evoalg> but ... but this wont iterate line by line like `.lines` does for a file ... it will create a whole new seq right? ... https://play.nim-lang.org/#ix=3JJH
[13:47:29] <FromDiscord> <Elegantbeef> Look at evo pointing out the issue
[13:47:43] <FromDiscord> <hmmm> well splitlines worked lol
[13:47:57] <FromDiscord> <Elegantbeef> It'll work but if it's a big file you're make your ram unhappy
[13:48:32] <FromDiscord> <hmmm> oh no it's for a micro sub nano service utility that will get used on like 4/5 lines of text
[13:49:00] <FromDiscord> <evoalg> ahhh ... cos you said like .lines (which doesn't copy all of the file into mem)
[13:49:36] <FromDiscord> <evoalg> In reply to @Elegantbeef "Look at evo pointing": proud of me? üòÑ üòÑ ... but I'm not sure how I'd create on iterator to solve the problem üò¶
[13:49:51] <FromDiscord> <Elegantbeef> A while loop
[13:50:42] <FromDiscord> <evoalg> and go through each char until I get a '\n' where I'd yield?
[13:51:29] <FromDiscord> <Rika> Pretty much
[13:51:54] <FromDiscord> <Elegantbeef> There you go
[13:51:57] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3JJK
[13:52:10] <FromDiscord> <Elegantbeef> Can do a `for x in y`
[13:52:17] <FromDiscord> <Elegantbeef> rather `for x in s`
[13:52:57] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3JJL
[13:53:34] <FromDiscord> <Elegantbeef> There is also a no alloc method that doesnt play as nice using `openArray`
[13:54:43] <FromDiscord> <Elegantbeef> Ah doesnt work without views i take it back
[13:54:47] <FromDiscord> <evoalg> I was half way though typing something up when you did two versions already!
[13:55:11] <FromDiscord> <evoalg> ... I lie ... quarter of the way through...
[13:55:13] <FromDiscord> <Elegantbeef> shit i spoiled the fun
[13:56:23] <FromDiscord> <evoalg> it's fun watched you go at bot speeds
[13:57:23] <FromDiscord> <evoalg> preallocates 64 bytes ... to get a head start?
[13:58:42] <FromDiscord> <Elegantbeef> Well moreso to prevent allocations if possible
[13:58:59] <FromDiscord> <evoalg> why did you chose 64 though?
[13:59:35] <FromDiscord> <hmmm> woah beefy it worked
[13:59:38] <FromDiscord> <Elegantbeef> A relatively large base 2 number
[14:00:01] <FromDiscord> <hmmm> respect4beefy = respect4beefy 2
[14:00:07] <FromDiscord> <evoalg> base 2 numbers ... so allocations are more efficient in base 2 chunks?
[14:00:43] <FromDiscord> <Elegantbeef> Well if we did 65 bytes we'd take up a whole cacheline and an extra byte \:d
[14:00:55] <FromDiscord> <Elegantbeef> I dont think they're more efficient
[14:00:57] <FromDiscord> <Elegantbeef> I could be wrong
[14:01:09] <FromDiscord> <Elegantbeef> Any size works there i just chose 64
[14:01:11] <FromDiscord> <hmmm> make a beefytools repo, I wouldn't want to miss something
[14:01:32] <FromDiscord> <Elegantbeef> I already have one https://github.com/beef331/slicerator üòõ
[14:02:01] <FromDiscord> <Elegantbeef> should i make a `chunkUntil` iterator üòÄ
[14:02:02] <FromDiscord> <evoalg> maybe iterating over text should be part of slicerator?
[14:02:14] <FromDiscord> <evoalg> oh ... what you said üòâ
[14:02:36] <FromDiscord> <Solitude> In reply to @evoalg "but ... but this": https://nim-lang.org/docs/strutils.html#splitLines.i,string
[14:02:59] <FromDiscord> <Elegantbeef> Oh right that exists
[14:03:04] <FromDiscord> <Solitude> you dumbass
[14:03:05] <FromDiscord> <evoalg> ohhhh!
[14:03:25] <FromDiscord> <Elegantbeef> Now now you love me‚Üµ(@Solitude)
[14:03:28] <FromDiscord> <evoalg> In reply to @Solitude "https://nim-lang.org/docs/strutils.html#splitLines.": you know the docs so well!
[14:04:32] <FromDiscord> <Elegantbeef> Though this doesnt reuse the string so probably is less memory friendly
[14:04:57] <FromDiscord> <evoalg> still, slicerator should contain everything that someone want's to iterator over?
[14:05:18] <FromDiscord> <Elegantbeef> Yea like iterators.... üòõ
[14:05:38] <FromDiscord> <Elegantbeef> I really hate that we cant chain iterators
[14:06:09] <FromDiscord> <evoalg> that's because you haven't released chain in slicerator yet?
[14:06:23] <FromDiscord> <Elegantbeef> No cause you cannot chain iterators
[14:07:20] <FromDiscord> <Elegantbeef> chain in slicerator is really just hack
[14:07:33] <FromDiscord> <Elegantbeef> All operations are defined by yours truly and require being written in there
[14:08:04] <FromDiscord> <Elegantbeef> Though i think map/filter are all one really needs, but i could be wrong
[14:09:03] <FromDiscord> <Elegantbeef> Are there any other operations that one would want to apply to the output of an iterator is my question
[14:10:42] <FromDiscord> <evoalg> in one my the aoc's I did:‚Üµ `var grid = readFile("inputs/11.txt").strip.splitlines.mapIt(toSeq(it).mapIt(ord(it) - ord('0')))` ‚Üµ... not proud of it, but it worked
[14:11:17] <FromDiscord> <evoalg> nested mapIt's
[14:12:34] <FromDiscord> <Elegantbeef> Yea i mean it'd be turned into a collect wrapping an odd statement
[14:13:12] <FromDiscord> <Elegantbeef> would be like `for x in chain lines("inputs/11.txt").map(toSeq(x)` followed by another iteration
[14:13:57] <FromDiscord> <Elegantbeef> Afterall the syntax is like `  for i, x in chain a.map(parseInt(x)).filter(x > 5e4.int).map(x  100):`
[14:14:33] <FromDiscord> <Elegantbeef> This only really makes sense for when you''re using the output in a for loop i guess
[14:14:56] <FromDiscord> <evoalg> true it's a bad eg
[14:15:11] <FromDiscord> <Elegantbeef> I mean it's a real example
[14:15:31] <FromDiscord> <evoalg> but still ... does strip allocate?
[14:15:37] <FromDiscord> <Elegantbeef> Yes
[14:16:24] <FromDiscord> <Elegantbeef> My version shouldnt allocate unless you tell it using `map`
[14:16:32] <FromDiscord> <Elegantbeef> But anyway i need to sleep getting really late here
[14:17:09] <FromDiscord> <evoalg> nites!
[14:55:17] *** Joins: neurocyte0132889 (~neurocyte@IP-212232085135.dynamic.medianet-world.de)
[14:55:17] *** Quits: neurocyte0132889 (~neurocyte@IP-212232085135.dynamic.medianet-world.de) (Changing host)
[14:55:17] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[15:12:47] <FromDiscord> <sOkam!> Why is the `JsonNode` acyclic?‚ÜµOr, more broadly, what's the practical use of making something acyclic?
[15:16:20] <FromDiscord> <Rika> You can use ARC instead of ORC
[15:17:03] <FromDiscord> <haxscramper> I think even ORC does codegen a little differently for acyclic types
[15:29:09] <FromDiscord> <fumamatar> sent a code paste, see https://play.nim-lang.org/#ix=3JK8
[15:29:28] <FromDiscord> <fumamatar> (edit) "https://play.nim-lang.org/#ix=3JK8" => "https://play.nim-lang.org/#ix=3JK9"
[15:30:00] <FromDiscord> <Rika> You can dereference a ref with [{
[15:30:01] <FromDiscord> <Rika> Ugh
[15:30:03] <FromDiscord> <Rika> []
[15:31:52] <FromDiscord> <fumamatar> Yes, but memcpy needs a ref or a ptr so I can not just dereference it when i safe the byte buffer
[15:32:18] <FromDiscord> <fumamatar> `    copyMem(buf, addr packet.header, sizeof(UDP_Header))`
[15:34:27] <FromDiscord> <fumamatar> maybe i need to serialize the header itself into bytes as well ..
[15:45:10] <FromDiscord> <fumamatar> so apparently i want to turn a ref into a ptr..?
[15:45:32] <FromDiscord> <Rika> You don‚Äôt need to
[15:45:41] <FromDiscord> <Rika> The ref is a ‚Äúptr‚Äù
[15:47:14] <FromDiscord> <fumamatar> I thought so. But then I dont understand how the payload (which is a ptr) is resolved to the actual bytes, while the header (which is a ref) is not and writes the address instead of the bytes to my buffer
[15:49:27] <FromDiscord> <sOkam!> I'm trying to understand the structure of what `parseJson( .. )` is doing‚ÜµHow can I output the `JsonNode` data that from that function into a text file for reading?‚ÜµI tried writeFile, but it didn't like it not being a string https://media.discordapp.net/attachments/371759389889003532/925362306521657344/unknown.png
[15:52:21] <FromDiscord> <sOkam!> ~deleted~‚Üµnvm, I solved it with bash `>` üôÇ
[15:52:32] <FromDiscord> <Rika> You‚Äôre getting the address of the ref, think about what getting the address of a pointer is üòõ
[15:52:32] <FromDiscord> <sOkam!> (edit) "~deleted~‚Üµnvm," => "~~deleted~~‚Üµnvm,"
[15:52:42] <FromDiscord> <Rika> A pointer to a pointer, so not what you want
[15:53:12] <FromDiscord> <fumamatar> oh yea right
[15:54:17] <NimEventer> New Nimble package! py2nim - Py2Nim is a tool to translate Python code to Nim. The output is human-readable Nim code, meant to be tweaked by hand after the translation process., see https://github.com/Niminem/Py2Nim
[15:54:27] <FromDiscord> <fumamatar> sent a code paste, see https://play.nim-lang.org/#ix=3JKh
[16:02:01] <FromDiscord> <Rika> You could probably cast to a `pointer` ‚Äúsafely‚Äù in this case
[16:02:42] *** Joins: beshr (~beshr@user/beshr)
[16:02:47] *** Joins: neceve (~quassel@2.26.93.228)
[16:06:33] <FromDiscord> <fumamatar> That is possible, but leads to the same output as using addr
[16:06:43] <FromDiscord> <fumamatar> somehow
[16:07:04] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3JKi
[16:08:33] <FromDiscord> <fumamatar> I think A is an array, and B is a set?
[16:09:58] <FromDiscord> <Rika> Yes
[16:10:48] <FromDiscord> <sOkam!> is it the same if the contents of 1 and 2 are strings?
[16:14:45] <FromDiscord> <fumamatar> Not really, they are different types with different characteristics
[16:15:04] *** Joins: rockcavera (~rc@192.12.112.193)
[16:15:04] *** Quits: rockcavera (~rc@192.12.112.193) (Changing host)
[16:15:04] *** Joins: rockcavera (~rc@user/rockcavera)
[16:15:26] <FromDiscord> <sOkam!> Yeah, thingB is an error if 1or2 are strings https://media.discordapp.net/attachments/371759389889003532/925368846347554836/unknown.png
[16:16:52] <FromDiscord> <sOkam!> In that case, what's the difference between `[]` and `{}` in the context of a `JsonNode`?
[16:18:10] <FromDiscord> <sOkam!> Is {} just a hierarchy separator, and [] an array syntax? ü§î
[16:21:56] <FromDiscord> <fumamatar> im not familiar with the Json library, can you share some code?
[16:27:06] <FromDiscord> <Rika> {} is afaik like many []
[16:27:23] <FromDiscord> <Rika> So [][][] -> {,,}
[16:30:03] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[16:31:42] *** Joins: neurocyte0132889 (~neurocyte@IP-212232085135.dynamic.medianet-world.de)
[16:31:42] *** Quits: neurocyte0132889 (~neurocyte@IP-212232085135.dynamic.medianet-world.de) (Changing host)
[16:31:42] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[16:32:22] <FromDiscord> <sOkam!> In reply to @fumamatar "im not familiar with": about what exactly? a json file, or do you mean something else?
[16:32:52] <FromDiscord> <fumamatar> i mean nim's JsonNode class
[16:34:47] <FromDiscord> <sOkam!> In reply to @fumamatar "i mean nim's JsonNode": https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/json.nim#L185
[16:38:04] <FromDiscord> <sOkam!> Found this, which I think explains it https://media.discordapp.net/attachments/371759389889003532/925374540345929759/unknown.png
[16:39:48] <FromDiscord> <Rika> Not that
[16:40:10] <FromDiscord> <Rika> https://nim-lang.org/docs/json.html#overview-handling-optional-keys
[16:40:13] <FromDiscord> <Rika> Seems to be this
[16:40:46] *** Quits: neceve (~quassel@2.26.93.228) (Read error: Connection reset by peer)
[16:41:32] <FromDiscord> <Rika> Additionally there is a var arg version of {} but none for [] (because {} is get or default and the latter is just get)
[16:44:31] <FromDiscord> <sOkam!> Oh, I should definitely start by reading that page üôà ‚ÜµMe dummy üå±
[16:46:49] <FromDiscord> <Rika> Lol you‚Äôll get the habit of it soon
[17:17:02] <FromDiscord> <retkid> how does -d:danger deal with pointers?
[17:17:41] <FromDiscord> <retkid> i keep getting out of memory even though i calculate the size of the pointers correctly
[17:18:05] <FromDiscord> <retkid> unless every entry in an ordered list is greater than 16 bytes per entry
[17:18:06] <FromDiscord> <Solitude> it doesnt do anything with pointers
[17:18:18] <FromDiscord> <retkid> so what does -d:release do with pointers?
[17:18:26] <FromDiscord> <Solitude> nothing
[17:18:30] <FromDiscord> <retkid> that is untru
[17:18:31] <FromDiscord> <retkid> (edit) "untru" => "untrue"
[17:18:35] <FromDiscord> <Solitude> okay
[17:19:26] <FromDiscord> <retkid> unless you're on the technicality "Well it doesn't TECHNICALLY do anything to pointers but actually it just changes thew way garbage collection is done which affects pointers"
[17:19:57] <FromDiscord> <retkid> but, whenever i compile with -d:danger it does the out of memory defect eventually
[17:20:50] <FromDiscord> <retkid> it has something to do with the size of the pointer, however, it shouldn't
[17:21:16] <FromDiscord> <retkid> it doesnt matter what size i enter when i dont compile with -d:danger but when i do, it does
[17:21:44] <FromDiscord> <retkid> so i assume performance and takes cycles to save me and change the size, when danger does not
[17:28:25] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[17:35:15] *** Joins: badsektor (~badsektor@user/badsektor)
[18:08:02] *** Joins: arkurious (~arkurious@user/arkurious)
[18:15:22] <FromDiscord> <planetis> does status have any library for string manipulation ?
[18:15:29] <FromDiscord> <planetis> a better strutils for example
[18:35:23] <FromDiscord> <Shiba> so how do i tell nim to noy use stdlib_system.nim
[18:35:29] <FromDiscord> <Shiba> (edit) "noy" => "not"
[18:35:47] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[18:53:38] *** Joins: xet7 (~xet7@user/xet7)
[19:04:40] <FromDiscord> <Solitude> In reply to @retkid "unless you're on the": sorry, telepathy machine broke
[19:10:03] <FromDiscord> <konsumlamm> In reply to @Shiba "so how do i": `import pkg/system`?
[19:10:25] <FromDiscord> <konsumlamm> or just don't call your module `system`
[19:18:26] <FromDiscord> <Shiba> In reply to @konsumlamm "or just don't call": i didn't
[19:18:52] <FromDiscord> <Yardanico> In reply to @Shiba "so how do i": You don't
[19:19:02] <FromDiscord> <Yardanico> system is always explicitly imported by all Nim modules
[19:19:12] <FromDiscord> <Yardanico> Also you probably meant stdlib_system.c
[19:19:22] <FromDiscord> <Yardanico> because there's no .nim with that name
[19:23:54] <FromDiscord> <sOkam!> If I want to store something in an object like `classSizes.size.NAME`, expecting that call to output a value... is there a better way to do it than Tables?
[19:30:48] <FromDiscord> <Shiba> why it's says 10719 lines of code compiled , that aloot ,even my .nim fille is empty
[19:31:09] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[19:31:36] <FromDiscord> <Shiba> like i know there are necessary libaries for compiling but 10k is ...
[19:31:53] <FromDiscord> <Shiba> (edit) "fille" => "file"
[19:32:53] <FromDiscord> <Solitude> because it processed 10k lines of code. is that a problem?
[19:33:37] <FromDiscord> <Solitude> its nim runtime thats going to be included in every program
[19:34:28] <vicecea> hi, I'm wondering what would be the simplest way to do the following: I'm looking for a template/macro, e.g. with an identifier of `vecho`, which can be called passing another identifier, e.g. `vecho(my_variable)` and which will effectively do `echo "my_variable: " & my_variable` - can this be done with a template or would I need a macro for that? - thanks for pointers
[19:35:40] <FromDiscord> <Solitude> you would need a macro to extract identifier's name, pretty sure
[19:36:15] <vicecea> Solitude: thanks! I'll look into macros then
[19:38:30] <FromDiscord> <geekrelief> In reply to @vicecea "<@104136074569211904>: thanks! I'll look": https://play.nim-lang.org/#ix=3JMw
[19:39:35] <vicecea> geekrelief: beautiful! thank you!
[19:39:45] <FromDiscord> <Patitotective> I'm new to _Nim_ and I'm looking for a page with all `array` procedures. Is there an API Reference for _Nim_?‚ÜµThanks üôÉ
[19:40:26] <FromDiscord> <Solitude> In reply to @Patitotective "I'm new to _Nim_": https://nim-lang.org/docs/theindex.html
[19:40:37] <FromDiscord> <Solitude> search for array and openArray
[19:43:10] <FromDiscord> <Patitotective> is there a `count` procedure for arrays?
[19:46:21] <FromDiscord> <Patitotective> nvm
[19:50:32] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 240 seconds)
[19:52:26] <FromDiscord> <Hamid_Bluri> In reply to @Patitotective "is there a `count`": there is a count `proc` and a `countIt` template in `std/sequtils`‚Üµhttps://nim-lang.org/docs/sequtils.html#countIt.t%2Cuntyped%2Cuntyped‚Üµ‚Üµbut I don't know what you want exacly
[19:57:11] <FromDiscord> <Patitotective> In reply to @hamidb80 "there is a count": `count` works üôÉ  thanks
[20:05:17] <FromDiscord> <Patitotective> can i delete a char at a specific index in a string?
[20:08:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429)
[20:12:25] *** Joins: xet7 (~xet7@user/xet7)
[20:15:04] <FromDiscord> <Solitude> In reply to @Patitotective "can i delete a": https://nim-lang.org/docs/strutils.html#delete%2Cstring%2CSlice%5Bint%5D we have this
[20:15:33] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[20:15:48] *** Quits: xet7 (~xet7@user/xet7) (Client Quit)
[20:16:53] *** Joins: xet7 (~xet7@user/xet7)
[20:19:22] *** Joins: rockcavera (~rc@192.12.112.193)
[20:19:22] *** Quits: rockcavera (~rc@192.12.112.193) (Changing host)
[20:19:22] *** Joins: rockcavera (~rc@user/rockcavera)
[20:25:34] <FromDiscord> <Shiba> In reply to @Yardanico "Also you probably meant":  https://media.discordapp.net/attachments/371759389889003532/925431796462673990/Capture.PNG
[20:26:06] <FromDiscord> <Yardanico> it changes the name, in reality it's named system.nim
[20:26:25] <FromDiscord> <Yardanico> And again, this is required, it's just that Nim explicitly lists it
[20:27:18] <FromDiscord> <Shiba> i saw that it's doesnt show in other nim tetorals when they compile
[20:27:38] <FromDiscord> <Shiba> (edit) "doesnt" => "does not"
[20:27:46] <FromDiscord> <Shiba> (edit) "tetorals" => "tetorials"
[20:27:56] <FromDiscord> <Yardanico> maybe because they're older
[20:28:04] <FromDiscord> <Shiba> and there compile line is under 8000
[20:28:07] <FromDiscord> <Yardanico> this is completely normal, why are you so concerned about it?
[20:28:11] <FromDiscord> <Shiba> (edit) "line" => "lines"
[20:28:25] <FromDiscord> <Yardanico> In reply to @Shiba "and there compile lines": Nim grows with time, again, why are you so concerned with this?
[20:28:32] <FromDiscord> <Shiba> trying iam trying to find the speed the process
[20:28:37] <FromDiscord> <Solitude> In reply to @Shiba "i saw that it's": it doesnt show because it doesnt get recompiled
[20:28:47] <FromDiscord> <Shiba> (edit) 04removed "find the"
[20:29:12] <FromDiscord> <Yardanico> In reply to @Shiba "trying iam trying to": That won't help much
[20:29:24] <FromDiscord> <Yardanico> We already explained all possible ways to speed up compilation to you
[20:31:02] <NimEventer> New thread by Vitreo12: Bug with peekableOutputStream?, see https://forum.nim-lang.org/t/8749
[20:33:38] <FromDiscord> <Yardanico> You just have to accept the fact that with most compiled languages you have compilation and runtime as separate parts, and compile time is important, but less important than runtime performance
[20:34:23] <FromDiscord> <Yardanico> In interpreted languages there's no full separate compilation process - the interpreter might parse code into bytecode, but that's about it, then the interpreter just runs the bytecode
[20:35:08] <FromDiscord> <Rika> An empty C program also has a runtime that it links to
[20:36:30] <FromDiscord> <Yardanico> Also, with compiled languages you don't need to recompile as often because most compiled languages are statically typed, so that already prevents a lot of time spent debugging interpreted programs (I know that some interpreted languages are statically typed, but most of them aren't)
[20:36:44] <FromDiscord> <Yardanico> For basic error checking most editors already have Nim plugins that do that for you
[20:37:21] <FromDiscord> <Yardanico> You can also use "nim check" from the command line manually to check if you Nim file has any errors
[20:37:37] <FromDiscord> <Shiba> how i disbale the embedded debuger
[20:38:02] <FromDiscord> <Yardanico> it's not enabled
[20:38:41] <FromDiscord> <Yardanico> are you just reading random articles about Nim trying to disable everything? As I said, we already recommended a lot of ways you can improve compile times, but there's still a limit to what you can so to speed up compilation
[20:39:26] <FromDiscord> <Shiba> üò¢
[20:39:40] <FromDiscord> <sOkam!> Is Niminem, the creator of Py2nim, in here?
[20:40:52] <FromDiscord> <Shiba> In reply to @Yardanico "are you just reading": No? https://media.discordapp.net/attachments/371759389889003532/925435645617381446/Capture.PNG
[20:41:07] <FromDiscord> <Yardanico> it's disabled by default
[20:41:12] <FromDiscord> <Shiba> ah ok
[20:41:18] <FromDiscord> <Yardanico> Stop reading outdated info PLEASE
[20:41:34] <FromDiscord> <Shiba> it's not me the guide is outdated
[20:41:42] <FromDiscord> <Yardanico> there's no magical switch that'll make your code compile 10x faster
[20:42:26] <FromDiscord> <Shiba> i will try to be patient
[20:44:38] <FromDiscord> <Yardanico> really your best bet is to buy an SSD, it can lead to a faster compilation speed without you needing to change the CPU/mobo
[20:45:02] <FromDiscord> <Yardanico> HDDs are slow, that's a fact, especially for development because there's a lot of files being read and written
[20:45:15] <nrds> <06Prestige99> Where was that image from btw @Shiba?
[20:45:30] <FromDiscord> <Yardanico> If you have enough RAM you can try compiling in /tmp assuming it's tmpfs
[20:45:51] <FromDiscord> <Shiba> In reply to @nrds "<Prestige> Where was that": the official nim compile guide
[20:45:54] <FromDiscord> <Yardanico> In reply to @Shiba "No?": Also yeah, forgot to mention
[20:46:04] <FromDiscord> <Shiba> (edit) "compile" => "compiler"
[20:46:10] <FromDiscord> <Yardanico> As I've said before most compiled languages have two separate stages
[20:46:18] <FromDiscord> <Shiba> In reply to @Yardanico "If you have enough": HOW
[20:46:21] <FromDiscord> <Yardanico> When you compile the program, and when you run it
[20:46:39] <FromDiscord> <Yardanico> In reply to @Shiba "No?": This advice was for reducing runtime of the program
[20:46:44] <FromDiscord> <Yardanico> Not compilation time
[20:47:23] <nrds> <06Prestige99> https://nim-lang.org/docs/nimc.html#optimizing-for-nim interesting
[20:47:55] <FromDiscord> <Yardanico> In reply to @Shiba "HOW": copy your code to some folder in /tmp, set the nimcache so it's also some folder in tmp, and maybe even copy the nim distribution to tmp and use it from there if you have enough RAM
[20:48:07] <FromDiscord> <Yardanico> But an easier way is to just buy an ssd
[20:48:49] <FromDiscord> <Yardanico> small capacity SSDs are really really cheap nowadays, and 60GB will be more than enough for typical programming tasks
[20:49:10] <nrds> <06Prestige99> Going from HHD -> SSD was such a big difference in general for me. Should've done it much earlier
[20:49:15] <nrds> <06Prestige99> HDD*
[20:49:48] <FromDiscord> <Shiba> In reply to @Yardanico "copy your code to": does it's get erased after i turn off my laptop
[20:49:53] <FromDiscord> <Yardanico> yes
[20:50:16] <FromDiscord> <Yardanico> that's why this is a big hack and you'll constantly need to copy your work back to the hdd to save it
[20:58:13] <FromDiscord> <0ffh> sent a long message, see http://ix.io/3JNX
[20:58:24] <FromDiscord> <0ffh> (edit) "http://ix.io/3JNX" => "http://ix.io/3JNY"
[20:58:42] <FromDiscord> <0ffh> (edit) "long message," => "code paste," | "https://paste.rs/lFu" => "https://play.nim-lang.org/#ix=3JNZ"
[20:59:52] <FromDiscord> <haxscramper> It fails with `hash()` error?
[20:59:58] <FromDiscord> <haxscramper> Missing overload for `hash` or `==`?
[21:00:20] <FromDiscord> <haxscramper> For custom types you need to implement a hash and equality compare function so you can use them in tables
[21:02:28] <FromDiscord> <0ffh> Good idea, but that's not it.‚ÜµI get hints about .sideEffect [] and raiseKeyError but I can't interpret them.
[21:04:00] <FromDiscord> <0ffh> Maybe table access on custom type have any side effects that are not present for string tables?
[21:04:08] <FromDiscord> <0ffh> (edit) "have" => "has"
[21:04:17] <FromDiscord> <0ffh> (edit) "type" => "types"
[21:05:22] <FromDiscord> <Rika> Can you give the full error in a paste
[21:06:02] <FromDiscord> <0ffh> sent a code paste, see https://play.nim-lang.org/#ix=3JO9
[21:12:50] <FromDiscord> <Yardanico> In reply to @0ffh "Why does this work": That's because you define an anonymous func for sorting, and [] has a side effect
[21:12:57] <FromDiscord> <Yardanico> Try to rename func to proc here
[21:13:17] <FromDiscord> <Yardanico> func in Nim is a proc with {.noSideEffect.}
[21:14:11] <FromDiscord> <0ffh> In reply to @Yardanico "That's because you define": That's it, how stupid of me, it works now!
[21:14:15] <FromDiscord> <0ffh> Thank you!
[21:14:28] <FromDiscord> <Solitude> In reply to @Yardanico "That's because you define": what
[21:14:43] <FromDiscord> <Yardanico> In reply to @0ffh "Yeah, but it's loooong": @Solitude
[21:15:05] <FromDiscord> <Yardanico> His [] calls raiseKeyError that accesses a global variable
[21:15:11] <FromDiscord> <Yardanico> (might call)
[21:15:23] <FromDiscord> <Yardanico> (edit) "(might" => "(might"
[21:15:35] <FromDiscord> <Solitude> i grepped the stdlib and i dont see that variable
[21:15:55] <FromDiscord> <Yardanico> it's in his code
[21:15:57] <FromDiscord> <Yardanico> Not stdlib
[21:16:38] <FromDiscord> <Solitude> your `$` is not pure i guess
[21:16:54] <FromDiscord> <Rika> In reply to @0ffh "Why does this work": Here says func
[21:17:26] <FromDiscord> <Rika> I'm telling solitude btw
[21:17:46] <FromDiscord> <0ffh> sent a code paste, see https://play.nim-lang.org/#ix=3JOh
[21:17:57] <FromDiscord> <Solitude> yuck
[21:18:01] <FromDiscord> <Rika> Is it not a cost?
[21:18:04] <FromDiscord> <Rika> Const
[21:18:12] <FromDiscord> <0ffh> (edit) "https://play.nim-lang.org/#ix=3JOh" => "https://paste.rs/G0l"
[21:20:44] <FromDiscord> <Yardanico> In reply to @Solitude "your `$` is not": Yeah my mistake, misread the trace
[21:20:51] <FromDiscord> <Yardanico> It's good that we have it now at least :)
[21:20:52] <FromDiscord> <0ffh> sent a code paste, see https://play.nim-lang.org/#ix=3JOl
[21:21:12] <FromDiscord> <Yardanico> In the past the compiler didn't tell you why your code isn't pure
[21:21:18] <FromDiscord> <0ffh> (edit) "https://play.nim-lang.org/#ix=3JOl" => "https://play.nim-lang.org/#ix=3JOm"
[21:21:18] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[21:21:42] <FromDiscord> <Yardanico> In reply to @0ffh "What can I do,": well it's not a big deal as you can just continue using proc
[21:21:47] <FromDiscord> <no name fits> In reply to @Yardanico "If you have enough": wait how does that work?
[21:22:02] <FromDiscord> <Yardanico> In reply to @no name fits "wait how does that": he has an HDD and wants faster compile times
[21:22:08] <FromDiscord> <0ffh> In reply to @Yardanico "well it's not a": Yeah, I totally overlooked that was a func
[21:22:11] <FromDiscord> <no name fits> because I have plenty of RAM
[21:22:20] <FromDiscord> <Yardanico> So one big hack is to compile everything in the ram
[21:22:27] <FromDiscord> <Yardanico> if you have an SSD it won't change much
[21:23:30] <FromDiscord> <no name fits> I didn't know that was an option
[21:23:35] <FromDiscord> <no name fits> Also I have SSD so...
[21:24:11] <FromDiscord> <Rika> There's very minimal benefit if you already use an ssd
[21:24:32] <FromDiscord> <Yardanico> yeah exactly
[21:24:48] <FromDiscord> <no name fits> I don't have any issues with compile times using Nim though
[21:25:05] <FromDiscord> <Yardanico> Shiba is just searching for every way he can speed up the compilation somewhat, so I thought about tmpfs
[22:02:41] <FromDiscord> <geekrelief> is @Shiba using tcc? That's been the biggest speed up for me.
[22:04:17] <FromDiscord> <Shiba> Error: command missing
[22:04:19] <FromDiscord> <Shiba> sent a code paste, see https://play.nim-lang.org/#ix=3JPb
[22:04:30] <FromDiscord> <geekrelief> you need to have the Tiny C Compiler installed
[22:04:43] <FromDiscord> <Shiba> (edit) "https://play.nim-lang.org/#ix=3JPb" => "https://play.nim-lang.org/#ix=3JPc"
[22:04:52] <FromDiscord> <Shiba> do i need to also provide a path to tcc
[22:04:55] <FromDiscord> <geekrelief> https://github.com/TinyCC/tinycc
[22:05:04] <FromDiscord> <geekrelief> it should be in your path
[22:05:10] <FromDiscord> <geekrelief> once you install it
[22:05:27] <FromDiscord> <Shiba> i did
[22:06:35] <FromDiscord> <geekrelief> I don't have enough on to help you debug that. If tcc is in your PATH, nim should be able to find it
[22:09:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:12:52] <FromDiscord> <Shiba> so
[22:22:02] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 240 seconds)
[22:38:59] <FromDiscord> <Shiba> so i created a ram disck naand i put nim , my projects on it and nothing changed still 4s
[22:39:08] <FromDiscord> <Shiba> (edit) "disck" => "disk"
[22:39:13] <FromDiscord> <Shiba> (edit) "naand" => "and"
[22:39:21] <FromDiscord> <Shiba> (edit) "," => " and"
[22:39:42] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (Remote host closed the connection)
[22:39:55] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[22:40:51] <FromDiscord> <Solitude> reading/writing files takes tiny fraction of entire compilation, ofc it doesnt yield any meaningful speedups
[22:56:51] <FromDiscord> <hmmm> shouldn't nim compile speed be something like in the upper 5% of compiled langs already? How much speed do you need more my gud man, are you trying to compile skynet or smth
[22:57:52] <FromDiscord> <Shiba> do you think 5 seconds is fast for testing
[22:57:57] <FromDiscord> <hmmm> I mean when I press F7 I get dot dot dot bam finished
[22:58:05] <FromDiscord> <hmmm> its like 2 secs
[23:00:29] <FromDiscord> <geekrelief> In reply to @Shiba "do you think 5": you should really figure out why tcc isn't working for you
[23:01:12] <FromDiscord> <geekrelief> it's must faster for iteration
[23:01:16] <FromDiscord> <geekrelief> (edit) "must" => "much"
[23:01:52] <FromDiscord> <Shiba> In reply to @Elegantbeef "On windows i think": a guide?
[23:02:20] <FromDiscord> <Shiba> (edit) "In reply to @Elegantbeef "On windows i think": a guide? ... " 03added "(instrunction to install and setup)"
[23:02:34] <FromDiscord> <geekrelief> @Shiba Are you on windows?
[23:02:39] <FromDiscord> <Shiba> yes
[23:02:46] <FromDiscord> <geekrelief> there's a windows folder for tcc
[23:02:51] <FromDiscord> <geekrelief> the instructions are in there
[23:03:17] <FromDiscord> <geekrelief> https://github.com/TinyCC/tinycc/tree/mob/win32
[23:03:49] *** Parts: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com) (WeeChat 3.4)
[23:04:05] <FromDiscord> <Shiba> do you mean to build it
[23:06:34] <FromDiscord> <hmmm> today I needed to call one line of a python lib for a test and I was staring at my screen for a good 10 seconds, thought I hit some weird while true loop but no it was working as intended lol. I'd say 5 secs is not so bad. What langs do consistently better than that?
[23:06:54] <FromDiscord> <geekrelief> If you downloaded the binary I guess that would work too.  I'm don't know why nim can find tcc if it's in your path.  I have tcc built from the repo
[23:07:50] <FromDiscord> <geekrelief> In reply to @hmmm "today I needed to": 5 secs is ok if you have a big project, but for something under 100K lines I expect faster for iteration
[23:08:04] <FromDiscord> <geekrelief> I get subsecond compile times with tcc
[23:08:20] <FromDiscord> <hmmm> woa thats fast
[23:08:31] <FromDiscord> <hmmm> shiba get tcc my man
[23:08:47] <FromDiscord> <geekrelief> tm-nim https://media.discordapp.net/attachments/371759389889003532/925472868962287667/Umtezvizeu-1.mp4
[23:12:06] <FromDiscord> <geekrelief> if this was gcc it'd be about 4 seconds, vcc is way longer.  I heard about mold recently and I wonder if I should give clang a try
[23:12:21] <FromDiscord> <geekrelief> oh I forgot mold doesn't support windows yet
[23:13:16] <FromDiscord> <geekrelief> maybe it's time for me to upgrade to windows 11 and install wsl üòÑ
[23:14:03] <FromDiscord> <Shiba> so ican compile c code with tcc but nim still can't find it
[23:15:05] <FromDiscord> <hmmm> people can actually install w11? I have like a big banner saying "dude get ready we preparin w11 as we speak" since 6 months
[23:15:25] <FromDiscord> <Yardanico> In reply to @geekrelief "if this was gcc": mold won't help you
[23:15:35] <FromDiscord> <Yardanico> It's aimed at bigger applications that take long to link
[23:15:37] <FromDiscord> <Yardanico> Like chromium
[23:15:40] <FromDiscord> <hmmm> I actually look forward to w11 because apparently you can get the new terminal as default
[23:15:55] <FromDiscord> <Yardanico> I've tested it and the difference was negligible
[23:15:57] <FromDiscord> <geekrelief> In reply to @Yardanico "It's aimed at bigger": oh yeah good point. those are huge üôÇ
[23:16:20] <FromDiscord> <Yardanico> In reply to @hmmm "people can actually install": ??? yes, it's already out
[23:17:33] <FromDiscord> <geekrelief> I've been holding off on installing.  Got a fresh ssd for it, but I hate having to reinstall everything.
[23:20:25] <FromDiscord> <geekrelief> In reply to @Shiba "so ican compile c": Do you have Visual Studio installed? Can you compile with `--cc:vcc`?
[23:43:23] <FromDiscord> <Shiba> In reply to @geekrelief "Do you have Visual": no , and i cant think of an ide running on a pentium
[23:44:02] <FromDiscord> <Shiba> the error is the same whatever i put as an argument
[23:45:03] <FromDiscord> <Shiba> (edit) "the error is the same whatever i put as an argument" => "sent a code paste, see https://play.nim-lang.org/#ix=3JPR"
