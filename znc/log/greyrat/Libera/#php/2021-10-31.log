[00:29:28] *** Quits: SpeakSpanishBoy (~SpeakSpan@user/speakspanishboy) (Quit: Me las piro vampiro ^o^)
[00:30:25] *** Quits: keine (~textual@108.61.188.99) (Remote host closed the connection)
[00:36:46] *** Quits: luva (~luva@5.180.62.231) (Ping timeout: 260 seconds)
[00:39:37] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[00:39:50] *** Joins: luva (~luva@5.180.62.228)
[00:41:29] *** Quits: bobdobbs (~user@14.137.23.74) (Remote host closed the connection)
[00:43:51] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 245 seconds)
[00:49:06] *** Quits: Memory (sid459764@user/memory) ()
[01:05:38] *** Quits: guido (~guido@host-79-40-188-193.business.telecomitalia.it) (Quit: WeeChat 3.3)
[01:12:23] *** Quits: fluffywolf (~furrywolf@172.58.44.80) (Ping timeout: 264 seconds)
[01:21:24] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[01:29:08] *** Joins: mgocobachi (~m@ancrae.com)
[01:39:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 265 seconds)
[01:44:11] *** Quits: luva (~luva@5.180.62.228) (Ping timeout: 264 seconds)
[02:07:27] *** Joins: luva (~luva@5.180.62.231)
[02:29:16] *** Joins: freeman_h (~freeman_h@94.5.86.162)
[02:37:41] <freeman_h> Hi can someone help me out here please. I have something like to do bulk inserts https://3v4l.org/KOEQq this works if the number of keys are the same in the multidimensional array however sometimes the keys are not the same has show in the link line 35 please what is the best way in handling this usecase? thak you
[02:40:42] <TinoDidriksen> Add another level of indirection. As in, add a loop instead of assuming the first array has the keys.
[02:43:04] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:377d:5cce:6c85:1730) (Quit: ZNC 1.8.2 - https://znc.in)
[02:43:12] <lembron> freeman_h Q is what you expect to happen with the fields instead?
[02:43:17] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:c9c9:9450:c028:8dd0)
[02:43:23] <freeman_h> TinoDidriksen, i think i get what you mean. with this way i will have "INSERT INTO table (colum_2,colum_3) VALUES (?,?); INSERT INTO table (colum_2,colum_3) VALUES (?,?); INSERT INTO table (colum_2,colum_3,colum_4) VALUES (?,?,?)" basically the insert into table will be repeated?
[02:43:37] <TinoDidriksen> Yes
[02:43:49] <freeman_h> TinoDidriksen, okay :)
[02:44:33] <TinoDidriksen> If you're in a transaction that's as fast as a combined insert. You can also do ?s much easier with str_repeat()
[02:56:03] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[02:56:17] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Remote host closed the connection)
[02:56:46] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[03:01:14] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 246 seconds)
[03:09:43] *** Joins: WishBoy (~WishBoy@user/wishboy)
[03:13:38] <freeman_h> TinoDidriksen, " You can also do ?s much easier with str_repeat()" dont understand this
[03:15:27] <__adrian> freeman_h: you should always prepare statements and pass data via parameters. DO NOT put $variables into your sql.
[03:15:33] <__adrian> !+pdo_mysql prepare
[03:15:58] <__adrian> :/ php-bot is gone
[03:16:00] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[03:16:11] <freeman_h> __adrian, I am
[03:16:24] <lembron> not rly
[03:17:00] <__adrian> was looking at  implode(","$datafields)
[03:17:41] <__adrian> yes, you can't parameterize column names. they need to be whitelisted
[03:19:04] <lembron> eitherhow, this is not a php thing - its a sql thing - either you decide what to put in the "missing" fields as you HAVE to put smth there, or split the series based on whats in it maybe, or if above is true ("doesnt matter in transactions" just go with a ton of inserts)
[03:19:14] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[03:19:28] <freeman_h> if anyone try to put a column name which is not in the table it will throw an sql error
[03:19:47] <__adrian> freeman_h: what you're saying is that you have an SQLi problem
[03:20:05] <freeman_h> I am not tho
[03:20:16] <freeman_h> not sure when I said this
[03:20:22] <__adrian> yes, you are. if i can choose a value that makes malformed sql, that's sql injection.
[03:20:34] <lembron> only problem with this (say "nulling not-given values") kinda becomes that youd have to run the whole list twice as you dont know the field-combinations on the start... - and its likely very wrong in what data youd end up with...
[03:20:37] <__adrian> whether it's an attack or a mistake is not relevant.
[03:20:50] <freeman_h> I have a validation already before this method gets all
[03:20:52] <freeman_h> call*
[03:20:56] <freeman_h> so dont worry about that
[03:21:07] <__adrian> freeman_h: you're already whitelisting the column names?
[03:21:15] <freeman_h> yes
[03:21:26] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[03:21:39] <__adrian> then that's the place where you should also add the appropriate names/default values
[03:22:07] <__adrian> esp. with an insert, there's no case where you should have some fields missing or not
[03:22:18] <lembron> given name, age, city - if some elements have no city its rly just either a) "put in ""(empty) as city" - or b) cant use a bulk VALUES()...
[03:22:29] <__adrian> you know what you need to insert, and what fields have sensible defaults.
[03:22:32] <freeman_h> this method is only called by 1 thing
[03:22:35] <freeman_h> which is an api
[03:22:43] <freeman_h> not else will call this method
[03:22:43] <__adrian> so just use the same hardcoded sql string every time.
[03:22:49] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[03:22:58] <__adrian> "freeman_h> not else will call this method"  this is not relevant at all
[03:23:05] <Blondie101010> freeman_h: being an API call basically means it's more accessible than you think
[03:23:11] <freeman_h> anyways your questions
[03:23:18] <freeman_h> does not resolve my issue :)
[03:23:32] <__adrian> yes they do. re read.
[03:23:38] <__adrian> what i'm saying is, if you're already validating those arrays, then there's no reason they'd ahve different keys.
[03:23:49] <__adrian> if a value is missing, but has a default, add the default.
[03:24:08] <lembron> variant a) of my post - validator sees missing city, puts a city="" field in it
[03:24:08] <__adrian> THEN you have the same structure for every array and use the same sql for every insert.
[03:24:53] <__adrian> const INSERT = "INSERT INTO table (a,b,c) VALUES (?,?,?)";
[03:26:29] <__adrian> $insert = $db->prepare(INSERT); foreach ($normalized_data as $data) { $insert->execute($data); }
[03:31:17] <freeman_h> __adrian, a reason why i dont want to hard code the columns name is because
[03:31:50] <freeman_h> I have to ensure the array structure always in order to match it
[03:32:24] <freeman_h> its why i added a whitelist in place has long has those keys exist its good and it removes anything else thats works
[03:33:16] <__adrian> freeman_h> I have to ensure the array structure always in order to match it  // this is the correct (and easy) behavior
[03:33:36] <__adrian> "__adrian> [when you validate,] if a value is missing, but has a default, add the default."
[03:34:33] <freeman_h> __adrian, if a value is missing that column should not have been included in the first place
[03:34:42] <__adrian> no
[03:34:49] <freeman_h> no need to add default anything
[03:35:05] <__adrian> if a value is missing then there are two possibilities: (a) it has a valid default value  (b) it's an error
[03:35:17] <__adrian> if it has a valid default, add the default.
[03:35:25] <__adrian> if it does not, then it's an error; throw an exception.
[03:35:46] <__adrian> note this also removes the need for counting ? placeholders
[03:37:01] <freeman_h> __adrian, again i have a validation in place for this
[03:37:14] <Blondie101010> freeman_h:  what are you trying to do?  why do generic update queries?
[03:37:31] <Blondie101010> s/update/insert/
[03:37:40] <freeman_h> insert Blondie101010
[03:37:52] <freeman_h> __adrian, for your peace of mind. the validation looks like this https://kopy.io/oj6M7
[03:38:16] <freeman_h> when you call the api endpoint it does this soft validation
[03:39:03] <freeman_h> when it passes it then checks the whitelist which is basically the entity properties
[03:39:50] <__adrian> all those are "required." does this allow additional inputs, that are not validated?
[03:40:49] <freeman_h> __adrian, you missed the integer and part
[03:41:15] <__adrian> ?
[03:42:06] <freeman_h> __adrian, nothing :)
[03:42:26] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[03:42:44] <freeman_h> thought on this https://3v4l.org/XV3cE
[03:45:39] <__adrian> moment. brb
[03:48:36] <freeman_h> np
[03:52:46] *** Joins: luva6 (~luva@5.180.62.229)
[03:54:10] *** Quits: luva (~luva@5.180.62.231) (Ping timeout: 260 seconds)
[03:55:06] *** Joins: Sal` (~Sal@151.27.60.24)
[03:58:33] <Sal`> hey guys, i'm getting crazy on a login with a "Remember Me" checkbox on an mvc project. It has to be a forced login (first page to show) and not an icon clickable by user
[03:58:34] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[03:59:38] <freeman_h> Sal`, so you need to log in before you do anything?
[04:00:10] <Sal`> also, the login page has a php generated image as a captch, so there's another request to the server that makes the entire thing go in loop
[04:00:30] <freeman_h> Sal`, answer my question
[04:00:49] <Sal`> a normal login is not a problem, because i use a cookie to sto the login status
[04:00:56] <Sal`> freeman_h, yes
[04:00:57] <lembron> Sal` whats the relevance of the remember-me checkbox that you mention it in particular? :P
[04:01:20] <Sal`> lembron, that the login page gets skipped on the next access
[04:01:27] <lembron> all it "does" is expand the cookie/server-session-expire time...
[04:02:01] <Sal`> i find problems on the routing
[04:02:19] <lembron> checking if someone has a session and send him to the app, or not and send him to login shouldnt matter in the slightest about remember or not, all the same code
[04:02:30] <freeman_h> Sal`, read up on php session
[04:04:00] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[04:04:41] <Sal`> ok, I'll try to explain what i'm doing: 1. client asks for index - 2. server gets the request and first checks for logged user inside a jwt encoded cookie
[04:05:12] <Sal`> 3. if not login, the server ignores the routing and goes directly to the Login controller
[04:05:56] <freeman_h> PHP SESSION Sal`
[04:06:37] <Sal`> 4. client receives the login response and make a request for a captcha number - 5. the server receives the catpche request and sends back an image
[04:07:02] <Sal`> freeman_h, : I'm using the session to hold user information once logged in
[04:07:12] <freeman_h> yes
[04:07:15] <Sal`> for the login status, I'm using a cookie
[04:07:22] <freeman_h> when the are log in you can hold the info
[04:07:28] <freeman_h> when the log out
[04:07:33] <freeman_h> you destroy the session
[04:07:42] <freeman_h> to check if to show the login page or not
[04:07:44] <lembron> Sal` keep goin, 6...?
[04:07:50] <Sal`> yes, my probelm comes on the next requests
[04:07:55] <freeman_h> check if xyz exist in the session
[04:08:08] <freeman_h> if not show them login page else show them something else
[04:08:36] <__adrian> Sal`: if you're checking for a jwt to authenticate, then when someone authenticates you need to give them a jwt
[04:09:02] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[04:09:06] <Sal`> 6. user inserts his credentials and send them to the server - 7. server checks for username and password on the user table and returns true of false to the client
[04:09:40] <freeman_h> Sal`, not need to make your uni assessment long
[04:10:04] <freeman_h> instead of counting 1 - 10
[04:10:06] <Sal`> 8. if client receives false, it shows the user an error and stay on the login page, if it gets true, if forces a redirect to the root of the website to reenter it
[04:10:10] <freeman_h> show us what you have tried
[04:10:18] <freeman_h> so we can help you :)
[04:10:39] <Sal`> you mean the entire mvc? there are a lot of pieces involved
[04:10:45] <freeman_h> no
[04:10:51] <freeman_h> your login code
[04:13:29] <lembron> Sal` so where is your remember-me issue in this? - or maybe you can clearify "what doesnt work" or what you observe VS what you expect
[04:13:29] <freeman_h> Sal`, all you need to do is, when you check if the username and pass is correct. if it is correct you do something like $_SESSION['login'] = true;  in all your other pages which someone needs to login you can do something like
[04:13:47] <Sal`> its the flow
[04:13:52] <Sal`> i'm getting lost there
[04:14:00] <Sal`> on the next access
[04:14:02] <freeman_h> if( $_SESSION['login'] == true) { // you logged in} else { //show login page }
[04:14:19] <freeman_h> anyways __adrian did you have a look at the link?
[04:14:20] <__adrian> freeman_h: it doesn't sound like Sal` is using sessions for auth (are you?) sounds more like a JWT token.
[04:14:34] <__adrian> freeman_h: i did. what are you asking for thoughts on?
[04:14:46] <Sal`> freeman_h, yes, i know that, but where do i need to put it? before the routing, after, in the controller?
[04:15:07] <freeman_h> __adrian, I am going with that he first said "hey guys, i'm getting crazy on a login with a "Remember Me" checkbox on an mvc project. It has to be a forced login (first page to show) and not an icon clickable by user"
[04:16:09] <freeman_h> __adrian, what I was asking is thought on the approach
[04:17:00] <Sal`> I'm using jwt to keep login user ID and session to keep user name and variuos switches like: blocked, admin, etc etc
[04:17:58] <__adrian> Sal`: why are you using a jwt?
[04:18:29] <Sal`> so I can access the user id by js
[04:18:51] <Sal`> the login submit is sent by js
[04:18:57] <__adrian> ok. so who is checking the jwt? php or js?
[04:19:36] <Sal`> both
[04:19:58] <Sal`> hmmm, maybe I need to simplify it
[04:20:12] <Sal`> and start it all over
[04:20:14] <__adrian> its a bit unusual to use a jwt and a session for such similar purposes
[04:20:18] <Sal`> maybe using only sessions
[04:20:38] <__adrian> but in the end it sounds like you're just not updating the jwt after login
[04:20:40] *** Joins: pmercado (~pmercado@190.22.183.232)
[04:21:13] <Sal`> I know, even because on the php side, I have them both available, so I could just use one
[04:21:33] <Sal`> I think i need to restart :-(
[04:21:42] <__adrian> freeman_h: looks like the same general approach as before - which i've already given you feedback on
[04:21:44] <lembron> Sal` im kinda wondering if he ONLY ever gives the user the jwt, so its not so much a "Login" as to more a "authorize" call you currently do --- so for that to get a "remember me" you would need to set the user say a extra cookie that "triggers a auto-login when he comes back in 2 days"
[04:22:32] <Sal`> lembron, yep, thats the use
[04:22:38] <lembron> when you say "login" in here people think of "login in from one php request to the other" - but if you only ever do JWT after that php is kinda out of the picture
[04:23:30] <lembron> if "someone loading the page still has a valid JWT, but you send him to login anyways cause php doesnt care about it" that should be rather simple to fix
[04:24:09] <Sal`> i'm using a lot fo switches for that, but i'm only complicating the code
[04:24:17] <lembron> so you can use that jWT as the "magic relog me in cookie"
[04:24:38] <Sal`> I also have the captcha image request
[04:25:10] <lembron> if php can check if i have a valid JWT i shouldnt see any of this
[04:25:15] <Sal`> yes, jwt is only used to keep the user loged after days, week, or whatever
[04:25:55] <Sal`> lembron, the problem is that i'm getting lost in the flow
[04:26:43] <__adrian> Sal`: draw a diagram of each flow (separately)
[04:27:06] <__adrian> seems like you're confusing login and remember-me flows
[04:27:15] <__adrian> and php vs. js flows
[04:27:20] <__adrian> etc.
[04:27:22] <Sal`> :) you got it
[04:27:30] <Sal`> its a mess
[04:27:47] <__adrian> so step back and untangle it
[04:27:55] <__adrian> will make it easier
[04:28:04] <__adrian> bbl. grandbaby bedtime
[04:28:04] <Sal`> yes, that's what I'm going to do
[04:28:41] <Sal`> where would you put the login check? before routing or after the home controller?
[04:29:20] <Sal`> */after the/after in the
[04:30:32] <lembron> its kinda "both"
[04:30:41] <freeman_h> Sal`, lembron is right, not need to make it complex. If a person has log in before and you have the jwt token, if the come back days later, check if the token is correct and if it has expiry generate them a new one and then log them in. Dont think it needs to be this complicated
[04:31:51] <Sal`> so the checkLogin() function should first check the jwt token
[04:31:57] <lembron> youd check early, but may act on it later (as in one route the desicion is to deliver anyhow, while another route may check in itself that its admin, while also the router can "be told about it" - seen all of it and in the wildest mixes out in the wild :P
[04:32:28] <Sal`> :)
[04:32:54] <Sal`> ok, let me think on it again. I'll do some drawing on paper first
[04:32:57] <Sal`> thanks guys
[04:33:42] *** Quits: Sal` (~Sal@151.27.60.24) (Quit: Leaving)
[04:33:46] <freeman_h> has __adrian suggestion, do a flow diagram trust me, it helps
[04:34:53] *** Joins: ferdna (~ferdna@user/ferdna)
[04:36:01] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[04:40:53] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 264 seconds)
[04:42:05] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 260 seconds)
[04:57:38] *** Quits: luva6 (~luva@5.180.62.229) (Ping timeout: 260 seconds)
[04:58:23] *** Quits: genom (~g@37.214.51.176) (Remote host closed the connection)
[05:18:53] *** Quits: freeman_h (~freeman_h@94.5.86.162) (Quit: Leaving)
[05:20:44] *** Joins: luva6 (~luva@5.180.62.231)
[05:23:42] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[05:28:22] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[05:29:41] *** Quits: pmercado (~pmercado@190.22.183.232) (Ping timeout: 245 seconds)
[05:29:54] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[05:31:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:36:50] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[05:43:22] *** Joins: keypusher (keypusher@user/keypusher)
[05:55:17] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[06:00:06] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[06:04:15] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[06:14:16] *** Quits: luva6 (~luva@5.180.62.231) (Ping timeout: 245 seconds)
[06:22:24] *** Joins: The_Jag (~The_Jag@host-82-56-115-92.retail.telecomitalia.it)
[06:25:35] *** Quits: The_Jag_ (~The_Jag@host-79-32-14-38.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[06:31:15] *** Joins: luva6 (~luva@5.180.62.231)
[06:42:58] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[06:46:02] *** Joins: deksar (~deksar@user/deksar)
[06:47:03] *** Quits: deksar (~deksar@user/deksar) (Client Quit)
[06:47:30] *** Joins: deksar (~deksar@user/deksar)
[06:47:36] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 245 seconds)
[07:14:34] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[07:19:26] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[07:31:58] *** Joins: Rockwood (~Rocky@user/rocky)
[07:45:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:02:08] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:08:07] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:10:01] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[08:13:16] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:13:19] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[08:32:24] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[08:33:23] *** Quits: luva6 (~luva@5.180.62.231) (Ping timeout: 264 seconds)
[08:34:07] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[08:38:46] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[08:46:28] *** Joins: luva6 (~luva@5.180.62.229)
[09:01:34] *** Joins: stenno (~stenno@user/stenno)
[09:06:16] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:06:21] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[09:11:59] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[09:12:16] *** Joins: guido (~guido@host-95-234-249-204.retail.telecomitalia.it)
[09:13:20] *** Joins: RonWhoCares (~ronpi@dhcp-108-170-129-12.cable.user.start.ca)
[09:21:09] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[09:23:41] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:25:54] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[09:32:11] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:43:35] *** Quits: luva6 (~luva@5.180.62.229) (Ping timeout: 264 seconds)
[09:53:15] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[09:55:41] *** Joins: stenno (~stenno@user/stenno)
[09:57:21] *** Joins: luva6 (~luva@5.180.62.230)
[09:57:44] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 246 seconds)
[10:00:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[10:08:12] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:20:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[10:22:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:25:35] *** Joins: LucaTM (~LucaTM@user/lucatm)
[10:32:53] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:35:52] *** Joins: Forza (~Forza@user/forza)
[10:39:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[10:41:04] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[10:41:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:45:23] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 264 seconds)
[10:49:48] *** Joins: stenno (~stenno@user/stenno)
[10:53:42] *** Quits: luva6 (~luva@5.180.62.230) (Ping timeout: 260 seconds)
[10:54:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[10:58:41] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[11:00:56] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[11:08:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[11:12:53] *** Joins: luva6 (~luva@5.180.62.231)
[11:22:37] *** Joins: genom (~g@37.214.51.176)
[11:25:56] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[11:30:31] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Remote host closed the connection)
[11:31:01] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[11:31:04] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Read error: Connection reset by peer)
[11:31:33] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[11:33:27] *** Joins: stenno (~stenno@user/stenno)
[11:53:38] *** Joins: vlm (~vlm@user/vlm)
[12:05:02] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[12:13:30] *** Quits: luva6 (~luva@5.180.62.231) (Ping timeout: 260 seconds)
[12:26:38] *** Joins: luva6 (~luva@5.180.62.230)
[12:49:35] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[12:54:08] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 246 seconds)
[13:11:00] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:12:34] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:29:11] *** Quits: luva6 (~luva@5.180.62.230) (Ping timeout: 264 seconds)
[13:30:41] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[13:34:40] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[13:37:15] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[13:41:57] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Changing server)
[13:42:06] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[13:43:59] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[13:45:08] *** Joins: Atlas (~atlas@user/atlas)
[13:47:10] <relipse> '11/01/2021 10:00 PM -0400' is that 10pm edt?
[13:47:12] *** Joins: ms49434 (~ms49434@user/ms49434)
[13:57:54] *** Joins: luva6 (~luva@5.180.62.229)
[14:02:15] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[14:02:50] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[14:03:14] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:04:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:06:00] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:23:11] *** Atlas is now known as atlas`
[14:23:11] *** Quits: atlas` (~atlas@user/atlas) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:25:04] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[14:29:42] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 268 seconds)
[14:38:12] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[14:38:44] *** Joins: kenoba (~kenoba@user/kenoba)
[14:49:46] *** Quits: luva6 (~luva@5.180.62.229) (Ping timeout: 260 seconds)
[14:55:03] *** Joins: luva6 (~luva@159.48.53.253)
[14:56:13] *** luva6 is now known as luva
[14:56:47] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[14:58:52] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:01:26] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[15:04:42] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 260 seconds)
[15:16:13] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[15:28:31] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[15:33:10] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[15:34:41] *** Quits: TML (~tml@user/tml) (Ping timeout: 245 seconds)
[15:39:46] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[15:50:24] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[15:57:36] *** Quits: luva (~luva@159.48.53.253) (Ping timeout: 245 seconds)
[15:59:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[16:00:15] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[16:01:54] *** gxt_ is now known as gxt
[16:04:54] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[16:07:12] *** Joins: stenno (~stenno@user/stenno)
[16:26:28] *** Joins: luva (~luva@159.48.53.249)
[16:47:30] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[16:52:02] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[16:54:01] *** stenno is now known as stenno\OK
[17:09:59] *** Quits: luva (~luva@159.48.53.249) (Ping timeout: 264 seconds)
[17:17:02] *** Joins: luva (~luva@5.180.62.157)
[17:19:07] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[17:21:16] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[17:21:45] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Client Quit)
[17:23:46] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[17:36:34] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:40:01] *** Joins: wilk (~wilk@user/wilk)
[17:46:47] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:50:51] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[17:55:30] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[17:56:54] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[18:18:53] *** Joins: TML (~tml@user/tml)
[18:18:53] *** ChanServ sets mode: +v TML
[18:20:47] *** Quits: luva (~luva@5.180.62.157) (Ping timeout: 264 seconds)
[18:22:35] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[18:25:10] *** Quits: magla (~gelignite@55d47dc5.access.ecotel.net) (Quit: Stay safe!)
[18:25:40] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[18:26:15] *** Joins: luva (~luva@159.48.53.253)
[18:27:09] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 265 seconds)
[18:35:14] *** Quits: luva (~luva@159.48.53.253) (Ping timeout: 260 seconds)
[18:40:07] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[18:43:53] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[18:50:57] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:52:03] *** Joins: WishBoy (~WishBoy@user/wishboy)
[18:53:20] *** Joins: ferdna (~ferdna@user/ferdna)
[19:06:25] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[20:16:40] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[20:26:45] *** Joins: Rockwood (~Rocky@user/rocky)
[20:33:29] *** Joins: luva (~luva@159.48.53.254)
[20:41:15] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[20:55:03] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 265 seconds)
[20:57:25] *** Joins: Rockwood (~Rocky@user/rocky)
[21:04:41] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[21:05:47] *** Quits: luva (~luva@159.48.53.254) (Ping timeout: 264 seconds)
[21:09:10] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[21:09:11] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:10:54] *** Joins: Rockwood (~Rocky@user/rocky)
[21:24:04] *** Joins: luva (~luva@159.48.53.252)
[21:36:17] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[21:40:54] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[21:56:59] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 260 seconds)
[22:00:01] *** Joins: stenno (~stenno@user/stenno)
[22:02:17] *** Quits: Phil-Work (~phil@62.3.100.20) (Remote host closed the connection)
[22:09:07] *** Joins: Phil-Work (~phil@62.3.100.20)
[22:23:56] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[22:25:18] *** Quits: luva (~luva@159.48.53.252) (Ping timeout: 260 seconds)
[22:28:30] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[22:28:39] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:35:17] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Read error: Connection reset by peer)
[22:36:53] *** Quits: Phil-Work (~phil@62.3.100.20) (Remote host closed the connection)
[22:37:29] *** Joins: Phil-Work (~phil@62.3.100.20)
[22:38:27] *** Joins: luva (~luva@159.48.53.252)
[22:55:36] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[22:56:47] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 264 seconds)
[23:00:41] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 264 seconds)
[23:03:34] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[23:27:18] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
[23:31:58] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510) (Ping timeout: 260 seconds)
[23:32:43] *** Joins: guidoc (~guido@host-95-234-249-204.retail.telecomitalia.it)
[23:32:44] *** Quits: guidoc (~guido@host-95-234-249-204.retail.telecomitalia.it) (Client Quit)
[23:32:46] *** Quits: guido (~guido@host-95-234-249-204.retail.telecomitalia.it) (Read error: Connection reset by peer)
[23:35:11] *** Quits: luva (~luva@159.48.53.252) (Ping timeout: 264 seconds)
[23:43:57] *** Joins: zlg (~zlg@c-73-19-64-189.hsd1.wa.comcast.net)
[23:44:15] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[23:45:16] *** Joins: pmercado (~pmercado@190.22.183.232)
[23:46:02] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:47:30] *** Quits: zlg (~zlg@c-73-19-64-189.hsd1.wa.comcast.net) (Changing host)
[23:47:30] *** Joins: zlg (~zlg@user/zlg)
[23:47:54] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Read error: Connection reset by peer)
[23:52:29] *** Joins: guido (~guido@host-95-234-249-204.retail.telecomitalia.it)
[23:54:23] *** Joins: luva (~luva@159.48.53.250)
[23:59:02] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:f885:1855:6fd4:8510)
