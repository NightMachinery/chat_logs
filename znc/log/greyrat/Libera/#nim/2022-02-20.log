[00:05:36] <FromDiscord> <enthus1ast> you could define a converter
[00:30:01] <FromDiscord> <demotomohiro> Passing int to int32 lose bits. int is 64bit in 64bit cpu.
[00:35:49] <FromDiscord> <demotomohiro> @arkanoid You probably using GCC for x86_64. You need to install or configure gcc to output executable for i386 CPU.
[00:39:23] <FromDiscord> <Phil> Finally able to find some time to write nim code again... tomorrow
[01:04:22] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[01:04:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:11:05] <FromDiscord> <Waldecir Santos> In reply to @demotomohiro "Passing int to int32": True forgot about cpu arch.
[03:34:26] <FromDiscord> <ynfle> Is there any way to disable output for `unittest`?
[03:39:49] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:46:03] <FromDiscord> <ynfle> In reply to @ynfle "Is there any way": `-d:nimUnittestOutputLever=PRINT_NONE`
[03:54:28] <FromDiscord> <Waldecir Santos> I've an object name in a string how can I use for instantiate it using that value from the string ? is this possible with nim ?
[03:54:43] <FromDiscord> <Elegantbeef> It is possible at compile time
[03:55:00] <FromDiscord> <Elegantbeef> It's also possible at runtime but more difficult
[03:55:10] <FromDiscord> <ynfle> In reply to @Waldecir Santos "I've an object name": You can do if else if you know all the possibilities
[03:55:23] <FromDiscord> <Elegantbeef> Or a case statement if you're not an animal
[03:55:30] <FromDiscord> <Elegantbeef> Sorry not sorry ynfle
[03:55:42] <FromDiscord> <Waldecir Santos> I do know all possibilities, how can I do it @ynfle  ?
[03:55:58] <FromDiscord> <Waldecir Santos> In reply to @Elegantbeef "It's also possible at": How ?
[03:56:46] <FromDiscord> <Waldecir Santos> I need to do that for the object type (instantiate) and set values properties
[03:56:50] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Q6x
[03:57:58] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3Q6y
[03:58:00] <FromDiscord> <Waldecir Santos> sent a code paste, see https://paste.rs/TgJ
[03:58:03] <FromDiscord> <Elegantbeef> Well yea that's ideal
[03:58:09] <FromDiscord> <Elegantbeef> Less manual work the better
[03:58:11] <FromDiscord> <ynfle> In reply to @Elegantbeef "Sorry not sorry ynfle": Love you too
[03:58:38] <FromDiscord> <Waldecir Santos> lol
[04:35:26] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:52:05] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[05:05:48] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[05:14:41] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:21:24] <FromDiscord> <jos> i'm working on a language and about to start codegen
[05:21:44] <FromDiscord> <jos> i'm wondering about languages that compile to c in practice
[05:22:33] <FromDiscord> <jos> it seems like a good idea, but i've never really used a language that does it, is there any reason not to do it
[05:24:18] <FromDiscord> <Elegantbeef> You depend on a compiler that is a bit harder to ship
[05:25:04] <FromDiscord> <Elegantbeef> https://forum.nim-lang.org/t/1246
[06:27:59] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 256 seconds)
[06:53:51] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:55:10] <FromDiscord> <cs> sent a code paste, see https://play.nim-lang.org/#ix=3Q72
[06:55:25] <FromDiscord> <cs> This doesn't happen if I type a word, a space and then another word
[06:55:49] <FromDiscord> <cs> (edit) "https://play.nim-lang.org/#ix=3Q74" => "https://play.nim-lang.org/#ix=3Q73"
[06:57:52] <FromDiscord> <cs> Is that expected behavior?
[07:08:13] <FromDiscord> <Elegantbeef> I'm going to say no an exception should never be user facing 😛
[07:09:33] <FromDiscord> <aph> how do i use `clang` instead of gcc for nim?
[07:10:49] <FromDiscord> <Elegantbeef> `--cc:clang`
[07:11:00] <FromDiscord> <aph> thanks
[07:18:29] <FromDiscord> <cs> In reply to @Elegantbeef "I'm going to say": ok. I agree
[07:23:15] <FromDiscord> <Mysterysib> YO SON HOW DO I GET THE LENGTH OF OBJECTS IN A JSONNODE
[07:23:28] <FromDiscord> <Mysterysib> IS THERE A FUNCTION OR DO I HAVE TO DO SOME WEIRD WHILE LOOP
[07:25:25] <madprops> JASON.len
[07:28:17] <FromDiscord> <Mysterysib> Thanks 🙂
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:42:23] <FromDiscord> <Rika> damn why ya shoutin
[07:43:53] <FromDiscord> <aph> In reply to @Rika "damn why ya shoutin": probably doing SQLs
[07:45:01] <FromDiscord> <Mysterysib> I'm trying to parse a .har and extract media from it
[07:45:37] <FromDiscord> <aph> nice
[07:47:18] <FromDiscord> <Mysterysib> Rather than manually defining the specific type structure for it, I'm writing a template definition to do it automatically
[07:49:06] <FromDiscord> <Mysterysib> I want make a program that will read and parse network packets, identify media, and then extract it
[07:49:20] <FromDiscord> <Mysterysib> I think I have to code the networking part in C but I'm doing the parsing in Nim
[07:51:20] <FromDiscord> <Mysterysib> I wonder what `"Error: internal error: invalid kind for lastOrd(tyGenericParam)"` means when I import a .nim file with template definitions
[07:53:18] <FromDiscord> <Mysterysib> (edit) "template" => "type"
[07:54:40] <FromDiscord> <Mysterysib> Oh, it's because I had a definition in an object `Arr : array`. Guess I'm not allowed to do that
[07:55:56] <FromDiscord> <Elegantbeef> Should be an error message but sadly is not
[07:55:58] <FromDiscord> <Rika> the array needs to have its generic types filled `array[Size, Type]`
[07:58:39] <FromDiscord> <Mysterysib> In reply to @Elegantbeef "Should be an error": What's the best place to submit requests like this so we can improve the lang? For instance, I had an issue with the Jetbrains Nim extension and had to create a custom .sh script to run Jetbrains for it to work with "EXPORT = /path/to/nimcompiler"
[07:59:05] <FromDiscord> <Rika> that is an issue with the jetbrains extension and not nim so submit an issue to them
[07:59:09] <FromDiscord> <Elegantbeef> Make an issue or a PR to address it on the github
[07:59:20] <FromDiscord> <Elegantbeef> Yea the jetbrains stuff goes to jetbrains
[07:59:24] <FromDiscord> <Elegantbeef> the compiler error goes to Nim
[07:59:34] <FromDiscord> <Mysterysib> Okay, cool
[08:01:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[08:25:34] <FromDiscord> <K.io.S> sent a long message, see https://paste.rs/7Yj
[08:30:45] <FromDiscord> <Elegantbeef> nim's async isnt done with threads so it shouldnt change anything afaik
[08:36:42] <FromDiscord> <Rika> pretty much what he said
[08:37:02] <FromDiscord> <Rika> not sure what you mean by affect
[08:38:44] <FromDiscord> <K.io.S> the point is that the concurrency story is fragmented atm. and there are many different efforts.↵The fact that threads are one thing and any not necessarily threaded implementation isn't, is not what I was asking about.
[08:41:57] <FromDiscord> <Rika> if you havent heard, the whole nim community is pretty fragmented
[08:42:20] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:42:32] <FromDiscord> <Elegantbeef> There's a nim community?!\\
[09:02:44] <FromDiscord> <leorize> Araq has a talk on concurrency at fosdem if you wanna see what he thinks
[09:34:11] <FromDiscord> <mratsim> The talk on concurrency is about parallelism though 😅
[09:35:11] <FromDiscord> <mratsim> sent a long message, see http://ix.io/3Q7A
[09:38:31] <FromDiscord> <leorize> there's also cps \:p
[10:02:11] <FromDiscord> <Bung> In reply to @haolian9 (高浩亮) "as the header part": yeah, I remember supported http version is hard code in std
[11:24:34] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[11:26:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:41:01] <FromDiscord> <Phil> In reply to @Elegantbeef "There's a nim community?!\\": impossibru
[12:49:05] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[12:58:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:02:36] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[13:03:01] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[13:09:08] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[13:16:12] <NimEventer> New Nimble package! toktok - Generic tokenizer written in Nim language 👑 Powered by Nim's Macros, see https://github.com/openpeep/toktok
[14:07:33] <FromDiscord> <Goel> sent a code paste, see https://play.nim-lang.org/#ix=3Q8s
[14:07:48] <FromDiscord> <Goel> (edit) "https://play.nim-lang.org/#ix=3Q8s" => "https://play.nim-lang.org/#ix=3Q8t"
[14:09:00] <FromDiscord> <Goel> (edit) "https://play.nim-lang.org/#ix=3Q8t" => "https://play.nim-lang.org/#ix=3Q8v"
[14:18:33] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3Q8w
[14:21:12] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3Q8x
[14:22:05] <FromDiscord> <enthus1ast> in the first example, you could define the function in the newFoo()   newBaa() procs
[14:22:14] *** Joins: averell (~averell@user/averell)
[14:23:13] <FromDiscord> <untoreh> sent a code paste, see https://play.nim-lang.org/#ix=3Q8y
[14:29:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:32:04] <FromDiscord> <dom96> In reply to @Rika "if you havent heard,": Is it?
[14:33:43] <FromDiscord> <haolian9 (高浩亮)> sent a code paste, see https://paste.rs/GtA
[14:35:06] <FromDiscord> <Rika> Because it defaults to field when you call it with “field syntax” (or method call syntax)
[14:35:30] <FromDiscord> <Rika> So it’s like (l.name)() trying to call the field value like a proc
[14:39:24] <FromDiscord> <Waldecir Santos> Is it possible to get a list of all declared objects/types at compile type ?
[14:41:56] <FromDiscord> <haolian9 (高浩亮)> could you share some ref? i can not find any thing about UFC, except a wiki page↵(@Rika)
[14:42:13] <FromDiscord> <Rika> It’s in the manual somewhere lol I can’t check right now
[14:44:51] <FromDiscord> <xflywind> https://nim-lang.org/docs/manual.html#procedures-method-call-syntax
[14:52:10] <FromDiscord> <haolian9 (高浩亮)> thanks for the link, i saw it before and re-read again, but it does not say property takes precedent over method
[15:01:47] <FromDiscord> <haxscramper> In reply to @Waldecir Santos "Is it possible to": no unless you annotate them with some kind of pragma
[15:02:05] <FromDiscord> <haxscramper> in general, macros cannot access the source code outside of their scope
[15:06:06] <FromDiscord> <Waldecir Santos> got it, would be possible to show me how to use pragma for it ?
[15:07:04] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Q8I
[15:13:36] <FromDiscord> <Waldecir Santos> oh  yeah but it will be outside the scope I need,!thank you
[15:14:15] <FromDiscord> <haxscramper> if the code is typed you can traverse the definitions using `.getTypeImpl()`
[15:14:48] <FromDiscord> <haxscramper> random combinations of `getTypeImpl()`, `getTypeInst()` or `getType()` for the fields, arguments and so on
[15:18:15] <FromDiscord> <Waldecir Santos> ty I’ll check it.
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:56:12] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[16:25:10] <FromDiscord> <rakgew> hi, I was wondering if there is way to use nimble to refresh or install packages also behind tor socks5 proxy? tried to wrap nimble into torsocks/torify but it was not able to connect. using `HTTPS_PROXY=socks5://127.0.0.1:9050 nimble refresh --verbose` showed that it picked up proto/url/port correctly, but would not connect. is there another way to get it working?
[16:27:22] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4)
[16:32:06] <FromDiscord> <enthus1ast> Nim cannot natively use socks
[16:32:21] <FromDiscord> <enthus1ast> Http proxy might work though
[16:34:00] <FromDiscord> <rakgew> so HTTP\_PROXY instead of HTTPS\_PROXY? enthus1ast thank you - will give it shot.
[16:35:02] <FromDiscord> <enthus1ast> I do not know IF this is supposed to work, the only thing I know is that the stdlib has no socks client code
[16:35:55] <FromDiscord> <rakgew> hm. unfortunately not. with python I could use\: `torsocks python3 -m pip install packagename`
[16:39:05] <FromDiscord> <rakgew> with rust/cargo I needed to set some config or env var, then it worked there as well. would be really great if I could get nimble to work as well.
[16:39:05] <FromDiscord> <enthus1ast> Torsocks use LD\_PRELOAD this imho does not work with nim executables
[16:39:06] <FromDiscord> <rakgew> yes they do. thank you for the hint.
[16:40:38] <FromDiscord> <enthus1ast> https://github.com/nim-lang/nimble/commit/50d2637b04d9c7228e34c2ac5ec85f811804be7c
[16:41:32] <FromDiscord> <enthus1ast> I would set up a http(s) to socks/tor proxy and connect to these
[16:42:34] <FromDiscord> <enthus1ast> But I can imagine that there are other dragons
[16:43:30] <FromDiscord> <rakgew> I would not be surprised. thank you for the link.
[16:44:19] <FromDiscord> <enthus1ast> It would be nice when the proxy stuff in httpclient would be pluggable
[16:44:42] <FromDiscord> <enthus1ast> So that users can implement their own proxy routines
[16:45:19] <FromDiscord> <enthus1ast> I had to fork httpclient to let it connect to socks directly
[16:46:04] <FromDiscord> <rakgew> ouh, I agree.
[16:48:01] <FromDiscord> <enthus1ast> And I also started to add http proxy support to my socks server implementation, but imho never finished it
[16:49:44] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:46:10] *** Quits: {cms} (~user@zgw.beatworm.co.uk) (Remote host closed the connection)
[17:46:32] *** Joins: PMunch (~PMunch@user/pmunch)
[17:50:05] *** Joins: arkurious (~arkurious@user/arkurious)
[17:58:58] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:00:16] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[18:00:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:14:55] <NimEventer> New thread by Ggibson: Porting c++ [string]view demo to nim: a puzzle, see https://forum.nim-lang.org/t/8935
[18:31:09] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[19:20:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:09:17] <nrds> <04games/freenode99> <rasengan> Decision has been made <rasengan> We have to drain this swamp
[20:09:19] <nrds> <04games/freenode99> <rasengan> Classic tried to go on for the sake of the community, but the community has made it loud and clear-they want freenode classic to end, today! #MFGA
[20:09:23] <nrds> <04games/freenode99> <rasengan> Decision has been made <rasengan> We have to drain this swamp
[20:09:25] <nrds> <04games/freenode99> <rasengan> Classic tried to go on for the sake of the community, but the community has made it loud and clear-they want freenode classic to end, today! #MFGA
[20:16:26] <PMunch> Uhm, what?
[20:16:44] <PMunch> Prestige, is your bot bridging stuff from other channels now?
[20:36:24] <nrds> <06Prestige99> They added a freenode bridge and libera people keep going on the freenode channels and spamming
[20:37:01] <FromDiscord> <ShalokShalom> hi there↵↵I am new, and like to replace my bash script with some Nim
[20:37:32] <FromDiscord> <ShalokShalom> Is this possible/advisable, and if yes, how to do stuff such as mkdir and so on?
[20:37:46] <FromDiscord> <ShalokShalom> Is there some doc, that collects all the system io stuff (on Linux)
[20:38:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[20:38:56] <FromDiscord> <Phil> sent a long message, see https://paste.rs/QYh
[20:40:06] <PMunch> @ShalokShalom, Nim isn't really meant as a bash replacement, but it can certainly be used as one
[20:40:44] <FromDiscord> <Phil> sent a code paste, see https://paste.rs/HMT
[20:41:06] <PMunch> You probably want to look into `nimcr` so your scripts get shebang support. To use tools such as mkdir you need to use something like execCmd, but of course this could be wrapped
[20:41:32] <FromDiscord> <ShalokShalom> Is this enough? https://nim-lang.github.io/Nim/os.html
[20:41:38] <FromDiscord> <ShalokShalom> Thanks
[20:41:58] <PMunch> Not sure if anyone has yet set up something like this, but it wouldn't be impossible for a Nim program to read your path during compile-time and then create templates to run any program in your path that way.
[20:42:21] <PMunch> Yeah I mean that's how you would normally create folders and such
[20:42:40] <FromDiscord> <ShalokShalom> nimcr? https://media.discordapp.net/attachments/371759389889003532/945005044984606750/Screenshot_20220220_181216.png
[20:43:09] <FromDiscord> <Phil> I feel like I'm missing something, where did you make the jump to read a path at compile time for shalok's usecase pmunch?
[20:43:26] <FromDiscord> <ShalokShalom> missing that too
[20:43:38] <PMunch> @Phil, essentially it tries to make the compile-time more static-y, which it can't, and then it gets confused
[20:43:52] <PMunch> Not a path, the PATH
[20:44:22] <FromDiscord> <Phil> In reply to @PMunch "<@180601887916163073>, essentially it tries": Ah, so it boils down to "there is only one compileTime-time, don't use static in a compileTime proc to get more compileTime during compileTime" ?
[20:44:23] <PMunch> Essentially just finding every single binary you can normally run in your bash script without arguments and creating templates to run those in a similar way in Nim.
[20:44:41] <PMunch> @ShalokShalom, nimcr: https://github.com/PMunch/nimcr
[20:44:45] <FromDiscord> <ShalokShalom> thanks a lot
[20:44:58] <PMunch> @Phil, pretty much
[20:44:58] <FromDiscord> <Phil> Somewhere there is an xzibit yo dawg meme to be made from my sentence
[20:45:08] <PMunch> Haha :P
[20:45:32] <FromDiscord> <demotomohiro> @ShalokShalom https://nim-lang.org/docs/nims.html↵Please read Standalone NimScript section
[20:45:32] <PMunch> Nim should probably just ignore static in a {.compileTime.} proc, maybe create an issue for this on GitHub
[20:45:35] <FromDiscord> <Phil> What's fascinating is that static asserts in a compileTime proc do work to a degree!
[20:46:12] <FromDiscord> <ShalokShalom> ok
[20:46:15] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3QaP
[20:46:39] <FromDiscord> <Phil> It works absolutely flawlessly, though I guess I should throw out the static in there and see if that still works
[20:47:56] <FromDiscord> <Phil> Huh, yeah, works still when I remove the static from the asserts
[20:48:25] <FromDiscord> <Phil> My takeaway from this is: When you want to prevent yourself from being dumb at compile time, do compiletimeprocs with asserts and done
[20:48:34] <FromDiscord> <Phil> (edit) "My takeaway from this is: When you want to prevent yourself from being dumb at compile time, do compiletimeprocs with asserts ... and" 03added "(instead of static asserts)"
[20:51:10] <FromDiscord> <ShalokShalom> PMunch: I see exec used in the NimScript example. Is it different from execCmd?
[20:51:44] <PMunch> Yes, NimScript is the parts of Nim which can run during compile-time
[20:52:02] <PMunch> It's kind of the same language, kinda not
[20:52:41] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/nimscript.html#exec%2Cstring
[20:53:41] <FromDiscord> <demotomohiro> NimScript can be executed like bash script with `nim myscript.nims`.
[20:55:47] <PMunch> NimScript won't give you all the benefits of Nim though, so depending on what you're actually looking to achieve by switching to Nim it might not be worth it
[20:55:58] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[20:56:06] <FromDiscord> <ShalokShalom> No, I think both of you lovely people understood something else, as I mean
[20:56:49] <FromDiscord> <ShalokShalom>  https://media.discordapp.net/attachments/371759389889003532/945008604078047322/Screenshot_20220220_182624.png
[20:57:20] <FromDiscord> <ShalokShalom> Difference? https://media.discordapp.net/attachments/371759389889003532/945008738039910470/Screenshot_20220220_182701.png
[20:59:56] <FromDiscord> <ShalokShalom> https://nim-lang.org/docs/osproc.html#execCmd%2Cstring↵And there is one more: https://nim-lang.org/docs/os.html#execShellCmd%2Cstring
[21:00:29] <FromDiscord> <demotomohiro> `exec` is a proc in nimscript module and execCmd is a proc in osproc module that is unavailable in nimscript
[21:00:59] <FromDiscord> <ShalokShalom> Yeah, just figured that.
[21:01:13] <FromDiscord> <ShalokShalom> So exec is in both?
[21:01:56] <FromDiscord> <ShalokShalom> Like, is there a subset of NimScript, that cant be used in normal Nim either?
[21:02:55] <FromDiscord> <ShalokShalom> And I think nimcr could be part of the official distribution. Seems kinda basic.
[21:08:06] <FromDiscord> <Zajt> I saw the path to the file I compiled `/home/zajt/file.nim` is in strings of the binary compiled with Nim, is it possible to get rid of this one?
[21:11:35] <FromDiscord> <demotomohiro> Did you tried `strip` command?
[21:16:12] <FromDiscord> <Zajt> Yeah I have that one
[21:16:41] <FromDiscord> <Zajt> `nim c -d:strip --hints:off --warnings:off -d:verbose -d=mingw -d:exportExe out.nim`
[21:23:16] <FromDiscord> <huantian> @Zajt compile with -d:release
[21:25:08] <FromDiscord> <Zajt> In reply to @huantian "<@!290456415963709440> compile with -d:release": I tried with that earlier but couldn't run the binary then
[21:28:47] <FromDiscord> <Zajt> and I still don't know why that happened, it's really odd
[21:28:49] <FromDiscord> <huantian> Don’t know then, compiling with release always removed the debug strings which referenced the compilation file
[21:28:54] <FromDiscord> <huantian> (edit) "file" => "folder"
[21:29:11] <FromDiscord> <Zajt> tried with different combinations of the arguments to see if it is caused by two special flags/arguments at the same time
[21:38:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4)
[21:39:26] <FromDiscord> <demotomohiro> Did you tried `strip <your executable file>` command?
[21:42:20] <FromDiscord> <Zajt> that worked to remove it, thanks!
[21:49:41] <FromDiscord> <Zajt> or actually the path is still there
[21:54:37] <FromDiscord> <demotomohiro> Exception, stack trace or assert need to print file path. You might need to use `-d:danger` option.
[21:54:50] <FromDiscord> <b4mbus> Has anyone here tested `nlvm` and compared it to casual `nim` compilation with different options?
[21:58:13] <FromDiscord> <Mysterysib> I'm really stuck with pointers in Nim
[21:58:17] <FromDiscord> <Zajt> What does that one do?
[21:58:43] <FromDiscord> <Mysterysib> I have a function with a parameter with two possible datatypes, and depending on the datatype I want to set the parameter to a different definition with a different datatype
[21:58:53] <FromDiscord> <Mysterysib> When I do this check, the compiler doesn't understand
[21:59:41] <PMunch> @Mysterysib, that doesn't sound like something you should need pointers for..
[22:00:13] <FromDiscord> <Mysterysib> Ah, I was thinking that maybe if I used pointers to change the datatype the compiler wouldn't complain
[22:00:54] <FromDiscord> <huantian> In reply to @Zajt "What does that one": Danger disables runtime checks
[22:01:09] <FromDiscord> <haolian9 (高浩亮)> can anyone elaborate thread's `no heap sharing restriction`? does it means i can not share a db connection between threads?
[22:01:16] <FromDiscord> <huantian> But if relrase doesn’t work ifk
[22:01:21] <FromDiscord> <huantian> (edit) "relrase" => "release" | "ifk" => "idk"
[22:02:53] <FromDiscord> <Mysterysib> sent a long message, see http://ix.io/3Qcj
[22:03:08] <PMunch> haolian9_(高浩亮), probably a bad idea
[22:03:26] <FromDiscord> <Mysterysib> if I define JN as a var, then I cannot call the function with a string parameter because it says the string is immutable
[22:04:11] <FromDiscord> <haolian9 (高浩亮)> then if i use a connectionPool instead is also a  bad idea?
[22:04:14] <FromDiscord> <federico3> @dom96\: why is https://github.com/nim-lang/Nim/security/advisories/GHSA-ggrq-h43f-3w7m without a CVE?
[22:05:02] <PMunch> @Mysterysib, you can't assign to an argument if it isn't defined as `var`
[22:05:24] <PMunch> And if you can't call it with a string it means that the string you defined in your other scope isn't a var
[22:05:46] <PMunch> e.g. `let mystr = "Hello"; genJsonArray(mystr)` won't work
[22:05:51] <FromDiscord> <demotomohiro> In reply to @Mysterysib "if I define JN": If you want to set value to argument, it must be `var parameter` and you have to pass `var` variable to the parameter.
[22:06:12] <PMunch> haolian9_(高浩亮), it all depends on how your application is built and what your database supports
[22:08:26] <FromDiscord> <Mysterysib> Ah Okay
[22:09:45] <FromDiscord> <Mysterysib> when I call `    genJsonArray(JN[idx], false)` inside `proc genJsonArray(JN:string|JsonNode|char;firstIter: bool) =`, it throws an error for `if firstIter: jsonTxt  = parseJson(readFile(JN))` even though `firstIter` is set to false
[22:10:16] <FromDiscord> <Mysterysib> `but expression 'JN' is of type: char`, but that part shouldn't run when `JN` is a char
[22:10:29] <FromDiscord> <Mysterysib> That's why I was thinking of using pointers
[22:10:39] <FromDiscord> <Mysterysib> I've been on this bug for like an hour 😢
[22:10:54] <PMunch> The code is still invalid even if a runtime condition is not met
[22:11:27] <PMunch> You can try `firstIter: static[bool]` and then use a `when firstIter` statement
[22:11:42] <PMunch> I'm guessing that is only there to control some kind of recursion
[22:12:20] <FromDiscord> <Mysterysib> Yeah, and yep that worked
[22:12:27] <FromDiscord> <Mysterysib> Thank you
[22:12:47] <FromDiscord> <Mysterysib> What is the logic behind that so I can understand this moving forward? I'm still learning the language
[22:13:32] <FromDiscord> <Mysterysib> Is it because the compiler wants to make sure the bool doesn't change within the function?
[22:15:08] <PMunch> No
[22:15:36] <PMunch> Essentially in your version you could've had firstIter passed in by something which would only be known at runtime, say e.g. some user input
[22:15:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[22:15:52] <PMunch> So the compiler needs to generate the code-path for what should happen when it is true
[22:16:04] <PMunch> But the code there is invalid, so it throws an error
[22:16:46] <PMunch> When you change it to static you tell the compiler that this value is never going to change on runtime, it will always be known during compilation. So that `when` check is actually checking the value of firstIter as you compile your program
[22:17:14] <PMunch> It basically turns it into two separate procedures, and which one is called depends on what you pass in as firstIter
[22:18:23] <PMunch> I assume you're coming from a language like Python or something, where everything is done at runtime. In that case the code isn't checked before it is run, so you would get an error about the impossible code when you try to run it (and if it never reaches an impossible scenario it won't create an issue).
[22:19:17] <PMunch> But Nim is compiled, so it needs to create instructions for each of those branches for each of those arguments, even if one combination is never used.
[22:20:17] <PMunch> Since you have an argument with three optional types and a static boolean Nim will basically create six separate procedures for you, and when it is compiling it will know which one to call based on the types you pass and the value of that static parameter
[22:21:45] <PMunch> And since the argument is now static it can be sure that the version it creates for char doesn't contain any invalid code (these separate procedures are created on the fly as you call them, so if you ever tried to call it with a char and the argument set to true then it will be asked to create invalid code and stop it)
[22:24:36] <FromDiscord> <Mysterysib> Oh okay thank you I understand
[22:29:26] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[22:50:10] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 272 seconds)
[22:54:45] <FromDiscord> <dom96> In reply to @federico3 "<@132595483838251008>\: why is https://github.com/n": because the NimForum advisory has a CVE, can you not see the GitHub message?
[22:58:54] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[22:59:43] <FromDiscord> <Phil> I could use some inspiration for type naming
[23:11:40] <FromDiscord> <federico3> @dom96\: a CVE for Nim itself
[23:11:59] <FromDiscord> <Phil> sent a long message, see http://ix.io/3Qdv
[23:12:18] <FromDiscord> <Phil> Okay I need to find a way to write this shorter
[23:13:15] <FromDiscord> <Phil> (edit) "http://ix.io/3Qdv" => "http://ix.io/3Qdw"
[23:14:57] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[23:19:23] <FromDiscord> <Phil> Well that rewrite didn't really make things shorter =/
[23:20:20] <FromDiscord> <dom96> In reply to @federico3 "<@132595483838251008>\: a CVE for": huh?
[23:28:01] <FromDiscord> <Arathanis> In reply to @Isofruit "I have a relational": are you just looking for more descriptive named?
[23:28:16] <FromDiscord> <Phil> Yeh, solely looking for better understandable naming scheme
[23:28:26] <FromDiscord> <Phil> Which ideally hints at this 3-level-information hierarchy
[23:28:31] <FromDiscord> <Arathanis> Seems like you have 3 objects, each for the same underlying representation but with different amounts of damage
[23:29:01] <FromDiscord> <Arathanis> data
[23:29:05] <FromDiscord> <Arathanis> sorry was just playing MTG
[23:29:12] <FromDiscord> <Arathanis> burn deck, damage on the brain lol
[23:29:17] <FromDiscord> <Phil> Pretty much, I'd love to have only one but that's a technical ORM limitation which I can't abstract away without doing a lot of unnecessary work
[23:29:17] <FromDiscord> <Arathanis> different amounts of data
[23:29:33] <FromDiscord> <Arathanis> why not something like
[23:29:49] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3QdE
[23:30:22] <FromDiscord> <Arathanis> or
[23:30:43] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3QdG
[23:31:43] <FromDiscord> <Phil> Hmm I'm a fan of your suffix idea
[23:32:54] <FromDiscord> <Phil> The fact that the "base" thingy starts in the middle is a bit strange but going with naming with "Min/max" or "Full/Empty" somewhere in that area "feels" correct
[23:34:01] <FromDiscord> <Arathanis> OT my eyes the base thingy starting in the middle makes the most sense, but that might be because I have a rudimentary understanding of your data model
[23:34:08] <FromDiscord> <Arathanis> (edit) "OT" => "to"
[23:34:17] <FromDiscord> <Arathanis> I kind of see it has
[23:34:22] <FromDiscord> <Arathanis> ObjMin == Obj but stripped down
[23:34:37] <FromDiscord> <Arathanis> Obj is an Obj with all its data but not necessarily all its relationship data
[23:34:51] <FromDiscord> <Arathanis> ObjFull is an Obj that is fully fleshed out with all relationship connections loaded
[23:35:13] <FromDiscord> <Arathanis> but that might not be what you are doing
[23:35:23] <FromDiscord> <Arathanis> just what i mistakenly understood
[23:36:07] <FromDiscord> <Phil> ObjMin is all data from its own table↵Obj is all data from its own table + all data from tables that obj has an FK field entry to↵ObjFull is all data from its own table + all relationship data from all other tables with FK's pointing from Obj to them or from them to Obj
[23:36:27] <FromDiscord> <Phil> (edit) "obj" => "Obj" | "to↵ObjFull" => "pointing to them↵ObjFull"
[23:37:25] <FromDiscord> <Phil> Since ObjMin is only data from a single table, that's what you use for create/update/delete operations, thus I see it more as the "core" of everything, while "Obj" is "ObjMin" with a few frills and "ObjFulL" is "Obj" but with even more frills.
[23:37:44] <FromDiscord> <Phil> (edit) ""ObjFulL"" => ""ObjFull""
[23:38:12] <FromDiscord> <Phil> I could skip the middle layer strictly speaking, but then the amount of database trips I do roughly doubles to triples.
[23:38:24] <FromDiscord> <Arathanis> Ok I got it
[23:38:28] <FromDiscord> <Phil> (edit) "speaking," => "speaking and do only "ObjMin" and "ObjFull","
[23:39:24] <FromDiscord> <Arathanis> ObjMin is all data on that row, fkeys are just the actual id↵Obj is the same as ObjMin but fkeys are actual objects with data now↵ObjFull is Obj but we also include objects with fkeys to the instance instead of just froom
[23:39:25] <FromDiscord> <Arathanis> (edit) "froom" => "from"
[23:40:00] <FromDiscord> <Phil> Precisely. Obj only exists because with norm I can fetch that data in a single trip to the database, but not other entries with fkey pointing to the instance.
[23:40:05] <FromDiscord> <Arathanis> don't fall into the trap of premature optimization
[23:40:25] <FromDiscord> <Arathanis> you are trying to reduce how much data you use, but do you know for sure that amount of data throughput will be problematic?
[23:40:54] <FromDiscord> <Arathanis> if you don't I would write it in the easiest to follow, most concise and quick way, and then if it turns out its an issue you can refactor for performance
[23:41:28] <FromDiscord> <Phil> I mean, I'm writing this for performance for funsies because it's basically a rewrite of an application I already have written in Django.
[23:41:44] <FromDiscord> <Phil> (edit) "Django." => "Django (if you're not familiar, another web-framework but in python)."
[23:41:59] <FromDiscord> <Arathanis> oh python is my strongest language im very familiar haha
[23:42:14] <FromDiscord> <Phil> The goal is pretty much to crunch down from... I think currently I'm at ~200ms on a pageload to sub 50ms
[23:42:28] <FromDiscord> <Phil> Which is completely irrelevant
[23:42:36] <FromDiscord> <Phil> And solely for my own fun to see if I can ^^
[23:42:39] <FromDiscord> <Arathanis> if its an experiment in optimization than forge onward!
[23:42:42] <FromDiscord> <Arathanis> ive been there
[23:43:17] <FromDiscord> <Arathanis> one of the first things I do when learning a new language is write a prime sieve since I think its not overly complex but does require non-trivial logic and data structures. great learning project, doesn't take too long
[23:43:24] *** Quits: cyraxjoe (~joe@2806:109f:13:a15e:8e1f:c80e:91a8:2dd) (Ping timeout: 252 seconds)
[23:43:25] <FromDiscord> <Arathanis> and i often find myself trying to make it ever faster as part of the fun of it
[23:43:40] <FromDiscord> <Phil> Heh, I'm starting to develop the trend of just re-implementing my backend
[23:43:54] *** Joins: cyraxjoe (~joe@2806:109f:13:a649:678a:4b9b:8835:7786)
[23:43:59] <FromDiscord> <Phil> Because it automatically forces me into so many obscure areas of the language that are none the less really good to know
[23:46:40] <FromDiscord> <Phil> I very quickly learn how it feels best to structure medium-large projects in the language, how to deal with database interaction, authentication, encryption, connection pooling, async, multi-threading, file-uploading and more
[23:47:25] <FromDiscord> <Phil> Never thought I'd find myself writing (stealing) code to build a django-signal like system
[23:48:11] <PMunch> Hmm, @dom96 is there a way to package a `.nims` file in a nimble package in such a way that users can create their own `.nims` files and import it?
[23:48:20] <FromDiscord> <Phil> As an aside, I'm not sure if you followed the debate on webdev, python's encryption lib is crazy fast
[23:48:26] *** nixfreaknim[m] is now known as reversem3[m]
[23:49:32] <FromDiscord> <Phil> (edit) "fast" => "fast. To the point I wish I could comprehend libsodium to use one of its wrappers"
[23:49:41] <FromDiscord> <dom96> In reply to @PMunch "Hmm, <@132595483838251008> is there": dunno, but I would assume that this would work the same as with .nim files
[23:50:02] <PMunch> Hmm
[23:50:26] <PMunch> I placed it in the same directory as my library files, but nimscript isn't able to find it
[23:50:48] <FromDiscord> <Arathanis> I always figured that if you wanted themn to have control over config you would write your `.nims` file in a way to load from an optional config file
[23:50:51] <PMunch> I guess the import resolution for NimScript doesn't take into account the nimble path..
[23:51:14] <FromDiscord> <Arathanis> so rather than try and figure out a way to let them make their own `.nims` file you would tell them they can configure things with a `yaml` file called "config.yml" or smth
[23:51:18] <FromDiscord> <Arathanis> and provide a spec
[23:51:26] <PMunch> Huh?
[23:51:52] <FromDiscord> <Arathanis> maybe im confused as to what you are trying to accomplish, I usually use `.nims` files for `config.nims` haha
[23:52:01] <FromDiscord> <Arathanis> you must be doing actual scripting stuff, just ignore me :]
[23:52:05] <PMunch> Yes, that's what I'm trying to do
[23:52:20] <PMunch> Not at all
[23:53:02] <PMunch> The problem I'm trying to solve is that Ratel, my microprocessor library in Nim is best used with a bunch of variables set up.
[23:53:16] <PMunch> Currently the getting started guide looks like this: https://ratel.peterme.net/gettingstarted.html
[23:54:12] <FromDiscord> <dom96> In reply to @PMunch "I guess the import": Possible. Wouldn’t be surprised if that’s the case.
[23:54:22] <PMunch> What I want to do is move that entire configuration file into a `config.nims` file that I ship with the library. Then when using the library the user doesn't have to copy that config, but rather just run `import boardConf` or something similar
[23:54:45] <FromDiscord> <Arathanis> ahhh
[23:55:24] <FromDiscord> <federico3> @dom96\: the vuln seems to affect Nim's stdlib. If so there has to be a CVE assigned to Nim itself
