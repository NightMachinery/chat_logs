[00:00:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[00:00:06] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[00:00:13] <ChrisWarrick> ElGuapo_: perhaps look into https://irc3.readthedocs.io/en/latest/
[00:00:50] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[00:01:07] <ElGuapo_> will do thx.. got it working.. I see that ":" was my issue.. Repiphany üëç
[00:01:19] *** Joins: joshisanonymous (~joshisano@2601:246:200:7080:50ab:42:3ddb:a066)
[00:01:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:01:46] *** Quits: joshisanonymous (~joshisano@2601:246:200:7080:50ab:42:3ddb:a066) (Client Quit)
[00:02:02] <ElGuapo_> that irc library looks easy too.. thank you
[00:02:40] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Ping timeout: 256 seconds)
[00:02:59] <Helenah> hexnewbie: Do you know if there is a way to use prompt_toolkit over a socket?
[00:04:10] <bitplane> SnoopJ https://gist.github.com/bitplane/0e741a186c16fd680d5549bf4b9f6219
[00:04:24] <bitplane> puking_noises.WAV
[00:04:28] <bitplane> :joy:
[00:04:35] <Helenah> .
[00:04:43] <Helenah> DISGUSTING
[00:04:57] <bitplane> utterly haram
[00:05:02] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[00:05:06] *** Joins: joshisanonymous (~joshisano@2601:246:200:7080:50ab:42:3ddb:a066)
[00:05:16] <bitplane> it's only ever going to be called once, so *shrug*
[00:06:17] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:6c13:316b:1996:736a) (Quit: Leaving)
[00:06:34] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[00:06:45] *** Joins: crakrjak (~root@user/crakrjak)
[00:07:20] <han-solo> wouldn't that mapping gets recreated each time you call `.to_seconds` # ?
[00:07:35] <han-solo> not that it may matter much...but still
[00:07:36] <bitplane> yeah, but like I said, it's gonna get called once at power on
[00:07:39] <hexnewbie> Helenah: I have not used prompt_toolkit
[00:07:45] <Helenah> Ah :)
[00:07:49] *** Joins: faLUKE (~paolo@host-80-117-216-225.pool80117.interbusiness.it)
[00:07:56] *** Quits: schumaml (~schumaml@p4ff9166e.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[00:08:29] <faLUKE> hello. print(svgpath) prints  "Path(Move(to=(14.2764+8.6243j)), Line(start=(14.2764+8.6243j), end=(25.8787+8.6243j)))"    ---> what kind of object is svgpath ?
[00:08:34] <bitplane> the other option is to have it outside the enum, extra classes and all that guff right?
[00:08:37] <Helenah> ElGuapo_: I once coded an IRC server from scratch and wish I knew where the damn code was, I would've shown it to you.
[00:08:38] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431)
[00:09:13] <bitplane> faLUKE: type(svgpath)
[00:09:16] <grym> faLUKE: type(svgpath) will tell you
[00:09:17] *** Joins: ArtfulDodger_ (~ArtfulDod@134.68.205.77.rev.sfr.net)
[00:09:39] <bitplane> and type(svgpath).__file__ I think
[00:09:42] <Helenah> ElGuapo_: I wouldn't advise anyone put it into production though! Hell I wrote it to chroot itself...
[00:09:44] <ElGuapo_> that is impressive Helenah, but gosh no, I am soo newb, just playing.. that probly way over my head
[00:09:53] <bitplane> lol Helenah
[00:09:56] <faLUKE> grym: thanks
[00:10:05] <Helenah> ElGuapo_: I can help you with IRC bots but yeah ircd's bad idea...
[00:10:10] <bitplane> IRC is one of those lovely protocols that is easy to implement
[00:10:15] <Helenah> Yes
[00:10:23] <Helenah> I just read the RFC's
[00:10:24] <bitplane> good old fashioned socket server/client
[00:10:25] <Helenah> :D
[00:10:35] <bitplane> you get it working and it feels so good
[00:10:41] <Helenah> Yeah
[00:10:45] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[00:10:50] <Helenah> well currently I got an SSH based BBS system. :)
[00:10:57] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.3)
[00:11:11] <bitplane> incrementally add bits to get new features, and an edit -> run -> joy loop like programming computer games
[00:11:15] <Helenah> That's my current project. :D
[00:11:16] <ElGuapo_> I actually had the RFCs oopen to fix the connecting strings to my znc.. I didnt even think to verify the example I was goign from had the correct syntax for sendinf a msg
[00:11:19] <Celelibi> Nowadays, no IRC client or server really abide by the RFC.
[00:11:30] <Helenah> Celelibi: Correct
[00:11:39] <SnoopJ> bitplane, you could make it an enum of tuples if you wanted, but there is I think no accounting for taste here
[00:11:40] <Helenah> But personally I wanted to abide lol
[00:11:43] *** Quits: ArtfulDodger (~ArtfulDod@19.68.205.77.rev.sfr.net) (Ping timeout: 250 seconds)
[00:11:59] <bitplane> SnoopJ yeah but I can't look at them like ints :/
[00:12:07] <Celelibi> If you want some modern reference, you should rather look at IRCv3.
[00:12:13] <SnoopJ> bitplane, you should be using IntEnum anyway if you want to do that
[00:12:23] *** Joins: Atque (~Atque@user/atque)
[00:12:24] <Celelibi> Or ask on #ircv3, there have been some effort to document the current IRC protocol.
[00:12:47] <ElGuapo_> roger that. ircv3
[00:12:52] <bitplane> is there a difference between IntEnum and (int, Enum)
[00:13:19] <Helenah> https://i.imgur.com/K1SIEB9.jpg
[00:13:22] <Helenah> :)
[00:13:30] <grym> bitplane: no
[00:13:31] <ElGuapo_> OK that looks awesome
[00:13:41] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[00:13:44] <Helenah> The clock was easy to code.
[00:13:46] <ElGuapo_> Im gonna have to run that, no auth
[00:13:57] <SnoopJ> bitplane, clarification: that is the same inheritance, but IntEnum is the official way, and defines a handful of dunders that you'll be missing if you do (int, Enum) yourself
[00:14:01] <bitplane> oh nice, yeah looks good
[00:14:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:14:21] <bitplane> awesome thanks SnoopJ
[00:14:31] * grym does (str, Enum) fairly often purely for lazy serialization 
[00:14:43] <SnoopJ> grym, that does happen to be a different type than int
[00:14:49] <Helenah> I've yet to add groups and some permissions.
[00:15:10] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[00:15:22] <grym> well, yes, but i mean that (foo, Enum) is a rare case where MI in python works very tidily
[00:15:47] <bitplane> yeah I liked it, don't get to use multiple inheritance very often
[00:16:23] <bitplane> pity really because irt is well supported
[00:16:50] <bitplane> it's*
[00:16:58] <SnoopJ> yea, the problems are mostly the ones associated with the pattern itself
[00:17:28] <Swayze> do you mean inheriting from more than one class?
[00:17:36] <faLUKE> grym: it says it's of class "Path", ( https://github.com/regebro/svg.path/blob/master/src/svg/path/path.py ) but I don't understand how to iterate its elems. so to get Move(...) and Line(..)
[00:17:37] <Swayze> is this 'multiple inheritance'
[00:17:38] *** Joins: Klinda (~superleag@user/klinda)
[00:17:42] <SnoopJ> Swayze, yep
[00:17:48] <Swayze> ok
[00:18:16] <grym> faLUKE: well, you found a good place to learn how, but there may be docs that can help you too
[00:18:20] <SnoopJ> bitplane, in your gist you could use `self` instead of the class name, btw, in the keys for that dict
[00:18:26] <Swayze> what purposes does multiple inheritance serve other than to create hybrid monsters
[00:18:30] <SnoopJ> (and probably should, lest the class name change!)
[00:18:30] <Swayze> :-p
[00:18:56] <SnoopJ> Swayze, it's usually how "mixins" are done
[00:18:58] <Swayze> interbreeding of two things that dont go together in the wild :p
[00:19:05] <grym> faLUKE: you iterate Paths with any of the normal things that iterate sequences, though, because that's waht it is
[00:19:18] <SnoopJ> `class Foo(Base, SomeFeature, SomeOtherFeature):  # this is a Base subclass that also has those two mixin features`
[00:19:23] <bitplane> good call, it was a class method at first, until I tried to use it
[00:19:35] <Swayze> mixins huh, i'll google that
[00:19:47] <SnoopJ> yea a class method could be okay too, but either way that may cut down on the duplication that bugs you
[00:20:06] <grym> faLUKE: this looks like a pretty sparsely documented thing though
[00:21:00] <Swayze> "A mixin can also be viewed as an interface with implemented methods" lol isnt that a class
[00:21:04] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[00:21:06] <Swayze> man wikipedia is ..
[00:21:10] <Swayze> https://en.wikipedia.org/wiki/Mixin
[00:21:18] <SnoopJ> Swayze, if you want to do it on multiple classes, you have to repeat the functionality across the entire tree, unless you use mixins.
[00:21:25] <faLUKE> grym: I always used dicts, it's the first time I see a class with a list of classes encapsulated
[00:21:28] *** Joins: Atlas667 (~Atlas667@94.198.42.86)
[00:21:30] *** Joins: node1 (~node1@user/node1)
[00:21:34] <Swayze> why not just have all those classes inherit from one parent
[00:21:43] <Swayze> which has the functionality that needs repeaing
[00:21:51] <SnoopJ> Swayze, because they might have contradictory functionalities
[00:22:00] <bjs> Swayze: you could, you'd just end up writing more classes for each combination of features
[00:22:21] <SnoopJ> yea, you'd be repeating yourself a lot, instead of "mixing in" just the thing you want. OTOH, this isn't a super common pattern in everyday Python
[00:22:23] <bjs> mixins isn't the only solution of course and isn't always the best option either
[00:22:37] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[00:22:44] <Swayze> thanks
[00:23:27] <SnoopJ> the socketserver library provides some examples: https://docs.python.org/3/library/socketserver.html#socketserver.ForkingMixIn
[00:24:02] <Swayze> nice example
[00:24:10] <Swayze> its well documented
[00:24:23] <Swayze> you would think the second,last paramter would have the last word
[00:24:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[00:24:34] <Swayze> making it the first one seems unintuitive as a first thought
[00:24:37] <SnoopJ> "last" is complicated here because inheritance is
[00:24:58] <node1> Hi, does anyone have any idea about how swagger.json file is useful in studying API?
[00:25:36] *** Joins: aphysically (~aphysical@user/aphysically)
[00:25:40] <mickey8> can i prevent input() from throwing ANYTHING to stdout?
[00:25:57] <mickey8> i mean, literally just input() still throws a blank to stdout
[00:26:15] *** Quits: brettgilio (~brettgili@x-node.gq) (Ping timeout: 250 seconds)
[00:26:16] <bjs> mickey8: you can use sys.stdin directly
[00:26:21] <bjs>  sys.stdin.readline() etc
[00:26:39] <grym> node1: i make a tool like redoc parse it for me https://github.com/Redocly/redoc
[00:26:50] <bjs> mickey8: but I thought input() without arguments shouldn't write anything to stdout?
[00:26:51] <han-solo> bitplane: https://bpa.st/JNWQ as SnoopJ said, you could use a tuple too...
[00:26:52] <grym> node1: (if i just want to see as a human what the API is)
[00:27:51] *** Quits: riposte (~finalripo@2403-5802-74-2--16c3.ip6.aussiebb.net) (Ping timeout: 268 seconds)
[00:28:04] <SnoopJ> han-solo, does that work for using the members as ints, though?
[00:28:10] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 260 seconds)
[00:28:45] <node1> grym How much useful it is? in terms of studying API?¬† And how to install it ?
[00:29:29] <SnoopJ> oh huh, it does work, that's neat
[00:30:06] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:30:07] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[00:30:23] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[00:30:24] <grym> node1: i don't know what "studying API" means to you; you don't need to install redoc locally though, you can point their online viewer at the openapi.json https://redocly.github.io/redoc/
[00:30:42] <han-solo> SnoopJ: but it does feel over worked...
[00:30:50] <grym> node1: for example, here's slack's https://redocly.github.io/redoc/?url=https://api.apis.guru/v2/specs/slack.com/1.7.0/openapi.yaml
[00:30:50] <han-solo> a dict seems so straight forward ':)
[00:30:59] <SnoopJ> han-solo, agreed, I'd much rather represent the enum of types as...an enum :)
[00:31:06] <han-solo> :)
[00:33:52] <Swayze> grym: thats rad
[00:33:54] <Swayze> cheers
[00:34:36] *** Joins: superboot (~agentgasm@user/superboot)
[00:34:48] <han-solo> you could paste it here https://editor.swagger.io/ # and see ?
[00:35:05] <grym> that'll work too
[00:35:07] <node1> I did that
[00:35:57] <node1> Is there anyway to¬† run the GET API¬† from swagger api page and observe the output ?
[00:36:21] <han-solo> sure
[00:36:34] <node1> how?
[00:36:36] <han-solo> they seem to have the try it out thing
[00:37:02] <han-solo> er,...you mean your api
[00:37:34] <node1> yes
[00:37:51] <grym> i'd just copy/paste the generated curl commands probably
[00:37:59] <grym> since that's what i use a lot anyway
[00:37:59] <han-solo> yeah
[00:38:21] <grym> or do it with requests/httpx in ipython or something similar
[00:39:38] *** Joins: arinov (~arinov@213.194.126.155)
[00:40:01] *** Joins: geli (~gelignite@55d411d7.access.ecotel.net)
[00:40:07] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Read error: Connection reset by peer)
[00:41:08] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[00:41:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:41:18] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:42:54] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[00:43:50] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:46:11] *** Quits: irrgit (~irrgit@192.241.175.183) (Ping timeout: 245 seconds)
[00:46:51] <bitplane> yay! aenum does what I need!
[00:46:53] <bitplane> https://gist.github.com/bitplane/0e741a186c16fd680d5549bf4b9f6219
[00:47:05] *** Joins: pycurious (~Adium@user/pycurious)
[00:47:20] *** Quits: raxor2k (~raxor2k@78.158.245.248) (Remote host closed the connection)
[00:47:26] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[00:48:46] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Quit: Leaving)
[00:49:13] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[00:50:30] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[00:50:33] *** Joins: djapo (~archangel@user/djapo)
[00:51:16] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:51:54] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[00:53:13] <grym> i can't tell at first class how that differs from enum.Enum
[00:53:18] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[00:55:24] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[00:55:55] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[00:56:23] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[00:56:57] *** Joins: pycurious (~Adium@user/pycurious)
[00:57:20] *** Joins: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl)
[00:57:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:58:30] <phy1729> Seems there's an enum value an a uh value value
[00:58:36] <hzm74> Hello, why doesn‚Äôt this simple python code not work as I expected (beginner):
[00:58:43] <hzm74> https://bpa.st/G6SA
[00:59:07] <phy1729> you didn't call funcb
[00:59:08] <Repiphany> funb isn't being called inside line 8
[00:59:09] <phantomotap> you aren't calling the function
[00:59:29] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[01:00:11] *** Joins: han-solo (~han-solo@user/han-solo)
[01:01:31] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[01:01:47] *** Quits: lacrymology (~lacrymolo@181.167.210.254) (Ping timeout: 268 seconds)
[01:02:36] <hzm74> In line 8 funa calls funb. ?!
[01:03:06] <phantomotap> nope.
[01:04:10] <phantomotap> funb() is a function call
[01:04:25] *** Joins: pycurious (~Adium@user/pycurious)
[01:04:31] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[01:04:32] *** Quits: sazawal (~sazawal@122.161.81.235) (Ping timeout: 240 seconds)
[01:05:27] <BrenBarn> in line 8 funa is called with funb as its argument
[01:05:35] <hzm74> funb() is a function call. Funa is calling it, so why doesn‚Äôt funb run in funa ?
[01:06:05] *** Joins: sazawal (~sazawal@122.161.84.237)
[01:06:20] *** Joins: martums3 (~martums@user/martums)
[01:06:21] <phantomotap> funb() is indeed a function call, but funb is not
[01:06:41] <hzm74> So how do I pass a string value which function A returns in an other function?
[01:07:25] <phy1729> funa(funb())
[01:07:37] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[01:08:04] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 260 seconds)
[01:08:30] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[01:08:31] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:09:02] *** Quits: martums (~martums@user/martums) (Ping timeout: 240 seconds)
[01:09:02] *** martums3 is now known as martums
[01:09:08] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:09:42] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[01:10:06] <hzm74> I get it now. Thnx. : https://bpa.st/2MKQ
[01:10:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:10:46] *** Quits: joshisanonymous (~joshisano@2601:246:200:7080:50ab:42:3ddb:a066) (Ping timeout: 245 seconds)
[01:12:23] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 250 seconds)
[01:13:08] *** Joins: luigibu (~luigi@80.30.201.209)
[01:13:57] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[01:14:23] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:14:26] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[01:15:20] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:16:07] <hzm74> I love this üëç
[01:17:34] *** Quits: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[01:17:54] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-70-146.poda.cz)
[01:17:59] *** Joins: xdeadface_ (~xdeadface@gateway/tor-sasl/xdeadface)
[01:18:36] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-70-146.poda.cz) (Remote host closed the connection)
[01:18:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[01:19:47] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:20:09] *** Joins: mickey8 (~user@user/mickey)
[01:20:11] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[01:23:36] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[01:23:48] *** Joins: zam (~zam@user/zam)
[01:24:22] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:24:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:75c5:c6ed:c91:17fe) (Read error: Connection reset by peer)
[01:26:47] *** Joins: xkuru (~xkuru@user/xkuru)
[01:28:45] <Helenah> You know... it was easy enough just to code my own argument parser. lol
[01:30:02] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[01:30:40] *** Joins: Peng (~mnordhoff@flash.mattnordhoff.net)
[01:30:51] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:30:53] <phy1729> Did you handle -- and short option joining?
[01:31:05] *** Joins: ede (~ede@user/ede)
[01:31:52] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:32:11] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:e02c:76d4:b60e:293) (Quit: Textual IRC Client: www.textualapp.com)
[01:32:24] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[01:32:59] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[01:34:58] <Helenah> phy1729: Short option is soon for --foo type arguments work.
[01:35:26] <Helenah> I got fed up of the existing libraries forcing help messages in a situation where I didn't even want them. Most the time they're find.
[01:35:29] <Helenah> *fine
[01:35:54] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:37:50] <nedbat> Helenah: what do you mean by forcing help messages?
[01:38:02] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[01:38:03] <Helenah> The format I wanted was command {--foo | -f }
[01:38:09] <Helenah> nedbat: Usage messages
[01:38:20] <Helenah> I have a load of custom code for that stuff.
[01:38:26] <nedbat> Helenah: most command parsers let you overload the help messages
[01:38:45] <Helenah> Yes I'd already tried a dozen ways to do it, it was tedious.
[01:39:08] <Helenah> And mine is literally a few lines of code...
[01:39:14] <Helenah> Better than loading a full library.
[01:39:16] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:39:24] *** Joins: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl)
[01:39:49] <ChrisWarrick> the number of lines of code in a library isn‚Äôt really important
[01:40:24] <ChrisWarrick> a library is often something that just works and does the difficult parts for you
[01:40:24] <Helenah> Agreed but when the actual developers of the library have wrote all that code in a way that complicates things then... I think I'd rather just write my own code.
[01:40:26] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[01:40:27] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[01:40:34] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[01:40:46] *** Quits: zam (~zam@user/zam) (Quit: Leaving...)
[01:40:54] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[01:41:05] <grym> consider though that argparsers are complicated because they're a part of the stdlib that has to deal with idiots and keyboards cat-typing things into your program
[01:41:20] <Helenah> Honestly I was doing overrides to the private part of the argparse API and eventually do gave up, I'd overridden the ArgumentParser class.
[01:41:32] <grym> ( ‚Ä¢·∑Ñ·Ω§‚Ä¢·∑Ö)Ôºü
[01:41:33] <nedbat> i'm finding it hard to let go of the idea that i can affect how tests get assigned to xdist workers, but it seems to be difficult
[01:41:40] *** Quits: jay-m126_ (~jay-m@154.72.150.235) (Ping timeout: 260 seconds)
[01:41:40] *** Quits: jay-m126 (~jay-m@154.72.150.235) (Ping timeout: 260 seconds)
[01:41:53] *** Joins: pycurious (~Adium@user/pycurious)
[01:41:55] <Helenah> And those parts of the library are boundf to change rendering my codebase obsolete ALL the time!
[01:42:00] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[01:42:11] <grym> i dunno, argparse is pretty darn stable
[01:42:18] <Helenah> Yes, it is.
[01:42:26] <grym> ok, so there goes that argument.
[01:42:27] <phy1729> There's less obvious points like -- and short option stacking and short option argument appending
[01:42:28] <Helenah> And most the time when I need it I use it.
[01:42:33] <grym> i mean.  you do you
[01:42:50] <grym> but i would not decide that writing my own argparser is a good yak to shave
[01:43:07] <Helenah> Why not?
[01:43:15] <Helenah> I can't find any reason why it would go wrong.
[01:43:25] <grym> i can't see why i'd bother
[01:43:26] *** Joins: CalculusCat (~Nyaa@pool-71-178-171-140.washdc.fios.verizon.net)
[01:43:26] <Helenah> I spent 5 mins whipping it up.
[01:43:50] <Helenah> I feel like putting the word "lazy" into a context and dropping it in here but I'll refrain.
[01:44:01] <grym> k
[01:44:20] <Helenah> I don't wanna create enemies nor do I think it's a nice thing for me to say.
[01:44:27] <grym> too late :P
[01:44:32] *** Quits: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[01:44:44] <grym> (i'm not your enemy, but 'ha ha i thought of a rude thing to say but i won't' is, well, a rude thing to say )
[01:44:58] <Helenah> Yes, true.
[01:45:12] <Helenah> Anyway... I'm going to put this behind me.
[01:45:19] <grym> glhf
[01:46:48] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[01:46:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 265 seconds)
[01:48:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[01:48:17] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[01:48:51] *** Quits: ArtfulDodger_ (~ArtfulDod@134.68.205.77.rev.sfr.net) (Read error: Connection reset by peer)
[01:48:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:49:07] *** Joins: pycurious (~Adium@user/pycurious)
[01:49:15] *** Joins: ArtfulDodger_ (~ArtfulDod@2a04:cec0:112c:edb4:d0dd:e391:d209:ce0c)
[01:49:27] *** Quits: CalculusCat (~Nyaa@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[01:49:32] <Helenah> May I ask, what is cat-typing?
[01:49:32] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[01:49:42] <Helenah> Is it where I get a cat and have it IRC for me?
[01:49:44] *** Joins: CalculusCat (~Nyaa@pool-71-178-171-140.washdc.fios.verizon.net)
[01:49:53] *** Joins: fikran (~fikran@user/fikran)
[01:50:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[01:50:10] <grym> i have two cats and sometimes they decide to contribute to my work in a rather physical way
[01:50:21] <grym> usually when i'm not looking...
[01:51:34] <Helenah> Oh nice! :D
[01:51:48] <Helenah> Hey that data science you're into, leave the work to your cats! :D
[01:53:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[01:53:41] *** Quits: nicode (~nic@2607:f2c0:94e0:ba00:6878:56fe:bb8f:5f9f) (Ping timeout: 245 seconds)
[01:54:16] *** Quits: delvian (~delvian@41.13.198.66) (Quit: Leaving)
[01:56:47] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:57:13] *** Quits: ArtfulDodger_ (~ArtfulDod@2a04:cec0:112c:edb4:d0dd:e391:d209:ce0c) (Quit: Leaving)
[01:58:46] <Helenah> phy1729: Now it supports short options. :)
[02:01:39] *** Joins: delvian (~delvian@41.13.198.66)
[02:02:53] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[02:03:00] *** Joins: iflema (~ian@user/iflema)
[02:03:10] <bitplane> stupid question time...
[02:03:27] <bitplane> how come checksum can't be seen by flake8? https://gist.github.com/bitplane/abad594a41527eb3f6b0472c9b92831d
[02:03:29] *** Quits: ionface (~ionface@user/ionface) (Remote host closed the connection)
[02:03:41] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[02:03:51] *** Quits: xdeadface_ (~xdeadface@gateway/tor-sasl/xdeadface) (Ping timeout: 276 seconds)
[02:04:12] *** Quits: nomic (~nomic@185.217.117.51) (Read error: Connection reset by peer)
[02:04:19] <Helenah> bitplane: Hi again. :)
[02:04:26] <bitplane> hiya
[02:04:29] *** Joins: xdeadface_ (~xdeadface@gateway/tor-sasl/xdeadface)
[02:04:55] <BrenBarn> bitplane, you're using the same name for the function as for the variable
[02:05:01] <bitplane> oh, duh
[02:05:03] <BrenBarn> `checksum = struct.pack("B", checksum(self.data))`
[02:05:12] <bitplane> that shouldn't matter though right?
[02:05:28] <bitplane> cause self.checksum is different to checksum
[02:05:38] <bitplane> but yeah I can see why flake8 would cry. Thank you
[02:05:48] <BrenBarn> there's no self there
[02:05:59] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[02:06:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:06:10] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[02:06:29] <bitplane> yeah self.checksum is a number, checksum is a function
[02:06:37] *** Joins: nomic (~nomic@host86-175-244-130.range86-175.btcentralplus.com)
[02:06:41] <bitplane> but yeah I've changed it to calculate_checksum, seems to work. Thanks :)
[02:06:53] <bitplane> ohhh
[02:07:01] <bitplane> I overwrote a local variable lol
[02:07:08] <bitplane> ok I suck. thanks again
[02:07:10] <BrenBarn> I'm saying in line 25 of your function there is no self at all
[02:07:21] <BrenBarn> you have a local variable checksum and a global function checksum
[02:07:38] *** Joins: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0::e47b)
[02:07:39] *** Joins: schumaml (~schumaml@dslb-188-104-168-024.188.104.pools.vodafone-ip.de)
[02:07:45] <BrenBarn> you also have an attribute self.checksum but that is never used in `to_bytes`
[02:07:47] *** Joins: xardas (~xardas@149.233.51.127)
[02:10:02] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:85bc:764e:7689:fb9f) (Quit: Leaving)
[02:10:07] * Helenah holds a nose bleed
[02:10:19] * CalculusCat wonders if Helenah is ok
[02:10:25] *** Joins: ionface (~ionface@user/ionface)
[02:10:28] <Helenah> CalculusCat: I hope so! :3
[02:10:33] <CalculusCat> :)
[02:10:37] <CalculusCat> stay safe
[02:10:41] <bitplane> yeah the class is used twice - once for incoming data and once for outgoing
[02:10:42] <Helenah> Don't worry I have a daily bleed. :3
[02:10:45] <Helenah> You too CalculusCat !
[02:10:46] <CalculusCat> ah
[02:10:50] <CalculusCat> will do
[02:11:00] <Helenah> :)
[02:11:20] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:11:20] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:11:36] <bitplane> so.. if I construct some data from the wire I want to compare the checksum with what it should be
[02:11:40] *** Joins: chuck_ (~chuck@181.191.143.126)
[02:12:00] *** Joins: jazzy (~jaziz@user/jaziz)
[02:12:21] <bitplane> seems dangerous to mutate it implicitly
[02:14:33] <bitplane> I'll set it if `checksum is None` in the constructor
[02:14:40] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:17:04] *** Joins: MercilessDeth (~brad@136.49.59.177)
[02:18:24] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[02:19:07] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[02:20:32] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[02:20:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:23:18] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:24:00] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[02:27:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Ping timeout: 256 seconds)
[02:28:43] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[02:29:19] *** Quits: sazawal (~sazawal@122.161.84.237) (Quit: Leaving)
[02:29:30] *** Quits: chuck_ (~chuck@181.191.143.126) (Quit: leaving)
[02:30:21] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[02:30:27] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 265 seconds)
[02:32:43] *** Quits: CalculusCat (~Nyaa@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[02:34:53] *** Joins: pycurious (~Adium@user/pycurious)
[02:34:57] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[02:35:06] *** Quits: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0::e47b) (Ping timeout: 260 seconds)
[02:36:43] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431)
[02:36:58] <xardas> Hey guys just a quick question
[02:37:12] <xardas> What's the best resource to learn python ?
[02:37:50] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[02:37:55] *** Joins: Viewday113 (~Viewday@user/viewday)
[02:38:21] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:38:23] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[02:38:32] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 240 seconds)
[02:38:47] <mefistofeles> xardas: it depends on many things, if you are looking towards a quick tutorial to learn basic python syntax and objects, the official tutorial is a very good one
[02:39:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:39:18] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[02:39:22] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[02:39:53] <xardas> I have an university assignment that includes neural network with tensorflow
[02:40:05] <xardas> I still haven't looked it up yet
[02:40:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:40:14] *** Viewday113 is now known as Viewday11
[02:40:48] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:41:04] *** Joins: jab416171 (~jab416171@c-67-172-226-114.hsd1.ut.comcast.net)
[02:41:31] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[02:41:51] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[02:42:06] <xardas> hm...well
[02:42:18] <xardas> I'll just grab a book and go through it all
[02:42:26] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[02:44:42] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[02:46:09] *** Quits: remolej (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[02:46:35] *** Joins: remolej (~kenoba@user/kenoba)
[02:47:36] *** Quits: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611) (Read error: Connection reset by peer)
[02:48:14] *** Joins: onichomp (~onichomp@2806:264:4404:80b7:39b5:1fff:b620:146d)
[02:49:06] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:50:54] *** Joins: pycurious (~Adium@user/pycurious)
[02:52:08] *** Quits: nomic (~nomic@host86-175-244-130.range86-175.btcentralplus.com) (Ping timeout: 260 seconds)
[02:52:52] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[02:54:37] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[02:55:04] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[02:55:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[02:55:29] *** Joins: Guest9479 (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[02:55:44] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:52] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[02:57:47] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[02:58:00] *** Joins: akk (~akk@75.161.146.115)
[02:58:07] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[02:59:00] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[02:59:53] *** Joins: mwichmann_ (~mats@209-188-119-117.taosnet.com)
[02:59:56] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[03:01:57] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[03:03:03] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[03:03:19] *** Joins: Andrynet_ (~Andrey@190.152.208.104)
[03:03:45] *** Quits: Andrynet_ (~Andrey@190.152.208.104) (Client Quit)
[03:04:55] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:06:07] *** Quits: Guest9479 (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[03:06:07] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[03:06:25] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[03:07:39] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:07:43] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[03:09:39] *** Parts: xdeadface_ (~xdeadface@gateway/tor-sasl/xdeadface) (Leaving)
[03:10:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:10:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:10:53] *** Joins: emf (~emf@2620:10d:c090:400::5:acc4)
[03:12:21] *** Quits: emf (~emf@2620:10d:c090:400::5:acc4) (Client Quit)
[03:12:29] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[03:12:56] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[03:13:28] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 265 seconds)
[03:13:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:14:40] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:15:11] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[03:16:28] *** Quits: bitplane (~bitplane@2a00:23a8:826:a800:55ca:3c58:edec:de8a) (Ping timeout: 256 seconds)
[03:18:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:18:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:19:16] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[03:19:27] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[03:19:44] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[03:19:58] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:20:05] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[03:20:23] *** Joins: pycurious (~Adium@user/pycurious)
[03:20:32] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[03:20:45] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[03:21:29] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[03:21:46] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[03:22:39] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[03:23:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[03:24:20] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:24:51] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:ac5a:7772:568e:3548) (Ping timeout: 268 seconds)
[03:25:04] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[03:25:47] *** Joins: djapo (~archangel@user/djapo)
[03:26:12] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 260 seconds)
[03:32:01] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[03:32:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:33:28] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[03:34:06] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[03:34:51] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[03:35:11] *** Quits: grimvar (~grimvar@i5C75F617.versanet.de) (Ping timeout: 250 seconds)
[03:35:35] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[03:36:47] *** Joins: grimvar (~grimvar@i5C75F680.versanet.de)
[03:39:28] *** Joins: newpy (~newpy@206.168.231.90)
[03:40:12] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 260 seconds)
[03:40:23] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[03:40:51] *** Joins: bloody (~bloody@user/bloody)
[03:41:48] <newpy> is there a tutorial on decision trees that uses vectorization instead of just looping?
[03:41:54] <newpy> can't find one for the life of me
[03:42:11] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[03:42:17] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[03:42:24] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[03:42:33] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[03:42:34] *** Joins: naranja (~orange@user/orangeboxcutter)
[03:42:43] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[03:43:14] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Ping timeout: 260 seconds)
[03:44:23] *** Joins: llh (~llh@user/llh)
[03:45:12] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[03:47:19] <cluelessperson> newpy, if it's what I think it sounds like, you can make a tree of decisions,  then you store state for the (session, last_node) for that user
[03:47:42] <cluelessperson> newpy, so when they return, you just recognize the session, take their answer and apply it to the last node, to find the new node you're at?
[03:48:05] <newpy> cluelessperson, nah I mean using things like numpy broadcasting etc to speed up execution
[03:48:17] <newpy> looping in python is slow
[03:48:54] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 268 seconds)
[03:50:04] *** Joins: arinov (~arinov@213.194.126.155)
[03:50:25] *** Joins: pycurious (~Adium@user/pycurious)
[03:52:58] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[03:53:10] <cluelessperson> I'm unfamiliar with broadcasting
[03:53:38] <cluelessperson> newpy, is it basically storing many objects in an array and throwing them all into a decision tree and getting an array of results?
[03:53:47] *** Quits: Peng (~mnordhoff@flash.mattnordhoff.net) (Quit: Peng timeout)
[03:54:02] *** Quits: mobius (sid478273@uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[03:54:31] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[03:54:31] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[03:54:32] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[03:54:32] *** Quits: pwillard (sid136981@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[03:54:45] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[03:55:02] *** Quits: greyblue9 (sid500829@ilkley.irccloud.com) (Ping timeout: 240 seconds)
[03:55:02] *** Quits: nem (sid113421@user/nem) (Ping timeout: 240 seconds)
[03:55:16] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[03:55:32] *** Quits: dunc (sid16@uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[03:56:02] <newpy> no it's basically arranging data in such a way such that it can be processed by a low-level C function instead of constantly interpreting slow python instructions on each loop iteration
[03:56:02] *** Quits: neoweb (sid343200@lymington.irccloud.com) (Ping timeout: 240 seconds)
[03:56:31] <newpy> to anyone else around, I'm looking for a vectorized decision tree tutorial
[03:56:33] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[03:56:57] *** Joins: nem (sid113421@user/nem)
[03:57:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[03:57:04] *** Joins: mobius (sid478273@id-478273.uxbridge.irccloud.com)
[03:57:09] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[03:57:13] *** Joins: neoweb (sid343200@id-343200.lymington.irccloud.com)
[03:57:24] *** Joins: Peng (~mnordhoff@flash.mattnordhoff.net)
[03:57:29] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 250 seconds)
[03:57:49] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Quit: Client closed)
[03:57:56] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 265 seconds)
[03:58:03] *** Joins: dunc (sid16@id-16.uxbridge.irccloud.com)
[03:58:13] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[03:58:15] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[03:58:30] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[03:59:08] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[03:59:14] *** Joins: fikran (~fikran@user/fikran)
[04:00:00] *** Joins: salparadise (~salparadi@129.146.17.140)
[04:01:11] *** Quits: ormiret (sid314108@lymington.irccloud.com) (Ping timeout: 245 seconds)
[04:01:36] *** Quits: altendky (sid135382@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[04:01:36] *** Quits: peac (sid344662@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[04:01:45] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[04:01:51] <cluelessperson> newpy, maybe you'd find a better answer in a C channel.
[04:02:01] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[04:02:30] <cluelessperson> newpy, or, search for a specific python library that handles decision trees  with C bindings
[04:02:34] <newpy> I doubt it, numpy is a python library
[04:02:48] *** Joins: peac (sid344662@id-344662.hampstead.irccloud.com)
[04:02:50] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[04:02:51] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 245 seconds)
[04:03:16] *** Quits: jtanner (sid194399@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[04:03:16] *** Quits: jposer (sid132110@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[04:03:28] *** Joins: altendky (sid135382@id-135382.hampstead.irccloud.com)
[04:03:49] *** Joins: r0bby (r0bby@user/r0bby)
[04:04:11] *** Joins: raxor2k (~raxor2k@3.109-247-153.customer.lyse.net)
[04:04:14] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 260 seconds)
[04:04:18] *** Joins: jtanner (sid194399@id-194399.helmsley.irccloud.com)
[04:04:21] *** Joins: Wulf (~Wulf@user/wulf)
[04:04:55] <cluelessperson> newpy, I guess I don't quite understand the word "process" in this context
[04:05:20] <cluelessperson> how will the c instructions know the processing to be done, based on a decision tree in python?
[04:05:28] *** Joins: jposer (sid132110@id-132110.uxbridge.irccloud.com)
[04:05:41] *** Joins: remolej (~kenoba@user/kenoba)
[04:05:45] <raxor2k> sqlalchemy.exc.InvaliRequestError: The asyncio extension requires an async driver to be used. The loaded "pymysql" is not async. Any help pls? h
[04:05:50] <raxor2k> https://bpa.st/RAJQ
[04:05:51] * cluelessperson (thinks of decision trees as a graph where you design options to navigate)
[04:05:52] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:06:21] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[04:06:32] <cluelessperson> raxor2k, google search "sqlalchemy async driver" and I expect you'll find options.
[04:08:09] <newpy> raxor2k, https://pypi.org/project/aiomysql/
[04:09:21] <raxor2k> cluelessperson: if youre talking about "sqlalchemy[asyncio]" i have that already installed
[04:09:23] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:09:42] <Evolver> What's the easiest way to run something on one or more Nvidia GPUs with Python? Each subtask is easily parallelizable but not easily vectorizable.
[04:09:42] <raxor2k> newpy: i have aiomysql already installed
[04:10:00] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:10:11] <Helenah> According to PEP8 I should be able to do something like "if list:" to check if a list is not empty but I still get "List index out of range", even trying to handle the index error doesn't give a change of result.
[04:10:16] *** Joins: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0::e47b)
[04:10:17] <BtbN> You can't just run arbitrary python code on GPUs, if that's what you're thinking.
[04:10:18] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[04:10:19] <Helenah> Wait...
[04:10:28] <Helenah> I think I know where I went wrong.
[04:10:30] <Helenah> Okies :3
[04:10:35] <Evolver> BtbN: I know that already. I am ready to rewrite the relevant functions.
[04:10:39] *** Joins: Inline (~Inline@2a02:908:1252:7a80::7)
[04:11:08] <Helenah> I was trying to... split part of a list that isn't there! :D
[04:11:09] <BtbN> The usual low-effort way to it is to use performance primitives, which implement common operations as algorithms that run on GPUs
[04:11:43] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[04:11:58] <mefistofeles> numba :P
[04:12:07] <raxor2k> nvm: i solved it
[04:12:55] *** Joins: nyah (~nyah@94.6.71.219)
[04:12:56] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[04:13:11] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:13:32] <newpy> raxor2k, https://pythonrepo.com/repo/aio-libs-aiomysql-python-connecting-and-operating-databases
[04:14:14] *** Joins: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112)
[04:15:47] *** Joins: korg815 (~korg815@user/korg815)
[04:16:10] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[04:16:57] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:17:13] <Helenah> Actually no I wasn't wrong
[04:17:25] <raxor2k> newpy no worries i solved it
[04:17:28] <Helenah> Okies sorted! :D
[04:18:02] <newpy> raxor2k, was it a minor change?
[04:19:03] <Helenah> You do know.. nvm
[04:19:15] <raxor2k> AttributeError: 'AsyncSession' object has no attribute 'query'   : https://bpa.st/GADQ
[04:19:35] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 250 seconds)
[04:19:47] <raxor2k> newpy: all i had to change from  "mysql+pymysql://"  to  "mysql+aiomysql://"
[04:20:08] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[04:20:28] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:20:32] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[04:21:19] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[04:22:34] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:24:16] <grym> the easiest way is to use parallel and set CUDA_VISIBLE_DEVICES cleverly >:)
[04:24:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:24:20] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:25:11] *** Joins: pycurious (~Adium@user/pycurious)
[04:25:17] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:26:04] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Read error: Connection reset by peer)
[04:26:40] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:27:41] <raxor2k> another reason why i hate those documentations.. 1 documentations shows 1 answer, and another documentation shows a completely different aprroach.. jees
[04:28:35] *** Quits: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112) (Quit: nat_of_cy)
[04:28:45] *** Quits: nicholaus04 (~nicholaus@172.58.75.57) (Quit: WeeChat 2.8)
[04:28:59] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:29:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[04:29:34] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[04:29:50] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[04:29:56] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[04:29:59] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:30:02] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[04:30:04] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:30:12] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[04:33:14] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:35:04] <nedbat> raxor2k: get used to this. there's always multiple ways to do the same thing
[04:35:09] *** Quits: Atlas667 (~Atlas667@94.198.42.86) (Ping timeout: 268 seconds)
[04:35:15] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 260 seconds)
[04:35:38] <nedbat> raxor2k: it's not the docs' fault. it's the nature of software (and lots of other things)
[04:36:22] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:36:45] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:39:19] <raxor2k> nedbat: so you think that if they didnt make an effort to write good documenation it could become better? okei
[04:39:44] <nedbat> raxor2k: you didn't say the docs were bad. you said you found two different things that had different instructions.
[04:40:46] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[04:42:25] *** Joins: Lightsword (~Lightswor@user/lightsword)
[04:42:37] *** Joins: nicode (~nic@2607:f2c0:932e:7500:ca64:3c01:7cea:e447)
[04:42:43] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:42:53] <raxor2k> nedbat: i also think they are very bad
[04:43:10] <nedbat> raxor2k: yes, i know you do.  i think you need to learn to work with documentation better.
[04:44:28] <nedbat> raxor2k: lots of docs could be better.  but you have a part to play here also.
[04:46:07] <Helenah> How do I pass a dict into a function? I'm getting "unhashable type: dict".
[04:46:08] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:46:21] <nedbat> Helenah: do you have a caching decorator on the function?
[04:46:33] <Lightsword> what's the equivalent of "python setup.py build" for building a pyproject.toml(pep-0517 I think) project?
[04:47:12] <nedbat> Helenah: passing a dict is as simple as ` f(the_dict) `,  but a caching decorator will try to hash the arguments.
[04:47:31] <Helenah> Yes
[04:47:43] <Helenah> That's what I did but don't think I have a caching decorator.
[04:47:53] <nedbat> Helenah: can you link us to the code?
[04:48:02] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[04:48:09] <Helenah> Yes
[04:48:55] <raxor2k> nedbat: how can i play a part here
[04:48:56] <raxor2k> ?
[04:49:05] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:49:09] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:49:13] <nedbat> raxor2k: work on how you approach uncertainty, how well you follow instructions, and so on.
[04:49:33] <nedbat> raxor2k: the other day you claimed the docs were wrong, but the docs said sqlite, and you were using postgres.
[04:49:39] <nedbat> raxor2k: was that the docs' fault?
[04:50:53] <Helenah> nedbat: https://termbin.com/z53o
[04:50:54] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:50:57] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:51:11] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:51:11] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 245 seconds)
[04:51:18] <nedbat> Helenah: can you include the whole program, and the full error report?
[04:51:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:51:36] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 245 seconds)
[04:52:06] <Helenah> Okies :3
[04:52:42] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:52:45] *** Quits: flokuehn (~flokuehn@87.123.247.62) (Ping timeout: 250 seconds)
[04:52:55] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:53:02] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[04:53:11] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:53:21] <Helenah> nedbat: https://termbin.com/eepf
[04:53:29] *** Joins: _pash (~pash@188.172.156.18)
[04:53:44] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[04:54:45] *** Joins: flokuehn (~flokuehn@87.123.247.51)
[04:54:55] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:55:01] *** Joins: pycurious (~Adium@user/pycurious)
[04:55:02] *** Quits: driib2 (~driib@185.195.233.168) (Quit: The Lounge - https://thelounge.chat)
[04:55:09] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:55:25] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:55:41] <BrenBarn> that's not the full error report
[04:55:42] <newpy> nedbat, do you know of a good tutorial for vectorizing decision trees?
[04:56:54] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:57:08] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:58:09] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[04:58:50] <nedbat> newpy: i have no idea what vectorizing decision trees even means :)
[04:58:55] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:59:03] <phantomotap> me neither, but i am interested
[04:59:09] <nedbat> Helenah: that's the only error you get?
[04:59:19] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[04:59:21] <Helenah> nedbat: Yes
[04:59:22] *** Joins: rannnn8888 (~rannnn888@bzq-109-67-132-67.red.bezeqint.net)
[04:59:32] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[04:59:58] <BrenBarn> how are you running this code?
[05:00:32] <nedbat> Helenah: btw, are your password regexes all the same? Those should be a shared constant
[05:00:40] <nedbat> Helenah: how are you running the code?
[05:00:44] <newpy> nedbat, np thought I'd try my luck since you're the resident genius :P
[05:01:01] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:01:02] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 240 seconds)
[05:01:07] <Helenah> newpy: ./program :)
[05:01:19] *** Joins: OPK (~OPK@user/opk)
[05:01:21] <Helenah> yes I agree on that, that's in the er...
[05:01:23] <newpy> I meant using numpy to speed up predicting batch samples using a decision tree
[05:01:25] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:e983:cac5:a8b0:623a) (Read error: Connection reset by peer)
[05:01:25] <Helenah> well that's going to be done :3
[05:01:27] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:01:45] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[05:02:15] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[05:02:15] <nedbat> Helenah: maybe you are over-catching exceptions.  Why the "except Error" at the end?
[05:02:27] <nedbat> Helenah: also, a pastebin with line numbers would be helpful
[05:02:47] <mefistofeles> the traceback should also have the conflicting line
[05:02:55] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[05:03:11] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:03:13] <Helenah> nedbat: Good question.
[05:03:45] <nedbat> Helenah: also btw, why do you del variables?
[05:03:58] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:04:27] <Helenah> nedbat: I like to work on keeping my namespace clean.
[05:04:54] <nedbat> Helenah: i think it clutters the code.  It'd be better to do that by putting that code into a function
[05:05:17] <Helenah> Good point. :)
[05:05:30] *** Joins: pycurious (~Adium@user/pycurious)
[05:05:31] *** Quits: _pash (~pash@188.172.156.18) (Quit: leaving)
[05:05:42] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:05:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:06:41] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[05:06:49] <raxor2k> how can i actually see the data once it is queryied from the db? https://bpa.st/LQXA
[05:07:18] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:07:21] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[05:07:26] *** Joins: brabrax (~brabrax@user/brabrax)
[05:07:26] *** Joins: bitplane (~bitplane@2a00:23a8:826:a800:55ca:3c58:edec:de8a)
[05:08:02] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[05:08:22] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Quit: padraigd)
[05:08:23] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:09:19] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:09:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[05:10:06] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[05:10:24] <bitplane> What's the best pattern for a yes/no/unknown trinary choice?
[05:10:45] <grym> bitplane: in what context
[05:11:03] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:11:14] <bitplane> I've got an error code from a coin acceptor, the coin may or may not have been captured depending on the error
[05:11:39] <bitplane> some codes, no idea because it's a sensor error. I guess I'll credit the money and then turn the device off
[05:11:50] *** Joins: pycurious (~Adium@user/pycurious)
[05:11:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:12:50] *** Quits: Bardon (~Bardon@user/Bardon) (Quit: ZNC - https://znc.in)
[05:13:08] *** Joins: Bardon (~Bardon@user/Bardon)
[05:13:22] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 268 seconds)
[05:13:32] <bitplane> I was thinking True/False/"Maybe"
[05:13:32] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:13:35] *** Joins: Praise (~Fat@user/praise)
[05:14:06] <grym> i'd just name the error codes and then do stuff based on what bin i put them in
[05:14:12] <grym> that bin being, probably, a dispatch dict
[05:14:24] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:14:25] <grym> or fancy new match
[05:15:02] <bitplane> I'm not gonna implement every case, just aenum and ErrorCode.rejected
[05:15:10] <grym> or just if/elif/else and a bunch of sets
[05:15:23] <bitplane> I meant for the value itself
[05:15:53] <grym> the value itself can be whatever you want, i guess; what does your coin acceptor give you?
[05:15:54] <bitplane> is there a neat pattern that means "dunno" rather than true or false, and leans towards "probably"
[05:16:06] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:16:09] <ali1234> True/False/None? but beware that literally anything that isn't true or false is going to map to either true or false in a bool test
[05:16:10] <grym> proper trivalent logics are not common
[05:16:21] <grym> None and NaN are common lies ;)
[05:16:32] <bitplane> is NaN False?
[05:16:41] <bitplane> falsey
[05:16:46] <mefistofeles> no, False is bool
[05:16:47] <mefistofeles> :P
[05:16:48] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:16:49] <bitplane> I guess i'll use a string
[05:16:58] <grym> no, nan is not falsey; it's a numerical value that is not zero
[05:17:02] <grym> so it's true
[05:17:24] <grym> there's a rant in there about in-band signalling, but perhaps some other time
[05:17:26] <bitplane> oh that sounds like something that I don't have to import from that file, that is used elsewhere.. might be the best choice
[05:17:44] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[05:17:53] <ali1234> you can't just say NaN, you have to say float("NaN")
[05:17:58] <grym> "bool, bool, float" ... gross
[05:18:05] <grym> it's three numbers
[05:18:07] <grym> but still!
[05:18:22] <bitplane> I'm doing this sort of thing at the moment - was wondering if there was anything better: https://gist.github.com/bitplane/d98eca2b9945a44f830bba8583dd9de5
[05:18:26] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:18:31] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:18:31] <ali1234> grym: i still want first class infinity :)
[05:18:46] <ali1234> not fake float infinity...
[05:18:59] *** Joins: pycurious (~Adium@user/pycurious)
[05:19:05] <grym> ali1234: both fake float infinities
[05:19:09] <ali1234> indeed
[05:19:12] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:19:20] <ali1234> also, throw in the universal set too pls
[05:19:26] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:19:32] <bitplane> does that seem like a reasonable way to handle it, or is there something purer?
[05:19:34] <grym> once, for a split second, i thought "huh i wonder what the cardinality of float is" and then realised how stupid that was
[05:19:47] <bitplane> hehe
[05:19:47] <grym> bitplane: well, you can't do what you just wrote and still have an intenum
[05:19:52] <grym> so don't do that
[05:20:10] <grym> int('maybe') is a nice happy typeerror
[05:20:49] <grym> ali1234: there's itertools.count(), at least
[05:20:50] <bitplane> oh I thought just the aenum.value was the typed bit
[05:20:56] <ali1234> what is the cardinality of something that isn't infinite anyway? N-1?
[05:21:08] <grym> ali1234: the size of the set
[05:21:11] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:21:14] <grym> it's just an integer
[05:21:30] <grym> like there are only so many floats, we can write literally all of them down
[05:21:37] <ali1234> yes, i get that
[05:21:54] <grym> so it's just len()
[05:22:00] <ali1234> but shouldn't there be some N that describes that?
[05:22:03] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:22:07] <grym> the cardinality of {foo, bar, baz} is 3
[05:22:50] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[05:22:58] <ali1234> like there may or may not be N between N0 and N1 right? so what is before N0? just all integers?
[05:23:16] <ali1234> (sorry for math questions, heh)
[05:23:25] <grym> ali1234: yep.  and yes, the continuum hypothesis is still open
[05:23:32] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:23:49] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:23:51] *** Joins: mickey89 (~user@user/mickey)
[05:23:56] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:c06c:d776:aef2:73eb)
[05:24:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:24:24] <bitplane> updated: seems to work - https://gist.github.com/bitplane/d98eca2b9945a44f830bba8583dd9de5
[05:24:47] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:24:56] *** Quits: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0::e47b) (Ping timeout: 245 seconds)
[05:25:08] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[05:25:08] *** mickey89 is now known as mickey8
[05:25:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[05:26:02] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-4549-a9c2-dd08-03ab.res6.spectrum.com) (Read error: Connection reset by peer)
[05:26:31] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:27:02] <bitplane> oh I should use captured instead of rejected
[05:27:32] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:27:53] <bitplane> then `if ErrorCode(error_byte).captured:` will work in all cases
[05:27:59] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:28:02] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[05:28:17] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[05:28:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[05:29:11] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:29:16] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:29:55] <bitplane> but that's confusing compared to the protocol docs.. hmm. I'll give it some more thought.
[05:29:57] *** Joins: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0::e47b)
[05:30:13] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:30:25] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[05:30:27] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:58] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:32:57] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:33:14] *** Quits: rannnn8888 (~rannnn888@bzq-109-67-132-67.red.bezeqint.net) (Quit: Client closed)
[05:33:20] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:33:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:34:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:34:40] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:35:40] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:37:12] *** Joins: nomic2 (~nomic@185.217.117.132)
[05:37:24] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:37:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[05:37:32] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:c06c:d776:aef2:73eb) (Ping timeout: 240 seconds)
[05:37:37] *** nomic2 is now known as nomic
[05:38:19] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:38:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[05:39:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:39:29] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:40:02] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:41:28] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:42:02] <bitplane> ok, this kinda works - https://gist.github.com/bitplane/d98eca2b9945a44f830bba8583dd9de5
[05:43:12] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:43:32] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:43:36] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[05:44:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:44:16] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:46:01] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:46:03] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 268 seconds)
[05:47:14] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:48:30] *** Quits: han-` (~han`@user/han-/x-0887595) (Quit: The Lounge - https://thelounge.chat)
[05:48:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[05:48:58] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:49:07] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Remote host closed the connection)
[05:49:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:50:14] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[05:51:59] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:52:11] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:2920:4094:8818:7c51)
[05:53:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:53:28] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:53:31] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[05:53:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[05:53:41] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 245 seconds)
[05:53:59] *** Quits: bitplane (~bitplane@2a00:23a8:826:a800:55ca:3c58:edec:de8a) (Ping timeout: 256 seconds)
[05:54:11] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:54:45] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:55:32] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 240 seconds)
[05:55:51] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:55:56] *** Joins: zebrag (~chris@user/zebrag)
[05:57:37] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:58:16] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[05:58:40] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:58:47] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[05:59:23] *** Joins: brabrax (~brabrax@user/brabrax)
[05:59:55] *** Joins: qpdb (~qpdb@user/qpdb)
[06:00:02] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[06:00:25] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[06:00:32] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[06:01:10] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[06:01:30] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:03:09] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:03:14] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[06:03:52] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[06:04:26] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:06:12] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[06:07:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[06:07:04] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[06:07:20] <raxor2k> can someone help me here? how can i print the real query data from the db? https://bpa.st/IKNQ
[06:07:51] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[06:08:35] *** Joins: fikran (~fikran@user/fikran)
[06:09:08] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[06:09:29] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[06:09:38] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:09:46] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[06:09:57] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[06:12:06] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: a–ª–ª–∏–ª—π—ñ–∞!)
[06:12:41] *** Joins: jellyknight (~gelignite@55d49b41.access.ecotel.net)
[06:14:04] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[06:15:41] *** Quits: geli (~gelignite@55d411d7.access.ecotel.net) (Ping timeout: 265 seconds)
[06:15:44] *** Quits: faLUKE (~paolo@host-80-117-216-225.pool80117.interbusiness.it) (Remote host closed the connection)
[06:16:37] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[06:17:06] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[06:18:59] <Celelibi> The value returned by dict.keys() behave like a list, right? I mean, its order cannot change if I iterate over it twice.
[06:19:33] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[06:19:54] <dv^_^> raxor2k, dict(lol)? or lol.column_name
[06:22:00] <nedbat> Celelibi: right, unless you change the dict in the meantime
[06:22:19] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[06:22:27] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 268 seconds)
[06:22:35] <Celelibi> Oh, dict_keys are updated on the fly?
[06:23:03] <Celelibi> Nice.
[06:23:28] <nedbat> Celelibi: it's a view object: https://docs.python.org/3/library/stdtypes.html#dict-views
[06:23:54] <grym> keys is setlike, but in order of insertion
[06:24:02] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[06:25:50] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[06:26:22] *** Joins: jim (~jim@about/linux/staff/jim)
[06:26:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:26:45] *** Quits: y1n (~y1n@77.119.166.106.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[06:27:12] <Celelibi> BTW, I read a little bit all over the internet that since python 3.7 the dict type is required to preserve the key order of insertion.
[06:27:34] <Celelibi> Couldn't that be a bit annoying for other implementations?
[06:27:46] *** Joins: iflema (~ian@user/iflema)
[06:27:47] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:28:13] <grym> why
[06:28:27] <grym> it's not a breaking change
[06:28:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[06:28:41] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 245 seconds)
[06:28:54] <Celelibi> because the less assumption you have to guarantee, the more freedom of implementation you have.
[06:28:55] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[06:28:56] <grym> or do you mean "now pypy has to do it too"?
[06:29:09] <grym> in which case, i believel that pypy has had insertion order longer than cpython
[06:29:33] *** Joins: pycurious (~Adium@user/pycurious)
[06:29:44] <Celelibi> There are countless other implementations.
[06:29:55] <grym> oh i think they're pretty countable
[06:30:19] <Celelibi> Well, ok, there aren't that many.
[06:30:22] <grym> and i'm pretty sure i have more fingers than there are implementations ...
[06:30:33] <grym> living implementations *
[06:30:41] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[06:30:46] <Celelibi> Well, I'm not sure which ones are dead.
[06:31:00] <grym> beyond pypy i'm not sure which are alive
[06:31:09] <Celelibi> cython, for sure.
[06:31:24] <grym> not python
[06:32:22] *** Joins: ubert1 (~Thunderbi@p200300ecdf0ba253e6b318fffe838f33.dip0.t-ipconnect.de)
[06:32:23] *** Quits: KirkMcDo1ald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 260 seconds)
[06:32:31] <nedbat> Celelibi: i agree with you that it's better to have behavior undefined, and let the programmer ask for ordering if they want it.
[06:32:53] <nedbat> Celelibi: the problem is that the ordering happened by accident, and once it's happening, it's very hard to keep programmers from depending on it.
[06:32:55] <grym> i know about pypy and micropython; i haven't heard anything about jython or ironpython in years, but i also don't move in those circles
[06:32:56] *** Quits: sharperguy (~sharpergu@89.244.125.128) (Ping timeout: 268 seconds)
[06:33:32] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[06:33:34] <Celelibi> nedbat, wasn't there an option to make the dict ordering random at some point?
[06:33:55] <nedbat> Celelibi: there is an environment variable to seed the hash
[06:34:02] *** Quits: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:34:02] *** ubert1 is now known as ubert
[06:34:15] <nedbat> which was added to make dict hashing unpredictable, to prevent attacks
[06:34:29] *** Joins: sharperguy (~sharpergu@89.244.123.88)
[06:34:38] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[06:34:40] <Celelibi> Ah, yes, in python2 it was the -R option. Now it's an env variable.
[06:35:07] <nedbat> Celelibi: but now dict ordering is guaranteed by insertion order
[06:35:50] <raxor2k> dv: what are you talking about ?
[06:36:04] <Celelibi> nedbat, Ok, makes sens.
[06:36:44] <raxor2k> dv: thanks!!!!!
[06:38:06] *** Joins: et_ (~et@user/et)
[06:38:45] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-05d7-e490-d0b8-c8dd.res6.spectrum.com)
[06:39:05] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[06:39:06] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 268 seconds)
[06:39:10] *** Quits: et (~et@user/et) (Ping timeout: 260 seconds)
[06:39:10] *** et_ is now known as et
[06:40:01] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[06:40:35] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[06:44:13] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:44:22] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:44:27] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[06:45:13] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Quit: Leaving)
[06:47:32] *** Quits: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0::e47b) (Ping timeout: 240 seconds)
[06:47:50] *** Quits: jellyknight (~gelignite@55d49b41.access.ecotel.net) (Quit: Stay safe!)
[06:48:14] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9971-ce5a-c805-3e08.res6.spectrum.com)
[06:48:15] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:48:39] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:49:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:49:23] *** Joins: pycurious (~Adium@user/pycurious)
[06:51:46] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:54:56] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:58:15] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:59:57] *** Joins: Vonter (~Vonter@user/vonter)
[07:02:49] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[07:10:59] *** Quits: Lightsword (~Lightswor@user/lightsword) (Quit: ZNC)
[07:11:12] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[07:12:38] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[07:13:32] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:2920:4094:8818:7c51) (Ping timeout: 240 seconds)
[07:13:37] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:14:24] *** Joins: jim (~jim@about/linux/staff/jim)
[07:14:55] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:15:24] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:15:49] *** Joins: nicholaus04 (~nicholaus@172.58.22.198)
[07:17:34] *** Joins: Lightsword (~Lightswor@user/lightsword)
[07:20:04] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:22:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:24:35] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[07:27:02] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[07:27:46] *** Joins: Enitin (~Enitin@82.102.22.84)
[07:29:06] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 245 seconds)
[07:29:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:29:39] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[07:30:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:30:42] *** Quits: p-i-_ (~Ohmu@223.206.149.59) (Remote host closed the connection)
[07:30:46] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[07:30:56] *** Joins: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:31:11] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[07:31:36] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 245 seconds)
[07:32:09] *** Joins: tpefreedom (~tpefreedo@user/tpefreedom)
[07:32:26] <tpefreedom> Hi
[07:32:51] *** tar_xvf_ is now known as tar_xvf
[07:33:27] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Ping timeout: 264 seconds)
[07:33:40] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[07:34:24] *** Joins: Sadale_ (~Sadale@user/sadale)
[07:34:28] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 260 seconds)
[07:35:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:18] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[07:37:32] *** Joins: naranja (~orange@user/orangeboxcutter)
[07:40:02] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[07:41:19] *** Quits: Dotz0cat (~Dotz0cat@h236.193.186.173.dynamic.ip.windstream.net) (Ping timeout: 250 seconds)
[07:41:36] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[07:42:27] *** Joins: Dotz0cat (~Dotz0cat@h14.95.187.173.dynamic.ip.windstream.net)
[07:43:06] *** Sadale_ is now known as Sadale
[07:43:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:43:38] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[07:43:39] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:44:04] *** Quits: ckdCreations (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[07:48:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:49:18] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:49:27] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[07:50:05] *** Joins: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[07:50:45] *** Quits: nomic (~nomic@185.217.117.132) (Quit: Leaving)
[07:54:23] *** Joins: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[07:55:21] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[07:56:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[07:56:21] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[07:56:47] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[07:57:25] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[07:57:40] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 265 seconds)
[07:57:51] *** Quits: sreve (~quassel@p4ff44a31.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[07:58:31] *** Joins: sreve (~quassel@p54a70f12.dip0.t-ipconnect.de)
[07:58:38] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:59:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:00:21] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[08:01:01] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[08:01:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:03:32] *** Joins: ATAD_ (~ATAD@user/atad)
[08:03:58] *** Quits: raxor2k (~raxor2k@3.109-247-153.customer.lyse.net) (Remote host closed the connection)
[08:05:21] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[08:09:06] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[08:10:46] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[08:12:49] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[08:13:26] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[08:14:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:15:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[08:15:49] *** Joins: p-i- (~Ohmu@223.206.149.59)
[08:17:17] *** Quits: DerpGusta_ (~quassel@user/derpgusta) (Ping timeout: 250 seconds)
[08:17:56] *** Joins: fikran (~fikran@user/fikran)
[08:18:10] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:18:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[08:18:19] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[08:23:33] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[08:25:02] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[08:25:05] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:27:25] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[08:30:04] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[08:30:48] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:31:24] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:32:28] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[08:32:35] *** Joins: kujo (~kujo@188.166.12.52)
[08:33:26] *** Parts: ATAD_ (~ATAD@user/atad) ()
[08:33:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:35:46] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[08:36:36] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[08:37:45] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[08:38:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[08:41:40] *** Quits: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com) (Ping timeout: 260 seconds)
[08:42:37] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[08:45:26] *** Joins: XV8 (~XV8@199.192.138.251)
[08:46:10] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[08:48:58] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:181d:92ce:fee6:70ad)
[08:49:29] *** Quits: XV8 (~XV8@199.192.138.251) (Client Quit)
[08:49:30] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:50:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[08:51:06] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[08:51:11] <Lightsword> anyone know how to build(but not install) a python package without setup.py(it only has pyproject.toml)?
[08:52:35] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[08:52:53] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:54:18] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[08:55:04] <rindolf> Lightsword: did you try https://github.com/pypa/build ?
[08:56:50] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[08:56:59] <Lightsword> rindolf, saw it but I don't see how to make it do a "python setup.py build" equivalent
[08:57:55] <kek_> hi if I do "from scipy.fft import fft, ifft" I get "AttributeError: partially initialized module 'numpy' has no attribute 'dtype' (most likely due to a circular import)". I'm lost on what's wrong.
[08:58:25] <kek_> hmm it seems I get that issue for any import.
[08:58:44] <rindolf> kek_: what does 'import numpy' give?
[09:00:12] <kek_> rindolf, https://bpa.st/raw/F6LA I'm too new to python to have any idea how to resolv it.
[09:01:41] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[09:03:08] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[09:04:11] *** Joins: han-` (~han`@user/han-/x-0887595)
[09:04:19] <kek_> hmm, I'll update my system and check if I might have some issue with dependency. Numpy should be installed as a system package. I only install it that way or via pip using the --user flag. Could be that maybe I once forgot the user flag and now have some dependency ghetto.
[09:04:22] <rindolf> kek_: seems like you have pastes mixed up there. please give the output of ¬´python3 -c 'import numpy'¬ª and that alone
[09:04:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:04:36] *** Joins: DerpGusta (~quassel@user/derpgusta)
[09:04:43] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 250 seconds)
[09:04:46] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:04:57] *** Joins: fluter (~fluter@user/fluter)
[09:05:24] *** Joins: djapo (~archangel@user/djapo)
[09:05:39] *** Joins: SteveR (~SteveR@103.215.168.1)
[09:06:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:07:29] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:07:39] <kek_> rindolf, don't see why you think I mixed up the paste. using the -c flag doesn't produce any output.
[09:08:57] <rindolf> kek_: then numpy loads fine
[09:09:01] <kek_> ah, weird. the error only shows up in the old shell.
[09:09:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:10:09] <kek_> yeah, it seems. I have no idea what went wrong there. anyway thanks.
[09:10:13] *** Joins: pycurious (~Adium@user/pycurious)
[09:10:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[09:11:39] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[09:12:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:12:22] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:12:37] *** Joins: pycurious (~Adium@user/pycurious)
[09:13:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:13:44] <rindolf> kek_: you're welcome
[09:14:00] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[09:14:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:15:58] <rindolf> kek_: do you have automated tests? https://github.com/shlomif/what-you-should-know-about-automated-testing
[09:16:16] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:16:40] *** Joins: pycurious (~Adium@user/pycurious)
[09:17:56] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:18:16] <rindolf> BTW, there is a praise of py here: https://tonsky.me/blog/python-build/
[09:21:48] *** Quits: tpefreedom (~tpefreedo@user/tpefreedom) (Quit: Leaving)
[09:24:02] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[09:24:06] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[09:27:36] *** Joins: NeoCore (~neocore@195.200.221.100)
[09:28:33] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[09:28:41] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:44] <kek_> rindolf, no but mainly because there isn't really anything to test yet. Currently I mainly play around in python and have no "serious" project.
[09:31:55] *** Joins: JoelJoel (~jjshoe@user/joel)
[09:32:45] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[09:32:46] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 256 seconds)
[09:33:11] <rindolf> kek_: ah
[09:35:53] <kek_> but yeah, the whole unit testing/ CDCI stuff is something I should familiarize myself more with.
[09:35:54] *** Quits: p-i- (~Ohmu@223.206.149.59) (Quit: Leaving...)
[09:37:01] *** Joins: sadara (~sadara@user/sadara)
[09:37:45] <kek_> anyway, I'm off for a morning walk. Have a good day :)
[09:38:00] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Remote host closed the connection)
[09:38:19] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[09:38:38] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[09:39:00] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:39:31] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 260 seconds)
[09:41:11] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[09:41:38] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[09:41:47] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[09:43:16] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[09:44:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:45:31] *** Joins: han-solo (~han-solo@user/han-solo)
[09:48:03] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:48:24] *** Joins: manti7 (~manti7@176.10.104.94)
[09:48:37] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:181d:92ce:fee6:70ad) (Read error: Connection reset by peer)
[09:48:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[09:49:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:51:06] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:51:16] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:51:34] *** Joins: pycurious (~Adium@user/pycurious)
[09:52:23] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:52:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:55:12] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[09:55:32] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[09:55:38] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[09:56:26] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[09:56:33] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[09:56:47] *** Joins: Milos (~Milos@user/milos)
[09:56:59] *** Joins: vlm (~vlm@user/vlm)
[09:58:21] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[10:00:19] *** Joins: jazzy (~jaziz@user/jaziz)
[10:05:56] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[10:06:44] *** Joins: lacrymology (~lacrymolo@181.167.210.254)
[10:07:52] <dba> is it possible to override the the constructor or the mother class from  the child class?
[10:08:40] <han-solo> `__new__` ?
[10:09:10] <BrenBarn> a subclass can define its own `__init__` (or `__new__`) if that's what you mean
[10:09:11] <han-solo> but could you give a bit more info on what you are trying to do
[10:10:12] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[10:10:48] <rindolf> dba: ^^^
[10:13:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[10:16:18] *** Joins: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa)
[10:16:37] *** Parts: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa) ()
[10:16:47] *** Joins: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa)
[10:22:59] <dba> han_solo, BrenBran, here is an illustrated example https://bpa.st/IVZQ when calling printname() object I get this error AttributeError: 'Class2' object has no attribute 'name'
[10:23:51] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:24:32] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[10:24:52] *** Quits: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa) (Quit: Themis3000)
[10:25:14] *** Joins: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa)
[10:25:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:26:03] <dba> han-solo, BrenBarn: my issue or my question is the constructor in Class2 did not inhirit the name variable/attribute from the contructor in the mother class
[10:26:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:26:38] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[10:27:16] *** Joins: fikran (~fikran@user/fikran)
[10:27:31] <BrenBarn> if you want to call the superclass version you have to do that yourself
[10:27:37] *** Joins: pycurious (~Adium@user/pycurious)
[10:27:59] <dba> BrenBarn: what do you mean?
[10:28:13] <BrenBarn> your subclass `__init__` *overrides* the superclass one
[10:28:18] <BrenBarn> so the superclass one isn't called
[10:28:30] <BrenBarn> if you want to call it, you need to call it yourself from within the subclass `__init__`
[10:28:48] <BrenBarn> also, your subclass init doesn't take an argument which may make it awkward
[10:30:15] <dba> BrenBran, so when declaring a constructor in the subclass it totally overrides the master class constructor?
[10:30:31] <BrenBarn> yes
[10:30:44] <BrenBarn> you can call the superclass one with like `super().__init__(whatever)`
[10:30:57] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[10:31:11] <dba> BrenBarn, and what does supper() exactly do?
[10:31:18] *** Joins: jay-m126 (~jay-m@129.0.76.214)
[10:31:24] *** Joins: jay-m126_ (~jay-m@129.0.76.214)
[10:31:56] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[10:32:02] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[10:32:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:34:51] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:35:22] *** Joins: pycurious (~Adium@user/pycurious)
[10:35:30] <pystardust> I have a simlar doubt. I have a Post Parent class and ImagePost subclass, the Post class has a static method that is used for an alternative way of creating a object which invokes the __init__. Here is the sample code that explains the my question with comments https://paste.rs/jj6.py
[10:36:17] <pystardust> When I subclass Post, I want to return the subclass object instead of Post. from that static method
[10:36:21] *** Quits: capnyesterday (uid528258@id-528258.lymington.irccloud.com) ()
[10:37:42] <han-solo> dba: `super` is used to delegate the method calls to parent usually
[10:38:37] <pystardust> Is there a way to tell that I want to return the current class's init, from Class object and not its instance, say something like datetime.datetime.now()
[10:38:53] <han-solo> also when overriding methods from parents, breaking the signature of the method will make it hard to work with
[10:39:04] <han-solo> down the chain
[10:39:37] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[10:40:22] *** Joins: carl-- (~carl-@185.103.188.130)
[10:40:54] *** Quits: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa) (Quit: Themis3000)
[10:40:59] <han-solo> see https://en.wikipedia.org/wiki/Liskov_substitution_principle
[10:41:17] *** Joins: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa)
[10:41:24] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[10:42:19] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[10:42:32] <dba> Thanks, han-solo
[10:42:39] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[10:43:50] *** Joins: savolla (~savolla@84.44.28.28)
[10:44:14] <savolla> hey guys o/
[10:44:56] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[10:45:24] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:45:34] <han-solo> hello
[10:46:11] <Themis3000> Heyy
[10:47:04] <savolla> is there any easy way to reusing virtual environments across other machines? It seems the only way is pip freeze and pip install -r requirements.txt. but I want to use my virtual environment (which made with venv) on a factory which does not have an external internet connection. So I can't install deps with pip install there. Is there any other way
[10:47:05] <savolla> of doing that?
[10:47:52] <han-solo> savolla: you could download the dependencies to a dir, tar it or something and copy it to remote and ask pip to get the dependencies from that dir
[10:48:21] <savolla> oh! this sounds very clever!
[10:48:26] <han-solo> assuming both machines have same OS and version, if the depenedncies don't have a universal wheel
[10:48:50] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 268 seconds)
[10:49:37] <han-solo> https://stackoverflow.com/questions/11091623/how-to-install-packages-offline
[10:50:02] <savolla> oh okay it's dependent on the OS. Can't I install my deps using tar for example from Linux to Windows?
[10:50:14] <savolla> thanks for the link. I'm on it
[10:51:29] <han-solo> Sure, source files can be build again
[10:52:01] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[10:52:04] <savolla> this will definitely solve my problem. thanks!
[10:52:49] <han-solo> i mean, if the pip download get .whl dependent on the OS, it may not work on windows. So you can maybe ask it to get the source tar, and that would be build and installed in the windows i think
[10:53:04] *** Joins: Jong (~Jong@2620:10d:c090:400::5:31eb)
[10:53:20] <han-solo> i think, by default pip download will try to get the .whl if it is available
[10:54:02] <han-solo> note to build the source, your offline machine will need to have the build tools
[10:54:04] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[10:55:49] <han-solo> lucky for us, both the machines were rhel8 or something and we could build wheels on the machine that had internet connection and we gave those wheels
[10:56:58] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:57:09] <savolla> han-solo It looks like you had many headaches before when it comes to carrying those virtual environments¬†:)
[10:57:22] <savolla> thanks for help!
[10:57:37] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[10:57:45] *** Joins: seednode (~seednode@user/seednode)
[10:57:48] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[10:58:03] *** Joins: jazzy (~jaziz@user/jaziz)
[10:58:05] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:7733:1211:7dfa:6eca)
[10:58:07] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[10:59:02] *** Joins: rendar (~rendar@user/rendar)
[10:59:51] <han-solo> it was indeed educational
[10:59:54] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[11:00:06] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[11:00:36] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 256 seconds)
[11:02:23] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[11:07:05] *** Joins: pycurious (~Adium@user/pycurious)
[11:10:46] *** Quits: lacrymology (~lacrymolo@181.167.210.254) (Ping timeout: 245 seconds)
[11:11:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[11:11:39] <Swayze> so im watching all 9 movies including the spin offs (rogue one and solo) @ han-solo
[11:11:42] <Swayze> :-D
[11:11:48] <Swayze> 1337 or wha
[11:12:54] <han-solo> i don't know, i haven't watched many starwars movies ':)
[11:15:52] *** Quits: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa) (Quit: Themis3000)
[11:16:08] <Swayze> oh dear
[11:16:16] *** Joins: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa)
[11:16:33] <Swayze> first released 4,5,6 then 1,2,3 then later 7,8,9
[11:16:46] <Swayze> that excludes the 2 spin off movies (with a third to come next year)
[11:17:00] <han-solo> oh, i must have watched maybe 4 and 5 then
[11:19:52] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 256 seconds)
[11:20:13] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[11:21:43] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[11:21:54] *** Joins: sazawal (~sazawal@122.161.84.237)
[11:21:55] *** Quits: savolla (~savolla@84.44.28.28) (Quit: Client closed)
[11:22:53] *** Joins: savolla (~savolla@84.44.28.28)
[11:23:59] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:25:36] *** Joins: tobybl (~tobybl@213.31.134.21)
[11:26:08] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:27:29] *** Joins: solrize (~solrize@user/solrize)
[11:27:48] <solrize> any idea what pyminify is supposed to be?  web search points to pyminifier package but it does not seem to be found there
[11:28:53] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[11:29:26] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:7733:1211:7dfa:6eca) (Ping timeout: 260 seconds)
[11:30:15] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:bf15:61dd:2fab:9b9e)
[11:30:20] <rindolf> solrize: i haven't heard of it
[11:30:27] *** Joins: pycurious (~Adium@user/pycurious)
[11:30:40] <solrize> i found it, python-minifier instead of pyminifier which is a similar but different package gak
[11:30:41] <solrize> thanks
[11:33:10] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:34:00] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:35:06] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 268 seconds)
[11:35:15] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[11:36:08] *** Quits: Themis3000 (~Thunderbi@2601:445:437f:b060:d9bb:ba75:5b4:7daa) (Changing host)
[11:36:08] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[11:36:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:37:07] *** Joins: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[11:38:34] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:39:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:40:27] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:41:38] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[11:42:02] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[11:42:46] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:42:47] <rindolf> solrize: i see: https://pypi.org/project/python-minifier/ - thanks
[11:43:40] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:44:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:44:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 250 seconds)
[11:45:00] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:45:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:47:36] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:49:29] *** Joins: upsala (~zcb@185.213.155.252)
[11:50:33] *** Joins: Disposeable-Nick (~Ident@user/disposeable-nick)
[11:50:33] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:51:41] <Disposeable-Nick> Hi, I have a Python IRC bot up and runing, with configparse and .ini file etc.., but the only thing that isn't like is port as it's a number, I get some integer error about the port, so I can't port port in the ini, so have to put it in boy.py, which I want to avoid
[11:53:14] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[11:53:23] <Disposeable-Nick> that isn't liked* - can't put port in the .ini*
[11:53:27] <solrize> inis tend to be read as strings so you might have to convert to integer in the code
[11:53:51] <Wulf> Disposeable-Nick: int("6667")
[11:53:53] <Disposeable-Nick> I thought some single or double quote would do the trick, but nope
[11:53:56] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[11:54:04] <Disposeable-Nick> Brackets, really?
[11:54:06] <Disposeable-Nick> Nice
[11:54:07] <han-solo> Disposeable-Nick: https://docs.python.org/3/library/configparser.html#supported-datatypes
[11:55:42] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:58:02] *** Joins: jazzy3 (~jaziz@user/jaziz)
[11:58:55] *** Quits: sharperguy (~sharpergu@89.244.123.88) (Ping timeout: 250 seconds)
[11:59:56] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 245 seconds)
[12:00:37] *** Joins: sharperguy (~sharpergu@88.130.218.153)
[12:00:38] *** Quits: jazzy3 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[12:01:02] *** Joins: jazzy3 (~jaziz@user/jaziz)
[12:01:26] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:01:52] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[12:01:58] *** Joins: pycurious (~Adium@user/pycurious)
[12:03:11] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:03:34] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[12:03:46] <Disposeable-Nick> Wulf, I put that in the .ini and still got the integer error
[12:04:55] <Wulf> Disposeable-Nick: put that in your code, not your ini
[12:05:21] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[12:05:24] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[12:06:06] <Disposeable-Nick> I have it in the port in the code already, but would rather have it all in the .ini, so it's user friendly, as I am sharing this, bot with an ini to be edited with user details
[12:06:33] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[12:07:26] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 245 seconds)
[12:08:02] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:08:06] *** Joins: node1 (~node1@user/node1)
[12:09:28] *** Joins: jpic (~jpic@82.142.20.182)
[12:10:51] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 268 seconds)
[12:10:58] *** Joins: yeirr (~yeirr@user/yeirr)
[12:11:02] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[12:11:39] <Wulf> Disposeable-Nick: https://ideone.com/yNSqkI
[12:12:42] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[12:13:10] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[12:21:07] *** mathe8787 is now known as montpol
[12:22:13] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:22:22] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-05d7-e490-d0b8-c8dd.res6.spectrum.com) (Quit: jarthur)
[12:22:33] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:25:43] *** Joins: millido (~millido@84.210.150.128)
[12:26:10] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[12:29:02] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:30:46] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[12:30:57] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[12:34:19] *** Joins: pycurious (~Adium@user/pycurious)
[12:34:48] *** Joins: fluter- (~fluter@user/fluter)
[12:34:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[12:36:44] *** Joins: fikran (~fikran@user/fikran)
[12:37:34] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 260 seconds)
[12:37:50] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:38:35] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:39:07] <jinsun> pystardust: make a classmethod instead of staticmethod and do cls(extension) instead of Post(extension) ?
[12:39:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[12:39:24] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:40:58] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[12:41:46] *** Joins: oakridge (~oakridge@user/oakridge)
[12:42:36] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[12:43:53] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[12:44:42] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[12:44:50] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[12:48:41] *** Quits: gregoryloscombe (~gregorylo@82.25.194.79) (Quit: WeeChat 3.3)
[12:49:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[12:53:55] *** Joins: palasso (~palasso@user/palasso)
[12:54:02] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[12:55:30] *** Quits: skreech (skreech@user/skreech) (Quit: skreech)
[12:56:06] *** Joins: skreech (skreech@user/skreech)
[12:56:22] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 265 seconds)
[12:58:10] *** Joins: Andrynet (~Andrynet@190.152.209.241)
[13:01:29] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr)
[13:01:35] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[13:01:36] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 245 seconds)
[13:02:16] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[13:02:32] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[13:03:53] *** Quits: Andrynet (~Andrynet@190.152.209.241) (Ping timeout: 268 seconds)
[13:04:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:05:30] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[13:05:39] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[13:05:50] *** Quits: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com) (Ping timeout: 256 seconds)
[13:06:31] *** Quits: ubert (~Thunderbi@p200300ecdf0ba253e6b318fffe838f33.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:06:46] *** Joins: ubert (~Thunderbi@p200300ecdf0ba253e6b318fffe838f33.dip0.t-ipconnect.de)
[13:07:39] *** Joins: pycurious (~Adium@user/pycurious)
[13:08:28] <cluelessperson> Disposeable-Nick, or you can have your code simply do int(config["port"])
[13:08:34] <cluelessperson> not sure, haven't seen your code.
[13:08:58] <Disposeable-Nick> cluelessperson,
[13:09:02] <cluelessperson> sorry, bit late
[13:09:07] <Disposeable-Nick> That'll work with port in .ini?
[13:09:08] <cluelessperson> and already suggested
[13:09:17] <cluelessperson> why wouldn't it?
[13:12:03] <Disposeable-Nick> http://puu.sh/IrWd9/48e8970c19.png | cluelessperson
[13:12:04] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[13:12:14] <Disposeable-Nick> Any changes need to be made for that, the bot.py?
[13:12:41] <cluelessperson> Disposeable-Nick,   just wrap the retrieved config value with   int()
[13:12:46] <cluelessperson> int("1") => 1
[13:13:45] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[13:14:39] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:14:49] <Disposeable-Nick> cluelessperson, from my [DEFAULT] section in my .ini: http://puu.sh/IrWe2/0e8e147fa5.png
[13:16:20] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[13:16:21] <cluelessperson> Disposeable-Nick,  the .ini file is just a flat text file
[13:16:24] <Disposeable-Nick> cluelessperson, I still get an integer is required
[13:16:33] <cluelessperson> Disposeable-Nick, your programming reads the text file, and gets a value, which it sees as a text "1"
[13:16:35] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Read error: Connection reset by peer)
[13:16:42] *** Joins: Atque (~Atque@user/atque)
[13:16:48] <cluelessperson> so your *programming* needs to do int()  not just write it as text in a text file
[13:17:10] <cluelessperson> .ini is just a format to describe how to write data in some file
[13:18:02] <Disposeable-Nick> I'm still confused honestly
[13:18:20] *** Joins: AlanMD (~AlanMD@130.248.72.6)
[13:18:25] *** Joins: kosh (~kosh@user/kosh)
[13:19:07] <cluelessperson> Disposeable-Nick, by what?
[13:19:58] <Disposeable-Nick> cluelessperson, https://puu.sh/IrWd9/48e8970c19.png | that is the bot.py, with port at the end, how should I edit that?
[13:20:02] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[13:20:32] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[13:21:51] *** Joins: node1 (~node1@user/node1)
[13:21:54] *** krisd_ is now known as krisd
[13:22:01] <cluelessperson> Disposeable-Nick, You need to understand what you're doing.
[13:22:10] <cluelessperson> Disposeable-Nick, what do you think those lines are doing?
[13:22:26] <cluelessperson> use this
[13:22:26] <cluelessperson> https://bpa.st/
[13:22:47] <Disposeable-Nick> It all works, if I put the port in the bot.py, and everything loads, but I want the port in the .ini only, but I still get the same error
[13:23:04] <cluelessperson> Disposeable-Nick, so what are those lines doing?
[13:23:30] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:23:49] <Disposeable-Nick> parsing the string information from my turing.ini file
[13:24:32] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:bf15:61dd:2fab:9b9e) (Quit: WeeChat 2.8)
[13:24:33] <cluelessperson> yes, so what are the lines doing?
[13:24:35] <cluelessperson> line by line
[13:24:38] *** Joins: pycurious (~Adium@user/pycurious)
[13:25:48] <Disposeable-Nick> Does it matter, it's an entire bot I wrote from scratch, each line serves a function - this isn't helping with my port issue
[13:26:18] <Disposeable-Nick> integer required
[13:26:51] <cluelessperson> Disposeable-Nick, it matters that you understand what you're doing so that you know where to convert a string value into an integer
[13:29:10] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[13:30:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:30:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:32:05] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[13:32:19] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 250 seconds)
[13:32:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:33:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:33:43] *** Lord_of_Life_ is now known as Lord_of_Life
[13:35:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:35:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:35:47] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 264 seconds)
[13:37:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:37:17] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[13:37:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:38:37] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:39:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:39:20] *** Joins: pycurious (~Adium@user/pycurious)
[13:39:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:41:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:42:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:43:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[13:43:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:44:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:46:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:46:35] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:46:50] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:47:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:48:02] <Disposeable-Nick> ValueError: invalid literal for int() with base 10: 'int(6667)' | ValueError: invalid literal for int() with base 10: 'int("6667")'
[13:48:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:48:34] *** Joins: nomic (~nomic@185.217.117.132)
[13:48:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:49:44] *** Parts: ElGuapo_ (~ElGuapo@li1974-164.members.linode.com) ( -)
[13:50:07] <KirkMcDonald> Disposeable-Nick: You appear to be passing the string "int(6667)" to int().
[13:50:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:51:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:52:47] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[13:53:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:53:08] *** Joins: arinov (~arinov@31.142.46.132)
[13:53:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:54:09] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:54:17] *** Quits: ihristov (~ihristov@85.187.46.226) (Remote host closed the connection)
[13:55:03] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 250 seconds)
[13:55:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:55:55] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[13:55:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:56:04] <Disposeable-Nick> success!
[13:56:10] <Disposeable-Nick> Wulf, you genius
[13:56:18] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Remote host closed the connection)
[13:56:19] <Disposeable-Nick> I finally made your one work
[13:56:32] <Disposeable-Nick> Your paste is gold
[13:56:35] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:56:59] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[13:57:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:58:00] *** Joins: frostschutz (~frostschu@2a01:c23:7d84:9600:2474:6cf5:4ef0:7b06)
[13:58:01] <Disposeable-Nick> port = config["DEFAULT"].getint("port")
[13:58:07] <Disposeable-Nick> Simple as that ^
[13:58:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:58:43] <Disposeable-Nick> [DEFAULT]
[13:58:48] <Disposeable-Nick> port =6667
[13:59:56] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Remote host closed the connection)
[13:59:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:00:16] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:00:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:00:46] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr)
[14:01:30] <pystardust> jinsun: oh, I see, didn't know something called as class method existed, thanks!
[14:01:50] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[14:01:59] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:02:13] *** Joins: rsx (~dummy@ppp-188-174-145-75.dynamic.mnet-online.de)
[14:02:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:03:11] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:03:42] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[14:04:11] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:04:21] *** Joins: x88x88x (~chee@gateway/vpn/pia/x88x88x)
[14:04:37] <Disposeable-Nick> I have another question: before when my config was in the bot.py itself, I had: owner = "Name1" or "AltName".  But now that the config is in a .ini, obviously there is no Python language happening in that, so the 'or' statement doesn't work - what workaround can I use?
[14:04:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:05:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:06:21] <Disposeable-Nick> I still want owner to be more than one thing
[14:07:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:07:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:08:32] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:09:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:09:22] *** Quits: frostschutz (~frostschu@2a01:c23:7d84:9600:2474:6cf5:4ef0:7b06) (Remote host closed the connection)
[14:09:37] <Repiphany> What do you think that "or" statement was doing in the first place
[14:09:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:09:53] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:10:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:10:46] *** Quits: gws1200 (~thelounge@118.120.84.49) (Ping timeout: 245 seconds)
[14:10:58] <Disposeable-Nick> Repiphany, when I had it set up that way, I could switch to both nicks and execute the command, and anything other nick that didn't match those two, would say, you do not match owner string
[14:11:28] <Disposeable-Nick> any other *
[14:11:41] *** Joins: pycurious (~Adium@user/pycurious)
[14:11:48] <Repiphany> That's not what "or" does, if you literally mean `owner = "Name1" or "AltName"` as a line of code
[14:12:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:12:17] <Disposeable-Nick> Repiphany, it worked though
[14:12:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:13:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:14:11] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:14:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:14:40] <sazawal> Hi all. Is there are utility apart from ImageMagick I can use to capture window screenshots given the window-id/window-handle/window-title? That is capturing an inactive/background/minimized window
[14:15:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:15:41] <Disposeable-Nick> Repiphany, https://pastebin.com/G9QfgxaV
[14:16:06] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[14:16:13] <Repiphany> That doesn't check "AltName"
[14:16:30] <Disposeable-Nick> So, with that or statement, I was able to be both nicks and use the command, and anything that wasn't them, did not execute and gave them an error instead
[14:16:40] <Disposeable-Nick> It checks owner
[14:16:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:16:51] <Disposeable-Nick> and owner is name1 or name 2
[14:17:16] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:18:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:19:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:21:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:22:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:22:42] <Repiphany> `"Name1" or "AltName"` evaluates to "Name1"
[14:23:13] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:23:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:23:48] <Disposeable-Nick> Repiphany, so only ever name 1 worked with that?
[14:23:55] <Disposeable-Nick> I swear I used both though
[14:24:14] <Repiphany> `name = "a" or "b"; print(name)`
[14:24:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:25:18] *** Joins: gossie (~gossie@94-215-32-45.cable.dynamic.v4.ziggo.nl)
[14:26:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:26:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:28:10] <cluelessperson> "" or "Alt"   evaluates to "Alt"
[14:28:16] *** Joins: pycurious (~Adium@user/pycurious)
[14:28:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:29:04] <Disposeable-Nick> Very interesting
[14:29:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:29:22] *** Quits: arinov (~arinov@31.142.46.132) (Read error: Connection reset by peer)
[14:30:08] <Disposeable-Nick> I used a test shell and it evaluated to the first, yeah.  Interesting
[14:30:35] <Disposeable-Nick> Could it possibly work if name1 or name2 were so similar though?
[14:30:41] <Disposeable-Nick> Or nah
[14:31:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:31:17] <Repiphany> No
[14:31:33] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. ‚ÄúChuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.‚Äù)
[14:31:41] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[14:31:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:31:44] <Repiphany> If you want to check multiple values, you'd do something like `if nick in list_of_nicks:`
[14:31:47] <Disposeable-Nick> Can you actually define something to be more than one thing though?
[14:31:54] *** Joins: TJ- (~root@about/linux/staff/tj-)
[14:32:45] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[14:33:04] *** Joins: arinov (~arinov@213.194.126.155)
[14:33:13] *** Quits: nicholaus04 (~nicholaus@172.58.22.198) (Quit: WeeChat 2.8)
[14:33:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:34:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:35:47] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 268 seconds)
[14:35:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:36:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:37:31] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 250 seconds)
[14:37:33] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[14:38:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:38:44] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[14:38:52] *** Joins: Moyst_ (~moyst@user/moyst)
[14:39:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:40:09] *** Joins: ub (~Thunderbi@p200300ecdf0ba253489968441493cf16.dip0.t-ipconnect.de)
[14:40:23] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[14:40:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:41:13] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 250 seconds)
[14:41:35] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:42:48] *** Joins: sandb0y (~pirate@user/sandb0y)
[14:43:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:43:20] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe)
[14:43:31] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:43:41] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[14:44:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:44:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:44:46] *** Joins: Moyst_ (~moyst@user/moyst)
[14:45:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:45:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:46:05] *** Joins: fikran (~fikran@user/fikran)
[14:46:14] *** Joins: Vonter (~Vonter@user/vonter)
[14:46:35] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:47:52] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[14:48:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:48:23] <powftw> https://www.irccloud.com/pastebin/0erz2Vab
[14:48:37] <powftw> Is there issue with this pseudo code?
[14:48:54] <powftw> Why func_2 says "str" is undeclared variable?
[14:49:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:49:47] *** Joins: ub1 (~Thunderbi@p548c9fcb.dip0.t-ipconnect.de)
[14:49:57] *** Quits: ub (~Thunderbi@p200300ecdf0ba253489968441493cf16.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[14:50:19] <powftw> Basically, I want a global string variable which a function will write it's result and other function can read it
[14:50:30] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[14:50:33] <powftw> All functions are within main_func
[14:50:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:51:29] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[14:52:04] *** ub1 is now known as ub
[14:53:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:54:05] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:54:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:54:09] <nedbat> powftw: let's take a step back: why are you defining functions inside other functions?
[14:55:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:56:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:56:52] *** Joins: pycurious (~Adium@user/pycurious)
[14:56:57] *** Quits: jay-m126_ (~jay-m@129.0.76.214) (Read error: Connection reset by peer)
[14:56:57] *** Quits: jay-m126 (~jay-m@129.0.76.214) (Read error: Connection reset by peer)
[14:57:45] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[14:58:12] <powftw> nedbat: hello nedbat, it's a flask app. So, the first function is my route /xyz and within that route is a function, therefore every other function comes inside it
[14:58:18] <powftw> https://www.irccloud.com/pastebin/bP9jtnpa
[14:58:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:58:32] <nedbat> powftw: but you don't need to define function inside other function.  your route can use other global functions
[14:58:34] <powftw> Like this ‚òùÔ∏è
[14:59:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:59:19] <nedbat> powftw: and instead of using global variables, pass data into functions, and return data from functions
[14:59:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[14:59:39] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:59:40] *** Joins: gitly2 (~gitly@85.255.237.131)
[14:59:41] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[14:59:50] *** Quits: gitly (~gitly@148.252.129.211) (Ping timeout: 268 seconds)
[15:00:55] <powftw> that means, I can put func_2 outside the main_func scope and still use those variables?
[15:00:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:01:02] *** Quits: x88x88x (~chee@gateway/vpn/pia/x88x88x) (Ping timeout: 240 seconds)
[15:01:23] <powftw> Variables inside func_2
[15:01:31] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[15:01:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:02:22] <powftw> nedbat: I can't simply call the function. Because, whenever I call it , somethings happen which changes the value of something. So, I can't call say, func_2 just to get the value of a variable
[15:02:25] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:02:40] <powftw> Let me make my point more clear..
[15:02:43] <nedbat> powftw: can you share the real code where this problem is happening?
[15:03:01] *** Joins: nyah (~nyah@94.6.71.219)
[15:03:31] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[15:03:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:04:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:05:29] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr)
[15:05:34] <powftw> nedbat: I really appreciate your helping mind, but it's hell of a long code.
[15:05:38] <powftw> https://www.irccloud.com/pastebin/WtjLEZr5
[15:05:55] <nedbat> powftw: that's the same example.
[15:06:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:06:07] <powftw> Do you see any problem for the func_2 to access str variable?
[15:06:23] <nedbat> powftw: i don't think you should structure your code like this.
[15:06:35] <nedbat> powftw: the problem you are describing sounds like something we should fix
[15:07:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:07:09] <nedbat> powftw: you said, "I can't call func_2 just to get the value of a variable".  I want to fix that
[15:07:24] <powftw> I'm currently facing this problem. My whole code depends on that single variable from now üòÇüòÇ
[15:07:24] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:07:26] <bjs> powftw: are you sure it's not func_1 that has the error you describe?
[15:08:05] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[15:08:19] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[15:08:29] <bjs> but also this code looks like an attempt at creating classes using closures
[15:08:41] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 245 seconds)
[15:08:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:09:19] <powftw> nedbat: say I have a variable x in func_1, it takes an argument which I can't pass in while calling from other function.
[15:09:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[15:09:38] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:09:39] <powftw> So basically I want the return result of func_1 but can't actually call the function without argument
[15:09:56] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[15:09:58] <nedbat> powftw: why can't you pass the argument?
[15:10:20] <powftw> That argument is done after a lot of computation by other function
[15:10:35] <powftw> So I have to invoke that function to call this and get the variable
[15:10:40] <powftw> Which seems terrible
[15:10:41] <nedbat> powftw: please give us a link to the real code you are trying to fix.  We can find you a better structure
[15:10:54] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[15:11:14] <nedbat> powftw: or at least make a runnable example. your short code has a few names that are not defined.
[15:11:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:11:25] <powftw> Yes nedbat:
[15:11:28] <nedbat> powftw: and you never call func_1
[15:11:34] <powftw> Sorry for wasting time of yours..
[15:11:41] <powftw> I'll make a better short example
[15:12:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:12:55] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[15:13:55] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[15:13:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:14:43] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[15:14:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:15:41] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com)
[15:16:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:17:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:18:15] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 250 seconds)
[15:18:24] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[15:19:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:19:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:20:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:20:15] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[15:21:24] *** Quits: _xor (~xor@72.49.199.147) (Ping timeout: 268 seconds)
[15:21:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:22:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:24:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:24:43] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[15:24:52] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 260 seconds)
[15:25:29] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:26:35] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[15:27:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:28:03] *** Joins: zyweo (~Svew@user/zyweo)
[15:28:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:29:23] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:29:55] *** Joins: pycurious (~Adium@user/pycurious)
[15:29:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:30:05] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[15:31:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:32:24] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[15:32:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:33:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:34:58] <powftw> nedbat: https://bpa.st/43OA
[15:34:59] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[15:35:07] *** Quits: Jefren1 (~Jefren@70.35.66.223) (Ping timeout: 260 seconds)
[15:35:22] *** Quits: nomic (~nomic@185.217.117.132) (Quit: Leaving)
[15:35:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:35:35] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:35:39] <powftw> Why isn't the value of power variable didn't change even after adding "hey"+power?
[15:35:56] <powftw> So when we call func_2, it only prints "welcome"
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:36:25] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[15:36:55] <nedbat> powftw: what are you seeing that tells you it hasn't changed?
[15:36:55] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:59] *** Joins: Jefren1 (~Jefren@206.253.157.194)
[15:37:00] *** Joins: p-i- (~Ohmu@223.206.149.59)
[15:37:04] <powftw> Won't power variable declared globally changes to "hey John"?
[15:37:15] <p-i-> fmt = lambda x: '{:g}'.format(float('{:.3g}'.format(x)))  # How could I make that 3 a variable?
[15:37:30] <p-i-> So `fmt = lambda x, prec: ...`
[15:37:34] <nedbat> powftw: it should change, yes
[15:37:41] <ChrisWarrick> p-i-: you might be calling format too much?
[15:37:44] <powftw> nedbat: but it won't change
[15:37:51] <nedbat> p-i-: why are you formatting a float that you got by float'ing a formatted float?
[15:37:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:38:05] <nedbat> powftw: what are you seeing that tells you it doesn't change?
[15:38:19] <ChrisWarrick> p-i-: perhaps try something like f'{x:.{prec}g}'
[15:38:22] <p-i-> It's needed: https://stackoverflow.com/a/48812729/435129
[15:38:32] <nedbat> powftw: before i click that link: it isn't needed
[15:38:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:38:48] <powftw> nedbat:  because I can see it prints "welcome" in my terminal
[15:38:57] <nedbat> powftw: when you do what?
[15:38:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:39:09] <powftw> When I visit the the web server
[15:39:23] <nedbat> powftw: the first request will have power="", so it will print "welcome"
[15:39:24] <powftw> localhost:5000
[15:39:39] <nedbat> powftw: line 13 happens before line 8, right?
[15:40:31] *** Quits: crakrjak (~root@user/crakrjak) (Ping timeout: 268 seconds)
[15:40:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:40:54] *** Joins: jay-m126 (~jay-m@154.72.150.192)
[15:41:02] *** Joins: jay-m126_ (~jay-m@154.72.150.192)
[15:41:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:42:22] <powftw> nedbat: I'll look once again into it. I'll inform you after trying again
[15:42:22] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 268 seconds)
[15:43:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:43:40] *** Joins: y1n (~y1n@178.165.178.68.wireless.dyn.drei.com)
[15:44:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:44:29] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:44:55] *** Joins: Moyst_ (~moyst@user/moyst)
[15:46:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:46:38] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[15:47:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:48:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:49:02] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 256 seconds)
[15:49:19] <p-i-> fmt = lambda x, prec: '{:g}'.format(float('{:.{prec}g}'.format(x)))  # KeyError: 'prec'
[15:49:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:50:04] <p-i-> Maybe this approach is just too much of a hack
[15:50:15] <ChrisWarrick> p-i-: use f-strings wherever possible
[15:50:28] <p-i-> I'm trying to format to a precision, so fmt(123.456, 4) would give "123.4"
[15:50:36] *** Joins: stormy (~stormy@p57bde065.dip0.t-ipconnect.de)
[15:50:53] <p-i-> It's surprisingly awkward
[15:51:02] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[15:51:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:51:42] <p-i-> Not even sure how to reverse that eyesore into f-string compliancy
[15:52:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:52:37] *** Joins: greedom (~greedom@p200300de67426b00ef4aa59168ec0e54.dip0.t-ipconnect.de)
[15:53:21] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:53:45] *** Quits: mrhands (~mrhands@user/mrhands) (Ping timeout: 265 seconds)
[15:54:04] *** Joins: Moyst (~moyst@user/moyst)
[15:54:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:55:00] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz‚Ä¶)
[15:55:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:55:26] <p-i-> https://bpa.st/C7LA pretty it sure ain't
[15:55:32] *** Joins: mrhands (~mrhands@user/mrhands)
[15:55:35] <nedbat> p-i-: start by using a def instead of lambda
[15:55:47] *** bluss_ is now known as bluss
[15:56:01] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[15:56:49] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 250 seconds)
[15:56:54] <jinsun> so you want just do str(x) and slice off the beginning part?
[15:57:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:57:50] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[15:58:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:58:35] *** Joins: plastico (~plastico@neomutt/plastico)
[15:59:06] *** Joins: pycurious (~Adium@user/pycurious)
[15:59:10] <Helenah> How do I count how many occurances there are of a particular character at the start of a string?
[15:59:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:00:04] <Helenah> Lets say acat and aacat and aaacat I'd like to count the amount of a's because I want to strip them but also run different code for each.
[16:00:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:00:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:01:23] <Helenah> I tried startswith() but it seems to check for any occurance at the start of a string but doesn't actually care so if I did startswith('a') and startswith('aa') it seems startswith('a') would always return true.
[16:01:50] <jinsun> maybe `"aacat".find("aacat".strip("a"))`
[16:02:23] <rindolf> Helenah: regexes? a loop?
[16:02:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:03:01] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[16:03:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:04:05] * rindolf is away
[16:04:12] <Helenah> This is my code. https://termbin.com/m4bi
[16:04:34] <Helenah> I'm trying to replace argparse cause I found replacing the help texts with stuff I already have a nightmare.
[16:04:51] <Helenah> jinsun: I'll look into that.
[16:05:01] *** Joins: SteveR (~SteveR@192.146.154.3)
[16:05:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:05:14] *** Quits: greedom (~greedom@p200300de67426b00ef4aa59168ec0e54.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:05:21] *** Joins: Organizers|Robin (~Robin_Jad@152.67.64.160)
[16:05:38] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[16:05:48] <rindolf> jinsun: what if tthe string is all "a"s?
[16:05:55] <jinsun> Helenah: well there you can just use elif instead of a bunch of ifs, becuse you know they are mutually exclusive
[16:05:56] *** Joins: sgn (~sgn@user/sgn)
[16:06:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:06:36] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[16:06:46] <jinsun> rindolf: oh yeah bad, regex is better
[16:07:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:08:14] <Helenah> The if and elif actually sorted out the problem.
[16:08:50] <jinsun> also use argparse or click or typer really if you want to parse command line args
[16:08:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:09:28] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:10:01] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[16:10:01] <Helenah> Another issue is I want a dictionary where the keys are arguments and the corresponding value to the key is the value of the argument so if I for example specify "--cat yes" I'd like the dictionary to look like this "{'cat': 'yes'}" but instead I seem to be getting "{'cat': '--cat'}".
[16:10:28] <iflema> what about len(s.split("a")[:-1])
[16:10:34] <Helenah> jinsun: Yeah I ditched those because of that, they were acting like I was passing arguments to start a python program...
[16:10:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:11:05] <jinsun> because of what?
[16:11:20] <Helenah> Like it would report my script name and this is supposed to be a server! I don't want people who log into it knowing what files on the system are called. lol
[16:11:22] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[16:11:36] <Helenah> "they were acting like I was passing arguments to start a python program..."
[16:11:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:11:50] <jinsun> okay I thought you wanted to do that
[16:12:35] <Helenah> No, I have a server with a prompt on it, the user logs in and uses the prompt and I want arguments that can dynamically be put in any order to be user friendly.
[16:13:02] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[16:13:20] *** Joins: tobybl (~tobybl@213.31.134.21)
[16:13:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:14:26] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:15:27] *** Joins: antineutrino (~antineutr@user/eru)
[16:16:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:16:57] *** Quits: gitly2 (~gitly@85.255.237.131) (Ping timeout: 265 seconds)
[16:17:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:19:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:19:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:20:26] *** Joins: gitgitgit (~gitly@148.252.133.25)
[16:21:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:22:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:23:00] *** Quits: savolla (~savolla@84.44.28.28) (Ping timeout: 256 seconds)
[16:23:00] *** Quits: SteveR (~SteveR@192.146.154.3) (Quit: Client closed)
[16:23:05] *** Joins: cdown_ (~cdown@89.32.122.5)
[16:23:18] *** Joins: SteveR (~SteveR@192.146.154.3)
[16:24:08] *** Quits: antineutrino (~antineutr@user/eru) (Ping timeout: 256 seconds)
[16:24:14] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:24:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:24:35] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:24:43] *** Joins: Moyst_ (~moyst@user/moyst)
[16:24:53] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:25:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:25:45] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:25:46] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 245 seconds)
[16:25:55] *** cdown_ is now known as cdown
[16:26:21] *** Joins: yeirr (~yeirr@user/yeirr)
[16:26:47] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 268 seconds)
[16:26:50] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Remote host closed the connection)
[16:27:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:28:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:28:20] *** Quits: SteveR (~SteveR@192.146.154.3) (Quit: Client closed)
[16:28:40] *** Moyst_ is now known as Moyst
[16:29:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[16:29:14] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:30:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:30:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:32:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:33:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[16:33:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:34:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:35:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:36:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:37:11] *** Joins: pycurious (~Adium@user/pycurious)
[16:38:03] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:38:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:38:26] *** Joins: Klinda (~superleag@user/klinda)
[16:39:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:39:17] *** Joins: dez (uid92154@user/dez)
[16:40:16] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[16:40:29] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[16:41:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:41:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:42:12] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[16:43:25] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[16:43:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:43:58] *** Quits: AlanMD (~AlanMD@130.248.72.6) (Quit: ZZZzzz‚Ä¶)
[16:44:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:44:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:45:03] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:46:01] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[16:46:06] <Helenah> jinsun: Crap works now. Thankies once again! :3
[16:46:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:46:26] *** Joins: AlanMD (~AlanMD@130.248.72.6)
[16:46:27] <Helenah> Turns out the "index + 1" part was just going around in circle and "index" simply does what I want.
[16:46:29] <Helenah> lol
[16:46:44] *** Quits: delvian (~delvian@41.13.198.66) (Quit: Leaving)
[16:46:46] <Helenah> Er... I think I said things a bit... crappy but point is it works and thank you. :3
[16:47:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:47:58] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:49:03] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 250 seconds)
[16:49:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:50:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:50:19] *** Joins: delvian (~delvian@41.13.198.66)
[16:51:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:52:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:53:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[16:53:09] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:54:02] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[16:54:19] *** Joins: kosh (~kosh@user/kosh)
[16:54:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:54:55] *** Quits: Milos (~Milos@user/milos) (Ping timeout: 260 seconds)
[16:55:26] *** Joins: fikran (~fikran@user/fikran)
[16:55:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[16:55:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:56:37] *** BlessJah_ is now known as BlessJah
[16:56:52] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[16:57:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:58:29] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:58:44] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[16:59:52] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 256 seconds)
[17:00:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:00:18] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[17:01:25] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:02:56] *** Joins: darksun (~darksun@user/darksun)
[17:03:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:03:23] *** Joins: Seagull (~Seagull@user/mvdev-836/x-7776380)
[17:04:04] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:04:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:05:11] <sveinse> Have there been any attempts at implementing an async variant of the io module? I'm working on porting a pacakge to async(io) and it relies heavily on the io classes. Since the backend of io is not python code, I'm not quite sure how to approach this for async
[17:05:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:06:09] *** Quits: stormy (~stormy@p57bde065.dip0.t-ipconnect.de) (Quit: Lost terminal)
[17:06:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:07:32] *** Quits: gitgitgit (~gitly@148.252.133.25) (Ping timeout: 240 seconds)
[17:07:45] *** Joins: pycurious (~Adium@user/pycurious)
[17:08:38] <Wulf> sveinse: https://bugs.python.org/issue41271
[17:08:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:09:26] <sveinse> Implementing the directly called API in the class e.g. "async def read()" is straight forward, however its the calls from the backend/mixins of these now async functions that would fail.
[17:09:30] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:09:41] *** Joins: gitgitgit (~gitly@148.252.133.25)
[17:09:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:10:47] *** Joins: monkey_ (~user@190.104.116.153)
[17:11:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:11:48] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:12:27] <Wulf> sveinse: there are other implementations that use threads.
[17:12:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[17:12:51] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 245 seconds)
[17:14:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:15:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[17:15:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:15:46] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[17:16:07] *** Quits: gitgitgit (~gitly@148.252.133.25) (Ping timeout: 268 seconds)
[17:16:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:17:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:17:15] <sveinse> Yeah, I should add that in this pacakge the purpose of the class is not regular file system IO, but a custom low-level communication protocol. It's just that the author has chosen to encapsulate it in io.RawIOBase
[17:18:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:18:27] <sveinse> Is the cpython code for _io.RawIoBase easy to find in the sources?
[17:19:42] <sveinse> I think I found the py implementation of it: https://github.com/python/cpython/blob/main/Lib/_pyio.py
[17:20:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:20:03] *** Joins: bloody (~bloody@user/bloody)
[17:20:03] *** Joins: Macuser (~Macuser@2600:1003:b458:7236:79b9:6469:f88e:c1bf)
[17:21:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:21:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80::7) (Quit: Leaving)
[17:22:20] *** Joins: magla (~gelignite@55d49b41.access.ecotel.net)
[17:22:43] *** Quits: binary011 (~binary01@174.141.153.217) (Read error: Connection reset by peer)
[17:22:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:23:29] *** Joins: binary01 (~binary01@174.141.153.217)
[17:23:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:24:02] *** Quits: AlanMD (~AlanMD@130.248.72.6) (Ping timeout: 240 seconds)
[17:24:14] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[17:25:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:26:00] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1)
[17:26:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:27:06] <sveinse> I see I cannot use io.IOBase as base for async. It needs considerable reimplementation. Particularely surrounding .close() and indirectly .flush() which is called blockingly from many internal methods
[17:27:42] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:73d2:b9cb:440e:ac9a)
[17:28:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:29:06] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 245 seconds)
[17:29:12] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1) (Remote host closed the connection)
[17:29:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:30:17] *** Quits: jay-m126_ (~jay-m@154.72.150.192) (Ping timeout: 268 seconds)
[17:30:17] *** Quits: jay-m126 (~jay-m@154.72.150.192) (Ping timeout: 268 seconds)
[17:31:04] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[17:31:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:31:47] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[17:31:53] *** Joins: jay-m126 (~jay-m@129.0.76.210)
[17:32:05] *** Joins: jay-m126_ (~jay-m@129.0.76.210)
[17:32:16] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:33:50] *** Joins: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[17:34:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:34:09] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:34:29] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[17:35:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:35:13] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 268 seconds)
[17:35:37] <Helenah> What's the best way to check if foo or bar exists in dict.keys()?
[17:35:46] *** Joins: xheimlic1 (~xheimlich@179.218.1.150)
[17:36:02] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 240 seconds)
[17:36:05] <xheimlic1> this isn't a python question but I keep seeing data science stuff getting asked here.
[17:36:19] <cluelessperson> Helenah, if "bar" in d:
[17:36:31] <xheimlic1> I want to get *my* Twitter feed that shows up on *my* web browser on *my* account programmatically.
[17:36:34] <sveinse> Helenah: if 'foo' in dict  <-- but dict is a bad name
[17:36:46] *** Joins: node1 (~node1@user/node1)
[17:36:46] <Helenah> Yes, it's an example sveinse
[17:36:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:36:52] <xheimlic1> every document out there in the web seems to be about mass scraping twitter.
[17:36:59] *** Quits: node1 (~node1@user/node1) (Client Quit)
[17:37:02] *** Joins: node161 (~node1@user/node1)
[17:37:15] <Helenah> cluelessperson: But lets say I want to do something like if "foo" or "bar" in dict:
[17:37:30] <Helenah> I want a simple single if statement for both keys.
[17:37:53] <Helenah> I'm going to try that.
[17:37:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:38:13] <xheimlic1> Helenah: is this a language extension proposal or a question about python as it exists?
[17:38:25] <xheimlic1> ("foo" or "bar") returns True IIRC.
[17:38:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:38:42] <sveinse> Helenah: if any(x in d for d in ('foo', 'bar')) perhaps?
[17:38:47] <xheimlic1> boolean typeclass implements False if "" else True. Or some such jargon.
[17:39:03] <sveinse> Helenah: if any(x in d for x in ('foo', 'bar')) <-- corrected
[17:39:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:39:11] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1)
[17:39:19] <xheimlic1> anyway, try
[17:39:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:39:43] <grym> Helenah: keys are setlike. you can check the intersection
[17:39:45] <xheimlic1> try that, yes.
[17:39:50] <phy1729> Helenah: if it's a fair few keys, you can also use set intersection
[17:40:07] <Helenah> phy1729: Just 2 for now. :)
[17:40:08] *** Joins: Naan (~naan@user/naan)
[17:40:19] <sveinse> Then I'd simply or them
[17:40:23] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 250 seconds)
[17:40:31] <sveinse> if 'foo' in d or 'bar' in d
[17:40:36] *** Joins: gitgitgit (~gitly@185.69.144.84)
[17:40:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:40:39] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:40:43] <Helenah> Oh okay
[17:41:05] <cluelessperson> Helenah, yup.  if suspect_keys.intesection(keys):
[17:41:45] *** Joins: rannnn8888 (~rannnn888@bzq-109-67-132-67.red.bezeqint.net)
[17:42:15] <rindolf> jinsun: BTW : len(s) - len(s.lstrip("a"))
[17:42:25] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[17:42:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:42:56] <Helenah> hm
[17:43:11] <Helenah> For now... I stuck with sveinse's solution.
[17:43:17] <Helenah> Thank you. :)
[17:43:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:43:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:44:09] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:44:25] *** Joins: noord (~noord@user/noord)
[17:45:03] *** Joins: _xor (~xor@72.49.199.147)
[17:45:05] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[17:45:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:45:21] *** Quits: gitgitgit (~gitly@185.69.144.84) (Ping timeout: 245 seconds)
[17:46:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[17:46:20] *** Quits: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 256 seconds)
[17:46:21] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[17:46:32] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 240 seconds)
[17:46:32] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[17:46:38] *** Joins: Guest12 (~Guest12@pool-96-253-74-73.rcmdva.fios.verizon.net)
[17:46:46] *** Joins: tobybl (~tobybl@213.31.134.21)
[17:46:48] <Guest12> Hi if I have string '1.0'
[17:46:52] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[17:46:56] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[17:46:56] *** Joins: gitgitgit (~gitly@85.255.232.190)
[17:47:07] <Guest12> and I want to make it a whole number 1, do I just need float() or int(float())
[17:47:29] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[17:47:32] <nedbat> Guest12: you can try it in the python prompt
[17:48:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:48:19] <Helenah> Turns out using "or" was the wrong thing to do but I got what I wanted. :)
[17:48:21] <Guest12> ok int(float()) it is
[17:48:29] *** Quits: nicode (~nic@2607:f2c0:932e:7500:ca64:3c01:7cea:e447) (Quit: WeeChat 2.8)
[17:48:45] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[17:48:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:50:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[17:50:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:51:34] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[17:51:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:51:52] *** Quits: gitgitgit (~gitly@85.255.232.190) (Ping timeout: 268 seconds)
[17:52:13] *** Joins: sedeki (~textual@user/sedeki)
[17:53:17] *** Joins: gitgitgit (~gitly@85.255.235.182)
[17:53:22] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:53:29] <sveinse> Heh, what should I name my async port of io.IOBase?  asyncio.IOBase?  aio.IOBase?  All the cool names are taken :D
[17:53:37] *** Quits: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[17:53:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:54:31] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:55:05] *** Joins: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[17:55:34] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 268 seconds)
[17:56:02] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 265 seconds)
[17:56:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:56:32] *** Quits: xheimlic1 (~xheimlich@179.218.1.150) (Ping timeout: 256 seconds)
[17:57:06] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[17:57:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:57:45] *** Quits: rannnn8888 (~rannnn888@bzq-109-67-132-67.red.bezeqint.net) (Quit: Client closed)
[17:57:46] <jinsun> rindolf: ah yes that works
[17:58:25] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[17:58:39] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[17:58:53] *** Joins: yeirr (~yeirr@user/yeirr)
[17:59:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:59:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:59:20] *** Quits: Guest12 (~Guest12@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[18:00:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:01:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:01:59] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:02:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:03:08] *** Joins: nucranium (~nucranium@2a02:8010:6173:0:2164:de0d:a8d4:46df)
[18:03:39] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[18:03:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[18:04:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:04:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:05:02] <rindolf> jinsun: ok
[18:05:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:06:04] <sveinse> The io.IOBase class implements __del__. __del__ isn't really implementable in async, is it?
[18:06:32] *** Quits: gitgitgit (~gitly@85.255.235.182) (Ping timeout: 240 seconds)
[18:06:48] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 260 seconds)
[18:07:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:08:27] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[18:08:37] *** Joins: gitgitgit (~gitly@85.255.232.190)
[18:08:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[18:09:20] *** Joins: mintograde (~mintograd@47.201.5.61)
[18:10:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:11:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:13:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:13:26] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[18:13:41] *** Quits: gitgitgit (~gitly@85.255.232.190) (Ping timeout: 245 seconds)
[18:14:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[18:15:55] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-0878-4455-c54a-a6c0.res6.spectrum.com)
[18:15:58] *** Joins: gitgitgit (~gitly@85.255.237.155)
[18:16:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:16:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[18:17:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:17:14] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[18:17:38] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:18:14] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 260 seconds)
[18:18:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:18:56] <bjs> sveinse: well you can't have an "asynchronous" del, but __del__ is still applicable
[18:19:42] <bjs> you do of course have asynchronous context managers, which means you can do the cleanup work asynchronously if needed
[18:20:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:20:13] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[18:20:24] *** Joins: sfields (~sfields@2605:a601:adea:7a00:6531:9ed4:3d26:d88)
[18:21:02] *** Quits: gitgitgit (~gitly@85.255.237.155) (Ping timeout: 240 seconds)
[18:21:20] <sveinse> bjs: yeah, io.IOBase has active blocking IO in its __del__ function, which isn't possible to do with async
[18:21:32] <bjs> well you can have blocking IO there just fine
[18:21:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:22:37] *** Joins: Moyst_ (~moyst@user/moyst)
[18:22:51] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 245 seconds)
[18:22:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:23:06] <bjs> (well IOBase's __del__ doesnt' do anything does it? IOBase itself doesn't actually do anything really...)
[18:23:18] *** Joins: gitgitgit (~gitly@85.255.232.190)
[18:24:07] <sveinse> It calls close() which is turn calls flush(), both as sync calls
[18:24:24] <bjs> sveinse: ah,  well sure
[18:24:26] <bjs> that makes sense
[18:24:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:24:52] <bjs> sveinse: I still don't really understand what you're asking here,  if you had an "asynchronous file" interface it'd still have a normal synchronous __del__ that would well... do that
[18:25:00] <bjs> it'd flush the file and close it
[18:25:47] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:26:10] <sveinse> Yeah, I might just need an async mixin on top which provides the async-able functions and let the low-level be blocking
[18:26:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:26:50] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:26:53] <bjs> sveinse: I mean whether the set of functions read/write/whatever are "async def"s or not doesn't really affect the work that __del__ would have to do
[18:27:20] <bjs> no matter what you're going to have an open file descriptor, and when you delete the python object you're gonna want it to flush the buffers and close that descriptor
[18:27:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:28:26] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[18:28:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:28:47] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[18:29:28] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[18:29:54] *** Joins: Klinda (~superleag@user/klinda)
[18:30:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:31:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:31:46] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[18:33:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:33:37] <sveinse> E.g. io.IOBase requires own implementations of read() and write(). Since the mixins calls these functions sync, one can never implement them async. Thus read() and write() cannot take use of a low-level async interface. That's my conundrum
[18:34:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:35:34] *** Joins: superboot (~agentgasm@user/superboot)
[18:35:42] <sveinse> The package I'm porting to async uses these io classes to provide a file-like interface to a remote device using a low-level communication protocol (canopen)
[18:35:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:36:42] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:37:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:37:05] *** Joins: xkuru (~xkuru@user/xkuru)
[18:37:32] <bjs> sveinse: well your async interface cannot implement IOBase
[18:38:05] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[18:38:37] <bjs> because the IOBase interface has synchronous read/write methods,, you'd need to write your own AyncIOBase or whatever that had `async def`s in the interface
[18:38:46] *** Joins: MikZyth (~MikZyth@host-228-158-66-217.spbmts.ru)
[18:38:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:38:48] <sveinse> Exactly, so one needs a class that mimics IOBase and that was my opening question if someone has done that work
[18:38:55] *** Joins: Hawker (~Hawker@user/hawker)
[18:38:56] <bjs> (or an extension to IOBase that had `async def aread` or `async def awrite` methods or whatever)
[18:39:12] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr) (Quit: guenhael)
[18:39:18] <bjs> sveinse: I don't think there is even a standard agreed interface for "async file object"
[18:39:30] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:39:47] <sveinse> bjs: ok, thanks, that answers another question that I've been wondering about
[18:40:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:40:15] <bjs> sveinse: it's not clear what way around the implication goes though
[18:40:25] *** Parts: Seagull (~Seagull@user/mvdev-836/x-7776380) (Leaving...)
[18:40:36] <bjs> maybe we don't have a standard interface *because* nobody has written an async `io` module
[18:41:31] <bjs> aiofile is the closest to a standard, and it basically takes the io.IOBase interface and makes the methods `async def`s with the same name/arguments
[18:41:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:42:06] <sveinse> async aread() and async awrite() would be easy enough as low-end interfaces. However the mixins uses them, they need to be async as well
[18:42:31] <bjs> sveinse: I dont know what you mean by "the mixins"
[18:42:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:44:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:44:35] <sveinse> io.BufferedWriter and io.BufferedReader are mixins, are they not? That is what the sources say at least
[18:45:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:45:48] <Hawker> I have a project I'm working on, and am trying to design a system to model the data in an excel file. Basically for each day, there's an adjacency matrix, and for each city there's a cost for spending the night there, and for each plane there's a cost for flying the route. I can send the excel file if you'd like since it explains the problem more clearly, but here are my two thoughts: 1. Put everything in a huge multi-dimensional numpy array or 2. make each
[18:45:48] <Hawker> city a node in a graph with weighted arcs. What do you think? Again I can send the excel file if you want.
[18:46:08] <bjs> sveinse: I'm still not sure what point you're trying to make?
[18:46:12] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[18:46:21] <bjs> sveinse: if you were to make an async version of the `io` module,  I doubt you'd be able to use any of the original io module
[18:47:03] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:4051:4ef6:e952:2a9c)
[18:47:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:48:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:48:45] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[18:49:08] <sveinse> bjs: That was to confirm your point. When reimplementing io in async, you'd have to reimplement all the "mid-layers" as well, such as the mixins that interact with the low-level functions of the implementation
[18:49:28] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[18:49:50] *** Quits: Macuser (~Macuser@2600:1003:b458:7236:79b9:6469:f88e:c1bf) (Ping timeout: 268 seconds)
[18:50:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:50:23] <bjs> sveinse: I would assume so yeah?  That module defines interfaces and some things that implement those interfaces.  Whether a function is an `async def` is part of the interface too.  Since nothing is an `async def` in those interfaces you'd need to write whole new interfaces
[18:50:30] <Helenah> I'm having a list return like this ['-u', "'blah", "blah'"] but I expected the blah blah (if you notice the quotes) to be one item. I'm using shlex.split().
[18:51:00] <bjs> Helenah: what exactly was the string you split?
[18:51:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:51:16] *** Joins: guenhael1 (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr)
[18:51:22] <Helenah> -u 'blah blah'
[18:51:40] <bjs> Helenah: https://bpa.st/64GA works for me?
[18:52:22] <bjs> Helenah: is that the actual string?  what did you actually type into Python?
[18:52:38] <xavierdarkness>  
[18:52:45] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[18:52:46] *** guenhael1 is now known as guenhael
[18:52:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:53:31] <Helenah> Well... using stdin[0] I'm assignin the first item to a variable but then I got stdin[1:] which is my list.
[18:53:47] <Helenah> It's a prompt.
[18:53:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:54:01] <bjs> Helenah: maybe it'd be easier to show the code and the output rather than describing the code in english? I'm a little confused
[18:54:12] <bjs> you said you were using shlex.split? Where did shlex.split come into that?
[18:54:14] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:54:46] <sveinse> bjs: thanks for the aiofile, it will make sense to build the "async io" module on top of that
[18:55:06] <Helenah> bjs: I wanted to have shell-like syntax.
[18:55:16] <bjs> Helenah: shell-like syntax for... what?
[18:55:33] <Helenah> I'll show you the code.
[18:55:37] <bjs> okay
[18:55:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:56:03] <Helenah> bjs: https://termbin.com/e75b
[18:56:22] <bjs> Helenah: wow okay there's a lot going on here
[18:56:33] <Helenah> In the run definition you'll find the splitting.
[18:56:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:57:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:57:07] <bjs> Helenah: where are you using shlex.split ?
[18:57:13] <bjs> You import it but don't use it
[18:57:40] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[18:57:58] *** Joins: akk (~akk@75.161.146.115)
[18:58:20] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[18:58:30] <Helenah> bjs: It's imported "from shlex import split" And then at the top of the run definition you'll find "stdin.split()"
[18:58:31] *** Gurkenglas is now known as Gureknglas
[18:58:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:58:40] <bjs> Helenah: that's not calling shlex.split
[18:58:43] <bjs> did you mean split(stdin) ?
[18:58:56] <Helenah> Oh yeah!
[18:58:58] <Helenah> Woops!
[18:59:09] <bjs> This is why seeing the actual code helps :)
[18:59:10] <Helenah> In my test script it's what you said it's supposed to be.
[18:59:13] <Helenah> Damn no wonder...
[18:59:22] <Helenah> My eyes didn't catch that... lol
[18:59:33] <Helenah> Thanks :)
[18:59:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:59:46] <bjs> Helenah: btw this is one reason I like to import modules rather than functions
[18:59:54] <bjs> `import shlex` then it's obvious when you're calling shlex.split
[19:00:01] <bjs> as it'll be spelled shlex.split(...) in the code
[19:00:09] <Helenah> hmm
[19:00:36] <Helenah> That's more like it! :D
[19:00:38] <Helenah> Thanks.
[19:00:53] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[19:01:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:01:36] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:e025:9d89:129f:3ca5)
[19:02:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:02:46] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[19:03:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[19:04:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:04:44] *** Joins: rk04 (~rk04@user/rajk)
[19:04:47] *** Joins: fikran (~fikran@user/fikran)
[19:05:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:06:37] <sazawal> How to run a function in another process in asyncio? Is it asyncio.create_subprocess_exec function?
[19:07:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:07:11] <Helenah> I'm gonna name you ted!
[19:07:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[19:08:25] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:09:03] *** Quits: sfields (~sfields@2605:a601:adea:7a00:6531:9ed4:3d26:d88) (Remote host closed the connection)
[19:10:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:10:27] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[19:11:26] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:12:38] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[19:12:52] *** Joins: cruncher (~cruncher@90.68.118.49)
[19:13:02] *** Quits: ptalbert (~ptalbert@109.212.14.37.dynamic.jazztel.es) (Ping timeout: 256 seconds)
[19:13:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:13:53] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[19:14:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[19:15:08] *** Joins: zaquest (~notzaques@5.130.79.72)
[19:15:13] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:e025:9d89:129f:3ca5) (Quit: My Mac Mini has gone to sleep. ZZZzzz‚Ä¶)
[19:15:19] *** Joins: nomic (~nomic@185.217.117.132)
[19:16:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:17:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:17:29] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:e025:9d89:129f:3ca5)
[19:17:30] <sveinse> While I absolutely understand why we need "async def" and await, needing it does create complexities when maintaining an async and sync implementation of the some logic. To avoid duplication (DRY) a somewhat creative solution is warranted (which isn't always a good thing): Implement the large logic as a generator and implement the async and sync functions around the generator.
[19:17:35] <sveinse> https://github.com/sveinse/canopen-asyncio/blob/feature-asyncio/canopen/pdo/base.py#L432-L498 Is this solution overly creative and smelly?
[19:18:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:19:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:20:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:21:17] *** Quits: Jefren1 (~Jefren@206.253.157.194) (Ping timeout: 268 seconds)
[19:21:29] *** Joins: Lorthirk (~lorthirk@93-44-176-144.ip98.fastwebnet.it)
[19:21:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:22:06] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 256 seconds)
[19:22:16] *** Joins: x88x88x (~x88x88x@gateway/vpn/pia/x88x88x)
[19:22:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:22:58] *** Joins: Jefren1 (~Jefren@70.35.67.84)
[19:23:49] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[19:24:00] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[19:24:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:25:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:27:08] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[19:27:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:27:44] *** Quits: node161 (~node1@user/node1) (Ping timeout: 256 seconds)
[19:27:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:28:31] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:29:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:29:10] *** Joins: SteveR (~SteveR@192.146.154.3)
[19:29:19] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 268 seconds)
[19:29:20] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[19:29:28] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 256 seconds)
[19:30:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:30:26] *** Joins: newpy (~newpy@206.168.231.90)
[19:31:09] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[19:31:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:32:04] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[19:32:04] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[19:32:20] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:e025:9d89:129f:3ca5) (Quit: My Mac Mini has gone to sleep. ZZZzzz‚Ä¶)
[19:33:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:33:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:34:09] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[19:35:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[19:35:32] <bjs> sazawal: yes that is one way,  what do you want this other function to do?
[19:35:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:36:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:37:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:37:49] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[19:38:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:39:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:41:29] <sazawal> bjs, This function starts a loop which captures screenshots. If I start this function in asyncio thread or another thread, it gets slower. Now I tried this and it seems to be working fine.
[19:41:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:42:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:42:30] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[19:44:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:44:11] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[19:45:16] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:46:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:46:55] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.61)
[19:47:01] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 245 seconds)
[19:47:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:48:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:48:11] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[19:49:15] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[19:49:39] *** Quits: the_lanetly_052 (~the_lanet@194.135.155.11) (Ping timeout: 268 seconds)
[19:49:39] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[19:49:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:50:23] *** Quits: jay-m126 (~jay-m@129.0.76.210) (Ping timeout: 250 seconds)
[19:50:49] *** Quits: jay-m126_ (~jay-m@129.0.76.210) (Ping timeout: 250 seconds)
[19:50:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:50:55] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:50:55] <Helenah> bjs: Total code time was 2 weeks.
[19:51:07] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[19:52:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[19:52:05] *** Joins: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com)
[19:52:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:52:42] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 256 seconds)
[19:53:04] *** Joins: greedom (~greedom@p200300de67426b00ef4aa59168ec0e54.dip0.t-ipconnect.de)
[19:53:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:54:20] *** Joins: jay-m126 (~jay-m@129.0.76.210)
[19:55:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:55:57] *** Joins: royaljelly (~royaljell@user/royaljelly)
[19:56:03] *** Quits: SteveR (~SteveR@192.146.154.3) (Ping timeout: 256 seconds)
[19:56:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:57:58] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[19:58:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:59:06] *** Joins: jay-m126_ (~jay-m@129.0.76.210)
[19:59:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:00:25] *** Joins: palasso (~palasso@user/palasso)
[20:00:32] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 240 seconds)
[20:00:57] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[20:01:24] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[20:01:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:02:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:02:32] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[20:04:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:04:52] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:05:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:05:34] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 260 seconds)
[20:06:04] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[20:06:19] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[20:06:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:07:16] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[20:08:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:09:18] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[20:09:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:10:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:11:11] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 250 seconds)
[20:11:45] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[20:12:17] *** Joins: mankoff (~quassel@c-67-183-220-189.hsd1.wa.comcast.net)
[20:12:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:13:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:14:01] <ldericher> Really happy with how my new confirmation prompt turned out so far: https://asciinema.org/a/f9reGTc63vhhvjJOzKa0GTRI5
[20:15:01] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[20:15:10] *** Joins: tobybl (~tobybl@213.31.134.21)
[20:15:33] *** Joins: pycurious (~Adium@user/pycurious)
[20:15:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:15:36] *** Joins: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[20:15:38] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.3)
[20:16:26] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[20:16:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:18:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:18:49] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[20:19:06] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 245 seconds)
[20:19:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:20:39] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[20:21:07] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 268 seconds)
[20:21:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:21:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:21:16] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[20:22:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:22:37] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[20:23:08] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[20:23:22] <ldericher> so well ‚Ä¶ I'm developing that in PyCharm and using the click command line framework. Now I'd like to run/debug different commands/options without having to change+commit the run configuration file.
[20:23:22] *** Joins: AndrewYu (~andrew@user/andrewyu)
[20:23:54] <ldericher> Is there any way to have click prompt for the args/opts for the current execution=
[20:24:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:25:04] <bjs> ldericher: i'm not sure what you even mean?  can PyCharm not create multiple different run configurations
[20:25:09] <bjs> I'm not sure where click comes into it
[20:25:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:25:26] *** Quits: Organizers|Robin (~Robin_Jad@152.67.64.160) (Ping timeout: 268 seconds)
[20:26:19] <royaljelly> is there a getpass-like module that uses only stdin?
[20:26:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:27:23] <royaljelly> i'm serving a program through netcat but getpass uses /dev/tty so it doesn't work
[20:28:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:28:25] *** foxbox is now known as cammy
[20:29:04] *** Quits: j1mu5 (~j1mu5@user/j1mu5) ()
[20:29:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:30:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:31:02] *** Quits: jay-m126_ (~jay-m@129.0.76.210) (Ping timeout: 240 seconds)
[20:31:35] *** Quits: jay-m126 (~jay-m@129.0.76.210) (Ping timeout: 268 seconds)
[20:31:43] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[20:31:45] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[20:32:21] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[20:32:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:32:49] *** Joins: jay-m126 (~jay-m@129.0.76.222)
[20:33:07] *** Joins: jay-m126_ (~jay-m@129.0.76.222)
[20:33:07] *** Joins: SteveR (~SteveR@192.146.154.3)
[20:33:14] *** Quits: SteveR (~SteveR@192.146.154.3) (Client Quit)
[20:33:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[20:33:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:34:09] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 250 seconds)
[20:34:41] <ldericher> bjs, I can create different run configs. But let's say I created the "down" subcommand, so I wanna run "myScript down" now. Instead of creating another rc, I'd like to just run "myScript" and have it prompt for which args+opts instead.
[20:35:11] <Evolver> How can I force the evaluation of an expression in a subfunction inside a factory function?
[20:35:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:35:59] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[20:36:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:38:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:38:41] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:38:51] <nedbat> Evolver: can you link us to an example of what you mean?
[20:39:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:40:13] *** Quits: delvian (~delvian@41.13.198.66) (Quit: Leaving)
[20:40:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:40:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:41:20] *** Joins: Milos (~Milos@user/milos)
[20:41:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:43:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:44:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:45:00] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[20:46:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:47:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:48:15] <Evolver> fn_adder = lambda int_a, int_month: lambda int_b: int_a+int_b if is_valid_month(int_month) else 0
[20:48:16] <Evolver> Here, I don't want `is_valid_month(int_month)` to be executed when the inner lambda is called. I want it to be executed only when the outer lambda is called once.
[20:48:41] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[20:48:51] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 268 seconds)
[20:49:03] *** Joins: greenbigfrog (~greenbigf@95.90.216.82)
[20:49:09] *** Quits: jay-m126 (~jay-m@129.0.76.222) (Read error: Connection reset by peer)
[20:49:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:49:29] *** Quits: jay-m126_ (~jay-m@129.0.76.222) (Read error: Connection reset by peer)
[20:49:52] *** Joins: delvian (~delvian@41.13.198.66)
[20:49:56] <Evolver> This would be easy with a function using the `def` syntax because I could use `month_validity = is_valid_month(int_month)` and reuse the result.
[20:50:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:50:20] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[20:50:25] <Evolver> but idk how to eagerly evaluate it in a lambda
[20:52:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:52:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:52:26] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:52:53] <jinsun> easy solution is to just write a def instead of lambda
[20:53:03] *** Joins: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[20:53:03] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[20:53:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:53:14] *** fjmorazan_ is now known as fjmorazan
[20:53:21] <Evolver> for sure, but how do I do it with a lambda? is there a trick to it?
[20:53:22] <jinsun> lambdas are mostly useless in python
[20:53:27] <Swayze> yea you can later refactorize it to a lambda
[20:53:33] <Swayze> but its not even required
[20:53:46] *** Joins: Auron (~Auron956@user/auron)
[20:53:48] <Swayze> lambda for swagg points
[20:54:03] <Evolver> that's what I want, some nested swag
[20:54:23] <Swayze> have you ever seen how someone refactorizes a function to a lambda
[20:54:32] <Swayze> its easier if you start with a func if its complicated
[20:54:32] *** Quits: greenbigfrog (~greenbigf@95.90.216.82) (Ping timeout: 240 seconds)
[20:54:40] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:54:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:54:54] <Evolver> I gave an example of how it's impossible to use a lambda for this while being efficient.
[20:55:01] <Swayze> ahh ok :)
[20:55:06] <Swayze> no swagg then
[20:55:12] <nedbat> Evolver: i agree with people that you should use a def, but:
[20:55:32] <nedbat> Evolver: fn_adder =¬†lambda¬†int_a, int_month:¬†lambda¬†int_b, valid=is_valid_month(int_month): int_a+int_b if valid else 0
[20:55:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:56:08] <Swayze> :'D
[20:56:43] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[20:57:23] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:57:40] *** Joins: greenbigfrog (~greenbigf@95.90.216.82)
[20:57:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:58:15] <Evolver> nedbat: so the default arg is evaluated just once, right?
[20:58:24] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[20:58:24] <nedbat> Evolver: yes, but use a def
[20:58:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:58:39] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[20:59:12] <Evolver> I have a file full of a hundred of these lines. I'll move them to a hundred separate files with functions.
[20:59:42] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:59:55] *** Quits: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[21:00:14] *** Joins: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[21:00:20] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[21:00:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:01:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:02:35] <nedbat> Evolver: that sounds very unusual.  why are there 100 of them?
[21:02:43] <Evolver> I treat them as configuration
[21:02:56] <nedbat> Evolver: do you have a link?
[21:03:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:03:26] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 260 seconds)
[21:03:28] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[21:04:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:04:20] <nedbat> Evolver: i don't understand how "configuration" implies 100 one-line functions?
[21:05:25] *** Joins: jay-m126 (~jay-m@129.0.76.213)
[21:05:30] *** Joins: jay-m126_ (~jay-m@129.0.76.213)
[21:05:32] *** Quits: Hawker (~Hawker@user/hawker) (Read error: Connection reset by peer)
[21:05:41] *** Joins: Hawker (~Hawker@user/hawker)
[21:05:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:06:04] <ldericher> `my_list = [item1, item2, *more_items]` seems to work for me even when more_items is a generator instead of a container. Can I rely on that working?
[21:06:08] *** Quits: x88x88x (~x88x88x@gateway/vpn/pia/x88x88x) (Ping timeout: 268 seconds)
[21:06:32] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 240 seconds)
[21:06:33] <Evolver> ldericher: yes, I believe so
[21:06:33] <nedbat> ldericher: yes
[21:06:45] <nedbat> ldericher: any iterable can be used there
[21:06:50] <Evolver> nedbat: I'm afraid I don't have a link, but I'm all set. Each line is candidate function maximizer. Thank you.
[21:06:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:07:44] <Evolver> like a mini-plugin
[21:07:46] <ldericher> nedbat, Evolver, Thanks, having done lots of C/C++ I'm cautious about things that might be undefined behavior^^
[21:08:39] <Evolver> I'm unable to think of a single undefined behavior in Python.
[21:08:39] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[21:08:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:08:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[21:09:00] <Evolver> although there have been some syntactical issues that have lately been addressed, as per the release notes
[21:09:25] <Evolver> Afaik, the undefined behavior shouldn't exist if you follow PEP8 syntax.
[21:09:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:10:00] <nedbat> the order of set item iteration is undefined, does that count?
[21:10:27] *** Quits: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Ping timeout: 268 seconds)
[21:11:01] <Evolver> ok :-)
[21:11:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:11:27] *** Parts: Hawker (~Hawker@user/hawker) (Leaving)
[21:12:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[21:12:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:12:31] *** Joins: han-solo (~han-solo@user/han-solo)
[21:13:44] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[21:14:02] *** Joins: arinov (~arinov@77.67.129.200)
[21:14:09] *** Joins: fikran (~fikran@user/fikran)
[21:14:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:15:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:15:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:15:54] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:16:02] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[21:16:17] *** Joins: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[21:16:22] *** Quits: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Read error: Connection reset by peer)
[21:16:34] *** Quits: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be) (Ping timeout: 256 seconds)
[21:16:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:17:26] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[21:17:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:17:55] *** Quits: Andrynet (~Andrynet@190.152.210.157) (Ping timeout: 250 seconds)
[21:18:01] *** Quits: greedom (~greedom@p200300de67426b00ef4aa59168ec0e54.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:19:05] *** Quits: rsx (~dummy@ppp-188-174-145-75.dynamic.mnet-online.de) (Quit: rsx)
[21:19:11] *** Joins: greedom (~greedom@p200300de67426b00ef4aa59168ec0e54.dip0.t-ipconnect.de)
[21:19:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:19:37] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[21:19:57] *** Joins: Andrynet (~Andrynet@190.152.210.157)
[21:20:06] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[21:20:10] <ldericher> Also, I'm kind of proud of myself that I figured out how to create a decorator which turns a class into a function :3
[21:20:19] *** Quits: jay-m126_ (~jay-m@129.0.76.213) (Ping timeout: 268 seconds)
[21:20:19] *** Quits: jay-m126 (~jay-m@129.0.76.213) (Ping timeout: 268 seconds)
[21:20:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:20:58] <ChrisWarrick> (what does that decorator do, exactly?)
[21:21:12] <bancroft> how do I turn 1e-6 to 0.000001 in python?
[21:21:29] <ChrisWarrick> bancroft: you have "1e-6" as a string?
[21:21:44] <ChrisWarrick> bancroft: if yes, float("1e-6")
[21:21:45] <bancroft> ChrisWarrick: no, I just always want to avoid scientific notation
[21:21:46] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-59.dynamic.3bb.co.th)
[21:21:51] *** Joins: jay-m126 (~jay-m@154.72.150.252)
[21:22:01] *** Joins: jay-m126_ (~jay-m@154.72.150.252)
[21:22:06] <ChrisWarrick> bancroft: ah, then you‚Äôd need to figure out whatever arcane syntax formatting syntax that needs
[21:22:09] <bancroft> ChrisWarrick: float("1e-6") returns 1e-6
[21:22:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:23:14] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[21:23:25] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:23:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:23:32] <bancroft> i'm on 3.9.5 so maybe that changes in 3.10?
[21:23:38] <ChrisWarrick> bancroft: no
[21:24:02] <nedbat> ldericher: i'm curious what you mean about turning a class into a function?
[21:24:09] <ldericher> ChrisWarrick, I can define a command as a class and just implement the relevant "scopes" and the decorator stitches together the actual command function and fills in the broader implementations automatically.
[21:24:10] <han-solo> `f'{that:f}'` # ?
[21:24:26] <ChrisWarrick> ldericher: okay, fancy
[21:24:36] <ldericher> ChrisWarrick, that's a command: https://github.com/ldericher/kiwi-scp/blob/feature/next/kiwi_scp/commands/cmd_up.py
[21:25:02] *** Quits: p-i- (~Ohmu@223.206.149.59) (Ping timeout: 240 seconds)
[21:25:04] <ldericher> ChrisWarrick, and here's the decorator: https://github.com/ldericher/kiwi-scp/blob/3fb154503c52c095211aef4d6766c08c5059ca1e/kiwi_scp/commands/decorators.py#L31
[21:25:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:26:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:26:55] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:27:38] <ldericher> nedbat, look at my last 3 msgs to ChrisWarrick
[21:27:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:28:13] <ChrisWarrick> ldericher: I would prefer to move most of this logic into KiwiCommand
[21:28:41] * ChrisWarrick really dislikes decorators-as-API as seen in flask and click
[21:28:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:29:28] *** Quits: greedom (~greedom@p200300de67426b00ef4aa59168ec0e54.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:30:38] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:30:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:30:49] <bancroft> han-solo: thank you, f-strings to the rescue again :)
[21:31:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:33:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:34:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:35:21] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 245 seconds)
[21:35:30] <han-solo> `format(that, 'f')` would work too
[21:36:23] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:36:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:36:46] *** Quits: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[21:37:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:38:45] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[21:39:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:40:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:42:01] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 245 seconds)
[21:42:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:43:20] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[21:43:30] *** Quits: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: I have phased into another dimension, see ya later!)
[21:43:35] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:44:03] *** Joins: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[21:44:42] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[21:45:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:46:14] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[21:46:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:47:23] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:47:23] *** Joins: zerothule (~eric@c-67-168-62-122.hsd1.wa.comcast.net)
[21:47:30] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:48:03] *** Quits: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[21:48:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:48:22] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[21:49:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:49:33] <bjs> ldericher: click lets you pass whatever options you want to your command https://click.palletsprojects.com/en/8.0.x/api/#click.BaseCommand.main
[21:50:29] *** Joins: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[21:50:34] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[21:51:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:51:47] * bjs ldericher: e.g. a modification of the example click program to be a loop https://bpa.st/6VTQ
[21:52:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:53:14] *** Quits: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[21:53:32] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[21:53:53] *** Joins: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[21:54:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[21:54:50] *** Quits: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[21:55:20] *** Joins: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[21:55:23] *** Quits: NyaaTheCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[21:57:26] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.243)
[21:58:06] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[21:58:41] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.61) (Ping timeout: 245 seconds)
[21:59:25] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[22:04:08] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[22:04:39] *** Joins: seednode (~seednode@user/seednode)
[22:04:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:07:01] *** Joins: sfields (~sfields@2605:a601:adea:7a00:1a87:4473:c6e2:6ac8)
[22:07:17] *** Joins: x88x88x (~x88x88x@gateway/vpn/pia/x88x88x)
[22:07:54] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:10:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:11:17] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1) (Quit: Leaving)
[22:12:51] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[22:15:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[22:17:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:18:17] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:19:34] *** Joins: greedom (~greedom@p200300de67426b00ef4aa59168ec0e54.dip0.t-ipconnect.de)
[22:19:34] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[22:20:21] *** Quits: Gureknglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[22:21:14] *** Joins: darksun (~darksun@user/darksun)
[22:23:49] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe) (Read error: Connection reset by peer)
[22:23:49] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[22:23:59] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[22:24:00] *** Joins: PsyZeus (~TheLight@user/psyzeus)
[22:24:22] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[22:24:45] *** Joins: seednode (~seednode@user/seednode)
[22:24:55] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:24:59] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:26:15] *** Joins: darksun (~darksun@user/darksun)
[22:27:46] *** Quits: MikZyth (~MikZyth@host-228-158-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[22:28:09] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe)
[22:31:36] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:31:36] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[22:32:07] *** Joins: water_27300935_ (~xe@182.90.96.214)
[22:32:30] *** Joins: rk04 (~rk04@user/rajk)
[22:35:07] *** Quits: x88x88x (~x88x88x@gateway/vpn/pia/x88x88x) (Quit: Using Circe, the loveliest of all IRC clients)
[22:35:29] <water_27300935_> I use Intel i5, when use matplotlib plot large chart, feels slow still, can I use NVIDIA's CUDA plot the chart?
[22:35:55] *** Quits: nomic (~nomic@185.217.117.132) (Quit: Leaving)
[22:36:13] *** Joins: nomic (~nomic@185.217.117.132)
[22:36:20] *** Joins: x88x88x (~x88x88x@gateway/vpn/pia/x88x88x)
[22:37:06] *** Quits: nomic (~nomic@185.217.117.132) (Client Quit)
[22:37:22] <newpy> I'm a little confused by the string formatting for {0:b}
[22:37:38] <newpy> apparently the binary representation of -1 is just -0000001?
[22:37:51] <newpy> I was expecting 1111 1111
[22:38:30] <sveinse> newpy: that assumes the 2-complement encoding of negative numbers
[22:38:30] *** Quits: arinov (~arinov@77.67.129.200) (Quit: WeeChat 3.3)
[22:40:33] *** Quits: water_27300935_ (~xe@182.90.96.214) (Quit: WeeChat 3.3)
[22:40:42] <newpy> sveinse, do you know of a numpy method for converting multiple columns into a single column with a value of 0 unless all values in row are equal?
[22:41:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[22:41:10] <newpy> sveinse, I was going to use bitwise_and but the -1 is throwing it
[22:41:21] <apocalyptech> newpy: Numbers can be represented in files in a variety of different ways -- if you want to know what any in particular look like, you'd want to use the `struct` library to specify exactly what methods you intend to use
[22:41:52] <apocalyptech> newpy: And then you can print out the resulting binary data in hex/binary/whatever once you've got it.
[22:41:54] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[22:42:07] <Payam> Hi, am I doing something wrong? No loggins is happening when launching my application. https://bpa.st/EBWA
[22:42:14] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:42:35] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[22:42:36] <ChrisWarrick> Payam: where do you call your logger?
[22:43:07] *** Joins: water_27300935_ (~xe@182.90.96.214)
[22:43:23] <Payam> in a class
[22:43:29] <Payam> same python file
[22:43:38] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[22:44:04] *** Joins: ali1234 (~al@user/ali1234)
[22:44:06] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:44:20] <ChrisWarrick> Payam: your paste doesn‚Äôt show it
[22:44:21] *** Joins: mickey8 (~user@user/mickey)
[22:45:12] <Payam> https://bpa.st/3ITQ ChrisWarrick
[22:47:05] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:47:55] <ChrisWarrick> Payam: would it be possible that gi or something else would be messing with logging?
[22:48:11] <Payam> I don't know. but it should work right?
[22:48:35] <ChrisWarrick> Payam: I simplified the code to just def main(): log.info("hi")    and your `if __name__ == "__main__":` block, and I got output
[22:49:18] <Payam> can  you send me your code?
[22:49:21] <Payam> How do you mean?
[22:49:35] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:49:45] <ChrisWarrick> Payam: as simple as it gets, https://bpa.st/TMCA
[22:50:37] <Payam> Yes. it is strange
[22:50:46] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:51:01] <Noisytoot> Is there a built-in function/method for list indexing, but returning a fallback value instead of an IndexError (like get for dicts)?
[22:51:23] <ChrisWarrick> Payam: look through your code for any other `logging` calls? try to get rid of various things?
[22:51:25] <bjs> Noisytoot: no,  but if you need it wouldn't it be fairly easy to make a function to do it?
[22:51:40] <Payam> ChrisWarrick, I got it. I create a file somewhere else. That is why it happens.
[22:51:42] <Noisytoot> It would be.
[22:51:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[22:53:48] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Ping timeout: 260 seconds)
[22:53:48] <bjs> Noisytoot: some third-party libraries like toolz and more-itertools come with lots of extra helper functions like this https://toolz.readthedocs.io/en/latest/api.html#toolz.itertoolz.get
[22:55:22] <newpy> I'm a little confused here: https://paste.ee/p/INSuu
[22:55:37] <newpy> I thought it would return [False, True, False, True]
[22:55:52] <newpy> but instead it tries to broadcast from (2,) to (3,)
[22:56:11] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) (Ping timeout: 265 seconds)
[22:56:19] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[22:56:35] *** Quits: Lorthirk (~lorthirk@93-44-176-144.ip98.fastwebnet.it) (Quit: WeeChat 3.3)
[22:57:35] *** Quits: x88x88x (~x88x88x@gateway/vpn/pia/x88x88x) (Quit: Using Circe, the loveliest of all IRC clients)
[22:57:40] <newpy> oh wait np.unique doesn't return the counts
[22:57:52] *** Joins: Hackerpcs (~user@user/hackerpcs)
[22:58:46] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[22:59:42] *** Quits: zerothule (~eric@c-67-168-62-122.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[23:00:12] *** Joins: Elodin (~weechat@user/elodin)
[23:00:28] *** Joins: jim (~jim@about/linux/staff/jim)
[23:00:42] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[23:00:54] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:01:25] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[23:01:38] *** Joins: darksun (~darksun@user/darksun)
[23:04:01] *** Parts: water_27300935_ (~xe@182.90.96.214) (WeeChat 3.3)
[23:05:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:07:23] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[23:07:45] *** Joins: upsala (~zcb@185.213.155.252)
[23:09:30] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[23:09:54] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1)
[23:11:34] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[23:12:47] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:13:24] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:14:35] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[23:14:41] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[23:16:41] *** Joins: phax (~phax@user/phax)
[23:19:00] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[23:19:16] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:19:31] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 245 seconds)
[23:21:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[23:22:17] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[23:23:29] *** Joins: fikran (~fikran@user/fikran)
[23:25:29] *** Quits: y1n (~y1n@178.165.178.68.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[23:26:21] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c9c2:550b:b5da:5a2a)
[23:27:07] <zen_coder> how can I static type an array as argument in python?
[23:27:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:27:20] <zen_coder> "def foo(value: MyStaticType[]): " this gives me an error
[23:28:07] *** Parts: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (WeeChat 3.3)
[23:29:52] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Quit: Using Circe, the loveliest of all IRC clients)
[23:30:39] <supakeen> value: list[MyStaticType], or on older version `from typing import List; value: List[MyStaticType]`.
[23:30:40] <ChrisWarrick> zen_coder: if you mean a list:   list[MyStaticType]
[23:30:50] *** Quits: ub (~Thunderbi@p548c9fcb.dip0.t-ipconnect.de) (Quit: ub)
[23:33:56] *** Joins: rk04 (~rk04@user/rajk)
[23:34:32] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[23:36:11] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 245 seconds)
[23:36:16] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:36:30] *** Quits: jay-m126 (~jay-m@154.72.150.252) (Ping timeout: 260 seconds)
[23:36:35] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 268 seconds)
[23:36:35] *** Quits: jay-m126_ (~jay-m@154.72.150.252) (Ping timeout: 250 seconds)
[23:36:45] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[23:37:14] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:37:30] *** Joins: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[23:39:58] <zen_coder> supakeen: thanks
[23:40:09] <zen_coder> but now when I do an "append" I get an error
[23:40:15] <zen_coder> is this a totally different type?
[23:40:21] <nedbat> zen_coder: what error?
[23:40:35] <nedbat> zen_coder: the type annotation has no effect on the runtime type of the variable.
[23:40:35] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[23:41:04] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[23:41:18] <zen_coder> result = List[MyStaticType]
[23:41:23] <zen_coder> result.append(MyStaticType("foo"))
[23:41:36] <zen_coder> descriptor 'append' requires a 'list' object but received a "MyStaticType"
[23:42:19] <nedbat> zen_coder: i don't know what would talk about descriptors like that, so I don't know what "result" is.  You'll need to pastebin more of the code
[23:42:37] <nedbat> zen_coder: oh, wait: you don't assign like that:  result = List[MyStaticType
[23:42:42] <zen_coder> yes
[23:42:45] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[23:42:57] <nedbat> zen_coder: `List[MyStaticType]` is an annotation, you don't use it to initialize the value
[23:42:58] <zen_coder> I declare "result" there 1st time
[23:43:11] <SnoopJ> you associate the name `result` with the annotation itself, not a list object
[23:43:22] <nedbat> zen_coder: use "result : List[.."  not  "result = List[.."
[23:43:22] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Ping timeout: 268 seconds)
[23:43:26] *** Joins: goldfish (~goldfish@user/goldfish)
[23:43:33] *** Joins: Barones (~Barones@2804:7f3:8987:f411:88c0:ec5e:94ff:7eaf)
[23:43:52] <nedbat> zen_coder:    result: List[MyStaticType] = []
[23:44:04] *** Quits: Barones (~Barones@2804:7f3:8987:f411:88c0:ec5e:94ff:7eaf) (Client Quit)
[23:44:05] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[23:44:45] <zen_coder> ahh okay
[23:44:46] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:44:48] <zen_coder> thanks
[23:44:48] <jinsun> and in 3.9+ you can also do `result = list[MyStaticType]()`
[23:45:01] <zen_coder> what is the best practice for python?
[23:45:08] <zen_coder> should static types used everywhere?
[23:45:20] *** Joins: Barones (~Barones@2804:7f3:8987:f411:88c0:ec5e:94ff:7eaf)
[23:45:29] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:45:33] *** Quits: Barones (~Barones@2804:7f3:8987:f411:88c0:ec5e:94ff:7eaf) (Client Quit)
[23:45:34] <BrenBarn> it's up to you
[23:45:35] *** Joins: Pandadub (~Barones@2804:7f3:8987:f411:88c0:ec5e:94ff:7eaf)
[23:45:36] <SnoopJ> zen_coder, they aren't static types, they're annotations. The interpreter does not care about them, just stores them for use by some other tool (like mypy)
[23:45:57] *** Quits: Pandadub (~Barones@2804:7f3:8987:f411:88c0:ec5e:94ff:7eaf) (Client Quit)
[23:46:06] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[23:48:10] *** Joins: Barones (~Barones@2804:7f3:8987:f411:88c0:ec5e:94ff:7eaf)
[23:48:53] <SnoopJ> "best practice" depends on your goals, it's a personal preference thing. A good search keyword for working with them is "gradual typing"
[23:48:53] <zen_coder> is there no best practice for python?
[23:49:00] <SnoopJ> There isn't just one, no
[23:49:00] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[23:49:01] *** Quits: demsh (swoz8jwwqe@hermod.demsh.org) (Quit: nyaa~)
[23:50:25] *** Joins: rtgg (~rtgg@p5791f0bc.dip0.t-ipconnect.de)
[23:50:58] <jinsun> if it is a library then just do it, else you will annoy people using type checkers
[23:51:59] <jinsun> satisfy mypy --strict at least, and pyright strict mode if possible too
[23:52:06] *** Joins: demsh (ws14dshtt8@hermod.demsh.org)
[23:52:26] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[23:55:13] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[23:56:18] <nedbat> or, don't worry about static typing, and write Python the way it had been done for 25 years
[23:57:16] <ChrisWarrick> or enjoy improvements in your IDE‚Äôs hints and possibly more correct code
[23:57:34] *** Joins: medium_cool (~medium_co@136.36.128.48)
[23:58:18] <nedbat> or that! this is why there's not just one best practice for Python
[23:58:23] <kenwoodfox> Hey! this is kind of a weird question but, id like to ovveride the hostname for some coloredlogs messages, is there a nice way i could do this?
[23:58:40] *** Quits: rk04 (~rk04@user/rajk) (Quit: rk04)
[23:58:53] <zen_coder> so libraries using static typing?
[23:59:51] <ChrisWarrick> zen_coder: not all of them are
