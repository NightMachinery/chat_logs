[00:03:05] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[00:04:06] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[00:04:48] <Donitz> n> Math.sqrt(-1);
[00:04:48] <jellobot> (okay) NaN
[00:04:54] <Donitz> n> -1 ** 0.5;
[00:04:55] <jellobot> (fail) SyntaxError: Unary operator used immediately before exponentiation expression. Parenthesis must be used to disambiguate operator precedence
[00:05:09] <Donitz> n> (-1) ** 0.5;
[00:05:10] <jellobot> (okay) NaN
[00:05:25] <ljharb> Donitz: i hope you're not expecting i
[00:05:25] <Donitz> in R I get -1
[00:05:32] <ljharb> Donitz: that's wrong in R too
[00:05:48] <ljharb> the answer is either i, or "some kind of error"
[00:06:02] <ljharb> Donitz: if -1 is the square root of -1, then -1 * -1 would be -1
[00:06:37] *** Quits: cmnstr92 (~cmnstr@171.247.176.68) (Quit: Client closed)
[00:07:26] <Donitz> hmm
[00:08:01] <Donitz> not sure how to deal with the scenario that my machine learning model happens to use use the power of a negative number
[00:08:15] <Donitz> probably not a good idea to let NaN propogate the entire thing
[00:08:54] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[00:09:16] <ljharb> Donitz: the square root of -1 is imaginary
[00:09:22] *** Quits: straykitten (~straykitt@subs24-116-206-8-26.three.co.id) (Ping timeout: 252 seconds)
[00:09:25] <ljharb> Donitz: so perhaps your machine learning model needs to be rearchitected
[00:09:27] <Donitz> I know
[00:09:37] <Donitz> naw, power of is just one of many functions
[00:09:41] <Donitz> it's not that important
[00:09:44] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 258 seconds)
[00:10:06] <Donitz> already found out about "protected divide"
[00:10:16] <Donitz> which retursn 1 if the denominator is 0
[00:10:19] <Donitz> returns*
[00:10:47] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:10:53] *** Quits: raindrop22 (~raindrop@46.140.25.34) (Read error: Connection reset by peer)
[00:11:12] *** Joins: raindrop22 (~raindrop@46.140.123.194)
[00:11:15] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:12:53] <sheetjs> Donitz: did you wrap -1 in parens?
[00:13:58] <Donitz> apparently I had to
[00:14:06] <Donitz> how odd
[00:14:12] <sheetjs> `x<-(-1)**0.5; print(x); y<- -1**0.5; print(y)` prints NaN and -1
[00:14:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[00:14:26] <sheetjs> operator precedence
[00:14:30] <sheetjs> same as javascript
[00:14:50] *** systemd is now known as theoretical_cast
[00:15:16] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 246 seconds)
[00:15:42] <ljharb> it's a requirement because "did you mean `-(1 ** x)` or `(-1) ** x`?" we can't know, so it errors.
[00:15:55] <ljharb> half the languages with ** mean one, the others mean the other
[00:16:00] <ljharb> so JS decided to avoid the confusion
[00:16:07] <Donitz> I guess that makes sense
[00:16:13] <sheetjs> which languages use the former interpretation?
[00:16:16] <Donitz> never happened before for me
[00:16:28] <sheetjs> err which use the latter interpretation
[00:16:49] <sheetjs> python interprets -1**2 as -(1**2)
[00:17:05] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[00:17:28] <ljharb> sheetjs: https://esdiscuss.org/topic/exponentiation-operator-precedence
[00:20:06] <Donitz> I don't know, maybe just use 0 for power of < 1
[00:20:08] *** __jmcantrell__ is now known as jmcantrell
[00:20:14] <Donitz> with a negative number
[00:20:22] <Donitz> just to not crash the thing
[00:20:26] <ljharb> Donitz: it's a category error to do that
[00:20:36] <Donitz> it's not an error
[00:20:37] <ljharb> Donitz: iow, it should crash. stop calling "power of" with a negative base
[00:20:39] <Donitz> just inconvenient
[00:20:40] <ljharb> yes it is
[00:20:49] <ljharb> unless your problem domain involves imaginary numbers
[00:20:55] <ljharb> and if it does, you should be using something that supports that
[00:21:07] <Donitz> it is randomly mutated, it shouldn't crash the model
[00:21:13] <Donitz> it should handle in some graceful way
[00:21:20] <ljharb> sheetjs: so maybe it wasn't about languages; that's a long thread but it seems it's more a conflict with the precedence of unary minus
[00:21:29] <ljharb> Donitz: unexpected things should crash the program
[00:21:36] <Donitz> it is expected
[00:21:42] *** Joins: straykitten (~straykitt@subs25-116-206-9-30.three.co.id)
[00:22:51] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[00:23:08] <ljharb> lol
[00:23:17] <ljharb> Donitz: if you expect a negative base, then don't call "power of" in that case. do something else.
[00:23:34] <Donitz> yeah, maybe I'll call it protected power of
[00:23:50] <Donitz> following the previous example
[00:27:33] <Donitz> abs power of
[00:27:35] <Donitz> there, that is clear
[00:28:19] *** Quits: lrpe (lrpe@188-182-61-227-cable.dk.customer.tdc.net) (Remote host closed the connection)
[00:28:20] <Donitz> abs and power of*
[00:29:08] *** Quits: Guest9 (~Guest9@43.241.144.49) (Quit: Connection closed)
[00:31:08] *** Quits: dunkeln_ (~dunkeln@188.71.193.140) (Ping timeout: 250 seconds)
[00:35:31] *** Joins: heatwave (~heatwave@192.145.118.182)
[00:39:06] *** Joins: Akimb (~Akimb@86.100.13.100)
[00:40:07] *** Joins: Praise (~Fat@user/praise)
[00:42:01] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:44:27] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[00:44:44] *** Quits: heatwave (~heatwave@192.145.118.182) (Quit: WeeChat 3.2)
[00:45:04] *** Quits: Haxxa (~Haxxa@122.199.47.41) (Quit: Haxxa flies away.)
[00:45:19] *** Joins: pavonia (~user@user/siracusa)
[00:47:37] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[00:47:57] *** Joins: Haxxa (~Haxxa@122.199.47.41)
[00:50:37] *** Quits: Ziyan (~ziyan@112.134.174.41) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[00:51:04] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 250 seconds)
[00:51:16] <em> I'm really surprised there isn't more excitement about three.js
[00:51:17] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:52:31] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:52:41] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[00:52:55] <systemfault> It's a billion years old... most devs write websites, not highly interactive webgl stuff
[00:53:09] <ThePendulum> about to say, not all that many instances where you want to display a 3d object on a web page that's not a game
[00:53:24] <ThePendulum> and if it is a game you probably want something more elaborate like babylon
[00:53:27] <ljharb> em: it's not new, and it's coded really terrible internally, and also what systemfault said
[00:53:51] <wroathe> OH MY GOD I'M SO EXCITED ABOUT THREE.JS
[00:53:57] <ljharb> if all you want is graphs and charts there's better choices nowadays, and for the gaming stuff you'd probably use something newer
[00:54:14] <systemfault> Wait for FOUR.JS!!!!!111
[00:54:15] <ljharb> someone should have made "less than three.js"
[00:54:16] <ThePendulum> we have a dutch folk group https://en.wikipedia.org/wiki/3JS
[00:55:20] <ljharb> `<3.js` would only be able to have 2 major versions tho, it could never be >= v3.x
[00:55:50] *** Joins: mexen (uid495612@user/mexen)
[00:56:19] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:56:19] <em> Okay in your opinion then, what would be the absolute best javascript solution for making animations that explain mathematical objects and concepts?
[00:56:19] <ThePendulum> could eventually upgrade to <=8.js
[00:57:03] <wroathe> Why stop there? We could go as high as 47.js.
[00:58:15] <wroathe> em: If you're excited about it, that's cool. Not everyone is into graphics.
[00:58:34] <rg> <3NL
[00:58:44] <rg> .js
[00:59:08] <wroathe> My personal area of hobby focus is programming languages and compilers. Professionally it's historically been web development. Programming for games doesn't interest me in the slightest.
[01:00:49] <rg> same here but it also seems quite challenging. you need art and images to get anywhere.
[01:01:15] <GreenJello> em, if you need to do 3D visualization, three.js is probably good for that
[01:01:30] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:02:05] <GreenJello> it's low level enough to not get in your way
[01:02:35] *** Joins: Ziyan (~ziyan@112.134.174.41)
[01:03:47] <em> What I really want is the best javascript way to make the kind of animations that this guy does in these videos: https://www.youtube.com/watch?v=rB83DpBJQsE
[01:03:47] <skillbot> YouTube Title: Divergence and curl:  The language of Maxwell's equations, fluid flow, and more
[01:03:57] <em> He uses a python library he made himself called "manim"
[01:04:22] <em> Is there a natural choice for a javascript way to make animations like that?
[01:05:29] <wroathe> em: Well, three.js is just an API in front of https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API
[01:05:38] <rg> i'm a ruby guy but damn they create some cool stuff in python
[01:05:40] <wroathe> em: And that would be the natural choice for making something like that
[01:05:59] <em> wroathe: the webgl api itself?
[01:06:16] <wroathe> em: Either. It depends on what you need and what three.js supports.
[01:06:17] <em> rg:  do you see that video I linked?
[01:06:22] <rg> yeah
[01:06:44] <em> I think that's pretty cool. I think I could make some cool explanations about other ideas in math if I had the write programming tools.
[01:06:53] <em> right*
[01:06:54] <rg> yea its v cool
[01:08:16] <wroathe> em: It's just important to know that if you end up fighting with three.js while making something like that, that's it's all based on a lower level API anyway that can do what you want (with maybe a little more effort)
[01:08:23] <wroathe> em: That's the way layers of abstraction work generally
[01:08:46] <em> Okay I see.
[01:09:14] <em> So maybe three.js is a good tool to use to make math-animation explanations like I want to make, but maybe also just working on the webgl api directly and building up my own tools
[01:09:20] <rg> failed layers of abstraction
[01:09:41] <em> an advantage, if you could make it work, of javascript (I think) is that my explanations could be shown on a webpage and not need to be a video.
[01:09:53] <em> This guy made his python math animation library specifically to make videos.
[01:10:28] <em> I could just use his thing but then my videos would look the same and id have to also learn python again, and I guess it couldn't be interactive on a web page.
[01:10:53] *** Quits: raindrop22 (~raindrop@46.140.123.194) (Read error: Connection reset by peer)
[01:11:12] *** Joins: raindrop22 (~raindrop@46.140.25.34)
[01:11:56] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[01:13:10] *** Quits: Deide (~Deide@user/deide) (Read error: Connection reset by peer)
[01:13:28] *** Joins: Deide (~Deide@wire.desu.ga)
[01:13:28] *** Quits: Deide (~Deide@wire.desu.ga) (Changing host)
[01:13:28] *** Joins: Deide (~Deide@user/deide)
[01:14:05] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[01:14:38] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.94) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:15:21] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.94)
[01:15:38] *** Joins: dunkeln_ (~dunkeln@188.71.193.140)
[01:16:20] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:16:34] *** Joins: mickey (~user@user/mickey)
[01:18:06] *** Ducki_ is now known as DUcki
[01:18:09] *** DUcki is now known as Ducki
[01:20:06] *** Quits: raindrop22 (~raindrop@46.140.25.34) (Ping timeout: 250 seconds)
[01:21:59] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:24:05] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[01:26:09] *** Quits: droptone (~droptone@50-193-186-122-static.hfc.comcastbusiness.net) (Quit: leaving)
[01:26:27] *** Quits: guzzlefry (~gus@user/guzzlefry) (Ping timeout: 268 seconds)
[01:27:03] *** Joins: guzzlefry (~gus@user/guzzlefry)
[01:29:59] <ashnur> https://regl-project.github.io/regl/www/gallery/instance-mesh.js.html
[01:31:41] *** Joins: raindrop22 (~raindrop@46.140.123.194)
[01:31:53] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:34:05] *** Quits: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be) (Quit: Lost the game...)
[01:34:49] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:36:59] *** Quits: dimi1947 (~dimi1947@2a02:1388:88:b338:9433:14b7:dc7c:2d9b) (Ping timeout: 252 seconds)
[01:37:52] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[01:39:36] *** Quits: makara (~sol@196.61.111.63) (Ping timeout: 250 seconds)
[01:40:04] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:43:04] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[01:43:56] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.94) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:49:10] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.94)
[01:49:49] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.94) (Client Quit)
[01:52:15] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.150)
[01:53:24] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.150) (Client Quit)
[01:53:59] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[01:54:20] *** Quits: guzzlefry (~gus@user/guzzlefry) (Ping timeout: 250 seconds)
[01:55:03] *** Joins: guzzlefry (~gus@user/guzzlefry)
[01:58:12] *** Joins: audiofreeze (~audio@2603-8081-1800-0062-7da2-cc59-485c-62e5.res6.spectrum.com)
[02:00:02] *** Quits: Ziyan (~ziyan@112.134.174.41) (Quit: Textual IRC Client: www.textualapp.com)
[02:00:22] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[02:02:26] *** Quits: ariedro (~ariedro@user/ariedro) (Quit: WeeChat 3.2)
[02:07:19] *** Quits: Haren4E (~Haren4E@179.52.69.116) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:09:22] *** Quits: straykitten (~straykitt@subs25-116-206-9-30.three.co.id) (Ping timeout: 246 seconds)
[02:09:26] *** Quits: mexen (uid495612@user/mexen) ()
[02:11:07] *** Quits: raindrop22 (~raindrop@46.140.123.194) (Ping timeout: 246 seconds)
[02:11:22] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[02:12:33] *** Quits: dunkeln_ (~dunkeln@188.71.193.140) (Ping timeout: 250 seconds)
[02:12:33] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[02:16:09] <em> ashnur: looks pretty cool
[02:19:48] *** Joins: gehn (~gehn@user/gehn)
[02:20:38] <em> Look at this, it's cool: http://webglplayground.net/share/fluid-simulation?gallery=1&fullscreen=0&width=800&height=600&header=1
[02:22:20] *** Joins: straykitten (~straykitt@subs24-116-206-8-37.three.co.id)
[02:24:24] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[02:27:20] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[02:27:42] *** Joins: summersault (~summersau@179.221.251.16)
[02:29:47] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Quit: rewrit3)
[02:30:09] *** acidsys is now known as LSD
[02:30:09] *** Joins: Haren4E (~Haren4E@179.52.69.116)
[02:31:09] <bambanxx> hello
[02:32:07] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 246 seconds)
[02:34:55] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[02:36:08] *** Quits: coc0nut (~coc0nut@167.99.37.181) (Quit: ZNC 1.8.2 - https://znc.in)
[02:37:28] <mdemo> for a simple command line script, what's the simplest way to be able to use await?
[02:41:46] *** Joins: coc0nut (~coc0nut@167.99.37.181)
[02:42:17] <GreenJello> mdemo, I think recent node versions support top level await in .mjs files, but for common.js modules, I start from this snippet: https://bpa.st/MAYQ
[02:42:29] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:43:00] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:43:13] <GreenJello> I don't know how good the error reporting with top level await is, so check that before deciding
[02:43:13] <mdemo> first I've heard of MJS, is there another name I can search for info by?
[02:43:39] <GreenJello> esm/es modules/es6 modules
[02:43:51] <GreenJello> https://nodejs.org/api/esm.html#esm_modules_ecmascript_modules
[02:44:03] *** ThePendulum is now known as I
[02:44:14] *** Joins: summersault (~summersau@179.221.251.16)
[02:44:15] *** I is now known as ThePendulum
[02:44:28] *** Quits: crazazy (~user@130.89.171.203) (Ping timeout: 252 seconds)
[02:44:48] *** Gustavo6046_ is now known as Gustavo6046
[02:45:13] <GreenJello> seems top level await is classified as experimental
[02:45:22] *** Joins: Betal (~Beta@user/betal)
[02:50:53] <ljharb> mdemo: `.mjs` is the proper file extension for ES Modules.
[02:51:12] <ljharb> `.js` means CJS, but you can do a bad thing and add `"type": "module"` to your package.json to make .js files be treated as ESM instead. don't do this tho.
[02:51:54] *** Quits: brian_da_mage (~Neuromanc@user/briandamag) (Ping timeout: 264 seconds)
[02:53:01] *** xse_ is now known as xse
[02:55:13] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Quit: Lost terminal)
[02:57:40] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:57:42] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[03:01:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:02:12] *** Quits: Celeo (~Celeo@user/celeo) (Read error: Connection reset by peer)
[03:02:48] *** Quits: Haren4E (~Haren4E@179.52.69.116) (Ping timeout: 250 seconds)
[03:03:33] *** Joins: Celeo (~Celeo@user/celeo)
[03:04:19] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 246 seconds)
[03:05:50] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[03:06:06] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net) (Quit: Ping timeout (120 seconds))
[03:13:34] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 265 seconds)
[03:14:00] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:14:41] *** Joins: Axy (~Axy@user/axy)
[03:18:56] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 252 seconds)
[03:25:23] *** Joins: ferdna (~ferdna@user/ferdna)
[03:28:10] *** Quits: Northwoods (~Northwood@223.130.30.189) (Quit: Leaving)
[03:28:53] *** Joins: name__ (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[03:30:54] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[03:34:59] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[03:35:04] *** Joins: summersault (~summersau@179.221.251.16)
[03:36:10] *** Joins: Enissay (~Enissay@user/enissay)
[03:38:46] *** Quits: tex (~super@user/dix) (Ping timeout: 250 seconds)
[03:39:19] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 246 seconds)
[03:40:03] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[03:41:39] *** Joins: gry (~quassel@botters/gry)
[03:44:20] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[03:45:05] *** Joins: Enissay (~Enissay@user/enissay)
[03:47:08] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[03:49:28] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[03:49:51] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[03:51:45] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 265 seconds)
[03:53:03] *** Joins: summersault (~summersau@179.221.251.16)
[03:59:32] *** Joins: xsperry (~as@user/xsperry)
[03:59:33] *** Quits: xsperry (~as@user/xsperry) (Excess Flood)
[04:00:00] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:87a8:cd5f:fc13:5636:169f) (Ping timeout: 250 seconds)
[04:00:30] *** Quits: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 258 seconds)
[04:08:51] *** Joins: EgonX (~EgonX@2001:558:6022:6d:5177:9c10:6d43:f161)
[04:09:25] *** Quits: straykitten (~straykitt@subs24-116-206-8-37.three.co.id) (Ping timeout: 246 seconds)
[04:11:31] *** Quits: EgonX (~EgonX@2001:558:6022:6d:5177:9c10:6d43:f161) (Read error: Connection reset by peer)
[04:11:36] *** Joins: EgonX_ (~EgonX@2001:558:6022:6d:5177:9c10:6d43:f161)
[04:11:44] *** Joins: nomic2 (~nomic@host86-177-4-82.range86-177.btcentralplus.com)
[04:12:27] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:14:18] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Ping timeout: 250 seconds)
[04:16:54] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[04:18:13] *** Quits: EgonX_ (~EgonX@2001:558:6022:6d:5177:9c10:6d43:f161) (Ping timeout: 250 seconds)
[04:18:49] *** Joins: EgonX (~EgonX@c-98-201-3-96.hsd1.tx.comcast.net)
[04:20:40] *** Joins: hoppity (~hoppity@user/hoppity)
[04:21:11] <hoppity> Hi guys is there any way to have $ be available without Jquery? I see all these questiosn on SO where the code jsut uses $ but there is no mention of Jquery being used.
[04:22:22] *** Joins: straykitten (~straykitt@subs24-116-206-8-38.three.co.id)
[04:23:15] <entuland> hoppity, you don't need jQuery and you don't need any other $ function
[04:23:44] <entuland> the $ function sometimes was just a custom function to find elements or do other funky stuff
[04:23:45] *** Joins: tonelo (~tonelo@host-213-45-225-228.pool21345.interbusiness.it)
[04:24:32] <hoppity> entuland, I get Uncaught ReferenceError: $ is not defined  if I attempt to use $. I am using <script defer> don;t know if that matterss
[04:24:34] <entuland> JS now includes a lot of the things that we kinda _needed_ $ or jQuery for
[04:24:37] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[04:24:51] <entuland> some code is using $, is that your code?
[04:25:10] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 246 seconds)
[04:25:12] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[04:25:23] <hoppity> entuland, it's code from SO but it's a simple element select by type
[04:25:25] *** Quits: nomic2 (~nomic@host86-177-4-82.range86-177.btcentralplus.com) (Quit: Leaving)
[04:25:33] <entuland> you don't need it to select elements by type
[04:25:45] <entuland> use querySelect or querySelectAll
[04:26:01] *** Joins: dimi1947 (~dimi1947@2a02:1388:88:b338:90d1:d091:bc14:d97)
[04:26:15] <entuland> sorry, querySelector() and querySelectorAll()
[04:26:20] <hoppity> entuland, thank you, I am trying to have my multi-selects not require the user to press CTRL. Do you have any advise on that front?
[04:26:21] <entuland> https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector
[04:26:43] <entuland> for one, use the built in facilities to get the elements you need to act on
[04:27:23] <hoppity> makes sense
[04:27:38] <entuland> not sure I get how you'd want them to select multiple elements in a multi select without CTRL though
[04:27:44] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 250 seconds)
[04:28:00] *** Quits: incognito (~relativit@user/incognito) (Ping timeout: 265 seconds)
[04:28:50] <entuland> and I'm not even sure you should alter that behavior
[04:29:12] *** Quits: dimi1947 (~dimi1947@2a02:1388:88:b338:90d1:d091:bc14:d97) (Client Quit)
[04:29:14] <hoppity> you may be right
[04:29:14] <entuland> since that's how it works by default in tons of other places where such multiselects are used
[04:30:33] *** Joins: debsan (~debsan@2800:810:471:2ee::1001)
[04:31:36] <hoppity> entuland, I think I will use something like Jquery mobile, having users need to press CTRL just seems preposterous
[04:31:37] *** Joins: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com)
[04:32:06] <entuland> if you need to simplify that behavior because you know there are usability issues, then use a list of checkboxes conveying your purpose better
[04:32:13] <entuland> you can make these things work just fine on mobile
[04:32:25] <entuland> no need to bloat your page with jQuery if all you need is that little improvement
[04:32:58] <entuland> you can as well make it so that the list of checkboxes gets collapsed to a single line as if it was a dropdown select
[04:33:18] <hoppity> entuland, yes I thought about using checkboxes but unfortunately I am using the Phoenix Framework and it has just been a nightmare to use checkboxes
[04:33:47] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:34:08] <entuland> can't tell, I try and not use frameworks unless at gunpoint
[04:34:10] *** Joins: dimi1947 (~dimi1947@2a02:1388:88:b338:90d1:d091:bc14:d97)
[04:34:16] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 246 seconds)
[04:34:19] <entuland> see if there is anything in that framework that already does what you need
[04:34:50] <entuland> do not mix and match libraries and frameworks until you're sure you can't do what you need as intended in the framework you already have and with pure JS as first alternative
[04:35:11] <hoppity> entuland, fair enough, thank you for the advice. I really appreciate it
[04:35:15] <entuland> yw
[04:35:38] <entuland> it's mostly to reduce your dependencies and the stuff that may break as you need to update or add features to your system
[04:36:03] <entuland> once you have a framework do not try and swim against the flow
[04:36:04] <hoppity> absolutely, makes sense
[04:36:44] *** Joins: incognito (~relativit@user/incognito)
[04:37:55] *** Joins: summersault (~summersau@179.221.251.16)
[04:38:35] <bambanxx> good afternoon folks
[04:39:04] *** Quits: federico_it (~textual@151.51.89.77) (Quit: Textual IRC Client: www.textualapp.com)
[04:39:16] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[04:40:16] *** Joins: ktwo__ (~ktwo@200116b826b7ac00b9b3af0acc4a5b47.dip.versatel-1u1.de)
[04:43:01] *** Quits: ktwo_ (~ktwo@200116b8264eaf001b39336dcd3252dc.dip.versatel-1u1.de) (Ping timeout: 244 seconds)
[04:44:05] *** Quits: debsan (~debsan@2800:810:471:2ee::1001) (Quit: Leaving)
[04:44:20] *** Joins: debsan (~debsan@2800:810:471:2ee::1001)
[04:46:48] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:51:09] *** Joins: w0x12ef_ (~w0x12ef@117.61.31.20)
[04:52:17] *** Quits: audiofreeze (~audio@2603-8081-1800-0062-7da2-cc59-485c-62e5.res6.spectrum.com) (Read error: Connection reset by peer)
[04:52:35] *** Joins: audiofreeze (~audio@2603-8081-1800-0062-7da2-cc59-485c-62e5.res6.spectrum.com)
[04:53:01] *** LSD is now known as acidsys
[04:58:28] *** Quits: hoppity (~hoppity@user/hoppity) (Quit: Leaving)
[05:00:36] <wroathe> So a friend of mine just called me asking for advice on a feature that his employer is asking him to build. He's working for a terrible big bank, and they want the classic feature where they've got an overlay full of transactions in the browser, and a print button in the upper right corner. When they click on the print button they want the transactions to show up in a printable view. A few months ago,
[05:00:42] <wroathe> when he asked me about this, he said that he thought there would be at most 20 or 30 transactions, and so I recommended a pure CSS solution with media queries. Where this gets interesting is that he's a relatively junior developer, and he's the only person on shore here in the U.S., and there's a huge team of developers offshore in India also working on the project, and so they've established patterns
[05:00:48] <wroathe> and practices for how things should be done. Anyway, so he neglected to mention that they already had a pattern for this, and that they're using a library on the front end to generate PDFs, jsPDF. To me, that seems like nonsense, and that obviously the API layer should be handling dynamic PDF generation (the primary benefit being that it can be called from multiple places in multiple distinct
[05:00:55] <wroathe> applications that need to generate that PDF).
[05:01:23] <wroathe> And I was pushing that as a recommendation and saying that he should fight back and get them to start generating PDFs on the server side, but then he asked me an interesting question? "Why are PDF generation libraries on the client side so popular?"
[05:01:47] <wroathe> And the only thought that I could come up with is that an organization might want to save on the CPU cycles for generating those documents by forcing browsers to do it.
[05:02:00] <wroathe> Is there something I'm missing here? Is client-side binary file generation the way of the future?
[05:02:25] *** Quits: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com) (Ping timeout: 250 seconds)
[05:02:57] *** Joins: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com)
[05:03:46] <wroathe> Or maybe put more simply: Is the reason https://github.com/MrRio/jsPDF is so popular because of the novelty effect, or because that's the way we should be doing things?
[05:07:01] <wroathe> Brb.
[05:07:30] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[05:11:04] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 250 seconds)
[05:12:28] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 244 seconds)
[05:12:53] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[05:15:02] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:15:11] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9f7:aeda:6096:a4cc) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:17:08] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[05:17:23] *** Joins: jazzy (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321)
[05:18:28] *** Joins: z1haze_ (~z1haze@184.103.47.145)
[05:19:58] *** Joins: ryzenda (~ryzenda@84.sub-174-242-36.myvzw.com)
[05:20:01] <wroathe> Back, in case someone wants to take a crack at answering that.
[05:20:48] *** Quits: ryzenda (~ryzenda@84.sub-174-242-36.myvzw.com) (Remote host closed the connection)
[05:23:42] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[05:24:44] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[05:25:10] *** Joins: jazzy2 (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321)
[05:25:22] *** Joins: ryzenda (~ryzenda@84.sub-174-242-36.myvzw.com)
[05:25:37] *** Joins: holmes (~holmes@cpe-75-82-82-73.socal.res.rr.com)
[05:27:32] *** Quits: dimi1947 (~dimi1947@2a02:1388:88:b338:90d1:d091:bc14:d97) (Quit: Leaving)
[05:28:11] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[05:28:25] *** Quits: jazzy (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321) (Ping timeout: 250 seconds)
[05:31:53] <sheetjs> wroathe: both
[05:32:54] <sheetjs> its initial popularity stemmed from the novelty, and over time it became more useful.  Like with many projects, as browsers improved people realized that it was possible to do the work in the browser
[05:33:45] *** jazzy2 is now known as jazzy
[05:34:02] <sheetjs> there are big advantages to client-side PDF generation.  The server-side use case is also really neat and it benefits from improvements in the library
[05:34:50] <sheetjs> (SheetJS followed a similar trajectory)
[05:35:22] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[05:37:43] <wroathe> sheetjs: Well, I'm not talking about jsPDF on the server. I'm just talking about dynamic PDF generation, using whatever library you use for whatever language your services are written in.
[05:38:19] *** Quits: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com) (Ping timeout: 246 seconds)
[05:38:33] <wroathe> sheetjs: The only advantage I see to client side generation is saving on CPU cycles and bandwidth, but the drawback is that you need to implement client side PDF generation in all of the distinct applications your organization uses
[05:38:54] <wroathe> sheetjs: Whereas the server-side approach is reusable in any context (and some would say tried and true)
[05:38:59] <sheetjs> there are two questions
[05:39:49] <sheetjs> 1) "why is client-side PDF generation so popular?" yes there are technical reasons like server resources, yes there are "full-stack" reasons, but over time the JS libraries are more battle-tested
[05:40:09] <sheetjs> It's a lot easier to drop in jsPDF into your frontend than have to fight with the backend
[05:40:22] <wroathe> That may be recently true, but some other languages like Java and C# have been generating PDFs for far longer than Javascript has
[05:40:46] <wroathe> sheetjs: Well, sure, if resources to work on your backend are an issue that could be a consideration
[05:40:51] <sheetjs> 2) "should you generate PDFs in the browser?" that is harder to answer.  For bank statements and the like, you may need to retain an identical copy in the server.  For that, you def need to do it in the server
[05:40:59] <wroathe> sheetjs: But this is a big bank, and so you have to assume that if they already have APIs, they have API maintainers
[05:41:02] <sheetjs> do you know how old jsPDF is?
[05:41:12] <wroathe> sheetjs: From what I saw about a decade or so
[05:41:15] <sheetjs> Copyright (c) 2010-2020
[05:41:25] *** Joins: summersault (~summersau@179.221.251.16)
[05:42:02] <sheetjs> Assuming these libraries follow a long-tail development process
[05:42:28] <sheetjs> an 11-year-old JS library may do 99% of what a 20-year old C# library can do
[05:42:38] *** Joins: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com)
[05:42:53] <sheetjs> and probably have more robust testing and real-world experience
[05:42:56] <wroathe> sheetjs: Indeed, but the maturity argument doesn't hold up as a reason to prefer client side over server side.
[05:43:01] <wroathe> sheetjs: JS is still playing catch up
[05:43:17] <sheetjs> JS has a unique advantage of ubiquity
[05:43:33] <wroathe> sheetjs: So does Java
[05:43:48] <GreenJello> I wouldn't use a Java library on the backend
[05:43:51] <sheetjs> so while the library may not be as mature, its utility in the server and in the browser gives it a userbase that Java does not have
[05:43:53] <GreenJello> but I do have frontend code
[05:44:00] <sheetjs> NodeJS changed the game here
[05:44:02] <GreenJello> which is JS
[05:44:23] <sheetjs> Cordova / Ionic / React-Native / WeeX changed the game here
[05:44:28] <wroathe> GreenJello: I'm just saying that it's not really a question of which language has the most mature PDF tooling
[05:44:43] <wroathe> GreenJello: The only real considerations that come in are the technical pros and cons one way or another
[05:45:09] <wroathe> (client vs server generation, that is)
[05:45:33] <sheetjs> client-side generation is easy to roll out without having to disrupt the backend
[05:45:49] <sheetjs> it's entirely possible to deploy it in a sequestered manner
[05:46:01] <wroathe> sheetjs: Well, assume in this scenario you have hundreds of developers, and some of them operate solely on the backend
[05:46:18] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[05:46:24] <wroathe> (big bank)
[05:46:28] <sheetjs> for example, Office 365 apps that export to Excel won't load SheetJS initially.  It does a request for the code then does the export in the frontend
[05:46:54] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[05:47:14] <sheetjs> that's the type of thing you can hammer out in an hour, in a way that won't impact anything else in the app
[05:48:13] <wroathe> sheetjs: Sure, but in this scenario we're not talking about getting something quick out the door. It's the main site for a big bank, and it's been around for years.
[05:48:59] <wroathe> sheetjs: I suspect that what's actually happening in this scenario is that every time they've gotten a request to generate a PDF, they've handed it off to the offshore team, and the offshore team has been reluctant to get API developers involved, and have tried to do as much as they can in the browser before falling back to that
[05:49:04] <wroathe> But that's all speculation
[05:50:03] <sheetjs> that's likely
[05:51:23] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:51:34] <sheetjs> jsPDF is a good option.  Don't underestimate the JS libraries
[05:51:59] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Read error: Connection reset by peer)
[05:52:13] <sheetjs> https://github.com/bpampuch/pdfmake not quite as popular but still cool
[05:52:25] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:18b9:fe4b:98a8:790a)
[05:53:04] <wroathe> sheetjs: I'm not. JS PDF generation is fine. The part I'm estimating is the _client_ side PDF generation.
[05:53:07] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[05:53:22] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[05:53:23] <wroathe> sheetjs: The fact that it's JS, or Java, or C#, or whatever is immaterial, as is the library itself
[05:54:04] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 246 seconds)
[05:54:34] <wroathe> The reasons I can think of, again, are saving on paying for the CPUs to generate those PDFs on the server side (at the expense of needing to implement PDF generation in the front end of any app that needs it), and the possibility that they just don't have the developers to do it on the server side
[05:54:50] <wroathe> Or malfeasance, which I think at this point is the most likely
[05:54:55] <wroathe> (for this scenario)
[05:54:56] *** Joins: jamea (~jamea77@177.239.82.167)
[05:55:09] <sheetjs> what is wrong with jsPDF or pdfmake on the server?
[05:55:19] <wroathe> sheetjs: Nothing
[05:55:25] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[05:55:34] <wroathe> sheetjs: As I just said :P. I'm not concerned with the library. I'm concerned with _client side_ PDF generation.
[05:55:34] <sheetjs> so lets talk about the same library in both cases
[05:55:47] <sheetjs> both will produce the same output given the same input
[05:56:13] <sheetjs> unless you believe the results are different?
[05:56:24] <wroathe> No. I've already stated my concerns twice now :P
[05:56:38] <wroathe> I appreciate you trying to help, but I think you're missing my point a little
[05:57:21] <sheetjs> so lets take a step back
[05:57:23] <wroathe> I think client side is an architecturally inferior approach, that will lead to the need to add PDF generation logic to any application in your stable that needs it
[05:57:30] <wroathe> Rather than just sticking it in a central API server
[05:58:01] *** Joins: summersault (~summersau@179.221.251.16)
[05:58:02] <wroathe> And it won't always be Javascript or client side PDF generation. It'll be whatever language that application team is using
[05:58:08] <wroathe> (Maybe Swift? Who knows!)
[05:58:12] *** Joins: zacts (~zak@user/zacts)
[05:58:15] *** Quits: zacts (~zak@user/zacts) (Client Quit)
[06:00:48] <sheetjs> https://react-pdf.org/
[06:00:55] <sheetjs> i guess you could do this with server-side rendering too
[06:02:51] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[06:04:13] <wroathe> On sec
[06:04:18] <wroathe> One sec*
[06:04:33] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:18b9:fe4b:98a8:790a) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:04:42] <sheetjs> overall, there's something to be said about putting all of the design work in the hands of the front-end devs
[06:06:09] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[06:06:47] <wroathe> So talking this through has made me realize that the audience is different. If you're just a guy on a shoe string budget for hosting your application, and limited familiarity with server side development generation, than client side PDF generation might be right for you, but once your budget for hosting increases slightly and you start eyeing having multiple applications (and maybe a team of 5+
[06:06:53] <wroathe> developers), than that becomes significantly less desirable
[06:07:15] <wroathe> development generally*
[06:07:27] <wroathe> So I understand it's popularity now. It's a foot in the door.
[06:07:45] <sheetjs> microsoft does client-side stuff in office 365
[06:07:50] <wroathe> But I don't see any benefit to it, whatsoever, for a large organization
[06:08:04] <wroathe> Client-side "stuff"?
[06:08:26] <sheetjs> yeah some of the office 365 apps use sheetjs open source in the browser to generate excel exports
[06:08:39] <sheetjs> it's really funny how the project came full circle
[06:09:28] *** Quits: straykitten (~straykitt@subs24-116-206-8-38.three.co.id) (Ping timeout: 246 seconds)
[06:09:44] <wroathe> Hmm. More to think about.
[06:11:33] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[06:11:54] <wroathe> We started out with desktop apps that obviously generated their own binary files, and then moved everything into the browser. We then got used to sticking everything in the API layer, because the idea was to have thin clients and a fat server capable of performing any operation a user might want to perform among all of your applications. Now it seems we've come full circle, and we're treating the
[06:12:00] <wroathe> browser like it's an SDK for building those original desktop apps
[06:12:01] <wroathe> And yet we expect cloud persistence for our data
[06:12:34] <sheetjs> the files used to be the source of truth
[06:12:35] <sheetjs> now it
[06:12:44] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Read error: Connection reset by peer)
[06:12:46] <sheetjs> is some cloud service somewhere
[06:13:02] <sheetjs> the files are now merely snapshots to interact with "legacy" software
[06:13:08] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[06:14:22] <wroathe> Man. It's depressing how rapidly architectural trends go in and out of vogue.
[06:14:52] <wroathe> So it sounds like client side binary file generation really is the path forward.
[06:14:58] <wroathe> To my surprise.
[06:15:23] <sheetjs> it's a pendulum
[06:15:45] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[06:15:54] <sheetjs> self-hosted is the next step, and whether that means client-side or server-side remains to be seen
[06:16:25] *** Joins: xsperry (~as@cpe-188-129-124-33.dynamic.amis.hr)
[06:16:34] *** Quits: xsperry (~as@cpe-188-129-124-33.dynamic.amis.hr) (Changing host)
[06:16:34] *** Joins: xsperry (~as@user/xsperry)
[06:16:36] <wroathe> How does one have both self-hosted and server-side?
[06:16:53] <wroathe> You're talking like a situation where everyone is remote desktop'ed into a server in the cloud?
[06:17:02] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[06:17:16] <wroathe> And end user workstations no longer have the resources necessary to perform the operations that are now offloaded to the server?
[06:17:25] <sheetjs> self-hosted meaning on infrastructure you control, rather than relying on google or microsoft servers
[06:17:28] *** Joins: Celeo (~Celeo@user/celeo)
[06:17:38] <wroathe> Oh
[06:17:42] <wroathe> So back to 2010, then.
[06:18:00] <wroathe> Well, 2005 probably
[06:18:04] <wroathe> My memory is foggy
[06:18:16] <sheetjs> or google / microsoft swallows the entire software industry
[06:19:33] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:19:45] <wroathe> My friend isn't really architecturally sophisticated enough to have these kinds of debates. He's just depressed that each new PDF template seems to require a few thousand lines of Javascript with the way they've got it set up
[06:19:52] <wroathe> And he's looking down the barrel of having to add yet another one
[06:20:19] *** Quits: holmes (~holmes@cpe-75-82-82-73.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:20:45] <sheetjs> PDF generation is within his abilities
[06:21:17] <sheetjs> (his/her/their)
[06:21:38] <wroathe> Oh, yeah, he'll be fine.
[06:21:47] <wroathe> The question was just about whether it was the right approach or not.
[06:22:19] *** Joins: straykitten (~straykitt@subs25-116-206-9-35.three.co.id)
[06:22:31] <sheetjs> PDF generation involves an element of design work
[06:22:52] <sheetjs> if the backend developers are expected to maintain that design, then it makes sense to do the work on the server side
[06:23:12] <sheetjs> but if the front-end devs are maintaining the PDF design, it's not so clear
[06:25:56] *** Quits: gehn (~gehn@user/gehn) (Remote host closed the connection)
[06:26:03] <wroathe> sheetjs: Well, in large organizations developers don't have a say over the design. They follow a template that designers give them, and then it goes through a QA and UX review process where they determine if you hit hte mark or not.
[06:26:16] <wroathe> sheetjs: So it won't matter who is doing the design work, because it's all overseen by the designers on the project
[06:26:32] <sheetjs> who makes the decision then?
[06:26:45] <wroathe> sheetjs: The product owner, and the UX team
[06:27:00] <wroathe> sheetjs: UX/Vis D./whatever they call themselves.
[06:27:54] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 264 seconds)
[06:29:00] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[06:30:22] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 250 seconds)
[06:31:08] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[06:32:05] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[06:33:06] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[06:40:20] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[06:42:59] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[06:43:03] *** Joins: holmes (~holmes@cpe-75-82-82-73.socal.res.rr.com)
[06:47:38] *** Quits: holmes (~holmes@cpe-75-82-82-73.socal.res.rr.com) (Ping timeout: 258 seconds)
[06:49:07] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[06:49:23] *** Joins: skillbot (~skillbot@user/skillbot)
[06:49:23] *** ChanServ sets mode: +v skillbot
[06:51:04] *** Quits: realies (~realies@user/realies) (Ping timeout: 265 seconds)
[06:52:49] *** Joins: realies (~realies@user/realies)
[06:56:25] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[06:59:36] *** Joins: summersault (~summersau@179.221.251.16)
[06:59:54] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[06:59:55] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[07:03:09] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 265 seconds)
[07:03:19] *** Joins: gehn (~gehn@user/gehn)
[07:03:44] *** Quits: gehn (~gehn@user/gehn) (Client Quit)
[07:11:29] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[07:13:59] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[07:14:04] *** Quits: w0x12ef_ (~w0x12ef@117.61.31.20) (Read error: Connection reset by peer)
[07:14:20] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[07:14:28] *** Joins: w0x12ef_ (~w0x12ef@117.61.31.20)
[07:14:43] *** Joins: Rockwood (~Rocky@user/rocky)
[07:15:11] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[07:22:07] *** Joins: happymeal` (~happymeal@154.21.21.192)
[07:22:17] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[07:22:29] *** Joins: summersault (~summersau@179.221.251.16)
[07:23:17] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Read error: Connection reset by peer)
[07:23:40] *** Quits: FightingFalcon (~sdasavcsg@user/fightingfalcon) (Ping timeout: 258 seconds)
[07:24:19] *** Joins: sillyslux__ (~silly@user/silly)
[07:25:43] *** Joins: silly (~silly@user/silly)
[07:26:01] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[07:27:09] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[07:28:34] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 246 seconds)
[07:33:33] *** Quits: geoffo (~geoffo@user/geoffo) (Quit: Textual IRC Client: www.textualapp.com)
[07:33:55] *** Joins: geoffo (~geoffo@user/geoffo)
[07:34:53] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[07:39:58] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[07:44:02] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[07:45:22] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:50:55] *** Quits: happymeal` (~happymeal@154.21.21.192) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[08:00:42] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[08:05:16] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:05:19] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[08:05:48] *** Joins: jazzy2 (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321)
[08:06:08] *** Quits: jazzy (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321) (Ping timeout: 250 seconds)
[08:09:10] *** Quits: straykitten (~straykitt@subs25-116-206-9-35.three.co.id) (Ping timeout: 246 seconds)
[08:11:45] <bambanxx> a good tutorial for promises folks?
[08:14:29] <wroathe> bambanxx: https://eloquentjavascript.net/11_async.html
[08:15:06] <bambanxx> wroathe thanks you very much
[08:17:41] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[08:17:59] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[08:19:12] *** Quits: audiofreeze (~audio@2603-8081-1800-0062-7da2-cc59-485c-62e5.res6.spectrum.com) (Remote host closed the connection)
[08:19:31] *** Joins: audiofreeze (~audio@2603-8081-1800-0062-edd3-118e-4a86-1943.res6.spectrum.com)
[08:22:28] *** Joins: straykitten (~straykitt@subs24-116-206-8-39.three.co.id)
[08:24:37] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Read error: Connection reset by peer)
[08:28:34] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[08:30:33] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:35:10] *** Joins: sagax (~sagax@213.138.71.146)
[08:38:07] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 268 seconds)
[08:41:19] *** Joins: polyrob (~rob@user/polyrob)
[08:43:34] *** Joins: dimi1947 (~dimi1947@2a02:1388:88:b338:694f:5b0f:89b4:f70c)
[08:45:34] *** Quits: debsan (~debsan@2800:810:471:2ee::1001) (Ping timeout: 246 seconds)
[08:46:45] *** Joins: summersault (~summersau@179.221.251.16)
[08:49:20] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:51:12] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 250 seconds)
[08:51:55] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[09:14:25] *** jazzy2 is now known as jazzy
[09:16:43] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[09:16:43] *** Quits: name__ (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[09:20:20] *** Joins: summersault (~summersau@179.221.251.16)
[09:25:15] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[09:27:27] *** Quits: silly (~silly@user/silly) (Remote host closed the connection)
[09:34:30] *** Quits: cisme_ (~cisme_@user/cisme/x-1186982) (Ping timeout: 264 seconds)
[09:37:53] *** Joins: pycurious (~Adium@user/pycurious)
[09:38:03] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:123d:8e04:40a0:76d1)
[09:40:05] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:123d:8e04:40a0:76d1) (Changing host)
[09:40:05] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[09:43:56] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[09:47:32] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:429:e85:3a3a:a405) (Ping timeout: 250 seconds)
[09:48:16] *** Quits: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com) (Quit: Leaving)
[09:54:04] *** Joins: summersault (~summersau@179.221.251.16)
[09:55:39] *** Joins: dunkeln_ (~dunkeln@188.71.193.140)
[09:56:00] *** Joins: stenno (~stenno@user/stenno)
[09:56:52] *** Joins: makara (~sol@196.61.111.63)
[09:58:50] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:09:13] *** Quits: straykitten (~straykitt@subs24-116-206-8-39.three.co.id) (Ping timeout: 246 seconds)
[10:09:14] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:10:15] *** Quits: ALTdev (~ALTdev@user/altdev) (Quit: WeeChat 2.8)
[10:11:10] *** Quits: geoffo (~geoffo@user/geoffo) (Ping timeout: 265 seconds)
[10:13:26] *** Joins: geoffo (~geoffo@user/geoffo)
[10:17:19] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[10:19:46] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[10:20:37] <w0x12ef_> why js can have the variable leverage up
[10:21:54] <ljharb> w0x12ef_: what does that even mean
[10:22:23] *** Joins: straykitten (~straykitt@subs24-116-206-8-31.three.co.id)
[10:23:04] <w0x12ef_> variable can be used before declare
[10:24:03] <deltab> yse 'let' instead of 'var' to prevent that
[10:26:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[10:27:32] <ljharb> w0x12ef_: that's called hoisting.
[10:27:34] <ljharb> !hoisting @ w0x12ef_
[10:27:34] <jellobot> w0x12ef_, http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet https://snek.dev/blag/2019-07_js_hoisting
[10:27:43] <ljharb> w0x12ef_: code relies on hoisting is not good code.
[10:27:50] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[10:27:52] <ljharb> deltab: let and const hoist too.
[10:28:21] <w0x12ef_> ljharb, so why not deprecate that
[10:29:25] <deltab> n> x = 1; let x; x
[10:29:26] <jellobot> (fail) ReferenceError: Cannot access 'x' before initialization
[10:30:03] *** Joins: summersault (~summersau@179.221.251.16)
[10:30:34] <deltab> n> console.log(x); let x;
[10:30:35] <jellobot> (fail) ReferenceError: Cannot access 'x' before initialization
[10:30:54] <ljharb> w0x12ef_: nothing in javascript can ever be removed.
[10:31:01] <ljharb> deltab: that error proves it's hoisted.
[10:31:11] <ljharb> deltab: it's just that the initialization isn't hoisted.
[10:31:17] <w0x12ef_> ljharb, why
[10:31:23] <ljharb> w0x12ef_: because that would break websites.
[10:31:28] <ljharb> w0x12ef_: no websites can ever be broken.
[10:31:54] <ljharb> var hoists the declaration and initialization (to undefined) to the top of the function, and leaves the assignment where it is. let and const hoist the declaration to the top of the block, and leave the initialization and assignment where it is.
[10:32:16] <w0x12ef_> backwards compatible ?
[10:32:42] <deltab> yes
[10:33:16] <ljharb> w0x12ef_: yes, forever
[10:33:39] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[10:34:25] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 246 seconds)
[10:38:46] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:931c:87ae:1f48:5683)
[10:38:53] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[10:43:54] <Maxdamantus> Presumably there could be a future change that makes `let` not hoist, since you're not meant to rely on errors like that.
[10:44:28] <Maxdamantus> n> let x = 4; { let x = x + 1; }
[10:44:29] <jellobot> (fail) ReferenceError: Cannot access 'x' before initialization
[10:44:41] <Maxdamantus> Removing "hoisting" would just mean making that not be an error.
[10:46:39] *** w0x12ef_ is now known as w0x12ef
[10:47:28] <ljharb> why would there ever be
[10:47:33] <ljharb> that's an intentional and core part of the design
[10:47:44] *** Quits: dunkeln_ (~dunkeln@188.71.193.140) (Ping timeout: 252 seconds)
[10:48:20] *** Quits: audiofreeze (~audio@2603-8081-1800-0062-edd3-118e-4a86-1943.res6.spectrum.com) (Quit: Leaving)
[10:48:47] <Maxdamantus> It seems to me more like the conservative option from a somewhat arbitrary decision.
[10:49:08] <Maxdamantus> conservative in that, as explained above, the decision can be changed in the future.
[10:49:10] <ljharb> and yet, it was an intentional part of the design. you're welcome to go read the notes.
[10:49:25] <ljharb> i can't think of a single delegate that would agree to change it, because that would make the language worse.
[10:49:29] <Maxdamantus> if they had made it non-hoisting, then my code above would be valid, and they wouldn't be able to reverse that decision.
[10:49:29] *** Joins: summersault (~summersau@179.221.251.16)
[10:49:33] <ljharb> sure
[10:49:39] <ljharb> which is why they made it hoisting, because code like that shouldn't be valid.
[10:49:48] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:50:26] <Maxdamantus> I don't see what's so wrong with that code. It's just another example of what happens when you allow shadowing .. which is presumably intentionally allowed.
[10:50:34] <ljharb> they designed the temporal dead zone very carefully to disallow that kind of confusing code, while allowing stuff like `function f() { return x; } const x = 3; f()`
[10:50:41] <ljharb> the shadowing happens at `let x`
[10:50:46] <ljharb> because code is read left to right
[10:50:54] <ljharb> nothing to the right of `let x` should be able to see an outer x.
[10:51:39] <Maxdamantus> I don't think "left" and "right" are the way to see that, but maybe I should have used a different example.
[10:52:00] <ljharb> it surely is. it's also the way the spec requires code to be parsed
[10:52:03] <Maxdamantus> n> let x = 4; { let tmp = x + 1; let x = tmp; }
[10:52:04] <jellobot> (fail) ReferenceError: Cannot access 'x' before initialization
[10:52:26] <ljharb> sure. that's confusing tho. because you can't say "let has block scope" if it doesn't take effect during the whole block
[10:52:46] <Maxdamantus> I think it should be seen temporally, and `x + 1` in my first example happens before `x` is bound.
[10:52:46] <ljharb> that would make let and const only have "rest of the block" scope. which is weird and surprising to many people.
[10:53:00] <ljharb> noted. but zero of the people who designed the feature think that.
[10:53:17] *** Joins: raindrop (~raindrop@46.140.25.34)
[10:53:37] <ljharb> i suppose it's possible someone wanted to open that up later, but i've been on the committee for 7 years with all those people and never once heard anything about that.
[10:53:51] <Maxdamantus> Well, if the language designers wanted temporal things to go left-to-right there, they should have used a different syntax for variable declaration and assignment.
[10:53:59] <Maxdamantus> eg, `let 4 -> x;`
[10:54:01] *** Quits: ryzenda (~ryzenda@84.sub-174-242-36.myvzw.com) (Ping timeout: 246 seconds)
[10:54:23] <ljharb> that's not how languages work
[10:54:37] <ljharb> variable assignment happens lexically.
[10:54:48] <ljharb> and everything goes left to right
[10:55:12] <ljharb> that's a big part of why relying on hoisting is bad - because it means you're relying on a two-pass approach instead of a simple one-pass left-right top-down approach.
[10:55:16] *** Quits: jamea (~jamea77@177.239.82.167) (Ping timeout: 258 seconds)
[10:55:26] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 252 seconds)
[10:55:57] *** Joins: ryzenda (~ryzenda@84.sub-174-242-36.myvzw.com)
[10:56:50] <Maxdamantus> I think if you want to take the left-to-right thing to the extreme, you will have the variable last in assignment/declaration, since the modification of the variable happens after the evaluation of the value it's being assigned.
[10:57:00] <Maxdamantus> and certainly there are languages that reflect that.
[10:57:32] <Maxdamantus> it's just against existing conventions.
[10:58:29] <ljharb> which languages reflect that?
[10:58:53] <ljharb> (but also "against existing conventions" is a strong reason to not do a thing, with no other context)
[10:59:19] <Maxdamantus> Looking at Wikipedia, COBOL, TI-BASIC, Casio BASIC, some others that I haven't heard of.
[10:59:28] <Maxdamantus> https://en.wikipedia.org/wiki/Assignment_(computer_science)#Notation
[10:59:58] <Maxdamantus> It's just in older languages where the "variable first" convention hadn't been so strongly established as it is today.
[11:00:38] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 258 seconds)
[11:00:47] <ljharb> ok
[11:00:52] <ljharb> so why would we want to go back to that
[11:01:05] <ljharb> bucking conventions like that would make the language worse
[11:01:13] <ljharb> unless it was such a massive improvement that it was worth it. and it's really not.
[11:02:03] <Maxdamantus> I'm not saying we would. My point regarding the left-to-right thing is simply that if `let tmp = x + 1; let x = tmp;` is allowed, then `let x = x + 1;` should also be allowed (as meaning the same thing, just without that extra `tmp` variable).
[11:02:29] <Maxdamantus> because variable assignment/declaration doesn't follow the left-to-right paradigm like most things.
[11:02:40] <ljharb> i don't follow your logic
[11:02:54] <ljharb> i understand that the first pattern could be allowed, and it'd be arguably not confusing
[11:02:56] *** Joins: stenno (~stenno@user/stenno)
[11:03:11] <ljharb> but variable assignment definitely does, always including with the first pattern, follow the left-to-right paradigm
[11:03:36] <Maxdamantus> in the assignment expression `x = y + 1`, the assignment of `x` (something denoted on the left) happens after the evaluation of `y + 1` (something denoted on the right)
[11:04:45] <ljharb> i mean yes, that is what actually happens
[11:04:53] <ljharb> but that's not how i think anybody thinks about it
[11:04:55] <Maxdamantus> It only follows the left-to-right paradigm in expression evaluation of the operands.
[11:05:18] <Maxdamantus> the actual operation which modifies the thing on the left happens after the evaluation of the thing on the left.
[11:05:51] <Maxdamantus> n> const o = { set x(v){ console.log("left"); } }; o.x = console.log("right");
[11:05:52] <jellobot> (okay) right left
[11:05:54] <ljharb> yes, that is true
[11:05:59] <ljharb> but that's not the mental model
[11:06:20] <ljharb> and `let x = x + 1` MUST always be equivalent to `let x; x = x + 1`
[11:06:46] <Maxdamantus> Okay, so your "left-to-right" model shouldn't apply to variable assignments and declarations.
[11:06:52] <ljharb> for const, you get a syntax error in the second case, but with your semantics, for let you'd silently get a different value
[11:07:05] <ljharb> i mean regardless of how you describe it, `let x = x + 1` can't ever refer to an outer x
[11:07:11] <ljharb> that's absurd for many reasons.
[11:09:33] <Maxdamantus> n> let x; x = x + 1; console.log({ x });
[11:09:33] <jellobot> (okay) { x: NaN }
[11:10:06] <Maxdamantus> To me that just means `let x = undefined; x = x + 1;`
[11:10:19] <Maxdamantus> I don't see why `let x = x + 1;` has to mean the same thing.
[11:10:48] <ljharb> it has to result in x being the same thing
[11:11:07] <ljharb> because of tennent's correspondence principle, i think
[11:12:53] <Maxdamantus> fwiw, another thing that typically breaks the left-to-right paradigm is function application. in some ways it might be more natural for the function to come after the applicands, since the function is invoked after the evaluation of the applicands.
[11:13:16] <Maxdamantus> that's why the reverse application operator (|>) sometimes seems natural.
[11:13:17] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[11:13:54] *** Joins: doc (~doc@user/doc)
[11:14:01] <Maxdamantus> n> let x = 4; (x => { console.log({ x }); })(x + 1);
[11:14:02] <jellobot> (okay) { x: 5 }
[11:14:16] <GreenJello> ljharb, it works fine if you don't have hoisting, and define the variable after executing the expression
[11:14:26] <Maxdamantus> n> let x = 4; x + 1 |> (x => { console.log({ x }); });
[11:14:27] <jellobot> (fail) SyntaxError: Unexpected token '>'
[11:15:38] <ljharb> GreenJello: that it works isn't in question. but it'd be confusing and would violate core language design principles
[11:15:54] <GreenJello> it works quite well in rust
[11:16:21] <ljharb> and the people that invented rust designed let and const in JS and have had no complaints about them since, except that one or two of them regret creating const at all
[11:16:34] <ljharb> so 1) it was this way on purpose, and 2) it will never, ever change
[11:16:42] <ljharb> so debating about how it could work is a bit silly :-)
[11:17:24] <Maxdamantus> I wonder if anyone ever said the same thing about `var`.
[11:17:36] <ljharb> var has never changed nor will it ever
[11:17:41] <Maxdamantus> "it was this way on purpose"
[11:17:44] <ljharb> it was
[11:17:48] <ljharb> and won't ever change.
[11:17:53] <ljharb> they added two new things
[11:17:55] *** Joins: dunkeln_ (~dunkeln@188.71.193.140)
[11:18:06] <GreenJello> arguing that JS has the only logical behavior is different from design practicalities
[11:18:14] <ljharb> GreenJello: i don't think i argued that
[11:18:21] <ljharb> i argued it was the only logical behavior *for js*
[11:18:52] <GreenJello> not how it came across to me, but okay
[11:19:47] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[11:19:53] <ljharb> i don't know anything about how rust works, but i'd assume that TCP holds for whatever it has
[11:20:02] <ljharb> even if that implies different semantics than JS has to have
[11:21:39] <GreenJello> really the distinction is just whether you have to use a different variable name from one you used earlier
[11:22:15] <GreenJello> there isn't any logical difference
[11:22:56] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1550:a5c7:bc8d:cb16)
[11:22:56] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[11:25:15] <GreenJello> let x = x + 1; -> let otherX = x + 1; and then you refer to otherX for the rest of that scope
[11:26:54] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[11:26:54] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[11:26:54] *** Joins: Heraes (~Heraes@user/romarain)
[11:27:06] <ljharb> right, that's fine, and not confusing
[11:27:25] <ljharb> there's virtually no value to be had by allowing `let x = x + 1`, and lots of potential confusion
[11:27:40] <ljharb> and rust is strongly typed, JS is not, so perhaps that's a different
[11:27:42] <ljharb> *difference
[11:28:29] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:29:19] <GreenJello> yeah, in utility (a variable transitioning in type)
[11:29:37] <GreenJello> I doubt it'd be a source of bugs if JS didn't hoist let/const bindings, though
[11:29:48] <ljharb> i suspect it would be
[11:30:30] *** Joins: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be)
[11:30:51] <GreenJello> this is already a thing, sort of, with let bindings in for loops
[11:31:07] <GreenJello> with an implicit let i = i; in this imaginary world inside the loop body
[11:31:30] <GreenJello> (not exactly but close)
[11:31:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[11:32:35] <GreenJello> I'm rambling, better get to sleep
[11:33:55] *** Quits: ryzenda (~ryzenda@84.sub-174-242-36.myvzw.com) (Ping timeout: 246 seconds)
[11:35:14] *** Joins: tex (~super@user/dix)
[11:35:58] *** Joins: ryzenda (~ryzenda@21.sub-174-203-99.myvzw.com)
[11:37:20] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[11:39:15] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:40:13] <Maxdamantus> Okay, thinking about it again, it can't change, because of closures.
[11:40:32] <Maxdamantus> n> const f = () => x; let x = 4; f();
[11:40:33] <jellobot> (okay) 4
[11:41:14] <Maxdamantus> That is invalid in Rust.
[11:41:31] *** Quits: makara (~sol@196.61.111.63) (Quit: WeeChat 2.8)
[11:47:01] *** Joins: Akimb (~Akimb@86.100.13.100)
[11:52:14] *** Joins: summersault (~summersau@179.221.251.16)
[11:52:26] <Maxdamantus> also, TCP doesn't seem to hold in JS anyway.
[11:52:48] <Maxdamantus> `(await x)` is not the same as `(() => await x)()`
[11:54:09] <Maxdamantus> there are some other things that I think would be reasonable but also break TCP.
[11:54:37] <Maxdamantus> eg, return/break/continue expressions.
[11:57:05] <Maxdamantus> I'm not sure I'd heard of TCP before today, but it doesn't seem very significant to me.
[11:57:22] *** Joins: pycurious (~Adium@user/pycurious)
[11:57:24] <Maxdamantus> why should such a principle exist for expressions but not for blocks?
[11:58:46] <Maxdamantus> You would only really expect it to mostly hold in languages that are either impure or block-based (as opposed to expression-based).
[11:59:04] <Maxdamantus> er, pure or block-based*
[12:01:33] <Maxdamantus> ("block-based" here basically means that you expect your control constructions to be statements (or of the same syntactic kind as blocks) as opposed to expressions)
[12:01:34] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 246 seconds)
[12:02:57] <Maxdamantus> eg, in JS, `if`, `while`, `return`, `break` are all statement constructions, but in other languages such as Kotlin and Rust they are expression constructions.
[12:03:51] <Maxdamantus> x = foo(if(y) z else return w);
[12:06:00] <Maxdamantus> Actually, this blog post seems to suggest that TCP proponents do expect blocks to conform as well: http://gafter.blogspot.com/2006/08/tennents-correspondence-principle-and.html
[12:06:11] <Maxdamantus> so JS flagrantly violates that.
[12:09:08] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[12:09:16] *** Quits: straykitten (~straykitt@subs24-116-206-8-31.three.co.id) (Ping timeout: 246 seconds)
[12:11:01] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1550:a5c7:bc8d:cb16) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:17:09] *** Joins: jonifen (~jonifen@user/jonifen)
[12:20:10] *** Joins: mexen (uid495612@user/mexen)
[12:20:35] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:38e2:f649:f5e8:46cb)
[12:22:28] *** Joins: straykitten (~straykitt@subs25-116-206-9-63.three.co.id)
[12:22:40] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 250 seconds)
[12:23:27] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[12:25:22] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 246 seconds)
[12:32:29] *** Joins: brian_da_mage (~Neuromanc@user/briandamag)
[12:36:00] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[12:36:58] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:41:35] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:41:35] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[12:41:35] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:45:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:46:23] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[12:50:34] *** Quits: dunkeln_ (~dunkeln@188.71.193.140) (Ping timeout: 252 seconds)
[12:52:35] *** Joins: alystair (~alystair@user/alystair)
[12:54:58] *** Joins: summersault (~summersau@179.221.251.16)
[12:59:28] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[13:03:20] *** Joins: fef (~thedawn@user/thedawn)
[13:05:11] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[13:06:08] <no_gravity> Would it be possible to limit the CPU resources an iframe is using? There is a widget I like a lot. After the initial drawing of data, it does *nothing* but uses on CPU core to 100%. I wonder if there is a way to stop it.
[13:07:50] <Cork> no, a website can't control the browsers cpu scheduler
[13:08:16] <no_gravity> Cork: Well, not directly. But a website has some control over the iframes it embeds.
[13:08:25] <Cork> sounds like you should file a bug report for the site you put in the iframe though
[13:08:38] <Cork> no_gravity: only trust
[13:08:48] <Cork> you can disable js for it you want
[13:09:08] <no_gravity> Cork: Haha, you think developers these days have a clue how much CPU their layers up on layers up on layers of frameworks and libraries use?
[13:09:22] <no_gravity> Yeah, but it would not work without JS.
[13:09:47] <no_gravity> Many websites these days use the CPU while doing nothing.
[13:09:50] <Cork> no_gravity: if it goies into an infinite loop when it gets an empty list it is a bug not a "this consumes more resorces then i want to allow it"
[13:10:06] *** Joins: federico_it (~textual@151.51.89.77)
[13:10:45] <no_gravity> Cork: Its usually some crap deep down in their stack that runs loops for whatever. The application devs will never take the time to figure out what the cause is. Thats just not how application develoeprs work these days.
[13:11:13] <Cork> ya, but you can't solve the problem by limiting the amount of scheduler time it gets
[13:13:49] <no_gravity> The sandbox attribute takes some arguments. Maybe one of them has a positive impact.
[13:14:03] <Cork> not likely
[13:14:20] <Cork> as the code goes into a loop. it will consume as much cpu as possible
[13:15:54] <no_gravity> It is not in a blocking loop. That is for sure.
[13:16:34] <no_gravity> It uses 100% of a CPU. But not via a blocking loop. That would behave differently.
[13:17:22] <Cork> ya it leavs the event loop back to the broweser again, else it would get killed
[13:17:31] <Cork> doesn't mean it isn't in an infinite loop though
[13:18:43] <no_gravity> I witness this behaviour often these days. I never in depth analyzed what causes it. My guess would be some timer running code that does expensive dom queries to see if a certain field is in a certain state or whatever.
[13:19:06] <no_gravity> Maybe diffing the whole dom against some data structure :)
[13:19:22] <no_gravity> I don't know how crazy library devs are these days. But definitely very crazy.
[13:21:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[13:22:52] <no_gravity> Some other optimizations that come to mind: 1) Set the lazy loading flag on the iframe. 2) Set the iframe to "display: none" or even remove it from the dom when it is not visible.
[13:23:23] <no_gravity> It might even be possible to render it to a canvas and then display the canvas instead of the iframe.
[13:25:02] *** Quits: jundran (~jundran@2607:f7a0:d:4::a02e) (Quit: Client closed)
[13:25:23] *** Joins: FightingFalcon (~sdasavcsg@user/fightingfalcon)
[13:26:19] *** Joins: pulse (~pulse@user/pulse)
[13:28:37] *** Joins: summersault (~summersau@179.221.251.16)
[13:29:04] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 246 seconds)
[13:29:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:32:55] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 246 seconds)
[13:35:05] *** Joins: zacts (~zak@user/zacts)
[13:37:38] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[13:38:15] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[13:39:26] *** Joins: entuland (~entuland@user/entuland)
[13:42:51] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:45:05] *** Joins: summersault (~summersau@179.221.251.16)
[13:49:58] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:55:19] *** Quits: hughrawlinson (uid11243@id-11243.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[14:04:46] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
[14:05:13] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[14:06:52] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 246 seconds)
[14:09:37] *** Quits: straykitten (~straykitt@subs25-116-206-9-63.three.co.id) (Ping timeout: 258 seconds)
[14:11:55] *** Joins: dunkeln (~dunkeln@188.71.193.140)
[14:18:25] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 246 seconds)
[14:21:37] *** __jmcantrell__ is now known as jmcantrell
[14:22:15] *** Joins: straykitten (~straykitt@subs25-116-206-9-28.three.co.id)
[14:22:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[14:24:26] *** Quits: dunkeln (~dunkeln@188.71.193.140) (Ping timeout: 265 seconds)
[14:24:56] *** Joins: dunkeln (~dunkeln@188.71.193.140)
[14:38:47] <ashnur> Maxdamantus, have you seen this? http://techscursion.com/2012/02/tennent-correspondence-principle.html
[14:39:07] *** Joins: hughrawlinson (uid11243@id-11243.charlton.irccloud.com)
[14:39:28] <ashnur> although i probably would agree that it's a bit detached from important things, tries to generalize something from inadequate samples
[14:40:23] *** Quits: dunkeln (~dunkeln@188.71.193.140) (Ping timeout: 265 seconds)
[14:43:07] *** Joins: Naan (~naan@user/naan)
[14:43:33] <Maxdamantus> ashnur: I came across it after looking at a couple of other search results.
[14:44:15] <Maxdamantus> but yes, it seems that TCP isn't actually about an equivalence between expressions and IIFEs as other things seem to suggest.
[14:44:24] <ashnur> yeah
[14:45:53] <Maxdamantus> (and as I kind of expressed earlier, I don't think the latter is a very useful thing to try to achieve, and existing languages aren't designed according to it)
[14:46:59] *** Joins: summersault (~summersau@179.221.251.16)
[14:56:12] *** Joins: Ducki (~ducki@user/ducki)
[14:58:52] *** Joins: Akimb (~Akimb@86.100.13.100)
[14:59:32] <Maxdamantus> so actually, after reading that article, it seems that the JS behaviour is actually a counterexample to TCP, since TCP is about how you can rearrange something like `let x = y + 1; return x + 1;` to `return (x => { return x + 1; })(y + 1);`
[14:59:43] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[14:59:54] <Maxdamantus> but hoisting breaks that.
[15:01:05] <Maxdamantus> `let x = () => x; return x;` to `return (x => { return x; })(() => x);`
[15:01:20] <Maxdamantus> those are different in JS because of hoisting.
[15:01:39] <Maxdamantus> if it weren't for hoisting, they would be the same.
[15:03:50] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[15:05:07] <Maxdamantus> (tbh, I don't think the principle really cares about this hoisting thing since it's somewhat antithetical to actual argument passing semantics or assignment)
[15:06:30] *** Quits: llorllale1 (~llorllale@2607:9880:3a18:69:cd00:7e66:2790:8be6) (Quit: WeeChat 3.2)
[15:06:50] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[15:08:13] *** Joins: Crassus (~Crassus@user/crassus)
[15:09:02] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:597:b5cf:3629:f483)
[15:11:25] <Maxdamantus> thinking back, I have actually thought about what my preferred behaviour for this sort of thing is, and I think my preference is simply to distinguish between `function` declarations (which should be hoisted) and `let`/`const` declarations (which should not be hoisted).
[15:12:28] <Maxdamantus> So you'd be able to write `function foo(){ return bar(); } function bar(){ return foo(); }` but not `let foo = () => bar(); let bar = () => foo();`
[15:15:43] <Maxdamantus> I'm also aware of a system of "placeholders" where checking safe declarations and uses of functions is a special case of those rules.
[15:16:23] <Maxdamantus> Meh, too late to be thinking about this atm.
[15:20:32] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[15:29:33] *** Joins: dunkeln (~dunkeln@188.71.193.140)
[15:31:34] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Quit: rewrit3)
[15:36:42] *** Joins: rcoote (~rcoote@ip-109-40-130-135.web.vodafone.de)
[15:46:23] *** Joins: average (uid473595@user/average)
[15:46:31] <average> hi, is there a way to write multiline strings in js ?
[15:46:44] <average> var a1 =
[15:46:45] <average> "blah"+
[15:46:47] <average> "more blah"+
[15:46:49] <average> "final";
[15:47:07] <average> ^^ this is too complicated and requires escaping characters and whatnot
[15:48:46] *** Quits: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at) (Ping timeout: 252 seconds)
[15:49:16] <Maxdamantus> average: I would do something like `const a1 = ["blah", "more blah", "final"].map(s => s + "\n").join("");`
[15:49:50] *** Joins: summersault (~summersau@179.221.251.16)
[15:50:41] <Maxdamantus> actually, you can include line breaks directly in template literals: const a1 = `blah    more blah    final    `;`
[15:55:17] *** Joins: w0x12ef_ (~w0x12ef@117.61.21.204)
[15:57:28] *** Quits: w0x12ef (~w0x12ef@117.61.31.20) (Ping timeout: 246 seconds)
[16:04:48] *** Quits: rcoote (~rcoote@ip-109-40-130-135.web.vodafone.de) (Read error: Connection reset by peer)
[16:08:54] *** Quits: dunkeln (~dunkeln@188.71.193.140) (Ping timeout: 268 seconds)
[16:09:06] *** Quits: straykitten (~straykitt@subs25-116-206-9-28.three.co.id) (Read error: Connection reset by peer)
[16:15:10] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:18:57] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[16:19:24] *** Joins: fef (~thedawn@user/thedawn)
[16:21:48] *** Joins: straykitten (~straykitt@subs24-116-206-8-59.three.co.id)
[16:23:16] <ashnur> Maxdamantus, so yeah, all that why I have shown you the article :D
[16:24:10] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[16:24:40] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:25:19] *** Joins: dunkeln (~dunkeln@188.71.193.140)
[16:31:21] *** Joins: chronon (~chronon@user/chronon)
[16:34:46] *** Joins: raindrop22 (~raindrop@46.140.123.194)
[16:36:58] *** Joins: summersault (~summersau@179.221.251.16)
[16:37:12] *** Quits: raindrop (~raindrop@46.140.25.34) (Ping timeout: 258 seconds)
[16:37:16] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[16:38:01] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[16:38:41] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[16:40:02] *** Joins: w0x12ef__ (~w0x12ef@117.61.21.204)
[16:41:08] *** Quits: w0x12ef_ (~w0x12ef@117.61.21.204) (Read error: Connection reset by peer)
[16:41:25] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[16:43:09] *** w0x12ef__ is now known as w0x12ef
[16:43:13] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[16:43:22] *** Joins: mickey9 (~user@user/mickey)
[16:44:27] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[16:44:27] *** mickey9 is now known as mickey
[16:44:27] *** Quits: w0x12ef (~w0x12ef@117.61.21.204) (Read error: Connection reset by peer)
[16:44:44] *** Joins: w0x12ef (~w0x12ef@117.61.21.204)
[16:45:21] <w0x12ef> is ajax a javascript lib?
[16:46:27] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[16:48:02] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[16:51:14] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[16:54:02] *** Quits: dunkeln (~dunkeln@188.71.193.140) (Ping timeout: 252 seconds)
[16:54:20] *** Joins: summersault (~summersau@179.221.251.16)
[16:55:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:58:30] *** Joins: debsan (~debsan@2800:810:471:2ee::1001)
[17:01:26] <deniska> w0x12ef: it's an old term meaning "getting data from a server without reloading the whole page"
[17:02:10] *** Quits: jazzy (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321) (Ping timeout: 250 seconds)
[17:02:32] <w0x12ef> what is the x meaning
[17:07:12] <systemfault> Asynchronous Javascript And XML
[17:08:19] *** Joins: hmw[at] (~hmw@2a02:61:a2::b14)
[17:08:25] <systemfault> As you can imagine, the term didn't age that well.
[17:08:48] <systemfault> But hey, we can't stop creating new useless buzzwords in IT
[17:09:01] <hmw[at]> nah. We need MOAR CYBER.
[17:09:34] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:a874:b712:9670:8351)
[17:09:55] <hmw[at]> https://www.northropgrumman.com/cyber/
[17:10:53] <systemfault> Is that the plot for Minority Report II ?
[17:13:52] *** Joins: dunkeln_ (~dunkeln@188.71.193.140)
[17:14:20] *** Joins: jazzy (~jaziz@2607:fb90:a68e:e270:5855:cc91:a6b5:d5ec)
[17:16:32] <ashnur> i remember before ajax, with had https://en.wikipedia.org/wiki/Dynamic_HTML
[17:18:55] <deniska> remember how everyone laughed about XHTML? He's JSX now
[17:21:17] <ashnur> it's really not
[17:21:25] <ashnur> not that i like jsx, but it's not xml
[17:21:40] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[17:22:27] <ashnur> and people didn't have to use jsx, I used to use react without it as long as i didn't join big corp with lots of young people speedtrained
[17:25:53] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[17:27:40] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.150)
[17:27:45] *** Joins: zebrag (~chris@user/zebrag)
[17:31:56] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:36:03] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[17:36:17] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:36:34] *** Quits: dunkeln_ (~dunkeln@188.71.193.140) (Ping timeout: 252 seconds)
[17:39:08] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[17:41:27] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Quit: Client limit exceeded: 15000)
[17:42:18] *** Joins: jamea (~jamea77@187.185.190.209)
[17:46:14] *** Joins: Haren4E (~Haren4E@179.52.69.116)
[17:47:14] <bambanxx> good morning
[17:47:15] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[17:47:27] <bambanxx> what is the common use of sessionStorage?
[17:47:34] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[17:47:40] *** Quits: jazzy (~jaziz@2607:fb90:a68e:e270:5855:cc91:a6b5:d5ec) (Ping timeout: 250 seconds)
[17:48:36] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[17:53:54] <samsch> I'm honestly not even familiar with any valid common use cases for it. People have used it to store tokens, but that's *not* something you should do.
[17:54:43] *** Joins: DarkSeid_ (~textual@90.205.211.202)
[17:55:42] <bambanxx> why is not good idea samsch ?
[18:01:11] <samsch> bambanxx, https://www.rdegges.com/2018/please-stop-using-local-storage/
[18:01:15] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:01:24] <samsch> localStorage and sessionStorage are equivalent for the point of this article
[18:01:55] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:02:12] <bambanxx> samsch you wrote that?
[18:02:16] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[18:02:18] <samsch> I did not
[18:05:34] <bambanxx> samsch info of this is stored on cache?
[18:06:27] <samsch> Can you clarify your question? Not sure what you're asking
[18:06:37] *** Quits: brian_da_mage (~Neuromanc@user/briandamag) (Ping timeout: 246 seconds)
[18:08:06] *** Quits: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a) (Ping timeout: 264 seconds)
[18:09:02] *** Quits: straykitten (~straykitt@subs24-116-206-8-59.three.co.id) (Read error: Connection reset by peer)
[18:15:16] *** Joins: MJCD (uid193337@user/mjcd)
[18:16:49] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:931c:87ae:1f48:5683) (Remote host closed the connection)
[18:18:14] <MJCD> 9:46 PM <MJCD> Hey is there some kind of way to extract info from gmail inbox into gsheets?
[18:18:14] <MJCD> 9:46 PM <MJCD> like, built in I mean
[18:18:14] <MJCD> 9:47 PM <MJCD> they're all form emails so easily identified
[18:21:49] *** Joins: straykitten (~straykitt@subs24-116-206-8-60.three.co.id)
[18:25:26] <ashnur> info from gmail inbox
[18:25:31] <ashnur> bit vague
[18:25:45] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[18:26:07] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[18:26:18] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:27:53] <MJCD> > select emails by search
[18:27:59] <MJCD> > extract text within them into columns
[18:28:22] <MJCD> ie "Your electricity bill is ready to be paid"
[18:28:37] <MJCD> then sub-selectors to get the date, amount, etc
[18:28:49] <ashnur> that's awfully integrated stuff
[18:28:55] <MJCD> right
[18:29:00] <ashnur> don't think even google has it :D
[18:29:03] <ashnur> internally
[18:29:04] <MJCD> thus why it might be possible without hackery
[18:29:15] <MJCD> gapps would be technically capable
[18:29:21] <MJCD> but I don't want to write an app haha
[18:29:34] <MJCD> it's just basically comms auditing
[18:30:01] <MJCD> indexing ALL email and working from there isn't out of the question
[18:30:12] <MJCD> but also isn't a /live/ solution
[18:30:31] <MJCD> ie I have to run it when I get a bill (as an example use case)
[18:30:37] <MJCD> which kinda defeats the point haha
[18:31:11] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.150) (Quit: Textual IRC Client: www.textualapp.com)
[18:34:43] <wovixo> https://developers.google.com/gmail/api/reference/rest/v1/users.messages/get
[18:34:54] <MJCD> https://mailparser.io/blog/email-to-google-docs-sheets/
[18:35:01] <MJCD> there's tools already using gapps
[18:35:17] <MJCD> wovixo: right i know it's POSSIBLE I just don't awnt to make a whole thing for it
[18:35:20] <MJCD> nor pay for one
[18:35:23] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:36:04] <MJCD> it'd be dope for there just to be like =GMAIL('selector string', { date: 'subselector' })
[18:36:20] <MJCD> or somesuch haha
[18:36:30] <wovixo> I'd be surprised if there isn't something that does this already, since it sounds pretty trivial. Tools like Zapier can do similar stuff.
[18:37:22] <MJCD> I literally just posted a link to such a thing haha
[18:37:29] <MJCD> but again, it's a paid subscription
[18:37:34] <wovixo> Write a framework over the GMail and GDocs APIs, form startup, get VC money, die rich in a giant pile of cocaine.
[18:39:50] <MJCD> annoyingly there IS a =GOOGLE() lol
[18:40:12] <MJCD> I could possibly get away with just the gmail api in an individual sheets scripts
[18:40:23] <MJCD> which avoids "writing an ENTIRE thing"
[18:40:30] <MJCD> but still requires me to write and maintain code
[18:40:39] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[18:41:53] <MJCD> hmmmm this looks promising if not a little complicated lol
[18:41:58] <MJCD> https://blog.coupler.io/gmail-to-google-sheets/#Export_Gmail_to_Google_Sheets_using_the_API_WITHOUT_CODING
[18:42:11] <MJCD> technically no code though so it should keep working
[18:42:47] <MJCD> and is gapps so that still means a subscription waaah
[18:43:04] <wovixo> Right, but they have a free platform that should cover what you need.
[18:43:31] <MJCD> gapps is 100% paid
[18:43:50] <MJCD> even to get api access as described in the link above
[18:43:57] <wovixo> Oh, you have to use GApps with that Coupler? Bummer.
[18:44:15] <MJCD> it's not "a coupler"
[18:44:19] <MJCD> it's just called coupler lol
[18:44:23] <MJCD> the site
[18:46:33] <wovixo> I'm going to call it "That Coupler" just to annoy you. Lol.
[18:46:55] <MJCD> and i'm going to call you Susan because I know it makes you happy <3
[18:48:30] <MJCD> there's some extensions for sheets to do a lottt of stuff
[18:48:45] <MJCD> guess i'll take a sift through even though they're mostly just fucking mailmerge ahaha
[18:50:28] *** Joins: dunkeln (~dunkeln@188.71.193.140)
[18:54:12] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:429:e85:3a3a:a405)
[18:57:43] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[18:57:44] *** Quits: ryzenda (~ryzenda@21.sub-174-203-99.myvzw.com) (Remote host closed the connection)
[18:58:44] <wovixo> Sounds great, good luck Mary!
[19:02:28] *** Joins: ryzenda (~ryzenda@21.sub-174-203-99.myvzw.com)
[19:05:28] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[19:06:52] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[19:08:15] <bambanxx> all apis works trough ajax?
[19:08:47] <MJCD> ... with an api key ;p
[19:08:54] <MJCD> which requires google workspaces ;p
[19:09:03] <MJCD> [what they call their paid stuff this week]
[19:09:54] <bambanxx> i mean, work with an api, must  use ajax ?
[19:10:08] <bambanxx> can you use without ajax?
[19:10:26] <MJCD> there's no way to enforce that it's ajax or not lol
[19:10:33] <MJCD> http requests are http requests
[19:11:31] <systemfault> bambanxx: Stop complicating it... to do "Ajax" is to do a HTTP request using the browser's built-in HTTP client
[19:11:39] <MJCD> lol right
[19:11:53] <MJCD> also uhhh
[19:12:01] <systemfault> Do you need to do HTTP requests to get any type of data on the web? YES.
[19:12:02] <MJCD> pretty sure these free gapps for this kind of work
[19:12:13] <MJCD> is just straight sending all my data to china
[19:12:19] <MJCD> straiiight to chairman mao
[19:12:27] *** Quits: tex (~super@user/dix) (Ping timeout: 258 seconds)
[19:12:35] <bambanxx> i ask because i am confused, i am learning
[19:12:46] <bambanxx> i was wondering if fetch is same as ajax
[19:12:51] <MJCD> yes. ;p
[19:13:03] <MJCD> it's literally just a more friendly wrapper for XHR
[19:13:05] <MJCD> !xhr
[19:13:06] <jellobot> MJCD, XMLHttpRequest, a method for asynchronous fetching of data or files from a server with javascript. https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest (see also: !cors for issues with cross-origin XHR)
[19:13:22] <MJCD> before fetch, people usually just wrote their own 'fetch'alike
[19:13:42] <MJCD> because it's trivial, except to the webstandards teams apparently lol
[19:13:56] <MJCD> the mailing list on it, like 5 years on, is every bit as hilarious as ever
[19:14:34] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[19:14:55] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[19:15:07] <systemfault> ajax is just a buzzword, it's not even technically relevant these days
[19:15:25] <systemfault> XML isn't used that much on the web
[19:16:10] *** Joins: onosendi (~onosendi@user/onosendi)
[19:16:26] <MJCD> lol ehh it's called what it's called ;p
[19:16:37] <MJCD> unless you have a time machine you haven't told us about :O
[19:18:04] <bambanxx> thanks
[19:22:17] *** Quits: Svitkona (~Svitkona@157.245.38.135) (Quit: The Lounge - https://thelounge.chat)
[19:22:34] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[19:22:59] <MJCD> fucking activision sent me an email after opening COD Warzone for the first time
[19:23:07] <MJCD> saying IMPORTANT: SET A PASSWORD NOW!"
[19:23:32] <MJCD> It's just one image, with what appears should be a button/link to do so
[19:23:43] <MJCD> ... someone forgot to do the second part of that though
[19:23:53] <MJCD> so it's just 1 image you click and it comes up fullscreen xD
[19:24:02] <MJCD> you make /how much/ a year??
[19:24:33] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[19:25:41] *** Joins: jamea97 (~jamea77@200.68.140.41)
[19:27:01] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 258 seconds)
[19:30:24] *** Joins: jamea (~jamea77@187.185.190.209)
[19:32:53] *** Quits: DarkSeid_ (~textual@90.205.211.202) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:33:01] *** Quits: jamea97 (~jamea77@200.68.140.41) (Ping timeout: 268 seconds)
[19:34:46] *** Joins: DarkSeid_ (~textual@90.205.211.202)
[19:35:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:37:55] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[19:38:32] *** Joins: Deide (~Deide@wire.desu.ga)
[19:38:32] *** Quits: Deide (~Deide@wire.desu.ga) (Changing host)
[19:38:32] *** Joins: Deide (~Deide@user/deide)
[19:41:10] *** Joins: ryzendar (~ryzenda@2600:1016:b02b:b342:3550:c6dc:a8d7:26c7)
[19:41:28] *** Joins: entuland (~entuland@user/entuland)
[19:42:16] *** Quits: ryzenda (~ryzenda@21.sub-174-203-99.myvzw.com) (Ping timeout: 268 seconds)
[19:42:49] *** night_wulfe_ is now known as night_wulfe
[19:46:51] *** Joins: paule32 (~paule32@nat-91-137-16-18.net.encoline.de)
[19:46:56] <paule32> hello
[19:48:12] *** Quits: raindrop22 (~raindrop@46.140.123.194) (Ping timeout: 252 seconds)
[19:48:13] <paule32> can i split a link url like these:   "https://my.domain/path?xxxx#xxx=..."   and
[19:48:25] <paule32> "foo"    and
[19:48:29] <paule32> "bar"
[19:48:34] <MJCD> lol what
[19:48:47] <MJCD> neither of those terms are in the example
[19:48:48] *** Quits: discape (~discape@user/discape) (Quit: Konversation terminated!)
[19:49:13] <MJCD> I mean a string is a string and ofc you can split it
[19:49:21] <paule32> so the string forms:   "https://my.domain/path?xxxx#xxx...foobar"
[19:49:24] <MJCD> whether that's the correct solution is... pending
[19:49:40] <MJCD> !xy
[19:49:40] <jellobot> MJCD, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[19:50:00] <paule32> ok, from begin:
[19:50:06] <paule32> i have 3 strings
[19:50:14] <paule32> 1. "https://"
[19:50:20] <paule32> 2. "my.domain"
[19:50:27] <MJCD> !mdn urlparser
[19:50:28] <paule32> 3. "/linkref"
[19:50:29] <jellobot> MJCD, URL - The URL interface is used to parse, construct, normalize, and encode URLs. It works by providing properties which allow you to easily read and modify the components of a URL. https://mdn.io/urlparser
[19:50:32] <MJCD> ^
[19:51:03] <paule32> ok thx
[19:51:19] <MJCD> np let me know if you need any more clarification or its not what you're after
[19:51:38] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:52:03] <paule32> !keks MJCD
[19:52:12] <paule32> !cookie MJCD
[19:52:39] <MJCD> I can't get teleporting cookies since I removed my bluray drive
[19:52:40] <MJCD> ;(
[19:52:44] <paule32> !beer MJCD
[19:52:47] <paule32> :)
[19:56:49] *** Quits: w0x12ef (~w0x12ef@117.61.21.204) (Read error: Connection reset by peer)
[19:57:20] *** Joins: w0x12ef (~w0x12ef@117.61.21.204)
[19:57:54] *** Joins: tex (~super@user/dix)
[19:57:54] *** Quits: tex (~super@user/dix) (Client Quit)
[19:59:12] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[19:59:32] *** Joins: w0x12ef_ (~w0x12ef@117.61.28.100)
[20:00:29] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.110)
[20:01:50] *** Quits: w0x12ef_ (~w0x12ef@117.61.28.100) (Remote host closed the connection)
[20:02:17] *** Quits: w0x12ef (~w0x12ef@117.61.21.204) (Ping timeout: 265 seconds)
[20:03:44] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 265 seconds)
[20:04:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[20:05:27] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (*.net *.split)
[20:05:27] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9) (*.net *.split)
[20:05:28] *** Quits: a1paca (~a1paca@user/a1paca) (*.net *.split)
[20:05:28] *** Quits: px (~px@user/px) (*.net *.split)
[20:05:28] *** Quits: PigDude (~PigDude@159.203.16.199) (*.net *.split)
[20:05:28] *** Quits: theskillwithin (theskillwi@user/theskillwithin) (*.net *.split)
[20:05:28] *** Quits: nepeat (~nepeat@79.110.170.62) (*.net *.split)
[20:05:28] *** Quits: robertparkerx (~robertpar@user/robertparkerx) (*.net *.split)
[20:05:28] *** Quits: michaelis (~michaelis@193.183.209.17) (*.net *.split)
[20:05:28] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[20:05:28] *** Quits: Manouchehri (sid384576@id-384576.stonehaven.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: notchris (sid181145@id-181145.stonehaven.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: biggusnickus (~biggusdic@user/biggusdickus) (*.net *.split)
[20:05:28] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: LtHummus (~lthummus@174-21-28-50.tukw.qwest.net) (*.net *.split)
[20:05:28] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (*.net *.split)
[20:05:28] *** Quits: systemfault (sid267009@id-267009.highgate.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[20:05:28] *** Quits: Daniel15 (~d@d.sb) (*.net *.split)
[20:05:28] *** Quits: deadbeat (~quassel@user/deadbeat) (*.net *.split)
[20:05:28] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[20:05:28] *** Quits: velix (~velix@user/velix) (*.net *.split)
[20:05:28] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (*.net *.split)
[20:05:29] *** Quits: tcsc (sid145321@id-145321.tooting.irccloud.com) (*.net *.split)
[20:05:29] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (*.net *.split)
[20:05:29] *** Quits: Pilum (~JKM@user/pilum) (*.net *.split)
[20:05:29] *** Quits: flying_sausages (~flying_sa@user/flying-sausages/x-2113186) (*.net *.split)
[20:05:29] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[20:05:29] *** Quits: Flannel (~flannel@user/flannel) (*.net *.split)
[20:05:29] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (*.net *.split)
[20:05:29] *** Quits: albertlast (~nix@0exclusive.de) (*.net *.split)
[20:05:29] *** Quits: a9 (~a9@192.99.250.149) (*.net *.split)
[20:05:33] *** Joins: [RMS] (~rs@genoce.org)
[20:05:35] *** Joins: notchris_ (sid181145@id-181145.stonehaven.irccloud.com)
[20:05:36] *** Joins: kinabalu- (~kinabalu@198.23.166.98)
[20:05:37] *** Joins: a9 (~a9@192.99.250.149)
[20:05:39] *** Joins: Pilum (~JKM@user/pilum)
[20:05:39] *** Joins: nepeat (~nepeat@79.110.170.62)
[20:05:40] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 265 seconds)
[20:05:41] *** Joins: LtHummus (~lthummus@174-21-28-50.tukw.qwest.net)
[20:05:43] *** Joins: tcsc (sid145321@id-145321.tooting.irccloud.com)
[20:05:44] *** Joins: robertparkerx_ (~robertpar@2001:19f0:5:6262:5400:3ff:fe40:6b40)
[20:05:44] *** Joins: PigDude_ (~PigDude@159.203.16.199)
[20:05:44] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[20:05:54] *** Joins: deniska_ (~denis@user/deniska)
[20:05:57] *** Joins: systemfault (sid267009@id-267009.highgate.irccloud.com)
[20:05:59] *** Joins: Daniel15 (~daniel@d.sb)
[20:06:05] *** Joins: flying_sausages (~flying_sa@83.149.106.219)
[20:06:11] *** Joins: px (~px@ool-18bb89ab.dyn.optonline.net)
[20:06:18] *** Joins: ross (sid305269@id-305269.brockwell.irccloud.com)
[20:06:19] *** Joins: foureyes- (foureyes@brought.to.you.by.bnc4free.com)
[20:06:32] *** Joins: Manouchehri (sid384576@id-384576.stonehaven.irccloud.com)
[20:06:46] *** Quits: ross (sid305269@id-305269.brockwell.irccloud.com) (Changing host)
[20:06:46] *** Joins: ross (sid305269@user/ross)
[20:06:50] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[20:07:08] *** Quits: [RMS] (~rs@genoce.org) (Client Quit)
[20:07:15] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[20:07:15] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9)
[20:07:16] *** Joins: biggusnickus (~biggusdic@user/biggusdickus)
[20:07:28] *** Quits: flying_sausages (~flying_sa@83.149.106.219) (Changing host)
[20:07:28] *** Joins: flying_sausages (~flying_sa@user/flying-sausages/x-2113186)
[20:07:34] *** Joins: deadbeat (~quassel@user/deadbeat)
[20:07:40] *** Joins: theskillwithin (theskillwi@2600:3c01::f03c:91ff:fee0:d25d)
[20:07:44] *** deniska_ is now known as deniska
[20:07:48] *** Joins: velix_ (~velix@user/velix)
[20:08:01] *** Quits: theskillwithin (theskillwi@2600:3c01::f03c:91ff:fee0:d25d) (Changing host)
[20:08:01] *** Joins: theskillwithin (theskillwi@user/theskillwithin)
[20:08:05] *** Quits: dunkeln (~dunkeln@188.71.193.140) (Ping timeout: 265 seconds)
[20:08:05] *** Joins: [R] (~rs@genoce.org)
[20:08:12] *** foureyes- is now known as foureyes
[20:08:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:08:39] *** kinabalu- is now known as kinabalu
[20:08:39] *** Quits: kinabalu (~kinabalu@198.23.166.98) (Changing host)
[20:08:39] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[20:09:03] *** velix_ is now known as velix
[20:09:15] *** Joins: a1paca (~a1paca@user/a1paca)
[20:09:28] *** Quits: straykitten (~straykitt@subs24-116-206-8-60.three.co.id) (Ping timeout: 252 seconds)
[20:10:41] *** Joins: michaelis (~michaelis@193.183.209.17)
[20:12:06] *** Joins: onosendi1 (~onosendi@user/onosendi)
[20:13:04] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Remote host closed the connection)
[20:13:05] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[20:13:28] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[20:15:49] *** Joins: AlbertLast (~nix@0exclusive.de)
[20:16:12] *** Quits: Jigsy (~Jigsy@user/jigsy) (Quit: bbiaf.)
[20:17:33] *** Parts: robertparkerx_ (~robertpar@2001:19f0:5:6262:5400:3ff:fe40:6b40) ()
[20:17:58] *** Joins: robertparkerx (~robertpar@user/robertparkerx)
[20:21:04] *** Quits: iffraff (~quassel@2605:a601:aae0:4a00:a311:7319:6b90:a24e) (Ping timeout: 250 seconds)
[20:22:04] *** Joins: straykitten (~straykitt@subs24-116-206-8-60.three.co.id)
[20:23:24] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[20:24:19] *** Joins: WishBoy (~WishBoy@user/wishboy)
[20:25:38] *** Quits: DarkSeid_ (~textual@90.205.211.202) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:26:15] *** Joins: DarkSeid_ (~textual@90.205.211.202)
[20:26:47] *** Quits: z1haze_ (~z1haze@184.103.47.145) (Quit: Leaving)
[20:30:32] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Remote host closed the connection)
[20:31:01] *** Joins: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx)
[20:31:25] *** Joins: Rockwood (~Rocky@user/rocky)
[20:32:22] *** Joins: dunkeln_ (~dunkeln@188.71.193.140)
[20:32:38] *** Joins: jamea97 (~jamea77@10.189-202-213.bestelclientes.com.mx)
[20:32:51] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[20:34:06] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 258 seconds)
[20:34:08] *** Quits: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx) (Read error: Connection reset by peer)
[20:36:58] *** Quits: DarkSeid_ (~textual@90.205.211.202) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:37:42] *** Joins: Celeo (~Celeo@user/celeo)
[20:38:15] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[20:38:31] *** Joins: skillbot (~skillbot@user/skillbot)
[20:38:31] *** ChanServ sets mode: +v skillbot
[20:38:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:44:59] *** Joins: DarkSeid_ (~textual@90.205.211.202)
[20:45:43] *** Joins: Joel (~jjshoe@user/joel)
[20:46:00] <Joel> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat - Is it possible to some how know the locale of someone browsing a page, so I can pass it into this lib?
[20:47:06] *** Quits: DarkSeid_ (~textual@90.205.211.202) (Client Quit)
[20:47:18] <entuland> is the language enough? https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage/language
[20:47:32] <entuland> you may want to give a choice to the end user anyways regardless of that
[20:47:55] <Joel> entuland that looks right, and yes, good point, letting a user pick is always smart
[20:49:41] <GreenJello> Joel, pass undefined for the first argument and it'll use the user's locale
[20:50:30] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:51:48] <Joel> GreenJello oh awesome!
[20:53:47] <entuland> you'll end up querying the default as a first pick and putting it into a variable of some sort anyways if you want to give the user a choice
[20:54:24] <entuland> and then use that variable in all the spots, without letting any function use the defaults _unless you explicitly want it to_
[20:55:24] <entuland> if you know you're going down that road, start using such a variable immediately, or you may end up with the user choice only affecting half of your system or so
[20:56:56] <entuland> even if I weren't planning on giving a choice in the near future I would set the system up that way to avoid the need to go back and alter any existing code shall I need to change my mind (or shall the requirement change)
[20:58:29] <wroathe> Sometimes there's something unnerving about the way people write typed Javascript. I can't put my finger on it.
[20:58:50] <wroathe> Like it feels like their type annotations just contribute noise to the program, when they're explicitly typing really common patterns
[20:58:58] <Rockwood> \o/
[21:00:32] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Leaving)
[21:04:41] *** Joins: Ziyan (~ziyan@112.134.171.44)
[21:10:17] *** Quits: Haren4E (~Haren4E@179.52.69.116) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:11:11] *** Joins: matsaman (~matsaman@user/matsaman)
[21:13:00] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 268 seconds)
[21:15:36] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[21:16:43] *** Quits: dunkeln_ (~dunkeln@188.71.193.140) (Ping timeout: 265 seconds)
[21:18:22] *** Joins: Jigsy (~Jigsy@user/jigsy)
[21:19:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[21:21:07] *** Joins: Haren4E (~Haren4E@179.52.69.116)
[21:29:54] *** Joins: zacts (~zak@user/zacts)
[21:30:48] <wroathe> How do you guys feel about the practice of co-locating tests along with the code their testing in the source tree? On one hand, they make imports and finding the code that's being tested easier, but on the other hand they clutter up the primary source directory.
[21:31:39] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Remote host closed the connection)
[21:31:55] <MJCD> lol huh
[21:32:10] <GreenJello> slightly prefer it, but it's pretty insignificant either way
[21:32:12] <MJCD> how does a singular /project/tests/ "clutter" ?
[21:32:25] <MJCD> I think you might be overthinking it
[21:32:26] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[21:32:42] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[21:32:46] <entuland> they may have "something.js" and "test_something.js" in the same folder :P
[21:32:53] <joepie91> MJCD: I think they're saying that it's the *other* option causing clutter
[21:32:57] <joepie91> yeah that
[21:33:07] <MJCD> eeew
[21:33:11] <MJCD> yeah don't do that haha
[21:33:22] <MJCD> I mean it IS kind of irrelevant as already stated
[21:33:24] <MJCD> but still
[21:33:41] <joepie91> I'm not a fan of such sidecar-file approaches, though for a different reason - you very quickly get stuck in "wait what file does this test belong to" quicksand once you dive into testing cross-cutting concerns
[21:33:52] <wroathe> GreenJello: Yeah, that's where I think I stand too.
[21:33:52] <MJCD> lol yeah i mean
[21:33:58] <MJCD> beyond "functional testing"
[21:34:04] <wroathe> GreenJello: But for a large enough project the clutter might become a real consideration.
[21:34:10] *** Quits: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net) (Ping timeout: 252 seconds)
[21:34:12] <MJCD> the code the test is related to is largely irrelevant
[21:34:18] <MJCD> you test against the /spec/
[21:34:26] <wroathe> Time to ignore MJCD, for my health
[21:34:33] <MJCD> ... lol what
[21:34:35] <MJCD> I did nothing
[21:34:50] <ljharb> wroathe: colocating tests imo is a terrible pattern
[21:34:59] <ljharb> tests should be in a top-level directory with a parallel structure to the code
[21:35:01] <MJCD> that's literally what I said twice lol
[21:35:06] <joepie91> wroathe: like, with the sidecar-file approach you are essentially building a rigid taxonomy for your tests that *must* exactly match the taxonomy for your code, and so it will suffer from the usual problem of rigid taxonomies that you *will* run into a case that doesn't fit into it and it will block your focus and productivity trying to figure out which classification is the least incorrect
[21:35:07] <MJCD> got me ignored apparently
[21:35:10] <MJCD> "oh no!"
[21:35:17] <ljharb> "jump to file" means that it's equally easy to find the code being tested regardless of structure.
[21:35:34] <GreenJello> wroathe, I find it's the opposite; mirroring the source structure is only easily manageable on small projects
[21:35:40] <MJCD> lol
[21:35:44] <ljharb> that's exactly the problem
[21:35:55] *** Joins: bambanxx (~bambanx@191.125.160.91)
[21:35:56] <MJCD> is it tho
[21:35:56] <ljharb> the solution is "make your project smaller", not "make it easier to have a bloated project" :-)
[21:36:36] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[21:36:41] <wroathe> joepie91: Well, that rigid taxonomy you're talking about is usually considered the best practice, regardless of which approach you take. Before it came full circle, people were usually still trying to mirror the source directory structure
[21:36:53] <wroathe> joepie91: For the same reason, I suppose, as we're no co-locating our tests
[21:37:00] <MJCD> lol
[21:37:08] <wroathe> joepie91: I.e. making it easy to find the associating between what's being tested and the test easier.
[21:37:25] <wroathe> GreenJello: I suppose that's true.
[21:37:29] <MJCD> > ignore everyone who doesn't instantly agree with what you were subjectively asking for opinions on, that do not match your own
[21:37:30] <MJCD> gg
[21:37:38] <wroathe> joepie91: Granted, unit tests tend to follow the structure more than other kinds of tests.
[21:37:48] <MJCD> yeah joepie91
[21:38:38] *** Joins: silly (~silly@user/silly)
[21:39:29] <joepie91> wroathe: honestly, rigid taxonomies are precisely the sort of thing that's often *assumed* (or even taught) to be a good practice, but that isn't really
[21:39:48] <joepie91> they feel desirable because you can make things 'elegant' and neatly categorized into boxes
[21:39:58] <wroathe> Well, for unit tests they make sense. The tests are usually narrowly scoped to the unit under test.
[21:40:13] <wroathe> For E2E, integration, or functional tests that's not the case usually
[21:40:39] <MJCD> Think I got "restricted" on linkedin for calling some girl an Oprah clone because all celebrities are cloned to ensure continuity
[21:40:45] <MJCD> that's so great
[21:41:26] <joepie91> but in reality the real world is messier than any taxonomy you might dream up upfront, and your design will have to accommodate for that, and doing so effectively is much more important than some nebulous sense of 'elegance'
[21:41:42] <wroathe> You've lost me
[21:41:47] <wroathe> Can you get more concrete?
[21:41:50] <MJCD> lol
[21:41:58] *** Joins: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net)
[21:41:59] <MJCD> yeah joepie91, get concrete, why aren't you concrete
[21:42:54] * joepie91 is lagging FYI
[21:43:49] <joepie91> wroathe: I'm not saying that no tests should *ever* mirror the source structure, to be clear - just that your project structure should not be designed under the assumption that they will
[21:44:02] <joepie91> in cases where it makes sense to mirror, go right ahead
[21:44:11] <joepie91> but there certainly will be cases where it doesn't
[21:44:20] *** Joins: Rockwood_ (~Rocky@user/rocky)
[21:44:33] <joepie91> and that's something that you need to account for in your design from the start, rather than assuming "it mirrors the source" as the baseline and making everything else an "exception"
[21:44:37] <MJCD> I disagree entirely though only your opinion matters apparently
[21:44:38] <MJCD> lol
[21:44:39] <wroathe> I don't understand. You don't design projects around the structure of your tests. You structure the tests around the design of your project. It's just the case that unit tests are often organized according to the units their testing.
[21:45:01] <wroathe> It feels like you're talking about a scenario that doesn't happen
[21:45:04] <MJCD> lol
[21:45:10] *** Joins: dunkeln_ (~dunkeln@188.71.193.140)
[21:45:43] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[21:46:11] <joepie91> MJCD: can you stop providing commentary from the peanut gallery, it's very irritating
[21:46:36] <joepie91> this isn't a soccer match
[21:46:39] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Read error: Connection reset by peer)
[21:46:50] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[21:47:17] <MJCD> lol they literally ignored at best 3 people as knowledgable as you
[21:47:18] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[21:47:32] <MJCD> and yet they can't understand your singularly worthy answer
[21:47:38] <Rockwood_> MJCD, cheers :D
[21:47:41] <MJCD> satire at it's finest
[21:47:44] <MJCD> holla Rockwood_
[21:47:58] <Rockwood_> MJCD, hows there? summer or winter
[21:48:06] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:a874:b712:9670:8351) (Quit: Leaving)
[21:48:09] <MJCD> winter -- soooooo chillyyyyyyyy
[21:48:13] <joepie91> MJCD: all you're doing is transforming your frustration into a mental cost for me to have to deal with, which is not better
[21:48:16] <MJCD> lol
[21:48:35] <MJCD> sorry I forgot that I exist to not cause you mental cost
[21:48:53] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 256 seconds)
[21:48:55] <MJCD> this asshat ignoring everyone but you though -- they'er not a cost, they're an investment surely!
[21:48:57] <Rockwood_> MJCD, like whiskey bottles :D
[21:49:07] <ljharb> MJCD: so let them
[21:49:13] <ljharb> ignore people, i mean
[21:49:13] <MJCD> I am letting them
[21:49:19] <MJCD> I just find it humerous
[21:49:21] <ljharb> â€¦ by not commenting on it
[21:49:24] <ljharb> find it humorous quietly :-)
[21:49:33] <MJCD> lol
[21:49:36] <wroathe> Anyway, thanks for the debate. I'll think more about your points joepie91.
[21:49:42] <MJCD> yeah thanks joepie91
[21:49:44] *** Quits: bambanxx (~bambanx@191.125.160.91) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[21:49:48] <MJCD> and only joepie91
[21:50:25] <MJCD> so segue
[21:50:35] <MJCD> I love how sites ask for ID
[21:50:52] <MJCD> but there's no [atleast in Australia] way to confirm these details in any way
[21:50:58] <MJCD> as ofc, that'd be a huge privacy issue
[21:51:32] <MJCD> Sure i'll give you my "real" passport number when you have no way of confirming it *shrug*
[21:52:51] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[21:53:15] <ljharb> i'm confused, "ask for id" doesn't mean "type in the number", it usually means "give me a photo of your id"
[21:53:43] <ljharb> which is usually verified with a service, who lacking a government api will literally send a human down to the DMV equivalent and pay a fee to verify the ID
[21:54:08] <ljharb> like, you can get anyone's driving record from the DMV in the US for a fee, if you have a photo of their drivers license
[21:54:12] <MJCD> Because you can't manipulate a photo to the satisfaction of the probably 6 seconds they spend reviewing it?
[21:54:13] <MJCD> :P
[21:54:24] <ljharb> it's not really about the photo
[21:54:24] <MJCD> literally flip a 6 upside down lol
[21:54:35] <MJCD> and no
[21:54:40] <MJCD> there is no "dmv equiv" with a fee
[21:54:40] <ljharb> right but i'm saying that every single person's ID can be verified by any other person, in person at a government office
[21:54:42] <MJCD> again
[21:54:46] <ljharb> that info isn't private, in the US at least
[21:54:47] <MJCD> that's a huge breach of privacy
[21:54:49] <MJCD> here atleast
[21:54:52] <MJCD> and ofc it is lol
[21:54:56] <MJCD> it's ID for say, a loan
[21:55:00] <MJCD> for starting a business
[21:55:03] <MJCD> for getting further ID
[21:55:15] <MJCD> $1000 says I can get a passport in your name
[21:55:16] <ljharb> at some point it's also probably just a CYA thing
[21:55:20] <ljharb> ie, the law says they have to ask
[21:55:27] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[21:55:36] <ljharb> you wouldn't be able to get a passport in my name that works
[21:55:40] <MJCD> the law doe nsos ucht hing they're just all shitting their pants over their ability to operate
[21:55:48] <ljharb> and yes, that is always verifiable. governments LOVE making it easy to find fake IDs.
[21:55:50] <MJCD> and... are you willing to bet? ;)
[21:56:00] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[21:56:00] <MJCD> and your govt != most
[21:56:05] <ljharb> i would be very shocked if australia had no mechanism for exposing that someone is committing fraud
[21:56:10] <MJCD> most govts actually care about their citizens security
[21:56:16] <ljharb> even if it was "the cops privately follow up if the data doesn't match"
[21:56:29] <ljharb> making it easy to provide fake ID makes everyone less secure
[21:56:30] <MJCD> lmao follow up with /who/
[21:56:41] <MJCD> they don't have my address, or my real name
[21:56:43] <ljharb> they can subpoena IPs
[21:56:49] <MJCD> LOL gl with that
[21:56:58] <ljharb> cops around the world do it all the time
[21:57:03] <MJCD> considering my "worst" is saying someone is a clone of Oprah
[21:57:15] <MJCD> for brand continuity reasons
[21:57:16] <ljharb> in australia too
[21:57:18] <MJCD> lol
[21:57:27] <MJCD> and yes for like suspected terrorists and shit
[21:57:28] <MJCD> lol
[21:57:49] <ljharb> ok so it's not that the cops can't find you, its' that they won't
[21:57:49] <MJCD> > u look like Oprah and shared Oprah meme u r memeing urself
[21:57:53] <MJCD> DEPLOY THE TASKFORCE
[21:57:58] <MJCD> I mean... it's both
[21:58:04] <ljharb> except it's just the second one.
[21:58:07] <MJCD> y'all know more about me than most any site
[21:58:28] <MJCD> they'd be better off joining here than "subpoenaing random stuff"
[21:58:44] <MJCD> does that make us all honorary detectives?
[21:58:46] *** Quits: dunkeln_ (~dunkeln@188.71.193.140) (Ping timeout: 265 seconds)
[21:58:48] <MJCD> 8-)
[21:59:18] <MJCD> anyway as I say in AU there 100% isn't any mechanism, behind a paywall or otherwise, to access someone elses records of /any kind/
[21:59:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[21:59:36] <MJCD> even if just to confirm what they gave you
[21:59:45] <MJCD> feel free to look for one
[21:59:51] <MJCD> happy to be proven wrong
[22:00:22] <MJCD> oh one exception I guess is tenancy records for renters
[22:00:26] <MJCD> because that's all run privately
[22:00:39] <MJCD> they'll happilly take cash for ID
[22:03:15] *** Joins: dunkeln (~dunkeln@188.71.193.140)
[22:03:33] <MJCD> anyway again they're literally ALL just freaking the fuck out and trying desperately to keep operations running
[22:03:46] <MJCD> which makes me very happy
[22:04:44] <ljharb> MJCD: https://en.wikipedia.org/wiki/Identity_documents_of_Australia#Verification lists a bunch
[22:05:00] <ljharb> MJCD: so it seems like there 100% is many such mechanisms
[22:05:15] <ljharb> "The Australian Government Department of Home Affairs provides a document verification service that allows for validation of some licences and certificates." oh look, exactly like i said, from the government
[22:05:17] <MJCD> lmao
[22:05:27] <MJCD> so, linkedin restricts me
[22:05:33] <MJCD> I send them my drivers licence
[22:05:44] <MJCD> you then think they take that to the department of home affairs?
[22:05:53] <ljharb> i'm sure it's digital
[22:05:53] <MJCD> * x_users_per_day
[22:05:56] <ljharb> but i have no idea if any specific site is verifying things
[22:05:59] <MJCD> lol...
[22:06:04] <ljharb> all i was saying is that it's usually done this way
[22:06:12] <MJCD> Let's put it this way
[22:06:16] <ljharb> otherwise why would they bother asking
[22:06:30] <MJCD> airbnb has infamously hundreds of stories of fake id's that passed their testing
[22:06:34] <MJCD> by whatever means
[22:06:52] <MJCD> and that's about protecting their sacred commerce
[22:06:52] <ljharb> i'm not aware of hundreds
[22:07:01] <MJCD> not about if some guy compared someone to oprah
[22:07:03] <ljharb> but yes, they do absolutely verify government documents with governments wherever possible
[22:07:13] <ljharb> i still have no idea why you're bringing up oprah again, or so often
[22:07:16] <MJCD> lol welp, maybe google it
[22:07:25] <MJCD> cause that's what I probably did to have to verify
[22:07:35] <MJCD> it doesn't actually tell you
[22:07:40] <MJCD> which is... super helpful
[22:07:57] <MJCD> "YOU DID SOMETHING  LIVE IN PERPETUAL FEAR"
[22:08:10] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.110) (Quit: Textual IRC Client: www.textualapp.com)
[22:08:14] <MJCD> Like I get near 1000 profile views per 90 day rolling period
[22:08:33] <MJCD> the fuck outta here with needing me to confirm for calling someone Oprah
[22:09:05] <MJCD> doubly so with no actual reason given
[22:09:15] <MJCD> again, them scrambling to try and reach compliance
[22:09:39] *** Quits: straykitten (~straykitt@subs24-116-206-8-60.three.co.id) (Ping timeout: 268 seconds)
[22:09:50] <ljharb> lol oprah again
[22:09:52] <ljharb> with no context
[22:10:01] <MJCD> I told you literally like 6 times dude
[22:10:14] <MJCD> I said some lady was an Oprah clone
[22:10:18] <MJCD> nothing more to it than that
[22:10:28] <ljharb> ok, and?
[22:10:34] <MJCD> because they shared an oprah meme and look identical but 30 years younger
[22:10:41] *** Quits: jamea97 (~jamea77@10.189-202-213.bestelclientes.com.mx) ()
[22:10:45] <MJCD> and that's the last thing I did before I got "restricted"
[22:10:50] <MJCD> which is actually a ban
[22:11:03] <ljharb> restricted on what
[22:11:06] <MJCD> fb if you get restricted you can still view atleast
[22:11:14] <MJCD> linkedin, again for like the 5th time lol
[22:11:18] *** Joins: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx)
[22:11:30] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:11:38] <MJCD> not slinging shade just trying to clarify that I did cover it
[22:11:49] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[22:11:54] <ljharb> why was someone sharing a meme on linkedin
[22:12:00] <ljharb> linkedin's for work stuff
[22:12:43] <ljharb> lol how did we *again* fill pages with off topic stuff
[22:12:44] <MJCD> Because "work" isn't the rigid structure you've built it up to be in your mind -- probably as a coping mechanism
[22:12:45] <ljharb> let's just move on
[22:13:17] <Svitkona> a coping mechanism
[22:13:20] <MJCD> indeed, but I would put money on that none of those departments would even honor random endless requests from linkedin etc
[22:13:59] <Rockwood_> lol chit chat
[22:14:49] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:15:00] *** Quits: guzzlefry (~gus@user/guzzlefry) (Read error: Connection reset by peer)
[22:16:51] <ljharb> it's a government service. they're legally required to honor random endless requests from every single citizen
[22:17:14] <ljharb> go DOS them if you want, they still have to comply
[22:17:29] *** Joins: guzzlefry (~gus@user/guzzlefry)
[22:17:51] <MJCD> .... lol
[22:18:05] <MJCD> You're 100% right as 100% always i'm sure
[22:18:19] <MJCD> ljharb; Australian infrastructure specialist courtesy of wikipedia
[22:18:27] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[22:18:38] <MJCD> I will tag this skill on your linkedin after i'm unrestricted
[22:19:39] <ljharb> Â¯\_(ãƒ„)_/Â¯  every government has it, but feel free to go prove wikipedia wrong
[22:20:12] <MJCD> "go prove wikipedia wrong" lol
[22:20:20] <MJCD> the science is irrefutable
[22:20:30] <ljharb> i didn't say irrefutable. i suggested you refute it.
[22:20:32] <MJCD> PS; What makes you think I haven't?
[22:20:47] <ljharb> because with such proof wikipedia would be updated
[22:20:49] <MJCD> You probably think Michael is my real name
[22:20:59] <MJCD> It's on my drivers licence after all!
[22:21:04] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[22:21:04] <MJCD> :3
[22:21:28] <ljharb> i mean, if it's on your DL and it's not your real name, you're committing a crime, so i guess either one's viable
[22:21:40] <ljharb> i don't particularly care either way tho
[22:21:43] <MJCD> Aliases are actually legal and becoming more and more common
[22:21:47] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
[22:21:51] *** Joins: straykitten (~straykitt@subs24-116-206-8-29.three.co.id)
[22:21:59] <MJCD> but I think as usual you just have to be "the most informed" in any given room
[22:22:01] <ljharb> happy for you
[22:22:02] <MJCD> always and forever
[22:22:17] <MJCD> and i'm not happy about any of it ;p
[22:22:19] <ljharb> if this off topic noise turns into personal attacks, op hats will come out.
[22:22:31] <MJCD> 1 comment...
[22:22:35] <ljharb> yep, that's all it takes
[22:22:49] <ljharb> there's no slack here, this is irc
[22:23:14] <MJCD> It's all it takes to trigger you and your gains you were ongoingly denied previously.
[22:23:22] <MJCD> Now i'm /responding/ to you
[22:23:32] <MJCD> I could /not/ and just let you be completely unchecked
[22:23:33] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.142)
[22:23:37] <ljharb> gains?
[22:23:47] <MJCD> from 0 to 100
[22:24:12] <ljharb> i have no idea where this is going, so i think it just needs to cease. let's move on.
[22:24:15] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[22:24:28] <MJCD> That sounds lovely, if you stop saying things about me I will stop responding to them
[22:24:29] <MJCD> xo
[22:30:15] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[22:33:47] <Rockwood_> mx
[22:35:43] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[22:37:55] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 258 seconds)
[22:38:13] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:38e2:f649:f5e8:46cb) (Ping timeout: 246 seconds)
[22:42:13] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:44:48] *** Quits: Haren4E (~Haren4E@179.52.69.116) (Ping timeout: 268 seconds)
[22:44:56] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[22:47:41] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[22:51:50] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:52:06] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[22:52:10] *** Joins: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[22:52:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[22:54:28] *** Quits: ryzendar (~ryzenda@2600:1016:b02b:b342:3550:c6dc:a8d7:26c7) (Ping timeout: 250 seconds)
[22:54:43] *** Joins: Betal (~Beta@user/betal)
[23:01:15] *** Quits: ormaaj (~ormaaj@2001:470:69fc:105::35ca) (Changing host)
[23:01:15] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[23:01:21] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[23:06:55] *** Joins: Guest9 (~Guest9@43.242.116.62)
[23:08:40] *** Quits: dimi1947 (~dimi1947@2a02:1388:88:b338:694f:5b0f:89b4:f70c) (Ping timeout: 246 seconds)
[23:10:57] *** Joins: Guest63 (~Guest63@2a02:908:5d2:efe0:849b:f540:bcd1:adbb)
[23:11:41] *** Joins: dimi1947 (~dimi1947@2a02:1388:89:7f68:6967:b38c:54c0:6591)
[23:14:22] <wovixo> Well, that was certainly entertaining. On another topic, I think anonymous functions are the devil, and anyone who disagrees with me is obviously wrong.
[23:15:52] <ljharb> wovixo: you should definitely name all your functions
[23:16:40] *** Quits: paule32 (~paule32@nat-91-137-16-18.net.encoline.de) (Read error: No route to host)
[23:17:24] <wovixo> Yes, with <3 character names. For security.
[23:17:35] <matsaman> function anonymous() { ... }
[23:17:50] *** Joins: stenno (~stenno@user/stenno)
[23:18:22] <MJCD> lol
[23:18:34] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[23:18:35] <MJCD> please do name a literal function "anonymous"
[23:18:58] *** Joins: brian_da_mage (~Neuromanc@user/briandamag)
[23:19:20] <matsaman> function johnqpublic() { ... }
[23:19:59] <MJCD> hahah I like that one actually
[23:20:05] <MJCD> and is traceable
[23:20:17] <MJCD> your coworkers will hate you tho
[23:20:18] <MJCD> ;p
[23:20:55] <matsaman> function shiphassailed() { ... }
[23:23:19] <MJCD> please for the sake of humanity
[23:23:24] <MJCD> use camelCase.
[23:23:34] <MJCD> Without it ISIS would rul 4 sure
[23:23:50] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 265 seconds)
[23:25:21] <ashnur> Mary and Susan discussing That Coupler
[23:25:26] *** Joins: Jigsy (~Jigsy@user/jigsy)
[23:25:38] * MJCD docks with ashnur 
[23:26:25] *** Joins: thiras (~thiras@user/thiras)
[23:26:36] <MJCD> jesus man the content netflix is pushing from "regional" markets to mainstream because of the epidemic....
[23:26:53] <matsaman> like what?
[23:27:03] <MJCD> a lot of it is dubbed well, a lot isn't, and a lot more has no dubbing at all and is the RANDOMEST FUCKING SHIT
[23:27:09] <MJCD> uhh what's this rn, sec
[23:27:24] <MJCD> uwu phone died
[23:27:28] <matsaman> I guess I have no interest in the bollywood stuff
[23:27:40] <MJCD> chrome's media casting remote works ""sometimes""
[23:27:48] <MJCD> such a joke if you ask me for a company of their scale
[23:27:58] <MJCD> netflix will barely even cast from a windows pc
[23:28:03] <MJCD> and they know and don't care
[23:28:31] <MJCD> literally got told to cancel my membership if I didn't like it after my 4th complaint in like a year
[23:28:51] <wovixo> camelCase is old news. Use dOnKeYcAsE.
[23:29:18] <MJCD> wovixo: so is THE BIBLE I GUESS YOU WANT TO DISPUTE THAT NOW TOO HUH
[23:29:19] <ashnur> camelCase isUnReadAble
[23:29:20] <MJCD> ;p
[23:29:27] <MJCD> ashnur: ur nick is
[23:29:40] *** Joins: summersault (~summersau@179.221.251.16)
[23:29:42] <MJCD> ashy nurrrrrrrrr
[23:29:59] <ashnur> what's the weather like in australia?
[23:30:04] *** Quits: Ziyan (~ziyan@112.134.171.44) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[23:30:11] <MJCD> oh ok so that movie was called GOYA It hinkl
[23:30:27] <MJCD> it was one of the worst "regional" things i've seen
[23:30:34] <matsaman> function cause_my_function_names_need_to_be_so_damn_long
[23:30:48] <MJCD> matsaman: u r bannered
[23:30:50] <MJCD> ;p
[23:31:05] <MJCD> my fav is when they use naming instead of propper heirachy
[23:31:11] <MJCD> x_thing_abc
[23:31:20] <MJCD> x_thing_abc_does123
[23:31:23] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4587:207d:9c7d:704d)
[23:31:26] <MJCD> x_thing_abc_does123_eleventytimes
[23:31:32] <wovixo> Function names shall henceforth be three (unicode) characters, no less, no more.
[23:31:47] <matsaman> yes, human minification =P
[23:31:56] <MJCD> wovixo: idk you'd have to talk to uhhh
[23:31:57] <MJCD> shit
[23:32:06] <MJCD> who was it even doing the codegolf here bigtime
[23:32:07] <matsaman> function f1() { ... } function f2() { ... }
[23:32:38] <MJCD> carisma or something
[23:32:46] <MJCD> cantelope! you'd need to talk to them about that
[23:33:03] <MJCD> they're probably still on freenode because they're not actually a real programmer lol
[23:33:08] <wovixo> Any Unicode character. Including those smiley things all the kids are talking about.
[23:33:27] <MJCD> lemme see if i can find ya an example of their work
[23:34:07] <matsaman> oh yeah
[23:34:19] <matsaman> we'll end up having a language that is picture based like CJK langs
[23:34:22] <matsaman> but using emojis
[23:34:30] <MJCD> https://www.dwitter.net/
[23:34:41] <MJCD> this is their site
[23:34:55] <MJCD> you'll know their work when you see it because it will be in chinese characters
[23:34:55] <MJCD> lol
[23:35:04] <matsaman> ha
[23:35:09] <wovixo> Lol. What is that mess? Yikes.
[23:35:33] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[23:35:33] <MJCD> xD
[23:35:39] <MJCD> it's their life
[23:35:50] <MJCD> as I say I don't think they're a career programmer
[23:36:03] <MJCD> more of a hobby imo
[23:36:17] <MJCD> maybe try searching for "canteloupe"
[23:37:26] <matsaman> good portfolio to get hired by a browser company
[23:41:48] *** Quits: hmw[at] (~hmw@2a02:61:a2::b14) (Read error: No route to host)
[23:43:23] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[23:44:06] *** Quits: dimi1947 (~dimi1947@2a02:1388:89:7f68:6967:b38c:54c0:6591) (Quit: Leaving)
[23:44:55] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[23:45:35] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 265 seconds)
[23:47:23] *** Joins: Ziyan (~ziyan@112.134.171.44)
[23:47:58] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[23:52:14] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[23:55:41] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Quit: Must not waste too much time here...)
[23:55:47] <MJCD> yeah nah
[23:55:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[23:56:00] <MJCD> codegolf is literally AND figuratively pointless
[23:56:10] <MJCD> it's a sport as they would say
[23:56:24] *** Quits: guzzlefry (~gus@user/guzzlefry) (Ping timeout: 256 seconds)
[23:57:09] *** Joins: guzzlefry (~gus@user/guzzlefry)
[23:59:21] <wroathe> Arithmetic is the devil, and anyone who disagrees with me is obviously wrong.
[23:59:34] *** Joins: dyslexicat (~dyslexica@176.234.11.153)
[23:59:42] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[23:59:42] *** Joins: hmw[at] (~hmw@public.metalab.wien.funkfeuer.at)
[23:59:52] <wovixo> Agreed. Numbers are satan's playthings.
