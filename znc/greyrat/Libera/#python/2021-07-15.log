[00:00:10] <no_gravity> SnoopJ: repl.it keeps showing me captchas all day and night.
[00:00:16] <SnoopJ> no_gravity, best of luck
[00:00:49] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[00:01:11] *** Joins: Murgoth (Murgoth@user/murgoth)
[00:01:43] <no_gravity> So I installed cssselect locally.
[00:01:53] <no_gravity> Now I get this: NameError: name 'CSSSelector' is not defined
[00:02:10] <no_gravity> Oh, typo ...
[00:03:12] <no_gravity> What is that "fromstring" thingy in the example?
[00:03:25] *** Joins: pnoud (~pnoud@user/pnoud)
[00:03:44] <SnoopJ> a function in lxml.etree
[00:03:54] <no_gravity> How do I get it?
[00:04:02] <SnoopJ> the import statement in the example
[00:04:11] <no_gravity> "from lxml.cssselect import CSSSelector"?
[00:04:19] <no_gravity> Oh that other one ...
[00:04:35] <SnoopJ> no_gravity, names in Python are generally defined either by `name = value` or by imports.
[00:04:50] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[00:05:07] *** Joins: cheater (~Username@user/cheater)
[00:05:51] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[00:05:55] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[00:06:26] <no_gravity> So applying the selector seems to give me an "[<Element div ...>]". How do I get the actual content as a string?
[00:06:34] <no_gravity> Preferably only the text content.
[00:06:56] <SnoopJ> https://lxml.de/tutorial.html
[00:06:58] <dav1d> .text()?
[00:07:30] <SnoopJ> .tostring() is the relevant method
[00:07:31] <no_gravity> dav1d: That gives me this: AttributeError: 'list' object has no attribute 'text'
[00:07:40] <SnoopJ> right, .text is the stuff on the inside of the tag
[00:07:53] <SnoopJ> (and it's a thing you do to an Element, not to a list)
[00:07:55] <dav1d> no_gravity, you can figure it out
[00:07:56] *** Parts: wyclif (~wyclif@user/wyclif) ()
[00:08:21] <no_gravity> This looks somewhat promising: x = sel(html)[0].text
[00:08:27] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 245 seconds)
[00:10:23] <no_gravity> But it does not iterate into the element.
[00:10:34] <no_gravity> I wonder if lxml can extract all text inside an element.
[00:11:06] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 265 seconds)
[00:11:11] <ChrisWarrick> I’m pretty sure there’s a way to get all text
[00:11:40] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[00:11:52] *** Quits: y1n (~y1n@84-115-65-107.wifi.dynamic.surfer.at) (Ping timeout: 246 seconds)
[00:12:47] <ChrisWarrick> no_gravity: perhaps .itertext() would help
[00:12:50] *** Joins: y1n (~y1n@84-115-65-107.wifi.dynamic.surfer.at)
[00:13:13] <salparadise> should be able to  "from lxml import etree" and " etree.tostring(sel(html)[0])"
[00:13:53] *** Quits: emika (~emika@5.181.235.116) (Quit: emika)
[00:14:11] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[00:14:13] *** Joins: emika (~emika@5.181.235.116)
[00:14:19] *** Parts: [-_-] (~fractal@user/---/x-1675478) (WeeChat 3.2)
[00:14:19] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[00:14:53] <no_gravity> salparadise: That contains non-text. For example from <div>Hello<script>alert(1)</script>World</div> it extracts the whole script too.
[00:15:43] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[00:16:00] <no_gravity> ChrisWarrick: I looked at itertext() but it is a mistery to me, how to use it.
[00:16:21] <dale> no_gravity: Try .tostring(method='text')
[00:16:21] <salparadise> yep, misspoke
[00:16:22] <no_gravity> ChrisWarrick: What do they mean by "Iterates over the text content of a subtree."? What do I do with itertext()?
[00:16:22] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 245 seconds)
[00:16:36] <dale> Which I gleaned from https://lxml.de/tutorial.html#elements-contain-text.
[00:16:56] <no_gravity> dale: That also includes the "alert(1)"
[00:17:11] <dale> no_gravity: That is the text part of an element.
[00:17:29] <dale> I guess you want something more like HTML rendering?  Not sure offhand how to do that.
[00:17:41] <no_gravity> dale: In BS4 you can get rid of script like this:  for s in elem.select('script'): s.extract()
[00:17:45] <dale> I'd be considering walking the tree to delete all script elements, then tostring(method='text') I guess.
[00:17:51] <no_gravity> dale: I wonder if lxml can do similar.
[00:19:00] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[00:19:13] *** Joins: dbristow (~dbristow@user/dbristow)
[00:19:52] <dale> Elements have a remove method to remove children.  That's part of the good ol' ElementTree API, https://docs.python.org/3.9/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.remove
[00:20:51] <no_gravity> dale: So what would I pass to remove()?
[00:22:22] <dale> no_gravity: Once you find a "script" element I'd reference its parent and remove it, I suppose: script_elem.getparent().remove(script_elem)
[00:22:45] *** Joins: cheater1__ (~Username@user/cheater)
[00:22:46] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[00:22:47] *** Joins: yaalon (~yaalon@201.171.90.143.dsl.dyn.telnor.net)
[00:22:52] *** cheater1__ is now known as cheater
[00:22:54] <dale> no_gravity: https://stackoverflow.com/a/7981894/2305480 looks like an example of something like this.
[00:23:07] <dale> You could use cssselect instead of xpath, presumably.
[00:23:31] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[00:24:18] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[00:27:10] <no_gravity> dale: Yeah, that works. Thanks!
[00:28:07] <dale> NP.  lxml is a very useful library and worth learning.  I say this as someone who has learned it at least four times.
[00:28:23] <dav1d> https://lxml.de/api/lxml.html.clean.Cleaner-class.html can remove script, link, etc. tags
[00:28:28] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[00:28:31] <no_gravity> dav1d: I just hope it is faster then bs4.
[00:28:39] <no_gravity> It is *insane* how slow bs4 is.
[00:28:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:28:47] <SnoopJ> they don't really do the same thing, but lxml is fast
[00:29:13] <no_gravity> SnoopJ: From my point of view they do the same thing.
[00:29:28] <SnoopJ> no_gravity, well, there's no arguing with that
[00:29:31] *** Quits: Deneb (~johnch@58.111.189.80.dyn.plus.net) (Quit: Leaving)
[00:29:33] <dale> SnoopJ: Does BS really do much that lxml doesn't?
[00:29:54] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 268 seconds)
[00:30:04] <dale> ISTR a time when lxml was much more narrow but over time it has accumulated a lot of functionality, IMHO.
[00:30:07] <SnoopJ> dale, it's a little more thorough than lxml.html when it comes to malformed documents AFAIK, but I don't have a ton of experience on that edge. I usually just assume my doc is valid.
[00:30:15] <SnoopJ> valid XML, that is
[00:30:33] <dale> SnoopJ: Riight, I forgot about that.  I don't actually know how lxml's HTML5 parser fares.
[00:30:36] *** Joins: audiocat (~audio@2603-8081-1800-00ad-2d8c-df58-6f9e-6622.res6.spectrum.com)
[00:30:39] <dav1d> Cleaner(...).clean_html(html).text_content() should work as well
[00:31:11] <no_gravity> dav1d: What is that? Can it help parse malformed html?
[00:31:14] <SnoopJ> dale, it is AFAIK kind of an afterthought, where BS4 is explicitly about HTML. It's certainly possible to write code for either of them that goes slowly.
[00:31:33] <dale> SnoopJ: I agree.
[00:31:35] *** Joins: nmoura (~nmoura@177.192.16.58)
[00:31:51] <The-Compiler> I suppose with BS4 it also depends on what HTML parser you tell it to use?
[00:32:10] <no_gravity> The-Compiler: Even with lxml, bs4 is slower than slow.
[00:32:12] *** Joins: cheater1__ (~Username@user/cheater)
[00:32:22] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[00:32:28] *** cheater1__ is now known as cheater
[00:32:51] <dale> SnoopJ: https://lxml.de/parsing.html#parsing-html says that I guess libxml2 has evolved some support for parsing "broken" HTML, but I feel like "parsing broken HTML" was the raison d'etre for BS from day one.
[00:33:06] <SnoopJ> dale, yea, that's roughly my understanding
[00:33:08] <dav1d> no_gravity, cleaner is a utility to remove certain tags matching on multiple criterias, including removing of script tags
[00:33:22] <no_gravity> dav1d: Is it part of lxml?
[00:33:25] <dav1d> yes
[00:33:26] <dale> dav1d: Oh, that's super-useful.
[00:33:30] <dav1d> https://lxml.de/api/lxml.html.clean.Cleaner-class.html
[00:33:37] <SnoopJ> it's a great library :)
[00:33:46] *** Quits: zoid (~zoid@user/taxationistheft) (Quit: REBOOT ALL THE THINGS)
[00:33:48] <no_gravity> dav1d: Nice. I will experiment with it tomorrow.
[00:34:03] <SnoopJ> not encountered that module before, but it's good to remember for future reference
[00:34:33] <dale> I do find lxml's documentation a bit frustrating at times, I'll say that.
[00:34:51] <dav1d> no_gravity, didnt fully follow your usecase, but it sounds like it could help, find the root tag normally and send that through the cleaner into text_output()
[00:34:52] <no_gravity> dale: It is the horror.
[00:34:56] <dale> And, actually, getting its C extension compiled has been a PITA in certain situations in the past.  I don't recall having had a problem with it recently.
[00:35:06] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:35:06] *** Quits: bambams_ (~bambams@user/bambams) (Remote host closed the connection)
[00:35:08] <no_gravity> dale: Great. Will try that.
[00:35:31] *** Joins: bambams_ (~bambams@user/bambams)
[00:35:34] *** Joins: zoid (~zoid@user/taxationistheft)
[00:36:26] <dale> no_gravity: That was dav1d's find. :)  BTW, if you're doing a bunch of HTML scraping stuff, Scrapy has a few useful utilities of its own, even if you don't use its scraping framework.  For example, I once used its ability to extract "links" from HTML from img, a, link tags, etc.
[00:36:32] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[00:36:42] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[00:36:46] <hexology> why not use beautifulsoup?
[00:36:47] <dav1d> dale, lxml has iterlinks :d
[00:36:51] <hexology> no_gravity dale ^
[00:36:56] <dale> hexology: See above, too slow for use case
[00:36:57] <hexology> beautifulsoup can use lxml internally
[00:37:09] <SnoopJ> hexology, "because it's slow" appears to be the answer
[00:37:30] <no_gravity> hexology: BS is slow. I mean not slow as "slower thant it has to be". I mean *mindblowing* *slow*.
[00:37:53] <hexology> i haven't had to use it in a high-performance situation like a big web crawl, so i guess i never encountered that issue
[00:37:53] <no_gravity> I have been in software development for a few decades now. And BS is the slowest thing I can rememeber.
[00:37:54] <SnoopJ> no_gravity, are you quite sure that it is BS4 that is slow, and not the program you have written with it?
[00:37:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:38:01] <no_gravity> SnoopJ: Yes
[00:38:11] <hexology> i have however used it for "medium-duty" web scraping with the lxml backend and it was fine
[00:38:14] <SnoopJ> no_gravity, why?
[00:38:19] <hexology> it wasn't the bottleneck in my program, at any rate
[00:38:37] <hexology> it's entirely possible that their internal implementation is naive and doesn't make good use of lxml
[00:38:57] <hexology> i'd always encourage benchmarking of course
[00:40:02] <dale> dav1d: Wow, sounds comprehensive.  Thanks again for a tip.  Bonus: you just showed me that my local copy of lxml docs are way out of date.
[00:40:34] <dav1d> mh, if you can trust these benchmarks, beautifulsoup is really really slow (compared to lxml) https://www.crummy.com/2012/01/22/0
[00:40:45] <SnoopJ> it's definitely slower than lxml, yea
[00:41:08] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[00:41:10] <hexology> that is indeed a lot slower
[00:41:11] <hexology> wow
[00:41:16] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[00:41:19] <dav1d> this is like 70 times slower
[00:41:29] <hexology> the caveat at the bottom is interesting
[00:41:30] <zware> I would really not expect 9.5 year old benchmarks to be representative of modern numbers, though
[00:41:35] <dav1d> *7 times on py3
[00:41:39] <SnoopJ> I was about to say :)
[00:41:53] *** Quits: nmoura (~nmoura@177.192.16.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:41:56] <hexology> true, but i wonder how much the code has changed in that time?
[00:41:57] <SnoopJ> ~2 MB/s is nothing to sniff at I think, but lxml by itself can really fly
[00:42:12] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c:9925:18b1:79f7:f242) (Ping timeout: 245 seconds)
[00:42:12] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[00:42:30] <no_gravity> dav1d: I am surprised it is only a factor of 7. I am parsing a few cached websites and it takes 15 seconds. I would have expected something like 0.0something seconds.
[00:42:58] <dav1d> mh, from 2017: https://edmundmartin.com/beautiful-soup-vs-lxml-speed/
[00:43:11] <hexology> 15 seconds seems really slow
[00:43:13] <dav1d> but this is probably very dependent on the documents
[00:43:19] <no_gravity> dav1d: Sure
[00:43:21] <hexology> no_gravity can you share your code? or are these really really huge html files?
[00:43:40] *** Joins: CombatVet (~c4@user/combatvet)
[00:43:52] <dav1d> no_gravity, sounds like there is something else wrong, if this is just "normal" webistes (size wise), this should never take 15 secs
[00:44:08] <hexology> +1
[00:44:30] <no_gravity> dav1d: Depends on the number of websites and the number of queries.
[00:45:05] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:22] <SnoopJ> no_gravity, and you have measured your program and the bulk of the 15 seconds is spent in BS4?
[00:45:33] <no_gravity> dav1d, hexology: The code: https://pastebin.com/raw/2BTVDVME
[00:45:34] <dale> Any Pydantic users around?  I'd like to parse a dict with Pydantic, but have the dict keys used to construct the objects that will be the dict's values as well.  Hopefully this illustrates what I'm trying to accomplish: https://bpa.st/YVJA
[00:46:14] <hexology> maybe this is inefficient because you're making several passes over the parsed html tree?
[00:46:20] <no_gravity> dav1d, hexology: Doing this 60 times (6 queries on 10 documents) takes 15 seconds.
[00:46:31] <dale> I guess I could make a pre=True validator that copies the key into a "name" key in each event dict, but that seems even uglier than should be necessary.
[00:46:42] <SnoopJ> dale, presumably you mean `events.events[...]` in those asserts? This looks like it might be a good case for a classmethod.
[00:47:08] <SnoopJ> i.e. `events = Events.from_yaml("test.yaml")`
[00:47:09] <dale> SnoopJ: Yes, you're right.
[00:47:19] <dale> SnoopJ: Also a good call.
[00:47:27] <hexology> .select is probably also slower than .find
[00:47:45] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[00:47:48] <no_gravity> hexology: I can benchmark that. Are they equivalent for this usecase?
[00:47:58] <hexology> .select is for general-purpose CSS selectors
[00:48:18] <hexology> it uses a whole separate searching mechanism which id be willing to bet is a lot slower and probably doesn't "fall back" to the fast path for simple cases like this
[00:48:27] *** Joins: cul8r (~cul8r@c-73-26-110-61.hsd1.nm.comcast.net)
[00:48:40] <dale> SnoopJ: Really Events is superfluous for the most part, I just need a dict at the top level there.
[00:48:51] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:1c9d:1445:85be:3fba)
[00:49:17] *** Quits: emika (~emika@5.181.235.116) (Ping timeout: 268 seconds)
[00:49:50] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[00:49:59] *** Joins: emika (~emika@5.181.235.116)
[00:50:09] <dale> Updated: https://bpa.st/SFQA
[00:50:17] <no_gravity> hexology: using find() instead of select() brought the time down to 13.7s
[00:50:38] <dale> There's probably a better way to do that but that's besides the point.  The real question is how to get Pydantic to smuggle the dict keys like EventFoo and EventBar into the Event constructor?
[00:51:01] *** Quits: cul8r (~cul8r@c-73-26-110-61.hsd1.nm.comcast.net) (Remote host closed the connection)
[00:51:08] *** Quits: yaalon (~yaalon@201.171.90.143.dsl.dyn.telnor.net) (Remote host closed the connection)
[00:51:20] *** Joins: cul8r (~cul8r@c-73-26-110-61.hsd1.nm.comcast.net)
[00:51:35] <no_gravity> hexology: Oh! It does not behave the same way!
[00:51:46] <no_gravity> hexology: find() is not the same as select()[0]
[00:51:52] <hexology> it definitely isn't
[00:52:08] <hexology> but in the case where you are just looking for script and style tags, find_all() should be faster
[00:52:20] <no_gravity> hexology: Lets see ...
[00:52:36] <SnoopJ> dale, I find the automagic parsing/etc. to work best when the correspondence is pretty exact, which isn't the case here :(
[00:52:42] <SnoopJ> hence the notion of a classmethod
[00:52:43] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[00:52:55] *** Joins: cheater (~Username@user/cheater)
[00:53:23] *** Joins: skapata (~Skapata@user/skapata)
[00:53:27] <hexology> no_gravity is this faster? https://bpa.st/B6QA
[00:53:33] <no_gravity> hexology: Same performance. Using find_all() instead of select() to find the scripts and styles results in the same old 15.5s
[00:54:34] <dale> SnoopJ: Maybe I don't understand what you're proposing the classmethod to do.  Are you perhaps saying it should iterate over top_level['events'].items() and just instantiate Event itself directly?
[00:54:41] *** Joins: azazello (~azazello@109.75.158.195)
[00:54:58] <no_gravity> hexology: That function is not equivalent
[00:55:27] <hexology> no?
[00:55:34] <hexology> oh sorry not class
[00:56:02] <hexology> https://bpa.st/OBTA
[00:56:03] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[00:56:21] <no_gravity> hexology: That function is also not equivalent
[00:56:25] <hexology> no?
[00:56:34] <no_gravity> hexology: It takes two arguments to begin with.
[00:56:47] <hexology> ...
[00:56:48] *** Joins: nmoura (~nmoura@177.192.16.58)
[00:57:09] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[00:57:13] <SnoopJ> dale, yea, exactly. Something like this: https://bpa.st/VTQA
[00:57:27] <hexology> no_gravity: look at the rest of the code?
[00:57:46] <no_gravity> hexology: You mean merging the two extract loops?
[00:57:46] <SnoopJ> dale, you could also totally avoid the separate helper there, I just found it convenient to write one :)
[00:58:04] <SnoopJ> i.e. `events = []; for event_name, event_params in ...: events.append(...)`
[00:58:27] <hexology> no_gravity yes, your original code makes 2 passes over the data, this makes 1
[00:58:46] <no_gravity> hexology: I can try but I am sure that makes no difference.
[00:58:57] <hexology> it would make a difference if the html file is really big
[00:59:00] <no_gravity> hexology: 15.578s
[00:59:01] <dale> SnoopJ: Yeah, that works, maybe I should go that way.  Events doesn't even need to subclass BaseModel then.  Thanks for the suggestion.  I was hoping for a even-remotely-inside-the-box Pydantic way to do it, but like you I tend to get disappointed by these automatic parsing things pretty quickly.
[00:59:48] <SnoopJ> dale, if your data is negotiable, you can totally spell it in a way that lets you rehydrate your model directly, but if you're stuck with *that* format, a classmethod is practical here
[01:00:03] <SnoopJ> since it doesn't really correspond to the data model the classes form
[01:00:07] <hexology> no_gravity: one find_all() call is slower than two select() calls? i find that surprising
[01:00:28] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:00:52] <no_gravity> hexology: Noise
[01:01:01] <dale> SnoopJ: I'm making the data model, so I could change it, but my #1 concern is that the YAML be easy for humans to read/write.
[01:01:08] <hexology> 2 seconds is a lot of noise. i'm not saying you have to use bs4 of course, but if you really need css selectors then it might be your best option
[01:01:12] <dale> SnoopJ: So I'm currently fond of this format.
[01:01:24] <dale> SnoopJ: (It's slightly more complicated than illustrated in my pithy example.)
[01:01:29] <no_gravity> hexology: Not 2 seconds. 15.5s was the baseline.
[01:01:57] <no_gravity> hexology: I am pretty convinced BS4 is to be avoided. I will write my own layer on top of lxml tomorrow.
[01:02:05] <SnoopJ> dale, I'm of the opinion that YAML makes this pretty hard writ large, but I hear you. Yea, if it's not exact, it's best to write the necessary glue. It doesn't _have_ to be a classmethod, FWIW, I just find that organizationally useful.
[01:02:06] <hexology> that might well be the case
[01:02:23] <SnoopJ> dale, you could just as well have `events_from_yaml()` floating around in a module namespace
[01:02:32] * hodapp sees YAML, walks back into bushes
[01:02:39] <no_gravity> Thanks for the nice discussion everyone! Gotta go!
[01:02:40] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[01:03:04] <grym> hodapp: wait wait you dropped a !python_tuple
[01:03:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:04:07] *** Joins: Auron (~Auron956@user/auron)
[01:04:21] <dale> I need to describe a bunch of events that'll go out over a message bus in a way that can't be Python-centric and I don't want to use JSON schema because it's too hard to read and generate docs from IMHO.  Are there better formats for this?
[01:04:29] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:04:45] <grym> dale: toml comes up a bunch
[01:04:52] <grym> after that,i'm out of ideas
[01:04:54] <hexology> https://bpa.st/E5CLJOKV535H44LDPVYKX75WTM  <-- i currently have this ugly hack. is there a less ugly way to do it? in my metaclass, i want to perform a certain check on subclasses of a certain base class, but not perform the check on the base class itself. this was my workaround for the fact that the class doesn't actually exist yet when i'm doing the check.
[01:04:56] <SnoopJ> dale, that description makes me think of protobuf
[01:05:08] <SnoopJ> probably prototxt since you're prioritizing humans
[01:05:11] *** Parts: rvt (~rvt@librecad/rvt) ()
[01:05:19] <dale> grym: I'm aware of TOML but it seems no easier to read than YAML (again IMHO) and probably has less language support and fewer people who know it.
[01:05:26] <SnoopJ> it has fewer footguns
[01:05:31] <hexology> dale: fwiw i've had a good experience with jsonschema, although i agree it can be hard for humans to read. you _can_ dump the jsonschema to yaml. or are you saying that yaml is hard to read too?
[01:05:40] <dale> SnoopJ: TOML has fewer footguns than YAML?  Sure, I accept that.
[01:06:03] <dale> *Personally* I have trained myself to avoid the most common YAML footguns and it has served me well in the past.  I also don't live in Norway.
[01:06:06] <SnoopJ> dale, yea. I wouldn't choose it for what you describe, though. It's better as a configuration language than carrying data of this sort
[01:06:07] * dale looks at grym.
[01:06:21] * dale looks at prototxt.
[01:06:24] <grym> dale: i am also despondently free of fjords
[01:06:39] <hexology> what is prototxt? i didn't see any relevant-looking results on DDG
[01:06:40] <grym> free? bereft.
[01:06:44] * hodapp looks at "A First Course in Bayesian Statistical Methods"
[01:06:50] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:07:24] <grym> hexology: a googly data serialization format
[01:07:37] <hexology> seems like it's a text-based format for protobuf?
[01:07:38] <SnoopJ> hexology, protobuf is a google message format, and prototxt is a text-y way to spell out such a message
[01:07:46] <dale> SnoopJ: Oh, that reminds me to go look at Avro.
[01:07:55] <hexology> got it
[01:07:55] <SnoopJ> dale, that's a new one on me
[01:08:02] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[01:08:04] <dale> "Avro schemas are defined with JSON."
[01:08:14] <SnoopJ> I do like Apache though :)
[01:08:14] <hexology> does it work better for complicated python objects than json?
[01:08:14] <hodapp> a guy at the hackerspace was just complaining to me yesterday about the pain of having to shoehorn an object hierarchy into protobuf
[01:08:15] <dale> Right, so, let's learn Protobuf for a minute.
[01:08:31] *** Joins: cheater (~Username@user/cheater)
[01:08:42] <meejah> look at msgpack too
[01:08:42] <SnoopJ> hexology, it depends strongly on your personal aesthetics, but protobuf is more suited to "messages SHALL have such-and-such format" than is JSON
[01:08:55] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[01:09:04] <SnoopJ> I mean, there's JSONSchema, but it's kind of a kludge
[01:09:19] <hexology> because the latter would require JSONSchema which can be a bit ugly and is still somewhat of a WIP after all these years
[01:09:24] <meejah> protobuf is great if you have different versions of services on the wire at once .. but comes at price of generated code (yuck)
[01:09:33] *** Quits: mokulus (~mokulus@user/mokulus) (Ping timeout: 258 seconds)
[01:09:35] <philipp64|work> if I have a list (x509.Name) of objects which name oid and value accessors, is there a compacy way to convert this into a dictionary?
[01:09:37] <hexology> (although i use jsonschema and get a lot of mileage from it)
[01:10:06] <grym> philipp64|work: what's a (x509.Name)
[01:10:12] <SnoopJ> Pydantic's ability to generate a JSON schema is really nice
[01:10:28] <SnoopJ> you just write Pydantic and get the corresponding schema for free :)
[01:10:37] <dale> I honestly doubt I'm going to get buy-in to switch from JSON to Protobuf (or msgpack or whatever) on the wire.
[01:10:39] *** Quits: nmoura (~nmoura@177.192.16.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:10:44] * SnoopJ nods
[01:10:57] <hexology> yep it's great. i've used marshmallow-jsonschema in the past, but the ease of having attrs+marshmallow+marshmallow-jsonschema all in one place is compelling
[01:10:57] <SnoopJ> it sounds like you've settled on YAML as the best balance for your many constraints
[01:11:10] <SnoopJ> hexology, yea, it's nice not to juggle an entire ecosystem
[01:11:21] <dale> SnoopJ: Well, "Proto3 supports a canonical encoding in JSON"
[01:11:36] <SnoopJ> I do prefer the way attrs spells its classes, but Pydantic isn't *too* painful if you can stay away from the really fancy stuff
[01:11:37] <meejah> msgpack is definitely better than json IMO .. but maybe not for like APIs and stuff where "interop" is huge concern
[01:11:39] <philipp64|work> grym: see cryptography.io.  but the point is I have a list(obj) and obj has obj.oid and obj.value accessors… so I want to create a dictionary keyed by *.oid with a value of *.value
[01:11:39] * SnoopJ glances at validators
[01:11:48] *** Quits: y1n (~y1n@84-115-65-107.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[01:11:56] <hexology> this is definitely less ugly than jsonschema https://developers.google.com/protocol-buffers/docs/pythontutorial
[01:11:57] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:12:06] <meejah> there's also flatbuffers if parsing speed is a concern
[01:12:07] <grym> philipp64|work: easy; `my_dict = {o.oid:o.value for o in my_list_of_os}`
[01:12:10] *** Joins: akk (~akk@97-123-109-214.albq.qwest.net)
[01:12:13] <SnoopJ> the only thing I can think of off-hand that is uglier than jsonschema are xml schemas heh
[01:12:25] <dale> meejah: In fairness, I'm not sure it takes much to be prettier than writing JSON schema, by hand, in JSON. ;)
[01:12:27] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:12:28] <grym> SnoopJ: with the tradeoff that when they say SHALL they _mean_ it
[01:12:39] <dale> SnoopJ: DTDs?
[01:12:39] *** Joins: y1n (~y1n@84-115-64-73.wifi.dynamic.surfer.at)
[01:12:55] <hexology> there's also the capn proto library right?
[01:13:12] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[01:13:29] <philipp64|work> grym: is that python3?
[01:13:29] <meejah> capn'proto is like protobuf2 .. and flatbuffers is sort-of like just the "serialization" part of capn'proto
[01:13:30] <SnoopJ> dale, any XML schema, really. DTDs have some extra magic to worry about heh
[01:13:33] *** Joins: ano (~weechat@user/ano)
[01:13:44] <grym> philipp64|work: should be fine in python2, as well
[01:14:04] *** Joins: nmoura (~nmoura@177.192.16.58)
[01:14:22] <grym> philipp64|work: dict comprehensions are pretty old iirc
[01:14:46] <dale> Python 2.7 I think.
[01:15:27] <dale> msgpack.org seems broken.
[01:15:47] <grym> philipp64|work: https://bpa.st/U74A
[01:15:48] <SnoopJ> huh, it was 2.7 wasn't it
[01:16:07] <SnoopJ> the PEP dates to ~2.3 but was withdrawn
[01:17:05] *** Quits: Blackpajamas (~Blackpaja@167.167.46.2) (Quit: Blackpajamas)
[01:17:39] <philipp64|work> grym: thanks.  Seems there should be a more compact way to do this… https://bpa.st/JXUA
[01:19:14] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[01:20:34] *** Joins: jess (~jess@libera/staff/jess)
[01:20:55] <dale> meejah: Good point about the generated code, that's a bit of a bummer.
[01:22:22] <dale> Wikipedia: "FlatBuffers is a free software library implementing a serialization format similar to Protocol Buffers, Thrift, Apache Avro, SBE, and Cap'n Proto"
[01:22:33] <dale> I can't help but think the author was trying to hint the reader of something there.
[01:24:13] *** Quits: nmoura (~nmoura@177.192.16.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:24:35] <dale> I found this while looking to see if the world is still using CORBA IDL for something.
[01:26:01] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[01:26:11] *** Joins: cheater (~Username@user/cheater)
[01:28:29] * SnoopJ thought dale meant *that* IDL for a moment
[01:28:31] *** Joins: qlixed (~qlixed@host180.181-9-125.telecom.net.ar)
[01:28:34] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:28:55] <dale> Wait, I thought CORBA's IDL is *that* IDL.  There's another?
[01:29:18] <SnoopJ> dale, the bane of astrophysicists everywhere: https://en.wikipedia.org/wiki/IDL_(programming_language)
[01:29:37] <dale> Oh, right, no, not that one.  I hadn't heard of that until Wikipedia sent me to the "wrong" page.
[01:30:10] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 272 seconds)
[01:30:27] <dale> SnoopJ: Thank you for pointing out Protobuf.  The format for defining the schema here looks pretty palatable, and apparently "Proto3" (which I take to be the most recent version of Protobuf) will do JSON serialization and deserialization, if my quick skim was correct, so I might be able to talk people into using this in the future.
[01:30:35] <dale> Seems like there's wide language support, too.
[01:30:44] <SnoopJ> dale, it *really* shines when something hits the wire
[01:30:50] <dale> I am pretty unexcited by the code generation but I'm willing to give it a try.
[01:30:52] <SnoopJ> which sounds roughly like what you're doing
[01:31:09] *** Quits: Liblx (~Alex@2a02:810c:280:59c:4960:d906:b2df:18) (Quit: WeeChat 3.1)
[01:31:33] *** Quits: magla (~gelignite@55d46309.access.ecotel.net) (Quit: Stay safe!)
[01:31:39] <dale> Dropping "event messages" onto AWS SNS/SQS today, for other teams to consume.
[01:31:48] <SnoopJ> dale, and thanks for the pointer to Avro, the RPC seems pretty cool
[01:32:29] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[01:32:33] *** Joins: oriba (~oriba@dynamic-089-014-111-212.89.14.pool.telefonica.de)
[01:33:02] <dale> SnoopJ: I think I fell into Avro because I'm becoming acquainted with Kafka, and I think Kafka may have some special support for Avro schemas.
[01:33:05] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:33:29] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[01:33:36] *** Quits: sazawal (~sazawal@182.68.81.25) (Quit: Leaving)
[01:33:39] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-39.range86-150.btcentralplus.com) (Quit: Leaving.)
[01:34:14] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[01:34:40] *** Joins: cheater (~Username@user/cheater)
[01:34:49] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[01:35:16] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[01:36:19] <dale> And in case anyone else is having trouble remembering which Apache project has some special support for like zero-copy arrays/dataframes, I think I was thinking of "Arrow".
[01:36:39] <grym> dale: that sounds right
[01:36:41] <dale> (Does anyone even use Apache the web server anymore.)
[01:36:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:36:47] <dale> (Besides me.)
[01:36:55] <grym>  dale: yes and they're often very loud about how it's Perfectly Fine Thank You
[01:36:56] <grym> :D
[01:37:19] <dale> grym: WELL IT IS YOU KNOW
[01:37:26] <grym> i have at least one apache-served webpage, i know!
[01:38:19] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:38:19] <akk> dale: I still use apache, I guess I'm a dinosaur.
[01:38:49] <dale> Cap'n Proto: we have chosen to start all of our schema definitions with a large random hex number because we believe all first time experiences should immediately have a "WTF" moment.
[01:39:28] <dale> akk: I would tell you what version of Apache I have on one of my servers but you'd probably just go exploit it.
[01:40:54] *** Joins: jiffy (elijah@has.a.fluffy.sh33p.org)
[01:41:03] *** Joins: zebrag (~chris@user/zebrag)
[01:41:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[01:42:02] <jiffy> I keep getting removed, is it when my nick logs out for some reason?
[01:42:39] *** Joins: pycurious (~Adium@user/pycurious)
[01:43:12] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:43:13] *** Quits: SilverFox (~joe@user/kenwoodfox) (Quit: WeeChat 2.8)
[01:45:23] <grym> jiffy: when you log out, you log out..
[01:45:24] *** Quits: LonEagle (~LonEagle@user/loneagle) (Remote host closed the connection)
[01:45:27] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 255 seconds)
[01:45:54] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Remote host closed the connection)
[01:46:00] <SnoopJ> jiffy, your last quit was a ping timeout
[01:46:17] <SnoopJ> presumably your client lost its connection to the server
[01:46:47] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 245 seconds)
[01:47:06] *** Joins: tkr (tkr@user/tkr)
[01:47:34] *** Joins: zebrag (~chris@user/zebrag)
[01:47:38] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[01:48:01] *** Joins: zebrag (~chris@user/zebrag)
[01:49:24] *** Joins: koolazer (~koo@user/koolazer)
[01:50:13] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 246 seconds)
[01:52:53] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b842-d119-7737-43fd.res6.spectrum.com) (Read error: Connection reset by peer)
[01:53:02] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 245 seconds)
[01:54:47] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 258 seconds)
[01:55:11] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[01:55:21] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[01:58:27] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 245 seconds)
[01:58:39] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[01:59:51] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 265 seconds)
[02:00:14] <SnoopJ> mypy: what's the right way to handle this kind of branching assignment? https://bpa.st/FFHQ  (`bar: t.Optional[int]` before the conditional does work, but it's hideous)
[02:00:39] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: Textual IRC Client: www.textualapp.com)
[02:01:20] <BrenBarn> why is that hideous?
[02:01:23] *** Joins: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster)
[02:01:40] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[02:02:29] <SnoopJ> BrenBarn, it's visually noisy, I'd much rather annotate in-place if I can
[02:03:26] *** Joins: nmoura (~nmoura@177.192.16.58)
[02:04:15] *** Joins: pnoud (~pnoud@user/pnoud)
[02:05:09] <BrenBarn> visual noise is all type annotations are :-)
[02:06:29] <jiffy> ok thx guys, I use a bnc and this was the only channel missing, I just wondered as I notice I have to log back in to NickServ sometimes after a few days maybe.
[02:06:34] <SnoopJ> BrenBarn, let's say that I will not accept it in my codebase for personal aesthetic reasons, I'd like to know what my other options are.
[02:07:26] *** Joins: dkmueller (~dkmueller@2a01:c22:7a6f:d00:2844:ba9b:a45:d9b2)
[02:08:08] <jiffy> I think the correct term is identify with NickServ not log in.
[02:08:34] *** Quits: Akuli (~Akuli@213.216.211.133) (Ping timeout: 268 seconds)
[02:08:43] <SnoopJ> jiffy, you were not being disconnected by network services, it was a connection timeout
[02:09:21] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[02:09:44] <jiffy> yes I think that was something else though, as I started my vpn after I connected to irc, but no matter, I just wondered. :]
[02:10:07] *** Quits: d00gy (~tonberry@2601:401:c400:8b30:ba27:ebff:fee2:f93c) (Ping timeout: 245 seconds)
[02:11:49] *** Quits: cedric (~cedric@2a01:cb11:867:c200:a358:e568:3dc8:d124) (Quit: Konversation terminated!)
[02:11:54] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[02:12:02] *** Quits: y1n (~y1n@84-115-64-73.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[02:12:42] <SnoopJ> huh, if I reverse the conditional, there's no type conflict. What the heck.
[02:12:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:13:00] *** Joins: y1n (~y1n@84-115-64-73.wifi.dynamic.surfer.at)
[02:13:26] *** Joins: roguelazer_ (~jbrown@sietchtabr.roguelazer.net)
[02:13:47] *** Quits: roguelazer (~jbrown@sietchtabr.roguelazer.net) (Ping timeout: 252 seconds)
[02:13:53] *** Joins: d00gy (~tonberry@2601:401:c400:8b30:ba27:ebff:fee2:f93c)
[02:15:36] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[02:15:51] *** Joins: cheater (~Username@user/cheater)
[02:16:14] <rendar> is this janus queue really useful in real world production projects?
[02:18:28] *** Quits: nmoura (~nmoura@177.192.16.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:18:52] *** Quits: rendar (~rendar@user/rendar) ()
[02:19:17] *** Joins: nmoura (~nmoura@177.192.16.58)
[02:20:39] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:21:02] *** Joins: Akuli (~Akuli@82-203-164-44.bb.dnainternet.fi)
[02:21:16] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[02:21:38] <graingert> rendar: I've never needed it, I just use an async queue
[02:21:53] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:22:15] <graingert> And then use anyio.from_thread.run(queue.put)
[02:23:15] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:23:22] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[02:24:56] <SnoopJ> ahh, assigning None before some other type is a special case, and I guess it doesn't work in the other order. That's how I'll write it I guess
[02:25:05] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[02:25:21] <BrenBarn> yeah just saw that in an a mypy issue discussion
[02:25:51] <BrenBarn> I think I would find the external annotation (before the conditional) clearer
[02:26:13] <SnoopJ> it's laid out here near the bottom of the section: https://mypy.readthedocs.io/en/stable/kinds_of_types.html#optional-types-and-the-none-type
[02:26:23] <SnoopJ> ctrl+f "assign both"
[02:26:35] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:27:02] *** Joins: p-i-_ (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net)
[02:27:21] *** Quits: p-i- (~Ohmu@node-rfq.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[02:28:01] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[02:28:09] <SnoopJ> and I guess that only works for the first such non-None assignment, doesn't seem to gather other assignments into a Union (but I can kinda understand this)
[02:28:57] *** Joins: c10l (~c10l@89.34.167.207)
[02:29:40] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:33:02] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:36:33] *** Joins: fcjsx (~fcjsx@2800:a4:803:1100:a5ad:b04:3349:206)
[02:36:47] *** Quits: fcjsx (~fcjsx@2800:a4:803:1100:a5ad:b04:3349:206) (Remote host closed the connection)
[02:37:51] *** Quits: emika (~emika@5.181.235.116) (Quit: emika)
[02:39:39] *** Quits: Vision (~Vision@024-178-231-009.res.spectrum.com) (Read error: Connection reset by peer)
[02:40:00] *** Quits: Akuli (~Akuli@82-203-164-44.bb.dnainternet.fi) (Quit: Leaving)
[02:40:02] *** Joins: Vision (~Vision@024-178-231-009.res.spectrum.com)
[02:40:38] *** Joins: rajkosto (~rajkosto@178-221-117-77.dynamic.isp.telekom.rs)
[02:41:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 252 seconds)
[02:42:21] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[02:42:22] *** Quits: akk (~akk@97-123-109-214.albq.qwest.net) (Ping timeout: 272 seconds)
[02:43:01] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[02:43:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[02:44:17] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:44:19] *** Joins: ST47 (~ST47@wikimedia/st47)
[02:44:24] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[02:44:27] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:44:44] *** Joins: cheater (~Username@user/cheater)
[02:45:18] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 255 seconds)
[02:46:37] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[02:47:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[02:47:17] *** Quits: MemoriaVetusta (~MemoriaVe@95.181.232.11) (Ping timeout: 255 seconds)
[02:47:33] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 255 seconds)
[02:48:50] *** Quits: nmoura (~nmoura@177.192.16.58) (Ping timeout: 258 seconds)
[02:49:37] *** Joins: finsternis (~X@23.226.237.192)
[02:50:26] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[02:51:39] *** Joins: ham5urg (~ham5urg@212.39.104.196)
[02:52:15] <ham5urg> Is there a container like C++ std::set ?
[02:52:50] <ham5urg> I would like to kick out the multiple entries of string inside an array
[02:53:33] <nedbat> ham5urg: set()
[02:53:48] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[02:53:59] <nedbat> ham5urg: and you probably mean list instead of array?
[02:54:13] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[02:55:35] <SnoopJ> ham5urg, do you care about order? set() is like std::unordered_set
[02:56:30] <ham5urg> Snoop3, I see, order in my case is no problem.
[02:56:41] <SnoopJ> then yep, set() is what you want :)
[02:57:20] <ham5urg> nedbat, I did not know that set() is a Python build in.
[02:57:24] *** Joins: skapata (~Skapata@user/skapata)
[02:57:26] <ham5urg> Thanks guys
[02:58:01] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[03:00:43] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[03:00:54] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:01:20] *** Joins: cheater (~Username@user/cheater)
[03:01:54] *** Quits: smqra (~rooba@208.110.85.44) (Quit: WeeChat 1.9.1)
[03:02:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[03:02:28] *** Quits: c4017w (~c4017@209.52.68.8) (Quit: Leaving)
[03:04:06] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[03:04:25] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[03:04:29] *** Quits: codificat (~pep@66.red-79-154-168.dynamicip.rima-tde.net) (Quit: leaving)
[03:04:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:04:50] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[03:06:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:07:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:08:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:08:48] *** Joins: rpkilby_ (~rpkilby@2600:100f:b115:e07e:8c8f:50b9:bf18:adae)
[03:09:32] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[03:09:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:10:15] *** Joins: Gerula_ (~Gerula@user/gerula)
[03:10:15] *** Quits: Gerula (~Gerula@user/gerula) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[03:10:15] *** Gerula_ is now known as Gerula
[03:11:51] *** Quits: y1n (~y1n@84-115-64-73.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[03:12:00] *** Joins: y1n (~y1n@84-115-64-73.wifi.dynamic.surfer.at)
[03:12:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 255 seconds)
[03:12:37] *** Joins: rpkilby__ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:12:56] *** Quits: dkmueller (~dkmueller@2a01:c22:7a6f:d00:2844:ba9b:a45:d9b2) (Ping timeout: 255 seconds)
[03:13:49] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:14:11] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[03:14:30] *** Joins: zebrag (~chris@user/zebrag)
[03:15:40] *** Joins: Crassus (~Crassus@user/crassus)
[03:15:40] *** Quits: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster) (Quit: Leaving)
[03:16:06] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[03:16:21] *** Quits: rpkilby_ (~rpkilby@2600:100f:b115:e07e:8c8f:50b9:bf18:adae) (Ping timeout: 255 seconds)
[03:16:38] <CuriousErnestBro> hello habnabit_
[03:16:48] <CuriousErnestBro> Naan` alledges we'd be friends
[03:16:51] <CuriousErnestBro> wanna be friends ◡̈
[03:17:49] <Naan`> that was said in jest in a different channel. This is not the place for trolling and idle chit chat CuriousErnestBro
[03:17:52] <SnoopJ> CuriousErnestBro, note that gender hijinks can and will get you banned from #python.
[03:18:03] *** Joins: fofoni (~fofoni@user/fofoni)
[03:18:12] <SnoopJ> s/gender hijinks/deliberate disrespect wrt. gender/
[03:19:02] <CuriousErnestBro> thanks for informing me
[03:19:25] <SnoopJ> sure
[03:19:47] *** Quits: justache (~justache@user/justache) (Excess Flood)
[03:19:56] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Quit: Client closed)
[03:20:14] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[03:20:58] *** Joins: justache (~justache@user/justache)
[03:22:07] *** Joins: cheater1__ (~Username@user/cheater)
[03:22:16] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[03:22:24] *** cheater1__ is now known as cheater
[03:24:44] *** Joins: doc|work (~doc@user/doc)
[03:25:12] <doc|work> I've precommit set up on my project and it works for most files but ignores tests. Anyone come across that problem and can suggest a fix?
[03:25:42] <SnoopJ> doc|work, can we see your .pre-commit-config.yml?
[03:25:48] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 255 seconds)
[03:26:15] <doc|work> SnoopJ, https://paste.ubuntu.com/p/QKmpc2VNHH/ thanks for looking
[03:26:52] <doc|work> I should probably check for updated revs too
[03:27:27] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[03:27:36] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 255 seconds)
[03:28:05] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[03:28:21] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[03:28:34] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[03:29:49] <doc|work> nope, no change on update
[03:32:25] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[03:32:29] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[03:33:02] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 272 seconds)
[03:34:07] <SnoopJ> hmm, I don't think there's anything to those hooks that would ignore tests
[03:34:30] <SnoopJ> doc|work, you're seeing pre-commit not running some (which?) of those hooks over test files that you've staged for a commit?
[03:36:23] <doc|work> SnoopJ, right, but I'm running it manually. It's not doing its most fundamentalist militant action, replacing single quotes with double quotes on strings :) Nor is it fixing spacing above classes (I added those to confirm it wasn't working)
[03:36:51] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.2)
[03:36:57] *** Quits: qlixed (~qlixed@host180.181-9-125.telecom.net.ar) (Quit: That's all folks!!)
[03:37:06] *** Quits: oriba (~oriba@dynamic-089-014-111-212.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:37:09] <doc|work> (so it's black)
[03:38:10] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[03:38:52] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[03:39:55] *** Quits: iomari891 (~iomari891@105.112.138.38) (Remote host closed the connection)
[03:43:05] <doc|work> huh, ok, so if I stage it then it does find it. I thought it was on all files, not just staged ones. May be pebkac I guess...
[03:44:13] <doc|work> the documentation reads like --all-files should work on, well... all files, so not sure what's happening
[03:44:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[03:47:53] *** Joins: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com)
[03:48:05] <horribleprogram> habnabit_: yo I think ur wrong about what u said 3 years ago
[03:48:12] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[03:48:14] *** Joins: ali1234 (~al@user/ali1234)
[03:49:00] <doc|work> o.O
[03:50:21] <horribleprogram> i asked the best way to combine 2 dictionaries
[03:50:54] <horribleprogram> and guess what, I said they should add a Union Operator to dict
[03:51:19] <horribleprogram> he said it would be "ineffective"
[03:51:37] <habnabit_> horribleprogram, not a he
[03:51:52] <nedbat> horribleprogram: let's just enjoy the new feature. no one is right all the time.
[03:51:52] <horribleprogram> sorry they said it would be ineffective
[03:51:57] <horribleprogram> well I was
[03:52:14] <horribleprogram> and I'm right almost always, just saying
[03:52:17] <nedbat> horribleprogram: yes, that time :)  no one likes a sore winner
[03:52:24] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[03:52:34] <horribleprogram> :'(
[03:53:21] <horribleprogram> I'm sorry it's just no one even likes me and I said many times that my ideas are really impressive and they end up implementing them
[03:53:45] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[03:53:46] <horribleprogram> nedbat: how have u been
[03:54:32] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[03:54:36] <nedbat> horribleprogram: i'm good :)
[03:54:43] <horribleprogram> nice :D
[03:54:44] *** Joins: c4017w (~c4017@209.52.68.8)
[03:54:58] <horribleprogram> I miss this channel used to pop in all the time, not doing much python nowadays
[03:55:16] <horribleprogram> restarting brb
[03:55:20] <meejah> horribleprogram: there's also #python-offtopic :)
[03:55:21] *** Quits: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com) (Quit: Leaving...)
[03:55:43] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[03:56:59] *** Joins: tims (~tims@193-82-234-90.tpgi.com.au)
[03:57:36] <doc|work> what's the benefit of a union over .extend or +? Is there one?
[03:58:27] <nedbat> doc|work: .extend modifies the dict, union produces a new dict.  and union is the same thing proposed for + I think
[03:58:27] *** Parts: ammernico (~chat@pd95da482.dip0.t-ipconnect.de) (WeeChat 3.2)
[03:58:57] * doc|work nods
[03:59:35] <doc|work> just wondering what the benefit of it was, like, if it's faster or something. Seems to be another way of doing much the same thing (but sure, one is a modification)
[03:59:58] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[04:00:38] <meejah> i think it's best to write code that semantically makes the most sense (then, if it's slow, profile it and fix the slowest parts)
[04:00:58] <meejah> so, "self.stuff.extend(more_stuff)" might make semantically more sense / easier to read than .. other things?
[04:03:28] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[04:03:44] <doc|work> huh, I actually thought there already was a dict +. Guess not!
[04:04:06] <doc|work> there's -, but no +
[04:04:15] <nedbat> doc|work: dict has minus?
[04:04:32] <doc|work> nedbat, s1 − s2:  set difference, returns elements which are in s1 but not in s2.
[04:04:35] <doc|work> https://www.geeksforgeeks.org/python-operators-for-sets-and-dictionaries/
[04:04:48] * doc|work tried + first and then started ddg-ing
[04:04:53] <nedbat> doc|work: oh, sets, yes.
[04:05:05] *** Joins: pnoud (~pnoud@user/pnoud)
[04:06:25] <doc|work> ah, yeah
[04:08:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[04:10:03] *** Quits: zodd (~zodd@84-106-62-193.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[04:10:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[04:11:09] *** Quits: c4017w (~c4017@209.52.68.8) (Quit: Leaving)
[04:12:12] *** Quits: bambams_ (~bambams@user/bambams) (Ping timeout: 252 seconds)
[04:12:17] *** Quits: y1n (~y1n@84-115-64-73.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[04:12:33] *** Quits: Mikaela (~sid12355@user/mikaela) (Remote host closed the connection)
[04:12:36] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[04:12:43] *** Joins: y1n (~y1n@84-115-64-73.wifi.dynamic.surfer.at)
[04:13:14] *** Joins: Mikaela (~sid12355@user/mikaela)
[04:15:40] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[04:16:31] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[04:18:02] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 245 seconds)
[04:19:21] *** Quits: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au) (Ping timeout: 255 seconds)
[04:20:15] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[04:20:43] *** Joins: cheater (~Username@user/cheater)
[04:21:50] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:1c9d:1445:85be:3fba) (Ping timeout: 250 seconds)
[04:24:40] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[04:25:16] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[04:25:48] *** Joins: thiras (~thiras@user/thiras)
[04:26:22] *** Quits: hposca (~hposca@node-1w7jr9phoke2sektanidvb94u.ipv6.telus.net) (Ping timeout: 245 seconds)
[04:27:48] *** Joins: bambams (~bambams@user/bambams)
[04:28:55] *** Joins: fructose (~fructose@user/fructose)
[04:30:36] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 255 seconds)
[04:31:01] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[04:31:27] <mawk> doc|work: s1 \ s2
[04:31:29] <mawk> much prettier
[04:32:35] *** Joins: Wulf (~Wulf@user/wulf)
[04:32:51] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[04:33:08] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[04:33:16] *** Joins: cheater (~Username@user/cheater)
[04:33:24] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[04:33:29] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 255 seconds)
[04:36:20] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[04:37:09] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[04:38:09] *** Joins: jazzy (~jaziz@2600:380:8451:9914:745f:c6b0:8b18:af60)
[04:39:05] *** Joins: kmh (~kmh@p200300df5f08b90035b2e6b0f51c8632.dip0.t-ipconnect.de)
[04:39:17] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 245 seconds)
[04:39:34] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[04:41:22] *** Joins: schumaml1 (~schumaml@dslb-178-007-205-165.178.007.pools.vodafone-ip.de)
[04:43:20] *** Quits: schumaml (~schumaml@dslb-188-104-169-159.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[04:43:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:44:20] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[04:44:34] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[04:45:37] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[04:46:30] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[04:46:39] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[04:46:50] *** Joins: cheater (~Username@user/cheater)
[04:47:02] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 252 seconds)
[04:47:25] *** Joins: schumaml2 (~schumaml@dslb-092-074-011-187.092.074.pools.vodafone-ip.de)
[04:47:48] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[04:49:31] <dale> I did not know we had dict union with | in 3.9.  But why don't we also have a method like dict.union parallel to set.union?  I see the PEP's rationale for why they made it an operator rather than some kind of funky method, but this seems needlessly divergent from the precedent set by sets.
[04:50:18] *** Quits: schumaml1 (~schumaml@dslb-178-007-205-165.178.007.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[04:50:24] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 255 seconds)
[04:50:38] *** Joins: schumaml3 (~schumaml@dslb-178-007-193-080.178.007.pools.vodafone-ip.de)
[04:51:03] <nedbat> dale: generally the differences have to do with the question of how to deal with the values when the keys are the same
[04:51:28] *** Joins: akk (~akk@97-123-109-214.albq.qwest.net)
[04:51:35] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:51:36] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[04:51:45] <dale> nedbat: That hasn't already been addressed with the | operator?
[04:52:18] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[04:52:26] *** Joins: zeden (~zeden@user/zeden)
[04:52:39] *** Quits: schumaml2 (~schumaml@dslb-092-074-011-187.092.074.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[04:53:52] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[04:54:45] <nedbat> dale: oh, you're just talking about having both the | and the .union?
[04:55:38] <dale> nedbat: Yes, and in the pattern of set's | vs. union() I'd expect the former to only work with dicts and the latter to work with any mapping or iterable of pairs.
[04:56:38] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 272 seconds)
[04:57:05] *** Joins: smqra (~rooba@208.110.85.44)
[04:57:26] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[04:59:20] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[04:59:22] *** Quits: sebastianos (~sebastian@user/sebastianos) (Read error: Connection reset by peer)
[05:00:26] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:00:57] *** Joins: sebastianos (~sebastian@user/sebastianos)
[05:01:29] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a803:6f70:ccd0:b446)
[05:03:04] <[itchyjunk]> My code runs but has logical errors. I tried thinking of what might be wrong but I can't seem to figure it out
[05:03:43] <[itchyjunk]> https://bpa.st/BBYQ
[05:03:58] <[itchyjunk]> I am printing the `sum` and ocassionally, it says 2 where i think it should be 3
[05:04:14] <[itchyjunk]> I am not 100% sure if the error exists but i think it does
[05:04:20] <[itchyjunk]> Any ideas?
[05:05:10] *** Quits: nyah (~nyah@90.221.186.180) (Quit: Lost terminal)
[05:05:32] <nomic> z.z.
[05:05:42] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[05:05:44] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:05:50] <KirkMcDonald> [itchyjunk]: You're doing `tmp = x` and then mutating tmp.
[05:06:01] <nomic> put try/except around the statement you  think is going wrong
[05:06:07] <nomic> then import pdb;pdb.set_trace()
[05:06:08] <nomic> also
[05:06:13] <nedbat> nomic: why do you type "z." ?
[05:06:19] <[itchyjunk]> tmp = x is outside the loop
[05:06:31] <[itchyjunk]> i am making changes to tmp while reading from x
[05:06:42] <[itchyjunk]> so i don't change x while reading from it
[05:06:48] <KirkMcDonald> [itchyjunk]: They are the same object. `tmp = x` does not make a copy.
[05:07:18] <[itchyjunk]> It does not?
[05:07:27] <nomic> u got copy.deepcopy to make separate obj.
[05:07:28] <[itchyjunk]> I thought i was creating a different variable to work with
[05:07:37] <[itchyjunk]> /o\
[05:07:39] <Byteflux> different variables referencing the same object.
[05:07:41] <KirkMcDonald> [itchyjunk]: It is a different variable. Both variables refer to the same object.
[05:07:57] <[itchyjunk]> Like they both point to the same thing in memory?
[05:07:59] <nomic> yes .. you assign something in python -- it is a pointer
[05:08:00] *** Joins: heco (~redrum@user/redrum88)
[05:08:01] <KirkMcDonald> Yes.
[05:08:02] <[itchyjunk]> And chanigng one changes another?
[05:08:05] <nomic> yes
[05:08:08] <[itchyjunk]> omfg
[05:08:15] *** Quits: sectec84 (~Guest88@24.18.109.173) (Quit: Client closed)
[05:08:19] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Read error: Connection reset by peer)
[05:08:21] <nomic> so to assign you use x2 = copy.deepcopy(x)
[05:08:21] <KirkMcDonald> "Changing" is vague. *Mutating* the object will be seen through both names.
[05:08:35] *** Joins: schumaml4 (~schumaml@dslb-178-002-183-228.178.002.pools.vodafone-ip.de)
[05:08:45] *** Quits: cul8r (~cul8r@c-73-26-110-61.hsd1.nm.comcast.net) (Quit: Leaving)
[05:08:47] <[itchyjunk]> do i need some special library to do temp = copy.deepcopy(x) ?
[05:08:55] <Byteflux> no, just `import copy`
[05:09:02] <nomic> yeah copy is = module
[05:09:04] <KirkMcDonald> I would not use deepcopy() here; numpy has tbe ability to copy an array.
[05:09:04] <Byteflux> but i assume x is just a list of lists? assuming it's a life board
[05:09:09] <[itchyjunk]> okay, let me try that
[05:09:16] <nomic> but copy.deepcopy works everywhere
[05:09:20] <[itchyjunk]> x is a numpy dnarray
[05:09:32] <[itchyjunk]> idk if ndarray is just a list of list or how it's handled
[05:09:33] <nomic> you can be sure that is not goiing to be the same value, if you assign x = copy.deepcopy(x2)
[05:09:35] <KirkMcDonald> x.copy() will give you a copy.
[05:09:49] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[05:09:58] <Byteflux> if it were a list of lists you can also do tmp = [row[:] for row in x]
[05:10:00] <Byteflux> since the values are 1 or 0
[05:10:02] <[itchyjunk]> tmp = x.copy() ?
[05:10:17] *** Quits: schumaml3 (~schumaml@dslb-178-007-193-080.178.007.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[05:10:21] <nomic> list = list2[:] will  make a  new copy of a list
[05:10:22] <KirkMcDonald> [itchyjunk]: If you truly need a copy, yes.
[05:10:26] <Byteflux> but i dunno why you'd be using a numpy array for a life board :P
[05:10:29] *** Joins: hposca (~hposca@node-1w7jr9phoke2ugioo612q365y.ipv6.telus.net)
[05:10:37] <Byteflux> seems like an unnecessary dependency for something so trivial
[05:11:02] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Read error: Connection reset by peer)
[05:11:29] <KirkMcDonald> Lists also have a .copy() method, though of course this is just a shallow copy.
[05:11:44] <nomic> list2 = list3[:] is neat
[05:11:53] <nomic> for lists .. otherwise use copy.deepcopy (imo)
[05:11:56] <nomic> solves everything
[05:12:13] <nomic> assume that an assignation is the assignation of the pointer
[05:12:18] <KirkMcDonald> I dislike deepcopy(). It's too easy to conceal exactly what it's doing.
[05:12:28] *** Quits: y1n (~y1n@84-115-64-73.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[05:12:42] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Read error: Connection reset by peer)
[05:12:43] <[itchyjunk]> wait, i think it works now?
[05:12:49] <KirkMcDonald> And I usually prefer to phrase things as creating the new, changed value, versus copying an existing one.
[05:12:59] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[05:13:06] *** Joins: y1n (~y1n@84-115-65-90.wifi.dynamic.surfer.at)
[05:13:07] <[itchyjunk]> hm, what's the difference between x.copy and copy.deepcopy() ? would it matter for what i am doing?
[05:13:23] <CodeMouse92> [itchyjunk]: .copy() is going to copy the items, but not necessarily items within items
[05:13:27] <KirkMcDonald> [itchyjunk]: For numpy arrays, I would not expect a difference.
[05:13:38] <[itchyjunk]> ahh great
[05:13:51] <CodeMouse92> so w/ nested lists/dicts/etc., using .copy() over .deepcopy() will have horrible consequences, but other things, it doesn't matter.
[05:14:01] <CodeMouse92> Well, nested with mutable values ;)
[05:14:18] <CodeMouse92> [[1, 2, 3], [4, 5, 6]] <-- that'll be fine w/ .copy()
[05:14:19] <[itchyjunk]> If i think my code is working, but i don't know if it is. what can i do? i just ran it twice and the weird bug i had seems to be gone now. it was me using tmp = x that caused the logical bug it seemed
[05:14:20] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[05:14:32] <[itchyjunk]> CodeMouse92, noted
[05:14:40] <KirkMcDonald> [itchyjunk]: Write tests.
[05:14:41] <[itchyjunk]> if it's nested, i want deepcopy
[05:14:54] <CodeMouse92> [itchyjunk]: If it's nested with mutables, yes
[05:15:03] <[itchyjunk]> /o\ write tests? idk if i can do that
[05:15:11] <[itchyjunk]> oh i guess i could
[05:15:23] <[itchyjunk]> take some fixed board that i know the answer too and feed that
[05:15:24] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 276 seconds)
[05:15:25] <[itchyjunk]> or somesuch
[05:15:32] <CodeMouse92> sure
[05:15:42] <[itchyjunk]> thats a lot more work though! what type of test would you write?
[05:15:42] <grym> [itchyjunk]: it has to start somewhere, it has to start sometime / what better place than here, what better time than now
[05:16:19] <CodeMouse92> Ladies, gentlemen, hamsters of all ages, the musical stylings of GRYM!
[05:16:25] *** Joins: sectec84 (~Guest88@24.18.109.173)
[05:16:41] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 255 seconds)
[05:16:53] <grym> CodeMouse92: i _wish_
[05:16:57] *** Quits: rajkosto (~rajkosto@178-221-117-77.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[05:17:22] <CodeMouse92> grym: Swap out "studies ears" to "delights ears"?
[05:17:25] <[itchyjunk]> is _wish_ inbuild variable or somesuch? I know _var_ is used for special naming
[05:17:47] <grym> CodeMouse92: tom morello's a lot better at it than me
[05:17:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[05:17:55] <grym> lyrics, that is
[05:17:57] <CodeMouse92> [itchyjunk]: grym's wishes are privately scoped
[05:18:06] <CodeMouse92> But this is Python, so we can see them anyway
[05:18:42] <grym> [itchyjunk]: most irc clients parse single underscores around a word as underlined texzt
[05:18:45] <grym> text*
[05:18:48] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:cd80:9697:e922:dc30) (Remote host closed the connection)
[05:19:02] <[itchyjunk]> Ah, hexchat doesn't seem to
[05:19:08] <CodeMouse92> yeh, hexchat won't
[05:19:13] *** Joins: pluri (~textual@user/pluri)
[05:19:27] <CodeMouse92> just as well, since we need to be able to type __dunder_methods__
[05:19:46] <grym> __foo__ isn't underscored for me either
[05:20:04] <CodeMouse92> formatting is overrated
[05:20:47] <CodeMouse92> Kids these days and their modern markdown languages. When I was young, all we had was ANSI!
[05:20:50] <CodeMouse92> GET OFF MAH LAWN
[05:21:41] <grym> EBCDIC called, it says grandpa baudot wants a word
[05:21:51] * CodeMouse92 yells at a cloud
[05:25:18] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Quit: Client closed)
[05:25:36] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[05:26:20] *** Joins: neil (~kneel@rockylinux/infra/neil)
[05:28:19] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:29:47] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:30:16] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:29] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[05:30:38] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:30:41] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:31:15] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:31:29] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[05:31:51] *** Parts: akk (~akk@97-123-109-214.albq.qwest.net) (+++)
[05:32:05] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[05:33:20] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[05:33:36] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[05:33:38] <MrMobius> I'm passing the class SimpleHTTPRequestHandler here as a handler: server=ThreadingHTTPServer(server_ip,SimpleHTTPRequestHandler). How can I pass the optional directory argument of the class? There are three other arguments I don't have values for.
[05:33:50] <Gustavo6046> attr.s does not allow me to document/docstring my attribs? :<
[05:34:09] *** Joins: vlm (~vlm@user/vlm)
[05:34:23] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[05:34:41] <grym> Gustavo6046: your class can have any __doc__ you wish
[05:35:05] <Gustavo6046> I mean as in, attr.ib, or more specifically with autoattrib=True (generated from type annotations)
[05:35:23] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[05:35:26] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 252 seconds)
[05:35:34] <SnoopJ> you can do `metadata={"doc": "O frabjous day!"}` if you like. It's not a very satisfying solution, though.
[05:35:38] <Gustavo6046> I can add commentsb efore each typ–
[05:35:40] <Gustavo6046> Ah.
[05:35:42] <Gustavo6046> True.
[05:36:22] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 245 seconds)
[05:36:23] <SnoopJ> You can also use a string literal immediately after the attribute, if it's just there for the source's sake
[05:36:36] *** Quits: Gaming4JC (~user@user/gaming4jc) (Quit: Zzz)
[05:36:38] *** Joins: ice9 (~ice9@user/ice9)
[05:36:40] <Gustavo6046> Hmm
[05:36:45] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[05:36:54] <Gustavo6046> What about intelli-sensei, though?
[05:38:53] <SnoopJ> I doubt it pays attention to those, but maybe it could be instructed how to look at attr.ib metadata
[05:39:14] *** Joins: pete443_ (~pete@user/pete443)
[05:39:48] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[05:40:16] *** Joins: cheater (~Username@user/cheater)
[05:40:21] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 255 seconds)
[05:40:49] <SnoopJ> doc|work, yea, pre-commit mostly cares about staged files. I think if you `pre-commit run --all-files` (or -a for short) it'll do all files in the repo
[05:41:20] <doc|work> SnoopJ, yeah, that's what I was doing
[05:41:27] <SnoopJ> staged content*, even. One of its really nice features is that it absolutely understands how to lint/etc. properly when you've staged only part of a modified file :D
[05:41:45] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[05:43:08] <AhmedAmerican_> why that code works fine on `Linux Mint` but on Windows it's raise `NameError: name 'r' is not defined` https://bpa.st/JIWA
[05:43:41] <SnoopJ> AhmedAmerican_, because `r` isn't defined. It should raise this error on every platform.
[05:43:56] <SnoopJ> (I think)
[05:44:22] <SnoopJ> maybe there's some multiprocessing quirk about handing off locals
[05:44:25] <AhmedAmerican_> SnoopJ: it's raise that error only on `Windows`
[05:46:02] <MrMobius> how can I pass the optional directory argument to SimpleHTTPRequestHandler on line 7? https://pastebin.com/quEyiQse
[05:46:13] <SnoopJ> AhmedAmerican_, are you *sure* you're running the same code on both machines? That sounds like a really strange platform dependence, and the docs don't mention anything like that.
[05:46:16] *** Joins: Samian (~Sami@2620:10d:c091:480::1:6681)
[05:46:25] <AhmedAmerican_> SnoopJ: 100% sure
[05:46:49] <AhmedAmerican_> SnoopJ: which OS you are running
[05:46:57] <SnoopJ> AhmedAmerican_, I run Ubuntu and Windows
[05:47:42] <SnoopJ> hmm, it does print 10 times on my Ubuntu machine
[05:48:07] <AhmedAmerican_> :) that's it
[05:49:22] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[05:49:46] *** Joins: cheater (~Username@user/cheater)
[05:50:07] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 245 seconds)
[05:50:10] <BrenBarn> it's due to a difference in how multiprocessing works in windows and linux
[05:51:30] <SnoopJ> BrenBarn, is it documented somewhere and I've missed it?
[05:52:00] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Quit: QUIT)
[05:52:04] *** Quits: sectec84 (~Guest88@24.18.109.173) (Ping timeout: 246 seconds)
[05:52:45] <grym> BrenBarn: it's going to be something horrible about fork/exec, isn't it
[05:53:38] <BrenBarn> well, it's just that windows doesn't have fork
[05:53:41] <BrenBarn> see this: https://docs.python.org/3/library/multiprocessing.html#all-start-methods
[05:53:52] <BrenBarn> the bit about "Explicitly pass resources to child processes"
[05:54:04] <AhmedAmerican_> it's all about how Platform treating `__main__` where the global variables constructed
[05:54:05] <BrenBarn> > On Unix using the fork start method, a child process can make use of a shared resource created in a parent process using a global resource.
[05:54:07] *** Quits: sebastianos (~sebastian@user/sebastianos) (Read error: Connection reset by peer)
[05:54:38] *** Quits: kenoba5 (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Changing host)
[05:54:38] *** Joins: kenoba5 (~kenoba@user/kenoba)
[05:54:54] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[05:55:19] <Gustavo6046> Can I inherit from a base class that also inherits from typing.Generic?
[05:56:02] <Gustavo6046> Each internet comms backend has a few objects that share similar traits (identifier, optional name) and don't share others (messages have authors, channels have user lists, etc etc), as well as functionality like messageability.
[05:56:13] <Gustavo6046> But there is a lot that is shared that I want to extract.
[05:56:29] *** kenoba5 is now known as keboba
[05:56:35] *** Joins: candyman1 (~candyman@user/candyman)
[05:56:57] <BrenBarn> on Windows, Python basically does `import __main__` while on unix it inherits the existing process with fork
[05:57:10] <BrenBarn> so on Windows it doesn't get the global namespace of the parent while on Unix is does
[05:57:29] <Gustavo6046> However, each underlying backend has its own implementation of UserProxy, ChannelProxy, etc etc. And I want my base class to be able to account for all of those (typing.TypeVar("ProxyType", "BackendObject")) whilst having them be typechecked narrowed down in the respective subclasses (User, Channel, etc).
[05:57:32] *** Quits: candyman1 (~candyman@user/candyman) (Remote host closed the connection)
[05:57:40] *** keboba is now known as kenoba
[05:58:04] <grym> BrenBarn: yeah that's about what i was afraid of :)
[05:58:20] <BrenBarn> I mean as the note says, it's not a good idea to do it on unix even though you can
[05:59:37] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:00:11] <Gustavo6046> So typing.Generic subclasses are protocols/abstract, and cannot be concretized?
[06:00:16] <Gustavo6046> ^ is probably the crux of the question
[06:01:33] <SnoopJ> ah, fork() makes sense
[06:01:37] <SnoopJ> thanks
[06:02:18] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[06:03:45] *** Quits: weibullguy (~weibullgu@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Quit: Making like a hippie and blowin' this joint.)
[06:04:14] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:05:13] *** Joins: weibullguy (~D._Rowlan@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[06:05:33] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 255 seconds)
[06:05:33] *** brabrax_ is now known as brabrax
[06:05:44] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[06:05:55] *** Joins: pnoud (~pnoud@user/pnoud)
[06:06:25] *** Joins: cheater (~Username@user/cheater)
[06:07:47] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:08:02] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[06:08:54] <dale> ISTR there was even discussion about changing all platforms to use spawn by default.
[06:09:29] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[06:09:35] <dale> I think it was shot down, but I think it was at least toyed with around the same time I believe they switched the default to be spawn on macOS.
[06:09:37] <SnoopJ> that'd be a big change for something as bedrock-y as multiprocessing
[06:09:44] <SnoopJ> (perhaps why it was shot down?)
[06:09:48] <dale> SnoopJ: Indeed
[06:10:00] <dale> Though it was changed from fork to spawn on macOS because you can't always fork safely on macOS.
[06:10:06] <SnoopJ> "put it on the Python 4 list"
[06:10:23] <AhmedAmerican_> 🤔
[06:10:37] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[06:11:21] <fluter> hi, can setup.py support two packages, each in their own directory?
[06:12:02] <dale> It looks like there is no easy way to subclass an Enum subclass and add values in the subclass, is that right?
[06:12:09] *** Quits: y1n (~y1n@84-115-65-90.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[06:12:55] <grym> dale: i believe it is explicitly forbidden
[06:13:03] <dale> grym: Seems so.
[06:13:14] *** Joins: y1n (~y1n@84-115-65-203.wifi.dynamic.surfer.at)
[06:13:16] <dale> Specifically, any subclassing of an Enum subclass when that Enum subclass has values, if I'm reading this right.
[06:13:23] <grym> yep
[06:13:35] <grym> (i tried to do that too last month, whomp whomp)
[06:13:44] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:14:49] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 246 seconds)
[06:15:39] *** Joins: Vonter (~Vonter@user/vonter)
[06:16:30] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[06:16:44] *** Parts: MrMobius (~MrMobius@208.58.206.154) (Leaving)
[06:17:14] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[06:17:22] *** Joins: darksun (~darksun@user/darksun)
[06:18:58] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 272 seconds)
[06:19:12] *** Quits: omegatron (~some@p5484990d.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[06:19:39] <SnoopJ> Yea, it's really designed for you to make your own Enum type, instances of which will have values.
[06:19:58] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:20:05] *** __jmcantrell__ is now known as jmcantrell
[06:20:14] <grym> one of the many ways that enums feel kind of bodged on
[06:20:22] <grym> (they're classes! but not really!)
[06:20:24] <grym> etc
[06:20:34] <SnoopJ> fluter, I believe it's possible, but the immediate question is whether the need could be avoided by making two separately installable packages (one perhaps dependent on the other), or why one can't be an extra of the other.
[06:20:48] <SnoopJ> No idea how pip or other front-ends react to that, either.
[06:22:12] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[06:22:21] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[06:23:22] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:23:34] <Samian> hi
[06:24:38] <Samian> I need someone to run my python code. I want to make sure they have all the proper dependencies. Is there a way I can make a file that conda can run to recreate my conda environment on the other person's computer
[06:27:01] <grym> Samian: environment.yml, i think it's called?
[06:27:27] <Samian> let me google that!
[06:28:39] *** Joins: wyclif (~wyclif@user/wyclif)
[06:28:54] <Samian> I read that conda environments don't handle different driver versions though. That's important for the CUDA drivers I need for my ML work
[06:29:08] *** Quits: hposca (~hposca@node-1w7jr9phoke2ugioo612q365y.ipv6.telus.net) (Ping timeout: 255 seconds)
[06:29:10] <Samian> what happens when one repo needs cuda 11.1, and another needs 9.2 ?
[06:30:44] *** Joins: cheater1__ (~Username@user/cheater)
[06:30:55] *** Joins: yonatan (uid158779@id-158779.charlton.irccloud.com)
[06:31:29] <SnoopJ> does it use features that are broken from 9.2 to 11.1, or does it stay inside the lines on backwards compatibility?
[06:31:35] <SnoopJ> because if it stays inside the lines, you use 11.1
[06:32:16] *** Quits: y1n (~y1n@84-115-65-203.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[06:32:28] <yonatan> Is there a way to use *args notation in square brackets? E.g. arr[*indices] += 2 to increase the value of a subarray of the multidimensional arr by 2?
[06:32:56] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[06:33:05] *** Joins: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net)
[06:33:19] <nesoi> hey, what do people like for code profiling here?
[06:34:35] <Repiphany> yonatan: Why can't you use index arrays or slicing
[06:35:31] <phy1729> cProfile is nice for finding what functions are hot and line_profiler is nice for figuring out what in the fuction is hot
[06:35:40] <yonatan> I probably can. The question was partially also out of curiosity.
[06:36:18] *** Joins: cheater (~Username@user/cheater)
[06:36:24] <BrenBarn> do you mean in numpy?
[06:36:36] *** Quits: cheater1__ (~Username@user/cheater) (Ping timeout: 255 seconds)
[06:36:37] <yonatan> Yes
[06:36:44] <SnoopJ> nesoi, cProfile + snakeviz is pretty dang good, I usually just use that combination. scalene is new and very cool if you want a sampling profiler that is memory-aware (including VRAM!) too.
[06:36:59] <SnoopJ> and line_profiler is also quite nice, yea
[06:37:19] * phy1729 makes note to checkout snakeviz and scalene
[06:37:59] <nesoi> thanks phy1729 and SnoopJ
[06:38:00] <nesoi> !
[06:38:20] *** Joins: sebastianos (~sebastian@user/sebastianos)
[06:38:34] <SnoopJ> phy1729, snakeviz is just a visualization tool for cProfile outputs. Scalene is a pretty dang new thing by Emery Berger. There's a good PyCon 2021 talk about it: https://www.youtube.com/watch?v=5iEf-_7mM1k
[06:39:27] *** Joins: swn_ (~sweeney@user/swn)
[06:40:01] *** Joins: Elzington_ (~Elzington@static-198-54-128-36.cust.tzulo.com)
[06:40:01] <SnoopJ> it's only useful
[06:40:11] <SnoopJ> only useful for longer-lived programs*
[06:40:31] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:40:49] *** Joins: cheater1__ (~Username@user/cheater)
[06:41:17] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[06:41:17] *** Quits: kmh (~kmh@p200300df5f08b90035b2e6b0f51c8632.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[06:41:27] *** cheater1__ is now known as cheater
[06:42:13] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:42:17] *** Quits: swn (~sweeney@user/swn) (Ping timeout: 258 seconds)
[06:42:27] *** Quits: Elzington (~Elzington@static-198-54-128-62.cust.tzulo.com) (Ping timeout: 255 seconds)
[06:42:30] *** Joins: darksun (~darksun@user/darksun)
[06:45:49] <fluter> hi, when i do setup.py wheel, i find it does not include subpackages
[06:46:06] <fluter> package='foo'; foo/__init__.py and files are included
[06:46:16] <fluter> but not foo/bar/__init__.py is this expected?
[06:46:19] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[06:46:40] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[06:46:54] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Client Quit)
[06:46:57] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a803:6f70:ccd0:b446) (Ping timeout: 255 seconds)
[06:47:35] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[06:48:36] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:48:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (cadmium.libera.chat (Nickname regained by services)))
[06:48:36] *** finn_elija is now known as FinnElija
[06:48:59] *** swn_ is now known as swn
[06:49:35] <tims> fluter: might want to put your setup.py (and or setup.cfg) into a bpast
[06:50:02] *** Joins: djapo (~archangel@user/djapo)
[06:50:30] <fluter> ok
[06:50:40] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[06:50:51] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[06:51:27] <tims> Both behaviours are expected depending on config
[06:52:20] *** Joins: mikebald_ (~mikebald@159.203.185.106)
[06:52:49] *** Joins: arischow (~arischow@2a09:bac0:35::819:60ab)
[06:53:33] *** Quits: mikebald (~mikebald@159.203.185.106) (Ping timeout: 276 seconds)
[06:53:48] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[06:54:38] <djapo> how do i check for \xa0 in a string ? i tried if value == '\xa0' but the string isn't matched
[06:55:32] <tims> djapo: That that value is in the string `"\xa0" in value`
[06:55:49] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[06:55:53] <SnoopJ> djapo, https://bpa.st/E3KA
[06:56:33] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 268 seconds)
[06:57:06] <nesoi> if a task has like 20,000 involuntary context switches in 6 seconds of runtime, that implies it's CPU-bound, no?
[06:57:51] <nesoi> timeslice runouts?
[06:57:55] <djapo> tried '\\xa0' and that worked
[06:58:29] <djapo> looks like I had to escape the \
[06:59:28] <SnoopJ> djapo, are you looking for a non-breaking space, or the 3-character escape sequence used to create it?
[07:00:59] <fluter> i'm using modernize, but this line 'from cStringIO import StringIO' stays untouched
[07:01:06] <fluter> ModuleNotFoundError: No module named 'cStringIO
[07:01:10] <fluter> is this normal?
[07:01:28] <FunkyBob> fluter: isn't StringIO in the io package now?
[07:01:55] <FunkyBob> and cStringIO is deprecated because it's always the C version now
[07:01:59] <fluter> cStringIO is gone in py3, modernize should fix it to from io import StringIO as cString()
[07:02:11] <fluter> FunkyBob: yes, but modernize did not recoginze it?
[07:02:26] <FunkyBob> never encountered modernize before... sounds like a bug ticket needs opening
[07:02:31] <fluter> i need to manuall update all such occurances :(
[07:04:37] *** Quits: marduk (~marduk@216.243.54.166) (Remote host closed the connection)
[07:04:46] <FunkyBob> sed + awk?
[07:04:57] <FunkyBob> or shift-ctrl-H in vscode?
[07:07:57] *** Joins: darksun (~darksun@user/darksun)
[07:09:04] <fluter> lol ok, will use sed
[07:09:11] *** Joins: pnoud (~pnoud@user/pnoud)
[07:09:44] *** Joins: pycurious (~Adium@user/pycurious)
[07:09:56] <SnoopJ> VSCode's "search this workspace" is pretty nice, yea
[07:10:09] *** Joins: marduk (~marduk@216.243.54.166)
[07:12:05] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[07:12:06] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[07:12:17] *** Joins: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[07:13:31] *** Quits: pluri (~textual@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[07:13:32] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[07:13:44] *** Joins: schumaml (~schumaml@dslb-178-007-199-204.178.007.pools.vodafone-ip.de)
[07:14:04] *** Quits: pioto (~pioto@user/pioto) (Ping timeout: 252 seconds)
[07:14:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:15:15] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[07:15:32] *** Quits: schumaml4 (~schumaml@dslb-178-002-183-228.178.002.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[07:15:35] <fluter> from past.builtins import six
[07:15:40] <fluter> what does this line of code do?
[07:15:43] <fluter> it fails to import
[07:15:52] <fluter> but not sure how can i fxi it
[07:16:14] <SnoopJ> fluter, it imports the name "six" from a package called "builtins" inside a package called "past." (https://pypi.org/project/past/)
[07:16:51] <fluter> but there is no six in past.builtins
[07:17:08] <SnoopJ> evidently not
[07:17:31] <fluter> can i just kill this line :S
[07:17:33] <fluter> ?
[07:17:42] <SnoopJ> dunno
[07:17:55] <SnoopJ> doubt it, it's probably been put there for a reason, either by a human author or a tool you're driving.
[07:18:01] <jinsun> you can probably `import six` directly
[07:18:11] <jinsun> six is another package
[07:18:13] <SnoopJ> yea, it's a weird looking line, I don't know why you wouldn't just use six
[07:18:29] <SnoopJ> its whole purpose is that it exists on both sides of the 2/3 divide
[07:18:32] <fluter> it's added by modernize
[07:20:30] <jinsun> I have seen some packages relying on six re-exported from other packages, instead of directly depending on six, no no good reason, this might be one of those cases
[07:21:55] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:22:25] <SnoopJ> maybe someone ran it with --no-six
[07:22:47] <SnoopJ> ...I don't know why they would, since it's still ending up in an external dependency? But I don't know much about `modernize`
[07:24:01] *** Joins: frost (~frost@59.71.241.179)
[07:24:39] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[07:26:27] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:27:36] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com) (Quit: Konversation terminated!)
[07:27:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:28:08] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:29:40] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[07:32:13] *** Joins: pnoud (~pnoud@user/pnoud)
[07:33:20] *** Quits: d00gy (~tonberry@2601:401:c400:8b30:ba27:ebff:fee2:f93c) (Quit: WeeChat 3.0)
[07:35:09] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[07:36:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[07:37:50] *** Joins: akoana (~ah@user/akoana)
[07:40:45] <voldial> how do I type annotate a class that is used as __super__? https://github.com/jakeogh/iritool/blob/master/iritool/iritool.py#L61 (line 61 for example I added the mypy error)
[07:42:37] *** Joins: Kays (Kays@user/kays)
[07:43:28] *** Joins: c4017 (~c4017@S010664777dab66f3.vf.shawcable.net)
[07:44:21] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:47:19] *** Joins: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b)
[07:47:31] *** Joins: rickygee (~ricky@236-53-74-65.gci.net)
[07:48:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[07:48:42] <Gustavo6046> I'm doing a major rewrite of Triarc
[07:48:44] <Gustavo6046> I'm scared
[07:49:07] <Gustavo6046> I'm doing a lot of Protocols and stuff I had no idea existed back when I wrote the bulk of Triarc
[07:49:13] <Gustavo6046> And that made Triarc somewhat inferior in quality as a result
[07:49:27] <Gustavo6046> But I fear this new Triarc would end up backwards-incompatible
[07:49:37] <Gustavo6046> What do I do? Rename the package? Maybe call the other one triarc-legacy?
[07:49:38] *** Joins: imp (~imp@186.205.11.214)
[07:49:40] *** Quits: doc|work (~doc@user/doc) (Ping timeout: 246 seconds)
[07:50:14] <Gustavo6046> Or call this rewritten package triarc-new? Wouldn't that be kinda.. generic?
[07:50:46] <Gustavo6046> Originally I would just implement an extra XMPP backend for 0.3.0, and then a RPC interface for 1.0.0, and - as per semver tradition - keep the backwards incompatibility to 1.0.0.
[07:50:52] <Gustavo6046> But it seems I broke that fast lol.
[07:53:14] <voldial> link? I only found AR's with absurd lead times.
[07:53:17] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[07:53:27] *** Joins: cheater (~Username@user/cheater)
[07:53:27] <Gustavo6046> o.o?
[07:53:45] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[07:53:54] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:54:06] <Gustavo6046> It's a botting framework. I used it mostly for my IRC / Discord bot projects. It's meant to be platform-agnostic, and soon, it'll be able to dynamically accept RPC connections (reactor model iirc, anyone?) as well.
[07:55:20] <NeilRG> voldial, you need to define iri in the superclass, either as a class level annotation, a member variable, or a abstract method
[07:56:05] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[07:56:39] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[07:57:09] *** Joins: matsaman (~matsaman@user/matsaman)
[07:58:06] <imp> I have written a small code using type hints and build it as a package for installation. When I install this package and use mypy to check for types it complains : found modeule but no type hints or library stubs. I have tried to build the stubs using stubgen. Seems the stubs are all ok and I move each of them to the correct location. But I could notice that my package built with `python3 -m build`, does not contains the .pyi file. Any guidance to resolve this?
[07:59:43] <imp> But needless to say that all my code contains type hinting. Can't understand what is hapenning. The page "https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports" just explain how to hide the error (or fix when a package contains the stubs), but do not explain how to build a package correctly with hints/stubs.
[08:00:00] <NeilRG> imp, did you add the py.typed file?
[08:00:07] <NeilRG> and are you sure it's being exported?
[08:00:17] <imp> I never created a py.typed file.
[08:00:22] <NeilRG> there's your problem
[08:00:32] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Quit: Lost terminal)
[08:00:40] <imp> ooow nice. https://www.python.org/dev/peps/pep-0561/
[08:00:57] <NeilRG> imp, good luck, and thank you for adding annotations to your work :)
[08:01:44] <imp> NeilRG: I hope for the day when type optimizations will came to python.
[08:02:41] <imp> but. truth be told. Mypy already helps a lot when finding code inconsistencies.
[08:03:01] <NeilRG> yup
[08:03:32] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:07:14] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:07:58] *** Joins: darksun (~darksun@user/darksun)
[08:08:02] *** Joins: ZenixOwler (~networker@118.69.128.37)
[08:08:07] <imp> just that? add an empty  py.typed file at root of my project dir?
[08:08:09] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 265 seconds)
[08:09:07] <ZenixOwler> question, i was just peeking around at flask_sqlalchemy to see how things work, so for instance, in my codes when i do "import flask_sqlalchemy", which .py in the flask's github page that i actually import from ? https://github.com/pallets/flask-sqlalchemy
[08:09:18] <ZenixOwler> it is a little bit messy with lots of directories there and it also seems like a setup
[08:10:25] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[08:12:34] *** Joins: rndusr (~rndusr@user/rndusr)
[08:12:46] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 246 seconds)
[08:14:31] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[08:14:55] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[08:15:06] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:15:12] *** Joins: cheater (~Username@user/cheater)
[08:17:49] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[08:18:00] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:18:35] <NeilRG> imp, you have to export it too, either in your setup.py or pyproject.toml
[08:18:59] <voldial> NeilRG: if I was on 3.10 would this be correct? https://github.com/jakeogh/iritool/blob/master/iritool/iritool.py#L61 (I'm on 3.9, and it would be easy to upgrade)
[08:19:19] <NeilRG> voldial, yup
[08:19:23] *** Joins: pnoud (~pnoud@user/pnoud)
[08:19:33] <voldial> NeilRG: saaaweet. on it. much appreciated.
[08:19:39] <NeilRG> voldial, yvw
[08:19:56] *** Quits: orbatos (~orbatos@user/orbatos) (Quit: Leaving)
[08:20:10] <imp> yes. In my setup.cfg  in [options] I have added include_package_data = True  and [options.package_data]\n packagename =  py.typed
[08:20:14] <NeilRG> in my experience though the other two solutions (abstract method or member in the base class) are  you usually better design
[08:20:20] <NeilRG> imp, great then you're good
[08:20:42] <NeilRG> voldial, but do as you like, maybe you'll have better luck than me
[08:20:43] <imp> Then running  build. I can't see any references for py.typed or anything related.
[08:20:57] <NeilRG> imp, check after you install if it shows up or not
[08:21:04] <NeilRG> imp, I don't know much to help you
[08:21:12] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[08:21:14] <NeilRG> imp, maybe someone else can.  I use poetry
[08:21:26] <towel> A while back I was using a really nice library to manage python classes, but I can't remember the name of it. Anyone have any thoughts on what it might be?
[08:21:34] <towel> habnabit_, I believe you recommended it to me initially
[08:21:38] <imp> NeilRG: no problem. But still not working. there is nothing in my package related to type annotations.
[08:21:50] *** Joins: orbatos (~orbatos@user/orbatos)
[08:22:02] <imp> NeilRG: I will keep looking. thanks you helped a lot. Show me the directions
[08:22:03] <NeilRG> imp, is the py.typed file showing up?
[08:22:13] <imp> NeilRG: no. not inside the package.
[08:22:14] <NeilRG> imp, in your installed folder
[08:22:18] <voldial> NeilRG: What would a abstract method look like? That's not a class method...
[08:22:20] <NeilRG> imp, so it's not eing exported
[08:22:21] <imp> NeilRG: no. not on folder.
[08:22:55] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[08:23:11] <NeilRG> voldial, yeah, I usually make a class method, raise NotImplementedError and implement it in child classes.  But by all means stick with your simple design :)
[08:23:18] <voldial> NeilRG: making it a member in the base class doesnt work, in this special case though right? self.iri can be two diferent objects..
[08:23:19] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[08:23:40] *** Joins: cheater (~Username@user/cheater)
[08:23:49] <voldial> NeilRG: aaah.
[08:23:54] <NeilRG> voldial, your derived classes would have to return self.iri_ (or some other name like that) in iri(self)....
[08:24:18] <NeilRG> voldial, yeah maybe overkill, but I've often started with a design like yours and found that I ended up with the abstract method...
[08:24:35] <voldial> NeilRG: yep. gotit. hm. yea I'll try this until it breaks:) but yea... I follow
[08:24:42] <NeilRG> voldial, exactly :)
[08:25:00] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[08:26:10] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 258 seconds)
[08:29:31] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[08:30:08] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[08:33:29] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[08:33:55] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[08:34:03] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:34:30] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 255 seconds)
[08:34:51] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (Quit: Leaving)
[08:35:11] *** Quits: ZenixOwler (~networker@118.69.128.37) (Quit: Leaving)
[08:36:01] <towel> It was attrs, found it!
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:41] *** Joins: Roey (~Roey@user/Roey)
[08:37:55] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:39:26] *** Joins: CombatVet (~c4@user/combatvet)
[08:40:31] *** Quits: clawh_ (~clawh@185.244.214.60) (Remote host closed the connection)
[08:41:29] <imp> NeilRG: I have forced the inclusion with MANIFEST.in file. Now it works.
[08:41:40] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[08:41:50] *** Quits: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net) (Quit: Leaving)
[08:41:51] <imp> NeilRG: but it is ugly.
[08:42:43] *** Joins: clawh (~clawh@185.244.214.60)
[08:43:04] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[08:44:26] *** Joins: SallyAhaj (sallyahaj@user/sallyahaj)
[08:47:01] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[08:47:48] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[08:48:00] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:50:09] *** Quits: yonatan (uid158779@id-158779.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[08:50:13] *** Joins: pnoud (~pnoud@user/pnoud)
[08:51:44] *** Quits: Liexei (Liexei@user/liexei) (Quit: Bye...)
[08:51:44] *** Quits: Titore (Titore@user/titore) (Quit: Bye!)
[08:51:44] *** Quits: Murgoth (Murgoth@user/murgoth) (Quit: fBNC - https://bnc4free.com)
[08:51:44] *** Quits: crackerjack (crackerjac@pear.bnc4free.com) (Quit: fBNC - https://bnc4free.com)
[08:52:16] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[08:52:48] *** Joins: minip (minip@user/minip)
[08:54:39] <voldial> How do I annotate a generic exception? '"Exception" has no attribute "errno"  [attr-defined]' https://github.com/jakeogh/retry_on_exception/blob/master/retry_on_exception/retry_on_exception.py#L106
[08:55:24] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[08:55:29] <voldial> it's a special case that an Exception has .errno, but I cant union together all possible exception types...
[08:56:55] <dale> Isn't it just OSError that has errno?  At least as far as built-in exceptions go.
[08:57:25] *** Joins: Liexei (Liexei@user/liexei)
[08:57:50] <dale> voldial: But, per your comment about intentionally raising AttributeError, I think I might just turn type checking off for that statement.
[08:58:12] <dale> I.e. # type: ignore
[08:58:22] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[08:58:33] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:59:03] <dale> Otherwise how about cast(OSError, e)
[08:59:12] <voldial> dale: hm. yea, I think it's just OSError that syscall stuf can return.
[08:59:23] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[08:59:36] *** Joins: crackerjack (crackerjac@pear.bnc4free.com)
[08:59:42] <dale> (That's typing.cast, to be clear.)
[08:59:44] *** Joins: cheater (~Username@user/cheater)
[09:00:40] <voldial> and here I was making sure I didnt miss a builtin for the last 20 years:)
[09:01:03] <voldial> yea, testin. that sounds right
[09:02:01] <voldial> wait so.. where? exception: is any exception...
[09:02:48] *** Joins: Titore (Titore@user/titore)
[09:02:51] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:03:18] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[09:03:23] * voldial reads https://docs.python.org/3/library/typing.html s l o w l y
[09:03:34] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:05:23] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[09:06:52] *** Joins: pnoud (~pnoud@user/pnoud)
[09:07:37] <jinsun> I prefer doing an isinstance check instead of cast if possible, within `if isinstance(e, OSerror)` block, mypy will assume e of type OSError
[09:09:04] *** Joins: darksun (~darksun@user/darksun)
[09:09:46] <jinsun> but if you want any type of exception not just OSError then probably a Protocol will be better
[09:10:45] <voldial> jinsun: that worked! I havent tried Protocol yet
[09:10:52] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 246 seconds)
[09:11:47] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[09:11:52] *** Quits: Elzington_ (~Elzington@static-198-54-128-36.cust.tzulo.com) (Ping timeout: 272 seconds)
[09:12:00] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[09:12:11] *** Joins: sandeepk (~sandeepk@223.130.30.125)
[09:12:39] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[09:12:40] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Quit: fBNC - https://bnc4free.com)
[09:12:44] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[09:12:49] <voldial> jinsun: interestingly, while isinstance() works, "if hasattr(e, 'errno'):" wont make mypy happy
[09:12:50] *** Joins: Elzington (~Elzington@static-198-54-128-78.cust.tzulo.com)
[09:13:35] <voldial> (3.9)
[09:13:44] <jinsun> ya hasattr is too dynamic for mypy, you should use Protocol when you want to do hasattr check
[09:14:22] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 246 seconds)
[09:14:27] <voldial> huah. interesting
[09:14:37] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[09:15:36] <dale> voldial: I was suggesting a cast where you're doing e.errno.
[09:16:03] <voldial> dale: I just havent figured how to use typing.cast()
[09:16:36] <dale> if not typing.cast(OSError, e).errno == errno:
[09:16:58] <voldial> ooooO
[09:17:12] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[09:17:18] <voldial> had no idea typing did this
[09:17:34] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 272 seconds)
[09:17:44] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[09:19:08] <nesoi> is there a python fiddle?
[09:21:56] *** Joins: ZenixOwler (~zenix@118.69.128.37)
[09:22:13] <ZenixOwler> whoops diconnected, so anyone knows about the main import file of flask_sqlalchemy ? :P
[09:22:54] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[09:23:50] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[09:24:51] <dale> ZenixOwler: I suspect https://github.com/pallets/flask-sqlalchemy/blob/main/src/flask_sqlalchemy/__init__.py
[09:25:20] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:25:31] *** Joins: pnoud (~pnoud@user/pnoud)
[09:26:21] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 258 seconds)
[09:26:34] *** Quits: imp (~imp@186.205.11.214) (Quit: imp)
[09:27:21] <matsaman> nesoi: here and there
[09:30:32] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:30:45] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[09:30:48] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 265 seconds)
[09:30:50] <nesoi> ?
[09:32:52] *** Joins: node1 (~node1@user/node1)
[09:33:04] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:17] <node1> Hi
[09:33:31] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[09:33:47] <Gustavo6046> is trio still the awesomest
[09:33:55] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[09:36:38] <ZenixOwler> dale: yea, this is gonna take some times trying to see the full picture
[09:36:59] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[09:39:17] <node1> When object is being created, i believe it has the data and code. I would likes to know if is there anyway to view both data and object?
[09:39:40] <node1> data and program*
[09:39:46] *** Quits: Elzington (~Elzington@static-198-54-128-78.cust.tzulo.com) (Ping timeout: 258 seconds)
[09:40:27] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[09:41:47] *** Quits: jazzy (~jaziz@2600:380:8451:9914:745f:c6b0:8b18:af60) (Ping timeout: 245 seconds)
[09:42:41] *** Joins: pnoud (~pnoud@user/pnoud)
[09:43:10] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[09:44:43] *** Quits: ZenixOwler (~zenix@118.69.128.37) (Quit: Leaving)
[09:44:44] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:44:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:45:45] *** Quits: p-i-_ (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[09:45:59] *** Joins: djapo (~archangel@user/djapo)
[09:46:36] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[09:46:55] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-05da-3b5d-73ee-9c90.res6.spectrum.com) (Ping timeout: 246 seconds)
[09:47:03] *** Joins: cheater (~Username@user/cheater)
[09:47:26] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[09:47:36] *** Joins: p-i- (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net)
[09:49:21] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) (Remote host closed the connection)
[09:50:31] *** Joins: Elzington (~Elzington@static-198-54-128-110.cust.tzulo.com)
[09:50:57] *** Quits: auctus (~auctus@user/auctus) (Remote host closed the connection)
[09:51:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 246 seconds)
[09:52:24] *** Quits: p-i- (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net) (Ping timeout: 272 seconds)
[09:52:55] *** Quits: Kays (Kays@user/kays) (Quit: bai bai)
[09:53:19] *** Joins: jinsun (~quassel@user/jinsun)
[09:55:07] *** Joins: Vonter (~Vonter@user/vonter)
[09:56:09] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[09:56:15] *** Joins: OPK (~OPK@user/opk)
[09:56:18] <Gustavo6046> ooh wait
[09:56:30] <Gustavo6046> I can just test_<something>.py alongside <something>.py in the same folder?
[09:56:32] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:57:05] *** Joins: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net)
[09:57:45] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:03:04] *** Joins: kmh_ (~kmh@p2e51169e.dip0.t-ipconnect.de)
[10:03:10] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:03:34] *** Joins: dkmueller (~dkmueller@2a01:c22:7215:ba00:dd83:761:d915:71cb)
[10:03:57] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[10:03:59] *** Joins: erica (~erica@user/erica)
[10:04:14] *** Quits: mcglk (~mcglk@131.191.49.120) (Quit: (seeya))
[10:04:17] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[10:05:04] *** Joins: Crassus (~Crassus@user/crassus)
[10:05:07] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[10:05:35] *** Joins: HaMsTeRs (~mx@121.202.103.9)
[10:06:40] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[10:07:16] *** Joins: mcglk (~mcglk@131.191.49.120)
[10:07:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[10:07:42] *** Joins: upsala (~zcb@185.213.155.160)
[10:08:11] *** Joins: darksun (~darksun@user/darksun)
[10:08:32] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[10:08:57] *** Quits: kor1 (~kor1@user/kor1) (Ping timeout: 268 seconds)
[10:12:40] *** Quits: computeiro (~Wender@189.37.64.59) (Ping timeout: 272 seconds)
[10:13:30] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[10:15:29] *** Quits: Elzington (~Elzington@static-198-54-128-110.cust.tzulo.com) (Ping timeout: 255 seconds)
[10:16:28] *** Joins: p-i- (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net)
[10:17:04] *** Joins: cheater1__ (~Username@user/cheater)
[10:17:06] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[10:17:11] *** cheater1__ is now known as cheater
[10:17:35] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 268 seconds)
[10:17:43] *** Quits: gitly (~gitly@85.255.233.176) (Ping timeout: 258 seconds)
[10:17:47] *** Joins: mei (~mei@user/mei)
[10:18:10] *** Joins: Elzington (~Elzington@static-198-54-128-110.cust.tzulo.com)
[10:18:11] *** Quits: sebastianos (~sebastian@user/sebastianos) (Read error: Connection reset by peer)
[10:19:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[10:22:20] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[10:24:40] *** Joins: wyclif (~wyclif@user/wyclif)
[10:25:34] *** Joins: Elzington_ (~Elzington@static-198-54-128-78.cust.tzulo.com)
[10:26:47] *** Joins: sebastianos (~sebastian@user/sebastianos)
[10:26:51] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[10:27:50] *** Joins: japh (~scp1@user/japh)
[10:28:21] *** Quits: Elzington (~Elzington@static-198-54-128-110.cust.tzulo.com) (Ping timeout: 255 seconds)
[10:29:04] *** Quits: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net) (Quit: Leaving.)
[10:29:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[10:29:39] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[10:29:54] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:30:00] *** Joins: wyclif (~wyclif@user/wyclif)
[10:30:08] *** Joins: jessicar1 (~shirogits@user/jessicara)
[10:31:03] *** Quits: jessicara (~shirogits@user/jessicara) (Ping timeout: 255 seconds)
[10:31:40] <japh> I'm going insane in a minute. For some reason I can't figure out, the if condition _never_ renders true. What am I doing wrong? https://paste.ofcode.org/BwTrESN7TzTMEuKLhLxqWf
[10:32:22] *** Joins: CombatVet (~c4@user/combatvet)
[10:33:11] <deniska> japh: you forgot ()
[10:33:14] <Repiphany> w.upper missing ()
[10:33:26] *** Quits: HaMsTeRs (~mx@121.202.103.9) (Quit: Konversation terminated!)
[10:33:34] <japh> what the
[10:33:35] <japh> :D
[10:36:35] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:37:08] *** jessicar1 is now known as jessicara
[10:37:19] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Ping timeout: 268 seconds)
[10:38:09] *** Joins: kosh (~kosh@user/kosh)
[10:38:12] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[10:39:36] *** Joins: ice9 (~ice9@user/ice9)
[10:39:41] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[10:40:56] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[10:41:01] *** Quits: menace (~someone@user/menace) (Quit: menace)
[10:41:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[10:41:42] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:41:56] *** Joins: cheater (~Username@user/cheater)
[10:42:04] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Client Quit)
[10:42:53] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:43:16] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Max SendQ exceeded)
[10:45:29] *** Joins: resmo__ (~resmo@2a00:d420:9:8a00::ffc)
[10:46:55] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[10:46:55] *** Quits: ham5urg (~ham5urg@212.39.104.196) (Read error: Connection reset by peer)
[10:46:57] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:38] *** Joins: seednode (~seednode@user/seednode)
[10:48:00] *** Quits: resmo_ (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Ping timeout: 258 seconds)
[10:48:19] *** Joins: ham5urg (~ham5urg@94.250.37.235)
[10:49:35] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[10:49:44] *** Joins: manti7 (~manti7@176.10.104.94)
[10:51:29] *** Quits: p-i- (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[10:53:02] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 245 seconds)
[10:55:38] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[10:55:56] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[10:57:44] *** Joins: gusto (~Augustus@2620:149:e0:6004::55)
[10:58:19] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[10:59:15] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[10:59:37] *** Joins: cheater (~Username@user/cheater)
[11:01:14] *** Joins: pnoud (~pnoud@user/pnoud)
[11:01:59] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[11:02:08] *** Joins: Kays (Kays@user/kays)
[11:04:00] *** Joins: rendar (~rendar@user/rendar)
[11:04:53] *** Joins: dvx (~dvx@185.63.97.64)
[11:05:10] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:05:42] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 255 seconds)
[11:06:10] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[11:06:59] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[11:07:46] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[11:08:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:09:29] *** Quits: dkmueller (~dkmueller@2a01:c22:7215:ba00:dd83:761:d915:71cb) (Quit: WeeChat 3.2)
[11:11:25] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[11:11:27] <no_gravity> Good Morning
[11:11:48] <no_gravity> So I am continuing my journey to speed up doing css selectors on html strings.
[11:12:08] <no_gravity> Throwing real world html at lxml makes it die screeming right away.
[11:12:23] <no_gravity> Does anybody know if there is a performant way to get around this?
[11:14:38] <deniska> I don't remember lxml.html ever having problems with performance
[11:14:59] <no_gravity> deniska: The performance problems are when using BS4.
[11:15:10] <no_gravity> deniska: I am replacing BS4 with using lxml directly.
[11:15:38] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[11:15:41] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:15:46] <no_gravity> Looks like the "die screeming" might go away if I use "lxml.html.fromstring" instead of "lxml.etree.fromstring".
[11:16:08] <deniska> yeah, lxml.etree.fromstring expects, well, XML
[11:16:15] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[11:16:23] <deniska> and nobody writes XHTML anymore :)
[11:16:52] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[11:18:30] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:19:13] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[11:20:13] <no_gravity> Why can't I do this? sel = lxml.cssselect.CSSSelector(selector)
[11:21:11] <deniska> iirc, it was `foo = lxml.html.fromstring(…)` and then you could do `foo.cssselect(…)`
[11:22:22] <no_gravity> I mean, why can I do this: from lxml.cssselect import CSSSelector
[11:22:30] *** Quits: northernsage (northernsa@gateway/vpn/protonvpn/northernsage) (Ping timeout: 258 seconds)
[11:22:35] <no_gravity> But not this: sel = lxml.cssselect.CSSSelector(selector)
[11:23:15] <no_gravity> It gives me: AttributeError: module 'lxml' has no attribute 'cssselect'
[11:23:45] <deniska> import lxml.cssselect
[11:23:52] <Repiphany> Modules don't always import all of their submodules
[11:24:04] <no_gravity> Repiphany: They have a choice?
[11:24:28] <deniska> no_gravity: yeah, if a module wants its submodules imported, it does so in __init__.py
[11:24:32] <Repiphany> You have to define explicitly what should get imported in the __init__
[11:24:44] <no_gravity> I see. Confusing.
[11:26:12] <no_gravity> lxml.html seems to have no "fromstring"
[11:26:46] *** Quits: Elzington_ (~Elzington@static-198-54-128-78.cust.tzulo.com) (Ping timeout: 272 seconds)
[11:27:03] <no_gravity> I mean, this works: from lxml.html import fromstring
[11:27:14] <no_gravity> But this does not: import lxml.html.fromstring
[11:27:18] <no_gravity> What black magic is that?
[11:27:31] <deniska> lxml.html is a module, fromstring is a function
[11:27:59] <deniska> you can do `import module` but not `import module.thing_in_that_module`
[11:28:16] <no_gravity> deniska: I see. So I can "import lxml.html" and then do "lxml.html.fromstring()"
[11:28:21] <deniska> yes
[11:28:44] *** Joins: ZenixOwler (~zenix@118.69.128.37)
[11:29:11] *** Joins: Elzington (~Elzington@static-198-54-128-108.cust.tzulo.com)
[11:29:22] <no_gravity> It might work now. But this fails: lxml.html.tostring(elem,method='text')
[11:29:22] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:29:31] <no_gravity> Gives me: UnicodeEncodeError: 'ascii' codec can't encode character '\u2019' in position 5747: ordinal not in range(128)
[11:30:08] <ZenixOwler> another question and this one is a bit on purpose, i was messing around with Python a bit by declaring a module named "os.py" next to my main module and when i tried to run it, things resulted into this : https://pastebin.com/WfvUmAyH, i mean why tho ?
[11:30:17] <deniska> no_gravity: perhaps lxml.html.tostring(elem, method='text', encoding='utf-8')
[11:31:05] <deniska> ZenixOwler: python runs site.py before it runs your code, and site.py tries to use `os` module, and imports yours os.py instead
[11:31:25] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[11:31:36] <no_gravity> deniska: Seems to work. It gives me "bytes" though. Why does it not give me a string?
[11:31:54] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:31:55] <ZenixOwler> deniska: that's weird, i don't see any site.py around here or at least that is what Pyrcharm is showing
[11:33:03] <deniska> no_gravity: dunno, maybe because lxml is an old module written in py2, and it's a wrapper around libxml C library, so its API is "bytes-ey"
[11:33:13] <deniska> originally written for py2*
[11:33:14] *** Joins: Julian (~tos9@python/site-packages/Julian)
[11:33:19] *** Quits: inom (~inom@176.59.109.161) (Quit: Lost terminal)
[11:34:09] <no_gravity> deniska: I see
[11:34:25] <no_gravity> I wonder why looking up something in the python documentation is so hard.
[11:34:34] *** Joins: jazzy (~jaziz@2600:380:8451:9914:40f9:c6b2:7e06:c8f5)
[11:34:50] <deniska> ZenixOwler: it's somewhere in python installation dir, for example /usr/lib/python3.9/site.py on my system
[11:35:03] <ZenixOwler> Oh ok
[11:35:15] <no_gravity> Am I doing something wrong or is there really no easy way to get to a page about the "decode" funtion of the "bytes" object?
[11:35:26] *** Joins: raydeeam (uid325131@dgplug/raydeeam)
[11:35:38] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:35:44] <deniska> no_gravity: help(bytes.decode) in python repl works
[11:36:08] <no_gravity> I would have hoped typing "python bytes decode" into Google would lead to something like docs.python.org/bytes_decode_function
[11:36:11] <no_gravity> But no :/
[11:36:45] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 255 seconds)
[11:37:08] <no_gravity> deniska: Well, that feels like it is how we looked up before there were monitors and the output was printed to paper :) But it works. Thanks.
[11:37:19] <jinsun> no_gravity: https://docs.python.org/3/library/stdtypes.html#bytes.decode
[11:37:20] <Julian> it does. https://docs.python.org/3/library/stdtypes.html#bytes.decode
[11:37:28] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[11:37:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:38:03] <ZenixOwler> deniska: also i was trying to research about this sys.path and as python docs said, it will import from the order of the list of sys.path on whichever it finds first, but i tried another scenario and it didn't work tho where i have os.py next to my main module
[11:38:05] <deniska> but yeah, https://docs.python.org/3/library/stdtypes.html is my least favorite part of python documentation :)
[11:38:05] <no_gravity> jinsun, Julian: Thanks. How did you get there?
[11:38:13] <ZenixOwler> deniska: is there any possible reason why that happens ?
[11:38:29] <Julian> no_gravity: I did what you said :) it's the first google result, though it doesn't take you directly to the fragment
[11:38:34] <no_gravity> This "tons of functions on one page" documentation format is the horror :)
[11:38:34] <ferz> I'm using an application written by someone else using SQLAlchemy and mysql as db.  I would like to migrate it on PostgreSQL and to handle the process in the middle, I've configured PostgreSQL as front-end to mysql: now PosgreSQL has mysql as a foreign server and PostgreSQL interpreter is quite better than mysql CLI.
[11:38:34] <ferz> I've changed the SQLAlchemy driver from mysql to pg8000 and almost of it seems working but I got some error like: https://bsd.to/WJvT/raw
[11:38:50] <ferz> It's for type mismatch between PostgreSQL and MySQL: the second lacks of a real boolean type.
[11:38:51] *** Joins: wyclif (~wyclif@user/wyclif)
[11:39:07] <ferz> Have you hint about how can I fix?
[11:39:09] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:39:18] <Julian> no_gravity: Having one page per function would be super inconvenient, the normal way you want to look at things are all together.
[11:39:53] <Julian> (Splitting out the builtin type page a bit more wouldn't be a bad idea though, just not one per function.)
[11:39:57] <no_gravity> Julian: Everybody (including me) loves the PHP documentation. It does one function per page and has user comments at the bottom. It is heaven.
[11:40:06] *** Quits: rapier (~marcos@170.233.159.1) (Ping timeout: 256 seconds)
[11:40:16] <Julian> no_gravity: No comment :)
[11:40:20] <kosh> no_gravity, everybody?
[11:40:49] <no_gravity> Julian: Compare the python page snippet you linked to to this: https://www.php.net/manual/en/function.utf8-decode.php
[11:40:49] <deniska> ferz: generally programs working with SQL aren't too portable between databases. SQLAlchemy tries to mitigate the differences, but I'm not sure whether "you work with postgres, but should abide by mysql type restrictions" is a thing expressable through it
[11:41:11] <Julian> no_gravity: I have seen the PHP documentation before.
[11:41:22] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[11:41:22] <kosh> actually I think documentation for functions should depend on how complex they are, for lots of the core python functions you can have many on one page because they are simple, for numpy and scipy having one per page makes a lot more sense in many cases, or sklearn which tends to have a group of closely related functions on a page
[11:41:25] <Julian> (And yeah I stick with my first comment)
[11:41:34] <Julian> kosh: Right
[11:41:39] <deniska> ZenixOwler: well, if you break os module, python can't meaingfully start up using its regular procedure involving running site.py
[11:41:41] <Julian> Normally you'd hope the module structure reflects that too
[11:41:52] <jinsun> no_gravity: I knew bytes was a builtin so I went there first https://docs.python.org/3/library/functions.html#func-bytes, then it pointed me to Bytes and Bytearray Operations
[11:42:03] *** Joins: cheater (~Username@user/cheater)
[11:42:03] <Julian> (I.e. that like the complexity/density of complexity somehow is flattened across the thing you're documenting)
[11:42:10] <deniska> ZenixOwler: you can ask python not to execute site.py, but site.py is (mostly) what fills sys.path in the first place
[11:42:35] <ZenixOwler> deniska: oh no on my second example i didn't even use Pycharm so is that still valid ? i was running straight on my terinal
[11:42:36] <ferz> deniska: Yes, I understand
[11:42:38] <ZenixOwler> terminal*
[11:43:07] <deniska> ZenixOwler: not sure what's the other scenario, did you describe it? :)
[11:43:20] <ferz> deniska: I'm looking for a workaround at this time.
[11:43:40] *** Joins: palasso (~palasso@user/palasso)
[11:43:48] <kosh> Julian, for example  https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.differential_evolution.html    1 function per page is the max that makes sense for this
[11:43:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[11:43:57] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 255 seconds)
[11:44:07] <Julian> Yep. Agreed.
[11:44:23] <ZenixOwler> deniska: main module importaing my self-made os.py, but it doesn't seem like it is detecting my local os.py but important the system's one instead when i tried to run it through terminal, on the other hand, when i tried the exact same scenario in Pycharm, it resulted in the previous error i sent you, you already clarified the second one tho so thk
[11:44:43] *** Joins: wyclif (~wyclif@user/wyclif)
[11:45:07] <no_gravity> Ok, first version of the new lxml based parser works. Outpuerforms the BS4 version by a factor of 6.
[11:45:09] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:45:10] <kosh> don't name your own modules the same as built in python modules
[11:45:19] <kosh> or the same as other common modules
[11:45:23] <kosh> it just makes it confusing
[11:45:23] <no_gravity> But it also produces slightly different result. Will be interesting to dive in and see how they differ.
[11:45:28] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[11:45:33] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[11:46:26] <rendar> anyone used janus queue in production?
[11:46:58] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[11:47:12] *** Joins: chele (~chele@user/chele)
[11:47:33] *** Quits: jazzy (~jaziz@2600:380:8451:9914:40f9:c6b2:7e06:c8f5) (Ping timeout: 255 seconds)
[11:47:34] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[11:49:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[11:50:11] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[11:50:12] *** Joins: wyclif (~wyclif@user/wyclif)
[11:51:17] *** Joins: jazzy (~jaziz@2600:380:8451:9914:a849:127b:48d6:243b)
[11:55:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[11:55:43] *** Joins: wyclif (~wyclif@user/wyclif)
[11:56:33] *** Quits: audiocat (~audio@2603-8081-1800-00ad-2d8c-df58-6f9e-6622.res6.spectrum.com) (Ping timeout: 255 seconds)
[11:59:09] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:00:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[12:01:15] *** Joins: wyclif (~wyclif@user/wyclif)
[12:03:12] *** Quits: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net) (Remote host closed the connection)
[12:05:26] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[12:05:52] *** Joins: cheater (~Username@user/cheater)
[12:06:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[12:06:27] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[12:06:45] *** Joins: wyclif (~wyclif@user/wyclif)
[12:07:58] *** Joins: darksun (~darksun@user/darksun)
[12:09:01] *** Joins: Naan` (~Naan@user/naan)
[12:09:17] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 245 seconds)
[12:10:16] *** Joins: pnoud (~pnoud@user/pnoud)
[12:10:28] *** Joins: p-i- (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net)
[12:11:04] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[12:11:18] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:11:23] *** Quits: mandeep (uid394387@id-394387.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[12:11:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[12:12:16] *** Joins: wyclif (~wyclif@user/wyclif)
[12:13:39] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[12:14:23] *** Quits: p-i- (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[12:15:00] *** Joins: shad (~shad@user/shad)
[12:15:04] *** Joins: p-i-_ (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net)
[12:15:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:19] *** Joins: darksun (~darksun@user/darksun)
[12:15:24] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[12:16:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[12:17:42] *** Quits: ham5urg (~ham5urg@94.250.37.235) (Ping timeout: 258 seconds)
[12:17:47] *** Joins: wyclif (~wyclif@user/wyclif)
[12:19:27] *** Joins: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com)
[12:19:53] *** Quits: p-i-_ (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[12:22:12] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[12:22:33] *** Joins: cheater (~Username@user/cheater)
[12:22:43] <Jonno_FTW> is it possible to use a pytest parametrize with a unittest subclass?
[12:22:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:22:56] *** Joins: Gerula (~Gerula@user/gerula)
[12:27:53] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Read error: Connection reset by peer)
[12:28:47] *** Joins: wyclif (~wyclif@user/wyclif)
[12:30:44] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 272 seconds)
[12:31:23] <Julian> doubt it
[12:31:28] <Julian> testscenarios is what you use with unittest
[12:31:35] <Julian> or these days I guess `TestCase.subTest`
[12:33:53] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:33:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:34:19] *** Joins: wyclif (~wyclif@user/wyclif)
[12:34:29] *** Quits: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com) (Ping timeout: 268 seconds)
[12:36:49] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:49] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:39:39] *** Joins: MemoriaVetusta (~MemoriaVe@95.181.232.12)
[12:39:49] *** Joins: wyclif (~wyclif@user/wyclif)
[12:41:22] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:41:44] *** Joins: p-i- (~Ohmu@2001:44c8:460d:86d:c59f:b931:81a3:31cf)
[12:41:53] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[12:42:14] *** Joins: cheater (~Username@user/cheater)
[12:42:19] *** Joins: mokulus (~mokulus@user/mokulus)
[12:42:41] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 265 seconds)
[12:42:52] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[12:43:42] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:1608:5ddb:ace2:2fb3)
[12:44:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:45:20] *** Joins: wyclif (~wyclif@user/wyclif)
[12:46:38] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 252 seconds)
[12:47:35] *** Quits: p-i- (~Ohmu@2001:44c8:460d:86d:c59f:b931:81a3:31cf) (Remote host closed the connection)
[12:47:49] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[12:48:51] *** Quits: orbatos (~orbatos@user/orbatos) (Quit: Leaving)
[12:49:10] *** Joins: raxor2k (~raxor2k@78.158.254.246)
[12:49:23] <raxor2k> bjs: i removed all try and catchs and did as you said
[12:49:27] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[12:49:33] <raxor2k> the problem is somehow "still" there
[12:49:43] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[12:50:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[12:50:36] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:50:52] *** Joins: wyclif (~wyclif@user/wyclif)
[12:50:58] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[12:53:07] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b842-d119-7737-43fd.res6.spectrum.com)
[12:54:22] *** Joins: pycode (~pycode@2001:b07:5d28:551:4e97:8b04:5748:758e)
[12:54:23] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[12:54:55] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[12:55:52] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[12:56:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:56:10] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[12:56:30] *** Joins: wyclif (~wyclif@user/wyclif)
[12:56:48] *** Joins: cheater (~Username@user/cheater)
[12:57:23] *** Joins: CombatVet (~c4@user/combatvet)
[12:58:00] *** Joins: schumaml1 (~schumaml@dslb-178-007-202-155.178.007.pools.vodafone-ip.de)
[12:58:22] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[12:58:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[12:58:59] *** Quits: Kays (Kays@user/kays) (Quit: bai bai)
[12:59:59] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:00:11] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 255 seconds)
[13:01:01] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:01:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[13:01:32] *** Quits: schumaml (~schumaml@dslb-178-007-199-204.178.007.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[13:01:47] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 258 seconds)
[13:02:00] *** Joins: wyclif (~wyclif@user/wyclif)
[13:02:22] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:02:30] *** Joins: Kays (Kays@user/kays)
[13:03:53] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:e4f8:5db5:1df3:42f5)
[13:06:03] *** schumaml1 is now known as schumaml
[13:06:46] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[13:07:17] *** Joins: cheater (~Username@user/cheater)
[13:07:57] *** Joins: Payam (~Payam@138.106.57.132)
[13:08:39] *** Quits: Kays (Kays@user/kays) (Quit: bai bai)
[13:08:45] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[13:09:35] *** Joins: azazello (~azazello@109.75.158.195)
[13:09:38] *** Joins: Kays (Kays@user/kays)
[13:10:41] *** Joins: p-i- (~Ohmu@2001:44c8:460d:86d:95dd:81d7:3acb:5de1)
[13:11:42] *** Quits: pycode (~pycode@2001:b07:5d28:551:4e97:8b04:5748:758e) (Ping timeout: 255 seconds)
[13:13:17] *** Joins: Tempesta (Tempesta@user/tempesta)
[13:13:39] *** Quits: p-i- (~Ohmu@2001:44c8:460d:86d:95dd:81d7:3acb:5de1) (Remote host closed the connection)
[13:13:40] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[13:17:32] *** Quits: rpkilby__ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:18:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[13:19:43] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:20:48] *** Joins: brabrax (~brabrax@user/brabrax)
[13:20:51] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[13:21:30] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[13:21:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[13:22:55] *** Joins: wyclif (~wyclif@user/wyclif)
[13:24:01] *** Quits: jazzy (~jaziz@2600:380:8451:9914:a849:127b:48d6:243b) (Read error: Connection reset by peer)
[13:25:08] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 252 seconds)
[13:28:55] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:29:58] *** Joins: brabrax (~brabrax@user/brabrax)
[13:32:14] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[13:32:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[13:33:02] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:33:12] *** Quits: Somni (insomnia@193-227-58-66.gci.net) (Ping timeout: 252 seconds)
[13:33:46] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[13:33:56] *** Joins: wyclif (~wyclif@user/wyclif)
[13:34:13] *** Joins: pnoud (~pnoud@user/pnoud)
[13:34:48] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[13:35:06] *** Joins: mokulus (~mokulus@user/mokulus)
[13:36:14] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[13:36:31] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[13:36:53] *** Quits: dominikoso (~dominikos@IP-80-94-28-144.internet.lantech.com.pl) (Ping timeout: 252 seconds)
[13:38:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[13:39:21] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[13:39:26] *** Joins: wyclif (~wyclif@user/wyclif)
[13:41:13] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:41:55] <graingert> did something change in __file__ handling in python 3.8.11 and 3.9.6 ?
[13:42:17] <graingert> pretty sure it broke my workflow
[13:43:03] <VaniaPy> Hi,i'm trying to implement a geolocation search api in django with geocoder
[13:43:17] <VaniaPy> that receives the coordinates and returns the location
[13:43:40] <VaniaPy> but it doesn't seem to give me back results
[13:43:56] <VaniaPy> could someone give me a tip, here;s the code https://dpaste.org/QVB5
[13:44:15] <apollo13> graingert: at some point it always became an abspath or so (dunno, my mind may be playing tricks as well)
[13:44:25] <apollo13> or was that only about argv[0]
[13:45:07] <graingert> apollo13: https://bugs.python.org/issue44070
[13:46:20] *** Joins: doev (~doev@p549d74f6.dip0.t-ipconnect.de)
[13:46:20] *** Joins: pycode (~pycode@2001:b07:5d28:551:e0a8:30f8:63ec:2567)
[13:47:09] *** Joins: luke__80 (~luke@host-95-249-55-150.retail.telecomitalia.it)
[13:47:14] <luke__80> hy everyone
[13:47:21] <luke__80> *hi
[13:47:31] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:48:09] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:48:24] <luke__80> experiencing something weird with requests. trying to make a get or a post to a url, until yesterday was working, now i'm getting a 404.
[13:48:52] <luke__80> tried to curlify it, with the cURL string -> it works...
[13:49:05] *** Joins: senatoreg (~senatoreg@net-5-95-175-59.cust.vodafonedsl.it)
[13:49:09] *** Joins: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il)
[13:49:12] *** Joins: brabrax (~brabrax@user/brabrax)
[13:49:33] <luke__80> tied to disable the warnings and set verify=False but got the same results
[13:49:38] <luke__80> *tried
[13:50:49] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[13:51:03] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[13:51:09] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 244 seconds)
[13:51:52] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[13:52:19] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[13:52:50] *** Parts: senatoreg (~senatoreg@net-5-95-175-59.cust.vodafonedsl.it) ()
[13:53:16] <Luyin> is there something wrong with the pylint homepage? It references this link as "Full list of codes (wiki)": http://pylint-messages.wikidot.com/, which leads to a page that seems to be full of Chinese.
[13:54:37] *** Joins: slav0nic (slav0nic@python.su)
[13:57:19] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[13:57:20] *** Joins: pnoud (~pnoud@user/pnoud)
[13:58:34] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[13:58:44] *** Joins: p-i- (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net)
[13:59:20] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[13:59:37] <Repiphany> Wikis are ripe targets for spam
[14:02:26] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[14:02:54] <Payam> hi. does subprocess.run block the main thread?
[14:03:49] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[14:04:31] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[14:07:07] *** Joins: nichlas (nichlas@gateway/vpn/protonvpn/nichlas)
[14:07:12] <raxor2k> can i say to the code: "if this exception --> do this"
[14:07:15] <raxor2k> like this? : https://bpa.st/UQ2A
[14:07:22] <raxor2k> or do i need to use "finally" here ?
[14:07:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:07:32] *** Quits: nichlas (nichlas@gateway/vpn/protonvpn/nichlas) (Client Quit)
[14:07:51] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[14:10:54] <Repiphany> Don't catch generic Exception
[14:11:31] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[14:11:40] <jor> raxor2k: huh? an 'except' clause is 'if this exception' :/
[14:12:04] *** Joins: cheater (~Username@user/cheater)
[14:12:12] <jor> but sure, could check the type of e if you really wanted that :\
[14:12:36] <raxor2k> jor: i want to be able to do something once that exception happens
[14:13:09] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 268 seconds)
[14:13:24] *** Quits: luke__80 (~luke@host-95-249-55-150.retail.telecomitalia.it) (Quit: Client closed)
[14:13:53] <Repiphany> https://bpa.st/3UOA
[14:13:55] <jor> still don't get it... that's what an except clause does, just add a more specifc one that catches 'that exception'
[14:14:58] <raxor2k> jor: "if RunTimerError":  print("i want to kick the user from the server that causes this exception")
[14:15:05] <raxor2k> you get the point ?
[14:15:31] *** Joins: pnoud (~pnoud@user/pnoud)
[14:16:42] <GinFuyou> then except RuntimeError
[14:16:46] <jor> use "except RunTimerError:"  instead of you except Exception
[14:17:20] <raxor2k> ok
[14:18:21] *** Joins: snowman (~anonymous@194.31.97.12)
[14:18:45] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[14:18:57] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:19:13] *** Joins: kosh (~kosh@user/kosh)
[14:20:15] <snowman> hi
[14:20:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 245 seconds)
[14:21:07] <Payam> hi. does subprocess.run block the main thread?
[14:21:20] <deniska> Payam: it blocks the thread it runs on
[14:21:42] <Payam> how about Popen?
[14:21:45] <Payam> does it too?
[14:22:24] *** Quits: snowman (~anonymous@194.31.97.12) (Quit: Client closed)
[14:23:45] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[14:23:54] <jor> Payam: if you don't want it blocking you need multiprocess Pool.. or asyncio
[14:26:22] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 252 seconds)
[14:26:33] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[14:26:34] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[14:27:41] *** Joins: Mikro (leo@the.punkrock.show)
[14:28:21] *** Joins: kosh (~kosh@user/kosh)
[14:28:53] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.2)
[14:28:56] *** Joins: c10l (~c10l@89.34.167.207)
[14:29:59] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[14:30:25] *** Quits: pycode (~pycode@2001:b07:5d28:551:e0a8:30f8:63ec:2567) (Ping timeout: 246 seconds)
[14:30:35] *** Joins: jazzy (~jaziz@2600:380:8451:9914:fca6:875f:9a18:2a53)
[14:31:18] *** Joins: iomari891 (~iomari891@105.112.138.38)
[14:31:34] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[14:31:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:32:36] *** Joins: bambams (~bambams@user/bambams)
[14:33:02] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[14:33:32] <deniska> Payam: Popen doesn't block, but it's also hard to use correctly if IO via stdin/stdout is involved
[14:33:52] *** Joins: cheater (~Username@user/cheater)
[14:34:29] *** Joins: zaquest (~notzaques@5.128.210.178)
[14:35:51] *** Joins: pycode (~pycode@2001:b07:5d28:551:af39:fe5:149:ad69)
[14:36:28] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[14:38:26] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:39:54] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577)
[14:43:19] *** Quits: Brocker (~NoBody@user/brocker) (Quit: ZNC 1.8.2 - https://znc.in)
[14:44:35] *** Quits: pycode (~pycode@2001:b07:5d28:551:af39:fe5:149:ad69) (Ping timeout: 255 seconds)
[14:48:38] <bjs> Payam: subprocess.run waits for the command to complete,  if you don't want to block waiting for the process to finish then yeah Popen will work. But you'll have to interact with the process more "manually" (reading/writing streams and polling for exit status etc)
[14:53:51] *** Joins: minip (minip@user/minip)
[14:54:05] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[14:54:42] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[14:55:31] *** Joins: hanetzer (~hanetzer@user/hanetzer)
[14:56:18] *** Joins: Brocker (~NoBody@user/brocker)
[14:56:41] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[14:56:49] *** Quits: arischow (~arischow@2a09:bac0:35::819:60ab) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:57:42] *** Joins: mokulus (~mokulus@user/mokulus)
[14:58:02] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Remote host closed the connection)
[15:00:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[15:00:47] *** Joins: cheater (~Username@user/cheater)
[15:02:02] *** Joins: varaindemian (~varaindem@86.124.78.162)
[15:02:09] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:02:18] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[15:03:07] *** Joins: entuland (~entuland@user/entuland)
[15:06:19] *** Joins: Guddu (~Guddu@223.177.43.7)
[15:09:08] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[15:09:17] *** Joins: cheater (~Username@user/cheater)
[15:09:25] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:09:41] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[15:09:53] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 268 seconds)
[15:11:42] *** Joins: CombatVet (~c4@user/combatvet)
[15:13:37] *** Joins: sebastianos (~sebastian@user/sebastianos)
[15:15:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:17:20] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[15:17:46] *** Joins: cheater (~Username@user/cheater)
[15:17:56] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:21:10] <Payam> bjs there is a code here where subprocess.Popen is used and then an other thread is used to send the stdout to a socketio channel. is it a correct way? or can one send the stdout directyly to the channel wthout creating a thread : https://bpa.st/NVYA
[15:22:07] *** Joins: snowman (~tracker@194.31.97.12)
[15:25:46] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[15:25:55] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[15:26:12] *** Joins: cheater (~Username@user/cheater)
[15:26:48] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 268 seconds)
[15:28:10] *** Quits: doev (~doev@p549d74f6.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[15:30:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:31:18] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:33:52] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[15:33:53] *** Joins: Linux77 (~kvirc@131-179-233-186.raimax.com.br)
[15:34:40] *** Joins: cheater (~Username@user/cheater)
[15:34:44] *** Joins: rsx (~dummy@ppp-188-174-134-157.dynamic.mnet-online.de)
[15:36:18] *** Quits: Brocker (~NoBody@user/brocker) (Quit: ZNC 1.8.2 - https://znc.in)
[15:38:06] *** Joins: andrews (~andrews@user/andrews)
[15:38:19] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 246 seconds)
[15:38:31] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[15:38:37] <andrews> debugging with pdb is painful
[15:38:43] <andrews> I want a GUI debugger
[15:39:03] <AhmedAmerican_> within pandas, am looking to create a new column based on value from other column. what should be the most quickest way? for example am dealing with 50k rows.
[15:39:22] <weedmic> i like jupyter notebook, but not really gui
[15:39:42] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[15:40:03] *** Joins: cheater (~Username@user/cheater)
[15:40:06] *** Joins: pnoud (~pnoud@user/pnoud)
[15:40:14] <AhmedAmerican_> column `URL` include `NaN` and `url` .. so i would like to extract last 4 chars of the url if it's there, and keep `NaN` if there's no url.
[15:40:33] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[15:42:00] *** Quits: rany (~rany@user/rany) (Ping timeout: 255 seconds)
[15:42:06] *** Joins: rany_ (~rany@user/rany)
[15:42:41] <jinsun> AhmedAmerican_:  you probably want https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.slice.html
[15:43:54] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Ping timeout: 272 seconds)
[15:43:59] <jinsun> AhmedAmerican_: df["new_column"] = df["URL"].str.slice(-4)
[15:44:12] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[15:44:30] <AhmedAmerican_> jinsun: cool it's skip NaN automatically
[15:44:34] <AhmedAmerican_> thank you.
[15:44:52] *** Joins: timkofu (~timkofu@user/timkofu)
[15:45:19] *** Quits: shad (~shad@user/shad) (Ping timeout: 246 seconds)
[15:45:48] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[15:46:22] *** Quits: varaindemian (~varaindem@86.124.78.162) (Ping timeout: 246 seconds)
[15:46:46] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[15:47:49] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[15:48:55] *** Joins: pycode (~pycode@2001:b07:5d28:551:54a6:730c:4aee:a9b9)
[15:49:48] <AhmedAmerican_> is pandas `str.rsplit()` removed ?
[15:49:56] <AhmedAmerican_> `AttributeError: 'StringMethods' object has no attribute 'rplist'`
[15:50:15] <AhmedAmerican_> ^`df['IMG_ID'] = df['Image Url'].str.rplist()`
[15:50:36] <apollo13> AhmedAmerican_: read the error very carefully
[15:50:39] <apollo13> and fix your typo ;)
[15:50:51] <AhmedAmerican_> :D
[15:50:53] <AhmedAmerican_> sorry
[15:50:53] <AhmedAmerican_> haha
[15:51:43] *** Joins: entuland (~entuland@user/entuland)
[15:51:44] *** Joins: Brocker (~NoBody@user/brocker)
[15:52:08] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[15:53:42] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 255 seconds)
[15:54:37] *** Joins: clawh (~clawh@185.244.214.60)
[15:54:40] *** Parts: ZenixOwler (~zenix@118.69.128.37) (Leaving)
[15:55:40] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[15:58:43] *** Joins: slav0nic (slav0nic@python.su)
[15:58:57] *** Quits: andrews (~andrews@user/andrews) (Quit: Leaving)
[15:59:05] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[15:59:22] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[15:59:30] *** Quits: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il) (Quit: Konversation terminated!)
[16:00:54] *** Joins: zeden (~zeden@user/zeden)
[16:02:02] *** Joins: kostkon (~androirc@ob21aa.static.otenet.gr)
[16:02:04] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:03:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[16:04:34] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[16:08:23] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[16:10:05] *** Quits: pycode (~pycode@2001:b07:5d28:551:54a6:730c:4aee:a9b9) (Ping timeout: 255 seconds)
[16:10:52] *** Joins: goldfish (~goldfish@user/goldfish)
[16:12:36] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 255 seconds)
[16:14:27] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577) (Quit: Leaving)
[16:15:10] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[16:17:36] *** Joins: vassen (~vassen@178.176.218.93)
[16:18:54] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 255 seconds)
[16:22:08] *** Joins: y1n (~y1n@84-115-64-101.wifi.dynamic.surfer.at)
[16:22:08] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[16:22:47] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:22:59] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 252 seconds)
[16:25:13] *** Joins: nef (~nef@user/nef)
[16:26:26] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[16:26:30] *** Joins: Blankspace (~abcd@user/blankspace)
[16:27:42] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577)
[16:28:58] *** Joins: shad (~shad@user/shad)
[16:29:13] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[16:29:23] *** Quits: vassen (~vassen@178.176.218.93) (Quit: Best wishes!)
[16:30:12] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:32:01] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[16:34:19] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: why did you ban me)
[16:34:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:34:53] *** Quits: ntdll (ntdll@user/ntdll) (Quit: WeeChat 3.2)
[16:35:02] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[16:35:59] *** Joins: ntdll (ntdll@user/ntdll)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:04] *** Joins: thiras (~thiras@user/thiras)
[16:36:05] *** Joins: Vonter (~Vonter@user/vonter)
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:13] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:40:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[16:40:54] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:40:55] <stealth_> is there a better way to write https://github.com/YoSTEALTH/Liburing/blob/master/liburing/helper.py#L163 having issues with passed object getting gc and corrupting data.
[16:41:09] *** Quits: {41444d494e} (~{4144}@46.56.64.31) (Ping timeout: 276 seconds)
[16:41:44] *** Joins: urandom3000 (~urandom30@23-127-169-108.lightspeed.snantx.sbcglobal.net)
[16:42:40] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[16:44:07] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Ping timeout: 246 seconds)
[16:45:19] <stealth_> refresh
[16:45:30] <urandom3000> Has anyone worked with the paho mqtt for AWS IoT? I feel like I'm going insane; can't seem to get it to work properly. I'm getting an error of 4 (bad username or password) when I try to publish a message, connecting is fine though. The certs look fine, tested with openssl, tested with the official AWS IoT SDK (can even publish messages)
[16:45:54] <Wulf> urandom3000: maybe bad username or password ;-)
[16:47:03] <urandom3000> Wulf: Lol oh, I so wish that was the case. I mean, it may be, but I'm using cert auth
[16:47:15] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 255 seconds)
[16:47:24] <urandom3000> I have read so many docs and can't seem what thing I'm doing stupidly
[16:47:42] *** Quits: TakinOver (~TakinOver@47.150.206.35) (Ping timeout: 255 seconds)
[16:47:54] <Wulf> urandom3000: perhaps it's a problem with your client cert or you didn't configure access in aws.
[16:48:00] *** Joins: Deneb (~johnch@58.111.189.80.dyn.plus.net)
[16:48:43] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[16:49:16] <urandom3000> Wulf: I double checked it with openssl, could connect, I also was able to connect and publish messages fine with the official AWSIoTPythonSDK (same certs), but when I'm using just paho on it's own, no luck
[16:49:38] <Wulf> urandom3000: then have a look at the traffic
[16:50:24] <urandom3000> Wulf: That's not a bad idea, I'll give that a shot
[16:50:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[16:51:12] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[16:52:39] *** Joins: pycode (~pycode@2001:b07:5d28:551:6c85:a257:8ba0:4ae3)
[16:55:27] *** Quits: nef (~nef@user/nef) (Quit: Leaving)
[16:56:10] *** Joins: pycurious (~Adium@user/pycurious)
[16:56:46] <Luyin> hi! is there a quick way to assert this? `assert ("intent", "entities") in voice_record.metadata.keys()`; keys() returns a dict_keys object which is listlike. when I run it, I get this error: https://paste.xinu.at/X5Dqfh/; when I remove the brackets around my two strings, I get another error: (this time from pylint): W0129: Assert statement has a string literal as its first argument. The assert
[16:56:48] <Luyin> will never fail. (assert-on-string-literal)
[16:57:37] *** Joins: ggnoredo (~user@78.186.15.89)
[16:58:08] *** Parts: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) ()
[16:58:11] *** Joins: pnoud (~pnoud@user/pnoud)
[16:59:09] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[16:59:25] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[16:59:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[16:59:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[17:00:02] *** Joins: wyclif (~wyclif@user/wyclif)
[17:00:08] *** Joins: cheater (~Username@user/cheater)
[17:00:11] <marduk> Luyin: when you ran it you got an AssertionError, which means your assertion is false.  But I think want your trying to do is assert the dict has both keys and `[key1, key2] in mydict` doesn't do that.
[17:01:06] <Luyin> hmm
[17:01:15] <marduk> Likely you'll have to make 2 assertions.  Also `foo in mydict` is the same as`foo in mydict.keys()`
[17:01:15] <Luyin> yes I want to assert that both these keys exist
[17:01:19] <Yhg1s> Luyin: you need to check the keys separately, or use set operations.
[17:01:32] <Luyin> oh, good, I'll remove the keys() call then
[17:01:39] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[17:01:56] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[17:02:02] *** Joins: derelict (~derelict@user/derelict)
[17:02:27] <raxor2k> the 1.file is how the code is right now(works perfectly), now i want to add a second "if check" to add minimum measureDiff(second file). Is the code idented correctly? https://bpa.st/DG2A
[17:03:00] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[17:03:20] <Luyin> ok I played around a bit and got this: `assert all(key_ in metadata for key_ in ("intent", "entities"))`
[17:03:21] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[17:03:24] *** Joins: {4144} (~{4144}@46.56.64.31)
[17:03:40] <Luyin> I just don't like that `key_` with the trailing underscore a lot
[17:03:50] <Luyin> but it's enough for me to call it a day :)
[17:04:00] <Yhg1s> Luyin: so don't use the trailing underscore.
[17:04:06] *** Joins: nyah (~nyah@90.221.186.180)
[17:04:17] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[17:04:25] <Luyin> isn't key a keyword?
[17:04:29] <Yhg1s> nope.
[17:04:33] <Luyin> oh I got that wrong then
[17:04:35] <Luyin> thanks!
[17:04:40] *** resmo__ is now known as resmo
[17:04:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[17:05:30] *** Joins: wyclif (~wyclif@user/wyclif)
[17:05:54] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[17:06:01] *** Quits: ggnoredo (~user@78.186.15.89) (Remote host closed the connection)
[17:06:22] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[17:06:34] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[17:07:03] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[17:07:03] *** Quits: shad (~shad@user/shad) (Ping timeout: 255 seconds)
[17:07:35] *** Joins: cheater (~Username@user/cheater)
[17:08:13] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[17:08:33] *** Joins: imp (~imp@186.205.11.214)
[17:08:46] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[17:08:58] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[17:09:19] *** Joins: shad (~shad@user/shad)
[17:09:27] *** Joins: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com)
[17:10:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[17:10:49] <imp> While filling my Type annotations desires, I discovered about Generator Send and Return types. I really don't know that they existed, and still can't figure out how they works. Any good examples about this?
[17:10:59] *** Joins: wyclif (~wyclif@user/wyclif)
[17:11:23] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:11:31] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Remote host closed the connection)
[17:12:06] <stealth_> imp https://www.pythonsheets.com/notes/python-generator.html
[17:12:23] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[17:12:34] <imp> stealth_:  thank you.
[17:12:38] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 255 seconds)
[17:12:44] *** Joins: ano (~weechat@user/ano)
[17:14:52] *** Joins: pnoud (~pnoud@user/pnoud)
[17:15:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:15:37] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[17:15:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[17:16:30] *** Joins: wyclif (~wyclif@user/wyclif)
[17:16:52] *** Quits: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com) (Ping timeout: 252 seconds)
[17:19:48] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[17:20:01] *** Joins: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com)
[17:20:10] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[17:21:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[17:21:27] *** Joins: akaWolf (~akaWolf@akawolf.org)
[17:21:41] *** Quits: sandeepk (~sandeepk@223.130.30.125) (Ping timeout: 258 seconds)
[17:21:56] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[17:22:01] *** Joins: wyclif (~wyclif@user/wyclif)
[17:22:45] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[17:22:50] <no_gravity> Good Afternoon.
[17:22:57] <no_gravity> Continuing my journey to make html parsing faster.
[17:23:01] *** Quits: squirrel (~sq@user/squirrel) (Ping timeout: 265 seconds)
[17:24:08] *** Joins: sandeepk (~sandeepk@223.130.30.125)
[17:24:12] <raxor2k>  is file 2 correctly idented/formatted? : https://bpa.st/CLNA
[17:24:45] <imp> raxor2k: you can always use pep8 verifiers as flake8
[17:25:03] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[17:25:10] <imp> line 17 and 12 are too large.
[17:25:26] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[17:25:27] <imp> 2 spaces only when closing functions.
[17:25:36] <imp> I mean, 2 empty lines.
[17:25:58] <stealth_> raxor2k, install "linter" tools for your text editor, it should catch silly bugs like this.
[17:26:24] *** Quits: y1n (~y1n@84-115-64-101.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[17:26:49] *** Joins: y1n (~y1n@84-115-64-76.wifi.dynamic.surfer.at)
[17:26:57] <imp> also often not recommended to use a kind of verbose hungarian notation as:  list_of_ints , or string_of_name.
[17:27:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[17:27:54] <imp> print/return isn't the best way to notify about errors, you can use raise/exceptions. for example raise ValueError.
[17:28:03] <raxor2k> imp: haha
[17:28:06] *** Joins: wyclif (~wyclif@user/wyclif)
[17:28:11] <raxor2k> and the other day someone told me to remove exception and fix the bugs
[17:28:27] <imp> raxor2k: yes. But I'm not talking about that.
[17:29:14] <imp> raxor2k: I was one that told you to not do that. I'm not telling you to create a catch all "try/except" block. I'm telling you to use "raise" to notive the caller function about issues, not return.
[17:29:32] <raxor2k> imp: ok fair enough
[17:29:42] <imp> In Python (unlike C), is often better to raise an exception instead return True/False in success/failure.
[17:29:58] <raxor2k> so raise instead of using return ?
[17:30:07] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[17:30:10] <imp> the caller will decide if a. ignore the error or b. handle or c. stop
[17:30:48] <imp> raxor2k: something like raise ValueError("Expected Tuple[int, int]")
[17:31:32] <imp> raxor2k: I really don't know your problem, but as far as I can tell, you're writing too much code to calculate derivatives.
[17:31:38] <raxor2k> imp: so you tell me to do something like this? : https://bpa.st/TCCA
[17:31:42] <imp> I mean, numerical derivatives.
[17:31:53] *** Joins: pnoud (~pnoud@user/pnoud)
[17:31:55] *** Parts: Roey (~Roey@user/Roey) (Client exiting)
[17:32:01] <imp> raxor2k: no. please god. nod.
[17:32:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:32:31] <imp> I'm telling you to just raise ValueError('...') instead print/return.
[17:32:31] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:32:44] *** Joins: omegatron (~some@p5484990d.dip0.t-ipconnect.de)
[17:32:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[17:32:55] *** PublicWiFi is now known as McDonaldsWiFi
[17:33:08] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 256 seconds)
[17:33:15] *** McDonaldsWiFi is now known as PublicWiFi
[17:33:24] <imp> Also, use better names for your variables. For example: def calculate_speed(self, pos_a, pos_b):
[17:33:39] *** Joins: wyclif (~wyclif@user/wyclif)
[17:34:00] *** Joins: senatoreg (~senatoreg@net-5-95-175-59.cust.vodafonedsl.it)
[17:34:04] <raxor2k> is this a grammarly exam or something ?
[17:34:09] <raxor2k> this is just a test code, btw
[17:34:11] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[17:34:28] <imp> And as I told you. Using prints for debug, is acceptable, but far from good, in scientific computing, I really recommend you to learn how to use the python debugger.
[17:34:29] *** Joins: cheater (~Username@user/cheater)
[17:34:37] <imp> No. I'm explaining you as I do with my students.
[17:34:50] *** Joins: zathras (~zodd@84-106-62-193.cable.dynamic.v4.ziggo.nl)
[17:34:52] <raxor2k> ahh, now it makes sense :P
[17:35:37] <imp> raxor2k: better naming will help you to better understand your code. You asked about you code linting. I'm telling you things about your  code linting that goes far beyond 4 spaces before the first character.
[17:37:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[17:37:14] *** Joins: FluffyMask (~masque@user/fluffymask)
[17:38:51] <trace987> is it possible to use an extra iterator for setting variables of a list? next() is only for getting, but not setting variables
[17:39:23] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[17:39:39] <imp> trace987: are you using generators? I think you can send values for generators (I'm learning that right now)
[17:40:06] <imp> trace987: but in a list you can just   variable[index] = value
[17:40:22] <econdudeawesome> Hello all. Why does this not resolve (file verified to exist): with open('~/file') as o: -->FileNotFoundError: [Errno 2] No such file or directory
[17:40:22] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[17:40:30] <imp> trace987: a list is a special kind of iterator. is a sequence.
[17:40:45] <raxor2k> imp: i have written my own code, and i know all the variables
[17:40:56] <raxor2k> all im just asking for is is the second if indented correctly
[17:40:59] <imp> econdudeawesome: beecause  ~ is not expanded.
[17:41:11] <imp> econdudeawesome:  you need to os.path.expanduser(path)
[17:41:18] <econdudeawesome> Thanks imp!
[17:41:51] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577) (Quit: Leaving)
[17:41:58] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[17:42:33] *** Joins: d00gy (~tonberry@user/d00gy)
[17:42:39] <imp> raxor2k: ok. I'm out.
[17:43:27] <trace987> imp if I set listname[10] = value, this is too time consuming
[17:43:40] <trace987> because the list would have to iterate until 10
[17:43:41] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[17:43:47] <trace987> this can make a program very slow
[17:44:03] <trace987> this is why I would like to do it manually with an iterator
[17:44:11] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[17:44:11] <imp> trace987:  we need first do discuss if we are using the right data structure.
[17:44:17] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 265 seconds)
[17:44:21] <imp> a iterator ALSO need to go to position 10.
[17:44:28] <trace987> I told already that it is a list
[17:44:38] <trace987> no
[17:44:47] <trace987> not again and again in a loop
[17:45:07] <imp> of course it will. Iterator is a datasructure that you iterate over.
[17:45:08] <trace987> if I make a loop that shall go to a[10] then a[11] then a[12#]
[17:45:24] <trace987> it needs to always go from 0 to 11 then from 0 to 12
[17:45:44] *** Joins: mastardet (~mastardet@user/mastardet)
[17:45:50] <trace987> and this will be very slow on the long run
[17:45:58] <imp> trace987: ok. got. you don't want to lose the memory ponter.
[17:46:01] <trace987> if I had a tuple that problem would not occure
[17:46:27] <imp> tuple and lists are differente (besides they look equal).
[17:46:44] <trace987> yes, that is why this problem does not occure there
[17:46:54] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[17:47:23] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[17:47:50] <imp> I think that generator send can help you in that, but I'm speculating here. I don't know how they work internally, and I'm just learning them right now.
[17:48:42] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:49:05] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:49:20] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[17:49:26] *** Quits: cornduck (~cornduck@li1440-61.members.linode.com) (Quit: :V)
[17:49:46] <imp> trace987: if you find the solution, I would like to know too.
[17:49:49] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:49:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[17:50:34] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[17:50:51] <p-i-> I'm trying to imagine a matplotlib plot, where I mouse-over on the main plot, and it shows a close-up of that region on a separate plot.
[17:51:05] <p-i-> I see I can get mouse-move events.
[17:51:10] <imp> trace987: reading here about lists, seems they are internally arrays. Hence using A[index] is just arithmetic pointer.
[17:51:37] <p-i-> But suppose I'm running in VSCode's .ipynb renderer.
[17:51:49] *** Joins: inom (~inom@176.59.109.161)
[17:52:08] <p-i-> It will be awkward to populate a chart running in another cell.
[17:52:09] <imp> p-i-: you can search for interactive plots in matplotlib. But I think that matplotlib isn't built for that. You would be better trying other plot frameworks.
[17:52:18] <hodapp> this seems more like vispy territory
[17:52:28] <hodapp> I think vispy has some 2D examples that do something similar
[17:52:55] <p-i-> I suppose I could render a magnifier subplot in the original plot...
[17:52:59] <p-i-> yeah, I feel that too.
[17:53:07] <p-i-> ok I'll check vispy, thanks!
[17:53:17] <imp> trace987: of course the pointer arithmetic is still an operation that could be avoided.
[17:53:28] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:53:57] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[17:54:02] *** Joins: phryk (~totallyno@user/phryk)
[17:54:13] *** Joins: cheater (~Username@user/cheater)
[17:54:32] <phryk> Can somebody recommend a good, easy-to-use XML parser?
[17:54:36] <imp> trace987: and talking about operation cost, seems list set is O(1) in average and amortized worst case. hence.
[17:54:58] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[17:55:39] <stealth_> trace987, you got an example of your code? imp generator `.send` would be slower then `list[index] = value`
[17:55:52] <jinsun> phryk: xml.etree.ElementTree in the standard library is good https://docs.python.org/3/library/xml.etree.elementtree.html
[17:55:56] <hodapp> phryk: wht's wrong with built-in xml.etree?
[17:56:17] <phryk> hodapp: simple: I didn't know it exists.
[17:56:27] <phryk> thanks jinsun :)
[17:56:52] <imp> phryk: I happens to everyone.
[17:56:58] <imp> *it..
[17:57:35] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[17:57:52] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[17:58:15] *** Joins: cheater1__ (~Username@user/cheater)
[17:58:25] <snowman> I have some code to fix
[17:58:46] <snowman> I pay 250 dollars in Bitcoin if you can fix this
[17:59:37] <imp> snowman: imho, you can ask for help. If you're looking to hire someone there are better places.
[17:59:55] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[17:59:56] <stealth_> snowman, paste your code https://bpa.st/+python and see if anyone will help resolve it
[18:00:24] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[18:00:33] *** cheater1__ is now known as cheater
[18:04:25] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[18:04:27] *** Quits: snowman (~tracker@194.31.97.12) (Quit: Client closed)
[18:04:37] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[18:04:56] *** Joins: magla (~gelignite@55d493a6.access.ecotel.net)
[18:06:41] <mrec> as far as I remember python also has a short form something like (1==1)?1:1
[18:06:55] <imp> True
[18:06:57] <mrec> I just forgot about it, does anyone remember?
[18:07:35] <stealth_> mrec, `a = 1 if 1 == 1 else 0`
[18:07:53] <imp> oh. A ternary operator. I got.
[18:08:24] <SnoopJ> it doesn't have to be part of an assignment, but yes, `(if_true if predicate else if_false)` is the equivalent
[18:08:27] <imp> I understand something like: Does python has a short for (1==1)?  Maybe is 1:1?
[18:08:42] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[18:08:50] <Helle> it's not super elegant or readable so be careful with it, but it can be reasonable for certain types of error handling
[18:09:08] *** Joins: tracker (~tracker@194.31.97.12)
[18:09:13] <Helle> ie, I have deducted points from students overusing it :P
[18:09:24] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[18:09:27] *** Parts: tracker (~tracker@194.31.97.12) ()
[18:09:30] <imp> Helle: yeah. Not super elegant I agree. I really prefer the ternary operator.
[18:09:42] *** Joins: snowman (~tracker@194.31.97.12)
[18:09:55] <Helle> imp: The Pythonic one is "normally do this, but if there is some weird condition, do this instead)
[18:09:57] <snowman> imp stealth_ https://bpa.st/UDMQ
[18:10:16] <Helle> imp: so it has a bit of a different role then the C style one
[18:10:27] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:10:43] *** Joins: pycurious (~Adium@user/pycurious)
[18:10:48] <snowman> :)
[18:10:55] <snowman> who can fix this?
[18:11:36] <imp> what is the bug to be fixed?
[18:12:10] <snowman> the functions messed up pretty much
[18:12:12] <snowman> https://bpa.st/UDMQ
[18:13:14] <nubonix> if i am hosting a public facing webserver on two computers [one webserver each], how can i distinguish between the two when the ports are the same? [doesnt my ipv4 point to all the computers on my network?]
[18:13:27] <mrec> https://paste.debian.net/1204468/
[18:13:37] <mrec> can someone recommend a shorter for for the negative?
[18:14:11] <mrec> form*
[18:14:35] <snowman> is that hard? :)
[18:14:39] <imp> nubonix: you question isn't complete. There are many other issues. Are those servers behind a firewall, are they being masked/natted?
[18:14:42] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[18:14:42] <nubonix> shorter than an if/else? wut
[18:14:48] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:15:00] *** Quits: jazzy (~jaziz@2600:380:8451:9914:fca6:875f:9a18:2a53) (Ping timeout: 255 seconds)
[18:15:19] <nubonix> imp, behind a firewall yes. I am not familiar with terms of masked/natted
[18:15:30] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[18:15:48] <imp> nubonix:  If each one of them have their own valid internet IP address just the IP is enough to identify them.
[18:16:08] <imp> nubonix: I think that is a kind of question better suited for a network channel.
[18:16:26] <nubonix> imp so i need a seperate ipv4 for each computer?, yall, ill bounce over there
[18:16:31] <SnoopJ> nubonix, `e3 = make_circle_for_edge(circle, edge)`
[18:16:55] <snowman> nobody needs 250 bucks?
[18:17:04] <nubonix> i do
[18:17:05] <imp> nubonix:  no. you can redirect in may ways. In application level, in network level.
[18:17:24] <snowman> nubonix fix this : https://bpa.st/UDMQ
[18:17:32] <stealth_> snowman, i already have a code that does all that. you just need to sign/verify right.
[18:17:33] <imp> snowman:  we don't understan what you mean about messed up functions.
[18:17:40] <snowman> yep
[18:17:42] <nubonix> snowman: whats the problem?
[18:17:56] <snowman> stealth is nearly finished
[18:18:10] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 250 seconds)
[18:18:27] <stealth_> snowman, no, i was done a while ago! :p
[18:19:47] <raxor2k> imp: do you have an exception example to what you said ?
[18:19:47] <nedbat> mrec: what did you want to make shorted? btw: you don't need parens around the condition in an if-statement.
[18:20:32] <nubonix> imp wdym by application level, like as in flask?
[18:20:39] <imp> snowman: in your code, "verifying_key" doesn't even exist.
[18:20:46] <snowman> yep
[18:20:47] <snowman> valid = verifying_key.verify(sign, data, encoding="base64")
[18:20:56] <snowman> I know
[18:21:18] <imp> ok, you want someone to write a key validation code
[18:21:39] <snowman> no, it is done with the ed25519 library
[18:21:52] <snowman> https://github.com/warner/python-ed25519
[18:22:36] <snowman> just make sure the functions working perfectly, that's all, the last function don't even need to touch
[18:22:59] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:23:08] <imp> nubonix: explain this would take too much space, but yes. A flask application can be written to redirect request from a external facing server to an interrnal one.
[18:23:16] *** Joins: akk (~akk@97-123-109-214.albq.qwest.net)
[18:23:27] *** Joins: pycurious (~Adium@user/pycurious)
[18:23:56] *** Joins: PdimH (~pdimh@user/pdimh)
[18:24:03] *** Joins: brabrax (~brabrax@user/brabrax)
[18:24:18] <imp> nubonix: or you can redirect using TCP/IP linux iproute based on port/address. Or you can do using some kind of load balancing . Or you can do so many different things
[18:25:58] *** Quits: y1n (~y1n@84-115-64-76.wifi.dynamic.surfer.at) (Ping timeout: 246 seconds)
[18:26:07] *** Joins: y1n (~y1n@84-115-64-39.wifi.dynamic.surfer.at)
[18:26:14] <SnoopJ> huh, mypy doesn't have .pre-commit-hooks.yaml in their repository, but link directly to pre-commit's version of same...?
[18:27:09] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:27:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[18:27:47] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[18:29:28] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[18:29:58] <no_gravity> When extracting stuff via css selectors with lxml, the selector 'title' does now work. Any ideas why? In BS4 it works.
[18:30:17] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:30:23] <no_gravity> (I mean in real world data. In pure experiments it works)
[18:30:55] *** Joins: cheater1__ (~Username@user/cheater)
[18:31:18] *** Joins: brabrax (~brabrax@user/brabrax)
[18:31:46] <nubonix> imp do you know where i go to learn how to do this with flask?
[18:31:55] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Ping timeout: 246 seconds)
[18:32:14] *** Joins: thiras (~thiras@user/thiras)
[18:32:31] *** Joins: gravy (~gravy@123-243-232-67.tpgi.com.au)
[18:33:06] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[18:33:12] *** cheater1__ is now known as cheater
[18:33:34] <SnoopJ> no_gravity, likely your real world data/code is not equivalent to your experiment. It's hard to say without seeing the failing case.
[18:33:43] <stealth_> snowman, here you go https://bpa.st/MALQ donate your $ to https://www.python.org/psf/donations/
[18:35:50] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[18:35:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:36:32] *** Joins: pycurious (~Adium@user/pycurious)
[18:36:52] *** Joins: brabrax (~brabrax@user/brabrax)
[18:37:29] <snowman> lol
[18:37:33] <snowman> what is this?
[18:37:36] *** Joins: heco (~redrum@user/redrum88)
[18:37:38] <nubonix> imp pretty sure load-balancing isnt what im after, as im specifically targeting each webserver / computer intentionally [im running restful apis on each of the computers with starlette [async flask-like]], so when i do a .get request on the url `10.0.0.144:1337/dir` it will run that on the computer [same as i would be doing `dir` from a command prompt]
[18:38:02] <nubonix> on that specific computer*
[18:38:27] <jabberwock> you're allow-listing which commands will run, right?
[18:38:37] <snowman> stealth_ you have to keep the libraries and the functions intact: https://bpa.st/UDMQ
[18:39:13] <snowman> not sending me some blake2 thing, (you should try out blake3 by the way..)
[18:39:14] <nubonix> even using the host='0.0.0.0' has me a bit confused because im not sure how to navigate to each computer, as my public ipv4 is the same for all of them
[18:39:19] <nubonix> imp
[18:40:11] *** Joins: cheater1__ (~Username@user/cheater)
[18:40:16] <stealth_> snowman, the one i wrote is properly written!
[18:40:45] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[18:41:19] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[18:41:23] <snowman> yep
[18:41:34] <snowman> but has nothing to do with the code I give you
[18:41:39] <snowman> lol
[18:41:41] *** Joins: jinsun_ (~quassel@user/jinsun)
[18:41:41] <snowman> look
[18:41:43] <snowman> # SECRET_KEY = random()
[18:41:52] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[18:41:59] *** Quits: jinsun_ (~quassel@user/jinsun) (Client Quit)
[18:42:11] <stealth_> snowman, you can either create one at run-time or pass in the `key` yourself.
[18:42:13] *** Quits: MoiraPrime (sid504449@id-504449.tooting.irccloud.com) ()
[18:42:33] *** Joins: cheater (~Username@user/cheater)
[18:42:37] *** Quits: MemoriaVetusta (~MemoriaVe@95.181.232.12) (Quit: MemoriaVetusta)
[18:42:42] *** Joins: varaindemian (~varaindem@86.124.78.162)
[18:43:13] <snowman> not with `random()`
[18:43:19] <stealth_> snowman, its not the `random` you are thinking it uses an internal function i created
[18:43:34] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:43:47] <stealth_> snowman, why i added a TODO so you can create one yourself or pass in the key you want.
[18:44:09] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[18:44:10] *** Quits: pycode (~pycode@2001:b07:5d28:551:6c85:a257:8ba0:4ae3) (Ping timeout: 250 seconds)
[18:44:24] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[18:44:37] <snowman> Your code is good, just that I asked to fix this: https://bpa.st/UDMQ
[18:44:37] *** Joins: brabrax (~brabrax@user/brabrax)
[18:45:43] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[18:46:02] *** Joins: dkmueller (~dkmueller@dynamic-077-004-142-044.77.4.pool.telefonica.de)
[18:46:09] *** Quits: cheater1__ (~Username@user/cheater) (Ping timeout: 265 seconds)
[18:47:08] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[18:47:40] <stealth_> snowman, the code i wrote does fix it though! you just haven't realized it yet.
[18:48:23] *** Joins: pr0t07ype (~pr0t07ype@user/pr0t07ype)
[18:48:27] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 268 seconds)
[18:48:45] *** Quits: dkmueller (~dkmueller@dynamic-077-004-142-044.77.4.pool.telefonica.de) (Client Quit)
[18:49:20] *** Joins: python (~python@user/demon)
[18:49:29] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:50:04] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Quit: leaving)
[18:50:13] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[18:50:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:50:19] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[18:52:12] *** Joins: pycode (~pycode@2001:b07:5d28:551:c20f:a9b5:321d:f840)
[18:52:15] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:52:32] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Max SendQ exceeded)
[18:52:42] <imp> stealth_:  that is just a. a college task, or b. a job offer  he is asking to someone else do.
[18:52:52] <no_gravity> Wow. The problem was that the *if* here was triggered even though the title was selected: sel=lxml.cssselect.CSSSelector('title'); elem = sel(lxml.html.fromstring(html))[0]; if not elem: return
[18:53:00] <no_gravity> How on earth can that be?
[18:53:00] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[18:53:00] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:53:30] <imp> nubonix: to "proxy" an external request internally you just need to a. receive the request and b. redo the request internally.
[18:54:13] *** Joins: Payam (~Payam@138.106.57.132)
[18:54:17] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 245 seconds)
[18:54:50] <Payam> Hi, I use Meld for diffing between files. but I can not create a file inside meld
[18:54:59] <Payam> DO you guys using anything else?
[18:55:00] <imp> nubonix: but seems a classic X,Y problem. You asked how do you uniquely identify a internal server, when in fact you trying to write a web service.
[18:55:04] <imp> Payam: vimdiff
[18:56:35] <grym> kdiff3
[18:58:30] <SnoopJ> I mostly use vimdiff or VSCode's diff functionality
[18:58:41] <no_gravity> So "elem" is an object that holds an html element (a title) with a nice long string in it. Yes, "not elem" is true. What fuckup is that? Any ideas?
[18:58:52] <no_gravity> So "elem" is an object that holds an html element (a title) with a nice long string in it. Yet, "not elem" is true. What fuckup is that? Any ideas?
[19:00:34] <SnoopJ> no_gravity, we can't really help based on these descriptions, show us some code
[19:00:37] <dale> no_gravity: "Elements with no subelements will test as False. This behavior will change in future versions. Use specific len(elem) or elem is None test instead."
[19:00:44] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[19:01:11] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:01:20] *** Joins: pycurious (~Adium@user/pycurious)
[19:01:41] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:80dc:d303:e33a:f57f)
[19:01:41] <no_gravity> dale: I see. I wonder what made them do it like this.
[19:01:58] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[19:03:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:03:57] <phryk> is xml.etree.ElementTree.find_all the only method with xpath support?
[19:05:15] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Quit: Leaving...)
[19:05:53] <no_gravity> I have 100% test coverage now after swapping BS4 out for lxml. With a 6x speed improvement of the whole application. So bs4->lxml is probably a 7x speed improvement.
[19:07:06] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:07:10] <SnoopJ> no_gravity, the behavior of builtin containers, probably (i.e. bool([]) is False)
[19:07:27] <SnoopJ> the problem with that is that tags aren't *only* containers
[19:07:42] <no_gravity> SnoopJ: Yeah
[19:08:01] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:09:05] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[19:11:42] *** Joins: pnoud (~pnoud@user/pnoud)
[19:11:54] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[19:12:09] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[19:12:11] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[19:12:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:12:56] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[19:13:02] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:13:41] *** Joins: zeden (~zeden@user/zeden)
[19:13:41] *** Quits: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com) (Ping timeout: 255 seconds)
[19:13:42] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Quit: Leaving)
[19:14:02] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:14:15] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[19:14:45] <jinsun> phryk: no, find and iterfind also support xpath
[19:14:54] *** Joins: zeden (~zeden@user/zeden)
[19:14:55] <phryk> alrighty, thanks.
[19:15:47] <jinsun> and maybe some other functions too, those are the ones I know about
[19:17:10] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[19:17:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[19:19:10] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[19:20:22] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[19:21:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[19:23:59] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[19:25:56] *** Quits: y1n (~y1n@84-115-64-39.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[19:26:04] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[19:26:11] *** Joins: y1n (~y1n@84-115-64-39.wifi.dynamic.surfer.at)
[19:27:30] *** Joins: varaindemian (~varaindem@86.124.78.162)
[19:28:40] *** Quits: pr0t07ype (~pr0t07ype@user/pr0t07ype) (Quit: Client closed)
[19:29:11] *** Joins: pr0t07ype (~pr0t07ype@user/pr0t07ype)
[19:30:55] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:32:08] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[19:33:05] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:34:15] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[19:34:41] *** Joins: pnoud (~pnoud@user/pnoud)
[19:35:40] *** Quits: AutomatedTester (uid395371@selenium/developer/AutomatedTester) (Quit: Connection closed for inactivity)
[19:37:14] *** snowman is now known as [1984]
[19:37:21] *** Quits: kostkon (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:39:47] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[19:40:40] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:41:48] *** Quits: tims (~tims@193-82-234-90.tpgi.com.au) (Quit: WeeChat 3.2)
[19:42:24] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[19:44:24] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[19:44:40] *** Joins: djapo (~archangel@user/djapo)
[19:44:49] *** Quits: d3vyL (d3vyL@host-95-250-37-25.retail.telecomitalia.it) ()
[19:46:20] *** Joins: wyclif (~wyclif@user/wyclif)
[19:47:36] *** Parts: daxx (uid508412@user/daxx) ()
[19:48:29] *** Joins: darksun (~darksun@user/darksun)
[19:50:09] *** Joins: waynew (~wayne@user/waynew)
[19:51:17] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[19:51:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[19:51:29] *** Quits: urandom3000 (~urandom30@23-127-169-108.lightspeed.snantx.sbcglobal.net) (Ping timeout: 255 seconds)
[19:52:11] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:52:34] *** Joins: wyclif (~wyclif@user/wyclif)
[19:52:37] *** Joins: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt)
[19:52:47] <m_tadeu> hi...I have a static member inside a class that returns an instance if that same class....how can I hint the return value?
[19:53:22] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[19:53:33] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[19:54:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:56:02] <[1984]> anyone use BitchX?
[19:56:05] *** Joins: pnoud (~pnoud@user/pnoud)
[19:56:09] <jinsun> m_tadeu: you can put the class name in quotes so that it becomes a string instead of an undefined name, mypy allows that
[19:56:16] <grym> [1984]: not since about 2002
[19:56:31] <[1984]> :)
[19:56:45] <jinsun> m_tadeu: or you can enable PEP 563 by doing `from __future__ import annotations` at the top of your file
[19:57:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:57:41] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[19:58:02] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:58:05] *** Joins: wyclif (~wyclif@user/wyclif)
[19:59:44] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:59:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[20:00:19] *** [1984] is now known as microshithub
[20:00:57] <microshithub> anyone user here Gitee?
[20:01:14] <microshithub> https://gitee.com
[20:01:28] <microshithub> much better than GitHub..
[20:01:36] <grym> there are many forges out there
[20:01:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[20:01:52] <microshithub> whut?
[20:01:55] <microshithub> lol
[20:02:04] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:02:10] <grym> https://en.wikipedia.org/wiki/Forge_(software)
[20:02:48] <raxor2k> graingert: are you here
[20:03:08] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:03:09] <graingert> I'm always here
[20:03:58] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[20:04:01] <raxor2k> I have added jinja + a "dashboard.html" to my fastapi_websocket
[20:04:08] <raxor2k> do i need to change something in docker commands ?
[20:04:15] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:06:13] *** Joins: darksun (~darksun@user/darksun)
[20:07:03] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577)
[20:07:37] *** Joins: p-i-_ (~Ohmu@113.53.161.124)
[20:07:48] *** Quits: p-i- (~Ohmu@node-i0c.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[20:08:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[20:08:08] *** Quits: Masklin (~joel@93.182.183.85) (Quit: Konversation terminated!)
[20:08:56] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:09:07] *** Joins: wyclif (~wyclif@user/wyclif)
[20:09:22] <m_tadeu> jinsun: quoting worked just fine, thanks a bunch
[20:09:55] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[20:10:36] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[20:11:05] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[20:11:10] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:11:13] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[20:12:06] *** Joins: ali1234 (~al@user/ali1234)
[20:12:12] *** Joins: semeion (~semeion@user/semeion)
[20:12:25] *** Joins: pnoud (~pnoud@user/pnoud)
[20:12:35] *** Joins: neibo (~neibo@86.127.254.176)
[20:13:45] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[20:14:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:14:15] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-3440-ee66-189d-dbb7.res6.spectrum.com)
[20:14:37] *** Joins: wyclif (~wyclif@user/wyclif)
[20:15:20] *** Joins: doev (~doev@p549d74f6.dip0.t-ipconnect.de)
[20:15:36] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:b03c:9256:7494:dc07)
[20:15:50] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:16:13] *** Parts: senatoreg (~senatoreg@net-5-95-175-59.cust.vodafonedsl.it) ()
[20:17:16] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 246 seconds)
[20:17:38] *** Joins: derelict (~derelict@user/derelict)
[20:17:52] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[20:18:13] *** Joins: kor1 (~kor1@user/kor1)
[20:19:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:20:00] <raxor2k> graingert: here is my structure and "templates" folder: https://bpa.st/S5YA
[20:20:08] *** Joins: wyclif (~wyclif@user/wyclif)
[20:20:11] <raxor2k> my question is still the same: does something need to change in docker commands ?
[20:20:37] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[20:23:37] *** Joins: darksun (~darksun@user/darksun)
[20:24:27] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[20:24:37] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[20:24:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[20:25:23] *** Joins: mnemonic (~semeion@user/semeion)
[20:25:30] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[20:25:38] *** Joins: wyclif (~wyclif@user/wyclif)
[20:26:04] *** Quits: y1n (~y1n@84-115-64-39.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[20:26:05] <graingert> raxor2k: You should probably use the jinja2 package resource loader
[20:26:22] *** Joins: y1n (~y1n@84-115-64-36.wifi.dynamic.surfer.at)
[20:26:27] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 258 seconds)
[20:26:48] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[20:27:18] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:27:44] *** Quits: pycode (~pycode@2001:b07:5d28:551:c20f:a9b5:321d:f840) (Ping timeout: 250 seconds)
[20:29:10] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:29:11] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:30:10] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[20:30:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:30:58] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[20:31:22] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:32:36] *** Joins: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster)
[20:33:35] <raxor2k> ok si identified the problem: i needed to change to this: templates = Jinja2Templates(directory="fastapi_websocket/templates/")
[20:33:50] <raxor2k> Now i need somehow to show the data on the browser which is not working ..
[20:34:21] *** Joins: gitly (~gitly@85.255.233.176)
[20:36:39] *** Joins: wyclif (~wyclif@user/wyclif)
[20:36:47] *** Joins: cedric (~cedric@2a01:cb11:867:c200:1caf:3a0f:290e:7269)
[20:37:00] *** Joins: skapata (~Skapata@user/skapata)
[20:37:46] *** Quits: neibo (~neibo@86.127.254.176) (Remote host closed the connection)
[20:37:48] *** Joins: Akuli (~Akuli@dy5gs-ytcd5w---v3qqvy-4.rev.dnainternet.fi)
[20:38:04] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[20:38:13] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 268 seconds)
[20:39:38] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:39:52] *** Quits: gusto (~Augustus@2620:149:e0:6004::55) (Quit: Textual IRC Client: www.textualapp.com)
[20:40:22] *** Quits: emerent (~quassel@p200300cd5721e6a7ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[20:40:25] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[20:40:27] *** Joins: dogdisaster1 (~dogdisast@143.59.30.167)
[20:40:32] <raxor2k> i solved it
[20:40:58] *** Joins: emerent (~quassel@p200300cd5721e6ccba27ebfffed28a59.dip0.t-ipconnect.de)
[20:41:18] *** Joins: entuland (~entuland@user/entuland)
[20:41:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[20:41:24] *** Quits: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster) (Ping timeout: 258 seconds)
[20:41:47] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[20:42:10] *** Joins: wyclif (~wyclif@user/wyclif)
[20:42:17] *** Joins: urandom3000 (~urandom30@2600:1700:1474:4b70:5ac:9327:cf5c:4fec)
[20:42:28] *** Quits: microshithub (~tracker@194.31.97.12) (Ping timeout: 246 seconds)
[20:42:47] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[20:42:58] *** Joins: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net)
[20:43:19] *** Joins: sgn (~sgn@user/sgn)
[20:43:30] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 255 seconds)
[20:44:21] *** Joins: Betal (~Beta@user/betal)
[20:44:24] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 255 seconds)
[20:45:18] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 255 seconds)
[20:45:19] *** Quits: Elzington (~Elzington@static-198-54-128-108.cust.tzulo.com) (Quit: Leaving)
[20:45:27] *** Joins: rany (~rany@user/rany)
[20:45:33] *** Joins: Elzington (~Elzington@static-198-54-128-108.cust.tzulo.com)
[20:45:45] <nomic> how do i get a random number  between 0.00001 and 0
[20:45:59] <nomic> random.randint(0.0001,0) says non integer arg 1
[20:46:05] *** Quits: Elzington (~Elzington@static-198-54-128-108.cust.tzulo.com) (Remote host closed the connection)
[20:46:12] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:46:14] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[20:46:31] <nomic> random.randint(.0001,0) *** ValueError: non-integer arg 1 for randrange()
[20:46:41] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:46:49] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[20:47:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[20:47:06] <SnoopJ> nomic, as the name suggests, randint() gives you an integer, so the bounds must be integers. Try `random.uniform(0, 1e-4)`
[20:47:26] <SnoopJ> (you can call random.random() and rescale it, but this is basically what uniform() does for you anyway)
[20:47:40] *** Joins: wyclif (~wyclif@user/wyclif)
[20:48:08] <nomic> ) random.uniform(0,.0001)  7.45916702370046e-05
[20:48:21] *** Joins: Elzington (~Elzington@66.63.167.101)
[20:48:25] <nomic> how do i get the negative xponential value to display as .. .007459 or whatever
[20:48:34] <grym> nomic: format the string
[20:48:39] <nomic> how
[20:48:41] <grym> don't care about the float repr
[20:49:12] <nomic> "format the string" how
[20:49:25] <nomic> you obviiouslly dont want to tell me -- like its some sort of secret knowwledge
[20:49:29] <SnoopJ> nomic, https://bpa.st/3RFA
[20:49:30] <grym> f'{thefloat:0.5f}'
[20:49:31] <grym> e.g.
[20:49:32] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Ping timeout: 255 seconds)
[20:49:33] <nomic> ok
[20:49:34] <nomic> thanks
[20:49:42] <grym> nomic: no, i was _typing_.  chill
[20:49:54] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[20:50:00] <nomic> hm that "f" is that like a format used in like "printf"
[20:50:02] *** Quits: rsx (~dummy@ppp-188-174-134-157.dynamic.mnet-online.de) (Quit: rsx)
[20:50:05] <SnoopJ> kinda
[20:50:12] <SnoopJ> the mini-language is documented here: https://docs.python.org/3/library/string.html#format-specification-mini-language
[20:51:00] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:51:03] <kenwoodfox> So i have a little bit of code here https://bpa.st/76TA, im putting together a bigger project and im just experimenting with OTP codes, im going to have two processes that can speak to each other over old-fashioned radio and there will be a bit of delay, and i cant encrypt or key anything so otp codes will hopefully allow the processes either end to know they're talking to the real thing
[20:51:17] <nomic> ok i remember .. is within string that format
[20:51:33] <kenwoodfox> but when i run this code it dosent work every time, some of these codes are expired by the time they are checked! and the expiraty limit is set at 15s, i dont check anything later than 5s
[20:51:39] <SnoopJ> `f"{x:f}"` is "the value x, formatted as a float" for instance. {x:A.Bf} would be "x, as a float with B decimal places, in a string padded to length A"
[20:51:55] <kenwoodfox> Why is this? why dosent totp.now() generate a wholely new code that begins its expiration at the begining of a 15 second block?
[20:52:24] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[20:52:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[20:52:45] <no_gravity> Is there a regex way to extract (Sun|World|Moon) from a string so that the capitalization is like in the regex? Example: https://www.online-python.com/V9aDRoK2xf
[20:52:47] <SnoopJ> kenwoodfox, are you sure your clocks are sufficiently synchronized?
[20:52:48] <grym> nomic: yes.  displaying a number should be done by creating a string that represents it.  computations on a number should not care what they "look like" when python shows them to you
[20:52:59] <no_gravity> ^ That works, but I would like to force it to be "Moon" instead of "MOON".
[20:53:06] <kenwoodfox> SnoopJ: this is just an experiment, my script dosent actually communcate it just runs on the same system
[20:53:10] <kenwoodfox> SnoopJ: check the link above..
[20:53:11] <SnoopJ> no_gravity, call str.title() on the result
[20:53:12] *** Joins: wyclif (~wyclif@user/wyclif)
[20:53:42] <no_gravity> SnoopJ: I do not have control over the python code. Only over the regex.
[20:54:00] <kenwoodfox> SnoopJ: hopefully on the real thing the clocks will both be gps synced
[20:54:02] <SnoopJ> no_gravity, I have never encountered a regular expression engine that has the feature you seek
[20:54:18] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Ping timeout: 255 seconds)
[20:54:20] <kenwoodfox> No internet means no NTP ;3
[20:55:18] <SnoopJ> kenwoodfox, I think I missed that this script was standalone. Let me see if I can reproduce
[20:55:19] *** dogdisaster1 is now known as dogdisaster
[20:55:32] <kenwoodfox> SnoopJ: Sorry about that, and thanks so much :3 id love to see what you think
[20:56:01] <kenwoodfox> SnoopJ: Figured i should POC out some of my major components before burrying them in mountians of .py files only to find out they dont work how i expected midway thru
[20:56:10] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 265 seconds)
[20:56:21] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[20:56:27] *** Joins: senatoreg (~senatoreg@net-5-95-175-59.cust.vodafonedsl.it)
[20:56:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:56:47] <no_gravity> SnoopJ: In fact, I have control over two things. The regex and the replacement.
[20:56:50] <SnoopJ> kenwoodfox, there's a quote by John Romero (or was it John Carmack?) somewhere in the universe that I wish I'd saved, something along the lines of "run your code often, don't let there be too much editing between sanity checks"
[20:57:21] <kenwoodfox> SnoopJ: that sounds like good advice~ I think i should start thinking like that more often
[20:57:32] <kenwoodfox> im glad i tested this because it clearly dosent work like i was expecting it to work SnoopJ
[20:57:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:58:08] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[20:58:14] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:e4f8:5db5:1df3:42f5) (Read error: Connection reset by peer)
[20:58:24] <SnoopJ> no_gravity, okay. As I said, I've never seen an engine that has the replacement-transformation feature you want. It looks like some engines support \L and \U for lower/upper, but I don't think `re` is one of them.
[20:58:24] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:58:47] <SnoopJ> You're probably best off consulting the documentation of that website, since you're going to be limited to whatever they make available to you
[20:58:49] *** Joins: wyclif (~wyclif@user/wyclif)
[20:58:57] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:59:48] <no_gravity> SnoopJ: The amount of ways things can be done in regex is so big that it would not surprise me if there is a way.
[21:00:06] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:00:41] <SnoopJ> no_gravity, if there is, it will be a feature of the particular engine, and like I said, your big constraint there is your choice of environment. Either they let you use a library that supports this (`re` does not) or they don't.
[21:01:14] <SnoopJ> kenwoodfox, hmm, I'm getting mostly verified results, but I do see some expiries. Is that what you get, too, or are you getting mostly expired?
[21:01:41] <kenwoodfox> SnoopJ: Seeing expired results at all is a failure for me
[21:02:25] <kenwoodfox> the codes expire at 15 seconds, and i never check for them later than 5
[21:03:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:03:49] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[21:03:58] *** Quits: moto (~moto@user/moto) (Ping timeout: 272 seconds)
[21:04:12] *** Quits: TakinOver (~TakinOver@47.150.206.35) (Ping timeout: 252 seconds)
[21:04:13] *** Joins: wyclif (~wyclif@user/wyclif)
[21:05:13] <SnoopJ> kenwoodfox, looking at the docs for pyotp.TOTP, I think I understand what's going on here: the *object* rotates its pad every 15 seconds, no matter what you generated in that window. So, if you call now() 1 second before the end of the interval, you'll have to verify before then.
[21:06:06] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Quit: leaving)
[21:06:13] <nubonix> hi there, so i have a pyqt5 app that i add servers, which appends to the servers.json file, and i am trying to create a reverse proxy that updates / reloads, or adds the additional server & route, however im not really sure how to do the updating / reloading or adding part. Basically i am trying to create a new function & route for the server [reverse proxy] every time the servers.json file has been changed. here is what i have now
[21:06:13] <nubonix> [completely static, and to the point of my understanding on how to make it dynamic]: https://bpa.st/EWYQ
[21:06:39] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[21:08:09] *** Joins: b-ap (~b-ap@2804:14c:1aa:80be:7e7a:91ff:fe11:111f)
[21:08:17] <nubonix> suppose i have enough understanding that i just need to know when a filechange occurs
[21:08:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[21:08:50] <nubonix> could i make a route that is called / pinged when a file change occurs so that the program knows to reload?
[21:09:44] *** Joins: wyclif (~wyclif@user/wyclif)
[21:10:39] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[21:10:48] <kenwoodfox> SnoopJ: thats not good :/ id prefer it dident work that way
[21:10:53] *** Joins: menace (~someone@user/menace)
[21:10:54] <kenwoodfox> SnoopJ: Can i do something else?
[21:11:18] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[21:11:33] <SnoopJ> kenwoodfox, I think you want the .at() method of the TOTP object. Let me share the example I came up with that illustrates this failure consistently (i.e. fails every time)
[21:11:53] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Quit: Leaving)
[21:12:10] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:12:15] <kenwoodfox> SnoopJ: Ok, that sounds like its better than what i was currenly trying: waiting for the block to cycle and then sending a message. that would add a lot of delay tho
[21:12:50] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:12:52] <kenwoodfox> This works but its brute force, waiting till the timer will be at its max https://bpa.st/UYCA
[21:13:49] <SnoopJ> kenwoodfox, okay, here's the illustration of what's wrong: https://bpa.st/3NOA
[21:14:13] *** Joins: MemoriaVetusta (~MemoriaVe@191.101.31.42)
[21:14:25] <kenwoodfox> Yeah, i see how thats put together SnoopJ
[21:14:31] *** Quits: eldenring0 (uid506233@id-506233.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[21:14:34] <kenwoodfox> ok, is there something else i can do?
[21:14:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[21:14:47] <kenwoodfox> id like each code to start exactly when it is created, and expire 15s or some time value, after that
[21:14:50] <kenwoodfox> not after the block its in
[21:14:55] <SnoopJ> kenwoodfox, you can call topt.at() to generate a code that will be valid at the given time
[21:15:06] *** Quits: b-ap (~b-ap@2804:14c:1aa:80be:7e7a:91ff:fe11:111f) (Quit: WeeChat 2.3)
[21:15:14] *** Joins: wyclif (~wyclif@user/wyclif)
[21:15:15] <kenwoodfox> because tx and decoder delay will be significant, maybe as much as 8 seconds of delay between one python program putting the packet out and the other one decoding it
[21:15:26] <kenwoodfox> SnoopJ: ill try that, but dosent at() take an argument?
[21:15:27] <SnoopJ> there's still kind of a gamble in there about how long the communication will take, but I think your 15 sec interval is probably generous enough to account for that.
[21:15:32] <kenwoodfox> SnoopJ: maybe i can put epoch time in there?
[21:15:36] <SnoopJ> kenwoodfox, yes, it does, I'm just using a shorthand :)
[21:15:50] <kenwoodfox> SnoopJ: ima try popping epoch in there :3
[21:16:07] <SnoopJ> kenwoodfox, what do you mean by "epoch time" here?
[21:16:21] <kenwoodfox> Time since the unix epoch?
[21:16:33] <SnoopJ> it lets you pass an integer (a Unix timestamp) or a datetime object. The latter is probably what I'd use
[21:16:40] *** Quits: Linux77 (~kvirc@131-179-233-186.raimax.com.br) (Ping timeout: 258 seconds)
[21:17:04] <p-i-_> What's out there for Python visualizers? I'm currently stretching matplotlib a bit too far I feel. I've also tried writing direct to a numpy x*y*RGB matrix and blitting it @ 30fps using opencv. Someone recommended vispy (doc is a bit thin, but it has an active gitter). Any other candidates I should consider?
[21:17:38] <SnoopJ> p-i-_, what makes you think you're stretching matplotlib too far? tell us more about what you're doing.
[21:17:48] <kenwoodfox> SnoopJ: ill try a datetime object? Whats the syntax for that
[21:17:54] <SnoopJ> kenwoodfox, one second, I'm doodling again
[21:17:56] <p-i-_> I'm trying to make a chart of trades, and you hover over a trade (or click it) and it brings up a new "window"/overlay that zooms into that trade. So I can see orderbook activity around that trade.
[21:18:15] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[21:18:24] <kenwoodfox> SnoopJ: no rush
[21:18:26] <p-i-_> I'd quite like to stick with matplotlib, but I dunno if I can do an overlay
[21:19:04] *** Joins: Gerula (~Gerula@user/gerula)
[21:19:45] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:19:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:20:02] <nubonix> graingert you there?
[21:20:31] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[21:20:43] <p-i-_> Also, everything I'm doing.. it's basically plotting red and green rectangles (changing brightness). Even the axis lines are black rectangles. Would be nice to render HH:MM format dates along x axis and numbers along y axis. Which kinda comes for free with MPL.
[21:20:44] *** Joins: wyclif (~wyclif@user/wyclif)
[21:20:49] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:20:49] <grym> p-i-_: for dynamic visualizations, the python tooling i know about includes plotly, bokeh, or altair/vega
[21:21:27] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:21:28] <p-i-_> But otherwise maybe I could get away with passing an array of (x1,y1,x2,y2,r,g,b) into a GL shader.
[21:21:50] <p-i-_> tx grym
[21:22:07] *** Joins: Linux77 (~kvirc@186.235.105.168)
[21:22:23] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[21:23:14] <p-i-_> I haven't touched GL in YEARS, I remember it being fierce.
[21:23:46] *** Quits: sandeepk (~sandeepk@223.130.30.125) (Remote host closed the connection)
[21:25:28] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[21:25:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:25:48] *** Joins: gusto (~Augustus@109.255.100.54)
[21:25:59] *** Quits: y1n (~y1n@84-115-64-36.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[21:26:16] *** Joins: wyclif (~wyclif@user/wyclif)
[21:26:37] *** Joins: y1n (~y1n@84-115-64-36.wifi.dynamic.surfer.at)
[21:26:52] *** Joins: pycode (~pycode@2001:b07:5d28:551:7a90:a805:9dfe:c03e)
[21:26:57] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[21:28:19] *** Quits: pr0t07ype (~pr0t07ype@user/pr0t07ype) (Ping timeout: 246 seconds)
[21:28:58] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:30:12] *** Joins: pnoud (~pnoud@user/pnoud)
[21:30:54] <SnoopJ> p-i-_, you can save a lot of time if you don't recreate the entire plot each time, but it comes with the cost of talking to the object API instead of using plot() and friends. I know you're not making an animation in the matplotlib sense, but some details on that here: https://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/
[21:30:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:31:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:31:42] *** Quits: raxor2k (~raxor2k@78.158.254.246) ()
[21:31:46] *** Joins: wyclif (~wyclif@user/wyclif)
[21:32:01] *** Joins: hposca (~hposca@node-1w7jr9phoke2u632r204jfqzz.ipv6.telus.net)
[21:32:33] *** Joins: moto (~moto@user/moto)
[21:33:31] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:34:46] *** Quits: mokulus (~mokulus@user/mokulus) (Ping timeout: 272 seconds)
[21:34:51] *** Joins: Liblx (~Alex@2a02:810c:280:59c:8149:aeb9:53e8:c708)
[21:35:12] *** Quits: Liblx (~Alex@2a02:810c:280:59c:8149:aeb9:53e8:c708) (Client Quit)
[21:35:29] *** Joins: Liblx (~Alex@2a02:810c:280:59c:8149:aeb9:53e8:c708)
[21:35:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[21:35:35] <SnoopJ> kenwoodfox, this isn't 100% but hopefully it shows off my ideas and how at() works: https://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/
[21:35:37] <SnoopJ> err
[21:35:39] <SnoopJ> https://bpa.st/TF4Q
[21:36:02] *** Joins: mokulus (~mokulus@user/mokulus)
[21:36:09] <p-i-_> tx SnoopJ
[21:36:21] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:36:29] <Liblx> hello, a question to matplotlib:  have dates as xaxis, where I show every 9th date [::9] but I would like to have only 7/15 (%m/%d) for all and only when a new year starts in a second row the year. Is that possible? What approach? Would be great. Thanks!
[21:36:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:37:16] *** Joins: wyclif (~wyclif@user/wyclif)
[21:37:42] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[21:37:43] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[21:37:47] <SnoopJ> p-i-_, as grym suggested, plotly/bokeh have tools for doing this kind of thing, although it depends on how you're actually displaying the data to the user. I'd be tempted to do the plotting part in javascript, vega might be useful for data exchange.
[21:38:11] <SnoopJ> holoviews is also worth mentioning, it's quite a bit faster AIUI, but I've never really done something like this in it. The point about not re-doing work that doesn't need to be redone will still apply.
[21:38:17] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:38:24] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:38:38] <p-i-_> I've been wondering about plotting out of a browser window and leveraging webGL / D3 & friends
[21:38:49] <SnoopJ> you could stream data to D3, yea
[21:39:02] <SnoopJ> webGL would fit kinda weird here imo, although there's datashader
[21:39:25] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[21:39:37] <p-i-_> Haven't touched JS since ES6 tho.
[21:39:40] <SnoopJ> datashader is more for "I have massive data" than it is for "I have data that will be frequently updated"
[21:39:47] <p-i-_> I heard TypeScript is the thing now.
[21:40:38] <SnoopJ> p-i-_, dealer's choice. If you go with Bokeh/Plotly you won't have to write a line of JS, doing all that for you is their main feature
[21:40:47] <SnoopJ> I'm not 100% sure if Bokeh has a live-updating feature though
[21:41:06] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[21:41:23] <kenwoodfox> SnoopJ: ok, yeah your code waits for the next block to send
[21:41:24] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[21:41:28] <kenwoodfox> SnoopJ: Ok :3 maybe i can work with that
[21:41:30] <kenwoodfox> SnoopJ: thank you
[21:41:31] <SnoopJ> kenwoodfox, yea, and apparently imperfectly
[21:41:40] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:41:40] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Read error: Connection reset by peer)
[21:41:41] <kenwoodfox> SnoopJ: theres gotta be a cleaner way :/
[21:41:48] <SnoopJ> kenwoodfox, I think the way most authenticator apps do this is by considering two intervals basically
[21:42:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[21:42:06] <imp> pep8 help: Where and how can I break this line: `def epub_filter_text (epub_items: Iterator[ebooklib.epub.EpubItem]) -> Generator[ebooklib.epub.EpubHtml, None, None]:`
[21:42:07] <kenwoodfox> SnoopJ: Shouldent one code exist for every possible unit of time?
[21:42:15] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:42:19] <SnoopJ> kenwoodfox, I don't know what you're asking me
[21:42:24] <kenwoodfox> SnoopJ: Yeah :c
[21:42:30] <kenwoodfox> SnoopJ: Ill figure something out, thanks :3
[21:42:32] <SnoopJ> kenwoodfox, that library creates a new code that is valid for an interval AFAICT
[21:42:42] *** Quits: jess (~jess@libera/staff/jess) ()
[21:42:47] *** Joins: wyclif (~wyclif@user/wyclif)
[21:42:58] <kenwoodfox> SnoopJ: Yeah but the interval dosent sync with when you get the code
[21:43:00] <SnoopJ> at() lets you just ask for the code valid at some arbitrary time, but you still have to read the crystal ball to know if you'll get there this interval or the next one
[21:43:07] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[21:43:14] <kenwoodfox> SnoopJ: I want to get a code that from the moment its created it will be valid for x seconds
[21:43:30] <SnoopJ> the easy solutions are 1) wait to send if you can't guarantee it 2) check the last interval too on the receiving side
[21:43:40] <kenwoodfox> SnoopJ: looks like the only way to do that now is wait for a code to expire and get the next one imedietly
[21:43:43] <kenwoodfox> SnoopJ: Yeah :c
[21:43:45] <SnoopJ> kenwoodfox, that's not how TOTP works
[21:43:55] <kenwoodfox> SnoopJ: I know but its sorta how the math should work
[21:44:01] <SnoopJ> if you say so
[21:44:06] <SnoopJ> I don't think the math you're describing is what this library implements
[21:44:07] <kenwoodfox> SnoopJ: there should be a way to generate a code from any real time value anywhere
[21:44:17] <SnoopJ> kenwoodfox, I'm not sure why you think at() doesn't do this
[21:44:18] <kenwoodfox> SnoopJ: It does it just dosent in the way i want to use it
[21:44:28] <kenwoodfox> SnoopJ: i tested it out
[21:44:32] <SnoopJ> okay
[21:44:37] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[21:44:37] <kenwoodfox> SnoopJ: it kept the same code for several values of epoch
[21:44:49] <jinsun> imp: just write it all in one long line and run black on your file
[21:44:52] <kenwoodfox> SnoopJ: even as the value at() changed it did not change the code and so it kept code blocks
[21:44:53] <SnoopJ> kenwoodfox, did you try values that were farther apart from each other than the width of your interval?
[21:45:06] <kenwoodfox> SnoopJ: Im not sure what you mean
[21:45:12] <imp> jinsun: is black a tool?
[21:45:17] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:45:17] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:45:29] <grym> imp: yep, a nice one
[21:45:37] <kenwoodfox> SnoopJ: no i guess i did not but it should not be read as seconds when using at(), it should be read as just a big sequnential number
[21:45:37] <jinsun> imp: yes, https://github.com/psf/black
[21:45:44] <SnoopJ> kenwoodfox, I mean that if you call `totp.at(some_time)` and `totp.at(some_time + 1)`, those will be the same code unless that 1 second crosses the TOTP's interval boundary
[21:46:01] <SnoopJ> and apparently TOTP lines itself up with Unix timestamps (ew)
[21:46:02] <kenwoodfox> SnoopJ: but at() isent a time based otp, its a sequential one
[21:46:13] <kenwoodfox> SnoopJ: *thonk time*
[21:46:16] <SnoopJ> kenwoodfox, I have no idea what that means, but I'm not really sure you're paying attention to what I'm saying here
[21:46:23] *** Joins: pnoud (~pnoud@user/pnoud)
[21:46:27] <kenwoodfox> SnoopJ: I think i am, im not sure what you think im missing
[21:46:29] <SnoopJ> at() is how you ask the object "please give me a code that will be valid at the time I give you"
[21:46:32] <SnoopJ> period
[21:46:44] <kenwoodfox> SnoopJ: in the docs, it says at() dosent care about time, its about position
[21:46:56] <kenwoodfox> 1, 2, 3 they should all have their own codes crafted from the seed base32
[21:47:08] <kenwoodfox> SnoopJ: maybe im just dumb :
[21:47:24] *** Quits: Linux77 (~kvirc@186.235.105.168) (Ping timeout: 265 seconds)
[21:47:26] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 272 seconds)
[21:47:28] <SnoopJ> kenwoodfox, I don't think you're reading the same documentation I am, https://pyauth.github.io/pyotp/#pyotp.totp.TOTP.at is pretty clear about accepting a time
[21:47:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[21:47:55] <SnoopJ> if you call at() with multiple times that fall in the same window for the TOTP, you'll get the same code because that's how the object works
[21:48:04] <kenwoodfox> No i guess im not :c SnoopJ
[21:48:04] <kenwoodfox> https://github.com/pyauth/pyotp#counter-based-otps
[21:48:06] <kenwoodfox> Mine is different
[21:48:06] <SnoopJ> (I think)
[21:48:18] *** Joins: wyclif (~wyclif@user/wyclif)
[21:48:25] <kenwoodfox> Why are the docs different?
[21:48:27] <zware> kenwoodfox: `at` is implemented for both TOTP and HOTP
[21:48:28] <SnoopJ> kenwoodfox, that's a different class than the one your sample uses.
[21:48:44] <kenwoodfox> SnoopJ: ohh
[21:48:48] <kenwoodfox> SnoopJ: i have some more work to do then
[21:48:51] <kenwoodfox> SnoopJ: brb,
[21:48:54] <SnoopJ> kind of annoying that they use the same name :/
[21:49:06] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:49:12] <kenwoodfox> bleh :c
[21:49:13] <kenwoodfox> Yeah
[21:49:47] <SnoopJ> p-i-_, if you like D3, this is a pretty neat library that would make live-streaming the data pretty straightforward: https://c3js.org/
[21:49:50] *** Joins: bilb_ono (~alexmarsh@12.190.239.194)
[21:50:37] <SnoopJ> the limits can be kinda fiddly in my (limited) experience with it, but it's d3 so it goes pretty fast
[21:51:11] <kenwoodfox> Wait is this not the same library?
[21:53:08] *** Quits: dangrenier83 (~dangrenie@user/dangrenier83) (Ping timeout: 272 seconds)
[21:53:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[21:53:28] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[21:53:49] *** Joins: wyclif (~wyclif@user/wyclif)
[21:53:50] *** Quits: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net) (Quit: Going offline, see ya!)
[21:53:52] <kenwoodfox> Ok i got it now :3 the counter based system does work i just was not using that part of the lib
[21:54:25] <kenwoodfox> Ok, thats good :3 now all i need to do is figure out how to interpert it
[21:54:39] *** Quits: y1n (~y1n@84-115-64-36.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[21:54:45] <kenwoodfox> maybe have a method on the checking end that just checks if the code was valid for any one of the past 20 unix epochs
[21:55:02] <nomic> how do i make a value into a numpy int64 value
[21:55:24] <nomic> numpy.int64 i see
[21:55:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[21:55:31] <kenwoodfox> nomic: that was quick
[21:55:39] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[21:55:42] <nomic> i already did it.. just needed reminding
[21:55:55] *** Quits: rendar (~rendar@user/rendar) ()
[21:57:12] *** Joins: Linux77 (~kvirc@66-183-233-186.raimax.com.br)
[21:57:31] <jinsun> imp: also, for long type hints, you can create aliases so that the defs don't become too long https://docs.python.org/3/library/typing.html#type-aliases
[21:58:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:59:19] *** Joins: wyclif (~wyclif@user/wyclif)
[21:59:39] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[22:00:10] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[22:00:54] *** Quits: kadobanana (~mud@user/kadoban) (Remote host closed the connection)
[22:01:19] *** Joins: kadobanana (~mud@user/kadoban)
[22:02:47] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[22:03:40] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[22:03:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:04:02] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:04:49] *** Joins: wyclif (~wyclif@user/wyclif)
[22:05:13] *** Joins: thiras (~thiras@user/thiras)
[22:06:25] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[22:07:04] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[22:07:25] *** Joins: ttkpy (501@46-97-229-216.sr2.pon.net)
[22:09:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[22:10:22] *** Joins: wyclif (~wyclif@user/wyclif)
[22:10:25] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[22:10:41] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[22:11:02] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[22:12:03] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[22:13:02] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[22:14:51] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:14:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:15:53] *** Joins: wyclif (~wyclif@user/wyclif)
[22:15:55] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577) (Quit: Leaving)
[22:16:58] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[22:17:10] *** Quits: magla (~gelignite@55d493a6.access.ecotel.net) (Quit: Stay safe!)
[22:17:15] *** Joins: pycode1 (~pycode@93-40-5-81.ip36.fastwebnet.it)
[22:19:04] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 246 seconds)
[22:19:06] *** Quits: pycode (~pycode@2001:b07:5d28:551:7a90:a805:9dfe:c03e) (Ping timeout: 250 seconds)
[22:19:20] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[22:19:41] *** Joins: ham5urg (~ham5urg@94.250.37.235)
[22:20:41] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[22:20:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:21:10] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[22:21:11] *** Joins: dangrenier83 (~dangrenie@user/dangrenier83)
[22:21:23] *** Joins: wyclif (~wyclif@user/wyclif)
[22:22:09] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[22:22:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:22:23] *** Joins: PJBoy (~PJBoy@user/pjboy)
[22:23:54] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: Lost terminal)
[22:23:59] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:24:46] *** Joins: nesoi (~Adium@198-27-190-235.fiber.dynamic.sonic.net)
[22:25:41] <nesoi> is or can be the result of a raw SQL query a datastructure that you can step through sequentially and easily access each field?
[22:25:52] *** Quits: ham5urg (~ham5urg@94.250.37.235) (Ping timeout: 268 seconds)
[22:26:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[22:26:17] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[22:26:31] <nesoi> The output is returned sorted and I want to move it into a convenient datastructure with as low a CPU usage as possible
[22:26:41] <nesoi> and without re-sorting it etc.
[22:26:53] *** Joins: wyclif (~wyclif@user/wyclif)
[22:27:45] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[22:27:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[22:28:05] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:28:14] *** Quits: dustiestgolf (~anotherus@153.90.200.238) (Quit: Leaving)
[22:28:42] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:80dc:d303:e33a:f57f) (Quit: Client closed)
[22:28:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:28:54] *** Quits: Elzington (~Elzington@66.63.167.101) (Ping timeout: 252 seconds)
[22:30:51] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[22:31:04] *** Quits: Liblx (~Alex@2a02:810c:280:59c:8149:aeb9:53e8:c708) (Quit: WeeChat 3.1)
[22:31:05] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[22:31:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:31:53] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[22:32:24] *** Joins: wyclif (~wyclif@user/wyclif)
[22:35:07] *** Quits: doev (~doev@p549d74f6.dip0.t-ipconnect.de) (Quit: Client closed)
[22:36:55] *** Quits: pycode1 (~pycode@93-40-5-81.ip36.fastwebnet.it) (Ping timeout: 246 seconds)
[22:37:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[22:37:54] *** Joins: wyclif (~wyclif@user/wyclif)
[22:38:05] *** Joins: zeden (~zeden@user/zeden)
[22:38:15] *** Quits: urandom3000 (~urandom30@2600:1700:1474:4b70:5ac:9327:cf5c:4fec) (Ping timeout: 255 seconds)
[22:39:31] *** Joins: b-ap (~b-ap@2804:14c:1aa:80be:7e7a:91ff:fe11:111f)
[22:42:33] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:42:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:43:03] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:43:24] *** Joins: wyclif (~wyclif@user/wyclif)
[22:43:48] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[22:44:27] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[22:45:27] *** Joins: afidegnum (~user@102.176.94.118)
[22:46:16] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[22:46:38] <afidegnum> hi, any code snippet for Merging multiple texts into a single file to be used in training  GPT-2 model ? I can't seems to find a related code.
[22:47:27] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: Textual IRC Client: www.textualapp.com)
[22:47:40] *** Joins: node1 (~node1@user/node1)
[22:48:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:48:42] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 252 seconds)
[22:48:55] *** Joins: wyclif (~wyclif@user/wyclif)
[22:51:33] *** Joins: Auron (~Auron956@user/auron)
[22:52:51] <bilb_ono> whats a good way to keep track of a very large set in a python script. I am ingesting customer records from pos transactions and I want to keep track of which customerids have already been ingested
[22:53:12] <bilb_ono> is there some filetype that I can save and load a very large set. like a lite database thingy
[22:53:17] <bilb_ono> but just for this set
[22:53:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:53:58] <SnoopJ> afidegnum, what kind of merging do you need to do? (You might ask this question in ##machinelearning, too)
[22:54:17] <grym> bilb_ono: in-memory sqlite can be more or less exactly that
[22:54:25] *** Joins: wyclif (~wyclif@user/wyclif)
[22:54:26] <grym> you can even dump it to disk! :)
[22:54:59] *** Joins: yaalon (~yaalon@189.202.79.66.cable.dyn.cableonline.com.mx)
[22:55:21] *** Joins: zebrag (~chris@user/zebrag)
[22:56:16] *** Quits: yaalon (~yaalon@189.202.79.66.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[22:56:35] <bilb_ono> ok thanks
[22:56:47] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[22:56:48] <afidegnum> SnoopJ: ok, I have list of text files related to "arts", "music" in a specific directory. I want to train those files so i can be able to generate few models
[22:56:56] <afidegnum> to generate few texts
[22:57:15] *** Joins: yaalon (~yaalon@189.202.79.66.cable.dyn.cableonline.com.mx)
[22:58:08] *** Joins: audiocat (~audio@2603-8081-1800-00ad-4a1d-22ed-5c41-e626.res6.spectrum.com)
[22:58:19] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[22:58:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[22:59:55] *** Joins: wyclif (~wyclif@user/wyclif)
[23:00:29] *** Joins: yaalon_ (~yaalon@201.171.90.143.dsl.dyn.telnor.net)
[23:01:12] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-6486-db3a-a56e-c77d.fixed6.kpn.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:02:17] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 255 seconds)
[23:02:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[23:03:31] *** Joins: c4017w (~c4017@209.52.68.8)
[23:03:45] *** Quits: yaalon (~yaalon@189.202.79.66.cable.dyn.cableonline.com.mx) (Ping timeout: 268 seconds)
[23:03:59] *** Joins: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net)
[23:06:03] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[23:06:11] *** Quits: bilb_ono (~alexmarsh@12.190.239.194) (Quit: bilb_ono)
[23:07:55] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:08:21] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:09:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:10:56] *** Joins: wyclif (~wyclif@user/wyclif)
[23:15:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[23:16:14] <nubonix> hello, im trying to create a reverse proxy, but im having some difficulties with pathing [route url endpoint generation]. E.g. if i send a request to my_public_ip:1337/server1 and i send a request to my_public_ip:1337/server1/show_me_the_dir it will give me the same response, because both of them point to another computer on my network [lets say server1 == '10.0.0.144'], so both requests will be sending a request to the endpoint
[23:16:14] <nubonix> `10.0.0.144:1337/`  instead of one at 10.0.0.144:1337/ and one at 10.0.0.144:1337/show_me_the_dir code is here: https://bpa.st/MGGQ
[23:16:51] *** Joins: wyclif (~wyclif@user/wyclif)
[23:16:56] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[23:16:56] <nubonix> [ive already port forwarded port 1337 on the server that is hosting the reverse proxy]
[23:17:00] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: Ping timeout (120 seconds))
[23:17:05] *** Joins: bilb_ono (~alexmarsh@12.190.239.194)
[23:17:20] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[23:18:09] *** Joins: upsala (~zcb@185.213.155.160)
[23:18:59] *** Joins: magla (~gelignite@55d493a6.access.ecotel.net)
[23:20:00] <twainwek> i have d1 = {'a': 1, ...} and d2 = {'a': 2, ...} --- how can i create d3 = {'a': [1,2], ...} ie combining all elements from d1 and d2 into lists, noting that some elements in d1 may not exist in d2 and vice versa.
[23:20:13] <twainwek> i can do it with a nested loop, but i was wondering if there is a more elegant solution
[23:20:40] <nubonix> pre sure you can .merge or .concat
[23:20:58] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[23:21:25] <nubonix> or not, nvm
[23:21:26] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[23:21:32] <twainwek> :^)
[23:21:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:21:41] <yolk> Nubonix: are you rewriting your path?
[23:22:03] <nubonix> twainwek: o right, they call it .update instead
[23:22:09] <grym> twainwek: defaultdict(list) is what i'd go for
[23:22:10] <nubonix> yolk im not
[23:22:23] *** Joins: wyclif (~wyclif@user/wyclif)
[23:22:23] <nubonix> update works too :(
[23:22:34] <grym> twainwek: https://bpa.st/4TDQ e.g.
[23:22:51] <nubonix> ew, why grym
[23:22:57] <twainwek> i see... so two loops
[23:23:03] <grym> there's almost certainly a more elegant way
[23:23:08] <grym> than looping twice
[23:23:12] *** Quits: Guddu (~Guddu@223.177.43.7) (Read error: Connection reset by peer)
[23:23:14] <grym> but this conveys the point clearly enough
[23:23:22] <twainwek> ya i'll just go with this for now
[23:23:53] <grym> uhh. probably chain.from_iterable?
[23:23:55] <yolk> nubonix: what's your server block or location block look like for routing to the proxy
[23:23:55] <nubonix> ug... nvm...
[23:24:08] <nubonix> yolk 10/8
[23:24:44] <nubonix> yolk shouldnt matter though, as the user will be providing / updating servers.json
[23:25:00] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[23:25:21] <yolk> The path should forward unless you're missing a proxy_pass or something
[23:25:41] <nubonix> yolk a pyqt5 app i have will update the servers.json based on user input, and uvicorn should reload upon a server.json file change
[23:25:56] <nubonix> yolk how can it forward if im hardcoding the path?
[23:26:18] <yolk> I assume nginx would forward to that uvicorn worker the
[23:26:25] <nubonix> i mean, f'https://{server_ip}:1337/'  where the 3rd `/` is hardcoded
[23:26:38] <grym> twainwek: https://bpa.st/MVMQ  that's cleaner
[23:26:52] <nubonix> yolk, so i have to be running nginx as well?
[23:27:00] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[23:27:01] <yolk> nubonix: Oh I think I misread, I thought the issue was the path not being included
[23:27:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[23:27:14] <nubonix> yolk na, im just not doin anything with it
[23:27:15] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[23:27:24] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:27:27] <nubonix> yolk pre sure i could get request.params, but im not sure
[23:27:33] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[23:27:39] <yolk> nubonix: I read reverse proxy and immediately jumped to nginx my bad!
[23:27:45] <nubonix> yolk haha nw
[23:27:52] <twainwek> grym: what is the value of v?
[23:27:55] <nubonix> yolk i think it would be overkill so
[23:27:55] *** Joins: wyclif (~wyclif@user/wyclif)
[23:27:59] <yolk> I think you'd want to grab the raw request to do proxy stuff
[23:28:07] <grym> twainwek: the value of each key
[23:28:14] <grym> value associated with each key*
[23:28:14] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[23:28:26] *** Parts: senatoreg (~senatoreg@net-5-95-175-59.cust.vodafonedsl.it) ()
[23:28:27] <nubonix> yolk mk, so the request.params, but what about how its not actually adding any routes
[23:28:31] <grym> twainwek: uhh, i typoed, haha.  one secd
[23:28:40] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[23:29:27] <grym> twainwek: https://bpa.st/WKIQ sorry
[23:29:48] <twainwek> ah nice
[23:29:56] <yolk> nubonix: I understand uvicorn passes the asgi request to the app it's running. So I think you'd have to match every path you're interested in or work on every request
[23:30:03] <nubonix> yolk so my servers.json has an entry of `{"server_ip": "10.0.0.144", "server_name": "server1"}` but i cant request `https://my_public_ip:1337/server1`
[23:30:10] <twainwek> very nice
[23:30:12] <twainwek> thanks
[23:30:27] *** Quits: dangrenier83 (~dangrenie@user/dangrenier83) (Ping timeout: 255 seconds)
[23:30:30] <grym> sure!
[23:30:38] <nubonix> yolk paths arent what im talking about atm
[23:31:10] <nubonix> yolk the routes list appears to be empty
[23:31:34] <yolk> paths are routes in my head
[23:31:35] <nubonix> yolk so, it appears that its completely skipping the for loop to add routes to the routes list
[23:31:56] *** Quits: bilb_ono (~alexmarsh@12.190.239.194) (Quit: bilb_ono)
[23:31:57] <nubonix> yolk they are, but im seperating them to make my code make more sense
[23:32:01] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[23:32:15] <nubonix> yolk explaining the code by seperating the routes / paths, to make more sense*
[23:32:18] <yolk> `/server1` like pathing would want to make every request to "server1" with a path of "/"
[23:32:25] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[23:32:31] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:32:36] <nubonix> yolk yes
[23:32:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:32:46] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 250 seconds)
[23:32:49] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5ca4:fa04:b487:ba6e) (Quit: Textual IRC Client: www.textualapp.com)
[23:33:16] <yolk> I understand I think you'd want to rewrite the path and forward it to the app as root (/)
[23:33:18] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[23:33:19] *** Joins: Fridtjof (~fridel@thonk.9net.org)
[23:33:27] *** Joins: wyclif (~wyclif@user/wyclif)
[23:33:35] <nubonix> yolk, yes, but im not sure how to redirect
[23:33:49] <nubonix> or get the path
[23:34:11] <nubonix> and the reason being, is because no routes exist in the code that i showed above
[23:34:24] <nubonix> that for loop appears to do nothing
[23:34:29] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[23:34:36] <yolk> While handling the raw request from guvicorn. Here's the asgi object https://www.uvicorn.org/#the-asgi-interface
[23:34:45] <yolk> Uvicorn*
[23:35:20] <yolk> I suspect the app has no routes but that could be just part of a missed initialization
[23:35:38] <nubonix> yolk nvm... im an absolute monkey
[23:35:44] <yolk> Me too hehe
[23:35:56] <nubonix> that code that i shared was on the wrong computer >.>
[23:36:04] <yolk> Dog!
[23:36:06] <nubonix> :D
[23:36:09] <yolk> Doh!*
[23:36:16] <yolk> :D
[23:36:17] <nubonix> however.. got a new error now though
[23:36:29] <nubonix> it doesnt like the way i was adding routes >.>
[23:36:44] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[23:36:48] <nubonix> `TypeError: 'dict' object is not callable`
[23:36:51] <nubonix> >.>
[23:37:02] <nubonix> guess its trying to add a dict to the list, and uvicorn says, eh no
[23:37:12] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Ping timeout: 255 seconds)
[23:38:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:38:34] <yolk> nubonix: well that's something ;)
[23:38:53] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[23:38:58] *** Joins: wyclif (~wyclif@user/wyclif)
[23:39:19] <nubonix> yolk yeah but i dont understand why...
[23:39:47] <nubonix> cause... https://www.starlette.io/ is identical to what im doing, is it not?
[23:40:21] <nubonix> in example.py
[23:40:24] <yolk> App is producing an AsgiApp which responds to the api for uvicorn
[23:40:29] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 268 seconds)
[23:40:51] <nubonix> yolk english please
[23:41:08] <jessicara> weird question, is there some kinda document out there like c++ for c programmers but more like python for c/c++ programmers?
[23:41:13] *** Joins: urandom3000 (~urandom30@2600:1700:1474:4b70:5ac:9327:cf5c:4fec)
[23:41:21] <yolk> Are you using starlette nubonix?
[23:41:26] <nubonix> yolk yeah
[23:41:29] <nubonix> yes*
[23:41:58] <SnoopJ> jessicara, the official tutorial is useful if you know another language. I'm not sure there's a comparable guide with the "translation" approach, though.
[23:42:13] *** Quits: sebastianos (~sebastian@user/sebastianos) (Read error: Connection reset by peer)
[23:42:34] <deniska> jessicara: the official tutorial https://docs.python.org/3/tutorial/ kinda assumes that you're already familiar with programming. https://learnxinyminutes.com/docs/python/ can also act as a tour
[23:42:49] <yolk> nubonix: the example.py uses `Route()` for routes here ```app = Starlette(debug=True, routes=[
[23:42:49] <yolk>     Route('/', homepage),
[23:42:49] <yolk> ])```
[23:42:50] <deniska> not sure if there's anything specifically for C++ refugees :)
[23:43:06] <nubonix> yolk, no, it uses a list of Routes()
[23:43:11] <jessicara> not so much a refugee as, that particular document happened to use language which worked well with my autistic brain
[23:43:18] <nubonix> yolk which is what im doing
[23:43:29] <yolk> hmm weird
[23:43:30] <jessicara> and going from something already using a lot helped
[23:43:31] <SnoopJ> jessicara, the biggest things you have to watch out for from that angle: 1) Python's iteration is like range-based loops in C++, but everywhere. If you're juggling indices, reconsider what you're doing. 2) Exceptions are a lot better liked in Python (they're effectively free because the runtime already costs so much)
[23:43:40] <nubonix> graingert
[23:43:41] *** Joins: sebastianos (~sebastian@user/sebastianos)
[23:43:52] <yolk> Nubonix: where does servers.JSON come in?
[23:43:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:44:04] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[23:44:05] <SnoopJ> oh, and I guess: 3) The closest thing Python really has to RAII is the use of context managers
[23:44:06] <deniska> jessicara: also, everything is essentially shared_ptr
[23:44:19] <nubonix> yolk i have a pyqt5 app that a user can add a new server, and so it will add a new route
[23:44:29] *** Joins: wyclif (~wyclif@user/wyclif)
[23:44:31] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[23:45:06] <jessicara> i will bookmark these things for later, thanks
[23:45:20] <SnoopJ> if you've been keeping up with the bleeding edge of C++, some of the stuff in Python will seem very familiar to you ;)
[23:45:21] <nubonix> yolk perhaps uvicorn takes a special type of list, or converts it or something when its run as a parameter
[23:45:29] <CodeMouse92> jessicara: The biggest mental jump for C++ to Python is, stop thinking about things in terms of "variables". Python has names which are bound to values, like shared_ptrs almost (like deniska said)...
[23:45:42] <jessicara> it is typical i'd somehow miss there is an official tutorial, but write c-like python which works anyway but be super spooked at unexpected behaviour which might happen
[23:45:43] <CodeMouse92> Some things are immutable, like integers and tuples. If you try to modify the value, you'll just get a new value
[23:45:43] *** Quits: Deneb (~johnch@58.111.189.80.dyn.plus.net) (Remote host closed the connection)
[23:45:51] <grym> jessicara: i broadly liked jeff knupp's "idiomatic python", but it's a bit out of date these days
[23:45:56] <nubonix> yolk well... i guess that still doesnt make sense... as im still passing it to uivcorn... so weird... i r confused
[23:45:56] <CodeMouse92> Other things are MUTABLE, like lists ("arrays"), and changing the value will change the value
[23:46:19] <SnoopJ> in particular, the structured binding declarations added in C++17 are basically lifted straight from Python
[23:46:21] <grym> jessicara: it was a nice "ok, i'm real good at c#, how do i say that stuff this way" thesaurus
[23:46:25] <CodeMouse92> jessicara: Honestly, what sucks, is I have a *literal entire book* specifically for people coming from other langs to Python. But it won't be published until next year.
[23:46:33] <SnoopJ> CodeMouse92, we shouldn't conflate lists and arrays, ever
[23:46:42] <SnoopJ> std::vector is an adequate analogy for list()
[23:46:56] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[23:46:57] <jessicara> CodeMouse92: well, i have lots of time i guess
[23:46:59] <CodeMouse92> SnoopJ: Mm, fair, that's what I mean
[23:47:02] <jessicara> i might have a read
[23:47:12] <yolk> yeah I am as well nubonix maybe theres some work done in the app stanza that's not reached when you're routing right now. Like the magic of calling uvicorn example:app loads example.py and grabs app from the module
[23:47:16] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:47:21] <CodeMouse92> jessicara: "Dead Simple Python" from No Starch Press, 2022, if you're still looking for material about that time
[23:47:23] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[23:47:44] <CodeMouse92> Another good book in this ballpark is Naomi Ceder's...
[23:47:49] <SnoopJ> jessicara, more than a few people here speak C++ too, so feel welcome to ask "what's the Python equivalent of [C++ thing]?"
[23:47:56] *** Joins: y1n (~y1n@84-115-64-78.wifi.dynamic.surfer.at)
[23:48:01] <CodeMouse92> https://www.manning.com/books/the-quick-python-book-third-edition
[23:48:14] <SnoopJ> quite a lot of things don't *have* an equivalent because Python has no memory model, though (for better or worse)
[23:48:18] <yolk> "Magic" loosely theres not any magic really I just don't know that much about it other than it's passing the ASGI request
[23:48:24] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[23:48:28] *** Quits: KevinX (~KevinX@2.56.190.208) (Ping timeout: 258 seconds)
[23:48:45] <nubonix> yolk magic == i dont have to deal with it, it does it for me
[23:48:52] <nubonix> imo ofc
[23:48:56] <CodeMouse92> SnoopJ: Well, it *has* a memory model, at least at the implementation level, but it doesn't expose it.
[23:49:01] <yolk> fair point
[23:49:09] *** Joins: Murgoth (Murgoth@user/murgoth)
[23:49:11] <SnoopJ> CodeMouse92, right, a particular implementation has its own implementation details
[23:49:11] *** Joins: pnoud (~pnoud@user/pnoud)
[23:49:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:49:14] <deniska> it has a data model
[23:49:35] <SnoopJ> CodeMouse92, but there's nothing like the distinction between lvalue/rvalue (and friends) because names are just different
[23:49:46] <yolk> Nubonix: maybe helpful https://fastapi.tiangolo.com/advanced/behind-a-proxy/
[23:49:59] *** Joins: wyclif (~wyclif@user/wyclif)
[23:50:12] <SnoopJ> jessicara, this is a very good read as well, it may clear up some confusion about how names work (and why they aren't like C++ variables): https://nedbatchelder.com/text/names1.html
[23:50:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[23:51:04] *** Quits: yaalon_ (~yaalon@201.171.90.143.dsl.dyn.telnor.net) (Read error: Connection reset by peer)
[23:51:20] <nubonix> yolk looks to be better than what im currently doing atm
[23:52:03] *** Quits: urandom3000 (~urandom30@2600:1700:1474:4b70:5ac:9327:cf5c:4fec) (Ping timeout: 255 seconds)
[23:52:07] *** Joins: yaalon (~yaalon@201.171.90.143.dsl.dyn.telnor.net)
[23:52:25] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[23:52:45] *** Joins: urandom3000 (~urandom30@2600:1700:1474:4b70:5ac:9327:cf5c:4fec)
[23:53:04] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[23:53:06] *** Quits: Samian (~Sami@2620:10d:c091:480::1:6681) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:53:23] <CodeMouse92> jessicara: On that same note, Ned also has a marvelous (if slightly out of date) talk about loops. https://nedbatchelder.com/text/iter.html
[23:54:00] <SnoopJ> ah yea, that discusses some of the differences in iteration
[23:54:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[23:54:24] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Lost terminal)
[23:54:26] <graingert>  nubonix ?
[23:54:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:54:56] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 255 seconds)
[23:55:07] <SnoopJ> you'll feel right at home with iterators, probably (although there's no fancy stuff like bidirectional iterators)
[23:55:30] *** Joins: wyclif (~wyclif@user/wyclif)
[23:55:36] <nubonix> graingert oooo arrival :D alright, so was hoping you could help me. im trying to create a reverse proxy with starlette, but i cant seem to pass a list created by a for loop to uivcorn or the app, it just ignores the routes code is here: https://bpa.st/MGGQ
[23:56:25] <nubonix> graingert sorry to tag you, but im not sure if this is something starlette related, uvicorn, or something else, but i thought you might know more
[23:56:50] *** Joins: slav0nic (slav0nic@python.su)
[23:56:58] <graingert> nubonix: Hmm try in the encode/community gitter chat?
[23:57:26] <nubonix> graingert alright
[23:57:40] <graingert> Actually it looks like you're not using functools.partial
[23:58:10] <graingert> You're calling an async function without awaiting it
[23:59:15] *** Quits: urandom3000 (~urandom30@2600:1700:1474:4b70:5ac:9327:cf5c:4fec) (Ping timeout: 255 seconds)
[23:59:19] <graingert> You should get an error about a not-callable route
[23:59:35] <graingert> nubonix: also you should make your httpx client in lifespan
