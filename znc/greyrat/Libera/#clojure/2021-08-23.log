[00:24:25] <sobel> that's about the best i can do too
[00:24:33] <sobel> i've had much better luck avoiding them in the first place
[00:40:00] *** Quits: to-hu (~Thunderbi@p57b5a00d.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:41:28] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:61f7:d7e2:289c:493b)
[00:56:49] <ridcully_> not using anon-fn (the real anon ones, with no name at all) helps a bit with some stacktraces
[01:00:15] <sobel> hrm, jdbc/insert-multi! seems to be taking the slowest method possible. 16k measly rows.
[01:00:41] <sobel> (i used list-of-columns, it should be fast, it used to be fast)
[01:08:36] <ridcully_> assuming you are using next?  they state in the docs, you should consider using exeucute-batch! for many rows
[01:09:04] <ridcully_> it basically creates a single sql statement with all rows as arguments
[01:09:39] <sobel> i thought that's what insert-multi! shoud be doing
[01:10:12] <sobel> i'm not seeing execute-batch! in the clojure.java.jdbc docs
[01:10:37] <sobel> just execute! ?
[01:11:17] <ridcully_> i dont know how non-next handles that
[01:11:51] <sobel> ooooh i'm using the old one. i didn't even know about next.
[01:12:06] <ridcully_> then there is always the classic: are you running it in an tx?
[01:12:20] <sobel> yeah, it's in a tx. i'm just seeing like 50 rows/sec
[01:12:55] <sobel> it runs ok local but my db connection is over an ssh tunnel and i'm tweaking for the weird dev condition
[01:15:47] <ridcully_> well if that is slower by a magnitude or two i'd not be surprised.
[01:20:29] <sobel> psql and csvkit can insert 20k rows in <1 second
[01:22:21] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[01:42:28] <ridcully_> assuming psql is just a COPY?  I'd find out first, what insert-multi! is doing in your lib - and then try something differently
[02:11:35] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:22:53] *** Quits: uncleyear (~ian@pppoe.178-66-131-194.dynamic.avangarddsl.ru) (Remote host closed the connection)
[02:24:36] *** Joins: uncleyear (~ian@pppoe.178-66-131-194.dynamic.avangarddsl.ru)
[02:55:10] *** Joins: IPmonger (~IPmonger@172.58.206.220)
[02:55:24] *** Quits: IPmonger (~IPmonger@172.58.206.220) (Remote host closed the connection)
[02:55:37] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[02:57:50] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:10:10] *** Quits: uncleyear (~ian@pppoe.178-66-131-194.dynamic.avangarddsl.ru) (Ping timeout: 252 seconds)
[03:13:11] *** Joins: lotuseater (~user@p200300e7871bf00038fb8d6cf7d8260d.dip0.t-ipconnect.de)
[03:43:09] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:44:06] *** Joins: flynn (~mcbloch@user/flynn)
[04:25:39] <sobel> hammock-time conclusion is, i'm switching to next
[05:05:16] <sobel> oof, double-whammy. clojure.java.jdbc docs indicate the mysql parameter "rewriteBatchedStatement" is required to get the desired batch behavior
[05:05:24] <sobel> in fact, rewriteBatchedStatements is required
[05:05:36] <sobel> THEN insert-multi! works as advertised
[05:28:08] *** Joins: meinside_ (uid24933@id-24933.brockwell.irccloud.com)
[06:07:18] <sobel> c.j.jdbc isn't strictly terrible but jdbc is quirky and the wrappy doesn't smooth out the bumps as much as it could
[06:07:29] <sobel> wrapper
[07:53:30] *** Joins: Igneous (~igneous@user/igneous)
[08:49:08] *** Quits: Igneous (~igneous@user/igneous) (Quit: leaving)
[09:15:28] *** Joins: POV (~Drebbin@16.ip-149-56-143.net)
[09:15:37] *** Quits: glider (~glider@user/glider) (*.net *.split)
[09:15:37] *** Quits: spec (~mrSpec@user/spec) (*.net *.split)
[09:15:37] *** Quits: POV_ (~Drebbin@16.ip-149-56-143.net) (*.net *.split)
[09:15:37] *** Quits: rufo (~rufo@ct.rufoa.com) (*.net *.split)
[09:15:45] *** Joins: glider_ (~glider@user/glider)
[09:15:51] *** Joins: mrSpec (~mrSpec@user/spec)
[09:15:52] *** Joins: rufo_ (~rufo@ct.rufoa.com)
[09:18:50] *** Quits: Techcable_ (~Techcable@168.235.93.147) (*.net *.split)
[09:18:50] *** Quits: sushimako (~flo@2a03:b0c0:2:d0::e3:d001) (*.net *.split)
[09:18:50] *** Quits: markmarkmark (~mark@user/markmarkmark) (*.net *.split)
[09:19:47] *** Joins: Techcable (~Techcable@168.235.93.147)
[09:19:49] *** Joins: sushimako (~flo@2a03:b0c0:2:d0::e3:d001)
[09:20:41] *** Joins: markmarkmark (~mark@user/markmarkmark)
[09:36:53] *** Quits: xsperry (~as@user/xsperry) ()
[09:58:31] *** Joins: struchu (~struchu@194.28.48.158)
[10:26:03] *** Joins: uncleyear (~ian@pppoe.178-66-131-194.dynamic.avangarddsl.ru)
[10:47:38] <ridcully_> if something is quirky and mysql is involved, then in my experience, "something" had no way around it
[11:32:40] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:39:16] *** Joins: xsperry (~as@user/xsperry)
[12:02:15] *** Joins: t3hyoshi (~jdcain@2600:8804:1b96:4900::935)
[12:02:31] *** Quits: t3hyoshi (~jdcain@2600:8804:1b96:4900::935) (Quit: WeeChat 3.2)
[12:18:44] *** Joins: t3hyoshi (~jdcain@2600:8804:1b96:4900::935)
[12:35:46] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:40] *** Quits: t3hyoshi (~jdcain@2600:8804:1b96:4900::935) (Quit: WeeChat 3.2)
[12:38:42] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[12:38:56] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:41:26] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[12:41:34] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[12:42:09] *** Joins: t3hyoshi (~jdcain@2600:8804:1b96:4900::935)
[13:05:29] <nivag> If you are still using MySQL, then you should consider upgrading to PostgreSQL if you can -- especially if the data is important to you!
[13:06:56] <Para> I still think Spring 3.x era JdbcTemplate is the best wrapper implementation for JDBC. Even Spring did ruin that a bit with 4.x and boot era "improvements" though.
[13:09:06] *** Joins: silasfox (~sbv@xdsl-87-78-57-101.nc.de)
[13:21:09] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[13:39:39] *** Joins: kipz (~kipz@home.kipz.org)
[13:39:52] <wink> oh, daily zealot hour?
[13:49:16] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 252 seconds)
[13:49:29] <Para> Old Men Yelling at Clouds, Incorporated
[13:51:18] <wink> I didn't mean your jdbc rant, btw.
[13:51:40] <wink> (rant is a harsh word for a single "ruined it", anyway)
[13:51:55] <Para> Microburst :)
[13:56:25] *** Joins: amk (~amk@109.255.169.126)
[13:59:51] <wink> like microblog, but with useful content. I like it
[14:08:35] *** Joins: grunskis (~grunskis@ip5f5bf6e2.dynamic.kabel-deutschland.de)
[14:36:29] *** Quits: grunskis (~grunskis@ip5f5bf6e2.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:52:50] *** Quits: opqdonut (opqdonut@pseudo.fixme.fi) (Ping timeout: 256 seconds)
[14:52:57] *** Joins: opqdonut (opqdonut@pseudo.fixme.fi)
[15:34:48] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[15:39:07] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[15:48:07] <sobel> Para: i was an early fan of JdbcTemplate
[15:49:14] <Para> sobel: cool. I don't really understand why they decide to split everything into their own libraries in the way they did, eg. Spring Data and forced refactoring to the abstract repository pattern.
[15:49:29] <sobel> nivag: i appreciate the sentiment, but my mysql problems are purely legacy. and ordinarily i would migrate a schema on principle but this one is special. so very special.
[15:51:14] <sobel> where normal people would add a date column and list multiple dates in a query, the previous arsonists in this case decided to make more tables. 4 times a year, more tables. to query across time periods, you have to join.
[15:58:11] <Para> hammer driven design?
[15:58:30] <Para> as in they know how to join, thus join is the nail of their toolset
[16:03:58] <ridcully_> *butterfly* are those table spaces?
[16:11:40] *** DasBrain_ is now known as DasBrain
[16:11:59] *** Joins: to-hu (~Thunderbi@p57b5a00d.dip0.t-ipconnect.de)
[16:17:13] *** Quits: silasfox (~sbv@xdsl-87-78-57-101.nc.de) (Ping timeout: 252 seconds)
[16:18:56] *** Joins: silasfox (~sbv@cgn-89-1-215-99.nc.de)
[16:57:56] *** Joins: grunskis (~grunskis@ip5f5bf6e2.dynamic.kabel-deutschland.de)
[17:04:22] *** Quits: grunskis (~grunskis@ip5f5bf6e2.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[17:07:42] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[17:09:38] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[17:09:39] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[17:14:58] *** Quits: to-hu (~Thunderbi@p57b5a00d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[17:15:01] <sandra> There is "first" and "second" but not "third"?
[17:15:21] <sandra> 0/1/âˆž?
[17:19:40] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:20:18] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:21:44] <mspo> you can make third
[17:26:21] *** Joins: cranium (~cranium@user/cranium)
[17:29:12] *** Joins: jasbrg (~user@pool-173-73-54-73.washdc.fios.verizon.net)
[17:39:28] *** Quits: t3hyoshi (~jdcain@2600:8804:1b96:4900::935) (Quit: WeeChat 3.2)
[17:39:33] *** Joins: op2 (~op@user/op2)
[17:49:25] <Para> `second` is literally just `(first (next x))` :) https://github.com/clojure/clojure/blob/clojure-1.10.1/src/clj/clojure/core.clj#L91
[17:49:38] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[17:50:04] <Para> Both `first` and `next` have collection type specific optimizations, so `second` is still generally optimizable, while arbitrary nth access may not be.
[17:50:36] *** Joins: flynn (~mcbloch@user/flynn)
[17:54:59] *** Quits: xulfer (uid452788@id-452788.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[17:56:59] *** Quits: struchu (~struchu@194.28.48.158) (Quit: WeeChat 3.2)
[17:57:25] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[18:34:34] <sobel> gonna hit myself with this hammer driven design
[18:35:13] <sobel> i think i'm going to name various uh...terrains of this anti-pattern space after the liquor i suspect was involved at the time
[18:35:56] <sobel> PHP is gonna be rum. light rum for the frontend/JS areas, dark rum for the backend-involved sections.
[18:36:48] <sobel> the report/query generator is methanol. (java 1.4, source code is lost)
[18:37:33] *** Joins: op2 (~op@user/op2)
[18:37:42] <leah2> why is there a when-first, but no if-first? (and apparently noone defined it on github ever oO)
[18:38:37] <Para> I've never even noticed before there's `when-first` :)
[18:38:42] <Para> It's probably not very popular.
[18:38:57] <leah2> i guess explicit recursion on lists is avoided usually
[18:39:16] <Para> There's of course also when-let and if-let, those feel more idiomatic.
[18:40:26] <Para> when-first looks curious though. As in, there has to be a specific case where it works really well.
[18:42:10] *** Joins: grunskis (~grunskis@ip5f5bf6e2.dynamic.kabel-deutschland.de)
[18:42:33] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[18:45:40] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Ping timeout: 240 seconds)
[18:50:39] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[18:50:40] *** Quits: ehashman (~ehashman@tirisfal-glades.hashman.ca) (Quit: Lost terminal)
[18:50:41] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[18:51:25] *** Joins: yoonkn (~user@175.197.208.79)
[18:51:33] <sobel> i use let-fn more than if-let or when-let
[18:52:07] <Para> Yeah, that's a good one as well.
[19:02:09] *** DasBrain_ is now known as DasBrain
[19:22:15] *** Joins: zmt01 (~zmt00@user/zmt00)
[19:42:26] *** Joins: to-hu (~Thunderbi@p57b5a00d.dip0.t-ipconnect.de)
[19:55:01] *** Quits: grunskis (~grunskis@ip5f5bf6e2.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[20:07:18] *** Quits: nighcoder (~ciumbi@45.58.87.61) (Remote host closed the connection)
[20:08:59] *** Joins: nighcoder (~ciumbi@45.58.87.61)
[20:17:55] *** Joins: seschwar (~seschwar@user/seschwar)
[20:18:55] <technomancy> lmao he'll add when-first but not pattern matching. sure. why not.
[20:21:12] <EdwardIII> is there a language-design reason pattern matching wasn't added?
[20:21:25] <EdwardIII> or just because it's hard and not a priority?
[20:21:41] <technomancy> it's not that hard
[20:21:43] <Para> Isn't half of the point of pattern matching that it's actually quite easy, at least algorithmically?
[20:21:47] <technomancy> I did it in a weekend or so
[20:22:34] <Para> How would a language level integration look like, even? What's the additional gain?
[20:23:05] <technomancy> well, for starters you wouldn't need nonsense like if-let or when-first
[20:23:17] <technomancy> but that's just the tip of the iceberg
[20:23:33] <technomancy> honestly I don't think I can explain it well... it's like trying to explain destructuring to someone who has never used it
[20:23:38] <technomancy> you have to use it to understand
[20:23:41] <EdwardIII> is structural matching the same as pattern matching? https://clojure.org/about/rationale#_polymorphism_is_a_good_thing
[20:24:09] *** rufo_ is now known as rufo
[20:25:31] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:26:36] *** Quits: rufo (~rufo@ct.rufoa.com) (Quit: bye)
[20:26:55] *** Joins: rufo (~rufo@ct.rufoa.com)
[20:29:27] <technomancy> like you can explain to people how destructuring works but you can't explain why it feels like such a pointless annoyance to have to code without destructuring in certain languages
[20:30:31] <Para> I'm (sort of) familiar with just core.match and Scala's partials, and imho Scala's partials are horrible, so ymmv? :)
[20:30:46] <EdwardIII> Para: you prefer core.match to them?
[20:31:14] <Para> I've never liked Scala as a whole, so I'm highly biased.
[20:31:22] <EdwardIII> i was gonna play around with IRC, maybe i can use core.match a bit there for fun (like parsing the irc commands)
[20:31:25] <mspo> EdwardIII: defmulti is definitely a lot like pattern matching
[20:31:31] <EdwardIII> Para: what's your beef with scala?
[20:32:27] <Para> EdwardIII: Everything. It's such an obviously academic endeavour which doesn't take ergonomics into account at all because it doesn't "have to"; mind you, I had my first bite at Scala around 12 when it was like super elitist "seems like you're just not smart enough to understand it, you don't even have a PhD" trash.
[20:33:05] *** Joins: xulfer (uid452788@id-452788.charlton.irccloud.com)
[20:33:27] <Para> I know they've changed since, mostly because they had to because the general market response to such attitude was not favorable, but that's the impression they left on me and that's what I'll carry with me.
[20:34:01] <EdwardIII> ah ha
[20:34:06] <EdwardIII> how do you find haskell?
[20:34:58] <Para> Never tried it.
[20:35:20] <Para> I'm not big on FP just for the sake of FP, so I haven't surfed the esoteric languages landscape :)
[20:39:09] <technomancy> you learned Scala when you were a preeteen??
[20:41:36] <mspo> technomancy: of course he did, grandpa
[20:44:47] *** Quits: silasfox (~sbv@cgn-89-1-215-99.nc.de) (Ping timeout: 240 seconds)
[20:49:47] <Para> Well I acted like one back then at least :)
[20:53:43] <zephyr> Para i think the place for language integration of pattern matching in clj would probably be function arity overloading, a decision which probably complicated reasoning about performance and touched on interop
[20:55:20] <zephyr> interesting, also looks like the maranget/OCaml algo wasn't around until 2008, i could be wrong but understand that's the premier one
[20:59:46] *** Quits: necronian (~necronian@niflheim.prpl.space) (Ping timeout: 240 seconds)
[21:00:06] *** Joins: necronian (~necronian@niflheim.prpl.space)
[21:05:58] *** Joins: boodle (~boodle@cpe-45-37-117-185.nc.res.rr.com)
[21:08:29] *** Quits: boodle (~boodle@cpe-45-37-117-185.nc.res.rr.com) (Client Quit)
[21:09:32] *** Joins: silasfox (~sbv@cgn-89-1-215-99.nc.de)
[21:28:50] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[21:37:27] *** Quits: silasfox (~sbv@cgn-89-1-215-99.nc.de) (Ping timeout: 240 seconds)
[21:44:58] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[21:45:42] *** Joins: Trieste (T@user/pilgrim)
[21:47:21] *** Joins: andreyorst[erc] (~andreyors@2.92.124.61)
[21:51:48] *** andreyorst[erc] is now known as aorst[erc]
[21:52:14] *** aorst[erc] is now known as andreyorst[erc]
[21:52:18] <jeaye> Scala starts to crumble when you want to do nested immutable updates and you don't just have assoc-in and update-in.
[21:52:58] <jeaye> Instead, you have to manually rebuild each object with a transformer, as you work your way into nesting. Obviously, that's not data-oriented either.
[21:53:19] <jeaye> Or you use lenses, which are magical, in the bad way.
[22:22:33] *** Quits: to-hu (~Thunderbi@p57b5a00d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[22:25:58] *** Quits: amoe (~amoe@visarend.solasistim.net) (Quit: leaving)
[22:37:39] <sobel> are lenses distinct from cursors?
[22:37:58] <sobel> (was just getting up to speed on React cursors recently)
[22:38:18] <sobel> (er, ReFrame)
[22:40:17] *** Joins: struchu (~struchu@staticline-31-183-185-141.toya.net.pl)
[22:44:37] *** Quits: harrigan (~harrigan@176.116.124.142) (Quit: ZNC 1.8.2 - https://znc.in)
[22:47:24] *** Joins: harrigan (~harrigan@176.116.124.142)
[22:52:58] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[22:57:04] *** Quits: struchu (~struchu@staticline-31-183-185-141.toya.net.pl) (Ping timeout: 252 seconds)
[23:28:20] *** Quits: oenone (~oenone@vgai.de) (Quit: No Ping reply in 180 seconds.)
[23:29:39] *** Joins: oenone (~oenone@vgai.de)
[23:31:16] *** Joins: to-hu (~Thunderbi@p57b5a00d.dip0.t-ipconnect.de)
[23:34:53] *** Joins: cmiles74_ (~miles@068-184-030-013.res.spectrum.com)
[23:35:47] *** Quits: oenone (~oenone@vgai.de) (Ping timeout: 250 seconds)
[23:36:13] *** Quits: to-hu (~Thunderbi@p57b5a00d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:37:13] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 248 seconds)
[23:40:07] *** Quits: cmiles74_ (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 250 seconds)
[23:42:08] <technomancy> when I used lenses in racket they seemed great
[23:43:06] *** Joins: amoe (~amoe@visarend.solasistim.net)
