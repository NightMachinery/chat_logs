[00:00:11] <grym> Batzy: looks like there is, if you use a client like you're supposed to
[00:00:29] <Batzy> i have a client but i am not using "with client"
[00:00:36] <Batzy> because this is in a class i have made
[00:00:41] <Batzy> and i had trouble with that
[00:00:42] <grym> Batzy: https://www.python-httpx.org/advanced/  C-s "Connection retries are also available via this interface."
[00:00:50] <Batzy> i dont want a connection retry
[00:01:08] <Batzy> a connection retry is like if i cant reach the server or something, then retry the connection
[00:01:16] *** Quits: shimbles (~shimbles@209.201.38.106) (Quit: Client closed)
[00:01:19] <Batzy> i just want do redo the request in the case of a 429 response
[00:01:30] <grym> ah, ok.  well, easy enough to just write that loop yourself then i think
[00:01:38] <Batzy> so i just have to retype it i guess
[00:01:39] <Batzy> alright
[00:03:08] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 246 seconds)
[00:03:41] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:8164:9bcf:1746:1dc8) (Ping timeout: 264 seconds)
[00:04:25] *** Joins: k162 (~k162@user/k162)
[00:04:30] *** Joins: ttkpy (501@46-97-229-216.sr2.pon.net)
[00:04:35] *** Joins: Guddu (~Guddu@190.84.88.92)
[00:06:05] *** Quits: x28girl (~x28girl@user/x28girl) (Ping timeout: 264 seconds)
[00:10:17] *** Quits: paul424 (~tom@ip-5-172-235-26.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:11:37] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:14:55] *** Joins: semeion (~semeion@user/semeion)
[00:16:37] *** Quits: davor (~davor@user/davor) (Ping timeout: 252 seconds)
[00:17:03] *** Joins: davor (~davor@user/davor)
[00:18:56] *** Quits: computeiro (~Wender@177.25.226.151) (Ping timeout: 252 seconds)
[00:19:03] <grooverman> Batzy: what do you mean by "to retype it"?
[00:19:13] <grooverman> de purpose of programming is not having to retype things
[00:19:24] <Batzy> i have to type httpx.post(args) twice
[00:19:28] <Batzy> the same request
[00:19:38] <grooverman> no
[00:19:39] *** Parts: mawk (~mawk@wireguard/contributor/mawk) (Leaving)
[00:19:44] <Batzy> yes
[00:19:46] <grooverman> you put it inside a while loop
[00:19:52] <grooverman> the while loop will run it again
[00:19:55] <grooverman> if it's necessary
[00:20:01] <Batzy> while r.status_code == 429 you mean?
[00:20:21] <grooverman> yeah, something like that
[00:20:30] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[00:20:35] <Batzy> so r.status_code needs to be something
[00:20:39] <Batzy> r here is an http response
[00:20:40] <Batzy> so..
[00:21:48] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:dd78:d72c:c0c7:957f)
[00:21:54] <grooverman> if r.status_code is not 429: break
[00:22:14] <grooverman> inside a while loop
[00:22:15] <grym> !=
[00:22:19] <grym> not `is not`
[00:22:26] <grym> you can't trust ints to be interned
[00:22:40] <grooverman> yes, sure, don't trust my syntax
[00:22:45] <grooverman> it's just the idea
[00:23:09] *** Joins: CoolerX (~CoolerX@user/coolerx)
[00:23:29] *** Joins: theprophet (~theprophe@85.114.228.184)
[00:24:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[00:24:42] *** Quits: daex (~daex@user/daex) (Quit: /me 's znc kicks the bucket)
[00:24:46] *** Quits: MeddlingHuman (~meddlingh@203-114-140-73.sta.inspire.net.nz) (Quit: MeddlingHuman)
[00:24:49] <f8e4> does py have Keccak256Hash ?
[00:25:31] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:25:31] *** Joins: bninja (~bloodninj@user/bloodninja)
[00:25:58] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[00:25:59] *** Quits: gildarts (16abab341f@user/gildarts) (Remote host closed the connection)
[00:26:07] *** Joins: gildarts (16abab341f@user/gildarts)
[00:26:21] *** Joins: jazzy (~jaziz@2600:380:4628:69b2:1bb:1f5d:3b2d:4d8b)
[00:27:54] *** Quits: sarab (~sarab@183.87.60.236) (Ping timeout: 260 seconds)
[00:28:27] <CoolerX>  /join #golang
[00:28:44] <braxas> I'm getting this error: Argument 1 to "TextIOWrapper" has incompatible type "BufferedIOBase"; expected "IO[bytes]"mypy(error) here https://github.com/iafork/rdflib/blob/iwana-20210912T2356/rdflib/plugins/serializers/turtle.py#L239-L241
[00:28:45] *** Joins: daex (~daex@user/daex)
[00:28:58] <braxas> but I can't tell why
[00:29:16] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Ping timeout: 252 seconds)
[00:29:17] <braxas> I mean, is BufferdIOBase not IO[bytes]?
[00:30:04] *** Joins: besnn (~besnn@user/besnn)
[00:32:41] *** Joins: Vonter (~Vonter@user/vonter)
[00:34:08] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[00:34:22] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[00:34:56] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bc4f-329b-a994-a9e5.res6.spectrum.com)
[00:36:50] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:37:35] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:37:47] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[00:38:06] *** Lord_of_Life_ is now known as Lord_of_Life
[00:38:11] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:38:12] *** Quits: grooverman (~grooverma@189-68-148-72.dsl.telesp.net.br) (Read error: Connection reset by peer)
[00:38:40] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[00:40:44] <SnoopJ> braxas, it doesn't appear so. BufferedIOBase doesn't define mode() or name(), for instance.
[00:41:07] *** Quits: GadgetNerd (GadgetNerd@user/gadgetnerd) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:41:19] *** Quits: Akuli (~Akuli@213.216.209.129) (Quit: Leaving)
[00:41:23] *** Joins: GadgetNerd (GadgetNerd@user/gadgetnerd)
[00:42:17] <braxas> rats
[00:42:25] *** Joins: grooverman (~grooverma@179.99.120.247)
[00:45:08] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 246 seconds)
[00:45:12] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[00:48:08] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[00:48:14] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:49:39] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[00:49:43] *** Joins: sudomannn (~sudomann@73.183.118.9)
[00:50:29] *** Quits: sudomann (~sudomann@2601:543:100:2e3:edaf:5469:ad5f:7acc) (Ping timeout: 264 seconds)
[00:50:42] *** Joins: maroloccio (~marolocci@93-142-92-177.adsl.net.t-com.hr)
[00:52:42] *** Joins: hyperknot (~hyperknot@2a02:3033:406:2835:9187:c77:ec1e:fa1b)
[00:53:27] <braxas> probably I want IO[bytes] instead of BufferedIOBase though
[00:53:30] <braxas> will change to that
[00:54:48] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[00:54:53] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[00:56:25] *** Quits: m4r35n357 (~m4r35n357@host-92-20-120-36.as13285.net) (Quit: Leaving)
[00:58:49] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[01:00:09] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:00:09] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:01:34] *** Joins: newpy (~newpy@2601:280:4381:1390:40ae:cdf8:a607:3c4a)
[01:02:43] *** Gustavo6046_ is now known as Gustavo6046
[01:03:45] <grooverman> Okay, I think that I know now why requests was failing while browsers and curl succeeded.
[01:04:41] <grooverman> requests does all the page redirection stuff on its own
[01:04:51] <grooverman> and I was not expecting this
[01:04:53] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 264 seconds)
[01:04:54] <grooverman> curl does not
[01:05:05] *** Quits: Jefren (~Jefren@70.35.67.10) (Ping timeout: 246 seconds)
[01:05:14] <grooverman> so, I need to manage my cookies in a better way, accounting for requests automatic behavior
[01:05:19] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[01:05:57] <grooverman> so, in short, the answer to my question is "requests is not as low level as curl, and does not let you know about it"
[01:06:06] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:07:23] *** Joins: Jefren (~Jefren@70.35.67.204)
[01:08:42] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[01:09:07] *** Joins: Gerula (~Gerula@user/gerula)
[01:11:53] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:12:19] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
                                                                                                                                                                                            [04:57:14] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[04:57:59] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[04:58:13] *** Quits: Jefren (~Jefren@70.35.67.28) (Ping timeout: 252 seconds)
[04:58:53] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[04:59:06] *** Server sets mode: +Ccnrtf #python-unregistered
[05:00:27] *** Joins: Jefren (~Jefren@70.35.66.242)
[05:02:23] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 246 seconds)
[05:03:17] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 252 seconds)
[05:03:24] *** Joins: Ergo^ (~ergo@91.238.59.144)
[05:05:43] *** Joins: califax- (~califax@user/califx)
[05:06:00] *** Joins: x28girl (~x28girl@user/x28girl)
[05:08:31] *** Joins: lastshell (~lastshell@user/lastshell)
[05:08:47] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:09:21] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:09:22] *** califax- is now known as califax
[05:11:59] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[05:12:11] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[05:12:38] *** Quits: Jefren (~Jefren@70.35.66.242) (Ping timeout: 252 seconds)
[05:13:20] <dba> For some reason this cron doesn't get executed 00 15 * * * /usr/bin/python3 /root/app/ip.py what could be the issue?
[05:13:26] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 265 seconds)
[05:13:40] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 240 seconds)
[05:14:47] *** Joins: Jefren (~Jefren@70.35.67.190)
[05:15:06] <stealth_> dba does it need root access?
[05:15:06] *** Joins: lastshell (~lastshell@user/lastshell)
[05:15:10] *** Joins: sgn (~sgn@user/sgn)
[05:16:00] <dba> stealth_, the file has execution permission
[05:16:18] <stealth_> since its in "/root" folder it will need root access
[05:17:09] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[05:18:18] <stealth_> look at cron log see what it says
[05:18:45] *** Quits: YoungPrince (~DrBrownbe@2600:1700:9aa1:6bc0:2922:8787:9741:d159) (Quit: Leaving)
[05:19:11] *** Joins: ixokani (~swinnenb@user/swinnenb)
[05:22:10] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 240 seconds)
[05:24:01] *** Joins: c10l6 (~c10l@user/c10l)
[05:24:42] *** Joins: KombuchaKip (~kip@192.252.230.5)
[05:24:57] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[05:27:35] *** c10l6 is now known as c10l
[05:27:41] *** Quits: Jefren (~Jefren@70.35.67.190) (Ping timeout: 264 seconds)
[05:29:07] *** Joins: Jefren (~Jefren@70.35.67.44)
[05:29:28] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[05:32:16] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:32:57] *** Joins: nomic2 (~nomic@185.217.117.126)
[05:33:17] *** Joins: sydbarret (~anton@static-186-121-195-172.acelerate.net)
[05:33:36] *** Quits: sydbarret (~anton@static-186-121-195-172.acelerate.net) (Remote host closed the connection)
[05:34:59] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[05:35:11] *** Quits: nomic (~nomic@185.217.117.126) (Ping timeout: 252 seconds)
[05:37:53] *** Quits: Jefren (~Jefren@70.35.67.44) (Ping timeout: 264 seconds)
[05:38:35] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[05:39:29] *** Joins: Jefren (~Jefren@70.35.66.148)
[05:42:06] *** Joins: sydbarret (~anton@static-186-121-195-172.acelerate.net)
[05:42:47] *** Joins: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th)
[05:43:12] *** Parts: sydbarret (~anton@static-186-121-195-172.acelerate.net) ()
[05:43:57] *** Joins: sydbarret (~anton@static-186-121-195-172.acelerate.net)
[05:44:00] *** Joins: Dotz0cat (~Dotz0cat@h209.174.40.162.dynamic.ip.windstream.net)
[05:44:53] *** Quits: sydbarret (~anton@static-186-121-195-172.acelerate.net) (Remote host closed the connection)
[05:45:38] *** Quits: Jefren (~Jefren@70.35.66.148) (Ping timeout: 252 seconds)
[05:46:05] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[05:47:29] *** Quits: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th) (Ping timeout: 264 seconds)
[05:47:49] *** Joins: Jefren (~Jefren@70.35.66.191)
[05:51:01] <donofrio> anyone have a crash course is python?
[05:51:15] <donofrio> oh nevermin, see topic ;)
[05:52:52] *** Joins: c4017_ (~c4017@S0106c0943583f893.vf.shawcable.net)
[05:53:51] <stealth_> donofrio, https://www.pythonsheets.com/index.html
[05:54:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[05:56:28] *** Joins: fikran (~fikran@user/fikran)
[05:56:29] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:59fb:6d2e:e320:e738) (Ping timeout: 264 seconds)
[05:59:23] *** Quits: Jefren (~Jefren@70.35.66.191) (Ping timeout: 252 seconds)
[06:00:04] *** Quits: lethu (~lethu@user/lethu) (Quit: Leaving)
[06:00:11] *** nomic2 is now known as nomic
[06:00:15] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[06:01:09] *** Joins: Jefren (~Jefren@70.35.67.152)
[06:03:00] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[06:04:37] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[06:04:50] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[06:05:48] *** Joins: jetchisel (jetchisel@user/jetchisel)
[06:06:07] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 265 seconds)
[06:13:06] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:696d:855f:fef9:6632) (Quit: Client closed)
[06:14:29] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[06:14:36] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[06:16:16] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:16:31] *** Joins: heco (~redrum@user/redrum88)
[06:16:44] *** Joins: deltab (~deltab@user/deltab)
[06:17:19] *** Quits: ShinyCyril (~ShinyCyri@209.104.70.126) (Quit: ShinyCyril)
[06:18:19] *** GeneralDiscourse is now known as ephemer0l
[06:18:20] *** Quits: Jefren (~Jefren@70.35.67.152) (Ping timeout: 246 seconds)
[06:20:16] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[06:20:29] *** Joins: Jefren (~Jefren@70.35.67.26)
[06:25:14] *** Quits: Jefren (~Jefren@70.35.67.26) (Ping timeout: 252 seconds)
[06:27:19] *** Joins: Jefren (~Jefren@70.35.67.70)
[06:28:10] *** Joins: Plyht (uid433484@id-433484.hampstead.irccloud.com)
[06:31:17] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:31:19] *** Joins: semeion (~semeion@user/semeion)
[06:33:06] *** Joins: newpy (~newpy@206.168.231.90)
[06:33:39] <newpy> I tried to do something like list(map(lambda x,y=f():x.add(y), arr))
[06:33:57] <newpy> but I think it only called f() once (all the y values turn out the same)
[06:35:40] <Repiphany> Yes, default values do that
[06:37:15] <Repiphany> map can take more than one iterable, e.g. map(lambda x, y: x + y, [1,2,3], [10,20,30]) => [11, 22, 33]
[06:37:50] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:37:55] <newpy> ah ok, thanks
[06:42:11] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[06:42:41] *** Quits: Jefren (~Jefren@70.35.67.70) (Ping timeout: 264 seconds)
[06:43:22] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:44:21] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[06:44:40] *** Joins: Jefren (~Jefren@70.35.66.57)
[06:47:02] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[06:48:54] <JimmyRustles> hi anyone here familiar with pygame?
[06:49:01] <JimmyRustles> i'm trying to make it so i can enable and disable full screen mode of my game
[06:49:08] *** Quits: Jefren (~Jefren@70.35.66.57) (Ping timeout: 246 seconds)
[06:49:15] <JimmyRustles> but when i come out of full screen mode, it positions the window at 0,0 so the top bar is hidden and you can't close/move it
[06:49:18] <JimmyRustles> it looks like thishttps://i.imgur.com/oTvp35W.png
[06:49:20] <JimmyRustles> https://i.imgur.com/oTvp35W.png
[06:49:36] <JimmyRustles> i'm disabling full screen by calling pygame.display.set_mode without the pygame.FULLSCREEN flag
[06:49:48] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:50:10] *** Joins: sgn (~sgn@user/sgn)
[06:51:00] *** Joins: Jefren (~Jefren@70.35.67.94)
[06:51:27] *** Quits: iogue (~iogue@gateway/tor-sasl/iogue) (Quit: iogue)
[06:51:30] *** Quits: junktext (~junktext@109.201.152.164) (Ping timeout: 260 seconds)
[06:51:49] *** Joins: frost (~frost@59.71.243.104)
[06:52:13] *** Joins: zebrag (~chris@user/zebrag)
[06:52:13] <aphysically> geez adding a trailing path separator to a path is a pain
[06:55:26] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:56:10] <aphysically> I *think* this catches the edge cases now? https://bpa.st/27UQ
[06:56:39] <aphysically> note you can't just add os.sep, because paths like "/blah.txt" have a parent of "/" so it would be wrong to add os.sep to it
[06:57:06] <aphysically> so I'm adding a dummy character and trimming it, idk if there's a better way
[06:57:12] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[06:58:20] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Quit: Client closed)
[06:59:19] <aphysically> maybe it's better to removesuffix(name)?
[07:01:13] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[07:01:57] *** Quits: thurs806 (~thurs@ip72-217-111-183.ph.ph.cox.net) (Ping timeout: 268 seconds)
[07:03:43] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[07:03:44] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[07:04:17] *** Quits: Jefren (~Jefren@70.35.67.94) (Ping timeout: 252 seconds)
[07:05:26] <aphysically> that's *probably* okay
[07:06:20] *** Joins: Jefren (~Jefren@70.35.66.56)
[07:08:04] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 252 seconds)
[07:08:36] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[07:08:38] <aphysically> something like this i guess https://bpa.st/F7KQ
[07:09:09] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[07:09:13] *** Joins: flokuehn (~flokuehn@i5E86B30B.versanet.de)
[07:10:53] *** Quits: Jefren (~Jefren@70.35.66.56) (Ping timeout: 252 seconds)
[07:11:34] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 260 seconds)
[07:12:42] *** Joins: Jefren (~Jefren@70.35.67.162)
[07:13:05] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 252 seconds)
[07:13:16] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:14:55] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[07:16:42] *** Quits: twobitsprite (~twobitspr@66.115.154.150) (Ping timeout: 260 seconds)
[07:17:05] *** Joins: lethu (~lethu@user/lethu)
[07:17:08] *** Quits: Jefren (~Jefren@70.35.67.162) (Ping timeout: 246 seconds)
[07:17:29] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 264 seconds)
[07:18:31] *** Joins: twobitsprite (~twobitspr@138.199.2.138)
[07:19:02] *** Joins: Jefren (~Jefren@70.35.66.107)
[07:22:22] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[07:22:55] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[07:23:55] *** Joins: grooverman_ (~grooverma@179.99.120.247)
[07:24:02] *** Joins: nickodd (~nickodd@user/nickodd)
[07:24:38] *** Quits: Jefren (~Jefren@70.35.66.107) (Ping timeout: 252 seconds)
[07:24:50] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 246 seconds)
[07:25:44] *** Quits: grooverman (~grooverma@179.99.120.247) (Ping timeout: 252 seconds)
[07:26:22] *** Joins: Jefren (~Jefren@70.35.66.85)
[07:26:52] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[07:29:33] <aphysically> ehhh I think I like the dummy trailing character solution better
[07:31:41] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[07:32:20] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[07:34:44] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[07:35:02] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[07:35:05] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:44] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[07:36:59] *** Joins: alxndr (~alexander@ybti.net)
[07:37:01] <aphysically> all these methods are bad :)
[07:40:43] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:42:53] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[07:43:48] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[07:44:21] *** Leonarbro_ is now known as Leonarbro
[07:46:24] <aphysically> maybe I should join them then split them again to normalize the representation
[07:46:58] *** Quits: Widdershins (widders@ps.mad.cash) (Remote host closed the connection)
[07:47:23] *** Joins: Widdershins (widders@ps.mad.cash)
[07:48:58] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[07:49:24] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[07:52:40] *** Joins: p-i- (~Ohmu@223.206.70.53)
[07:54:05] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 264 seconds)
[07:54:19] <aphysically> huh, after using code all the time like this in bash I've been avoiding it in python https://github.com/python/cpython/blob/09390c837a0bf73e213db2fbde34d756fa77a837/Lib/ntpath.py#L194
[07:54:25] <aphysically> surprised to see it in stdlib
[07:54:36] <aphysically> (using the short circuiting like this)
[07:54:58] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[07:56:11] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[07:56:29] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[07:56:55] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[07:57:10] *** Joins: kib (~kib@user/kib)
[07:59:20] *** Joins: Leonarbro__ (~Leonet@user/leonarbro)
[07:59:29] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[07:59:50] *** Quits: Jefren (~Jefren@70.35.66.85) (Ping timeout: 252 seconds)
[07:59:56] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:01:42] *** Joins: Jefren (~Jefren@70.35.66.39)
[08:01:49] *** Quits: p-i- (~Ohmu@223.206.70.53) (Remote host closed the connection)
[08:02:08] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[08:02:24] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:02:25] *** Joins: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th)
[08:02:36] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[08:03:05] *** Joins: kib (~kib@user/kib)
[08:04:07] *** Quits: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[08:04:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[08:05:51] *** Joins: fikran (~fikran@user/fikran)
[08:05:53] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[08:07:14] <BrenBarn> that kind of thing is fairly common
[08:09:21] <aphysically> what was I even thinking when I wrote this the first way https://bpa.st/6M5A
[08:10:02] <aphysically> it's like I was trying to confuse myself
[08:17:51] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Read error: Connection reset by peer)
[08:17:52] *** Quits: ckdCreations (~ckdCreati@147.55.133.139) (Read error: Connection reset by peer)
[08:18:05] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[08:18:31] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:18:58] *** Quits: LiftLeft (~LiftLeft@172.98.92.58) (Ping timeout: 252 seconds)
[08:22:14] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[08:23:12] <c4017_> How do I index a numpy array with the inverse of an array? For example a = [1, 2, 3, 4, 5]; b = [0, 1]; a[!b] should return [3, 4, 5]
[08:23:29] *** Quits: Jefren (~Jefren@70.35.66.39) (Ping timeout: 264 seconds)
[08:24:02] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[08:24:19] <InPhase> c4017_: a and b are different sizes.  How do you picture that working?
[08:24:22] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[08:24:41] <InPhase> Oh, you mean the indices not in b?
[08:24:56] <c4017_> well, a[b] does return [1, 2]. I want the inverse of that
[08:24:58] <jinsun_> you can just take a set difference of range(len(a)) and b I guess
[08:24:58] <c4017_> yes
[08:25:21] <jinsun_> and use that to index into the array
[08:25:31] *** Joins: Jefren (~Jefren@206.253.157.239)
[08:25:37] <c4017_> yeah, but I feel like therea a built in way
[08:25:53] *** Quits: ska (~ska@user/ska) (Ping timeout: 264 seconds)
[08:26:25] <InPhase> c4017_: np.delete(a, b)
[08:26:40] <InPhase> c4017_: Note it does not modify a, but returns a new array.
[08:26:52] <c4017_> oh ok, that might be good enough
[08:28:28] <c4017_> that works! thanks
[08:28:51] <Repiphany> Could make a mask array, like `idx = np.ones_like(a, dtype = bool); idx[b] = False; a[idx]`
[08:28:59] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 252 seconds)
[08:29:07] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[08:29:23] <Repiphany> np.delete looks better though
[08:30:12] <Repiphany> Although in the doc notes for np.delete, "Often it is preferable to use a boolean mask"
[08:30:20] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[08:30:49] <c4017_> I guess delete might be slower if it needs to clone the entire array first
[08:30:54] <c4017_> not a bigf deal here
[08:31:18] *** Joins: stranac (~stranac@195.29.239.126)
[08:31:36] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[08:31:44] *** Quits: Jefren (~Jefren@206.253.157.239) (Ping timeout: 252 seconds)
[08:33:16] *** Quits: kib (~kib@user/kib) (Ping timeout: 252 seconds)
[08:33:40] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[08:35:41] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:36:56] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:15eb:c6dd:82e5:d340)
[08:37:06] <InPhase> c4017_: It doesn't.  Internally np.delete makes a boolean mask array of the same size, inverts it, and then selects from it.  It's basically doing exactly the same thing, just with a couple extra steps to check for the optional arguments.
[08:37:31] <c4017_> oh great
[08:37:54] <InPhase> Correction, for integer it doesn't invert, it initializes to True and sets the selected indices to False.
[08:38:03] <InPhase> But, basically, an inverted mask being generated.
[08:39:07] *** Joins: ska (~ska@user/ska)
[08:40:12] <InPhase> https://github.com/numpy/numpy/blob/main/numpy/lib/function_base.py#L4579
[08:40:26] *** Joins: Jefren (~Jefren@208.104.190.55)
[08:40:36] <aphysically> oh huh, dictionaries preserve insertion order since 3.7
[08:41:30] <InPhase> Since 3.6 for cpython, 3.7 officially by the spec.
[08:41:36] *** Joins: mossman93 (~quassel@user/mossman93)
[08:43:07] *** Joins: LiftLeft (~LiftLeft@172.83.47.119)
[08:44:39] *** Quits: kcrk (~kcrk@user/kcrk) (Ping timeout: 265 seconds)
[08:46:02] *** Quits: Jefren (~Jefren@208.104.190.55) (Ping timeout: 252 seconds)
[08:47:41] *** Quits: hexology (~hexology@user/hexology) (Ping timeout: 252 seconds)
[08:47:42] *** Joins: proletariat (~proletari@user/proletariat)
[08:47:49] *** Joins: Jefren (~Jefren@70.35.67.191)
[08:48:05] *** Quits: deepy (deepy@user/deepy) (Read error: Connection reset by peer)
[08:48:07] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[08:48:07] *** Quits: jessicant (~jessica@static.172.234.251.148.clients.your-server.de) (Remote host closed the connection)
[08:48:08] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (Remote host closed the connection)
[08:48:18] *** Joins: deepy (deepy@user/deepy)
[08:48:19] *** Joins: hexology (~hexology@user/hexology)
[08:48:27] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[08:48:29] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Read error: Connection reset by peer)
[08:48:42] *** Joins: _0x5fc33 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[08:49:20] *** Quits: gaken (~gaken@user/galen) (Ping timeout: 252 seconds)
[08:49:29] *** Joins: gaken (~gaken@user/galen)
[08:50:02] *** Joins: jessicant (~jessica@static.172.234.251.148.clients.your-server.de)
[08:50:15] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[08:50:57] <aphysically> I've noticed a lot of places where I kind of would have wanted to use switch case in most languages I really should have just used a dictionary
[08:51:06] <aphysically> not all of them, but a few
[08:51:09] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:52:38] *** Quits: zepolen (~zepolen@2a02:587:8608:c7cb:794b:476e:bc8:2183) (Remote host closed the connection)
[08:53:02] *** Joins: zepolen (~zepolen@2a02:587:8608:c7cb:5791:bd2f:fbd1:dc49)
[09:00:41] *** Joins: upsala (~zcb@185.213.155.160)
[09:02:38] *** Joins: ihristov (~ihristov@85.187.46.226)
[09:02:42] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:02:59] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:03:16] *** Joins: khrbt (~znc@user/khrbt)
[09:07:15] *** Joins: raydeeam (uid325131@dgplug/raydeeam)
[09:08:41] <control_> hello, how can i set up hundreds of threads, without defining every thread name t1 = threading.Thread(target=main,name='t1') and t1.start()
[09:08:48] *** control_ is now known as control
[09:10:15] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[09:10:17] *** Quits: martums (~martums@user/martums) (Ping timeout: 264 seconds)
[09:10:28] *** Joins: arknix (~arknix@2806:2f0:51e1:e697:2a53:6941:3e35:a767)
[09:11:26] <KirkMcDonald> control: The name is optional.
[09:12:00] <KirkMcDonald> control: Though, starting so many threads is an odd thing to do.
[09:12:48] <control> i found that running 4 threads on my loop improves speed
[09:13:19] *** Joins: J` (~J@user/j/x-4069704)
[09:15:21] <aphysically> I wonder if structural pattern matching can be O(1)
[09:15:42] <aphysically> (in cpython)
[09:20:30] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[09:23:08] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[09:23:24] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[09:23:34] *** Quits: nomic (~nomic@185.217.117.126) (Quit: Leaving)
[09:23:36] *** Joins: martums (~martums@user/martums)
[09:23:59] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[09:24:36] *** Joins: kcrk (~kcrk@user/kcrk)
[09:24:38] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[09:24:40] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[09:25:13] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:a587:3ac7:6258:967d) (Read error: Connection reset by peer)
[09:25:39] <aphysically> apparently not right now, but I guess there's no reason it couldn't be in the future
[09:25:41] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:27:37] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[09:32:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[09:33:55] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[09:34:26] *** Joins: fdan (~fdan@192.146.154.3)
[09:35:33] *** Joins: spithash (~spithash@user/spithash)
[09:36:14] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:36:40] *** Joins: Guddddu (~Guddu@190.84.88.92)
[09:36:41] *** Quits: Jefren (~Jefren@70.35.67.191) (Ping timeout: 264 seconds)
[09:36:56] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[09:36:58] *** Joins: togusa (~togusa@user/togusa)
[09:37:32] *** Quits: TML (~tml@user/tml) (Ping timeout: 245 seconds)
[09:37:46] *** Joins: Viiru (viiru@debian/viiru)
[09:38:09] *** Joins: Jefren (~Jefren@208.104.190.20)
[09:39:30] <Viiru> I noticed a rather fun interaction between the S3Boto3Storage in django-storages, GzipFile in the stdlib and uwsgi.
[09:39:35] *** Quits: Gudddu (~Guddu@190.84.88.92) (Ping timeout: 246 seconds)
[09:39:45] *** Joins: besnn (~besnn@user/besnn)
[09:40:00] <Viiru> GzipFile.fileno() does return self.fileobj.fileno(), returning the fd of the underlying (wrapped) file.
[09:40:53] <Viiru> If one returns a compressed file opened from S3Boto3Storage through a Django FileResponse that file object ends up in uwsgi, which does PyObject_AsFileDescriptor(filelike) and then calls sendfile on that.
[09:41:11] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[09:41:13] <Viiru> So the compressed data is returned to the caller, not the decompressed data that was expected.
[09:41:51] <Viiru> Which component(s) do the wrong thing? To me both the behavior of uwsgi and GzipFile seem risky, and the combination is what explodes in a somewhat difficult to debug way.
[09:43:17] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[09:43:17] *** Quits: Jefren (~Jefren@208.104.190.20) (Ping timeout: 264 seconds)
[09:44:29] *** Joins: Jefren (~Jefren@206.253.157.220)
[09:46:03] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[09:46:07] *** Quits: bim9262 (~bim9262@cpe-70-113-84-126.austin.res.rr.com) (Changing host)
[09:46:08] *** Joins: bim9262 (~bim9262@user/bim9262)
[09:46:27] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:46:29] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:46:38] <jim> is it possible for (say) a list object, say l, to have a method run on it, like insert(0,"a") -- so the whole thing would look like l.insert(0,"a") -- and return anything other than None? also, does repr() always return a string?
[09:46:58] *** Joins: kosh (~kosh@user/kosh)
[09:47:01] *** Joins: seednode (~seednode@user/seednode)
[09:48:37] <energizer> jim: (1) it is possible to do that, like .pop() does that. i think it's a nice convention to either return a value or mutate but it's certainly not a requirement.
[09:48:57] <energizer> jim: (2) yes
[09:49:53] *** Quits: Jefren (~Jefren@206.253.157.220) (Ping timeout: 264 seconds)
[09:50:18] <energizer> jim: you can demonstrate that to yourself by creating your own classes
[09:51:49] *** Joins: Jefren (~Jefren@70.35.66.243)
[09:52:59] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[09:58:08] *** Quits: Jefren (~Jefren@70.35.66.243) (Ping timeout: 246 seconds)
[09:59:37] *** Joins: bim9262[m] (~bim9262@user/bim9262)
[09:59:44] *** Quits: Guddddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[10:00:25] *** Joins: brabrax (~brabrax@user/brabrax)
[10:00:26] *** Joins: Jefren (~Jefren@70.35.67.212)
[10:00:34] *** Joins: califax- (~califax@user/califx)
[10:01:29] *** Leonarbro__ is now known as Leonarbro
[10:03:09] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[10:03:10] *** califax- is now known as califax
[10:03:42] *** Quits: arknix (~arknix@2806:2f0:51e1:e697:2a53:6941:3e35:a767) (Ping timeout: 256 seconds)
[10:05:07] *** Quits: Jefren (~Jefren@70.35.67.212) (Ping timeout: 252 seconds)
[10:06:46] *** Joins: Jefren (~Jefren@70.35.66.82)
[10:09:41] *** Joins: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de)
[10:09:57] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:15eb:c6dd:82e5:d340) (Quit: WeeChat 2.8)
[10:11:18] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[10:12:23] *** Quits: kcrk (~kcrk@user/kcrk) (Ping timeout: 252 seconds)
[10:13:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[10:14:02] *** Joins: gusto (~Augustus@109.255.100.54)
[10:14:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:15:05] *** Joins: Deknos (~someone@user/menace)
[10:15:15] *** Joins: fikran (~fikran@user/fikran)
[10:15:59] *** Quits: jazzy (~jaziz@2600:380:4628:69b2:1bb:1f5d:3b2d:4d8b) (Ping timeout: 246 seconds)
[10:16:32] *** Joins: mrwick (~mrwick@user/mrwick)
[10:17:44] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[10:18:50] *** Joins: rsx (~dummy@ppp-188-174-145-31.dynamic.mnet-online.de)
[10:19:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[10:19:16] *** Joins: manti7 (~manti7@176.10.104.94)
[10:19:50] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[10:19:51] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[10:20:46] *** Joins: ub (~Thunderbi@77.119.172.39.wireless.dyn.drei.com)
[10:20:59] *** Joins: califax (~califax@user/califx)
[10:21:17] *** Joins: brabrax (~brabrax@user/brabrax)
[10:25:10] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[10:25:19] *** Joins: kcrk (~kcrk@user/kcrk)
[10:25:22] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Client Quit)
[10:25:36] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[10:25:58] *** Joins: y1n (~y1n@77.119.198.226.wireless.dyn.drei.com)
[10:27:06] *** Joins: palasso (~palasso@user/palasso)
[10:27:53] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[10:29:03] *** Quits: ub (~Thunderbi@77.119.172.39.wireless.dyn.drei.com) (Quit: ub)
[10:29:22] *** Joins: ub (~Thunderbi@77.119.172.39.wireless.dyn.drei.com)
[10:32:44] *** Quits: kcrk (~kcrk@user/kcrk) (Ping timeout: 252 seconds)
[10:33:50] *** Quits: ub (~Thunderbi@77.119.172.39.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[10:34:58] *** Joins: togusaa (~togusa@user/togusa)
[10:35:07] *** Joins: pycode (~pycode@2001:b07:5d28:551:373c:5b20:dd44:e09f)
[10:35:33] <pycode> hello, i am going to create some tests for my new package, unittest vs pytest ?
[10:36:18] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 265 seconds)
[10:37:20] *** Quits: Abrax (~Abrax@user/abrax) (Remote host closed the connection)
[10:37:30] *** Joins: szymon (~ugh@staticline-31-183-189-254.toya.net.pl)
[10:37:57] <jinsun> pytest
[10:39:27] <pycode> jinsun, thanks
[10:39:31] <jinsun> you get to write shorter tests without the java naming, and the error/failure reporting is also better
[10:39:38] <pycode> perfect
[10:39:39] <pycode> thanks
[10:40:48] *** Quits: audio (~audio@2603-8081-1800-b44d-cdf4-18f2-ada3-a94f.res6.spectrum.com) (Read error: Connection reset by peer)
[10:41:42] <Yion> Hi. Is it really neccessary that, if I just want to route a IIS 7.5 request over FastCGI for a single url to a python script and return a response, to start a python webserver (like the core implemented one -> wsgiref) to retrieve the req and hand over an apropriate return the IIS can process?
[10:42:59] <purplex> which data structure can i use for two values: e.g. [A, 1], [A, 2], [B, 1] and condition is if [A, 1] was attempted to be added again and it will be considered a duplicate and discarded. So, a set of lists, right?
[10:43:41] *** Quits: szymon (~ugh@staticline-31-183-189-254.toya.net.pl) (Remote host closed the connection)
[10:44:27] <Repiphany> Set of tuples
[10:44:30] <Repiphany> lists aren't hashable
[10:46:14] <purplex> oh right, I see..
[10:48:40] *** Joins: kib (~kib@user/kib)
[10:50:36] *** Quits: togusaa (~togusa@user/togusa) (Quit: Leaving)
[10:51:48] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:53:31] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:54:02] *** Joins: Atque (~Atque@user/atque)
[10:55:24] *** dcaro_away is now known as dcaro
[10:55:45] *** Joins: the-wes (~wes@ryoko.the-wes.com)
[10:55:51] *** Joins: kcrk (~kcrk@user/kcrk)
[10:56:16] <the-wes> is anyone her familiar with uncompyle6?
[10:57:45] *** Quits: Plyht (uid433484@id-433484.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:00:47] *** Quits: kcrk (~kcrk@user/kcrk) (Ping timeout: 252 seconds)
[11:01:54] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[11:02:49] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[11:03:07] *** Joins: shad (~shad@user/shad)
[11:03:10] *** Joins: metaace (~metaace@user/metaace)
[11:03:11] <supakeen> sure
[11:03:53] *** Joins: chele (~chele@user/chele)
[11:04:08] *** neolem is now known as neolem[m]
[11:04:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[11:04:58] *** Joins: neolem (~neolem@gueuti.fr)
[11:06:18] *** Quits: proletariat (~proletari@user/proletariat) (Quit: Leaving)
[11:06:32] *** Joins: kcrk (~kcrk@user/kcrk)
[11:08:13] <the-wes> I'm getting this error: ImportError: Unknown magic number 13413
[11:08:25] <the-wes> I'm guessing that means it can't tell which version of python was used to compile the pyc file
[11:08:44] <the-wes> which, as I'm reading more about how this works, I'm suspecting is intentional on the part of the author of the code
[11:09:26] <the-wes> is there any kind of monitoring tool similar to strace meant for python apps?
[11:09:34] <the-wes> let me guess... "pytrace"?
[11:10:23] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:11:59] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 246 seconds)
[11:12:01] <Affliction> pyc files aren't interchangable between python versions
[11:12:22] <the-wes> I suppose this app comes with its own interpreter
[11:12:25] <Affliction> Though, it could be intentinoally obfuscated, if it's embedded in an app
[11:12:29] <Affliction> yeah, that would make sense
[11:13:03] <Affliction> They might also scramble the opcode order too
[11:13:08] <the-wes> actually, as I'm searching more and more on this, I'm finding several instances of people banging their heads against the same problem I'm working on
[11:13:13] <Affliction> Not really my area, might require real RE skills
[11:13:14] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[11:13:16] <the-wes> which is both encouraging and discouraging
[11:13:24] <the-wes> what is RE?
[11:13:27] <Affliction> reverse engineering
[11:13:31] <jmcantrell> I'm noticing that `time.sleep(0)` seems to take longer than `time.sleep(0.00001)`. Is there a reason for this? Does it default to 1 if the argument is falsy?
[11:13:48] <the-wes> ah. know any consulting firms that offer this?
[11:14:31] <Affliction> nope, but they might be out there
[11:14:37] *** Joins: amllado (~amllado@45.156.42.81)
[11:14:46] <purplex> If I want to search inside set of tuples, will I need to use the entire tuple of values? or, can i use one tuple value?
[11:15:19] *** Quits: amllado (~amllado@45.156.42.81) (Quit: Leaving)
[11:15:27] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[11:15:54] <purplex> e.g. set has (A, 1), (A, 2), (B, 1) can I search 'A' and return (A, 1), (A, 2)?
[11:16:08] <Affliction> jmcantrell: time.sleep(0) might just yield to the OS?
[11:16:38] <jmcantrell> Affliction: what do you mean?
[11:16:42] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:16:51] <jinsun> purplex: you can but you will need a double for loop, which will be slower than just looking up the entire tuple in the set
[11:16:53] *** Joins: brelod (~me@90.244.150.142)
[11:16:53] *** Joins: amllado (~amllado@45.156.42.81)
[11:17:11] <hexnewbie> purplex: This is not a search provided out of the box by a builtin function, so you will have to code it yourself, and you can code it however you like, and return whatever you want to return.
[11:17:35] <Repiphany> purplex: Maybe what you actually want is a dict of sets
[11:17:43] <purplex> but will it be faster or, linear search?
[11:18:27] <purplex> a dict of sets, i'll try that. seems right
[11:18:29] <Affliction> jmcantrell: I can't find it documented anywhere, but, 0 might be a hint to release the current timeslice, and give another program a chance to run
[11:18:54] <hexnewbie> purplex: d = {'A': {1,2}, ...}; then d['A'] will be faster
[11:18:57] <purplex> so 'key' can be 'A' and value is entire sets with (A, 1), (A, 2)
[11:19:07] <jmcantrell> Affliction: oh, ok. thanks
[11:19:44] <Affliction> jmcantrell: at least that's how C's sleep(0) reacts
[11:19:48] <purplex> yea this would work, thanks
[11:20:28] <jmcantrell> Affliction: that's good to know
[11:21:11] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:21:40] *** Joins: thiras (~thiras@user/thiras)
[11:23:14] *** Joins: plastico (~plastico@neomutt/plastico)
[11:25:51] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[11:26:34] *** Quits: kcrk (~kcrk@user/kcrk) (Ping timeout: 265 seconds)
[11:27:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[11:27:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:28:33] *** Quits: x28girl (~x28girl@user/x28girl) (Read error: Connection reset by peer)
[11:29:45] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[11:29:46] *** Joins: x28girl (~x28girl@user/x28girl)
[11:30:35] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[11:30:57] *** Joins: rendar (~rendar@user/rendar)
[11:33:05] *** Joins: sarab (~sarab@183.87.60.236)
[11:33:11] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:33:21] *** Joins: grooverman (~grooverma@179.99.120.247)
[11:33:32] *** Quits: sarab (~sarab@183.87.60.236) (Remote host closed the connection)
[11:33:40] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Ping timeout: 252 seconds)
[11:35:29] *** Quits: grooverman_ (~grooverma@179.99.120.247) (Ping timeout: 264 seconds)
[11:35:37] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:10] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[11:36:23] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:38:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:38:53] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2.1)
[11:39:13] *** Joins: m4r35n357 (~m4r35n357@host-92-20-120-36.as13285.net)
[11:40:13] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:48:52] *** Joins: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk)
[11:49:16] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[11:49:24] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[11:49:29] *** Joins: minip (~minip@user/minip)
[11:50:15] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[11:50:58] <pseudonymous> I have a local wheel built (using poetry) and I'd like to use that in a another project I manage with Poetry as well. However, I cannot seem to accomplish that outside of hard-coding the path to the wheel in question in my pyproject.toml.. I don't want that as I cannot share that with other devs (different file paths). Ideas ?
[11:52:43] *** Joins: gggp (~textual@221.219.68.62)
[11:53:31] <ExeciN> I'm having an issue with setuptools_scm where I have tagged my latest commit with "1.2.3" for example but setuptools_scm returns "1.2.4" as the version
[11:54:40] <ExeciN> Did I misconfigure something or is this behavior expected?
[11:56:51] <Samian> Is there any way to loop through all combinations without using nested for loops?  Like let's say I have lists like ["red","blue","green"] [1,2,3]. ["pencil", "paintbrush", "fill"] and I want to run through ever combination of selecting.
[11:57:01] <Samian> argh my vocabulary sucks. I can't even ask my question well
[11:58:20] <ttkap> itertools.combination
[11:58:20] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[11:58:31] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[11:58:45] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[11:58:54] <Samian> I love itertools
[11:58:59] <Samian> thanks ttkap !
[11:59:00] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[11:59:49] <ttkap> or maybe product instead of combination
[11:59:54] <ttkap> not sure, try it
[12:00:01] <hexnewbie> That sounds like product() to me to
[12:00:53] *** Joins: kib_ (~kib@user/kib)
[12:02:34] <Samian> yup it's product
[12:02:49] *** Quits: kib (~kib@user/kib) (Ping timeout: 252 seconds)
[12:03:19] <Nei> hi, do you have some opinion if/when I should use "from .b import x" vs "from a.b import x"?
[12:06:28] *** Joins: WarpedAI (~Warped@user/warped)
[12:06:39] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:06:39] *** Joins: dhellmann_ (~dhellmann@097-081-099-073.res.spectrum.com)
[12:06:45] *** Joins: chele_ (~chele@user/chele)
[12:07:00] *** Joins: mbrndtgn3 (~mbrndtgn@undecidable.de)
[12:07:05] *** Joins: trashbird7 (~trashbird@user/trashbird)
[12:07:07] *** Joins: baltazaar (~baltazar@178-164-190-59.pool.digikabel.hu)
[12:07:10] *** Joins: simone3 (~nya@user/sx)
[12:07:12] *** Joins: newdimension7 (~newdimnes@user/newdimension)
[12:07:15] *** Quits: summonner (~summonner@188.24.90.174) (Remote host closed the connection)
[12:07:15] *** Quits: Warped (~Warped@user/warped) (Read error: Connection reset by peer)
[12:07:15] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Read error: Connection reset by peer)
[12:07:15] *** Quits: cheater (~Username@user/cheater) (Read error: Connection reset by peer)
[12:07:15] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: kouhai (~kouhai@user/kouhai) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: kiska (~kiska@user/kiska) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: argoneus (~argoneus@argoneus.com) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: neolem (~neolem@gueuti.fr) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: _0az (~az0@user/az0) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: lifefir3 (~lifefir3@152.37.120.101) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: xakan (~xakan@ns354170.ip-91-121-101.eu) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: knipster5 (~knipster@user/knipster) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: abraham (~abraham@143.244.185.86) (Quit: Ping timeout (120 seconds))
[12:07:15] *** trashbird7 is now known as trashbird
[12:07:16] *** newdimension7 is now known as newdimension
[12:07:17] *** Joins: kouhai9 (~kouhai@user/kouhai)
[12:07:18] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[12:07:18] *** Joins: argoneus7 (~argoneus@argoneus.com)
[12:07:20] *** Joins: neolem0 (~neolem@gueuti.fr)
[12:07:22] *** Joins: _0az3 (~az0@user/az0)
[12:07:25] *** Joins: lifefir3 (~lifefir3@152.37.120.101)
[12:07:27] *** Joins: xakan (~xakan@ns354170.ip-91-121-101.eu)
[12:07:32] *** Joins: summonner (~summonner@188.24.90.174)
[12:07:33] *** Joins: knipster50 (~knipster@user/knipster)
[12:07:41] *** Joins: califax (~califax@user/califx)
[12:07:44] *** Joins: abraham (~abraham@143.244.185.86)
[12:07:45] *** Quits: baltazar (~baltazar@178-164-190-59.pool.digikabel.hu) (Quit: Reconnecting)
[12:07:46] *** Quits: simone (~nya@user/sx) (Read error: Connection reset by peer)
[12:07:46] *** simone3 is now known as simone
[12:07:52] *** baltazaar is now known as baltazar
[12:07:55] *** Quits: xD- (~|_|@194.5.249.141) (Quit: bye)
[12:07:56] *** Joins: kiska (james@user/kiska)
[12:08:02] *** Quits: chele (~chele@user/chele) (Read error: Connection reset by peer)
[12:08:02] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[12:08:03] *** Quits: sco1 (~sco1@charon.whatbox.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[12:08:03] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[12:08:06] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[12:08:06] *** Quits: shan (shan@cyblog/maintainer/shan) (Quit: https://shantaram.xyz)
[12:08:15] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[12:08:19] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[12:08:21] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: No Ping reply in 180 seconds.)
[12:08:22] *** Joins: shantaram (shan@cyblog/maintainer/shan)
[12:08:23] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[12:09:31] *** Joins: mossman93 (~quassel@user/mossman93)
[12:09:35] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Ping timeout: 265 seconds)
[12:09:35] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Ping timeout: 265 seconds)
[12:09:35] *** mbrndtgn3 is now known as mbrndtgn
[12:10:00] *** Joins: cheater (~Username@user/cheater)
[12:11:30] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:12:46] *** Quits: kib_ (~kib@user/kib) (Read error: Connection reset by peer)
[12:12:47] *** Joins: maum (~Guest15@1.245.147.30)
[12:12:50] <maum> hello
[12:12:54] *** Joins: kcrk (~kcrk@user/kcrk)
[12:13:10] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[12:13:31] <Helle> oooof, I am trying to get my mood up to mess with complex BeautifulSoup code
[12:13:35] <Helle> it never ends well :P
[12:16:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:16:12] *** Parts: the-wes (~wes@ryoko.the-wes.com) ()
[12:17:50] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:18:01] *** Joins: Kharon (uid511277@user/cypris)
[12:18:13] *** Joins: kib_ (~kib@user/kib)
[12:22:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[12:23:02] *** Quits: sudomann (~sudomann@2601:543:100:2e3:d04a:34f:b82d:259) (Ping timeout: 246 seconds)
[12:24:39] *** Joins: fikran (~fikran@user/fikran)
[12:24:49] *** Quits: baltazar (~baltazar@178-164-190-59.pool.digikabel.hu) (Ping timeout: 252 seconds)
[12:26:45] *** Joins: baltazar (~baltazar@84-236-71-13.pool.digikabel.hu)
[12:26:49] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:27:09] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[12:27:23] <lericson> it would be cool if there was a getitems(mapping, keys) = [mapping[key] for key in keys] built-in
[12:28:02] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[12:29:07] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[12:29:44] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:29:47] <Repiphany> lericson: operator.itemgetter
[12:29:53] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Ping timeout: 252 seconds)
[12:30:04] *** Joins: somlis (~somlis@user/somlis)
[12:30:38] <lericson> i guess
[12:30:38] *** Quits: kib_ (~kib@user/kib) (Read error: Connection reset by peer)
[12:30:51] *** Quits: kcrk (~kcrk@user/kcrk) (Ping timeout: 265 seconds)
[12:31:48] *** Quits: Madda (~Madda@83.253.6.51.dyn.plus.net) (Remote host closed the connection)
[12:31:58] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[12:33:07] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[12:33:55] *** Joins: Warped (~Warped@user/warped)
[12:35:49] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 252 seconds)
[12:36:20] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[12:36:34] *** Joins: kib_ (~kib@user/kib)
[12:38:15] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[12:38:32] <arash> Hello, where can i find a tutorial for mysql.connector library? I need code examples
[12:38:55] *** Joins: Polyinsecure (~Polyinsec@180.244.135.13)
[12:41:06] <jbe> something like https://dev.mysql.com/doc/connector-python/en/connector-python-examples.html ?
[12:41:46] *** Joins: Andalu30 (~juan.arte@85.137.21.37.dyn.user.ono.com)
[12:42:25] <arash> jbe, i already found this, but i got an error says "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '%s order"
[12:42:41] <arash> i can't understand the problem. everything seems ok
[12:43:06] *** Joins: frostschutz (~frostschu@2a01:c22:cde6:4400:2d21:9148:1c1c:1f2)
[12:43:49] <arash> here is my query : query = "SELECT * FROM table where col = %s order by id DESC limit 1" and then i do mycursor.execute(query, (colvalue,))
[12:43:57] <arash> i don't understand what is wrong
[12:44:31] *** neolem0 is now known as neolem
[12:44:49] <supakeen> What error do you get if any?
[12:45:12] <arash> mysql.connector.errors.ProgrammingError: 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '%s
[12:45:27] <arash> its working fine when i replace %s with a string
[12:46:12] *** Joins: Abrax (~Abrax@user/abrax)
[12:46:42] <supakeen> Is that your actual query.
[12:48:22] *** Quits: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) (Remote host closed the connection)
[12:48:51] <maum> Is there a jupyter notebook chat room?
[12:52:10] *** Quits: maum (~Guest15@1.245.147.30) (Quit: Client closed)
[12:58:52] *** Joins: jinsun (~quassel@user/jinsun)
[13:02:52] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[13:03:14] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[13:05:17] <aphysically> I'm surprised there's nothing in stdlib to split a path into base and tail (unless I'm missing something)
[13:05:31] <aphysically> (for syntax highlighting)
[13:05:51] <supakeen> https://docs.python.org/3/library/os.path.html#os.path.split ?
[13:05:55] <aphysically> nope!
[13:06:01] <aphysically> it does stripping of the parent
[13:06:08] <aphysically> so it doesn't work without hacks
[13:06:18] <aphysically> and you can't do parent + os.sep either, because that's not correct
[13:06:31] <aphysically> for example "/blah.txt" has a parent of / and a child of "blah.txt", so you can't combine them with os.sep
[13:06:56] <supakeen> Aha.
[13:07:01] <aphysically> I looked at the code and there's not really something in the internals to do it either
[13:07:09] <aphysically> right now I'm doing something hacky
[13:07:18] <aphysically> every solution I came up with was bad in some way really
[13:09:29] <aphysically> right now I'm doing this https://bpa.st/JXZA (append a fake _ file and strip the _ character at the end)
[13:09:53] <aphysically> another idea I had was str() the path and do a removesuffix of just the name() component
[13:10:07] <aphysically> but all of these seem quite silly for just trying to access os or pathlib's knowledge of the path semantics :P
[13:10:40] <supakeen> Well paths aren't that much setup for this sort of thing; I think your second idea is saner.
[13:11:54] <aphysically> yeah they're really not, I peeked at the code and there's not even something in the internals that would make it easy
[13:12:13] <aphysically> in the internals (of os.path and pathlib)
[13:13:06] *** Quits: Polyinsecure (~Polyinsec@180.244.135.13) (Quit: Leaving)
[13:13:53] *** Quits: y1n (~y1n@77.119.198.226.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[13:14:46] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[13:15:02] <aphysically> I consider both of the solutions bad, and I keep going back and forth on which one I think is better
[13:15:04] <spaceone> if I implement __eq__ and __lt__ is __gt__ automatically completed?
[13:16:27] *** Joins: Payam (~Payam@138.106.57.132)
[13:16:29] *** Parts: Payam (~Payam@138.106.57.132) ()
[13:16:42] *** Joins: Payam (~Payam@138.106.57.132)
[13:18:29] <Payam> Hi, We have a lot of unit tests that I try to make parallel for faster development. I assume I need to use pytest. But what exactly should google to get more information on how to do it?
[13:23:46] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:25:11] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[13:27:47] *** Joins: y1n (~y1n@178.115.78.105.wireless.dyn.drei.com)
[13:29:01] *** Quits: kib_ (~kib@user/kib) (Quit: WeeChat 3.2.1)
[13:29:07] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:29:25] <varaindemian> how can I transform this in valid python syntax?
[13:29:41] *** LordKalma_ is now known as LordKalma
[13:29:44] <varaindemian> https://www.irccloud.com/pastebin/HvsQcp8E/
[13:30:55] <Repiphany> Transform what
[13:31:20] <Repiphany> 0x48 is a valid int without the trailing h
[13:32:35] *** Joins: ksynwa (~ksynwa@5.45.111.57)
[13:32:49] <varaindemian> I am referring to the format
[13:32:52] <varaindemian> of this list
[13:32:55] <ksynwa> What is the simplest way to parse a string like '2021-08-13T11:01:01.7088851Z' into a datetime object?
[13:32:55] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:33:02] <varaindemian> I am not sure why is not recognized as a list
[13:33:10] <lericson> ksynwa: surely you have googled this
[13:33:21] <Repiphany> Because the trailing h makes those invalid
[13:33:30] <ksynwa> I found strptime in datetime
[13:33:47] <ksynwa> But it requires me to specify the format that timestamp is in first
[13:33:58] <ksynwa> But this seems like more standard format
[13:34:07] <ksynwa> Perhaps following some kind of standard
[13:34:12] <ksynwa> Like ISO or something
[13:34:32] <lericson> https://en.wikipedia.org/wiki/ISO_8601
[13:34:40] <lericson> found by the cunning google of "time format iso"
[13:34:47] <mrwick> https://docs.python.org/3/library/datetime.html#datetime.datetime.fromisoformat
[13:34:59] <mrwick> also found by ctrl-f on my browser
[13:35:04] *** Quits: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb) (Remote host closed the connection)
[13:35:19] <lericson> you're gonna have to improve your googling skills ksynwa ;)
[13:35:29] <ksynwa> I actually did not know it was ISO
[13:35:32] <ksynwa> I just guessed
[13:36:40] *** Joins: computeiro (~Wender@177.25.230.16)
[13:36:55] *** Joins: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net)
[13:40:52] <varaindemian> Repiphany: right! thanks
[13:44:33] *** Quits: Andalu30 (~juan.arte@85.137.21.37.dyn.user.ono.com) (Quit: Konversation terminated!)
[13:44:52] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Quit: bye)
[13:45:07] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[13:48:20] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[13:49:14] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[13:50:42] <ksynwa> Seems like I have to use a library called dateutil
[13:50:52] <ksynwa> fromisoformat isn't working out of the box
[13:50:58] <ksynwa> Thanks for the help
[13:51:41] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[13:52:18] <jinsun> ya fromisoformat is opposite of datettime.isoformat so it doesnn't work for Z https://bugs.python.org/issue35829
[13:52:38] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[13:53:30] <jinsun> there was a discussion about this yesterday also
[13:53:41] *** Joins: legola (~legola@46.235.100.27)
[13:54:08] <jinsun> if you want to stick to stdlib there is hack mentioned in that link, just do .replace("Z", "+00:00")
[13:54:36] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[13:54:57] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[13:55:05] *** Joins: rburton (rburton@user/rburton)
[13:55:42] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[13:56:30] <rburton> Struggling a bit with asyncio. I want to read lines from one process I start (easy with async for line in process), but i'll be spawning other processes based on the output. how can i iterate the lines *and* take action when the other processes quit?
[13:58:36] *** PJBoy is now known as Guest3910
[13:58:36] *** Quits: Guest3910 (~PJBoy@user/pjboy) (Killed (platinum.libera.chat (Nickname regained by services)))
[13:58:46] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:58:47] *** Joins: arinov (~arinov@77.67.147.245)
[14:00:23] *** Quits: dhch (~dhch@185.213.154.168) (Read error: Connection reset by peer)
[14:01:16] <ksynwa> jinsun: Thanks a lot. That is immensely helpful.
[14:03:28] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[14:06:45] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:59fb:6d2e:e320:e738)
[14:06:45] *** Joins: togusa (~togusa@user/togusa)
[14:06:54] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[14:06:59] *** Quits: c4017_ (~c4017@S0106c0943583f893.vf.shawcable.net) (Ping timeout: 246 seconds)
[14:08:32] *** Quits: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:11:09] *** dcaro is now known as dcaro_lunch
[14:11:34] *** Joins: kcrk (~kcrk@user/kcrk)
[14:12:57] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:15:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:16:13] *** Joins: reset (~reset@user/reset)
[14:16:35] *** Quits: kcrk (~kcrk@user/kcrk) (Ping timeout: 252 seconds)
[14:19:53] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[14:20:06] <ExeciN> I'm having an issue with setuptools_scm where I have tagged my latest commit with "1.2.3" for example but setuptools_scm returns "1.2.4" as the version. Did I misconfigure something or is this behavior expected?
[14:20:08] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:20:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[14:23:01] <jinsun> if you have any uncommitted changes in the repository the version gets bumped I think, but it should be 1.2.4.dev0+something in that case
[14:23:37] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[14:24:34] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:24:51] *** Joins: hydrofire (~kolesnyk@195.66.137.40)
[14:25:00] *** Joins: mickey (~user@user/mickey)
[14:25:43] *** Joins: dhch (~dhch@185.213.154.168)
[14:28:41] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[14:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:32:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[14:33:28] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:2ae4:faa5:3a3d:e2fc)
[14:34:02] *** Joins: fikran (~fikran@user/fikran)
[14:35:35] <jim> I've been going through the python tutorial, maybe cover some holes... and it equates a file with definitions (and such) with a module... could you comment on that?
[14:36:19] <jim> I mean this file = module thing
[14:36:35] <Yhg1s> jim: what kind of comment would you like?
[14:36:42] <Yhg1s> jim: .py files are modules.
[14:37:23] <jim> the reverse is true also? modules are files?
[14:37:39] <Yhg1s> jim: not as such, no.
[14:37:45] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:38:04] <jim> ok, can you say more about the difference?
[14:38:13] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:39:04] <Yhg1s> jim: I don't know what you're looking for. Modules are what you import. You can import many things. .py files are one of them. You can have modules that have no file.
[14:39:45] <jim> would that be done at the python prompt/
[14:39:46] <jim> ?
[14:40:20] *** Joins: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net)
[14:40:49] <Yhg1s> jim: I... don't understand the question.
[14:40:52] *** Joins: kib (~kib@user/kib)
[14:41:36] <jim> so, you import modules, and there is more than one possible source (e.g., py files) to get them from?
[14:41:50] <Yhg1s> jim: yes.
[14:42:00] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Ping timeout: 276 seconds)
[14:42:28] <shangxiao> jim: I think this will clarify for you: https://docs.python.org/3/tutorial/modules.html
[14:42:39] <shangxiao> "A module is a file containing Python definitions and statements."
[14:42:54] <jim> that's exactly what I'm already reading
[14:42:54] <Yhg1s> Except when it's not.
[14:43:04] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[14:43:13] <Yhg1s> A module is a thing you import. That's all it is. A module can come from a .py file, or a .so file, or it can be builtin, or it can be created by an importer.
[14:43:28] <shangxiao> Yhg1s: for jim's purposes it is
[14:43:41] <shangxiao> I don't think we need to get super technical for newcomers :)
[14:43:53] *** Quits: pycode (~pycode@2001:b07:5d28:551:373c:5b20:dd44:e09f) (Ping timeout: 264 seconds)
[14:43:56] *** Joins: pro (~pro@user/pro)
[14:44:13] <Yhg1s> It's not being super technical. The standard library is full of modules that aren't .py files.
[14:44:21] <Yhg1s> and even quite a few that don't have a file at all.
[14:44:28] <jim> so, can we generalize this way: "a module is a (something) that contains python definitions and statements"
[14:44:48] <Yhg1s> jim: "a module is a thing you import".
[14:44:50] <shangxiao> ok well knock yourself, i'm not interested in arguing with you about stuff i already know
[14:44:59] <pro> I'm getting OSError: [Errno 98] Address already in use when opening more than rougly 13k tcp connections, whath's going on?
[14:45:24] <jim> handle that one... I'll ask more in a bit
[14:45:35] *** Quits: togusa (~togusa@user/togusa) (Quit: Leaving)
[14:46:26] *** Joins: kcrk (~kcrk@user/kcrk)
[14:46:28] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[14:46:47] <Yhg1s> pro: it's probably your OS running out of available ports.
[14:46:57] <Yhg1s> (it's not a Python limitation, in any case.)
[14:47:03] *** Quits: zepolen (~zepolen@2a02:587:8608:c7cb:5791:bd2f:fbd1:dc49) (Remote host closed the connection)
[14:47:09] <jim> shangxiao, I think our interaction started with assumptions that aren't true... maybe you and I ought to close that interaction, just to make the channel cleaner
[14:47:26] <pro> Yhg1s: thanks!
[14:47:28] *** Joins: zepolen (~zepolen@2a02:587:8608:c7cb:dd63:ce8:3598:64c7)
[14:48:05] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:48:13] <summonner> pro, structurally, you should ask the system to provide you with the next available address to use, instead of just using a loop and going through addresses incrementally
[14:49:00] *** Joins: mh3f_ (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[14:49:04] <summonner> jim don't get so hung up on the specifics, just learn how to write programs in python and it will eventually become clear
[14:49:14] <shangxiao> ^
[14:49:53] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 264 seconds)
[14:50:17] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[14:50:40] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[14:50:41] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 252 seconds)
[14:51:26] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:52:05] *** Joins: lethu (~lethu@user/lethu)
[14:52:48] <jim> summonner, shangxiao, one of the misconceptions is "newcomer", I'm not, been using python for a number of years. I've been meaning to go through the tutorial again after awhile of using python, which is what I'm doing now. while I'm not quite ready for the C level (or below) stuff, I'm trying to resolve some statements in the tutorial so I understand them better.
[14:52:53] *** Quits: gggp (~textual@221.219.68.62) (Ping timeout: 252 seconds)
[14:54:53] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[14:54:56] *** Quits: ihristov (~ihristov@85.187.46.226) (Ping timeout: 246 seconds)
[14:55:26] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Quit: you can't fire me!)
[14:55:27] *** Joins: gggp (~textual@125.33.92.174)
[14:55:48] *** Joins: frojnd (~frojnd@user/frojnd)
[14:55:50] <frojnd> Hi there.
[14:55:55] <summonner> jim in that case, try to see them from the writer's perspective, then perform a merge-conflict back into your understanding ;)  a little git joke there
[14:55:55] <jim> hi
[14:56:21] <jim> that's exactly what I'm trying to do
[14:56:59] <jim> that said, it may or may not be a conflict
[14:57:04] <frojnd> I'm inside virtualenv and I've installed python3 and pip3. When I run a cloned repo I get: `ModuleNotFoundError: No module named 'Crypto'` ok... I installed pycryptodome and I go into python3.8 shell... I write `from.Crypto.Cipher import AES` and I get no errors...
[14:57:07] <frojnd> I'm confused
[14:57:18] <frojnd> But when I run python3.8 main.py I get above error
[14:57:24] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[14:57:52] <frojnd> I'm on Ubuntu 20.04 server if that matters
[14:57:55] <jim> frojnd, where exactly is the venv?
[14:57:59] <summonner> frojnd, type   which python
[14:58:11] <summonner> and it should be inside the venv. if not, you need to activate it
[14:58:23] <Yhg1s> Or better yet, run the virtualenv's python directly.
[14:58:23] <jim> frojnd, also, when you write which python or which pip, what do you get?
[14:58:32] <frojnd> summonner: /home/pri30923/assistants-server/bin/python
[14:58:32] <Widdershins> yeah it sounds like you didn't activate the virtualenv
[14:58:51] <frojnd> I activated it inside repo
[14:59:00] <Widdershins> or didn't install the dependencies that provide the Crypto module
[14:59:04] *** purplex is now known as purplex_hop_test
[14:59:06] <Yhg1s> frojnd: so what does '/home/pri30923/assistants-server/bin/python -c "import Crypto"' output?
[14:59:24] *** Joins: Payam (~Payam@138.106.57.132)
[14:59:38] <jim> so, what does it say when you: echo "== $(which python3) =="
[14:59:45] <frojnd> Yhg1s: new line
[14:59:47] <frojnd> No errors
[14:59:51] <jim> (from a shell script)
[15:00:00] <jim> err from the shell prompt
[15:00:12] <Yhg1s> frojnd: and if you run '/home/pri30923/assistants-server/bin/python main.py'?
[15:00:19] <frojnd> Yhg1s: let me run that..
[15:00:37] <frojnd> Argh permission denied
[15:01:13] <jim> ok, try just: /home/pri30923/assistants-server/bin/python
[15:01:41] *** Quits: kcrk (~kcrk@user/kcrk) (Ping timeout: 252 seconds)
[15:01:58] <jim> (it's good to know what permission is being denied)
[15:02:25] <frojnd> jim: it throws me into python3 shell: https://termbin.com/9dyzw
[15:02:36] <Yhg1s> jim: they already ran /home/pri30923/assistants-server/bin/python -c "import Crypto"
[15:02:43] *** Quits: summonner (~summonner@188.24.90.174) (Read error: Connection reset by peer)
[15:02:54] <jim> ok, so the python3 is not the cause of the permission denied... maybe something in main.py?
[15:03:01] <Yhg1s> frojnd: so do you know where the permission error comes from? Can you show the full output?
[15:03:16] <frojnd> jim: permissions: https://termbin.com/ipd8o
[15:03:27] *** Joins: sudomann (~sudomann@2601:543:100:2e3:e802:14fa:c0ab:40e7)
[15:03:33] <frojnd> Yhg1s: last 4 lines I can show full output
[15:04:08] <Yhg1s> frojnd: okay, so your original problem is solved?
[15:04:15] *** dcaro_lunch is now known as dcaro
[15:04:19] <Yhg1s> this particular error is about trying to bind to sockets a normal user doesn't have permission to bind to.
[15:04:28] <frojnd> Yhg1s: https://termbin.com/4py6
[15:04:34] *** Joins: sudomannn (~sudomann@2601:543:100:2e3:428:ad1b:5280:1916)
[15:04:39] *** purplex_hop_test is now known as purplex
[15:04:46] <frojnd> But this is another issue - system issue afai,
[15:04:48] <frojnd> afaik
[15:04:48] *** Quits: Dan39 (~dan@user/dan39) (Ping timeout: 268 seconds)
[15:05:17] <Yhg1s> no, the issue is that you're telling flask to bind to a port you, as a user, aren't allowed to bind to. Like port 80 or 443.
[15:05:43] <frojnd> So I have to define another port
[15:05:47] <frojnd> Just for the testing purposes
[15:06:24] <jim> frojnd, a port whose number is greater than 1024
[15:06:50] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 246 seconds)
[15:06:59] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[15:07:36] <frojnd> Well fuck, it works
[15:07:40] <jim> then later, you'd need root privs to bind the original port you wanted, and then you should drop the root priveleges
[15:08:06] <frojnd> I see.
[15:08:08] <frojnd> Thank you
[15:08:15] *** Quits: x28girl (~x28girl@user/x28girl) (Remote host closed the connection)
[15:08:30] *** Quits: sudomann (~sudomann@2601:543:100:2e3:e802:14fa:c0ab:40e7) (Ping timeout: 260 seconds)
[15:08:33] *** Joins: cth (~Cthulchu@193.194.107.250)
[15:08:46] <Yhg1s> no, don't bind to a privileged port with flask's development server.
[15:08:52] *** Joins: x28girl (~x28girl@user/x28girl)
[15:09:08] <frojnd> Yhg1s: I'm listening
[15:09:13] *** Joins: thiras (~thiras@user/thiras)
[15:09:18] <frojnd> Dev port should be on some >1024 port?
[15:09:27] <frojnd> Dev server..
[15:09:30] <jim> how do you get flask to bind an arbitrary port like that?
[15:09:43] <jim> (to respond to such a request)
[15:10:03] <Yhg1s> Yes, there isn't really a reason to bind it to port 443 (or whatever port you were trying to use). For actual deployment, you want to use a better quality server. Any WSGI-capable server will do.
[15:10:16] <Yhg1s> jim: it binds to whatever the app configuration says it should bind to.
[15:10:38] <frojnd> Yhg1s: WSGI?
[15:10:49] <jim> so change the app config, that changes the port it responds to?
[15:11:18] <Yhg1s> frojnd: yes. It's the standard for Python applications to interact with a web server.
[15:11:42] <Yhg1s> jim: the app config that says what port to respond do will change the port it responds to, yes.
[15:12:51] <jim> ok, is flask a sqlalchemy-alike?
[15:13:12] <Yhg1s> jim: not in any way, shape or form.
[15:13:16] <Yhg1s> jim: it's a web framework.
[15:13:34] <jim> oh, so it's more similar to django?
[15:13:38] <Yhg1s> yes.
[15:13:39] *** Quits: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[15:14:12] *** Parts: pro (~pro@user/pro) (WeeChat 3.2.1)
[15:14:14] *** Joins: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net)
[15:14:24] *** Joins: hmmmm (~sdfgsf@c-174-55-23-68.hsd1.pa.comcast.net)
[15:14:34] <hmmmm> hey guys, how do i do this in python:
[15:15:14] <shangxiao> print(':')
[15:15:20] <hmmmm> i have this class that's sort of like an enumeration of different categories, each having an integer value and then a display string that's different from the actual enumeration name
[15:15:29] <jim> smartass :P
[15:15:47] <grym> hmmmm: https://docs.python.org/3/library/enum.html ?
[15:16:01] <hmmmm> and i want this class to have a static method that will create one of itself that's calculated from a different number
[15:16:20] <grym> hmmmm: enum does that too
[15:16:33] <shangxiao> jim: sqlalchemy & flask are often used in conjunction if that helps
[15:16:44] <Payam> Is there something wrong in this code? https://bpa.st/4MSQ
[15:16:52] <hmmmm> so i want to be able to use it like     category = FoobarCategory.BLAH
[15:16:57] <hmmmm> category.getDisplayName()
[15:17:15] <hmmmm> or category = FoobarCategory.fromOtherNumber(0.50)
[15:17:19] *** Quits: mavez (~mavez@scotia.systems) (Quit: leaving)
[15:17:23] <Payam> Is there something wrong in this code? https://bpa.st/4MSQ . I get this error : AttributeError: partially initialized module 'asyncio' has no attribute 'new_event_loop' (most likely due to a circular import)
[15:17:27] <hmmmm> does the enum class actually do all of these things?
[15:17:42] <jim> shangxiao, do you think sqlalchemy and django are less often used together, since django has its own orm already?
[15:17:42] <Yhg1s> hmmmm: yes, although not spelled exactly that way.
[15:17:49] <hmmmm> could you explain more?
[15:18:04] <grym> hmmmm: https://bpa.st/KVFA
[15:18:07] <Yhg1s> hmmmm: it has no 'getDisplayName()' method.
[15:18:17] <hmmmm> well of course
[15:18:20] <hmmmm> but how would i do that?
[15:18:25] <Yhg1s> Payam: well, the error suggests you have a circular import. Can you show the code and the traceback?
[15:18:27] <shangxiao> jim: well django has many bits that are designed to work with its orm already
[15:18:53] *** Joins: besnn (~besnn@user/besnn)
[15:19:31] <jim> is it possible to use django with sqlalchemy, by removing^W not using those bits?
[15:19:42] *** Quits: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[15:19:50] <hmmmm> what does the Enum class actually do here in this example?
[15:19:52] <gordonjcp> jim: I guess, but why?
[15:20:11] <gordonjcp> jim: if you want a Python web framework and you want to use SQLAlchemy, use Flask...
[15:20:13] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[15:20:20] <hmmmm> wouldn't i have the same functionality by omitting the Enum base class?
[15:20:42] <grym> hmmmm: no
[15:20:42] <kosh> please use django with the ORM built in, that is what everyone expects if they have to work with it later, maintain it etc
[15:20:43] <hmmmm> other than an implicit constructor
[15:20:53] <Yhg1s> hmmmm: it does the mapping from values to enum objects, from enum objects to name, from enum class attributes to instances of the class.
[15:20:56] <kosh> you will end up creating more complicated code with no real documentation to deal with it
[15:21:06] <shangxiao> i think jim's just curious about the nature of django
[15:21:36] <Widdershins> django comes with all the batteries already in it but it's still modular. you can replace parts of it but it's more work
[15:21:40] <hmmmm> yeah, but the entire point of the enum is that the values ARE the objects
[15:21:48] <shangxiao> another common question is whether you can use jinja… you can but folks often don't bother
[15:21:51] <Widdershins> hmmmm: why is it important
[15:21:51] <Payam> Yhg1s sure. a sec plz
[15:21:54] <hmmmm> they should just be an alias for said "objects"
[15:22:02] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[15:22:08] <Yhg1s> hmmmm: I don't understand what distinction you're trying to make there.
[15:22:13] <hmmmm> because I don't want to add more tooling on top of my code if it doesn't actually add any functionality
[15:22:17] *** Joins: LuKaRo_ (~LuKaRo@p4fc32cdc.dip0.t-ipconnect.de)
[15:22:22] <Payam> Yhg1s https://bpa.st/SWEA
[15:22:35] <hmmmm> I'm just really confused I guess what an enum is in python
[15:22:46] <Yhg1s> hmmmm: okay, so you asked if you could do X in Python. The stdlib enum module does X for you. So, it's possible. It's up to you whether you want to use enum or reinvent it.
[15:22:50] <Widdershins> hmmmm: why does it matter that they are the exact same objects or whatever
[15:22:55] <hmmmm> and what things you'd expect it to do
[15:23:26] <hmmmm> well I didn't ask if i could do it in python, i asked how you would
[15:23:40] <hmmmm> of course you can do anything in python, it's all a matter of how much you really want it
[15:23:43] <Widdershins> and i'm asking why you would
[15:23:47] <Yhg1s> hmmmm: we would use the enum module, obviously :) Because it's in the standard library, and it does those things for you.
[15:23:53] <hmmmm> hrmm
[15:24:01] <shangxiao> Also conventional
[15:24:04] <hmmmm> I have to play around with this a bit to make an informed comment
[15:25:40] <hmmmm> I need to make sure it has advantages over a bunch of MYENUM_FOO = 0  MYENUM_BAR = 1 ... etc.  MYENUM_display_names = ["The foo thing", "The bar thing", ...]
[15:26:10] *** Quits: Kharon (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[15:26:21] <jinsun> Payam: don't name your file asyncio.py
[15:26:29] <hmmmm> and then I'm going to be writing the conversion function anyway so enum.Enum doens't "help" there
[15:27:21] <hmmmm> back in my days when we used C there wasn't any of this newfangled Enum class crap, you just had a #define ENUMTHING <value> and we LIKED IT that way
[15:27:42] *** Joins: shad (~shad@user/shad)
[15:27:53] <Yhg1s> hmmmm: Please don't write Python as if it were old-school C.
[15:28:03] <jim> shangxiao, yeah, in a similar way I'm also curious about modules and their nature
[15:28:42] <Payam> jinsun I just realized it.
[15:28:43] <jinsun> hmmmm: you can do your_enum.__members__ to get the display names for free
[15:28:45] <Payam> so stupid I am
[15:29:44] <hmmmm> am I allowed to modify __members__?
[15:30:52] <jinsun> no, the names are what you  used when you defined the enum
[15:30:56] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:31:51] <hmmmm> which makes it less helpful
[15:32:02] <hmmmm> how do I access the internal "value" of the enum class?
[15:32:21] <hmmmm> if i were going to extend enum.Enum with a method that gets the display name
[15:32:21] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[15:32:37] <Yhg1s> hmmmm: it's 'self'.
[15:32:49] <hmmmm> so just literally
[15:33:04] <shangxiao> that reminds me, FunkyBob created this some time ago https://github.com/funkybob/labeled-enums
[15:33:34] <hmmmm> @classmethod \n   def getDisplayName(cls):  display_names = [ ... ]    return display_names[self]    ?
[15:34:09] *** Joins: fdan (~fdan@192.146.154.3)
[15:34:18] <shangxiao> hmmmm: give the lib above a squiz and see if that tickles your fancy
[15:34:39] <hmmmm> er right, because __eq__ is overridden to return the internal value i guess
[15:35:05] <hmmmm> so when "self" is referenced it returns the int
[15:35:11] <hmmmm> or do you need to do int(self)?
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:35] <hmmmm> i mean __call__ instead of __eq__ i guess
[15:37:34] <hmmmm> I won't lie, this whole thing seems silly - if i had written this the "C way" i would have been done 20 minutes ago
[15:37:36] <Yhg1s> I don't know why you're talking about __call__ or __eq__ at all. If display_names is a list, you need an integer. You may be looking for the 'value' attribute? Or IntEnum? Have you considered reading the enum module docs and examples?
[15:38:18] <hmmmm> you said it yourself here
[15:38:19] <hmmmm> [08:02 AM] <Yhg1s> hmmmm: it's 'self'.
[15:38:30] <Yhg1s> hmmmm: the enum is 'self', yes.
[15:38:31] <hmmmm> so i asked, you'd literally just use 'self'?
[15:38:40] <Yhg1s> hmmmm: to get the enum, yes.
[15:38:40] <hmmmm> the enum, but i need the value within the enum.
[15:38:52] <Yhg1s> hmmmm: the enum *is* a value.
[15:39:01] <hmmmm> right so how does it accomplish this?
[15:39:17] <hmmmm> by overriding __call__ - that's why i brought it up
[15:39:19] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[15:39:31] <Yhg1s> hmmmm: I honestly don't know what you're trying to accomplish. It *sounds* like you just want a StrEnum perhaps?
[15:39:41] <Yhg1s> hmmmm: why __call__? When are you calling the enum instance?
[15:40:11] <shangxiao> i dunno i'm confused i though hm wanted an enum with both integer and a string, which is why i suggested labeled-enum
[15:40:15] <hmmmm> I believe that's the operator to override when you want to change what the expression evaluates to
[15:40:21] <Widdershins> the value inside the enum? just read the docs dude. people keep telling you to read the docs. you can get the value from an enum object
[15:40:26] <Yhg1s> hmmmm: there is no such operator.
[15:40:26] <hmmmm> labeled-enum looks the closest to what I want
[15:40:35] <hmmmm> I'm confused on how it works then
[15:40:41] <Yhg1s> hmmmm: __call__ is the method that's called when you call an object.
[15:40:41] <hmmmm> I need to read the enum.py source
[15:40:51] <Widdershins> you need to read the enum docs
[15:40:51] <Yhg1s> I recommend reading documentation instead.
[15:41:01] <zln> is there a "don't do that" convention on tuples with mutable elements?
[15:41:09] <Yhg1s> zln: nope.
[15:41:11] <hmmmm> I figured that it was __call__ because that's the only thing looking like it would have that effect in that lib you mentioned
[15:41:34] <Yhg1s> hmmmm: the effect of changing what something evaluates to when you just use it? There is no such thing. That's not how Python works.
[15:41:48] <hmmmm> heh
[15:41:59] <hmmmm> i'm not describing what i mean properly.  that does sound silly
[15:42:24] <hmmmm> so i'm gonna stop chatting and start poking around with things
[15:42:33] <shangxiao> :)
[15:42:34] <ldlework> You could have an object that you __call__ that returns different results. Not sure if that's what you mean.
[15:42:45] <zln> Yhg1s: so if I have a class that implements __hash__(), the objects would fit nicely in a tuple without someone raising eyebrows on me?
[15:43:18] <Yhg1s> zln: with or without __hash__, sure. tuple doesn't care.
[15:43:24] <Yhg1s> zln: what might matter is how you _use_ that tuple.
[15:43:42] *** Quits: computeiro (~Wender@177.25.230.16) (Ping timeout: 265 seconds)
[15:44:19] <zln> Yhg1s: could you elaborate a little bit on the use cases that matters
[15:44:25] *** Joins: FergusL (~freenode4@user/fergusl)
[15:45:15] <Yhg1s> zln: a tuple with unhashable items in it is itself unhashable.
[15:45:58] *** Joins: zeden (~zeden@user/zeden)
[15:46:42] <zln> yes, that was why I mentioned implementation of __hash__() in the class. Would that be better?
[15:47:01] <zln> or maybe I misunderstand the __hash__() functions
[15:47:06] <Yhg1s> zln: I don't know. Better for what? Like I said, the tuple doesn't care.
[15:47:33] <FergusL> Hi, I'm writing a script that uses asyncio. I'm using the watchgod (file changes watching) library which is already async in one coroutine, in the same coroutine I would like to use the open() and read() primitives which are blocking. I cannot wrap the function in asyncio.to_thread because the watchgod library is already async and to_thread expects
[15:47:33] <FergusL> a non-async function. Do I have to use alternate open()/read() like the aiofiles library?
[15:47:59] <zln> I see, I just wanted to use namedtuple to act as a container for my objects instead of lists or dicts
[15:48:29] <Yhg1s> FergusL: no, you don't have to. You could just not care that they're blocking, if you expect the filesystem to be local. Or you can defer the open and read to a thread by putting their calls in a different function.
[15:48:44] <Yhg1s> zln: oh, definitely don't use namedtuple. If you want that, use attrs, or dataclasses.
[15:49:13] <Yhg1s> zln: but you don't need __hash__ to put items in a tuple, just like you don't need it to put items in a list.
[15:49:23] <FergusL> Yhg1s alright, thanks, I didn't even try the "not caring" approach, I will now
[15:50:00] <zln> Yhg1s: ah, I have to read on attrs and dataclasses.
[15:50:08] <zln> Thanks
[15:50:18] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:50:20] <Yhg1s> zln: I recommend attrs instead of dataclasses, by the way. It's better in all ways.
[15:50:47] <zln> Yhg1s: awesome! I'll focus on attrs :D
[15:52:18] *** Joins: xiongxin (~quassel@119.123.102.205)
[15:52:46] <Masklin_Gurder> Is it generally faster to work with lists or dicts? I am at a fork in my road. I don't really need a dict object until the end of the program, but if there is no speed gain with using a list in the body of the code, I'll just use a dict throughout.
[15:54:42] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 260 seconds)
[15:55:35] <FergusL> Yhg1s Still I'm curious, in the context of a coroutine (asynx def spam():), how can I explicitly defer a call to differentFunc(args) to a different thread? Thanks again
[15:55:54] <kosh> Masklin_Gurder, you would have to profile your usage case, I suspect that most of the time it doesn't matter
[15:56:10] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[15:56:13] *** Joins: moldorcoder7 (~moldorcod@77.47.48.24)
[15:57:57] <shangxiao> hm yeah if you're concerned about speed, maybe don't use python =/
[15:57:57] <Repiphany> What kind of operations are you doing on your list/dict
[15:58:12] *** Joins: summonner (~summonner@188.24.90.174)
[15:59:09] <FergusL> and how big a dict/list is it?
[15:59:19] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:59:31] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:59:46] <shangxiao> the suspense is killing us
[16:00:43] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[16:00:47] <Yhg1s> FergusL: with asyncio.to_thread. You put the blocking calls in a different function, you call that function in the other thread.
[16:01:28] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[16:01:45] *** Joins: Voyager2Spirit (~Voyager2S@176.45.37.55)
[16:02:07] <hmmmm> okay
[16:02:11] *** Quits: moldorcoder7 (~moldorcod@77.47.48.24) (Ping timeout: 252 seconds)
[16:02:17] <hmmmm> Yhg1s you suck at explaining
[16:02:23] <hmmmm> but thanks for helping lol
[16:02:28] <Yhg1s> ... rright.
[16:02:38] <hmmmm> so what i wanted was self.value
[16:02:49] <hmmmm> and the reason why it didn't work was because i had @classmethod decorating that method
[16:02:51] <Yhg1s> hmmmm: please consider being less insulting. We do have a code of conduct here.
[16:02:52] *** Joins: upsala (~zcb@185.213.155.160)
[16:02:56] <Masklin_Gurder> Repiphany: Just filling it with numbers that are updated while parsing an input file. Input can be quite big, but not bigger than some hundreds of MB.
[16:02:59] <shangxiao> well technically they were right, the enum itself is a value ;)
[16:03:10] <hmmmm> ...
[16:03:28] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[16:03:59] <hmmmm> in any case, I'm relatively satisfied with how this came out (in terms of semantics)
[16:04:15] <shangxiao> but yeah enums also have a member value
[16:05:16] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:05:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[16:05:53] *** Joins: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net)
[16:06:25] <hmmmm> yeah in the end i used regular old enum.  that class was neat to look at, but not ultimately i wanted to use
[16:06:35] <hmmmm> not ultimately something that i wanted to use*
[16:06:36] *** Joins: wyclif (~wyclif@user/wyclif)
[16:06:42] *** Joins: togusa (~togusa@user/togusa)
[16:06:42] *** Quits: Voyager2Spirit (~Voyager2S@176.45.37.55) (Quit: Leaving...)
[16:06:42] <Yhg1s> so by 'regular old enum', you mean 'not an enum'?
[16:06:54] <hmmmm> i mean i used enum.Enum
[16:07:01] <hmmmm> not labeled-enums
[16:07:10] <hmmmm> and not StrEnum either
[16:09:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[16:09:19] *** Joins: pycode (~pycode@2001:b07:5d28:551:4733:1498:2f5:5c0a)
[16:09:20] <shangxiao> Masklin_Gurder: is there some reason you're concerned about speed?
[16:09:36] <shangxiao> normally python devs (at least in my field) optimise for readability & maintainability
[16:10:03] <shangxiao> and just avoid classic pitfalls wrt speed, memory consumption, etc
[16:10:57] <Yhg1s> There's plenty of reason not to make your Python code unnecessarily slow, even if you're satisfied with the speed of Python.
[16:11:10] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[16:11:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:11:39] <hmmmm> while i'm here i may as well ask another one of my burning python questions...
[16:12:05] *** Joins: wyclif (~wyclif@user/wyclif)
[16:12:15] <hmmmm> I have a unix timestamp i want to compare that of some objects with that may or may not have a creation time associated
[16:12:55] <hmmmm> my natural inclination is to make "no creation time" a 0 for the timestamp but that would make comparisons evaluate true when i want them to be false
[16:13:08] <hmmmm> and it's more proper to represent "no creation time" by making it None
[16:13:11] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Remote host closed the connection)
[16:13:25] <hmmmm> so is there a way to have None compare with
[16:13:45] <hmmmm> actually nevermind I just answered my own question, I'm going to have to write a class to wrap the timestamp in, but that already exists, it's datetime
[16:16:05] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 265 seconds)
[16:16:17] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:16:54] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[16:17:51] <JimmyRustles> i'm trying to install the latest version of pygame (2.0.2.dev2) but when i do "pip install pygame --upgrade" it says i have the latest version, but it says the latest version is 2.0.1
[16:17:54] <JimmyRustles> how do i get the latest version?
[16:18:40] <DnzAtWrk> is it the wrong version of python?
[16:18:43] <supakeen> `pip install --pre pygame`
[16:18:46] <DnzAtWrk> did they not upload it to pipl?
[16:18:50] <DnzAtWrk> pypi*
[16:18:54] <supakeen> The 2.0.2.dev2 is a prelease :)
[16:19:31] <grym> JimmyRustles: you can install it from somewhere other than pypi
[16:20:09] <supakeen> I mean, it's on pypi ...
[16:20:21] <supakeen> It's a prelease, so you need to pass --pre.
[16:20:50] <grym> supakeen: where are pre files listed? https://pypi.org/project/pygame/#files
[16:21:01] <supakeen> https://pypi.org/project/pygame/#history
[16:21:11] <grym> ah!
[16:21:20] <grym> that's slightly confusing, but at least they're there
[16:21:31] <shangxiao> fyi if you do `pip install pygame==999` it will show you the available releases
[16:21:37] <supakeen> I see 2.0.2.dev2 also listed on your link.
[16:21:52] <supakeen> ah no
[16:22:00] <supakeen> it's listed if you click files *from* that v ersion
[16:22:14] <supakeen> interesting choices for pep 426 i guess
[16:22:51] *** Joins: togusa (~togusa@user/togusa)
[16:23:59] <JimmyRustles> i got it working
[16:24:01] <JimmyRustles> i did pip install pygame==2.0.2.dev2
[16:24:01] <JimmyRustles> :)
[16:24:02] <JimmyRustles> thanks
[16:25:21] *** mh3f_ is now known as mh3f
[16:25:26] *** Joins: togusaa (~togusa@user/togusa)
[16:25:57] *** Joins: tj_allemaal (~tj_allema@17-14-122.cgnat.fonira.net)
[16:28:02] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 246 seconds)
[16:30:13] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:31:04] *** Quits: togusaa (~togusa@user/togusa) (Ping timeout: 265 seconds)
[16:31:09] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:34:50] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 268 seconds)
[16:35:03] *** Joins: Alexer (~alexer@alexer.net)
[16:35:54] <DnzAtWrk> uff
[16:36:00] <DnzAtWrk> I need the borders in a 2d numpy array
[16:36:04] <DnzAtWrk> around true
[16:36:14] <DnzAtWrk> I need to index them
[16:36:17] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[16:38:43] *** Parts: tj_allemaal (~tj_allema@17-14-122.cgnat.fonira.net) ()
[16:39:17] *** Quits: schumaml (~schumaml@dslb-178-002-179-143.178.002.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[16:40:31] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[16:40:53] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[16:41:20] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 246 seconds)
[16:41:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[16:43:24] *** Joins: fikran (~fikran@user/fikran)
[16:44:46] *** Joins: cheater (~Username@user/cheater)
[16:48:41] *** Quits: arinov (~arinov@77.67.147.245) (Ping timeout: 264 seconds)
[16:49:58] <diverdude> Hi, `re.findall('\(.*?\)', 'Hello (you) human (person)')` returns `['(you)','(person)']`. How do i change it to instead only return `['you','person']` ?
[16:50:11] *** Joins: Plyht (uid433484@id-433484.hampstead.irccloud.com)
[16:50:17] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:50:50] <Repiphany> diverdude: `re.findall('\((.*?)\)', 'Hello (you) human (person)')`
[16:50:52] <Yhg1s> diverdude: use a capturing group around the bits you want to capture.
[16:52:26] <diverdude> ahh
[16:54:37] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[16:54:53] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[16:55:07] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[16:55:37] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Client Quit)
[16:55:51] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[16:55:53] *** Joins: zebrag (~chris@user/zebrag)
[16:56:55] *** Joins: PaddyF (~PaddyF@user/paddyf)
[16:57:33] *** Joins: minip (~minip@user/minip)
[16:58:40] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 240 seconds)
[16:59:05] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[16:59:42] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[16:59:49] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[17:01:05] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[17:01:46] <sveinse> I'm getting an error that pip requires "Microsoft Visual C++ 14.0" to build a package, however according to this https://wiki.python.org/moin/WindowsCompilers it sais Py 3.7 needs 14.X and I have 14.2 installed. Any ideas why I'm getting this error?
[17:02:52] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:7ba2:5fb7:3b5b:5ca)
[17:02:57] <sveinse> How do I debug what pip is trying to do?
[17:03:00] <Yhg1s> sveinse: what package are you building? What version of pip? Can you show the full output of pip?
[17:03:02] <grym> sveinse: it's been a few years but i remember msvcc being _extremely_ annoyingly precise about this
[17:03:33] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[17:04:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 264 seconds)
[17:04:37] *** Joins: shad (~shad@user/shad)
[17:05:26] *** Quits: holgersson (~quassel@user/holgersson) (Remote host closed the connection)
[17:05:29] <Payam> can you help me with pytest? I am trying to run tests in parallell. Does anyone know where to find info about that?
[17:05:31] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[17:05:31] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[17:05:44] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[17:06:24] <dman777> can I use pip3 to install python 3? I know this sounds strange. But it's a docker image that does not have python 3 but does have pip3
[17:06:28] *** Quits: zeus (~user@user/kamyl) (Ping timeout: 252 seconds)
[17:06:37] *** Joins: leonardo (~leonardo@user/leonardo)
[17:06:42] *** Joins: holgersson (~quassel@user/holgersson)
[17:06:43] <Yhg1s> dman777: no, pip is not for installing Python.
[17:06:47] <sveinse> Yhg1s: py 3.7.9-64, pip 21.2.4, setuptools 47.1.0 and I'm trying to build https://github.com/sveinse/pyaudio.git in the sveinse-master branch (due to upstream missing some feature)
[17:06:53] <Yhg1s> dman777: if pip3 actually works, there must be a Python 3 installation.
[17:07:10] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Ping timeout: 260 seconds)
[17:07:19] *** Joins: zeus (~user@user/kamyl)
[17:07:53] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[17:08:28] *** Joins: kafka (~kafka@user/kafka)
[17:08:30] *** Joins: dulanic (~dulanic@47.187.144.163)
[17:08:59] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:09:04] *** Joins: kcrk (~kcrk@user/kcrk)
[17:09:12] <dman777> Yhg1s: that is what I thought...but in the docker image shell there is no python executable even though in the Docker file they installed python3-pip
[17:10:23] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:10:27] <Yhg1s> dman777: is there a python3 executable? What are the dependencies of the 'python3-pip' package?
[17:12:34] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[17:12:34] <sveinse> Yhg1s: I have successfully built this package numerous times before, but now I'm on a new PC where I don't have the full Visual Studio Community installed. Only what Microsoft calls "BuildTools" which is the one referred to from the Windows compilers py wiki
[17:12:38] *** Joins: benjwadams (~benjwadam@96.238.4.28)
[17:13:04] *** Parts: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[17:13:41] *** Joins: nomic (~nomic@185.217.117.126)
[17:14:03] <sveinse> I suspect there is a tool missing which should have been selected in the VC installer, and I'm trying to figure out exactly what pip wheel is failing on
[17:14:20] <benjwadams> Hi, in NumPy is there any function like numpy.diff  or first order difference, but instead a first order *sum*, e.g. (a[n+1] + a[n]) for n = range(len(a) -1)?
[17:14:55] <benjwadams> If not, i guess it's simple enough to express with slice syntax
[17:15:28] <Yhg1s> sveinse: so what is the full output of pip? What part is actually producing this complaint? Did you install the C++ build tools (MSVCv142 - VS 2019 C++ x64/x86 build tools, and Windows 10 SDK), in VS Build Tools?
[17:15:53] *** Quits: Dotz0cat (~Dotz0cat@h209.174.40.162.dynamic.ip.windstream.net) (Ping timeout: 252 seconds)
[17:18:18] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[17:19:06] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bc4f-329b-a994-a9e5.res6.spectrum.com)
[17:19:10] <kosh> benjwadams, you are looking for something like cumsum?
[17:19:15] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[17:19:48] *** Joins: Dotz0cat (~Dotz0cat@h153.248.19.98.static.ip.windstream.net)
[17:19:49] *** Quits: x28girl (~x28girl@user/x28girl) (Remote host closed the connection)
[17:20:10] *** Joins: x28girl (~x28girl@user/x28girl)
[17:20:17] *** Quits: gggp (~textual@125.33.92.174) (Ping timeout: 252 seconds)
[17:20:48] <benjwadams> kosh, no.  i want something like `[1, 2, 3] -> [3, 5]`
[17:21:04] <kosh> ah
[17:21:28] <kosh> a[:-1] + a[1:]   I think would do it
[17:22:17] *** Quits: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net) (Ping timeout: 264 seconds)
[17:22:34] <benjwadams> yeah, that's what I was thinking, but I was just curious if there was anything equivalent.  Minor caveat is that you'd have to check for IndexError for zero or one-length arrays
[17:22:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:23:06] *** Joins: vegii (~quassel@2001:470:1f18:3aa:30f::5439)
[17:23:35] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[17:23:37] *** Joins: gggp (~textual@60.10.194.42)
[17:24:13] <vegii> Hi. How portable would a basic pyFirmata program with tkinter be? can I run it in idle as well on windows as on linux?
[17:25:26] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[17:25:58] <sveinse> Yhg1s: https://bpa.st/LNRA - I got a hunch that there is an include or lib that is missing or missing path. It would be awsome if I could get pip wheel to print the actual error
[17:26:42] <vegii> seems like tkinter is the way to go for me rather than using processing as a basic GUI program for controlling arduino outputs
[17:26:44] <supakeen> > error: Microsoft Visual C++ 14.0 is required. Get it with "Build Tools for Visual Studio": https://visualstudio.microsoft.com/downloads/
[17:26:47] <supakeen> Isn't that the error?
[17:27:03] <supakeen> Or more specific than that?
[17:27:08] *** Quits: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[17:27:47] <sveinse> supakeen: So the info here https://wiki.python.org/moin/WindowsCompilers is wrong that 14.X is required? I have 14.2 installed, and I'm pretty certain I've used 14.2 before
[17:29:13] *** Joins: lseactuary90 (~Guest62@2a00:23c6:7e25:4901:68fa:e91c:7466:88ff)
[17:29:43] <lseactuary90> I have been asked to make a Python utility to generalise an ETL process. Does this mean just a back end which allows for various inputs? Or a front end also?
[17:29:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[17:30:27] *** Joins: bninja (~bloodninj@user/bloodninja)
[17:32:58] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:33:05] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 264 seconds)
[17:33:25] *** Quits: jl (~kk@user/jl) (Ping timeout: 260 seconds)
[17:34:01] *** Quits: grooverman (~grooverma@179.99.120.247) (Remote host closed the connection)
[17:34:02] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Ping timeout: 252 seconds)
[17:34:14] <shangxiao> lseactuary90: you may have to ask them that…
[17:34:31] <lseactuary90> Just was curious generally :)
[17:34:47] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:35:39] <shangxiao> well you could interact with a python utility in lots of different ways
[17:35:53] <shangxiao> probably the easiest would be to use a CLI
[17:36:01] *** Joins: grooverman (~grooverma@189-68-148-72.dsl.telesp.net.br)
[17:36:20] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[17:36:36] *** Joins: han-solo (~hanish@user/han-solo)
[17:36:48] *** Quits: nomic (~nomic@185.217.117.126) (Quit: Leaving)
[17:36:59] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[17:37:15] <lseactuary90> got ya
[17:37:37] *** Joins: schumaml (~schumaml@dslb-178-002-179-143.178.002.pools.vodafone-ip.de)
[17:38:21] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2.1)
[17:40:31] *** Joins: deltab (~deltab@user/deltab)
[17:41:52] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[17:42:02] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[17:44:05] *** Joins: Guddddu (~Guddu@190.84.88.92)
[17:45:35] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[17:45:46] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:47:41] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:7ba2:5fb7:3b5b:5ca) (Quit: Client closed)
[17:48:25] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[17:50:05] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[17:52:07] *** Quits: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de) (Quit: Client closed)
[17:54:57] *** Quits: frost (~frost@59.71.243.104) (Quit: Connection closed)
[17:56:29] *** Quits: y1n (~y1n@178.115.78.105.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[17:58:29] *** Joins: grooverman_ (~grooverma@189-46-18-248.dsl.telesp.net.br)
[17:58:32] *** Joins: nbao (~nbao@187.20.16.119)
[17:59:09] <summonner> Payam, tests in parallel - tests are meant to be small and fast. what are you seeing?
[17:59:30] *** Quits: grooverman (~grooverma@189-68-148-72.dsl.telesp.net.br) (Read error: Connection reset by peer)
[18:01:19] *** Quits: nbao (~nbao@187.20.16.119) (Client Quit)
[18:01:33] *** Joins: nbao (~nbao@187.20.16.119)
[18:06:30] <ToAruShiroiNeko> Hello, I need a sanity check.
[18:06:59] <ToAruShiroiNeko> I am unable to deal with a pandas dataframe column. I want to eliminate every case of non-numeric values and replace them with a value such as 0.0
[18:07:15] <ToAruShiroiNeko> I am unable to do this despite using varuous methods including .fillna(0.0)
[18:08:30] *** Joins: y1n (~y1n@178.115.48.113.wireless.dyn.drei.com)
[18:08:43] <jinsun> fillna will just replace NA with the value, not any non-numeric thing
[18:09:20] <ToAruShiroiNeko> Yeah. What can I use to process everything so that anything that cannot be converted to a double just gets a value of my choice.
[18:10:28] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[18:10:43] *** Joins: NealRame (~a@202-65-87-207.ip4.superloop.com)
[18:11:05] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:11:26] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:12:43] <jinsun> ToAruShiroiNeko: maybe `df.apply(pd.to_numeric, errors="coerce").fillna(0.0)`
[18:13:57] *** Joins: LucaTM (~LucaTM@user/lucatm)
[18:15:57] *** Quits: Memory (sid459764@user/memory) ()
[18:18:40] *** Joins: stdout (~stdout@216.163.21.11)
[18:19:48] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[18:23:11] <ToAruShiroiNeko> That did the trick, thanks.
[18:23:18] <ToAruShiroiNeko> I was losing my mind...
[18:23:28] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:23:46] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:23:50] *** Joins: dakotakae (~dakotakae@2601:680:cb80:a6d0:24d6:7704:c967:3377)
[18:25:02] *** Quits: dakotakae (~dakotakae@2601:680:cb80:a6d0:24d6:7704:c967:3377) (Client Quit)
[18:25:21] <vegii> is tkinter considered outdated? what would be the new multiplatform thing to use on windows and linux/ubuntu?
[18:27:33] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[18:28:05] <jinsun> PyQt/PySide is popular, not exactly "new", and not sure if tkinter is considered out of date though, it is just a bit ugly and has less features
[18:28:20] <grym> ugly is good.  ugly is sign of reliability
[18:28:55] *** Joins: pro_z (~pro_z@37.214.44.116)
[18:29:44] <vegii> with PyQT, would the same code run under windows and linux?
[18:30:42] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[18:32:07] <summonner> grym, or a sign that no one is really interested
[18:33:01] <grym> summonner: i strongly prefer ugly and functional over pretty and useless
[18:33:59] *** Joins: adder (~adder@user/adder)
[18:34:57] <chilversc> it depends on the ugly, if its just made a bit messy because there's various guards and workarounds for issues that can occur that's good, if its because no care has been taken and the code is an unreadable mess that tends to cause bugs
[18:35:20] <grym> i mean UX design more than code quality
[18:35:46] <dman777> Yhg1s: I can't find one
[18:36:07] <vegii> > ERROR: No matching distribution found for PyQT4
[18:36:08] <vegii> huh
[18:36:22] <grym> dman777: `type -a python3`
[18:36:31] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[18:36:50] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 246 seconds)
[18:36:51] <vegii> nevermind
[18:37:04] <grym> dman777: and perhaps double check that container's `python -V`
[18:38:21] <vegii> or actually no, not nevermind... where do I get this from
[18:39:13] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[18:39:52] *** Joins: gggp (~textual@60.10.194.42)
[18:40:17] <jinsun> vegii: pyside has a bit better documentation, so maybe better to start with that instead of pyqt, https://doc.qt.io/qtforpython/quickstart.html
[18:40:40] <han-solo> +1
[18:40:44] <vegii> thanks
[18:40:55] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:41:45] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[18:42:05] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 246 seconds)
[18:44:25] <ska> I have some unit tests that use files in a data folder inside of ~/tests/.. They use paths that are relative to the parent folder of the project. So that means that when you try to run the tests from the tests/ folder, they fail. Is it worth making those paths relative to __file__ to get them working in the tests/ folder?
[18:44:36] <ska> How do you normally do it?
[18:44:55] <chilversc> I like to use the resources module
[18:45:25] <summonner> ska, https://docs.python-guide.org/writing/structure/ is a good recommendation
[18:47:07] <chilversc> https://docs.python.org/3/library/importlib.html#module-importlib.resources
[18:47:09] <grym> ska: i usually do Path(__file__).parent
[18:47:15] <grym> and feel kiiind of bad about it and then i don't care
[18:47:47] <summonner> i always use a single file when starting out, but if the project has multiple people working on it, it typically splits along domain lines, interface, backend, api, whatever, so you run the tests specific to the area which you're changing
[18:48:00] <grym> importlib.resources is absolutely the better way, but i never install my tests, so i play a bit looser
[18:48:13] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[18:48:19] <grym> (and anyone else in the project, including CI, can run those tests fine)
[18:48:21] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:7ba2:5fb7:3b5b:5ca)
[18:48:38] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:48:58] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:49:05] <grym> you do have to either include your test data in your repo, or otherwise share it, though
[18:49:22] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:50:41] <grym> ska: what sort of files are these, and how big are they, that your tests need
[18:51:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[18:51:31] <lseactuary90> i have a question. i have some python script that reads a file, does parsing on it, extracts some data into dataframes, and exports. my code is all 'line by line' rather than functions which is not 'proper'. any tips on making functions from this type of code?
[18:51:47] *** Joins: ub (~Thunderbi@178.115.37.114.wireless.dyn.drei.com)
[18:52:11] <jinsun> I also just do `Path(__file__).parent.joinpath(...)` usually, I know about resources but never really used it
[18:52:29] <grym> lseactuary90: first, put all of it into a main().  then, look for lines where you have a comment like # next, do ...; those breaks are natural-enough places for functions, usually
[18:52:47] *** Joins: fikran (~fikran@user/fikran)
[18:52:54] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[18:53:08] <grym> lseactuary90: and generally, write special functions that only read and only write data to and from disc, and return the contents; the rest of your functions should not touch the disk if you can help it
[18:53:45] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[18:53:49] <grym> lseactuary90: basically everywhere you wrote a comma in your question: that's a function
[18:54:18] <lseactuary90> gyym - yup its all in main and works well. just looks messy i guess as its chunks of code.
[18:54:20] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[18:54:26] <lseactuary90> *grym
[18:54:37] <grym> data = read_data(infile); parsed = parse_data(data); dfs = extract_data(parsed); export(outfile)
[18:54:46] <lseactuary90> interesting
[18:54:49] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[18:54:51] <lseactuary90> got it
[18:55:17] <grym> lseactuary90: besides being tidy, the _big_ win here is that parse_data and extract_data can be tested without ever needing a file
[18:55:19] <lseactuary90> is it best practice to type all the code, ensure it works, then make functions as a 'cleanup the code' step?
[18:55:25] <grym> lseactuary90: no
[18:55:39] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:55:42] <lseactuary90> ok
[18:55:58] <grym> you'll come to develop a feel for "oh, i should be writing a function now!"; write the same sort of code often enough and you'll just write functions to start with
[18:56:20] *** Joins: asthasr (~asthasr@162.210.28.151)
[18:56:39] <grym> with that comes a feel for "oh, this function wants like 12 arguments; should i have a dataclass here?"
[18:56:42] <grym> and other design improvements
[18:57:27] <chilversc> though I would say its ok to write one big function and refactor it if you're prototyping and using a new API, as you might not be sure at first where the natural boundaries lie
[18:57:55] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[18:57:57] <chilversc> though I tend to write small script to test out the API when prototyping, then throw it away when I'm done
[18:58:28] <grym> yep
[18:58:32] *** Quits: NealRame (~a@202-65-87-207.ip4.superloop.com) (Ping timeout: 246 seconds)
[18:58:42] <grym> it's rare for me to ever commit that one-big-function, by now
[18:58:44] *** Quits: ub (~Thunderbi@178.115.37.114.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[18:58:51] *** Quits: flyback (~flyback@c-73-154-116-254.hsd1.pa.comcast.net) (Remote host closed the connection)
[19:00:01] *** Joins: flyback (~flyback@2601:540:8201:1e60:a5ea:e77f:ee1d:6a16)
[19:01:04] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[19:01:27] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[19:02:37] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:02:52] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:02:54] *** Quits: flyback (~flyback@2601:540:8201:1e60:a5ea:e77f:ee1d:6a16) (Client Quit)
[19:03:13] *** Joins: flyback (~flyback@2601:540:8201:1e60:a5ea:e77f:ee1d:6a16)
[19:03:20] *** Joins: srhm (~srhm@user/srhm)
[19:04:25] *** Joins: NealRame (~a@202-65-87-207.ip4.superloop.com)
[19:04:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:06:52] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 252 seconds)
[19:07:50] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[19:09:28] *** Joins: Azin (~Azin@user/azin)
[19:09:38] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[19:10:11] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:11:54] *** Joins: starz (starz@ns378512.ip-37-59-36.eu)
[19:13:06] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:14:03] *** Joins: jazzy2 (~jaziz@2600:380:4628:69b2:6174:7fd0:7aa3:73fa)
[19:14:21] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:14:43] *** Quits: xiongxin (~quassel@119.123.102.205) (Remote host closed the connection)
[19:15:07] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:15:59] *** Joins: xiongxin (~quassel@119.123.102.205)
[19:16:26] *** jazzy2 is now known as jazzy
[19:17:46] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[19:19:03] *** Quits: Azin (~Azin@user/azin) (Read error: Connection reset by peer)
[19:20:32] *** Joins: niemal (~niem@adsl-187.109.242.234.tellas.gr)
[19:21:23] *** Quits: xiongxin (~quassel@119.123.102.205) (Quit: No Ping reply in 180 seconds.)
[19:22:38] *** Joins: xiongxin (~quassel@119.123.100.167)
[19:22:45] *** Quits: niemal (~niem@adsl-187.109.242.234.tellas.gr) (Changing host)
[19:22:45] *** Joins: niemal (~niem@user/niemal)
[19:23:29] *** Quits: pycode (~pycode@2001:b07:5d28:551:4733:1498:2f5:5c0a) (Ping timeout: 264 seconds)
[19:25:57] <jamwil> lseactuary90: On my 'first pass', I'll often find myself thinking I should place a comment to explain a block of code. That's usually a good indicator that that block should be moved to its function or method. Once I get it working, usually the right data structures become evident and I refactor into more logical objects and methods.
[19:26:14] <lseactuary90> good tip
[19:27:03] *** Quits: xiongxin (~quassel@119.123.100.167) (Client Quit)
[19:27:56] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:28:18] *** Joins: xiongxin (~quassel@113.116.33.208)
[19:28:19] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:28:58] *** Quits: niemal (~niem@user/niemal) (Quit: Leaving)
[19:29:46] *** Joins: shalora (~quassel@2a02:810a:b40:9f4::178f)
[19:29:47] *** Joins: Naan (~Naan@user/naan)
[19:29:58] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[19:31:09] *** Joins: mokulus (~mokulus@user/mokulus)
[19:31:35] *** Joins: niemal (~niemal@user/niemal)
[19:31:45] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Quit: Connection closed for inactivity)
[19:33:12] *** dcaro is now known as dcaro_away
[19:33:21] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:33:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:34:29] <grooverman_> Very useful piece of information: https://stackoverflow.com/questions/10588644/how-can-i-see-the-entire-http-request-thats-being-sent-by-my-python-application#16630836
[19:34:43] *** Quits: xiongxin (~quassel@113.116.33.208) (Quit: No Ping reply in 180 seconds.)
[19:34:53] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 264 seconds)
[19:34:58] *** Joins: khrbt_ (~znc@user/khrbt)
[19:35:38] *** Quits: rsx (~dummy@ppp-188-174-145-31.dynamic.mnet-online.de) (Quit: rsx)
[19:35:58] *** Joins: xiongxin (~quassel@113.116.33.208)
[19:36:59] <aphysically> if I go back and forth over which one of these is least bad one more time I'm going to lose my mind https://bpa.st/IRKA
[19:37:20] <aphysically> (hacks to split path between name and parent)
[19:38:36] *** Quits: xiongxin (~quassel@113.116.33.208) (Client Quit)
[19:39:55] *** Quits: Plyht (uid433484@id-433484.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:43:42] *** Joins: Lycurgus (~juan@98.4.112.204)
[19:44:16] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[19:44:37] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[19:45:07] <jinsun> 2nd one seems more obvious to understand, that underscore thing in the first one is a bit confusing
[19:45:24] *** Joins: junktext (~junktext@77.247.181.215)
[19:45:41] *** Quits: arza (arza@arza.us) (Ping timeout: 264 seconds)
[19:46:02] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[19:46:07] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:46:13] <Lycurgus> it looks like there was a lot of attrition on the python side channels from the state at freenode
[19:46:38] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Ping timeout: 260 seconds)
[19:46:47] <Lycurgus> drf for example
[19:47:04] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:47:08] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 252 seconds)
[19:48:12] *** Joins: arza (arza@arza.us)
[19:49:02] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[19:49:27] *** Quits: arza (arza@arza.us) (Excess Flood)
[19:50:21] *** Joins: leahey (~leahey@c-73-160-249-229.hsd1.nj.comcast.net)
[19:50:59] *** Quits: control (~v1@user/control) (Ping timeout: 252 seconds)
[19:52:12] *** Joins: arza (arza@arza.us)
[19:52:15] *** Joins: maroloccio (~marolocci@93-136-18-134.adsl.net.t-com.hr)
[19:52:24] <leahey> trying to figure out how to achieve a result in a notebook I'm looking for. I have sales info from a restaurant over a period of years, and I want to see all the minutes of the day for which there are no sales. got started here (https://bpa.st/6ZBQ) but spinning wheels now.
[19:52:55] <DnzAtWrk> uff
[19:53:04] <DnzAtWrk> can I assign to a numpy array while ignoring out of range
[19:53:25] <DnzAtWrk> data[sx:tx, sy:ty] = subdata
[19:53:36] <DnzAtWrk> when I know the ranges can be outside the array
[19:53:57] <DnzAtWrk> in which case just throw away the value
[19:54:34] *** Quits: rindolf (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 260 seconds)
[19:54:59] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[19:56:17] *** Joins: Memory (sid459764@user/memory)
[19:57:19] *** Quits: kosh (~kosh@user/kosh) (Quit: Leaving)
[19:57:55] *** Quits: hydrofire (~kolesnyk@195.66.137.40) (Read error: Connection reset by peer)
[19:58:24] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:01:09] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:02:00] *** Joins: Azin (~Azin@user/azin)
[20:02:20] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[20:02:28] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:03:32] *** Joins: sharksauce (sharksauce@user/sharksauce)
[20:03:43] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[20:04:09] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:04:33] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[20:05:16] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[20:05:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:06:05] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 246 seconds)
[20:06:08] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:10:26] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (WeeChat 3.2)
[20:10:51] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:10:56] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:11:23] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[20:14:29] *** Quits: y1n (~y1n@178.115.48.113.wireless.dyn.drei.com) (Ping timeout: 246 seconds)
[20:17:03] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:19:09] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:20:02] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[20:20:30] *** Joins: ub (~Thunderbi@178.115.37.114.wireless.dyn.drei.com)
[20:21:23] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[20:21:30] *** Joins: kosh (~kosh@user/kosh)
[20:21:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[20:21:49] *** Joins: cheater (~Username@user/cheater)
[20:22:19] *** Joins: BillyZane2 (~BillyZane@91.196.220.173)
[20:22:30] *** Quits: leahey (~leahey@c-73-160-249-229.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[20:23:10] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[20:23:52] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 252 seconds)
[20:23:54] *** Quits: BillyZane (~BillyZane@91.196.220.173) (Killed (NickServ (GHOST command used by BillyZane2)))
[20:23:55] *** BillyZane2 is now known as BillyZane
[20:25:27] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[20:26:10] <vegii> >Qt for Python (Redirected from PySide2)
[20:26:10] <vegii> what's going on here?
[20:26:31] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:27:35] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:27:46] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[20:28:56] *** Joins: besnn (~besnn@user/besnn)
[20:29:33] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[20:30:35] *** Joins: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi)
[20:30:56] *** Joins: zaquest (~notzaques@5.128.210.178)
[20:31:04] *** Quits: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi) (Client Quit)
[20:31:13] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[20:31:18] <vegii> I'm just getting started... should I use pySide6 for my first gui with just a single page of buttons and stuff, and can I expect it to work under both, windows10 and ubuntu20.04?
[20:31:47] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[20:32:12] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[20:32:13] *** Quits: GadgetNerd (GadgetNerd@user/gadgetnerd) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:32:40] *** Joins: srhm (~srhm@user/srhm)
[20:33:44] *** Quits: Azin (~Azin@user/azin) (Read error: Connection reset by peer)
[20:33:53] *** Quits: hmmmm (~sdfgsf@c-174-55-23-68.hsd1.pa.comcast.net) (Ping timeout: 252 seconds)
[20:34:45] *** Joins: Auron (~Auron956@user/auron)
[20:35:19] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[20:38:00] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[20:38:29] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[20:39:00] *** Joins: eem (~eem@200116b80f9fcf00ad45706976794fe0.dip.versatel-1u1.de)
[20:39:32] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[20:41:26] *** Quits: nbao (~nbao@187.20.16.119) (Ping timeout: 246 seconds)
[20:42:05] *** Joins: minip (~minip@user/minip)
[20:42:11] <vegii> huh, apparently gui UI designers exist
[20:42:45] <PaddyF> if you have to ask it might be too complex to get started
[20:43:04] *** Quits: chele_ (~chele@user/chele) (Remote host closed the connection)
[20:43:17] *** Joins: MercilessDeth (~brad@136.49.61.2)
[20:43:19] <vegii> seems less complex than other ways
[20:43:23] *** Joins: nbao (~nbao@187.20.16.119)
[20:43:24] *** Quits: Guddddu (~Guddu@190.84.88.92) (Read error: Connection reset by peer)
[20:43:39] <vegii> this doesn't seem to be as simple as making a shitty table layout in html
[20:43:55] <PaddyF> whatever
[20:45:55] <dude-x> is __pypackages__ supported by python?
[20:46:16] <p-i-> I'm getting "ImportError: cannot import name 'Etherscan' from 'etherscan' (/root/foo/.venv/lib/python3.9/site-packages/etherscan/__init__.py)"
[20:46:26] *** Quits: lseactuary90 (~Guest62@2a00:23c6:7e25:4901:68fa:e91c:7466:88ff) (Quit: Client closed)
[20:46:28] <p-i-> It's a single-file starlette .py
[20:46:49] <p-i-> I had it running on an AWS box, which I've managed to lose
[20:46:56] <p-i-> And I can't figure out why it's erroring
[20:47:47] <p-i-> I've done 'pip install etherscan'
[20:47:54] <p-i-> Can't think how to track this one down further
[20:48:09] *** Joins: ShinyCyril (~ShinyCyri@209.104.70.126)
[20:49:34] <dav1d> p-i-, is there an Etherscan symbol in the file? Maybe a version mismatch and you installed a too recent version?
[20:49:53] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 264 seconds)
[20:50:20] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:51:01] *** Joins: Azin (~Azin@user/azin)
[20:51:33] <dav1d> p-i-, this module https://github.com/neoctobers/etherscan never had an Etherscan symbol
[20:54:37] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:54:39] *** Quits: Azin (~Azin@user/azin) (Client Quit)
[20:54:44] *** Joins: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net)
[20:56:48] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:57:03] *** Parts: PaddyF (~PaddyF@user/paddyf) (bye)
[20:59:37] <p-i-> I've been really stupid. I modified the file on-site and didn't take a local backup.
[20:59:43] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[20:59:48] <p-i-> Wasn't expecting AWS to pull the box, but no excuse.
[21:00:07] <p-i-> I think I fixed the Etherscan issue
[21:00:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[21:01:33] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:01:56] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[21:02:09] *** Joins: fikran (~fikran@user/fikran)
[21:03:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[21:03:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[21:04:08] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:04:18] <amahl> will pip be able to ever search again? how long has xmlrpc api been disabled?
[21:05:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:05:21] *** Joins: magla (~gelignite@55d49223.access.ecotel.net)
[21:05:30] <grym> amahl: https://github.com/victorgarric/pip_search
[21:05:51] <p-i-> On my box I do `uvicorn Tracer:app` and it's running locally.  Does anyone know how I can fiddle the command so that I can put http://1.23.45.6/foo?bar=quux into chrome and hit my server?
[21:06:06] <p-i-> It might be a port mapping
[21:06:06] <amahl> grym: awesome! thanks
[21:06:11] *** Joins: Roey (~Roey@user/Roey)
[21:06:12] *** Quits: oz4ga (~tim@93.90.4.233) (Quit: ZNC 1.8.2 - https://znc.in)
[21:08:03] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:08:25] *** Joins: mickey (~user@user/mickey)
[21:08:41] *** Joins: Guddu (~Guddu@190.84.88.92)
[21:08:41] <aphysically> huh, should I really be using utf-8-sig everywhere?
[21:08:53] <aphysically> not sure where a BOM is common
[21:08:59] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[21:09:26] <SnoopJ> amahl, permanently: https://status.python.org/incidents/grk0k7sz6zkp
[21:09:31] <p-i-> ok I got it
[21:11:29] <SnoopJ> amahl, oh sorry, you asked how long it *has* been disabled. That information is available on that page, too, but my reply was addressing the first question: no, it won't be able to search that way again, that API has been dropped. There might be a new way eventually, but I haven't heard anything about that.
[21:12:04] <amahl> dumb of me to not first open the url in a web browser when I saw that in command line. sorry :/
[21:13:06] <ska> grym: they are data files, and I solved it by using pathlib and the relative path.
[21:13:25] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[21:13:25] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:14:09] <amahl> was just wondering if 'pip install thing' without checking what I'm installing is the new way of life
[21:15:08] <SnoopJ> you can certainly check, you just can't check with `pip search`
[21:15:22] *** Quits: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:15:25] *** Quits: Guddu (~Guddu@190.84.88.92) (Quit: Leaving)
[21:15:43] <grym> i learned about the existence of pip search by its demise
[21:15:44] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[21:16:03] <grym> i had always just used google/github/pypi in a browser
[21:16:04] <SnoopJ> grym, "I didn't use that anyway" is a pretty frustrating response here. A lot of people did.
[21:16:17] <grym> i'm not saying anything about its utility
[21:16:19] <SnoopJ> but yea, browsing pypi on the web is the best replacement at present
[21:16:21] <grym> just that i had no idea it existed
[21:16:28] <grym> (and probably would've used it!)
[21:17:08] *** Quits: emerent (~quassel@p200300cd574855d8ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[21:17:29] *** Quits: ShinyCyril (~ShinyCyri@209.104.70.126) (Quit: ShinyCyril)
[21:17:50] *** Joins: emerent (~quassel@p200300cd5748557cba27ebfffed28a59.dip0.t-ipconnect.de)
[21:18:39] <amahl> I used it whenever I got import error and tried to install whatever failed to import and pip said package not found
[21:19:26] <PamiPetteri> did this go right? http://paste.dy.fi/2Oj
[21:20:23] <grym> PamiPetteri: looks more or less reasonable to me; does it produce what you desired?
[21:20:24] <SnoopJ> PamiPetteri, your program is syntactically correct, your units are not (you are missing the exponent on Planck's constant)
[21:20:53] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[21:21:07] <PamiPetteri> SnoopJ: a-ha
[21:21:11] <SnoopJ> float(6.2607015) is also redundant, you can just write 6.2607015 which is already a float
[21:21:26] <SnoopJ> but you probably want 6.2607015e-34 to get the units your messages use :)
[21:21:31] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:22:49] <PamiPetteri> SnoopJ: thanks
[21:23:57] *** Joins: Guddu (~Guddu@190.84.88.92)
[21:24:44] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:25:01] <SnoopJ> PamiPetteri, you might find this library helpful for keeping track of this kind of thing: https://pint.readthedocs.io/en/stable/
[21:26:14] *** Joins: chamgry (~chamgry@67.red-83-60-111.dynamicip.rima-tde.net)
[21:26:21] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[21:26:59] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[21:27:31] *** Joins: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter)
[21:29:05] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[21:29:13] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[21:29:30] *** Joins: Praeceps (~Praeceps@82.129.92.70)
[21:31:23] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[21:31:29] *** Quits: chamgry (~chamgry@67.red-83-60-111.dynamicip.rima-tde.net) (Quit: WeeChat 2.8)
[21:31:45] *** Joins: chamgry (~chamgry@67.red-83-60-111.dynamicip.rima-tde.net)
[21:31:50] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:32:11] *** Joins: mickey (~user@user/mickey)
[21:32:39] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[21:32:40] <Praeceps> Hey all, I'm attempting to decorate a class method with a class style decorator, however __call__ doesn't appear to get passed the calling instance of the class, does anyone have any ideas where I'm going wrong and how to correct it
[21:32:44] <Praeceps> https://bpa.st/TILQ
[21:33:15] <Praeceps> My gut feeling is that there can only be one self, so the decorator class is overwriting the instance method but I have no idea how to fix that
[21:33:56] *** Joins: nomic (~nomic@185.217.117.126)
[21:34:00] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[21:34:22] *** Quits: chamgry (~chamgry@67.red-83-60-111.dynamicip.rima-tde.net) (Changing host)
[21:34:22] *** Joins: chamgry (~chamgry@user/chamgry)
[21:34:37] *** Quits: chamgry (~chamgry@user/chamgry) (Client Quit)
[21:34:53] *** Joins: chamgry (~chamgry@user/chamgry)
[21:35:10] *** Quits: benjwadams (~benjwadam@96.238.4.28) (Quit: Client closed)
[21:35:12] *** Joins: con3 (~con3@2604:a880:4:1d0::be:d000)
[21:37:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:37:53] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[21:39:32] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 246 seconds)
[21:39:34] *** Quits: nomic (~nomic@185.217.117.126) (Quit: Leaving)
[21:41:21] *** Joins: c4017w (~c4017@209.52.68.8)
[21:41:29] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[21:42:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:43:02] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[21:43:18] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 260 seconds)
[21:44:14] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[21:44:40] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[21:46:45] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[21:46:53] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 264 seconds)
[21:47:25] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[21:47:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[21:47:46] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:47:58] *** Quits: m4r35n357 (~m4r35n357@host-92-20-120-36.as13285.net) (Quit: Leaving)
[21:49:49] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[21:50:29] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[21:52:32] <Praeceps> Managed to stack overflow myself a solution despite failing earlier ^_^
[21:53:06] *** Quits: Praeceps (~Praeceps@82.129.92.70) (Quit: Leaving)
[21:55:16] *** Joins: greedom (~greedom@2001:16b8:2eff:1500:7637:6d46:32fe:3093)
[21:55:40] <Samian> Which variable name do you like better? "lazy_objs" or "ad_hoc_objs" ?  Ad hoc and lazy mean the same thing right?  You know.. lazy evaluation or lazy instantiation?
[21:56:37] *** Joins: badsektor (~badsektor@user/badsektor)
[21:56:50] <Gustavo6046> so I have this library that has multiple network implementations (IRC, Discord and soon enough XMPP). I had no idea how to test them, but I think I have an idea... but I want your thoughts on it
[21:57:41] <Gustavo6046> a) For each protocol, make a "dummy" implementation of a 'server' (that takes in client stuff and responds server stuff in a deterministic way, without necessarily being over the network)
[21:58:07] <Gustavo6046> b) Make tests to ensure those implementations work as expected, e.g. that DummyIrcServer has basic channel support, etc
[21:58:23] <Gustavo6046> c) Make tests on the clients, passing those dummy implementations as targets rather than a network address.
[21:58:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:59:07] <Gustavo6046> Of course this won't be possible for Discord and I STILL have no idea how to test that, other than, I dunno, a server made specifically to test my library on (Triarc, by the way).
[21:59:59] *** Quits: greedom (~greedom@2001:16b8:2eff:1500:7637:6d46:32fe:3093) (Remote host closed the connection)
[22:00:47] *** Joins: greedom (~greedom@2001:16b8:2eff:1500:7637:6d46:32fe:3093)
[22:00:54] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[22:00:57] *** Quits: greedom (~greedom@2001:16b8:2eff:1500:7637:6d46:32fe:3093) (Remote host closed the connection)
[22:03:45] <purplex> any shortcut to get the list [a,b,c,d] from [[a,1], [b,2], [c,3], [d, 4]]?
[22:05:02] *** Joins: botfather (~botfather@shell2.dds.nl)
[22:05:14] <grym> purplex: it's not a shortcut: [x[0] for x in [[a,1], [b,2], [c,3], [d, 4]]]
[22:05:40] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 252 seconds)
[22:06:02] *** Quits: Guddu (~Guddu@190.84.88.92) (Read error: Connection reset by peer)
[22:06:49] <sveinse> Windows is weird some times. I didn't get pip to build package cause it couldn't find VC++. Then I got a windows update and a reboot and now it works...
[22:07:21] <purplex> seems good, thanks i also needed numbers too, so i guess its looping and creating new, grym?
[22:07:37] <grym> purplex: no idea what you mean, sorry
[22:07:52] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[22:08:19] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:08:23] <purplex> i mean does it use same memory from original list or, creates completely new?
[22:08:29] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 252 seconds)
[22:08:34] *** Joins: thiras (~thiras@user/thiras)
[22:08:50] <purplex> i used to know this stuff, a bit of practice
[22:08:55] <purplex> out^
[22:09:09] <grym> comprehensions make a new list
[22:11:44] <Samian> Suppose you have a bunch of if this, then sys.exit, if that then sys.exit.   Would you use if .... if... if.... if... ? or if .... elif .... elif... elif... ?
[22:12:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:12:43] <Samian> the code path is the same either way. It's a question about what looks more professional I guess
[22:12:44] *** Joins: paul424 (~tom@ip-31-0-123-190.multi.internet.cyfrowypolsat.pl)
[22:13:16] *** Joins: voltron (~voltrin_@ip5f5994c9.dynamic.kabel-deutschland.de)
[22:13:29] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[22:13:53] <paul424> what does m[-1][-1] for a list of list ( matrix) mean ?
[22:14:00] <jinsun> purplex: if you want both values and numbers and 2 list comps are too obvious you can do `[*values], [*numbers] = zip(*[[a,1], [b,2], [c,3], [d, 4]])`
[22:14:19] *** Joins: irrgit (~irrgit@192.241.175.183)
[22:14:27] <dude-x> paul424 last item of the list in the list (the corner of a matrix)
[22:14:30] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[22:14:39] <paul424> oki thanks
[22:14:48] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[22:15:42] *** Joins: Elodin (~weechat@user/elodin)
[22:15:42] *** Joins: oz4ga (~tim@93.90.4.233)
[22:17:02] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:17:31] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[22:18:19] *** Joins: white_magic (~white_mag@2600:1700:6ae2:a20:69ac:78b1:ef00:ebf1)
[22:18:21] <purplex> i see, thanks
[22:18:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[22:18:59] *** Quits: botfather (~botfather@shell2.dds.nl) (Quit: -)
[22:19:27] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:19:46] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[22:19:47] *** Joins: botfather (~botfather@shell2.dds.nl)
[22:20:03] <DocMors> Samian, the function is also very different. The first version allows for multiple macthes the second not.
[22:20:25] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[22:23:17] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Quit: Leaving)
[22:23:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[22:24:05] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 268 seconds)
[22:25:16] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[22:25:54] *** Joins: sudomann (~sudomann@86.106.143.76)
[22:26:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[22:26:16] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:28:24] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[22:29:20] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[22:29:30] *** Quits: sudomannn (~sudomann@2601:543:100:2e3:428:ad1b:5280:1916) (Ping timeout: 260 seconds)
[22:31:34] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[22:31:48] *** Quits: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com) ()
[22:32:40] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[22:32:56] *** Joins: spithash (~spithash@user/spithash)
[22:33:27] *** Parts: ShArkZ (sharkz@user/sharkz) ()
[22:33:51] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:37:59] <trace987> I can not install something with pip
[22:38:00] <trace987> pip3 install PyHyphen --user
[22:38:00] <trace987> Collecting PyHyphen
[22:38:00] <trace987>   Using cached PyHyphen-4.0.1.tar.gz (34 kB)
[22:38:00] <trace987> Requirement already satisfied: appdirs in /usr/lib/python3.9/site-packages (from PyHyphen) (1.4.4)
[22:38:00] <trace987> Requirement already satisfied: requests in /usr/lib/python3.9/site-packages (from PyHyphen) (2.26.0)
[22:38:00] *** litharge sets mode: +q $a:trace
[22:38:17] *** Parts: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) ()
[22:38:30] *** litharge sets mode: -q $a:trace
[22:38:41] *** Joins: ub1 (~Thunderbi@178.115.76.102.wireless.dyn.drei.com)
[22:39:16] *** Quits: nbao (~nbao@187.20.16.119) (Quit: leaving)
[22:39:22] *** ub1 is now known as ubert
[22:39:43] <grym> that package appears to be just broken
[22:39:55] <grym> `ImportError: cannot import name 'hnj' from partially initialized module 'hyphen' (most likely due to a circular import) (/tmp/pip-install-9cyfd145/PyHyphen/src/hyphen/__init__.py)`
[22:40:15] *** Quits: adder (~adder@user/adder) (Quit: Leaving)
[22:40:33] *** Joins: vimart (~vimart@185.69.144.144)
[22:40:53] *** Quits: ub (~Thunderbi@178.115.37.114.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[22:40:56] <white_magic> Greetings. Can someone advise on how to populate a db when using FastAPI - without using a frontend? I could have a 'loader.py' type of script that does something like " new obj = {....};       db.add(new_obj);         db.commit();        db.save()". Is that my only real choice?
[22:41:05] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:41:23] <white_magic> The  API part would be primarily for viewing the data
[22:41:32] *** Joins: nomic (~nomic@185.217.117.173)
[22:41:48] <sco1> grym: works fine for me
[22:42:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[22:43:03] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:43:27] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:45:41] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 246 seconds)
[22:46:15] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:7ba2:5fb7:3b5b:5ca) (Quit: Client closed)
[22:46:17] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[22:46:26] *** Quits: pro_z (~pro_z@37.214.44.116) (Ping timeout: 252 seconds)
[22:48:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:49:23] *** Joins: bhoman (~bhoman@pool-74-102-26-111.nwrknj.fios.verizon.net)
[22:49:38] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:52:40] *** Quits: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net) (Remote host closed the connection)
[22:53:04] *** Joins: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net)
[22:53:12] *** Joins: semeion (~semeion@user/semeion)
[22:54:38] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:54:54] *** Quits: eem (~eem@200116b80f9fcf00ad45706976794fe0.dip.versatel-1u1.de) (Quit: WeeChat 3.3)
[22:55:04] *** Joins: Naan (~naan@user/naan)
[22:55:16] *** Joins: eem (~eem@200116b80f9fcf00ad45706976794fe0.dip.versatel-1u1.de)
[22:55:26] <grym> white_magic: frontend in what sense
[22:55:43] <white_magic> grym: I mean a javascript frontend.
[22:55:51] <grym> white_magic: fastAPI takes POST data just fine
[22:56:12] *** Joins: nanook (~nanook@137.184.104.247)
[22:56:33] <grym> so you could have a headless endpoint that ingests things given to it into a database
[22:56:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:56:52] <grym> how you give it those things is in some sense not fastAPI's concern
[22:57:04] <white_magic> grym: as I understand it, with a FastAPI project, you just run an uvicorn instance and then it listens to http requests. The logic is typically implemented such that there is typically a single .py file that has all the REST endpoints logic
[22:57:24] <white_magic> there is not typically a greater layer of abstraction than that
[22:57:25] <grym> (if your clients give you well-formatted requests, who cares if your client is curl or wget or requests or chrome or firefox or ...)
[22:57:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:57:45] *** Joins: jpic (~jpic@82.142.3.250)
[22:58:16] <grym> white_magic: i typically have a `my_real_package.api` package that has the fastAPI app and some models in it
[22:58:21] <white_magic> grym: what would be ideal for me is to use Python to populate the database - not just initially, but on a regular basis. Using CURL or such to populate it is a bit of busywork
[22:58:36] <grym> endpoints in there reach out into the package and do ... wahtever
[22:58:49] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[22:59:27] <grym> white_magic: sure, you could have some other python package that uses httpx or requests or something to chuck data at this fastAPI endpoint that inserts stuff into a database
[22:59:31] *** Joins: pycode (~pycode@2001:b07:5d28:551:2be5:d944:de9b:a86c)
[22:59:31] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[23:00:34] <white_magic> grym: can you explain this further: "endpoints in there reach out into the package"? Endpoints in `my_real_package.api` reach into that same package?
[23:00:37] *** Joins: hendursa1 (~weechat@user/hendursaga)
[23:00:51] *** Quits: nomic (~nomic@185.217.117.173) (Quit: Leaving)
[23:00:57] <grym> white_magic: yeah, so myrealpackage.api will import myrealpackage.dothework or whatever
[23:01:08] *** Joins: lerax (~user@177-104-241-177.gbsn.com.br)
[23:01:09] <white_magic> seems like inception
[23:01:11] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:01:17] <grym> no, seems like a CLI interface spelled weirdly
[23:01:19] <grym> :)
[23:01:20] *** Quits: chamgry (~chamgry@user/chamgry) (Quit: WeeChat 2.8)
[23:01:32] <Henry151> there's a lot of stuff in computer-world that seems like inception
[23:01:37] <grym> i treat rest APIs and command line APIs as being semantically if not identical than very very close
[23:01:59] <grym> but functions inside a project get to call each other and that's not very inception-y, that's just business as usual
[23:02:00] <white_magic> grym: I was confused but I think I got it.. myrealpackage.api is a distinct .py file from myrealpackage.dothework?
[23:02:13] <grym> white_magic: it's three py files, actually, but yes
[23:02:26] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:02:34] <white_magic> oh got it.. I was thinking package == module, but that's not the case
[23:02:41] <grym> package == directory of modules
[23:02:48] <grym> (with an __init__.py being one of them)
[23:02:50] <white_magic> makes sense!
[23:02:56] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[23:03:09] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[23:03:12] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2.1)
[23:03:48] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[23:04:36] <white_magic> grym: are there any good code examples of the approach you mentioned? Almost all the FastAPI code samples out there are much more basic than that. They're much more coupled.
[23:05:35] <grym> white_magic: i can't think of any offhand that aren't absurdly proprietary (ie, the ones i've written, unfortunately)
[23:05:40] *** Gustavo6046_ is now known as Gustavo6046
[23:07:13] <grym> but to my weird head at least, having an api.py that defines endpoints is ~ the same as having a cli.py that defines entry points
[23:07:17] <white_magic> grym: that makes the httpx approach an appealing alternative.. is it common to use httpx to populate a db? That allows for using API endpoints exclusively (and removes the need for abstracting the code a bit further in the other way we discussed)
[23:07:36] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[23:07:42] <grym> both are ways to expose the guts of your business logic to the outside world, at a chokepoint where you can see if the user is insane or not before proceeding
[23:07:44] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[23:08:50] <veegee> Hi guys, I remember there being a tool that scans an existing python project and generates a list of explicit (not transitive) dependencies
[23:08:56] <veegee> I forgot what it was, was it pipenv? '
[23:09:16] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:09:37] <grym> veegee: pipdeptree
[23:10:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:10:57] *** Joins: Betal (~Betal@user/betal)
[23:11:59] *** Joins: fikran (~fikran@user/fikran)
[23:13:28] <veegee> grym thanks
[23:14:41] <veegee> grym ah yeah pip-tools, now I remember
[23:15:17] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[23:15:28] *** Quits: lerax (~user@177-104-241-177.gbsn.com.br) (Remote host closed the connection)
[23:15:59] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[23:16:06] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[23:16:10] *** Joins: Akuli (~Akuli@82-203-162-216.bb.dnainternet.fi)
[23:16:44] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[23:16:49] <MrBurns> EtherNet: I have uncommented the clientKeepAlive row but vscode still disconnects from PI every 10 minutes or so
[23:17:58] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[23:19:36] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[23:21:18] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 260 seconds)
[23:21:25] *** Quits: bninja (~bloodninj@user/bloodninja) (Ping timeout: 265 seconds)
[23:21:50] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[23:22:23] *** Quits: ubert (~Thunderbi@178.115.76.102.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[23:22:36] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[23:23:47] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[23:26:22] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[23:26:35] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[23:27:18] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:27:47] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[23:28:46] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 260 seconds)
[23:29:20] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[23:29:47] *** Quits: nips (~nips@abv84.internetdsl.tpnet.pl) (Ping timeout: 246 seconds)
[23:29:55] *** Joins: nips_ (~nips@abv84.internetdsl.tpnet.pl)
[23:30:21] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:30:54] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[23:31:25] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:32:26] *** Joins: semeion (~semeion@user/semeion)
[23:32:35] *** Joins: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f)
[23:32:59] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[23:33:37] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[23:34:35] *** Joins: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com)
[23:34:36] *** Quits: paul424 (~tom@ip-31-0-123-190.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:34:47] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:35:44] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Quit: Leaving)
[23:36:46] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:38:06] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Read error: Connection reset by peer)
[23:38:08] *** Quits: Jefren (~Jefren@70.35.66.82) (Ping timeout: 252 seconds)
[23:40:10] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[23:40:14] *** Joins: Jefren (~Jefren@70.35.67.186)
[23:41:47] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[23:43:51] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[23:43:58] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[23:44:45] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[23:45:04] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:46] *** Joins: bninja (~bloodninj@user/bloodninja)
[23:46:16] *** Quits: voltron (~voltrin_@ip5f5994c9.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:47:16] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[23:47:42] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[23:49:37] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Ping timeout: 252 seconds)
[23:49:48] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 268 seconds)
[23:49:58] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[23:50:57] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:53:42] *** Joins: zeden (~zeden@user/zeden)
[23:53:59] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5471:91b3:893d:7d7d)
[23:54:09] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:54:10] <SamuelMarks> hi
[23:54:35] <SamuelMarks> How do I get type errors on 3.9? - Attempt: `from typing import Optional, Literal; a: Optional[Literal[True]] = 5`
[23:54:46] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 265 seconds)
[23:55:15] *** Quits: junktext (~junktext@77.247.181.215) (Ping timeout: 265 seconds)
[23:55:20] *** Quits: Jefren (~Jefren@70.35.67.186) (Ping timeout: 246 seconds)
[23:55:33] * SamuelMarks compared TypeScript `const a: true = false` gives "error TS2322: Type 'false' is not assignable to type 'true'."
[23:55:44] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[23:55:56] <ssbr> SamuelMarks: you need to run a type checker such as mypy or pytype
[23:56:17] *** Joins: ckdCreations (~ckdCreati@147.55.130.34)
[23:56:37] <SnoopJ> SamuelMarks, type annotations are just that: annotations. The runtime does not care about them except that it will store them, and some other tool (like mypy) can use them to do something useful.
[23:56:46] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[23:56:47] <SamuelMarks> ah gotcha
[23:56:49] <ssbr> SamuelMarks: Python is sort of like if JavaScript adopted TypeScript type annotations but didn't do anything: the equivalent to TypeScript is actually "Python + mypy" or "Python + pytype"
[23:56:59] <SamuelMarks> I usually use an IDE for this sort of thing, been spoiled
[23:57:00] <ssbr> it's still nice because now we can have multiple type checkers
[23:57:07] *** Quits: lessless (~lessless@ip.82.144.211.11.stat.volia.net) (Ping timeout: 240 seconds)
[23:57:37] <SamuelMarks> yep, sweet
[23:57:51] <SnoopJ> If you want static analysis to catch typing errors, mypy is quite good. I also hear good things about pytype
[23:58:04] *** Joins: Jefren (~Jefren@70.35.66.152)
[23:58:05] <SamuelMarks> I'm annoyed that I need to add a new CLI arg to almost all my subcommands on my AST manipulator
[23:58:12] <SamuelMarks> (to disable word-wrap)
[23:59:11] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[23:59:28] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5471:91b3:893d:7d7d) (Quit: Leaving)
