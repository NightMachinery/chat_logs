[00:00:37] *** Quits: nsol8 (~nsol@187.155.17.209) (Ping timeout: 240 seconds)
[00:03:35] *** Joins: nsol8 (~nsol@187.155.17.209)
[00:05:32] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[00:08:27] *** Quits: jacky (~jacky@user/jackyalcine) (Ping timeout: 256 seconds)
[00:12:08] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[00:13:10] *** Joins: stochasticbear[m (~stochasti@2001:470:69fc:105::1:de72)
[00:14:08] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[00:19:21] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[00:26:07] *** Quits: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Quit: Konversation terminated!)
[00:27:41] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[00:27:43] *** Quits: DibbTubberOne (~DibbDibbe@2a02:908:956:3ce0::3747) (Quit: Leaving)
[00:28:54] *** Joins: reenii[m] (~reeniikde@2001:470:69fc:105::1:6292)
[00:31:00] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[00:34:42] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 252 seconds)
[00:35:29] *** Joins: cliluw (~cliluw@47.147.77.43)
[00:40:24] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[00:43:44] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[00:44:35] *** Joins: will[m] (~will256k1@2001:470:69fc:105::1:c825)
[00:50:13] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:12:07] *** Joins: kita99 (~woooopsie@dsl-79-30.bl27.telepac.pt)
[01:14:32] *** Quits: PaterTemporalis (~woooopsie@bl21-200-69.dsl.telepac.pt) (Ping timeout: 240 seconds)
[01:19:05] *** Quits: zgcarvalho (~zgcarvalh@vpn.cnpem.br) (Quit: Client closed)
[01:21:52] *** Joins: jacky (~jacky@user/jackyalcine)
[01:39:56] *** Joins: pgr (~pgr@37.120.156.247)
[01:54:36] *** Quits: anihm (~anihm136@58.80.247.35.bc.googleusercontent.com) (Ping timeout: 272 seconds)
[01:55:01] *** Joins: anihm136 (~anihm136@58.80.247.35.bc.googleusercontent.com)
[01:55:12] *** Joins: pgr_ (~pgr@185.244.214.60)
[01:57:24] *** Quits: pgr (~pgr@37.120.156.247) (Ping timeout: 240 seconds)
[01:58:30] *** pgr_ is now known as pgr
[02:22:04] *** Quits: pgr (~pgr@185.244.214.60) (Quit: leaving)
[02:22:26] <smolck> <frontdoor24[m]> "no help im leaving" <- hey don't hurt nvim-bot's feelings
[02:30:47] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:32:23] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[02:38:38] *** Joins: flask_[m] (~flaskmatr@2001:470:69fc:105::1:de8e)
[02:42:41] *** Joins: yhnujmikV (~yhnujmikV@185.65.135.237)
[02:43:32] *** Joins: bootlegbilly[m] (~bootlegbi@2001:470:69fc:105::1:cab0)
[02:43:36] *** Quits: yhnujmikV (~yhnujmikV@185.65.135.237) (Client Quit)
[02:43:49] <bootlegbilly[m]> Hey everyone
[02:43:54] *** Joins: yhnujmikV (~yhnujmikV@185.65.135.237)
[02:44:28] <bootlegbilly[m]> I've been trying to find a way of remotely developging with Neovim, but have yet to find a good way of doing so
[02:44:45] <bootlegbilly[m]> I'm thinking a plugin similiar to VSCode's CodeShare or Intellij's CodeWithMe
[02:45:00] <bootlegbilly[m]> Like being able to edit remotely in real time and see each other's cursors, stuff like that
[02:47:09] <mjlbach[m]> remote editing is different than codeshare
[02:47:17] <bootlegbilly[m]> How so?
[02:47:33] <mjlbach[m]> I mean, they are just separate systems
[02:47:40] <bootlegbilly[m]> Oh okay
[02:47:45] <bootlegbilly[m]> I generally mean codeshare then
[02:47:48] <mjlbach[m]> codeshare uses an external microsoft server to do syncronization, usually with crdt
[02:47:52] <bootlegbilly[m]> Oh
[02:47:53] <bootlegbilly[m]> Huh
[02:48:06] <mjlbach[m]> For codeshare
[02:48:07] <mjlbach[m]> https://github.com/jbyuki/instant.nvim
[02:48:08] <bootlegbilly[m]> I mean i'd honestly be fine with that to (though a form of self hosted solution would definetly be better)
[02:48:17] <mjlbach[m]> for remote editing
[02:48:18] <mjlbach[m]> https://github.com/chipsenkbeil/distant.nvim
[02:51:16] *** Quits: yhnujmikV (~yhnujmikV@185.65.135.237) (Quit: WeeChat 3.4.1)
[02:51:32] *** Quits: cottoneyejim (~cottoneye@2a01:261:337:5700:ea6a:64ff:fe4f:b643) (Ping timeout: 240 seconds)
[02:51:36] *** Joins: yhnujmikV (~yhnujmikV@185.65.135.237)
[02:52:31] *** Quits: yhnujmikV (~yhnujmikV@185.65.135.237) (Client Quit)
[02:53:09] *** Joins: yhnujmikV (~yhnujmikV@185.65.135.237)
[02:53:19] *** Joins: k8yun__ (~k8yun@user/k8yun)
[02:56:19] *** Joins: ChipSenkbeil[m] (~chipsenkb@2001:470:69fc:105::eedf)
[02:56:19] <ChipSenkbeil[m]> As a heads up, distant.nvim will be having an update to 0.2 in the coming weeks that will introduce remote terminals and other goodies.
[02:56:19] <ChipSenkbeil[m]> No plans for collaborative editing at the moment along the lines of instant, though. 
[02:56:45] <bootlegbilly[m]> instant.nvim does seem to hav ea lag issue
[02:56:46] <bootlegbilly[m]> On localhost
[02:57:02] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[02:57:20] *** Quits: k8yun__ (~k8yun@user/k8yun) (Remote host closed the connection)
[02:57:45] *** Joins: k8yun__ (~k8yun@user/k8yun)
[02:58:42] <bootlegbilly[m]> Oh nevermind
[02:58:49] <bootlegbilly[m]> I had to do the follow thign
[03:00:27] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 252 seconds)
[03:01:14] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:04:00] *** Quits: flupe (~baboum@radon.sbi.re) (Remote host closed the connection)
[03:04:22] *** Quits: yhnujmikV (~yhnujmikV@185.65.135.237) (Quit: WeeChat 3.4.1)
[03:05:35] *** Quits: k8yun__ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[03:07:41] *** Quits: k8yun_ (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[03:08:07] *** Joins: flupe (~baboum@radon.sbi.re)
[03:08:11] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:15:49] *** Joins: snowyforest (~bluestar@snowglobe.student.rit.edu)
[03:21:43] *** Joins: comand[m] (~comandmat@2001:470:69fc:105::1:de9b)
[03:23:09] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[03:31:28] *** Quits: guido (~weechat@host-95-234-21-46.retail.telecomitalia.it) (Quit: WeeChat 3.4.1)
[04:04:23] <smolck> <bootlegbilly[m]> "instant.nvim does seem to hav ea..." <- the irony!
[04:05:26] <bootlegbilly[m]> smolck: ?
[04:10:37] <smolck> <bootlegbilly[m]> "?" <- dumb joke
[04:11:29] <smolck> was also going to make a joke about distant.nvim having an update in the (not too) distant future, but I refrained
[04:15:04] *** Joins: relmnight[m] (~relmnight@2001:470:69fc:105::f982)
[04:15:17] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[04:15:45] <bootlegbilly[m]> Ohhh i get it now
[04:54:02] *** Quits: ublx (~ublx@user/ublx) (Ping timeout: 240 seconds)
[04:54:21] *** Joins: ublx (~ublx@user/ublx)
[04:55:12] *** Quits: jacky (~jacky@user/jackyalcine) (Quit: Iridium IRC Client)
[04:55:28] *** Joins: jacky (~jacky@47.202.64.169)
[04:55:28] *** Quits: jacky (~jacky@47.202.64.169) (Changing host)
[04:55:28] *** Joins: jacky (~jacky@user/jackyalcine)
[04:58:21] *** Joins: rgrinberg (~textual@177.241.245.222)
[05:23:33] <baltazar> hi! do you know if it's possible to configure typescript-language-server to emit warnings/errors in vanilla js? I see that it recognises jsdoc comments, but it seems to silently ignore type conflicts
[05:29:02] *** Quits: kita99 (~woooopsie@dsl-79-30.bl27.telepac.pt) (Ping timeout: 240 seconds)
[05:34:49] *** Quits: jacky (~jacky@user/jackyalcine) (Quit: Iridium IRC Client)
[05:34:59] *** Joins: jacky (~jacky@47.202.64.169)
[05:34:59] *** Quits: jacky (~jacky@47.202.64.169) (Changing host)
[05:34:59] *** Joins: jacky (~jacky@user/jackyalcine)
[05:40:10] *** Quits: marcus (~marcus@mojo/viking/marcus) (Read error: Connection reset by peer)
[05:40:45] *** Joins: marcus (~marcus@mojo/viking/marcus)
[05:48:55] *** Joins: Ox000 (~jy@74.215.11.197)
[05:49:31] *** Quits: Ox000 (~jy@74.215.11.197) (Client Quit)
[05:50:45] *** Joins: arch-angel (~arch-ange@user/arch-angel)
[05:51:25] <baltazar> ah, I think I found it. gotta set `checkJs` in jsconfig.json
[05:56:28] *** Joins: Vesryn (~vesryn@user/vesryn)
[05:57:15] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[06:07:22] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[06:15:28] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[06:24:12] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[06:26:37] *** Joins: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net)
[06:27:58] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[06:35:17] *** Quits: rgrinberg (~textual@177.241.245.222) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:43:11] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[06:46:29] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:47:57] *** Joins: utraciss (~utraciss@2001:e68:443c:e8b3:ab7d:dc46:1627:191f)
[06:55:29] *** Joins: k8yun_ (~k8yun@user/k8yun)
[06:56:02] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:58:04] *** Joins: k8yun__ (~k8yun@user/k8yun)
[07:01:54] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 252 seconds)
[07:10:17] *** Joins: moncheeta[m] (~moncheeta@2001:470:69fc:105::1:dec1)
[07:25:47] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[07:30:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[07:33:10] *** Quits: riposte (~finalripo@2403-5802-74-2--2000.ip6.aussiebb.net) (Quit: Quitting)
[07:35:57] *** Joins: riposte (~finalripo@2403-5802-74-2--2000.ip6.aussiebb.net)
[08:12:05] *** Joins: zostj (~rue@61-231-129-157.dynamic-ip.hinet.net)
[08:21:06] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:30:54] *** Quits: jacky (~jacky@user/jackyalcine) (Ping timeout: 250 seconds)
[08:33:46] *** Quits: snowyforest (~bluestar@snowglobe.student.rit.edu) (Quit: Konversation terminated!)
[08:34:07] *** Joins: neo1 (~neo@103.144.161.5)
[08:52:44] *** Quits: dmc (~dmc@archlinux/trusteduser/polyzen) (Quit: WeeChat 3.4)
[08:53:10] *** Joins: dmc (~dmc@archlinux/trusteduser/polyzen)
[09:07:21] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[09:15:22] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[09:15:40] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[09:30:31] *** Quits: k8yun__ (~k8yun@user/k8yun) (Quit: Leaving)
[09:41:59] *** Quits: neo1 (~neo@103.144.161.5) (Quit: WeeChat 3.4)
[09:56:42] *** Joins: rgrinberg (~textual@177.241.245.222)
[10:00:19] *** Joins: mono[m] (~monoe1mat@2001:470:69fc:105::1:750f)
[10:10:53] *** Joins: debabrata (~debabrata@116.193.129.25)
[10:22:29] *** Joins: Shih-MingWang[m] (~ipod825ma@2001:470:69fc:105::1:ded2)
[10:26:07] *** Quits: wallsY (~weechat@user/wallsY) (Ping timeout: 256 seconds)
[10:26:31] *** Quits: debabrata (~debabrata@116.193.129.25) (Quit: Leaving)
[10:28:01] <Shih-MingWang[m]> Is there a way/API to open a file asynchronously in a buffer?
[10:28:01] <Shih-MingWang[m]> `nvim_create_buf`can create a buffer, which you can manipulate the content with `nvim_buf_set_lines` from a channel/shell command output.
[10:28:01] <Shih-MingWang[m]> If we just want to display the file content, the command can be `cat file_path`. But if we want to associate the created buffer with a file (i.e., `:w` on the buffer would save the file to the disk), there seems to be no way but `:edit`, which is inherently non-asynchronous.
[10:35:15] *** Quits: rgrinberg (~textual@177.241.245.222) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:37:57] *** Joins: guido (~weechat@host-87-2-199-44.retail.telecomitalia.it)
[10:52:13] *** Quits: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[10:52:45] *** Joins: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net)
[10:54:53] <Shih-MingWang[m]> Oh, I think `nvim_buf_set_name` should be the solution to associate a buffer to a real file.
[10:55:42] *** Joins: azed (~azed@197.23.130.142)
[11:00:49] <coloneljohnby[m]> hello. is there any way for neovim to detect that it's opening a binary (not text file, like an executable file)?
[11:02:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[11:04:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:12:52] *** Joins: Ziyan (~ziyan@112.134.174.203)
[11:13:12] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:21:38] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[11:44:45] *** Joins: neo1 (~neo@103.144.161.10)
[11:48:23] *** Quits: hamess (~hamess@user/hamess) (Quit: **BRB** dyed my hair bLacK. Mom got so mad lol)
[11:49:55] *** Quits: azed (~azed@197.23.130.142) (Read error: Connection reset by peer)
[11:51:46] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Quit: WeeChat 3.4)
[11:52:02] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[11:53:46] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[11:56:01] <M-elo-[m]> I always assumed that it would behave the same way as if you were to `less` on a binary file.. TIL
[12:01:53] <dagle> Shih-MingWang[m]: Look at plenary and plenary/jobs if you want to run async jobs in neovim. Also you can use luv under vim.loop https://github.com/luvit/luv/blob/master/docs.md
[12:02:18] *** Joins: flakusha[m] (~flakusham@2001:470:69fc:105::1:dedf)
[12:15:00] *** Joins: hamess (~hamess@user/hamess)
[12:16:03] *** Quits: louipc (~louipc@archlinux/fellow/louipc) (Remote host closed the connection)
[12:16:23] *** Quits: hamess (~hamess@user/hamess) (Client Quit)
[12:17:23] *** Joins: louipc (~louipc@archlinux/fellow/louipc)
[12:18:28] *** Joins: hamess (~hamess@user/hamess)
[12:28:17] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[12:29:00] *** Joins: iomari891 (~iomari891@197.210.53.48)
[12:30:05] *** Quits: dekeract (~dekeract@2001:470:69fc:105::16a5) (Quit: You have been kicked for being idle)
[12:30:14] *** Quits: fenuks[m] (~fenuksmat@2001:470:69fc:105::ba90) (Quit: You have been kicked for being idle)
[12:30:15] *** Quits: gnarwhal[m] (~gnarwhalm@2001:470:69fc:105::1:aadc) (Quit: You have been kicked for being idle)
[12:30:15] *** Quits: hab[m] (~hab0matri@2001:470:69fc:105::ef40) (Quit: You have been kicked for being idle)
[12:30:15] *** Quits: anihm136[m] (~anihm136m@2001:470:69fc:105::39ae) (Quit: You have been kicked for being idle)
[12:30:15] *** Quits: cryingonionx[m] (~cryingoni@2001:470:69fc:105::1:c175) (Quit: You have been kicked for being idle)
[12:30:15] *** Quits: simple_user[m] (~simpleuse@2001:470:69fc:105::1:c180) (Quit: You have been kicked for being idle)
[12:30:16] *** Quits: fhof[m] (~fhofmatri@2001:470:69fc:105::1:c114) (Quit: You have been kicked for being idle)
[12:34:21] *** Quits: neo1 (~neo@103.144.161.10) (Quit: WeeChat 3.4)
[12:36:25] *** Joins: rcesptro (~rcesptro@2001:448a:50e0:23e8:13a7:403a:9cb5:bf8e)
[12:50:27] *** Quits: Ziyan (~ziyan@112.134.174.203) (Quit: Textual IRC Client: www.textualapp.com)
[13:01:40] *** Quits: rcesptro (~rcesptro@2001:448a:50e0:23e8:13a7:403a:9cb5:bf8e) (Excess Flood)
[13:05:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:19:34] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[13:21:13] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:24:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:34:27] <b0o> Is there a way with lspconfig that I can disable cssls if tailwindcss language server's root_dir pattern matches? I don't want cssls to run if tailwindcss is enabled.
[13:34:45] <b0o> But I still want cssls if tailwind isn't detected
[13:45:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[13:46:17] <mjlbach[m]> Nope
[13:51:42] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:58:06] <b0o> Darn. Another questions, do the language servers in hrsh7th/vscode-langservers-extracted respect the .vscode/settings.json file, like the "css.customData" property?
[13:58:11] *** Joins: crashrep (~crashrep@user/crashrep)
[13:59:33] <b0o> If I can't conditionally disable cssls, I want to at least ignore warnings related to tailwind at-directives. I found some info on how to do this in vcode using a css_custom_data.json file but not sure how to get this working in neovim
[13:59:51] <b0o> s/vcode/vscode
[14:06:34] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:08:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:09:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:10:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:10:57] *** Quits: zostj (~rue@61-231-129-157.dynamic-ip.hinet.net) (Quit: WeeChat 3.4.1)
[14:10:57] <b0o> I guess for now I will just set cssls `settings.css.validate` to false.
[14:16:07] *** Quits: alerque (~caleb@2a01:4f8:150:6366::2) (Quit: WeeChat 3.4.1)
[14:17:20] *** Joins: alerque (~caleb@2a01:4f8:150:6366::2)
[14:34:35] *** Joins: lightningwright (~lightning@user/lightningwright)
[14:43:04] <bubbler> is it possible to disable a lua based neovim plugin after it was enabled? For example I want to use 'nvim-cmp' when entering a 'neorg' (ft=norg) buffer but use my 'coc.nvim' completion again when I am leaving the 'neorg' buffer. 
[14:43:21] <clason[m]> no
[14:43:32] <clason[m]> same as a vimscript plugin
[14:43:57] <bubbler> k thx buddy
[14:44:09] <clason[m]> (unless the plugin itself has implemented a "disable" functionality)
[14:45:33] <bubbler> guess it doesn't. I am just thinking if I ever had a situation like this on normal vimscript... I mean there are buffer related autocommands...
[14:46:41] <bubbler> but yeah they head some kind of Toggle<Something> or <Something>Toggle then..
[14:47:32] <bubbler> k... thanks for the clear answer so I won't waste my precious Saturday ;)
[14:47:37] <bubbler> have a good one :)
[14:47:44] <clason[m]> same1
[14:47:46] <clason[m]>  * same!
[14:48:26] *** Quits: kchibisov (~kchibisov@broadband-188-32-57-114.ip.moscow.rt.ru) (Quit: Huh)
[14:52:26] *** Joins: kchibisov (~kchibisov@broadband-188-32-57-114.ip.moscow.rt.ru)
[14:57:55] *** Joins: PaterTemporalis (~woooopsie@dsl-79-30.bl27.telepac.pt)
[15:00:26] *** Quits: Strom (strom@fedora/strom) ()
[15:02:33] *** Joins: Strom (strom@fedora/strom)
[15:02:36] *** Quits: zwr (~zwr@2804:d45:b966:fb00:cd2d:c396:a30e:b814) (Ping timeout: 240 seconds)
[15:03:47] *** Joins: zwr (~zwr@2804:d45:b966:fb00:8c9f:2901:a9f3:b788)
[15:13:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:14:08] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:15:55] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[15:17:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[15:18:42] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[15:26:32] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[15:31:07] *** Joins: ublx (~ublx@user/ublx)
[15:38:55] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[15:39:44] *** Joins: cccc (~cccc@94.46.24.51)
[15:57:32] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:29:10] *** Joins: dougmass[m] (~dougmassm@2001:470:69fc:105::1:df17)
[16:29:32] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[16:36:51] *** Joins: aod (~a@190-205-148-143.dyn.dsl.cantv.net)
[16:37:17] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[16:37:26] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[16:38:00] *** Joins: zostj (~rue@61-231-129-157.dynamic-ip.hinet.net)
[16:38:04] *** Quits: aod (~a@190-205-148-143.dyn.dsl.cantv.net) (Client Quit)
[16:38:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[16:40:23] <bubbler> just for the records: you can set filetype specific settings in 'nvim-cmp' like `lua require'cmp'.setup.filetype(...)` and also just disable 'nvim-cmp' via `lua require'cmp'.setup {enabled=false}`. Works quite nice so far ^^
[16:43:44] *** Quits: zostj (~rue@61-231-129-157.dynamic-ip.hinet.net) (Quit: WeeChat 3.4.1)
[16:43:58] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[16:45:04] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[16:49:13] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[16:50:19] *** Quits: lightningwright (~lightning@user/lightningwright) (Ping timeout: 256 seconds)
[16:52:40] *** Joins: zostj (~rue@61-231-129-157.dynamic-ip.hinet.net)
[16:54:01] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[16:57:26] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[16:59:22] *** Joins: neo1 (~neo@103.144.161.30)
[17:01:02] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Ping timeout: 240 seconds)
[17:07:20] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[17:13:38] *** Joins: jacky (~jacky@user/jackyalcine)
[17:20:46] *** Joins: DibbTubberOne (~DibbDibbe@2a02:908:956:3ce0::3747)
[17:23:35] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[17:26:17] *** Joins: alban771 (~alban@20.133.22.93.rev.sfr.net)
[17:27:02] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[17:32:45] *** Quits: cccc (~cccc@94.46.24.51) (Quit: POST /leave HTTP/1.1)
[17:36:17] *** Quits: hamess (~hamess@user/hamess) (Ping timeout: 240 seconds)
[17:41:55] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[17:42:12] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[17:43:50] *** Joins: arkurious (~arkurious@user/arkurious)
[17:48:59] *** Joins: Chu[m] (~chasiubao@2001:470:69fc:105::1:df27)
[17:49:49] *** Joins: hamess (~hamess@user/hamess)
[17:52:57] *** Quits: neo1 (~neo@103.144.161.30) (Remote host closed the connection)
[17:59:21] *** Quits: DibbTubberOne (~DibbDibbe@2a02:908:956:3ce0::3747) (Quit: Leaving)
[18:00:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:00:40] *** Joins: neo1 (~neo@103.144.161.26)
[18:00:59] <coloneljohnby[m]> hello. where in the neovim runtime are the treesitter grammars located? `parser/{language}.so`?
[18:01:12] *** Quits: neo1 (~neo@103.144.161.26) (Max SendQ exceeded)
[18:02:43] *** Joins: neo1 (~neo@103.144.161.26)
[18:03:25] <clason[m]> nowhere
[18:04:08] <clason[m]> sorry, I misread that. are you asking where you should put parsers in your local config?
[18:04:18] <clason[m]> (and if you haven't, you should look at https://github.com/nvim-treesitter/nvim-treesitter and its documentation)
[18:09:03] <coloneljohnby[m]> clason[m]: i am wondering where neovim looks for for the treesitter parsers in its runtime
[18:09:27] <clason[m]> yeah, then you're right.
[18:10:52] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[18:13:32] *** Joins: jstein_ (~jstein@gentoo/developer/jstein)
[18:15:06] *** Quits: utraciss (~utraciss@2001:e68:443c:e8b3:ab7d:dc46:1627:191f) (Quit: ZNC 1.8.2 - https://znc.in)
[18:19:10] *** Joins: aod (~a@190-205-148-143.dyn.dsl.cantv.net)
[18:19:40] *** flask_[m] is now known as flask[m]
[18:19:47] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 250 seconds)
[18:20:38] *** Joins: crashrep (~crashrep@user/crashrep)
[18:21:59] *** Joins: cliluw (~cliluw@47.147.77.43)
[18:26:59] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[18:27:16] *** Joins: pepper (~pepper@user/pepper)
[18:27:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:28:47] *** Joins: cliluw (~cliluw@47.147.77.43)
[18:29:32] *** Quits: iomari891 (~iomari891@197.210.53.48) (Ping timeout: 240 seconds)
[18:31:11] *** Quits: jacky (~jacky@user/jackyalcine) (Ping timeout: 256 seconds)
[18:31:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:32:50] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[18:33:02] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 240 seconds)
[18:37:24] *** Quits: jstein_ (~jstein@gentoo/developer/jstein) (Quit: quit)
[18:42:20] *** Quits: acosta (~acosta@163.172.62.165) (Quit: The Lounge - https://thelounge.chat)
[18:43:16] *** Joins: acosta (~acosta@163-172-62-165.rev.poneytelecom.eu)
[18:44:06] *** Quits: aod (~a@190-205-148-143.dyn.dsl.cantv.net) (Quit: leaving)
[18:44:10] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:44:35] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:44:49] *** Joins: jacky (~jacky@47.202.64.169)
[18:44:49] *** Quits: jacky (~jacky@47.202.64.169) (Changing host)
[18:44:49] *** Joins: jacky (~jacky@user/jackyalcine)
[18:47:46] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[18:56:54] *** Joins: snowyforest (~bluestar@snowglobe.student.rit.edu)
[19:05:57] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[19:06:24] *** Quits: neo1 (~neo@103.144.161.26) (Quit: WeeChat 3.4)
[19:08:34] <LeoNerd> gpanders: Status unchanged. Entirely. As in I don't think a line of code has been touched in 6 years there. It's still "deprecated" as in "I'm not adding more stuff to it", and I suggest users *ought to* be using libtickit instead. But I'm aware youfolks use it directly
[19:09:10] <LeoNerd> I don't really have a longterm plan other than "eh, if I ever find a spare moment I'll migrate it". but that's effort for basically not much real benefit for a while. And I'm busy with about a billion other things
[19:09:14] <LeoNerd> If anyone else wants to do it they can
[19:09:49] <clason[m]> I think the question was more whether libtickit now has whatever is needed for Neovim to switch to it
[19:10:11] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:10:30] <clason[m]> (the situation with libtermkey is clear and perfectly fine.)
[19:10:32] <LeoNerd> Oh. That didn't seem to be the question linked. But in terms of that question: probably?
[19:10:48] <LeoNerd> I write all my terminal apps in libtickit these days and it doesn't seem to be missing anything *I* need
[19:10:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[19:10:59] <clason[m]> :]
[19:11:11] <LeoNerd> I'd suggest you just try it, and either it'll be fine or you'll encounter a "how do we do X?" and I go "oh oops I hadn't thought of that" and add it
[19:11:33] <clason[m]> (not the question, but the comment, I think? I didn't check)
[19:12:04] <LeoNerd> I think 6 years ago I hadn't *quite* got the window-layer stuff working properly, but that's been fine and stable for maybe 4 or 5 years now, so.. Yeah should be fine
[19:12:16] <LeoNerd> We even have libuv event loop bindings and everything
[19:12:20] *** Joins: TheMaker (~nbert@user/nejc)
[19:12:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:13:05] <clason[m]> noice.
[19:15:51] <gpanders> LeoNerd: as clason mentioned, I indeed meant to ask whether libtickit was ready for Neovim to switch to; apologies if that was unclear. Thanks for the response, I will take a look at it
[19:16:05] <LeoNerd> :)
[19:16:09] <gpanders> I'm currently deep in the weeds of trying to understand the CSI u / modifyOtherKeys madness and am beginning to fear for my sanity
[19:16:30] <LeoNerd> If you run into troubles, note we have #tickit on Libera, for questions and such
[19:16:57] <LeoNerd> Ahye.s Well, CSIu is a fairly standard encoding scheme. "modifyOtherKeys" is the name of an xterm config setting that sortof mangles half of its handling of that and doesn't do it properly. ;)
[19:17:02] <LeoNerd> Most other terms do CSIu just fine
[19:18:10] <LeoNerd> But you mostly don't need to know about it because libtermkey handles it all
[19:18:57] <LeoNerd> For input anyway. For the dual case of output in libvterm (for `:term` buffers), there isn't much control over what it emits, but it should be fairly conservative in its use
[19:20:10] <gpanders> LeoNerd: I pinged you in https://github.com/neovim/neovim/pull/17771, I don't know if you had a chance to look at it yet
[19:20:24] <gpanders> it's not doing much, just sending the CSI sequence to let the terminal know that we do in fact accept the CSI u codes via libtermkey
[19:20:40] <gpanders> but it looks like we still have more work to do in our own input handling to distinguish e.g. `<C-I>` from `<Tab>`
[19:20:45] <coloneljohnby[m]> <clason[m]> "yeah, then you're right." <- okay, i was able to resolved the underlying issue, so it's all good now.
[19:21:11] <gpanders> I am curious how Vim is handling this though -- their docs mention modifyOtherKeys and as far as I know they are not using libtermkey
[19:21:20] <LeoNerd> You did?
[19:21:46] <LeoNerd> vim has always had *two* problems with Tab vs C-I
[19:21:47] <gpanders> oh no I did not, I mentioned you in a different issue
[19:21:48] <gpanders> my mistake :)
[19:22:12] <LeoNerd> There's the problem that *all* terminal-based apps have, in recognising the bytes that come from the terminal. You can use libtermkey or anything else. Any way you find to recognise the incoming bytes will be fine
[19:22:37] <LeoNerd> But vim has always had the additoinal problem that its *internal* model is wrong.  :map <Tab> ONE   :map <C-I> TWO   creates a single mapping. One overwrites the other
[19:23:03] <LeoNerd> That has nothing to do with recognising bytes from the TTY device, and everything to do with internal data structures. It even affects GTK/MacOSX/Win32/whatever, wherein you cannot "blame the terminal"
[19:23:23] <gpanders> yes, and as far as I know we currently have the same problem
[19:23:36] <LeoNerd> So even if you use libtermkey, and libtermkey tells you "Hey this is a Tab key, but that is a letter I key with the Ctrl modifier", you seem to smush the two together and pretend they're the same
[19:23:40] <LeoNerd> I can't help you fix that :)
[19:23:58] <LeoNerd> That's squarely and entirely within (n)vim's court
[19:24:48] <LeoNerd> I've argued it for.. Well, getting on for 15 years now. I'm bored of it
[19:25:11] *** Joins: yhnujmikV (~yhnujmikV@193.138.218.216)
[19:25:16] <LeoNerd> Stop treating input as a stream of 'char's and start treating it as a stream of 'struct { enum Key key; int mod }'s
[19:25:48] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:30:08] *** Quits: pinpox (~pinpox@2001:470:69fc:105::1:4985) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: JavierMatarrese[ (~javiermat@2001:470:69fc:105::1:c1a1) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: mrassili[m] (~marouaner@2001:470:69fc:105::1:82d9) (Quit: You have been kicked for being idle)
[19:30:38] <gpanders> LeoNerd: oh I know, I wasnâ€™t asking for help on that, Iâ€™m aware thatâ€™s our burden to bear. I was just apprising you of the situation
[19:31:04] <LeoNerd> :)
[19:32:55] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[19:33:22] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:34:46] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[19:37:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:39:32] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Ping timeout: 250 seconds)
[19:39:47] <bfredl> gpanders: the solution is in the draft PR I already linked :]
[19:39:52] *** Joins: Ox000 (~jy@74.215.11.197)
[19:40:17] <bfredl> not sure if we want an option for that or just enable it unconditionally as well, there was some reservation..
[19:40:42] <clason[m]> go for it and don't look back
[19:40:48] <clason[m]> sharks never look back
[19:40:54] <clason[m]> (because sharks don't have necks.)
[19:41:04] <bfredl> right, a lot of plugins positively expect the current limitations (pika surprise)
[19:41:44] <clason[m]> well, they'll quickly learn the error of their ways :)
[19:42:17] <bfredl> (https://github.com/neovim/neovim/pull/17236 for reference)
[19:42:18] <clason[m]> the only question is: do tpope's plugins expect the current limitations?
[19:42:28] <bfredl> this is the "internal datastructure" change that leonerd reffered to
[19:42:55] <bfredl> clason[m]: we both know how to find out
[19:43:03] <clason[m]> and how quickly...
[19:43:23] <bfredl> soo the short term question is, should we do this for 0.7, or not
[19:43:47] <bfredl> (as I said, I really think if we merge one we should merge the other..)
[19:43:49] <clason[m]> gut feeling says "no"
[19:44:13] <clason[m]> it can wait two weeks
[19:44:23] <clason[m]> and then have a round of TUI focus for 0.8
[19:44:33] <bfredl> soo 15 years plus two weeks :]
[19:45:08] <clason[m]> I mean, we can also sneak it in,I don't mind :)
[19:45:16] <clason[m]>  * I mean, we can also sneak it in, I don't mind :)
[19:45:51] *** Quits: Ox000 (~jy@74.215.11.197) (Quit: leaving)
[19:46:10] <clason[m]> or delay 0.7 a bit (not for that, primarily, but for the open PRs that I'd prefer to have in before the testing period starts)
[19:46:14] *** Joins: Ox000 (~jy@74.215.11.197)
[19:46:16] *** Quits: SirJitsu (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Read error: Connection reset by peer)
[19:46:26] <bfredl> the autocmd one?
[19:46:31] <bfredl> or something more?
[19:46:50] <bfredl> I mean, we haven't publicly announced the feature freeze yet, or have we
[19:47:13] <clason[m]> we have not; I kinda forgot about that
[19:47:28] *** Quits: Ox000 (~jy@74.215.11.197) (Client Quit)
[19:47:34] <bfredl> ðŸ’€
[19:47:39] <clason[m]> the autocmd one(s), and the semantic tokens (not highlighting) one (although we can also bump this)
[19:47:45] *** Joins: Ox000 (~jy@74.215.11.197)
[19:48:13] <clason[m]> but the autocmd changes I don't want to leave for 0.7.1
[19:48:23] <bfredl> I'd say there is no panic. we are already on a much better schedule than the old 0.4-0.5 days regardless
[19:48:38] <bfredl> so rather get the last polish in for autocmds, and then announce the freeze after that
[19:48:46] <clason[m]> agreed
[19:49:06] <bfredl> and my gut feeling is to add the TUI key stuff, as a treat :]
[19:49:18] <clason[m]> They don't call it "Good Friday" for nothing :]
[19:49:46] *** Quits: Ox000 (~jy@74.215.11.197) (Client Quit)
[19:49:59] *** Joins: SirJitsu (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[19:50:04] *** Joins: Ox000 (~jy@74.215.11.197)
[19:51:35] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:52:16] *** Quits: Ox000 (~jy@74.215.11.197) (Client Quit)
[19:52:35] *** Joins: Ox000 (~jy@74.215.11.197)
[19:58:39] <bfredl> now I just need to figure out syntax for conceal in TS query..
[19:59:01] <clason[m]> yeah, I was thinking about that myself, and couldn't come up with anything clean...
[19:59:21] <clason[m]> so my internal policy became "not for nvim-treesitter, should be a separate plugin :P"
[19:59:52] <bfredl> well, this is even just the internal highlighter
[19:59:53] *** Joins: jklfds (~jklfds@user/jklfds)
[20:00:06] <bfredl> nvim-treesitter provides the parsers and the queries, but the logic is in nvim core alroady
[20:00:17] <bfredl>  * nvim-treesitter provides the parsers and the queries, but the logic for highlight is in nvim core already
[20:00:38] <clason[m]> but the mapping capture->highlight group is in nvim-treesitter, isn't it?
[20:00:43] <clason[m]> (I should know that.)
[20:01:04] <clason[m]> (yes, it is. phew!)
[20:01:14] <bfredl> no. in fact you can do `@HighlightGroup` already just in core
[20:01:37] <bfredl> I think it should become a `set!` like predicate
[20:01:46] <clason[m]> example?
[20:01:48] <clason[m]> pls?
[20:01:49] <bfredl> I'll figure something out tomorrow :]
[20:01:54] <clason[m]> oki :)
[20:02:27] <bfredl> https://github.com/neovim/neovim/blob/2ab52bd9889790dc7e47a09e801751aada418727/runtime/lua/vim/treesitter/query.lua#L327
[20:02:43] <bfredl> this is an example of a predicate which is not really a predicate, but adds metadata to a match
[20:02:49] <clason[m]> but you could do the same as for highlighting, in principle: add a `concealmap` from capture to character
[20:03:03] <clason[m]> oh, I see.
[20:03:33] <bfredl> so we could just add `(conceal! "x")` as a predicate, I think
[20:03:34] <clason[m]> that'd be a different way of doing highlighting than nvim-treesitter.
[20:03:36] <bfredl> or just `(conceal!)`
[20:03:37] <bfredl> ?
[20:03:41] <bfredl> `offset!` is already used by the highighter..
[20:03:41] <clason[m]> yes, that sounds good
[20:04:05] <clason[m]> (I thought this was in relation to the `@HighlightGroup` from earlier -- sorry!)
[20:04:13] <bfredl> we are representing data which is not part of the highlight group to start with
[20:04:28] <bfredl> it could be, but it was not how vim made it.
[20:04:54] <clason[m]> gotcha.
[20:05:00] <bfredl> clason[m]: it will still be used with such a match, but we need to add extra data to it.
[20:05:01] <clason[m]> no, that makes total sense
[20:06:01] *** Parts: jklfds (~jklfds@user/jklfds) (WeeChat 3.4.1)
[20:24:40] *** Quits: Ox000 (~jy@74.215.11.197) (Quit: leaving)
[20:41:02] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[20:47:31] *** Joins: Ox000 (~jy@74.215.11.197)
[20:49:38] *** Quits: zostj (~rue@61-231-129-157.dynamic-ip.hinet.net) (Quit: WeeChat 3.4.1)
[20:51:14] *** Joins: jklfds (~jklfds@user/jklfds)
[20:52:30] *** Parts: jklfds (~jklfds@user/jklfds) ()
[20:53:59] *** Quits: Ox000 (~jy@74.215.11.197) (Quit: leaving)
[20:54:17] *** Joins: Ox000 (~jy@74.215.11.197)
[20:57:16] *** Joins: Ox000_ (~jy@74.215.11.197)
[20:57:20] *** Quits: Ox000_ (~jy@74.215.11.197) (Client Quit)
[20:57:20] *** Quits: Ox000 (~jy@74.215.11.197) (Client Quit)
[20:57:39] *** Joins: Ox000 (~jy@74.215.11.197)
[21:06:32] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:07:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:08:59] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:10:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:11:53] *** Quits: PaterTemporalis (~woooopsie@dsl-79-30.bl27.telepac.pt) (Ping timeout: 256 seconds)
[21:16:03] *** Quits: Ox000 (~jy@74.215.11.197) (Remote host closed the connection)
[21:17:37] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:25:18] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[21:28:40] *** Quits: tufei (~Ngyu-Phee@gateway/tor-sasl/tufei) (Quit: Leaving)
[21:30:28] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[21:31:19] *** Joins: iomari891 (~iomari891@197.210.77.137)
[21:34:48] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[21:45:53] *** Joins: mrGayMaster[m] (~mevonoc63@2001:470:69fc:105::1:df5b)
[21:48:42] *** Joins: z8hpta37[m] (~z8hpta37m@2001:470:69fc:105::1:df65)
[21:56:02] *** Quits: jacky (~jacky@user/jackyalcine) (Ping timeout: 240 seconds)
[21:57:15] *** Parts: mrGayMaster[m] (~mevonoc63@2001:470:69fc:105::1:df5b) ()
[21:59:53] *** Joins: tohe[m] (~tohematri@2001:470:69fc:105::2e0b)
[21:59:53] <tohe[m]> how can i identify if a buffer is a scratch buffer?
[22:01:07] <clason[m]> `setl buftype?`
[22:06:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:09:04] *** Joins: jacky (~jacky@47.202.64.169)
[22:09:04] *** Quits: jacky (~jacky@47.202.64.169) (Changing host)
[22:09:04] *** Joins: jacky (~jacky@user/jackyalcine)
[22:17:29] <nova> I did it. my config *technically* has more lua than vim-script. :P https://github.com/novasenco/nvim.config
[22:20:32] <nova> (if you don't count vim-script being passed as lua strings to lua functions)
[22:21:35] <gpanders> you can use Lua files under plugin/ and ftplugin/ too :)
[22:21:47] <nova> I misread anyway. 51% vim-script still.
[22:22:28] *** Joins: crashrep (~crashrep@user/crashrep)
[22:22:39] <nova> but then I would have to rewrite vim-script as lua that basically just calls vim-script anyway via like vim.fn and vim.cmd :{
[22:23:13] <nova> but I will eventually and just keep plugging away as new things come out
[22:27:41] <tohe[m]> <clason[m]> "`setl buftype?`" <- can we be precise than that
[22:27:52] <clason[m]> can we?
[22:29:32] <tohe[m]> the help file on scratch buffers says it sets buftype=nofile,bufhidden=hide and noswapfile
[22:30:15] <tohe[m]> but if i use only the buftype parameter man pages can also be scratch buffers? 
[22:30:43] <tohe[m]> i wanted to differentiate between the two 
[22:32:26] *** Quits: iomari891 (~iomari891@197.210.77.137) (Ping timeout: 245 seconds)
[22:34:51] <clason[m]> man pages have a name (starting with `man://`; I'd use that to check for  man buffers
[22:35:07] <nova> help have &filetype == 'help'
[22:35:23] <clason[m]> man != help
[22:35:46] <nova> man have expand('%') =~ '^man://'
[22:35:50] <clason[m]> but that's as good as it gets, "scratch buffers" are not a real thing 
[22:36:03] <clason[m]> (in the sense that they are a specific buffer type)
[22:36:24] <gpanders> yes, as far as (n)vim is concerned, a scratch buffer is just a temporary buffer with no backing file
[22:36:29] <clason[m]> it's just a term people (and the documentation) use to describe "throwaway buffers"
[22:36:30] <gpanders> by that definition, a man buffer is a scratch buffer
[22:36:41] <nova> how come there are no woman pages? seems a bit sexist to me. Humf. (>).(>)
[22:37:12] <gpanders> tohe: if you are explicitly creating buffers yourself for the purpose of acting as "scratch" buffers, I'd recommend setting some kind of buffer variable so you can distinguish them
[22:37:23] <gpanders> let b:scratch = 1 or something
[22:37:46] <clason[m]> or a specific filetype, or URI-like title
[22:37:51] *** Joins: pleb (~pleb@195.14.160.195)
[22:38:35] <tohe[m]> i wanted to identify telescope-nvim's previewers. From the source it seems they are using nvim_create_buf(false, true) to create them
[22:39:00] *** Quits: SirJitsu (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[22:39:50] *** Parts: pleb (~pleb@195.14.160.195) (Leaving.)
[22:40:05] <clason[m]> so that just became a different question ;)
[22:40:19] <tohe[m]> but now that i think about it i can check for the buflisted values
[22:40:24] <tohe[m]> s/values/value/
[22:41:57] <tohe[m]> thanks everyone
[22:44:20] *** Joins: azed (~azed@197.23.130.142)
[22:55:49] *** Quits: alban771 (~alban@20.133.22.93.rev.sfr.net) (Ping timeout: 268 seconds)
[22:56:13] *** Quits: grumb29 (~grumb@rint.osaka) (Quit: The Lounge - https://thelounge.chat)
[22:56:14] *** Quits: samtherapy (~samtherap@user/samtherapy) (Quit: null)
[22:56:25] *** Joins: grumb29 (~grumb@rint.osaka)
[22:56:26] *** Joins: samtherapy (~samtherap@user/samtherapy)
[22:56:59] *** Joins: SirJitsu (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[23:02:53] *** Quits: azed (~azed@197.23.130.142) (Read error: Connection reset by peer)
[23:04:06] *** Quits: Rue (~rue@2001-b011-1000-135b-3fed-ea6f-7ee8-03ee.dynamic-ip6.hinet.net) (Ping timeout: 245 seconds)
[23:06:13] *** Joins: Rue (~rue@2001-b011-1000-1f40-5c6d-dfd2-dc15-ef19.dynamic-ip6.hinet.net)
[23:10:20] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:26:44] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Quit: Konversation terminated!)
[23:27:05] *** Joins: rawhawk (~rawhawk@49.205.143.194)
[23:31:24] *** Joins: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net)
[23:32:34] *** Quits: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net) (Client Quit)
[23:35:32] *** Joins: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net)
[23:36:22] *** Joins: rxf4e1[m] (~rxf4e1mat@2001:470:69fc:105::1:df32)
[23:36:25] *** Quits: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net) (Client Quit)
[23:36:59] *** Joins: azed (~azed@197.23.130.142)
[23:37:10] *** Joins: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net)
[23:37:21] *** Quits: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net) (Client Quit)
[23:42:43] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[23:52:11] *** Quits: jacky (~jacky@user/jackyalcine) (Quit: Iridium IRC Client)
[23:53:41] *** Joins: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
