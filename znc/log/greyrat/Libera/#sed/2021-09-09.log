[00:07:57] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[00:08:11] *** Quits: danisztls (~weechat@user/danisztls) (Ping timeout: 252 seconds)
[00:08:42] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[00:09:12] <CrtxReavr> How can I match exactly 7 leading spaces (and not 8)?
[00:15:07] <lopid> ^       
[00:18:09] <lopid> though i think you want \([^ ]\|$\) at the end
[00:21:31] *** Joins: danisztls (~weechat@user/danisztls)
[00:24:28] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 265 seconds)
[01:14:33] *** Joins: nvmd (~nvmd@user/nvmd)
[02:47:17] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[03:23:08] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:33:51] *** Joins: ferdna (~ferdna@user/ferdna)
[03:51:49] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[04:36:17] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 265 seconds)
[04:42:38] *** Quits: danisztls (~weechat@user/danisztls) (Ping timeout: 252 seconds)
[04:50:00] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[05:34:26] *** Joins: vlm (~vlm@user/vlm)
[05:36:27] *** Joins: danisztls (~weechat@user/danisztls)
[06:38:44] *** Joins: nitro__ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[06:55:01] *** Joins: e36freak (~e36freak@user/e36freak)
[07:19:00] *** Joins: totenkoph (~scythe@user/totenkoph)
[07:20:31] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:25:37] *** Joins: ferdna (~ferdna@user/ferdna)
[08:20:35] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[08:45:04] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[08:50:10] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[09:10:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:48:00] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[09:51:07] *** Joins: nerozero (~nerozero@87.253.63.54)
[09:51:28] <mns> I want to do a substitution on any line that does _not_ start with [A-Z] or contain the term FOO-BAR.  I have the following:  sed -e '/^[A-Z]/s/$/my substitution goes here/'  but I'm not sure how to do the OR condition in the address.  Any thoughts ? 
[09:59:29] <mns> I've tried using  /^[A-Z]\|FOO-BAR/ but that ends up doing the substitution on every line in the file. 
[10:01:10] <e36freak> demorgan's law issue. i'd consider using a branch command, probably the easiest way to do it
[10:02:29] <e36freak> sed -e '/FOO-BAR/b' -e '/^[[:upper:]]/!s/$/substitution/'
[10:03:54] <e36freak> you could also nest
[10:04:23] <e36freak> sed -e '/FOO-BAR/!{/^[[:upper:]]/!s/$/substitution/;}'
[10:05:07] <e36freak> if you have a bunch of patterns you'd want to skip for the branch would definitely be cleanest
[10:05:33] <e36freak> sed -e '/foo/b' -e '/bar/b' -e '/blah/b' -e 's/$/substitution/'
[10:08:38] <mns> I tried the branch method and that didn't give the results I was expecting.  Basically I'm adding a commment to every line in a file, except the ones that start with an uppercase letter, or contain FOO-BAR on the line or its an empty line.  
[10:09:24] <mns> with the branching, lines that had FOO-BAR, still got a comment added on them
[10:09:28] *** Quits: danisztls (~weechat@user/danisztls) (Quit: I will return...)
[10:09:36] <mns> let me try netsting
[10:09:39] <mns> nesting
[10:11:05] <e36freak> shouldn't. sure you did it right?
[10:12:12] *** Joins: danisztls (~weechat@user/danisztls)
[10:12:37] <mns> let me try again.  I tried with macos sed, and gnu sed, but let me try again.  nesting worked though.
[10:13:20] <e36freak> the address with the b has to be before the substitution, and there's no !
[10:13:53] <e36freak> # printf '%s\n' line1 '' line FOO-BAR 3' Line4 line5
[10:13:59] <shbot> e36freak: Missing terminating quote, bracket or keyword
[10:14:11] <e36freak> # printf '%s\n' line1 '' 'line FOO-BAR 3' Line4 line5 | sed '/
[10:14:16] <e36freak> # printf '%s\n' line1 '' 'line FOO-BAR 3' Line4 line5
[10:14:18] <shbot> e36freak: Missing terminating quote, bracket or keyword
[10:14:22] <shbot> e36freak: line1
[10:14:22] <shbot> e36freak: 
[10:14:22] <shbot> e36freak: etc... ( http://ix.io/3yl1 )
[10:14:56] <e36freak> # printf '%s\n' line1 '' 'line FOO-BAR 3' Line4 line5 | sed -e '/^$/b' -e '/FOO-BAR/b' -e '/^[[:upper:]]/b' 's/$/ # comment/'
[10:14:57] <shbot> e36freak: sed: can't read s/$/ # comment/: No such file or directory
[10:15:09] <e36freak> # printf '%s\n' line1 '' 'line FOO-BAR 3' Line4 line5 | sed -e '/^$/b' -e '/FOO-BAR/b' -e '/^[[:upper:]]/b' -e 's/$/ # comment/'
[10:15:12] * e36freak can't type today
[10:15:16] <shbot> e36freak: line1 # comment
[10:15:16] <shbot> e36freak: 
[10:15:16] <shbot> e36freak: etc... ( http://ix.io/3yl2 )
[10:19:07] <mns> apparently I can't type either.  the branching worked once I spotted a typo in my address.
[10:19:56] <e36freak> both ways are fine, whichever you prefer
[10:20:31] <e36freak> can't do it in one address because you need an AND for two negations, demorgan's law
[10:21:11] <e36freak> !(a || b) <=> !a && !b
[10:21:30] <e36freak> !a || !b is always true
[10:21:49] <mns> ahh ok
[10:25:50] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[10:25:52] <e36freak> actually it's been a long day and i'm dumb, you could do it that awy
[10:27:34] <e36freak> # printf '%s\n' line1 '' 'line FOO-BAR 3' Line4 line5 | sed '/^[[:upper:]]\|FOO-BAR\|^$/!s/$/ # comment/'
[10:27:37] <shbot> e36freak: line1 # comment
[10:27:37] <shbot> e36freak: 
[10:27:37] <shbot> e36freak: etc... ( http://ix.io/3yl2 )
[10:27:57] <e36freak> anyway, sleep
[10:29:01] <mns> thanks.  been a long day here too, I must have been doing something wrong with original ORing.  will have to look at it again.
[10:30:21] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:38:57] <mns> e36freak: you're right, the ORing works as intended, but only with gnu sed, not with MacOS sed
[10:39:38] <mns> time to call it a night
[11:19:58] *** Joins: [diablo]4 (~diablo]@user/diablo/x-9068044)
[11:21:23] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 252 seconds)
[11:21:23] *** [diablo]4 is now known as [diablo]
[11:27:29] *** Quits: danisztls (~weechat@user/danisztls) (Quit: I will return...)
[11:30:41] *** Joins: danisztls (~weechat@user/danisztls)
[11:40:11] *** Quits: danisztls (~weechat@user/danisztls) (Quit: I will return...)
[11:41:32] *** Joins: danisztls (~weechat@user/danisztls)
[11:42:00] *** Quits: danisztls (~weechat@user/danisztls) (Client Quit)
[11:44:21] *** Joins: danisztls (~weechat@user/danisztls)
[11:47:59] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:48:02] *** Quits: danisztls (~weechat@user/danisztls) (Client Quit)
[12:10:40] *** Joins: TomyWork (~TomyLobo@p200300e80f06af0091a62fb7d0ba7771.dip0.t-ipconnect.de)
[12:22:22] *** Joins: NeoCron (~NeoCron@p200300c4cf1c95007f0aa1e4d57a6222.dip0.t-ipconnect.de)
[12:40:57] *** Joins: earnestly (~earnest@user/earnestly)
[13:12:37] <olspookishmagus> I have a text file that features sets of 5 lines, of which I'm interested in only keeping the 2nd line (2+(5*i)), how to do that with sed?
[13:16:09] <Soliton> # printf %s\\n a{1..5} b{1..5} c{1..5} | sed -n '2~5p'
[13:16:10] <shbot> Soliton: a2
[13:16:10] <shbot> Soliton: b2
[13:16:10] <shbot> Soliton: c2
[13:16:18] <Soliton> requires GNU sed.
[13:16:39] * olspookishmagus bows to Soliton
[13:19:14] <Soliton> # printf %s\\n a{1..5} b{1..5} c{1..5} | sed -n 'n;p;n;n;n'
[13:19:15] <shbot> Soliton: a2
[13:19:15] <shbot> Soliton: b2
[13:19:15] <shbot> Soliton: c2
[13:19:22] <Soliton> portable way
[13:21:48] <olspookishmagus> so I can sed while I picnic?
[13:23:28] <Soliton> yes, it doesn't matter what seds you take with you.
[15:29:41] <Riviera> olspookishmagus: - Can I watch the game while I pray?
[15:29:51] <Riviera> olspookishmagus: - No, that would be heresy!
[15:30:03] <Riviera> olspookishmagus: - But, can I pray while I watch the game?
[15:30:13] <Riviera> olspookishmagus: - That would make you a good believer!
[15:30:23] <Riviera> sed, all the time!
[15:58:18] <olspookishmagus> is praising sed, praising ed at all?
[15:59:01] <olspookishmagus> RIP Unix Philosophy? I seldom see newcomers or students getting taught/respect that
[16:28:02] *** Joins: Atque (~Atque@user/atque)
[16:44:47] <earnestly> It's not for them
[16:46:03] <earnestly> Until Bell Labs there was no such thing, and in the hands of most people, they get it wrong and cause harm.  Better to exclude them, the right people will find it naturally
[16:48:53] <earnestly> And you should actively avoid attempts to convince people it's good; the good will know implicitly when encountering it.  Further, those who can't understand should be driven out so as to not create an atmosphere which would disuade those who would
[16:50:24] <jetchisel> Spoken like a true believer ^^
[16:51:09] *** Joins: Torr (~Torr@user/torr)
[16:51:58] <earnestly> Almost, I like the natural gatekeeping effect it has without actively engage in it
[16:52:08] <earnestly> engaging*
[16:53:06] <earnestly> Most of the time it is not worth convincing people of anything because even if they could be convinced they bring nothing to the table; a complete waste of time and energy dealing with people who cannot research the basics on their own - why would you want people like that?
[16:54:19] <earnestly> The beauty of unix and the command-line in general is that it empowers people enough so that they don't have to rely on cretins to solve their problems.  At least this is what I found starting on Windows XP/7 and accidently ending up on Ubuntu
[16:54:59] *** Joins: DrSlony (~morgan@2.65.68.165.mobile.tre.se)
[16:54:59] <earnestly> (So it's certainly not the case that the only people who prefer these things would have to have grown up with them)
[16:58:30] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[16:58:35] <DrSlony> Hey, how can I delete all whitespaces that occur before a hyphen? "Head Circumference-for-age BOYS 0To60m z" should become "HeadCircumference-for-age BOYS 0To60m z", and "BMI-for-age GIRLS 24mTo60m p" should be unaffected since no spaces appear before a hyphen.
[16:59:48] *** Joins: Hackerpcs (~user@user/hackerpcs)
[17:01:21] <earnestly> DrSlony: If the structure is always *-for-age ... ... ... then you can make your match against things before "-for-age" instead which is a bit more specific
[17:02:11] <DrSlony> it is not
[17:03:45] <Soliton> # sed -e :a -e 's/ \([^-]*-\)/\1/;ta' <<< 'Head Circumference-for-age BOYS 0To60m z'
[17:03:45] <shbot> Soliton: HeadCircumference-for-age BOYS 0To60m z
[17:04:29] <DrSlony> oh boy
[17:04:35] <earnestly> I should learn loops more
[17:06:38] <Soliton> probably should also make sure that there is no - before the space.
[17:07:33] <Soliton> # sed -e :a -e 's/^\([^-]*\) \([^-]*-\)/\1\2/;ta' <<< 'a b Head Circumference-f o r-age BOYS 0To60m z'
[17:07:35] <shbot> Soliton: abHeadCircumference-f o r-age BOYS 0To60m z
[17:12:37] <DrSlony> thank you Soliton
[17:14:06] *** Joins: danisztls (~weechat@user/danisztls)
[17:14:37] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[17:15:05] <earnestly> # sed -e :a -e 's/a/b/;ta' <<< 'ababab'
[17:15:07] <shbot> earnestly: bbbbbb
[17:15:19] <earnestly> Nice
[17:22:35] <earnestly> (As in, implementing /g)
[17:30:34] <emanuele6> that is not quite like s/pat/sub/g, but in your script it is similar.
[17:31:06] <emanuele6> # sed -e :a -e s/b/bb/ -e ta <<< bb
[17:31:13] <shbot> emanuele6: no output within the time limit
[17:31:22] <emanuele6> # sed -e s/b/bb/g <<< bb
[17:31:24] <shbot> emanuele6: bbbb
[17:38:02] <earnestly> I wonder why it wouldn't work
[17:38:31] <earnestly> Is it looping? b => bb => bbbb => bbbbbb...
[17:39:21] <emanuele6> yes
[17:42:13] *** Quits: danisztls (~weechat@user/danisztls) (Quit: I will return...)
[17:42:13] <emanuele6> /g finds all the matches and replaces then; the other script loops and keeps replacing the first match, since it always finds a match, it goes on indefinitely
[17:47:31] <emanuele6> <earnestly > Is it looping? b => bb => bbbb => bbbbbb...
[17:47:36] <emanuele6> actually not quite like that
[17:48:07] <emanuele6> Bb -> BBb => Bbb -> BBbb => Bbbb -> BBbbb => ...
[17:49:02] <emanuele6> (B indicates the b's that match the pattern and the b's that are replaced every iteration)
[17:49:31] *** Joins: danisztls (~weechat@user/danisztls)
[17:49:37] *** Quits: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com) (Ping timeout: 245 seconds)
[17:52:28] <emanuele6> # sed -e :a -e s/b/bb/p -e ta <<< bb | head -n 10 | tr '\n' ' ' # earnestly
[17:52:29] <shbot> emanuele6: bbb bbbb bbbbb bbbbbb bbbbbbb bbbbbbbb bbbbbbbbb bbbbbbbbbb bbbbbbbbbbb bbbbbbbbbbbb
[18:01:34] *** Joins: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com)
[18:02:57] <earnestly> I thought perhaps that might be what was happening
[18:03:22] <earnestly> emanuele6: And perhaps there's no way to know if this is happening if the input is malicious, sed attacks hmm
[18:05:29] <emanuele6> fortunately s/re/su/g is posix :D
[18:09:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:13:01] <earnestly> Obviously for situations where /g isn't useful
[18:15:03] <emanuele6> sed has conditionals, you could set an upper limit for the output length
[18:15:25] <emanuele6> # sed -e :a -e s/b/bb/p -e /^.{20}$/ta <<< bb | head -n 10 | tr '\n' ' ' # earnestly
[18:15:26] <shbot> emanuele6: bbb bbb
[18:15:38] <emanuele6> oops
[18:15:46] <emanuele6> # sed -e :a -e s/b/bb/ -e /^.{20}$/ta <<< bb
[18:15:46] <earnestly> Something like that might be worth considerin
[18:15:48] <shbot> emanuele6: bbb
[18:16:07] <emanuele6> oh, i forgot to quote
[18:16:11] <emanuele6> # sed -e :a -e s/b/bb/ -e '/^.{20}$/ta' <<< bb
[18:16:13] <shbot> emanuele6: bbb
[18:16:25] <emanuele6> oh, also forgot to reverse
[18:16:35] <emanuele6> # sed -e :a -e s/b/bb/ -e '/^.{0,20}$/ta' <<< bb
[18:16:37] <shbot> emanuele6: bbb
[18:16:48] <emanuele6> :D
[18:17:20] <emanuele6> and -E
[18:17:47] <emanuele6> # sed -E -e :a -e s/b/bb/ -e '/^.{,20}$/ ta' <<< bb
[18:17:49] <shbot> emanuele6: bbbbbbbbbbbbbbbbbbbbb
[18:17:54] <emanuele6> ok, now it works
[18:18:00] <emanuele6> but it is still not like /g
[18:18:07] <emanuele6> # sed -E -e :a -e s/b/ba/ -e '/^.{,20}$/ ta' <<< bb
[18:18:08] <shbot> emanuele6: baaaaaaaaaaaaaaaaaaab
[18:18:28] <emanuele6> because it always replaces the first match
[18:24:38] <Soliton> the loop was used exactly because the g flag would not do it because you need to match context.
[18:25:04] <Soliton> naturally you have to take care that the loop terminates.
[18:31:41] *** Quits: danisztls (~weechat@user/danisztls) (Quit: I will return...)
[18:32:14] *** Joins: danisztls (~weechat@user/danisztls)
[18:38:49] *** Quits: DrSlony (~morgan@2.65.68.165.mobile.tre.se) ()
[18:49:26] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:52:48] *** Quits: jle (~jle@aftr-88-152-185-251.unity-media.net) (Quit: leaving)
[18:54:46] *** Joins: jle (~jle@user/jle)
[18:56:30] *** Quits: edlou (uid413273@id-413273.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:23:39] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:23:54] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:25:53] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[19:28:23] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:38:51] <e36freak> mns: \| is a GNU extension
[19:43:42] *** Quits: Andrew (~andrew@user/andrewyu) (Ping timeout: 250 seconds)
[19:44:29] *** Joins: AndrewYu (~andrew@user/andrewyu)
[19:46:40] <emanuele6> GNU `sed 's,a\|b,c,'' -> POSIX `sed -e s,a,c, -e ta -e s,b,c, -e :a'
[19:48:03] *** Joins: lgc (~lgc@user/lgc)
[19:50:37] <emanuele6> oh, wait, not quite
[19:50:44] <emanuele6> nevermind
[19:52:34] <emanuele6> just use -E since it is in POSIX now i guess
[19:53:14] <Soliton> you can just leave out the label to branch to the end of the script, btw.
[19:53:29] <emanuele6> right, thank you
[20:29:29] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[20:29:58] *** Quits: nitro__ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[21:27:25] *** Quits: TomyWork (~TomyLobo@p200300e80f06af0091a62fb7d0ba7771.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:46:09] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[21:56:05] *** Quits: danisztls (~weechat@user/danisztls) (Ping timeout: 252 seconds)
[22:09:38] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[22:10:16] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[22:10:39] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[22:13:44] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[22:14:45] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[22:47:47] *** Quits: nerozero (~nerozero@87.253.63.54) (Ping timeout: 252 seconds)
