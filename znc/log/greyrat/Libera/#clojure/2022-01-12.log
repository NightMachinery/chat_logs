[00:04:13] *** Quits: joe_colben (~joe____co@185.190.112.211) (Ping timeout: 240 seconds)
[00:10:06] *** Quits: cmiles74 (~miles@172.58.235.252) (Ping timeout: 256 seconds)
[00:14:37] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:f03c:12b3:d3b0:b61f) (Ping timeout: 240 seconds)
[00:17:16] *** Quits: victor (uid208353@user/victor) (Quit: Connection closed for inactivity)
[00:21:56] *** Joins: cmiles74 (~miles@172.58.235.252)
[00:27:25] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:f03c:12b3:d3b0:b61f)
[00:30:32] *** Quits: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net) (Quit: so long and thanks for all the fish)
[00:31:32] *** Joins: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net)
[00:45:39] *** Quits: cmiles74 (~miles@172.58.235.252) (Ping timeout: 256 seconds)
[00:52:26] *** Joins: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:ed97:d5f:3e36:f734)
[00:55:01] *** Quits: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:ed97:d5f:3e36:f734) (Client Quit)
[00:55:17] *** Quits: dadinn (~dadinn@host86-134-44-43.range86-134.btcentralplus.com) (Ping timeout: 256 seconds)
[00:55:48] <leah2> nij-: i mix up things sometimes
[00:56:02] <leah2> more so than with other languages, which i guess are more different
[00:57:01] <leah2> but mostly small things like where does the docstring go
[00:57:31] <technomancy> lol yeah that one drives me nuts
[00:57:37] <technomancy> I still mess it up
[00:58:02] <Para> We once had a code base where people consistently put the docstring after function args vector :)
[00:58:11] <technomancy> where it belongs
[00:58:41] <ToxicFrog> Yeah, I didn't break that habit until I finally got around to installing an inline linter
[00:59:05] <technomancy> syntax highlighting is the only reason I don't make that mistake more often
[00:59:28] <ToxicFrog> It makes sense when you sit down and think about it (the docstring is part of the function, not part of the specific arity, so it needs to go before the argument vector) but it feels wrong.
[00:59:40] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[00:59:41] <ToxicFrog> Mouthfeel is an underappreciated part of language design, IMO.
[01:00:17] *** Joins: struchu (~struchu@staticline-31-183-168-48.toya.net.pl)
[01:02:18] <leah2> :)
[01:02:33] <leah2> but for multiple arities the syntax is different anyway
[01:03:20] <Para> One thing Java got right is javadoc. The latter incarnation of it, that is, with doclets and all that, not the pseudoparser trash from early days.
[01:04:08] <Para> Haven't looked into it yet, but to my understanding KDoc is aiming to be something similar but semi-generic, although it is for Kotlin primarily. Never know with JetBrains.
[01:04:32] <technomancy> HTML documentation export is a workaround for forgetting to have implemented docstrings in your repl
[01:04:34] <technomancy> there I said it
[01:04:37] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:4f29:e68c:50c9:fe2) (Ping timeout: 240 seconds)
[01:04:37] <jeaye> Type hints for fn returns values, too. I often put those in the wrong spot. Before the fn symbol or before the args?
[01:05:41] <Para> That's partially why I liked Schema, made it very clear where that stuff should be :)
[01:05:41] <jeaye> It's before the args, for some reason. As though the args have the return type, not the fn name.
[01:06:00] <ToxicFrog> technomancy: it's a lot faster for me to type ^F <substring of fn name> than to type `(doc fully.qualified/name)`
[01:06:22] <ToxicFrog> Para: yeah, I've been very happy with Schema.
[01:06:27] <technomancy> ToxicFrog: I don't know what that means but if you can't rebind keys in your repl you should fix your repl
[01:06:48] <ToxicFrog> tbh I don't repl that much, and when I do it's just whatever `lein repl` gives me
[01:06:53] <ToxicFrog> I don't know if that supports keybindings
[01:07:38] <jeaye> :O
[01:07:46] <leah2> I use M-. more often than clojure core docs on the web now :p
[01:08:20] *** Quits: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi) (Ping timeout: 256 seconds)
[01:08:28] <jeaye> The keybindings are for your editor talking to your repl. When we say repl, we don't actually mean typing into `lein repl` the majority of the time. Your editor sends the text to the repl over a socket.
[01:08:37] <technomancy> lein repl is a lowest common denominator repl. it's not meant for people who care about the difference between ctrl-f vs typing out all three letters of "doc"
[01:09:11] <ToxicFrog> I probably should at some point figure out how to access the docs from inside my editor, but most of the time I'm not looking at the docs to get the contract of a specific function anyways, I'm looking at the docs to figure what function I should be using in an unfamiliar API
[01:09:31] <jeaye> ToxicFrog: Which editor?
[01:10:04] <jeaye> inb4 nano
[01:10:14] <ToxicFrog> At the moment, Sublime Text 3, although with the announcement that ST4 is moving to a subscription model I'm starting to look for alternatives.
[01:10:29] <ToxicFrog> (nano is for emergencies and quick fixes)
[01:10:39] <Para> Reminds me, gotta backup notepad.exe as I'll probably eventually move to Windows 11 and Microsoft butchered it.
[01:10:40] <jeaye> Ah, ST's Clojure support is not so good.
[01:11:36] <leah2> isnt there a fancy new mode now?
[01:12:06] <ToxicFrog> I've been generally happy with it but I'm also not someone who misses emacs, so
[01:13:03] <jeaye> leah2: I've heard of one. Not sure if it's generally available.
[01:13:32] <jeaye> ToxicFrog: You're not using the repl very much, so your access to idiomatic clojure usage is quite limited.
[01:13:55] <leah2> https://github.com/tonsky/Clojure-Sublimed ah for ST4
[01:14:12] <jeaye> One of the biggest selling points of clojure is its interactive development. Each function we build up, we do so using the repl and rich comments.
[01:14:47] <jeaye> Many OOP coders are "generally happy", too; they just don't see what they're missing. :D
[01:15:24] <jeaye> repl doesn't mean emacs, though. Works well in vim, atom, vscode, etc.
[01:22:33] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:4895:4e42:bd43:c273)
[01:29:30] *** Quits: struchu (~struchu@staticline-31-183-168-48.toya.net.pl) (Quit: WeeChat 3.3)
[01:35:14] *** Joins: joe_colben (~joe____co@185.190.112.211)
[01:55:30] <sobel> jeaye: when i was around other OOP devs who seemed happy, they were grinding without seeking relief. those who sought relief from the grind found lisp or burning man. i was a fairly unhappy OOP dev until i decided Spring/IoC were my ticket out. I landed on Clojure after that.
[01:55:44] <sobel> lisp and/or burning man
[02:07:24] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 256 seconds)
[02:13:20] <jeaye> sobel: Yeah, that's my point.
[02:13:44] <jeaye> He's used to not using the repl and hasn't been looking to improve the experience. But there's a lot to be improved.
[02:18:32] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:f03c:12b3:d3b0:b61f) (Ping timeout: 240 seconds)
[02:26:52] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[02:41:28] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[02:45:13] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 256 seconds)
[03:01:04] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[03:22:32] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Remote host closed the connection)
[03:34:32] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[04:06:08] *** Quits: Harlin (~DonQixote@63-230-76-242.clsp.qwest.net) (Quit: Leaving)
[04:08:42] *** Joins: Harlin (~DonQixote@63-230-76-242.clsp.qwest.net)
[04:10:38] *** Joins: cmiles74 (~miles@172.58.238.242)
[04:43:31] *** Quits: Tolstoy (~textual@97-120-40-166.ptld.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:49:19] *** Quits: cmiles74 (~miles@172.58.238.242) (Ping timeout: 256 seconds)
[05:13:25] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:41:21] *** Joins: archenoth (~archenoth@2604:3d09:681:f00:cb2:cb45:7a07:3d72)
[05:44:17] *** Quits: Oshawott (~archenoth@2604:3d09:681:f00:c41a:cb9b:cf9c:3078) (Ping timeout: 240 seconds)
[05:52:13] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[06:04:13] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-619B-dynamic.midco.net) (Ping timeout: 240 seconds)
[06:12:40] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[06:14:42] *** Quits: Harlin (~DonQixote@63-230-76-242.clsp.qwest.net) (Remote host closed the connection)
[06:15:37] *** Joins: mbuf (~Shakthi@223.178.108.186)
[06:41:08] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:49:55] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:56:49] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 256 seconds)
[07:08:05] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[07:13:01] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 240 seconds)
[07:44:13] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:47:59] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[07:56:37] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:4895:4e42:bd43:c273) (Ping timeout: 240 seconds)
[07:58:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:28:57] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[08:34:44] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[08:51:08] *** Joins: puchka (~marius@165.73.240.197)
[08:55:18] *** Joins: matty_matt (~matt@129.222.239.110)
[08:56:11] *** Joins: mrmr3 (~mrmr@user/mrmr)
[08:56:15] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:57:02] *** Joins: seabre_ (~seabre@user/seabre)
[08:57:37] *** Joins: samuelb (~samuelber@nata01.lip.pt)
[08:57:38] *** Joins: cognemo_ (~cognemo@cpe-46-164-24-121.dynamic.amis.net)
[08:59:56] *** Joins: uncleyea1 (~ian@pppoe.178-66-158-61.dynamic.avangarddsl.ru)
[09:00:09] *** Joins: ihabunek2 (~ihabunek@bezdomni.net)
[09:03:06] *** Joins: Trieste_ (T@user/pilgrim)
[09:04:53] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 256 seconds)
[09:05:11] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[09:05:11] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (*.net *.split)
[09:05:11] *** Quits: matty_ma1 (~matt@129.222.239.110) (*.net *.split)
[09:05:11] *** Quits: uncleyear (~ian@pppoe.178-66-158-61.dynamic.avangarddsl.ru) (*.net *.split)
[09:05:11] *** Quits: AdmiralBumbleBee (~AdmiralBu@47.203.174.105) (*.net *.split)
[09:05:11] *** Quits: lobotomy (~lobotomy@static.213.19.216.95.clients.your-server.de) (*.net *.split)
[09:05:11] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (*.net *.split)
[09:05:12] *** Quits: Trieste (T@user/pilgrim) (*.net *.split)
[09:05:12] *** Quits: karthik (~karthik@user/karthik) (*.net *.split)
[09:05:12] *** Quits: kawpuh (~kawpuh@66.42.81.80) (*.net *.split)
[09:05:12] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[09:05:13] *** Quits: materialfuture (~materialf@149.248.8.187) (*.net *.split)
[09:05:13] *** Quits: ns12 (~ns12@user/ns12) (*.net *.split)
[09:05:13] *** Quits: ihabunek1 (~ihabunek@bezdomni.net) (*.net *.split)
[09:05:13] *** Quits: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (*.net *.split)
[09:05:13] *** Quits: mrmr (~mrmr@user/mrmr) (*.net *.split)
[09:05:13] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:05:13] *** Quits: seabre (~seabre@user/seabre) (*.net *.split)
[09:05:14] *** mrmr3 is now known as mrmr
[09:05:46] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[09:06:31] *** Trieste_ is now known as Trieste
[09:09:25] *** Quits: puchka (~marius@165.73.240.197) (Ping timeout: 256 seconds)
[09:10:13] *** Joins: materialfuture (~materialf@149.248.8.187)
[09:10:13] *** Joins: lobotomy (~lobotomy@static.213.19.216.95.clients.your-server.de)
[09:10:13] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[09:10:13] *** Joins: karthik (~karthik@user/karthik)
[09:10:13] *** Joins: kawpuh (~kawpuh@66.42.81.80)
[09:10:13] *** Joins: ns12 (~ns12@user/ns12)
[09:10:13] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[09:10:13] *** Joins: flynn (~mcbloch@user/flynn)
[09:11:07] *** Joins: puchka (~marius@165.73.240.197)
[09:15:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[09:19:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:27:38] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[09:29:21] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:59:46] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[10:23:39] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 256 seconds)
[10:41:20] *** Joins: struchu (~struchu@62.87.192.114)
[10:55:17] *** Quits: puchka (~marius@165.73.240.197) (Ping timeout: 240 seconds)
[10:56:52] *** ihabunek2 is now known as ihabunek
[11:00:09] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[11:09:57] *** Joins: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:ed97:d5f:3e36:f734)
[11:23:52] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 256 seconds)
[11:26:31] *** Joins: puchka (~marius@165.73.240.198)
[11:36:04] *** Joins: MajorBiscuit (~MajorBisc@c-001-022-052.client.tudelft.eduvpn.nl)
[11:42:25] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:fd13:c077:15fe:2449)
[11:47:43] *** Quits: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:ed97:d5f:3e36:f734) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:59:33] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[12:01:23] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-619B-dynamic.midco.net)
[12:23:19] *** Joins: henry404089 (~henry4040@175.181.155.165)
[12:23:22] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 256 seconds)
[12:24:57] *** Quits: henry40408 (~henry4040@175.181.188.127) (Ping timeout: 240 seconds)
[12:24:58] *** henry404089 is now known as henry40408
[12:28:02] *** Quits: puchka (~marius@165.73.240.198) (Ping timeout: 240 seconds)
[12:30:13] *** Joins: puchka (~marius@165.73.240.198)
[12:32:54] *** Joins: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:ed97:d5f:3e36:f734)
[12:34:37] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:37:17] *** Joins: sagax (~sagax_nb@user/sagax)
[12:53:43] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:fd13:c077:15fe:2449) (Ping timeout: 250 seconds)
[12:59:16] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:fd13:c077:15fe:2449)
[13:00:00] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[13:08:05] *** Joins: joe_colben (~joe____co@185.190.112.211)
[13:09:01] *** Parts: joe_colben (~joe____co@185.190.112.211) ()
[13:12:37] *** Joins: dadinn (~dadinn@host86-134-44-43.range86-134.btcentralplus.com)
[13:17:39] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[13:24:00] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 256 seconds)
[13:28:15] *** Joins: joe_colben (~joe____co@185.190.112.211)
[13:28:48] *** Quits: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:ed97:d5f:3e36:f734) (Quit: Textual IRC Client: www.textualapp.com)
[13:46:09] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[13:46:32] *** Joins: joe_colben (~joe____co@185.190.112.211)
[13:59:56] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[14:10:39] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[14:18:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:23:30] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 256 seconds)
[14:26:54] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[14:32:26] *** Joins: joe_colben (~joe____co@185.190.112.211)
[14:40:06] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:42:37] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 240 seconds)
[14:42:40] *** Joins: to-hu (~Thunderbi@p200300e9af441c0007c3d429b95aedfb.dip0.t-ipconnect.de)
[14:54:00] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:54:37] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:07:59] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[15:48:10] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[15:58:36] <nij-> Hi o/   _ If I use CL and stick with the data-oriented principle, what do I miss from Clojure besides immutability, excellent support for concurrency, and Java libs (which are a whole lot)?
[15:59:57] <TimMc> I don't know CL, but I feel like those are the main points.
[16:16:31] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:fd13:c077:15fe:2449) (Ping timeout: 250 seconds)
[16:22:06] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:fd13:c077:15fe:2449)
[16:23:52] <nij-> Yeah, I ask this question to understand clojure more. There are some people who know CL here.. i'll be patient.
[16:29:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[16:30:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:30:59] *** Joins: shiranaihito_ (~textual@2001-b011-4000-3a1a-284e-7097-7e8c-60bf.dynamic-ip6.hinet.net)
[16:33:37] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Ping timeout: 240 seconds)
[17:05:37] *** Quits: dadinn (~dadinn@host86-134-44-43.range86-134.btcentralplus.com) (Ping timeout: 240 seconds)
[17:09:06] *** Quits: shem (~shem@saltus.discendum.com) (Quit: uusi kermeli)
[17:10:40] *** Quits: puchka (~marius@165.73.240.198) (Ping timeout: 256 seconds)
[17:11:44] *** Joins: puchka (~marius@165.73.241.3)
[17:11:55] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[17:20:18] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[17:30:34] *** Joins: joe_colben (~joe____co@185.190.112.211)
[17:38:39] *** Quits: to-hu (~Thunderbi@p200300e9af441c0007c3d429b95aedfb.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:47:56] <rovanion> I store my data in a SQL database. I'm starting to think about writing specs for my data. What do you think about speccing the "rows" as theDo you just spec the "rows" as they are with foreign keys v.s. speccing nested datastructures? I'm writing the specifications in/with Malli.
[17:48:27] <Para> It's easier to compose complex structures from row definitions.
[17:49:35] <Para> You'll probably need a few helper functions which allow you to express things like "into rowspec-a on key :some_id merge rowspec-b" to define your full specs but those aren't hard to come up with :)
[17:51:37] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 240 seconds)
[17:51:49] <rovanion> Righto!
[18:01:49] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:fd13:c077:15fe:2449) (Ping timeout: 240 seconds)
[18:02:00] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:13d9:f7c3:c360:6946)
[18:30:45] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[18:31:15] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:567f:a71e:f346:c5f0)
[18:53:16] *** Joins: Frozenlock (~user@modemcable251.64-203-24.mc.videotron.ca)
[19:01:01] <Frozenlock> Let's say, hypothetically, that I'm blowing the stack by having too many transducers. What would be the solution? (different approach or even leveraging a library)
[19:05:34] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[19:09:56] <aphyr> *blinks*
[19:10:05] <aphyr> how... many... transducers
[19:10:52] <ridcully> (into [] (apply comp (repeat 24000 (map inc))) [1 2 3])
[19:11:01] <ridcully> this is around where it breaks for me...
[19:11:35] <ridcully> Frozenlock: are you sure, you are not just having some (infinte) recursion somewhere?
[19:12:25] <Frozenlock> aphyr: I'd say a few (tens of) thousands
[19:13:02] <Frozenlock> Pretty sure. The code has been working fine for years, but it choke on a larger-than-usual transducers generating objets.
[19:13:41] <aphyr> bahahahahah
[19:13:44] <aphyr> ilu
[19:14:37] <aphyr> So... in general you can turn anything that consumes stack into something that doesn't consume stack by emulating the stack on heap
[19:14:55] <aphyr> and for comp, there's a special case, which is simply calling each fn in a loop at a single level
[19:15:36] <aphyr> instead of (inc (inc (inc 0))), you do the equivalent of `(let [x 0 x (inc x) x (inc x) x (inc x)])
[19:19:37] <Frozenlock> I guess there's nothing that would do this automatically do this for me? (solve-my-problem epic-transducer-blowing-my-stack)
[19:19:47] <aphyr> Hang on a second, I'm working on it
[19:20:19] <aphyr> (I don't remember how transducers work exactly, gotta check docs)
[19:24:16] <aphyr> By the time you've got `epic-transducer` it's game over--that thing is an opaque box of a function that's gonna go super deep in stack
[19:24:21] *** Joins: mattroelle (~Matt_Roel@funbox.mattroelle.com)
[19:24:40] <aphyr> But before that point, when you have the *stages*, I feel like you should be able to build a flat composed version
[19:25:50] <ridcully> just to throw it in: can you increase the stack (e.g. -Xss)?
[19:26:22] <aphyr> The fact that you're generating these super-deep functions based on user input though, that sounds... iffy
[19:26:32] <aphyr> Like what happens when someone generates an Even Bigger Input
[19:26:42] <Frozenlock> ridcully: I can locally, but unfortunately it's also running on machines outside my control.
[19:26:44] <aphyr> this feels like a job for an interpreter of some kind
[19:27:08] <Frozenlock> aphyr: Yes I have multiple stages; I could act there.
[19:27:51] <aphyr> I'm actually stumped here. I thought the problem was `comp`, but that's not actually it--it's the fn that comp spits out
[19:29:12] <Frozenlock> If the user generate an Even Bigger Input, then eventually it will consume all the allocated memory and/or cpu. :-/
[19:29:13] <aphyr> https://github.com/aphyr/tesser/blob/master/core/src/tesser/core.clj#L396 there's the same problem in Tesser--we generate functions that call other fns
[19:30:12] <aphyr> I can see the shape of the thing you want here--instead of invoking the inner reducing fn directly, it has to return control back to the caller, and the caller invokes the deeper reducing fn
[19:30:13] *** Quits: pam_cakes[m] (~pamcakesm@2001:470:69fc:105::925c) (Quit: You have been kicked for being idle)
[19:30:23] <aphyr> but that's not going to work with any of the existing transducers
[19:30:36] *** Joins: pam_cakes[m] (~pamcakesm@2001:470:69fc:105::925c)
[19:30:45] *** Parts: pam_cakes[m] (~pamcakesm@2001:470:69fc:105::925c) ()
[19:34:06] <aphyr> Yeah, short term, bump the stack size I guess
[19:34:13] <TimMc> Can you break it up into chunks?
[19:34:24] <TimMc> Stacks of 300 at a time, then trampoline to the next?
[19:35:07] <aphyr> Look at where the invocation of the reducing fn happens in `(source map)`
[19:36:07] <aphyr> You can't break up the transducers because the output of running a transduce loses information that the next stage would need
[19:41:13] *** Joins: xsperry (~xs@user/xsperry)
[19:57:56] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[20:18:25] <aphyr> Frozenlock: OK, I've burned too much time on this for now, but here's generally the direction I would head
[20:18:44] <aphyr> https://gist.github.com/aphyr/927c5cc24ddcca252893fa3d135f4657
[20:19:37] <aphyr> Basically you turn the stuff that would normally be handled in the reducing function directly, as code, and you turn it into a data structure with defined semantics for lifting, unlifting, skipping, early return, etc
[20:20:41] <aphyr> One big problem is that this winds up with a lot more function call boundaries, and it's nowhere near as friendly to the JIT as transducers are
[20:21:33] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-619B-dynamic.midco.net) (Quit: Using Circe, the loveliest of all IRC clients)
[20:21:34] <aphyr> So I think an alternate approach might be to keep using transducers, but intentionally break the stack by having certain transducers which hop on to a threadpool executor and continue execution there
[20:23:44] *** Quits: puchka (~marius@165.73.241.3) (Quit: leaving)
[20:34:16] *** Quits: unyu (~pyon@user/pyon) (Read error: Connection reset by peer)
[20:36:23] *** Joins: unyu (~pyon@user/pyon)
[20:41:19] *** Joins: EsoAlgo4 (~EsoAlgo@152.70.142.52)
[20:54:58] *** Joins: to-hu (~Thunderbi@p200300e9af441c00ac1896410d7ebddf.dip0.t-ipconnect.de)
[21:00:02] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[21:02:32] *** Quits: shiranaihito_ (~textual@2001-b011-4000-3a1a-284e-7097-7e8c-60bf.dynamic-ip6.hinet.net) (Ping timeout: 240 seconds)
[21:04:52] <TimMc> This would be in line with the chunking suggestion I had?
[21:06:08] <aphyr> TimMc: Yeah, I can't figure out how to do it without consuming a thread per jump though
[21:06:27] <TimMc> Oh... the threadpool thing would work even without cooperation from whatever builds up the stack of transducers?
[21:06:47] <TimMc> (I'm pretty hazy on transducers, I don't know why I'm even getting involved, haha)
[21:06:59] <aphyr> Oh, same, it's like 3 orders of indirect functions
[21:07:11] <aphyr> Super hard to keep it clear in my head without types
[21:08:08] <TimMc> My attitude towards them has generally been "I'm goign to mostly ignore this until I have a problem and I want a different kind of problem instead."
[21:11:09] <aphyr> Frozenlock: OK, so... this *will* consume a thread per chunk, but if you don't need to do too many transduces at a time, and they won't go deeper than, I dunno, a few million stages, this might work
[21:11:13] <aphyr> https://gist.github.com/aphyr/52c4e1cc416166a0e1997db77efe685a
[21:11:59] *** Joins: seschwar (~seschwar@user/seschwar)
[21:30:38] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:04] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:36:03] <TimMc> haha, nice
[21:42:00] *** Quits: mbuf (~Shakthi@223.178.108.186) (Quit: Leaving)
[21:57:10] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[21:57:32] *** Joins: fredmanglis_ (~fredmangl@li1420-95.members.linode.com)
[21:57:49] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Client Quit)
[21:58:38] *** Joins: form_fee- (~form_feed@nixon.einval.eu)
[21:59:36] *** Joins: nefercheprure (~tma@twin.jikos.cz)
[22:05:16] *** Quits: sunarch (uid526836@user/sunarch) (*.net *.split)
[22:05:16] *** Quits: wnh (~user@user/wnh) (*.net *.split)
[22:05:16] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (*.net *.split)
[22:05:17] *** Quits: theruran (uid11305@id-11305.hampstead.irccloud.com) (*.net *.split)
[22:05:17] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (*.net *.split)
[22:05:17] *** Quits: mgxm (~mgxm@user/mgxm) (*.net *.split)
[22:05:17] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (*.net *.split)
[22:05:17] *** Quits: lockdown (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com) (*.net *.split)
[22:05:17] *** Quits: yason (yason@kapsi.fi) (*.net *.split)
[22:05:17] *** Quits: rufo_ (~rufo@ct.rufoa.com) (*.net *.split)
[22:05:17] *** Quits: port9 (sid124217@id-124217.uxbridge.irccloud.com) (*.net *.split)
[22:05:17] *** Quits: jemoka (~jemoka@user/jemoka) (*.net *.split)
[22:05:18] *** Quits: davdunc (sid93271@id-93271.ilkley.irccloud.com) (*.net *.split)
[22:05:18] *** Quits: fredmanglis (fredmangli@2a01:7e01::f03c:91ff:fe6b:16ca) (*.net *.split)
[22:05:18] *** Quits: AnnArcana (~AnnArcana@2a03:b0c0:2:d0::bc0:2001) (*.net *.split)
[22:05:18] *** Quits: TMA (tma@twin.jikos.cz) (*.net *.split)
[22:05:18] *** Quits: dunc (sid16@id-16.uxbridge.irccloud.com) (*.net *.split)
[22:05:18] *** Quits: form_feed (~form_feed@user/f/x-7101985) (*.net *.split)
[22:05:18] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[22:05:18] *** Quits: devn1 (devn@2600:3c02::f03c:92ff:feeb:d478) (*.net *.split)
[22:05:18] *** Quits: nullm0dem (~nullm0dem@rs232.0x2f8.io) (*.net *.split)
[22:05:18] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[22:05:18] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[22:05:19] *** Quits: dixie (~dixie@real.wilbury.sk) (*.net *.split)
[22:05:19] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (*.net *.split)
[22:05:19] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (*.net *.split)
[22:05:19] *** Quits: gonewest818[m] (~gonewest8@2001:470:69fc:105::f38b) (*.net *.split)
[22:05:19] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (*.net *.split)
[22:05:20] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (*.net *.split)
[22:05:20] *** Quits: amk (~amk@109.255.169.126) (*.net *.split)
[22:05:20] *** Quits: mcint (mcint@user/mcint) (*.net *.split)
[22:05:20] *** Quits: goodger (~goodger@2a01:4f8:c2c:33db::1) (*.net *.split)
[22:05:20] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (*.net *.split)
[22:05:20] *** Quits: TimMc (~timmc@user/timmc) (*.net *.split)
[22:05:21] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (*.net *.split)
[22:05:21] *** Quits: gueorgui (~gueorgui@user/gueorgui) (*.net *.split)
[22:05:21] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:567f:a71e:f346:c5f0) (*.net *.split)
[22:05:21] *** Quits: ocTan_14_yKp[m] (~replikvlt@2001:470:69fc:105::2cb0) (*.net *.split)
[22:05:21] *** Quits: gko (~user@user/gko) (*.net *.split)
[22:05:22] *** Quits: technomancy (~user@170.ip-158-69-211.net) (*.net *.split)
[22:05:22] *** Quits: obviyus (sid415299@user/obviyus) (*.net *.split)
[22:05:22] *** Quits: mp (sid298319@id-298319.lymington.irccloud.com) (*.net *.split)
[22:05:22] *** Quits: sushimako (~flo@2a03:b0c0:2:d0::e3:d001) (*.net *.split)
[22:05:22] *** Quits: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com) (*.net *.split)
[22:05:22] *** Quits: seschwar (~seschwar@user/seschwar) (*.net *.split)
[22:05:23] *** Quits: xsperry (~xs@user/xsperry) (*.net *.split)
[22:05:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[22:05:23] *** Quits: mattroelle (~Matt_Roel@funbox.mattroelle.com) (*.net *.split)
[22:05:24] *** Quits: kipz (~kipz@home.kipz.org) (*.net *.split)
[22:05:24] *** Quits: fluxit (~fluxit@techsmix.net) (*.net *.split)
[22:05:24] *** Quits: lazr (~lazr@45.76.248.123) (*.net *.split)
[22:05:24] *** Quits: lunik1 (~lunik1@37.205.14.203) (*.net *.split)
[22:05:24] *** Quits: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch) (*.net *.split)
[22:05:24] *** Quits: tomku (~tomku@user/tomku) (*.net *.split)
[22:05:25] *** Quits: HDurer (~hdurer@104.132.45.86) (*.net *.split)
[22:05:25] *** Quits: RedNifre (~michael@dslb-002-203-247-192.002.203.pools.vodafone-ip.de) (*.net *.split)
[22:05:25] *** Quits: Duke- (~duke@198.20.115.180) (*.net *.split)
[22:05:25] *** Quits: wht (~wht@havoc.proulx.com) (*.net *.split)
[22:05:25] *** Quits: jjhoo (~jahakala@user/jjhoo) (*.net *.split)
[22:05:25] *** Quits: aphyr (~kyle@aphyr.com) (*.net *.split)
[22:05:25] *** Quits: RendySurvage (~rendysurv@64.72.216.39) (*.net *.split)
[22:05:25] *** Quits: sobel (~matt@66.219.34.76) (*.net *.split)
[22:05:25] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (*.net *.split)
[22:05:25] *** Quits: mzan (~quassel@mail.asterisell.com) (*.net *.split)
[22:05:25] *** Quits: wink (fhtagn@user/wink) (*.net *.split)
[22:05:25] *** Quits: sailorTheCat (~sailorCat@mail2.gajsin.name) (*.net *.split)
[22:05:25] *** Quits: i7c (~i7c@user/i7c) (*.net *.split)
[22:05:25] *** Quits: choas (~lars@ppp-188-174-89-52.dynamic.mnet-online.de) (*.net *.split)
[22:05:26] *** Quits: unyu (~pyon@user/pyon) (*.net *.split)
[22:05:26] *** Quits: croeso[m] (~croesovep@2001:470:69fc:105::1:aaa) (*.net *.split)
[22:05:26] *** Quits: bbz (sid62109@id-62109.ilkley.irccloud.com) (*.net *.split)
[22:05:27] *** Quits: glider (~glider@user/glider) (*.net *.split)
[22:05:27] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (*.net *.split)
[22:05:27] *** Quits: teddyc (theodorc@cassarossa.samfundet.no) (*.net *.split)
[22:05:27] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (*.net *.split)
[22:05:27] *** Quits: andreyorst (~andreyors@broadband-90-154-71-13.ip.moscow.rt.ru) (*.net *.split)
[22:05:27] *** Quits: madscientist` (tpalohei@kapsi.fi) (*.net *.split)
[22:05:27] *** Quits: jaawerth (~jaawerth@104.131.115.202) (*.net *.split)
[22:05:27] *** Quits: hiredman (~hiredman@frontier1.downey.family) (*.net *.split)
[22:05:27] *** Quits: mala (~mala@user/malaclyps) (*.net *.split)
[22:05:27] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::68b3) (*.net *.split)
[22:05:27] *** Quits: karthink[m] (~karthinkm@2001:470:69fc:105::d777) (*.net *.split)
[22:05:28] *** Quits: nivekuil (~nivekuilc@2001:470:69fc:105::d57e) (*.net *.split)
[22:05:28] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (*.net *.split)
[22:05:28] *** Quits: spec (~spec@user/spec) (*.net *.split)
[22:05:28] *** Quits: axvr (757f658d76@2604:bf00:561:2000::e1) (*.net *.split)
[22:05:28] *** Quits: sm2n (ae95cb1267@user/sm2n) (*.net *.split)
[22:05:29] *** Quits: bailon (~gizzard@saturn.whatbox.ca) (*.net *.split)
[22:05:29] *** Quits: harryvederci (aca786de33@user/harryvederci) (*.net *.split)
[22:05:29] *** Quits: jackhill (~jackhill@kalessin.dragonsnail.net) (*.net *.split)
[22:05:29] *** Quits: penguwin (~penguwin@fribbledom.com) (*.net *.split)
[22:05:29] *** Quits: Lulu (~meow@vyos/developer/Lulu) (*.net *.split)
[22:05:29] *** Quits: jsn- (~jason@scw.ice-9.eu) (*.net *.split)
[22:05:29] *** Quits: benoitj (~benoitj@user/benoitj) (*.net *.split)
[22:05:29] *** Quits: bcmiller (~bm3719@66.42.95.185) (*.net *.split)
[22:05:29] *** Quits: to-hu (~Thunderbi@p200300e9af441c00ac1896410d7ebddf.dip0.t-ipconnect.de) (*.net *.split)
[22:05:30] *** Quits: golanv (~golanv@2001:470:69fc:105::54c) (*.net *.split)
[22:05:30] *** Quits: kakuhen (~kakuhen@user/kakuhen) (*.net *.split)
[22:05:30] *** Quits: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152) (*.net *.split)
[22:05:30] *** Quits: ajb_ (~ajb@cupid.whatbox.ca) (*.net *.split)
[22:05:30] *** Quits: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (*.net *.split)
[22:05:31] *** Quits: dale (dale@user/dale) (*.net *.split)
[22:05:31] *** Quits: zak (~zak@144.172.69.61) (*.net *.split)
[22:05:31] *** Quits: Para (~Para@95.216.176.167) (*.net *.split)
[22:05:31] *** Quits: drakonis (drakonis@user/drakonis) (*.net *.split)
[22:05:31] *** Quits: sudden (~cat@user/sudden) (*.net *.split)
[22:05:32] *** Quits: _\_ (~o@user/ding) (*.net *.split)
[22:05:32] *** Quits: maskd (~eu@user/maskd) (*.net *.split)
[22:05:32] *** Quits: Wanderer (~wanderer@user/wanderer) (*.net *.split)
[22:05:32] *** Quits: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736) (*.net *.split)
[22:05:33] *** Quits: harrow (~harrow@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[22:05:33] *** Quits: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[22:05:33] *** Quits: samebchase (~samebchas@51.15.68.182) (*.net *.split)
[22:05:33] *** Quits: spirit- (~spirit@233.ip-144-217-92.net) (*.net *.split)
[22:05:33] *** Quits: amoe (~amoe@visarend.solasistim.net) (*.net *.split)
[22:05:34] *** Quits: Solid (~slot@xmonad/slotThe) (*.net *.split)
[22:05:34] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (*.net *.split)
[22:05:34] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[22:05:34] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:13d9:f7c3:c360:6946) (*.net *.split)
[22:05:35] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (*.net *.split)
[22:05:35] *** Quits: thinkerer0891[m] (~thinkerer@2001:470:69fc:105::1:5c62) (*.net *.split)
[22:05:35] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (*.net *.split)
[22:05:35] *** Quits: Ragnor (~Ragnor@user/ragnor) (*.net *.split)
[22:05:35] *** Quits: gendl (sid100083@id-100083.hampstead.irccloud.com) (*.net *.split)
[22:05:35] *** Quits: nackjicholson (e492d83292@2604:bf00:561:2000::1d8) (*.net *.split)
[22:05:36] *** Quits: IUSR (sid348938@id-348938.hampstead.irccloud.com) (*.net *.split)
[22:05:36] *** Quits: EdwardIII (~edwardiii@user/edwardiii) (*.net *.split)
[22:05:36] *** Quits: broquain1 (~dbrook@static.140.30.69.159.clients.your-server.de) (*.net *.split)
[22:05:36] *** Quits: djm (djm@user/djm) (*.net *.split)
[22:05:36] *** Quits: henry40408 (~henry4040@175.181.155.165) (*.net *.split)
[22:05:36] *** Quits: Frozenlock (~user@modemcable251.64-203-24.mc.videotron.ca) (*.net *.split)
[22:05:37] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (*.net *.split)
[22:05:37] *** Quits: sagax (~sagax_nb@user/sagax) (*.net *.split)
[22:05:37] *** Quits: cognemo_ (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (*.net *.split)
[22:05:37] *** Quits: samuelb (~samuelber@nata01.lip.pt) (*.net *.split)
[22:05:37] *** Quits: seabre_ (~seabre@user/seabre) (*.net *.split)
[22:05:37] *** Quits: mrmr (~mrmr@user/mrmr) (*.net *.split)
[22:05:37] *** Quits: matty_matt (~matt@129.222.239.110) (*.net *.split)
[22:05:37] *** Quits: EsoAlgo4 (~EsoAlgo@152.70.142.52) (*.net *.split)
[22:05:38] *** Quits: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net) (*.net *.split)
[22:05:38] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (*.net *.split)
[22:05:38] *** Quits: justIrresolute (~justache@user/justache) (*.net *.split)
[22:05:39] *** Quits: xerox (~edi@user/edi) (*.net *.split)
[22:05:39] *** Quits: Patternmaster (~georg@li1192-118.members.linode.com) (*.net *.split)
[22:05:39] *** Quits: nuorzi (nuorzi@hilla.kapsi.fi) (*.net *.split)
[22:05:39] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[22:05:39] *** Quits: _tjr_ (~tjr@233.ip-144-217-92.net) (*.net *.split)
[22:05:39] *** Quits: markmarkmark (~mark@user/markmarkmark) (*.net *.split)
[22:05:39] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (*.net *.split)
[22:05:39] *** Quits: logiz (~otter@pool-100-2-192-142.nycmny.fios.verizon.net) (*.net *.split)
[22:05:39] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (*.net *.split)
[22:05:39] *** Quits: leah2 (~leah@vuxu.org) (*.net *.split)
[22:05:39] *** Quits: res0nat0r0 (~Fletch@dia.whatbox.ca) (*.net *.split)
[22:05:39] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[22:10:20] *** Joins: energizer (~energizer@user/energizer)
[22:10:20] *** Joins: cacheyou- (~cache@user/cacheyourdreams)
[22:10:20] *** Joins: joe_colben (~joe____co@185.190.112.211)
[22:10:20] *** Joins: dixie_ (~dixie@real.wilbury.sk)
[22:10:20] *** Joins: pl (sid98063@id-98063.helmsley.irccloud.com)
[22:10:20] *** Joins: cross_ (~cross@spitfire.i.gajendra.net)
[22:10:20] *** Joins: lockdown_ (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com)
[22:10:20] *** Joins: v3ga1 (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[22:10:20] *** Joins: devn2 (devn@2600:3c02::f03c:92ff:feeb:d478)
[22:10:20] *** Joins: yason_ (yason@kapsi.fi)
[22:10:20] *** Joins: rufo (~rufo@ct.rufoa.com)
[22:10:20] *** Joins: dunc (sid16@id-16.uxbridge.irccloud.com)
[22:10:20] *** Joins: sunarch (uid526836@user/sunarch)
[22:10:20] *** Joins: nullm0de1 (~nullm0dem@rs232.0x2f8.io)
[22:10:20] *** Joins: jemoka_ (~jemoka@user/jemoka)
[22:10:20] *** Joins: mgxm_ (~mgxm@user/mgxm)
[22:10:20] *** Joins: theruran (uid11305@id-11305.hampstead.irccloud.com)
[22:10:20] *** Joins: port9 (sid124217@id-124217.uxbridge.irccloud.com)
[22:10:20] *** Joins: davdunc (sid93271@id-93271.ilkley.irccloud.com)
[22:10:20] *** Joins: henry40408 (~henry4040@175.181.155.165)
[22:10:20] *** Joins: seschwar (~seschwar@user/seschwar)
[22:10:20] *** Joins: to-hu (~Thunderbi@p200300e9af441c00ac1896410d7ebddf.dip0.t-ipconnect.de)
[22:10:20] *** Joins: EsoAlgo4 (~EsoAlgo@152.70.142.52)
[22:10:20] *** Joins: unyu (~pyon@user/pyon)
[22:10:20] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[22:10:20] *** Joins: xsperry (~xs@user/xsperry)
[22:10:20] *** Joins: mattroelle (~Matt_Roel@funbox.mattroelle.com)
[22:10:20] *** Joins: Frozenlock (~user@modemcable251.64-203-24.mc.videotron.ca)
[22:10:20] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:567f:a71e:f346:c5f0)
[22:10:20] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:13d9:f7c3:c360:6946)
[22:10:20] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[22:10:20] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:10:20] *** Joins: sagax (~sagax_nb@user/sagax)
[22:10:20] *** Joins: cognemo_ (~cognemo@cpe-46-164-24-121.dynamic.amis.net)
[22:10:20] *** Joins: samuelb (~samuelber@nata01.lip.pt)
[22:10:20] *** Joins: seabre_ (~seabre@user/seabre)
[22:10:20] *** Joins: mrmr (~mrmr@user/mrmr)
[22:10:20] *** Joins: matty_matt (~matt@129.222.239.110)
[22:10:20] *** Joins: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net)
[22:10:20] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[22:10:20] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[22:10:20] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[22:10:20] *** Joins: kipz (~kipz@home.kipz.org)
[22:10:20] *** Joins: Patternmaster (~georg@li1192-118.members.linode.com)
[22:10:20] *** Joins: justIrresolute (~justache@user/justache)
[22:10:20] *** Joins: fluxit (~fluxit@techsmix.net)
[22:10:20] *** Joins: xerox (~edi@user/edi)
[22:10:20] *** Joins: lazr (~lazr@45.76.248.123)
[22:10:20] *** Joins: nuorzi (nuorzi@hilla.kapsi.fi)
[22:10:20] *** Joins: lunik1 (~lunik1@37.205.14.203)
[22:10:20] *** Joins: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch)
[22:10:20] *** Joins: tomku (~tomku@user/tomku)
[22:10:20] *** Joins: golanv (~golanv@2001:470:69fc:105::54c)
[22:10:20] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[22:10:20] *** Joins: karthink[m] (~karthinkm@2001:470:69fc:105::d777)
[22:10:20] *** Joins: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152)
[22:10:20] *** Joins: croeso[m] (~croesovep@2001:470:69fc:105::1:aaa)
[22:10:20] *** Joins: gonewest818[m] (~gonewest8@2001:470:69fc:105::f38b)
[22:10:20] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[22:10:20] *** Joins: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736)
[22:10:20] *** Joins: thinkerer0891[m] (~thinkerer@2001:470:69fc:105::1:5c62)
[22:10:20] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[22:10:20] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[22:10:20] *** Joins: nivekuil (~nivekuilc@2001:470:69fc:105::d57e)
[22:10:20] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[22:10:20] *** Joins: ocTan_14_yKp[m] (~replikvlt@2001:470:69fc:105::2cb0)
[22:10:20] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[22:10:20] *** Joins: choas (~lars@ppp-188-174-89-52.dynamic.mnet-online.de)
[22:10:20] *** Joins: i7c (~i7c@user/i7c)
[22:10:20] *** Joins: sailorTheCat (~sailorCat@mail2.gajsin.name)
[22:10:20] *** Joins: wink (fhtagn@user/wink)
[22:10:20] *** Joins: mzan (~quassel@mail.asterisell.com)
[22:10:20] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[22:10:20] *** Joins: sobel (~matt@66.219.34.76)
[22:10:20] *** Joins: RendySurvage (~rendysurv@64.72.216.39)
[22:10:20] *** Joins: aphyr (~kyle@aphyr.com)
[22:10:20] *** Joins: jjhoo (~jahakala@user/jjhoo)
[22:10:20] *** Joins: wht (~wht@havoc.proulx.com)
[22:10:20] *** Joins: Duke- (~duke@198.20.115.180)
[22:10:20] *** Joins: RedNifre (~michael@dslb-002-203-247-192.002.203.pools.vodafone-ip.de)
[22:10:20] *** Joins: HDurer (~hdurer@104.132.45.86)
[22:10:20] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[22:10:20] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[22:10:20] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[22:10:20] *** Joins: TimMc (~timmc@user/timmc)
[22:10:20] *** Joins: goodger (~goodger@2a01:4f8:c2c:33db::1)
[22:10:20] *** Joins: mcint (mcint@user/mcint)
[22:10:20] *** Joins: amk (~amk@109.255.169.126)
[22:10:20] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[22:10:20] *** Joins: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com)
[22:10:20] *** Joins: sushimako (~flo@2a03:b0c0:2:d0::e3:d001)
[22:10:20] *** Joins: mp (sid298319@id-298319.lymington.irccloud.com)
[22:10:20] *** Joins: obviyus (sid415299@user/obviyus)
[22:10:20] *** Joins: technomancy (~user@170.ip-158-69-211.net)
[22:10:20] *** Joins: gko (~user@user/gko)
[22:10:20] *** Joins: mala (~mala@user/malaclyps)
[22:10:20] *** Joins: hiredman (~hiredman@frontier1.downey.family)
[22:10:20] *** Joins: jaawerth (~jaawerth@104.131.115.202)
[22:10:20] *** Joins: madscientist` (tpalohei@kapsi.fi)
[22:10:20] *** Joins: andreyorst (~andreyors@broadband-90-154-71-13.ip.moscow.rt.ru)
[22:10:20] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[22:10:20] *** Joins: teddyc (theodorc@cassarossa.samfundet.no)
[22:10:20] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[22:10:20] *** Joins: glider (~glider@user/glider)
[22:10:20] *** Joins: bbz (sid62109@id-62109.ilkley.irccloud.com)
[22:10:20] *** Joins: bcmiller (~bm3719@66.42.95.185)
[22:10:20] *** Joins: benoitj (~benoitj@user/benoitj)
[22:10:20] *** Joins: jsn- (~jason@scw.ice-9.eu)
[22:10:20] *** Joins: Lulu (~meow@vyos/developer/Lulu)
[22:10:20] *** Joins: penguwin (~penguwin@fribbledom.com)
[22:10:20] *** Joins: jackhill (~jackhill@kalessin.dragonsnail.net)
[22:10:20] *** Joins: bailon (~gizzard@saturn.whatbox.ca)
[22:10:20] *** Joins: harryvederci (aca786de33@user/harryvederci)
[22:10:20] *** Joins: sm2n (ae95cb1267@user/sm2n)
[22:10:20] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[22:10:20] *** Joins: spec (~spec@user/spec)
[22:10:20] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[22:10:20] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[22:10:20] *** Joins: Solid (~slot@xmonad/slotThe)
[22:10:20] *** Joins: amoe (~amoe@visarend.solasistim.net)
[22:10:20] *** Joins: spirit- (~spirit@233.ip-144-217-92.net)
[22:10:20] *** Joins: samebchase (~samebchas@51.15.68.182)
[22:10:20] *** Joins: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de)
[22:10:20] *** Joins: harrow (~harrow@static.38.6.217.95.clients.your-server.de)
[22:10:20] *** Joins: sudden (~cat@user/sudden)
[22:10:20] *** Joins: Para (~Para@95.216.176.167)
[22:10:20] *** Joins: zak (~zak@144.172.69.61)
[22:10:20] *** Joins: drakonis (drakonis@user/drakonis)
[22:10:20] *** Joins: dale (dale@user/dale)
[22:10:20] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[22:10:20] *** Joins: ajb_ (~ajb@cupid.whatbox.ca)
[22:10:20] *** Joins: Wanderer (~wanderer@user/wanderer)
[22:10:20] *** Joins: maskd (~eu@user/maskd)
[22:10:20] *** Joins: _\_ (~o@user/ding)
[22:10:20] *** Joins: djm (djm@user/djm)
[22:10:20] *** Joins: broquain1 (~dbrook@static.140.30.69.159.clients.your-server.de)
[22:10:20] *** Joins: EdwardIII (~edwardiii@user/edwardiii)
[22:10:20] *** Joins: IUSR (sid348938@id-348938.hampstead.irccloud.com)
[22:10:20] *** Joins: Ragnor (~Ragnor@user/ragnor)
[22:10:20] *** Joins: nackjicholson (e492d83292@2604:bf00:561:2000::1d8)
[22:10:20] *** Joins: gendl (sid100083@id-100083.hampstead.irccloud.com)
[22:10:20] *** Joins: res0nat0r0 (~Fletch@dia.whatbox.ca)
[22:10:20] *** Joins: leah2 (~leah@vuxu.org)
[22:10:20] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[22:10:20] *** Joins: logiz (~otter@pool-100-2-192-142.nycmny.fios.verizon.net)
[22:10:20] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[22:10:20] *** Joins: markmarkmark (~mark@user/markmarkmark)
[22:10:20] *** Joins: _tjr_ (~tjr@233.ip-144-217-92.net)
[22:10:20] *** Joins: ChanServ (ChanServ@services.libera.chat)
[22:10:20] *** molybdenum.libera.chat sets mode: +o ChanServ
[22:10:31] *** Joins: victor_ (uid208353@user/victor)
[22:12:05] *** Joins: AnnArcana (~AnnArcana@2a03:b0c0:2:d0::bc0:2001)
[22:12:10] *** Joins: Ekho- (~Ekho@user/ekho)
[22:26:21] *** nefercheprure is now known as TMA
[22:32:29] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[22:43:38] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:57:58] *** Joins: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi)
[23:16:00] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[23:19:23] <Frozenlock> aphyr: Very nice
[23:19:36] *** Joins: shem (~shem@saltus.discendum.com)
[23:19:45] <Frozenlock> Looks simple enough that I might be able to use it without much refactoring.
[23:19:46] <Frozenlock> Thanks!
[23:22:20] <TimMc> (defn s-s-s-stack-breaker ...)
[23:26:41] <Para> Once the green threads land, I'm kinda tempted to make a macro which converts every subform into a promise recursively and just spams it into the threads. Probably won't work, but hey.
[23:26:53] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[23:28:13] <TimMc> I'll bring popcorn.
[23:28:54] <TimMc> -!- ThreadLocal has entered the chat
[23:29:50] <Para> And of course when it doesn't work, I'll implement a Executor pool which runs on blockchain.
[23:29:58] <Para> But instead of coins it's compute tasks.
[23:36:34] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[23:37:14] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[23:39:30] <ToxicFrog> !!cursed!!
[23:39:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-022-052.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[23:51:45] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
