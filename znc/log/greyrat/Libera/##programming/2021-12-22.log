[00:00:02] <macaw> It was called PLT Scheme in the past.
[00:00:04] *** Joins: pierino (~piero@host-87-14-15-110.retail.telecomitalia.it)
[00:00:09] <pierino> hi
[00:00:25] <apotheon> It used to call itself PLT Scheme, though even then it wasn't really Scheme, exactly -- and everyone stop beating me to the things I'm going to say.
[00:00:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:00:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:01:08] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[00:01:09] <macaw> apotheon: Hehe ;)
[00:01:16] <apotheon> It essentially *contained* a Scheme implementation, but was not itself really a fully compatible Scheme implementation.
[00:01:53] <apotheon> I'm glad they finally changed the name to eliminate some of the confusion.
[00:02:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:02:12] <apotheon> I'm also glad they changed the license.
[00:02:15] *** Quits: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de) (Quit: Konversation terminated!)
[00:02:21] <pyzozord> is SCIP in racket too?
[00:02:29] <apotheon> no
[00:02:34] <macaw> pyzozord: Scheme
[00:02:36] <apotheon> s/CI/IC/
[00:03:02] <sonny> someone made a sicp variant for racket, so you can use it with the textbook
[00:03:06] *** Quits: anthk_ (~anthk_@92.176.105.30) (Remote host closed the connection)
[00:03:11] <sonny> mit scheme is harder to get
[00:03:12] <apotheon> pyzozord: The authors of SICP created Scheme.
[00:03:16] <pyzozord> what's the difference between scheme and racket?
[00:03:27] <pyzozord> apotheon: oh cool trivia, good to know
[00:03:37] <sonny> forms, functions, modules, etc
[00:03:50] <sonny> s/functions/built-ins/
[00:04:18] <apotheon> PLT Scheme was to Racket kinda what GNU C was to actual C, in some respects, or what Bash's supposedly POSIX-compatible sh mode is to actually POSIX-compatible sh.
[00:04:25] <sonny> in short, just asthetics, but enough to hamper functionality
[00:04:28] <apotheon> err, s/was to Racket/was to Scheme/
[00:04:28] <apotheon> sorry
[00:04:30] <Stefan26> can you do any kind of computation in scheme?
[00:04:38] <sonny> sure
[00:04:44] <sonny> (+ 1 1) => 2
[00:04:58] <apotheon> Racket has probably diverged more and, as a result, has probably actually become better.
[00:05:23] <apotheon> I haven't really looked into Racket too much, though, since its very early days, when it was just PLT Scheme that stopped pretending to be Scheme.
[00:05:30] <apotheon> Stefan26: of course
[00:05:35] <apotheon> It's a Turing-complete language.
[00:06:04] <pyzozord> how is scheme different from common lisp?
[00:06:04] <apotheon> You have to get pretty far down the scale to find a language that isn't Turing-complete.  Some things are *accidentally* Turing-complete.
[00:06:04] <Stefan26> is it a lot harder to write a x86-compiler for scheme than say C?
[00:06:34] <apotheon> pyzozord: much stricter in form, more regular/consistent in some respects
[00:07:10] <apotheon> One big thing that people seem to like to address when comparing Scheme with Common Lisp is that Scheme limits itself to "hygienic" macros.
[00:07:45] <apotheon> Stefan26: If you go through all of SICP, you'll end up making a Scheme implementation of your own.
[00:08:04] <sonny> pyzozord much less details
[00:08:04] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:08:26] <pulse> What is the complexity of opening a fully sealed pistachio
[00:08:40] <apotheon> I'm not sure it's any easier to write a Scheme compiler than a C compiler, for minimal standards-compliant requirements.  Writing a *competitive* C compiler is sure to be *much* harder, though.
[00:08:41] <macaw> pyzozord: Scheme is a very light-weight language. CL is a collection of various features (and cruft) from multiple popular implementations of Lisps from the past.
[00:09:15] <sonny> a scheme compiler will be easier, the first half doesn't take much effort
[00:10:08] <sonny> conversely there is garbage collection and numerical tower ...
[00:10:09] <apotheon> I've known people to implement most of C99 in a weekend, but its performance was shit compared to "real" implementations.
[00:11:06] <pyzozord> weekend as in two days?
[00:11:13] <apotheon> pretty much
[00:11:17] <flakland> yeah that sounds like it's just going to be a pile of hacks, not a usable C compiler
[00:11:18] <apotheon> it's kinda heuristic
[00:11:51] <apotheon> It might've been "I started on Friday afternoon, and had something that compiled a lot of C programs by the time I had to go back to work on Monday."
[00:12:15] <bjs> apotheon: sounds about right,  scheme has some extra places where it'd probably take more time.  Whether it's "harder" is subjective
[00:12:34] <apotheon> I wouldn't ever use such a compiler in the real world, though.  It'd take a lot more work to get it to the point where it's useful for anything other than an exercise in learning about compilers.
[00:13:26] <sonny> sounds like they could get fragments to compile
[00:13:26] <pyzozord> you guys are crazy, c compiler in a weekend, day 19 in 20 minutes...
[00:13:46] <flakland> pyzozord, i highly doubt it was "from scratch"
[00:13:49] <apotheon> I haven't created a C compiler in a weekend.
[00:13:51] <sonny> unless they used a c parser
[00:14:04] <pyzozord> maybe they used yacc
[00:14:09] <apotheon> almost certainly
[00:14:17] <nomagno> Neuronal pathways for code get engraved with fire inside your brain, sometimes
[00:14:33] <nomagno> Certainly if you exercise writing performant code fast a lot
[00:14:55] <nomagno> You need a theory base though, obviously
[00:15:34] <pyzozord> I got a looot of learning and practice to do to get on the level
[00:15:49] <sonny> I think you could do a c compiler without a lot of theory
[00:16:39] <bjs> You have to define what "write a compiler" means exactly,  it's not very hard to write the actual compiler phase of a simple heap language (like C) to a point where it could actually run things.  But to actually make a full compiler "toolchain" that generates executables and objects compatible with the rest of the ecosystem and actually compiles C and not some imagination of what you would like C to be...
[00:17:42] <sonny> hmm? 
[00:18:08] <sonny> you write a c compiler it takes foo.c to foo.exe
[00:18:11] <average> macaw: even if not authored by the same people, HTDP and SICP were written by professors
[00:18:31] <sonny> or maybe to another lanuage etc
[00:19:43] <omr> average: you have something against academics? :P
[00:21:02] <bjs> sonny: well foo.c to foo.exe is many steps, from lexing, parsing, compiling, linking
[00:21:20] <bjs> writing all of those, from scratch and making the final thing actually be C and not some imagined language would be a lot of effort
[00:21:42] <sonny> shortcuts exist
[00:22:13] <bjs> but "write the code generation bit for a language that looks like C" is only one part
[00:23:15] <nomagno> I have to wonder how insanely convoluted a C interpreter written in portable C would look
[00:23:22] <pyzozord> i think even that one bit in a weekend is extreme
[00:23:24] <sonny> it could just generate asm files
[00:23:41] <bjs> pyzozord: not really, I mean C is a fairly small language
[00:23:57] <sonny> pyzozord yeah
[00:24:04] <pyzozord> yeah but it's only 24h and i assume sleep
[00:24:04] <flakland> sonny it would need a static linker at least, for linking printf, etc
[00:24:14] <bjs> pyzozord: a weekend is 48hours but yes
[00:24:18] <pyzozord> sorry 48
[00:24:29] <sonny> flakland good point
[00:24:32] <bjs> pyzozord: have you heard of Ludum Dare?
[00:24:47] <pyzozord> I'd assume max 16 over the weekend. maybe 20
[00:24:58] <pyzozord> bjs nope
[00:25:11] <sonny> c to asm I can see over the weekend hackathon
[00:25:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[00:25:34] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[00:25:37] <bjs> pyzozord: it's a game creation contest,  they change the rules every now and again but it used to be "you have 48 hours, make a video game (including all graphics and sounds)"
[00:25:37] *** Quits: mizuu (~chaos@user/mizu) (Quit: Lost terminal)
[00:25:47] <macaw> average: Oh yes, that I don't disagree with. But I don't see how that's relevant. SICP is written *very* competently and one can learn *a lot*, especially as a CS introductory material. (I haven't read HtDP, but I'm assuming it's similarly well written.)
[00:25:57] *** Joins: quartz (~nick@2603-8001-7700-61a4-0000-0000-0000-0eff.res6.spectrum.com)
[00:25:57] *** Quits: quartz (~nick@2603-8001-7700-61a4-0000-0000-0000-0eff.res6.spectrum.com) (Changing host)
[00:25:57] *** Joins: quartz (~nick@user/quartz)
[00:26:03] <pyzozord> in 20 to write a c parser and generator that outputs assembly it's extreme in my opinion. Unless you've done this in the last and you remember well how to do most things
[00:26:15] <bjs> pyzozord: and it was often surprising just how much you can do in one weekend if you know what you're doing and how to do it
[00:26:26] <apotheon> 13:55 < sonny> c to asm I can see over the weekend hackathon
[00:26:33] <apotheon> I'm pretty sure that's the kind of thing that happened.
[00:26:33] <bjs> and sometimes what others can do is just outright impressive :)
[00:27:34] <pyzozord> bjs well yeah if you know exactly what to do and how you do, the limit becomes your throughput. Literally how fast can you type and move mouse
[00:27:47] *** Quits: murii (~murii@2a02:a58:835a:1100:75cd:98e1:d569:fe76) (Remote host closed the connection)
[00:27:55] <pyzozord> but that's kind of crazy, and seems to be detached from real life engineering
[00:28:01] <apotheon> macaw: I haven't read HTDP either, but I'm about 98% positive it's an order of magnitude easier to get through than SICP -- not because there's anything wrong with SICP, but because the intended audience is different.
[00:28:03] <pyzozord> or maybe i am that slow
[00:28:13] <bjs> pyzozord: of course, real life engineering doesn't work that way.
[00:28:20] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[00:28:33] <average> macaw: I would say it's relevant. Like for example, I can be secluded in my silly academic ivory tower and come up with fancy shit, all the while working in a context where the standards do not penalize and ridicule the fuck out of me, and then I write a book teaching people in the industry how they should do shit, but at the end of the day I've never shipped shit all my life, but I have the arrogance to tell others what to do
[00:28:45] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[00:28:48] <average> macaw: it's the well-known rule of thumb "those who can't do, teach"
[00:28:55] <deniska> pyzozord: oh, https://www.youtube.com/watch?v=lrJYw5r3-4k&list=PLqXoG49_bdZ0QxTHxes6Cf7F2StQJHxqN I participated in one some… almost a decade ago
[00:28:56] <bayaz> Title: Walking thing and timer 
[00:29:00] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[00:29:00] <pyzozord> bjs where as real life engineering I mean solving problems you haven't solved before at least not fully
[00:29:29] <sonny> engineers solve well known problems
[00:29:31] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[00:29:34] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:a101:8c6b:aa7d:518f)
[00:29:44] <flakland> average that works both ways, shipping a program doesn't automatically mean you are doing it in the best way possible
[00:29:45] *** Quits: Thedarkb-Work (~Thedarkb@62.232.253.82) (Read error: Connection reset by peer)
[00:29:57] *** Joins: Thedarkb-Work (~Thedarkb@62.232.253.82)
[00:30:06] <pyzozord> deniska neat idea :)
[00:30:21] <apotheon> I know from excruciating personal experience that shipping code does not mean you did a good job.
[00:30:27] <deniska> pyzozord: I blatantly copied it off some windows ce game :)
[00:30:55] <pyzozord> deniska make the thingy s debug output and for the game put there a goose that steps in those circles that player controls, would walk funny
[00:31:08] <apotheon> I've worked in places where I was effectively *prevented* from doing a good job, because we had to ship code quickly, even though doing better would have basically taken no extra time at all.
[00:31:19] <flakland> some might call minix an academic OS, but now its in all the new intel CPU's
[00:31:19] *** Quits: tomgus1 (~tomgus1@2a02:c7e:4229:d900:dea6:32ff:fe3d:d1a3) (Read error: Connection reset by peer)
[00:31:34] *** Joins: tomgus1 (~tomgus1@90.218.25.145)
[00:31:38] *** Quits: quartz (~nick@user/quartz) (Quit: WeeChat 3.3)
[00:31:51] <macaw> average: I dislike the modern dislike towards academics. I have heard the meme you're repeating, but there is a lot of stuff to learn from academia (especially of the olde days) that we as the "pragmatic" programmers ignore.
[00:32:01] <apotheon> I'm sad that Minix development has lagged so much lately.
[00:32:02] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:a101:8c6b:aa7d:518f) (Ping timeout: 240 seconds)
[00:32:09] <apotheon> It's a *really* cool project.
[00:32:21] <pyzozord> sonny I meant problems You haven't solved before, not problems that are well known and have well known solutions
[00:32:31] <sonny> olde days ... that's like 40 years ago ;)
[00:32:37] <apotheon> It's easy for people to develop negative attitudes toward academics, because 98% of academics kinda suck.
[00:32:51] <apotheon> Of course, that's because 98% of *people* suck, and (as it turns out) academics are people.
[00:33:11] <sonny> what law is that?
[00:33:13] *** Joins: quartz (~nick@user/quartz)
[00:33:21] <macaw> 80/20?
[00:33:29] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:33:30] <nomagno> 9X% of everything sucks
[00:33:34] <nomagno> - Don't remember who formulated it
[00:33:36] <macaw> (Possibly applied recursively) ;)
[00:33:40] <sonny> that's sturgeons law iirc
[00:33:52] <bjs> pyzozord: a lot of engineering isn't really solving new problems, it's mostly solving old problems with old solutions in a new context
[00:34:01] <apotheon> That having been said, SICP is an awesome book, so maybe Abelson and Sussman were that other 2%.
[00:34:01] <sonny> but I think that came up wrt to the arts or something
[00:34:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:20] <apotheon> sonny: It's the 98% rule.
[00:34:25] <sonny> yeah, it's out of print right?
[00:34:43] <sonny> i'd like a physical copy 
[00:34:46] <apotheon> sonny: Sturgeon was an optimist.
[00:34:57] <apotheon> sonny: Sturgeon's law says 90%.
[00:35:25] <sonny> I see
[00:36:13] <deniska> When is the next LD I wonder…
[00:36:31] <deniska> in 101 days…
[00:36:41] <deniska> they certainly lowered the frequency
[00:37:00] <nomagno> What's an LD?
[00:37:05] <nomagno> ah ludum dare
[00:37:08] <macaw> I think your options are: Print it out; Buy a used one; Buy an e-ink display (if you're into that).
[00:37:09] <deniska> https://itch.io/jams good thing there's always a jam to choose from :D
[00:37:10] <bayaz> Title: Game jams 
[00:37:29] <vdamewood> apotheon: People may be singing SICP's praise much less often later.
[00:38:16] <deniska> I didn't like SICP much
[00:38:19] <omr> btw, There's going to be a SICP js version of the book
[00:38:21] <apotheon> vdamewood: Why?
[00:38:24] <nomagno> Oh, I catastrophically failed finally finish something 2018
[00:38:28] <nomagno> Might be time to give it another go
[00:38:36] <vdamewood> apotheon: SICP: JavaScript Edition.
[00:39:05] <apotheon> Are you saying people will dislike the JS version, and SICP's reputation will be tarnished as a result?
[00:39:18] <apotheon> . . . or that people will like the JS version and not the old version now?
[00:39:18] <vdamewood> apotheon: Yeah, pretty much.
[00:39:21] <apotheon> oh, okay
[00:39:23] <apotheon> the first one
[00:39:27] <apotheon> Yeah, that could happen.
[00:39:33] <deniska> oh, I dislikes the original SICP, don't worry
[00:39:36] <vdamewood> Yeah, the Scheme version is fine.
[00:39:38] <deniska> disliked*
[00:39:44] *** Quits: maxzor (~maxzor@2a01cb04054faa002b570cc2c9dee1f5.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:40:13] <vdamewood> apotheon: Though, I would prefer they switched to Python, but I doubt JavaScript will be so bad for what SICP teaches.
[00:40:19] <apotheon> The big problem with (Scheme) SICP is that it's written with some assumptions about the readers having been exposed to certain subjects to a significant degree, and recently, including some college math stuff.
[00:40:41] <vdamewood> apotheon: Which makes sense for a college course text book.
[00:40:51] <apotheon> I think that rewriting SICP for Python would involve a *much* more extensive rewrite.
[00:40:57] <deniska> SICP assumes that you are the first year student, maybe the second year?
[00:41:07] <deniska> Anyway, it doesn't assume too much off you
[00:41:27] <deniska> But it does assume that you have some free time which you decided to waste on formal education :)
[00:41:34] <apotheon> deniska: I think you might misremember the math.  A third of the way in, it's assuming some pretty substantial math familiarity.
[00:41:36] <sonny> deniska 3rd year probably
[00:41:50] <sonny> sorry, mabe 2nd year
[00:42:09] <sonny> I didn't get very fair but newons approximation is right in chapter 1
[00:42:09] <apotheon> It'd have to be second year on a math-heavy track in MIT.
[00:42:26] <sonny> s/fair/far/
[00:42:47] <apotheon> Newton's?
[00:42:58] <sonny> yes
[00:43:38] <deniska> it's just… dunno, it's a text book after all, there're much more fun things you could do in a similar vein if you are not on the uni track of reading this specific book
[00:43:42] <apotheon> I'm trying to remember the point where I said "Wait -- what the fuck is *this* doing in this book, with no explanation?  That's no entry-level math."
[00:43:48] <deniska> like, make a gameboy emulator or something
[00:43:58] <deniska> or x86 emu and run windows 95 on it :)
[00:44:27] <deniska> (ok, that might be a bit of a stretch, not sure how much of x86 you have to actually emulate to run win95)
[00:44:49] <apotheon> deniska: Sure, you could just read The Little Schemer instead, but SICP will get you a lot *further*.  It's dense material, but *well-written* dense material.
[00:45:10] <apotheon> I wouldn't call x86 emulation easy or fun, though.
[00:45:14] <deniska> or make a compiler for a «real» language with curlies and semicolons, as opposed to, like, parentheses
[00:45:32] <apotheon> I think we finally got to deniska's real objection:
[00:45:44] <apotheon> bigotry against LISPs
[00:46:13] <apotheon> Part of the reason to implement Scheme is that it's easier to implement a language that is already basically just a parse tree.
[00:46:20] <deniska> nah, I quite enjoyed clojure, and hello worlded in chicken-scheme a bit
[00:46:52] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[00:46:55] <deniska> it's just that this specific book is greatly overhyped
[00:47:10] <apotheon> Thus, you can focus on the more universal concepts without as much farting around with random-ass syntactic complexity.
[00:47:11] *** Quits: Intelo (~Intelo@88.244.89.107) (Ping timeout: 256 seconds)
[00:47:14] <deniska> it's a nice book, but it's certainly has no place to be in must-read list
[00:47:29] <apotheon> Oh, it's not must-read.
[00:47:31] *** Joins: independent56 (~independe@148.252.133.167)
[00:47:47] <apotheon> It's *great* for what it is, but what it is . . . is not something one *must* read.
[00:47:51] <apotheon> not at all
[00:47:56] <deniska> in many circles I was in it was often presented as must-read
[00:48:08] <sonny> well how many must reads are there?
[00:48:13] <deniska> probably not a fault of the book itself :)
[00:48:14] <apotheon> If you want great OOP, I think something on the level of POODR is a must-read.
[00:48:36] <apotheon> If you want great compsci learning, SICP is not a must-read, but it is a very good read.
[00:48:45] <sonny> ah
[00:48:52] <sonny> ok yeah def not
[00:49:27] <deniska> I wish more people would read the mythical man-month
[00:49:35] *** Joins: anthk_ (~anthk_@92.176.105.30)
[00:49:42] <deniska> but it's more of a management book than a programming one
[00:49:44] <apotheon> There are many different approaches to take to getting great compsci learning, and many of them overlap broadly, so once you get one of those the others are obviously not "must-read" books.
[00:50:10] <apotheon> deniska: I wish I'd gotten around to reading the Mythical Man-Month already, but my reading list is *huge*.
[00:50:28] <macaw> deniska: Does management like to read criticism about the current status quo? AFAIK, most people in management wouldn't.
[00:50:28] <apotheon> I suspect MMM will mostly be stuff I've already figured out, but I still want to read it.
[00:50:30] <deniska> the art of the unix programming is also a nice one, and that's me, a semi-latent unix-hater talking :)
[00:51:05] <apotheon> macaw: I think MMM is more popular with programmers who want to understand exactly what is so fucking broken in their work environments.
[00:51:15] <macaw> Hehe, yup.
[00:51:26] <apotheon> macaw: . . . and that can be a good thing when some of those devs turn into managers.
[00:52:10] *** Joins: zzzod` (~user@196.64.42.204)
[00:52:23] <apotheon> It's like trying to teach kids in school about the subjective theory of value, in hopes some of them end up in positions where they can use their knowledge to inhibit incredibly harmful economic policy.
[00:52:40] <apotheon> . . . some day.
[00:52:50] <macaw> Hmm... True in theory. I hope it's so in practice too. Seems like a lot of people ending up in management shouldn't be ones ending up in management.
[00:53:13] <deniska> there's also this one nice book on regular expressions… ok, fine, that's a stretch, but still, there's a tipping point between how much you can easily achieve with splits and slicing, and with a proper compact domain specific language for string wrangling
[00:53:26] <apotheon> I've read about half of TAOUP.  I got distracted by more important stuff at the time.  It was pretty good.
[00:53:33] <apotheon> I should get back to that eventually.
[00:54:06] *** Quits: zzzod (~user@160.178.6.111) (Ping timeout: 256 seconds)
[00:54:08] <nomagno> You know, I find making macros to the C operators ? and : to be weirdly therapeutic
[00:54:29] <nomagno> #define IF \n #define THEN ? \n #define ELSE : \n
[00:54:44] <apotheon> macaw: Unfortunately, the dev shop management world has not been revolutionized by the insights in MMM yet, and MMM's popularity has been waning for some time now.
[00:55:26] <nomagno> what is MMM?
[00:55:37] <apotheon> Mythical Man-Month
[00:55:40] <apotheon> see above
[00:55:59] <Stefan26> i tried reading MMM, but it was no fun
[00:56:00] <vdamewood> Brooks!
[00:56:09] <apotheon> Brooks books
[00:56:20] <apotheon> Stefan26: Oh really?
[00:56:20] <vdamewood> apotheon: Dammit, you beat me to it.
[00:56:25] <macaw> apotheon: True. I've also read in the past that MMM is well written (more like alright) for people who already understand that something is wrong, but badly written for others.
[00:56:26] <apotheon> muahahah
[00:56:37] *** Quits: sh1r4s3 (~sh1r4s3@109-252-75-9.nat.spd-mgts.ru) (Ping timeout: 240 seconds)
[00:56:39] <macaw> apotheon: Have you heard about the Peter Principle?
[00:56:43] <apotheon> yep
[00:56:54] <vdamewood> Who's Principal Peter?
[00:57:10] <macaw> May be the reason why the current situation is what it is.
[00:57:33] <macaw> ;)
[00:57:35] <apotheon> The main driver for the Peter Principle is probably bureaucracy.
[00:59:20] <apotheon> In general, bureaucracies are incapable of handling organizational management without pay and responsibility being stratified by job migration, which necessarily drives successful workers into corners where they are no longer significant contributors to positive outcomes.
[00:59:38] <pyzozord> so I connected my wifi boosters to the router with a wire and set them in access point mode, and they got even slower
[00:59:46] <vdamewood> The peter principle is the reason I will never accept a job where I'm not either programming or directly managing a programming project.
[01:00:02] <apotheon> I haven't read the book, so I'm just riffing off my memory of summary explanations of the principle, but it seems to track very well.
[01:01:01] <pyzozord> I wish peter principle worked for me
[01:01:05] <pyzozord> it never did
[01:01:18] <sonny> heh, never thought we would have to continue once acknowledging a problem
[01:01:39] <pyzozord> unless my incompetence is in dealing with people not computer in which case the peter principle holds for me
[01:01:46] <apotheon> pyzozord: Keep in mind that bureaucracies are also terribly bad at judging competence, in that it uses metrics largely unrelated to getting good things done well.
[01:01:56] <macaw> I dislike bureaucracies as much as you do, but they seem to pop up everywhere once a company reaches a certain size and there isn't a strong-willed and listening-to-the-workers leader.
[01:02:01] <apotheon> It's *very* good at judging competence by bureuacratic standards, though.
[01:02:02] <macaw> apotheon: ^
[01:02:34] <pyzozord> hah
[01:02:45] <pyzozord> well by those standards I am indeed not that great
[01:03:13] <apotheon> macaw: Yeah, well, publicly traded corporations and governments are essentially incapable of *existing* without bureaucracy.  You can't exist at that scale without it.
[01:03:36] <apotheon> The way to solve this problem is to get people to realize that we *don't need* organizations at that scale.
[01:03:44] <pyzozord> because I loath office politics and beurocracy
[01:03:46] <macaw> YESSS!
[01:04:20] *** Joins: XV8 (~XV8@2601:5cb:c001:50:10cd:9e3c:2c4a:2ae1)
[01:04:20] <pyzozord> apotheon: I'm not sure if that is realistic, but I wish it was
[01:04:33] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[01:04:34] <apotheon> The reason that won't happen any time soon is that the existence of organizations at that scale creates a corrupt, risk-averse, power-centralizing dominant order that is self-reinforcing.
[01:04:44] <pyzozord> realistic as in practical (let alone realistic as in possible to convince people)
[01:05:21] <apotheon> pyzozord: It's totally practical to get by without them; it's not realistic to expect to get there from here, though, in the foreseeable future.
[01:05:34] *** Joins: CaCode (~CaCode@user/cacode)
[01:05:43] <pyzozord> but I think generally the pareto principle (the 80/20 distribution of all things involving humans and resources) works against us
[01:05:52] <apotheon> indeed it does
[01:06:02] *** Joins: erica (~erica@user/erica)
[01:06:27] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[01:07:07] <sonny> so what is to be done?
[01:07:33] <vdamewood> Yay job!
[01:07:54] <macaw> Hehe, if the pareto principle works against creating such structures (and I believe so too), the solution is 1974's separation - the proles and the elite. :P
[01:07:54] <vdamewood> It's mostly Excel massaging.
[01:08:13] <macaw> Kidding, but I have a feeling the current elite thinks so.
[01:08:48] <apotheon> sonny: It's unrealistic to change the system directly, by convincing people or using the dominant paradigm's "official" mechanisms for change (which are actually designed to divert efforts for change toward things that won't actually change the underlying problems).
[01:08:57] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Ping timeout: 268 seconds)
[01:09:15] <pyzozord> can't fight with how world works
[01:09:32] <CaCode> Do you know any programmers who worked in the same company for 40 years?
[01:09:39] <pyzozord> but can find a small pocket that works better
[01:09:44] <sonny> so much for brute force method :P
[01:09:47] <apotheon> sonny: To change the dominant paradigm, you have to change culture.  To change culture, you have to change minds in large numbers.  To change minds in large numbers -- and this is *deeply* counterintuitive to most people -- you can't do it directly by convincing people with reason.
[01:09:48] <macaw> apotheon: A lot of how the world works now may be rooted from human nature.
[01:10:14] <macaw> apotheon: It's hard to change, and you have to beware when you do - you may create worse monsters.
[01:10:20] <apotheon> You either propagandize shamelessly, if you have the resources and lack ethics, or find ways to change their behavior so that they'll have to change their minds to justify their behavior.
[01:10:29] <sonny> apotheon: ok that sounds intuative
[01:10:50] <apotheon> To change their behavior in large numbers, I think the most effective means probably involve economic incentives.
[01:11:09] <sonny> people do understand greenbacks
[01:11:11] <CaCode> macaw: That is unfair to mankind, our behaviour has as much to do with our nature, as the behavior of caged animals in a zoo, they have all types of abnormal behaviour due to being caged, so do we...
[01:11:15] <apotheon> CaCode: 40?  No.  I've known of some for more than twenty years, though.
[01:11:36] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[01:11:44] <sonny> CaCode we have brains tho lol
[01:11:58] <nomagno> Sitting down and thinking is usually harder than any alternative, which is why many things don't have a reason to be other than (purposeful or accidental) momentum.
[01:12:02] *** Quits: pierino (~piero@host-87-14-15-110.retail.telecomitalia.it) (Quit: Lost terminal)
[01:12:12] <sonny> that seems to be true
[01:12:21] <sonny> just kidding
[01:12:21] <CaCode> sonny we do have brains and that makes it worse, great apes are much more strongly influenced by captivity than dumber animials
[01:12:34] <apotheon> The economic incentives are not necessarily related to *money* per se.
[01:12:52] <sonny> you know I never quite got comparing people to other animals
[01:13:07] <apotheon> Economics is about value development; a currency is just an abstract tool for exchanging value.
[01:13:08] <macaw> CaCode: What directed at me is true. But we react to incentives and Tragedy of the Commons is really hard to overcome with our current situation.
[01:13:51] *** Quits: independent56 (~independe@148.252.133.167) (Quit: Client closed)
[01:13:52] <sonny> so are the people who notice this cursed?
[01:14:01] <apotheon> yes
[01:14:05] <apotheon> sorta
[01:14:09] <macaw> CaCode: I'd love for people to understand that by hurting others you hurt yourself or your children by proxy, but it seems to be really hard to do when people face a situation of personal benefit. This *is* human nature.
[01:14:17] <apotheon> We can do something about it, but it's difficult to get the ball rolling.
[01:14:35] <CaCode> macaw i beg to differ per my above argument
[01:14:36] <sonny> I see
[01:14:46] <nomagno> sonny: A human is a roundabout process for doing the same things as a most other animals, it just achieves this by a different strategy that involves having a big brain that thinks it's not impulsive
[01:14:55] <CaCode> macaw, mankinds strength is cooperation, a group can achieve more than individuals
[01:14:59] <sonny> nomagno plenty seems to be thought about, just ignored lol
[01:15:07] <apotheon> Even if you don't want to take the extreme routes described in such books, you can learn a lot about how to change things -- at least in certain contexts -- for the better from books like An Agorist Primer and Second Realm.
[01:15:09] <CaCode> macaw, and a group can achieve more when there is good social cohesion
[01:15:27] *** BrianG61UK__ is now known as BrianG61UK_
[01:15:29] <CaCode> macaw, in short the better members of a group treat each other the better the groups chance of survival
[01:15:38] <CaCode> that is why we are social
[01:15:38] <nomagno> Humans are extremely, ridiculously receptive to social influences when compared to most other animals
[01:15:45] <CaCode> and why we have a conscious
[01:15:47] <apotheon> Those are basically about living outside the law, but you don't have to live outside the law to create your own oasis of relative sanity.  You just have to be willing and able to live outside of *expectations*.
[01:16:04] <sonny> the outlaw
[01:16:11] <sonny> classic character
[01:16:16] <macaw> The maverick
[01:16:25] <sonny> maverick?
[01:16:45] <macaw> One who walks their own path, regardless of societal expectations.
[01:16:50] <apotheon> CaCode: Are you talking about consciousness or conscience?
[01:16:52] <sonny> ah
[01:17:00] <apotheon> The word "conscious" there was a bit ambiguous.
[01:17:02] <CaCode> apotheon conscience
[01:17:57] <CaCode> we feel bad when we comit wrongs against each other because that lowers social cohesion and thusly reduces our chance of survival as a group and by extension as individuals
[01:18:12] <apotheon> macaw: I'm not just talking about being a lone wolf, though.  Creating that oasis of relative sanity requires collaborators, whether formally collaborating or just by emergent effect.
[01:18:42] <apotheon> CaCode: Yeah, I got that once I was sure you meant "conscience".
[01:18:47] <nomagno> You will find, and have been able to find since basically forever, societies whose members are/seem several orders of magnitude more intelligent than a 'wild' uncontacted human. This high-level time-spanning adaptability to social influences is also related to why it's hard for a human that lives in a society to consciously compare itself to most other animals.
[01:18:59] <macaw> CaCode: As humans, we're very bad at seeing the big picture, it seems (at least nowadays). Bad at understanding and creating systems, because we do not like to think about 2> order effects. This is a part of my argument.
[01:19:24] <nomagno> Or at least get the comparison right
[01:19:34] *** Joins: jensen (~jensen@65.78.100.184)
[01:20:13] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:20:30] <sonny> yeah comparsions are hard
[01:20:33] <nomagno> TLDR; Brain is abstraction machine, hard to see impulses when abstracted not to see impulses
[01:20:40] <jensen> i am making a slight edit to a man page for patching. The "markdown?" is: `.It Cm S- Ns Aq Cm tab` which produces "S-<tab>". How can I modify it to create "<tab>, S-<tab>"? My attempt ".It Ns Aq Cm tab , Cm S- Ns Aq Cm tab" resulted in "<tab>, S-<tab>>"
[01:20:43] <andl> the way pro too much 
[01:21:04] <macaw> Even though nature has made us very adaptable to small-to-medium size groups, when we get to humanity-size problems, we do not seem to organize (Because of the Tragedy of the Commons).
[01:21:08] <macaw> CaCode: ^
[01:21:43] <apotheon> macaw: Decentralized systems can help with that.
[01:21:44] <macaw> I agree with a lot of what you wrote and as an individual I try to live morally and share this viewpoint with others, the reach is limited.
[01:21:48] <macaw> CaCode: ^
[01:23:13] <pyzozord> jensen i know man pages use roff or troff or groff or something like that. Have you looked into documentation?
[01:23:19] *** Joins: sqrehmm (uid531949@id-531949.ilkley.irccloud.com)
[01:23:31] <macaw> apotheon: True. I do not know the disadvantages of decentralized systems to say they wouldn't bring their own cons, but I'd like to see what would happen if we went more in that direction.
[01:24:49] *** Quits: magla (~gelignite@55d4a813.access.ecotel.net) (Quit: Stay safe!)
[01:24:57] <nomagno> I'm actually doubt humans have a hard abstraction limit. While growing up, you will always be able to pattern-match your environment to the fairly basic environment your brain evolved for
[01:24:59] <apotheon> People in positions of power hate decentralized systems, though, so expect pushback -- both from them and from those who are susceptible to their propaganda.
[01:25:17] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[01:25:18] <jensen> pyzozoro: ty, i'll check it out. didn't know the name
[01:25:45] <pyzozord> pyzozorro
[01:26:00] <sonny> nomagno you think you are a machine?
[01:26:12] <macaw> apotheon: Very much in agreement. Also, people who have centralized your technology have a bit more power and money to influence the direction and dialog about your products.
[01:26:14] <nomagno> sonny: Pattern-matching was an expression.
[01:26:22] <sonny> oh
[01:26:26] <nomagno> Abstraction was not, it's an actual word
[01:26:52] <macaw> apotheon: We seem to be in the decentralization->centralization direction, not the other way, in the last years.
[01:27:03] <nomagno> apotheon: It's funny because decentralization seems to only be irrationally pushed back by the people with social outreach/big platforms. Probably correlated
[01:27:41] <nomagno> Or at least more by those with more outreach
[01:28:02] <macaw> nomagno: Yes. I'd say this is because of what I wrote above.
[01:28:12] <apotheon> Thankfully, a properly decentralized system is unstoppable by any means short of total cultural control.
[01:28:39] <nomagno> Properly decentralized systems aren't very common nowadays, unfortunately
[01:29:06] <apotheon> nomagno: Of course that's who most vociferously opposes decentralization!  That's a position of power, and they don't want it eroded.
[01:29:15] <sonny> internet
[01:29:16] <macaw> apotheon: Not if no-one uses it... The only one that seems to hold up, are cryptocurrencies, and I guess this is because it is ~ $$$.
[01:29:17] * [itchyjunk] decentralizes boots across the seat
[01:29:24] <[itchyjunk]> ah, much more comfertable
[01:29:25] <apotheon> basic egocentricity
[01:30:08] <nomagno> The IP address space existing in its current form is probably among the most biggest power moves ever
[01:30:13] *** Quits: omr (~omr@user/omr) (Quit: WeeChat 3.3)
[01:30:21] *** Joins: we3fan (~we3fan@89.185.206.82)
[01:30:27] *** Quits: we3fan (~we3fan@89.185.206.82) (Read error: Connection reset by peer)
[01:30:29] <apotheon> nomagno: Briar is a very thoroughly decentralized private messenger protocol, and blockchain technology can be used to really significant degrees for decentralization purposes where some kind of distributed trust mechanism is needed.
[01:30:30] <[itchyjunk]> people use cryptocurrency as some magical investment token it seems though.
[01:30:34] <sonny> not really
[01:30:43] <[itchyjunk]> using cryptocurrency to buy stuff seems like a wild idea to a lot of people.
[01:30:46] <sonny> ip is just legacy
[01:30:55] <[itchyjunk]> you're just legacy!
[01:31:23] <[itchyjunk]> i also don't consider ipv6 to be a "legacy" thing
[01:31:28] <[itchyjunk]> it's still fondational.
[01:31:31] <apotheon> [itchyjunk]: Yeah, a lot of people just completely miss the point of blockchains.
[01:31:39] <sonny> yeah i'm from the 20th century
[01:31:46] <[itchyjunk]> if there is something that replaces it but still gets support, i'd agree of IP being legacy at that point
[01:31:51] <[itchyjunk]> being old != being legacy
[01:32:03] <nomagno> apotheon: For some reason whenever you recommend a specific product or platform I immediately show myself hesitant to take a look. Not your fault obviously, but I find the reaction extremely weird on my part
[01:32:17] <[itchyjunk]> "denoting or relating to software or hardware that has been superseded but is difficult to replace because of its wide use."
[01:32:36] <[itchyjunk]> i consider the part where its superseeded by something else to be important
[01:32:43] <apotheon> nomagno: My ideas are pretty frequently quite heterodox, and it's probably difficult to adjust to that.
[01:32:45] <[itchyjunk]> ipv4 is legacy wrt ipv6
[01:32:52] <[itchyjunk]> but ip itself isn't legacy, imho
[01:33:43] <sonny> sure, folks have trie to make new stuff but got nowhere really
[01:33:43] <apotheon> IPv6 isn't legacy until we have an alternative that is "better".  Do we?
[01:33:50] <nomagno> The protocol doesn't seem to be specified
[01:33:55] <nomagno> shame
[01:34:07] <apotheon> nomagno: Briar?  Yeah, I don't think there's a formal specification, unfortunately.
[01:34:16] <nomagno> Yeah
[01:34:28] <apotheon> It's *good*, but it needs specification, and it needs a copyfree reference implementation.
[01:34:55] <apotheon> The way it handles its "blog" feature is a shitshow, though.  Just pretend that doesn't exist.
[01:35:32] <apotheon> Session is pretty damned good, too, but it lacks the mesh capabilities of Briar.
[01:35:38] <[itchyjunk]> The Muskian idea of progress being a result of net effort and not natureal wrt to tech is so true.
[01:35:51] <nomagno> You might be able to specify a similar thing pretty easily
[01:35:52] <nomagno> you only specify the encoding, not the transport method
[01:35:55] <[itchyjunk]> Not enough investments was made on semiconductor industry and we now have shortage.
[01:36:11] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.3)
[01:36:16] <nomagno> that way you just hamfist as many safe anonymous travel methods on a given implementation as you can
[01:36:17] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[01:36:22] <nomagno> or anonymous-ish
[01:36:40] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[01:36:41] <nomagno> So you just specify, very clearly, the encoding for messages
[01:36:53] <flakland> legacy semiconductors are still too good and durable
[01:36:57] <nomagno> And the behaviour of sharing with X or Y
[01:37:06] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[01:37:10] <apotheon> nomagno: If you felt willing, ready, and able to develop a copyfree licensed spec for the Briar protocol, I'm at least 80% certain Briar maintainers would happily help.  You'd have to take the lead, though.
[01:37:10] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[01:37:28] *** herme5 is now known as el_kevino
[01:37:32] <[itchyjunk]> legacy conductors are good
[01:37:40] <[itchyjunk]> but it's not like there is a sulprus of that either
[01:37:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:499c:186d:f10d:6a24) (Ping timeout: 260 seconds)
[01:37:51] <[itchyjunk]> so sure you can keep using legacy but the shortage still exists
[01:38:01] <apotheon> nomagno: They even responded positively to the idea of making some of their code compatible with reimplementations of the protocol under copyfree licenses.
[01:38:03] <flakland> their price is low, you can find them on various auction sites
[01:38:17] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[01:38:20] <flakland> the superceding semis offer little benefit for their cost
[01:38:25] <[itchyjunk]> doesn't mean there is no shortage.
[01:38:32] <nomagno> I'd have to take a look, and it is a big-ish commitment, but I have excersised spec-making muscles extensively over the last few months
[01:38:43] <nomagno> So I could definitely do it more efficiently than most :D
[01:39:16] <apotheon> I'd be happy to contribute as I find opportunities to do so, but I'm not really in a good position to lead that.
[01:39:36] <apotheon> . . . assuming everything you do with it is copyfree licensed, of course.
[01:40:30] <apotheon> maybe tri-license COIL, DPL, and MIT License, for maximum reach/flexibility
[01:40:56] <nomagno> I'm not sure anyone would take the MIT over the COIL, honestly
[01:41:11] <apotheon> Some would.
[01:41:18] <apotheon> 1. more recognizable
[01:41:18] <nomagno> It is more battle-tested indeed
[01:41:23] *** Joins: hololeap (~hololeap@user/hololeap)
[01:42:04] <apotheon> 2. some people are for some bizarre reason opposed to patent-clause licenses for reasons other than wanting patents
[01:42:09] <apotheon> 3. some other dumb stuff
[01:43:02] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[01:43:18] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[01:44:12] <nomagno> apotheon: The GPL is actually on the more reasonable side of this, at least within it's framework of reasonable clauses that build up to a partly unmanageable beast
[01:44:23] *** Quits: sonny (~sonny@8.6.144.252) (Quit: Going offline, see ya! (www.adiirc.com))
[01:45:03] <nomagno> It says "either you provide a patent license, or you don't, but don't mix-and-match bits and pieces patent licenses, then sue"
[01:45:11] <nomagno> (Paraphrased, obviously)
[01:45:15] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec1f:86d0:5d5f:31d1:da52:33a7)
[01:47:13] <nomagno> Actually, I think the GPLv3 does provide an explicit patent license
[01:47:21] <nomagno> the GPLv2 did do the thing I mentioned
[01:48:01] <nomagno> Most arguments against patent licenses is "they are outside the scope of the license"
[01:48:05] <nomagno> which I don't really agree with, but whatever
[01:48:31] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[01:50:20] <apotheon> nomagno: http://sprunge.us/xf8jxh
[01:50:34] <apotheon> nice template for the trilicense scheme I mentioned
[01:51:07] <nomagno> Sounds good
[01:51:49] <nomagno> HM, before doing this I might take a blow at a similar-in-principle-but-several-orders-of-magnitured-simpler Brian-esque specification
[01:52:33] <nomagno> Not because I'm looking to be a competitor but because it sounds fun
[01:52:51] *** Quits: CaCode (~CaCode@user/cacode) (Remote host closed the connection)
[01:53:08] <apotheon> That's cool, too.
[01:53:23] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[01:53:31] <apotheon> The process of developing a Briar protocol specification could also result in improvements to Briar, by the way.
[01:53:47] <apotheon> . . . including possibly simplifying some things.
[01:54:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:54:16] <apotheon> I'd be cool with helping with the similar-but-simpler thing, too.
[01:55:23] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[01:55:37] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[01:56:01] <nomagno> I am honestly unsure what I would do without shadow libraries...
[01:58:28] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:04:43] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:04:55] *** Joins: zaher (~zaher@37.48.153.22)
[02:06:59] *** Quits: zzzod` (~user@196.64.42.204) (Ping timeout: 252 seconds)
[02:09:01] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:09:17] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[02:15:32] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 268 seconds)
[02:21:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:26:07] <average> [itchyjunk]: you aware that Bosch started semiconductor plants in Germany?
[02:26:14] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:859f:62c1:9bf4:337)
[02:26:31] <[itchyjunk]> The recent one where the gov game them some monies?
[02:26:36] <[itchyjunk]> I think 2 different one started.
[02:26:44] <average> Ye
[02:26:44] <[itchyjunk]> But this is recent "response" after the shortage got bad.
[02:26:48] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:26:54] <[itchyjunk]> DARPA predicted this 6-7 years ago.
[02:27:00] <[itchyjunk]> That might have been a good time to start.
[02:27:13] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[02:28:02] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:45a6:931:a57f:675e) (Ping timeout: 240 seconds)
[02:28:08] *** Joins: murii (~murii@2a02:a58:835a:1100:75cd:98e1:d569:fe76)
[02:28:20] <average> [itchyjunk]: note that media outlets also say “shortage of truckers in US” but turns out it’s fiction. The truth most trucker jobs in US suck and truckers know this so they only target union jobs where their rights are respected. Same goes with “Germany has a shortage of IT workers” so on and so forth.
[02:28:23] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[02:28:34] <[itchyjunk]> It's not fiction.
[02:28:41] <average> It’s not unlikely that media outlets get paid from big corporations to do various sorts of propaganda
[02:28:42] <[itchyjunk]> Some other media posted claims saying it's not fiction.
[02:28:42] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[02:28:48] <[itchyjunk]> You got bamboozeled by media.
[02:29:01] <average> [itchyjunk]: no you
[02:29:20] <[itchyjunk]> You should watch the lex fredman interview with the waymo founder guy.
[02:29:41] <[itchyjunk]> He brings up a lot of trucking stats that is somewhat verifiable
[02:29:46] <average> [itchyjunk]: i probably already did. What are you trying to say?
[02:30:05] <[itchyjunk]> That there is shortage as in there is more demand of truckers than there is supply.
[02:30:15] <[itchyjunk]> Why truckers pick one or the other job doesn't change this ground truth.
[02:30:46] <[itchyjunk]> "This is shortage because it's a shitty job" doesn't change the fact that there is shortage, for example.
[02:30:46] <average> My claim is media gets paid for that so they can attract foreign truckers to go to the US to fill the shortage
[02:30:53] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:31:15] <[itchyjunk]> Visa process for USA is fairly tedious.
[02:31:27] <average> So what if it’s tedious
[02:31:30] <[itchyjunk]> And foreign trucker won't be that much cheaper anyways.
[02:31:47] <average> Even foreigners already in the US are targetted by said news piece
[02:31:51] <[itchyjunk]> So if it was easy to get cheaper labor, they wouldn't be offering higher pays to US truckers.
[02:31:55] <[itchyjunk]> Which is the case.
[02:32:03] <[itchyjunk]> Can't attrack truckers with bonus pay.
[02:32:15] <average> They can attract marginalized foreigners
[02:32:20] <[itchyjunk]> No, not every forigneer in USA wants to be a trucker.
[02:32:28] *** Quits: Akuli (~Akuli@213.216.211.146) (Quit: Akuli)
[02:32:31] <average> Some might want to
[02:32:39] <[itchyjunk]> And not every foreigneer is poor enough that anyshitty job gets targetted to them.
[02:32:43] <[itchyjunk]> Sure, some mnight be.
[02:32:49] *** Quits: murii (~murii@2a02:a58:835a:1100:75cd:98e1:d569:fe76) (Ping timeout: 268 seconds)
[02:32:51] <[itchyjunk]> That still doesn't change the base truth.
[02:33:06] <[itchyjunk]> If they are trying to attrack new drivers, it implies there are unfill position.
[02:33:06] <average> And the base truth being what
[02:33:08] <[itchyjunk]> Hence shortage.
[02:33:20] <[itchyjunk]> Base truth is that there is a shortage of truck drivers.
[02:33:27] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[02:33:46] <average> But what is the reason for the unfilled positions though.. it’s because their rights are not respected
[02:33:46] *** Quits: pizdets_ (~pizdets@183.182.110.80) (Ping timeout: 260 seconds)
[02:33:55] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[02:34:02] <average> Doco on that actually
[02:34:07] *** Joins: pizdets (~pizdets@183.182.110.174)
[02:34:20] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Quit: emf)
[02:34:52] <[itchyjunk]> The reason is that consumerism has steadily increased and the supply chain has migrated to an online satifaction centers.
[02:34:55] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[02:35:01] <[itchyjunk]> As opposed to traditional, localized stores.
[02:35:11] <[itchyjunk]> People went to stores and bought what was available.
[02:35:19] <average> Online satisfaction? We’re talking truckers
[02:35:24] <[itchyjunk]> Now, people buy then the things are made locally available.
[02:35:35] <[itchyjunk]> How do  you think online satisfaction for goods works?
[02:35:36] <average> For the merch to arrive at stores you need truckers
[02:35:53] <[itchyjunk]> Do you think if i buy an underwear from amazon, it gets sent through the wires?
[02:35:58] <[itchyjunk]> Do I just print it?
[02:36:03] <[itchyjunk]> No, it's gets shipped to ports.
[02:36:10] <[itchyjunk]> And ports -> warehouse is all truckers.
[02:36:21] <[itchyjunk]> warehouse -> consumer is also facing shortage.
[02:36:27] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:36:29] <[itchyjunk]> Amazon is desperate for new drivers as well.
[02:36:54] <[itchyjunk]> Production -> ports is also truckers.
[02:37:01] <[itchyjunk]> But that part is generally outside of usa.
[02:37:17] *** Quits: BorgoMatic (~KC0LR@2605:a601:ad80:7400:8459:aeb:e923:958b) (Ping timeout: 240 seconds)
[02:37:32] <average> Amazon is an insane place to work at. It’s not a surprise nobody wants to go there.
[02:37:33] <[itchyjunk]> The volume of trucks at ports have grown so much, they are trying to rehaul entire systems now (as mentioned in the podcast)
[02:37:44] <nomagno> I have an issue, I know I might be enabling easy out-of-bounds array access with some code, but the alternative it quite a bit of unreadable boilerplate
[02:37:52] <[itchyjunk]> and trucking industry will be worth several trillion dollars anually (as mentioned in the podcast)
[02:37:58] <nomagno> Is it worth it to add the boilerplate and add a clear, concise comment?
[02:38:26] <average> [itchyjunk]: trucking is how you get your boba
[02:38:30] <average> It’s critical
[02:39:02] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[02:39:03] <nomagno> It also isn't a very nice job
[02:39:11] <[itchyjunk]> Transportation is important, i agree
[02:39:17] <nomagno> Apparently, even more so now that there's these fancy new digital activity trackers
[02:39:31] <[itchyjunk]> I find supply/demand stuff really interesting.
[02:39:47] <[itchyjunk]> We'll need to modernize roads and anticipate fleets of self driving trucks soon
[02:39:51] <[itchyjunk]> Soon, brother!
[02:39:58] <[itchyjunk]> AI will be here!
[02:39:59] <apotheon> Yeah, trying to track all the truckers is a great way to lose truckers willing to work for you.
[02:40:23] <nomagno> apotheon: definitely
[02:40:39] <nomagno> The only reason trucking is bearable right now is mostly the work flexibility
[02:40:49] <apotheon> yep
[02:41:11] <nomagno> You can iron out a schedule that might slightly to a lot outside regulations, but suits tou
[02:41:19] <nomagno> s/tou/you/
[02:42:22] *** Joins: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com)
[02:43:14] <apotheon> I like road trips, but I don't like the idea of a trucker driving schedule.
[02:43:34] <average> [itchyjunk]: do you notice how this trucker problem also comes at the very same time when multiple AI companies claim theyre working on fully automated selfdriving trucks and so far all their products are total shit but the media still promotes them. I mean sure if it’s automatable and the media says it is, and if you buy into this fiction then yeah, why should truckers have rights, replace them on the cheap. But in actual fact, it’s total 
[02:43:35] <average> disinformation, truckers are still the way we ship stuff around
[02:43:59] <[itchyjunk]> trucking problem has been stadily growing for past 10 years.
[02:44:02] <average> [itchyjunk]: the thing that amazes me about you is you really think AI is amazing when it’s a piece of garbage in actual fact
[02:44:13] <[itchyjunk]> I knew some trucking company owner in pensilvenya in ~2010
[02:44:25] <[itchyjunk]> this isn't some "fake new" that you keep insisting on.
[02:44:32] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[02:44:38] <apotheon> Machine learning systems are making everything worse, for the most part.
[02:45:00] <apotheon> "number goes up" is the basic Machine Learning System ethos right now
[02:45:01] <[itchyjunk]> waymo doesn't claim to be able to replace truckers.
[02:45:06] *** Joins: dob1 (~dob1@user/dob1)
[02:45:11] <average> apotheon: are you saying that just to agree with me? Or do you have examples?
[02:45:25] <[itchyjunk]> It claims that it can suppliment truckers in some easy to traverse roadways then the truck will get handed back to the truckers.
[02:45:37] <nomagno> Self-driving AI is not half bad right now, might be getting to the point where it crashes less than a human. Good luck debugging a proprietary closed-dataset unpredictable model tough!
[02:45:45] <[itchyjunk]> So this "oh its all a conspiracy theory by news and google" doesn't hold up
[02:46:14] <apotheon> Most people's encounters with the product of machine learning systems is the information they get from Google, Siri, Alexa, et cetera, and the way things like Facebook and Twitter direct you to content.
[02:46:16] <average> [itchyjunk]: google is known to fuck with all possible search results worldwide
[02:46:31] <[itchyjunk]> how does that invalidate trucking data from last 10 years?
[02:46:39] <[itchyjunk]> weak hyperbole.
[02:46:55] <apotheon> These things are getting worse and worse at serving actual needs, and they're getting better and better at fitting people into polarizing, contentious stereotypes of themselves, which is driving society closer to the brink of ruin over time.
[02:47:08] <nomagno> apotheon: tangentially related, what about a huge ML system that is trained to optimize redundancy in other ML AI 'binaries' away?
[02:47:15] <average> [itchyjunk]: you might not even be able to find things from 10y ago if google doesnt want to show them to you
[02:47:22] <nomagno> like an assembly line. Sounds like a terrible solution, but funny
[02:47:24] <apotheon> . . . and then there's the point nomagno made above.
[02:47:30] <[itchyjunk]> I can find them. Maybe you can't
[02:47:40] <average> [itchyjunk]: and google has a constant tendency of controlling closely what results you can see
[02:48:02] *** Quits: quartz (~nick@user/quartz) (Quit: WeeChat 3.3)
[02:48:02] <apotheon> nomagno: It does seem amusing.
[02:48:05] <[itchyjunk]> These research are done by all sorts of researchers.
[02:48:07] <[itchyjunk]> Not google.
[02:48:13] <[itchyjunk]> Waymo was just citing research.
[02:48:15] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:48:28] <[itchyjunk]> Claiming all research is invalid because "google is evil" might be the dumbest thing i've heard today
[02:48:31] <apotheon> Google more heavily weights new material over correct material, too.
[02:49:01] <apotheon> . . . to the point that a quoted literal string from the title of something will often send you to only other shit for several pages of results.
[02:49:13] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[02:50:17] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 240 seconds)
[02:50:52] <apotheon> Self-driving trucks are a much different animal than shit like what GAAF is doing, of course, but I was speaking of machine learning systems in general tending toward shitshows.  I don't know much about self-driving vehicles, apart from the fact they occasionally have spectacular failure modes.
[02:51:17] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[02:52:19] <apotheon> There are, of course, cases where machine learning systems can be good, but even in those instances their operators tend to screw over users indirectly even if not directly -- such as by using organic learning data as a product to sell to others.
[02:52:44] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[02:53:11] *** Quits: Kev_ (~Kev@2a01cb0400149f00f5d4de1a0e99d4da.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[02:53:14] *** Joins: Colt (~Colt@user/colt)
[02:53:38] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[02:54:04] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec1f:86d0:5d5f:31d1:da52:33a7) (Remote host closed the connection)
[02:56:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[02:56:19] *** Joins: allomancer (~allomance@user/allomancer)
[02:57:35] *** Quits: stagas (~stagas@2a02:587:c404:bf72:1f09:393b:f7b3:cd5b) (Ping timeout: 252 seconds)
[02:59:24] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[02:59:50] *** Joins: Colt (~Colt@user/colt)
[03:00:16] <nomagno> apotheon: Or just creating a whole debate over wether your shitty thing is legal or not, like with Github Copilot
[03:00:57] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:02:30] *** Parts: allomancer (~allomance@user/allomancer) (Leaving)
[03:04:52] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:06:40] *** Quits: andl (~Administr@60.223.245.116) (Read error: Connection reset by peer)
[03:07:55] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[03:09:39] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec1f:86d0:5d5f:31d1:da52:33a7)
[03:11:00] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:12:39] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:14:44] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec1f:86d0:5d5f:31d1:da52:33a7) (Ping timeout: 268 seconds)
[03:15:17] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[03:15:57] *** Joins: jabster28 (~jabster28@81.111.217.63)
[03:21:19] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:21:40] <Decker> anthropomorphizing  is assigning human attributes to a thing, what's a more general term for assigning something to something else with no real basis?
[03:22:16] *** Joins: wolfshappen (~waff@irc.furworks.de)
[03:23:30] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:25:02] *** Joins: maxzor (~maxzor@2a01cb04054faa00ac170d946741b097.ipv6.abo.wanadoo.fr)
[03:25:17] *** Joins: stagas (~stagas@2a02:587:c404:bf72:fe43:4e71:8d8a:bdb7)
[03:26:35] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[03:29:21] <[itchyjunk]> Decker, "assigning" probably
[03:29:23] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:29:28] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[03:29:42] <[itchyjunk]> doesn't seem like a concept that would have a special name since it's not used commonly
[03:29:55] *** Joins: hjf (~hjf@user/hjf)
[03:30:07] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Remote host closed the connection)
[03:30:20] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[03:30:29] <[itchyjunk]> oh
[03:30:33] <average> Decker: maybe check wordnet
[03:30:34] <[itchyjunk]> vector search would be great for this
[03:30:37] *** Quits: chomwitt (~chomwitt@94.66.63.187) (Ping timeout: 240 seconds)
[03:30:44] <average> [itchyjunk]: i thought you're the NLP expert here
[03:30:51] <[itchyjunk]> Decker, "anbthropomorpize" - "humans"
[03:31:26] <[itchyjunk]> oh, you can't just use google vector search :(
[03:32:02] *** Quits: hjf__ (~hjf@user/hjf) (Ping timeout: 240 seconds)
[03:32:06] <vdamewood> Decker: Analogizing?
[03:32:24] <Decker>  Analogizing ya probably
[03:33:01] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:33:01] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[03:34:00] <average> [itchyjunk]: do you mean word2vec ?
[03:34:05] <[itchyjunk]> no.
[03:34:07] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:34:09] <[itchyjunk]> i mean vector search.
[03:34:14] <average> idk what that is.
[03:34:17] <[itchyjunk]> https://www.microsoft.com/en-us/ai/ai-lab-vector-search
[03:34:18] <bayaz> Title: Vector Search - Microsoft AI Lab 
[03:34:23] <[itchyjunk]> you encode words into a vector space.
[03:34:30] <[itchyjunk]> Based on their relationship to each other.
[03:34:35] <[itchyjunk]> So i can search based on relationships
[03:34:43] <[itchyjunk]> if i search "king - man + woman"
[03:34:46] <[itchyjunk]> i would expect "queen"
[03:34:56] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:35:16] <average> well google also did this back in 2013 and it's called word2vec
[03:35:23] <average> and it doesn't require AI labs to run
[03:35:48] <pyzozord> Any idea how to play YouTube in background on Android?
[03:35:55] <[itchyjunk]> word2vec encodes words into a vector space
[03:36:03] <[itchyjunk]> doesn't let you derive relationship as is
[03:36:12] <[itchyjunk]> pyzozord, by paying for it
[03:36:22] <nomagno> The behaviour with my pointer implementation attempt is completely nonsensical
[03:36:27] <pyzozord> Im thinking maybe i should somehow install python and youtube-dl and use some player
[03:36:39] <[itchyjunk]> that would work
[03:36:42] <nomagno> The debugging printfs are making no sense, and that's with memory safety enabled
[03:36:52] <nomagno> not memory safety, like, -fsanitize=address,undefined
[03:36:57] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[03:36:58] <nomagno> And -g
[03:37:01] <nomagno> And -Wall
[03:37:39] <[itchyjunk]> average, https://cloud.google.com/blog/topics/developers-practitioners/find-anything-blazingly-fast-googles-vector-search-technology
[03:37:48] <[itchyjunk]> google doesn't provede a web interface either.
[03:38:29] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[03:38:57] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[03:39:06] <nomagno> Ah, I was missing a newline...
[03:39:07] <average> pip install word2vec
[03:39:13] <nomagno> That explains a lot of things
[03:39:27] <nomagno> And yet not very many at all
[03:40:09] <average> [itchyjunk] I guarantee you almost nobody needs or uses Vector Search except for Google
[03:40:23] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:41:01] *** Joins: hololeap (~hololeap@user/hololeap)
[03:42:27] *** Quits: jensen (~jensen@65.78.100.184) (Remote host closed the connection)
[03:43:27] <nomagno> I'm observing some behaviour that might as well make zero sense. Let me check I didn't actually add a statement that overrides my code somewhere...
[03:44:50] <nomagno> OOOOH
[03:45:37] <nomagno> the issue is that the AND operator is subtly broken because of C's short-circuiting
[03:47:26] <apotheon> Analogizing is not a superset of anthropomorphizing, because with analogizing one is consciously comparing distinct things, and with anthropomorphizing one is often unconsciously engaging in a confusion of types.
[03:47:54] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[03:48:04] <pyzozord> Can be conscious
[03:48:09] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:48:14] *** Joins: flakland (~flaknet99@32.211.211.39)
[03:48:15] <apotheon> pyzozord: can be, but often isn't
[03:48:21] <apotheon> thus my use of the term "often"
[03:48:36] <Decker> apotheon consider the analogizing of red shift with the big bang 
[03:48:39] <pyzozord> Ah yes missed that
[03:48:40] <apotheon> Perhaps the superset is conflating map and territory.
[03:49:11] <pyzozord> Confusing
[03:49:20] <pyzozord> Is the more general unconscious term
[03:49:21] <apotheon> In this case, conflating.
[03:49:25] <apotheon> right
[03:49:34] <apotheon> confusing implies unconscious application
[03:50:00] <[itchyjunk]> average, amazon, fb, ms and google uses vector search.
[03:50:06] <apotheon> It also implies conscious recognition of the existence of a map, though.
[03:50:07] <[itchyjunk]> average, define "no one"
[03:50:17] *** Joins: maxzor_ (~maxzor@2a01cb04054faa004c9d5903566127b8.ipv6.abo.wanadoo.fr)
[03:50:27] <apotheon> . . . and anthropomorphizing often doesn't recognize a map abstraction being employed.
[03:50:41] <nomagno> I have subtly broken behaviour related to boolean operators, but I'm not sure how to fix it. Let me try to express this with pseudo-code
[03:51:42] <apotheon> Thus, to capture the common cases, it'd have to be conflating: it admits both consciously confusing them and cross-contaminating the territory without even being aware of using a map in the first place.
[03:51:57] *** Quits: maxzor (~maxzor@2a01cb04054faa00ac170d946741b097.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[03:52:08] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:52:32] *** Joins: JingleJazzy (~jaziz@user/jaziz)
[03:52:37] <nomagno> I have `if CONDITION1 && CONDITION2()`
[03:53:04] <nomagno> and I expect that if CONDITION1 is false, CONDITION2() doesn't get evaluated (that's what happens, C short-circuits, that's not in question)
[03:53:07] <apotheon> I'm not immediately aware of anything that would invalidate my map/territory conflation model for what's happening, and I'm trying to getting as close to the specific intent of the question as possible, but I might have missed something significant.
[03:53:21] <nomagno> But the issue is the issue is I want it to shortcircuit, BUT skip the else if it DOESN'T short-circuit
[03:53:40] <nomagno> if CONDITION1 is true and CONDITION2 is false, skip the else
[03:54:02] <nomagno> if CONDITION1 is false, go to the else
[03:54:03] <nomagno> if both are true, execute the if's code
[03:54:11] <apotheon> nomagno: else if, I guess
[03:54:36] *** Joins: sonny (~sonny@8.6.144.252)
[03:54:40] <PlanckWalk> Anrhropomorphizing isn't a map-territory confusion, though.  It's just using a particular type of (usually bad) map.
[03:55:07] <apotheon> PlanckWalk: You seem to have missed where I specifically discussed use of "conflation" rather than "confusion".
[03:55:30] <PlanckWalk> It's not conflation either.
[03:55:33] <apotheon> PlanckWalk: The map is often not even consciously acknowledged by the person applying it in this case.
[03:55:45] <apotheon> Sure it is.  You conflate the two with regard to specific attributes.
[03:56:03] <apotheon> You see a thing, and you regard it as having attributes of the other thing.
[03:56:20] <apotheon> If there's a counterargument here, I think it'd be about whether there's a map *at all*.
[03:56:29] <PlanckWalk> Not conflating territory with map, though.
[03:56:31] <nomagno> apotheon: a nested if does the job
[03:56:40] <nomagno> ... which is what I was trying to avoid with clever code in the first place
[03:56:49] <apotheon> nomagno: yeah
[03:56:52] <apotheon> I figured.
[03:56:59] <average> [itchyjunk]: that’s like all the baddies
[03:57:01] <apotheon> That's why I didn't say "nested if".
[03:58:29] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[03:58:42] *** Joins: flakland (~flaknet99@32.211.211.39)
[03:59:10] <apotheon> nomagno: if (a && b) else if (not a) end
[03:59:14] <apotheon> Is that what you're going for?
[03:59:27] <nomagno> I don't know, what I have right now works
[03:59:37] <nomagno> My brain is half-friend, I'll simplify tomorrow if I get this to work
[03:59:44] <apotheon> okay
[04:00:04] <[itchyjunk]> "baddies" ?
[04:00:14] <[itchyjunk]> those are some of the leading companies in tech research
[04:00:15] <apotheon> PlanckWalk: . . . so your argument is "no".
[04:00:23] <apotheon> I was expecting more of an explanation than that.
[04:01:17] <PlanckWalk> If you took just "no" from it, then you didn't read very well.
[04:01:17] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:01:28] <PlanckWalk> But oh well, these things happen.
[04:02:04] <apotheon> 17:26 < PlanckWalk> Not conflating territory with map, though.
[04:02:16] <apotheon> You didn't explain that.
[04:02:29] <apotheon> You just made a claim, with no support.
[04:02:56] <PlanckWalk> To the extent that there's conflation at all, it's conflating parts of two different maps.
[04:05:48] *** Joins: MogwaiianPunch (~Mogwaiian@047-035-065-214.res.spectrum.com)
[04:09:51] <apotheon> err
[04:09:53] <apotheon> What?
[04:10:02] <apotheon> Do you know how maps work?
[04:10:49] <apotheon> Going back to the standard map/territory confusion thing for a moment, the confusion thing is about mistaking some aspect of the map that is merely representational for something literally identical.
[04:11:24] <apotheon> . . . so the "parts of" thing you said does not in any way dispute what I said.  That just leaves the claim that it's two different maps instead of a map and a territory.
[04:14:30] <apotheon> In the case of anthropomorphizing, the map is the model of how humans work.
[04:15:10] <apotheon> The territory is the thing you're anthropmorphizing.
[04:15:56] <apotheon> The conflation is the underlying assumption of the applicability of a characteristic inherent to the reference to the territory, when that characteristic is actually only a characteristic of the map.
[04:16:52] <apotheon> A map that is bad enough makes it easier to mix up characteristics of map and territory.  A map that is *really* bad enough may be indistinguishable from a map for a different territory altogether.
[04:18:53] *** Quits: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[04:20:29] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:21:07] <DarkTrick> Hello
[04:21:58] <DarkTrick> **Q** What does it mean to "own a domain". I.e., how do I verify that I'm the owner of a domain? is there a username and password for the domain?
[04:22:07] <[itchyjunk]> print("hi")
[04:22:40] <sonny> DarkTrick you can check the dns records
[04:22:45] <[itchyjunk]> own a domain means its registered to you
[04:23:02] <sonny> or just get the details from your provider
[04:23:07] <[itchyjunk]> you can do lookups like sonny suggests
[04:23:21] <[itchyjunk]> whois lookup?
[04:23:24] <DarkTrick> So owning it means being registered
[04:23:26] <[itchyjunk]> yeah that i think
[04:23:42] <sonny> I have name/personal info protection on mine
[04:23:47] <[itchyjunk]> being the registered owner of that odmain
[04:23:47] <DarkTrick> i.e. if someone owning a domain dies, noone else can ever buy that domain, right?
[04:23:54] <flakland> it's a soft agreement among cooperating entities
[04:23:55] <[itchyjunk]> domain expire.
[04:23:56] <sonny> nah
[04:23:59] <[itchyjunk]> Once you stop paying for it.
[04:24:04] <DarkTrick> ah
[04:24:37] <DarkTrick> when I buy a domain, what do I "receive" in exchange for money? just the registration on the DNS?
[04:24:40] <[itchyjunk]> this is about the ICANN domains.
[04:24:43] <flakland> you're just renting it basically, and it might be seized through legal channels
[04:24:46] <[itchyjunk]> There are other odmain names with other proeprties.
[04:24:50] <DarkTrick> i.e. how do I verify I got what I paid for?
[04:24:57] <[itchyjunk]> like onion domains or namecoins or handshake.
[04:25:11] <DarkTrick> just interested in ICANN domains
[04:25:14] <[itchyjunk]> You can do a ICANN whois lookup on the odmain i suppose?
[04:25:18] <DarkTrick> ah... "renting" makes more sense
[04:25:19] *** Joins: Jantz (~IceChat95@118-93-131-79.dsl.dyn.ihug.co.nz)
[04:25:24] <sonny> by using the domain name
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:25:35] *** Quits: maxzor_ (~maxzor@2a01cb04054faa004c9d5903566127b8.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[04:25:47] <[itchyjunk]> well, you could "use it" make subdomains, poitn it to things etc
[04:25:57] *** Quits: Jantz (~IceChat95@118-93-131-79.dsl.dyn.ihug.co.nz) (Excess Flood)
[04:26:11] <sonny> if you can't point an ip to it then your sol
[04:26:47] <flakland> in reality, the domain is only as good as the DNS server the client uses to look up the IP
[04:26:50] <sonny> I used namecheap personally
[04:27:17] <DarkTrick> How do you change the owner of a domain. Sure, ICANN (*NIC) has the owner details of the previous owner, but how do you verify its actually "you"? 
[04:27:30] <DarkTrick> no password? no "secret phrase"?
[04:27:34] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:27:45] <sonny> you don't know your name?
[04:27:50] <[itchyjunk]> you can transfer ownership.
[04:28:24] <DarkTrick> I just call *NIC and say "hey I'm ... Mr. Amazon, I'd like to give change the owner of amazon.com to be Mr. Smith now"
[04:28:30] <[itchyjunk]> who did you buy it from?
[04:28:37] <[itchyjunk]> sure not "ICANN" themselves?
[04:28:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:29:05] <sonny> I'd guess only the owner can change the ownership
[04:29:17] <DarkTrick> I Don't have a domain. I'm trying understand how that stuff works
[04:29:27] <DarkTrick> sonny, how do you verify the owner?
[04:29:38] <sonny> looking it up
[04:29:42] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[04:29:55] <[itchyjunk]> who ever you bought it from stores your information.
[04:30:00] <[itchyjunk]> you verify it when changing it.
[04:30:04] <flakland> out of band signature
[04:30:08] <DarkTrick> sonny, I mean when the owner calls/emails/goes to *NIC, how do they verify it's you?
[04:30:09] <flakland> only reliable way
[04:30:17] <[itchyjunk]> by checking the records.
[04:30:24] <[itchyjunk]> name, address, payment method
[04:30:30] <[itchyjunk]> just like any other verification 
[04:30:30] <sonny> ^
[04:30:48] <sonny> don't think there is any that lets you annonymously pay or something
[04:30:49] <[itchyjunk]> your mothers madein name, last 4 digit of social security number
[04:30:52] <[itchyjunk]> how ever you want
[04:31:03] <[itchyjunk]> there used to be i think
[04:31:06] <[itchyjunk]> back in the days
[04:31:07] <DarkTrick> name, address is part of the whois information? (i.e. public; So, doesn't verify?)
[04:31:08] <nomagno> I think I just got pointers working in my VM, properly, unambiguously, and specified them correctly in the docs
[04:31:09] <nomagno> YEEEEES!
[04:31:14] <sonny> congrats
[04:31:16] <nomagno> I CAN NOW DO ARITHMETIC WITHOUT DYING!
[04:31:23] <[itchyjunk]> something being public doesn't mean you can use it to verify
[04:31:30] <sonny> DarkTrick yes
[04:31:41] <nomagno> I can possibly implement C (or a subset of it) too now!
[04:31:55] <nomagno> A subset of it, probably. One without any automatic storage
[04:32:10] <sonny> I still don't know what C storage models are
[04:32:57] <nomagno> sonny: So, you have the keywords `auto`, `static`, `extern`, and `register`
[04:32:57] <DarkTrick> This sounds to me like a great plane for social engineering attacks. The security sounds rather weak.
[04:33:03] <sonny> honnestly I don't really think they put that much work in, you have to make a payment and put a name down
[04:33:10] <nomagno> `auto` means the variable gets DEALLOCATED as soon as you leave the function
[04:33:23] <sonny> doing that will expose you somehow
[04:33:24] <nomagno> `static` means the variable NEVER gets deallocated
[04:33:38] <DarkTrick> Also, this sounds like for ownership-translation you would need to tell the old owner all your personal information, so they can tell it to *NIC, so you can verify as new owner
[04:33:48] <nomagno> `extern` means the variable is defined IN AN EXTERNAL LIBRARY, but you want to use it anyways
[04:33:51] <InPhase> nomagno: Will there be a destructor call?
[04:34:01] <sonny> let me see, auto is implicit?
[04:34:05] <flakland> in C, static also means it will be initialized to 0
[04:34:23] <nomagno> sonny: inside functions auto is implicit, outside I think it's static
[04:34:29] <sonny> register is no longer used, and extern means what?
[04:34:55] <flakland> or wait, are there two kinds of static
[04:34:56] <InPhase> nomagno: Or are you trying to describe C's auto?
[04:35:05] <sonny> DarkTrick why?
[04:35:07] <nomagno> I was describing C's auto yes
[04:35:20] <nomagno> as soon as you leave the function's scope, it just gets release
[04:35:47] <InPhase> nomagno: I would say "deallocate" is the wrong term for that.
[04:35:57] <nomagno> probably
[04:36:34] * sonny waits for the cppreference link
[04:36:34] <nomagno> sonny: `extern` means the variable is declared somewhere else, possibly in another file, library or binary. You see it used in headers because what it usually does is indicate the function exists, but is declared on another file that needs to be linked by the compiler
[04:36:58] <sonny> ok
[04:37:34] <nomagno> `register` is just telling the compiler you need an `auto` variable that is as fast as it can provide them
[04:37:46] <nomagno> Which... is usually a CPU register indeed
[04:37:52] <DarkTrick> sonny, Let's say abc.com is owned by "A". "A" wants to transfer ownership to "B". "B" cannot do anything with the domain unless their personal information is at *NIC, because *NIC needs that to verify "B" is actually "B". As currently only "A" can be verifies by *NIC, "A" needs to send "B"s personal information to *NIC in order for "B" to do anything with it.
[04:38:16] <[itchyjunk]> that's now how it works
[04:38:25] <[itchyjunk]> you're first coming up with an imaginary way of how it might work
[04:38:29] *** Quits: jaysicks (~jaysicks@178-164-226-74.pool.digikabel.hu) (Remote host closed the connection)
[04:38:29] <DarkTrick> sonny, how else could *NIC verify "B"?
[04:38:33] <sonny> great, cause that sounds terrible
[04:38:39] <[itchyjunk]> you are then suggesting the imaginary way you described doesn't work well
[04:38:41] <nomagno> [itchyjunk]: Did I mess up?
[04:38:54] <[itchyjunk]> nomagno, that was for DarkTrick not you, sorry :s
[04:38:57] <nomagno> I literally just read the standard a few hours ago, must have misread
[04:39:04] <nomagno> oh, :P
[04:39:09] <[itchyjunk]> i mean domain register not registery stuff you were talking about lol
[04:39:26] *** Joins: BorgoMatic (~KC0LR@2605:a601:ad80:7400:2429:a0a4:4965:81aa)
[04:40:00] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:564:6e0:6753:4df1)
[04:40:07] <sonny> "Linkage refers to the ability of an identifier (variable or function) to be referred to in other scopes" -- that makes a lot of sense now
[04:40:33] <DarkTrick> itchyjunk, the "imaginary way" is what I puzzled together from the responses above. What's the "real way"?
[04:40:35] <[itchyjunk]> internet domain registrars have their methods of verification.
[04:40:51] <[itchyjunk]> they use a set of information they feel comfartable using to verify a person.
[04:41:03] <[itchyjunk]> it's different for different companies and different in different parts of the world.
[04:41:25] <nomagno> sonny: the `auto` storage class can be considered the safest one, it gets automatically cleaned up at the end of the function. This is also why to return a pointer to an `auto` variable, you need to explicitly alocate it. Because it would otherwise get wiped as part of the stack cleanup
[04:41:28] <sonny> nomagno what is a translation unit?
[04:41:29] <[itchyjunk]> social engineering attacks are unavoidable 100% but it's been mostly sorted out
[04:41:37] <[itchyjunk]> pick a registrar you want to talk about first.
[04:41:58] <[itchyjunk]> it makes no sense to say A registers B but using information Y without knowin which registrar you're tlaking about 
[04:42:23] <nomagno> sonny: It usually refers to a .h or .c file after it has been preprocessed, I think
[04:42:25] <[itchyjunk]> some use driver license, CC numbers, mother maiden name, w/e they feel like they need.
[04:42:45] <sonny> nomagno example? I just don't get why you would do that for a local variable 
[04:42:48] <nomagno> so, the input the compiler gets after the preprocessor does its copy-pasting magic
[04:42:50] <[itchyjunk]> they also give you an account to help manage the domain, some don't
[04:42:52] <sonny> get a pointer then malloc
[04:42:53] <[itchyjunk]> it all depends.
[04:43:11] *** Joins: NEYi (~NEYi@109.251.216.38)
[04:45:02] *** Joins: Gentpup (~Gentpup@217.75.212.43)
[04:51:57] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 240 seconds)
[04:57:39] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[04:58:45] *** Joins: maxzor (~maxzor@2a01cb04054faa00a7c1fe4191a37ae9.ipv6.abo.wanadoo.fr)
[05:02:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[05:09:19] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[05:09:38] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[05:12:57] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[05:14:08] *** Joins: arcatech (~arcatech@user/arcatech)
[05:15:48] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[05:22:55] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[05:23:15] *** Quits: premultiplied (~premultip@69-84-3-189.mxu.aerioconnect.net) (Quit: WeeChat 3.3)
[05:23:41] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:24:30] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Remote host closed the connection)
[05:25:20] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[05:25:57] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[05:28:40] *** Quits: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) ()
[05:29:13] <average>  sonny: isn’t malloc the one who finds a free memory location, reserves space and returns the pointer?
[05:29:39] *** Quits: stagas (~stagas@2a02:587:c404:bf72:fe43:4e71:8d8a:bdb7) (Remote host closed the connection)
[05:30:05] <flakland> "reserves" ?
[05:31:17] <flakland> the OS/archtecture could reserve space, but i don't know about a C call
[05:31:39] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[05:31:53] <flakland> there is no mechanism to detect usage of an address in C
[05:32:15] *** Joins: stagas (~stagas@2a02:587:c404:bf72:fe43:4e71:8d8a:bdb7)
[05:32:37] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:742b:2fdf:614c:6394)
[05:34:22] *** Joins: arcatech (~arcatech@user/arcatech)
[05:36:34] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[05:36:46] *** Joins: flakland (~flaknet99@32.211.211.39)
[05:39:03] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[05:43:30] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:44:38] *** Quits: hjf (~hjf@user/hjf) (Read error: Connection reset by peer)
[05:44:53] *** Joins: hjf (~hjf@user/hjf)
[05:49:39] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[05:50:51] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:52:02] *** Quits: stagas (~stagas@2a02:587:c404:bf72:fe43:4e71:8d8a:bdb7) (Ping timeout: 240 seconds)
[05:52:09] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[05:53:14] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[05:53:22] *** Joins: CaCode (~CaCode@user/cacode)
[05:53:29] *** Joins: stagas (~stagas@2a02:587:c404:bf72:9779:47c2:ce7c:cb64)
[05:56:10] *** Joins: sonny (~sonny@8.6.144.252)
[05:58:10] <average> in C’s standard library then? or wherever is malloc implemented?
[05:58:20] <average> I actually don’t know where malloc is implemented
[05:58:34] <flakland> usually in libc
[05:59:39] <average> Right, also C without libc isn’t of much use
[05:59:43] <flakland> what i mean is it doesn't really reserve anything, it just returns an address that can accomodate the given size in bytes
[06:00:17] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[06:00:29] <flakland> without crashing
[06:01:06] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[06:01:27] <vdamewood> average: C without libc is often used to implement things like boot loaders and kernels.
[06:02:00] <jeaye> malloc may be in libc, but the functionality is offered by the kernel. malloc would end up calling something like brk to actually get the memory.
[06:02:09] <vdamewood> average: Anyway, The C standard library includes malloc, but also calloc and realloc.
[06:04:14] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[06:04:52] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:04:57] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 268 seconds)
[06:05:25] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:05:25] *** brabrax_ is now known as brabrax
[06:05:25] <sonny> wish more gc langs allowed sophisticated memory use
[06:07:33] <flakland> in one sense, the address is reserved from being returned aagain by malloc, but you can still do anything with it and C-lang will not bother you about it
[06:08:25] <flakland> though the OS might just decide to page the memory to disk
[06:08:57] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[06:09:03] *** Quits: Pook (~Pook@2001:8a0:f996:1400:ec96:5741:29f5:3f05) (Quit: Leaving)
[06:09:38] *** Joins: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[06:09:44] *** Quits: Obscenity (~Obscenity@user/obscenity) (Remote host closed the connection)
[06:10:04] <average> sonny: hows about you just use Rust I hear it has a very tunable GC, and if malloc is not good enough , you can swap it for jemalloc..
[06:10:31] <sonny> rust doesn't have a gc
[06:10:58] <sonny> java does fit that description tho
[06:11:23] <sonny> I'm not at the level where malloc is not good enough lol
[06:12:02] <vdamewood> sonny: How long ago do I have to scroll back to follow this conversation?
[06:12:04] <sonny> it's just funny when you have a gc, but you can't just request a blob of memory
[06:12:12] *** Quits: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com) (Quit: WeeChat 3.4)
[06:12:26] <average> Sorry, not that rust has a gc, wanted to say its allocator is very tunable
[06:12:36] <average> Borrow checker or whatever thats called
[06:12:40] <vdamewood> sonny: A big reason for that is that you need some way to increment or decrement a reference count.
[06:12:55] <sonny> vdamewood I just came back, maybe 20:12
[06:13:03] <oldlaptop> (if you're doing reference counting)
[06:13:10] <vdamewood> sonny: Which timezone?
[06:13:16] <sonny> est
[06:13:31] <vdamewood> 20:12 was about 22 hours ago for me.
[06:13:42] <oldlaptop> ISTR boehm-gc is a notable example that does not do reference counting
[06:13:54] <sonny> you're in japan??
[06:14:20] <jeaye> pacific time
[06:14:36] <sonny> pacific time is like 4 hours behind iirc
[06:14:46] <jeaye> Behind _what_?
[06:14:50] <sonny> est
[06:14:53] <vdamewood> 3 hours
[06:14:54] <jeaye> 3 hours
[06:15:02] <jeaye> It's 18:44 pacific time.
[06:15:07] <jeaye> ish
[06:15:10] <sonny> how did you get 22 hours?
[06:15:12] <sonny> oh
[06:15:13] <sonny> lol
[06:15:20] <jeaye> Either 2 hours in the future or 22 hours in the past.
[06:15:24] <vdamewood> Oh, Yeah, it's 26 hours ago.
[06:15:39] *** Joins: CaCode_ (~CaCode@user/cacode)
[06:15:52] <vdamewood> I had 24 (for the day) and it was 2 hours off, so I applied the wrong operator to get 22 instead of 26.
[06:16:00] <vdamewood> Oh, wait, No. I just did that now.
[06:16:04] <vdamewood> Yeah, 22 hours ago.
[06:16:31] *** Quits: Tazy (~Tazmainia@169-1-6-73.ip.airmobile.co.za) (Quit: Leaving)
[06:16:35] <sonny> why would a borrow checker be tunable?
[06:16:41] <sonny> that doesn't make sense
[06:17:06] *** Joins: CaCode- (~CaCode@user/cacode)
[06:17:32] <sonny> vdamewood gc might be counting references, so what's the hold up?
[06:17:50] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Quit: Textual IRC Client: www.textualapp.com)
[06:17:50] <average> Cycles sometimes
[06:17:57] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 240 seconds)
[06:18:07] <sonny> only for reference counting
[06:18:09] <sonny> right?
[06:18:32] <vdamewood> Yeah, it only applies to reference count-based collectors.
[06:18:39] <average> well I’ve seen memleaks in refcount gc languages like perl for example, due to cycles
[06:18:51] <vdamewood> But the idea is that each chunk of memory comes with a structure that includes the reference count.
[06:19:15] <sonny> I feel like I walked into a bar in those old westerns
[06:19:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:19:19] <vdamewood> average: Yeah, so most reference count-based collectors use some other strategy.
[06:19:57] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 240 seconds)
[06:20:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:21:37] <sonny> I guess ref count or memory mangement was discussed before I barged in?
[06:21:56] <vdamewood> Well, It's been discussed for the past 40 years.
[06:22:12] <average> lol yes
[06:22:46] <average> also memleaks are such a common bug in gc languages that it’s almost impossible for this topic not to be discussed at length
[06:22:59] <sonny> whaa
[06:23:02] <sonny> wow
[06:23:11] <[itchyjunk]> whats gc?
[06:23:21] <sonny> so much for marketing $gc_lang as memory safe
[06:23:29] <sonny> [itchyjunk] garbage collector
[06:23:33] <[itchyjunk]> oh
[06:23:44] <[itchyjunk]> yes my prof mem leaked live in my class
[06:23:49] <sonny> lol
[06:23:54] <[itchyjunk]> he was like "and we just create this new object to show game over"
[06:23:59] <vdamewood> You just need a better strategy than pure reference counting.
[06:24:05] <[itchyjunk]> then 10 seconds later, one student had their hand up
[06:24:28] <sonny> what did he ask?
[06:24:36] <[itchyjunk]> "but you have new Blah() in the game loop, isn't that memory bad?"
[06:24:47] <[itchyjunk]> "oh shit, that's actually a memory leak. lets try something else"
[06:24:55] <sonny> lol
[06:25:02] *** Quits: xff0x (~xff0x@port-92-195-26-37.dynamic.as20676.net) (Ping timeout: 256 seconds)
[06:26:24] <sonny> that'd be a lot of "new's"
[06:26:29] <[itchyjunk]> yes
[06:26:44] <sonny> especially sub second game loops xD
[06:26:44] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:7707:2a36:9641:195d)
[06:26:47] <[itchyjunk]> the class had some good students
[06:26:53] <[itchyjunk]> knew a lot about programming already
[06:27:04] <sonny> nice, probably made it easier
[06:27:13] <[itchyjunk]> yeah new object every 17 ms
[06:27:24] <[itchyjunk]> made it easier for them
[06:27:44] <[itchyjunk]> i need to move away from this language specific things and get more into type theory type stuff ffs
[06:27:49] * [itchyjunk] slacking
[06:28:56] <sonny> pretty sure that game would just crash from being out of memory
[06:29:16] <sonny> [itchyjunk] me too, how to start?
[06:29:28] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[06:29:40] *** Joins: flakland (~flaknet99@32.211.211.39)
[06:29:40] <sonny> ah yes, bejamin pierce text
[06:30:11] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:30:18] <sonny> also type theory notation looks terrible
[06:30:37] <sonny> you think computer folks would be better at this lol
[06:32:11] <[itchyjunk]> ah fuck
[06:32:13] <[itchyjunk]> https://www.nature.com/articles/s41586-021-04160-4
[06:32:14] <bayaz> Title: Quantum theory based on real numbers can be experimentally falsified - Nature 
[06:32:43] <flakland> real numbers eh
[06:32:58] <[itchyjunk]> what is bejamin pierce text?
[06:33:09] <sonny> types and programming languages
[06:33:09] <[itchyjunk]> sonny, type theory via learning formal systems first i think
[06:33:54] <[itchyjunk]> is that a type theory book?
[06:33:57] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4)
[06:34:00] <[itchyjunk]> cant tell by cover
[06:34:04] <sonny> yeah
[06:34:15] <sonny> unless type theory is something else
[06:34:18] <[itchyjunk]> oh it is about type systems
[06:34:37] *** Quits: gr1m (~gr1m@193.138.218.223) (Ping timeout: 240 seconds)
[06:34:57] <[itchyjunk]> type theory is the study of type system
[06:35:43] <sonny> ez, use names or lambda calculus
[06:35:53] <sonny> all done
[06:37:17] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[06:37:56] <sonny> now I kinda want to look at fancy data structures
[06:38:08] *** Joins: Rayke (rayke@user/rayke)
[06:38:30] <sonny> the idea that they can be abstractly implemented is blowing my mind
[06:38:31] *** Quits: Rayke (rayke@user/rayke) (Client Quit)
[06:39:40] <average> [itchyjunk]: whats a type system smartass?
[06:39:57] *** Joins: Rayke (rayke@user/rayke)
[06:40:05] <average> [itchyjunk]: and after you give the definition how is it of any use and what do you do with it
[06:40:58] <average> For it to be of any use you have to spend 10-15 years implementing that type system.. and getting paid a lot of money like Bjarne or Xavier .. and you’re not Bjarne nor Xavier..
[06:42:03] <average> Not that I am.. idk, sometimes I feel like we have so much theory that we could fill a 10 storey building with it
[06:42:09] <sonny> that doesn't take 10 years
[06:42:15] <sonny> can take 5 minutes
[06:42:33] <sonny> c++ doesn't even have a complex one
[06:42:44] *** Joins: BorgoMatic_ (~KC0LR@136.32.12.209)
[06:43:02] *** Quits: Rayke (rayke@user/rayke) (Client Quit)
[06:43:17] <sonny> average good theory makes good programs ;)
[06:43:22] *** Joins: Rayke (rayke@user/rayke)
[06:43:42] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[06:43:48] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[06:44:46] <[itchyjunk]> average, its a formal system where every term has a type
[06:45:08] <average> sonny: you know the Knuth vs McIllroy challenge in which McIllroy whooped Knuth’s theory ass?
[06:45:20] <sonny> yeah lmao
[06:45:37] *** Quits: BorgoMatic (~KC0LR@2605:a601:ad80:7400:2429:a0a4:4965:81aa) (Ping timeout: 240 seconds)
[06:45:47] <average> sonny: so much for theory..
[06:46:01] <sonny> point taken
[06:46:33] <[itchyjunk]> don't take stupid points
[06:46:36] <average> [itchyjunk]: yeah? They all have types and then what? We have no bugs? But wait.. we still have bugs.. oh my god, these humans made huge theories but to what end..
[06:46:43] <[itchyjunk]> bugs?
[06:46:49] <[itchyjunk]> this isn't about computers.
[06:46:59] <[itchyjunk]> type theory is interesting in its own regards
[06:47:12] <average> [itchyjunk]: did you perhaps forget the name of this channel?
[06:47:40] <sonny> for loops go brrr
[06:47:42] <[itchyjunk]> CS can't have theory?
[06:47:52] <[itchyjunk]> imagine thinking computers can't have a theory about them
[06:47:57] <[itchyjunk]> theoreis about computer came first
[06:48:01] <[itchyjunk]> computers came after
[06:48:10] <sonny> yeah, pretty nuts
[06:48:11] <[itchyjunk]> sonny, link this noob to some CS history
[06:48:44] <average> Lol
[06:49:37] <sonny> this literally makes no sense <https://en.wikipedia.org/wiki/Analytical_Engine>
[06:49:46] *** Joins: emf (~emf@2620:10d:c091:480::1:9a8)
[06:49:49] <average> It’s babbage’s toy
[06:49:52] <sonny> and he ran out of funding too :(
[06:50:09] *** Parts: MogwaiianPunch (~Mogwaiian@047-035-065-214.res.spectrum.com) (Leaving)
[06:50:14] <sonny> how people do things never ceases to amaze me
[06:50:21] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 245 seconds)
[06:51:32] <[itchyjunk]> How ceses to amaze me never do people thing
[06:53:57] *** Quits: emf (~emf@2620:10d:c091:480::1:9a8) (Ping timeout: 240 seconds)
[06:56:30] <sonny> <https://metalabharvard.github.io/projects/lb_turingsmill/>
[06:57:56] <sonny> "In 1714, Leibniz proposed an arresting thought experiment: imagine “a machine,” he suggests, “so constituted as to think, feel, and have perception…."
[06:59:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:02:17] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ab00:3631:96fa:4872) (Ping timeout: 268 seconds)
[07:02:30] *** Joins: zwr (~zwr@2804:d45:b966:fb00:5e95:5d3f:af2c:e213)
[07:02:54] <sonny> I wonder if smart folk like that feel isolated, like who do you talk to lol
[07:03:13] <sonny> "Leibiz what the heck are you talking about?"
[07:04:26] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:07:49] <[itchyjunk]> you talk to god
[07:07:57] <[itchyjunk]> leibniz wasn't too religious though
[07:08:06] <[itchyjunk]> but a lot of smart people were religious i found out
[07:08:45] <Stryyker> reglion was puched in to daily life more in the past
[07:09:32] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:12:33] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[07:12:52] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[07:13:58] <sonny> [itchyjunk] makes sense
[07:18:40] <[itchyjunk]> it wasn't because it was forced.
[07:19:02] <[itchyjunk]> george bool claimed he had a vision when walking where he saw universed expreased in boolean logic
[07:19:27] <[itchyjunk]> netwon spent more time studying bible and part of the reason he developed calculus was to test out things in bible
[07:20:05] <[itchyjunk]> maxwell thought math/physics was a way to communion with god
[07:20:06] <[itchyjunk]> etc etc
[07:21:15] *** Quits: anthk_ (~anthk_@92.176.105.30) (Remote host closed the connection)
[07:23:08] <sonny> I keep hearing about maxwells equations, guess they are pretty useful
[07:26:20] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:7707:2a36:9641:195d) (Ping timeout: 268 seconds)
[07:26:50] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:7789:5df4:4cdc:7899)
[07:30:42] *** Joins: monchi (~joints@143.198.92.132)
[07:31:51] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:6cbf:9881:9077:c9a4)
[07:33:02] *** Joins: zaher_ (~zaher@37.48.190.170)
[07:33:56] *** Joins: buzzard (~quassel@23.108.92.178)
[07:34:06] *** Quits: src (~src@user/src) (Quit: Leaving)
[07:34:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:34:18] <[itchyjunk]> sonny, maxwell unified electricty and magentism
[07:34:20] *** Quits: sonny (~sonny@8.6.144.252) (Read error: Connection reset by peer)
[07:34:29] <[itchyjunk]> and spawned the idea of unified field theory in that sense
[07:34:39] *** Joins: sonny (~sonny@8.6.144.252)
[07:34:53] <[itchyjunk]> no that no one had though of it but it was a tangable proof that fundamental forces can be unified
[07:35:11] <buzzard> [itchyjunk]: wasn't that faraday?  maxwell 'just' translated it into math iirc.
[07:35:18] *** Quits: zaher (~zaher@37.48.153.22) (Ping timeout: 256 seconds)
[07:37:03] <[itchyjunk]> faraday discovered electromagnetic induction
[07:37:18] <[itchyjunk]> afaik, he just had experimental evidence
[07:37:33] <[itchyjunk]> you couldn't do much with it in a theoritical point
[07:37:48] <buzzard> yeah, all of it.  maxwell translated it into math.
[07:37:55] <[itchyjunk]> "translated"
[07:37:57] <[itchyjunk]> from what?
[07:38:05] <buzzard> plain language.
[07:38:08] <[itchyjunk]> there was no formaliztion to translate to
[07:38:25] <[itchyjunk]> don't think there was an explanation in "plain language" to translate from
[07:38:33] <buzzard> faraday's notes.
[07:38:37] <[itchyjunk]> he found the theory and proved it
[07:38:41] <buzzard> plenty of pictures, too.
[07:38:44] <[itchyjunk]> no, faraday have experimental data.
[07:39:14] <buzzard> he didn't merely write down data.
[07:39:27] <buzzard> he was quite aware that magnets and currents interacted.
[07:39:46] <buzzard> he wrote at length about it.
[07:39:49] <[itchyjunk]> he was aware they inteacted.
[07:39:52] <[itchyjunk]> Not much more than that.
[07:40:00] <buzzard> he literally 'theorized' for pages and pages.
[07:40:18] <[itchyjunk]> propogation of electromagnetism at speed of light was a consiquence of maxwells equations
[07:40:20] <buzzard> he lacked the training to quantify his ideas.
[07:40:24] <[itchyjunk]> he "hypothesized"
[07:40:32] <[itchyjunk]> a lot of faradays predictions weren't true.
[07:40:38] <[itchyjunk]> some of it were.
[07:40:42] <buzzard> that doesn't mean he wasn't theorizing.
[07:40:47] <[itchyjunk]> He provided a lot of experimental observation.
[07:40:53] <[itchyjunk]> It does mean that.
[07:41:02] <[itchyjunk]> If he had theories, he would have proofs for it.
[07:41:03] <buzzard> i'm sure some of his observations weren't true, as well.
[07:41:09] <[itchyjunk]> It's not a theory if you don't have proofs.
[07:41:17] <[itchyjunk]> Sure, a lot of his observations were "true"
[07:41:22] <buzzard> no theory in physics is or can ever be proven.
[07:41:24] <[itchyjunk]> but not all of his hypothesis were.
[07:41:34] <[itchyjunk]> No, theory is what you have after you proove it.
[07:41:39] <[itchyjunk]> Before that, it's a hypothesis.
[07:41:46] <buzzard> induction doesn't allow for proof of empirical theories.
[07:41:49] <buzzard> you're out of your depth.
[07:41:52] <[itchyjunk]> lol
[07:42:05] <[itchyjunk]> induction has nothing to do with "emperical theories".
[07:42:21] <buzzard> not mathematical induction.
[07:42:39] <buzzard> induction as opposed to deduction in the philosophical sense
[07:42:51] <[itchyjunk]> mathematical induction is still related to that.
[07:42:52] <buzzard> paradoxically, mathematical induction is a form of deduction
[07:42:53] <[itchyjunk]> lmao.
[07:43:10] *** Joins: mishugana (~mishugana@user/mishugana)
[07:43:29] <buzzard> you could always go read some popper if you're convinced that any empircal theory can possibly be 'proven'
[07:43:35] <[itchyjunk]> "An important consequence of Maxwell's equations is that they demonstrate how fluctuating electric and magnetic fields propagate at a constant speed (c) in a vacuum. "
[07:43:39] <buzzard> but for now, you're out of your depth
[07:43:41] <[itchyjunk]> https://en.wikipedia.org/wiki/Maxwell%27s_equations
[07:43:45] <bayaz> Title: Maxwell's equations - Wikipedia 
[07:43:54] <[itchyjunk]> https://en.wikipedia.org/wiki/Michael_Faraday
[07:43:54] <bayaz> Title: Michael Faraday - Wikipedia 
[07:43:55] <buzzard> yeah, i have a copy of jackson's e&m
[07:44:00] <[itchyjunk]> Good place for you to start.
[07:44:08] <[itchyjunk]> Oh wow, you have a copy of a physics book.
[07:44:14] <[itchyjunk]> I have many copies of physics book.
[07:44:21] <flakland> ben GOD OF THUNDER franklin invented electricity
[07:44:42] <[itchyjunk]> he discovered lightnigh was made of electricity
[07:44:47] <[itchyjunk]> he didn't discover electricity
[07:44:55] <flakland> invented
[07:45:05] *** Joins: audiobirb (~audio@user/audio)
[07:47:57] *** Quits: CaCode- (~CaCode@user/cacode) (Quit: Leaving)
[07:48:33] <PlanckWalk> The main thing that Maxwell devised was field theory
[07:49:23] <buzzard> arguably faraday did that.  maxwell made it mathematical.
[07:49:25] <PlanckWalk> Prior to that, fields were seen more as a "convenient fiction" for the actual forces, but didn't really exist.
[07:49:59] <PlanckWalk> (And then Jefimenko arguably turned Maxwell's equations back into charges and forces)
[07:50:28] <[itchyjunk]> well the guy who studies physics thinks maxwell devised field theory
[07:50:39] <[itchyjunk]> another guy who owns a physics book thinks its faraday
[07:50:40] <Krufu> Maxwell got Smart... And he dismantled the work of Kaos...
[07:50:42] <[itchyjunk]> both can't be right
[07:50:51] <buzzard> [itchyjunk]: why do you think i own a copy of jackson?
[07:51:00] <buzzard> just found it at a thrift store?
[07:51:03] *** Joins: jinsun__ (~quassel@user/jinsun)
[07:51:07] <[itchyjunk]> to brag on the internet, from what i see.
[07:51:08] *** Joins: Satin (uid193953@user/Seten)
[07:51:09] <PlanckWalk> Faraday did a heck of a lot of great work on electromagnetic phenomena.
[07:51:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[07:51:20] *** Quits: jinsun__ (~quassel@user/jinsun) (Client Quit)
[07:51:23] <[itchyjunk]> yup faraday did a lot.
[07:51:36] <[itchyjunk]> but maxwell did some stuff to
[07:51:50] <[itchyjunk]> not just translate faradays work "into math"
[07:51:51] <Krufu> PlanckWalk: Faraday was an enemy of freedom...
[07:52:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[07:54:19] <buzzard> https://uh.edu/engines/epi905.htm
[07:54:20] <bayaz> Title: No. 905: Maxwell and Faraday 
[07:55:06] <buzzard> "Now I run my eye over Maxwell's book on field theory. He converted Faraday's vision of force fields into mathematical language. Then he plotted the equations. They form wild graceful spider webs. And we see at last what Faraday had seen first."
[07:55:08] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[07:56:11] <PlanckWalk> It's pretty likely that Maxwell couldn't have devised his equations without Faraday's work, yes.
[07:56:37] <buzzard> i suppose one could argue that galileo wasn't theorizing when he wrote on physics as he didn't use mathematical notation.  bad argument, but itchy might make it.
[07:56:51] *** Joins: arcatech (~arcatech@user/arcatech)
[07:56:57] <[itchyjunk]> gallalio did have hypothesis about the universe.
[07:57:01] <PlanckWalk> Maxwell definitely contributed more than just mathematical formalism though.
[07:57:11] <[itchyjunk]> Doesn't mean everything he said is still correct, lol.
[07:57:28] <[itchyjunk]> heck, some day, someone might say same about einstein
[07:57:41] <[itchyjunk]> that not everything he said turned out to be true
[07:58:26] <buzzard> an interesting bit of trivia about faraday is that the branch of christianity he belonged to was hyper focused on circles iirc
[07:58:52] <[itchyjunk]> a lot of different culture through out human history has been fascinated by circles
[07:59:03] <PlanckWalk> ... I only just realized that this isn't the ##physics channel.  Heh.
[07:59:13] <buzzard> perhaps being inundated with circluar metaphors/mantras/whatever helped him out
[07:59:23] <PlanckWalk> Yes, that would not surprise me
[07:59:30] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 260 seconds)
[07:59:37] <PlanckWalk> Intuitions can come from anywhere
[08:00:00] <[itchyjunk]> like charles bool getting the intuition from a religious vision he supposidly saw.
[08:00:14] <buzzard> didn't planck have a big one just before stepping into a friend's house to rest?  re: ultraviolet catastrophe?
[08:01:17] <InPhase> It's common for them to come in "odd" seeming locations, because the right state of mind requires you to be relaxed.
[08:01:46] <PlanckWalk> Ramaujan had an astonishing mathematical intuition that he ascribed to divine visions
[08:01:56] <InPhase> I've had some major scientific intuition leaps in my work in the shower, or lounging on a couch, or sometimes driving down the street.
[08:02:24] <flakland> tesla had some weird thing happen too iirc
[08:02:31] <buzzard> i'm partial to the idea that the subconscious part of the analytical mind (if it exists! :P) just churns away on things and then dispatches them to consciousness when the job is done.  has happened to be a few times.
[08:02:33] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:02:38] <InPhase> Far fewer major leaps happen for me in front of the computer.
[08:02:38] <PlanckWalk> Yes, I've also had "jumps" of insight when doing something unrelated.
[08:02:46] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 260 seconds)
[08:03:10] <InPhase> I also get a lot more leaps with pencil on paper than with fingers on keys.
[08:03:14] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:04:32] <InPhase> This is why I own three clipboards, and I give a little *hmph* sound of mockery when people try to promote a paperless office approach.
[08:05:49] <buzzard> for something programming related, in C, what's the best way to demarcate the end of an array of strings that probably isn't full?  just a string with '\0'?
[08:06:29] <InPhase> buzzard: Traditionally, it's with a NULL.
[08:07:06] <InPhase> buzzard: Then you can still support empty strings.
[08:07:07] <buzzard> doesn't '\0' = NULL ?
[08:07:16] <InPhase> buzzard: No, NULL char* ptr.
[08:07:17] <PlanckWalk> A null pointer
[08:07:23] <PlanckWalk> Not a pointer to NUL
[08:07:28] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[08:07:39] <buzzard> got it, thanks!
[08:07:45] <flakland> ascii has '\2' "end of text"
[08:07:49] <InPhase> buzzard: Also consider investing in a C++ compiler.  They're cheap, and come with vector<string> built in.
[08:07:58] <buzzard> lmao
[08:08:04] <PlanckWalk> ... and a billion other things ;-)
[08:08:17] <buzzard> the billion is what bugs me!
[08:08:38] <InPhase> buzzard: You can usually get away with only a hundred million or so.  It goes fine.
[08:09:10] <buzzard> i did an euler project thing around a decade ago... used C and got the right answer.  asked for critique and somebody did it w/ C++ in fewer lines and an order of magnitude faster just by leaning on unordered_map
[08:09:12] <InPhase> buzzard: Regard C++ features as options, not mandates.  :)
[08:09:57] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[08:10:11] <buzzard> tbh i'm not really looking for efficiency, just started advent of code a couple days ago (late to the party) and am nitpicking the assembly output to learn more
[08:10:40] <buzzard> i got lazy and started using python for everything awhile back and decided to use C for this year's advent stuff for fun
[08:10:42] <InPhase> buzzard: In much of my C++ code I ban or restrict use of many stdlib features.  There are no C++ police forcing you to use them all.
[08:11:04] <buzzard> InPhase: they've left notes on my door several times.
[08:11:26] <InPhase> Well, I do endorse learning C for breadth knowledge.  It's still out there.  I just don't advocate it for new serious projects.
[08:12:43] <InPhase> Working with C does teach you a lot about how low level things are organized, because you are forced to manually organize so much.
[08:13:20] <InPhase> You just don't want to be manually organizing so much all throughout some big project you want to be reliable.
[08:13:24] <buzzard> aye, that's why i'm doing it.  enjoying it.  
[08:13:34] <buzzard> agreed 100%.
[08:13:39] <InPhase> *thumbsup*
[08:13:44] <InPhase> Then NULL away.  :)
[08:13:58] <buzzard> might try out a musl distro on an old laptop for a bit
[08:14:05] <InPhase> Beware of the hazard of forgetting to check for that NULL somewhere.
[08:14:33] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[08:15:23] <InPhase> In C think, the NULL is better than other termination choices because it typically forces the crash if you forget.
[08:15:31] <buzzard> it's completely clear that C doesn't do much by itself.  i was completely surprised to learn that there's a "getline()" function (i had always used fgets()).  felt like python.
[08:15:43] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[08:16:14] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[08:16:35] <InPhase> buzzard: Well that's not C, but a POSIX extension.
[08:16:48] <[itchyjunk]> sonny, here you go
[08:16:50] <[itchyjunk]> https://github.com/cryptosubtlety/intuitive-advanced-cryptography/blob/master/advancedcrypto.pdf
[08:16:51] <bayaz> Title: intuitive-advanced-cryptography/advancedcrypto.pdf at master · cryptosubtlety/intuitive-advanced-cryptography 
[08:16:57] <[itchyjunk]> another book i'll never read
[08:17:00] <buzzard> InPhase: that makes complete sense :P
[08:17:07] <InPhase> POSIX can be a decent platform to target with C code though.  It works reliably almost everywhere of importance other than Windows.
[08:17:08] <sonny> [itchyjunk] ty
[08:17:31] <[itchyjunk]> sonny, idk if its good or not lol
[08:17:35] <buzzard> InPhase: #ifdef __USE_XOPEN2K8
[08:17:46] <[itchyjunk]> if you start studying group stuff, let me know though
[08:17:52] <[itchyjunk]> i'll try to follow along
[08:18:03] <sonny> yeah, sure thing
[08:18:34] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[08:19:16] <buzzard> InPhase: aye, i'll let myself get away with using it for now.  simultaneous project is learning more about freebsd sysadmin stuff, so i'm sure posix will be there if i go that route with my own systems
[08:19:36] <buzzard> thanks for the protip re: POSIX
[08:21:34] *** Joins: maxzor_ (~maxzor@2a01cb04054faa003ac1aabb61e40987.ipv6.abo.wanadoo.fr)
[08:22:04] <InPhase> When last I was a primarily C programmer, getline was GNU only.  It later became POSIX, so freebsd has it, but it seems you need to tweak some defines to enable it.
[08:23:30] *** Joins: node1 (~node1@user/node1)
[08:23:32] *** Quits: maxzor (~maxzor@2a01cb04054faa00a7c1fe4191a37ae9.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[08:32:07] <buzzard> oh, yeah, looks like 2008 was the year of the change.  glibc 2.10
[08:32:30] *** zaher_ is now known as zaher
[08:33:16] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 245 seconds)
[08:34:15] <buzzard> to be accurate i guess 2.10 wasn't released until 2009, but close enough
[08:34:44] <node1> Just looking for small help to understand a questions asked in C.  https://pastebin.com/raw/QnSKqtUd
[08:34:45] <bayaz> Type: text/plain; charset=utf-8 
[08:35:08] <node1> What does it mean `before every iteration of the loop`? It has been observed that all the conditions are TRUE before going into the while loop.
[08:35:26] <node1> it also observed that after one iteration or after complete iteration only C. option is valid.
[08:35:49] <[itchyjunk]> you check if the condition is valid , then start the loop probably?
[08:36:28] <sonny> for and while evalutate the boolean condition before entering the body
[08:36:32] <[itchyjunk]> node1, b != 0 has to be true before each iteration
[08:36:46] <[itchyjunk]> oh its a multiple choice wait
[08:37:36] <node1> well the question says `before every iteration of the loop check  which of these conditions TRUE"
[08:38:05] <node1> means before coming into the whie [ loop ] check which of these condition is TRUE
[08:38:24] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[08:38:36] <node1> And i have found all the conditions are valid.
[08:39:07] <buzzard> it's a poorly formed question/answer set
[08:39:25] <[itchyjunk]> if A is true, the program should have exited out, no?
[08:39:32] <buzzard> A is trivially true, but the computer doesn't know what "^" means
[08:39:35] *** Quits: Decker (~d3x0r@user/d3x0r) (Read error: Connection reset by peer)
[08:39:46] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:39:50] <buzzard> B follows the same logic
[08:39:50] <[itchyjunk]> A is trivially true before the start of the loop?
[08:39:55] <[itchyjunk]> how did you figure that?
[08:40:04] *** Joins: Decker (~d3x0r@user/d3x0r)
[08:40:07] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Remote host closed the connection)
[08:40:12] *** Quits: BorgoMatic_ (~KC0LR@136.32.12.209) (Ping timeout: 240 seconds)
[08:40:16] <[itchyjunk]> oh right
[08:40:17] <node1> ^  power of , it's my notation to share the condition.
[08:40:17] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:859f:62c1:9bf4:337)
[08:40:19] <buzzard> a is set equal to x and b is set equal to y
[08:40:35] <buzzard> and the binary operator "^" is betwixt them
[08:40:57] <[itchyjunk]> how do you know B is always true?
[08:41:12] <[itchyjunk]> its true before the first iteration, but why is it true for every iteration?
[08:41:24] <buzzard> oh, right, "every"
[08:42:10] <buzzard> actually in that case it's clear, i didn't regard "every" well enough.
[08:42:21] <node1>  one iteration or after complete iteration only  option x^y = res * a^b
[08:42:29] <node1> is true.
[08:42:53] <node1> What i have found this question is not clear. Examiner trying to be smart.
[08:42:59] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:859f:62c1:9bf4:337) (Ping timeout: 252 seconds)
[08:42:59] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[08:44:23] <buzzard> rule A out, some of the result is potentially shifted into res
[08:46:49] *** Joins: analognoise (~analognoi@185.202.221.238)
[08:47:45] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[08:48:07] <buzzard> rule B out, either branch of the if() could unbalance that
[08:48:12] *** Quits: maxzor_ (~maxzor@2a01cb04054faa003ac1aabb61e40987.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[08:48:28] <node1> C is the correct options
[08:48:59] <node1> It satisfied all the condition.
[08:49:33] <buzzard> rule D out because it isn't mathematically correct
[08:51:32] <buzzard> i thought it was unclear because i read it lazily.  after [itchyjunk] pointed out the "every" it was clear
[08:51:37] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[08:52:34] <node1> *before every*
[08:53:17] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 268 seconds)
[08:53:19] *** Joins: buzzard_ (~quassel@185.203.219.56)
[08:53:41] <buzzard_> speaking of internet, there it went
[08:54:03] *** Quits: buzzard (~quassel@23.108.92.178) (Killed (NickServ (GHOST command used by buzzard_!~quassel@185.203.219.56)))
[08:54:08] *** buzzard_ is now known as buzzard
[08:55:28] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[08:55:32] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:55:41] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[08:56:37] *** Joins: Rounin (~david@84.212.130.215)
[08:56:38] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:57:01] <node1> html  has compiler?
[08:57:26] <[itchyjunk]> hmm
[08:57:27] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[08:57:32] <[itchyjunk]> a interpreter?
[08:57:35] <node1> Do html code required compiler?
[08:57:40] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[08:57:43] *** Joins: dirigible85 (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[08:57:47] <[itchyjunk]> something has to read the the html and parse it right?
[08:57:51] <[itchyjunk]> maybe a parser?
[08:57:57] <[itchyjunk]> idk about "compilation"
[08:58:06] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:a101:8c6b:aa7d:518f)
[08:58:12] <[itchyjunk]> its a markup language, not a programming one
[08:58:32] <node1> But they taught there student `html need compiler` i don't want to name this institution
[09:00:00] <smallville7123> node1: html is more like a scripting language
[09:00:00] *** Quits: Decker (~d3x0r@user/d3x0r) (Read error: Connection reset by peer)
[09:00:24] *** Joins: Decker (~d3x0r@user/d3x0r)
[09:00:42] <smallville7123> everything is interperated by the web browser and displayed as requested, it is never compiled into machine code and executed
[09:00:48] <node1> smallville7123 Thank you for making it clear
[09:01:16] <smallville7123> it is not like java as java can be both interperated AND compiled
[09:01:19] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:a101:8c6b:aa7d:518f) (Ping timeout: 268 seconds)
[09:01:19] *** Quits: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 268 seconds)
[09:01:55] <smallville7123> interperated by the java JVM, and compiled into machine code by the java compiler
[09:02:07] <smallville7123> eg java's JIT
[09:02:14] <smallville7123> JVM's JIT *
[09:03:06] <smallville7123> also java can be EXTREMELY fast tho usually not as fast as C and C++
[09:03:24] *** Quits: analognoise (~analognoi@185.202.221.238) (Quit: Leaving)
[09:03:51] <node1> okay thank you.
[09:05:02] <KillerWasp> html is interpreted
[09:05:17] <smallville7123> just look at https://www.youtube.com/watch?v=H-U96W89Z90 
[09:05:18] <bayaz> Title: Pokémon Red INSIDE Minecraft — An Interview with the Creator, "Mr. Squishy'" 
[09:05:32] <KillerWasp> i don't know if exist a compiler, but seem like a waste of time, which maybe don't exist.
[09:06:27] <smallville7123> this has over 357,000 command blocks yet it still runs just fine as 30 to 60 fps
[09:06:50] <smallville7123> AND it updates the emulated-display extremely quickly as well
[09:07:24] <smallville7123> and it is ALL in Java
[09:07:53] *** Joins: x003fgqwe (uid479614@id-479614.lymington.irccloud.com)
[09:08:07] *** Joins: analognoise (~analognoi@185.202.221.238)
[09:08:27] <smallville7123> And it is all INSIDE OF MINECRAFT which is already a intensive-ish game
[09:09:45] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:11:25] <smallville7123> so that alone should tell you just how insanely complex and fast java can be
[09:11:50] *** Joins: rvalue (~rvalue@user/rvalue)
[09:12:41] <smallville7123> anyway
[09:12:44] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:12:46] * smallville7123 attempts to modify my code to return a boolean if expansion has taken place instead of returning void
[09:12:54] <smallville7123> wrong line
[09:13:00] <smallville7123> "If the name of the macro being replaced is found during this scan of the replacement list (not including the rest of the source file’s preprocessing tokens), it is not replaced" does that mean, that if i do #define bar a \n #define a a bar \n     bar      then when "bar" > "a bar" > "a bar" and "a bar" is rescanned neither "bar" nor "a" will be expanded?
[09:15:13] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[09:15:20] <InPhase> smallville7123: Roughly speaking, you get one pass for each evaluation.  It takes extra work of wrapping things up to get multiple passes.
[09:15:31] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[09:16:05] <smallville7123> how would i do so?
[09:17:51] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:7789:5df4:4cdc:7899) (Ping timeout: 245 seconds)
[09:18:00] <InPhase> smallville7123: If you want to go full wild, see the things I was doing in this file.  In particular the way RC_EV is used inside of routines like RC_ARGS_EACH or RC_ARGS_LIST.  https://rcolyer.net/RCLib/docs/Macros_8h_source.html
[09:18:01] <bayaz> Title: RC Lib: Macros.h Source File 
[09:18:09] *** Quits: soapsudsxx (~soapsudsx@209.221.40.139) (Remote host closed the connection)
[09:19:04] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:9996:3caa:8169:8a61)
[09:19:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:19:20] <InPhase> smallville7123: A particularly potent application of this appears in RC_DEBOUT, which takes a list of variables or statements, outputs the text of those variable names or statements, and then outputs the contents of them, for debugging purposes.
[09:19:50] <InPhase> smallville7123: That ARGS_EACH works like map for macros.
[09:21:34] <InPhase> The nested RC_EV structure is to simulate looping, with a finite limit, by repeatedly re-evaluating.
[09:23:15] *** Joins: emf (~emf@2620:10d:c091:480::1:3408)
[09:23:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:24:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:25:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:26:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:27:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:28:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:28:52] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:29:37] *** Quits: emf (~emf@2620:10d:c091:480::1:3408) (Ping timeout: 240 seconds)
[09:29:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:30:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:30:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:31:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:32:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:33:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[09:34:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:34:31] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[09:34:33] *** Joins: frost (~frost@user/frost)
[09:34:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:36:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:36:27] *** Quits: buzzard (~quassel@185.203.219.56) (Ping timeout: 268 seconds)
[09:36:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:37:43] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[09:38:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:39:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:40:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:41:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:41:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:42:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:42:23] *** Quits: swp (~Thunderbi@143.176.249.0) (Ping timeout: 252 seconds)
[09:43:02] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[09:43:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:43:15] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[09:43:19] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:43:50] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:44:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:45:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:45:04] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[09:45:23] *** Joins: Intelo (~Intelo@88.244.89.107)
[09:46:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:47:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:47:25] <Intelo> Hi
[09:47:27] <Intelo> I am looking for a place with algorithms and their solutions in "javascript" or typescript. So I can learn the best practices and coding standards + also practice coding. Any suggestions?
[09:48:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:48:47] *** Quits: stagas (~stagas@2a02:587:c404:bf72:9779:47c2:ce7c:cb64) (Ping timeout: 268 seconds)
[09:49:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:50:05] *** Joins: swp (~Thunderbi@143.176.249.0)
[09:50:18] *** Joins: Chpy0 (~chpy@30-8-178-69.static.gci.net)
[09:50:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:51:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:52:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:53:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:54:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:55:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:56:16] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[09:56:36] *** Joins: ravan (~ravan@user/ravan)
[09:56:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:57:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:57:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[09:58:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:58:55] <flakland> https://rosettacode.org/wiki/99_bottles_of_beer#JavaScript
[09:59:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:59:48] <flakland> i don't know what i'd say about best practices, but here is a massive amount of code in various languages
[10:00:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:00:54] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[10:01:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:02:39] <CyberTailor> why does prolog exist? it is mind-blowing
[10:02:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:03:06] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[10:03:10] <smallville7123> this maybe? https://gist.github.com/mgood7123/db0140ec94cd5e92961a620357548402      idk if psuedo code is correct or not
[10:03:11] <bayaz> Title: code.cpp 
[10:03:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:03:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:04:45] <DnzAtWrk> well
[10:04:52] <DnzAtWrk> setting up a wireless access point is finally easy in windows
[10:05:01] <DnzAtWrk> but why the f would it limit it to 8 devices
[10:05:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:05:20] <smallville7123> DnzAtWrk: limited resources?
[10:05:29] <DnzAtWrk> that's not up to windows
[10:05:35] <smallville7123> DnzAtWrk: stability issues?
[10:05:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:06:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (K-Lined)
[10:06:32] <smallville7123> wireless hotspot cannot simply connect to hundreds of devices as it each device costs nothing at all to register, keep track of, send stuff to, and disconnect
[10:07:03] <smallville7123> "16:36:00 betelgeuse9 has left IRC (K-Lined)" oof
[10:09:56] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:12:14] *** Quits: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) (Ping timeout: 268 seconds)
[10:12:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:13:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[10:13:15] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:13:34] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:6cbf:9881:9077:c9a4) (Read error: Connection reset by peer)
[10:16:32] <smallville7123> if i do #define bar a bar \n #define a a bar \n     bar      then would the process be:       scan "bar" -> expand "bar" to "a bar" -> rescan "a bar" -> expand "a" to "a bar" and do not expand "bar" -> rescan "a bar bar" -> do not expand "a" and do not expand "bar"
[10:17:59] *** Joins: loganlee (~Thunderbi@user/loganlee)
[10:20:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Quit: Leaving)
[10:22:26] *** Joins: chenqisu12 (~bhca7d@183.217.201.63)
[10:22:57] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Ping timeout: 240 seconds)
[10:29:37] *** Joins: murii (~murii@2a02:a58:835a:1100:75cd:98e1:d569:fe76)
[10:30:41] <smallville7123> apparently so https://godbolt.org/z/EaTanzd61    and my preprocessor apparently also does the same o.o   
[10:30:43] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[10:30:50] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[10:32:28] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:33:55] *** Joins: gr1m (~gr1m@45.83.220.192)
[10:33:57] *** Quits: murii (~murii@2a02:a58:835a:1100:75cd:98e1:d569:fe76) (Ping timeout: 240 seconds)
[10:38:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:42:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:46:38] *** Joins: jinsun (~quassel@user/jinsun)
[10:51:12] *** Joins: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[10:54:47] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 268 seconds)
[10:54:51] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[10:57:02] *** Joins: sh1r4s3 (~sh1r4s3@109-252-75-9.nat.spd-mgts.ru)
[10:58:41] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[10:58:44] *** Joins: diamondbond (~diamondbo@175.157.252.96)
[10:58:58] *** Joins: img (~img@user/img)
[11:03:25] *** Joins: stagas (~stagas@2a02:587:c404:bf72:8f34:69db:42e4:a38)
[11:06:24] <dan01[m]> If I open a listening connection with netcat like nc -l -t 1234
[11:06:44] <dan01[m]> Is there a way for me to then send strings to that connection via the terminal?
[11:06:56] <dan01[m]> at random during listening time?
[11:07:25] <Decker> telnet?
[11:09:22] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[11:11:21] *** Quits: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) ()
[11:11:22] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[11:11:26] *** Joins: jaysicks (~jaysicks@178-164-226-74.pool.digikabel.hu)
[11:15:48] *** Joins: rcoote (~rcoote@2a02:908:69a:58a0:f495:f600:84e1:3ace)
[11:16:06] <vdamewood> dan01[m]: nc without -l
[11:17:27] *** Joins: node1 (~node1@user/node1)
[11:17:36] <dan01[m]> vdamewood: well then I won't be listening
[11:18:26] <vdamewood> dan01[m]: Well,  only one of them can be listening.
[11:18:40] <Decker> in another teriminall...
[11:18:47] <Decker> but if you're listening there's nothing to send data to either
[11:18:50] <DnzAtWrk> what is up with this trend in visual programming languages
[11:18:52] <DnzAtWrk> are they juse a fad?
[11:19:02] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[11:19:04] <DnzAtWrk> or do they have practical use
[11:19:11] <DnzAtWrk> just*
[11:19:14] *** Joins: rvalue (~rvalue@user/rvalue)
[11:20:30] <node1> Is there any online website where we can draw  in fractions [ number of ways  BST tree using given  edges or vertices ] ?
[11:21:15] *** Quits: jaysicks (~jaysicks@178-164-226-74.pool.digikabel.hu) (Remote host closed the connection)
[11:23:53] *** Joins: murii (~murii@2a02:a58:835a:1100:75cd:98e1:d569:fe76)
[11:24:41] *** Quits: Gentpup (~Gentpup@217.75.212.43) (Quit: Leaving)
[11:28:56] *** Joins: stagas_ (~stagas@athedsl-4414268.home.otenet.gr)
[11:29:30] *** Quits: stagas (~stagas@2a02:587:c404:bf72:8f34:69db:42e4:a38) (Ping timeout: 260 seconds)
[11:31:40] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:32:33] *** Joins: chomwitt (~chomwitt@ppp-2-85-245-134.home.otenet.gr)
[11:33:39] *** Joins: mishugana (~mishugana@user/mishugana)
[11:33:45] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[11:37:32] *** Joins: mrig (~AdiIRC@user/mrig)
[11:39:06] *** Joins: absc (~absc@81.31.144.28)
[11:41:44] *** Quits: stagas_ (~stagas@athedsl-4414268.home.otenet.gr) (Ping timeout: 252 seconds)
[11:42:08] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[11:43:14] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[11:43:54] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:44:44] *** Joins: palasso (~palasso@user/palasso)
[11:49:17] *** Joins: Blasphemian (~Blasphemi@user/blasphemian)
[11:51:52] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[11:52:19] *** Joins: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[11:53:10] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:54:21] *** Quits: yo (~0xfe0@49.36.186.18) (Read error: No route to host)
[11:54:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[11:54:50] *** Joins: yo (~0xfe0@49.36.186.18)
[11:55:12] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[11:56:52] <Hash> Hi
[11:57:13] <Hash> I need to generates like 2000 first name, last name and then fistnamelastname@randomemaildomain.com
[11:57:17] <Hash> What to use?
[11:57:49] <flakland> for testing or actual names?
[11:58:32] <Hash> testing
[11:58:38] <Hash> But I need it to be real sounding
[11:58:47] <Hash> I am thinking php faker.
[11:59:05] <mawk> python
[11:59:08] <mawk> or bash
[11:59:50] *** Quits: skipper (~whatsupbo@user/scobydoo) (Quit: brb)
[11:59:54] <flakland> and a good list of nouns/adjectives
[12:00:21] <Hash> https://bpa.st/UEVA
[12:00:23] <bayaz> Title: View paste UEVA 
[12:00:26] <Hash> Had some code already wirtten years ago
[12:00:33] <Hash> I need to install php and faker and etc. etc. I guess
[12:00:53] *** Joins: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn)
[12:01:04] <pyzozord> Day 19, for the fourth time.
[12:01:06] <Hash> https://www.youtube.com/watch?v=2b0gnQELSFU
[12:01:08] <bayaz> Title: Demo of PsySocial.net upcoming Psychedelic Social Network coded from scratch by Hash Borgir 
[12:01:09] <Hash> That was for this
[12:01:27] <pyzozord> What do they say, four times is the charm?
[12:01:30] <Hash> gimme a few
[12:01:30] *** Joins: golbol (~golbol@193.32.127.228)
[12:01:47] <arahael> pyzozord: Only if you stack them.
[12:02:00] <arahael> pyzozord: (You were making a pun, right?)
[12:02:02] <pyzozord> I am most definitely stuck in dayu 19
[12:02:13] <arahael> Oh, so not using forth.
[12:02:52] <pyzozord> no, I'm quite sure if I used forth I'd be stuck in day 19 fourty four days not just four days
[12:03:29] *** Joins: |7| (~seachdamh@user/seachdamh)
[12:03:31] <pyzozord> Using the path of least resistance: python. But the snake seems to have bitten me!
[12:06:23] <Hash> https://termbin.com/h8sz
[12:06:24] <bayaz> Type: text/plain; charset=utf-8 
[12:06:27] <Hash> I just have to format it properly now
[12:06:45] <Hash> SEe
[12:06:48] <Hash> Here's the problem with faker.
[12:06:59] <Hash> Name doesn't match email. I gotta figure out this lib hang on
[12:07:12] <Hash> Hmm.
[12:07:16] <Hash> I got it.
[12:07:18] <Hash> brb
[12:08:14] *** Quits: diamondbond (~diamondbo@175.157.252.96) (Ping timeout: 260 seconds)
[12:12:47] *** Quits: golbol (~golbol@193.32.127.228) (Quit: Leaving)
[12:13:36] *** Joins: dawnbreak (~dawn@119.61.27.20)
[12:13:47] <Hash> https://termbin.com/7ghz result
[12:13:48] <bayaz> Type: text/plain; charset=utf-8 
[12:13:52] <Hash> https://bpa.st/YEWQ code
[12:13:53] <bayaz> Title: View paste YEWQ 
[12:14:03] <Hash> Here's the problem with Faker. Email generated, doesn't match the name.
[12:14:29] <Hash> so make a custom email. hang on
[12:14:31] *** Quits: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn) (Quit: Leaving)
[12:15:55] <Hash> https://termbin.com/cxfz progress, but they look too fake.
[12:15:56] <bayaz> Type: text/plain; charset=utf-8 
[12:16:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:17:42] *** Joins: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn)
[12:18:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:19:16] <dawnbreak> dose any body use golang?
[12:19:21] <Hash> https://bpa.st/EMEA 
[12:19:22] <bayaz> Title: View paste EMEA 
[12:19:42] <Hash> https://termbin.com/dwlb that looks pretty good
[12:19:43] <bayaz> Type: text/plain; charset=utf-8 
[12:20:12] <dan01[m]> dawnbreak: I do
[12:20:16] <Hash> Still kind of look fake. Need more variety
[12:20:20] <mrig> dawnbreak just ask to ask if you have a question :)
[12:20:50] *** Quits: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn) (Client Quit)
[12:22:08] *** Joins: zaher_ (~zaher@37.48.146.209)
[12:22:17] *** Joins: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn)
[12:22:56] <EdFletcher> https://dontasktoask.com/ 
[12:22:57] <bayaz> Title: Don't ask to ask, just ask 
[12:23:16] <mrig> heh factobunt :P
[12:24:19] *** Quits: zaher (~zaher@37.48.190.170) (Ping timeout: 256 seconds)
[12:24:19] *** Joins: Klinda (~superleag@user/klinda)
[12:24:49] *** Quits: sh1r4s3 (~sh1r4s3@109-252-75-9.nat.spd-mgts.ru) (Remote host closed the connection)
[12:25:00] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:26:59] *** Joins: stagas (~stagas@2a02:587:c444:9a87:458a:1c12:8f8:bac)
[12:29:31] <mrig> Listening to Elon Musk, he is quite the environmentalist, more so than I'd thought.
[12:29:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[12:30:09] *** Quits: thetourist108 (~thetouris@2001:470:69fc:105::3112) (Quit: You have been kicked for being idle)
[12:30:12] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[12:30:23] <mrig> Really is a long time nerd too, seems to be, I'm guessing that he is a programmer?
[12:30:37] *** Joins: thetourist108 (~thetouris@2001:470:69fc:105::3112)
[12:30:50] *** Parts: thetourist108 (~thetouris@2001:470:69fc:105::3112) ()
[12:30:58] <arahael> mrig: He is a geek.
[12:30:58] *** Quits: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn) (Quit: Leaving)
[12:31:06] <mrig> heh, yes seems so :)
[12:31:09] <dawnbreak> sorry for my question, and i make a gist for here https://gist.github.com/CodingdAwn/8ce3957e47b02a03b5acc02415ca5324   please give me my pool english
[12:31:10] <bayaz> Title: go passing pointer to channel 
[12:32:04] <mrig> dawnbreak you haven't heard the go anthem then?
[12:32:23] <dawnbreak> sorry... no.. i will google for it
[12:32:57] <mrig> "Don't communicate by sharing memory; share memory by communicating"
[12:33:29] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[12:33:49] <mrig> arahael I like his take on dealing with the environment, had not really considered it much before, but does seem pretty sane.
[12:34:16] <arahael> mrig: What is his take?
[12:34:19] <mrig> the geek approach, just build a better train set.
[12:34:26] <dawnbreak> passing pointer is dangerous and breaks the channel design.
[12:34:28] <dawnbreak> because I think the channel is solved problem data race, but if you pass a pointer to channel, it needs to lock them again
[12:35:02] <mrig> why experiment with whether or not it is a risk, just make something so that you can transition smoothly. 
[12:35:59] <mrig> this negates the argument, which is what I like; I have arguments :(
[12:36:04] <mrig> hate rather
[12:36:21] <mrig> dawnbreak what exactly are you trying to communicate?
[12:36:37] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:37:19] <dawnbreak> i want to know that my conclusion is right? --> this  "I think the channel is solved problem data race, but if you pass a pointer to channel, it needs to lock them again!"
[12:37:53] <flakland> just make something, as long as it doesn't involve hydrogen tho
[12:37:54] <dawnbreak> i think passing a pointer to channel is breaks channel's design
[12:38:04] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:38:26] <dawnbreak> could you guys can view this page ?https://gist.github.com/CodingdAwn/8ce3957e47b02a03b5acc02415ca5324 this is my code
[12:38:31] <mrig> dawnbreak have you read Tony Hoare "Communicating sequential processes"?
[12:39:39] <mrig> flakland well, the 'space is the way out', is rather naive in my opinion. 
[12:39:43] <dawnbreak> no, thanks i will read it now
[12:39:53] <mrig> but well intentioned it would seem.
[12:40:21] <pyzozord> is saying "I don't understand" fast like this "I donundastan" considered understandable?
[12:40:34] <mrig> dawnbreak it is the origin of the ideas behind the language and I think does get to the heart of your questioning and thought process.
[12:40:58] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[12:43:09] <mrig> pyzozord It is not considered 'good elocution', why do you ask?
[12:43:34] <pyzozord> but I'm worried that people don't understand me when I speak fast because of my thick accent
[12:43:39] <pyzozord> s/but/because/
[12:44:02] <pyzozord> I mean after you know a person for a while you get used to their accent and you understand them much more
[12:44:10] <pyzozord> but I'm talking about meeting new people
[12:44:13] <arahael> pyzozord: In your native location, you would have no accent at all.
[12:44:44] <mrig> just make eye contact with them, you can tell then when or if they have understood.
[12:44:45] *** Joins: murii_ (~murii@2a02:a58:835a:1100:31:9cbd:b860:af77)
[12:44:59] <pyzozord> arahael: sure, only problem is I emigrated from Poland to the Netherlands
[12:45:17] <arahael> pyzozord: Yeah, you'd have an accent in the Netherlands, since it's not Poland. :)
[12:45:23] <pyzozord> I don't even know how to properly pronounce "I don't understand" without going super slow
[12:45:33] <mrig> 90% of comms goes through body language and intonation not what is said.
[12:45:42] <beaky> nice im sitll stuck on advent of code day 14  part 2 
[12:45:58] <arahael> pyzozord: Then perhaps speak slow?  People don't need to speak fast.  Getting words out as fast as possible isn't the best way to communicate.
[12:46:07] <arahael> pyzozord: Instead, be deliberate with which word you use?
[12:46:20] <pyzozord> I just sent my goodbye email at work with subject "I hate long goodbyes" and message "goodbye ;) Best regards, [pyzozord]"
[12:46:37] <mrig> pyzozord oh is today your last day?
[12:46:42] <pyzozord> tomorrow
[12:47:02] <mrig> Is that exciting or daunting?
[12:47:04] <pyzozord> I want to give people time to reach out in case they would like to stay in contact. I doubt anyone will, but you never know
[12:47:12] *** Joins: Satin (uid193953@user/Seten)
[12:47:27] <pyzozord> I think more exciting, Daunting will be first days of new year when I start in the new company
[12:47:38] *** Quits: murii (~murii@2a02:a58:835a:1100:75cd:98e1:d569:fe76) (Ping timeout: 268 seconds)
[12:47:38] <mrig> right yes.
[12:47:53] <pyzozord> arahael: yes, I should work on that, in both speech and writing
[12:48:23] <pyzozord> arahael: that's the main reason why I decided to use vi instead of vim in the first place. I felt I am too fast and don't think enough and should slow down and think more on my code
[12:48:49] <arahael> An odd point, but ok. :D
[12:48:59] <pyzozord> :D
[12:49:18] <pyzozord> which one? I guess they are all kind of odd :P
[12:49:28] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[12:49:46] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 260 seconds)
[12:50:07] <arahael> ...  Yes.
[12:50:40] <arahael> Specifically the vi / vim point - it's not normally a consideration in this topic!
[12:51:11] <mrig> oh on the topic of vim, I've just discovered the tagstack, not sure how to integrate this knowledge just yet but does seem pretty useful.
[12:51:18] <mrig> well vim and vi
[12:51:19] <pyzozord> I tried ed, but it has no autoindentation and manually tapping space each line is too annyoing
[12:51:47] <arahael> pyzozord: Considered nano? :)
[12:52:05] <arahael> pyzozord: And two-space indentation. "Double-tap".
[12:52:11] <pyzozord> I still like the modal editing, and ed/vi's language with s/// and other commands is not bad
[12:52:21] <mrig> pyzozord have you modded your version of vi at all?
[12:52:24] <pyzozord> but I think in the end I must write my own editor, free of any preconceptions
[12:52:27] <mrig> your branch
[12:52:56] <mrig> I'm going to do that at some point too, need a charset and a terminal first though :|
[12:52:59] <pyzozord> mrig: yes, I call it VIP ("VI by Pyzozord" or "Very Important Program")
[12:53:04] <mrig> heh
[12:53:28] <mrig> might go with vac for mind.
[12:53:36] <mrig> way off yet though
[12:53:51] <mrig> mine rather
[12:54:26] <mrig> arahael you've written and editor of even an IDE in the past, if I'm not mistaken?
[12:54:30] <pyzozord> oh and it's pronounced "vip" not "vee-ay-pee"
[12:54:40] <arahael> mrig: I haven't, actually.
[12:55:02] <mrig> arahael oh, I thought I remembered hearing mention that youd coded a python IDE?
[12:55:09] <mrig> my mistake than.
[12:56:05] <arahael> mrig: Appology accepted. ;)
[12:56:13] * arahael is in a very odd mood tonight.
[12:56:14] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:56:21] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[12:56:25] *** zaher_ is now known as zaher
[12:56:27] <pyzozord> that's like every tonight for me
[12:56:32] <pyzozord> and every today as well
[12:56:44] <mrig> heh arahael oh I'm sorry about that! :P
[12:56:53] <arahael> Haha. :)  My VR headset got delayed... Again...  Now won't arrive until 5th Jan.
[12:57:08] <mrig> arahael Tawny port kinda mood?
[12:57:31] <pyzozord> I bought Sekiro on xbox one and I'm glad I waited since it got 50% off christmass discount
[12:57:51] <pyzozord> it's like japanese Dark Souls. And Dark Souls is like 3d nethack...
[12:58:01] <arahael> mrig: Yes, but I've run out. ;( 
[12:58:09] <mrig> oh dang!
[12:58:16] <arahael> mrig: But it's OK, because unusually, I'm *also* in a whiskey mood.
[12:58:20] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:58:29] <arahael> *whisky.
[12:58:49] <pyzozord> isn't it dependent on region or something?
[12:59:01] <pyzozord> I always say whisky for simplicty
[12:59:03] <mrig> ah right, hitting not quite the same spot but a similar region :)
[12:59:33] *** Joins: raj_ (uid72176@user/raj)
[12:59:46] <mrig> spelling in English or Scottish is painful :(
[12:59:46] *** raj_ is now known as rj
[12:59:47] *** rj is now known as Guest2756
[12:59:53] <mrig> or American
[12:59:57] <Hash> How do you detect time zone format?
[13:00:00] <Hash> 2017-01-09 16:40:12 -0400 what is this one?
[13:00:02] <arahael> pyzozord: Yes.  The 'e' bit is american.
[13:00:07] <mrig> welsh is best, they have ll's
[13:00:09] *** Guest2756 is now known as raj
[13:00:56] <pyzozord> oh it's american? I thought it was specific region of Great Britain
[13:01:00] <arahael> Laters!
[13:01:01] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:01:04] <pyzozord> cheers
[13:01:06] * arahael is playing board games again.
[13:01:20] *** Quits: baloona (~baloona@mail.baloona.de) (Quit: WeeChat 2.3)
[13:01:24] <pyzozord> I had an idea for a video game that is a board game but first person
[13:01:33] <pyzozord> and real time, no turns
[13:02:00] <mrig> Hash the -4 gives you the offset but not the zone. I think you need the region code to be certain.
[13:02:34] <mrig> crazily it is not fixed to geometry but to politics.
[13:02:56] <mrig> arahael enjoy!
[13:02:56] <Hash> yyyy-MM-dd HH:mm:ss ZZZZ <- is there a name for this?
[13:02:59] <Hash> That's what it looks like
[13:04:17] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[13:04:21] <EdFletcher> That looks really close to ISO-8601 
[13:04:27] <mrig> TZD or Z apparently
[13:04:27] <Hash> I need to generate like 2000 timestamps, from 2017-01-09 16:40:12 -0400 to 2021-12-20 16:40:12 -400
[13:04:31] <Hash> hmm
[13:07:09] <mrig> oh it seems that they are standardised to be the same, wasn't sure of that.
[13:08:19] *** Joins: Payam (~Payam@138.106.57.132)
[13:08:24] *** Joins: node1 (~node1@user/node1)
[13:09:00] <mrig> where is -4 isn't that in the Atlantic ocean somewhere, or does that cover the east coast of the USA?
[13:10:10] <Decker> maybe DST?
[13:10:17] <mrig> oh that gets south America and the eastern tip of canada.
[13:11:02] <mrig> DST yes that's a sane system that will save the day :D
[13:11:17] <Decker> or the other way?
[13:11:27] <Decker> ( -4 is sometimes -5? )
[13:11:58] <Decker> arizona is half the time in pacific timezone and half the time in mountain zone
[13:12:55] <mrig> Human kind has never before been so detached from time.
[13:13:01] <mrig> kinda crazy.
[13:13:07] *** Quits: murii_ (~murii@2a02:a58:835a:1100:31:9cbd:b860:af77) (Remote host closed the connection)
[13:13:26] <mrig> what could go wrong ? :P
[13:13:51] *** BrianG61UK__ is now known as BrianG61UK_
[13:13:59] *** Joins: murii (~murii@2a02:a58:835a:1100:31:9cbd:b860:af77)
[13:14:01] <Square> why are we extra detached now?
[13:14:08] <mrig> from UT I should clarify.
[13:14:20] <mrig> watches and clocks.
[13:14:39] <mrig> and networks to synchronise them.
[13:15:05] <mrig> And light pollution ...
[13:17:30] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[13:19:04] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[13:19:12] <mrig> so overly focused upon atomic time, which is rather like staring into ones own belly button incessantly.
[13:19:37] <mrig> relatively speaking of course :)
[13:19:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[13:22:06] <mrig> Are CPU with onboard GPUs just optimised for using code in parallel?
[13:22:15] <Hash> So 
[13:22:16] <Hash> I got it
[13:22:18] <Hash> Thanks
[13:22:22] <Hash> So what's up with the text generation 
[13:22:35] <Hash> hmm. nLp
[13:22:53] <mrig> or are their actually hardware chips specifically for parallele computation built into them
[13:23:42] *** Joins: plastico (~plastico@neomutt/plastico)
[13:23:56] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:24:03] *** Joins: aradesh (~aradesh@user/aradesh)
[13:24:03] <mrig> It's kind of crazy how quickly a CPU gets bogged down when layering graphical output computations.
[13:28:22] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[13:31:13] *** Joins: xa0s (~xa0s@mab.sdf.org)
[13:31:15] <mrig> oh it is from sidereal time, UT is atomic time really, dang the specifications for these are so unclear.
[13:31:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[13:31:25] <mrig> They do keep changing though.
[13:31:36] *** Joins: zaher_ (~zaher@37.48.156.223)
[13:31:50] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:31:51] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:31:51] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:34:29] *** Quits: zaher (~zaher@37.48.146.209) (Ping timeout: 268 seconds)
[13:35:11] <mrig> It is going to be fun when my coding chops are up to making astronomical models in the computer :)
[13:35:32] <mrig> will help to consolidate the concepts!
[13:36:34] *** Joins: murii_ (~murii@2a02:a58:835a:1100:a528:b45f:dc85:5785)
[13:36:59] <GeDaMo> http://tdc-www.harvard.edu/catalogs/bsc5.html
[13:36:59] <bayaz> Title: Yale Bright Star Catalog 
[13:37:49] *** Joins: baloona (~baloona@mail.baloona.de)
[13:38:56] <Square> I wish used my telescope more. I haven't even caught Orion Nebula yet.
[13:39:22] <GeDaMo> You don't need a telescope to see Orion :|
[13:40:06] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[13:40:09] <GeDaMo> Ooh, pretty https://en.wikipedia.org/wiki/Orion_Nebula
[13:40:10] <bayaz> Title: Orion Nebula - Wikipedia 
[13:40:27] <mrig> Square oh you should get out there, plan things to see :)
[13:40:32] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:40:39] *** Quits: murii (~murii@2a02:a58:835a:1100:31:9cbd:b860:af77) (Ping timeout: 268 seconds)
[13:41:16] <mrig> watching where the planets are so that you get good times to look at them is great.
[13:41:35] <mrig> something to look forwards to!
[13:41:35] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:42:13] <Square> oh. Orion Nebula is seen best in january where i live
[13:43:40] <Square> mrig, everytime i try to plan my sessions. Weather happens
[13:43:45] *** Joins: Guest79 (~Guest79@46.109.136.184)
[13:43:52] <Guest79> https://stackoverflow.com/questions/70395116/collisions-dont-get-detected-in-my-three-js-game-code
[13:43:53] <bayaz> Title: Collisions don't get detected in my three.js game code-- 
[13:44:52] <mrig> Square oh that's a pain in the planing!
[13:45:25] <mrig> I think you need quite a sensitive telescope for nebula, or a camera on a very good mount.
[13:46:29] <mrig> Square I study the timing too, you dont need to see them for that, just work out where they will be; The working out is as much fun as seeing them.
[13:46:42] <mrig> it's not all just matter.
[13:46:56] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:47:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:49:37] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:49:58] <Square> I have an 8" dobsonian. Im glad if I just see some cloudyness.
[13:51:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:51:01] *** Lord_of_Life_ is now known as Lord_of_Life
[13:51:24] <mrig> oh nice!
[13:51:54] <Square> Pretty hyped by the JWST launch on thursday. 
[13:52:13] <Square> oh.. friday i mean
[13:52:13] <GeDaMo> I thought that was on Friday
[13:52:15] <mrig> I borrow a friends from time to time, just to keep my feet in the solar system :)
[13:52:18] *** Quits: baloona (~baloona@mail.baloona.de) (Ping timeout: 260 seconds)
[13:52:56] <Square> if something goes wrong, xmas eve will be wrecked.
[13:53:02] <mrig> Well it is quite an event.
[13:53:17] <mrig> Yes that would be terrible
[13:53:35] <mrig> Will be quite a thing if all goes well.
[13:54:16] <Square> Im not sure how long it will take til we can call it a complete success. 
[13:54:57] *** Joins: baloona (~baloona@mail.baloona.de)
[13:55:14] <mrig> A couple of weeks I think, it was mentioned in this : https://www.youtube.com/watch?v=OVjbelWgGkw
[13:55:15] <bayaz> Title: Fingers Crossed for the James Webb Space Telescope - Sixty Symbols 
[13:56:03] <mrig> But I would think that data being processed would be the ultimate test, the first image. I wonder what they will point it at to test and calibrate?
[13:56:28] <Square> Lets hope for Orion Nebula
[13:56:47] <mrig> could be :)
[13:57:03] <Square> No, but maybe same as hubbles first image?  
[13:57:19] <mrig> It is the classic go to for finding things in the northern hemisphere at least.
[13:57:47] <mrig> Lets hope that the first image is a little sharper than hubbles :| 
[13:58:24] <Square> Hehe.. yep
[13:59:28] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[14:02:32] <mrig> I wonder when it will actually get to the Lagrange point, it could well be that it will work before it's actually in place.
[14:02:54] *** Joins: jaysicks (~jaysicks@178-164-226-74.pool.digikabel.hu)
[14:03:22] <Decker> it's be more stress on parts when maneuvering
[14:03:30] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 260 seconds)
[14:03:44] <mrig> oh it says 30 days, dang thats fast!
[14:03:51] <mrig> right yes
[14:05:05] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[14:05:38] <mrig> https://jwst.nasa.gov/content/about/orbit.html
[14:05:39] <bayaz> Title: Orbit - Webb/NASA 
[14:06:13] *** Quits: jaysicks (~jaysicks@178-164-226-74.pool.digikabel.hu) (Remote host closed the connection)
[14:06:16] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[14:07:09] *** Joins: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn)
[14:07:47] *** Quits: chenqisu12 (~bhca7d@183.217.201.63) (Ping timeout: 268 seconds)
[14:07:56] *** Parts: x003fgqwe (uid479614@id-479614.lymington.irccloud.com) ()
[14:08:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:09:23] *** Joins: murii (~murii@2a02:a58:835a:1100:f041:c0a:92e7:115e)
[14:09:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:09:36] <pyzozord> right that link from yesterday about rewriting doom 3 in java indeed doesn't have too much insight
[14:10:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:11:32] <nomagno> pyzozord: Can you reshare the link please?
[14:11:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:12:04] <pyzozord> https://www.youtube.com/watch?v=brpn3M8awx0
[14:12:05] <bayaz> Title: Fallacies of Doom Lessons learned from porting Doom 3 to Java - Mahmoud Abdelghany 
[14:12:15] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[14:12:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:12:37] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:12:38] <nomagno> BTW, HWVM has pointers, I can rest in peace now
[14:12:50] *** Quits: murii_ (~murii@2a02:a58:835a:1100:a528:b45f:dc85:5785) (Ping timeout: 260 seconds)
[14:13:10] <pyzozord> eww pointers
[14:13:26] <pyzozord> also: nice, pointers
[14:13:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[14:13:48] <nomagno> It''s a CPU without so much as a call stack, not very ew :P
[14:14:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:14:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[14:15:26] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:15:38] <pyzozord> I am recently of opinion that pointers are the line between static languages and dynamic languages
[14:15:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:15:56] <pyzozord> and I haven't seen a language without pointers yet
[14:16:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:16:54] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) ()
[14:17:00] <GeDaMo> Javascript has pointers?
[14:17:03] <xsperry> to me pointers imply pointer math, so most languages that are not C or C++ do not have pointers
[14:17:03] <pyzozord> and I mean python theoretically doesn't have an explicit pointer mechanism, but really everything is passed and stored as pointers in python
[14:17:13] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[14:17:21] <pyzozord> js is like python in that regard
[14:17:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:18:33] <pyzozord> I guess by pointers I mean an address that stored in variable and can be modified in runtime to access different addresses
[14:18:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:20:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:20:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:22:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:23:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:24:25] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:24:25] <nomagno> pyzozord: you're asking for no arrays.
[14:24:44] <GeDaMo> You can have arrays without pointers
[14:24:50] *** Joins: kranius (~kranius@user/kranius)
[14:25:09] <nomagno> Hm, illuminate me how to do arithmetic on the index this way
[14:25:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:25:22] <nomagno> You need underlying pointers to do math on
[14:25:33] <GeDaMo> The implementation may use pointers but the high level language doesn't necessarily be able to see them
[14:25:38] <Decker> the address of the start of an array isn't a pointer
[14:25:40] *** Joins: Twipply (~Twipply@user/twipply)
[14:25:52] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[14:25:54] <Decker> a pointer exists as a variable you can modify - the address of an array is baked into code
[14:26:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:27:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:27:48] *** Quits: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn) (Quit: Leaving)
[14:28:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:29:05] *** Joins: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:eda9:23f5:325d:1e4c)
[14:29:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:29:54] <nomagno> Decker: I don't think you can access an array practically without underlying pointers
[14:30:00] <pyzozord> disclaimer: I haven't thought this idea fully
[14:30:08] <pyzozord> but I find it intriguing
[14:30:22] <nomagno> Or, even worse, without A SOFTWARE LAYER FOR POINTER
[14:30:34] <nomagno> Where you manually do the arithmetic before the machine code
[14:30:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:30:47] <Decker> but you wouldn't if you had no pointers
[14:31:02] <Decker> but not having pointer doesn't mean you can't have arrays - you just can only access array members not the address of the array
[14:31:17] <Decker> therefore YOU as a programmer don't need pointers
[14:31:33] <Decker> and they don't exist in the data space of the program, but are just constants in the generated code
[14:31:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:31:36] <pyzozord> but my basic idea is 1) no heap, only stack 2) no dynamic allocations, only static, hardcoded allocations on stack 3) no pointers in code, and no references
[14:32:11] <mrig> some languages have pointers still but they put them in a specific lib that is tucked away.
[14:32:14] <Decker> pyzozord the problem with that is fragmentation.  When you need 50 more vectors and don't need 10 of the old ones
[14:32:21] <mrig> This seems like quite a sane option.
[14:32:38] <pyzozord> Decker: I want to relay on os there to only really allocate the pages of memory that were actually touched
[14:32:40] <mrig> unsafe or some such.
[14:32:45] *** Joins: Kev_ (~Kev@2a01cb0400149f0030c04b21e9468286.ipv6.abo.wanadoo.fr)
[14:32:55] <GeDaMo> Forth memory allocation treats the heap something like a stack, it has a pointer which moves forward
[14:32:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:33:33] <Decker> the WASm machine doesn't have a stack pointer - but has a stack... but code cannot do anything to address the stack
[14:33:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:33:49] <GeDaMo> You can oly release something if you release everything that was allocated after it
[14:34:01] *** Joins: maxzor (~maxzor@2a01cb04054faa005b93e63135c2d5d3.ipv6.abo.wanadoo.fr)
[14:34:18] <pyzozord> another way maybe to put my idea is that "variable and function names have hardcoded addresses, you cannot what memory address a name refers to"
[14:34:57] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Ping timeout: 240 seconds)
[14:34:59] <pyzozord> ando also "name points to real concrete data, there is no name pointing to address that points to real data"
[14:35:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:35:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:36:55] <nomagno> pyzozord: Again, I am unsure how you move around arrays this way
[14:37:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:37:14] <pyzozord> so in summary, the idea is "names point to real data and you cannot change what memory they point to"
[14:37:25] <pyzozord> oh and "all data is on stack"
[14:37:33] <nomagno> It's not you can't access array indexes, it's that you can't do arithmetic on array indexes this way
[14:37:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:38:04] *** Joins: zardoz2 (~bc8147f2@cerf.good1.com)
[14:38:32] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:e954:6a22:3202:5b23)
[14:38:57] <pyzozord> you can have an array that points to memory location, in that memory locatin there is an int defining how big this array is. The array indexing still does base + index * size, but I don't think it violates any of the three rules I described
[14:38:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[14:39:14] <pyzozord> because arr[1] can by though of as a name on it's own
[14:39:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:40:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:40:05] <pyzozord> ok fair arr[foo] is not a name, that is indeed somewhat dynamic but that's the only exception
[14:41:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:41:29] <pyzozord> I also think that all arrays are pointers, but not all pointers are arrays
[14:41:37] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[14:41:49] <zardoz2> in what language are arrays pointers?
[14:42:09] <pyzozord> in c
[14:42:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:42:52] <Decker> they're not though
[14:42:54] <zardoz2> in C, when you use an array in a value context, it decays to a pointer. but arrays are still not pointers
[14:43:07] <Decker> int a[10]; a = malloc(20); will fail.
[14:43:19] <zardoz2> pointers point to data, arrays contain data
[14:43:29] <Decker> and you don't need it as a pointer to add an offset - or do math on array indexes
[14:43:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[14:43:46] <pyzozord> "sky is blue", "false! sky changes color based on the time, date, location and weather"
[14:44:13] <zardoz2> pointers and arrays are fundamentally different
[14:44:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:44:31] <zardoz2> sizeof (char *)  vs sizeof (char [100])
[14:44:54] *** Joins: RazielZ (~Raziel@user/raziel)
[14:45:02] <pyzozord> "fundamentally, sky is rarely blue as in FF0000"
[14:45:08] <pyzozord> 0000FF sorry
[14:45:30] <zardoz2> pyzozord, it seems that whenever you say something stupid, and you are corrected, you resort to that silly sky analogy
[14:45:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:45:48] <pyzozord> arrays are pointers
[14:45:52] <pyzozord> variables are pointers
[14:45:57] <pyzozord> pointers are just memory addresses
[14:46:06] <zardoz2> like talking to a wall
[14:46:18] <zardoz2> char s[100]; doesn't store an address. it stores 100 chars
[14:46:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:46:28] <pyzozord> I don't care for this discussion
[14:46:42] <pyzozord> I am talking about general concepts and you are talking about c11 standard specification
[14:46:43] <zardoz2> you are free to stop it at any point
[14:47:22] *** Quits: zaher_ (~zaher@37.48.156.223) (Ping timeout: 260 seconds)
[14:47:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:48:04] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:48:32] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 240 seconds)
[14:48:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:49:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:50:17] *** Quits: stagas (~stagas@2a02:587:c444:9a87:458a:1c12:8f8:bac) (Remote host closed the connection)
[14:50:21] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[14:50:25] <nomagno> pyzozord: Most things are partially a pointer indeed, which is why the idea of prohibiting pointer manipulation as an explicit goal of the language seems unreasonable
[14:50:28] <pyzozord> to be perfectly clear I know how arrays and pointers work in C. I read K&R, I read the c11 specs and I explore disassembly from C program many times
[14:50:35] *** Joins: stagas (~stagas@2a02:587:c444:9a87:f0be:6f90:3456:ac5e)
[14:50:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:51:00] <nomagno> You probably want a "Reference-tracking object" or whatever
[14:51:11] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:51:31] <nomagno> Basically if you return a pointer by value and the object it pointed to got deleted, it changes to NULL or whatever
[14:51:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:52:14] <nomagno> An inverse reference-counting system, if you wish
[14:52:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:53:08] <nomagno> So you just have to handle NULL as a special edge case everywhere, which you could add convenient syntax for
[14:53:12] <pyzozord> no, my idea was really much simpler than that
[14:53:41] <pyzozord> name don't change the memory they are bound to, all memory is on stack
[14:53:53] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[14:54:05] <pyzozord> you cannot address memory directly in the language
[14:54:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:54:18] <nomagno> Then you essentially have to have some kind of masked pointer emulation for arrays to work
[14:54:48] <pyzozord> yes well assembly has pointers, essentially thats how cpus work
[14:54:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:55:01] <pyzozord> they use addresses as part of their instructions
[14:56:12] <pyzozord> also stack implies a stack "pointer"
[14:56:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:56:18] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[14:56:19] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:56:46] <pyzozord> so you gotta try to understand what was intended and not tell me "like talking to a wall", that's not nice
[14:57:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:57:14] <pyzozord> because chat s[100] allocates 100 chars, well duh
[14:57:32] <pyzozord> except s is still _pointing_ to the first element
[14:57:45] <Decker> it's not
[14:57:48] <Decker> it is 100 charactre
[14:58:01] <Decker> there's no pointing anywhere
[14:58:12] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[14:58:16] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:58:37] <pyzozord> s, during compilation is converted to the address of the first element
[14:59:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:59:26] <nomagno> Size data is, indeed, not stored in memory
[14:59:30] <nomagno> Because that would be dumb
[14:59:30] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 260 seconds)
[15:00:23] <pyzozord> I actually don't agree, I actually think storing size data can be useful
[15:00:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:00:34] <pyzozord> but in a completely static language maybe less so
[15:01:04] <mrig> nomagno if you count up the number of things is a jar, why would you not write the count on the jar?
[15:01:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:01:16] <mrig> keep a tally.
[15:02:19] <nomagno> mrig: Did you know the Missigno bug in the original Pokémon games was due to the item tally getting desynced from the actual item count?
[15:02:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:02:39] <nomagno> Intrinsic properties written as extrinsic properties have a very real desync risk
[15:02:56] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[15:03:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:04:08] *** Quits: kranius (~kranius@user/kranius) (Ping timeout: 252 seconds)
[15:04:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:05:06] <xsperry> in C you can't pass pointers by value, unless you wrap them inside a struct. that probably causes some confusion
[15:05:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:05:19] <xsperry> uh
[15:05:25] <nomagno> xsperry: You mean arrays?
[15:05:26] <xsperry> in C you can't pass ARRAYS by value, unless you wrap them inside a struct. that probably causes some confusion
[15:05:28] <mrig> nomagno well if you are using threads and sharing data, you obviously need to be careful.
[15:05:57] <mrig> you could have a bean counter server that tells you how many are in the jar, and only it would keep count.
[15:06:11] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:06:17] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[15:06:29] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[15:06:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:07:14] <nomagno> xsperry: The fact structs nullify the fact arrays aren't first-class citizens is the very reason I am an advocate of standardizing a way of assigning & passing arrays by value, perhaps with a special qualifier so legacy code doesn't break
[15:07:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:08:09] *** Joins: plantman (~plantman@2601:405:4680:1b0::f)
[15:08:18] *** Quits: maxzor (~maxzor@2a01cb04054faa005b93e63135c2d5d3.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[15:08:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:09:20] <pyzozord> I think this says it all https://gcc.godbolt.org/z/Edr5srj84
[15:09:20] *** Joins: omr (~omr@user/omr)
[15:09:21] <bayaz> Title: Compiler Explorer - C (x86-64 clang (trunk)) 
[15:09:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:09:50] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[15:09:51] <pyzozord> zardoz2: ^
[15:10:08] <zardoz2> I said that 30 minutes ago
[15:10:15] <zardoz2> <zardoz2> in C, when you use an array in a value context, it decays to a pointer. 
[15:10:35] <pyzozord> you can call it whatever you want
[15:10:38] <pikapika> C is a very friendly language
[15:10:38] <pyzozord> look at the disassembly
[15:10:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:11:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:11:55] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:12:03] <nomagno> pyzozord: This is proof of essentially nothing. A function call passes a pointer to the first element to the array. This doesn't mean the array IS represented by the pointer
[15:12:13] <nomagno> It's called array decat
[15:12:19] <nomagno> array decay*
[15:12:23] <pyzozord> in c11 standard word "decay" is used exactly once in this sentence "Among other implications, atomic variables shall not decay."
[15:12:37] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 240 seconds)
[15:12:43] <nomagno> pyzozord: The colloquial term is decay.
[15:12:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:13:03] <pyzozord> yeah but then it doesn't really give him any higher ground to talk down to me like that
[15:13:04] <zardoz2> from not caring about C standard, to calling only about terminology used in C standard :)
[15:13:14] <nomagno> When you pass an array to a function, you implicitly pass a pointer to the first element. This is because of backwards compatibility and performance, not because it's necessary
[15:13:37] <pyzozord> zardoz2: well just trying to find a common language with someone like you
[15:13:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:14:07] <pyzozord> zardoz2: and showing you that you didn't have any ground to talk down to me, scientific, moral or factual
[15:14:12] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[15:14:12] <nomagno> You could copy the entire array to the call stack of the function, but it would be inefficient by default
[15:14:14] <zardoz2> I'm afraid we can't find common ground since you aren't backing from your original claim, that arrays are pointers
[15:14:21] <Decker> nomagno if you passed it by value, how do you change elements in the array so others can see it?
[15:14:23] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 268 seconds)
[15:14:27] <pyzozord> I am not backing from that
[15:14:29] <pyzozord> arrays are pointers
[15:14:31] <pyzozord> that's it
[15:14:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:15:01] <pyzozord> just not by the strict C definition of what pointer is, by colloquial definition of "memory address"
[15:15:05] <nomagno> Decker: you don't. You return the array by value, which would too be inefficient by default. It would just be a local variable like all other arguments passed by value
[15:15:10] <zardoz2> and you are still wrong. char *p; char s[100]; print the value of sizeof p and sizeof s
[15:15:30] <Decker> nomagno sounds like a bad plan to me 
[15:15:39] <pyzozord> zardoz2: no I'm not, you intermingle colloquial terms with c11 standard definitions too. So you are wrong too
[15:15:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:15:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:11] <zardoz2> pyzozord, what is the value of sizeof p, and sizeof s? how many bytes will be allocated on stack in the first case, and in the second?
[15:16:17] *** Joins: VVVvvvVVV (~VVVvvvVVV@85.196.179.67)
[15:16:21] <nomagno> Decker: the main advantage is keeping the size of the array without an additional argument, and passing it without risking it being modified
[15:16:26] <nomagno> You can use structs for this already
[15:16:35] <Decker> nomagno and automatic overhead every access checking for range.
[15:16:37] <pyzozord> zardoz2: dude, you really don't seem to get what I am saying
[15:16:38] <nomagno> An array wrapped in a struct can be passed by value
[15:16:45] <zardoz2> pyzozord, if you need further proof how wrong you are, try declaring a global array in one file, and then extern it as a pointer in another file, and see your program crash and burn when the value of an array is being used as a pointer address
[15:16:51] <pyzozord> zardoz2: I am NOT talking about C pointers
[15:17:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:17:09] <nomagno> Decker: I'm not saying this should be the default, I understand the tradeoffs and it is indeed not a good idea
[15:17:20] <nomagno> But I still would like some syntax to do this
[15:17:33] <Decker> struct { int a[100] }
[15:17:37] *** Joins: kish` (~sid742412@user/aqua)
[15:17:46] <nomagno> Decker: that's literally what I said, yes
[15:17:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:17:55] <pyzozord> zardoz2: you are trying to prove me wrong on a thing I didn't mean. I meant something else. You are the wrong one. You are missinterpreting my words and then showing that whatever you interpreted as not correct
[15:17:56] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[15:18:03] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[15:18:03] <Decker> #define checkedAccess(a,n)  ( n < a[-1] )?a[n]:generateError()
[15:18:13] <nomagno> but that's not syntax to do it, it's just that struct assignment is like memcpy ing :P
[15:18:17] *** Joins: kish` (~sid742412@user/aqua)
[15:18:20] <pyzozord> zardoz2: again blue sky, right from the begninng
[15:18:39] <zardoz2> you are wrong on all fronts, period. the resulting assembly code will be different as well depending if you extern the variable as pointer or an array
[15:18:52] <zardoz2> hence why one will work, and other will make your program crash
[15:18:56] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[15:19:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:19:19] <nomagno> Decker: C doesn't have negative indexes, but that works with size of indeed :P
[15:19:26] <Decker> it does
[15:19:36] <nomagno> it does? Since when? Whut
[15:19:40] <nomagno> This is a shock
[15:19:42] <Decker> since K&R1
[15:19:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:20:20] <Decker> base+offst offset can be any int...positive or negative
[15:20:37] *** Quits: VVVvvvVVV (~VVVvvvVVV@85.196.179.67) (Read error: Connection reset by peer)
[15:20:41] <pyzozord> zardoz2: like talking to a wall...
[15:20:50] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[15:20:53] <zardoz2> exactly
[15:20:54] <nomagno> Oh, but I'm not sure accessing the size this way is portable
[15:21:05] <Decker> :) pot calllin the kettle black there zardoz2 eh?
[15:21:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:21:23] <arahael> nomagno: sizeof is defined by the standard.
[15:21:53] <arahael> nomagno: Why wouldn't it be portable?
[15:21:54] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:22:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:22:12] <pyzozord> zardoz2: and this time, I have real foundations to talk down to you
[15:22:12] <nomagno> arahael: I was talking about -1 index, not sizeof
[15:22:13] <Decker> nomagno no - but since you're using special syntax then for your special arrays you can reserve a negative index to keep its length... struct { int size; int a[100]; } doesn't even need the size technicall in the array
[15:22:41] <nomagno> Decker: You can have padding tough
[15:22:46] <nomagno> And then you're in trouble
[15:22:48] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:23:02] <Decker> *shrug* that can be worked around
[15:23:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:23:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[15:23:40] <nomagno> I still think sizeof is better, but not a bad trick :P
[15:23:49] <Decker> sizeof doesnt'w ork for int a[n];
[15:23:51] <zardoz2> pyzozord, if you want to continue this nonsense please join #C, say that arrays and pointers, and the channel will collectively laugh at you 
[15:23:59] <Decker> expecially after it's passed out of the current context
[15:24:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:24:14] <nomagno> Decker: You can't have VLAs inside structs anyways
[15:24:30] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:24:41] <Decker> I can and do.
[15:24:59] <arahael> nomagno: I'm fairly sure that -1 indexes are fine and portable, as so long as teh memory access is valid and belongs to the same type.
[15:25:24] <nomagno> arahael: issue is you can't ensure this inside struct, since you can have arbitrary padding
[15:25:28] <GeDaMo> https://en.wikipedia.org/wiki/Flexible_array_member
[15:25:29] <bayaz> Title: Flexible array member - Wikipedia 
[15:25:31] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:25:32] <nomagno> On specific implementations, sure
[15:25:36] <pyzozord> zardoz2: like talking to a wall... I reapeat I did not mean "pointers" syntax object definied in C standard
[15:25:41] <arahael> nomagno: That's a separate matter.
[15:25:57] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:9996:3caa:8169:8a61) (Ping timeout: 240 seconds)
[15:26:13] <pyzozord> zardoz2: "please join our community where we methorologist where we can laugh at you when you say sky is blue"
[15:26:17] <pyzozord> zardoz2: what absurd
[15:26:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:26:31] <zardoz2> pyzozord, you did not mean C standard. you did not mean resulting machine code. what the fuck did you mean then?
[15:26:33] <nomagno> Wait, does struct { a[n] ) where n is a global variables, change the size of a[] at runtime?
[15:26:34] <nomagno> Doubt it
[15:26:34] <Decker> padding is never 'arbitrary'
[15:26:47] <arahael> zardoz2, pyzozord: Please calm down, both of you!
[15:27:13] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:5bd7:cadf:8543:27d3)
[15:27:18] <nomagno> Decker: An implementation can add different garbage values as padding for different structs, to keep alignment.
[15:27:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:28:00] <pyzozord> I repeat, I meant general concepts
[15:28:03] <nomagno> So while it is not arbitrary, you need underlying compiler and arch knowledge
[15:28:16] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[15:28:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:28:28] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:28:49] <Decker> nothing that can't be gleamed by the code to know what offset is appropriate; but second since it's a struct to keep the array as a passable value type you could just use the .size of it
[15:28:59] <Decker> and not worry if it wasn't in the right place.
[15:29:18] <Decker> but even so if you always accessed with a[-1] it would be somewhere near the size variable, even if it's in the padding and would still work
[15:29:24] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 240 seconds)
[15:29:38] <nomagno> Indeed
[15:29:46] <nomagno> python and bardock seem to be having big argument!
[15:29:47] <nomagno> ... Wait, f you autocorrect
[15:29:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[15:30:03] <zardoz2> pyzozord, you are wrong at the language level, and at the resulting machine code level, and at a general concept level (one stores values, other pointers to them)
[15:30:11] <zardoz2> points to them*
[15:30:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:31:16] *** Quits: plantman (~plantman@2601:405:4680:1b0::f) (Quit: Leaving)
[15:31:23] <nomagno> Decker: well yeah it probably would not result in a segfault, but it would be a very pesky bug :S
[15:32:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:32:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:33:18] <pyzozord> zardoz2: you have proven to me that you misinterpret my words (on prupose or not), your opinion is of no value to me
[15:34:00] <zardoz2> no, I am misinterpreting you right, you just keep moving goal posts. first it was about C, then it was about assembly, and now it is about general concepts
[15:34:11] <zardoz2> fortunately for me, you are wrong in all cases!
[15:34:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:34:17] <arahael> Heh.
[15:34:24] <pyzozord> pfft, well whatever keeps you sleep at night
[15:34:27] <arahael> zardoz2, and pyzozord: Maybe it's best for you two to take a short break. :)
[15:34:38] <pyzozord> yep, sorry about that
[15:34:55] <arahael> np
[15:34:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:35:01] <zardoz2> agreed, no point in continuing this further
[15:36:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:36:36] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[15:36:42] <nomagno> "continuing this further" sounds like a pointer to some code to me tough
[15:36:44] <nomagno> runs
[15:37:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:37:38] *** Joins: mestre (~mestre@191.177.175.57)
[15:37:53] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:38:35] * arahael twacks nomagno with a large trout.
[15:38:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:38:41] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:39:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:40:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:41:00] *** Joins: pulse (~pulse@user/pulse)
[15:41:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:42:02] *** Joins: NEYi (~NEYi@109.251.216.38)
[15:42:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:43:19] *** Quits: omr (~omr@user/omr) (Quit: WeeChat 3.3)
[15:43:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:44:27] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[15:44:29] <Tech_8> sup
[15:44:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:45:09] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[15:45:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:45:46] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[15:45:55] *** Quits: extor (~xtor@192.99.217.240) (Ping timeout: 256 seconds)
[15:45:56] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 252 seconds)
[15:46:13] *** Joins: tewrdh^ (~tewrdh@64.253.22.77)
[15:46:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:46:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:47:28] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[15:47:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:48:16] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[15:48:37] *** Quits: mestre (~mestre@191.177.175.57) (Remote host closed the connection)
[15:48:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:49:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:49:38] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[15:49:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:51:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:51:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:52:02] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[15:52:32] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 252 seconds)
[15:53:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:53:13] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:53:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:54:10] *** Joins: extor (~xtor@192.99.217.240)
[15:54:26] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[15:54:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Ping timeout: 256 seconds)
[15:55:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:55:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:56:51] <mrig> https://www.etymonline.com/word/sup
[15:56:52] <bayaz> Title: sup | Etymology, origin and meaning of sup by etymonline 
[15:56:59] <mrig> :P
[15:57:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[15:57:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:57:27] <bytefire> so someone's been using whatsapp from a sim mobile number that has expired and it can't be revived.
[15:57:43] <pikapika> nomagno, if I pass a local array to a F(int a[]) it isn't remembering the length of the array and is instead also just a dumb pointer
[15:58:03] <bytefire> now she wants to change her mobile but can't can't do confirmation using the sim
[15:58:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:58:35] *** Quits: chomwitt (~chomwitt@ppp-2-85-245-134.home.otenet.gr) (Ping timeout: 252 seconds)
[15:58:56] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[15:58:57] <mrig> https://www.urbandictionary.com/define.php?term=sup Ahh!
[15:58:58] <bayaz> Title: Urban Dictionary: sup 
[15:59:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:00:08] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[16:00:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:00:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:01:19] *** Joins: joe_colben (~joe____co@185.190.112.211)
[16:01:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:02:01] <pyzozord> wow stuff from the new company just arrived
[16:02:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:02:42] <pyzozord> they sent me even a screen. I don't how many inches is that but it's big...
[16:02:57] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:5bd7:cadf:8543:27d3) (Ping timeout: 240 seconds)
[16:03:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:03:55] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:cc0:4c26:7636:4d9e)
[16:04:29] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:04:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:05:39] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:05:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:06:18] *** Joins: Tazy (~Tazmainia@169-1-6-73.ip.airmobile.co.za)
[16:06:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:07:08] <pyzozord> oh no it's a macbook :(
[16:07:09] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:07:52] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:07:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:08:12] <pyzozord> most people would be happy but I truly don't care for macos. I have my setup on ubuntu well geared up
[16:08:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:08:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[16:09:44] <pyzozord> wow and some samsung phone with 5 different lenses on the back
[16:10:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:10:33] *** Joins: swp1 (~Thunderbi@37.203.60.116)
[16:10:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:11:05] <pyzozord> and some badly printed instructions from tech support how to log in to the phone in turkish
[16:11:14] *** Joins: sicelo_ (~sicelo@ip170.ip-141-95-83.eu)
[16:11:14] *** Quits: sicelo_ (~sicelo@ip170.ip-141-95-83.eu) (Changing host)
[16:11:14] *** Joins: sicelo_ (~sicelo@user/sicelo)
[16:11:45] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[16:11:52] <GeDaMo> Maybe this package was meant for someone else? :P
[16:11:59] <nomagno> Update: Just got a new fancy membrane wireless keyboard+touchpad to replace my broken cheap wired keyboard. So far the experience is nice but I have to get used to the smaller layout
[16:12:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:12:24] <nomagno> I can put it on my lap tough!
[16:12:50] <pyzozord> I wish I could just leave this stuff in boxes, but I think they may look at me bad if I don't use it
[16:12:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:13:16] *** Joins: Burgundy (~yomon@79.115.213.171)
[16:13:45] <nomagno> If the MacOS looks at you bad, stare back at is badder
[16:14:17] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[16:14:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:14:46] <deniska> pyzozord: assert dominance, install ubuntu on the macbook
[16:14:46] <pyzozord> oh the screern is not that big, 24", I have now I think 21"
[16:14:56] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:15:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:15:27] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:15:44] <pyzozord> it's tempting to install ubuntu
[16:15:53] <GeDaMo> The Mac's screen is 24"? Or is this a separate screen?
[16:16:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:17:03] <pulse> https://www.youtube.com/watch?v=IgF3OX8nT0w
[16:17:04] <pyzozord> macbook is pro and with the display panel isntead of function keys, forgot what's the name for that, but can't tell what year is it exactly
[16:17:04] <bayaz> Title: The Most Powerful Computers You've Never Heard Of 
[16:17:10] <pyzozord> the screen is separate dell
[16:17:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:17:51] <pyzozord> macbook has instruction thank god those are in english
[16:17:57] <arahael> pyzozord: the latest macs are the fastest you can get, even if you run linux in a vm
[16:18:01] <GeDaMo> Touch bar, apparently
[16:18:22] <pyzozord> ooh, yes! vm is a great idea
[16:18:34] <beaky> nice i like vms
[16:18:40] <arahael> pyzozord: give UTM a go
[16:18:49] <pyzozord> UTM?
[16:18:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:19:04] <arahael> pyzozord: its basically qemu but prettier.
[16:19:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:20:03] *** Quits: Tazy (~Tazmainia@169-1-6-73.ip.airmobile.co.za) (Ping timeout: 256 seconds)
[16:20:14] <arahael> pyzozord: https://mac.getutm.app
[16:20:15] <bayaz> Title: UTM 
[16:20:32] <arahael> anyway now i am truely to bed. modnight for me
[16:20:38] <arahael> midnight
[16:21:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:21:10] <pyzozord> "Under the hood of UTM is QEMU" - sold!
[16:21:41] <pyzozord> arahael: thanks for the suggestions!
[16:21:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:21:52] <Square> midnight now. Impossible
[16:22:17] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[16:22:25] <Square> unless you live in hawaii something
[16:22:34] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 260 seconds)
[16:22:55] <GeDaMo> Australia
[16:23:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[16:23:16] <pyzozord> actually the screen is not big at all
[16:23:29] <pyzozord> apparently I have 24" too, because these are the same size
[16:23:33] *** Joins: jkk (~jkk6@cst-prg-88-195.cust.vodafone.cz)
[16:23:40] <pyzozord> the box made it look much bigger
[16:23:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:23:49] <pyzozord> and it is for sure much heavier than mine
[16:24:50] <pyzozord> oh no the screen isn't that heavy, the carton box is the heavy thing lol
[16:25:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:25:17] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[16:25:54] <pyzozord> but it's nice to be treated seriously but the company, that's good impression, I'll put in the work for them for that
[16:25:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:26:18] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:cc0:4c26:7636:4d9e) (Ping timeout: 260 seconds)
[16:27:08] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:a0e1:b3e2:3952:22f)
[16:27:08] <GeDaMo> https://www.theregister.com/2021/12/22/first_ryugu_asteroid_sample_analyses_published/
[16:27:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:28:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:28:32] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:29:00] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[16:29:07] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:29:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:29:58] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[16:30:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:31:17] *** Quits: jkk (~jkk6@cst-prg-88-195.cust.vodafone.cz) (Ping timeout: 240 seconds)
[16:31:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:32:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:33:45] <smallville7123> why is function parsing/expansion so complicated ;-;
[16:34:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:34:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:35:10] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4)
[16:35:29] *** Joins: Rayke (rayke@user/rayke)
[16:35:39] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:35:44] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[16:35:47] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 268 seconds)
[16:35:59] <pyzozord> what's function expansion
[16:36:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:36:20] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:36:28] <smallville7123> attempting to parse "bar (4 + (2 * x))" with no defines gives me "bar(4 + 2 * x4 + (2 * x))"
[16:36:52] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:36:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:37:21] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[16:37:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[16:37:37] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[16:38:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:39:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:40:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:41:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:42:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:42:57] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[16:43:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:43:47] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:44:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:45:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:46:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:47:15] *** Quits: Kuleshov (Kuleshov@46.138.252.54) (Quit: Leaving)
[16:47:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:48:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:49:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:50:17] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[16:50:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[16:51:25] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:51:38] *** Joins: humky (~humky@user/humky)
[16:51:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:52:26] *** Quits: Bombe (~bombe@freenet/release-manager/Bombe) (Ping timeout: 268 seconds)
[16:52:56] *** Joins: Bombe (~bombe@freenet/release-manager/Bombe)
[16:52:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:53:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:55:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:55:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:57:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:57:51] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 245 seconds)
[16:58:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:58:08] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:59:09] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[16:59:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:59:50] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[17:00:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:00:19] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:01:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:02:21] *** Quits: jiffe (~jiffe@mail.nsab.us) (Quit: WeeChat 2.9)
[17:02:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:03:06] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:03:12] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[17:03:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:04:06] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[17:04:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:04:49] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 256 seconds)
[17:05:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:05:50] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[17:06:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:06:45] *** Quits: _inky (~inky_@141.136.79.122) (Read error: Connection reset by peer)
[17:06:46] *** Quits: inky_ (~inky@141.136.79.122) (Read error: Connection reset by peer)
[17:07:05] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:07:53] <DPA> OMG, I just realized I can set the shell in a makefile to stuff like python!
[17:07:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:08:03] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:08:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:09:21] *** Joins: inky_ (~inky@141.136.79.122)
[17:09:21] <DPA> https://bpa.st/KKJA
[17:09:22] <bayaz> Title: View paste KKJA 
[17:09:42] <swp1> DPA: cool!
[17:10:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:10:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:11:22] <nomagno> pyzozord: Idea for your language: Do support pointers, but do it in a very sneaky way: If the function returns a pointer, implicitly pass it a pointer to an 
[17:11:34] <nomagno> unnamed stack variable in the parent function
[17:11:43] *** Joins: _inky (~inky_@141.136.79.122)
[17:12:16] <nomagno> So, each function only has "retptr" or whatever as memory it can operate on, and it doesn't know it's a pointer, it's just a normal identifier.
[17:12:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:12:31] <nomagno> And it can't do arithmetic with it because you can't use it without dereferencing it
[17:12:45] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[17:12:50] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[17:13:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:13:41] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[17:13:49] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:14:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:15:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:15:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:15:49] *** Joins: operateur (~operateur@91.143.220.230)
[17:16:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:17:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:17:53] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[17:18:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:19:12] <pyzozord>  nomagno: I was thinking about contextual memory pools
[17:19:14] *** Quits: raj (uid72176@user/raj) (Quit: Connection closed for inactivity)
[17:19:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:19:29] <pyzozord> lets say I have function main that allocates array of 100 bytes
[17:19:49] <pyzozord> char poolForStuff[100]
[17:20:30] <pyzozord> later inside main I could do something like [poolForStuff]stuff(foo)
[17:20:41] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:20:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:20:52] <pyzozord> meaning the variable poolForStuff will be accessible under the same name inside stuff()
[17:21:11] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:21:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[17:21:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:21:35] <nomagno> the 'under the same name' part sounds incompatible with a static language
[17:21:51] <pyzozord> how so?
[17:22:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:22:53] <nomagno> Well, stuff() can't possibly change its code dynamically at compile-time to adapt to the name of the memory pool you gave it
[17:23:11] <nomagno> inside the declaration of stuff(), you'd have to have set identifiers like POOL1, POOL2, etc
[17:23:13] <pyzozord> not sure what do you mean
[17:23:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:24:02] <nomagno> int add(int x, int y) {return x + y}
[17:24:07] <pyzozord> no no, you see, I don't care for static /types/, I meant static only in the sense that everything regarding the language is done at compile time
[17:24:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:25:27] <pyzozord> so [pool]stuff(foo) { pool[foo] = 5 }
[17:25:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:25:58] <nomagno> pyzozord: That makes sense
[17:26:13] <nomagno> you implied the name you had to use was the one you specified when calling the function
[17:26:23] <nomagno> at least that's how I understood your phrasing
[17:26:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:27:01] <nomagno> so [pool]stuff(1) would give error if you declared [name]stuff(foo)
[17:27:11] <nomagno> that obviously makes no sense, I read it wrong probably
[17:27:26] <DPA> this kind of reminds me of named arguments  s(b=0,c=1){  }  s(c=4)
[17:27:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:28:02] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[17:28:03] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:28:06] *** Joins: pulse (~pulse@user/pulse)
[17:29:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:29:17] *** Quits: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:eda9:23f5:325d:1e4c) (Ping timeout: 240 seconds)
[17:29:42] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:29:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:29:55] *** Joins: andl (~Administr@60.223.245.116)
[17:31:11] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:31:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:32:18] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[17:32:22] <ProfSimm> Static language doesn't mean you can't have mapping or aliasing and so on.
[17:33:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:33:42] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:34:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:34:48] *** Joins: k60[m] (~k60fmapme@2001:470:69fc:105::1:5597)
[17:34:51] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:35:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:35:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:35:44] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:35:59] <smallville7123> yay it expands correctly now :)
[17:36:01] <smallville7123> (at least for https://godbolt.org/z/oPbs1qdqK )
[17:36:02] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[17:36:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:37:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[17:37:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:38:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:38:20] *** Quits: zardoz2 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[17:39:00] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[17:39:00] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:39:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:40:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:41:12] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[17:41:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:42:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:43:43] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[17:43:59] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[17:44:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:44:44] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 252 seconds)
[17:44:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:44:49] *** Joins: Kuleshov (~Kuleshov@46.138.252.54)
[17:45:07] <smallville7123> oof it fails "#undef foo // foo \n undef foo undef"   ->     "#undef foo undef foo undef"
[17:45:19] *** k60[m] is now known as k60
[17:45:28] *** Quits: Kuleshov (~Kuleshov@46.138.252.54) (Client Quit)
[17:46:05] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 268 seconds)
[17:46:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:46:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:46:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:47:53] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 256 seconds)
[17:47:53] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[17:48:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:49:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:50:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:50:37] <pyzozord> might have lost some log, my wifi was calibrating
[17:50:47] <pyzozord> and it was the perfect moment, during my last meeting in my old company
[17:50:53] <pyzozord> I didn't even get to say goodbye
[17:51:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 268 seconds)
[17:51:23] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:51:38] *** Joins: breavyn_ (~breavyn@user/breavyn)
[17:52:36] *** Quits: breavyn (~breavyn@user/breavyn) (Ping timeout: 240 seconds)
[17:52:47] *** Joins: Kuleshov (~Kuleshov@46.138.252.54)
[17:53:24] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[17:54:45] *** Quits: sicelo_ (~sicelo@user/sicelo) (Quit: Bye!)
[17:57:34] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:58:00] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[17:58:10] <ProfSimm> I have this hint of an idea that it makes no sense to declare both the value and the type of a variable. It's a false dichotomy. Either is a variable a specific value (so you can't change it, like in FP), or you declare it abstractly and then can concretize.
[17:58:14] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 260 seconds)
[17:58:21] <ProfSimm> Not sure if that makes sense, but has anyone seen a language like this.
[17:58:47] <ProfSimm> Basically I can declare "foo = 5" and then it's immutably 5. But if I declare "foo = int" then i can assign any int to it
[17:59:04] <ProfSimm> Where declaration and assignment are two distinct operations
[17:59:11] *** Quits: ShockTohp (~kevin@155.138.224.160) (Remote host closed the connection)
[18:00:29] *** Joins: Pook (~Pook@2001:8a0:f996:1400:5482:cf6f:d76d:ddb5)
[18:01:08] <nomagno> pyzozord: I would probably go insane if that happe
[18:01:10] <nomagno> .ned
[18:01:44] <nomagno> Hope you didn't have anything else to talk through
[18:01:44] *** Joins: sicelo_ (~sicelo@ip170.ip-141-95-83.eu)
[18:01:44] *** Quits: sicelo_ (~sicelo@ip170.ip-141-95-83.eu) (Changing host)
[18:01:44] *** Joins: sicelo_ (~sicelo@user/sicelo)
[18:02:04] <beaky> i like arrays
[18:02:04] *** Joins: ShockTohp (~kevin@155.138.224.160)
[18:02:09] <beaky> i use arrays in advent of code
[18:02:27] <nomagno> beaky: Hey, me too!
[18:02:28] <nomagno> I like arrays
[18:02:40] <beaky> ;2;13~;2;13~;2;13~;2;13~;2;13~;2;13~;2;13~;2;13~;2;13~;2;13~;2;13~
[18:02:41] <nomagno> I use them for... stuff, sometimes!
[18:02:42] <nomagno> A lot of stuff sometimes, not a lot of stuff other times
[18:02:45] <beaky> oops typo
[18:03:52] <mrig> ProfSimm this is why variables are variable and constants are constant :)
[18:04:11] <nomagno> ProfSimm: That's really just one interpretation of how that syntax should work. In many languages, you are simply initializing it to a specific value. You use constants for constants
[18:04:34] <ProfSimm> They're not constants. They're variables both way.
[18:04:37] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:04:49] <ProfSimm> Just one can vary in a set, the other is a specific item in the set
[18:04:59] <mobidrop> what if you want to capture a type in a variable, like int_type = Int;
[18:05:22] <ProfSimm> This isn't like compile time constants. Also folks, I know how things are, I'm saying how they may be different, so we reduce concepts.
[18:05:37] <mobidrop> actually Rust has a great solution to this: you can declare variables mutable with the mut modifier
[18:05:41] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:05:43] <ProfSimm> Instead of having "variable type, constant type, variable, constant, immutable variable, mutable variable" we just have one thing: variable
[18:05:50] <mobidrop> let mut a = 10; a += 1; // ok
[18:05:58] <mobidrop> let a = 10; a += 1; // error!
[18:06:04] <nomagno> ProfSimm: I believe Coq does something like this
[18:06:15] <ProfSimm> Do you know what's better than having a "mut" modifier? Having no such modifier ;-)
[18:06:29] <nomagno> but Coq is a DSL for theorem proving, not a regular programming language
[18:06:31] <ProfSimm> But still being able to express the same idea
[18:06:38] <mobidrop> a = int; // makes no sense lmao
[18:06:46] <nomagno> Your interpretation is valid, but I think it is inconvenient
[18:06:49] <ProfSimm> mobidrop: sure but what if it made sense.
[18:06:52] <nomagno> For most languages, anyways
[18:07:01] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[18:07:02] <ProfSimm> nomagno: I'll check Coq, thanks
[18:07:07] <mobidrop> a = int; a = 10; a = 5; // ok?
[18:07:15] <ProfSimm> nomagno: well I wanna figure out a way to make it convenient
[18:07:17] <mobidrop> a = 10; a = 5; // error because first it was a constant? wtf?
[18:07:34] <nomagno> ProfSimm: Most lazy languages actually do something similar tyoo
[18:07:47] <nomagno> in Haskell, for instance, you can assign all real numbers to a variable
[18:08:01] <nomagno> Declarative AND lazy allows you to do crazy stuff like this
[18:08:02] <ProfSimm> mobidrop: declaration and assignment are distinct. Let's say "foo: 5" is declaration and "foo = 5" is assignment.
[18:08:21] <ProfSimm> mobidrop:  "foo: int; foo = 5" OK   "foo: 5" OK, but immutable   "foo: 5; foo = 6" error
[18:08:51] <nomagno> ProfSimm: But would foo: int be initialized or not?
[18:09:22] <nomagno> Would it be all integers from -infinity to +infinity, or garbage/invalid?
[18:09:23] <mobidrop> ProfSimm, what if I want a float to hold the value of 5? foo:float = 5 ?
[18:09:28] <ProfSimm> nomagno: it's like quantum mechanics. It's initialized but it's in superposition. ;-) It's all ints at once. In other words - it's abstract. And you can't use it in an expression that needs non-abstract value.
[18:09:30] <nomagno> if you just leave it at foo:int
[18:09:36] <ProfSimm> nomagno: but you can do type algrebra with it
[18:10:19] <pyzozord> nomagno: I feel a bit embarrased to be honest, I didn't want to have my last meeting without saying goodbye, but other than this it's ok
[18:10:20] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:10:26] <ProfSimm> mobidrop: the literal 5 should be able to be used as both a float and an int I think. I mean 5 is 5.
[18:10:27] <mobidrop> I don't think 1 mut modifier is that cumbersome
[18:10:28] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8d2e:f3d0:6819:bd6c) (Read error: Connection reset by peer)
[18:10:58] <nomagno> Right, so you declare a variable to be able to hold any value in a pre-defined set
[18:11:07] <ProfSimm> mobidrop: it's not that it's cumbersome, it's that it adds up. I wanna reduce and simplify
[18:11:13] <nomagno> Doesn't sound like a bad idea, actually
[18:12:02] <nomagno> set int: {-inf .. -1 .. 0 .. 1 .. +inf}
[18:12:04] <beaky> yes this is what they do in coq where you have overloadable literals
[18:12:30] <smallville7123> and i accidentally put the "<< '\n'" inside of a if statement
[18:12:31] <beaky> 5 as the peano natural numbers 5, 5 as the binary number 5, 5 the integer, 5 the fraction 5/1, ...
[18:13:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 268 seconds)
[18:13:31] <beaky> haskell too i think
[18:13:44] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:14:06] *** Quits: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[18:14:19] <ProfSimm> Haskell when you set something to 5, it types it "number" until it's used somewhere, but in some cases the type "collapses" earlier.
[18:14:34] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:14:52] <nomagno> Natural, Integer, Rational, Real, Imaginary, Transcendental-Computable, Transcendental
[18:14:59] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[18:15:10] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:15:20] <ProfSimm> Ideally when I have a float that's an integer value then it's also in the set of integers.
[18:15:28] *** Joins: brabrax (~brabrax@user/brabrax)
[18:15:34] <nomagno> Then you use a basic syntax to define things like representations, bases, more complex data structures...
[18:15:34] <ProfSimm> Such non-hierarchical and dependently typed relationships exist in the world.
[18:15:50] *** Quits: ShockTohp (~kevin@155.138.224.160) (Read error: Connection reset by peer)
[18:15:50] <nomagno> Make it easily pre-processable, and make the language have a powerful preprocessor
[18:15:51] <nomagno> and you're good to go
[18:15:54] <mobidrop> mut also applies to more complex data structures besides literals
[18:16:07] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[18:16:17] <nomagno> Well I'd guess so
[18:16:40] <nomagno> You can have a mut data structure with constant members
[18:16:52] <nomagno> but not the way around
[18:17:21] <ProfSimm> I never heard of Coq, it seems like it's a visual language of some sort? Is there a source you type or...?
[18:17:23] <nomagno> You know, we might just be describing some Scheme representation and not realizing...
[18:17:33] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Read error: Connection reset by peer)
[18:18:05] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[18:18:43] *** Joins: ShockTohp (~kevin@155.138.224.160)
[18:18:57] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[18:19:31] *** Quits: Kuleshov (~Kuleshov@46.138.252.54) (Quit: Leaving)
[18:19:41] <mobidrop> there's nothing at this level of language design that hasn't been thought of already
[18:20:21] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:20:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:20:37] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[18:20:39] <ProfSimm> mobidrop: oh I'm sure.
[18:20:59] <ProfSimm> mobidrop: but the trick isn't inventing new things. It's taking things away, without losing capability
[18:21:15] <ProfSimm> mobidrop: basically I'm trying to uninvent accidental complexity
[18:21:32] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[18:21:46] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:21:47] <ProfSimm> I want a language with very low entropy
[18:21:56] <ProfSimm> If possible.
[18:22:00] <mobidrop> strip it down to the essentials
[18:22:05] <ProfSimm> Yeah
[18:22:16] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:22:35] *** Joins: mishugana (~mishugana@user/mishugana)
[18:22:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:22:47] *** Joins: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[18:22:52] *** Joins: peteyboy_ (~peteyboy1@95.169.232.161)
[18:22:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[18:23:07] *** Quits: ShockTohp (~kevin@155.138.224.160) (Read error: Connection reset by peer)
[18:24:44] <smallville7123> oof it does everything correctly (with couple of extra spacing/newlines) except for      gcc "(4 + (2 * x)) A (4 + (2 * x))()"     mine "(4 + (2 * (4 + (2 * x)))) A(4 + (2 * x))()"
[18:24:51] <smallville7123> which is from https://godbolt.org/z/EvbGb7nd5
[18:24:52] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[18:25:11] <smallville7123> my implementation returns (4 + (2 * (4 + (2 * x)))) A(4 + (2 * x))()
[18:25:32] <smallville7123> and gcc returns "(4 + (2 * x)) A (4 + (2 * x))()
[18:26:10] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 268 seconds)
[18:27:03] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[18:28:08] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[18:28:16] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Read error: Connection reset by peer)
[18:28:17] *** Quits: peteyboy_ (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[18:28:17] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:28:26] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[18:28:35] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:29:00] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[18:32:12] <smallville7123> andd my problem is incorrectly expanding this function-macro "#define foo(bar) bar \n foo(bar)"
[18:34:37] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:a0e1:b3e2:3952:22f) (Ping timeout: 240 seconds)
[18:35:05] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[18:35:25] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:35:53] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:36:18] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:37:39] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[18:37:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:38:40] *** Joins: Stalevar (~stalevar@user/stalevar)
[18:39:59] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:a0e1:b3e2:3952:22f)
[18:41:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[18:41:44] *** Joins: ShockTohp (~kevin@155.138.224.160)
[18:43:25] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[18:44:19] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:45:59] *** Joins: omr (~omr@user/omr)
[18:46:18] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Remote host closed the connection)
[18:46:21] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[18:46:41] *** Joins: rsx (~dummy@ppp-188-174-150-178.dynamic.mnet-online.de)
[18:46:54] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:49:37] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[18:49:47] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[18:51:05] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:51:21] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[18:51:41] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:52:03] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[18:58:43] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[18:58:55] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[18:59:00] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[18:59:56] *** Quits: sicelo_ (~sicelo@user/sicelo) (Quit: Bye!)
[19:01:30] *** Joins: jinsun (~quassel@user/jinsun)
[19:01:42] *** Joins: sicelo_ (~sicelo@user/sicelo)
[19:02:29] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[19:06:32] *** Joins: mrig (~mrig@user/mrig)
[19:06:52] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[19:07:20] *** Joins: evocatus (~evocatus@62.182.78.42)
[19:07:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[19:10:37] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 240 seconds)
[19:14:16] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 268 seconds)
[19:14:47] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[19:15:47] <smallville7123> function-like macro expansion is confusing :( https://godbolt.org/z/WzfxP3dvM    y should not be expanded since it was already expanded, right?
[19:15:48] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[19:15:48] <smallville7123> "If the name of the macro being replaced is found during this scan of the replacement list (not including the rest of the source file’s preprocessing tokens), it is not replaced. Furthermore, if any nested replacements encounter the name of the macro being replaced, it is not replaced. These nonreplaced macro name preprocessing tokens are no longer available for further replacement even if they are l
[19:15:48] <smallville7123> ater (re)examined in contexts in which that macro name preprocessing token would otherwise have been replaced."
[19:16:53] <nomagno> Just finished a nice refomatting of all documentation for my project!
[19:17:08] <nomagno> I had a horrible markdown style, even I have to admit it was unreadable until now
[19:18:45] *** Quits: rsx (~dummy@ppp-188-174-150-178.dynamic.mnet-online.de) (Quit: rsx)
[19:20:29] *** Joins: Gentpup (~Gentpup@217.75.212.43)
[19:21:55] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:21:58] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[19:22:33] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[19:22:49] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[19:23:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[19:23:59] *** Joins: zaher (~zaher@37.48.156.223)
[19:28:10] *** Joins: Satin (uid193953@user/Seten)
[19:29:19] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[19:30:13] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[19:32:55] *** Joins: Noni (zet@kapsi.fi)
[19:34:27] *** Quits: sicelo_ (~sicelo@user/sicelo) (Quit: Bye!)
[19:34:38] *** Quits: rcoote (~rcoote@2a02:908:69a:58a0:f495:f600:84e1:3ace) (Ping timeout: 268 seconds)
[19:34:41] *** RazielZ is now known as Raziel
[19:36:11] *** Joins: sicelo_ (~sicelo@ip170.ip-141-95-83.eu)
[19:36:11] *** Quits: sicelo_ (~sicelo@ip170.ip-141-95-83.eu) (Changing host)
[19:36:11] *** Joins: sicelo_ (~sicelo@user/sicelo)
[19:38:14] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[19:39:17] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[19:39:19] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[19:39:45] *** Quits: sicelo_ (~sicelo@user/sicelo) (Client Quit)
[19:41:41] *** Quits: omr (~omr@user/omr) (Quit: WeeChat 3.3)
[19:42:32] *** Joins: sicelo_ (~sicelo@user/sicelo)
[19:44:20] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[19:45:44] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 268 seconds)
[19:45:54] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:46:11] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[19:46:20] *** Joins: zaher_ (~zaher@37.48.146.218)
[19:48:35] *** Quits: zaher (~zaher@37.48.156.223) (Ping timeout: 256 seconds)
[19:51:40] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[19:52:10] *** Joins: terminalpusher (~terminalp@2a01:586:968a:1:cebf:9757:2259:bf12)
[19:52:52] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:742b:2fdf:614c:6394) (Quit: fe23)
[19:54:04] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[19:54:37] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[19:54:59] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 250 seconds)
[19:55:01] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:55:37] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 240 seconds)
[19:56:12] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-2893-5a12-7df9-5067.res6.spectrum.com)
[19:57:51] *** Joins: jdo22 (~jdo22@2a09:bac0:202::811:ce3b)
[19:58:03] <jdo22> sup guys
[19:58:18] <jdo22> how do i write custom firmware for a landline telephone
[19:58:26] <jdo22> i have a spare one with mr
[19:58:29] <jdo22> *me
[19:58:45] <apotheon> That's an interesting question, and . . . I dunno.
[19:58:49] *** Quits: UsbSick (~UsbSick@2600:6c48:757f:e654:217f:9d34:6545:b1a6) (Read error: Connection reset by peer)
[19:58:56] <jdo22> btw where can i get the logs of this channel?
[19:59:23] <apotheon> As far as I'm aware, this channel doesn't have public logs.
[20:00:09] *** Quits: jdo22 (~jdo22@2a09:bac0:202::811:ce3b) (Client Quit)
[20:00:22] *** Joins: jdo22 (~jdo22@2a09:bac0:202::811:ce3b)
[20:00:37] <GeDaMo> If the landline telephone is old enough, it might not have firmware :P
[20:00:40] <jdo22> btw where can i get the logs of this channel?
[20:00:53] <GeDaMo> There are no public logs for this channel
[20:00:57] <jdo22> GeDaMo: its like 5-10 years old
[20:01:12] <jdo22> there's got to be a processor on it right?
[20:01:37] <GeDaMo> Probably
[20:01:45] *** Quits: geeknix (~pi@2001:e68:5432:c000:3795:5c40:487:1d37) (Ping timeout: 268 seconds)
[20:01:46] <apotheon> As far as I'm aware, this channel doesn't have public logs.
[20:01:55] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[20:01:59] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:02:25] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:02:30] <edgar-rft> nobody wants to read all that shit again :-)
[20:02:38] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:02:55] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:02:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[20:03:03] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:03:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:03:07] <GeDaMo> jdo22: you could open it up and see if you can identify the processor
[20:03:20] <jdo22> yes i could try
[20:03:38] *** Quits: evocatus (~evocatus@62.182.78.42) (Quit: Leaving)
[20:03:45] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:03:53] <GeDaMo> Maybe ask in ##electronics or #arduino
[20:04:01] <jdo22> right good idea
[20:04:05] <jdo22> thanks GeDaMo 
[20:04:08] <GeDaMo> :)
[20:04:32] <GeDaMo> You can search channel names with /msg alis list *pattern* -min 10 or channel topics with /msg alis list * -topic *pattern* -min 10
[20:04:34] <Stefan26> it's immoral to put local logs from a irc channel into a public place right? 
[20:04:47] <Stefan26> (I wouldnt)
[20:04:54] <GeDaMo> It's against channel rules
[20:05:02] <GeDaMo> Some channels have public logging
[20:05:15] *** Joins: sonny (~sonny@8.6.144.252)
[20:05:41] <jdo22> why would it be immoral/against rules? (irc noob here)
[20:05:45] <Stefan26> yes, so if you do it, you get banned from channel, but i suppose it's not illegal? but i wouldnt do it cause it's immoral also (breaking channel rules usually is)
[20:06:53] <GeDaMo> Some people don't like their conversations being broadcast outside IRC, turning up in web searches and the like
[20:08:16] *** Quits: jdo22 (~jdo22@2a09:bac0:202::811:ce3b) (Quit: WeeChat 3.0.1)
[20:09:03] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[20:09:14] <edgar-rft> too many rain forests were alreay logged, so you're forced to continue logging secretly
[20:10:00] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[20:10:34] * [itchyjunk] doesn't log irc to save rainforests
[20:11:15] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[20:11:42] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:12:31] *** Joins: Kuleshov (Kuleshov@46.138.252.54)
[20:14:56] *** Joins: geeknix (~pi@2001:e68:5432:307:f6b7:9845:4bce:2869)
[20:15:56] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[20:16:14] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[20:16:43] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Remote host closed the connection)
[20:16:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:16:51] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 250 seconds)
[20:17:19] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[20:17:51] *** Joins: anovick (~anovick@2a0d:6fc0:1cdb:8400::34d)
[20:17:57] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:18:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[20:18:58] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:a0e1:b3e2:3952:22f) (Remote host closed the connection)
[20:18:58] *** Quits: Kuleshov (Kuleshov@46.138.252.54) (Quit: Leaving)
[20:19:15] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:1cc4:2a6e:2e3f:d394)
[20:19:57] *** Quits: swp1 (~Thunderbi@37.203.60.116) (Ping timeout: 240 seconds)
[20:20:14] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Changing host)
[20:20:14] *** Joins: kranius (~kranius@user/kranius)
[20:22:22] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[20:22:37] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:696e:b539:8d3d:b56f)
[20:22:57] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[20:24:34] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[20:25:47] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[20:25:53] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[20:26:02] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[20:26:03] *** Joins: absc (~absc@81.31.144.28)
[20:26:17] *** Quits: absc (~absc@81.31.144.28) (Client Quit)
[20:26:57] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[20:27:50] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[20:28:13] *** Joins: UsbSick (~UsbSick@2600:6c48:757f:e654:a863:efc5:fd1:1de4)
[20:31:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[20:31:40] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:31:48] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[20:32:57] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[20:33:08] *** Joins: Bocaneri (~sauvin@about/linux/staff/sauvin)
[20:33:19] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:33:49] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:1cc4:2a6e:2e3f:d394) (Ping timeout: 268 seconds)
[20:34:01] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:34:37] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:84df:602d:a0a9:8535)
[20:34:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[20:36:10] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[20:36:17] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[20:36:17] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 268 seconds)
[20:37:15] <[itchyjunk]> https://singularityhub.com/2021/12/20/biggers-not-always-better-deepminds-new-language-ai-is-small-but-mighty/
[20:37:16] <bayaz> Title: DeepMind's New AI With a Memory Outperforms Algorithms 25 Times Its Size 
[20:37:33] *** Joins: magla (~gelignite@55d41339.access.ecotel.net)
[20:39:13] *** Quits: Gentpup (~Gentpup@217.75.212.43) (Quit: Leaving)
[20:39:35] *** Quits: Bocaneri (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[20:41:11] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:42:47] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[20:42:59] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[20:45:16] <sonny> alorithms is what we call ML now right?
[20:47:36] <[itchyjunk]> no?
[20:49:18] <edgar-rft> I think Money Laundring is something different.
[20:50:34] <edgar-rft> Monica Lewinsky will disagree with you.
[20:50:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:50:39] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:51:08] <[itchyjunk]> Depending on how you define ML and algorithms, i suppose you could say ML uses algo's to optimize some loss function?
[20:51:37] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[20:52:10] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:f044:3442:7a5a:a88)
[20:52:28] <sonny> [itchyjunk] I mean in "jargon"
[20:52:37] <sonny> or buzz words
[20:52:38] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[20:52:56] <pyzozord> just realized I need to talk less about personal stuff
[20:52:58] <[itchyjunk]> you use jargon and buzz words interchangably?
[20:53:09] *** Joins: Auron (~Auron956@user/auron)
[20:53:13] <jelly> algorithms have "size"?
[20:53:15] <[itchyjunk]> pyzozord, google disagrees with you
[20:53:27] <[itchyjunk]> sure, you can define a size for algorithms
[20:53:33] *** Joins: analognoise1 (~analognoi@ip98-176-154-48.sd.sd.cox.net)
[20:53:34] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:53:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[20:53:40] <pyzozord> oh I'm sure the do disagree, facebook too :D
[20:53:47] <jelly> "maximum 40k pseudocode"
[20:54:10] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[20:54:37] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Remote host closed the connection)
[20:54:49] *** Joins: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de)
[20:54:56] *** Quits: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de) (Client Quit)
[20:55:06] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[20:57:19] *** Joins: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:d1de:c6fe:15c:7374)
[20:57:43] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[20:57:53] *** Quits: analognoise (~analognoi@185.202.221.238) (Ping timeout: 268 seconds)
[20:58:25] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:58:29] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:58:39] <pyzozord> first time I actually put a tape over front facing camera
[20:58:40] *** Joins: analognoise (~analognoi@91.196.220.236)
[20:59:11] <pyzozord> since the phone doesn't even bother to pretend it doesn't have spyware installed, it literally advertises as "android secured by knox" or something during the bootload
[20:59:44] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Ping timeout: 268 seconds)
[21:00:15] <pyzozord> on the other hand nice of them to actually be honest upfront
[21:00:27] <sonny> Is a mobile os profitable or is it difficult to make?
[21:00:40] <edgar-rft> your phone had been hijacked, it's absolutely secure now!
[21:01:13] <pyzozord> don't think oses are profitable market in general, unless you are an international megacorp
[21:01:33] <pyzozord> well not true, I think linux do make money somehow
[21:02:15] *** Quits: analognoise1 (~analognoi@ip98-176-154-48.sd.sd.cox.net) (Ping timeout: 256 seconds)
[21:03:25] <sonny> I see
[21:03:40] <sonny> maybe that's why some companies are going to service oriented stuff
[21:03:45] *** Joins: emf (~emf@2620:10d:c091:480::1:44aa)
[21:04:08] *** Joins: Akuli (~Akuli@82-203-162-28.bb.dnainternet.fi)
[21:04:41] <sonny> also means OSes get tradgedy of the commons treatment
[21:05:04] *** Quits: Akuli (~Akuli@82-203-162-28.bb.dnainternet.fi) (Client Quit)
[21:05:29] *** Joins: Akuli (~Akuli@82-203-162-28.bb.dnainternet.fi)
[21:05:54] <sonny> only way I could see entering this market is by securing a hardware deal
[21:06:09] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[21:08:03] <sonny> state of the art OS could take 5 years or less, it won't have any hardware support though :P
[21:09:03] *** Joins: premultiplied (~premultip@69-84-3-189.mxu.aerioconnect.net)
[21:09:20] <sonny> mobile has everyone in a bind, can't think of anything else
[21:09:52] <deniska> sonny: microsoft failed 2-3 times making a mobile OS
[21:10:10] <sonny> is google impervious to antitrust since they use linux?
[21:10:19] *** Joins: emf_ (~emf@2620:10d:c091:480::1:44aa)
[21:10:27] <sonny> deniska: yeah they kept trying to use windows for some reason
[21:10:27] <GeDaMo> Google are developing another OS, Fuschia
[21:10:33] <sonny> ah neat
[21:10:44] <GeDaMo> https://en.wikipedia.org/wiki/Fuchsia_(operating_system)
[21:10:44] <bayaz> Title: Fuchsia (operating system) - Wikipedia 
[21:11:03] <deniska> sonny: iOS is a thing, so android is technically not a monopoly
[21:11:44] <sonny> deniska that too, but I wondered if the opensource part means they have less argument
[21:11:57] *** Quits: emf (~emf@2620:10d:c091:480::1:44aa) (Ping timeout: 240 seconds)
[21:12:36] <sonny> GeDaMo heh my timeline was somewhat correct, that's basically 6 years :P
[21:13:00] <deniska> sonny: and antitrust is sleeping lately. Back in a day it was harsh to microsoft for bundling IE with windows
[21:13:16] <sonny> windows failure in mobile gave us win10
[21:13:20] <deniska> nowadays it's "oh, appstore? That's fine" :)
[21:13:38] <sonny> is it, some companies seem to be getting into lawsuits with apple
[21:14:08] <sonny> app store monoply is bonkers though
[21:14:11] *** zaher_ is now known as zaher
[21:14:28] <deniska> sonny: yeah, but so far they only achieved lower fees, not the official ability to sideload, or use browser engines which are not Safari, or using your own JIT
[21:15:18] <sonny> quick, someone make a hw startup!
[21:15:36] <sonny> deniska what a pain
[21:15:55] <nomagno> Is rebasing my repository a good idea if I think previous commits are actually a bad look for the project?
[21:16:06] <sonny> I'm guessing a lot of folks don't want to port code either
[21:16:42] <sonny> nomagno seems like you are the main contributer so it doesn't matter
[21:16:55] <nomagno> Only*
[21:17:04] <nomagno> But yeah
[21:17:12] <sonny> you call the shots then
[21:18:03] *** Joins: rtypo (~alex@user/rtypo)
[21:18:12] <sonny> GeDaMo they ui part is dart?
[21:19:06] <sonny> anyways, nice to see a new OS and it's open source
[21:19:07] <GeDaMo> Ah, is it?
[21:19:18] <sonny> seems so from the article
[21:19:57] <sonny> pre open source would've been maddening not to be able to just look at the code
[21:20:49] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:20:49] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[21:21:13] *** Joins: novns (~novns@user/novns)
[21:21:55] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[21:23:08] *** Joins: src (~src@user/src)
[21:23:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[21:23:50] *** Joins: Akiva (~Akiva@user/Akiva)
[21:24:37] *** Quits: emf_ (~emf@2620:10d:c091:480::1:44aa) (Ping timeout: 240 seconds)
[21:25:44] *** Joins: maxzor (~maxzor@laubervilliers-657-1-67-14.w90-63.abo.wanadoo.fr)
[21:26:47] <andl>  is there any os thats different from the present 
[21:28:03] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:28:55] <GeDaMo> You should ask that in #osdev :P
[21:29:38] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 260 seconds)
[21:29:52] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[21:29:53] <apotheon> I don't even know what that question means.
[21:29:54] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[21:30:10] <apotheon> I assume it's a question, despite lack of question mark.
[21:31:09] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[21:33:36] *** Joins: emf (~emf@2620:10d:c091:480::1:44aa)
[21:34:05] <KillerWasp> who want this shit of world??? the world is disposable!!!
[21:34:52] *** Quits: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[21:36:01] <mrig> KillerWasp: spoken like a fine cancer cell.
[21:36:42] <mrig> The world is a beautiful place, please look after it :)
[21:36:54] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[21:37:40] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[21:38:28] <sonny> delete world;
[21:39:04] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[21:39:08] *** Quits: grumb (~grumb@rint.osaka) (Quit: The Lounge - https://thelounge.chat)
[21:39:19] *** Joins: grumb (~grumb@rint.osaka)
[21:41:18] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[21:41:20] <KillerWasp> mrig: That can be fixed by polluting and destroying it. ;)
[21:42:28] *** Joins: analognoise1 (~analognoi@2600:8801:8c26:9e00:9810:dcc2:3d73:bd7a)
[21:43:02] *** Quits: maxzor (~maxzor@laubervilliers-657-1-67-14.w90-63.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[21:43:55] <mrig> KillerWasp: Did you ever consider that you might be underestimating the power of nature? :P
[21:44:02] <smallville7123> if a function-like macro is expanded, is only the top level parameter not expanded further?
[21:44:06] <smallville7123> eg in "foo(x)", "x" is not further expanded, but "y" is even though "x" expands to "y" which expands to "x"
[21:44:12] <smallville7123> (only way i can think of that yeilds "y 1 2 y 1 2" in "#define foo(x) x y \n foo(y)")
[21:44:21] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[21:45:45] *** Quits: Intelo (~Intelo@88.244.89.107) (Ping timeout: 256 seconds)
[21:46:07] *** Quits: analognoise (~analognoi@91.196.220.236) (Ping timeout: 250 seconds)
[21:47:34] *** Joins: analognoise (~analognoi@23.105.41.153)
[21:48:57] <Decker> smallville7123 it continues expanding until there is a symbol that is already being expanded used.... like if there's an x, and it's substituted eventually for an x , that x can't expand while x is expanding... only the tokens after it
[21:49:43] <Decker> like while evaluating #define's mark them 'in use' and if you try to expand one that is 'in use' instead just result with the token
[21:49:44] *** Quits: grumb (~grumb@rint.osaka) (Quit: The Lounge - https://thelounge.chat)
[21:49:53] *** Joins: grumb (~grumb@rint.osaka)
[21:50:57] *** Quits: analognoise1 (~analognoi@2600:8801:8c26:9e00:9810:dcc2:3d73:bd7a) (Ping timeout: 240 seconds)
[21:53:17] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:54:29] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[21:55:17] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[21:56:27] *** Quits: kranius (~kranius@user/kranius) (Ping timeout: 268 seconds)
[21:57:17] *** Quits: emf (~emf@2620:10d:c091:480::1:44aa) (Ping timeout: 240 seconds)
[21:59:33] *** Quits: sicelo_ (~sicelo@user/sicelo) (Quit: Bye!)
[21:59:50] *** Joins: beencubed (~beencubed@209.131.238.248)
[21:59:57] <smallville7123> Decker: i know
[22:00:05] <smallville7123> i meant like
[22:00:44] *** Quits: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net) (Remote host closed the connection)
[22:01:16] *** Joins: andyandyandy (~andyandya@c-73-240-237-212.hsd1.or.comcast.net)
[22:01:19] *** Joins: sicelo_ (~sicelo@ip170.ip-141-95-83.eu)
[22:01:19] *** Quits: sicelo_ (~sicelo@ip170.ip-141-95-83.eu) (Changing host)
[22:01:19] *** Joins: sicelo_ (~sicelo@user/sicelo)
[22:02:49] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[22:03:49] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[22:03:49] *** Quits: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[22:04:07] <smallville7123> foo(y) -> expand "y" to "x 2", expand "x 2" to "y 1 2"  -> "y" is not expanded further -> foo(y 1 2) -> expand "x y" to "y 1 2 y" -> "y" is not expanded further as it is the original parameter before expansion -> how is "y 1 2 y" then expanded to get "y 1 2 y 1 2" ?
[22:04:28] <smallville7123> eg https://godbolt.org/z/bxzjGEErW
[22:04:30] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[22:05:13] *** Joins: maxzor (~maxzor@laubervilliers-657-1-67-14.w90-63.abo.wanadoo.fr)
[22:05:26] *** Quits: anovick (~anovick@2a0d:6fc0:1cdb:8400::34d) (Ping timeout: 252 seconds)
[22:05:28] <smallville7123> Decker: 
[22:05:32] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[22:05:32] *** Joins: emf (~emf@2620:10d:c091:480::1:44aa)
[22:06:12] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:06:13] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[22:06:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[22:06:54] <Decker> the second y is the token after... smallville7123 and y is not being used at that point
[22:06:57] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 240 seconds)
[22:07:01] <Decker> so the second y is subutited y 1 2
[22:07:27] <smallville7123> i dont get how
[22:07:45] <Decker> O dpmt
[22:07:46] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[22:07:52] *** Joins: radu24240782 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:07:55] <Decker> sorry I don't get > foo(y 1 2) -> expand "x   .... part 
[22:08:03] <Decker> what was the expand of foo?
[22:08:06] *** Quits: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Client Quit)
[22:08:17] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 240 seconds)
[22:08:21] <smallville7123> #define foo(x) x y
[22:08:37] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[22:08:54] <Decker> so it'd be y 1 2    ... y-> x 2 -> y 1 2
[22:08:56] <smallville7123> that only way it might work is if expansion happens BEFORE param substitution
[22:09:10] <Decker> it does
[22:09:19] <Decker> the expanded tokens are substituted
[22:09:29] <Decker> expanded parameters
[22:09:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-2893-5a12-7df9-5067.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:10:41] <smallville7123> but then that would probably yield "x 2 1 y 1 2" -> replace x -> "y 1 2 2 1 y 1 2"
[22:10:58] <smallville7123> as x is replaced AFTER the body has been expanded
[22:11:37] <smallville7123> which is not what gcc gives
[22:11:49] <Decker> foo(y)=>foo( y 1 2 )   which then x = y 1 2 and then y is y 1 2
[22:11:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:12:12] <Decker> the x is substituted with the expanded y 1 2
[22:12:17] <Decker> but not re-evalutated
[22:12:29] <smallville7123> so it does expansion and substitution in a single step?
[22:12:34] <Decker> and then the y expands as the y normally does
[22:12:37] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[22:12:41] <smallville7123> both*
[22:12:47] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[22:12:53] <Decker> it's already expanded in the first place
[22:13:48] <Decker> I dunno it would work to run the expansion then too...
[22:13:59] <Decker> foo(y)  ->   y y    -> y 1 2 y 1 2
[22:14:01] *** Joins: pavonia (~user@user/siracusa)
[22:14:25] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:14:33] <smallville7123> eg as if "#define x_ y 1 2 \n #define y_ y 1 2 \n x_ y_"
[22:15:10] <Decker> ya sora
[22:15:20] *** Joins: xkuru (~xkuru@user/xkuru)
[22:15:34] <Decker> but not - because in that case the y isn't re-re evaluated
[22:15:54] <smallville7123> yea
[22:15:55] <Decker> if you did it that way it would ... x_ -> y 1 2 1 2
[22:16:20] <smallville7123> like "#undef y \n #define x_ y 1 2 \n #define y_ y 1 2 \n x_ y_"
[22:16:30] <Decker> sure :)
[22:17:35] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[22:17:37] <smallville7123> and to be clear, it is the parameter NAME that is not further expanded, and not the parameter value originally unexpanded, right?
[22:18:27] <smallville7123> eg foo(ABED) the name ABED would be expanded in the function body if present even if the param name is not also ABED, right?
[22:18:27] <Decker> right
[22:18:39] <Decker> you can expand the name and while processing just subst that result
[22:18:47] <smallville7123> ok :)
[22:18:56] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[22:19:44] *** Joins: bpmedley_ (~bpmedley@2600:1700:e2c:8410:a5a4:913:5017:f4d2)
[22:20:27] *** Joins: sonny (~sonny@8.6.144.252)
[22:20:38] <smallville7123> so how would i go about fixing this?
[22:20:44] <Decker> foo(foo(x)) -> foo(x) ; the argument can't expand since the macro is itself processing
[22:20:57] <smallville7123> https://gist.github.com/mgood7123/bcd3d143e3fb2a68ca16888441898270
[22:20:58] <bayaz> Title: pre.cpp 
[22:21:57] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[22:22:24] <smallville7123> oof gcc expands "foo(foo(x))" to "x y x y x y y x y"
[22:22:37] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:142d:c26f:6eb8:503) (Ping timeout: 240 seconds)
[22:23:06] <smallville7123> or rather "x 2 1 y 1 2 y 1 2"
[22:23:40] <smallville7123> depending on what x and y are defined to :)
[22:23:52] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[22:24:11] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:24:55] *** Quits: rb (~augh@theguntretort.com) (Read error: Connection reset by peer)
[22:25:06] *** Joins: rwb (~augh@theguntretort.com)
[22:25:38] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[22:26:04] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[22:26:44] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Changing host)
[22:26:44] *** Joins: kranius (~kranius@user/kranius)
[22:27:00] *** rwb is now known as rb
[22:28:25] <Decker> smallville7123 https://gist.github.com/mgood7123/bcd3d143e3fb2a68ca16888441898270#gistcomment-4004546 ?
[22:28:25] <bayaz> Title: pre.cpp 
[22:28:43] *** Joins: kaph (~kaph@net-2-47-236-216.cust.vodafonedsl.it)
[22:28:55] *** Quits: radu24240782 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[22:28:58] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:30:17] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[22:30:22] *** Quits: maxzor (~maxzor@laubervilliers-657-1-67-14.w90-63.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[22:31:13] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[22:31:35] <smallville7123> hmm ok
[22:33:15] <smallville7123> should i do this instead? https://gist.github.com/mgood7123/2a0e8934df18b82250dcbeaf6194202e
[22:33:15] <bayaz> Title: pre.cpp 
[22:34:18] *** Joins: rickybobby (~rickybob@35.143.255.39)
[22:34:47] <smallville7123> or should i just add the function defs to the main defs?
[22:35:34] <smallville7123> with the function defs overwriting any existing defs
[22:36:41] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[22:37:00] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:37:55] *** Quits: zaher (~zaher@37.48.146.218) (Ping timeout: 250 seconds)
[22:38:44] *** Quits: terminalpusher (~terminalp@2a01:586:968a:1:cebf:9757:2259:bf12) (Remote host closed the connection)
[22:39:18] *** Joins: terminalpusher (~terminalp@2a01:586:968a:1:cebf:9757:2259:bf12)
[22:39:43] <smallville7123> maybe something like        tmp.definitions = v.definitions; for (auto & pair : v.function_definitions) tmp.definitions[pair.second.id] = pair.second;
[22:40:33] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[22:43:26] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:43:57] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[22:45:00] *** Quits: emf (~emf@2620:10d:c091:480::1:44aa) (Read error: Connection reset by peer)
[22:45:05] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:55] *** Quits: murii (~murii@2a02:a58:835a:1100:f041:c0a:92e7:115e) (Remote host closed the connection)
[22:47:14] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 252 seconds)
[22:47:21] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:47:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:47:51] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:52] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:49:05] <smallville7123> welp it kinda works
[22:49:15] <smallville7123> but other stuff break :(
[22:50:03] <smallville7123> such as "foo(y)" expanding to "x 2 1 2 y 1 2 2"
[22:50:10] *** Quits: Lemniscate (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:50:19] <smallville7123> instead of "y 1 2 y 1 2"
[22:50:27] *** Joins: murii (~murii@2a02:a58:835a:1100:f041:c0a:92e7:115e)
[22:50:28] *** Joins: emf (~emf@2620:10d:c091:480::1:e0fe)
[22:50:43] <smallville7123> and "foo(x)" expands to "x 2 1 x 2 1 2"
[22:51:01] <smallville7123> and "foo(foo(x))" infinitely expands
[22:51:18] <smallville7123> and probably other stuff i have yet to find
[22:51:26] <smallville7123> Decker: 
[22:51:53] <Decker> :)
[22:52:11] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:52:25] <smallville7123> the life of a preprocessor is a difficult one xP
[22:52:45] <Decker> I remember some weeks fiddling with it :) 
[22:52:55] <smallville7123> :)
[22:54:07] *** Joins: dan01 (~dan@2a02:2f09:3b16:6c00:e986:5986:b5a2:c922)
[22:54:13] *** Joins: mimmy (~mimmy@69.174.8.146)
[22:54:21] *** Quits: dan01 (~dan@2a02:2f09:3b16:6c00:e986:5986:b5a2:c922) (Remote host closed the connection)
[22:54:38] <smallville7123> if you want, this is the entire file as it is right now https://gist.github.com/mgood7123/e52dc7974ed25bc0fd7eeef2cb3532c5
[22:54:39] <bayaz> Title: GLSL_PREPROCESSOR.cpp 
[22:55:57] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[22:56:41] <Decker> https://github.com/d3x0r/SACK/blob/master/makefiles/prog/ppc/define.c#L1333-L1343 smallville7123 basically it's findDefine, if you find it and the define class/object thing has a 'bUsed' set bUsed when you start using it... It used to be right away, but for some reasons I had to defer to 'using' it later
[22:56:42] <bayaz> Title: SACK/define.c at master · d3x0r/SACK 
[22:57:30] <smallville7123> uea
[22:58:34] <smallville7123> night night
[23:00:20] *** Quits: kranius (~kranius@user/kranius) (Quit: leaving)
[23:02:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[23:06:06] <KillerWasp> mmm...
[23:06:20] <Decker> dooonuts
[23:08:03] <KillerWasp> hello random rapados guys
[23:08:55] <KillerWasp> what happened?
[23:09:16] <KillerWasp> is the internet broken the part of the end of world?
[23:09:30] <GeDaMo> I think AWS were having problems earlier
[23:12:39] <average> impossible, AWS has uptime 99.999%
[23:13:00] <Decker> :) unpatched log4j?
[23:13:01] <average> It is in their SLAs which may or may not be influenced by their ToS
[23:13:02] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[23:13:12] <GeDaMo> https://news.ycombinator.com/item?id=29648286
[23:13:34] *** Quits: benji (~benji@user/benji) (Quit: ZNC - https://znc.in)
[23:13:52] <average> GeDaMo: imagine if AWS were down and they got sued by thousands of companies for not respecting their commitment
[23:14:00] <KillerWasp> AWS == All Whole Shitty
[23:14:15] *** Joins: Twipply (~Twipply@user/twipply)
[23:14:58] *** Joins: benji (~benji@user/benji)
[23:15:01] <average> KillerWasp: but why? They popularized SLA and error budgets
[23:15:20] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-800a-95c0-a608-9494.res6.spectrum.com)
[23:15:24] *** Joins: sonny (~sonny@8.6.144.252)
[23:15:45] <KillerWasp> average: but nothing like ads of google. they make all internet sickness!!
[23:15:51] *** Quits: sonny (~sonny@8.6.144.252) (Client Quit)
[23:16:08] <average> KillerWasp: you know barstool pizza review where the host says in every episode “everybody knows the rules, one bit” and then he proceeds to take 6-7 bites before scoring? and when guests call him out on it he says “well.. i make the rules soo..”
[23:16:19] <average> KillerWasp: it’s kinda like that with AWS too
[23:16:41] <average> bit -> bite
[23:21:01] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[23:21:16] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:21:17] *** Quits: emf (~emf@2620:10d:c091:480::1:e0fe) (Ping timeout: 240 seconds)
[23:22:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:22:13] <KillerWasp> average: well, that's understandable, that AWS is eating the hardware, it was always quite autistic.
[23:22:32] *** Joins: sh1r4s3 (~sh1r4s3@109-252-75-9.nat.spd-mgts.ru)
[23:22:41] *** Joins: teut (~teut@106.202.152.122)
[23:23:13] <teut> https://ibb.co/1JBnGQm
[23:23:14] <bayaz> Title: image 
[23:23:23] <teut> what does this thing means?
[23:23:43] <teut> https://www.msys2.org/
[23:23:43] <bayaz> Title: MSYS2 
[23:24:26] <teut> I need to install mingw compiler
[23:24:37] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Ping timeout: 240 seconds)
[23:25:18] <KillerWasp> teut: msys2 is also a compiler for windows
[23:25:36] <pyzozord> https://libs.suckless.org/libgrapheme/ so neat
[23:25:37] <bayaz> Title: libraries | suckless.org software that sucks less 
[23:25:44] <teut> the docs say msys2 helps install various compilers
[23:25:47] <KillerWasp> But I can see that you send one thing and it comes out with another.
[23:25:49] <average> msys2 contains a compiler but its in fact a toolchain imo
[23:26:25] <teut> what are all those options, asciidocs etc?
[23:26:40] <teut> binutils, bison
[23:27:15] <average> teut: those are ports of linux packages
[23:27:27] <average> teut: you can install them later on if you need them
[23:27:43] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[23:28:02] <KillerWasp> teut: binutils is always needed
[23:28:09] <teut> I need to run a c++ program
[23:28:32] <average> I wonder who sponsored the creation of msys2. I think it’s the only toolchain to allow compiling linux stuff on windows
[23:28:38] <KillerWasp> teut: you can install 'pkgfile' , and later check it before of install with 'pkgfile -l binutils'
[23:28:41] <teut> want to use  vector, stack  , utility  , these kinds of basic libraries
[23:28:50] <KillerWasp> or with 'pacman -Ql binutils' late of install.
[23:28:51] <average> teut: why you complicate your life? Just use WSL..
[23:28:57] <teut> wsl?
[23:29:06] <average> Yes WSL
[23:29:18] <teut> what all that KillerWasp?
[23:29:40] <teut> build tools are complicated
[23:29:43] <KillerWasp> teut: ewww, no matter, bye! :D
[23:29:48] * KillerWasp jump to window
[23:29:55] <average> no matter? Lol
[23:30:12] <average> you mean “nevermind” ?
[23:30:21] <KillerWasp> average: yes, nevermind
[23:30:24] *** Quits: teut (~teut@106.202.152.122) (Quit: Client closed)
[23:30:33] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[23:30:41] *** Joins: teut (~teut@106.202.152.122)
[23:30:41] <teut> https://dpaste.org/zNju
[23:30:42] <KillerWasp> today mi dns and my translator are broken
[23:30:50] <teut> so I want to run this
[23:30:55] <KillerWasp> so i'm guess words or put spanish word...
[23:31:21] <KillerWasp> i really hate christmas...
[23:31:21] <teut> whats the things that I should select from the list?
[23:31:38] <teut> why? santa didnt give you gifts?
[23:31:51] <teut> ;D
[23:32:04] <KillerWasp> yes, my gifts are a broken internet
[23:32:25] <KillerWasp> and my keyboard, is annoying put a broken spaces
[23:32:34] <KillerWasp> ALL BROKENS!!!
[23:32:34] <teut> '=D  that problem is with me too
[23:32:52] <average> teut: why do you want to deal with msys2 when you could just use WSL ?
[23:33:56] <teut> virtual linux install?
[23:34:43] <average> https://docs.microsoft.com/en-us/windows/wsl/install
[23:34:43] <bayaz> Title: Install WSL 
[23:34:54] <teut> I have opened the same
[23:34:58] <average> teut: it’s so popular everyone uses it
[23:35:01] *** Joins: Klinda (~superleag@user/klinda)
[23:35:05] <teut> still confirming
[23:36:51] <teut> ya installing it
[23:36:55] <teut> thanks
[23:37:31] *** Quits: premultiplied (~premultip@69-84-3-189.mxu.aerioconnect.net) (Ping timeout: 256 seconds)
[23:38:39] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[23:42:25] <Decker> teut get gwsl too 
[23:42:55] <teut> ya I will do that but for now I installed it all in mysys2
[23:43:18] <teut> btw where did I mention the compiler version?
[23:43:29] *** Joins: vicfred (~vicfred@user/vicfred)
[23:43:33] <teut> like I want c++ 20 so how do I write it?
[23:44:16] *** Joins: jaysicks (~jaysicks@BC9C0097.mobile.pool.telekom.hu)
[23:44:30] <Decker> vs code
[23:45:21] <teut> ya I will use vscode but while installation I need some way to configure the version
[23:45:26] <teut> I couldnt see that
[23:45:32] <[itchyjunk]> wtf
[23:45:34] <[itchyjunk]> i had a thought
[23:45:37] *** Joins: wolfshappen (~waff@irc.furworks.de)
[23:46:35] <GeDaMo> teut: normally, you can pass a command line paramter to specify the version of C++ the compiler should enforce
[23:46:58] <teut> so you mean it installed all 14, 17, 20?
[23:47:03] <teut> or even 23?
[23:47:13] <GeDaMo> The same compiler can support all of them, yes
[23:47:17] <Decker> could be - --std=c++20  ?
[23:47:55] <teut> ya c++ is backwards compatible
[23:48:02] <teut> 100%
[23:49:46] <GeDaMo> Looks like gcc uses -std
[23:49:56] <GeDaMo> "The default, if no C++ language dialect options are given, is -std=gnu++17." https://gcc.gnu.org/onlinedocs/gcc/Standards.html
[23:49:57] <bayaz> Title: Standards (Using the GNU Compiler Collection (GCC)) 
[23:50:45] <teut> hmm
[23:51:33] <teut> curently the powershell is not able to understand   "gcc" or "g++"
[23:52:07] <teut> but vscode is somehow able to fiind locaton of g++/gcc and able to run the code
[23:53:28] <teut> https://ibb.co/MpKTdS7
[23:53:29] <bayaz> Title: image 
[23:53:35] <teut> so it says g++
[23:53:52] <teut> g++ runs c++ code, gcc runs c code
[23:54:03] <teut> how to use clang instead?
[23:55:00] <GeDaMo> You might have to add it to your search path
[23:55:04] <teut> there are 3 main compilers available for c++ :gcc, clang, microsoft  as of my knowledge
[23:57:01] <teut> C:\msys64    I added this to env variable  path
[23:57:19] <teut> I need to restart pc maybe
[23:57:22] <andl> im not sure of what exactly clang is 
[23:57:37] <teut> clang is a compiler too , a formatter too
[23:58:04] <teut> its basically eases job of creating a programming language
[23:58:17] <average> teut: to me it seems like you're expending a lot of energy just to compile a simple C++ program on Windows
[23:58:44] <average> if you had used WSL you would have been done by now
[23:58:57] <teut> no , I actually installed c++ just last month from here only
[23:59:18] <teut> I did the setup on my friend s machine
[23:59:43] <teut> wsl also I will do but that will just install linux subsystem
