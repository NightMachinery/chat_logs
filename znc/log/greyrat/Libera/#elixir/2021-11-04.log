[00:07:38] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[00:12:30] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[00:15:05] *** Quits: jushur (~human@user/jushur) (Quit:  ¯\_(ツ)_/¯)
[00:28:10] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:10c2:9d8b:8a0b:ed39) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:43:20] *** Quits: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[00:43:38] *** Joins: el1x1r (~el1x1r@dynamic-046-114-168-173.46.114.pool.telefonica.de)
[00:45:57] *** Quits: el1x1r (~el1x1r@dynamic-046-114-168-173.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[00:46:16] *** Joins: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de)
[01:02:47] *** Joins: livoreno (~livoreno@user/notzmv)
[01:05:22] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[01:16:17] <OliverMT> is there a way to select an uuid from a raw (schemaless) table query into a string?
[01:16:36] <OliverMT> sort of a select:  Ecto.UUID.dump(table.foo)
[01:47:13] *** Joins: livoreno (~livoreno@user/notzmv)
[02:05:20] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[02:35:28] *** Joins: norrland1 (~norrland@92-33-164-4.customers.ownit.se)
[02:35:59] *** Quits: norrland (~norrland@92-33-164-4.customers.ownit.se) (Read error: Connection reset by peer)
[02:42:45] *** Quits: srfsh (~srfsh@user/srfsh) (Ping timeout: 276 seconds)
[02:52:14] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[02:56:06] *** Joins: srfsh (~srfsh@user/srfsh)
[02:59:11] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[03:11:47] *** Quits: braulio-bz (~manjaro-u@user/brauliobz) (Ping timeout: 264 seconds)
[03:24:21] *** Quits: srfsh (~srfsh@user/srfsh) (Ping timeout: 276 seconds)
[03:25:27] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[03:29:14] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 268 seconds)
[03:36:58] *** Joins: srfsh (~srfsh@user/srfsh)
[03:53:48] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[03:54:12] *** Joins: sickill7 (~sickill@user/sickill)
[03:54:43] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Client Quit)
[03:56:59] *** Quits: sickill (~sickill@user/sickill) (Ping timeout: 268 seconds)
[03:56:59] *** sickill7 is now known as sickill
[04:09:12] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[04:14:14] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[04:19:11] *** Quits: withershins (~craig@pa49-184-231-68.pa.vic.optusnet.com.au) (Ping timeout: 268 seconds)
[04:19:34] *** Joins: withershins (~craig@pa49-184-231-68.pa.vic.optusnet.com.au)
[04:27:52] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[04:27:56] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Remote host closed the connection)
[04:50:37] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[05:50:01] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[05:56:01] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[05:57:00] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[06:02:10] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[06:17:48] *** Joins: livoreno (~livoreno@user/notzmv)
[06:29:43] *** Joins: sickill8 (~sickill@user/sickill)
[06:31:54] *** Quits: sickill (~sickill@user/sickill) (Ping timeout: 260 seconds)
[06:31:54] *** sickill8 is now known as sickill
[07:30:42] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[07:35:53] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[08:11:40] *** Quits: mahmutov_ (~mahmutov@37.155.85.233) (Ping timeout: 268 seconds)
[08:14:22] *** Quits: Spronger (~Donger@signiq.cust.bdr01.per02.wa.VOCUS.net.au) (Remote host closed the connection)
[08:34:28] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6) (Ping timeout: 268 seconds)
[08:43:06] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[09:40:23] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[09:45:24] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[09:49:01] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[09:54:02] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[09:59:39] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[10:30:07] *** Joins: nickjj_ (~nickjj@user/nickjj)
[10:33:40] *** Quits: nickjj (~nickjj@user/nickjj) (Ping timeout: 260 seconds)
[10:51:58] *** norrland1 is now known as Norrland
[11:02:52] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[11:07:09] *** Joins: andreyorst (~andreyors@37-144-211-167.broadband.corbina.ru)
[11:20:21] *** Quits: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[11:20:42] *** Joins: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de)
[11:35:14] *** Quits: dr-orlovsky (~dr-orlovs@31.14.40.18) (Ping timeout: 265 seconds)
[11:35:24] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:35:26] *** Joins: dr-orlovsky (~dr-orlovs@31.14.40.18)
[11:37:41] *** Quits: niko (~niko@libera/staff/niko) (Remote host closed the connection)
[11:37:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:38:02] *** Quits: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[11:38:05] <serafeim> hello friends
[11:38:21] *** Joins: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de)
[11:41:27] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[11:46:27] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[11:57:11] *** Joins: o (~niko@libera/staff/niko)
[12:00:40] *** Joins: andrhua (~andrhua@31.134.187.8)
[12:06:45] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:35:07] *** Joins: Ilyu (~quassel@78.202.228.230)
[12:49:36] *** Joins: braulio-bz (~manjaro-u@user/brauliobz)
[12:50:16] *** braulio-bz is now known as brauliobz
[12:53:29] *** Quits: andrhua (~andrhua@31.134.187.8) (Ping timeout: 268 seconds)
[13:06:59] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[13:09:34] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:23:01] *** Joins: thojanssens (~thojansse@ptr-178-51-168-128.dyn.mobistar.be)
[13:32:06] *** Joins: andrhua (~andrhua@31.134.187.8)
[13:33:23] *** Joins: mexen (uid495612@user/mexen)
[13:39:32] <serafeim> is it my idea or the room here has lost traction ?
[13:40:26] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[13:41:01] <Nicd> IRC in general is slowly fading away
[13:41:21] <serafeim> Nicd: lol is this related to the freenode fiasco ?
[13:42:06] <Nicd> not really
[13:42:30] <serafeim> well irc is invaluable for me
[13:42:41] <Nicd> sure some less active people decided it wasn't worth it to move and just left IRC in general but IRC has been on a slow decline for years
[13:43:14] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[13:45:27] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[13:48:22] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[13:48:51] *** Quits: andrhua (~andrhua@31.134.187.8) (Ping timeout: 256 seconds)
[13:55:02] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:56:46] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[14:02:27] <serafeim> well i was visiting irc regularly from 1998 to 2005 or something
[14:02:42] <serafeim> then i stopped completely and re-joined after 10 years at 2015 or something
[14:02:58] <serafeim> and it was great i was helped very much especially when learning new langs (kotlin, elixir, clojure)
[14:03:16] <serafeim> it's too bad people don/t know about irc and try stackoverflow and other stuff
[14:03:34] <Nicd> at least stack overflow has searchable history :P
[14:04:02] <serafeim> so ?
[14:04:04] *** Joins: braulio-bz (~manjaro-u@user/brauliobz)
[14:04:09] <serafeim> here i just re-ask the same questions again and again 
[14:04:11] <serafeim> easier :p
[14:04:24] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 268 seconds)
[14:04:41] <LostKobrakai> For elixir there's also slack and discord, with slack being the biggest chat based community 
[14:04:58] <serafeim> slack is a walled garden as you know
[14:05:23] <serafeim> also i'm already at two slack servers. i don't want to have my browser filled with slack things
[14:06:15] <LostKobrakai> Compared to IRC slack's measly 10k history seems great xD
[14:06:39] <Nicd> I use the Elixir Slack with IRCCloud and I have eternal history… :P
[14:06:46] <LostKobrakai> People can ask a question today and come back tomorrow to find someone having answered the question
[14:07:11] <Nicd> anyway if you like IRC then that's fine, I do too. but people will move away from it and that's just how it goes
[14:07:15] <LostKobrakai> For IRC you have to figure out some way to have history
[14:10:22] <serafeim> i also have eternal history with the wee-chat thingie
[14:18:22] <serafeim> it's really problematic that the people don't know about IRC. also most projects don't even have an IRC presense
[14:18:29] <serafeim> elixir is an exception thankfully
[14:19:33] <Nicd> I don't see the problem
[14:24:38] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[14:30:56] *** Joins: chgr (~ek@nat-91-137-31-13.net.encoline.de)
[14:31:26] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:33:05] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[14:37:19] <fub> TIL that irccloud has a slack gateway :o
[14:41:14] *** Quits: chgr (~ek@nat-91-137-31-13.net.encoline.de) (Quit: WeeChat 3.3)
[14:41:49] <Nicd> it's not perfect but passable for the 2 free time Slacks I'm on
[14:42:15] <OliverMT> it absolutely shits the boat if you go to elixir slack with it
[14:42:18] <OliverMT> since it sends 30k nicks
[14:42:28] <OliverMT> or is that improved now Nicd ?
[14:42:32] <Nicd> yes it's quite slow when you first connect and if you open #general
[14:42:33] <Nicd> nope
[14:42:40] <Nicd> I just use #random so it's not that bad
[14:43:03] <Nicd> but I think it does affect each load of the web UI even if you don't view #general
[14:46:53] *** Quits: withershins (~craig@pa49-184-231-68.pa.vic.optusnet.com.au) (Quit: WeeChat 3.3)
[14:48:41] *** nickjj_ is now known as nickjj
[14:53:51] <OliverMT> it did before
[14:58:56] *** Joins: withershins (~craig@pa49-184-231-68.pa.vic.optusnet.com.au)
[14:59:00] *** Quits: withershins (~craig@pa49-184-231-68.pa.vic.optusnet.com.au) (Client Quit)
[15:10:57] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[15:11:34] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[15:16:07] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[15:26:02] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:32:01] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:34:25] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[15:52:02] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:52:38] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[15:54:10] *** Quits: andreyorst (~andreyors@37-144-211-167.broadband.corbina.ru) (Ping timeout: 268 seconds)
[15:54:31] <serafeim> let's suppose i want to create a task supervisor to run my tasks 
[15:55:40] <serafeim> is it enough to add the line {Task.Supervisor, name: My.TaskSupervisor} in the children of application start function and then just do a `{:ok, _pid} = Task.Supervisor.start_child(My.TaskSupervisor, fn -> generate_thumb(path) end)` in my controller action >?
[16:03:24] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:03:58] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[16:04:06] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[16:05:27] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:06:23] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[16:09:39] <serafeim> let's suppose i've got a bunch of tasks. and i want to run them one by one. how could i do it? is there something like a mutex in elixir ?
[16:11:39] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[16:12:05] <LostKobrakai> Let a single process do the work. It by definition needs to run sequential when doing htat
[16:14:58] <serafeim> it's not easy
[16:15:28] <serafeim> i've got a serve_thumb action in my controller that will check if a thumb is found and either serve it or generate it if it's not there
[16:15:45] <serafeim> when a page with 100 images is loaded then i'll get 100 calls to this action
[16:15:45] *** Quits: jonathanclarke (~jonathanc@202.51.76.91) (Ping timeout: 268 seconds)
[16:16:07] <serafeim> right now i'm using a TaskSupervisor to start tasks for this. but some of the tasks are OOM killed 
[16:16:39] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[16:24:51] <Norrland> https://elixirforum.com/t/how-to-limit-the-number-of-concurrent-running-exports/21758
[16:26:14] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[16:27:20] <serafeim> i guess i could just use a genserver ?
[16:34:17] *** Quits: krasi-sabyata (~mirat@151.210.151.231) (Quit: Leaving.)
[16:38:28] <serafeim> ok
[16:38:37] <serafeim> let's suppose i start a task. how to know when the task has finished ?
[16:38:58] <serafeim> let's suppose i'm using a task sueprvisor to start it: https://hexdocs.pm/elixir/1.12/Task.Supervisor.html#async/3
[16:39:05] <serafeim> it has like 100 ways to start a task
[16:39:21] <serafeim> i want to start it, let it do what it wants and get a handle_info when the task finished
[17:08:10] *** Joins: [deleted] (~livoreno@user/notzmv)
[17:10:50] *** Joins: andreyorst (~andreyors@2.92.125.180)
[17:11:52] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 268 seconds)
[17:12:03] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[17:16:43] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:17:24] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[17:28:42] <Nicd> well that's what async does
[17:31:20] <Nicd> here's even an example with async_nolink: https://hexdocs.pm/elixir/1.12/Task.Supervisor.html#async_nolink/3-examples
[17:36:02] *** Quits: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[17:36:39] *** Joins: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de)
[18:01:24] *** Quits: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[18:02:21] *** Joins: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de)
[18:06:19] *** Joins: phaleth (~phaleth@user/phaleth)
[18:06:56] *** Quits: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[18:07:16] *** Joins: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de)
[18:11:41] *** Quits: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[18:11:55] *** Joins: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de)
[18:12:15] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[18:28:20] <serafeim> thanks Nicd 
[18:28:47] <serafeim> I just started the task with `Task.async` (no supervisor) and seems to be working
[18:28:52] <serafeim> i.e informing me when it finished
[18:30:47] <serafeim> do i need to use the task supervisor or it will be fine like this ?
[18:33:40] <serafeim> hmmm i tried adding a task supervisor and now i'm getting this error when i start the server: warning: :restart and :shutdown options in Task.Supervisor.start_link/1 are deprecated. Please pass those options on start_child/3 instead
[18:33:42] <serafeim> warning
[18:33:56] <serafeim> ah yes
[18:33:57] <serafeim> ok
[18:34:00] <serafeim> i was passing an option
[18:39:26] *** Joins: hoppity (~user@user/hoppity)
[18:39:38] <hoppity> Hi guys, does Ecto work with Postgres extensions?
[18:42:42] <benwilson512_> hoppity: depends on what you mean by "work" but you can do basically anything with fragments
[18:43:01] <benwilson512_> if you want to return custom data types like postgis then you often want a library to do the type parsing natively
[18:43:08] <benwilson512_> eg: geo_postgis
[18:44:19] *** Joins: srfsh_ (~srfsh@user/srfsh)
[18:44:25] *** Quits: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[18:44:45] *** Joins: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de)
[18:45:39] <hoppity> benwilson512_: I have a Postgres extension from the package "postgresql-12-extra-window-functions" that I wish to use
[18:46:01] <hoppity> I think I can make it work with fragments
[18:46:03] *** Quits: srfsh (~srfsh@user/srfsh) (Ping timeout: 276 seconds)
[18:46:16] <benwilson512_> hoppity: worst case scenario you can get a lot done with Repo.query + Repo.load
[18:46:37] <benwilson512_> Repo.query lets you write good old fashioned sql, and then Repo.load makes it easy to turn that result back into Ecto structs quite easily
[18:46:51] <hoppity> oh that's super cool
[18:46:52] <hoppity> thank you
[18:47:28] <benwilson512_> as always when doing SQL strings: always use parameters, never use #{}
[18:47:51] <benwilson512_> as a policy, we always have the SQL strings we use for Repo.query calls as module attributes to make it extra clear that we aren't interpolating runtime values
[18:47:58] <hoppity> meaning to use the ^symbol?
[18:48:16] <benwilson512_> uh that's what you use when using the query DSL
[18:48:21] <benwilson512_> but with the actual strings it's like
[18:48:37] <benwilson512_> `Repo.query("select * from users where id = $1", [user_id])`
[18:49:00] <benwilson512_> it's regular parameterized postgres sql
[18:49:05] <hoppity> interesting, thank you, what is the difference vs #{}?
[18:49:31] <benwilson512_> if you do `Repo.query("select * from users where id = #{user_id}")` you open yourself up to sql injection
[18:49:51] <hoppity> thank you
[18:49:55] <benwilson512_> because the value is actually _part_ of the sql string. If you use $1 it is always kept separately and no value of user_id can affect the query
[18:50:05] <hoppity> I really appreciate it
[18:50:19] <benwilson512_> sql injection lets the end user send you a value like `1; drop table users;`
[18:50:23] <benwilson512_> which is obviously bad
[18:50:32] <hoppity> oh yeah
[19:00:38] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:11:46] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:24:19] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:e57c:3292:3307:74c8)
[19:30:14] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:e57c:3292:3307:74c8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:32:55] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:33:16] *** Joins: andrhua (~andrhua@31.134.187.8)
[19:33:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:57:50] *** Joins: mahmutov_ (~mahmutov@37.155.85.233)
[20:01:08] *** Quits: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[20:01:43] *** Joins: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de)
[20:09:14] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[20:13:09] <serafeim> meet bobby tables: https://xkcd.com/327/
[20:18:23] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:30:08] *** Quits: el1x1r (~el1x1r@dynamic-046-114-168-111.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[20:30:27] *** Joins: el1x1r (~el1x1r@ip1f122561.dynamic.kabel-deutschland.de)
[20:42:05] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Remote host closed the connection)
[20:42:30] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[20:57:02] *** Quits: Heuristic (~Heuristic@108.61.216.82) (Quit: ZNC - http://znc.in)
[20:57:27] *** Quits: andrhua (~andrhua@31.134.187.8) (Remote host closed the connection)
[20:57:28] *** Joins: Heuristic (~Heuristic@108.61.216.82)
[21:44:28] <hoppity> serafeim: lol
[21:44:51] <hoppity> Is there a way to use pure SQL in Ecto?
[21:45:15] <hoppity> I mean more than a fragment, an entire huge custom SQL query
[21:47:14] <Nicd> you were just told how...
[21:47:50] <hoppity> Nicd: but how do I put in the entire query
[21:47:53] *** Quits: seleven (uid524929@id-524929.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:48:14] <hoppity> Repo.query seems to have issues with spaces or tabes not entirely sure what the issue is
[21:48:14] <Nicd> do you have a backlog? can you scroll up to the Repo.query examples?
[21:48:54] <hoppity> yes, I know benwilson512_  said Repo.query('select * etc
[21:49:57] <Nicd> what's the issue you're having with it?
[21:50:51] <hoppity> my apologies, I was using ' instead of " which was causing my problem
[21:53:37] <rawtaz> almost 2022 and quotes still matter :(
[21:53:59] <hoppity> Is it possible to Repo.load into a nameless map?
[22:04:23] *** Quits: thojanssens (~thojansse@ptr-178-51-168-128.dyn.mobistar.be) (Remote host closed the connection)
[22:04:42] *** Joins: thojanssens (~thojansse@ptr-178-51-168-128.dyn.mobistar.be)
[22:20:00] <hoppity> Is Repo.load intended to load only onto existing schemas or can I generate arbitrary maps from a pure SQL query?
[22:24:23] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[22:26:28] *** Quits: thojanssens (~thojansse@ptr-178-51-168-128.dyn.mobistar.be) (Quit: Leaving)
[22:35:11] *** Quits: feld (~feld@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[22:35:11] *** Quits: SlicerDicer6 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[22:40:33] *** Quits: braulio-bz (~manjaro-u@user/brauliobz) (Ping timeout: 268 seconds)
[22:55:24] *** Joins: SlicerDicer6 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[22:55:24] *** Joins: feld (~feld@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[23:04:06] <benwilson512_> hoppity: Repo.load is for existing schemas, if you want arbitrary maps just interact with Repo.query's result directly
[23:04:06] <benwilson512_> eg
[23:05:24] <benwilson512_> %{columns: columns, rows: rows} = Repo.query!(@query_string, params)
[23:05:24] <benwilson512_> Enum.map(rows, fn row -> columns |> Enum.zip(row) |> Map.new end)
[23:06:36] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[23:11:40] <hoppity> benwilson512_: thank you very much
[23:12:50] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:e57c:3292:3307:74c8)
[23:16:52] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6)
[23:30:23] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Ping timeout: 246 seconds)
[23:35:50] <hoppity> Postgrex keep trying to force me to pass it a date time when I try to use query parameters even though my original query simply used a string like '2021-10-26'
[23:36:08] <benwilson512_> can you show the query?
[23:36:29] <benwilson512_> and also the parameter values?
[23:36:37] <hoppity> yes, on it
[23:37:20] <hoppity> original query: https://dpaste.org/fnDC
[23:37:37] <hoppity> trying to parameterize the two dates on line 21
[23:37:47] <hoppity> so I am doing the following:
[23:38:20] <hoppity> https://dpaste.org/yNdE
[23:38:45] <benwilson512_> @hoppity pass in actual date structs as the parameters
[23:38:50] <benwilson512_> OR use casting in the SQL
[23:39:14] <benwilson512_> postgres will implicitly cast certain literals, which it does not necessarily do for parameters
[23:39:27] <benwilson512_> eg for casting `$1::date, $2::date`
[23:39:39] <benwilson512_> but you can also just pass actual date structs as parameters
[23:40:50] <hoppity> I tried passing without using to_string but it did not work either, let me try with ::date
[23:41:04] <hoppity> Also, here is the error I got, it may just be the fact that to_string quotes using ""
[23:41:05] <hoppity> https://dpaste.org/qfto
[23:44:42] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 260 seconds)
[23:46:44] <hoppity> benwilson512_: when you say pass the date struct, how can I do that when Date (https://hexdocs.pm/elixir/1.12/Date.html) returns a date sygil?
[23:50:29] <Nicd> Sigils are not a datatype
[23:50:37] <Nicd> It's just pretty printed that way
[23:52:02] <hoppity> if I pass the sigil to my query it's like I'm passing the struct then?
[23:54:22] <hoppity> when I pass a Date struct Postgrex still detects it as a date sigil
[23:54:33] <hoppity> "Postgrex expected %DateTime{}, got ~D[2021-10-26]"
