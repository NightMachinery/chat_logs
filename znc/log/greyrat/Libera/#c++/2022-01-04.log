[00:03:06] *** Joins: Pook (~Pook@2001:8a0:f996:1400:744f:ecfb:c981:a70f)
[00:03:12] <anyone> john99: https://imgflip.com/i/5zx00o
[00:03:34] <john99> XD
[00:03:45] <anyone> in this case, static initialization
[00:09:36] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613)
[00:11:14] *** Quits: Guest15 (~Guest15@ip72-199-239-162.sd.sd.cox.net) (Quit: Client closed)
[00:17:35] <john99> okay, one more thing, if i have  multiple unlock point(in the body and in the destructor), the best way is simply catch the exception in the destructor if the mutex already released?
[00:23:29] *** Quits: unknow (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:23:54] <Alipha> john99: it's undefined behavior to unlock() an unlocked mutex, so, no, you need to figure out how to ensure you only have one unlock pojnt
[00:24:25] <Alipha> *point
[00:24:37] *** Quits: T`alZHeimeR (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[00:25:49] <john99> ufff, if i ahve a database cursor that only one thread can open, the thread at destructor release the cursor, but the thread can release the cursor as soon as he ended the database connection
[00:25:54] <anyone> The solution is usually that you should be using a unique_lock or a lock_guard, rather than calling lock/unlock on a raw mutex, if possible.
[00:26:30] <john99> how i can ensure only one thread have the cursor open and release the cursor as soon as posible?
[00:26:40] <anyone> a mutex or mutex wrapper
[00:26:51] <john99> yes, but i ahve 2 exit point
[00:26:52] *** Joins: T`alZHeimeR (~TaZ@user/taz/x-9470768)
[00:26:59] <john99> 2 unlock point
[00:27:16] <anyone> not if you use a unique_lock/lock_guard
[00:27:54] <john99> the function for get the data of the database and for cose the cursor and 2 diferent
[00:27:59] <john99> close*
[00:28:26] <john99> the function for close the cursor and for open the cursor are 2 diferents
[00:29:34] <john99> and its a database cursor, i need be able to not end completly the cursor in one call becouse can be too much data
[00:30:10] <john99> and release after end too
[00:30:14] <john99> before end*
[00:32:13] <john99> ummm
[00:32:40] *** Quits: cart_man (~rynot@host-78-144-125-216.as13285.net) (Quit: Konversation terminated!)
[00:32:40] <john99> i suppose i can have a member boolean (cursor closed or not)
[00:33:24] <john99> ok, i think with taht is solved
[00:33:59] *** Quits: T`alZHeimeR (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[00:34:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:50] *** Joins: T`alZHeimeR (~TaZ@user/taz/x-9470768)
[00:37:25] *** Joins: Betal (~Betal@user/betal)
[00:43:05] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:43:30] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[00:47:21] *** Joins: niqqiel (~niqqiel@dynamic-78-8-212-64.ssp.dialog.net.pl)
[00:49:45] *** Joins: neet (~neet@136.41.96.251)
[01:04:43] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[01:05:39] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613) (Read error: Connection reset by peer)
[01:05:48] *** Quits: The_Jag (~The_Jag@host-79-52-45-220.retail.telecomitalia.it) (Quit: The_Jag)
[01:07:19] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613)
[01:08:20] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:10:00] *** Quits: magla (~gelignite@55d4d852.access.ecotel.net) (Quit: Stay safe!)
[01:11:15] *** Quits: aLeSD (~aLeSD@90.167.242.154) (Read error: Connection reset by peer)
[01:12:08] *** Quits: RazielXYZ (~Raziel@user/raziel) (Read error: Connection reset by peer)
[01:12:24] *** Joins: aLeSD (~aLeSD@host-95-239-36-248.retail.telecomitalia.it)
[01:20:55] *** Quits: zer0bitz (~zer0bitz@196.244.192.60) (Read error: Connection reset by peer)
[01:23:43] *** Quits: aLeSD (~aLeSD@host-95-239-36-248.retail.telecomitalia.it) (Read error: Connection reset by peer)
[01:24:54] *** Joins: aLeSD (~aLeSD@90.167.242.154)
[01:25:17] *** Quits: evelyette (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[01:27:07] *** Quits: aLeSD (~aLeSD@90.167.242.154) (Read error: Connection reset by peer)
[01:27:54] *** Joins: aLeSD (~aLeSD@host-95-239-36-248.retail.telecomitalia.it)
[01:30:46] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:37:27] *** Quits: neet (~neet@136.41.96.251) (Quit: Client closed)
[01:39:17] *** Joins: evelyette (~Eleanor@178.79.105.181)
[01:40:27] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:40:32] *** Quits: niqqiel (~niqqiel@dynamic-78-8-212-64.ssp.dialog.net.pl) (Quit: Client closed)
[01:40:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:40:37] *** ChanServ sets mode: +v npaperbot
[01:41:14] *** Joins: neet (~neet@136.41.96.251)
[01:48:33] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (Ping timeout: 268 seconds)
[01:58:42] *** xisop_ is now known as xisop
[02:00:47] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[02:01:26] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:04:13] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:07:32] *** Joins: bobb_ (~bobb_@dslb-088-065-176-249.088.065.pools.vodafone-ip.de)
[02:11:31] *** Quits: Brocker (~NoBody@user/brocker) (Read error: Connection reset by peer)
[02:11:41] *** Joins: Brocker (~NoBody@user/brocker)
[02:11:58] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:14:36] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[02:19:45] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[02:20:57] *** Joins: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net)
[02:21:17] *** Quits: Cahaan (~Cahaan@user/cahaan) (Ping timeout: 240 seconds)
[02:22:14] *** Joins: Cahaan (~Cahaan@user/cahaan)
[02:23:44] *** Quits: neet (~neet@136.41.96.251) (Quit: Client closed)
[02:26:30] *** Joins: rond_ (~rond_@2a01:115f:943:5e00:fd3e:9189:6c2:6793)
[02:26:46] <rond_> Hi! what's the best way to call lambda from itself?
[02:27:20] <rond_>     auto factorial2 = [](int n, auto&& factorial2) {
[02:27:20] <rond_>         if (n == 1)
[02:27:21] <rond_>             return n;
[02:27:21] <rond_>         return n * factorial2(n - 1, factorial2);
[02:27:22] <rond_>     };
[02:27:23] <rond_> is that a good way?
[02:31:08] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:32:52] *** Quits: pizdets (~pizdets@183.182.110.139) (Ping timeout: 250 seconds)
[02:33:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[02:33:38] *** Joins: pizdets (~pizdets@183.182.115.6)
[02:34:23] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[02:36:48] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f8a4:6db7:261b:aef9)
[02:37:20] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:37:56] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[02:42:12] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f8a4:6db7:261b:aef9) (Ping timeout: 268 seconds)
[02:43:07] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[02:44:34] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[02:45:33] *** Quits: rond_ (~rond_@2a01:115f:943:5e00:fd3e:9189:6c2:6793) (Quit: Client closed)
[02:45:35] *** Joins: neet (~neet@136.41.96.251)
[02:46:23] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[02:49:36] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:51:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:59:45] <PJBoy> !paste
[02:59:46] <nolyc> Paste your test case to https://wandbox.org/ or https://rextester.com/ or http://coliru.stacked-crooked.com/ or another pastebin that can compile code. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/c++/testcase
[03:00:00] <PJBoy> oh uh, nvm
[03:12:50] *** Joins: xkpe (xkpe@cpc115884-addl5-2-0-cust1413.6-3.cable.virginm.net)
[03:12:54] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1449:5971:863:633c)
[03:13:45] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:14:12] <xkpe> Constructor(auto value) : value(value) {} // is the forward inplicit in this case?
[03:14:16] *** Quits: Tokamak (~Tokamak@172.58.191.63) (Ping timeout: 268 seconds)
[03:14:48] <xkpe> Constructor(auto&& value) : value(value) {} // is the forward implicit in this case? (added universal reference)
[03:15:56] <PJBoy> nope
[03:18:30] <PJBoy> { S(MoveOnly{}); } using MoveOnly = unique_ptr<int>; struct S { MoveOnly p; S(auto&& p) : p(p) {} };
[03:18:30] <geordi> error: use of deleted function 'unique_ptr<_Tp, _Dp>::unique_ptr(const unique_ptr<_Tp, _Dp>&) [with _Tp = int; _Dp = default_delete<int>]'
[03:19:14] *** Joins: peeps (~peepsalot@openscad/peepsalot)
[03:20:28] *** Quits: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net) (Quit: Client closed)
[03:21:42] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 260 seconds)
[03:25:41] *** Quits: neet (~neet@136.41.96.251) (Ping timeout: 256 seconds)
[03:26:23] *** Joins: ckdCreations (~ckdCreati@2607:fb90:b27c:f7f8:c9bd:5a42:d7a8:23d8)
[03:27:19] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:32:30] *** Quits: bobb_ (~bobb_@dslb-088-065-176-249.088.065.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:32:54] *** Quits: robert_ (~hellspawn@47.203.169.95) (Ping timeout: 260 seconds)
[03:36:55] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[03:43:23] <john99> hi, its posible delcare oncle_flag as (no static) member of a class for ensure one method is called only one time?
[03:43:55] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[03:51:30] *** Joins: Teth|3 (~kvirc@cpe-71-79-34-84.cinci.res.rr.com)
[03:51:51] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:53:57] *** Quits: ckdCreations (~ckdCreati@2607:fb90:b27c:f7f8:c9bd:5a42:d7a8:23d8) (Ping timeout: 240 seconds)
[03:55:09] *** Quits: Teth (~kvirc@cpe-71-79-34-84.cinci.res.rr.com) (Ping timeout: 256 seconds)
[03:59:01] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[04:00:21] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[04:03:34] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[04:03:50] <mike18_> hi is that xor wrong here? https://ideone.com/b5Zql9
[04:06:53] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:14:22] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[04:15:04] <cbreak> mike18_: ^ is xor, yes.
[04:15:12] <mike18_> its wrong?
[04:15:28] <mike18_> it seems unsafe to use xor for that hash combine?
[04:16:14] <cbreak> not really.
[04:16:27] <cbreak> it's just not optimal to only shift by 1 bit
[04:16:28] <mike18_> whats the other way to achieve the same without xor?
[04:16:38] <anyone> multiplication
[04:16:47] <cbreak> I'd probably rotate instead of shift, by half the bits,
[04:16:51] <mike18_> but that seems to have increased latency ?
[04:16:53] <cbreak> anyone: multiplication is bad
[04:16:59] <cbreak> xor is better
[04:17:00] <anyone> so is xor
[04:17:11] <anyone> (i.e. so is "ONLY xor")
[04:18:16] <mike18_> where could there be an issue with that xor?
[04:18:28] <mike18_> bc its only shifted by 1 bit
[04:19:08] <cbreak> the std::hash functionality is bad
[04:19:14] <anyone> https://en.wikipedia.org/wiki/Hash_function#Properties
[04:19:24] <cbreak> hashing an integer is probably just an identity function
[04:19:30] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[04:19:41] *** Quits: rayw_ (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Read error: Connection reset by peer)
[04:19:51] <mike18_> depending on the size of row and col i could just shift the col 16 bits and xor...
[04:19:56] <mike18_> and avoid hash function
[04:20:03] <cbreak> so if you have as input 7 and 3 (which are 11 and 111 in binary), you don't make use of all the bits
[04:20:07] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[04:20:13] <cbreak> and you provoke collisions without need
[04:20:33] <mike18_> ok and workaround for that?
[04:20:37] <cbreak> you should instead shift by half the bits, and xor then
[04:20:58] <cbreak> but as I said above: I'd use rotation instead of shifting
[04:21:06] <mike18_> can you show how?
[04:21:25] <cbreak> rotate the values by half
[04:21:27] <cbreak> then xor
[04:21:42] <mike18_> rotate is faster than shift?
[04:21:46] <cbreak> no, of course not
[04:21:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:22:05] <cbreak> it's more than twice as expensive, unless it's equaly expensive
[04:23:29] <mike18_> you dont loose the upper half when rotate?
[04:23:48] <mike18_> lets say you have 32 bit and shift 16 bits - you loose upper 16 bits?
[04:24:45] *** Quits: evelyette (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[04:24:59] <cbreak> of course
[04:25:18] <cbreak> but think about the size of the "hash" value, not the size of the input
[04:25:28] <mike18_> so you have higher risk of collision when using shifting compared to rotate
[04:25:34] <mike18_> but rotate is slower
[04:26:18] *** Joins: rgrinberg (~textual@177.246.218.103)
[04:26:46] <mike18_> better use boost::hash_combine?
[04:27:03] <cbreak> mike18_: if you think the cost of the hash matters to you, then you don't understand the cost of the whole system
[04:27:06] <mike18_> and not write it yourself?
[04:27:29] <mike18_> cbreak: matters in the sense i need to understand it
[04:27:35] <cbreak> the cost of bad hashing is much worse, and the overhead of the unordered container itself
[04:33:49] *** Quits: T`alZHeimeR (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[04:35:16] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[04:35:38] *** Joins: T`alZHeimeR (~TaZ@user/taz/x-9470768)
[04:37:36] *** Joins: ferdna (~ferdna@user/ferdna)
[04:38:48] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:42:34] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:47:11] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[04:48:13] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Ping timeout: 250 seconds)
[04:51:07] *** Joins: malloy (~jimery@116.30.220.175)
[04:56:45] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[05:01:02] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[05:02:25] *** Joins: biberu (~biberu@user/biberu)
[05:03:17] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:06:17] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[05:11:54] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Quit: Leaving)
[05:15:22] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:15:44] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:17:28] *** Joins: malloy (~jimery@116.30.220.175)
[05:22:48] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:25:23] *** Quits: Pook (~Pook@2001:8a0:f996:1400:744f:ecfb:c981:a70f) (Quit: Leaving)
[05:25:43] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Changing host)
[05:25:43] *** Joins: highrate (~presonic@user/highrate)
[05:27:38] *** Joins: constxd (~brad@142.134.38.68)
[05:27:39] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[05:27:42] <constxd> kings
[05:28:04] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:28:10] <constxd> how do i develop on windows without wanting to commit die
[05:30:07] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[05:31:54] <kalven> commit die datei?
[05:36:11] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[05:40:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:40:36] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:40:36] *** ChanServ sets mode: +v npaperbot
[05:40:54] *** Quits: xkpe (xkpe@cpc115884-addl5-2-0-cust1413.6-3.cable.virginm.net) (Remote host closed the connection)
[05:42:21] <Alipha> mike18_: a simple hash function that does decently is `return row * 31 + col;` The number 31 is picked because it's prime and has a simple binary representation, 11111, making it faster to multiply by (or convert into shift and subtract). Or you might consider 8191 instead of 31. Of course, if it actually matters, you'd try out different hash functions with samples of your actual data
[05:44:38] <Alipha> mike18_: oh, hey, you're from mpls area! *waves*
[05:48:03] *** Joins: Burgundy (~yomon@5-12-10-45.residential.rdsnet.ro)
[05:55:54] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:56:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:57:33] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[05:57:50] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:59:50] *** Joins: malloy (~jimery@116.30.220.175)
[06:03:03] <norias> hmmm
[06:03:17] <norias> there was a time i thought i knew C++ reasonably well
[06:03:34] <norias> but the more i program with it, anymore, the less convinced i am that i know it
[06:03:54] <norias> i think i've really been doing C with some convenient things
[06:04:01] <constxd> as u should
[06:04:08] <norias> ha
[06:06:00] <constxd> you don't want to be using the whole language
[06:06:39] <leduyquang753> I am still looking forward to when I can finally say bye bye `#include`...
[06:07:01] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[06:08:07] <norias> constxd: i don't even know the whole language
[06:08:10] <norias> let alone use it
[06:08:22] <constxd> nobody does
[06:08:58] <norias> no doubt
[06:09:16] <constxd> just use the good parts
[06:09:18] <very_sneaky> i'm sure _someone_ does
[06:09:28] <very_sneaky> bjarne maybe
[06:09:30] <constxd> there aren't very many so it's not too hard
[06:09:40] <norias> i'm working on basically replicating IEEE754 floats just to _really_ learn them well
[06:09:50] <norias> and picking up more C++ techniques along the way
[06:10:09] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[06:10:20] <constxd> if there were a C++ equivalent of #cjeopardy i don't think anybody could get every question without having a copy of the standard beside them
[06:11:04] <norias> i learned c++98, and at the time I preferred C because I felt I could manage the syntax
[06:11:09] <constxd> nobody can remember all the esoteric details, even people on the standards committee
[06:11:17] <norias> i'm trying to get up to speed on modern C++
[06:11:21] <norias> and there's  a lot
[06:11:25] <constxd> yes
[06:11:27] <norias> but i see how useful it is, too
[06:11:38] <constxd> they really just said fuck it recently and started adding everything
[06:11:43] <norias> haha
[06:12:03] <norias> 'auto' messes with me tbh
[06:12:05] <constxd> C++14 was already a big shift from C++98, and C++23 is like an entirely different language
[06:12:06] *** Quits: john99 (~john99@199.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[06:12:40] <constxd> lol auto is up there with static in the running for most abused keyword
[06:13:38] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[06:14:04] <norias> that said
[06:14:13] <norias> here i am twiddling with unions and bit fields
[06:15:38] <leduyquang753> Be careful, type punning through union is allowed in C but not C++.
[06:16:11] <norias> what is that?
[06:16:51] <leduyquang753> I.e. interpreting the representation of a type as another type.
[06:17:00] <norias> hmmm
[06:17:11] <norias> isn't that kind of the point of a union?
[06:17:15] <leduyquang753> Not at all.
[06:17:47] <leduyquang753> Union just lets you store one of multiple options in a single memory region.
[06:18:09] <leduyquang753> Accessing the inactive member of a union is UB in C++.
[06:18:20] <norias> hmmm
[06:18:31] <norias> that's interesting
[06:18:44] <leduyquang753> If you want type punning, you can use `std::memcpy` or since C++2020 `std::bit_cast`.
[06:20:17] <norias> just read about it
[06:20:22] <norias> that's exactly what i'm doing
[06:20:53] <norias> oh, so with memcpy, i need to make a properly typed copy of the value?
[06:21:02] <leduyquang753> Yes.
[06:21:37] <norias> that doesn't sound too bad
[06:21:41] <norias> what's the bit_cast?
[06:21:54] <leduyquang753> Basically the more compact version of that action.
[06:21:55] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 256 seconds)
[06:23:07] <norias> right on
[06:23:21] *** Parts: pragma- (~chaos@user/pragmatic-chaos) (Bye!)
[06:23:26] <norias> yeah, this is what i mean about me basically writing C with a few extra things
[06:23:51] <leduyquang753> You might want to forget everything you got from C when you learn modern C++.
[06:23:57] <norias> seemingly
[06:26:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:27:17] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[06:30:11] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[06:35:25] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:48:02] *** Quits: rgrinberg (~textual@177.246.218.103) (Read error: Connection reset by peer)
[06:48:47] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:49:47] *** Joins: rgrinberg (~textual@177.246.216.115)
[06:59:45] *** Joins: eelstrebor_ (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:08:17] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[07:08:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:11:06] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:8634:97ff:fe6e:86ac) (Remote host closed the connection)
[07:12:39] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[07:14:12] *** Joins: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi)
[07:15:44] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[07:23:31] *** Quits: aLeSD (~aLeSD@host-95-239-36-248.retail.telecomitalia.it) (Remote host closed the connection)
[07:24:22] *** Joins: aLeSD (~aLeSD@host-95-239-36-248.retail.telecomitalia.it)
[07:27:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[07:28:37] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[07:29:02] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[07:31:37] *** Quits: eelstrebor_ (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 240 seconds)
[07:35:07] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-b8ac-26e7-b3fc-05ab.res6.spectrum.com) (Ping timeout: 268 seconds)
[07:37:49] *** Joins: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:39:05] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[07:40:38] *** Quits: Brainium (~brainium@user/brainium) (Quit: -a- IRC for Android 2.1.59)
[07:41:36] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:44:23] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[07:54:51] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[07:55:05] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:55:56] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[07:56:17] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[07:58:37] *** Quits: jsbach (~jsbach@2a01:c23:6441:8000:d454:d36d:3779:f890) (Ping timeout: 240 seconds)
[08:00:20] *** Joins: hinata (~hinata@2409:4042:2188:4e77:b804:803b:a72f:4008)
[08:00:53] *** Joins: smeso (~smeso@user/smeso)
[08:12:10] *** Joins: jsbach (~jsbach@2a01:c22:ad5e:8f00:fe26:e2d0:801a:dcba)
[08:12:19] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[08:12:46] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[08:15:02] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[08:16:28] *** Joins: millido (~millido@84.210.150.128)
[08:18:05] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[08:21:16] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:24:45] *** Joins: seninha (~seninha@user/seninha)
[08:28:51] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[08:29:16] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[08:34:45] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 276 seconds)
[08:35:08] *** Joins: teepee (~teepee@openscad/teepee)
[08:35:17] *** Quits: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi) (Ping timeout: 240 seconds)
[08:39:50] *** Joins: tesuji (~quassel@2a02:908:180:9500:a026:587a:2a4d:f3c)
[08:40:05] <tesuji> geordi: const char16_t* x = u"\x24B62";
[08:40:05] <geordi> error: hex escape sequence out of range
[08:41:06] <tesuji> I am suprised this doesnt compile. Shouldn't this yield a char16_t[3] since the utf16 representation requires two code units?
[08:43:10] <kalven> shouldn't you be using \u or \U ?
[08:47:16] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[08:48:15] <tesuji> kalven: oops, thanks
[08:49:21] *** Joins: malloy (~jimery@116.30.220.175)
[08:49:56] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community @ https://indiedevs.net/)
[08:49:57] *** Quits: hinata (~hinata@2409:4042:2188:4e77:b804:803b:a72f:4008) (Ping timeout: 240 seconds)
[09:02:07] *** Quits: rgrinberg (~textual@177.246.216.115) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:04:52] *** Joins: hinata (~hinata@157.33.34.200)
[09:05:39] *** bpalmer` is now known as bpalmer
[09:20:39] *** Quits: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[09:22:34] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1)
[09:23:40] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:27:22] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 268 seconds)
[09:28:07] <Alipha> leduyquang753: norias: really, you should do proper serialization so that you don't have to worry about things like endianness and padding
[09:30:03] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[09:30:28] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:32:57] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:40:18] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:40:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:40:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:40:37] *** ChanServ sets mode: +v npaperbot
[09:44:09] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:52:33] <lockywolf> How can I find the length of a braced initializer list?
[09:52:42] <lockywolf> Or the array that was created out of it.
[09:53:02] <leduyquang753> `size`.
[09:56:12] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[10:09:14] *** Joins: chenxuez_ (~chenxuezh@106.39.157.10)
[10:09:51] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Ping timeout: 256 seconds)
[10:11:50] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:17:01] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[10:18:55] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[10:21:04] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:24:47] *** Joins: Lazenca (~lazenca@user/lazenca)
[10:25:54] *** Quits: tesuji (~quassel@2a02:908:180:9500:a026:587a:2a4d:f3c) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:26:02] *** Quits: equinox[m] (~momoshiki@2001:470:69fc:105::fe92) (Quit: Client limit exceeded: 20000)
[10:38:02] *** Quits: nlatp[m] (~nlatpmatr@2001:470:69fc:105::1:4d1f) (Quit: Client limit exceeded: 20000)
[10:49:42] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: ville)
[10:56:31] *** Quits: sideshowbarker[m (~sideshowb@2001:470:69fc:105::9a16) (Quit: Client limit exceeded: 20000)
[11:01:04] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[11:01:21] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[11:05:02] *** Quits: testasty[m] (~testastym@2001:470:69fc:105::1:5b38) (Quit: Client limit exceeded: 20000)
[11:10:11] *** Joins: niqqiel (~niqqiel@dynamic-78-8-212-64.ssp.dialog.net.pl)
[11:10:51] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[11:14:16] *** Joins: evelyette (~Eleanor@178.79.105.181)
[11:15:29] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[11:15:47] *** Quits: bsffffff[m] (~bsffffffm@2001:470:69fc:105::1:4c49) (Quit: Client limit exceeded: 20000)
[11:15:52] *** Joins: namo (~nomo@95.87.208.95)
[11:20:28] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:26:54] *** Quits: sielicki (~sielickim@2001:470:69fc:105::f45) (Quit: Client limit exceeded: 20000)
[11:31:53] *** Quits: evelyette (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[11:32:29] *** Quits: kusanagi (~lkg@pool-108-30-117-35.nycmny.fios.verizon.net) (Changing host)
[11:32:29] *** Joins: kusanagi (~lkg@user/kusanagi)
[11:32:41] *** Joins: HvszrStykp (~X@81.171.62.86)
[11:33:13] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Changing host)
[11:33:13] *** Joins: ville (~ville@user/ville)
[11:42:06] *** Joins: rendar (~rendar@user/rendar)
[11:44:07] *** Joins: cart_man (~rynot@host-78-144-125-216.as13285.net)
[11:46:58] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[11:47:12] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[11:47:31] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.3)
[11:49:37] *** Quits: jsbach (~jsbach@2a01:c22:ad5e:8f00:fe26:e2d0:801a:dcba) (Ping timeout: 240 seconds)
[11:51:18] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1) (Read error: Connection reset by peer)
[11:52:19] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1)
[12:00:56] *** Quits: hinata (~hinata@157.33.34.200) (Quit: Leaving)
[12:01:48] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:04:25] *** Joins: aLeSD_ (~aLeSD@90.167.242.33)
[12:06:37] *** Quits: aLeSD (~aLeSD@host-95-239-36-248.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[12:16:11] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[12:19:16] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:25:57] *** Quits: cart_man (~rynot@host-78-144-125-216.as13285.net) (Quit: Konversation terminated!)
[12:26:15] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[12:28:35] *** Quits: tinloaf_ (~tinloaf@burnham.tinloaf.de) (Changing host)
[12:28:35] *** Joins: tinloaf_ (~tinloaf@user/tinloaf)
[12:31:19] *** Quits: tinloaf (~tinloaf@2a03:94e0:163c:57e:bc51:5c66:86e7:1) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[12:31:19] *** tinloaf_ is now known as tinloaf
[12:31:36] *** Joins: Guest8100 (~tinloaf@2a03:94e0:163c:57e:bc51:5c66:86e7:1)
[12:33:02] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[12:33:26] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:36:18] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:40:16] *** Quits: chozorho1 (~chozorho@2601:146:300:c30::9e95) (Quit: stay safe)
[12:41:16] *** Joins: xsperry (~xs@user/xsperry)
[12:46:54] *** Joins: stonkey (~stonkey@user/stonkey)
[12:51:56] *** Joins: plastico (~plastico@neomutt/plastico)
[12:51:59] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:59:57] *** Joins: hinata (~hinata@2409:4042:d1c:87d7:b804:803b:a72f:4008)
[13:02:42] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[13:11:52] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[13:17:29] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:19:37] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[13:19:38] *** Joins: nicko (~iClass@222.211.30.113)
[13:19:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[13:27:16] *** Quits: martiert (~martiert@ti0185q160-2775.bb.online.no) (Remote host closed the connection)
[13:28:28] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:31:48] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:33:52] *** Joins: rcoote (~rcoote@2a02:908:690:a140:a878:9303:6a1:9ebe)
[13:34:12] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[13:34:15] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:38:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:40:29] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:40:40] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:40:40] *** ChanServ sets mode: +v npaperbot
[13:41:34] *** Quits: chenxuez_ (~chenxuezh@106.39.157.10) ()
[13:44:12] *** Joins: martiert (~martiert@ti0185q160-2775.bb.online.no)
[13:46:44] *** Quits: aLeSD_ (~aLeSD@90.167.242.33) (Quit: Leaving)
[13:46:57] *** Joins: aLeSD_ (~aLeSD@90.167.242.33)
[13:49:11] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:50:21] *** Joins: xkuru (~xkuru@user/xkuru)
[13:50:48] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:55:04] *** Joins: evelyette (~Eleanor@178.79.105.181)
[13:57:46] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[13:58:37] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[13:58:47] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[13:59:21] *** Quits: peeps (~peepsalot@openscad/peepsalot) (Ping timeout: 256 seconds)
[13:59:54] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[14:02:53] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:04:51] *** Joins: gargus (~user@14-201-142-45.static.tpgi.com.au)
[14:06:08] *** Joins: unknow (~i.am@user/marlboro)
[14:07:13] *** Joins: frost (~frost@user/frost)
[14:07:37] *** Joins: bobb_ (~bobb_@dslb-088-065-184-211.088.065.pools.vodafone-ip.de)
[14:08:55] *** Joins: cosimone (~user@93-47-228-11.ip115.fastwebnet.it)
[14:09:46] <cosimone> question: why is it possible to initialize a std::string_view from a std::string? i can't find an appropriate constructor here https://en.cppreference.com/w/cpp/string/basic_string_view/basic_string_view
[14:09:46] *** Joins: equinox[m] (~momoshiki@2001:470:69fc:105::fe92)
[14:09:58] *** Joins: testasty[m] (~testastym@2001:470:69fc:105::1:5b38)
[14:09:58] *** Joins: bsffffff[m] (~bsffffffm@2001:470:69fc:105::1:4c49)
[14:10:01] <cosimone> is there some implicit conversion here going on which i'm not noticing?
[14:10:10] *** Joins: sideshowbarker[m (~sideshowb@2001:470:69fc:105::9a16)
[14:10:23] *** Joins: nlatp[m] (~nlatpmatr@2001:470:69fc:105::1:4d1f)
[14:10:35] *** Joins: sielicki (~sielickim@2001:470:69fc:105::f45)
[14:13:20] <anyone> It's either A::operator B(), or it's B(const A &).
[14:16:37] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:17:20] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[14:18:51] <cosimone> found it.  indeed, c++17 and newer provides direct conversion to string_view: https://en.cppreference.com/w/cpp/string/basic_string/operator_basic_string_view
[14:23:50] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[14:37:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[14:38:40] *** Joins: jsbach (~jsbach@46.183.103.8)
[14:39:56] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[14:43:59] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[14:44:32] *** Joins: AmR (~AmREiSa@156.199.20.227)
[14:45:13] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[14:51:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[14:53:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:00:14] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:8634:97ff:fe6e:86ac)
[15:00:33] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Quit: Leaving)
[15:05:47] *** Quits: hinata (~hinata@2409:4042:d1c:87d7:b804:803b:a72f:4008) (Remote host closed the connection)
[15:06:11] *** Joins: hinata (~hinata@2409:4042:d1c:87d7:b804:803b:a72f:4008)
[15:10:03] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[15:10:28] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[15:16:52] *** Joins: u0_a391 (~u0_a391@2600:380:a400:48c:e872:48ef:7ec9:1791)
[15:16:57] *** Quits: jsbach (~jsbach@46.183.103.8) (Ping timeout: 240 seconds)
[15:17:58] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.145)
[15:18:51] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:20:49] *** Quits: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Ping timeout: 256 seconds)
[15:21:10] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.145) (Read error: Connection reset by peer)
[15:29:27] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.145)
[15:33:19] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[15:38:54] *** Joins: beagles (~beagles@142.162.188.116)
[15:43:59] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:46:41] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:9d65:6181:29ef:f807)
[15:49:07] *** Joins: supernova (~quassel@2405:9800:ba11:6207:ec5a:322d:47ae:cab)
[15:51:11] *** Joins: seninha (~seninha@user/seninha)
[15:52:04] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.3)
[15:52:30] *** Joins: Brainium (~brainium@user/brainium)
[15:53:46] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:54:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:54:49] *** lunix00 is now known as lunix00-away
[15:55:19] *** Quits: lunix00-away (~lunix00@2804:14c:6321:900d:9d65:6181:29ef:f807) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:57:22] *** Joins: tsujp84 (~tsujp@sourcehut/user/tsujp)
[15:58:10] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:9d65:6181:29ef:f807)
[15:59:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:01:06] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:06:30] *** Joins: constxo (~brad@142.134.38.68)
[16:10:40] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[16:11:37] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:11:55] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:14:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:15:14] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:18:14] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[16:20:06] *** u0_a391 is now known as Kit
[16:21:25] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[16:25:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:25:38] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[16:26:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:26:48] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:26:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:27:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[16:28:35] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3c47:5b36:444:8126)
[16:28:35] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3c47:5b36:444:8126) (Changing host)
[16:28:35] *** Joins: skapata (~Skapata@user/skapata)
[16:28:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:29:23] <ville> wonder what's the reason for the operator rather than ctor...
[16:30:28] <ville> seems somewhat uncharacteristic, so makes me suspect it's covering over some corner case
[16:31:22] <cbreak> ville: string view header doesn't need to know about strings that way
[16:31:34] <cbreak> in particular it doesn't have to #include <string>
[16:32:21] <ville> right, was just discovering that looking at string_view header
[16:33:10] <ville> but coulda also just forward declared basic_string template... but that would drag in the default allocator?
[16:33:29] <PJBoy> [P0254]
[16:33:29] <npaperbot> P0254R2: [Library Evolution] Integrating std::string_view and std::string <https://wg21.link/p0254r2> (by Marshall Clow) (2016-06-24) (Related: https://wg21.link/lewg194)
[16:34:22] *** Joins: Atque (~Atque@user/atque)
[16:34:59] <ville> ah well more nonsense because of c++'s class and object model
[16:35:34] <PJBoy> that's not what I got out of the paper
[16:35:44] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:36:39] <PJBoy> what I got was "stuff should be convertible to string_view, it doesn't matter if it's a std::string, a QString, a BusinessString..."
[16:37:28] <PJBoy> so making a conversion operator from string to string_view would seem to place the responsibility for this conversion in the right place
[16:42:26] *** Joins: aLeSD__ (~aLeSD@host-82-55-159-190.retail.telecomitalia.it)
[16:44:04] *** Quits: aLeSD__ (~aLeSD@host-82-55-159-190.retail.telecomitalia.it) (Remote host closed the connection)
[16:44:37] *** Quits: aLeSD_ (~aLeSD@90.167.242.33) (Ping timeout: 240 seconds)
[16:45:17] *** Quits: rcoote (~rcoote@2a02:908:690:a140:a878:9303:6a1:9ebe) (Ping timeout: 240 seconds)
[16:46:22] *** Joins: aLeSD__ (~aLeSD@host-82-55-159-190.retail.telecomitalia.it)
[16:46:22] *** Quits: aLeSD__ (~aLeSD@host-82-55-159-190.retail.telecomitalia.it) (Remote host closed the connection)
[16:46:36] *** Joins: aLeSD__ (~aLeSD@host-82-55-159-190.retail.telecomitalia.it)
[16:51:31] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c48f:a6ee:6684:c8b)
[16:53:23] *** Quits: aLeSD__ (~aLeSD@host-82-55-159-190.retail.telecomitalia.it) (Remote host closed the connection)
[17:05:58] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:7792:8cc:85fa:5f72)
[17:05:59] *** Quits: hinata (~hinata@2409:4042:d1c:87d7:b804:803b:a72f:4008) (Quit: Leaving)
[17:06:09] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:06:21] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:7792:8cc:85fa:5f72) (Remote host closed the connection)
[17:06:42] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Quit: Leaving)
[17:08:01] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:9d65:6181:29ef:f807) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:08:04] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:2ccb:9d76:6760:4ca1)
[17:08:27] <constxo> kings
[17:09:14] <constxo> anyone got any tips for getting VS projects working in vim/neovim or should i just give up
[17:10:13] <constxo> seems like clangd doesn't really work out of the box
[17:10:28] <ville> PJBoy: some of the reasons why you end up with that. classes are closed at };, can't add "member" functions afterward. hence to not drag in std::string into string_view header for ctor...
[17:10:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:11:28] *** Joins: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de)
[17:12:15] <PJBoy> that sounds like a justification for why we have conversion operators whatsoever
[17:13:02] <PJBoy> but then we'd still need them for conversion to builtin types
[17:13:57] <ville> the conversion operator still has to be a member
[17:14:26] <PJBoy> yeah of the class being converted
[17:14:29] <ville> classes are closed at };... the c++ model just sucks.
[17:15:34] <PJBoy> I don't see what would be so great about being able to add member functions to classes in places other than the class definition
[17:15:54] <PJBoy> meanwhile conversion operators need to exist anyway
[17:20:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: nlatp[m] (~nlatpmatr@2001:470:69fc:105::1:4d1f) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Ping timeout: 240 seconds)
[17:21:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[17:22:06] *** Quits: gargus (~user@14-201-142-45.static.tpgi.com.au) (Quit: Leaving)
[17:22:44] <wib_jonas> PJBoy: mostly so that you can have the definitions of those functions in separate compilation units for separate compilation so that you can recompile faster when you modify some of the definitions. this only matter for large classes of course, but large classes exist.
[17:23:16] <PJBoy> you can already have definitions of functions in separate compilation units
[17:23:21] *** Joins: caramel_ (~caramel@user/caramel)
[17:23:28] <wib_jonas> yes, I know
[17:23:28] *** Joins: pulse (~pulse@user/pulse)
[17:23:45] <PJBoy> that's besides the point
[17:24:08] <wib_jonas> but when you modify those, you may want to add more private functions to break apart a member function to multiple smaller ones
[17:25:13] <ville> PJBoy: you wouldn't be stuck with the interface the author of a data type came up with and/or choosing between syntax. plain code or generic code
[17:25:34] <PJBoy> being stuck with the interface of a class makes sense though
[17:25:56] <PJBoy> wouldn't you rather know what a class does with certainty?
[17:26:37] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 256 seconds)
[17:26:52] <PJBoy> and to be able to extract that class and use it elsewhere without having to locate and copy random other injections into that class
[17:27:44] *** Quits: geeknix (~pi@2001:e68:5432:307:f6b7:9845:4bce:2869) (Ping timeout: 268 seconds)
[17:27:46] <PJBoy> the private member function thing you can work around with static functions in the impl file
[17:28:04] <PJBoy> well, to a point
[17:28:42] <PJBoy> private functions make up a class' interface too
[17:29:08] <PJBoy> not that that's necessarily a good thing
[17:29:35] *** Joins: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs)
[17:29:51] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[17:29:52] <ville> PJBoy: yes i'd make that trade any day
[17:30:08] <PJBoy> :/
[17:30:15] *** Joins: ckdCreations (~ckdCreati@2607:fb90:b2a5:d3bb:c9bd:5a42:d7a8:23d8)
[17:30:20] <PJBoy> you can make a derived class for your extra functionality
[17:30:23] <PJBoy> and then it will be clear
[17:31:19] <PJBoy> your approach sounds like 100% spaghetti
[17:33:47] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[17:35:17] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[17:36:36] *** Joins: nlatp[m] (~nlatpmatr@2001:470:69fc:105::1:4d1f)
[17:36:51] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:40:20] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[17:40:29] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:40:39] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:40:39] *** ChanServ sets mode: +v npaperbot
[17:44:07] *** rpav_ is now known as rpav
[17:46:08] *** Joins: Sadale (~Sadale@user/sadale)
[17:46:52] *** Quits: dextaa (~DV@user/dextaa) (Quit: Leaving)
[17:47:48] *** Joins: dextaa (~DV@user/dextaa)
[17:48:17] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:2ccb:9d76:6760:4ca1) (Ping timeout: 240 seconds)
[17:48:41] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[17:50:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:50:33] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:51:58] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:52:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:53:43] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[17:54:12] *** Quits: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[17:54:49] *** Joins: Sadale (~Sadale@user/sadale)
[18:00:56] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:adff:3ef8:aded:bb26)
[18:01:27] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:02:44] *** Joins: unyu (~pyon@user/pyon)
[18:11:05] *** Joins: geeknix (~pi@2001:e68:5432:307:f6b7:9845:4bce:2869)
[18:12:18] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:13:29] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:1347:a743:e3e4:9207)
[18:13:30] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:1347:a743:e3e4:9207) (Changing host)
[18:13:30] *** Joins: RoKenn (~RoKenn@user/rokenn)
[18:16:58] *** Quits: cosimone (~user@93-47-228-11.ip115.fastwebnet.it) (Read error: Connection reset by peer)
[18:22:44] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[18:23:34] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:adff:3ef8:aded:bb26) (Quit: Leaving)
[18:23:50] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:5dc2:1a32:5950:97d4)
[18:25:24] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[18:26:07] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:30:54] *** Joins: zer0bitz (~zer0bitz@196.244.192.57)
[18:31:01] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1449:5971:863:633c) (Ping timeout: 240 seconds)
[18:34:21] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Ping timeout: 268 seconds)
[18:34:24] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[18:35:19] *** Joins: cosimone (~user@93-47-228-11.ip115.fastwebnet.it)
[18:35:41] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[18:40:22] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[18:45:01] *** Joins: roadt (~roadt@60.166.72.94)
[18:45:03] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:46:05] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[18:46:14] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:46:49] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[18:49:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[18:49:56] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[18:51:37] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[18:52:08] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[18:53:09] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Quit: No Ping reply in 180 seconds.)
[18:53:57] *** Joins: MajorBiscuit (~MajorBisc@c-001-023-057.client.tudelft.eduvpn.nl)
[18:54:35] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:57:12] *** Joins: ketiv (~ketiv@92.40.194.87.threembb.co.uk)
[18:57:15] <ketiv> Hello World
[18:57:18] *** Joins: Tokamak (~Tokamak@172.58.191.63)
[19:01:31] *** Quits: ketiv (~ketiv@92.40.194.87.threembb.co.uk) (Remote host closed the connection)
[19:01:49] *** Joins: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi)
[19:01:51] *** Joins: ketiv (~ketiv@92.40.194.87.threembb.co.uk)
[19:05:03] *** Quits: ketiv (~ketiv@92.40.194.87.threembb.co.uk) (Remote host closed the connection)
[19:05:29] *** Joins: ketiv (~ketiv@92.40.194.87.threembb.co.uk)
[19:06:19] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:06:24] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:9b8f:235f:db7d:55a7)
[19:08:08] *** Joins: ketiv_ (~ketiv@92.40.192.93.threembb.co.uk)
[19:08:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[19:10:19] *** Quits: ketiv (~ketiv@92.40.194.87.threembb.co.uk) (Ping timeout: 256 seconds)
[19:13:37] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:9b8f:235f:db7d:55a7) (Ping timeout: 240 seconds)
[19:15:26] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[19:16:56] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:19:25] *** Joins: pulse (~pulse@user/pulse)
[19:19:54] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:22:34] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Quit: Leaving)
[19:23:12] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:23:29] *** Quits: ketiv_ (~ketiv@92.40.192.93.threembb.co.uk) (Ping timeout: 256 seconds)
[19:26:03] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5)
[19:26:27] *** Joins: ketiv (~ketiv@92.40.192.86.threembb.co.uk)
[19:29:15] *** Parts: xsperry (~xs@user/xsperry) ()
[19:29:18] *** Joins: xsperry (~xs@user/xsperry)
[19:31:09] *** Joins: jollygood2 (~bc8147f2@cerf.good1.com)
[19:31:29] <jollygood2> hi. what would be syntactically most efficient way of writing something like this in C++?  list_of_tuples = [("one", 1), ("two", 2), ..].  I need to 1) print all the strings. 2) switch on a string and return an int
[19:33:03] <jollygood2> (int values aren't 1, 2, etc, but more random, so I can't take advantage of string's position in the array)
[19:34:57] *** Quits: ckdCreations (~ckdCreati@2607:fb90:b2a5:d3bb:c9bd:5a42:d7a8:23d8) (Ping timeout: 240 seconds)
[19:35:20] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:36:11] <Alipha> jollygood2: what order do you need to print the strings in? The same order you specify? Alphabetically? It doesn't matter?
[19:36:42] <jollygood2> it doesn't matter. same order is fine
[19:37:13] <jollygood2> efficiency also doesn't matter, I just want it to be as concise as possible. list is known at compile time
[19:37:25] *** Joins: ckdCreations (~ckdCreati@147.55.133.130)
[19:37:27] <Eelis> "syntactically most efficient" - is this a weirdo way of saying "shortest" ?
[19:37:35] <jollygood2> yeah :P
[19:37:56] <Eelis> ok, thanks
[19:38:31] <jollygood2> I got this in C, I forgot it can be that concise in C, and same thing should work in C++. struct { int num; const char *str; } pairs[] = {{1, "foo"}, {2, "bar"}, {3, "baz"}};
[19:39:20] <Alipha> jollygood2: I'd probably go with a map: std::map<std::string, int> items = {{"one", 34}, {"two", 77}};
[19:39:47] <jollygood2> nice, didn't know that would work, map literals
[19:39:53] <Alipha> items["one"] would return 34
[19:40:33] <Alipha> for(auto &[key, value] : items) {} // to loop over the map
[19:40:49] <Eelis> yep, and you can even replace std::map with something like std::unordered_map or boost::dense_hash_map and keep the same syntax
[19:42:15] <Eelis> (or boost::flat_map)
[19:43:33] <Alipha> std::unordered_map would be a "hash table" and generally more efficient than std::map for large datasets. std::map keeps the elements in sorted order though
[19:43:54] <PJBoy> more efficient amortized :p
[19:44:42] <jimbzy> "On average..."
[19:44:51] <Eelis> the fact that the questioner asked about syntax suggests that the number of elements will be tiny though, in which case a flat map might perform best because even calculating a hash value will be more expensive than doing a handful of comparisons
[19:45:14] <PJBoy> true that
[19:48:49] <BurumaSerafuku> std::flat_map
[19:48:50] <BurumaSerafuku> gimme
[19:52:47] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[19:53:49] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.145) (Ping timeout: 240 seconds)
[20:02:15] *** Joins: netpipe (~netpipe@user/netpipe)
[20:05:55] <Oxyd> The questioner explicitly asked for the shortest way under the condition that efficiency doesn't matter. So clearly the answer is std::map because it has the shortest name.
[20:06:06] *** Quits: tsujp84 (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:06:06] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:06:53] <anyone> {using namespace std;}
[20:06:54] <geordi>  
[20:07:44] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.214)
[20:09:35] *** Joins: neet (~neet@136.49.142.112)
[20:09:53] *** Joins: smach (~savio@177.12.45.228)
[20:10:14] *** Quits: smach (~savio@177.12.45.228) (Remote host closed the connection)
[20:10:39] *** Joins: smach (~savio@177.12.45.228)
[20:12:32] *** Quits: Tokamak (~Tokamak@172.58.191.63) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:14:49] *** Joins: Tokamak (~Tokamak@172.58.191.63)
[20:24:56] *** Joins: LucaTM (~LucaTM@user/lucatm)
[20:25:17] *** Quits: Tokamak (~Tokamak@172.58.191.63) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:41] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 256 seconds)
[20:26:18] *** Quits: smach (~savio@177.12.45.228) (Remote host closed the connection)
[20:27:23] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[20:27:34] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[20:28:09] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.4)
[20:29:13] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.214) (Ping timeout: 256 seconds)
[20:30:55] *** Quits: neet (~neet@136.49.142.112) (Quit: Client closed)
[20:31:07] *** Joins: neet (~neet@136.49.142.112)
[20:31:56] *** Joins: smach (~savio@177.12.45.228)
[20:32:16] *** Joins: u0_a391 (~u0_a391@64.85.173.130)
[20:35:57] *** Quits: Kit (~u0_a391@2600:380:a400:48c:e872:48ef:7ec9:1791) (Ping timeout: 240 seconds)
[20:52:07] *** u0_a391 is now known as kit
[20:52:32] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[20:52:56] *** Joins: slidercrank (~slidercra@user/slidercrank)
[20:58:00] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Ping timeout: 256 seconds)
[20:59:15] *** Quits: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de) (Ping timeout: 256 seconds)
[21:06:17] *** Joins: john99 (~john99@101.246.103.34.bc.googleusercontent.com)
[21:09:49] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[21:11:18] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:5dc2:1a32:5950:97d4) (Quit: Client closed)
[21:21:01] *** Quits: wuldor2 (~daddy@84.71.242.153) (Remote host closed the connection)
[21:21:13] *** Quits: AmR (~AmREiSa@156.199.20.227) (Quit: Konversation terminated!)
[21:21:43] *** Joins: chris64 (~chris@user/chris64)
[21:30:03] *** Joins: Tokamak (~Tokamak@172.58.191.63)
[21:30:37] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[21:31:23] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[21:31:40] *** Joins: chozorho (~chozorho@2601:146:300:c30::58f0)
[21:36:19] *** Joins: AmR (~AmREiSa@156.199.28.131)
[21:36:52] *** Quits: MajorBiscuit (~MajorBisc@c-001-023-057.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:37:24] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:40:30] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:40:41] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:40:41] *** ChanServ sets mode: +v npaperbot
[21:41:37] *** Quits: neet (~neet@136.49.142.112) (Ping timeout: 256 seconds)
[21:42:46] *** Joins: magla (~gelignite@55d453bf.access.ecotel.net)
[21:49:31] *** Quits: Tokamak (~Tokamak@172.58.191.63) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:50:13] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c16:538b:70f3:1b3)
[21:50:47] *** Quits: john99 (~john99@101.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[21:55:43] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[21:57:53] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:58:05] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[22:00:28] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:00:47] *** notevil_ is now known as NOTevil
[22:01:37] *** Quits: supernova (~quassel@2405:9800:ba11:6207:ec5a:322d:47ae:cab) (Ping timeout: 240 seconds)
[22:12:02] *** Joins: Tokamak (~Tokamak@172.58.191.63)
[22:26:24] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:26:49] *** Quits: ville (~ville@user/ville) (Quit: ville)
[22:27:06] *** Joins: ville (~ville@user/ville)
[22:30:23] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[22:30:42] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[22:33:45] *** Quits: ketiv (~ketiv@92.40.192.86.threembb.co.uk) (Ping timeout: 256 seconds)
[22:33:48] *** Joins: gareppa (~gareppa@user/gareppa)
[22:35:35] *** Joins: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net)
[22:35:42] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:36:14] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:38:42] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[22:38:48] *** Joins: ketiv (~ketiv@92.40.192.83.threembb.co.uk)
[22:38:57] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:01:20] *** Joins: vicfred (~vicfred@user/vicfred)
[23:02:12] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:10:35] *** Joins: u0_a391 (~u0_a391@2600:380:a400:48c:cd2a:f3c2:31a6:1f35)
[23:10:55] *** u0_a391 is now known as Kit_
[23:14:33] *** Quits: kit (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[23:15:05] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c48f:a6ee:6684:c8b) (Ping timeout: 252 seconds)
[23:18:03] *** Joins: Pook (~Pook@2001:8a0:f996:1400:a0d2:8e03:e914:5a5a)
[23:22:29] *** Quits: rb (~augh@theguntretort.com) (Ping timeout: 256 seconds)
[23:22:32] *** Joins: rwb (~augh@theguntretort.com)
[23:24:09] *** rwb is now known as rb
[23:25:27] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[23:26:17] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5) (Ping timeout: 240 seconds)
[23:27:38] *** Joins: stonkey (~stonkey@user/stonkey)
[23:30:25] *** Quits: ketiv (~ketiv@92.40.192.83.threembb.co.uk) (Ping timeout: 256 seconds)
[23:34:25] *** Quits: rb (~augh@theguntretort.com) (Remote host closed the connection)
[23:35:53] *** Joins: rwb (~augh@theguntretort.com)
[23:39:15] *** Joins: Betal (~Betal@user/betal)
[23:42:12] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[23:42:37] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:43:17] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[23:44:29] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[23:44:34] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Remote host closed the connection)
[23:45:30] *** Quits: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net) (Quit: Konversation terminated!)
[23:45:30] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:ac88:7faa:71ea:c5f2)
[23:45:35] *** u0_a391 is now known as Kit
[23:47:17] *** Quits: Kit_ (~u0_a391@2600:380:a400:48c:cd2a:f3c2:31a6:1f35) (Ping timeout: 240 seconds)
[23:50:23] *** Quits: smach (~savio@177.12.45.228) (Ping timeout: 256 seconds)
[23:52:44] *** Quits: Teukka (~teukka@user/Teukka) (Read error: Connection reset by peer)
[23:56:18] *** Joins: Teukka (~teukka@84-216-41-232.customers.ownit.se)
[23:56:18] *** Quits: Teukka (~teukka@84-216-41-232.customers.ownit.se) (Changing host)
[23:56:18] *** Joins: Teukka (~teukka@user/Teukka)
[23:57:26] *** Quits: letto (~letto@188.25.113.229) (Quit: Konversation terminated!)
[23:58:04] *** Joins: letto (~letto@188.25.113.229)
[23:58:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
