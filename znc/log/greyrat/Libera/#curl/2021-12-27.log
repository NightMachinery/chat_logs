[00:40:53] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[01:10:00] *** Quits: magla (~gelignite@55d4171c.access.ecotel.net) (Quit: Stay safe!)
[01:12:37] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:23:19] *** Quits: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:36:40] *** Quits: spare (~5n3jv5wo4@user/spareproject) (Remote host closed the connection)
[03:31:59] *** Joins: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38)
[03:45:49] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[03:53:12] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[04:14:18] *** Quits: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38) (Ping timeout: 260 seconds)
[05:42:51] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:05:33] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:43:59] *** Joins: Vonter (~Vonter@user/vonter)
[07:02:18] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:13:55] *** Joins: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38)
[07:33:17] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[07:33:37] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:25:28] *** Quits: sam_ (~sam@gentoo/developer/sam) (Quit: ZNC - http://znc.in)
[08:55:50] *** Joins: sam_ (~sam@gentoo/developer/sam)
[09:34:29] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:40:48] *** Quits: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38) (Read error: Connection reset by peer)
[09:41:15] *** Quits: p-i- (~Ohmu@2403:6200:8978:eb29:a19b:c4d4:1e43:9f1f) (Remote host closed the connection)
[09:42:04] *** Joins: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38)
[09:42:50] *** Joins: spare (~ntorb4m7l@user/spareproject)
[09:54:49] *** Joins: sayan (uid15285@dgplug/sayan)
[09:55:32] *** Quits: spare (~ntorb4m7l@user/spareproject) (Remote host closed the connection)
[09:57:03] *** Joins: p-i- (~Ohmu@2001:44c8:4610:1777:d479:2f2d:3aaa:a58d)
[09:57:23] *** Joins: spare (~ntorb4m7l@user/spareproject)
[10:00:21] *** Quits: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38) (Read error: Connection reset by peer)
[10:01:29] *** Joins: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38)
[10:02:29] *** Quits: spare (~ntorb4m7l@user/spareproject) (Remote host closed the connection)
[10:03:09] *** Joins: spare (~ntorb4m7l@user/spareproject)
[10:07:45] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 276 seconds)
[10:09:29] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:23:41] *** Quits: p-i- (~Ohmu@2001:44c8:4610:1777:d479:2f2d:3aaa:a58d) (Remote host closed the connection)
[10:36:58] *** Joins: p-i- (~Ohmu@2403:6200:8978:eb29:85a4:2121:8f52:ab6b)
[11:16:20] *** Quits: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38) (Remote host closed the connection)
[11:18:06] *** Joins: rgrinberg (~textual@177.246.221.117)
[11:50:59] *** Quits: spare (~ntorb4m7l@user/spareproject) (Remote host closed the connection)
[11:51:08] *** Joins: spare (~ntorb4m7l@user/spareproject)
[11:51:30] *** Joins: keypushe- (~keypusher@user/keypusher)
[11:51:38] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 260 seconds)
[11:54:33] *** keypushe- is now known as keypusher
[12:05:36] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[12:07:47] *** Joins: Vonter (~Vonter@user/vonter)
[12:08:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[12:21:24] *** Quits: spare (~ntorb4m7l@user/spareproject) (Remote host closed the connection)
[12:22:34] *** Joins: spare (~ntorb4m7l@user/spareproject)
[12:24:34] *** Quits: sayan (uid15285@dgplug/sayan) (Quit: Connection closed for inactivity)
[12:30:06] *** Quits: spare (~ntorb4m7l@user/spareproject) (Ping timeout: 276 seconds)
[12:30:10] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:30:13] *** Joins: spare (~ntorb4m7l@user/spareproject)
[12:41:58] *** Quits: rgrinberg (~textual@177.246.221.117) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:22:59] *** Joins: callmepk (~callmepk@wslu/callmepk)
[13:51:04] *** Quits: bmr (~bmr@user/bmr) (Quit: WeeChat 3.3)
[13:53:42] *** Joins: bmr (~bmr@user/bmr)
[14:36:45] *** Quits: spare (~ntorb4m7l@user/spareproject) (Remote host closed the connection)
[14:36:54] *** Joins: spare (~ntorb4m7l@user/spareproject)
[14:52:31] *** Quits: spare (~ntorb4m7l@user/spareproject) (Remote host closed the connection)
[14:54:08] *** Joins: spare (~ntorb4m7l@user/spareproject)
[15:04:36] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 240 seconds)
[15:04:44] *** Joins: keypushe- (keypusher@user/keypusher)
[15:08:00] *** keypushe- is now known as keypusher
[15:50:39] *** Quits: spare (~ntorb4m7l@user/spareproject) (Remote host closed the connection)
[15:51:04] *** Joins: spare (~ntorb4m7l@user/spareproject)
[16:09:50] *** Joins: taupiqueur (~taupiqueu@144.246.204.77.rev.sfr.net)
[16:50:02] *** Joins: kdudka (~kdudka@77.161.broadband17.iol.cz)
[16:50:25] *** Quits: kdudka (~kdudka@77.161.broadband17.iol.cz) (Client Quit)
[17:02:42] *** Quits: spare (~ntorb4m7l@user/spareproject) (Remote host closed the connection)
[17:33:50] <Piru> https://tensorthings.com/2021/12/27/regression-with-the-c64/
[17:40:25] <p-i-> I'm invoking curl-multi to make 3 simul. POSTs, verbose output is: https://bpa.st/SE2Q which is showing that each of the 3 POSTs is going through cloudflare.
[17:40:36] <p-i-> This may be a non-curl issue, I'm not sure how to invistigate.
[17:41:02] <p-i-> But is there any way to "reuse" a connection to avoid this cloudflare process each POST?
[17:41:26] <p-i-> Is there anything I can do from the libcurl end?
[17:42:51] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:47:59] <p-i-> Piru: Maybe we need to keep escsalating the complexity until we can get AI to build simple systems again...
[17:53:38] <Piru> p-i-: "reuse" in what sense? to me it looks like it does reuse the connection just fine
[18:00:47] <Piru> p-i-: in case you want to restrict the number of simultanous connections you might want to try specifying https://curl.se/libcurl/c/CURLMOPT_MAX_TOTAL_CONNECTIONS.html to 1.
[18:01:41] <Piru> p-i-: but I don't know what your goals are, so this might be the wrong approach
[18:02:54] <Piru> p-i-: it also might be that you just need to set CURLMOPT_PIPELINING to CURLPIPE_MULTIPLEX
[18:03:12] <p-i-> I'm trying to bypass the cloudflare step.
[18:03:30] <p-i-> It seems odd to me that in a curl-multi, it's still putting each request through cloudflare.
[18:03:55] <p-i-> I thought that once a connection was "authenticated" by cloudflare, further authentication was not necessary.
[18:04:41] <Piru> I do not understand. what connections to cloudflare?
[18:13:05] *** Joins: magla (~gelignite@55d4dfc1.access.ecotel.net)
[18:13:38] <p-i-> I've chatted with the server admins, it seems every incoming HTTP request is intercepted by cloudflare, and there's nothing I can do about it.
[18:15:43] <p-i-> - - - 
[18:15:49] <p-i-> https://bpa.st/7MOQ <-- is this curl-multi code correct?
[18:16:17] <p-i-> It works, but is it necessary to have that `curl_multi_wait` in the loop?
[18:16:36] <moparisthebest> From your POV cloudflare is nothing special, just an http server right?
[18:16:52] <p-i-> Wouldn't it be more efficient to do all the `curl_multi_perform`s and then do the `curl_multi_wait`?
[18:19:04] <Piru> no. don't do that
[18:19:47] *** Quits: taupiqueur (~taupiqueu@144.246.204.77.rev.sfr.net) (Quit: taupiqueur)
[18:20:11] <Piru> that'd only waste cpu time when there is nothing to do
[18:20:36] <p-i-> I'm trying to get all curl-multi HTTP POSTs to send as soon as possible.
[18:20:42] <p-i-> Is there any way to improve on that code?
[18:21:28] <Piru> well the limiting factor is the server
[18:21:50] <Piru> if you just send your requests as soon as possible there isn't anything more you can do
[18:22:10] <p-i-> But what exactly is the purpose of curl_multi_wait inside that loop
[18:22:18] <p-i-> What do I need to wait _for_?
[18:22:29] <Piru> the actual tranfers happening.
[18:22:37] <p-i-> If I'm waiting for some server response for each POST, isn't that inefficient?
[18:22:50] <p-i-> Shouldn't I be performing all immediately, and then waiting?
[18:23:07] <Piru> the loop will handle all ongoing transfers
[18:23:21] <Piru> whichever number you have ongoing
[18:23:42] <Piru> it does it as fast as the server will handle them
[18:24:29] <p-i-> I still don't know what curl_multi_wait is waiting FOR in this loop
[18:24:55] <Piru> for anything to happen that needs work to be performed
[18:25:11] <p-i-> some flag/event/state-change from libcurl I guess. Maybe it sets a flag when it is ready to handle another POST?
[18:25:13] <Piru> you know most of the time nothing actually happens since there is no incoming data from the connections
[18:26:26] <Piru> internally that code actually uses select() on the network sockets (or similar more modern interface, it depends a bit)
[18:26:53] <Piru> but roughly speaking. whenever there is something to act upon it will wake up
[18:27:23] <Piru> the actual actions themselves are performed by the curl_multi_perform
[18:28:12] <Piru> there are some blog posts that try to explain how this all works internally. it is a bit complicated, so it might not really help reading it, but here goes: https://daniel.haxx.se/blog/2021/05/10/the-libcurl-transfer-state-machine/
[18:28:54] <Piru> there's also a presentation (youtube link in the post)
[18:29:26] <p-i-> haha just got badger's flow-diag https://daniel.haxx.se/blog/wp-content/uploads/2021/05/slide-transfer-state-machine.jpg
[18:31:23] <Piru> basically the whole point of libcurl is to abstract away all that internal magic and give very simple and fairly genertic interface to it all
[18:32:54] <p-i-> watching the vid, thanks for the link!
[18:32:59] <Piru> curl_multi_perform + curl_multi_wait is just advancing that state machine. it's separated like that so your application can do some other work too
[18:34:13] <Piru> say remove completed transfers and act on the input received, add new connections etc
[18:43:41] <Piru> ah just to note: curl_multi_wait won't wait at all if there is work to do
[18:44:13] <Piru> so you gain nothing by removing it from the loop. only make the thread waste cycles spinning doing nothing
[18:48:17] <p-i-> gottit, it makes sense now!
[18:50:41] *** Quits: TheAssassin (~TheAssass@newpipe/theassassin) (Remote host closed the connection)
[18:50:41] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[18:50:55] *** Joins: TheAssassin (~TheAssass@newpipe/theassassin)
[18:51:07] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[19:06:25] <p-i-> Great video!
[19:06:36] <p-i-> 86 OS and 22 CPU-arch
[19:06:58] <p-i-> gee, I've only ever even _heard_ of about 8 of those OSs.
[19:23:31] *** Joins: Crassus (~Crassus@user/crassus)
[20:08:26] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:14:34] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:21:36] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[20:32:59] *** Joins: spare (~ntorb4m7l@user/spareproject)
[20:42:53] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[21:59:30] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[22:12:33] *** Joins: Everything (~Everythin@37.115.210.35)
[22:24:31] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:57:00] *** Joins: rgrinberg (~textual@2806:101e:7:def:5c7c:5699:6e7:d044)
[22:58:51] *** Quits: spare (~ntorb4m7l@user/spareproject) (Remote host closed the connection)
[22:59:43] *** Joins: spare (~ntorb4m7l@user/spareproject)
[23:00:09] *** Quits: rgrinberg (~textual@2806:101e:7:def:5c7c:5699:6e7:d044) (Client Quit)
[23:27:12] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
