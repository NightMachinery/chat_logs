[00:01:05] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[00:02:01] *** Joins: Darkcoal (~user@user/Darkcoal)
[00:07:06] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[00:09:36] *** Joins: Fare (~fare@70-90-15-201-busname-pa.panjde.hfc.comcastbusiness.net)
[00:22:14] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Quit)
[00:25:08] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[00:25:40] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[00:26:52] *** Joins: livoreno (~livoreno@user/notzmv)
[00:38:53] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:42:27] *** Joins: badkins (~badkins@136.56.92.199)
[00:57:23] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[01:01:09] *** Quits: Fare (~fare@70-90-15-201-busname-pa.panjde.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[01:01:37] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[01:12:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:18:15] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[01:19:21] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:21:43] *** Joins: Fare (~fare@70-90-15-201-BusName-pa.panjde.hfc.comcastbusiness.net)
[01:44:59] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[01:52:29] *** Joins: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au)
[01:52:29] *** Quits: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au) (Changing host)
[01:52:29] *** Joins: mange (~user@user/mange)
[01:59:29] *** Quits: f8l (~f8l@37.228.213.3) (Read error: Connection reset by peer)
[01:59:35] *** Joins: stultulo (~f8l@37.228.213.3)
[02:02:36] *** Joins: [deleted] (~livoreno@user/notzmv)
[02:03:33] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[02:03:51] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 252 seconds)
[02:04:07] *** Joins: kori (kori@dfg.rocks)
[02:04:26] *** Joins: FareTower (~fare@70-90-15-201-BusName-pa.panjde.hfc.comcastbusiness.net)
[02:04:31] *** Quits: Fare (~fare@70-90-15-201-BusName-pa.panjde.hfc.comcastbusiness.net) (Ping timeout: 245 seconds)
[02:05:58] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[02:08:33] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:09:24] *** Quits: qhong_ (~qhong@rescomp-21-400677.stanford.edu) (Ping timeout: 240 seconds)
[02:11:26] *** Joins: badkins (~badkins@136.56.92.199)
[02:14:26] *** Joins: zacque (~zacque@1.32.81.194)
[02:18:16] *** Joins: seninha (~chatzilla@user/seninha)
[02:18:41] *** Joins: badkins_ (~badkins@136.56.92.199)
[02:20:13] *** Quits: aoh (~aki@haltp.org) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: fgudin_ (~fgudin@sdf-eu.org) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: akarle (~akarle@user/akarle) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: taw10 (~taw@46.235.227.49) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: wingo (~wingo@li270-233.members.linode.com) (Ping timeout: 256 seconds)
[02:21:38] *** Joins: fgudin (fgudin@sdf-eu.org)
[02:21:59] *** Joins: aoh (~aki@haltp.org)
[02:22:11] *** Joins: taw10 (~taw@46.235.227.49)
[02:22:34] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[02:23:14] *** Joins: wingo (~wingo@li270-233.members.linode.com)
[02:30:57] *** stultulo is now known as f8l
[02:56:22] *** Joins: apg (~apg@71-34-103-243.ptld.qwest.net)
[03:20:33] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[03:23:37] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:24:51] *** Quits: FareTower (~fare@70-90-15-201-BusName-pa.panjde.hfc.comcastbusiness.net) (Ping timeout: 250 seconds)
[03:28:34] *** Joins: masoudd (~masoudd@user/masoudd)
[03:38:07] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:46:33] *** Quits: badkins_ (~badkins@136.56.92.199) (Remote host closed the connection)
[03:49:00] *** Joins: TCZ (~tcz@91.150.178.124)
[03:49:02] *** Joins: puts (~tcz@91.150.178.124)
[03:49:44] *** Quits: puts (~tcz@91.150.178.124) (Remote host closed the connection)
[03:49:44] *** Quits: TCZ (~tcz@91.150.178.124) (Client Quit)
[03:50:02] *** Joins: TCZ (~tcz@91.150.178.124)
[03:53:00] *** Joins: notzmv (~zmv@user/notzmv)
[03:55:39] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[03:56:15] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[03:58:36] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:06:04] *** Joins: FareTower (~fare@2607:fb91:bd81:5f7c:a699:9ac8:3906:a53f)
[04:09:37] *** Joins: badkins (~badkins@136.56.92.199)
[04:27:48] *** Quits: FareTower (~fare@2607:fb91:bd81:5f7c:a699:9ac8:3906:a53f) (Ping timeout: 240 seconds)
[04:41:16] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[04:46:37] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:51:48] *** Joins: FareTower (~fare@pool-71-185-187-182.phlapa.fios.verizon.net)
[04:52:07] *** Joins: livoreno (~livoreno@user/notzmv)
[05:10:11] *** Joins: Techcable (~Techcable@168.235.93.147)
[05:11:16] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 250 seconds)
[05:19:46] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[05:39:38] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[05:39:45] *** Joins: robin_ (~robin@user/terpri)
[05:40:46] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[05:41:04] *** Quits: robin (~robin@user/terpri) (Killed (NickServ (GHOST command used by robin_)))
[05:41:08] *** robin_ is now known as robin
[05:46:38] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[06:23:32] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[06:25:26] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 272 seconds)
[06:34:40] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[06:36:24] *** Joins: akarle (~akarle@user/akarle)
[06:41:03] *** Quits: akarle (~akarle@user/akarle) (Ping timeout: 252 seconds)
[06:52:40] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[06:53:36] *** Joins: akarle (~akarle@user/akarle)
[07:10:43] *** Quits: klovett (~klovett@107.116.92.161) (Quit: ZZZzzz…)
[07:18:13] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:29:00] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 240 seconds)
[07:31:24] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[07:33:59] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:35:29] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[07:49:08] *** Quits: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[07:49:09] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[07:49:11] *** Joins: lumberja1k123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[07:49:11] *** Joins: lumberja1k (~alMalsamo@gateway/tor-sasl/almalsamo)
[07:54:54] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Quit: leaving)
[07:58:21] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[09:02:44] *** Joins: s-liao (~s-liao@101.86.96.21)
[09:18:08] *** Joins: catonano (~catonano@net-109-116-91-254.cust.vodafonedsl.it)
[09:18:32] *** Quits: catonano (~catonano@net-109-116-91-254.cust.vodafonedsl.it) (Remote host closed the connection)
[09:21:18] *** Quits: cedb (~ced@user/ouestbillie) (Read error: Connection reset by peer)
[09:21:51] *** Joins: cedb (~ced@user/ouestbillie)
[09:23:32] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[09:58:07] *** Joins: frost (~frost@user/frost)
[10:06:17] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[10:06:32] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[10:13:18] *** Quits: FareTower (~fare@pool-71-185-187-182.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[10:32:47] *** Quits: mange (~user@user/mange) (Remote host closed the connection)
[10:48:40] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:53:05] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 256 seconds)
[10:54:03] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[10:56:41] *** Quits: Darkcoal (~user@user/Darkcoal) (Remote host closed the connection)
[10:56:58] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:57:45] *** Joins: silasfox (~sbv@p200300cec7151c00ec0a6482fa84d04f.dip0.t-ipconnect.de)
[10:57:49] *** Quits: kori (kori@dfg.rocks) (Changing host)
[10:57:49] *** Joins: kori (kori@user/kori)
[11:08:12] *** Quits: tripfandango (~tripfanda@5.29.15.59) (Ping timeout: 240 seconds)
[11:24:26] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:a073:f53b:8d4:a527)
[11:25:48] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:27:01] *** Joins: badkins (~badkins@136.56.92.199)
[11:31:24] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[11:31:44] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 250 seconds)
[11:33:26] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:38:32] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[11:40:39] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:53:09] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 256 seconds)
[11:54:53] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:57:48] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[12:00:31] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[12:00:32] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:72a1:a073:f53b:8d4:a527) (Ping timeout: 240 seconds)
[12:04:01] *** Joins: tripfandango (~tripfanda@77.137.68.50)
[12:09:59] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[12:20:08] *** Quits: m1dnight (~christoph@78-22-9-5.access.telenet.be) (Quit: WeeChat 3.4)
[12:23:18] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[12:23:38] *** Joins: m1dnight (~christoph@78-22-9-5.access.telenet.be)
[12:30:06] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: You have been kicked for being idle)
[12:56:06] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[13:05:49] *** Joins: archenoth (~archenoth@2604:3d09:681:f00:c43:c097:cf3e:e138)
[13:08:52] *** Quits: Oshawott (~archenoth@S0106889e6827f474.cg.shawcable.net) (Ping timeout: 272 seconds)
[13:26:42] *** Joins: civodul (~user@guix/contributor/civodul)
[14:13:15] *** Quits: lumberja1k123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[14:13:15] *** Quits: lumberja1k (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[14:16:20] *** Joins: badkins (~badkins@136.56.92.199)
[14:20:36] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[14:29:09] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:40:43] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[14:44:31] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:51:03] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[14:51:04] *** Joins: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo)
[15:18:46] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:35:26] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:01:00] *** Quits: silasfox (~sbv@p200300cec7151c00ec0a6482fa84d04f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:01:17] *** Joins: silasfox (~sbv@p548d1148.dip0.t-ipconnect.de)
[16:17:42] *** Joins: seninha (~chatzilla@user/seninha)
[16:23:58] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[16:26:10] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[16:27:01] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:38:25] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[16:40:37] *** Joins: catonano (~catonano@net-109-116-91-254.cust.vodafonedsl.it)
[16:41:04] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:41:31] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[16:47:27] *** Joins: badkins (~badkins@136.56.92.199)
[16:51:58] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 250 seconds)
[17:05:24] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 250 seconds)
[17:16:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:54dd:1262:7c05:5499)
[17:16:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:54dd:1262:7c05:5499) (Changing host)
[17:16:06] *** Joins: skapata (~Skapata@user/skapata)
[17:26:39] *** Quits: catonano (~catonano@net-109-116-91-254.cust.vodafonedsl.it) (Quit: catonano)
[17:40:33] *** Joins: badkins (~badkins@136.56.92.199)
[17:44:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:51:15] *** Quits: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[17:51:15] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[17:51:45] *** Quits: zacque (~zacque@1.32.81.194) (Quit: Goodbye :D)
[17:56:22] *** Joins: klovett (~klovett@107.116.92.161)
[18:08:24] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[18:08:24] *** Joins: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo)
[18:21:28] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[18:24:16] *** Quits: X-Scale (~ARM@83.223.232.175) (Ping timeout: 272 seconds)
[18:24:18] *** X-Scale` is now known as X-Scale
[18:28:25] *** Joins: frost (~frost@user/frost)
[18:38:36] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[18:47:39] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:03:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[19:30:03] *** Joins: FareTower (~fare@pool-71-185-187-182.phlapa.fios.verizon.net)
[19:34:32] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:37:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[19:59:35] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[20:00:15] *** Quits: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[20:02:01] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 245 seconds)
[20:03:43] *** Quits: klovett (~klovett@107.116.92.161) (Quit: ZZZzzz…)
[20:12:10] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[20:18:18] *** Joins: tatsumaru (~tatsumaru@82.147.131.155)
[20:18:36] <tatsumaru> hey guys, does studying and working with non-functional languages make you worse at fp?
[20:20:07] <Zipheir> tatsumaru: I don't think so.  Learning more is never going to make you worse at something you already know, though I guess you can get "rusty".
[20:20:12] *** Quits: rgherdt (~rgherdt@port-92-193-217-5.dynamic.as20676.net) (Ping timeout: 240 seconds)
[20:21:09] <Zipheir> tatsumaru: I'm also going to point out that the line between "functional" and "other" languages is very fuzzy.
[20:21:30] <Zipheir> More an idiomatic difference than anything, IMHO.
[20:24:47] <tatsumaru> I see, I am asking because I've heard that people who have an OOP background are less likely to enjoy FP so I was wondering if somehow the one practice affects the other.
[20:24:50] *** Joins: rgherdt (~rgherdt@2a01:598:b1a7:c330:cdb2:9be5:d4c8:48db)
[20:25:59] <edgar-rft> functional is when it works and non-functional when not, there may be some border-cases but not much
[20:26:02] <Zipheir> tatsumaru: Style shock, I guess.
[20:26:44] <Zipheir> tatsumaru: Take a look at the book A Little Java, A Few Patterns by Friedman & Felleisen for an example of functional programming in an OO language, BTW.
[20:26:48] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:28:22] <mdhughes> The usual terms are procedural and functional, not dysfunctional or non-functional.
[20:28:35] <mdhughes> And yet almost every functional language is also procedural.
[20:29:16] *** Joins: rgherdt_ (~rgherdt@port-92-195-30-153.dynamic.as20676.net)
[20:29:47] <Zipheir> Usually "procedures" don't have to return a meaningful value, hence they include both "functions" and "subroutines".  (Although C usage has gummed up that terminology.)
[20:30:45] <Zipheir> "I mean 'functional' as in the mathematical idea of a function, not that other languages aren't." --Larry Wall
[20:31:37] <edgar-rft> let's introduce the category of non-meaningful programming :-)
[20:32:05] *** Quits: rgherdt (~rgherdt@2a01:598:b1a7:c330:cdb2:9be5:d4c8:48db) (Ping timeout: 252 seconds)
[20:32:16] <Zipheir> "Rob say Code Monkey very diligent / But his output stink. / His code not functional or elegant, / What do Code Monkey think?" (Jonathan Colton, "Code Monkey")
[20:33:31] <Zipheir> edgar-rft: Which will have to be described by anti-semantics.
[20:38:41] *** Quits: rgherdt_ (~rgherdt@port-92-195-30-153.dynamic.as20676.net) (Ping timeout: 256 seconds)
[20:47:53] <mdhughes> But Scheme calls all its "functions" procedures.
[20:48:46] <mdhughes> And classically, they're all subroutines, which is just an address that might return, may or may not put a value on a stack or register.
[20:49:47] <mdhughes> We do have INTERCAL as both dysfunctional and meaningless language. But even it has subroutines.
[20:51:42] <Zipheir> In classic Scheme implementations, they're all just continuations.
[20:53:04] <Zipheir> But the mixture of meaningful and meaningless return values is a big source of annoying bugs in a language where you're supposed to be able to "know the value of everything".
[20:53:25] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[20:56:32] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[20:57:17] *** Joins: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo)
[20:58:39] <Zipheir> i.e. subroutines are a weird fit for Scheme.  There's no general way to catch unspecified-value mistakes except to include lots of assertions.
[21:06:02] *** Joins: badkins (~badkins@136.56.92.199)
[21:10:17] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[21:10:22] <tatsumaru> Is there a big difference between programming for multi-core and multi-cpu architectures?
[21:18:09] <Zipheir> It depends entirely on what computation you're trying to describe.
[21:20:18] <Zipheir> It's not a well-specified question.  Any architecture is going to be (usefully!) computationally complete, so the question becomes what aspects of the machine you're trying to exploit to what ends.
[21:22:14] <tatsumaru> Well, let's say you want to do the same thing but in one case you have one CPU with 8 cores and in the other you have 2 CPUs with 4 cores each.
[21:24:29] <Zipheir> You rely on the compiler/interpreter to Do the Right Thing.
[21:26:00] <Zipheir> I mean, that's a perfectly correct approach.
[21:27:48] <tokie> tatsumaru: there can be differences you care about but they're generally happening at very very high levels of parallelization where you're trying to optimize doing millions of things per second
[21:28:47] <tatsumaru> interesting
[21:29:39] <Zipheir> tatsumaru: You might like Guy Steele's talk, "How to think about parallel programming: Not!" https://www.youtube.com/watch?v=dPK6t7echuA
[21:30:01] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[21:31:12] *** Joins: ns12 (~ns12@user/ns12)
[21:31:19] <Zipheir> It's a very good discussion.  There is a lot of historical detail at the beginning, but his point is clear: manual parallelization is basically manual memory management--not something we want to worry about.
[21:31:55] *** Joins: klovett (~klovett@107.116.92.161)
[21:34:05] <tatsumaru> Zipheir isn't this the person who invented Scheme?
[21:34:13] <Zipheir> He and Sussman, yes.
[21:35:35] <Zipheir> Although he's been working at Oracle for all of the recent past. :-/  (There's got to be a better place you could work, Quux...)
[21:36:29] <tatsumaru> A lot of people think Larry Ellison is Satan
[21:39:11] <tatsumaru> I think Bjorne Stroustrup works for some evil bank lol
[21:39:55] <Zipheir> Maybe he's bringing it down from within with his overcomplicated programming ideas. :)
[21:43:04] <tatsumaru> Looking at Guy Steele talking about how he programmed using paper, I can't help but feel how this whole IT thing happened in a relatively short time
[21:43:25] <tatsumaru> It's not like it was some medieval thing that monks used to do
[21:44:39] <Zipheir> Yes.
[21:44:57] <Zipheir> I mean, there are living people who know Turing, Church, or von Neumann.
[21:46:12] <Zipheir> (Well, the people who know Turing and von Neumann are pretty old.)
[21:46:49] <drakonis> history says that guy steele got hired for his standard writing powers
[21:48:20] *** Joins: badkins (~badkins@136.56.92.199)
[21:51:12] <tokie> Zipheir: yeah, oracle is probably paying him $2m/year at least
[21:51:18] <tokie> to do whatever he wants
[21:52:22] <Zipheir> A Faustian bargain.
[21:53:08] <drakonis> he was originally hired by sun not oracle btw
[21:53:43] <drakonis> i still dont know what does he do there
[21:54:04] <Zipheir> He was working on Fortress for a while.
[21:57:53] *** Joins: karlosz (~karlosz@47.151.136.69)
[22:03:37] <mdhughes> Oracle presumably pays a lot of researchers to not make anything that disrupts Java & Oracle SQL. That's why they bought MySQL and fucked it up.
[22:07:05] <Zipheir> Maybe Steele gets to work on anything he wants until it starts to suggest a threat to an Oracle product, then they sink it and tell him to work on something else. ;-)
[22:11:35] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[22:18:15] *** Quits: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[22:18:35] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[22:19:37] *** Joins: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net)
[22:22:39] *** Quits: silasfox (~sbv@p548d1148.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:25:39] <tatsumaru> Lol paying them to not innovate is the lamest thing ever. Why don't they pay them to innovate on behalf of Oracle.
[22:31:50] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[22:39:23] <mdhughes> Innovation doesn't help Oracle. They have a locked-in product and decades-long service contracts.
[22:45:26] *** Quits: Lysandros (~Lysandros@user/lysandros) (Quit: hardware things)
[22:46:54] *** Joins: Lysandros (~Lysandros@user/lysandros)
[22:49:10] <tatsumaru> Innovation always helps, that's how Oracle was created in the first place.
[22:49:29] *** Quits: rx80 (~quassel@user/rx80) ()
[22:51:40] *** Joins: rx80 (~quassel@user/rx80)
[22:53:39] <libfud> it's beautiful when you get a linear speedup from parallelization
[22:54:23] <libfud> rewriting one of my functions to go from a plain fold to a fold and par-map yielded was worth it
[22:55:35] *** Quits: tatsumaru (~tatsumaru@82.147.131.155) (Quit: Leaving.)
[22:56:36] *** Quits: FareTower (~fare@pool-71-185-187-182.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[23:08:27] <Zipheir> I'd like to have a language whose semantics allow parallelization without my having to explicitly talk about it.
[23:08:47] <Zipheir> Which is, I guess, with the Great Quux was proposing.
[23:09:43] <gwatt> I suspect haskell might be ok for that, considering it's already lazy
[23:09:57] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:10:01] <Zipheir> It's a start.
[23:10:18] <Zipheir> Carefully controlling mutation seems like a must.
[23:10:35] <Zipheir> But accumulators are also an issue, as that talk mentions.
[23:13:27] <Zipheir> This has interesting implications for functional programming, IIUC.  e.g. making sure procedures are associative or commutative could be crucial, since a compiler could use this information to avoid using a single accumulator.
[23:22:09] <libfud> https://gist.github.com/libfud/7207641fc50826f65e5a05679f9e432a
[23:23:30] <libfud> that can still be imrpoved, at least as far as naming goes
[23:23:39] <libfud> probably some redundant work in there in places as well
[23:24:45] <gwatt>  are "kerf" and "slop" some kind of domain terms?
[23:24:49] <libfud> yes
[23:25:02] <libfud> kerf refers to the portion of a board that's removed when you cut it with a saw
[23:25:33] <libfud> i.e. if the kerf is, say 1 cm, and you have a board that's 100 cm
[23:25:50] <libfud> if you cut it so that one side of the board is 50 cm to the left of the blade, you'll get two pieces that are 50 cm and 49 cm
[23:26:37] <libfud> slop just means a portion of a board that's been cut poorly, which happens often when you buy wood from a lumber yard. You have to cut that part off if you want a nice piece.
[23:27:00] <gwatt> So slop usually becomes kerf?
[23:27:11] <libfud> no, it becomes scrap :)
[23:27:21] <libfud> kerf is only a small portion of slop
[23:28:10] <gwatt> ah, I misunderstood kerf. I thought it was the bit getting cut off from the main part. But it's the part destroyed by the saw?
[23:28:19] <libfud> yeah
[23:30:20] <libfud> I think technically my kerf-accounting is off by one, but I don't think that matters for this purpose.
[23:39:33] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:55:19] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
