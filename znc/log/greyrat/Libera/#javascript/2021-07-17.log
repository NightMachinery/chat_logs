[00:02:10] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:02:37] *** Joins: Axy (~Axy@user/axy)
[00:02:46] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:03:24] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[00:08:11] *** Quits: Guest9 (~Guest9@103.249.234.210) (Quit: Connection closed)
[00:12:23] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Quit: Lost terminal)
[00:16:08] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[00:16:17] *** Joins: skillbot (~skillbot@li1200-69.members.linode.com)
[00:16:17] *** Quits: skillbot (~skillbot@li1200-69.members.linode.com) (Changing host)
[00:16:17] *** Joins: skillbot (~skillbot@user/skillbot)
[00:16:17] *** ChanServ sets mode: +v skillbot
[00:16:47] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf)
[00:16:57] *** Quits: yaalon (~yaalon@201.171.90.143.dsl.dyn.telnor.net) (Remote host closed the connection)
[00:17:25] *** Joins: dunkeln (~dunkeln@94.128.224.230)
[00:18:17] *** Joins: Crassus (~Crassus@user/crassus)
[00:19:35] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:20:29] *** Joins: thiras (~thiras@user/thiras)
[00:20:56] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf) (Client Quit)
[00:24:00] *** Joins: thiras_ (~thiras@user/thiras)
[00:26:42] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[00:27:06] *** Joins: stenno (~stenno@user/stenno)
[00:29:30] *** Quits: Jigsy (~Jigsy@user/jigsy) (Read error: Connection reset by peer)
[00:30:11] *** Joins: Jigsy (~Jigsy@user/jigsy)
[00:34:50] *** Joins: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[00:38:18] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf)
[00:39:08] *** Joins: ScottMichaud (~ScottMich@bras-base-clbaon0201w-grc-45-184-144-82-228.dsl.bell.ca)
[00:39:38] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:41:39] <ScottMichaud> Here's a weird one... "DOMException: Failed to execute 'showSaveFilePicker' on 'Window': Must be handling a user gesture to show a file picker." error occurred twice out of about 50 times that I've called it.
[00:42:38] <ScottMichaud> The bottom of the call stack is: at SingleFileSaverComponent.<anonymous> (http://localhost:4200/main.js:40858:28) ((new line)) at Generator.next (<anonymous>) ((new line)) at http://localhost:4200/vendor.js:190362:71 ((new line)) at newZoneAwarePromise (http://localhost:4200/polyfills.js:1182:33)
[00:43:19] <ScottMichaud> The framework is Angular so it could be some weird framework stuff, but it could also be some Google Chrome thing.
[00:44:22] <ScottMichaud> ((And yes I'm aware that showSaveFilePicker is not available in all browsers... this is supposed to be over and over our default implementation, and it's an intranet web app anyway, so we're not dealing with the general public.))
[00:44:29] <ScottMichaud> over and above*
[00:44:54] <ScottMichaud> The default being the old trusty "create a hidden anchor tag and javascript click it".
[00:46:16] <ScottMichaud> And it's going to get refactored anyway... they want the inject a dialog before saving the file... I'm more just curious whether it's something I'm doing, or whether Chrome's just buggy. Looks like everything's await'd correctly, though.
[00:46:54] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:46:57] <ScottMichaud> I also found another StackOverflow complaining about the same thing (not me of course). https://stackoverflow.com/questions/67884548/how-to-save-big-data-using-natife-file-system-api
[00:47:32] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[00:47:56] *** Joins: codebam (~codebam@user/codebam)
[00:50:14] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:50:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[00:52:00] <GreenJello> ScottMichaud, if you have an await before calling this, it's definitely not going to work
[00:52:21] <ScottMichaud> Ah interesting... because it works the vast majority of the time.
[00:52:39] <ScottMichaud> I only saw it fail twice after a full day of development.
[00:52:43] <GreenJello> event handlers don't understand promises, so it's not going to see that your code after the await is in response to the event
[00:53:20] <GreenJello> well, I can't say for sure that there isn't also a bug, especially without seeing your cod
[00:53:24] <GreenJello> code*
[00:53:34] <ScottMichaud> Nah it's good. This is helpful. Thanks!
[00:54:24] <ScottMichaud> One question though...
[00:54:34] <ScottMichaud> showSaveFilePicker() is, itself, asynchronous.
[00:54:40] <ScottMichaud> Would its own await count?
[00:54:45] <ScottMichaud> Or would it see the event still?
[00:55:38] *** Quits: dunkeln (~dunkeln@94.128.224.230) (Ping timeout: 268 seconds)
[00:55:58] <GreenJello> it should check the execution context immediately when called
[00:56:08] <ScottMichaud> Okay cool.
[00:56:19] <ScottMichaud> Actually I could probably test this by throwing an exception and seeing where the call stack is.
[00:56:34] <ScottMichaud> Haven't tried yet but it would probably give clues about the state of the state machine.
[00:56:52] <GreenJello> console.error(new Error('some message'))
[00:56:58] <ScottMichaud> Yeah exactly.
[00:57:21] <ScottMichaud> Well, I was thinking throw new Error() but same difference yeah.
[00:57:33] <ScottMichaud> Thanks again!
[00:57:37] <GreenJello> if you throw, things can catch and transform it
[00:57:45] *** Joins: stenno (~stenno@user/stenno)
[00:58:18] <GreenJello> console.error is more reliable at letting you see the error (for debugging purposes)
[00:58:52] <ScottMichaud> Hah. Yeah. Don't want that in production.
[00:59:13] <onosendi> Why does `items.length` render 0 when the array is empty? https://dpaste.org/Q2qO
[01:00:02] <onosendi> n> const t = []; t.length && 'foo';
[01:00:03] <jellobot> (okay) 0
[01:01:59] <wroathe> onosendi: 0 and 1 is 0
[01:03:12] <GreenJello> n> const t = []; !!t.length && 'foo'
[01:03:13] <jellobot> (okay) false
[01:03:36] <GreenJello> you can do that or a ternary (assuming this is for React)
[01:04:03] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[01:05:06] <ScottMichaud> Anyway. Have a good one. Still weird that it worked *most* of the time. Hmm.
[01:05:18] *** Quits: ScottMichaud (~ScottMich@bras-base-clbaon0201w-grc-45-184-144-82-228.dsl.bell.ca) (Quit: Client closed)
[01:08:19] <onosendi> GreenJello: ah, that's what I needed, thanks.
[01:09:36] *** Quits: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[01:11:01] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[01:11:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:12:26] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:12:58] *** Quits: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius) (Ping timeout: 240 seconds)
[01:21:08] *** Quits: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 252 seconds)
[01:23:03] *** Quits: Akimbas (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[01:23:22] *** Joins: stenno (~stenno@user/stenno)
[01:28:49] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[01:30:57] <Donitz> can you filter and map at the same time
[01:30:59] *** Quits: deltab (~deltab@95.154.230.49) (Changing host)
[01:30:59] *** Joins: deltab (~deltab@user/deltab)
[01:31:06] <Donitz> returning a shorter array
[01:32:11] <GreenJello> flatMap, with returning a 0-item or 1-item array
[01:33:10] <Donitz> n> [1,2,3,4].flatMap(v => v === 2 ? [1] : []);
[01:33:10] <jellobot> (okay) [ 1 ]
[01:33:13] <Donitz> hmm
[01:33:17] <Donitz> right oh
[01:33:19] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[01:33:41] <GreenJello> [v]
[01:34:12] *** Pectic is now known as eXistenZ
[01:34:28] <Donitz> animation.tracks.flatMap(track => trackNames.includes(track.name) ? [track.clone()] : []);
[01:34:51] <GreenJello> looks right
[01:35:05] <stenno> i'd prefer filter-map here for readability still
[01:35:16] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:35:22] <Donitz> I guess the line is a bit long
[01:35:46] <stenno> animation.tracks.filter(track => track.names.includes(track.name)).map(track => track.clone())
[01:36:30] <Donitz> is flatMap well supported?
[01:36:31] <GreenJello> yeah, there are some cases where you really want to do it in one operation, but most of the time it's either map then filter, or filter then map
[01:36:53] <stenno> flatMap is ES6
[01:36:58] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:37:02] <GreenJello> it's newer than that
[01:37:18] <GreenJello> ES2019 or something
[01:37:21] <Donitz> ah
[01:37:23] <stenno> oh?
[01:37:25] <stenno> feels like forever
[01:37:33] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:37:34] <stenno> maybe because i was using it with babel
[01:38:27] <GreenJello> yep, ES2019 https://github.com/tc39/proposals/blob/master/finished-proposals.md
[01:39:04] <Donitz> filter and map then
[01:39:11] <Donitz> it is clearer anyway
[01:40:31] <stenno> and less cycles most of the time
[01:40:41] <stenno> fwiw (probably not much)
[01:40:54] *** chowmein__ is now known as chowmeined
[01:41:18] <stenno> actually more cycles i guess
[01:41:24] * stenno hides again
[01:42:09] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 265 seconds)
[01:43:12] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:43:16] *** Quits: eXistenZ (~biskit@bzq-109-67-145-67.red.bezeqint.net) (Quit: Leaving)
[01:45:59] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 252 seconds)
[01:55:19] *** Quits: Noustropos (~Noustropo@91.221.89.25) (Quit: WeeChat 3.0)
[02:06:36] *** Quits: The_Blode (~Blode@92.40.180.219.threembb.co.uk) (Read error: Connection reset by peer)
[02:07:26] *** Joins: The_Blode (~Blode@92.40.180.219.threembb.co.uk)
[02:10:09] *** Quits: shailangsa (~shailangs@host86-186-196-229.range86-186.btcentralplus.com) (Remote host closed the connection)
[02:10:37] <Slade> whats the standard way of doing a non-inplace sort?
[02:11:02] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:11:23] *** Joins: Naan (~naan@user/naan)
[02:11:41] <Alexendoo> Slade: .slice().sort()
[02:12:24] *** Joins: heatwave (~heatwave@23.81.113.202)
[02:12:59] <Slade> hah. that simple?
[02:15:28] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[02:16:42] <ljharb> yep
[02:16:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[02:16:58] <ljharb> Donitz: https://npmjs.com/array.prototype.flatmap
[02:18:50] <Donitz> https://npm.anvaka.com/#/view/2d/array.prototype.flatmap
[02:20:28] <Donitz> at least they're all using MIT
[02:20:30] <ljharb> not familiar ith that sit
[02:20:32] <ljharb> *with that site
[02:20:37] <ljharb> but yeah, that's how much code it takes to implement it properly
[02:21:07] <Donitz> No reason to re-implement the entire language for some sub-percent fraction of users for personal games
[02:21:30] <Donitz> and re-implementing the language is pretty much what it is
[02:23:26] *** Quits: PlanC (~PlanC@83.218.81.19) (Quit:  Want to be different? Try HydraIRC -> http://www.hydrairc.com <-)
[02:24:27] <ljharb> well sure, if you can get it natively then do that
[02:24:48] <ljharb> but this way you don't have to think about it, and your code is cleaner, which means all your users benefit
[02:26:41] <ljharb> also, that package (like all of my es-shims) uses the native one directly if available
[02:27:07] <ljharb> (and if it works properly)
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:29] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:32:48] <Donitz> MY code is cleaner
[02:32:52] <Donitz> the project itself is dirtier
[02:33:25] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:140d:ed4:314d:e507) (Quit: Textual IRC Client: www.textualapp.com)
[02:33:27] <Donitz> I'm not a big fan of out of sight out of mind
[02:35:03] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[02:35:18] *** electr0n_ is now known as electr0n
[02:35:36] <ljharb> lol, that's literally the point of abstractions
[02:35:53] <ljharb> the best code has the dirty parts neatly hidden away
[02:36:41] *** Joins: shailangsa (~shailangs@host86-186-196-229.range86-186.btcentralplus.com)
[02:37:19] <Donitz> that is hidden code I am responsible for
[02:37:26] <Donitz> at least if it's part of the javascript engine, that's not on me
[02:39:44] <ljharb> it's on you if your code is dirtier because you confine yourself to what's in the engine
[02:40:28] <Donitz> but in this case it's not dirtier
[02:41:43] <ljharb> alrighty
[02:42:37] *** Quits: calcmandan (~quassel@user/calcmandan) (Quit: No Ping reply in 180 seconds.)
[02:43:53] *** Joins: calcmandan (~quassel@user/calcmandan)
[02:43:59] <jaawerth> ljharb: oh hey, as doctor shim you woould be good to verify my approach here - would you do this any differently if it had to be as robust as possible? `const onLine = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(self.navigator), 'onLine').get.bind(navigator); module.exports.offline = () => !onLine()`
[02:44:34] <ljharb> lol doctor shim
[02:45:02] <ljharb> jaawerth: if you know you're running in an env with all those things available, then yes
[02:46:28] <jaawerth> it's tricky - we're trying to balance eliminating duplicate records (I *think* network timeouts are involved, but of course this hasn't realy been reproduced) against data *losS*, so I'm treating anything but an explicit false as indeterminant
[02:47:10] <jaawerth> navigator.onLine has surprisingly good browser coverage, though sadly less so related events
[02:47:28] <jaawerth> but of course, navigator.onLine === true isn't trustworthy lol
[02:47:32] <austincheney> what is a good example of a website that hasn't changed in years, but is more than just text and multiple pages
[02:48:01] <jaawerth> define "hasn't changed"
[02:48:09] <jaawerth> how unchanging are we talking here?
[02:48:52] <jaawerth> and what do you mean by "more than just text and pages" you mean, like, there's a dynamic-rendering server component, or a database?
[02:49:01] <austincheney> I writing a demo campaign of a test automation application.  I want to have exotic things to demonstrate on some site I dont know but I dont want to frequently update the demo
[02:49:33] <ljharb> austincheney: https://www.spacejam.com/1996/ ?
[02:49:38] <jaawerth> hahaha
[02:49:50] <ljharb> it's the canonical "don't break the web" site
[02:49:53] <jaawerth> austincheney: there's always the wayback machine
[02:50:16] <austincheney> YES, thanks ljharb
[02:50:17] <jaawerth> ljharb: how have I never heard about this
[02:50:26] <ljharb> i don't know, it's internet law
[02:50:30] <Alexendoo> realtek finally updated their site in the last couple years. Was still fixed at 800x600 before that
[02:50:48] <Alexendoo> Or a similar resolution
[02:52:42] <jaawerth> austincheney: it would be fun to use cruise archive.org folder angelfire and geocities sites tho
[02:52:47] <jaawerth> for work
[03:02:18] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[03:05:06] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[03:14:50] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[03:15:05] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[03:15:40] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[03:19:56] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 252 seconds)
[03:21:24] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[03:21:28] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[03:25:49] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:140d:ed4:314d:e507)
[03:36:46] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[03:37:35] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Read error: Connection reset by peer)
[03:43:03] *** Joins: stenno (~stenno@user/stenno)
[03:45:36] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 255 seconds)
[03:47:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[03:48:59] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Remote host closed the connection)
[03:49:22] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[03:51:44] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:4829:dbfa:9849:bbfb)
[03:55:27] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[03:57:30] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:00:27] *** Joins: pavonia (~user@user/siracusa)
[04:00:38] *** Quits: bobdobbs` (~user@150.107.175.200) (Ping timeout: 268 seconds)
[04:04:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:e03f:68c2:3df:7ed3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:05:51] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 255 seconds)
[04:09:53] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[04:12:04] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[04:14:02] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[04:20:58] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 240 seconds)
[04:22:41] *** Joins: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net)
[04:23:39] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[04:23:43] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 268 seconds)
[04:25:40] *** Joins: stenno (~stenno@user/stenno)
[04:33:49] *** Quits: thiras_ (~thiras@user/thiras) (Quit: Leaving)
[04:34:10] *** Joins: thiras (~thiras@user/thiras)
[04:36:19] <onosendi> Blah, it took me like, 3 hours to problem solve this. It has to do with a `position: fixed` child inside an element that has `transform: ...` on it. You guys know any way around this? If you comment out the `transform` line, you'll see it behaves like you'd expect it to. https://codepen.io/onosendi/pen/dyWWzmJ
[04:37:13] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[04:39:12] *** Joins: Crassus (~Crassus@user/crassus)
[04:45:02] <onosendi> Here's something on it, doesn't really help though. https://meyerweb.com/eric/thoughts/2011/09/12/un-fixing-fixed-elements-with-css-transforms/
[04:46:54] *** Joins: Maxdaman1us (~Maxdamant@user/maxdamantus)
[04:48:20] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 255 seconds)
[04:49:57] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:55:42] *** Quits: heatwave (~heatwave@23.81.113.202) (Ping timeout: 258 seconds)
[04:57:50] *** Joins: Celeo (~Celeo@user/celeo)
[05:07:09] *** Quits: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[05:09:18] *** Joins: ormaaj2 (6174bb9b@user/ormaaj)
[05:10:57] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 265 seconds)
[05:11:29] *** Joins: Crassus (~Crassus@user/crassus)
[05:15:47] *** Quits: ormaaj2 (6174bb9b@user/ormaaj) (Ping timeout: 255 seconds)
[05:31:35] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[05:38:15] <wroathe> Playwright's codebase is another example of OOP hell.
[05:38:34] <wroathe> For anyone who wants an excuse to gouge their eyes out with a spoon.
[05:43:12] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:43:26] <banana_> tsup ecmarades
[05:45:48] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:46:58] <theskillwithin> onosendi I think because transform effects all its children, it becomes the relative parent when you use it
[05:47:07] *** Joins: ormaaj2 (~6174bb9b@user/ormaaj)
[05:47:15] <theskillwithin> onosendi you could acomplish the same thing with setting a left:   value
[05:47:40] <theskillwithin> i mean, transform: translateX(0) isn't doing anything anyways
[05:47:50] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 258 seconds)
[05:48:14] <spynxic> Is it negative to have tons of elements
[05:48:34] <spynxic> Perhaps even 0px by 0px elements
[05:48:44] <wroathe> spynxic: If they're not necessary, yes
[05:49:19] <spynxic> Well I mean is there a penalty
[05:49:47] <wroathe> Yes, having extra elements takes both more memory, and more time to perform operations that involve traversing the DOM
[05:49:56] <wroathe> They're not free
[05:50:17] <spynxic> Oh so if there are a lot of elements then nest them appropriately
[05:50:43] <wroathe> Uh? I said nothing about nesting.
[05:50:58] <spynxic> Well you mentioned the search expansion problem
[05:51:10] <spynxic> Search space expansion
[05:52:34] <spynxic> Elements take memory?
[05:52:36] *** Quits: Atum_ (IRC@user/atum/x-2392232) (Quit: Atum_)
[05:52:57] <wroathe> Yes
[05:53:33] *** pikapika is now known as david_hilbert
[05:53:58] <spynxic> Is there a "smallest" element
[05:54:51] *** Joins: kmh_ (~kmh@p200300df5f357b0076234ac1b2522dde.dip0.t-ipconnect.de)
[05:55:54] * spynxic takes question to ##physics
[05:56:05] <wroathe> It's possible
[05:56:33] *** Quits: kmh (~kmh@p200300df5f0e070036f57036993366d1.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[05:57:01] *** Quits: ttys000 (~ttys000@user/ttys000) (Read error: Connection reset by peer)
[05:57:03] <spynxic> Honestly if it is stored in memory then I'd probably be better off using JavaScript data structures rather than using the dom
[05:57:06] *** Joins: gggpkm (~gggpkm@221.219.77.161)
[05:57:29] <wroathe> spynxic: What exactly are you doing?
[05:57:41] *** Joins: ttys000 (~ttys000@user/ttys000)
[05:57:47] <spynxic> Filling up a page with boxes
[05:57:55] <spynxic> Of varying sizes
[05:58:22] <wroathe> spynxic: Well, you'll need elements to draw the boxes. Javascript Objects can't help you there.
[05:58:25] <spynxic> I don't really enjoy the footprint canvas offers for that
[05:58:34] <wroathe> spynxic: Or canvas too, I suppose
[05:59:07] <wroathe> spynxic: If you're doing graphics you probably want to use something like canvas, webgl, or as a last resort SVG
[06:00:26] <spynxic> I really just wanted to avoid box attributes, like their color, taking up memory
[06:01:30] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[06:01:43] <spynxic> Then again I program as if I have 2kbs of memory
[06:02:59] <spynxic> Caching is what I seek
[06:04:50] <wroathe> spynxic: It's all going to take memory at the end of the day. The browser will have an internal data structure they use to keep track of the shapes you draw on the canvas.
[06:05:27] <spynxic> I wanted to draw thousands
[06:05:31] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:3769:288e:d2c5:9a56) (Changing host)
[06:05:31] *** Joins: cismee (~cisme_@user/cisme/x-1186982)
[06:05:55] <wroathe> Better not. Sounds risky. You might go over 2K.
[06:06:38] <spynxic> Or learn webgl, eh
[06:07:39] *** Joins: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[06:17:27] *** Joins: silly (~silly@user/silly)
[06:20:20] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[06:25:32] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 255 seconds)
[06:27:19] *** Quits: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 265 seconds)
[06:28:07] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[06:29:52] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[06:30:47] *** Joins: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[06:34:39] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:36:19] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[06:37:38] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:40:54] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:43:59] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:45:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:46:59] *** Quits: zebrag (~chris@user/zebrag) (Read error: Connection reset by peer)
[06:47:04] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:48:05] *** Joins: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com)
[06:51:28] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 258 seconds)
[06:53:38] *** Joins: gggpkm_ (~gggpkm@60.10.23.164)
[06:55:50] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[06:56:04] *** Quits: gggpkm (~gggpkm@221.219.77.161) (Ping timeout: 258 seconds)
[06:57:03] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[06:58:10] *** Quits: ormaaj2 (~6174bb9b@user/ormaaj) (Quit: https://mibbit.com Online IRC Client)
[06:58:32] <onosendi> theskillwithin: indeed it does.
[06:58:40] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[06:59:06] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9) (Read error: Connection reset by peer)
[07:03:46] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[07:05:23] *** Joins: Rockwood (~Rocky@user/rocky)
[07:05:24] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[07:06:15] *** Quits: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 268 seconds)
[07:07:50] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[07:08:06] <theskillwithin> 😝
[07:09:57] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[07:10:30] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[07:11:35] <Rockwood> theskillwithin, o/
[07:11:57] <theskillwithin> 👋
[07:12:04] <Rockwood> yesterday was Friday and cheers days
[07:12:09] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:12:20] <Rockwood> today also i have invitation from a friend
[07:12:22] <Rockwood> lol
[07:17:07] *** Maxdaman1us is now known as Maxdamantus
[07:17:09] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[07:17:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:20:51] *** Quits: Drgonz0 (Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[07:21:02] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[07:24:57] *** Quits: gggpkm_ (~gggpkm@60.10.23.164) (Remote host closed the connection)
[07:42:57] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[07:44:03] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:53:17] *** __jmcantrell__ is now known as jmcantrell
[07:57:09] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:308b:28a3:e189:86d2)
[08:46:14] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:49:56] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 252 seconds)
[08:55:30] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:58:31] *** Joins: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[09:01:16] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:10:28] *** Quits: silly (~silly@user/silly) (Ping timeout: 252 seconds)
[09:21:20] *** Joins: vysn (~vysn@user/vysn)
[09:21:27] *** Joins: Crassus (~Crassus@user/crassus)
[09:24:00] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Ping timeout: 255 seconds)
[09:24:02] *** Joins: ferdna (~ferdna@user/ferdna)
[09:30:55] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[09:32:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[09:33:12] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[09:34:48] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[09:39:47] *** Quits: hexeme (~hexeme@user/hexeme) (Quit: co'o ro do)
[09:41:18] *** Joins: hexeme (~hexeme@user/hexeme)
[09:45:55] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:46:30] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[09:48:19] *** Joins: l__q (~modinfo@user/modinfo)
[09:48:56] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Read error: Connection reset by peer)
[09:49:13] *** Joins: Jaran|zZzZZZZz (~mail@p5b2c54d6.dip0.t-ipconnect.de)
[09:49:13] *** Quits: Jaran|zZzZZZZz (~mail@p5b2c54d6.dip0.t-ipconnect.de) (Changing host)
[09:49:13] *** Joins: Jaran|zZzZZZZz (~mail@user/jaran)
[09:49:49] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[09:50:10] *** Jaran|zZzZZZZz is now known as Jaran
[09:50:53] <theskillwithin> it seems you have been living  two lives
[09:51:42] *** Joins: Guest9 (~Guest9@43.242.116.127)
[09:54:42] *** Quits: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com) (Ping timeout: 258 seconds)
[09:57:14] *** Joins: gggpkm_ (~gggpkm@60.10.23.165)
[09:59:33] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Ping timeout: 255 seconds)
[10:00:57] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Ping timeout: 265 seconds)
[10:01:43] *** Quits: l__q (~modinfo@user/modinfo) (Quit: interet cut off, write me memo! it will be send to my mail!)
[10:04:49] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 265 seconds)
[10:13:04] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:15:29] *** Quits: hexeme (~hexeme@user/hexeme) (Quit: co'o ro do)
[10:16:06] *** Quits: gggpkm_ (~gggpkm@60.10.23.165) (Remote host closed the connection)
[10:17:51] *** Joins: hexeme (~hexeme@user/hexeme)
[10:20:46] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[10:28:41] *** Joins: c4017 (~c4017@S010664777dab66f3.vf.shawcable.net)
[10:30:26] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[10:34:21] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[10:37:20] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:42:01] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 246 seconds)
[10:53:19] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[11:01:12] *** Joins: dunkeln (~dunkeln@94.128.224.230)
[11:13:30] *** Quits: kmh_ (~kmh@p200300df5f357b0076234ac1b2522dde.dip0.t-ipconnect.de) (Quit: Leaving)
[11:16:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:18:49] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[11:19:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[11:30:27] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 255 seconds)
[11:34:14] *** Quits: Guest9 (~Guest9@43.242.116.127) (Ping timeout: 255 seconds)
[11:35:07] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[11:42:29] *** Joins: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com)
[11:43:08] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf) (Quit: Leaving)
[11:46:30] *** Joins: l__q (~modinfo@user/modinfo)
[11:48:49] *** Joins: fef (~thedawn@user/thedawn)
[11:49:03] *** Joins: silly (~silly@user/silly)
[11:56:34] <l__q> how to make get request with axios and specific params? This little example dosent parse my params into url: https://jsfiddle.net/skorotkiewicz/q5bjm0vc/2/
[11:58:00] <l__q> only make request to baseurl without params
[11:58:49] <electr0n> const res = await axios.get('https://domain/get', { params });
[11:59:44] *** Joins: Akimb (~Akimb@86.100.13.100)
[12:00:35] <electr0n> https://github.com/axios/axios#axiosgeturl-config-1
[12:03:43] <l__q> can I add method inside config? axios({ url, method: "get", params: { posts: 1 } })
[12:04:50] <l__q> this make always request to base url provided in url without params
[12:07:05] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[12:07:06] <silly> you do have to learn reading docs yourself, if you want to become a software developer... https://axios-http.com/docs/req_config
[12:09:09] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[12:09:33] *** Joins: Jigsy (~Jigsy@user/jigsy)
[12:09:48] *** Joins: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de)
[12:11:58] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[12:14:30] <l__q> axios({ baseURL: "https://jsonplaceholder.typicode.com/", method: "get", params: { posts: 1 } })
[12:14:43] <l__q> still only to base url make request
[12:15:09] <l__q> not to /posts/1
[12:16:00] <silly> i'd expect it to make the request to https://jsonplaceholder.typicode.com/?posts=1
[12:16:14] <l__q> ahh, okay..
[12:16:17] <l__q> thanks
[12:16:52] <silly> maybe paramsSerializer does what you want, dunno
[12:17:58] <l__q> okay, i got, thanks! :)
[12:19:02] *** Joins: entuland (~entuland@user/entuland)
[12:19:21] <silly> oh look belo horizonte... now i wonder what ever happened to sorella
[12:19:34] <l__q> Im only forget that params are ?users=1 :x
[12:20:11] <theskillwithin> um
[12:20:38] *** Quits: dunkeln (~dunkeln@94.128.224.230) (Ping timeout: 265 seconds)
[12:23:42] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Quit: Ping timeout (120 seconds))
[12:24:47] *** Joins: stenno (~stenno@user/stenno)
[12:29:31] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[12:32:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[12:34:09] <Ducki> if somebody could poke me in the right direction ;) I'm wondering where I'm missing an await in order to fix the undefined error in L9 (the object should be already defined in the awaited method in L27). https://gist.github.com/Ducki/f24dff8318c7313b454075b0d0004bfa#file-await-js-L9
[12:36:10] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[12:36:42] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:77:a187:da96:796a)
[12:37:11] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:30] <silly> i would use a step debugger in line 27
[12:38:01] <silly> what i really wanted to say: i don't know
[12:38:45] <Ducki> ;)
[12:39:30] <theskillwithin> silly idk either
[12:39:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:59] *** Joins: dunkeln_ (~dunkeln@94.128.224.230)
[12:42:56] *** Joins: Noustropos (~Noustropo@91.221.89.25)
[12:44:15] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[12:48:03] <Ducki> interesting, I can't set breakpoints within the IIFE
[12:51:35] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 268 seconds)
[12:52:33] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:53:15] *** Joins: stenno (~stenno@user/stenno)
[13:02:42] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[13:04:24] <silly> oh, is this top level await? is that even supported?
[13:04:58] *** Parts: dunkeln_ (~dunkeln@94.128.224.230) ()
[13:05:01] <silly> eww, i'm only slowly getting back into js after a year not doing anything
[13:05:31] *** Quits: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de) (Quit: Leaving)
[13:05:42] *** Joins: Deide (~Deide@217.155.19.23)
[13:05:42] *** Quits: Deide (~Deide@217.155.19.23) (Changing host)
[13:05:42] *** Joins: Deide (~Deide@user/deide)
[13:05:53] <Ducki> silly: yea as the self invoking function it is
[13:06:33] <Ducki> well I believe my problem has nothing to do with the asyncs, rather with the onload-eventhandler. Guess I have to refactor around that
[13:07:32] <silly> instead of breakpoints, does the debugger; statement work?
[13:09:10] <Ducki> ah
[13:09:13] <Ducki> yes that works
[13:10:00] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[13:11:51] *** Joins: kmh (~kmh@p200300df5f3d230045f52d190d2e11da.dip0.t-ipconnect.de)
[13:14:35] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[13:16:51] *** Joins: sagax (~sagax@213.138.71.146)
[13:23:29] *** Quits: cismee (~cisme_@user/cisme/x-1186982) (Read error: Connection reset by peer)
[13:23:29] *** Joins: bobdobbs (~user@2406:5a00:f001:c600:34e8:996e:ffb3:8cba)
[13:23:37] *** Joins: cismee (~cisme_@2600:1700:d980:1a40:6324:7e4d:c8a1:4c1e)
[13:24:15] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Quit: Connection closed)
[13:24:36] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[13:24:42] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:24:48] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:25:20] *** Joins: Isil`Zha (~isilzha@2a02:8070:c387:8300:5e96:89fd:877f:35df)
[13:26:09] *** Joins: Safa_[A_Boy] (~Safa@89.148.4.173)
[13:26:32] <Safa_[A_Boy]> Hi all. What's the best way to await a setter?
[13:26:49] <Safa_[A_Boy]> (The setter does an http request)
[13:26:53] <silly> you mean to avoid setters?
[13:27:07] <silly> say lol
[13:27:27] <Safa_[A_Boy]> I mean to wait for the setter's async function to finish
[13:28:06] <silly> !getter/setter
[13:28:06] <jellobot> silly, Getters and Setters are incompatible with the reflective semantics of JS. Using them will result in code that interacts in awkward (and error-prone!) ways with idiomatic JS libraries. They're also usually harder to optimise and reason about. Since JS isn't a message-passing language, using plain properties is usually a better idea.
[13:28:16] <silly> was what i wanted to refer to...
[13:28:20] *** Quits: mcfrdy (uid507892@user/mcfrdy) ()
[13:29:17] <silly> but that was unrelated to your question, i know. please ignore me
[13:29:43] <Safa_[A_Boy]> I understand what you're pointing at: Don't use getters/setters in the first place
[13:29:46] <silly> did await not work?
[13:30:16] <Safa_[A_Boy]> Nope. I think because an assignment doesn't "return" anything to await..
[13:30:25] <silly> ah
[13:30:33] <Safa_[A_Boy]> I was wondering what others are doing..
[13:30:56] <Safa_[A_Boy]> Except from not using getters/setters :)
[13:31:13] *** Quits: thekingofbandit (tkob@user/thekingofbandit) (Remote host closed the connection)
[13:31:42] *** Joins: eXistenZ (~biskit@bzq-109-67-145-67.red.bezeqint.net)
[13:31:48] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:31:48] *** Quits: david_hilbert (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:33:36] *** Joins: Crash1hd (~Crash1hd@25.78.247.35.bc.googleusercontent.com)
[13:34:37] <Safa_[A_Boy]> Ok, I'll just use setX functions instead
[13:34:39] <Safa_[A_Boy]> Thanks!
[13:35:33] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:6324:7e4d:c8a1:4c1e) (Ping timeout: 255 seconds)
[13:35:45] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:36:14] *** Joins: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net)
[13:36:39] *** Quits: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net) (Changing host)
[13:36:39] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[13:36:45] <Crash1hd> Anyone have any advice to why the chart is not showing up and why its not stacking when it does >  https://jsfiddle.net/0L1af39z/
[13:40:45] <silly> do you have js errors in your local code too? or is it just in jsfiddle?
[13:41:14] <Safa_[A_Boy]> Uncaught Error: Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com
[13:41:23] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[13:41:27] <Safa_[A_Boy]> Uncaught ReferenceError: fathom is not defined
[13:42:09] <Safa_[A_Boy]> Last one is an issue with jsfiddle, sorry
[13:42:36] <Safa_[A_Boy]> Btw, Crash1hd. You should start considering SVG charts
[13:44:15] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Client Quit)
[13:44:40] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[13:51:34] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[13:53:32] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[13:54:18] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Quit: Connection closed)
[13:56:26] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[13:58:10] *** Joins: fef (~thedawn@user/thedawn)
[14:02:41] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[14:03:00] *** Quits: Crash1hd (~Crash1hd@25.78.247.35.bc.googleusercontent.com) (Ping timeout: 255 seconds)
[14:03:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[14:03:11] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[14:03:34] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[14:09:17] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 268 seconds)
[14:09:26] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Quit: Connection closed)
[14:09:51] *** Quits: incognito__ (~relativit@171.11.13.109.rev.sfr.net) (Quit: Going offline, see ya! (www.adiirc.com))
[14:12:05] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:12:19] *** Quits: Noustropos (~Noustropo@91.221.89.25) (Quit: WeeChat 3.0)
[14:26:45] *** Joins: pulse (~pulse@user/pulse)
[14:29:17] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 255 seconds)
[14:36:01] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Remote host closed the connection)
[14:36:31] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[14:38:00] *** Joins: acoooo (~acoooo@31.223.129.121)
[14:38:24] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[14:38:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[14:39:56] *** Quits: acoooo (~acoooo@31.223.129.121) (Quit: acoooo)
[14:42:35] *** Joins: Intelo (~Intelo@88.244.92.35)
[14:43:30] *** Joins: fef (~thedawn@user/thedawn)
[14:48:10] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[14:48:10] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[14:48:10] *** Joins: Heraes (~Heraes@user/romarain)
[15:04:54] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: No route to host)
[15:06:45] *** Joins: Drgonz0 (Drgonz0@107-179-254-222.cpe.teksavvy.com)
[15:08:52] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[15:09:09] *** Joins: labella (~labella@78.186.25.168)
[15:13:11] *** Joins: stenno (~stenno@user/stenno)
[15:20:03] <stenno> Ducki: why should it work?
[15:20:43] <stenno> connect will _not_ await onload
[15:21:15] <stenno> mpSdk will be undefined in line 9
[15:21:17] <Ducki> stenno: yes, I eventually though of that. I have wrapped the onload-handler inside a Promise now, which I can now await
[15:21:26] <stenno> nice
[15:28:05] *** Joins: acoooo (~acoooo@31.223.129.121)
[15:31:34] <stenno> Ducki: this wrapping is usually how you can promisify events
[15:31:47] <stenno> important pattern
[15:32:01] <Ducki> I'll memorize it :)
[15:32:35] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[15:33:13] <stenno> const promisified = new Promise((res,rej) => el.addEventListener('click', (e) => res(e)));
[15:34:04] <stenno> obvious shortcomings are 1) no rejections, 2) it only works once
[15:34:36] <Ducki> mine looks like this: await new Promise(resolve => iframe.contentWindow.onload = resolve);
[15:35:00] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 268 seconds)
[15:35:20] <Ducki> I guess it is not top notch style to directly await it
[15:35:45] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[15:37:28] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[15:39:42] *** Quits: Brianmancer (~Neuromanc@user/briandamag) (Ping timeout: 258 seconds)
[15:40:17] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: No route to host)
[15:43:03] <stenno> its not optimal in general
[15:43:17] <stenno> but its the best we can do (to my knowledge)
[15:43:45] *** Joins: rbdr (~rbdr@37.120.25.13)
[15:44:57] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[15:46:31] *** Quits: labella (~labella@78.186.25.168) (Quit: Client closed)
[15:47:10] *** Quits: eXistenZ (~biskit@bzq-109-67-145-67.red.bezeqint.net) (Quit: Leaving)
[15:49:38] *** Joins: The_Blode_ (~Blode@92.40.180.219.threembb.co.uk)
[15:49:55] *** Quits: kmh (~kmh@p200300df5f3d230045f52d190d2e11da.dip0.t-ipconnect.de) (Quit: Leaving)
[15:50:34] *** Quits: The_Blode (~Blode@92.40.180.219.threembb.co.uk) (Read error: Connection reset by peer)
[15:54:02] *** Quits: The_Blode_ (~Blode@92.40.180.219.threembb.co.uk) (Client Quit)
[15:54:42] *** Joins: The_Blode (~Blode@92.40.180.219.threembb.co.uk)
[15:55:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 255 seconds)
[15:56:22] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:58:26] *** Quits: The_Blode (~Blode@92.40.180.219.threembb.co.uk) (Client Quit)
[16:01:09] *** Quits: acoooo (~acoooo@31.223.129.121) (Quit: acoooo)
[16:08:46] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 265 seconds)
[16:10:26] *** Joins: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de)
[16:11:34] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[16:13:58] *** Quits: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com) (Ping timeout: 252 seconds)
[16:17:02] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[16:19:14] *** Joins: gggpkm (~gggpkm@123.113.179.166)
[16:22:25] *** Joins: mexen (uid495612@user/mexen)
[16:32:03] *** Joins: thiras (~thiras@user/thiras)
[16:41:51] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 255 seconds)
[16:45:10] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[16:45:38] *** Joins: enoq (~enoq@194-208-146-143.lampert.tv)
[16:50:18] *** Joins: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08)
[16:52:50] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[16:55:38] *** Joins: brian_da_mage (~Neuromanc@user/briandamag)
[16:55:47] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 268 seconds)
[16:58:18] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[17:00:43] *** Quits: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de) (Quit: Leaving)
[17:03:40] *** Joins: kmh (~kmh@p200300df5f3d230035b7f5463ee68434.dip0.t-ipconnect.de)
[17:07:55] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:07:55] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[17:07:55] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[17:16:12] *** Joins: The_Blode (~Blode@92.40.180.240.threembb.co.uk)
[17:17:49] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:20:05] *** Quits: Safa_[A_Boy] (~Safa@89.148.4.173) (Ping timeout: 245 seconds)
[17:21:29] <jaawerth> Ducki: since prormises are onetime things, I'd suggest adding a { once: true } - while that particular one wouldn't be an issue, that habit can save you memory leaks for when you do it on an element that sticks around and you might create that promise multiple times - e.g. in the click example the event listeners could build up forever
[17:22:07] <Ducki> oh, I see, thank you!
[17:22:43] *** Joins: Safa_[A_Boy] (~Safa@89.148.4.173)
[17:25:32] *** Joins: fef (~thedawn@user/thedawn)
[17:25:58] *** Quits: xse_ (~xse@user/xse) (Quit: mwah)
[17:27:34] <jaawerth> sure thing
[17:28:15] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[17:29:58] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 265 seconds)
[17:30:54] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:4829:dbfa:9849:bbfb) (Ping timeout: 255 seconds)
[17:31:57] *** Joins: silly_ (~silly@user/silly)
[17:32:51] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[17:36:59] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0) (Quit: Leaving)
[17:38:14] *** Joins: xse (~xse@user/xse)
[17:40:14] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[17:40:29] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[17:41:59] *** Quits: gggpkm (~gggpkm@123.113.179.166) (Ping timeout: 258 seconds)
[17:44:54] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:34e8:d560:f9f:5c42) (Quit: Leaving)
[17:46:59] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:703d:a760:f1e7:a405)
[17:50:19] *** Joins: Liblx (~Alex@2a02:810c:280:59c:3090:85c6:9f17:fd2a)
[17:52:36] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[17:53:16] *** Quits: Liblx (~Alex@2a02:810c:280:59c:3090:85c6:9f17:fd2a) (Excess Flood)
[17:53:43] *** Joins: Liblx (~Alex@2a02:810c:280:59c:3090:85c6:9f17:fd2a)
[17:59:20] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[18:01:38] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:f5ec:dd60:1223:a3c0)
[18:05:51] *** Quits: enoq (~enoq@194-208-146-143.lampert.tv) (Quit: enoq)
[18:06:36] *** Joins: stenno (~stenno@user/stenno)
[18:06:55] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[18:07:59] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 255 seconds)
[18:09:07] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:13:47] *** Joins: Guest15 (~Guest15@2402:e280:2117:297:e041:4ae1:dd3c:1f08)
[18:15:18] *** Quits: Guest15 (~Guest15@2402:e280:2117:297:e041:4ae1:dd3c:1f08) (Client Quit)
[18:26:29] *** Quits: rbdr (~rbdr@37.120.25.13) (Quit: :()
[18:29:08] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[18:30:02] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[18:38:30] *** Quits: Liblx (~Alex@2a02:810c:280:59c:3090:85c6:9f17:fd2a) (Quit: WeeChat 3.1)
[18:39:29] *** Joins: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at)
[18:40:28] <hmw[at]> I am trying to move my script processor to the newer AudioWorklet. So far, I made it, but the replacement of the custom function does not work; The custom function just doesn't change. How do I replace a method, when class syntax is used? https://paste.debian.net/1204678/
[18:40:51] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:41:11] *** Joins: bobdobbs` (~user@150.107.175.200)
[18:41:56] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:f5ec:dd60:1223:a3c0) (Ping timeout: 250 seconds)
[18:42:00] *** Quits: bobdobbs (~user@2406:5a00:f001:c600:34e8:996e:ffb3:8cba) (Ping timeout: 255 seconds)
[18:42:27] <hmw[at]> https://harald.ist.org/tools/procedural_wave/ <-- this is, what I am trying to move over to AudioWorklets
[18:43:58] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 246 seconds)
[18:48:51] <entuland> hmw[at], where is the definition of the parent class?
[18:49:04] <hmw[at]> AudioWorkletProcessor is some kind of built in
[18:49:58] <hmw[at]> https://paste.debian.net/1204680/ <-- my wrapper of the AudioWorklet in the main program
[18:51:17] <hmw[at]> As far as I understand things, I need a local function in the instance of the worklet, that I can re-make from a given string
[18:51:20] <entuland> and the function you're overriding is which one?
[18:51:37] <hmw[at]> customFunction
[18:52:13] <entuland> but is there a customFunction defined in the super class that you could override? if it only exists on your own class, it can't override anything
[18:52:28] <entuland> what's the exact thing that isn't working?
[18:52:30] <hmw[at]> I want to override it in the instance
[18:52:44] <entuland> I don't understand
[18:52:49] <hmw[at]> well. I do this.customFunction = new Function( 'time', 'channel_index', new_source ); and it does not happen. I do the same thing in the old version successfully
[18:53:32] <hmw[at]> https://paste.debian.net/1204678/ -- it receives the new source, but does not successfully swap out the method
[18:56:00] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[18:56:09] <hmw[at]> hah, this seems to help: https://paste.debian.net/1204682/ - I moved the custom function outside the class, as a global function. Now I can swap it.
[18:57:19] *** Joins: stenno (~stenno@user/stenno)
[18:57:45] <hmw[at]> Heheh. Time seems to run slower in the worklet
[18:58:44] <entuland> dunno, can't tell why it didn't let you swap it out
[19:01:00] <entuland> by the way, "override" there was misleading right before I said "I don't understand", that's actually overwriting / replacing (as you wrote the first time)
[19:01:42] <entuland> my bad for not catching it and assuming you were trying to override
[19:02:10] <hmw[at]> ah. My bad too. I am not form with classes in JS and not used to the terms. Now that you say it, I can see how I was a bit unclear :)
[19:02:28] <hmw[at]> currentTime is off inside the worklet :(
[19:04:04] <entuland> honestly I don't like the class notation and I wonder whether you can achieve the same result without having to extend at all
[19:04:17] <hmw[at]> I tried that, but didn't succeed
[19:04:46] <entuland> yeah, seems like you're supposed to extend there
[19:14:37] *** Quits: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08) (Quit: Ping timeout (120 seconds))
[19:16:09] *** Joins: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08)
[19:18:33] *** Joins: Naan (~Naan@user/naan)
[19:21:13] *** Joins: zebrag (~chris@user/zebrag)
[19:25:36] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0) (Quit: Leaving)
[19:26:14] *** Quits: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08) (Quit: Client closed)
[19:26:51] *** Joins: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08)
[19:27:27] *** fef is now known as admin
[19:27:36] *** admin is now known as adminll
[19:27:48] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:31:05] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Quit: WeeChat 3.2)
[19:34:02] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:34:53] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[19:37:21] *** Quits: CoJaBo (~aztec@user/CoJaBo) (Ping timeout: 268 seconds)
[19:37:57] *** Joins: ferdna (~ferdna@user/ferdna)
[19:40:01] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[19:43:03] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[19:43:26] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[19:43:31] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Ping timeout: 268 seconds)
[19:44:04] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[19:44:08] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[19:44:08] *** Quits: Seich (~seich@ns513649.ip-198-27-67.net) (Ping timeout: 268 seconds)
[19:44:35] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[19:45:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:45:01] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[19:45:33] *** Joins: LtHummus_ (~lthummus@97-126-113-251.tukw.qwest.net)
[19:45:38] *** Joins: Seich (~seich@ns513649.ip-198-27-67.net)
[19:45:54] *** Quits: abirkill (snoopy@d207-216-233-23.bchsia.telus.net) (Read error: Connection reset by peer)
[19:45:59] *** Quits: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: em (~em@li247-180.members.linode.com) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: samsch (~samsch@171.ip-192-99-69.net) (Ping timeout: 268 seconds)
[19:46:08] *** Joins: abirkill- (snoopy@d207-216-233-23.bchsia.telus.net)
[19:46:36] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 268 seconds)
[19:46:42] *** Joins: em (~em@li247-180.members.linode.com)
[19:47:10] *** Quits: webstrand (~webstrand@user/webstrand) (Read error: Connection reset by peer)
[19:47:13] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[19:47:32] *** Quits: adminll (~thedawn@user/thedawn) (Remote host closed the connection)
[19:47:39] *** abirkill- is now known as abirkill
[19:48:03] *** Joins: Guest9 (~Guest9@43.242.116.127)
[19:48:12] *** Joins: adminll (~thedawn@user/thedawn)
[19:48:24] *** Joins: samsch (~samsch@171.ip-192-99-69.net)
[19:48:27] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[19:49:30] *** Joins: webstrand (~webstrand@user/webstrand)
[19:50:47] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[19:53:27] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[19:53:32] *** Joins: gggpkm (~gggpkm@60.10.194.48)
[19:56:26] *** Joins: pulse (~pulse@user/pulse)
[19:58:37] *** Quits: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Read error: Connection reset by peer)
[19:58:54] <hmw[at]> 2 cores almost at 100% for a pretty simple sine(t*c) custom wave form
[19:59:29] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-20.prtc.net)
[19:59:36] <hmw[at]> ah, "okay". I forgot about the analyser I have running on canvas
[20:03:09] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:04:23] *** Joins: mrdata (~mrdata@user/mrdata)
[20:05:30] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-20.prtc.net) (Quit: Client closed)
[20:06:35] *** Joins: cajiga (~john@45.130.83.64)
[20:08:54] <jwpapi> https://twitter.com/levelsio/status/1405780367261376512
[20:09:00] <jwpapi> Has this been discussed in this channel?
[20:09:37] <wroathe> Talking about that would itself be politics
[20:10:24] <hmw[at]> also offtopic
[20:10:25] <jwpapi> but there is no ban in this channel is there?
[20:11:33] <jwpapi> I avoid posting in #nodejs because I got missionized about working in advertising industry
[20:13:55] <nedbat> jwpapi: you can certainly talk about JavaScript here.
[20:14:31] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[20:17:15] *** Quits: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08) (Quit: Client closed)
[20:17:22] *** Joins: Betal (~Beta@user/betal)
[20:18:28] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:18:44] *** Joins: mickey (~user@user/mickey)
[20:24:15] *** Joins: t3nj1n (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[20:25:47] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[20:26:16] *** Joins: hendursa1 (~weechat@user/hendursaga)
[20:28:50] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 255 seconds)
[20:30:56] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0) (Quit: Leaving)
[20:31:06] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:25] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:1cfa:7851:73cf:5368)
[20:34:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:35:08] *** Joins: gggpkm_ (~gggpkm@221.219.67.56)
[20:35:19] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[20:35:45] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[20:36:00] *** Quits: gggpkm (~gggpkm@60.10.194.48) (Read error: Connection reset by peer)
[20:37:12] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:1cfa:7851:73cf:5368) (Ping timeout: 250 seconds)
[20:39:56] *** Quits: gggpkm_ (~gggpkm@221.219.67.56) (Ping timeout: 256 seconds)
[20:41:14] <birkoff> can I use onbeforeunload event to modify outgoing URLs from a page ?
[20:43:25] <wroathe> That sounds shady AF
[20:43:48] <birkoff> AF?
[20:44:18] <ljharb> jwpapi: that's stupid. 1000 people isn't enough of a sample size to draw any conclusions from.
[20:44:20] <birkoff> I need to one current query string to the next link inside the website ofcourse
[20:44:49] <ljharb> jwpapi: and no, there will never be a ban in this channel on talking about the thing that affects all aspects of everybody's life
[20:44:51] <wroathe> as fuck
[20:45:02] *** Joins: keypusher (keypusher@user/keypusher)
[20:45:13] <wroathe> birkoff: What are you actually trying to do?
[20:46:02] <jwpapi> ljharb: I assumed there wouldn’t in #nodejs,  I was hoping there might be in #javascript
[20:46:23] <birkoff> pass a setting in my app
[20:46:47] <jwpapi> It’s also possible to make a #javascript-politics so ppl that are interested to talk about politics of the community can do it there
[20:46:48] <wroathe> birkoff: There's a 99% probability that there's a better way to do that than beforeunload.
[20:46:58] <birkoff> go ahead
[20:47:11] <ljharb> jwpapi: nope, the politics of the community are relevant here
[20:47:33] <ljharb> jwpapi: politics don't come up all that often tho, so bringing up banning it seems more like one of those "small number of vocal people" things.
[20:47:35] <wroathe> birkoff: If the query string parameter for the link is dependent on user interaction on the page, then update the links eagerly instead of before unload
[20:47:52] <wroathe> birkoff: For one, the status bar of the browser will then show the complete and accurate URL, which is always a good thing
[20:48:30] <jwpapi> ljharb:  wdym with relevant
[20:48:51] <ljharb> jwpapi: i mean politics affects all aspects of all life, so it can't ever *not* be relevant
[20:48:52] <jwpapi> why is it relevant to the node or js community if I work in advertising ?
[20:48:59] <ljharb> jwpapi: that's not politics
[20:49:06] <ljharb> jwpapi: that's just people disliking unethical industries
[20:49:53] *** Joins: gggpkm (~gggpkm@221.219.67.56)
[20:49:58] <jwpapi> ^this is a politic statement imho, even tho you formulate it as a fact
[20:51:35] *** Joins: eXistenZ (~biskit@bzq-109-67-145-67.red.bezeqint.net)
[20:53:49] <jwpapi> whatever I’m not gonna stop working in advertising and the js community is not gonna change. Sad for me, but gotta live with it.
[20:56:18] <wroathe> jwpapi: What's the situation? How is advertising relevant? Were you advertising in the node.js channel or something?
[20:56:40] *** Joins: enoq (~enoq@194-208-146-143.lampert.tv)
[20:56:40] *** Joins: gggpkm_ (~gggpkm@123.113.185.45)
[20:56:54] <wroathe> If we were to exclude everyone who works in advertising we'd have to drop all googlers from IRC
[20:57:08] <paulcarroty> jwpapi: you can try more "ethical" industries like porn or drugs too 🤠
[20:57:27] *** Quits: brian_da_mage (~Neuromanc@user/briandamag) (Ping timeout: 255 seconds)
[20:57:31] <wroathe> Or arms dealer
[20:57:34] <wroathe> That's a real man's gig
[20:58:32] <jwpapi> wroathe: No somehow it came up that I was working on a tool that what used in advertising. I don’t exactly remember how it came out and I didn’t try to hide, but one member was missonising me on how bad advertising is and I should find another job
[20:58:53] <wroathe> jwpapi: Just ignore them. You're taking this too personally.
[20:59:12] *** Quits: gggpkm (~gggpkm@221.219.67.56) (Ping timeout: 256 seconds)
[20:59:38] <wroathe> jwpapi: There's hundreds or thousands of Facebook and Google employees that float around IRC and other public developer forums. If we were to exclude all advertisers we'd have to drop them too.
[20:59:48] <jwpapi> I got later forbidden to ask questions that were related to advertising
[20:59:59] *** Quits: arthurpbs (~arthurpbs@168.121.98.109) (Ping timeout: 268 seconds)
[21:00:03] <jwpapi> I think ljharb removed that call later
[21:00:12] <wroathe> jwpapi: Well, yeah, you shouldn't be focusing on advertising in the node.js channel
[21:00:27] <jwpapi> However it was very disappointing and frustrating for me since I don’t feel welcomed there anymore
[21:00:49] <jwpapi> We ended up blocking each other
[21:00:52] <falafel> it's totally fair for somebody to not want to give you advice. It is not fair to prevent people from giving you advice
[21:01:03] <jwpapi> falafel: I agree
[21:01:08] <wroathe> jwpapi: Well, I can't help you with that. You'll need to develop a thicker skin.
[21:01:59] <wroathe> jwpapi: If you're asking questions germaine to building to building your advertising product with node.js than you're totally in the right
[21:02:11] <wroathe> jwpapi: If you're asking questions on *how* to advertise in the node.js channel, then you're in the wrong
[21:02:41] <jwpapi> wroathe: That’s not what the loudest people in the community think
[21:02:58] <jwpapi> wroathe: no that’s definitely not what I did ^^
[21:03:02] <wroathe> jwpapi: If people are shaming you for asking questions related to how you build your advertising product, then they're in the wrong, and you should just ignore them
[21:03:17] <wroathe> jwpapi: The math on this is pretty easy
[21:04:40] <paulcarroty> nodejs channel is full of mongodb haters too
[21:04:52] <jwpapi> but yeah it’s fine just wish it would be different that’s all. I would feel coding communities would be more welcoming to newcomers if the communities wouldn’t be as polictical always, also in terms of what  software projects to use etc
[21:05:21] <jwpapi> Like very often it starts with a simple question and then you have to change your whole architecture
[21:05:56] <jwpapi> the guy we talking about is a great developer and super smart guy, so that’s also a little bit sad
[21:05:56] <wroathe> It sounds like you just need to gain more experience with socializing with other adults :P
[21:06:16] <paulcarroty> politic is everywhere, again
[21:06:26] <jwpapi> maybe more in development forums ^^
[21:07:19] <wroathe> You'll meet all kinds of people with all kinds of militant opinions. Learning how to filter that information is just part of growing.
[21:08:36] <jwpapi> wroathe: it wasn’t even an advertising product. It was something about cookies for a normal product.
[21:09:40] <jwpapi> wroathe: yeah that’s true. However I wonder if guidelines of reducing politics talk would improve communities
[21:09:40] *** Quits: Safa_[A_Boy] (~Safa@89.148.4.173) (Ping timeout: 245 seconds)
[21:09:44] <jwpapi> that’s why I posted
[21:09:54] <wroathe> jwpapi: Nope. You'll just need to get over it.
[21:10:17] <jwpapi> wroathe: k k I don’t wanna bother you further
[21:10:38] <jwpapi> but #javascript is definitely a little bit different than #node.js
[21:11:23] <jwpapi> more pragmatic imho, which is also quite clear since node is a lot about architecture and less about specific snippets
[21:11:26] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Read error: Connection reset by peer)
[21:11:39] <wroathe> jwpapi: If someone really gets your goat you can just /ignore them
[21:11:52] <jwpapi> that’s what I did
[21:12:06] *** Joins: arthurpbs (~arthurpbs@168.121.98.178)
[21:12:07] <wroathe> jwpapi: Or if the channel starts down a topical road you find distasteful you can just go for a walk and come back to talk once cooler heads prevail
[21:12:56] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[21:16:37] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[21:18:01] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Read error: Connection reset by peer)
[21:18:24] *** Joins: Crash1hd (~Crash1hd@25.78.247.35.bc.googleusercontent.com)
[21:21:03] *** Joins: stenno (~stenno@user/stenno)
[21:23:17] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[21:25:53] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[21:31:30] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:31:33] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: Connection reset by peer)
[21:32:18] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[21:38:00] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[21:41:08] <jwpapi> ty
[21:42:38] *** Joins: Safa_[A_Boy] (~Safa@89.148.4.173)
[21:43:34] *** Quits: gggpkm_ (~gggpkm@123.113.185.45) (Remote host closed the connection)
[21:54:07] *** Joins: shades (shades@milliways.ramdrive.org)
[21:57:45] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 255 seconds)
[22:01:02] *** Joins: CoderGuy (~CoderGuy@user/coderguy)
[22:01:36] <CoderGuy> for( key in getObjectFromFunction()){ //how to access the getObjectFromFunction part here? can you assign to variable inside the for statement??}
[22:02:03] <CoderGuy> or do you have to assign to variable prior to the for loop?
[22:02:38] <silly_> const x = getObjectFromFunction(); for (let key in x)
[22:02:42] <silly_> so... yes
[22:02:44] <CoderGuy> so prior
[22:02:49] <CoderGuy> there's really no way though?
[22:02:57] <silly_> why should there?
[22:03:05] <CoderGuy> idk cleaner less lines of code
[22:03:11] <CoderGuy> how is it even holding the variable inside the for?
[22:03:54] <fkm> Less lines of codes is not always cleaner.
[22:03:59] <silly_> key will be scoped to the for() {} block
[22:04:00] <CoderGuy> I guess technically it compiles it and that's why
[22:04:27] <CoderGuy> fkm by definition less lines of code is cleaner, takes up less space etc
[22:04:46] <silly_> by definition, definitely not
[22:04:46] <fkm> It can be convoluted and hard to read.
[22:05:16] <CoderGuy> for you it's hard to read but not for the computer, and so it is cleaner just harder for you to read anyways in this specific case, having less would be better if possible
[22:05:31] <fkm> Never write code for the interpreter. Always write code for people.
[22:05:37] <silly_> you don't write code for computers, but for people
[22:05:55] <CoderGuy> okay but again in this case i'm just saying can you put the variable in the for, or do you legit have to assign prior?
[22:06:36] <fkm> I'd say no. Maybe there's a trick with parenthesis. But don't even try ;-)
[22:06:41] <silly_> then, i think you can also do for(let x in y=something())
[22:06:46] <silly_> havent't tried it though
[22:07:09] <silly_> and don't ever assing in ... forgot the word
[22:07:50] <nedbat> CoderGuy: you're going to need to make a name for that variable, so give it its own line
[22:08:00] *** Joins: mexen (uid495612@user/mexen)
[22:09:09] <nedbat> CoderGuy: you said "in this specific case, having less would be better"  why is that?
[22:09:18] <silly_> ah, lj once said "do not conflate assignment with expressions"
[22:09:28] *** Joins: Rockwood (~Rocky@user/rocky)
[22:11:46] <silly_> if this would work, for(let x in y=something()) i'd expect y to be a global variable and i wouldn't necessarily expect for(let x in let y=something()) to work
[22:11:58] *** Quits: Safa_[A_Boy] (~Safa@89.148.4.173) (Quit: Leaving)
[22:12:23] <silly_> it's just terrible and worse
[22:13:14] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 255 seconds)
[22:13:42] <silly_> in other news: /me is trying to setup a new webpack/react/... project. setup is terrible and worse too
[22:14:12] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[22:14:25] *** Joins: mcfrdy (~mcfrdy@45.67.96.126)
[22:14:25] *** Quits: mcfrdy (~mcfrdy@45.67.96.126) (Changing host)
[22:14:25] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[22:14:38] <silly_> i come from a time when people did `npx webpack-dev-server` you must know
[22:16:23] <silly_> picking up legacy projects in the modern world will be like `never-before-seen-or-felt-pita` i think
[22:17:31] *** Joins: Axy (~Axy@user/axy)
[22:17:34] <stenno> const obj = objectFromFunction(); Object.keys(obj).forEach(...)
[22:18:06] <silly_> CoderGuy, ^
[22:18:24] <CoderGuy> silly yeah I know how to do that i'm just trying to see if there is a way to do it without
[22:19:24] <nedbat> CoderGuy: can you tell us more about what you will be doing with the "x = getObjectFromFunction()" value? Why do you need it in the loop?
[22:19:29] <CoderGuy> nedbat, well in this specific case we're looking at 2 lines merging into 1 line, so var dictionary = getDictionary(); for(key in dictionary){//access dictionary here}
[22:19:48] <CoderGuy> instead of for(key in getDctionary()){//access dictionary here how?}
[22:20:10] <CoderGuy> i'm iterating over the values inside the dictionary
[22:20:23] <silly_> you want to modify the return value inside the loop? then what?
[22:20:24] <CoderGuy> and I need the key and the value to be seperate variables
[22:20:38] <CoderGuy> no i'm just grabbing them and assigning them elsewhere
[22:20:52] <Rockwood> silly_, o/
[22:20:55] *** Joins: Crash1hd_ (~Crash1hd@s0106a84e3f475583.cg.shawcable.net)
[22:20:56] *** Quits: Crash1hd (~Crash1hd@25.78.247.35.bc.googleusercontent.com) (Read error: Connection reset by peer)
[22:21:13] <stenno> CoderGuy: just use Object.entries instead of Object.keys then
[22:21:25] <CoderGuy> but I need the key as well...
[22:21:25] <nedbat> CoderGuy: there you are: there was an easier way!
[22:21:31] <stenno> CoderGuy: just use Object.entries instead of Object.keys then
[22:21:39] <CoderGuy> what does entires do hold on
[22:21:45] <Rockwood> stenno, cheers bro
[22:21:52] <nedbat> CoderGuy: for (const [key, value] of Object.entries(object1)) {
[22:21:55] <CoderGuy> oh that works
[22:22:01] <silly_> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries
[22:22:06] <CoderGuy> wait can't you just do then
[22:22:09] <CoderGuy> hold up
[22:22:29] <stenno> n> Object.entries({a: 23}).forEach(([k,v]) => console.log(k,v))
[22:22:30] <jellobot> (okay) a 23
[22:22:31] <nedbat> though i'm confused why it's const there?
[22:22:37] <silly_> there's .values, .keys and .entries which have both
[22:22:39] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:22:46] <nedbat> because it's a new variable for each iteration?
[22:22:58] <stenno> hi Rockwood
[22:23:49] <Rockwood> stenno, i drunk whiskey lol
[22:24:41] <stenno> n> const mapped = Object.entries({a: 23}).map(([k,v]) => [`${k}x`, `${v}y`]); const obj = Object.fromEntries(mapped); obj)
[22:24:42] <jellobot> (fail) SyntaxError: Unexpected token ')'
[22:24:43] <stenno> n> const mapped = Object.entries({a: 23}).map(([k,v]) => [`${k}x`, `${v}y`]); const obj = Object.fromEntries(mapped); obj
[22:24:44] <jellobot> (okay) { ax: '23y' }
[22:27:03] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[22:27:18] <stenno> n> Array.from(Object.entries([,1,,2,,3]).filter((k,v) => k&1))
[22:27:18] <jellobot> (okay) []
[22:27:35] <silly_> okay, back to /me trying to set up webpack/babel/react with a recent step-by-step guide... /me wondering if October 30, 2020 is recent enough, /me wants to cry
[22:27:55] <stenno> n> Array.from(Object.entries([,1,,2,,3]).filter(([k,v]) => k&1))
[22:27:55] <jellobot> (okay) [ [ '1', 1 ], [ '3', 2 ], [ '5', 3 ] ]
[22:28:12] <stenno> ah well
[22:28:51] * silly_ now wonders if it might be a better idea to smash the mouse into the monitor and have a drink with Rockwood instead
[22:29:07] <Rockwood> cheers
[22:29:52] <silly_> oh noes... i have only pastis, so i'll drink with qswz :P
[22:30:07] <stenno> pastis is great
[22:30:26] <silly_> i want ricard now
[22:31:14] <silly_> cheap pastis from lidl isn't that great
[22:34:08] <silly_> lol, that reminds me of a local guy named ricard https://www.youtube.com/watch?v=OEsX0efFPwU
[22:34:08] <skillbot> YouTube Title: UTJEHA - Zlato OdZadra
[22:34:17] *** Joins: codebam (~codebam@user/codebam)
[22:34:36] <silly_> that's it for js today :D bye
[22:34:51] <CoderGuy> interesting
[22:43:07] <silly_> okay now rm -r; icandothat -a
[22:44:50] *** Quits: Crash1hd_ (~Crash1hd@s0106a84e3f475583.cg.shawcable.net) (Ping timeout: 252 seconds)
[22:46:14] <CoderGuy> n> for ([index, elem] of Object.entries(a)) {console.log(index, elem);}
[22:46:15] <jellobot> (fail) ReferenceError: a is not defined
[22:46:22] <CoderGuy> sorry
[22:46:41] <CoderGuy> n> var a = {a:"b",c:"d"};for ([index, elem] of Object.entries(a)) {console.log(index, elem);}
[22:46:41] <jellobot> (okay) a b c d
[22:46:59] <CoderGuy> I like that one
[22:47:04] <stenno> also check Object.fromEntries
[22:47:20] <stenno> n> Object.fromEntries([['a',23],['b',42]])
[22:47:21] <jellobot> (okay) { a: 23, b: 42 }
[22:47:39] <CoderGuy> sure
[22:47:51] <CoderGuy> anyways this way I can grab it and have it
[22:47:55] <stenno> Object.entries and Object.fromEntries are important tools for object manipulation _if_ you have to do it
[22:48:00] <stenno> which most of the time you don't
[22:48:11] <CoderGuy> well how else do you iterate through a list of properties?
[22:48:45] <stenno> why do you want to iterate over a list of properties
[22:49:44] <CoderGuy> stenno, I only ask this because as a human being the very question that I get asked is upsetting, but if someone drove their car up to you rolled down there window and asked "hey do you know how to get to the local gas station?" would you say "why do you need to get to a gas station?"
[22:50:01] <stenno> no
[22:50:04] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[22:50:15] <CoderGuy> k then why are you asking me, why I need to iterate over a properties list XD
[22:50:17] <stenno> what is your specific use case that requires you to iterate over an object
[22:50:44] <stenno> i claimed that it is not neccessary most of the time
[22:50:51] <CoderGuy> oh the use case, I need to assign the properties to another form of display
[22:50:52] <stenno> i based that claim on my own experiences
[22:51:14] <CoderGuy> "why are you trying to get to a gas station?" "oh i'm out of gas"
[22:51:31] <stenno> n> const obj = {foo: 23, bar: 42, zomg: 123}; const {foo,bar} = obj; [foo,bar]
[22:51:31] <jellobot> (okay) [ 23, 42 ]
[22:51:35] <CoderGuy> "have you try'd biking instead" XD
[22:51:37] <stenno> like that?
[22:51:45] <stenno> no, you are missing the point actually
[22:51:51] <stenno> you are missing the point of my question
[22:51:59] <CoderGuy> I know I get asked it everytime I have a question lol
[22:52:05] <stenno> my question was more like 'maybe there is a better way to do it'
[22:52:17] <CoderGuy> yeah I know everyone wants to chime in "maybe there is a better way then what you're doing"
[22:52:19] <stenno> and its more of a xy problem than an actual problem
[22:52:37] <CoderGuy> I know, coders are like this, they think there is something better than whatever put you down this path
[22:52:39] <stenno> which might be result of your lack of understanding regarding the language
[22:52:44] <stenno> yes
[22:52:49] <CoderGuy> but 99% of the time it's not
[22:53:05] <CoderGuy> yet they act like 100% of the time it is
[22:53:21] <stenno> coders who used, and even wrote part of the specs, for decades, probably know what they are talking about
[22:53:30] <CoderGuy> yeah but here's the thing
[22:53:38] <stenno> thats called the dunning kruger effect
[22:53:50] <CoderGuy> ideally someone would go "ohhh the gas station 5 blocks away make a right" not "ohhh ya know what, cars are overrated"
[22:53:56] <stenno> you are incompetent, and because you are incompetent, you cannot reflection on your incompetence
[22:54:01] <stenno> reflect*
[22:54:28] <stenno> so you are still trying to do stuff 'your way', for no apparent reason apart from a feeling that you are competent after all
[22:54:41] <CoderGuy> there it is
[22:54:43] <stenno> disregarding expert opinion just for the hell of it
[22:55:02] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[22:55:08] <stenno> and its not even that
[22:55:11] <CoderGuy> yeah there it is, this attitude of knowing better than everyone to the point where they can't possibly have a question that was well thought out
[22:55:36] <CoderGuy> alright here we go
[22:55:52] <stenno> i don't know better than 'everyone'
[22:55:58] *** Quits: Intelo (~Intelo@88.244.92.35) (Ping timeout: 246 seconds)
[22:56:02] <stenno> i am talking to you right now, not to everyone
[22:56:08] <CoderGuy> I have an object it contains the data, said data has to be displayed to the screen, I have to iterate over said data and assign it to another object for display, how would you go about doing this? There are multiple objects involved for display
[22:56:27] *** Joins: brian_da_mage (~Neuromanc@user/briandamag)
[22:56:48] <stenno> n> const foo = {a: 23, b: 42}; const bar = {c: 123}; Object.assign(foo,bar)
[22:56:49] <jellobot> (okay) { a: 23, b: 42, c: 123 }
[22:57:05] <CoderGuy> allow me to restate
[22:57:44] <CoderGuy> it's not a simple transfer of variables, the variables in the display object require proper assignment they don't use the same variables
[22:58:09] <CoderGuy> the default functionality is to call things like setText() on the display object
[22:58:42] <systemfault> Probably Object.entries... for/in is slow and iterates on the whole prototype chain
[22:58:50] <systemfault> Anyway... good luck
[22:59:06] <stenno> n> const foo = {a: 23, b: 42}; const { a:other } = foo; { other }
[22:59:07] <silly_> !for..in
[22:59:07] <jellobot> silly_, for..in is not to loop through indices/values of an array. Use for(init;cond;step) or Array#forEach. For..in iterates over *all* enumerable properties of an object, without any defined order. See also !iteration
[22:59:07] <jellobot> (okay) 23
[22:59:17] <silly_> i thought for of was safe to use
[22:59:22] <silly_> !for..of
[22:59:28] <stenno> for of is fine-ish
[22:59:31] <systemfault> for/of is fine...
[22:59:57] <stenno> n> const foo = {a: 23, b: 42}; const { a:other } = foo; ({ other })
[22:59:58] <jellobot> (okay) { other: 23 }
[23:00:12] <CoderGuy> stenno, so you agree that looping over the data and assinging it is totally fine here?
[23:00:20] <stenno> CoderGuy: no, not at all
[23:00:23] <CoderGuy> what?
[23:00:42] <stenno> CoderGuy: i agree with systemfault, as i showed you before myself too, that you should use Object.entries/Object.fromEntries
[23:00:54] <CoderGuy> yeah nobody is not using Object.entries here
[23:00:56] <stenno> i did not use a single loop in any of my example
[23:00:58] <stenno> s
[23:01:01] <stenno> good
[23:01:08] <stenno> so why are you talking about for-in loops
[23:02:01] <systemfault> The old way.... ES3 was something like: for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { doSomething(obj[key]); }}
[23:02:06] <CoderGuy> stenno, there's a difference between coding and typing syntax
[23:02:09] <systemfault> Who wants to do that? (Nobody)
[23:02:47] <stenno> systemfault: CoderGuy does
[23:03:12] <systemfault> Well... if he wants to have fun... Just hope it's not production code.
[23:03:14] <stenno> because : ' yeah I know everyone wants to chime in "maybe there is a better way then what you're doing"'
[23:03:21] <stenno> ' I know, coders are like this, they think there is something better than whatever put you down this path'
[23:03:24] <CoderGuy> your response, was about the syntax involved, what i'm saying is you have a list of properties, said properties have to be assigned to a display object, said display object uses things like setText() in order to assign the data, how would you go about assigning said data
[23:03:27] <stenno> this is why CoderGuy wants to use for-in
[23:03:33] <stenno> because coders are just like that
[23:03:55] <stenno> CoderGuy: i showed you several different ways to achieve that
[23:04:00] <CoderGuy> no you didn't
[23:04:03] <stenno> Object.assign
[23:04:08] <stenno> yes i did
[23:04:14] <CoderGuy> what you did was you invented your own way, using things like Object.assign which is not a valid way to do this
[23:04:20] <stenno> Object.assign, destructuring assignment
[23:04:27] <stenno> Object.entries, Object.fromEntries
[23:04:47] <hassoon> 'evening
[23:04:51] <CoderGuy> at no point did ou call setText() which is required
[23:04:51] <silly_> yea, object.* and array methods over for in/of always
[23:05:09] <stenno> CoderGuy: i will not chew your work for you
[23:05:12] <stenno> do it yourself
[23:05:15] <systemfault> CoderGuy: You'd do that inside a .map on the array that you get off Object.entries...
[23:05:17] <stenno> i gave you the tools, now use them
[23:05:30] <CoderGuy> no that's not the point, i'm saying you're asking me "why you do it this way" i'm telling you why, and you're listing off again other things
[23:05:50] <CoderGuy> I don't need your help here, i'm just confused why you think other coders are unable to code
[23:06:12] <CoderGuy> like I haven't ever coded or something it's really weird, like the guy in the car asking for a gas station is somehow wrong for driving
[23:06:30] <CoderGuy> and it's not you, it's like 90% of the answers for coding problems
[23:06:37] <CoderGuy> always "why you doing it this way?"
[23:06:55] <stenno> do you realize then that thats an important question
[23:06:58] <stenno> !xy
[23:06:58] <jellobot> stenno, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[23:07:04] <stenno> ^ strongly related
[23:07:17] <hmw[at]> I have a different X/Y problem :)
[23:07:27] <CoderGuy> stenno, I need a girlfriend, currently I have trouble talking to girls, your answer "why not just don't date women"
[23:07:27] <hmw[at]> My analyser node, showing a wave in X/Y...
[23:07:57] <stenno> CoderGuy: no, your analogies don't match at all
[23:08:03] <CoderGuy> they do, but it's okay
[23:08:11] <CoderGuy> this is just part of life, dealing with this weirdness
[23:08:24] <silly_> CoderGuy, https://repl.it/languages/javascript give an example and ask how to solve and improve
[23:08:31] <systemfault> CoderGuy: Just because you don't currently know JS enough to understand the solution stenno is proposing... doesn't mean that he's wrong..
[23:08:40] <silly_> according to js best practices
[23:08:41] <CoderGuy> what
[23:08:43] <CoderGuy> I refuse
[23:08:51] <CoderGuy> systemfault, that's highly insulting
[23:08:58] <CoderGuy> okay here we go
[23:09:01] <stenno> CoderGuy: You are asking 'can i hack off my own arm' and the answer is 'yes, but why would you do that'
[23:09:30] <silly_> fighting will lead you nowhere, all of you
[23:09:44] <stenno> and then you are complaining 'why are people always asking "but why", can't i just not hack off my arm without people asking '
[23:09:51] <stenno> -not
[23:10:04] <CoderGuy> You have 2 objects, 1 contains data in any list format you want, the other requires you to display said data, in order to display it you have to alter said data to match the following "the data:" + data; How can  you take the data and display it via console without using a loop?
[23:10:20] <silly_> https://repl.it/languages/javascript
[23:10:47] <CoderGuy> Each Entry Requires you to have "the data:" + data; each of them
[23:11:34] <silly_> either use .map and return strings or use forEach for console side-effects
[23:11:55] <silly_> use https://repl.it/languages/javascript and stop fighting
[23:11:59] <CoderGuy> so if my list is {a:"somedata",b:"the data for b"}; the output will be on 2 lines of the console line 1 the data somedata line 2 the data the data for b
[23:12:23] <silly_> or be ignored
[23:12:29] <CoderGuy> you're literally giving loops in the answer
[23:12:34] <CoderGuy> I said without using a loop
[23:13:03] <GreenJello> those aren't loops, so you need to be more clear
[23:13:10] <CoderGuy> foreach isn't aloop?
[23:13:14] <GreenJello> correct
[23:13:17] <CoderGuy> the heck
[23:13:50] <silly_> ah, i meant .forEach
[23:14:02] <silly_> it's an array method
[23:14:07] <CoderGuy> https://en.wikipedia.org/wiki/Foreach_loop
[23:14:15] <hassoon> foreach just fetches through an array, i don't think it's officially called a loop
[23:14:23] <CoderGuy> go update the wiki I guess
[23:14:25] <hassoon> the for is
[23:14:29] <stenno> .forEach is an array method
[23:14:36] <hassoon> stenno: yap
[23:14:41] <stenno> for-of, for-in and 3-clause for are loops
[23:14:43] <CoderGuy> an array method that loops?
[23:14:48] <stenno> it does not loop
[23:14:53] <stenno> its not a loop
[23:15:08] <silly_> CoderGuy, for js use https://developer.mozilla.org/en-US/ not wikipedia
[23:15:24] <CoderGuy> okay lemme redefine
[23:15:25] <CoderGuy> without iterating
[23:15:26] <hassoon> CoderGuy: you don"t even have control over how the .forEach goes on, eg the index update, or breaking from it
[23:15:36] <hassoon> CoderGuy: but for doe have everything a loop should have
[23:15:37] <stenno> thats an important difference
[23:15:38] <CoderGuy> withotu going over each of the data entries
[23:15:47] <hassoon> * does *
[23:15:48] <CoderGuy> I don't really care that it loops or not i'm just saying without going over the data
[23:15:49] <stenno> no continue, no break for forEach callback
[23:15:53] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fd83:2103:6b16:6ea1)
[23:16:01] <stenno> you are guaranteed that forEach will go through all elements
[23:16:03] <GreenJello> CoderGuy, you can't do something for each item without touching each item
[23:16:04] <silly_> it's usually referred to as "iterating over"
[23:16:10] <CoderGuy> omg GreenJello IS RIGHT!!
[23:16:13] <CoderGuy> and that means i'm right
[23:16:16] <CoderGuy> ty GreenJello ty
[23:16:19] <stenno> no, you are dumb
[23:16:27] <stenno> er i mean wrong
[23:16:33] <hassoon> stenno: ya it's like a dumb non-stopping car going straight in the highway
[23:16:56] <CoderGuy> stenno, i'm over here like "listen I gotta go over my data so I can display it" and you like "why?"
[23:16:58] <hassoon> stenno: i mean the .forEach
[23:17:09] <CoderGuy> then you try to show me ways to not go over it, it's weird
[23:17:11] <hassoon> CoderGuy: well welcome to reality
[23:17:17] <hassoon> CoderGuy: forEAch is not a loop
[23:17:23] <hassoon> forEach *
[23:17:23] <CoderGuy> I don't care it iterates over the data
[23:17:25] <CoderGuy> that's the point
[23:17:27] <GreenJello> I missed part of the conversation, but it sounds like they were saying not to use for..in loops?
[23:17:47] <CoderGuy> it's one thing to say "oh don't use this type of a loop" but to be like "why are you even doing this?" and act like I have no use case it's so odd to me
[23:18:07] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:18:08] *** Joins: onosendi (~onosendi@user/onosendi)
[23:18:24] <stenno> we are all just arrogant coders who use something superficial like 'experience' and 'insight' to berate others
[23:18:27] <CoderGuy> like idk I woke up and randomly wanted to code incorrectly I didn't have a purpose and then I joined here to annoy everyone?
[23:18:35] <GreenJello> for..in loops are obsolete
[23:18:36] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[23:18:45] <stenno> CoderGuy: again, figure out what is meant with 'xy problem'
[23:18:51] <stenno> the question of 'why' is VERY important
[23:18:56] <hassoon> CoderGuy: meh you know what? let's call .forEach a 'loop', since mdn did, then what ?
[23:18:56] <GreenJello> also don't drive 1920s cars or lead paint
[23:18:59] <hassoon> https://i.imgur.com/qRZ7hsU.png
[23:19:02] <GreenJello> +use
[23:19:08] <CoderGuy> the xy problem is something that yes can be useful but overall is not, people blow it out of proportion, it's better to assume someone does in fact have a use case for Y
[23:19:17] <stenno> i am off
[23:19:25] <hassoon> stenno: g'day
[23:19:41] <CoderGuy> hassoon, it's not about if it's a loop or not it's about I have to iterate over my data
[23:19:56] <CoderGuy> which to me is just a loop but I guess some people want to be very technical
[23:20:08] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[23:20:10] <hassoon> CoderGuy: if you don't need to break from the loop or manipulate the loop index at any time, then go for it
[23:20:25] <CoderGuy> and I was just asking to see if I can put the list itself inside the for statement, which somehow leads to "why you want to not assign it to a variable first?"
[23:20:40] <CoderGuy> and that just kinda really upset me tbh
[23:20:41] <hassoon> CoderGuy: you do what you like to do, follow up your taste, but don't ignore other better solution, if they ever exist
[23:20:50] <hassoon> * solutions *
[23:20:53] <CoderGuy> like, it's a simple question "can I put the variable inside the for statement" why does this have to be questioned
[23:21:02] <silly_> lol that chain of escalation
[23:21:06] <CoderGuy> people acted like I was doing too much
[23:21:15] <CoderGuy> like "omg you want to put a variable inside the for, you crazy how you get to this Y problem?"
[23:21:17] <hassoon> CoderGuy: what are you going to use this .forEach of yours for anyway
[23:21:23] <hassoon> looping through an array ,
[23:21:24] <hassoon> ?
[23:21:30] <CoderGuy> omg now hassoon is doing it lol
[23:21:36] <GreenJello> people are a bit aggressive here at times, not that you're any better
[23:21:41] <hassoon> CoderGuy: nah wasn't following you earlier
[23:21:50] <CoderGuy> this has to change man
[23:21:52] <CoderGuy> we can do better
[23:21:57] <silly_> lolno
[23:21:58] <hassoon> GreenJello: not me
[23:22:06] <GreenJello> hassoon, yeah, you're chill
[23:22:19] <CoderGuy> I want you to try this, the next time someone asks for directions, just reply "why are you trying to go there"
[23:22:22] <CoderGuy> and see what happens
[23:22:24] <CoderGuy> just tell me how that convo goes
[23:22:39] <GreenJello> I mean, if it's a dark ally
[23:22:56] <GreenJello> I don't know if I spelled that right *checks music collection*
[23:22:58] <CoderGuy> dude, no, cmon it has to be like the gas station or the local park in broad daylight
[23:23:08] <hassoon> well .forEach loop is nice anyway, i like it
[23:23:12] <GreenJello> alley*
[23:23:18] <hassoon> but the older for loop is nice too
[23:23:19] <silly_> mostly it's best to give an executable example, ask for improvements and then talk about the whys
[23:23:30] <CoderGuy> but I did silly
[23:23:32] <CoderGuy> I literally did
[23:23:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:23:37] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[23:23:44] <silly_> that i must have missed
[23:23:49] <GreenJello> for..in is a dark alley
[23:23:54] <CoderGuy> I believe you were here it's okay though everyone always does this
[23:24:07] <CoderGuy> it's an actual meme on xyz or whatever the comic is
[23:24:20] <silly_> ah, not in the chat, ues https://repl.it/languages/javascript or something similar
[23:24:26] <CoderGuy> xkcd
[23:24:36] <CoderGuy> but it's 2 lines of code
[23:24:43] <silly_> yes, and still
[23:24:53] <CoderGuy> it's ltierally for(x in getY()){// can I just have access to getY here somehow?}
[23:24:59] <silly_> the best advice isn't 2 lines
[23:25:06] <CoderGuy> that's all it is, so simple and the answer is to use entries
[23:25:08] <silly_> loc isn't a metric for anything
[23:25:33] <CoderGuy> there's like a billion reasons why someone might want access to getY() there, not just my use case
[23:25:50] <CoderGuy> like this problem should have a solution not just "ohhh you wanna get gas okay now it is important why you want to know where the gas station is"
[23:25:59] <silly_> if you want to reuse a return value, assign it to a variable
[23:26:15] <silly_> and never ever "conflate assignment with expressions"
[23:26:28] <CoderGuy> I mean, although true I like the entries solution
[23:26:36] <CoderGuy> it allows 1 less line of code
[23:26:50] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:27:10] <CoderGuy> but if this was the first time someone asked me "why" it wouldn't be an issue, but this is like everytime, and this was a simple question not even hard very basic
[23:27:33] <CoderGuy> what's next "hey how do I assign an integer to a variable?" followed by "why you want to use integer?"
[23:27:46] <silly_> you should learn to accept best practices *per language
[23:28:03] <CoderGuy> but this is a literal solution inside javascript
[23:28:08] <silly_> yes
[23:28:10] <CoderGuy> it's so well known many people answered it
[23:28:17] <CoderGuy> yet still the person wanted to know why I was doing the thing
[23:28:41] <silly_> so... create a nice repl or fiddle
[23:28:51] <CoderGuy> no it's not even necessary it's solved already
[23:28:58] <CoderGuy> it was solved before they asked, but the fact they asked just got me upset
[23:29:04] <silly_> showing exactly what you do is an extra line, then it's not 2 anymore, but 3
[23:29:14] <CoderGuy> like wow really such a simple question why are people so inquisative into why i'm doing something
[23:29:23] *** Joins: summersault (~summersau@179.221.251.16)
[23:29:47] <silly_> because there might be better advice
[23:30:10] <CoderGuy> well, I guess you could just parachute onto the gas station XD
[23:30:14] <CoderGuy> anyways good talk lol
[23:30:19] <CoderGuy> I gotta go have fun stay safe :D
[23:30:25] <silly_> :D
[23:31:12] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[23:36:49] *** Quits: lilmonkey (~lilmonkey@user/lilmonkey) (Read error: Connection reset by peer)
[23:39:01] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 246 seconds)
[23:39:17] *** Joins: lilmonkey (~lilmonkey@user/lilmonkey)
[23:40:46] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:42:41] *** brian_da_mage is now known as Brianmancer
[23:44:22] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:46:50] *** Joins: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[23:47:17] <Donitz> config.input.keys.left.some(Input.getKeyDown)
[23:47:21] <Donitz> I like static methods
[23:47:25] *** Joins: summersault (~summersau@179.221.251.16)
[23:49:20] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:50:01] *** Quits: adminll (~thedawn@user/thedawn) (Remote host closed the connection)
[23:51:18] *** Parts: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) ()
[23:51:49] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[23:53:11] *** Crash1hd is now known as Crash1hd_
[23:53:49] *** Crash1hd_ is now known as Crash1hd
[23:53:51] *** Joins: noobly11 (~noobly@50.38.123.106)
[23:55:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:59:11] *** Joins: summersault (~summersau@179.221.251.16)
