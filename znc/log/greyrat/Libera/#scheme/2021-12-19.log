[00:00:18] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[00:01:45] *** Joins: notzmv (~zmv@user/notzmv)
[00:09:02] <Zipheir> Highly anti-recommended: https://xkcd.com/320/
[00:09:25] <Zipheir> But maybe with carefully-modulated lighting it would be more workable...
[00:12:24] *** Quits: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com) (Remote host closed the connection)
[00:12:32] *** Joins: skapata (~Skapata@user/skapata)
[00:14:14] *** Joins: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com)
[00:26:40] <amazigh> I did some exercise I feel better
[00:38:50] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[00:41:58] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[00:42:56] *** Joins: badkins (~badkins@136.56.92.199)
[00:47:37] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[00:51:33] <jcowan> caffeine + acetominophen/paracetamol (to ward off the headache) used to work for me until I found that it raised my blood sugar
[00:52:42] *** Quits: manj-gnome (~manjaro-g@65.206.51.7) (Ping timeout: 256 seconds)
[01:27:16] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[01:44:50] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
[01:45:37] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[01:46:10] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[01:47:19] *** Joins: xsperry (~xs@user/xsperry)
[01:50:22] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[02:15:22] *** Joins: livoreno (~livoreno@user/notzmv)
[02:15:38] *** Joins: tokie (~strtok@thales.strtok.net)
[02:18:54] *** Quits: rgherdt (~rgherdt@ip5f5af40f.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[02:31:52] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 256 seconds)
[02:37:44] *** Joins: livoreno (~livoreno@user/notzmv)
[02:54:21] *** Joins: badkins (~badkins@136.56.92.199)
[02:59:34] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[03:18:09] *** Joins: badkins (~badkins@136.56.92.199)
[03:51:17] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 240 seconds)
[04:01:58] *** Quits: klovett (~klovett@107.127.24.145) (Ping timeout: 256 seconds)
[04:17:26] *** Quits: tripfandango (~tripfanda@5.29.63.24) (Ping timeout: 260 seconds)
[04:17:58] *** Quits: daviid (~user@179.210.52.91) (Remote host closed the connection)
[04:19:23] *** Joins: daviid (~user@179.210.52.91)
[04:31:27] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 268 seconds)
[04:39:50] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7634:5fa:3b2f:e1a6) (Ping timeout: 260 seconds)
[04:40:21] *** Joins: zwr (~zwr@2804:d45:b966:fb00:7aef:c67e:18ed:ef2b)
[04:43:28] *** Joins: manj-gnome (~dev_null@65.206.51.7)
[04:45:48] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[04:52:49] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:55:01] *** Joins: livoreno (~livoreno@user/notzmv)
[05:05:10] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Quit: WeeChat 3.0)
[05:07:37] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[05:08:26] *** Joins: weechat1 (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[05:27:10] *** Joins: klovett (~klovett@107.127.24.145)
[05:39:12] *** Joins: genieliu (~genieliu@111.193.167.10)
[05:41:40] *** weechat1 is now known as Spawns_Carpeting
[05:47:17] *** Quits: genieliu (~genieliu@111.193.167.10) (Ping timeout: 240 seconds)
[05:49:27] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:52:44] *** Joins: genieliu (~genieliu@111.193.167.10)
[05:55:54] *** Quits: schulze (~schulze@dynamic-077-010-174-070.77.10.pool.telefonica.de) (Ping timeout: 260 seconds)
[06:08:45] *** Quits: manj-gnome (~dev_null@65.206.51.7) (Quit: Leaving)
[06:21:42] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:21:44] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[06:25:53] *** Joins: klovett_ (~klovett@107.127.24.145)
[06:28:10] *** Quits: klovett (~klovett@107.127.24.145) (Ping timeout: 256 seconds)
[06:33:32] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[06:54:02] *** Quits: klovett_ (~klovett@107.127.24.145) (Quit: ZZZzzz…)
[07:23:02] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:24:19] *** Joins: mzan (~quassel@mail.asterisell.com)
[07:30:05] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[07:44:23] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[07:46:27] *** Joins: badkins (~badkins@136.56.92.199)
[07:50:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[07:54:20] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Quit: WeeChat 3.0)
[08:10:03] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[08:10:36] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7aef:c67e:18ed:ef2b) (Remote host closed the connection)
[08:11:33] *** Joins: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[08:13:55] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:17:13] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2c53:f3e6:ebd:1d0e)
[08:19:37] *** Quits: genieliu (~genieliu@111.193.167.10) (Ping timeout: 268 seconds)
[08:28:45] *** Joins: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it)
[08:30:45] *** Quits: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it) (Client Quit)
[08:33:38] *** Joins: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it)
[08:36:48] *** Quits: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it) (Client Quit)
[08:37:06] *** Joins: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it)
[08:38:01] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:38:51] *** Quits: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it) (Client Quit)
[08:39:08] *** Joins: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it)
[08:39:59] *** Quits: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it) (Client Quit)
[08:42:12] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[08:42:28] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:42:33] *** Joins: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it)
[08:46:26] *** Quits: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it) (Client Quit)
[08:49:12] *** Joins: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it)
[08:49:21] *** Quits: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it) (Client Quit)
[08:50:48] *** Joins: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it)
[08:50:48] *** Quits: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it) (Client Quit)
[08:52:05] *** Joins: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it)
[08:54:04] *** Quits: pierpa (~pierpa@host-87-16-221-18.retail.telecomitalia.it) (Remote host closed the connection)
[08:56:54] *** Joins: epony (epony@user/epony)
[09:20:45] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[09:50:37] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 240 seconds)
[10:27:57] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 240 seconds)
[10:30:21] *** Quits: snits_ (~quassel@ip98-179-76-75.ph.ph.cox.net) (Ping timeout: 268 seconds)
[10:34:33] *** Joins: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4)
[10:37:04] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[10:43:28] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[10:54:23] *** Joins: gproto23 (~gproto23@user/gproto23)
[10:58:53] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[11:00:50] *** Joins: badkins (~badkins@136.56.92.199)
[11:11:23] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[11:12:06] *** Joins: badkins (~badkins@136.56.92.199)
[11:16:36] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[11:18:32] *** Joins: snek` (~user@88.160.31.174)
[11:19:41] *** Quits: snek` (~user@88.160.31.174) (Remote host closed the connection)
[11:24:09] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:24ae:9af8:8d87:517a)
[11:49:24] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:72a1:24ae:9af8:8d87:517a) (Read error: Connection reset by peer)
[11:50:10] *** Joins: tripfandango (~tripfanda@5.29.63.24)
[11:50:36] *** Joins: thevishy (~Nishant@2405:201:f005:c007:851a:8f84:501c:8bd1)
[11:50:45] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[11:51:11] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[11:52:15] *** Joins: nitrowheels (~nitrowhee@151.49.191.20)
[12:01:39] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:05:18] <amazigh> another take on the lisp curse is not a thing: https://applied-langua.ge/posts/lisp-curse-redemption-arc.html
[12:16:54] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:11f5:9f4:e051:701e)
[12:22:29] *** Joins: python476 (~user@88.160.31.174)
[12:52:22] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[13:07:20] <wasamasa> funny how the author has the same conclusion as the blog post critiqued
[13:24:06] *** Joins: schulze (~schulze@dynamic-077-000-145-135.77.0.pool.telefonica.de)
[13:56:11] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[13:56:37] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[13:58:51] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:02:22] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:20e5:aa8:d248:c43e)
[14:02:22] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:20e5:aa8:d248:c43e) (Changing host)
[14:02:22] *** Joins: skapata (~Skapata@user/skapata)
[14:02:31] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:08:48] *** Joins: mzan (~quassel@mail.asterisell.com)
[14:27:50] <Franciman> hi all
[14:28:02] <Franciman> would you rather write the bootstrap implementation of your language in C or C++?
[14:28:10] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:28:17] <Franciman> which one is most cross-platform and easier to bootstrap?
[14:28:39] <sham1> I'd rather write the bootstrap and the compiler in Scheme. And the host for the compiled code in C
[14:29:31] <Franciman> urgh, I thought I was on #proglangdesign
[14:29:40] <Franciman> thanks sham1 
[14:38:06] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 260 seconds)
[14:38:25] <wasamasa> lol
[14:38:34] <wasamasa> scheme mailing lists do feel like that
[14:38:54] <wasamasa> that question is a joke though, right
[14:39:35] <wasamasa> all you need to figure that out is to try debugging a binary with zero debug info written in C++, then compare with C
[14:40:27] <wasamasa> or figure out ABI issues in C++
[14:40:35] <wasamasa> or look at the C++ standard
[14:41:07] <wasamasa> unless you have no other option (looking at you, windows), it's always gonna be C
[15:08:23] *** Joins: genieliu (~genieliu@111.193.167.10)
[15:13:55] *** Joins: badkins (~badkins@136.56.92.199)
[15:18:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[15:21:51] *** Joins: civodul (~user@guix/contributor/civodul)
[15:26:21] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[15:29:27] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[15:31:55] <Franciman> wasamasa: lol
[15:32:01] <Franciman> you kknow what I miss from C?
[15:32:04] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[15:32:06] <Franciman> basicaly it's only one feature
[15:32:08] <Franciman> popcount
[15:32:17] <Franciman> to count the number of set bits in a uint64
[15:32:36] <wasamasa> let's pull in all the awfulness of C++ just for popcount
[15:33:34] *** Joins: seninha (~seninha@user/seninha)
[15:33:37] <wasamasa> there you go, a header library: https://github.com/kimwalisch/libpopcnt
[15:33:51] <Franciman> it's me
[15:33:52] <Franciman> aahahuhauhahh
[15:34:12] <Franciman> thanks
[15:34:51] <Franciman> wait is it just an header?
[15:35:32] <wasamasa> yes
[15:35:48] <wasamasa> no linking required
[15:42:42] <Franciman> thanks sensei
[15:42:59] <Franciman> i implemented a sparse array using bitsets
[15:43:01] <Franciman> hehe
[15:43:08] <Franciman> cringy yea
[15:56:43] <amazigh> what do you popcount for?
[15:58:17] *** Quits: genieliu (~genieliu@111.193.167.10) (Ping timeout: 240 seconds)
[15:59:48] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[16:05:27] <sham1> They already said. Sparse arrays. Probably to see which array cell is occupied
[16:05:30] <sham1> And how many there are
[16:10:24] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[16:44:31] *** Joins: puts (~tcz@91.150.178.124)
[16:44:52] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:7713:779e:9656:d2a7)
[16:45:42] *** Quits: puts (~tcz@91.150.178.124) (Client Quit)
[16:55:44] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[16:56:18] *** Joins: yewscion (~yewscion@52.94.133.131)
[17:37:31] *** Joins: notzmv (~zmv@user/notzmv)
[17:42:56] <amazigh> I made progress toward world domination: two days in a row, I did physical exercices!
[17:48:39] <amazigh> wasamasa: re lisp curse, and redemption arc, I think the original clojure post says something along the line "clojure does not suffer from lisp curse", where the redemption arc is another take on the bazaar: stating that naturally better libraries will emerge from any powerful language, and the perceive "noise or pollution" that stems from the 'it is easy to fork' will become overtime minimal
[17:50:43] <amazigh> overall the anachist idea of "bazaar software model" according to Haley yields better software, even if it takes time.
[17:53:03] <amazigh> I trying to tune this down, but I believe: making it easier to fork-and-review software is the way forward.
[17:53:09] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:54:22] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[17:54:47] <amazigh> re lisp curse, we can compare it to python mindshare that in a decade did not change its point of view regarding what is a good web framework for a decade.
[18:06:50] *** Joins: Darkcoal (~user@139.64.29.83)
[18:07:04] *** Quits: Darkcoal (~user@139.64.29.83) (Client Quit)
[18:10:00] *** Joins: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd)
[18:14:02] *** Joins: Darkcoal_ (~user@139.64.29.83)
[18:14:19] *** Quits: Darkcoal_ (~user@139.64.29.83) (Client Quit)
[18:14:40] *** Joins: Darkcoal_ (~user@139.64.29.83)
[18:14:50] *** Quits: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd) (Client Quit)
[18:26:26] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:11f5:9f4:e051:701e) (Ping timeout: 268 seconds)
[18:29:10] <mdhughes> Zope was a perfectly nice web server.
[18:37:45] *** Joins: klovett (~klovett@107.127.24.145)
[18:38:40] *** Quits: Darkcoal_ (~user@139.64.29.83) (Quit: Darkcoal_)
[18:38:59] *** Joins: Darkcoal (~user@139.64.29.83)
[18:40:17] <amazigh> mdhughes: @_@ 
[18:40:20] <amazigh> are you serious?
[18:40:38] <amazigh> anyway, I am too young to know.
[18:40:51] <amazigh> TIL unwinding at https://en.wikipedia.org/wiki/Call_stack#Unwinding
[18:41:37] <mdhughes> Mostly. It was pretty cool having an integrated database and DHTML server, and it was very easy to theme an entire site, since every sub-section inherited style/fragments from the parents.
[18:42:27] <mdhughes> Now you have a giant maze of django nonsense and you manage your own SQL database, and the data bindings are a pain and quite fragile.
[18:42:36] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[18:43:10] <mdhughes> Zope kind of sucked at scriptability, if you wanted a request to do anything but form submit, you were in trouble. But hey, forms were how we did things back then.
[18:50:32] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[19:00:08] *** Joins: badkins (~badkins@136.56.92.199)
[19:05:48] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[19:07:37] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[19:19:39] *** Quits: leah2 (~leah@vuxu.org) (Remote host closed the connection)
[19:21:17] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 250 seconds)
[19:21:40] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[19:21:55] *** Joins: leah2 (~leah@vuxu.org)
[19:25:41] *** Quits: Darkcoal (~user@139.64.29.83) (Quit: Darkcoal)
[19:26:17] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[19:26:18] *** Joins: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd)
[19:30:57] *** Quits: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4) (Ping timeout: 240 seconds)
[19:32:17] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[19:33:56] *** Quits: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd) (Ping timeout: 252 seconds)
[19:35:36] *** Joins: Darkcoal (~user@139.64.29.83)
[19:44:20] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:7713:779e:9656:d2a7) (Quit: Client closed)
[19:44:20] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[19:55:54] *** Joins: torbjornsd (~torbjorns@213.158.35.13)
[20:01:34] *** Quits: Darkcoal (~user@139.64.29.83) (Quit: Darkcoal)
[20:03:28] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[20:11:20] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[20:13:40] *** Joins: badkins (~badkins@136.56.92.199)
[20:18:39] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[20:23:25] *** Joins: badkins (~badkins@136.56.92.199)
[20:28:56] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[20:37:18] *** Joins: X-Scale` (~ARM@206.46.158.5.rev.vodafone.pt)
[20:39:24] *** Quits: X-Scale (~ARM@31.22.167.85) (Ping timeout: 240 seconds)
[20:39:25] *** X-Scale` is now known as X-Scale
[20:49:11] <Spawns> do schemes require quoting variables when using define!
[20:49:22] <Spawns> is that a macro that quotes it behind the scenes
[20:53:10] <amazigh> there is no such a thing as `define!`, there is `define` and `set!` none of them requires quoting
[20:53:23] <Spawns> whoops thats what I meant
[20:53:44] <Spawns> so set! isn't a macro that quotes the symbol for you?
[20:54:01] <Spawns> in common lisp setq is just a macro for set
[20:54:05] <Spawns> or setf
[20:54:11] <amazigh> both of them are primitives forms, they can't be implemeneted otherwise
[20:54:21] <Spawns> so it turns into (set (quote x) nil)
[20:54:25] *** Quits: thevishy (~Nishant@2405:201:f005:c007:851a:8f84:501c:8bd1) (Quit: Leaving)
[20:54:33] <amazigh> no
[20:54:41] <Spawns> in common lisp it does
[20:55:20] <Spawns> that is an interesting difference between the languages
[20:55:21] <amazigh> I am not enough familiar with cl, but with scheme you can't have the symbol of an identifier outside of a macro
[20:56:06] <amazigh> and even if you had a way to say (variable-name my-variable) =>  'my-variable
[20:56:32] <amazigh> that is known at compile time... also what would you do with the symbol?
[20:57:13] <amazigh> you can't mutate the environment dynamically with something like (apply set! some-symbol some-value)
[20:57:18] <amazigh> set! and define are second class
[20:57:38] <Spawns> that is interesting
[20:58:15] <Spawns> im still very much in the learning stage with lisp and moreso with scheme so this stuff is really interesting for me
[20:58:29] <amazigh> Tho, they are some scheme that reify the environment
[20:58:34] <amazigh> welcome :)
[20:58:52] <amazigh> re reified environment, I am not very familiar with it.
[20:59:08] <wasamasa> I suspect it's more of a thing to keep the standard small
[20:59:35] <wasamasa> nothing stops a lisp-1 implementation from offering extra indirection between variables and identifiers
[20:59:49] <wasamasa> see picolisp, clojure, ...
[20:59:50] <amazigh> Spawns: usually, if you need to access a value by name at runtime, you use alist or hash-tables that mimicks environments
[20:59:59] <sham1> They just don't because smaller and simpler, yeah
[21:00:20] <Spawns> yeah that makes sense amazigh, seems like a better solution overall anyways
[21:02:16] <amazigh> One instance, I had to use that pattern (reified environment via hash-tables) is to implement a template language
[21:02:35] <amazigh> that is at the end of the day, some kind of `eval`
[21:03:08] <amazigh> aka. an interpreter for a dsl.
[21:03:38] <amazigh> later I figured it was wrong to do it that way, and embedding html inside scheme via sxml works better
[21:04:28] <amazigh> it is wrong to create a dsl in that case, because most of the time you need a lot of scheme procedures to be able to implement the logic inside the template;
[21:04:42] <amazigh> and that approach is not far fetched when considering jsx
[21:18:53] <fluffyballoon> I'm watching SICP lecture 4A, Pattern Matching.  Is the pattern matching `(? x)` and substitution objects `(: x)` syntax used in that lesson real (supported by match?) or is it just a pedagogical tool? (like "deriv-rules" in https://mk12.github.io/sicp/lecture/4a.html#1.3 )
[21:20:00] <fluffyballoon> It's a really dense yet readable syntax, but I've never seen it used anywhere else.
[21:23:49] <wasamasa> question marks and colons are used in some code related to pattern matching and types
[21:23:56] <wasamasa> but in exactly the same way SICP does, no
[22:02:00] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:11f5:9f4:e051:701e)
[22:11:04] *** Joins: X-Scale` (~ARM@31.22.167.116)
[22:12:26] <jcowan> (? foo) is used in some Lisp-embedded Prologs instead of ?foo.
[22:13:15] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 256 seconds)
[22:13:15] *** X-Scale` is now known as X-Scale
[22:19:53] <sham1> Well the former seems indeed more natural than the latter
[22:24:29] *** Quits: evdubs (~evdubs@user/evdubs) (Read error: Connection reset by peer)
[22:24:31] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[22:25:01] *** Joins: evdubs (~evdubs@user/evdubs)
[22:25:48] <Oxyd> I don't remember “?foo” in Prolog. Did you mean “Foo”? As opposed to “foo”.
[22:26:36] *** Joins: badkins (~badkins@136.56.92.199)
[22:29:32] *** Quits: python476 (~user@88.160.31.174) (Read error: Connection reset by peer)
[22:32:07] *** Joins: python476 (~user@88.160.31.174)
[22:35:17] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:11f5:9f4:e051:701e) (Ping timeout: 240 seconds)
[22:35:49] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[22:36:39] *** Joins: badkins (~badkins@136.56.92.199)
[22:41:42] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[22:54:38] *** Joins: badkins (~badkins@136.56.92.199)
[23:21:38] *** Quits: fadein (~Erik@c-24-10-167-68.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[23:27:32] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[23:28:01] *** Joins: rgherdt (~rgherdt@95.90.244.15)
[23:41:47] <Zipheir> fluffyballoon: That's the SICP logic language.  SICP is full of embedded languages, most of which are not part of Scheme proper.
[23:41:54] <taylan> wasamasa: allowing (set foo blah) where foo is an expression that evaluates to a symbol actually adds significant complexity if I'm not mistaken
[23:42:34] <taylan> wasamasa: because then every lexical environment has to exist as a run-time object that can be manipulated dynamically
[23:44:04] <taylan> if I'm not mistaken it will also make optimization more challenging, since the optimizer may not be able to prove as many things about the way variables are used as it otherwise could
[23:45:50] *** Quits: nitrowheels (~nitrowhee@151.49.191.20) (Quit: Leaving)
[23:47:30] <Zipheir> fluffyballoon: Most Scheme pattern-matching doesn't need (? x); it's usually done with quasiquote, which is terser.
[23:47:46] <Zipheir> (: x), I'm not sure.  The current edition of SICP doesn't seem to have it.
[23:54:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
