[00:09:13] *** Joins: mexen (uid495612@user/mexen)
[00:10:18] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7d1f:7849:885b:a0c5) (Ping timeout: 240 seconds)
[00:15:35] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[00:15:56] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[00:17:29] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a83e:c959:305b:9dbb) (Quit: Leaving)
[00:17:46] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[00:21:03] *** Quits: l__q_ (~modinfo@user/modinfo) (Ping timeout: 265 seconds)
[00:23:39] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:24:09] *** Joins: thiras (~thiras@user/thiras)
[00:28:15] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[00:31:52] *** Joins: l__q_ (~modinfo@user/modinfo)
[00:37:29] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 265 seconds)
[00:41:20] *** Joins: Tabmow (~tabmow@user/tabmow)
[00:44:23] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[00:44:32] *** Quits: eagleflo (~aku@eagleflow.fi) (Remote host closed the connection)
[00:45:07] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[00:45:09] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:cc2b:710e:da03:5712)
[00:47:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[00:48:06] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:52:04] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[00:52:37] *** Joins: summersault (~summersau@179.221.251.16)
[00:53:25] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[00:53:37] *** Joins: summersault (~summersau@179.221.251.16)
[01:01:59] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[01:03:10] *** Joins: stenno (~stenno@user/stenno)
[01:08:59] *** Quits: Carbone5 (~Carbone5@ool-44c634d0.dyn.optonline.net) (Quit: Textual IRC Client: www.textualapp.com)
[01:15:46] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[01:23:39] *** Joins: tofran (~tofran@37.189.158.134)
[01:25:42] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:34:26] *** Joins: wyre_ (~wyre@user/wyre)
[01:35:08] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 272 seconds)
[01:38:41] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[01:48:07] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:55:51] *** Joins: summersault (~summersau@179.221.251.16)
[01:58:18] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[02:00:29] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 255 seconds)
[02:08:34] <Linkandzelda> does anyone know how i can speed up this function? its currently taking 5-7 seconds https://hastebin.com/ufupuzutis.js
[02:12:23] *** Joins: summersault (~summersau@179.221.251.16)
[02:12:28] <GreenJello> Linkandzelda, you could remove all of the elements (starting with the last), sort the list of elements, and then append each starting with the first
[02:12:47] *** Quits: federico_it (~textual@176.206.179.104) (Ping timeout: 250 seconds)
[02:12:48] <GreenJello> it might be possible to do a more efficient in-place DOM sort with insertBefore
[02:13:07] <Linkandzelda> GreenJello: i need to figure out how to do that
[02:14:05] <GreenJello> are you sure? Your code is most likely super slow because you're appending elements that are already children
[02:14:16] *** Joins: ferdna (~ferdna@user/ferdna)
[02:14:34] <GreenJello> and you might want to memoize computation of the sort keys as well
[02:15:23] <GreenJello> start with just removing all of them from their parent before the sort + appendTo
[02:15:30] *** Joins: federico_it (~textual@151.51.92.46)
[02:16:59] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[02:17:55] <austincheney> wow, i just clicked in and it looks like emojitext throwup in the channel
[02:18:28] <Linkandzelda> GreenJello: i dont remember why i did this. the original data is sorted, then appended. and i felt it would be slower to remove them and append them in their already sorted state than to sort them already in the dom. and i was wrong. i also wanted fancy animations for when they were removed/added but that adds 10x performance cost
[02:19:13] <Linkandzelda> GreenJello: i even wrote a function to sync displayed elements against the original data list (thats the whole goal, actually)
[02:19:37] <Linkandzelda> but with everything that happened i could probably just delete every time, and append every item, every time the list changes
[02:19:46] <Linkandzelda> it is already sorted afterall
[02:20:25] <austincheney> Linkandzelda, the fastest way to think through this is to sort your data in javascript (not the dom) and then once complete rebuild the data into your markup artifact, then empty the prior data from the dom, finally insert the new data.
[02:20:49] <austincheney> the biggest problem with that approach is a visual page paint around the new data which cannot be avoided
[02:20:58] <austincheney> but programmatically that is the fastest approach
[02:21:24] <austincheney> it isn't that the dom is slow, its that you are hitting the GPU hard if the data is large and you doing something visually foolish with it
[02:22:06] <Linkandzelda> austincheney: makes sense, im going to re-write this whole section
[02:22:46] <Linkandzelda> its also slower because im updating badge count on every item too
[02:25:12] <austincheney> once you practice a bit with large data structures and building large page artifacts you will figure out performance.  You mean to actually measure performance to know what is actually slower/faster and by how much and after a while you will just form a vision around these things come together
[02:25:59] <austincheney> nothing says kick ass liking working the on the weekend.  I am going to walk around or something
[02:25:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:26:57] <Slade> GreenJello, haha n> [... 'üë®‚Äçüë®‚Äçüëß‚Äçüëßüë®‚Äçüë©‚Äçüëß‚Äçüë¶']
[02:27:42] <Linkandzelda> austincheney: oh my, now i see the issue! i was sorting with every append... im a fool lol
[02:28:12] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 256 seconds)
[02:29:32] *** Joins: yaalon (~yaalon@187.250.143.188.dsl.dyn.telnor.net)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:07] <Linkandzelda> austincheney: the new code removes every item, appends from the sorted list, and its 500x faster
[02:30:07] *** Joins: byanka__ (~byanka@212.55.77.96)
[02:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[02:33:06] *** Quits: byanka (~byanka@212.55.77.96) (Ping timeout: 240 seconds)
[02:45:48] *** Joins: summersault (~summersau@179.221.251.16)
[02:46:47] *** Joins: jazzy (~jaziz@2600:380:c174:6a3d:c4c3:7674:1736:67d4)
[02:47:36] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[02:51:42] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fdfa:672b:b3f9:3b7e)
[02:53:21] <austincheney> very nice
[02:54:07] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:5e8c:3819:3f1e:426b:1063)
[02:54:26] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:5e8c:3819:3f1e:426b:1063) (Read error: Connection reset by peer)
[02:57:44] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Quit: Reconnecting)
[02:57:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:01:33] <Linkandzelda> austincheney: i re-wrote it again. this time it removes every element, then generates links which it puts into a virtual div. then appends the .html() of the virtual div doing what i believe is just 2 paints. one remove, one add. it is now lightening fast and the slowest bit is the programatic sorting
[03:02:46] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[03:02:47] <austincheney> sounds right
[03:02:53] <Linkandzelda> austincheney: for the record, the sort function https://hastebin.com/rujoqexafa.coffeescript
[03:03:36] <austincheney> how long is the object/array?
[03:04:28] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[03:05:04] <Linkandzelda> austincheney: 4500 items
[03:05:15] <Linkandzelda> it is appending them in a sidebar
[03:05:47] <austincheney> that is a lot of items
[03:06:21] <Linkandzelda> expected data could be around 10k to 100k, and im considering doing pagination but it's a lot of extra effort
[03:12:33] *** Quits: federico_it (~textual@151.51.92.46) (Quit: Textual IRC Client: www.textualapp.com)
[03:13:10] <Linkandzelda> austincheney: does the dom know if i removed and added the exact same data?
[03:13:38] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 252 seconds)
[03:13:47] <austincheney> Linkandzelda, the dom doesn't care.  It is a tree model.  All it knows are the relations between the node that make up that tree
[03:14:08] <entuland> pagination shouldn't be all that work
[03:14:21] <Donitz> afaik the DOM can handle plenty of items as long as you don't try to use fancy css effects
[03:14:55] <austincheney> yeah, the dom has come a really long way over the last 12-13 years
[03:16:44] <Linkandzelda> austincheney: pretty much crashes with 31k items for more than 1 minute
[03:17:43] <austincheney> yeah, that is more than a few.  you will probably need pagination
[03:18:30] <Donitz> or just fill them properly
[03:18:33] <Donitz> not one by one
[03:18:58] <Linkandzelda> Donitz: fill them properly?
[03:19:00] <Donitz> I don't know actually if javascript updates the dom between edits
[03:19:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:23:03] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 258 seconds)
[03:23:55] *** Quits: yaalon (~yaalon@187.250.143.188.dsl.dyn.telnor.net) (Remote host closed the connection)
[03:28:16] *** Quits: abirkill (snoopy@d207-216-233-23.bchsia.telus.net) (Ping timeout: 256 seconds)
[03:32:19] *** Joins: silly (~silly@user/silly)
[03:32:33] <Linkandzelda> austincheney: does using .html() retain any event bindings?
[03:32:53] *** Joins: summersault (~summersau@179.221.251.16)
[03:34:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[03:42:31] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[03:50:29] <entuland> Linkandzelda, if it does the same thing as messing with innerHTML directly on the DOM element, likely not, it would completely strip any event handlers attached to those DOM object - you can use delegation or use proper DOM elements without altering their HTML representation
[03:50:47] <entuland> you shouldn't be using jquery anyways
[03:51:30] <Linkandzelda> entuland: it didnt keep any on-click handlers, so i had to add them after
[03:51:46] <entuland> then it's doing the same messy job of .innerHTML
[03:51:52] <entuland> preferably, avoid that altogether
[03:51:54] <Linkandzelda> entuland: what should i be using?
[03:52:46] <entuland> the built in facilities to create and append / insert elements
[03:52:55] <entuland> createElement, appendChild and so forth
[03:55:43] <silly> .html and .innerHTML clear all contents and put all new elements inside. regarding your event handlers... the original elements are lost, so...
[03:57:31] *** Quits: KevinX (~KevinX@2.56.190.208) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:58:08] *** Joins: KevinX (~KevinX@2.56.190.208)
[03:59:32] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:04:49] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[04:10:50] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (Ping timeout: 252 seconds)
[04:13:15] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 250 seconds)
[04:19:01] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:cc2b:710e:da03:5712) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:24:48] <Tabmow> What is the standard way to use a caching policy, but also ensure when you deploy JS changes, the user picks them up? I'm using Vue.JS and webpack, where each build gets a unique hash, I thought that would be all that is needed?
[04:25:28] *** Joins: summersault (~summersau@179.221.251.16)
[04:25:45] <GreenJello> Tabmow, it is, unless you're setting cache headers on the html responses
[04:26:46] <Tabmow> GreenJello: we are... I'm guessing that is a no-no?
[04:28:47] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:29:31] <GreenJello> you need the browser to check with your server to see if the file is the same, so you could use an etag, but not basic time caching
[04:31:22] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:32:20] <Tabmow> What's the best practice in that situation? Just remove headers altogether? My frontend is sitting in CloudFront and I invalidate that cache/files when I deploy something new. I guess that is kind of enough?
[04:32:38] <wroathe> If the browser is properly phoning home to get the latest HTML document, you're then free to use as aggressive of cache headers as you want as long as you're including the file's hash in the file name
[04:33:35] <wroathe> No, you want headers. You want smart headers to make the browser check with the origin for an updated HTML document, and you want as aggressive of caching headers as you can for your other filename hashed resources (because the file name changing between deploys will "bust" the cache anyway)
[04:35:41] <Tabmow> wroathe: the webpack build takes care of the filename-hash.js etc. so that isn't the issue. Just trying to figure out how these 'smart' headers work.
[04:36:12] <Tabmow> Also, the browser phoning home part, isn't that up to how the browser is configured and a combination of these headers I will set?
[04:36:36] <wroathe> Tabmow: Yeah, that's done via setting the right headers
[04:36:54] <wroathe> Tabmow: But I don't remember what the right combo of headers is off hand, because it's been like 4 years since I had to configure this
[04:37:02] <wroathe> Tabmow: Something something Last-Modifed
[04:37:05] <wroathe> modified*
[04:37:43] <wroathe> My main point was to point out that your HTML documents are the only ones you really need to be smart about
[04:38:08] <wroathe> (provided you're busting the cache for other resources)
[04:39:19] <Tabmow> Right, because it's a SPA then the HTML document already references the new resources which will be downloaded fresh if they have a new hash etc.
[04:39:28] <wroathe> Exactly
[04:39:36] <wroathe> Although the SPA bit isn't important
[04:39:44] <wroathe> Could be server generated documents too
[04:40:48] <Tabmow> Right, yeah that makes sense... for resources without a hash, say static filenames etc. - how is that normally handled? The same way?
[04:41:29] <wroathe> Nope. You'll need smart cache headers for that too
[04:42:05] <Tabmow> Yeah, I mean handled the same way as the HTML document in this case.
[04:42:10] <wroathe> Yup.
[04:42:39] <wroathe> The HTML document is just the most important case, because that's the browser's point of entry which it discovers other resources from
[04:42:51] <Tabmow> Yep, got ya.
[04:43:22] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:b490:7230:7640:aaf5) (Quit: Textual IRC Client: www.textualapp.com)
[04:43:53] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[04:45:15] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[04:46:06] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:68a0:f76f:c20a:17b7)
[04:46:56] <Tabmow> All of my resources have etag by default as I'm using S3/CloudFront... I'm guessing I should utilise that.
[04:49:36] *** Joins: Intelo (~Intelo@88.244.89.240)
[04:50:41] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[04:51:10] <Intelo> I am having hard times getting my hands on something for js reference docs from mozila. But I want to read, highlight/add notes and save that state. For this a pdf version seems fit but I cannot find that online. The closes I got was devdoc.io but as its a browser. I cannot highlight and save state. Any ideas?
[04:51:14] *** klysm is now known as klys
[04:51:21] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[04:56:39] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[04:57:35] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[04:58:00] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[05:00:41] *** Parts: birkoff (birkoff@user/birkoff) ()
[05:07:24] <Tabmow> So, if I use cache-control: no-cache in combination with etag, I'm ensuring the browser will always use an updated resource at the expense of transferring minimal bytes on each resource to confirm the etag matches what it has in its own cache vs. on the origin
[05:07:30] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[05:10:50] <GreenJello> yeah, as long as your CDN honors that
[05:10:54] *** Joins: summersault (~summersau@179.221.251.16)
[05:11:44] *** Quits: KevinX (~KevinX@2.56.190.208) (Ping timeout: 255 seconds)
[05:13:57] *** Quits: Deide (~Deide@user/deide) (Ping timeout: 265 seconds)
[05:14:18] *** Joins: KevinX (~KevinX@2.56.190.212)
[05:15:20] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 255 seconds)
[05:17:42] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:18:07] <Tabmow> Looks like it does... initial testing seems like it's working which is good.
[05:18:18] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:19:00] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[05:19:28] <Intelo> ok so I guess there is no way exactly for now
[05:21:33] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:21:48] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:22:06] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[05:36:37] *** Quits: Intelo (~Intelo@88.244.89.240) (Ping timeout: 246 seconds)
[05:42:38] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[05:42:56] *** Joins: summersault (~summersau@179.221.251.16)
[05:43:23] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:43:35] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Quit: Atum_)
[05:43:58] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:45:06] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:45:22] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:48:26] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:49:01] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:49:33] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:49:50] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:50:21] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:50:56] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:52:27] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:52:47] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:01:19] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[06:04:42] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[06:05:16] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:07:41] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[06:07:57] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:09:02] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 258 seconds)
[06:10:52] *** Joins: keypusher (keypusher@user/keypusher)
[06:17:05] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[06:19:58] *** Joins: WishBoy (~WishBoy@user/wishboy)
[06:20:05] *** Joins: Rockwood (~Rocky@user/rocky)
[06:22:01] *** Joins: N4buc0 (~N4buc0@2001:1284:f016:7b14:7132:e90a:21fd:f0ed)
[06:23:33] *** Quits: l__q_ (~modinfo@user/modinfo) (Ping timeout: 265 seconds)
[06:28:41] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 255 seconds)
[06:29:02] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:29:18] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:29:42] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:29:46] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:30:21] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[06:30:26] *** Joins: l__q_ (~modinfo@user/modinfo)
[06:30:47] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:35:46] *** Joins: summersault (~summersau@179.221.251.16)
[06:36:49] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:37:08] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:37:34] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:37:46] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:37:47] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:38:03] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:38:24] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:38:36] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[06:38:44] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:39:04] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:39:15] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:39:31] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:39:53] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[06:43:02] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[06:43:11] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:43:31] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[06:43:46] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:43:50] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[06:43:58] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:44:07] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:44:48] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[06:44:57] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:45:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:48:08] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[06:48:30] <Linkandzelda> can anyone explain why the data shown for a request in the chrome dev network result is different to what my script prints with console.log() which is the result of the ajax call???
[06:49:07] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Read error: Connection reset by peer)
[06:49:21] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:49:43] <GreenJello> Linkandzelda, a bit too vague
[06:50:03] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[06:50:23] <Linkandzelda> GreenJello: each result has a hash, and this screenshot explains what im talking about https://i.imgur.com/jRIFMH7.png
[06:52:57] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:53:04] <Linkandzelda> from the ajax call to the result there's just a function set as the success callback, and this is the first line: console.log("get data result", data);
[06:53:16] <Linkandzelda> i can't think what would make this happen
[06:53:34] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:53:45] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:54:21] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:54:24] <GreenJello> there are a bunch of calls to this API. Is the result_id on other one different?
[06:54:31] <GreenJello> ones*
[06:54:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:54:59] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:56:08] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:56:24] <GreenJello> it looks like they're most likely the same, and if that's the case, then something in your code is mutating an object
[06:56:25] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[06:56:26] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:56:53] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:57:22] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:57:31] <Linkandzelda> GreenJello: yes its different. im tracking a bug which loads the next page infinitely because it thinks its got a page 2 to load. only thing i can think is that im storing the result.page object and then modifying it later. but would have thought the ajax call would have overwritten it
[06:57:43] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:57:51] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[06:58:15] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:58:24] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:58:55] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[07:00:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[07:00:51] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[07:01:00] <Linkandzelda> GreenJello: very surprisingly i fixed it by storing the 4 individual values in a new object rather the result object itself
[07:01:24] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[07:01:40] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[07:01:54] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[07:02:05] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[07:02:31] <GreenJello> try to Object.freeze the page object
[07:02:58] <GreenJello> assuming your code is running in strict mode, that'll cause an error when it's mutated
[07:03:26] <GreenJello> and the stack trace will tell you where it's happening
[07:04:44] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:06:20] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[07:07:38] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[07:11:08] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[07:18:32] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[07:23:40] *** Joins: summersault (~summersau@179.221.251.16)
[07:31:26] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[07:31:42] *** Quits: IceMichael (~IceMichae@dynamic-046-114-158-204.46.114.pool.telefonica.de) (Ping timeout: 265 seconds)
[07:32:35] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[07:35:18] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[07:39:54] *** night_wulfe_ is now known as night_wulfe
[07:41:00] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[07:44:41] *** Joins: IceMichael (~IceMichae@dynamic-046-114-152-034.46.114.pool.telefonica.de)
[07:50:15] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:51:00] *** Quits: IceMichael (~IceMichae@dynamic-046-114-152-034.46.114.pool.telefonica.de) (Ping timeout: 258 seconds)
[07:53:24] *** Joins: IceMichael (~IceMichae@dynamic-046-114-152-034.46.114.pool.telefonica.de)
[07:55:25] *** Joins: summersault (~summersau@179.221.251.16)
[07:57:08] <Rockwood> https://codepen.io/pieter-biesemans/pen/BQBWXX i wanna place button left and on right side
[07:57:25] <Rockwood> and scrol should be work on click too
[07:59:01] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[08:08:04] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[08:08:37] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[08:11:16] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:13:14] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:13:59] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 255 seconds)
[08:14:18] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[08:14:45] <wroathe> InsertSelfClosingHTMLElementDestroyingToken
[08:22:07] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[08:27:33] *** Joins: summersault (~summersau@179.221.251.16)
[08:40:25] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[08:41:50] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:2cce:ee93:1e07:2316) (Changing host)
[08:41:50] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[08:47:58] <sheetjs> "Numbers are stored as IEEE doubles (binary values) with the following conversion: 1) convert to IEEE double 2) swap byte order 3) if number < 0 invert all bits, else invert only the highest order bit"
[08:50:46] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[08:56:44] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[08:56:52] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:59:22] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[09:00:38] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:01:35] <theskillwithin> sheetjs idk if ill ever use that info lol
[09:05:57] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[09:06:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[09:06:56] <sheetjs> it was some random file format spec
[09:07:43] <systemfault> o_O
[09:07:53] <sheetjs> i think they did it this way to optimize sorting
[09:09:31] <sheetjs> if you store the numbers this way, then comparison is just
[09:09:53] <systemfault> You think it's more than just endianess?
[09:09:54] <sheetjs> memcmp
[09:10:42] <systemfault> Hmm, you're probably right
[09:10:49] <sheetjs> when you express it as they are describing it, the high bit of the first byte is the sign
[09:11:07] <sheetjs> and the bit inversion ensures that the sign bit is 0 for negative values and 1 for positive values
[09:12:20] <systemfault> Are you reading random file format specs for fun? :)
[09:12:32] <systemfault> Or is it actually a well-known format?
[09:12:41] <sheetjs> something related to dbf
[09:13:08] <sheetjs> we're pigeonholed into dealing with file formats in javascript, which is good in a way but generally sucks
[09:13:15] <sheetjs> it's good because no one else wants to do it
[09:14:23] <systemfault> It's your ascension to super fame!
[09:14:30] <systemfault> You'll have JS groupies following you
[09:14:57] <sheetjs> its closer to "pecunia non olet"
[09:15:43] <sheetjs> in the original historical sense, not in how we interpret it today
[09:15:59] <systemfault> First time I ever read this one
[09:18:31] *** Joins: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi)
[09:18:32] <sheetjs> the hard part now is expanding beyond this file format stuff
[09:19:01] <sheetjs> not that it's not interesting, and not that there isn't huge demand
[09:19:13] <sheetjs> but there's huge demand to an extent because no one else is doing it seriously
[09:19:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:19:32] *** Joins: summersault (~summersau@179.221.251.16)
[09:21:54] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 240 seconds)
[09:24:27] <sheetjs> (famous last words)
[09:28:49] *** Quits: Jonno_FTW (~come@api.carswap.me) (Quit: Reconnecting)
[09:28:56] *** Joins: Jonno_FTW (~come@api.carswap.me)
[09:30:30] *** Quits: Jonno_FTW (~come@api.carswap.me) (Changing host)
[09:30:30] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[09:30:51] *** Joins: jazzy2 (~jaziz@2600:380:8644:8168:74dc:94bc:608f:bf10)
[09:31:54] *** Quits: jazzy (~jaziz@2600:380:c174:6a3d:c4c3:7674:1736:67d4) (Ping timeout: 240 seconds)
[09:40:25] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[09:40:25] *** Quits: bailon (~gizzard@saturn.whatbox.ca) (*.net *.split)
[09:40:25] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (*.net *.split)
[09:40:25] *** Quits: daniel-k (~daniel-k@192.241.135.211) (*.net *.split)
[09:40:25] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (*.net *.split)
[09:40:25] *** Quits: lockdown (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com) (*.net *.split)
[09:40:25] *** Quits: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net) (*.net *.split)
[09:40:25] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:40:25] *** Quits: LIERO (~no@vmi473477.contaboserver.net) (*.net *.split)
[09:40:26] *** Quits: _nderscore (~nderscore@silentf.art) (*.net *.split)
[09:40:26] *** Quits: bestdesign (~bestdesig@order.a.whore.website) (*.net *.split)
[09:40:26] *** Quits: purphoros (purphoros@devforge.org) (*.net *.split)
[09:40:26] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[09:40:26] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[09:40:28] *** Joins: __nderscore (~nderscore@silentf.art)
[09:40:30] *** Joins: fuzzfox (~gizzard@saturn.whatbox.ca)
[09:40:32] *** Joins: purphoroff (purphoros@devforge.org)
[09:40:34] *** Joins: deniska_ (~denis@user/deniska)
[09:40:34] *** Joins: LIERO_ (~no@vmi473477.contaboserver.net)
[09:40:36] *** Joins: pwnd_sfw9 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[09:40:38] *** Joins: lockdown (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com)
[09:40:40] *** Joins: daniel-k7 (~daniel-k@192.241.135.211)
[09:40:44] *** Joins: Jigsy (~Jigsy@88-111-2-172.dynamic.dsl.as9105.com)
[09:40:50] *** Quits: Jigsy (~Jigsy@88-111-2-172.dynamic.dsl.as9105.com) (Changing host)
[09:40:50] *** Joins: Jigsy (~Jigsy@user/jigsy)
[09:40:51] *** Joins: bestdesign (~bestdesig@order.a.whore.website)
[09:41:10] *** Joins: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net)
[09:41:27] *** Joins: Henry151 (~bishop@user/henry151)
[09:41:40] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[09:41:43] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:42:50] *** Parts: __nderscore (~nderscore@silentf.art) ()
[09:43:27] *** Joins: _nderscore (~nderscore@silentf.art)
[09:43:36] *** Quits: sagax (~sagax@213.138.71.146) (*.net *.split)
[09:43:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:65b0:5138:d555:1bfa) (*.net *.split)
[09:43:37] *** Quits: zd (~zd@7.210.184.35.bc.googleusercontent.com) (*.net *.split)
[09:43:37] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (*.net *.split)
[09:43:37] *** Quits: theskillwithin (theskillwi@user/theskillwithin) (*.net *.split)
[09:43:37] *** Quits: tazle (tazle@kapsi.fi) (*.net *.split)
[09:43:45] *** Joins: tazle (tazle@kapsi.fi)
[09:43:49] *** Joins: zd (~zd@7.210.184.35.bc.googleusercontent.com)
[09:43:57] *** Joins: Fairy (~Fairy@2001:464a:4992:0:6d15:799b:f00d:a207)
[09:43:58] *** Joins: theskillwithin (theskillwi@2600:3c01::f03c:91ff:fee0:d25d)
[09:43:58] *** Quits: theskillwithin (theskillwi@2600:3c01::f03c:91ff:fee0:d25d) (Changing host)
[09:43:58] *** Joins: theskillwithin (theskillwi@user/theskillwithin)
[09:45:57] *** Joins: sagax (~sagax@213.138.71.146)
[09:46:03] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[09:46:20] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[09:46:42] <theskillwithin> sheetjs systemfault https://youtu.be/_UgSDcHPgCc
[09:46:42] <skillbot> YouTube Title: Get This Potato In The Golf Hole Without Touching The Green - FULL TASK
[09:47:02] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[09:48:41] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[09:49:42] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[09:57:25] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[09:58:09] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[09:58:36] <sickdyd> GIT question: I have an open PR that implements some changes on the API and the front end. I need to create a new PR only for the changes done in the API folder (`./api/customer`), ignoring other changes. Is there a quick way to do this?
[09:58:44] <sickdyd> basically we want to deploy the API first
[10:00:11] <IceMichael> sickdyd, sure, split the changes for API and frontend into two commits first
[10:00:33] <sickdyd> IceMichael: ah, sorry, the changes are mixed up in several commits
[10:00:38] <IceMichael> then you can create two branches based on these commits that are rebased on the master branch directly
[10:00:50] <IceMichael> hmmm
[10:00:56] <IceMichael> yes, also works, let me think
[10:01:28] <IceMichael> I would go to the latest branch and checkout all the non-api-customer changes from master (or whatever branch to merge into)
[10:01:36] <sickdyd> IceMichael: I think the easiest way it's to duplicate the PR, reset it to the initial commit, add only the interested folder and push it
[10:01:51] <IceMichael> ah, it's only one commit with api/customer changes?
[10:02:01] <sickdyd> no, multiple
[10:02:05] <sickdyd> but I think I found a solution :>
[10:02:09] <sickdyd> thanks
[10:02:16] <sickdyd> (the solution is what I wrote above)
[10:02:20] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[10:02:23] <IceMichael> yeah, you can also just rebase -i and pick all the commits you like. This would be without working on file level
[10:02:47] <IceMichael> okay, yeah, there are many ways to rome here :) good that you found a solution
[10:04:16] <GreenJello> sickdyd, if you're curious, the more technical solutions is this: https://git-scm.com/docs/git-rebase#_splitting_commits
[10:04:46] <GreenJello> and then once all commits are only either frontend or backend, you can cherry-pick all of the backend commits on one branch, and do the same on another for frontend
[10:05:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:05:46] *** deniska_ is now known as deniska
[10:06:24] <IceMichael> provided that there are no commits that touch both frontend and backend :)
[10:06:38] <IceMichael> ah sorry
[10:06:45] <IceMichael> you digged once deeper, yeah
[10:08:47] *** Joins: ldlework (~ldlework@50-81-20-9.client.mchsi.com)
[10:09:46] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[10:12:10] <sickdyd> GreenJello: thanks for the link
[10:15:23] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[10:16:44] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[10:25:19] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:25:20] *** Joins: summersault (~summersau@179.221.251.16)
[10:26:40] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 265 seconds)
[10:33:26] *** Quits: Jck_true (~jcktrue@188.228.89.240) (Read error: Connection reset by peer)
[10:35:23] *** Joins: Jck_true (~jcktrue@188.228.89.240)
[10:36:47] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[10:41:30] *** __jmcantrell__ is now known as jmcantrell
[10:43:27] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 245 seconds)
[10:44:02] *** Joins: rcoote (~rcoote@2a02:908:692:81c0:f342:ab1c:1215:7a25)
[10:58:50] *** Quits: haniaF (~haniaF@83.24.40.67.ipv4.supernova.orange.pl) (Ping timeout: 258 seconds)
[10:58:59] *** Joins: haniaF_ (~haniaF@83.24.40.67.ipv4.supernova.orange.pl)
[10:59:31] *** Joins: happymeal` (~happymeal@75-28-166-198.lightspeed.tukrga.sbcglobal.net)
[11:00:02] *** Quits: happymeal (~happymeal@user/happymeal) (Ping timeout: 252 seconds)
[11:02:35] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[11:04:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:91f2:af29:7b82:8dfc)
[11:11:51] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:13:21] *** Joins: summersault (~summersau@179.221.251.16)
[11:16:54] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:91f2:af29:7b82:8dfc) (Ping timeout: 256 seconds)
[11:18:02] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[11:22:36] *** Quits: N4buc0 (~N4buc0@2001:1284:f016:7b14:7132:e90a:21fd:f0ed) (Read error: Connection reset by peer)
[11:22:47] *** Joins: N4buc0 (~N4buc0@2001:1284:f016:7b14:7132:e90a:21fd:f0ed)
[11:30:41] *** Joins: summersault (~summersau@179.221.251.16)
[11:35:20] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[11:42:37] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 250 seconds)
[11:50:22] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:459b:85f2:34dc:73d6)
[11:53:09] *** Joins: stenno (~stenno@user/stenno)
[11:55:53] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:04:00] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[12:05:08] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[12:17:49] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Remote host closed the connection)
[12:18:22] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[12:20:35] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 255 seconds)
[12:22:34] *** Joins: vysn (~vysn@user/vysn)
[12:29:30] *** Joins: summersault (~summersau@179.221.251.16)
[12:35:22] *** jazzy2 is now known as jazzy
[12:35:32] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:16] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[12:38:47] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:43:39] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:56:33] *** Joins: N4buc0- (~N4buc0@2001:1284:f016:7b14:7132:e90a:21fd:f0ed)
[12:57:45] *** Quits: N4buc0 (~N4buc0@2001:1284:f016:7b14:7132:e90a:21fd:f0ed) (Read error: Connection reset by peer)
[12:58:27] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[13:00:25] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:03:54] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[13:06:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:08:05] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[13:08:39] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:11:56] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[13:14:11] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:14:11] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[13:14:11] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[13:16:12] *** Joins: summersault (~summersau@179.221.251.16)
[13:16:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 258 seconds)
[13:31:01] *** Joins: federico_it (~textual@151.51.92.46)
[13:33:07] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:33:19] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 258 seconds)
[13:35:20] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[13:35:20] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[13:35:20] *** Joins: Heraes (~Heraes@user/romarain)
[13:41:15] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:5912:287:8a31:c329)
[13:41:15] *** Quits: nomic2 (~nomic@2a00:23c6:9902:2401:5912:287:8a31:c329) (Client Quit)
[13:48:16] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[13:48:41] *** Joins: mattil (~mattilinn@87-92-202-252.rev.dnainternet.fi)
[13:48:51] *** Joins: mattilinnanvuori (~mattilinn@87-92-202-252.rev.dnainternet.fi)
[13:49:22] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[13:50:34] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 240 seconds)
[13:53:26] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:56:10] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 240 seconds)
[14:12:42] *** Parts: mattilinnanvuori (~mattilinn@87-92-202-252.rev.dnainternet.fi) ()
[14:15:55] *** Parts: LIERO_ (~no@vmi473477.contaboserver.net) ()
[14:16:19] *** Joins: LIERO (~no@user/liero)
[14:19:06] *** Quits: federico_it (~textual@151.51.92.46) (Quit: Textual IRC Client: www.textualapp.com)
[14:19:29] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[14:21:03] *** Joins: summersault (~summersau@179.221.251.16)
[14:21:26] *** Joins: keypusher (keypusher@user/keypusher)
[14:29:57] *** Cyp_ is now known as Cyp
[14:31:22] *** Joins: entuland (~entuland@user/entuland)
[14:34:17] *** Joins: straykitten (~straykitt@subs24-116-206-8-30.three.co.id)
[14:41:01] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[14:46:41] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:49:59] *** Quits: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi) (Ping timeout: 258 seconds)
[14:52:16] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[14:52:37] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[14:52:58] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[14:53:51] *** Joins: NeoCron (~NeoCron@ip4-45-158-175-19.dyn.netcomnetz.de)
[14:57:50] *** Joins: xsperry (~as@user/xsperry)
[14:59:17] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Ping timeout: 252 seconds)
[14:59:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04)
[15:01:52] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:02:28] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 268 seconds)
[15:07:05] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04) (Quit: Leaving)
[15:10:07] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Remote host closed the connection)
[15:10:19] *** Joins: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi)
[15:10:32] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[15:14:08] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[15:14:27] *** Joins: mickey (~user@user/mickey)
[15:15:32] *** Joins: summersault (~summersau@179.221.251.16)
[15:18:05] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:27:40] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:27:47] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Ping timeout: 255 seconds)
[15:28:32] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[15:33:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:33:35] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[15:36:23] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:37:08] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[15:39:12] <hassoon> 'morning
[15:39:36] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[15:39:44] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[15:41:06] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[15:41:19] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[15:41:34] *** Joins: szutt (~szutt@116.37.2.145)
[15:44:06] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:44:42] *** Quits: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi) (Ping timeout: 245 seconds)
[15:47:01] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[15:47:01] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[15:49:03] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[15:49:03] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[15:50:01] *** Quits: straykitten (~straykitt@subs24-116-206-8-30.three.co.id) (Ping timeout: 265 seconds)
[15:50:38] *** Quits: N4buc0- (~N4buc0@2001:1284:f016:7b14:7132:e90a:21fd:f0ed) (Remote host closed the connection)
[15:50:51] *** Joins: N4buc0 (~N4buc0@2001:1284:f016:7b14:7132:e90a:21fd:f0ed)
[15:51:18] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[15:52:21] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[15:53:00] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[15:57:02] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[15:57:58] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[15:58:20] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:59:26] *** Joins: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi)
[15:59:48] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[16:00:23] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[16:01:23] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[16:02:19] *** Joins: straykitten (~straykitt@subs24-116-206-8-29.three.co.id)
[16:02:20] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[16:02:27] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[16:02:53] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[16:03:04] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[16:03:30] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[16:03:35] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[16:09:28] *** Quits: straykitten (~straykitt@subs24-116-206-8-29.three.co.id) (Quit: Leaving)
[16:18:07] *** Joins: summersault (~summersau@179.221.251.16)
[16:23:19] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[16:24:26] *** Joins: Intelo (~Intelo@88.244.89.240)
[16:24:33] <Intelo> I am having hard times getting my hands on something for js reference docs from mozila. But I want to read, highlight/add notes and save that state. For this a pdf version seems fit but I cannot find that online. The closes I got was devdoc.io but as its a browser. I cannot highlight and save state. Any ideas?
[16:26:25] <pizza> Intelo: please don't crosspost
[16:32:08] *** Joins: federico_it (~textual@151.51.92.46)
[16:36:38] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[16:44:18] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[16:44:21] *** Joins: thiras (~thiras@user/thiras)
[16:44:45] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:45:20] <silly> Intelo, i use zeal when i'm off the grid. but there's no support for notes, highlighting or any state. i doubt any of these alternatives https://alternativeto.net/software/zeal/ does what you want. Your best chance in fact is the browser. Find some extension for notes and highlighting. I think evernote was quite popular in that regard
[16:48:00] <silly> Intelo, https://chrome.google.com/webstore/detail/beanote-note-taking-on-we/nikccehomlnjkmgmhnieecolhgdafajb?hl=en
[16:48:10] <Intelo> silly thanks but its just like dash. and its not for tablets
[16:48:46] <silly> have you looked at the alternatives list?
[16:48:49] <Intelo> silly this does the job https://chrome.google.com/webstore/detail/super-simple-highlighter/hhlhjgianpocpoppaiihmlpgcoehlhio/related?hl=en
[16:48:51] <Intelo> but
[16:49:02] <Intelo> it works on desktop only. not on tablets
[16:49:24] <Intelo> also I wonder if I change device, or reinstall browser / os, all my highlights will be gone
[16:49:32] <silly> hah, i thought there was an app for everything in playstore/appstore
[16:49:39] <Intelo> silly I have looked at alterantives. I think all are non-tablet supported
[16:49:41] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:01] <Intelo> silly don't thinks so
[16:50:06] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 276 seconds)
[16:52:41] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[16:55:50] <silly> Intelo, https://kapeli.com/contact maybe the developer would consider your feature request (and if you payed for it, maybe even more)... worth a try
[16:56:31] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[16:57:07] <silly> of course, docs are updated constantly. so highlighting seems problematic to me
[16:57:54] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:58:15] *** Joins: entuland (~entuland@user/entuland)
[17:02:25] *** Quits: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi) (Ping timeout: 250 seconds)
[17:05:40] <Intelo> thanks! silly
[17:06:27] *** Joins: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi)
[17:08:17] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:08:27] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Remote host closed the connection)
[17:10:00] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:11:01] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Remote host closed the connection)
[17:11:31] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:12:34] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Remote host closed the connection)
[17:13:02] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:14:07] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Remote host closed the connection)
[17:14:35] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:15:39] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Remote host closed the connection)
[17:16:07] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:17:10] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Remote host closed the connection)
[17:17:31] *** Joins: summersault (~summersau@179.221.251.16)
[17:17:38] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:19:03] *** Joins: Guest62 (~Guest62@136.49.109.49)
[17:19:27] *** Quits: Guest62 (~Guest62@136.49.109.49) (Client Quit)
[17:23:17] <Donitz> wish you could use named arguments without having to create an object
[17:25:18] <stenno> why?
[17:25:37] <Donitz> so you don't need it to allocate and create an object for each call
[17:28:37] *** Quits: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi) (Ping timeout: 265 seconds)
[17:30:03] *** Joins: pulse (~pulse@user/pulse)
[17:30:24] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:31:25] *** Quits: IceMichael (~IceMichae@dynamic-046-114-152-034.46.114.pool.telefonica.de) (Quit: Leaving)
[17:31:43] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[17:32:34] *** Quits: tonelo (~tonelo@host-87-14-215-10.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[17:32:42] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[17:33:01] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[17:34:05] *** Joins: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi)
[17:42:53] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:43:24] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:44:11] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:51:36] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[18:07:44] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[18:10:39] <silly> i don't see the benefits
[18:13:27] *** Joins: summersault (~summersau@179.221.251.16)
[18:15:34] <samsch> Donitz, Are you having that allocation create a real perf problem?
[18:15:58] <Donitz> yes
[18:16:30] <Donitz> in the worst cases
[18:18:18] <samsch> ngl, that sounds impossible to be the cause of a bottleneck
[18:18:50] <Donitz> it an intermediate bottleneck
[18:19:00] <Donitz> which is easy to spot by its saw pattern on heap allocations
[18:20:39] <samsch> How many hundreds of thousands of iterations do you have to be doing? O_o
[18:20:40] *** Joins: zebrag (~chris@user/zebrag)
[18:20:57] *** Joins: silly_ (~silly@user/silly)
[18:20:57] <Donitz> over what timespan?
[18:21:22] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 240 seconds)
[18:21:28] <samsch> I'd have to assume something pretty short, like >1s
[18:21:36] <samsch> * <1s
[18:22:18] <Donitz> so it would be accepteable over a minute?
[18:22:26] <Donitz> acceptable*
[18:22:33] <samsch> If you get a measurable difference from switching to regular args from an object, that'd be your tell.
[18:22:48] <Donitz> well I've explained this many times before
[18:22:53] <Donitz> but it isn't about continous performance
[18:22:57] <Donitz> but about tiny lags
[18:23:07] <Donitz> you can't talk about performance in general with this issue
[18:23:43] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[18:23:57] <samsch> > many times before < Perhaps I've not been around during these conversations.
[18:24:18] *** Quits: silly (~silly@user/silly) (Ping timeout: 240 seconds)
[18:24:59] <samsch> "Measurable difference" when perf is already a problem is what's important 99% of the time in app code.
[18:25:33] <samsch> If you have the 1% type of case where perf needs very specific management, then bets are off generally
[18:25:35] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[18:25:50] <austincheney> Donitz, do you have an example of problem (named arguments vs object).  I am not sure what you are trying to solve for
[18:25:55] <Donitz> not quite. Even if it has an insigificant average performance drop over time
[18:26:03] <Donitz> it would still be very bad for it to hickup some 50 ms now and then
[18:26:10] *** Joins: Blackpajamas (~Blackpaja@167.167.46.3)
[18:26:25] *** Quits: mattil (~mattilinn@87-92-202-252.rev.dnainternet.fi) (Remote host closed the connection)
[18:26:48] <Donitz> imagine playing a platformer game and just have it randomly drop a few frames
[18:26:51] <Donitz> how fun would that be?
[18:26:51] <samsch> If a very infrequent 50ms stutter is bad enough to worry about in a web app, you are far, far away from the norm for sure.
[18:26:59] *** Joins: Bl4ckpajamas (~Blackpaja@167.167.46.2)
[18:27:23] <samsch> "platform game" is indeed very far away from the norm.
[18:27:44] <austincheney> samsch, it depends on what you are doing.  The human eye can detect changes at 100ms and many of those delays add up and are incredibly noticable
[18:28:02] <Donitz> human eye can easily detect the difference between 50 and 100 ms
[18:28:06] <austincheney> a bunch of 50mb delays really would look like a stutter that a person can see
[18:28:08] <Donitz> even between 10 and 20 ms
[18:28:18] <Donitz> I know there is a world of difference between 60 and 120 hz monitors
[18:29:03] <samsch> Sure, but you have to be doing something where it matters at all. Real time game engines would be one of those for sure, but it's again very far from the norm of what you're building with JavaScript.
[18:29:29] <austincheney> this talk makes me feel dirty in that we are talking about 20ms delays and my employer is still dicking around with 10+ second page loads and jquery and such
[18:29:38] <Donitz> not because you can't, but if nobody cares about details such as this I could see why there would be an illusion that js can't handle it
[18:29:48] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[18:29:54] *** Joins: yte3 (~0@151.25.249.108)
[18:30:26] <Donitz> plus the whole cache miss thing which I didn't understand until this last week
[18:30:58] *** Quits: Blackpajamas (~Blackpaja@167.167.46.3) (Ping timeout: 265 seconds)
[18:31:47] <samsch> Regardless of whether or not JS *can* or *could* handle it in the first place, it's just not the common case that is being designed for. I suspect the engine implementors would expect that you'd probably ditch to WebGL or wasm when you start hitting the area where GC timing begins having an effect.
[18:32:19] <Donitz> that's the funny thing
[18:32:21] <Donitz> I considered wasm
[18:32:28] <Donitz> but I suspect it would actually be worse for real time games
[18:32:31] <Donitz> due to the overhead of calling it
[18:35:01] <cahoots> hi, i want to make a web extension to hide certain posts on a website. the tricky thing is that more posts can be loaded asynchronously after the initial load (forever feed). how can i watch for new posts from my extension to decide which ones to hide?
[18:36:19] <Alexendoo> cahoots: You could use a MutationObserver
[18:36:43] <hassoon> mutation observer is like a super power
[18:36:45] <hassoon> i like it
[18:37:00] <hassoon> you kind of hold the whole DOM in your hands
[18:37:22] <cahoots> he's got the whooole dom, in his hands
[18:38:30] *** Quits: happymeal` (~happymeal@75-28-166-198.lightspeed.tukrga.sbcglobal.net) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[18:38:51] *** Joins: happymeal (~happymeal@user/happymeal)
[18:40:05] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[18:44:13] <hassoon> cahoots: anyway what Alexendoo said, read about MutationObserver
[18:44:20] <hassoon> !mdn MutationObserver
[18:44:21] <jellobot> hassoon, MutationObserver - The MutationObserver interface provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature, which was part of the DOM3 Events specification. https://mdn.io/mutationobserver
[18:45:16] <hassoon> use it wisely cahoots , it's very prone to infinite notification emittions
[18:49:05] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:52:20] <cahoots> ty, yeah i would be modifying the dom in the callback. so would i need to ignore all callbacks run because of my own mutation?
[18:53:42] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:55:36] *** wyre_ is now known as wyre
[18:56:35] *** Quits: federico_it (~textual@151.51.92.46) (Quit: Textual IRC Client: www.textualapp.com)
[18:59:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:01:41] <hassoon> what ?*
[19:03:28] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:05:03] *** Joins: Naan (~Naan@user/naan)
[19:09:01] <Bombo> anyone know how to use the Audio API? i'm trying to play an audiofile reverse: https://pastebin.ubuntu.com/p/H2P9xYb5rM/ but there is just silence
[19:10:49] <Bombo> (Web Audio API)
[19:11:29] <hassoon> Bombo: https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API
[19:12:15] <hassoon> Bombo: https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API
[19:14:03] *** Joins: IceMichael (~IceMichae@dynamic-046-114-152-034.46.114.pool.telefonica.de)
[19:14:57] <Bombo> hassoon: ok but no examples on reverse there
[19:15:56] <hassoon> Bombo: reverse ?
[19:16:44] <Bombo> hassoon: play audio reverse, backwards
[19:17:21] *** Quits: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi) (Ping timeout: 252 seconds)
[19:17:42] *** Joins: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi)
[19:17:49] <hassoon> Bombo: you provide another sound file with a reversed version of your song ?
[19:17:51] <hassoon> use audacity
[19:18:59] <Bombo> hassoon: yes, or do it live in js
[19:19:17] <hassoon> Bombo: nope, i wouldn't opt for that
[19:20:04] <hassoon> Bombo: or tell you waht.. try this:
[19:20:06] <hassoon> var song = document.getElementsByTagName('audio')[0];
[19:20:06] <hassoon> song.playbackRate = -1;
[19:20:20] <hassoon> Bombo: https://stackoverflow.com/questions/9874167/how-can-i-play-audio-in-reverse-with-web-audio-api
[19:20:43] <Bombo> i would opt for that, and playbackRate = -1; doesn't work in firefox
[19:21:28] <hassoon> meh just use audacity or whatever you prefer as an audio editor
[19:21:29] <Bombo> hassoon: that is the example i found too, but it doesn't work
[19:21:43] <Bombo> hassoon: https://pastebin.ubuntu.com/p/H2P9xYb5rM/
[19:22:06] <hassoon> playing a song backward? you provide two audio files for the audio API, and one of them is in reverse mode, simple solution
[19:25:38] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[19:27:06] *** Quits: jazzy (~jaziz@2600:380:8644:8168:74dc:94bc:608f:bf10) (Ping timeout: 240 seconds)
[19:31:19] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[19:34:37] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:35:11] *** Quits: l__q_ (~modinfo@user/modinfo) (Ping timeout: 258 seconds)
[19:37:41] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[19:39:09] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:44:24] <silly_> aww noo, nwfm ;( https://jukebox.stegner.games/jukebox_go.html?id=0OlYoowCJeDHbNRKsqt9Ox&audio=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DkK4H-LkrQjQ
[19:44:43] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[19:45:27] <hassoon> silly_: what is that
[19:45:44] <silly_> the real infinite machine was perfect until they depublished it
[19:46:07] <silly_> it loops infinitely through any song
[19:47:03] <silly_> this is what i always think of when someone does array NaNs
[19:48:16] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[19:50:07] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 245 seconds)
[19:53:52] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[19:57:21] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[19:58:29] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Read error: Connection reset by peer)
[20:03:26] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[20:03:58] *** Joins: justache (~justache@user/justache)
[20:04:16] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[20:05:47] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:10:32] *** Joins: summersault (~summersau@179.221.251.16)
[20:15:05] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[20:15:31] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[20:20:27] *** Quits: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi) (Ping timeout: 250 seconds)
[20:22:53] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:23:48] *** Joins: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[20:30:44] *** Quits: N4buc0 (~N4buc0@2001:1284:f016:7b14:7132:e90a:21fd:f0ed) (Quit: Leaving)
[20:32:51] *** Joins: impliednude (~impliednu@104.232.118.176)
[20:33:08] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:35:40] *** Joins: gehn (~gehn@user/gehn)
[20:36:29] *** Joins: Rockwood (~Rocky@user/rocky)
[20:36:34] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[20:36:35] *** Joins: ckdcreation (~ckdCreati@147.55.133.136)
[20:37:50] *** Joins: l__q_ (~modinfo@user/modinfo)
[20:39:07] *** Joins: Betal (~Beta@user/betal)
[20:45:21] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[20:46:55] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:47:59] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[20:48:25] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[20:49:20] *** Joins: wintersky (uid453465@id-453465.brockwell.irccloud.com)
[20:51:39] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[20:55:30] *** Joins: summersault (~summersau@179.221.251.16)
[20:58:51] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[21:01:03] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[21:02:53] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[21:07:20] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[21:07:32] *** Quits: lightstalker (~BT@user/lightstalker) (Ping timeout: 255 seconds)
[21:10:12] <l__q_> https://nextlevelchess.blog/how-to-become-a-grandmaster-in-chess/
[21:10:14] <l__q_> :o
[21:10:15] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:10:31] <l__q_> my fido is 1200
[21:10:51] <hassoon> what's a fido
[21:10:53] <l__q_> and im 30yr
[21:11:01] <hassoon> l__q_: 'sup bud'
[21:11:16] <l__q_> hassoon: chess ranking
[21:11:27] <hassoon> l__q_: and what does that have to do with your age
[21:11:35] *** Quits: Isil`Zha (~isilzha@2a02:8070:c3c7:8c00:2e44:d4f8:a5a4:5f8f) (Read error: Connection reset by peer)
[21:11:43] <l__q_> hassoon: you dont read the article, or?
[21:11:43] *** Joins: IsilZha (~isilzha@2a02:8070:c3c7:8c00:2e44:d4f8:a5a4:5f8f)
[21:11:52] <hassoon> l__q_: meh nope
[21:12:00] <l__q_> also.. :P
[21:12:03] <hassoon> l__q_: i'm in the middle of reading somehting else
[21:12:13] <l__q_> do you play chess?
[21:12:17] <hassoon> l__q_: irc chat is enough for me to get informed
[21:12:19] <l__q_> want to play with me now?
[21:12:26] <hassoon> l__q_: not really, used to do so, but not much
[21:12:31] <hassoon> l__q_: nope, you have fun
[21:12:42] <l__q_> ?
[21:12:53] <hassoon> l__q_: try this one https://ghanhass.github.io/simon-game
[21:13:05] <l__q_> on lichess we can have one game
[21:13:11] <l__q_> you dont even need a account
[21:13:28] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[21:13:29] <l__q_> whats this?
[21:13:57] <hassoon> l__q_: simon game, memory game, try it
[21:14:11] <hassoon> l__q_: click on the blocks the game tells you to click in the given order, after the sign
[21:14:19] <l__q_> hassoon: https://lichess.org/9jdEeiUI
[21:14:29] <hassoon> l__q_: nah not into playing chess
[21:14:31] <hassoon> sorry
[21:14:33] <hassoon> you have fun
[21:14:36] <l__q_> first who click on link then im play with them
[21:14:41] <gehn> l__q_, perhaps you were wanting #javascript-social
[21:14:47] <l__q_> ?
[21:14:52] <l__q_> chess is fun
[21:14:56] <l__q_> i love it
[21:14:57] *** Quits: Bl4ckpajamas (~Blackpaja@167.167.46.2) (Quit: Bl4ckpajamas)
[21:15:06] <hassoon> l__q_: run #javascript cops are coming to you
[21:15:10] <hassoon> :D
[21:15:15] <l__q_> ?
[21:15:15] *** Joins: MylesBorins (~MylesBori@217.50.237.35.bc.googleusercontent.com)
[21:15:31] <gehn> unless you're writing a chess game in JavaScript it's off topic, as you seem to constantly be off topic in here, and specifically you always seem to be on the topic of yourself
[21:15:33] <l__q_> I dont understand
[21:15:42] <l__q_> Yes
[21:15:46] <gehn> off topic is ok, but your amount of self centered off topic is excessive
[21:15:53] <hassoon> lmao
[21:15:55] <l__q_> Im allready writen chess in JS, with chess.js and stockfish
[21:16:07] <hassoon> l__q_: i told you, cops are gonna arrest you, run away to #javascript-social
[21:16:13] <Rockwood> lol
[21:16:15] <l__q_> stockfish with swapw_child becose is no stokfish in javascript
[21:16:46] <l__q_> child_process*
[21:16:56] *** Joins: mattil (~mattilinn@87-92-245-166.rev.dnainternet.fi)
[21:17:00] <Rockwood> i love fishes of sky :D
[21:17:09] <hassoon> l__q_: i suggest you do as gehn told you
[21:17:23] <l__q_> ok sorry
[21:17:26] <hassoon> good
[21:17:28] *** Joins: onosendi (~onosendi@user/onosendi)
[21:18:25] *** Joins: stenno (~stenno@user/stenno)
[21:19:48] *** Quits: ckdcreation (~ckdCreati@147.55.133.136) (Quit: Leaving)
[21:20:19] *** Joins: r1ch (~r1ch@user/r1ch)
[21:21:50] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[21:22:12] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[21:23:46] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[21:29:04] *** Joins: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi)
[21:30:02] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 255 seconds)
[21:30:14] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04)
[21:30:38] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:36:16] <l__q_> why chess.js give true on false fan?
[21:36:26] <l__q_> bug?
[21:36:42] <l__q_> If i check a false FEN then return a true
[21:36:50] <hassoon> l__q_: g odig it up , no one knows
[21:36:55] <hassoon> go dig it *
[21:37:06] <l__q_> ?
[21:37:08] <hassoon> you're the one playing that javascript game
[21:37:18] <hassoon> meh you with your ?'s ...
[21:37:44] <l__q_> its a bug also?
[21:37:52] *** Joins: eXistenZ (~biskit@bzq-79-182-123-73.red.bezeqint.net)
[21:38:08] <l__q_> https://github.com/jhlywa/chess.js/issues/220
[21:38:12] <l__q_> yes, a bug
[21:40:23] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[21:41:11] <l__q_> how fix validate fen?
[21:41:26] <l__q_> only a valid fen send a true
[21:41:47] <l__q_> becouse a invalid fen crash stockfish
[21:42:11] <l__q_> and I want to check in javascript if a give fan is valid
[21:42:20] <l__q_> befor i send to stockfish
[21:43:45] *** Quits: NeoCron (~NeoCron@ip4-45-158-175-19.dyn.netcomnetz.de) (Remote host closed the connection)
[21:46:04] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[21:46:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[21:46:21] <Bombo> got it, now it plays the opus reverse https://pastebin.ubuntu.com/p/k8Qx4vN7fg/ :-)
[21:46:50] <l__q_> ?
[21:47:00] <l__q_> AudioContext?
[21:47:08] <l__q_> for a chess?
[21:47:08] <Bombo> when i comment out 'Array.prototype.reverse.call( buffer.getChannelData(1) );' one channel plays reverse and the other forward lol
[21:47:31] *** Joins: summersault (~summersau@179.221.251.16)
[21:47:35] <hassoon> ah you got that reverse mode thing working
[21:47:43] <robertmaxrees> l__q_ they aren't talking to you lol
[21:47:57] <l__q_> How to fix that Chess.validate_fen() return false if you give a false fen?
[21:48:02] <Bombo> no i was struggeling with web audio API, sorry to interrupt your chess talk :)
[21:48:03] <l__q_> https://github.com/jhlywa/chess.js/issues/220
[21:48:20] <hassoon> l__q_: how about you stop telling us stories about your chess gale ?
[21:48:23] <hassoon> * game ?
[21:48:28] *** Joins: mrlc (~mo@2001-4dd7-dced-0-bc3e-8fff-87e2-27eb.ipv6dyn.netcologne.de)
[21:48:34] <l__q_> Now you can give a false fan and return true
[21:48:37] <Bombo> hassoon: yes, but now i wonder if thats possible with an <audio> source too
[21:48:40] <l__q_> chess
[21:48:41] *** Joins: yaalon (~yaalon@187.250.143.188.dsl.dyn.telnor.net)
[21:48:44] *** Parts: MylesBorins (~MylesBori@217.50.237.35.bc.googleusercontent.com) ()
[21:49:10] <l__q_> https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation
[21:49:14] <l__q_> FEN
[21:49:21] <l__q_> Forsyth‚ÄìEdwards Notation
[21:49:26] <hassoon> Bombo: if i were you, i'd just keep 2 opposite songs, and play whatever the user wants on demand, toggling them both, that's all
[21:49:39] <hassoon> l__q_: who the heck are you ?
[21:50:02] <l__q_> hassoon: How to valide a valid FEN?
[21:50:07] <hassoon> ...
[21:50:12] <hassoon> good day son
[21:50:17] <l__q_> chess.js return true on false
[21:50:45] <Bombo> hassoon: i got that, but i don't want to have two versions of each song
[21:51:01] <l__q_> pls help
[21:51:14] <sheetjs> l__q_: parse it
[21:51:25] <l__q_> I do
[21:51:26] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[21:51:30] <l__q_> rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1
[21:51:36] <l__q_> return true
[21:51:53] <l__q_> rnbqkbnr/8p/8/8/4P3/8/PPPP1PPP/8 b KQkq e3 0 1
[21:51:57] <l__q_> return true
[21:52:00] <hassoon> Bombo: meh as you wish
[21:52:03] <l__q_> but it shold falsew
[21:52:45] <sheetjs> what does validate_fen do? does it just verify that the string conforms to the notation or does it also check the board against chess rules?
[21:52:45] <l__q_> sheetjs: should I write my own chess parser?
[21:53:06] <Bombo> hassoon: would be too simple too ;)
[21:53:06] <stenno> l__q_: just fix the existing one
[21:53:10] <stenno> write a PR
[21:53:15] <sheetjs> there's no problem with the existing one afaict
[21:53:25] <sheetjs> it's a question about the meaning of validate_fen
[21:53:25] <stenno> oh
[21:53:42] <sheetjs> Returns a validation object specifying validity or the errors found within the FEN string.
[21:53:54] <l__q_> sheetjs: validate_fen: it check if fen is a valid fen
[21:54:08] <sheetjs> and i think the intention is to verify that the FEN is a valid FEN string, not whether it corresponds to a valid chess configuration
[21:54:10] <l__q_> also no mats on king. etc
[21:54:32] <l__q_> omg
[21:55:11] <l__q_> ##chess dostent know javascript, and #javascript dosent know chess, how can I become a help?!
[21:55:11] <stenno> so the solution was RTFM
[21:55:14] *** Joins: summersault (~summersau@179.221.251.16)
[21:55:23] <sheetjs> l__q_: lets take a step back
[21:55:29] <l__q_> ok
[21:55:34] *** Joins: Blackpajamas (~Blackpaja@167.167.46.3)
[21:55:55] <sheetjs> what are you trying to do?
[21:56:13] <l__q_> to vlidate a valid fen
[21:56:22] <l__q_> befor send to stockfish
[21:56:23] <sheetjs> what do you mean by "validate"?
[21:56:35] <l__q_> becouse if ou send a invalid fen then crash a child
[21:57:00] <sheetjs> ok so you need a valid chess configuration
[21:57:03] <l__q_> it check if FEN is valid
[21:57:06] <sheetjs> it's not enough just to have a valid FEN
[21:57:13] <sheetjs> you also need it to correspond to a valid configuration
[21:57:48] <l__q_> chess.js. has alleredy a validate_fen() funktion, but it return true also if fan is incorrect
[21:57:49] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[21:58:03] *** Joins: summersault (~summersau@179.221.251.16)
[21:58:10] <l__q_> exacly!
[21:58:11] <l__q_> funktion
[21:58:16] <l__q_> https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation
[21:58:26] *** Joins: codebam (~codebam@user/codebam)
[21:58:33] <sheetjs> because validate_fen only checks if the text is valid
[21:58:38] <sheetjs> not whether the board configuration is valid
[21:58:39] <l__q_> No
[21:58:46] *** Joins: WishBoy (~WishBoy@user/wishboy)
[21:58:53] <sheetjs> try this
[21:58:57] <sheetjs> take an invalid FEN
[21:59:01] <l__q_> validate_fen checks if the given fan is corrent, bot not correnct
[21:59:03] <sheetjs> and use the constructor
[21:59:20] <sheetjs> l__q_: are you familiar with the difference between syntax and semantics?
[21:59:22] <l__q_> if you give a rly invalid FAN then this funktions return false
[21:59:25] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[21:59:35] <l__q_> validate_fen is noit so smart now
[21:59:36] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:59:42] <sheetjs> it's not supposed to be
[21:59:48] *** Joins: Naan (~naan@user/naan)
[21:59:50] <Rockwood> gn
[21:59:53] <sheetjs> it's validating that the text follows the grammar
[21:59:58] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:00:01] <sheetjs> not whether the FEN is meaningful
[22:00:02] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:00:20] <l__q_> can you help me to make va valide_fen funktion working correnctly?
[22:00:43] <sheetjs> n> var let = 3; let
[22:00:44] <jellobot> (okay) 3
[22:00:49] <sheetjs> n> var const = 3; const
[22:00:50] <jellobot> (fail) SyntaxError: Unexpected token 'const'
[22:01:06] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[22:01:23] <sheetjs> do you have the moveset?
[22:01:34] <stenno> const is a reserved word, let is not
[22:01:53] <sheetjs> n> var char = 3; char
[22:01:53] <jellobot> (okay) 3
[22:01:58] <sheetjs> char is a reserved word too
[22:02:12] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[22:02:14] <stenno> no its not
[22:02:19] <l__q_> https://jsfiddle.net/skorotkiewicz/de32g8uc/
[22:02:21] <stenno> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#keywords
[22:02:23] <l__q_> here my API code
[22:02:54] <l__q_> it crash if you give a false fan
[22:02:58] <stenno> n> var import = 'foo'; import
[22:02:59] <jellobot> (fail) SyntaxError: Unexpected token 'import'
[22:03:00] *** Joins: summersault (~summersau@179.221.251.16)
[22:03:14] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[22:04:04] <l__q_> how to fix, if user give a false FAN then is NOT send to stockfish
[22:04:31] <l__q_> chess.js give true, even if I give a false FEN
[22:04:42] *** Joins: Celeo (~Celeo@user/celeo)
[22:04:42] <stenno> god dammit
[22:04:54] *** Joins: Betal (~Beta@user/betal)
[22:04:59] <stenno> hanlons razor is applied
[22:05:00] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:06:05] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:06:23] <sheetjs> oh it was an ES3 reserved word
[22:06:24] *** Joins: prometh (uid425119@id-425119.charlton.irccloud.com)
[22:06:36] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[22:06:37] *** Quits: Blackpajamas (~Blackpaja@167.167.46.3) (Quit: Blackpajamas)
[22:06:39] <sheetjs> https://www.ecma-international.org/wp-content/uploads/ECMA-262_3rd_edition_december_1999.pdf 7.5.3 i guess char was removed in ES5
[22:08:24] <stenno> so is the 'reserved' thing the solution to why 'let' is allowed but not 'const' ?
[22:09:51] <l__q_> ok
[22:09:55] <l__q_> how to fix?
[22:10:01] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Quit: kongzilla)
[22:10:11] <stenno> l__q_: by finding the offending lines and writing it
[22:10:12] <l__q_> https://jsfiddle.net/skorotkiewicz/de32g8uc/
[22:10:13] *** Joins: pavonia (~user@user/siracusa)
[22:10:37] <stenno> l__q_: RTFM
[22:10:38] <sheetjs> let was not a reserved or future reserved word in ES3
[22:10:52] *** Joins: Blackpajamas (~Blackpaja@167.167.46.3)
[22:11:01] <stenno> l__q_: i hope you are NOT asking for random people to write a fucking chess parser for you
[22:11:15] <l__q_> no
[22:11:31] <l__q_> im sorry if you think so
[22:11:35] <stenno> ok because it sounds as if you want a function which validates a certain chess position
[22:11:46] <l__q_> soory
[22:11:49] <sheetjs> ES5 added let as a FutureReservedWord, which should be a strict mode error
[22:11:57] <sheetjs> n> "use strict"; var let = 3; let
[22:11:57] <stenno> HMM
[22:11:58] <jellobot> (fail) SyntaxError: Unexpected strict mode reserved word
[22:12:01] <stenno> NICE
[22:12:02] <stenno> nice*
[22:12:04] <l__q_> ok
[22:12:06] <sheetjs> n> "use strict"; var char = 3; char
[22:12:07] <jellobot> (okay) 3
[22:12:12] <l__q_> stenno: sorry
[22:12:20] <systemfault> Maybe he could find a fucking chess parser on pornhub...
[22:12:21] <sheetjs> char was reserved in ES3 but not ES5
[22:12:27] *** Joins: entuland (~entuland@user/entuland)
[22:12:31] <l__q_> what is pornhub?
[22:12:41] <l__q_> @pornhub?
[22:12:45] <l__q_> #*
[22:12:49] <l__q_> im try
[22:12:49] <systemfault> It's nothing, sorry.
[22:12:56] <hassoon> ...
[22:13:16] <l__q_> it sonly one user
[22:13:25] <l__q_> sabirna on #pornhub
[22:13:28] *** Joins: summersault (~summersau@179.221.251.16)
[22:13:34] <stenno> it was a joke
[22:13:37] <stenno> now just
[22:13:49] <l__q_> ahh, okay
[22:13:56] <sheetjs> l__q_: you need to define what is a valid chess board
[22:14:16] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 265 seconds)
[22:14:19] <l__q_> sheetjs: valid chess board?
[22:14:24] <l__q_>  8/8/8/8
[22:14:27] <sheetjs> chess configuration
[22:14:28] <l__q_> this is valid
[22:14:31] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04) (Quit: Leaving)
[22:14:40] <sheetjs> because you aren't just asking if the string is correct
[22:14:43] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[22:14:46] <l__q_> im donst undesrtand
[22:14:53] <sheetjs> there are two levels of correctness
[22:15:09] <l__q_> PEN of FEN?
[22:15:11] <sheetjs> a completely empty chess board, no pieces, can be expressed in FEN
[22:15:25] <l__q_> ok
[22:15:40] <sheetjs> but that's not valid based on your understanding
[22:15:42] <l__q_> no peace on board is always 8/8/8/8
[22:16:00] <l__q_> 8 === no pieseces on row
[22:16:08] <sheetjs> sure
[22:16:24] <sheetjs> so is that valid for you?
[22:16:27] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:16:30] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[22:16:34] <l__q_> yes
[22:16:44] <sheetjs> so what's an example of something you think is invalid
[22:16:52] <l__q_> 8/8/8/8 is valid for chess.js and stockfish
[22:17:23] <l__q_> my problem is thats is valid for chess.js and not valid for stockfish
[22:17:27] <sheetjs> rnbqkbnr/8p/8/8/4P3/8/PPPP1PPP/8 b KQkq e3 0 1  is valid for chess.js but not for stockfish?
[22:17:39] <l__q_> and im check with chess.js bevore im send to stockfish
[22:18:02] *** Quits: rcoote (~rcoote@2a02:908:692:81c0:f342:ab1c:1215:7a25) (Quit: Konversation terminated!)
[22:18:11] <l__q_> then im have a child crash on false fen
[22:18:16] *** Joins: Betal (~Beta@user/betal)
[22:18:36] <l__q_> becouse chess.js give true on false fen
[22:18:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04)
[22:19:10] <l__q_> https://github.com/jhlywa/chess.js/issues/220
[22:19:14] <l__q_> not fixed yet
[22:19:19] <l__q_> sinde 2019
[22:19:31] <sheetjs> what is 8p
[22:19:45] <l__q_> im must sure that im send a VALID FEN to stockfish
[22:20:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[22:20:30] <sheetjs> hold on
[22:20:37] <sheetjs> "rnbqkbnr/8p/8/8/4P3/8/PPPP1PPP/8 b KQkq e3 0 1 "
[22:20:44] <sheetjs> is the error here
[22:20:49] <sheetjs> "rnbqkbnr/7p/8/8/4P3/8/PPPP1PPP/8 b KQkq e3 0 1 "
[22:21:01] <sheetjs> Is that what you should have generated?
[22:21:08] <l__q_> sheetjs: p = pawn and 8 is whole row
[22:21:37] <sheetjs> if you wanted a whole row of pawns
[22:21:41] <sheetjs> wouldnt it be pppppppp ?
[22:21:56] <l__q_> I want ony a valid FEN
[22:22:04] <l__q_> to send to stockfish
[22:22:23] <l__q_> if you send a invalid FEN to stockfish then you have crash
[22:22:31] *** Joins: mrdata (~mrdata@user/mrdata)
[22:22:40] <sheetjs> right, "rnbqkbnr/8p/8/8/4P3/8/PPPP1PPP/8 b KQkq e3 0 1 " is invalid
[22:22:42] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[22:23:20] *** Quits: Blackpajamas (~Blackpaja@167.167.46.3) (Quit: Blackpajamas)
[22:23:23] *** Quits: Betal (~Beta@user/betal) (Ping timeout: 268 seconds)
[22:23:54] <sheetjs> hmm
[22:24:06] <sheetjs> i tried this in chess.js and it does give an error
[22:24:26] <l__q_> Yes, this FAn is invalid, and send a "TypeError: k is undefined" error
[22:24:43] <sheetjs> new Chess().validate_fen("rnbqkbnr/8p/8/8/4P3/8/PPPP1PPP/8 b KQkq e3 0 1")
[22:24:44] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[22:24:44] <sheetjs> the error is
[22:24:51] <sheetjs> '1st field (piece positions) is invalid [row too large].'
[22:25:07] <l__q_> is invalid
[22:25:11] *** Quits: yaalon (~yaalon@187.250.143.188.dsl.dyn.telnor.net) (Remote host closed the connection)
[22:25:16] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[22:25:27] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:25:43] <l__q_> trytry with rnbqkbnr/pppppppp/pppppppp/8/8/PPPPPPPP/PPPPPPPP/RNBQKBNR w KQkq - 0 1
[22:25:46] <l__q_> rnbqkbnr/pppppppp/pppppppp/8/8/PPPPPPPP/PPPPPPPP/RNBQKBNR w KQkq - 0 1
[22:25:51] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[22:25:54] <sheetjs> lets just use jsfiddle
[22:25:55] <l__q_> this is valid
[22:26:16] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Client Quit)
[22:26:23] *** Joins: Betal (~Beta@user/betal)
[22:26:23] <l__q_> just next line with powns
[22:26:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:26:42] <l__q_> two line with powns
[22:27:10] <sheetjs> https://jsfiddle.net/r5xd83kh/
[22:27:11] <l__q_> wait, im send my code to github
[22:27:15] <sheetjs> no worries
[22:27:22] <sheetjs> look, there are two types of "errors"
[22:27:31] *** Joins: summersault (~summersau@179.221.251.16)
[22:27:48] <l__q_> no errors
[22:27:52] <sheetjs> one is if you give a malformed string
[22:27:58] *** Joins: yaalon (~yaalon@187.250.143.188.dsl.dyn.telnor.net)
[22:27:58] <l__q_> becouse it a valid FEN!
[22:28:03] <sheetjs> right
[22:28:06] <sheetjs> it is a valid FEN string
[22:28:14] <sheetjs> but does not map to a valid board configuration under normal chess rules
[22:28:15] <l__q_> Valid FEN, not string!
[22:28:30] <l__q_> FEn is a string but a FEN type
[22:28:46] <l__q_> w8
[22:28:55] <l__q_> wait, im show my project tou you
[22:28:59] <sheetjs> no need
[22:29:04] <sheetjs> l__q_: you are conflating two concepts
[22:29:18] <sheetjs> FEN is just a notation
[22:29:48] <sheetjs> there are valid FEN strings that do not correspond to a valid chessboard configuration
[22:30:26] *** Quits: Betal (~Beta@user/betal) (Client Quit)
[22:30:40] <l__q_> blitz-js is updateted to react 18 wow
[22:30:59] <l__q_> i see this on welcome page on gh
[22:31:03] <ljharb> that's dumb, react 18 doesn't exist yet
[22:31:06] <systemfault> Is l__q_ a GPT-3 bot?
[22:31:17] <sheetjs> "ID,Name\n1,2" is a valid CSV string but Excel does not treat it as valid
[22:31:21] <sheetjs> who knows
[22:31:22] <l__q_> not yet
[22:31:43] <l__q_> w8, i send my code
[22:31:57] <l__q_> git remote add origin git@github.com:skorotkiewicz/chess-fullstack.git
[22:33:14] *** Joins: Betal (~Beta@user/betal)
[22:34:00] <stenno> systemfault: i wonder too
[22:34:12] <sheetjs> anyone familiar with dependabot? need a way to feed a changelog without actually giving it access to the module
[22:34:12] <stenno> its getting on my nerves but sheetjs is an op too
[22:34:46] <sheetjs> haha look, syntax and semantics are a tricky concept
[22:34:48] <systemfault> stenno: I originally thought that it was just a "language barrier" kind of issue... but when he switch to talking about React18 in the middle of the conversation...
[22:35:21] <sheetjs> oh blitz-js isn't chess related
[22:36:15] <sheetjs> ok dependabot, this thing is sorta frustrating
[22:36:56] <sheetjs> given the chicanery around github copilot, it's probably prudent not to give access to any  microsoft-related services including dependabot
[22:37:17] <sheetjs> but there seems to be no easy way to tell it the changelog for private modules
[22:39:20] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[22:40:20] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:40:22] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (Ping timeout: 265 seconds)
[22:40:57] *** Joins: Blackpajamas (~Blackpaja@167.167.46.3)
[22:41:31] <l__q_> https://github.com/skorotkiewicz/chess-fullstack its a from my template "easy-template" project
[22:41:50] <sheetjs> this is not relevant
[22:41:53] <l__q_> easy-react is my project
[22:41:58] <l__q_> ok
[22:42:01] <sheetjs> l__q_: listen
[22:42:04] <l__q_> see src files
[22:42:35] <sheetjs> it is possible for a string to follow the grammar of FEN
[22:42:41] *** Joins: fcjsx (~fcjsx@2800:a4:800:2900:a97e:bdd1:a95b:6386)
[22:42:43] <sheetjs> but not actually be a valid chess configuration
[22:43:01] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 258 seconds)
[22:43:14] *** Joins: summersault (~summersau@179.221.251.16)
[22:43:22] <l__q_> and how to valid a valid fen?
[22:43:35] <l__q_> if chess.js cant do that?
[22:43:47] <sheetjs> that's what validate_fen does. You have to figure out what other rules stockfish requires
[22:43:49] <sheetjs> https://ia802908.us.archive.org/26/items/pgn-standard-1994-03-12/PGN_standard_1994-03-12.txt
[22:44:10] *** Quits: Blackpajamas (~Blackpaja@167.167.46.3) (Client Quit)
[22:44:50] <sheetjs> for example, a valid FEN string can have 2 white kings
[22:45:07] <l__q_> i know how to parse valid PGN, but how to parse valid FEN i JavaScript?
[22:45:10] <l__q_> in*
[22:45:20] <sheetjs> again, it depends on what you mean by "valid"
[22:45:29] <sheetjs> validate_fen is verifying the string is a valid fen string
[22:45:32] <l__q_> by stockfish
[22:45:40] *** Joins: Blackpajamas (~Blackpaja@167.167.46.3)
[22:45:49] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[22:45:58] <l__q_> for chess.js is one FAN valid, but not valid for stockfish
[22:46:04] <sheetjs> is kkkkkkkk/8/8/8/8/8/8/KKKKKKKK w KQkq - 0 1 valid?
[22:46:11] <l__q_> https://stockfishchess.org/
[22:46:13] *** Joins: johtso (~johtso@user/johtso)
[22:46:16] <sheetjs> just put 8 kings for each color on the board
[22:46:28] *** Quits: Blackpajamas (~Blackpaja@167.167.46.3) (Client Quit)
[22:46:30] *** Quits: fcjsx (~fcjsx@2800:a4:800:2900:a97e:bdd1:a95b:6386) (Client Quit)
[22:47:46] <l__q_> yes id valid for stockfish
[22:48:01] <sheetjs> wait that's valid even though there are 8 white and 8 black kings?
[22:48:25] <l__q_> im check allerady on my stockfish and you FAn is valid
[22:49:41] <l__q_> you can download stockfish from officaial website and chess.js from guthub and check for your self
[22:49:48] <l__q_> I can help with CLI stoflish
[22:50:03] <sheetjs> most likely you need to devise your own heuristics
[22:50:18] <sheetjs> make some general rules, like 1 king for each side
[22:50:31] *** Joins: Blackpajamas (~Blackpaja@167.167.46.3)
[22:50:33] <sheetjs> at most 8 pawns
[22:50:50] <sheetjs> pawns + rooks <= 10, etc
[22:50:53] *** Quits: Blackpajamas (~Blackpaja@167.167.46.3) (Client Quit)
[22:51:01] <l__q_> but you dont need pawns ad all,
[22:51:19] <sheetjs> 0 <= pawns + rooks && pawns + rooks <= 10
[22:51:27] <Donitz> *chin scratch*
[22:51:31] <l__q_> you can have a valid FAN geme with only quean and two kings
[22:51:38] <Donitz> wonder if you could use css for chess validation :D
[22:51:41] <l__q_> chess is easy
[22:51:54] <sheetjs> correct l__q_ the point is you need to define a set of rules that you would test
[22:51:54] <l__q_> but why chess.js dosent work?
[22:52:00] <sheetjs> because that's not the point
[22:52:05] <l__q_> hm
[22:52:06] <l__q_> ?
[22:52:14] <sheetjs> chess.js isn't checking that the FEN maps to a valid chess game
[22:52:21] <sheetjs> it just checks that the description is valid
[22:52:27] <Donitz> what is a valid chess game
[22:52:28] <stenno> we still at this
[22:52:29] <l__q_> But im need only a valid FEN
[22:52:39] * stenno admires sheetjs 's perseverance and patience
[22:52:46] <sheetjs> it's a difficult concept
[22:52:54] <l__q_> sheetjs: https://transfer.sh/1nouMTp/Screenshot%202021-07-26%20at%2020.17.01.png
[22:53:11] <Donitz> the only chess game I would imagine is invalid is one where pieces overlap
[22:53:13] <l__q_> im im germany, this why this time
[22:53:54] <sheetjs> Donitz: using standard chess rules, it is impossible for 11 rooks to be on the board
[22:54:01] <l__q_> its you FAN, it valid for Stokfish
[22:54:03] <Donitz> why does it have to be standard rules
[22:54:08] <l__q_> stockfish*
[22:54:11] <Donitz> then you're just checking if it follows a specific ruleset
[22:54:13] <sheetjs> that's the crux of the confusion
[22:54:14] <Donitz> but that doesn't make chess valid
[22:54:23] <sheetjs> FEN is just a notation for putting chess pieces on a board
[22:54:37] <sheetjs> and validate_fen verifies the notation is correct, not that the board corresponds to a valid chess configuration
[22:54:48] <l__q_> Donitz: Stockfish is only a chess engine, you need to feet it with a valid data!
[22:54:52] <sheetjs> l__q_ is confusing the concepts
[22:55:10] <l__q_> why?
[22:55:12] <Donitz> valid data as I said would be a chess board with ANY pieces where no two pieces overlap
[22:55:26] <Donitz> if you use bitmask notiation for a chess board, that can not happen
[22:55:29] <Donitz> notation*
[22:55:35] <l__q_> you need to parse to engine only a valid data
[22:55:40] <Donitz> https://en.wikipedia.org/wiki/Bitboard
[22:55:56] <l__q_> engine dosent check if you data is valid
[22:56:08] <sheetjs> stenno: i'd much rather deal with technical problems than the support email i'm currently writing
[22:56:16] <sheetjs> had to explain to a customer why we don't support dependabot
[22:56:37] <sheetjs> "We've looked into this when dependabot finally made the private registry feature available to everyone.  Unfortunately there's no simple way to feed a changelog to dependabot without giving dependabot (and Github/Microsoft) access to the module."
[22:56:45] <sheetjs> "Normally giving dependabot access wouldn't be an issue, but with the ongoing Copilot drama and Microsoft's disregard of software licenses as it applies to code submitted to their service, we would prefer not to give them anything more than absolutely necessary "
[22:56:51] <l__q_> i need ONLY check if FEN is valid :(
[22:57:05] <l__q_> and then send to CLI
[22:57:33] <l__q_> chess.js dossent work probeltly
[22:57:37] <hassoon> i suggest you look up a more interesting project, than worrying about a buggy chess game
[22:57:46] <hassoon> rather than *
[22:57:51] *** Joins: Blackpajamas (~Blackpaja@167.167.46.3)
[22:57:59] <Donitz> https://chess.stackexchange.com/questions/1482/how-do-you-know-when-a-fen-position-is-legal
[22:58:03] <Donitz> so check the rules manually
[22:58:06] <l__q_> U dont undesrstand
[22:58:22] <l__q_> hmm
[22:58:23] <l__q_> ]im check
[22:58:26] <l__q_> thanks
[22:58:27] <systemfault> sheetjs: Is copilot even released?
[22:58:46] <sheetjs> it's still in beta for some external users, but it doesn't really matter at this point
[22:59:10] <sheetjs> microsoft showed their hand when it comes to software hosted on github / npm / accessible by dependabot
[22:59:32] *** Quits: Blackpajamas (~Blackpaja@167.167.46.3) (Client Quit)
[22:59:37] <ljharb> github already has full access to everything
[22:59:48] <sheetjs> except for stuff not hosted on github / npm
[22:59:50] <ljharb> dependabot sucks but letting it do stuff isn't giving github/microsoft any access they don't already have
[22:59:54] <ljharb> oh, well sure
[23:00:07] <ljharb> but JS things not on npm don't matter
[23:00:22] <ljharb> and the number of things that matter that aren't on github is in the single digits
[23:00:23] <sheetjs> open source JS things not on npm
[23:00:28] <ljharb> right
[23:00:38] <ljharb> oh you're talking about like company code?
[23:00:42] <sheetjs> yeah
[23:00:46] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[23:00:50] <sheetjs> sheetjs open source is hosted on github / npm etc
[23:00:52] <ljharb> well then sure, but i wouldn't use dependabot anyways because it sucks. use renovate.
[23:00:54] <l__q_> https://chess.stackexchange.com/questions/1482/how-do-you-know-when-a-fen-position-is-legal
[23:00:59] <l__q_> thats good
[23:01:17] <l__q_> im need to write my own valide_fen() ;/
[23:01:21] <l__q_> 28
[23:01:22] *** Joins: Blackpajamas (~Blackpaja@167.167.46.3)
[23:01:24] <l__q_> w8
[23:01:44] <sheetjs> you start by parsing using chess.js, then apply each of those heuristics
[23:02:04] *** Quits: Blackpajamas (~Blackpaja@167.167.46.3) (Client Quit)
[23:02:10] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:02:12] <sheetjs> you can check if there's one white king, one black king, at most 8 pawns, etc
[23:02:17] <l__q_> sheetjs: thats was my idea, to expend a rules of chess.js
[23:02:19] <l__q_> thanks!
[23:02:40] <sheetjs> now re-read the last hour of chat
[23:02:52] <l__q_> sheetjs: hmm
[23:02:57] <l__q_> we have problem
[23:03:22] <l__q_> we need to check a real FEN
[23:03:31] <Donitz> I pasted a topic which covered most caes
[23:03:36] <Donitz> cases*
[23:03:47] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04) (Quit: Leaving)
[23:04:03] <l__q_> becouse in our check is always TRUE, but for stockfish is false
[23:04:29] <l__q_> howerwer is a valid FAN, bit not for stockfish
[23:04:56] <l__q_> we need to provide a REAL and VALID FAN to stockfish
[23:05:15] <l__q_> position fan <fan>
[23:05:37] <l__q_> this make a engines so hard
[23:05:53] <sheetjs> i wonder
[23:05:56] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:459b:85f2:34dc:73d6) (Ping timeout: 268 seconds)
[23:06:06] <Donitz> not that hard
[23:06:06] <sheetjs> l__q_: would it suffice to check if the parser gives you back the same result?
[23:06:11] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:06:12] <Donitz> each rule is seperate and easy to check
[23:06:16] <sheetjs> new Chess(fen_string).fen() == fen_string
[23:06:27] <sheetjs> so your validate_fen would be
[23:06:50] <Donitz> Chess isn't a good
[23:06:52] <Donitz> Board
[23:07:01] <Donitz> isn't a good noun*
[23:07:47] <sheetjs> function my_validate_fen(fen_string) { try { if(!(new Chess().validate(fen_string))) return false; var c = new Chess(fen_string); return c.fen() == fen_string; } catch(e) { return false; } }
[23:07:56] <l__q_> wait wait
[23:08:22] <sheetjs> the 8 king example
[23:08:25] <ljharb> ahh so many omitted curlies and snakes
[23:08:30] <sheetjs> new Chess("kkkkkkkk/8/8/8/8/8/8/KKKKKKKK w KQkq - 0 1").fen()
[23:08:39] <sheetjs> that is 'k7/8/8/8/8/8/8/K7 w KQkq - 0 1'
[23:08:51] <sheetjs> which means chess.js is silently skipping the kings
[23:09:01] <sheetjs> now that's probably a good issue to raise
[23:13:45] *** Joins: fef (~thedawn@user/thedawn)
[23:14:07] <l__q_> you my_validate_fen() always return false if a FEn is VALID
[23:14:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Quit: Lost terminal)
[23:14:50] <l__q_> function my_validate_fen(fen_string) {
[23:14:50] <l__q_>   try {
[23:14:52] <l__q_>     if (!new Chess().validate(fen_string)) return false;
[23:14:57] <l__q_>     var c = new Chess(fen_string);
[23:14:57] <l__q_>     return c.fen() == fen_string;
[23:14:58] <l__q_>   } catch (e) {
[23:15:00] <l__q_>     return false;
[23:15:02] <l__q_>   }
[23:15:04] <l__q_> }
[23:15:17] <ljharb> l__q_: please never paste multiple lines into irc
[23:15:25] <l__q_> ok, sorryu
[23:15:58] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:16:49] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[23:18:23] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:18:44] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[23:20:39] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:20:42] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Killed (lithium.libera.chat (Nickname regained by services)))
[23:20:42] *** __jmcantrell__ is now known as jmcantrell
[23:21:33] *** Joins: Blackpajamas (~Blackpaja@167.167.46.3)
[23:24:00] *** Joins: Betal (~Beta@user/betal)
[23:24:44] <sheetjs> new Chess().validate(fen_string).valid
[23:26:45] <l__q_> no
[23:26:46] <l__q_>     if (!new Chess().validate(fen_string).valid) return false;
[23:26:53] <l__q_> always return false
[23:27:10] <l__q_> on true FEN return false
[23:27:33] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:28:58] *** Joins: Bl4ckpajamas (~Blackpaja@167.167.46.2)
[23:29:00] <l__q_> sheetjs: https://jsfiddle.net/skorotkiewicz/rtco6snL/
[23:29:35] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Quit: leaving)
[23:29:37] <l__q_> sf = stockfish
[23:30:43] <l__q_> my_validate_fen() always return false, even if FAN is valid
[23:30:53] <sheetjs> https://github.com/jhlywa/chess.js/issues/289 here i raised an issue to start the conversation
[23:31:12] <sheetjs> you can't run it in jsfiddle
[23:31:32] <l__q_>  SheetJSDev commented 35 seconds ago
[23:31:42] <l__q_> are you starded this issue?
[23:31:44] <l__q_> wow
[23:32:58] <sheetjs> function my_validate_fen(fen_string) { try { if(!(new Chess().validate_fen(fen_string).valid)) return false; var c = new Chess(fen_string); return c.fen() == fen_string; } catch(e) { return false; } }
[23:33:04] *** Quits: Blackpajamas (~Blackpaja@167.167.46.3) (Ping timeout: 268 seconds)
[23:33:16] <stenno> imagine having a senior like sheetjs
[23:33:30] <sheetjs> (we're hiring ;-)
[23:33:32] <l__q_> do you play chess to?
[23:33:46] <stenno> sheetjs: :D
[23:33:50] <stenno> good advertisement
[23:34:01] <l__q_> sheetjs: whant to play with me?
[23:34:35] <l__q_> sheetjs: https://lichess.org/zgBtB7U5
[23:35:03] <l__q_> without time limit
[23:35:23] <sheetjs> nah better not to
[23:35:29] <l__q_> why?
[23:35:30] <sheetjs> gonna get sucked into chess again
[23:35:43] <l__q_> im suck to
[23:35:45] <sheetjs> what'll happen is we start playing, then 6 hours later i'll still be playing
[23:36:00] <l__q_> im not rly so good im chess, im play only for fun
[23:36:27] <l__q_> wow, nobody click on game link :3
[23:36:30] <sheetjs> https://www.lego.com/en-us/product/lego-iconic-chess-set-40174 is sitting on my table
[23:36:42] <l__q_> lego?
[23:36:46] <l__q_> logo?
[23:36:50] <sheetjs> lego chess set
[23:36:56] <l__q_> Siemens Logo?
[23:37:06] <sheetjs> its a pretty neat setup, there are chambers below the chess board to hold all of the pieces
[23:37:11] <l__q_> I have siemens logo
[23:37:20] <l__q_> but I prever raspberry pi
[23:37:38] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:6089:e257:a80f:8f73)
[23:38:14] <l__q_> becouse with siemens logo you can only program it grapflc, and your raspberry pi, you can program your GPIO as you want
[23:39:14] <l__q_> If Im com to home, my lede router sends a pupsub message to raspberrypi, and then turn light on in my room :D
[23:39:25] *** Quits: mrlc (~mo@2001-4dd7-dced-0-bc3e-8fff-87e2-27eb.ipv6dyn.netcologne.de) (Quit: Leaving)
[23:39:40] <l__q_> its simple, my phone connect to LEDE router, and send a comment
[23:39:50] <l__q_> WiFi
[23:40:23] <l__q_> im write on my blog https://skorotkiewicz.github.io/techlog/homeautomation-detect-presence-of-wifi-devices/
[23:40:38] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[23:40:53] <l__q_> Comments are my kucos.js.org :)
[23:41:05] <l__q_> my own engine
[23:41:40] <l__q_> Kucos = Kudos & Kudos
[23:41:48] <l__q_> Kucos = Comments & Kudos
[23:42:33] <GreenJello> l__q_, not the place to self promote your blog
[23:42:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[23:43:07] <l__q_> ok sorry
[23:43:52] <l__q_> on ##chess have me write "big question" on my answwer why chess.js validate true a invalid FAN
[23:43:56] <l__q_> lol
[23:44:22] <l__q_> sheetjs: we have a Big question
[23:49:37] <onosendi> sheetjs: heh, that's pretty cool.
[23:50:36] *** Quits: IsilZha (~isilzha@2a02:8070:c3c7:8c00:2e44:d4f8:a5a4:5f8f) (Quit: Konversation terminated!)
[23:51:03] *** Joins: IsilZha (~isilzha@2a02:8070:c3c7:8c00:2e44:d4f8:a5a4:5f8f)
[23:51:25] *** Joins: stenno (~stenno@user/stenno)
[23:55:51] *** Quits: l__q_ (~modinfo@user/modinfo) (Ping timeout: 276 seconds)
[23:59:04] *** Quits: yaalon (~yaalon@187.250.143.188.dsl.dyn.telnor.net) (Remote host closed the connection)
