[00:00:26] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[00:01:09] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:01:10] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:01:10] *** Joins: wroathe (~wroathe@user/wroathe)
[00:02:47] <catern> sorry for what is clearly an implementation-specific question, but: if I have a library which provides some libc symbols, and a program links against that, do they have to do anything special to make sure they get my library versions instead of the libc versions? or will it just happen automatically?
[00:04:32] <sham1> If they are dynamically linking, you can make sure that your symbol gets loaded before the actual libc symbol
[00:04:37] <sham1> LD_LIBRARY_PATH and so on
[00:04:56] <nomagno> If it statically linked, you're outta luck
[00:05:01] <nomagno> 'duplicate symbol' errors and such
[00:06:40] <catern> sham1: so if my library depends on libc, I guess that would guarantee that my symbol is never loaded first?
[00:06:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:06:59] *** Quits: WAR10CK (~WAR10CK@14.223.183.246) (Remote host closed the connection)
[00:07:23] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[00:07:25] <catern> all very tricky, tricky
[00:07:28] <sham1> No. If your library provides the symbol and it's loaded before the libc, the dynamic linker will pick it up. Meanwhile if your library depends on libc, it will load that as needed
[00:08:14] <catern> sham1: oh? I assumed that if my library depends on libc then libc will be loaded first - you're saying the linker will grab symbols from my library first, then load libc? how interesting!
[00:08:26] *** Joins: trafficjam (~trafficja@119.17.42.59)
[00:08:28] <sham1> Well the symbols are loaded lazily
[00:08:35] <sham1> It only loads the symbol when needed
[00:08:38] <catern> i see, i see
[00:08:44] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[00:08:52] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613)
[00:10:01] <sham1> (At least on Linux) So the program can do stuff with the libc all happy like, but when it encounters the function you patch, it will look through the shared libraries, notice that yours is first which has a match and loads from there. Of course for any other dynamic linking need it will also look at your library, but since it probably doesn't contain any other such symbols than the ones you're interested in, most calls it just passes you by
[00:10:35] <sham1> What is it you're doing this for anyway, if you don't mind me asking
[00:11:23] <catern> i have a wacky idea to make getenv/setenv/environ be thread-local, i.e. so you can have thread-local environment variables
[00:12:20] *** Joins: RoodRallec (~RoodRalle@p200300e0af096a00dd76ef5baea69362.dip0.t-ipconnect.de)
[00:15:14] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:15:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:15:14] *** Joins: wroathe (~wroathe@user/wroathe)
[00:18:47] *** Joins: bbju (~bbju@103.144.149.53)
[00:19:08] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[00:23:29] *** Quits: unknow (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:24:17] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[00:27:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:29:12] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[00:29:13] *** Quits: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net) (Remote host closed the connection)
[00:29:43] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[00:32:40] *** Quits: cart_man (~rynot@host-78-144-125-216.as13285.net) (Quit: Konversation terminated!)
[00:34:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:42] *** Quits: bbju (~bbju@103.144.149.53) (Quit: Client closed)
[00:35:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:35:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:35:51] *** Joins: wroathe (~wroathe@user/wroathe)
[00:37:25] *** Joins: Betal (~Betal@user/betal)
[00:40:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:50:14] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.155)
[00:50:19] *** Quits: u1_ (~u1@95.54.110.156) (Quit: Leaving)
[00:51:01] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:fd9c:24e7:5ea:6f47) (Ping timeout: 240 seconds)
[00:51:51] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:53:05] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:58c5:6207:2988:1b06)
[01:00:24] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[01:02:44] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[01:04:40] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:05:22] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[01:05:39] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613) (Read error: Connection reset by peer)
[01:05:48] *** Quits: The_Jag (~The_Jag@host-79-52-45-220.retail.telecomitalia.it) (Quit: The_Jag)
[01:07:10] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613)
[01:08:20] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:08:37] *** Quits: mahmutov (~mahmutov@5.176.45.237) (Ping timeout: 240 seconds)
[01:10:00] *** Quits: magla (~gelignite@55d4d852.access.ecotel.net) (Quit: Stay safe!)
[01:10:33] *** Quits: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:10:49] *** Joins: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de)
[01:12:43] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[01:15:36] *** ouestbillie is now known as vanDamme
[01:16:28] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[01:16:47] *** vanDamme is now known as ouestbillie
[01:17:46] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[01:18:36] <owensjrw> I am trying to set up a ring buffer. The requirements are to extract the structures from the unit test c file and build the ring buffer. In the unit test there is reference to buffer_value_t values[] and circular_buffer_t *buffer in both the write and read functions. With that I thought to build two typedef one of an array the other of a struct. Is this correct to put the array in the struct?
[01:18:49] <owensjrw> https://bpa.st/P3IA
[01:20:55] *** Quits: zer0bitz (~zer0bitz@196.244.192.60) (Read error: Connection reset by peer)
[01:21:11] <fizzie> You can't have an array of unspecified size in a struct, except as a special thing called a flexible array member, in which case it would have to be the last member of the structure.
[01:21:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:22:45] <earnest> (Or you use GNU's VLAIS *eugh*)
[01:23:06] <owensjrw> Should I use a void pointer?
[01:23:48] <fizzie> I didn't get enough of the context to guess at what "they" might want. But I imagine `buffer_value_t` might be expected to be the type of a _single_ value, in which case you'd probably want a `buffer_value_t *ring;` to hold the data, if you don't want it to be fixed-size.
[01:24:09] <fizzie> (Fixed-and-compile-time-constant size, that is.)
[01:25:58] <kurahaupo> owensjrw: void* is for when you're creating a generic data structure to hold types you know nothing about, and should almost always be paired with a size_t.
[01:26:07] *** Quits: palindrome (~jhonny@93.107.6.121) (Ping timeout: 256 seconds)
[01:26:35] <owensjrw> how do I typedef that before putting it in the struct? typedef uint8_t* buffer_value_t then in the struct buffer_value_t* ring?
[01:27:29] <owensjrw> then when i malloc the size of the ring it will be x number of uint8_t memory locations. Is that correct?
[01:27:33] <fizzie> No, just `typedef uint8_t buffer_value_t;`
[01:27:53] <kurahaupo> owensjrw: you provide your own type for testing and try it with multiple types. Then when the examiner tries it with their type it should just work
[01:28:42] <owensjrw> Thank you both. Very helpful.
[01:28:46] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:28:58] <owensjrw> As always you all are rock stars.
[01:28:59] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[01:30:46] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:30:48] <kurahaupo> owensjrw: Footnote, the normal spacing for a pointer declaration is different between C & C++. In C++ you write « typename* varname; » but in C we still write « typename *varname; »
[01:31:13] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[01:32:06] <kurahaupo> The reason is that « int *a, b; » is less misleading than « int* a, b; »
[01:32:07] *** Joins: inlight (~inlight@157.42.219.134)
[01:32:07] *** Quits: inlight (~inlight@157.42.219.134) (Changing host)
[01:32:07] *** Joins: inlight (~inlight@user/inlight)
[01:33:02] <owensjrw> Thank you kurahaupo.
[01:36:50] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Quit: leaving)
[01:37:20] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[01:44:57] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 240 seconds)
[01:52:08] *** Joins: PortableDave (~portabled@27-33-20-59.tpgi.com.au)
[01:55:39] *** Joins: loganlee (~Thunderbi@user/loganlee)
[01:59:33] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[02:01:48] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:05:18] *** Joins: kish` (~aqua@user/aqua)
[02:11:58] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:14:39] <john99> ummm, assert/abort signal kill all threads too?
[02:14:55] <megaTherion> normally, I think so
[02:14:58] <megaTherion> but I doubt its a C business
[02:16:14] *** Joins: diiirt3 (~diiirt@user/diiirt)
[02:17:01] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Ping timeout: 245 seconds)
[02:17:22] *** Quits: diiirt (~diiirt@user/diiirt) (Remote host closed the connection)
[02:17:22] *** diiirt3 is now known as diiirt
[02:18:15] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:19:46] <john99> probably not, is more linux related
[02:20:57] *** Joins: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net)
[02:21:33] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[02:21:52] *** Joins: gproto23 (~gproto23@user/gproto23)
[02:23:50] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[02:25:01] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[02:26:51] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[02:28:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:28:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:28:51] *** Joins: wroathe (~wroathe@user/wroathe)
[02:29:26] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 260 seconds)
[02:29:33] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:29:58] *** Joins: pucara (~i@181.91.29.65)
[02:31:08] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:32:52] *** Quits: pizdets (~pizdets@183.182.110.139) (Ping timeout: 250 seconds)
[02:33:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[02:33:17] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[02:33:38] *** Joins: pizdets (~pizdets@183.182.115.6)
[02:34:23] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[02:37:20] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:37:25] *** Joins: wenxin (~wenxin@user/vim-fans/x-3284168)
[02:37:56] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[02:40:10] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:40:10] *** Quits: alch (~alch@pa-18-186-216.service.infuturo.it) (Read error: Connection reset by peer)
[02:40:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:40:57] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 240 seconds)
[02:43:05] *** Joins: Alhazred (~Alhazred@athedsl-4387600.home.otenet.gr)
[02:44:33] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[02:44:34] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[02:44:40] *** Joins: alch (~alch@151.82.138.96)
[02:46:23] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[02:49:25] *** Quits: Alhazred (~Alhazred@athedsl-4387600.home.otenet.gr) (Ping timeout: 256 seconds)
[02:49:46] <munkis> I feel like this is the wrong way to do this, I have the line switch((buffer[0]<<CHAR_BIT)+buffer[1]) in my code.
[02:51:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:57:20] <dragonmaster> what are you trying to do?
[02:58:53] <munkis> match a user input 2 char language code
[02:59:03] <dragonmaster> buffer is array of char?
[02:59:25] <munkis> yes
[02:59:28] <dragonmaster> If so, I think you're just adding zero to buffer[1]
[02:59:48] <munkis> oh yeah, I cast it to iint, and forgot to write that here
[03:00:22] *** Joins: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[03:00:43] <munkis> the "correct" way is probably a series of of if !strcmp() s
[03:02:36] <mcf> buffer[0] will get promoted to int automatically by integer promotions. but technically you might not have sizeof(int) >= 2
[03:04:22] <munkis> so it's not portable?
[03:05:20] <mcf> also be careful about if buffer[0] is negative, since then the shift is undefined
[03:06:35] *** Quits: Narrat (~omnius@p200300df5f0aab1406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:06:51] *** Quits: Akuli (~Akuli@213.216.210.130) (Quit: Akuli)
[03:06:57] *** Quits: ADHD (~xxx@user/ADHD) (Ping timeout: 240 seconds)
[03:07:11] *** Joins: ADHD (~xxx@bison.sh3ll.ru)
[03:07:54] <munkis> thanks
[03:07:55] <fizzie> If you want to be _really_ portable, there's no guarantee there's any type that has a width of 2*CHAR_BIT (assuming CHAR_BIT > 32), so there's no way to combine them together for the switch.
[03:08:52] <fizzie> If you only need it to be _reasonably_ portable, it's probably fine. Though it might be nice to use an unsigned type rather than `int`. And usually that sort of thing is done with | rather than +, though the result's the same.
[03:08:57] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:13:21] *** Quits: PortableDave (~portabled@27-33-20-59.tpgi.com.au) (Ping timeout: 256 seconds)
[03:13:27] *** Quits: candide (~pbot3@about/c/bot/candide) (Quit: Departure requested.)
[03:13:34] *** Quits: malina (~malina@user/malina) (Quit:  off to space. A-wing duty!)
[03:13:45] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:16:19] *** Joins: candide (~pbot3@about/c/bot/candide)
[03:20:28] *** Quits: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net) (Quit: Client closed)
[03:24:27] *** Joins: PortableDave (~portabled@27-33-20-59.tpgi.com.au)
[03:26:23] *** Joins: ckdCreations (~ckdCreati@2607:fb90:b27c:f7f8:c9bd:5a42:d7a8:23d8)
[03:31:13] *** Quits: RoodRallec (~RoodRalle@p200300e0af096a00dd76ef5baea69362.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[03:34:21] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[03:37:17] *** Quits: wenxin (~wenxin@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[03:39:45] *** Quits: Fl0pFl1p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 250 seconds)
[03:42:11] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f)
[03:42:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:42:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[03:43:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:43:55] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[03:46:41] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:49:37] *** Quits: PortableDave (~portabled@27-33-20-59.tpgi.com.au) (Ping timeout: 240 seconds)
[03:53:57] *** Quits: ckdCreations (~ckdCreati@2607:fb90:b27c:f7f8:c9bd:5a42:d7a8:23d8) (Ping timeout: 240 seconds)
[03:59:01] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[04:02:39] *** Quits: ADHD (~xxx@bison.sh3ll.ru) (Ping timeout: 256 seconds)
[04:02:53] *** Joins: ADHD (~xxx@bison.sh3ll.ru)
[04:05:59] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:06:29] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:08:01] *** Joins: Wulf (~Wulf@user/wulf)
[04:08:13] *** Quits: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:11:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:12:17] *** Quits: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[04:12:26] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:12:26] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:12:26] *** Joins: wroathe (~wroathe@user/wroathe)
[04:14:22] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[04:16:42] *** Quits: esselfe (~steph@user/esselfe) (Read error: Connection reset by peer)
[04:20:07] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[04:20:16] *** Joins: esselfe (~steph@user/esselfe)
[04:21:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:25:12] <loganlee> ,printf("%s","hi!");
[04:25:41] <loganlee> i forgot how to use bot
[04:26:38] *** Joins: rgrinberg (~textual@177.246.218.103)
[04:26:40] <fizzie> ,cc puts("like this");
[04:26:43] <candide> fizzie: like this
[04:27:11] <loganlee> ,cc printf("%s","hi!");
[04:27:14] <candide> loganlee: hi!
[04:31:15] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[04:33:49] *** Quits: random-nick (~random-ni@87.116.180.98) (Ping timeout: 256 seconds)
[04:35:48] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:37:36] *** Joins: ferdna (~ferdna@user/ferdna)
[04:39:21] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[04:40:21] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f) (Quit: Quit)
[04:44:40] *** Quits: pucara (~i@181.91.29.65) (Quit: Lost terminal)
[04:46:08] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:46:23] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:47:11] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[04:47:32] *** Joins: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au)
[04:47:47] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[04:47:57] *** Joins: kish` (~aqua@user/aqua)
[04:48:13] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Ping timeout: 250 seconds)
[04:48:15] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[04:48:39] *** Joins: kish` (~aqua@user/aqua)
[04:50:51] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[04:51:07] *** Joins: malloy (~jimery@116.30.220.175)
[04:54:02] *** Quits: towel (~towel@user/towel) (Ping timeout: 240 seconds)
[04:54:25] *** Joins: towel (~towel@user/towel)
[04:56:45] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[04:58:37] *** Joins: Everything (~Everythin@37.115.210.35)
[05:00:46] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Ping timeout: 245 seconds)
[05:03:03] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[05:03:17] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[05:06:17] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[05:07:19] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[05:07:20] *** Quits: acerbic (~acerbic@cs-xdata-50-86-52-59.cspire.com) (Read error: Connection reset by peer)
[05:08:02] *** Joins: gproto23 (~gproto23@user/gproto23)
[05:13:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:13:14] *** Joins: Satin (uid193953@user/Seten)
[05:15:22] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:15:44] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:17:28] *** Joins: malloy (~jimery@116.30.220.175)
[05:18:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[05:20:07] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[05:21:33] *** Joins: gco (~gco@2601:647:4c80:2424:418a:abd4:7537:fe66)
[05:22:02] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[05:22:19] *** Joins: vysn (~vysn@user/vysn)
[05:25:43] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Changing host)
[05:25:43] *** Joins: highrate (~presonic@user/highrate)
[05:27:21] *** Quits: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net) (Excess Flood)
[05:28:35] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:28:46] *** Joins: nitrix (~nitrix@user/nitrix)
[05:30:07] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[05:31:29] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[05:36:11] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[05:39:49] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[05:41:37] *** Joins: PortableDave (~portabled@27-33-20-59.tpgi.com.au)
[05:42:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:43:25] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:43:57] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:48:03] *** Joins: Burgundy (~yomon@5-12-10-45.residential.rdsnet.ro)
[05:50:07] *** Joins: aac (~AAC@2001:8a0:6cc5:7e01:683c:c98c:52fb:6900)
[05:50:16] <aac> is it possible to load a function to a determined address?
[05:50:58] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:51:37] *** Quits: PortableDave (~portabled@27-33-20-59.tpgi.com.au) (Ping timeout: 240 seconds)
[05:53:04] *** Joins: aerysh_ (~aerysh@2a0a:b640:1:58::a05d)
[05:54:17] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[05:56:08] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[05:57:50] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:59:19] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: leaving)
[05:59:49] *** Quits: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[05:59:50] *** Joins: malloy (~jimery@116.30.220.175)
[05:59:58] <rsjw> aac: maybe mmap with MAP_FIXED|MAP_ANON. you usually don't need to do this though. what are you trying to do?
[06:00:20] <aac> i need to set eip to a custom function , but i need the custom funciton address
[06:00:39] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[06:00:44] <aac> eip= function address
[06:00:59] <rsjw> what's a "custom function"?
[06:01:18] <aac> all functions.....
[06:01:20] <rsjw> like a regular function, but /you/ wrote it?
[06:01:22] <aac> yeah
[06:01:24] <aac> i wrote it
[06:01:29] <aac> but still can be anything
[06:02:30] <aac> oh man this involves linker
[06:02:32] <aac> :/
[06:02:38] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f)
[06:02:39] <rsjw> are you doing inline assembly?
[06:02:42] <aac> yeah
[06:02:48] <rsjw> try #asm
[06:02:51] <aac> k thks
[06:02:57] <caze> ,xy
[06:02:58] <candide> The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that, either. You ask about Y, which is a strange thing to want to do. Just ask about X.
[06:04:37] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[06:06:16] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[06:06:59] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::2)
[06:07:25] *** Quits: aerysh_ (~aerysh@2a0a:b640:1:58::a05d) (Ping timeout: 240 seconds)
[06:07:38] *** Joins: nitrix (~nitrix@user/nitrix)
[06:08:00] <aac> sorry for the noob question...but.....say i have a libc function not loaded. I want to access it..supossing it uses the GOT, it isnt loaded, it load, and how does it give access to other programs?
[06:08:02] <aac> since its not loaded
[06:08:07] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[06:08:29] *** Joins: aerysh_ (~aerysh@2a0a:b640:1:58::a05d)
[06:08:29] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[06:08:30] *** Joins: PortableDave (~portabled@27-33-20-59.tpgi.com.au)
[06:08:48] <aac> or ...if it is loaded...its on a got...but the got keeps changing, or the function is on prederminetd address and processes, use a pointer to that
[06:09:25] <aac> like randomGotAddress -> RealLibcAddress
[06:11:45] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:12:06] *** Quits: john99 (~john99@199.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[06:14:34] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:15:35] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:18:03] *** Joins: evocatus (~evocatus@62.182.77.224)
[06:19:30] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (Ping timeout: 260 seconds)
[06:21:29] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[06:21:55] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 256 seconds)
[06:22:55] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[06:24:19] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 256 seconds)
[06:25:43] *** Joins: DepthDeluxe (~DepthDelu@2601:647:4700:1e3c:f8cc:9720:6794:bfc7)
[06:26:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:27:24] *** Joins: earnest (~earnest@user/earnestly)
[06:27:55] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Quit: Client limit exceeded: 20000)
[06:31:24] *** Joins: Pentode (~Pentode@mobile-166-170-34-96.mycingular.net)
[06:32:15] *** Quits: weijunli (~weijunli@mob-31-158-68-82.net.vodafone.it) (Ping timeout: 256 seconds)
[06:32:57] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:35:25] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:39:57] *** Quits: alch (~alch@151.82.138.96) (Read error: Connection reset by peer)
[06:40:20] *** Joins: fe23 (~fe23@2409:8a34:464:4990:21c2:2adc:36be:e732)
[06:43:59] *** Joins: alch (~alch@151.82.177.67)
[06:45:59] *** Quits: aerysh_ (~aerysh@2a0a:b640:1:58::a05d) (Quit: Konversation terminated!)
[06:48:02] *** Quits: rgrinberg (~textual@177.246.218.103) (Read error: Connection reset by peer)
[06:48:26] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[06:48:47] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:48:53] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[06:49:38] *** Joins: rgrinberg (~textual@177.246.216.115)
[06:49:56] *** Quits: gco (~gco@2601:647:4c80:2424:418a:abd4:7537:fe66) (Quit: ZZZzzz…)
[06:50:30] *** lukedashjr is now known as luke-jr
[06:51:02] *** Quits: kilobyte_ch (~kbch@77.109.171.167) (Ping timeout: 240 seconds)
[06:51:55] *** Joins: soapsudsxx (~soapsudsx@209.221.40.151)
[06:52:41] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:57:46] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[06:58:59] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[06:59:11] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[06:59:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:59:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:59:22] *** Joins: wroathe (~wroathe@user/wroathe)
[06:59:45] *** Joins: eelstrebor_ (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:03:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:04:11] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:04:46] *** Joins: kilobyte_ch (~kbch@77.109.171.167)
[07:06:26] <loganlee> ,cc char* greet="hello world"; char* *ptr=&greet; puts(*ptr);
[07:06:28] <candide> loganlee: hello world
[07:06:41] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[07:08:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:10:09] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[07:13:00] *** Joins: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi)
[07:18:03] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[07:18:07] *** Quits: PortableDave (~portabled@27-33-20-59.tpgi.com.au) (Quit: WeeChat 3.3)
[07:27:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[07:31:37] *** Quits: eelstrebor_ (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 240 seconds)
[07:35:07] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-b8ac-26e7-b3fc-05ab.res6.spectrum.com) (Ping timeout: 268 seconds)
[07:35:24] <fizzie> There's people who'd do `char **ptr`, there's people who'd do `char** ptr`, and I've even seen a few who'd do `char ** ptr`, but that's the first `char* *ptr` I've seen.
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:49] *** Joins: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:37:55] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:39:05] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[07:40:12] <loganlee> fizzie: they mean the same thing
[07:40:38] *** Quits: Brainium (~brainium@user/brainium) (Quit: -a- IRC for Android 2.1.59)
[07:41:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:41:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:41:14] *** Joins: wroathe (~wroathe@user/wroathe)
[07:41:36] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:41:50] *** Joins: Darkcoal (~user@167.86.150.114)
[07:42:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:43:31] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:44:37] *** Quits: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[07:46:43] *** Quits: evocatus (~evocatus@62.182.77.224) (Quit: Leaving)
[07:48:57] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 240 seconds)
[07:54:51] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[07:55:05] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:56:10] *** Quits: moog (~moog@107.126.53.180) (Read error: Connection reset by peer)
[07:56:23] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[08:00:20] *** Joins: hinata (~hinata@2409:4042:2188:4e77:b804:803b:a72f:4008)
[08:00:53] *** Joins: smeso (~smeso@user/smeso)
[08:02:52] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[08:04:21] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[08:12:19] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[08:12:46] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[08:18:25] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[08:19:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[08:20:07] *** lukedashjr is now known as luke-jr
[08:22:48] *** Quits: DepthDeluxe (~DepthDelu@2601:647:4700:1e3c:f8cc:9720:6794:bfc7) (Read error: Connection reset by peer)
[08:22:53] *** Joins: constxd (~brad@142.134.38.68)
[08:23:19] *** Joins: Matt|home (~matt@adsl-74-233-58-81.mia.bellsouth.net)
[08:24:39] <nicode> fizzie, I'm just now learning about pointers and understand what one asterisk does; what does two asterisks **do? Or what is it called when you do that?
[08:24:45] *** Joins: seninha (~seninha@user/seninha)
[08:26:51] <dave0> nicode: that's a pointer to a pointer... same idea as for example pointer-to-int, except it's a pointer to a variable that is a pointer-to-int
[08:27:44] <dave0> nicode: you might see code like     int var; foo(&var);    where foo modifies var's value (via dereferencing the poiner with *)
[08:28:21] <dave0> nicode: if you instead had   int *var; foo(&var);    now foo can modify var, but var is also a pointer
[08:29:27] <nicode> dave0 huh, I'm going to give that a try, but what about: int* *var;
[08:29:31] <dave0> passing a pointer to pointer comes up if you malloc memory inside a function, but you want to have the pointer in the caller
[08:29:42] <dave0> nicode: same idea.. it's recursive
[08:30:19] <nicode> dave0: I think I need to try that because I'm not quite getting it. Thanks.
[08:30:46] <dave0> it's rare to see more than 2 stars, but not unheard of
[08:31:23] <dave0> nicode: there's an important special case... you can simulate an array using pointers and pointer arithmetic
[08:31:59] <nicode> Why would you want to simulate an array rather than just using an array?
[08:32:06] <dave0> nicode: note the declaration of main..  int main(int argc, char **argv);   here is 2 stars, but it's used o simulate an array of strings
[08:32:28] <nicode> Ah yes, that's a good example dave0.
[08:32:47] <dave0> nicode: when you malloc memory, c treats it as a pointer, not a proper array
[08:32:47] <trafficjam> when should i use short, long, long long and long double?
[08:33:12] <dave0> trafficjam: when the range of numbers fits into that size
[08:33:44] <trafficjam> ok, and what about long and long long? both are 8 bytes on my system, which should i use and when?
[08:34:11] <nicode> dave0: I'm still trying to wrap my mind around malloc and why you use it. I've been playing w/ the alloc in K&R - C programming which is pretty rudimentary I gather.
[08:34:45] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 276 seconds)
[08:34:51] <dave0> trafficjam: long if you need -2**31 .. +2**31  .. long long if you need -2**63 .. 2**63
[08:35:08] *** Joins: teepee (~teepee@openscad/teepee)
[08:35:17] *** Quits: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi) (Ping timeout: 240 seconds)
[08:35:27] <dave0> trafficjam: on linux/amd64, long is 8 byes... on windows, long is 4 bytes
[08:35:48] <dave0> nicode: you use malloc if you don't know the size of something at compile time
[08:35:54] <trafficjam> dave0: so on linux they're the same?
[08:36:06] <dave0> trafficjam: yes
[08:36:23] <dave0> trafficjam: but c only guarantees 2**32 for long and 2**64 for long long
[08:36:25] <nicode> dave0: you mean like loading a wav or mp3 file into memory?
[08:36:34] <nicode> where you don't know what size it will be...
[08:36:43] <dave0> nicode: yep that's a fair example
[08:37:05] <trafficjam> dave0: i don't plan on writing code for windows systems but it's probably a good habit to have regardless
[08:37:07] <trafficjam> thanks
[08:37:32] <dave0> trafficjam: no worries
[08:38:23] <dave0> nicode: sometimes if you get input from the user you don't know how much they will type
[08:39:23] <nicode> dave0, like a chat client?
[08:39:23] <trafficjam> also, does my compiler not throw an error for the code `unsigned int x = -10`?
[08:39:32] <dave0> nicode: if you know the size in advance, it's easier to declare an array, than to fuss with malloc/free
[08:39:35] <trafficjam> *why does
[08:39:46] <nicode> dave0: right.
[08:40:14] <nicode> dave0: use it when you need it, avoid it when you don't. That sort of thing?
[08:41:01] <dave0> nicode: yeah it's well known that managing memory by hand is error prone
[08:41:54] *** Joins: gco (~gco@2601:647:4c80:2424:418a:abd4:7537:fe66)
[08:42:14] <dave0> trafficjam: the rule is that when you convert a number to unsigned, you add or subtract the maximum value of unsigned type, until the value is in the range 0...maxmimum value
[08:42:57] <dave0> trafficjam: if you were to convert -10 to an unsigned int, assuming unsigned int is 32 bits, you add 2**32 to -10 and get whatever that is
[08:43:33] <dave0> ,cc printf("%d ", 0x100000000 - 10);
[08:43:36] <candide> dave0: [warning: format '%d' expects argument of type 'i​nt', but argument 2 has type 'long i​nt' [-Wformat=]] -10
[08:43:42] <dave0> whoops
[08:43:46] <dave0> ,cc printf("%u ", 0x100000000 - 10);
[08:43:49] <candide> dave0: [warning: format '%u' expects argument of type 'unsigned i​nt', but argument 2 has type 'long i​nt' [-Wformat=]] 4294967286
[08:44:07] <trafficjam> dave0: ah i was using %d formatting instead of %u, which shows just the negative value
[08:44:14] *** Joins: Mentor (~Ionut@92.86.217.127)
[08:44:38] <dave0> trafficjam: ah yes your compiler might complain about that, depending on the warnings
[08:44:54] <trafficjam> i use cc, which didn't give me any warnings
[08:44:57] <dave0> ,cc unsigned int a = -10; printf("%u ", a); printf("%d ", a);
[08:45:00] <candide> dave0: 4294967286 -10
[08:45:07] <dave0> rbot doesn't complain either
[08:45:27] <trafficjam> should the main compilers complain about this?
[08:45:29] <dave0> trafficjam: i guess it's up to you to use the right option
[08:45:36] <trafficjam> (cc and gcc are the main compilers im guessing?)
[08:45:44] <dave0> trafficjam: they probably don't /have/ to
[08:46:15] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[08:46:27] <trafficjam> ah ok, thanks
[08:46:36] <dave0> ,cc -Wformat unsigned int a = -10; printf("%u ", a); printf("%d ", a);
[08:46:38] <candide> dave0: 4294967286 -10
[08:46:47] <dave0> i dunno someone will know what switch to use
[08:47:16] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[08:48:44] <nicode> dave0: ok, so you can write it "int main(int argc, char* *argv)" or "int main(int argc char **argv)" and it compiles to the same thing, right?
[08:49:09] *** Quits: zwrr (~zwr@2804:d45:b966:fb00:1f1f:72e7:c7dc:fde0) (Ping timeout: 250 seconds)
[08:49:13] <dave0> nicode: yep
[08:49:21] *** Joins: malloy (~jimery@116.30.220.175)
[08:49:56] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community @ https://indiedevs.net/)
[08:49:57] *** Quits: hinata (~hinata@2409:4042:2188:4e77:b804:803b:a72f:4008) (Ping timeout: 240 seconds)
[08:50:00] <dave0> whitespace doesn't matter except to separate tokens, maybe something something preprocessor too but i forget
[08:50:49] *** Joins: zwr (~zwr@2804:d45:b966:fb00:1d28:97e7:e951:1b26)
[08:51:05] <dave0> i believe the technical term is "free-form"
[08:51:05] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[08:51:06] <nicode> dave0: and to continue that logic, when you run a c app, the arguments passed are stored at an address (wherever argv points), right?
[08:51:21] <dave0> nicode: yes
[08:51:39] <trafficjam> dave0: does the compiler automatically assign signed / unsigned based on how a variable is instantiated?
[08:51:47] <dave0> nicode: it's up to the OS to do that, but to a c program, you get an array of strings
[08:52:08] <trafficjam> e.g. if i do `int x = 10` will the compiler assign a type `signed int`?
[08:52:09] <nicode> and we don't know how many arguments there will be, that's why argv is a pointer, not an array, right?
[08:52:20] <dave0> trafficjam: sorry i don't know the rules for that... we need fizzie, he's the c standard guy
[08:52:29] <trafficjam> ok thanks
[08:52:54] <dave0> nicode: yes
[08:53:41] <nicode> dave0: kk, I think I'm getting it, thanks :)
[08:55:36] <nicode> "char **argv" is just a standard (or more typical) way to write it then, right? i.e. that's how they write it in K&R's C programming.
[08:57:08] <dave0> nicode: http://www.c-faq.com/ansi/maindecl.html
[08:57:09] <trafficjam> dave0: is the c source code available somewhere?
[08:57:33] <dave0> trafficjam: eh?
[08:57:48] <trafficjam> the source code for the c programming language
[08:57:49] <dave0> trafficjam: do you mean the c standard? there's a link in the topic
[08:58:13] <dave0> trafficjam: it's a specification in english
[08:58:35] <trafficjam> is there no central repository on github or something for c?
[08:58:59] <dave0> not that i know of
[08:59:03] <dave0> there's a link in the topic
[08:59:18] <dave0> trafficjam: c is not specified in c
[08:59:29] <pony> trafficjam: C has implementations
[08:59:43] <dave0> if you mean compilers, yes there are c compilers written in c
[08:59:46] <pony> I wouldn't worry about reading their source code, either. it won't teach you C.
[08:59:48] <nicode> trafficjam: wouldn't the "source" of C be a compiler, like gcc?
[09:00:18] <nicode> or dave0 ^^^
[09:00:27] <trafficjam> ah ok yeah that makes sense
[09:00:37] <trafficjam> which compiler should i look at?
[09:00:40] <pony> reading the source code of a compiler to learn C is a bad idea
[09:00:48] <trafficjam> it is?
[09:00:52] <pony> yes
[09:00:53] <nicode> trafficjam:  don't ask me, I'm just learning the language.
[09:01:03] <pony> read a tutorial book instead
[09:02:07] *** Quits: rgrinberg (~textual@177.246.216.115) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:02:12] <nicode> pony: is K&R's C programming still a good go to for that?
[09:02:24] <pony> yeah
[09:02:33] <pony> if it's the 2nd edition :p
[09:02:48] <pony> I need to reread it
[09:02:57] <pony> and then read Effective C
[09:03:16] <nicode> yeah, that's what I have, I also have some "practical C programming" book but so far I'm much preferring K&R
[09:03:38] <nicode> do you recommend effective C as a second book?
[09:03:46] <pony> I don't know, haven't read it, some here do
[09:03:55] <pony> I intend to read it anyways
[09:03:57] <nicode> I see.
[09:04:11] <trafficjam> damn gcc is 15 million LOC
[09:04:29] <hanzo> that doesnt sound right
[09:04:35] <trafficjam> oh but it's for many different languages
[09:04:45] <pony> trafficjam: yeah, and you won't know when what it's doing is undefined or implementation defined behaviour either. so looking at the code and saying C does this is the wrong way to find out
[09:04:52] *** Joins: hinata (~hinata@157.33.34.200)
[09:15:02] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 268 seconds)
[09:15:57] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:17:26] <aac> can we have *** pointer?
[09:17:47] <aac> like char*** ptr ;) ?
[09:18:00] <aac> well..wouldnt that be **(*)
[09:19:28] <aac> btw, can i compile without stack prologue or epilogue?
[09:21:05] <aac> stack=functio
[09:22:58] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1)
[09:23:40] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:24:46] <dave0> aac: -fomit-frame-pointer
[09:24:54] <aac> k thks
[09:25:12] <dave0> afaik that is default for -O2
[09:27:34] <dave0> you can have as many stars as you like, but more than 2 or 3 is rare
[09:30:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[09:30:31] *** Joins: m4v (~znc@ubuntu/member/m4v)
[09:30:37] *** Quits: etchi (~etchi@195.198.128.15) (Quit: Leaving)
[09:31:22] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 2.8)
[09:32:57] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:33:17] <nicode> ugh, why haven't I been using gdb all along?!?
[09:33:23] *** Joins: aqua (~aqua@user/aqua)
[09:33:42] *** Quits: kish` (~aqua@user/aqua) (Killed (NickServ (GHOST command used by aqua)))
[09:33:48] *** aqua is now known as kish`
[09:35:43] *** Quits: perro_ (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 256 seconds)
[09:37:14] <nicode> FYI - I just decided I'd look up how to step through a C program and found that I can do it w/ gdb (https://stackoverflow.com/questions/19156886/how-to-execute-step-by-step-in-c-language)
[09:37:17] <skeels> In sys/queue.h, does STAILQ_FIRST() return the element at the head or the tail? The man page says, "STAILQ_FIRST() returns the first item on the tail queue or NULL if the tail queue is empty."
[09:37:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:38:25] *** Quits: gco (~gco@2601:647:4c80:2424:418a:abd4:7537:fe66) (Quit: ZZZzzz…)
[09:40:18] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:41:43] <dave0> skeels: sounds like a linux thing
[09:42:57] <skeels> is there a better alternative? i needed a queue implementation so i looked up `man queue`
[09:43:06] <dave0> head and tail doesn't mean much .. instead ask if it is last-in first-out or first-in first-out
[09:43:59] <rsjw> I think queue.h is a BSD thing, not a linux thing. although it has gotten around
[09:44:27] <skeels> It doesn't say anything like that. It has STAILQ_INSERT_HEAD() and STAILQ_INSERT_TAIL() functions.
[09:45:46] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:45:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:45:47] *** Joins: wroathe (~wroathe@user/wroathe)
[09:46:19] <dave0> skeels: is there a REMOVE_HEAD or REMOVE_TAIL ?
[09:46:50] <skeels> Nevermind, I figure it out. It returns the element at the head. I had something else messing up my code.
[09:47:40] <skeels> dave0: it has REMOVE_HEAD and REMOVE to remove element at arbitrary place
[09:48:17] <dave0> if you only insert_head and remove_head it's like a stack .. insert_tail and remove_tail is exactly the same except different names .. however insert_head and remove_tail, or insert_tail and remove_head, behaves like a queue
[09:48:50] <dave0> skeels: ah ok.. remove_head/insert_head is a stack, remove_head/insert_tail is a queue
[09:50:02] <skeels> got it; thanks
[09:50:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:51:43] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[09:52:07] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[09:55:12] *** Quits: nitrix (~nitrix@user/nitrix) (Read error: Connection reset by peer)
[09:55:12] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[09:55:55] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[09:56:14] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:56:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:56:14] *** Joins: wroathe (~wroathe@user/wroathe)
[09:58:24] *** Joins: nitrix (~nitrix@user/nitrix)
[09:59:48] *** Joins: perro_ (~perro@072-191-245-069.res.spectrum.com)
[10:00:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:06:28] *** Joins: pucara (~i@181.91.29.65)
[10:06:55] *** Quits: aac (~AAC@2001:8a0:6cc5:7e01:683c:c98c:52fb:6900) (Quit: aac)
[10:07:26] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Remote host closed the connection)
[10:08:38] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[10:10:25] *** Quits: rsjw (~quassel@user/rsjw) (Quit: rsjw)
[10:11:50] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:18:47] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.155) (Ping timeout: 256 seconds)
[10:18:55] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[10:20:27] *** Quits: soapsudsxx (~soapsudsx@209.221.40.151) (Remote host closed the connection)
[10:21:04] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:23:10] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::2) (Quit: WeeChat 2.7.1)
[10:24:47] *** Joins: Lazenca (~lazenca@user/lazenca)
[10:25:21] *** Quits: nicode (~nic@2607:f2c0:9452:5000:ef50:8b71:648e:eb43) (Ping timeout: 250 seconds)
[10:27:23] <trafficjam> 4 bytes = 1024 bits?
[10:27:34] <trafficjam> not bits sorry
[10:27:40] <Twix> that are quite large bytes
[10:27:41] <trafficjam> 32 bits
[10:27:49] <trafficjam> range of 1024 i meant
[10:28:20] <Twix> what do you want to ask?
[10:28:34] <trafficjam> 4 bytes has 1024 possible values
[10:28:48] <Twix> usually with 8 bits per byte, nope
[10:28:49] <Twix> way more
[10:28:53] <Twix> about 4 billion
[10:29:12] <trafficjam> oh you mutliply?
[10:29:14] <Twix> 4294967296 to be exact
[10:29:42] <Twix> its 2^32 possible values
[10:29:44] <trafficjam> yeah that makes sense, thanks twix
[10:30:01] <trafficjam> that's actually kind of insane
[10:30:11] <Twix> hmm?
[10:30:58] <trafficjam> that's a lot of information
[10:30:58] <Twix> its not that much. On 32 bit systems, where your address space is only 32 bit wide, you only have 4 GB possible address space
[10:31:12] <sham1> Now I wonder how many bits per byte one would need to get 1024 possible values
[10:31:23] <Twix> larger microcontroller can exceed this alone with all the memory mapped peripherals
[10:31:31] <sham1> I mean, it's 2^10, so a byte would need 2.5 bits
[10:31:39] <trafficjam> 2**4
[10:31:44] <Twix> sham1, its 10 bits
[10:32:09] <Twix> with 2.5 bits you could encode 5.656854249492381 different values ...
[10:32:13] <sham1> Indeed, it'd be 10 bits in 4 bytes
[10:32:19] <Twix> ah
[10:32:21] <Twix> yes
[10:32:23] <Twix> :D
[10:32:28] <sham1> So 5 bits in 2 bytes, and thus 2.5 bits in 1 byte
[10:33:05] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[10:34:01] <Twix> trafficjam, its not that much
[10:34:32] <dave0> i can't count to 4 billion
[10:34:42] <Twix> think of a full hd(1920x1080) picture with 24 bits(=3 bytes) color. It 6220800 or 6.2 MB
[10:34:44] <dave0> it would take years!
[10:35:15] <Twix> or 49766400 Bits
[10:35:45] <trafficjam> i don't mean that the number 4 billion is large in todays terms, of course not, but just the amount of information you can store digitally is crazy
[10:35:49] <Twix> and it takes ages for my little python repl to calculate how much possible pictures that makes
[10:36:34] <sham1> Yes, it's beyond astronomical
[10:36:40] <Twix> :D
[10:36:55] <trafficjam> will ternary computers ever be a thing?
[10:37:06] <trafficjam> maybe with quantum computing or something?
[10:37:34] <Twix> would be a number with 14981179 zeros
[10:37:42] <sham1> How would logic work on a ternary computer
[10:37:48] <dave0> candide: will ternary computers ever be a thing?
[10:37:54] <Twix> trafficjam, no, ternary computer make no sense in current technology
[10:38:04] <dave0> ,8ball will ternary computers ever be a thing?
[10:38:09] <sham1> Mathematically ternary computers are fine, since modulo 3 is a finite field
[10:38:10] <candide> d​ave0, Forget it!
[10:38:14] <trafficjam> sham1: https://en.wikipedia.org/wiki/Three-valued_logic
[10:38:18] <Twix> it would be possible
[10:38:20] <Twix> of course
[10:38:25] <dave0> yes, no, don't know
[10:38:27] <Twix> there were also decimal computers
[10:38:41] <Twix> but binary ones are most efficient to build and use
[10:39:15] <trafficjam> just build, wouldn't they be less efficient than a ternary computer?
[10:39:34] <dave0> i learned that in the beginning, computers only output numbers
[10:40:34] <Twix> trafficjam, the symbols get encoded as voltage levels. If we have two symbols, we have two voltage levels(low and high or 0 and 1)
[10:40:37] *** Quits: alch (~alch@151.82.177.67) (Read error: Connection reset by peer)
[10:40:52] <Twix> if we want to build a ternary computer, we have three. e.g. 1, 0 and -1
[10:41:00] <trafficjam> right
[10:41:32] <Twix> if you think of a simple transistor that switches on, if it gets a high signal, it might work as inverter. A simple logic gate and you could build a whole computer of that
[10:41:43] <Twix> but what do you now do with your three voltage levels?
[10:41:47] <Twix> things get complicated now
[10:42:03] <Twix> you need multible transistors for a simple logic gate
[10:42:16] <Twix> dunno what the most basic ternary operation would be
[10:42:20] <Twix> possible adding 1
[10:42:33] <Twix> so -1 gets 0, 0 gets 1 and 1 gets -1
[10:42:40] <Twix> you can not implement that using one transistor
[10:42:48] <Twix> you need a whole lot now
[10:43:03] <Twix> so you need more space on your silicon wafer
[10:43:12] <Twix> things need more power and cost more to build
[10:43:21] <trafficjam> not sure it would make sense using conventional silicon-based transistors to build such a computer
[10:43:32] <Twix> what else? valves?
[10:43:52] <trafficjam> photon or quantum computing
[10:43:58] <trafficjam> i guess
[10:44:01] <trafficjam> not really sure
[10:44:12] <Twix> working with light is quite hard
[10:44:26] <Twix> quantum computing is not a technology, its a principle
[10:44:52] <Twix> you can build binary computers using different technologies as you can quantum computers
[10:45:20] <sham1> And also quantum computers are binary
[10:45:30] <sham1> It just happens that they also have the superposition
[10:46:46] <Twix> And in fact modern computers use multible voltage levels at some places. E.g. in flash cells. To store more than one bit in one cell. Or in wifi to send multible bits per symbol you send(also using the phase there).
[10:47:42] <sham1> Although those are hardware implementation details of course
[10:47:45] <Twix> But you would use adcs and dacs to convert between digital and those multilevel signals. You usually wouldn't do complex operations on those analog things
[10:47:51] <Twix> of course
[10:48:25] <trafficjam> what makes quantum computers theoretically so much faster than traditional computers?
[10:48:26] <Twix> All i want to say, i would not expect ternary computers to become a thing.
[10:48:32] <Twix> trafficjam, nothing
[10:48:51] <sham1> I wouldn't buy all the hype of the "Quantum mastery" or whatever
[10:49:21] <sham1> Quantum computers *may* be faster at a certain subset of problems, which probably involved impactful things like prime factorization and such
[10:49:28] <Twix> but they can do some operations that "normal" computers can't. Which makes some problems solvable with a reduced time complexity
[10:49:41] <sham1> But to say that QC is generally faster? Eh
[10:50:10] <trafficjam> Didn't meant to imply they were faster in every aspect, just in some
[10:50:26] <Twix> all current qc are more like digital logic and less complete computers running programs. And they are quite small today
[10:50:42] <trafficjam> Yeah it's early stages still i suppose, time will tell
[10:50:58] <Twix> small in the complexity you can build algorithms on them
[10:51:01] <trafficjam> so what's the low hanging fruit for increasing computational speeds over the next decade?
[10:51:10] <sham1> BQP as a complexity class encloses P, but the really interesting stuff is BQP \ P
[10:51:22] <trafficjam> we're pretty close to the limit on transistor size right?
[10:51:25] <Twix> trafficjam, more memory bandwidth
[10:51:36] <sham1> More memory bandwidth and also just more processors
[10:51:51] <sham1> Mayhaps some with quantum assistance, or maybe not
[10:51:52] <Twix> no, we still have a few steps until we reach technologic limits
[10:51:59] <Twix> but thing get expensive now
[10:52:41] <trafficjam> can we get smaller than 5-7 nanometer transistors?
[10:52:48] <Twix> i think people can make a single transistor from 5 atoms
[10:52:54] <Twix> maybe even smaller
[10:53:07] <Twix> so ... yes?
[10:53:33] <Twix> but how do you build transistors from single atoms? Its quite hard to do so
[10:53:57] <trafficjam> wait using only 5 atoms? How would that even work?
[10:54:03] <sdk_> intel is planning 2nm in 2024
[10:54:04] <sham1> Quantum mechanics
[10:54:26] <Twix> sdk_, the current names for the chip technologies are really only names.
[10:54:27] <trafficjam> sdk_: is that actualy 2nm or just the name, and in reality it's closer to 8 or something?
[10:55:14] <sdk_> I didn't know there's a difference: https://en.wikipedia.org/wiki/2_nm_process
[10:58:38] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[11:00:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:00:58] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[11:01:15] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:03:23] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[11:03:49] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[11:06:00] *** Joins: Rounin (~david@84.212.130.215)
[11:06:24] *** Joins: freep (~freepppp@188.4.150.192.dsl.dyn.forthnet.gr)
[11:06:42] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[11:10:51] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[11:12:00] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:13:30] *** Joins: kriss (~kriss@213.239.83.90)
[11:15:29] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[11:19:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[11:19:58] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[11:20:28] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:22:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[11:22:40] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 268 seconds)
[11:24:40] *** Quits: inomoz (~inomoz@176.59.121.54) (Quit: WeeChat 3.4)
[11:25:32] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[11:26:38] *** Joins: asen (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4)
[11:27:54] *** Quits: asen (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4) (Client Quit)
[11:28:05] *** Joins: mrig (~mrig@user/mrig)
[11:34:37] *** Joins: alch (~alch@151.82.209.203)
[11:44:07] *** Joins: aradesh (~aradesh@user/aradesh)
[11:44:07] *** Joins: cart_man (~rynot@host-78-144-125-216.as13285.net)
[11:47:31] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.3)
[11:48:16] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[11:48:27] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[11:51:18] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1) (Read error: Connection reset by peer)
[11:52:54] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1)
[11:53:59] *** Quits: Chpy0 (~chpy@30-8-178-69.static.gci.net) (Ping timeout: 256 seconds)
[11:54:36] *** Joins: Chpy0 (~chpy@30-8-178-69.static.gci.net)
[11:57:01] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:57:01] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:57:01] *** Joins: wroathe (~wroathe@user/wroathe)
[12:00:56] *** Quits: hinata (~hinata@157.33.34.200) (Quit: Leaving)
[12:01:06] *** Quits: srji (~srji@p5499dc4a.dip0.t-ipconnect.de) (Quit: leaving)
[12:01:36] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[12:01:48] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:01:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[12:08:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Read error: Connection reset by peer)
[12:13:48] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[12:15:30] <Jck_true> sdk_: "The term "2 nanometer" or alternatively "20 angstrom" (a term used by Intel) has no relation to any actual physical feature (such as gate length, metal pitch or gate pitch) of the transistors."
[12:15:57] <Jck_true> They are basically just pulling marketing numbers out of their asses at this point
[12:17:08] <Jck_true> trafficjam: Most likely mean changing the production methods completely to a "bottom-up-approach" instead of the current "top-down-approach"
[12:19:16] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:23:33] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[12:23:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:24:31] <trafficjam> ah ok, wonder what that will look like
[12:25:57] *** Quits: cart_man (~rynot@host-78-144-125-216.as13285.net) (Quit: Konversation terminated!)
[12:26:05] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[12:30:53] <Jck_true> trafficjam: I would assume building the transistor of individual atoms one by one like lego bricks. Instead of the current etching methods
[12:33:02] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[12:33:26] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:36:10] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[12:38:18] <trafficjam> Jck_true: how can you build a transistor from individual atoms?
[12:43:40] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[12:43:41] *** Joins: Klinda (~superleag@user/klinda)
[12:46:54] *** Joins: stonkey (~stonkey@user/stonkey)
[12:50:52] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:51:55] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:51:56] *** Joins: plastico (~plastico@neomutt/plastico)
[12:57:31] *** Parts: Klinda (~superleag@user/klinda) (Konversation terminated!)
[12:58:37] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[12:59:57] *** Joins: hinata (~hinata@2409:4042:d1c:87d7:b804:803b:a72f:4008)
[13:02:42] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[13:03:37] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[13:03:47] *** Quits: mrig (~mrig@user/mrig) (Read error: Connection reset by peer)
[13:04:01] *** Joins: mrig (~mrig@user/mrig)
[13:09:22] *** Quits: mrig (~mrig@user/mrig) (Read error: Connection reset by peer)
[13:09:35] *** Joins: mrig (~mrig@user/mrig)
[13:11:52] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[13:12:49] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:12:49] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:12:49] *** Joins: wroathe (~wroathe@user/wroathe)
[13:13:52] *** Joins: inlight (~inlight@157.42.207.173)
[13:13:52] *** Quits: inlight (~inlight@157.42.207.173) (Changing host)
[13:13:52] *** Joins: inlight (~inlight@user/inlight)
[13:17:29] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:17:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[13:19:37] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[13:19:38] *** Joins: nicko (~iClass@222.211.30.113)
[13:19:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[13:26:29] *** Quits: pucara (~i@181.91.29.65) (Ping timeout: 256 seconds)
[13:26:43] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f) (Quit: Quit)
[13:28:28] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:32:53] *** Joins: maharshipatel (~maharship@43.250.157.181)
[13:33:27] *** Joins: Phil-Work (~phil@62.3.100.20)
[13:33:52] *** Joins: rcoote (~rcoote@2a02:908:690:a140:a878:9303:6a1:9ebe)
[13:38:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:40:43] *** Joins: oxfuxxx (~oxfuxxx@45.152.181.206)
[13:47:29] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:47:45] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:47:58] *** Quits: maharshipatel (~maharship@43.250.157.181) (Quit: Client closed)
[13:50:48] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:52:56] *** Joins: maharshipatel (~maharship@43.250.157.181)
[13:57:17] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 240 seconds)
[13:57:46] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[13:58:47] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[14:00:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:01:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:01:52] *** Lord_of_Life_ is now known as Lord_of_Life
[14:02:48] *** Epakai_ is now known as Epakai
[14:03:47] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:04:51] *** Joins: gargus (~user@14-201-142-45.static.tpgi.com.au)
[14:06:08] *** Joins: unknow (~i.am@user/marlboro)
[14:06:43] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[14:07:14] *** Joins: frost (~frost@user/frost)
[14:08:17] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[14:08:39] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[14:08:55] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[14:14:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:14:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:14:22] *** Joins: wroathe (~wroathe@user/wroathe)
[14:16:35] <novns> trafficjam, it's possible, they have moved some atoms already
[14:16:37] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:16:41] <novns> https://www.ibm.com/blogs/research/2013/05/how-to-move-an-atom/
[14:19:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:23:50] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:31:19] *** Quits: maharshipatel (~maharship@43.250.157.181) (Quit: Client closed)
[14:31:22] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[14:32:28] *** Joins: overrider (~overrider@user/overrider)
[14:37:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[14:38:06] *** Quits: diiirt (~diiirt@user/diiirt) (Remote host closed the connection)
[14:38:26] *** Joins: diiirt (~diiirt@user/diiirt)
[14:39:56] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[14:43:32] *** Quits: carlavilla (~carlavill@2a0c:5a84:3105:5e00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[14:43:59] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[14:44:32] *** Joins: AmR (~AmREiSa@156.199.20.227)
[14:45:13] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[14:47:05] *** Quits: kassle (~kassle@202.73.24.66) (Quit: Leaving shadow ...)
[14:47:41] *** Joins: carlavilla (~carlavill@2a0c:5a84:3105:5e00:221:6bff:fe3b:cee4)
[14:48:39] *** Quits: oxfuxxx (~oxfuxxx@45.152.181.206) (Read error: Connection reset by peer)
[14:49:32] *** Joins: kassle (~kassle@107.175.32.53)
[14:51:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[14:53:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:57:41] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[14:58:16] *** Joins: ntwk (~ntwk@user/ntwk)
[14:59:54] *** Joins: weijunli (~weijunli@91.80.28.229)
[15:00:33] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Quit: Leaving)
[15:01:26] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[15:05:47] *** Quits: hinata (~hinata@2409:4042:d1c:87d7:b804:803b:a72f:4008) (Remote host closed the connection)
[15:06:11] *** Joins: hinata (~hinata@2409:4042:d1c:87d7:b804:803b:a72f:4008)
[15:11:45] *** Quits: LuKaRo (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:13:35] *** Quits: weijunli (~weijunli@91.80.28.229) (Ping timeout: 256 seconds)
[15:13:45] *** Joins: agonhajdari (~textual@user/agonhajdari)
[15:13:54] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:13:55] *** Joins: LuKaRo (~LuKaRo@p4fc32532.dip0.t-ipconnect.de)
[15:14:11] *** Joins: shivesh (~shivesh@user/shivesh)
[15:16:52] *** Joins: u0_a391 (~u0_a391@2600:380:a400:48c:e872:48ef:7ec9:1791)
[15:17:58] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.145)
[15:17:59] *** Joins: earnest (~earnest@user/earnestly)
[15:18:11] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[15:18:51] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:20:49] *** Quits: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Ping timeout: 256 seconds)
[15:21:10] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.145) (Read error: Connection reset by peer)
[15:24:53] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:28:22] *** Joins: maharshipatel (~maharship@43.250.157.181)
[15:28:23] *** Joins: constxd (~brad@142.134.38.68)
[15:29:27] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.145)
[15:29:37] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Ping timeout: 240 seconds)
[15:35:57] *** Quits: alch (~alch@151.82.209.203) (Read error: Connection reset by peer)
[15:35:59] *** Quits: rany (~rany@user/rany) (Quit: The Lounge - https://thelounge.chat)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:12] *** Joins: rany (~rany@user/rany)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:17] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 240 seconds)
[15:40:06] *** Joins: alch (~alch@pa-18-174-27.service.infuturo.it)
[15:41:44] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[15:42:00] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[15:43:59] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:46:33] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:9d65:6181:29ef:f807)
[15:48:41] <bdax> hello, I want a basic hashmap (performance is not an issue), where the keys are integers and the values are strings. I'm thinking I can implement this by having an array of void pointers like: `{ (void*) (intptr_t) 123, (void*) "hello", (void*) (intptr_t) 456, (void*) "world", NULL }`. Is this a good solution? I'm not looking for anything complicated
[15:50:07] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:50:07] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:50:07] *** Joins: wroathe (~wroathe@user/wroathe)
[15:51:02] <fizzie> I wouldn't _call_ it a hashmap if there's no, you know, hash, involved.
[15:51:11] *** Joins: seninha (~seninha@user/seninha)
[15:51:13] <fizzie> If you just want a list of key-value pairs, an array of `struct item { int key; char *str; }` is almost sure to be a better idea than a flat array of `void *`.
[15:51:36] <fizzie> (You can call it a 'dictionary', that doesn't imply anything about how it's implemented.)
[15:52:30] *** Joins: Brainium (~brainium@user/brainium)
[15:52:35] <bdax> ah right yeah, that is better, thank you fizzie
[15:52:47] <fizzie> (I'd also probably go with tracking length explicitly rather than using a null-pointer-terminated list.)
[15:52:54] <NRK[m]> what exactly are you looking for though if not performance? if it's just some homework or smth then sure, do what fizzie said and go with open addressing.
[15:54:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:54:31] <NRK[m]> yes, you can realloc easier than way.
[15:54:49] *** lunix00 is now known as lunix00-away
[15:54:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[15:55:12] <NRK[m]> s/than/that/
[15:55:19] *** Quits: lunix00-away (~lunix00@2804:14c:6321:900d:9d65:6181:29ef:f807) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:55:54] <bdax> well I'm only expecting to store a few things in one of these things, so I don't expect a linear search will cause any problems, and I expect it's easier to implement
[15:56:44] *** Joins: manjaroi3 (~manjaro-i@14.138.218.201)
[15:57:21] *** Joins: tsujp84 (~tsujp@sourcehut/user/tsujp)
[15:57:37] <NRK[m]> is it for actual program or? because if it's for an actual program, i wouldn't even bother with hashmap if you're storing little amount of data which will fit into the cache.
[15:58:09] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:9d65:6181:29ef:f807)
[15:59:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:59:26] <bdax> well I'm just experimenting atm. for some reason an array of structs didn't occur to me, but that seems like the right way to go now
[16:01:14] <NRK[m]> if you're doing less insertion and more lookups, then array keeping the array sorted is also an option.
[16:04:28] <bdax> hm, yeah, that might be worth while, thanks NRK[m]
[16:04:57] *** Joins: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[16:06:09] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[16:06:40] *** Joins: TLuna (~t.luna@93-80-182-191.broadband.corbina.ru)
[16:08:48] *** Joins: badsektor (~badsektor@user/badsektor)
[16:08:48] *** Quits: badsektor (~badsektor@user/badsektor) (Client Quit)
[16:10:40] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[16:11:14] *** Joins: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au)
[16:11:37] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:11:55] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:14:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:15:14] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:16:01] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[16:19:48] *** Quits: bliminse (~bliminse@host86-186-17-7.range86-186.btcentralplus.com) (Quit: leaving)
[16:19:57] *** Quits: manjaroi3 (~manjaro-i@14.138.218.201) (Ping timeout: 240 seconds)
[16:20:06] *** u0_a391 is now known as Kit
[16:21:25] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[16:24:12] <pflanze> Is there a way to make a FILE handle from an array?
[16:24:38] *** Joins: |darc|- (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[16:24:38] *** Quits: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Killed (NickServ (GHOST command used by |darc|-)))
[16:24:43] <pflanze> I've started writing my own abstraction that allows this but maybe I'm stupid.
[16:25:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:25:26] <Kit> like `FILE* arr [n]`?
[16:25:36] *** Joins: lleo (~leo@31-161-227-7.mobile.kpn.net)
[16:25:36] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[16:25:59] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[16:26:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:26:48] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:26:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:27:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[16:28:35] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3c47:5b36:444:8126)
[16:28:35] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3c47:5b36:444:8126) (Changing host)
[16:28:35] *** Joins: skapata (~Skapata@user/skapata)
[16:28:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:29:38] <pflanze> Kit, no, like  FILE *file_from_array(const char *buf, size_t len);
[16:29:55] <pflanze> Giving me a FILE to read from
[16:30:33] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:30:46] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Quit: Raccoon's not another IRC transgenre wannabe who can't fap at the dead american dream, fhackerz)
[16:31:26] <DPA> https://man7.org/linux/man-pages/man3/fmemopen.3.html
[16:31:40] *** Quits: trafficjam (~trafficja@119.17.42.59) (Ping timeout: 256 seconds)
[16:32:11] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[16:32:41] <pflanze> Oh, bummer, I'm stupid. Thanks, DPA
[16:34:41] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:34:41] *** Joins: Atque (~Atque@user/atque)
[16:34:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[16:35:13] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f)
[16:35:14] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[16:38:43] *** Quits: maharshipatel (~maharship@43.250.157.181) (Quit: Client closed)
[16:40:24] <robyn> Sorry to bother you all, but the operator '.' is not showing up in web searchs, so please can someone tell me how to fix error: expected '=', ',', ';', 'asm' or '__attribute__' before '.' token I'm using gcc
[16:40:49] <robyn> if code is needed, please let me know
[16:41:09] <omegatron> '.' is used to access a 'field' of a struct like   mydatatype.myvalue = 42 ;
[16:41:25] <robyn> which is what it is accessing
[16:41:25] <omegatron> therefore, in your code the part before '.' seems fishy
[16:41:33] <robyn> ok thank you
[16:41:39] <omegatron> but yes, a code sample might help us
[16:43:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: -now)
[16:43:49] <robyn> using vim via a console, will termbin be ok?
[16:43:56] <omegatron> sure
[16:44:13] *** Joins: bliminse (~bliminse@host86-186-17-7.range86-186.btcentralplus.com)
[16:44:49] <robyn> https://termbin.com/x2zd
[16:45:04] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:45:17] *** Quits: rcoote (~rcoote@2a02:908:690:a140:a878:9303:6a1:9ebe) (Ping timeout: 240 seconds)
[16:46:08] <NRK[m]> i don't think you can do this `Head.prev = 0;`
[16:46:08] <trenka> robyn: you cannot perform operations outside of function
[16:46:30] <robyn> derp, thank you
[16:46:47] <NRK[m]> if you're using c99 or above then try using designated initializer
[16:46:56] <robyn> just going with ansi c
[16:46:59] <robyn> what I know
[16:47:12] <NRK[m]> then you'll have to initialize it in order
[16:47:32] <robyn> but figuring I'll need 3 linked lists, I'll allocate Head and Tail dynamically
[16:47:53] <NRK[m]> but i don't think u can do this either `Head.next = Tail;`
[16:47:56] <robyn> I should move _list to _list_item
[16:48:04] <omegatron> I would advise to design and then implement a clean API like  List_Init(), List_Push(), List_Pop() etc. - the header file should generally only contain declarations ..
[16:48:14] <robyn> and have LIst contain Head and Tail
[16:49:13] <oj> Hi, I just found a bug related to uninitialized memory in a codebase I'm working on (calling malloc without memset). This got me thinking, what's a best practice for allocating memory buffers? Should I prefer malloc+memset or calloc?
[16:49:40] <oj> using calloc seems like the smarter idea to me
[16:49:48] <oj> you don't have to remember to memset
[16:50:22] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:51:32] <NRK[m]> i prefer calloc for when i want the memory to be zero initialized
[16:51:49] <pflanze> robyn, generally in today's programming identifiers with uppercase initials are used for (compound) types, and lowercase initials for value identifiers (variables, function names). I don't actually know how the C community thinks about this, but it's how I currently code in C, too.
[16:52:11] *** Joins: cassepipe (~cassepipe@2a01:cb18:3ec:6f00:f429:f52f:2199:7b37)
[16:52:17] <pflanze> (Feedback from the community welcome.)
[16:52:22] <robyn> I was just using initial-capitals for globals
[16:52:38] <robyn> I come from many programming languages
[16:52:49] <omegatron> everyone as they please, as long as it's readable by humans ..
[16:52:51] <robyn> lately, I'
[16:53:04] <NRK[m]> pflanze: i've seen both used. don't think there's any rule/convention around it
[16:53:06] <robyn> I've been more of a javascript developer and camel-case
[16:53:13] <robyn> lately
[16:53:24] <pflanze> robyn, I haven't seen globals with uppercase initials, but okay.
[16:53:45] *** Joins: jjido (~Denis@90.213.58.125)
[16:53:52] <robyn> My C programming days go back to the college attempt around '90
[16:54:38] <NRK[m]> Xlib for example has pascalcase function names
[16:54:51] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[16:55:01] <pflanze> 20 years ago it was different. Anyway, this is a rule that functional programming languages often enforce, and I personally like it and got the impression that people increasingly follow everywhere (e.g. Python, too).
[16:55:44] <pflanze> NRK[m], yes, it's why I said "today" :)
[16:56:15] <pflanze> camel-case is orthogonal
[16:56:33] <NRK[m]> pflanze: https://github.com/cmuratori/refterm
[16:56:40] <NRK[m]> it's pascalcase as well iirc
[16:56:59] <NRK[m]> it literally doesn't matter.
[16:57:14] <NRK[m]> as long as you're consistent inside the project
[16:57:38] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:57:43] <pflanze> I said it's a tendency over time.
[16:58:06] <pflanze> But sure, both exist, I know.
[16:59:02] <pflanze> Looks like refterm does it the other way around, but still distinguishing according to initials (and here, also camel case), too.
[16:59:50] <pflanze> Maybe the only important contribution I had is, "better distinguish types from identifiers somehow".
[17:00:19] <pflanze> (Whatever, going back to my own corner.)
[17:01:20] <NRK[m]> it should be pretty obvious what a type is in C, they don't appear outside of a couple small areas
[17:02:16] <pflanze> OK, I'm giving up then.
[17:02:53] <NRK[m]> i would assume languages where this type of naming convention are precieved important allow you to do disgusting things which makes it harder to distinguish what is a type and what's an identifier.
[17:04:09] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[17:04:11] <pflanze> They do use type name == constructor name and use those for constructing and pattern matching things.
[17:04:43] <pflanze> In C you have to wrap types in ( ) to use them as constructors, so, sure, you're right in that this distinguishes them anyway. Shrug.
[17:05:27] <pragma-> s/constructors/converters/ innit?
[17:05:27] *** Joins: g1n (~g1n@user/g1n)
[17:05:32] <pflanze> I still think such a convention does make code look nicer, but, shrug.
[17:05:45] <trenka> it does not
[17:05:52] *** Joins: strajder (~strajder@user/strajder)
[17:05:53] <pragma-> struct foo bar; constructs bar as a type of struct foo. no ()'s needed.
[17:05:54] <pflanze> pragma-, (foo) {  }
[17:05:59] *** Quits: hinata (~hinata@2409:4042:d1c:87d7:b804:803b:a72f:4008) (Quit: Leaving)
[17:06:09] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:06:12] <robyn> I didn't mean to start a religious war
[17:06:26] *** Joins: ihopeyourot (~ihopeyour@31.142.224.22)
[17:06:59] <omegatron> =D
[17:07:01] <pflanze> pragma-, or, if you don't use typedef, (struct foo) { }
[17:07:24] <NRK[m]> language and editor wars are inevitable, don't sweat it
[17:07:31] *** Joins: weijunli (~weijunli@91.80.21.239)
[17:08:01] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:9d65:6181:29ef:f807) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:08:03] <pflanze> Says the survivor
[17:08:17] <NRK[m]> B)
[17:08:18] <pflanze> Anyway, going back to my corner again.
[17:08:26] <omegatron> until humanity will fall before the (*insert evil megacorp here*) hive overmind
[17:08:32] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[17:09:39] <NRK[m]> there is one convention in C though, that's using ALLCAPS for macros.
[17:10:06] <NRK[m]> and that's precisely because macros obfuscates what's going on.
[17:10:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:11:28] *** Joins: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de)
[17:13:43] <pflanze> My current code base surely will get some criticism... I'm allowing myself to use macros that are not all-caps. Like, DEFTYPE_Maybe_(T) which generates a variant of Maybe that's parameterized by T.
[17:13:59] <pflanze> At least I'm hinting at the macro nature by the DEFTYPE_ all-caps prefix.
[17:15:13] <pflanze> (Maybe there are better ways doing this, I'll see when I'm ready to publish.)
[17:16:22] <omegatron> I wouldn't just macros for that and just write out the code, so the fellow human reader doesn't have to guess or look up the macro's definition
[17:17:11] <omegatron> I restrict myself to define and use compile-time constants with the preprocessor's capabilities
[17:18:57] *** Joins: kts (~kts@103.73.237.210)
[17:19:26] <omegatron> ah, /just/use/  in my first sentence  -_-
[17:19:49] <omegatron> too early here ..
[17:20:10] <pflanze> Freudian, maybe.. nothing but just.
[17:20:13] *** Quits: enick_397 (~mercvrivs@2001:470:69fc:105::2ee6) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: blakesmith[m] (~blakesmit@2001:470:69fc:105::1:4093) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: Akawama[m] (~akawama@user/akawama) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: go4godvin (~go4godvin@user/go4godvin) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: randy408[m] (~randy408m@2001:470:69fc:105::2f5e) (Ping timeout: 240 seconds)
[17:21:09] *** Joins: kts_ (~kts@103.73.237.175)
[17:21:15] *** Quits: kts_ (~kts@103.73.237.175) (Client Quit)
[17:21:26] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:21:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[17:22:06] *** Quits: gargus (~user@14-201-142-45.static.tpgi.com.au) (Quit: Leaving)
[17:23:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:23:24] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[17:23:28] *** Joins: pulse (~pulse@user/pulse)
[17:23:30] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[17:23:34] *** Quits: sebito91 (~sborza@45.55.74.66) (Quit: laterz, coffee...)
[17:23:47] *** Quits: kts (~kts@103.73.237.210) (Ping timeout: 256 seconds)
[17:23:51] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:24:18] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[17:24:49] *** Joins: sebito91 (~sborza@45.55.74.66)
[17:25:00] *** Joins: cebor (~cebor@user/cebor)
[17:26:29] *** Joins: badsektor (~badsektor@user/badsektor)
[17:27:44] *** Quits: geeknix (~pi@2001:e68:5432:307:f6b7:9845:4bce:2869) (Ping timeout: 268 seconds)
[17:29:51] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[17:30:15] *** Joins: ckdCreations (~ckdCreati@2607:fb90:b2a5:d3bb:c9bd:5a42:d7a8:23d8)
[17:31:58] *** Joins: nicode (~nic@69-165-153-180.dsl.teksavvy.com)
[17:33:42] *** Joins: enick_397 (~mercvrivs@2001:470:69fc:105::2ee6)
[17:34:16] *** Quits: dupondje (~dupondje@artemis.dupie.be) (Quit: dupondje)
[17:35:20] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[17:38:02] *** Joins: mrig_ (~mrig@2a01:cb1c:abc:de00:e020:c92f:47fe:41a8)
[17:38:12] *** Joins: blakesmith[m] (~blakesmit@2001:470:69fc:105::1:4093)
[17:38:14] *** Quits: mrig_ (~mrig@2a01:cb1c:abc:de00:e020:c92f:47fe:41a8) (Client Quit)
[17:38:27] *** Joins: Akawama[m] (~akawama@user/akawama)
[17:39:07] *** Joins: mrig_ (~mrig@amarseille-658-1-164-58.w86-198.abo.wanadoo.fr)
[17:39:17] *** Quits: mrig_ (~mrig@amarseille-658-1-164-58.w86-198.abo.wanadoo.fr) (Client Quit)
[17:40:34] *** Joins: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc)
[17:41:26] *** Joins: brad_mssw (~bhouse@2620:134:c001:100:28f3:c9a0:4ee9:63c1)
[17:41:29] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 256 seconds)
[17:41:34] *** Joins: randy408[m] (~randy408m@2001:470:69fc:105::2f5e)
[17:43:00] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[17:44:24] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[17:46:45] *** Joins: mrig (~mrig@user/mrig)
[17:49:11] *** Joins: Torr (~Torr@user/torr)
[17:50:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:50:33] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:52:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:52:15] *** Quits: bdax (~tom@05432be4.skybroadband.com) (Ping timeout: 256 seconds)
[17:53:43] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[17:55:26] *** Joins: malina (~malina@user/malina)
[18:01:14] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:01:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:01:14] *** Joins: wroathe (~wroathe@user/wroathe)
[18:03:07] *** Joins: kts (~kts@103.73.237.175)
[18:04:37] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Ping timeout: 240 seconds)
[18:04:50] *** Quits: cassepipe (~cassepipe@2a01:cb18:3ec:6f00:f429:f52f:2199:7b37) (Quit: Leaving)
[18:07:12] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[18:11:04] *** Joins: geeknix (~pi@2001:e68:5432:307:f6b7:9845:4bce:2869)
[18:12:23] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:18:51] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:22:01] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[18:25:05] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[18:26:14] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Quit: Leaving)
[18:29:31] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[18:30:54] *** Joins: zer0bitz (~zer0bitz@196.244.192.57)
[18:33:05] *** Joins: kts (~kts@103.73.237.175)
[18:33:32] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[18:33:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:34:24] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[18:34:49] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:34:49] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:34:49] *** Joins: wroathe (~wroathe@user/wroathe)
[18:35:17] *** Joins: sysadmin (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[18:35:33] *** sysadmin is now known as slayne
[18:36:19] *** Quits: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[18:38:31] <slayne> Hey everyone, I'm trying to wrap my head around pointers, could you tell me why I'm getting a Segmentation Fault while running this program ? https://bpa.st/NA6Q
[18:39:28] <omegatron> uhm  (void *)2048  doesn't work
[18:39:29] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[18:39:39] <omegatron> put the value 2048 into a variable and reference that
[18:39:53] <omegatron> you cannot reference constant values
[18:40:44] <omegatron> a reference is .. a reference to some memory location
[18:40:45] <fizzie> Or `&(int){2048}` if you really don't want to give it a name (but mind that it has no longer lifetime than a local variable would).
[18:41:15] <koollman> you can reference constant values. you can't point to some address and expect the access to work :)
[18:41:37] <omegatron> -_-
[18:42:31] <slayne> I see, thank you!
[18:43:00] <fizzie> In other words, `(void *)2048` doesn't mean "give me a `void *` that points at an `int` object that contains the value 2048", it means "convert the int value 2048 to a pointer in an implementation-defined manner".
[18:44:18] <koollman> and then, printf with *vptr means ... show me the data at that address 2048 ... not "show me 2048" :)
[18:44:27] <koollman> and fortunately, you get a segfault :)
[18:45:03] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:45:55] *** Quits: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net) (Read error: Connection reset by peer)
[18:47:27] *** Quits: lleo (~leo@31-161-227-7.mobile.kpn.net) (Read error: Connection reset by peer)
[18:47:37] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4f71:e483:695e:a1c3)
[18:49:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[18:51:37] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[18:52:08] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[18:53:57] *** Joins: MajorBiscuit (~MajorBisc@c-001-023-057.client.tudelft.eduvpn.nl)
[18:58:16] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[18:58:42] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[19:00:20] *** Joins: agonhajdari (~textual@user/agonhajdari)
[19:01:49] *** Joins: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi)
[19:03:33] *** Joins: morte_ (~user@190.104.116.153)
[19:08:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[19:10:36] *** Joins: mahmutov (~mahmutov@37.155.2.41)
[19:12:36] *** Quits: slayne (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[19:13:17] *** Quits: weijunli (~weijunli@91.80.21.239) (Ping timeout: 256 seconds)
[19:13:35] *** Quits: morte_ (~user@190.104.116.153) (Remote host closed the connection)
[19:15:26] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[19:15:47] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[19:16:56] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:17:08] <sham1> I'd be scared if such a low address were to be mapped. Because with basically every modern architecture the page size is 4KiB and being able to deref that would also mean being able to deref address 0 and that just won't dk
[19:17:09] <sham1> Do
[19:19:19] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[19:19:25] *** Joins: pulse (~pulse@user/pulse)
[19:22:34] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Quit: Leaving)
[19:23:12] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:26:12] *** Joins: moog (~moog@107.126.53.244)
[19:27:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:29:11] *** Joins: xsperry (~xs@user/xsperry)
[19:29:23] *** Joins: jollygood2 (~bc8147f2@cerf.good1.com)
[19:29:49] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[19:30:53] <jollygood2> hi. what would be syntactically most efficient way of writing something like this in C (this obviously doesn't work).  list_of_tuples = [("one", 1), ("two", 2), ..].  I need to 1) print all the strings. 2) switch on a string and return an int.
[19:31:19] * pragma- vaguely recalls pointing unsigned char* at video memory and assigning to the dereference of offsets of that pointer to plot pixels to the screen. Ancient times.
[19:32:29] <jollygood2> nice idea, but int values aren't 1, 2, etc, but more random
[19:32:45] <GyrosGeier> jollygood2, compile time fixed list?
[19:32:53] <fizzie> ,cc struct { int num; const char *str; } pairs[] = {{1, "foo"}, {2, "bar"}, {3, "baz"}}; size_t n_pairs = sizeof pairs / sizeof *pairs; for (size_t i = 0; i < n_pairs; i++) printf("[%d - '%s'] ", pairs[i].num, pairs[i].str);
[19:32:56] <candide> fizzie: [1 - 'foo'] [2 - 'bar'] [3 - 'baz']
[19:33:30] <jollygood2> that is far nicer than I remember. is that C99?
[19:33:41] *** Quits: mrig (~mrig@user/mrig) (Remote host closed the connection)
[19:33:41] <GyrosGeier> for a fixed list I'd use gperf
[19:33:47] <fizzie> It's C89 as well.
[19:33:54] *** Joins: mrig (~mrig@user/mrig)
[19:33:57] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[19:34:02] <pragma-> It's also C11!
[19:34:14] <markand> and C17
[19:34:38] <pragma-> But will it be C23?
[19:34:49] <fizzie> gperf can generate you a perfect hash that makes it particularly efficient to switch on the string, compared to having to loop over it all. But if it's a short list or not a performance-critical operation, you don't _have_ to bother with that.
[19:34:50] <sham1> Most likely
[19:34:57] *** Quits: ckdCreations (~ckdCreati@2607:fb90:b2a5:d3bb:c9bd:5a42:d7a8:23d8) (Ping timeout: 240 seconds)
[19:35:20] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:35:51] <GyrosGeier> like, gperf for "foo", "bar", "baz" generates a table of 256 bytes, and then makes a lookup of asso_values[(unsigned char)str[2]]
[19:35:58] <pragma-> Ha! I doubt C23 will be a thing. Probably end up being C27.
[19:36:21] <jollygood2> GyrosGeier missed your question, yes it is a fixed list known at compile time
[19:36:26] <sham1> C99 again, but this time 2099
[19:36:43] <pragma-> It was supposed to be C20.
[19:36:51] *** Quits: alch (~alch@pa-18-174-27.service.infuturo.it) (Read error: Connection reset by peer)
[19:37:03] <NRK[m]> meh, just use GNUC.
[19:37:20] <sham1> Yeah, to be released parallel to C++20, but that fell through. Oh well, better 23 than never
[19:37:25] *** Joins: ckdCreations (~ckdCreati@147.55.133.130)
[19:37:38] <pragma-> What even is C17, again? I cannot recall what big defining thing C17 has in it that justfies a new standard release.
[19:37:44] <pragma-> Some obscure floating point things, right?
[19:38:01] <sham1> Just some clarifications and other minor things
[19:38:04] <fizzie> "C17" was supposed to be C17 but is really C18. Or at least, it's ISO/IEC 9899:2018 officially. People still call it both.
[19:38:20] <pragma-> But what's *in* it that sets it apart from C11?
[19:38:38] <NRK[m]> bug fixes
[19:38:39] <pragma-> I can immediately identify the things in C99 and C11, but nothing comes to mind for C17.
[19:38:51] <sham1> I can't do -std=c18 IIRC on gcc or clang, therefore it's C17, obviously
[19:39:19] <fizzie> N2176: "There are no major changes in this edition [C18], only technical corrections and clarifications."
[19:39:23] <NRK[m]> ,cc -std=c18 printf("really?");
[19:39:25] <fizzie> And you _can_ do -std=c18 on GCC.
[19:39:25] <candide> NRK[m]: really?
[19:39:32] <sham1> TIL
[19:39:46] <pragma-> ,cc -std=c17 42
[19:39:49] <candide> pragma-: Success (no output).
[19:40:03] <NRK[m]> sham1: werks on candide
[19:40:12] <sham1> That it seems to
[19:40:28] <fizzie> GCC accepts c17, c18, iso9899:2017 and iso9899:2018 for "ISO C17, the 2017 revision of the ISO C standard (published in 2018)."
[19:40:31] *** Joins: alch (~alch@151.36.35.202)
[19:40:44] <fizzie> But the official name remains ...:2018.
[19:40:51] <pragma-> "the 2017 revision published in 2018"
[19:40:53] <pragma-> totally not confusing
[19:41:01] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Ping timeout: 240 seconds)
[19:41:14] <NRK[m]> `No such factoid 'sham1:'; did you mean [#bash] shame?`
[19:41:18] <fizzie> I still think they should've gone C89/C90 → C99 → C111 → C117/C118 → C123 (presumed) → ... for the abbreviations.
[19:41:19] <pragma-> Fine, fine, C18 it is.
[19:41:24] <NRK[m]> woah what? why did candide message me that?
[19:41:42] <pragma-> NRK[m]: because messages that end with its name are considered to be commands
[19:42:13] <pragma-> That design decision has been bother entertaining and annoying at various times.
[19:42:16] <fizzie> If "years since 1900" is good enough for struct tm's tm_year, it should also be good enough for colloquial names of the standards.
[19:42:17] <pragma-> s/bother/both/
[19:42:42] <NRK[m]> kinda creepy tbh
[19:42:44] <sham1> I'd rather C2011, C2018 and so on. This kind of 2 digits nonsense is what caused the mass panic of the Y2K after all
[19:42:57] <pragma-> On one hand, it allows talking to the bot more naturally and the bot has several commands that take advantage of it. On the other hand, it makes it hard to talk *about* the bot without the bot interjecting.
[19:43:48] *** Joins: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt)
[19:44:11] <sham1> Like, Fortran of all things does this correctly and if that's the case then something is really off
[19:44:26] <pragma-> I suppose I could adjust its command parser to not generate any error output if it's the result of a "command" that *ends* with the bot's name.
[19:44:40] <pragma-> But it would still randomly speak up if it's a valid command.
[19:44:42] * pragma- shrugs.
[19:44:56] <sham1> Well that just spices up the conversation
[19:45:02] <NRK[m]> we can just use "it"
[19:45:10] <sham1> Like the clown?
[19:45:12] <NRK[m]> as long as "it" doesn't figure it out o_o
[19:45:18] <pragma-> Yeah, I tend to use "it" or "the bot" if I realize that my last word is the bot's name.
[19:45:56] <pragma-> Ideally I should probably just remove its last name as a trigger, but it's kind of entertaining when people yell at it like "screw you candide!" and it yells back at them.
[19:46:30] <GyrosGeier> https://imgur.com/t/tech_support/rQFMMb9
[19:46:35] <sham1> screw you candide
[19:46:37] <candide> s​ham1 you: Listen, are you always this stupid or are you just making a special effort today?
[19:46:37] <pragma-> I have watched many people privately /msg it and end up arguing with it.
[19:46:46] *** Quits: fe23 (~fe23@2409:8a34:464:4990:21c2:2adc:36be:e732) (Quit: fe23)
[19:46:53] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[19:46:57] <NRK[m]> lmao
[19:47:01] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[19:47:17] <NRK[m]> i've seen a couple ppl talk to it thinking it's a real person as well
[19:47:43] <sham1> It passes the Turing test, or the people fail it. Hard to tell
[19:48:14] *** Joins: WAR10CK (~WAR10CK@14.223.181.174)
[19:48:49] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[19:53:49] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.145) (Ping timeout: 240 seconds)
[19:54:01] *** Joins: slayne (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[19:54:28] *** Joins: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[19:54:43] *** Quits: slayne (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Client Quit)
[19:55:06] *** Joins: slayne (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[19:57:31] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[19:59:01] <kurahaupo_> sham1: You can have your wish. The C language standards' formal names are things like ISO/IEC 9899:1990 (because they fluffed about editing it for a year after the JTC approved it), ISO/IEC 9899:1999, ISO/IEC 9899:2011, ISO/IEC 9899:2018, ISO/IEC 9899:2023 etc.
[19:59:26] <sham1> I mean the informal names
[19:59:42] <sham1> But yes. Thank you ISO for doing the sane thing
[20:00:19] *** Joins: kuber (~kuber@97-126-25-4.tukw.qwest.net)
[20:00:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:04:36] *** Joins: kish` (~aqua@user/aqua)
[20:05:58] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[20:06:06] *** Quits: tsujp84 (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:06:06] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:06:23] *** Joins: kish` (~aqua@user/aqua)
[20:07:44] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.214)
[20:08:57] *** Quits: Darkcoal (~user@167.86.150.114) (Ping timeout: 240 seconds)
[20:11:00] <kurahaupo_> sham1: We could just call it Cⁱˢᵒ⁻ⁱᵉᶜ⁻⁹⁸⁹⁹⁻²⁰11
[20:11:32] <kurahaupo_> 😝
[20:12:58] *** kurahaupo_ is now known as kurahaupo
[20:13:27] <zwr> but 4 digits causes the y10k problem
[20:14:25] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[20:14:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:14:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:14:28] *** Joins: wroathe (~wroathe@user/wroathe)
[20:14:31] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::3) (Quit: Leaving)
[20:15:56] *** Quits: TLuna (~t.luna@93-80-182-191.broadband.corbina.ru) (Quit: Leaving)
[20:16:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[20:16:43] <kurahaupo> zwr: Solaris have the Y10k problem on their issue tracker. It will be fixed in "an upcoming release" (in about 7978 years)
[20:18:01] <johnjaye> ... but there is no upcoming release. lol
[20:18:13] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[20:18:57] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[20:19:08] *** Joins: kuber_ (~kuber@97-126-25-4.tukw.qwest.net)
[20:20:08] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[20:20:36] *** Quits: kuber_ (~kuber@97-126-25-4.tukw.qwest.net) (Remote host closed the connection)
[20:20:36] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Remote host closed the connection)
[20:20:46] *** Joins: kuber (~kuber@97-126-25-4.tukw.qwest.net)
[20:22:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[20:23:00] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[20:24:42] *** Quits: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu) (Quit: BitchX-1.3-git -- just do it.)
[20:24:47] *** Joins: LucaTM (~LucaTM@user/lucatm)
[20:24:50] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[20:27:23] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[20:28:09] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.4)
[20:29:13] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.214) (Ping timeout: 256 seconds)
[20:30:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:30:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:30:55] *** Joins: wroathe (~wroathe@user/wroathe)
[20:32:16] *** Joins: u0_a391 (~u0_a391@64.85.173.130)
[20:34:50] *** Joins: Akiva (~Akiva@user/Akiva)
[20:35:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:35:57] *** Quits: Kit (~u0_a391@2600:380:a400:48c:e872:48ef:7ec9:1791) (Ping timeout: 240 seconds)
[20:37:53] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:40:17] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:42:18] <pragma-> Solaris is still around? What about Sun Sparc stations?
[20:42:49] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f0a6) (Read error: Connection reset by peer)
[20:43:17] <pragma-> I used a Sun SparcStation a few times at university. It had a silver mirror-like mouse pad, trying to look futuristic.
[20:44:19] <GyrosGeier> more like "trying to give the optical sensor something with good contrast"
[20:44:52] <pragma-> >Oracle Solaris is the best enterprise operating system for Oracle Database and Java applications.
[20:44:59] <pragma-> lol
[20:45:14] <pragma-> I'm surprised they didn't write "Oracle Java"
[20:45:40] <johnjaye> according to wiki they bought it, then extinguished it
[20:45:46] <johnjaye> so development shifted to illumos
[20:45:48] <GyrosGeier> the Sun mice were really annoying because they used the mouse pad grid as a reference, not the motion of the mouse
[20:45:59] *** Joins: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu)
[20:46:33] <pragma-> https://en.wikipedia.org/wiki/Oracle_Solaris#/media/File:Solaris_Snapshot.jpg
[20:46:48] <pragma-> lol, TIL the spanish version of Gimp has "El Gimp" in the window title bar.
[20:47:09] <fizzie> I had a SPARCStation 5 as a home internet router / IRC thing for many years.
[20:47:15] <fizzie> It had some pretty loud fans.
[20:47:37] <fizzie> As in, the spinny things that move air, and in the sense of making a lot of noise, not just... enthusiastic supporters.
[20:47:53] <pragma-> I have a huge metal fan in my room. He won't stop screaming.
[20:49:18] <pragma-> GyrosGeier: I don't feel like a mirror really offers good contrast.
[20:50:02] <apotheon> johnjaye: Proprietary Solaris is still a thing, apparently.
[20:50:11] <pragma-> This Logitech G502 mouse I have is amazing. I have not yet found a surface that it does not work on.
[20:50:23] <johnjaye> so i gathered. they still sell them but no development on solaris happens
[20:50:25] <apotheon> johnjaye: You only need illumos if you want an open source Solaris-y thing.
[20:50:37] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Ping timeout: 240 seconds)
[20:51:22] <apotheon> What do you mean "no development"?  As I understand it, they're still developing it, and with the right license you can have access to new (proprietary-licensed) source code.
[20:51:25] <GyrosGeier> pragma-, that's why they have these black dots
[20:51:25] <pragma-> "Sensitivity: 16,000 DPI"
[20:51:45] <hanzo> pragma-: nice
[20:51:53] <apotheon> . . . where "they" means "developers at Oracle".
[20:52:07] *** u0_a391 is now known as kit
[20:52:14] <GyrosGeier> the SPARC at 75 MHz handily beats a XeonII at 450 MHz at AES
[20:52:30] <apotheon> I mean . . . you can't *afford* updated Solaris, probably.
[20:52:38] <pragma-> GyrosGeier: how come?
[20:52:49] <kurahaupo> johnjaye: I'm sure they'll squeeze one in some time in the next 7900 years
[20:52:49] <GyrosGeier> probably "more registers"
[20:52:56] *** Joins: slidercrank (~slidercra@user/slidercrank)
[20:53:02] <GyrosGeier> the SPARC has a really interesting register map
[20:53:07] <fizzie> The SBus Ethernet adapter that topped up at 10BaseT unfortunately at some point stopped keeping up with Internet speeds, that's when I had to let it go.
[20:53:14] *** Quits: WAR10CK (~WAR10CK@14.223.181.174) (Remote host closed the connection)
[20:53:19] <GyrosGeier> with 8 global, 8 in, 8 local, 8 out registers
[20:53:31] <apotheon> It has been three years or so since a release, though.
[20:53:44] *** Joins: Ionut_ (~Ionut@92.86.217.127)
[20:53:57] <GyrosGeier> and instructions to shift register pages left and right, so "out" becomes "in", and you get a new set of "local" registers
[20:54:07] <johnjaye> random question but why does bsd have an errno.h which includes a sys/errno.h... but both define error numbers?
[20:54:09] <GyrosGeier> so function calls are really cheap
[20:54:25] <GyrosGeier> johnjaye, same on Linux, basically
[20:54:34] <GyrosGeier> there are kernel errors, and userspace errors
[20:54:38] <fizzie> Register windows is what they call it.
[20:54:58] <GyrosGeier> some are defined by sysv, some are OS specific
[20:55:43] *** Quits: Mentor (~Ionut@92.86.217.127) (Ping timeout: 256 seconds)
[20:55:52] <trenka>  GyrosGeier: 4 function calls
[20:56:41] <sham1> zwr: well the idea would be that after 10000 the C standard would be for example C10011
[20:56:53] <trenka> then you have to handle exception and save the registers in memory
[20:56:58] <fizzie> Not 4 function _calls_, a maximum depth range of 4 without spilling.
[20:57:02] <johnjaye> imagine the c standard being updated every 10 years for 10000 years
[20:57:12] <GyrosGeier> trenka, the SPARC spec allows up to 32
[20:57:23] <GyrosGeier> not sure if that was actually implemented
[20:57:56] *** Joins: vysn (~vysn@user/vysn)
[20:59:15] *** Quits: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de) (Ping timeout: 256 seconds)
[21:00:03] *** Joins: Darkcoal (~user@139.64.51.226)
[21:02:30] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[21:02:52] <johnjaye> i googled errno and i got a msdn article explaining how the ms libc doesn't use all the error codes from unix.
[21:02:58] <johnjaye> the first 0-14 it does though
[21:03:21] <johnjaye> kind of makes sense i guess, 15 is an error about block devices
[21:06:17] *** Joins: john99 (~john99@101.246.103.34.bc.googleusercontent.com)
[21:07:30] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[21:07:33] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[21:12:27] *** Joins: constxo (~brad@142.134.38.68)
[21:13:17] *** Quits: mahmutov (~mahmutov@37.155.2.41) (Ping timeout: 256 seconds)
[21:15:05] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:15:25] *** Joins: rsjw (~quassel@user/rsjw)
[21:15:36] *** Joins: cryptonector (~nico@24.28.108.183)
[21:16:07] <cryptonector> looking for an appropriate place to ask what replaces SetEnv.cmd in Windows SDKs after v7.1
[21:16:22] <cryptonector> yes, I'm trying to build a C codebase on Windows using VS 2019
[21:16:26] <cryptonector> pity me
[21:16:37] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[21:17:20] *** Joins: malina (~malina@user/malina)
[21:20:04] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Quit: leaving)
[21:20:10] *** Quits: Ionut_ (~Ionut@92.86.217.127) (Quit: Leaving)
[21:20:40] *** Joins: Mentor (~Ionut@92.86.217.127)
[21:21:13] *** Quits: AmR (~AmREiSa@156.199.20.227) (Quit: Konversation terminated!)
[21:22:14] <johnjaye> don't worry. we do.
[21:24:52] *** Quits: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu) (Changing host)
[21:24:52] *** Joins: Whatshisface (~jon@user/Whatshisface)
[21:25:59] <constxo> fuck windows man
[21:26:20] <constxo> trash tooling
[21:26:54] <constxo> well it's good but out of ur control
[21:26:57] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[21:27:26] *** Joins: kish` (~aqua@user/aqua)
[21:28:55] <hanzo> cryptonector: you could try #winapi
[21:28:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[21:30:29] *** Joins: peve (~peve@185.65.135.248)
[21:32:25] *** Quits: Mentor (~Ionut@92.86.217.127) (Quit: Leaving)
[21:32:39] <cryptonector> johnjaye, constxo: excellent answers
[21:33:18] <cryptonector> hanzo: ah, thanks mate.  I'd tried #windows (not for devs), #win (empty), #win32 (empty), #win64 (empty)
[21:33:46] <cryptonector> doing windows dev work is insanely painful, tooling-wise
[21:33:53] <johnjaye> maybe you should found the #msvcrt channel.
[21:34:22] <johnjaye> first question to be debated: Why is the windows c runtime different from whatever visual studio has?
[21:36:19] *** Joins: AmR (~AmREiSa@156.199.28.131)
[21:36:52] *** Quits: MajorBiscuit (~MajorBisc@c-001-023-057.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:37:24] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:37:43] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:37:43] <GyrosGeier> cryptonector, I use 'call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64_x86' from a batch file
[21:38:20] *** Joins: pucara (~i@181.91.29.65)
[21:39:27] <cryptonector> johnjaye: there is so much wrong with the windows dev env, the crt, and the tooling, it's hard to know where to start
[21:39:33] <cryptonector> GyrosGeier: trying...
[21:39:55] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 256 seconds)
[21:41:08] <GyrosGeier> if you use 2019 or another edition, you need to adjust these
[21:41:37] *** Quits: clamiax (~claudio@net-93-144-125-193.cust.dsl.teletu.it) (Ping timeout: 240 seconds)
[21:41:38] <GyrosGeier> afaik the installer has a standard location, and you can ask it for a list of installed versions and their paths
[21:41:46] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[21:42:46] *** Joins: magla (~gelignite@55d453bf.access.ecotel.net)
[21:46:06] <cryptonector> the fact that it's 2021 and UTF-8 support is still beastly bad in Windows tells you a lot
[21:46:34] <cryptonector> then the fact that the crt historically gets statically linked into each DLL (yes, I know about the ucrt)...
[21:47:35] *** Joins: mahmutov (~mahmutov@37.155.2.41)
[21:48:56] <cryptonector> C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars*.bat
[21:49:01] <cryptonector> is the right thing
[21:50:18] <johnjaye> makes sense. totally intuitive
[21:50:47] *** Quits: john99 (~john99@101.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[21:50:53] <cryptonector> my kingdom for gnu or bsd make + clang (VC is not even fully up to C99, ffs) + a CRT that doesn't suck and is a DLL + UTF-8 support that doesn't suck + ability to cross-compile for older windows (do not ask) + ...
[21:50:54] *** Quits: ihopeyourot (~ihopeyour@31.142.224.22) (Read error: Connection reset by peer)
[21:51:23] <sham1> WinAPI is good. Just not in C, and arguably in C++. So there goes an entire part of visual studio as not being worth using on Windows
[21:51:38] <cryptonector> and DTrace, and strace, and...
[21:52:21] <johnjaye> latest freebsd i have clang-11.0.1
[21:52:35] <johnjaye> and i used to think bsd was the crufty outdated system!
[21:52:53] <cryptonector> Windows got some things right: HANDLEs, not FDs, handles for processes (>> PIDs), security descriptors instead of disparate security related items like owner, group, mode, ACL, access tokens (like cred_t in Illumos, BSD, and nowadays even on Linux)
[21:53:08] <cryptonector> johnjaye: clang is at 13
[21:54:50] <sham1> I like FDs
[21:55:03] <cryptonector> FDs have problems
[21:55:43] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[21:55:47] <cryptonector> race conditions that cause app state corruption (one thread closes an FD while another still wants to use it and others open new fds and boom)
[21:55:55] <GyrosGeier> there is no technical difference between a HANDLE and an fd
[21:56:01] <GyrosGeier> both are capabilities
[21:56:26] <GyrosGeier> i.e. magic numbers you get, should not interpret, and pass back to the kernel to refer to some resource
[21:56:29] <cryptonector> the need to allocate FDs as the lowest available number == bad
[21:56:41] <GyrosGeier> there is no need to do that
[21:56:55] <GyrosGeier> it's just customary
[21:57:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:57:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:57:03] *** Joins: wroathe (~wroathe@user/wroathe)
[21:57:38] <cryptonector> it's a hard requirement
[21:57:53] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:57:56] <cryptonector> not only because POSIX says so, but because lots of code assumes it
[21:58:04] <GyrosGeier> then that code is wrong
[21:58:05] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[21:58:29] <cryptonector> why, if POSIX says so?
[21:58:32] <GyrosGeier> the only things code can assume are that fd 0, 1 and 2 are special
[21:58:43] <cryptonector> plus, there's 40 years of such code
[21:59:15] <cryptonector> tons of code assumes that the space between 0 and the highest FD number is not sparse, and that FDs are generally small-numbered
[21:59:17] <GyrosGeier> but any code that assumes stuff like accept(3, NULL, NULL) == 4 is going to have a bad time
[21:59:29] <cryptonector> of course
[21:59:37] <cryptonector> not much code makes that assumption
[21:59:53] <GyrosGeier> and I can close fd 4 without closing fd 5, and any code that breaks because of that is still broken
[22:00:04] <cryptonector> correct
[22:00:17] <sham1> Where in POSIX is that actually mandated that the FD actually be the lowest free one
[22:00:33] <cryptonector> but if the next FD were 1,000,000 higher than the last one...
[22:00:38] <cryptonector> sham1: oh, somewhere
[22:00:48] <cryptonector> I'd have to look, but right now I've to eat
[22:00:49] <GyrosGeier> that would make select() annoying
[22:00:50] <rsjw> could you implement input/output redirections without the lowest available one being used?
[22:01:00] <koollman> and some code loops on all FD until FD_MAX, and that's ... interesting :)
[22:01:02] <GyrosGeier> but other than that it would be fine
[22:01:05] <cryptonector> rsjw: yes: using dup2()
[22:01:28] <fizzie> sham1: https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/functions/V2_chap02.html#tag_15_14 "All functions that open one or more file descriptors shall, unless specified otherwise, atomically allocate the lowest numbered available (that is, not already open in the calling process) file descriptor at the time of each allocation."
[22:01:29] <candide> Title of fizzie's link: General Information
[22:01:31] <koollman> (once I wondered why a server would take so long starting on a machine and not another.... it was busing closing all fd, already closed, of course)
[22:01:43] <GyrosGeier> yes
[22:01:54] <GyrosGeier> that is workaround code for other code not using CLOEXEC
[22:02:12] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[22:02:27] <koollman> yeah, but sometimes, the maximum number of fd is actually quite high, and looping on syscalls is suboptimal :)
[22:03:08] <GyrosGeier> yup, it should not be done
[22:03:08] <sham1> Yes
[22:06:52] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[22:08:08] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[22:10:53] *** Joins: mrig (~mrig@user/mrig)
[22:13:01] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f) (Ping timeout: 240 seconds)
[22:13:44] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:14:03] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[22:14:11] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[22:14:41] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:15:26] *** lukedashjr is now known as luke-jr
[22:18:07] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:20:13] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[22:20:29] *** Joins: mikoto-chan (~mikoto-ch@dsl-olubng12-54fa07-26.dhcp.inet.fi)
[22:22:57] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:24:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[22:24:42] *** lukedashjr is now known as luke-jr
[22:26:14] *** Joins: Akuli (~Akuli@87-94-110-193.bb.dnainternet.fi)
[22:26:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:27:01] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.158)
[22:27:32] *** Quits: pucara (~i@181.91.29.65) (Quit: Lost terminal)
[22:28:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:28:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:28:52] *** Joins: wroathe (~wroathe@user/wroathe)
[22:29:18] *** Quits: peve (~peve@185.65.135.248) (Quit: Leaving)
[22:29:21] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[22:33:48] *** Joins: gareppa (~gareppa@user/gareppa)
[22:34:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:35:09] *** Joins: MrFantastik (~f@2607:f598:bbda:250:b0ab:6263:8d63:381b)
[22:35:35] *** Joins: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net)
[22:36:14] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:38:42] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[22:38:57] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:44:18] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[22:45:03] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:41] *** clockwor1girl is now known as clockworkgirl
[22:45:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:45:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:45:43] *** Joins: wroathe (~wroathe@user/wroathe)
[22:46:46] *** Quits: clockworkgirl (sophie@funkykitty.net) (Changing host)
[22:46:46] *** Joins: clockworkgirl (sophie@user/clockworkgirl)
[22:47:31] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:49:15] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Remote host closed the connection)
[22:49:35] *** Joins: meator (~meator@user/meator)
[22:50:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:53:22] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Remote host closed the connection)
[22:54:05] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[22:54:08] *** Joins: ewwegweg_ (~ewwegweg@user/ewwegweg)
[23:00:06] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[23:00:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:00:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:00:11] *** Joins: wroathe (~wroathe@user/wroathe)
[23:01:20] *** Joins: vicfred (~vicfred@user/vicfred)
[23:02:27] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[23:03:41] <kit> `Segmentation fault`
[23:05:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:05:25] <fizzie> ,works
[23:05:25] <candide> It works it works! Omg omg omg! I mean it compiles. Now what's a segfault?
[23:05:52] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:06:49] <kit> lol
[23:09:09] <sham1> If it compiles, it works. Obviously
[23:09:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[23:10:01] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[23:10:35] *** Joins: u0_a391 (~u0_a391@2600:380:a400:48c:cd2a:f3c2:31a6:1f35)
[23:10:55] *** u0_a391 is now known as Kit_
[23:11:56] *** Joins: agonhajdari (~textual@user/agonhajdari)
[23:14:19] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:14:19] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:14:19] *** Joins: wroathe (~wroathe@user/wroathe)
[23:14:33] *** Quits: kit (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[23:15:37] *** Quits: craekz (~craekz@user/craekz) (Ping timeout: 240 seconds)
[23:16:04] *** Joins: echoSMILE (uid504326@user/echosmile)
[23:19:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:23:05] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:25:27] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[23:27:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[23:27:38] *** Joins: stonkey (~stonkey@user/stonkey)
[23:28:09] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[23:28:23] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:30:01] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[23:35:21] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[23:35:25] *** Quits: alch (~alch@151.36.35.202) (Read error: Connection reset by peer)
[23:38:47] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f)
[23:39:15] *** Joins: Betal (~Betal@user/betal)
[23:39:50] *** Joins: alch (~alch@151.36.31.19)
[23:40:25] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Remote host closed the connection)
[23:40:51] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[23:41:55] *** Joins: Mentor (~Ionut@92.86.217.127)
[23:42:12] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[23:42:14] *** Joins: constxd (~brad@142.134.38.68)
[23:42:35] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:44:10] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:44:29] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[23:44:54] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[23:44:57] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[23:45:24] <cryptonector> koollman: the standard trick to close all FDs > 2 is to readdir /proc/self/fd/...
[23:45:30] *** Quits: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net) (Quit: Konversation terminated!)
[23:45:35] *** u0_a391 is now known as Kit
[23:45:46] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:46:10] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:46:13] <sham1> That sounds horrible and also Linux-specific
[23:46:35] <cryptonector> works on Illumos, BSDs, Linux
[23:46:57] <cryptonector> http://src.illumos.org/source/xref/illumos-gate/usr/src/lib/libc/port/gen/closefrom.c?r=7257d1b4#138
[23:46:58] <candide> Title of cryptonector's link: closefrom.c (revision 7257d1b4) - OpenGrok c​ross reference for /illumos-gate/usr/src/lib/libc/port/gen/closefrom.c
[23:46:59] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 268 seconds)
[23:47:17] *** Quits: Kit_ (~u0_a391@2600:380:a400:48c:cd2a:f3c2:31a6:1f35) (Ping timeout: 240 seconds)
[23:47:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:47:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:47:40] *** Joins: wroathe (~wroathe@user/wroathe)
[23:47:57] *** Joins: Plazma (~Plazma@user/plazma)
[23:48:14] *** Parts: Plazma (~Plazma@user/plazma) ()
[23:48:52] <sham1> Doesn't work on OpenBSD
[23:49:11] <cryptonector> there's no /proc/self/fd or /dev/fd on OpenBSD??
[23:49:50] <fizzie> `lsof` manages to work on many kinds of systems, so presumably even on less /proc-fanciful ones there's _some_ way of getting that information.
[23:50:13] <sham1> I know for a fact that there's no /proc
[23:50:19] *** Joins: pucara (~i@181.91.29.65)
[23:50:19] <sham1> But yeah, there's probably some other interface
[23:50:42] <cryptonector> https://man.openbsd.org/OpenBSD-5.5/mount_procfs.8
[23:52:04] <cryptonector> oh wow, it's not there on newer ones
[23:52:32] <dmlloyd> linux did everything-as-a-magic-file so I guess BSD must do the opposite :)
[23:52:44] <dmlloyd> everything as a fcntl? everything as a syscall?
[23:52:44] *** Quits: Teukka (~teukka@user/Teukka) (Read error: Connection reset by peer)
[23:52:58] <dmlloyd> sysconf maybe
[23:53:12] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[23:53:26] <cryptonector> I believe /proc was a BSD invention
[23:54:18] <cryptonector> https://en.wikipedia.org/wiki/Procfs#History
[23:54:19] <dmlloyd> https://en.wikipedia.org/wiki/Procfs#History
[23:54:22] <dmlloyd> lol
[23:54:24] <sham1> plan9
[23:54:31] <dmlloyd> unix v8 :)
[23:54:34] <cryptonector> ^^
[23:55:49] <dmlloyd> freebsd has a linux-compatible one called linprocfs
[23:56:15] <dmlloyd> why would you want to close all FDs though...
[23:56:18] *** Joins: Teukka (~teukka@84-216-41-232.customers.ownit.se)
[23:56:18] *** Quits: Teukka (~teukka@84-216-41-232.customers.ownit.se) (Changing host)
[23:56:18] *** Joins: Teukka (~teukka@user/Teukka)
[23:56:25] <dmlloyd> usually you'd rely on CLOEXEC or similar I would think!
[23:56:33] <dmlloyd> (for the only use case I can think of)
[23:56:43] <dmlloyd> imagine if some library had a couple FDs open and you nuked them
[23:57:06] <dmlloyd> other than exec, just close things when you're done with them...
[23:58:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:58:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[23:58:58] <constxd> for (int i = 0; i < 5000; ++i) close(i);
[23:59:17] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Ping timeout: 240 seconds)
