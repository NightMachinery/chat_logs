[00:00:26] <grawity> zln: if the system is designed so that the clients are going to be local (and specifically, that they'll be connecting to you via AF_UNIX sockets and not via IP), then yes, you can actually send further "socket" objects across a socket
[00:00:40] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[00:00:48] <Swayze> if security will be an issue then consider packet sniffing and such things and encrypting your comms
[00:01:01] <grawity> zln: e.g. make a socketpair(), send one end to client A, other end to client B, it's occassionally done (e.g. with D-Bus on Linux)
[00:01:08] <zln> grawity: I'm using AF_INET family, maybe I can change that if it's not as easy
[00:01:20] <zln> ah
[00:01:25] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[00:01:32] <zln> I wondered what tha socket.socketpair was good for :)
[00:01:36] <grawity> zln: AF_INET counts as "across the network" – doesn't matter if it's just via localhost or 127.0.0.1, it's still "network" and doesn't have any local magic
[00:01:50] <zln> grawity: sorry for misunderstanding
[00:01:53] <zln> :)
[00:02:10] <axisys> how do I hide an error? I can create a page from scratch with this command, but it says can't find 'mypage' .. which is misleading since it does create the page.
[00:02:13] <axisys> https://atlassian-python-api.readthedocs.io/confluence.html#page-actions
[00:02:30] <grawity> zln: across the network in general, actual socket objects cannot be sent, just data – so in that case you would need to send just the IP addresses and ports of each peer to the other
[00:02:34] <axisys> confluence.create_page(space, title='mypage', body, parent_id=None, type='page', representation='storage', editor='v2')
[00:02:49] <Swayze> you might try asking that in an atlassian forum
[00:03:07] <zln> grawity, Swayze thanks for help.
[00:03:12] <zln> and the others :)
[00:03:28] <axisys> Swayze: in the meantime I was trying to do it like in bash 2>/dev/null
[00:03:42] <axisys> because it creates the page 100% of the time
[00:03:54] <grawity> if the system is inherently local, changing AF_INET to AF_UNIX should be fairly simple, the only big change is that instead of (IP, port) the address is now a path string like "/tmp/myapp.socket"
[00:04:01] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 250 seconds)
[00:04:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[00:04:50] *** Quits: AsenMx (~AsenMx@user/asenmx) (Read error: Connection reset by peer)
[00:05:22] <grawity> zln: and regarding sending sockets (or any other file descriptor) via an AF_UNIX socket, search for "SCM_RIGHTS"
[00:05:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:05:55] *** Joins: AsenMx (~AsenMx@user/asenmx)
[00:06:42] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:07:41] <zln> grawity: thanks, I will do that
[00:08:06] <zln> thanks for the path-like adress tip :D
[00:08:45] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[00:08:54] <axisys> try: except: did not hide that message .. hmm
[00:09:54] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:09:55] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Quit: Client closed)
[00:10:11] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[00:10:21] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[00:11:13] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[00:12:13] <FluffyMask> go rust
[00:12:20] <FluffyMask> whoops
[00:12:29] *** Joins: Viewday12 (~Viewday@user/viewday)
[00:13:20] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[00:13:24] *** Joins: aphysically (~aphysical@user/aphysically)
[00:13:37] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:13:39] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[00:14:07] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:14:07] *** Viewday12 is now known as Viewday1
[00:15:02] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Ping timeout: 256 seconds)
[00:15:39] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Client Quit)
[00:15:59] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[00:16:09] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Client Quit)
[00:16:29] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[00:16:42] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[00:18:18] *** Quits: Harlin (~DonQixote@75-163-144-60.clsp.qwest.net) (Quit: Leaving)
[00:19:01] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Client Quit)
[00:19:19] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[00:20:01] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[00:20:28] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[00:21:02] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[00:22:58] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:23:09] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[00:25:41] *** Joins: yaalon (~yaalon@24.243.76.137)
[00:25:53] *** Joins: Valeria (~Valeria@user/valeria)
[00:26:43] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 268 seconds)
[00:27:02] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[00:27:27] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[00:27:56] *** {HD}_ is now known as {HD}
[00:30:01] *** Joins: TJ- (~root@about/linux/staff/tj-)
[00:31:39] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:31:39] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Quit: Client closed)
[00:33:21] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[00:33:31] *** Joins: Viewday18 (~Viewday@user/viewday)
[00:33:37] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[00:33:55] *** Quits: JavaBean (~JavaBean@user/javabean) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[00:34:08] <EvilDMP> I find myself quite torn about using docstrings. It seems like a really good idea, to put basic information about e.g. a method right into to the code where you've written the method, so that you can update them at the same time easily.
[00:34:08] <EvilDMP> On the other hand, as soon as the docstring is more than a few lines long, it means that there's more to wade through when working on code itself. Worse, if you're writing docstrings in say rST, they become less useful in the code the more formatting etc you apply to make them useful in the compiled documentation.
[00:34:08] <EvilDMP> And if you try to compromise by putting a short docstring in the code and add more in the documentation separately, you now find yourself having to see both the code and documentation source side-by-side in order to know what the output will be in the documentation.
[00:34:25] <EvilDMP> So I end up doing nothing.
[00:34:31] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:35:23] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:35:23] *** Viewday18 is now known as Viewday1
[00:35:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:35:45] <SnoopJ> EvilDMP, have you considered trying an editor that can fold docstrings away?
[00:35:53] *** Quits: pigweed (~pigweed@97.119.229.243) (Quit: Leaving)
[00:36:02] <grym> EvilDMP: docstring folding and numpydoc are pretty good
[00:36:40] *** Joins: sedeki (~textual@user/sedeki)
[00:36:40] <EvilDMP> I'll see if TextMate can do that.
[00:37:19] *** Joins: javabean (~javabean@user/javabean)
[00:38:47] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[00:39:14] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[00:39:35] <EvilDMP> And numpydoc looks nice.
[00:39:36] <nomic> u can have optionall subroutine parameters methodname(a,b="") so u just call methodname(a) .. can you have  optional returns? so that x,y,z = methodname ... it may only in the code x,y=methodname
[00:39:47] *** Quits: stockholm (~Andreas@p200300d2c708e00069139500aa25ed3d.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[00:39:50] *** Joins: Bakunin (~Lindis@user/lindis)
[00:40:20] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:cc10:49db:476c:b0a6)
[00:41:08] <grym> nomic: you can return a 2- or 3-tuple, if you want, but then you'll need to 1. know this 2. know that it's going to happen, and 3. `x, y, *rest = methodname()` everywhere
[00:41:12] <grym> which is usually pretty ugly
[00:41:22] <yuesbeez> For the last code block on this webpage, how should parent Localizer class be implemented that includes methods that each subclass can use? https://www.geeksforgeeks.org/factory-method-python-design-patterns/
[00:41:38] <axisys> Swayze: created an issue, hopefully they will have a "new" fix
[00:41:42] <axisys> Swayze: https://github.com/atlassian-api/atlassian-python-api/issues/883
[00:42:22] <nomic> ok thanks
[00:42:32] *** Parts: kronicmage (user72429@neotame.csclub.uwaterloo.ca) (WeeChat 3.0.1)
[00:42:54] <yuesbeez> I found this example, but it is too complex for my use case as I just need that layer of abstraction for FastExporter/HighQualityExporter/MasterQualityExporter but not the deeper layer of specific audio codecs https://github.com/ArjanCodes/2021-factory-pattern/blob/main/after.py
[00:42:57] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:cc10:49db:476c:b0a6) (Client Quit)
[00:43:20] <grym> nomic: this isn't a great answer either but another option is to always return the same n- n-tuple but to None some of the entries
[00:43:28] <grym> that doesn't taste great though
[00:44:05] <yuesbeez> In the github example the factory is done as a separate read_factory() that returns and ExporterFactory. The first example the Factory directly returns a localizer class, which is more similar to my example
[00:45:19] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[00:45:21] *** Joins: stockholm (~Andreas@p200300d2c708e00069139500aa25ed3d.dip0.t-ipconnect.de)
[00:47:14] *** Joins: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net)
[00:48:30] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:cc10:49db:476c:b0a6)
[00:50:39] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:cc10:49db:476c:b0a6) (Client Quit)
[00:50:55] *** Quits: Narrat (~omnius@p200300df5f0ba03406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:51:06] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[00:51:15] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[00:51:23] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 268 seconds)
[00:55:55] *** Quits: CoolerX (~user@user/coolerx) (Quit: leaving)
[00:56:01] *** Joins: AsenMx (~AsenMx@user/asenmx)
[00:56:35] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[00:56:36] *** Joins: inertia (~inertia@gateway/vpn/pia/inertia)
[00:58:02] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[00:59:14] *** Quits: mike18_ (~geri@217-149-160-150.nat.highway.telekom.at) (Remote host closed the connection)
[00:59:47] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd)
[01:00:10] *** Quits: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl) (Ping timeout: 260 seconds)
[01:00:14] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[01:01:55] *** Joins: al3kt0 (~alex@gateway/tor-sasl/al3kt0)
[01:03:23] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:04:50] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Ping timeout: 260 seconds)
[01:05:26] *** Joins: Auron (Auron956@user/auron)
[01:05:37] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[01:06:10] *** Joins: djapo (~archangel@user/djapo)
[01:06:25] *** Parts: al3kt0 (~alex@gateway/tor-sasl/al3kt0) (WeeChat 3.0.1)
[01:07:01] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[01:08:49] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[01:09:11] *** Quits: amo (~amogorkon@port-92-196-112-168.dynamic.as20676.net) (Quit: just use()!)
[01:09:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[01:09:49] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[01:10:02] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[01:10:24] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:13:35] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd) (Quit: Client closed)
[01:14:56] *** Joins: Viewday19 (~Viewday@user/viewday)
[01:16:16] *** Joins: aphysically (~aphysical@user/aphysically)
[01:16:32] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 246 seconds)
[01:16:35] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:16:35] *** Viewday19 is now known as Viewday1
[01:17:51] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[01:18:07] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[01:18:17] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:14eb:2bb0:cf4c:8078) (Remote host closed the connection)
[01:22:13] *** Joins: parv (~quass@user/parv)
[01:22:23] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[01:22:43] *** Joins: alzgh (~alzgh@user/alzgh)
[01:23:45] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 250 seconds)
[01:24:12] *** Quits: chatcat (~chatcat@ip-24-53-119-61.user.start.ca) (Read error: Connection reset by peer)
[01:25:06] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:26:17] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:26:27] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[01:26:43] *** Joins: chatcat (chatcat@gateway/vpn/airvpn/chatcat)
[01:27:19] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:27:43] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:28:43] <nyuszika7h> why does .replace() work but re.sub() doesn't with special control characters on bytes?
[01:28:46] <nyuszika7h> https://bpa.st/4G7Q
[01:29:17] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[01:29:26] <nyuszika7h> (ignore line 4, I messed up the copy-paste)
[01:30:09] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:30:55] <nedbat> nyuszika7h: regex should use r"" strings
[01:30:55] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[01:31:22] <nyuszika7h> I'm purposefully not using r"" because the docs say escape sequences are invalid in bytes patterns
[01:31:26] <nyuszika7h> and it errors out on it too
[01:31:45] <parv> Lack or "r" in  r"" bites me once in a while.
[01:32:02] *** iphone is now known as spiderman
[01:32:03] <nedbat> nyuszika7h: your pattern is just literal text.  Why use regex?
[01:32:05] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[01:32:13] <nyuszika7h> this is a simplified example
[01:32:24] <nyuszika7h> I wanted to do more, but I checked and even literal replacement fails
[01:32:58] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[01:33:06] <nyuszika7h> the actual idea would be: data = re.sub(b"(tfhd\x00\x00\x00\x2a).{4}", b"\\g<1>" + tfhd_data[4:8], data)
[01:34:23] <parv> How would the replacement part work if it is b''?
[01:34:32] *** Quits: harpia (~harpia@143.208.84.235) (Quit: harpia)
[01:34:47] <nedbat> nyuszika7h: the problem is that your data includes a star
[01:34:55] <Repiphany> nyuszika7h: \x2a is "*" so your regex doesn't match
[01:34:57] <nyuszika7h> oh
[01:35:05] <Repiphany> re.escape(pattern) would work
[01:35:38] *** Joins: aphysically (~aphysical@user/aphysically)
[01:36:47] <SnoopJ> nyuszika7h, as for your question "why": because bytes.replace() looks for the exact subsequence you specify, but re.sub() gives the b"*" special meaning
[01:36:54] *** Quits: magla (~gelignite@55d416cc.access.ecotel.net) (Quit: Stay safe!)
[01:37:05] <nyuszika7h> yeah, I get it now since it's a *
[01:37:26] *** Quits: grooverman__ (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[01:38:15] *** Joins: grooverman (~grooverma@179.99.123.165)
[01:38:42] *** Quits: sidj (~sid@user/sidj) (Remote host closed the connection)
[01:38:57] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:39:24] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:41:01] *** Joins: Viewday1 (~Viewday@user/viewday)
[01:42:05] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 246 seconds)
[01:42:11] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[01:43:21] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[01:44:35] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[01:46:05] *** Joins: inertia_ (~inertia@gateway/vpn/pia/inertia)
[01:47:19] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[01:48:29] *** Quits: inertia (~inertia@gateway/vpn/pia/inertia) (Ping timeout: 256 seconds)
[01:49:01] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[01:49:01] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[01:49:26] *** Joins: ano (~ano@user/ano)
[01:49:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:51:13] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:52:13] *** Joins: Viewday14 (~Viewday@user/viewday)
[01:53:53] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:53:53] *** Viewday14 is now known as Viewday1
[01:54:28] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[01:56:08] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[01:56:11] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 264 seconds)
[01:56:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[01:58:33] *** Joins: fikran (~fikran@user/fikran)
[01:58:48] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[02:00:12] *** Joins: Naan (~naan@user/naan)
[02:00:59] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:03:04] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[02:05:32] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 246 seconds)
[02:05:53] *** Joins: zebrag (~chris@user/zebrag)
[02:06:44] *** Quits: cosimone (~user@93-44-184-123.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:06:54] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:07:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:07:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:08:25] *** Joins: elkclone (~elkclone@user/elkclone)
[02:08:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:09:28] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:09:33] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[02:10:11] *** Quits: inertia_ (~inertia@gateway/vpn/pia/inertia) (Quit: bye)
[02:10:55] *** Joins: iloveopenbsdizzl (~iloveopen@104-1-37-155.lightspeed.miamfl.sbcglobal.net)
[02:12:18] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[02:12:58] *** Joins: finsternis (~X@23.226.237.192)
[02:13:16] *** Joins: Viewday14 (~Viewday@user/viewday)
[02:13:51] *** Joins: rannnn8888 (~rannnn888@bzq-85-130-144-96.static-ip.bezeqint.net)
[02:14:20] *** Joins: ska (~ska@user/ska)
[02:14:40] <ska> Is there some way to mark an entire folder as "unit" for pytest?
[02:14:50] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 260 seconds)
[02:14:55] <ska> We have folder hierarchy that is all unit.
[02:15:01] <ska> test.
[02:15:07] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:15:07] *** Viewday14 is now known as Viewday1
[02:15:34] *** Joins: aphysically (~aphysical@user/aphysically)
[02:15:52] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Ping timeout: 268 seconds)
[02:16:55] *** Quits: iloveopenbsdizzl (~iloveopen@104-1-37-155.lightspeed.miamfl.sbcglobal.net) (Quit: Client closed)
[02:17:11] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 264 seconds)
[02:17:53] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:19:20] <rannnn8888> dadsa = "20211109  18:00:00" idea how change to date easy ? 2021/11/09
[02:19:34] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 268 seconds)
[02:20:27] *** Joins: alex11 (~alex11@user/alex11)
[02:20:53] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[02:22:12] <bparker> rannnn8888: are you asking how to change the first date string into the second? one way would be with a regex
[02:22:27] *** Joins: aphysically (~aphysical@user/aphysically)
[02:22:35] *** Joins: iloveopenbsdizzl (~iloveopen@104-1-37-155.lightspeed.miamfl.sbcglobal.net)
[02:22:35] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 264 seconds)
[02:22:44] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[02:23:02] *** Quits: stockholm (~Andreas@p200300d2c708e00069139500aa25ed3d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:23:03] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 256 seconds)
[02:23:04] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[02:23:40] <rannnn8888> maybe by this ? (s[0:4]+"/"+s[4:6]+"/"+s[6:8])
[02:23:52] <bparker> wat
[02:23:58] <parv> Using datetime: strptime() to parse with '%Y%m%d  %H:%M:%S'; then strftime() with '%Y/%m/%d'
[02:24:15] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:24:22] <parv> ... to convert to string
[02:25:04] <bparker> rannnn8888: yes that is one method
[02:26:08] <bparker> >>> re.sub(r'(\d{4})(\d{2})(\d{2}).*', '\\1/\\2/\\3', '20211109  18:00:00')
[02:26:08] <bparker> '2021/11/09'
[02:26:39] <bparker> TMTOWTDI
[02:26:47] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 264 seconds)
[02:27:11] <Togra> going through datetime I think would be pretty straightforward
[02:27:18] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:27:23] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[02:27:54] <bparker> although a lot more logic is involved, it would have the benefit of (maybe?) validating the date
[02:27:56] *** Joins: sagax (~sagax_nb@user/sagax)
[02:29:01] *** Joins: mimmy (~mimmy@72.142.88.18)
[02:29:13] <rannnn8888> bparker i make this https://bpa.st/QJFA
[02:29:54] *** Quits: iloveopenbsdizzl (~iloveopen@104-1-37-155.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[02:29:56] <rannnn8888> i need this dynmic my date i get in string like this and want change him to datetime to save my sqlite
[02:31:02] <bparker> why are you doing it that way
[02:31:06] <parv> bparker, Yeah, re: date-time validation; else would have mentioned string slices
[02:31:09] <SnoopJ> ska, I think you could modify the tests at collection time from the conftest.py, not sure if there's some other way to do it.
[02:31:13] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:24] <bparker> what was wrong with strptime with the original '%Y%m%d  %H:%M:%S'
[02:31:28] <bparker> then you don't need all the slicing
[02:31:29] *** Joins: xardas (~xardas@149.233.51.127)
[02:31:39] <bparker> it can be shortened to 1 line
[02:31:47] <parv> Nothing wrong.
[02:32:41] <parv> I mentioned that if one was into premature (micro) optimization.
[02:32:48] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:33:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:33:26] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 245 seconds)
[02:33:48] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[02:34:13] *** Joins: Viewday14 (~Viewday@user/viewday)
[02:34:45] <SnoopJ> ska, if you did that it'd look something like this, but I think you'd need to look at where the item lives in the tree to do what you want: https://docs.pytest.org/en/latest/example/markers.html#automatically-adding-markers-based-on-test-names
[02:35:52] *** Joins: vit (~vit@chello085216193138.chello.sk)
[02:36:05] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:36:05] *** Viewday14 is now known as Viewday1
[02:36:14] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 268 seconds)
[02:36:47] *** haise01_ is now known as Haise01
[02:37:30] <nedbat> ska: I don't understand what you want to change. what does it mean to mark something as "unit"?
[02:38:03] *** Joins: Atque (~Atque@user/atque)
[02:38:32] * SnoopJ wondered the same thing
[02:40:33] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[02:43:13] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[02:43:26] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 245 seconds)
[02:43:29] *** Haise01 is now known as Haise0
[02:46:05] *** Joins: PJBoy (~PJBoy@user/pjboy)
[02:46:48] *** Quits: rannnn8888 (~rannnn888@bzq-85-130-144-96.static-ip.bezeqint.net) (Quit: Client closed)
[02:47:14] *** Joins: mimmy (~mimmy@72.142.88.18)
[02:47:39] *** Quits: Tas-sos (~Tas-sos@46-174-70.adsl.cyta.gr) (Quit: Lost terminal)
[02:47:42] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[02:48:24] *** Joins: onichomp (~onichomp@2806:264:4404:805a:d92:1932:9ead:b12e)
[02:48:32] *** Quits: R0b0t1` (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Quit: WeeChat 3.3-dev)
[02:49:17] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:49:51] *** Joins: Viewday19 (~Viewday@user/viewday)
[02:50:32] *** Joins: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3)
[02:51:04] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:51:04] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[02:51:30] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:51:30] *** Viewday19 is now known as Viewday1
[02:53:24] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[02:53:53] *** Quits: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net) (Quit: Leaving)
[02:56:06] *** Joins: gggpkm (~gggpkm@125.33.82.254)
[02:56:41] <sveinse> Does anyone know if there exists a thread safe lock for asyncio, akin to what janus provides for Queue? janus would fit the bill except in this case I need a one to many signalling, like with threading.Condition.
[02:57:37] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[02:58:29] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd)
[02:58:54] <stewie925> hey guys, I have issue with this code segment - https://bpa.st/PO7A
[02:59:21] <grym> stewie925: well, i wrote it; what's up
[02:59:42] <stewie925> hi grym
[02:59:51] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:59:59] <stewie925> when I run 'json.dumps(results)' it returns `'[{"null": ["FirstName", "LastName", "Email"]}, {"null": ["John", "Doe", "johndoe@bogusemail.com"]}, {"null": ["Dave", "Smith", "davesmith@bogusemail.com"]}, {"null": ["Mary", "Jacobs", "maryjacobs@bogusemail.com"]}]'`
[03:00:02] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[03:00:16] <grym> sounds like you still have a leading newline
[03:00:40] *** Quits: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net) (Quit: byyyyyyye)
[03:01:26] <stewie925> how do I fix the leading newline
[03:01:30] <grym> remove it
[03:01:45] *** Joins: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net)
[03:01:47] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:02:35] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:02:35] <grym> probably with https://docs.python.org/3/library/stdtypes.html#str.strip, but you know more about your data than me
[03:02:39] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[03:03:58] <stewie925> yeah I ran with the same lines of code as you have from that patch
[03:04:19] <grym> well, if you have a leading newline, your results make sense
[03:04:22] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Quit: Client closed)
[03:04:30] *** Quits: shawwwn (uid6132@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:04:35] <grym> but if you ran exactly what's in that paste, then i'm confused
[03:04:38] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[03:04:46] <stewie925> running again
[03:04:53] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[03:05:18] <stewie925> what, it works now
[03:05:31] <stewie925> :D
[03:05:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:05:46] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:06:39] <stewie925> amazing!
[03:07:14] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[03:07:36] <stewie925> I see what happened
[03:07:39] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[03:08:00] <stewie925> your first data line is `data = '''FirstName,LastName,Email `
[03:08:40] <stewie925> while mine has the first line as `data = '''` then second line is  `FirstName,LastName,Email`
[03:08:48] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[03:08:59] <bancroft> what's the different between the apt version of graphviz and the pip installation?
[03:09:14] <grym> stewie925: 14:17  han-solo  stewie925: ah, you have an extra newline at the start
[03:09:20] <grym> 18:30  grym  sounds like you still have a leading newline
[03:09:25] <grym> hey, you had a leading newline
[03:09:31] <grym> :)
[03:09:54] <stewie925> grym:  sorry I didnt understand that at the beginning , but now I do
[03:09:59] <stewie925> thanks for your pateince
[03:10:01] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:10:02] <grym> np
[03:10:51] <SnoopJ> bancroft, the thing pip gives you is a binding layer for the thing apt gives you
[03:11:16] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Ping timeout: 256 seconds)
[03:11:57] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[03:12:03] <SnoopJ> the graphviz Python package is basically calling `dot` for you when it is doing the stuff graphviz itself knows how to do
[03:12:13] *** Joins: Viewday16 (~Viewday@user/viewday)
[03:12:22] <SnoopJ> (e.g. turning a .dot into a .pdf)
[03:12:30] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[03:12:41] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:13:29] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:13:29] *** Viewday16 is now known as Viewday1
[03:15:13] *** Quits: servytor (uid525486@id-525486.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:15:15] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:15:58] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 260 seconds)
[03:16:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:16:44] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com)
[03:17:59] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[03:18:27] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:e044:f8df:1dd9:8d03) (Read error: Connection reset by peer)
[03:18:27] *** guenhael1 is now known as guenhael
[03:19:15] *** Joins: mimmy (~mimmy@72.142.88.18)
[03:21:33] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[03:22:26] *** Joins: Pilate (~pilate@pilate.io)
[03:25:02] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 240 seconds)
[03:25:15] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:e044:f8df:1dd9:8d03)
[03:25:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:25:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:26:02] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:26:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:26:57] *** Quits: TJ- (~root@about/linux/staff/tj-) (Remote host closed the connection)
[03:27:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:27:41] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:28:54] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:30:10] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[03:31:22] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[03:31:50] <bjs> bancroft: the apt package contains the actual graphviz program,  you will still need it even to use the pip graphviz library
[03:32:21] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:32:30] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:32:38] *** Joins: TJ- (~root@about/linux/staff/tj-)
[03:37:18] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Quit: Leaving)
[03:37:32] <ablegreen> given a function, how do i get its header (fuinction name + parameters) as a string?
[03:37:41] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[03:39:11] <nedbat> ablegreen: https://docs.python.org/3/library/inspect.html#introspecting-callables-with-the-signature-object
[03:39:20] <bjs> ablegreen: what kind of string?  the `inspect` module can give you a signature object,  which you can use to produce whatever string you need
[03:39:25] <bjs> (see inspect.signature(some_func))
[03:39:26] *** Quits: fury (uid193779@helmsley.irccloud.com) ()
[03:39:39] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[03:40:04] <ablegreen> nedbat: bjs: that's exactly what i was looking for. thank you
[03:40:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[03:40:09] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[03:40:48] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:42:48] *** Joins: ano (~ano@user/ano)
[03:42:57] *** Joins: audiobirb (~audio@user/audio)
[03:43:15] *** Joins: pycurious (~Adium@user/pycurious)
[03:44:12] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:1d7d:b2a6:bcce:595d) (Quit: Textual IRC Client: www.textualapp.com)
[03:44:38] *** Joins: Viewday11 (~Viewday@user/viewday)
[03:44:42] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Ping timeout: 256 seconds)
[03:45:21] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[03:46:21] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:46:21] *** Viewday11 is now known as Viewday1
[03:47:43] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[03:48:03] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[03:48:49] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[03:48:55] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[03:49:10] *** Joins: pycurious (~Adium@user/pycurious)
[03:49:28] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[03:49:39] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:50:53] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 246 seconds)
[03:51:32] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 240 seconds)
[03:52:06] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:5811:1ea8:8cab:4910)
[03:52:24] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:53:48] *** Quits: flagrama (sid145621@hampstead.irccloud.com) (Ping timeout: 244 seconds)
[03:53:48] *** Quits: holbrode (sid339826@tinside.irccloud.com) (Ping timeout: 244 seconds)
[03:54:06] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Ping timeout: 260 seconds)
[03:54:40] *** Quits: liam (sid7517@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[03:54:40] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 260 seconds)
[03:54:50] *** Quits: altendky (sid135382@hampstead.irccloud.com) (Ping timeout: 244 seconds)
[03:54:59] *** Quits: df_data (sid466269@ilkley.irccloud.com) (Ping timeout: 264 seconds)
[03:55:15] *** Quits: hogarius (hogarius@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[03:55:21] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 244 seconds)
[03:55:21] *** Quits: jposer (sid132110@uxbridge.irccloud.com) (Ping timeout: 244 seconds)
[03:55:38] *** Quits: shurane (sid132556@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[03:56:24] *** Quits: st3fan (sid43079@lymington.irccloud.com) (Ping timeout: 268 seconds)
[03:56:27] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:56:46] *** Quits: QuantumCurious (uid526336@id-526336.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[03:57:05] *** Quits: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[03:57:07] *** Quits: ericoc (sid179921@id-179921.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:57:10] *** Quits: davef (sid287421@user/davef) (Ping timeout: 250 seconds)
[03:57:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[03:57:11] *** Quits: the_finn (uid526334@id-526334.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[03:57:17] *** Quits: rpittau (sid346891@id-346891.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:57:21] *** Quits: sparc (sid160069@id-160069.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:57:23] *** Quits: drmessano (drmessano@user/drmessano) (Ping timeout: 264 seconds)
[03:57:23] *** Quits: hardwire (sid415742@id-415742.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[03:57:23] *** Quits: eichin (sid27120@id-27120.tinside.irccloud.com) (Ping timeout: 264 seconds)
[03:57:26] *** Quits: johnny_ (sid481967@id-481967.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:29] *** Quits: arch-geek (uid525804@id-525804.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:57:31] *** Quits: TingPing (sid2800@2a03:5180:f:1::af0) (Read error: Connection reset by peer)
[03:57:32] *** Quits: dohtem (uid524096@user/dohtem) (Ping timeout: 246 seconds)
[03:57:33] *** Quits: Evolver (sid32215@user/evolver) (Read error: Connection reset by peer)
[03:57:33] *** Quits: matthewwilkes (sid500242@2a03:5180:f:5::7:a212) (Read error: Connection reset by peer)
[03:57:33] *** Quits: Tiago_Paolini (sid172748@2a03:5180:f:4::2:a2cc) (Read error: Connection reset by peer)
[03:57:33] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:33] *** Quits: MrNaz (sid133418@id-133418.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:57:34] *** Quits: ballingt (sid190590@id-190590.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:57:34] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:34] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:35] *** Quits: kmikita (uid461814@2a03:5180:f:1::7:bf6) (Read error: Connection reset by peer)
[03:57:35] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Read error: Connection reset by peer)
[03:57:35] *** Quits: lidless (sid523173@id-523173.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:57:35] *** Quits: hwrd (sid64402@2a03:5180:f:2::fb92) (Read error: Connection reset by peer)
[03:57:35] *** Quits: mobius (sid478273@id-478273.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:57:35] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Read error: Connection reset by peer)
[03:57:36] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Ping timeout: 250 seconds)
[03:57:36] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[03:57:36] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Ping timeout: 250 seconds)
[03:57:36] *** Quits: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:37] *** Quits: joel135 (sid136450@2a03:5180:f:4::2:1502) (Ping timeout: 268 seconds)
[03:57:37] *** Quits: mindlesstux (sid18072@user/mindlesstux) (Ping timeout: 268 seconds)
[03:57:37] *** Quits: Knyght (sid365271@2a03:5180:f:1::5:92d7) (Ping timeout: 268 seconds)
[03:57:38] *** Quits: Gaurhoth (sid75085@2a03:5180:f:3::1:254d) (Read error: Connection reset by peer)
[03:57:38] *** Quits: salimfadhley (sid31217@wikipedia/salimfadhley) (Ping timeout: 268 seconds)
[03:57:38] *** Quits: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[03:57:38] *** Quits: jesse-s (sid98646@id-98646.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[03:57:38] *** Quits: Venhal (sid515085@id-515085.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[03:57:39] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:39] *** Quits: seds (sid492514@user/seds) (Read error: Connection reset by peer)
[03:57:39] *** Quits: graingert (sid128301@2a03:5180:f::1:f52d) (Read error: Connection reset by peer)
[03:57:40] *** Quits: TheXAbove (uid526127@user/thexabove) (Read error: Connection reset by peer)
[03:57:40] *** Quits: mustache_ride (sid451683@user/mustache-ride/x-6533344) (Read error: Connection reset by peer)
[03:57:40] *** Quits: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:40] *** Quits: km (sid515529@user/km) (Write error: Connection reset by peer)
[03:57:40] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Write error: Connection reset by peer)
[03:57:40] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Write error: Connection reset by peer)
[03:57:40] *** Quits: Pr0phet (sid505706@id-505706.hampstead.irccloud.com) (Write error: Connection reset by peer)
[03:57:40] *** Quits: EWDurbin (sid38710@id-38710.tinside.irccloud.com) (Write error: Connection reset by peer)
[03:57:40] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:40] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:57:41] *** Quits: BlueShark (sid10311@user/blueshark) (Read error: Connection reset by peer)
[03:57:41] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:57:41] *** Quits: coldmountain (sid484352@2a03:5180:f:1::7:6400) (Read error: Connection reset by peer)
[03:57:41] *** Quits: bjs (sid190364@user/bjs) (Read error: Connection reset by peer)
[03:57:41] *** Quits: circuitbone (sid355934@user/circuitbone) (Read error: Connection reset by peer)
[03:57:41] *** Quits: rburton (rburton@user/rburton) (Write error: Connection reset by peer)
[03:57:42] *** Quits: morgabra (sid500580@user/morgabra) (Read error: Connection reset by peer)
[03:57:42] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:42] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:42] *** Quits: rubin55 (sid175221@2a03:5180:f:4::2:ac75) (Read error: Connection reset by peer)
[03:57:44] *** Lord_of_Life_ is now known as Lord_of_Life
[03:58:01] *** Quits: lk (sid504574@id-504574.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[03:58:03] *** Joins: mimmy (~mimmy@72.142.88.18)
[03:58:17] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[03:58:27] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[03:59:09] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[03:59:56] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:05:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:05:35] *** Joins: Viewday16 (~Viewday@user/viewday)
[04:06:00] <kungp> https://dpaste.org/n66J is there some clever way of doing this so i don't have to commit this?
[04:06:32] *** Joins: Betal (~Betal@user/betal)
[04:07:07] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[04:07:15] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:07:15] *** Viewday16 is now known as Viewday1
[04:07:54] *** Joins: fikran (~fikran@user/fikran)
[04:08:06] *** Joins: pycurious (~Adium@user/pycurious)
[04:08:30] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[04:08:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:08:48] <ali1234> kungp: why are there gaps?
[04:09:12] <ali1234> like what if f == 15?
[04:09:35] <kungp> that shouldn't happen
[04:09:39] <kungp> according to the datasheet
[04:09:43] <ali1234> are you trying to send a message by encoding it as pwm?
[04:09:56] <kungp> i'm reading pwm from a device
[04:10:02] <ali1234> and therefore those other values aren't a valid message?
[04:10:20] <kungp> https://beving.se/images/files/products/datasheets/IR155-32xx-V004_D00115_D_XXEN.pdf page 5 if you're interested :)
[04:10:46] <ali1234> hmm okay
[04:11:05] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:11:07] <ali1234> well, i don't thinkt here is a better way of doing this. you could encode everything in a dict and then loop over it, but it won't really be much better
[04:11:11] <kungp> and the readings are not super exact so i need the +/- 1 ranges
[04:11:54] <ali1234> you could say if abs(f-x) < some threshold
[04:12:25] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[04:12:47] <kungp> yeah, that might look cleaner
[04:13:20] <ali1234> for k, v in table: if abs(f-k) < 1: return v
[04:13:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[04:13:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:13:43] <ali1234> although that doesn't handle the inside of the ifs where you check a second value
[04:13:54] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:e044:f8df:1dd9:8d03) (Quit: guenhael)
[04:14:00] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[04:14:03] *** Joins: dohtem (uid524096@user/dohtem)
[04:14:03] *** Joins: AhmedAmerican (sid470527@ilkley.irccloud.com)
[04:14:03] *** Joins: TheXAbove (uid526127@user/thexabove)
[04:14:06] *** Joins: sparc (sid160069@uxbridge.irccloud.com)
[04:14:11] *** Joins: davef (sid287421@user/davef)
[04:14:11] *** Joins: EWDurbin (sid38710@tinside.irccloud.com)
[04:14:12] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[04:14:15] <ali1234> the code you have now has the benefit of being immediately obvious what it does, as long as you know the context
[04:14:20] <kungp> yeah really annoying structure
[04:14:32] *** Joins: joel135 (sid136450@hampstead.irccloud.com)
[04:14:33] *** Joins: Tips|Cloud (sid62231@ilkley.irccloud.com)
[04:15:53] *** Joins: salimfadhley (sid31217@wikipedia/salimfadhley)
[04:16:30] <kungp> yeah maybe this is ok.. was happy with the rest of the code then i had to write this ugly mfer
[04:16:47] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 246 seconds)
[04:17:34] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Remote host closed the connection)
[04:18:10] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[04:18:53] <kungp> but thanks for making me feel less bad about it :D
[04:19:13] *** Quits: AhmedAmerican (sid470527@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[04:19:39] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:19:49] *** Quits: sparc (sid160069@uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[04:19:49] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Ping timeout: 268 seconds)
[04:19:51] *** Joins: Samian (~s@user/samian)
[04:20:11] *** Quits: EWDurbin (sid38710@tinside.irccloud.com) (Ping timeout: 264 seconds)
[04:20:11] *** Quits: TheXAbove (uid526127@user/thexabove) (Ping timeout: 264 seconds)
[04:20:21] *** Quits: dohtem (uid524096@user/dohtem) (Ping timeout: 256 seconds)
[04:20:26] *** Quits: salimfadhley (sid31217@wikipedia/salimfadhley) (Ping timeout: 268 seconds)
[04:20:26] *** Quits: Tips|Cloud (sid62231@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[04:20:38] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 246 seconds)
[04:21:03] *** Quits: joel135 (sid136450@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[04:21:03] *** Quits: davef (sid287421@user/davef) (Ping timeout: 268 seconds)
[04:21:38] *** Joins: hogarius (hogarius@uxbridge.irccloud.com)
[04:21:41] *** Joins: debnet (sid330295@python/afpy/debnet)
[04:21:42] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:21:47] *** Joins: shurane (sid132556@helmsley.irccloud.com)
[04:21:55] *** Joins: r0bby (r0bby@user/r0bby)
[04:22:03] *** Joins: flagrama (sid145621@hampstead.irccloud.com)
[04:22:07] *** Joins: circuitbone (sid355934@user/circuitbone)
[04:22:14] *** Joins: AhmedAmerican (sid470527@ilkley.irccloud.com)
[04:22:14] *** Joins: TheXAbove (uid526127@user/thexabove)
[04:22:17] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[04:22:23] *** Joins: Wulf (~Wulf@user/wulf)
[04:22:30] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[04:22:39] *** Joins: dohtem (uid524096@user/dohtem)
[04:22:40] *** Joins: sparc (sid160069@uxbridge.irccloud.com)
[04:23:12] *** Quits: sreve (~quassel@p4ff44d0e.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:23:14] *** Joins: LyndsySimon (sid34452@lymington.irccloud.com)
[04:23:14] *** Joins: joel135 (sid136450@hampstead.irccloud.com)
[04:23:34] *** Joins: Tips|Cloud (sid62231@ilkley.irccloud.com)
[04:23:48] *** Joins: rpittau (sid346891@tinside.irccloud.com)
[04:23:50] *** Joins: EWDurbin (sid38710@tinside.irccloud.com)
[04:24:04] *** Joins: ericoc (sid179921@uxbridge.irccloud.com)
[04:24:14] *** Joins: davef (sid287421@user/davef)
[04:24:17] *** Joins: Evolver (sid32215@user/evolver)
[04:24:21] *** Joins: hardwire (sid415742@uxbridge.irccloud.com)
[04:24:23] *** Joins: drmessano (drmessano@user/drmessano)
[04:24:26] *** Joins: graingert (sid128301@tinside.irccloud.com)
[04:24:27] *** Joins: mobius (sid478273@uxbridge.irccloud.com)
[04:24:27] *** Joins: morgabra (sid500580@user/morgabra)
[04:24:33] *** Joins: Gaurhoth (sid75085@ilkley.irccloud.com)
[04:24:36] *** Joins: bjs (sid190364@user/bjs)
[04:24:38] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[04:24:40] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[04:24:41] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[04:24:44] *** Joins: jesse-s (sid98646@hampstead.irccloud.com)
[04:24:45] *** Joins: pjlsergeant (sid143467@hampstead.irccloud.com)
[04:24:45] *** Joins: km (sid515529@user/km)
[04:25:07] *** Joins: salimfadhley (sid31217@wikipedia/salimfadhley)
[04:26:19] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[04:26:24] *** Joins: alex11 (~alex11@user/alex11)
[04:26:37] *** Joins: Viewday16 (~Viewday@user/viewday)
[04:28:17] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:28:17] *** Viewday16 is now known as Viewday1
[04:29:12] *** Quits: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net) (Quit: byyyyyyye)
[04:29:29] *** Joins: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net)
[04:29:54] *** Quits: parv (~quass@user/parv) (Quit: parv)
[04:30:37] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[04:30:53] *** Joins: jkcoxson (~jkcoxson@67.199.177.214)
[04:31:09] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[04:31:34] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[04:31:36] *** Joins: altendky (sid135382@hampstead.irccloud.com)
[04:31:52] *** Joins: st3fan (sid43079@lymington.irccloud.com)
[04:31:55] *** Joins: jposer (sid132110@uxbridge.irccloud.com)
[04:32:04] *** Joins: liam (sid7517@helmsley.irccloud.com)
[04:32:29] *** Joins: sfields (~sfields@2605:a601:adea:7a00:a73:feb1:e03c:b9f5)
[04:33:00] *** Joins: pycurious (~Adium@user/pycurious)
[04:34:18] *** Joins: TingPing (sid2800@helmsley.irccloud.com)
[04:34:20] *** Joins: yuesbeez (uid458354@tinside.irccloud.com)
[04:34:31] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[04:34:41] *** Joins: JayDoubleu (sid339529@hampstead.irccloud.com)
[04:34:43] *** Joins: coldmountain (sid484352@helmsley.irccloud.com)
[04:34:44] *** Joins: sa (sid1055@tinside.irccloud.com)
[04:34:45] *** Joins: braxas (sid508886@lymington.irccloud.com)
[04:34:47] *** Joins: BlueShark (sid10311@user/blueshark)
[04:34:49] *** Joins: hwrd (sid64402@lymington.irccloud.com)
[04:35:05] *** Joins: mindlesstux (sid18072@user/mindlesstux)
[04:35:54] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[04:36:13] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[04:36:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[04:37:28] *** Joins: Venhal (sid515085@uxbridge.irccloud.com)
[04:37:59] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[04:38:46] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:39:18] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:40:33] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:45] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[04:40:56] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 245 seconds)
[04:41:48] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[04:42:02] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[04:42:52] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:43:04] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[04:44:21] *** Joins: arch-geek (uid525804@uxbridge.irccloud.com)
[04:44:27] *** Joins: poiqwepoiqwe (uid525840@hampstead.irccloud.com)
[04:44:28] *** Joins: rburton (rburton@user/rburton)
[04:44:29] *** Joins: Tiago_Paolini (sid172748@hampstead.irccloud.com)
[04:44:30] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[04:44:32] *** Joins: johnny_ (sid481967@hampstead.irccloud.com)
[04:44:32] *** Joins: Pr0phet (sid505706@hampstead.irccloud.com)
[04:44:34] *** Joins: eichin (sid27120@tinside.irccloud.com)
[04:44:44] *** Joins: Pent (sid313808@lymington.irccloud.com)
[04:44:46] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[04:44:50] *** Joins: seds (sid492514@user/seds)
[04:44:52] *** Joins: mustache_ride (sid451683@user/mustache-ride/x-6533344)
[04:45:12] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[04:46:00] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[04:46:09] *** Joins: matthewwilkes (sid500242@uxbridge.irccloud.com)
[04:46:40] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Ping timeout: 260 seconds)
[04:49:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:50:00] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:53:30] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[04:53:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[04:53:32] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 240 seconds)
[04:54:36] *** Joins: Knyght (sid365271@helmsley.irccloud.com)
[04:54:39] *** Joins: cuppajoeman (sid521943@hampstead.irccloud.com)
[04:54:39] *** Joins: MrNaz (sid133418@uxbridge.irccloud.com)
[04:54:39] *** Joins: Sheilong (uid293653@ilkley.irccloud.com)
[04:54:40] *** Joins: ormiret (sid314108@lymington.irccloud.com)
[04:54:42] *** Joins: lk (sid504574@ilkley.irccloud.com)
[04:54:45] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 260 seconds)
[04:55:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:59:48] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:00:50] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[05:02:12] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[05:03:06] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[05:04:38] <stewie925> this room is pretty quiet
[05:05:12] *** Joins: Viewday12 (~Viewday@user/viewday)
[05:05:32] <kungp> indeed
[05:06:49] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:06:49] *** Viewday12 is now known as Viewday1
[05:08:11] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 264 seconds)
[05:09:02] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[05:09:23] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:09:46] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[05:10:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:10:17] *** Joins: pycurious (~Adium@user/pycurious)
[05:16:17] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:16:40] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:19:12] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[05:19:37] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:20:36] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:21:22] *** Joins: Viewday15 (~Viewday@user/viewday)
[05:23:15] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:23:15] *** Viewday15 is now known as Viewday1
[05:24:09] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[05:26:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[05:27:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:28:02] *** Quits: flokuehn (~flokuehn@87.123.247.65) (Ping timeout: 240 seconds)
[05:30:00] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Quit: hej-hej!)
[05:30:03] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[05:30:06] *** Joins: flokuehn (~flokuehn@87.123.247.50)
[05:30:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:32] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[05:30:32] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[05:31:11] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[05:31:20] *** Joins: justache (~justache@user/justache)
[05:31:24] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd) (Quit: Client closed)
[05:33:00] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Ping timeout: 244 seconds)
[05:33:22] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[05:35:48] *** Joins: ckdCreations (~ckdCreati@147.55.133.132)
[05:36:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:38:43] *** Joins: ldp (~leonardod@177.50.192.21)
[05:40:49] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[05:41:46] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 245 seconds)
[05:41:56] *** Joins: Viewday19 (~Viewday@user/viewday)
[05:43:39] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:43:39] *** Viewday19 is now known as Viewday1
[05:45:24] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Ping timeout: 256 seconds)
[05:46:22] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:47:52] *** Quits: davef (sid287421@user/davef) ()
[05:49:04] *** Joins: davef (~quassel@user/davef)
[05:50:48] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:51:38] *** Quits: gggpkm (~gggpkm@125.33.82.254) (Ping timeout: 246 seconds)
[05:52:13] *** Seto_Kaiba is now known as Hunterkll
[05:53:23] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 246 seconds)
[05:53:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:53:57] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[05:54:42] *** Joins: kmikita (uid461814@helmsley.irccloud.com)
[05:54:49] *** Joins: howdoi (uid224@lymington.irccloud.com)
[05:55:06] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 268 seconds)
[05:56:18] *** Joins: gdd (~gdd@129.199.146.230)
[05:57:14] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 246 seconds)
[05:58:04] *** Joins: Viewday13 (~Viewday@user/viewday)
[05:58:14] *** Joins: Fiji (~Fiji@user/fiji)
[05:58:29] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:58:38] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 246 seconds)
[05:59:03] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:59:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:00:05] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:00:05] *** Viewday13 is now known as Viewday1
[06:00:07] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:01:17] *** Joins: madduck (~madduck@user/madduck)
[06:03:43] *** Joins: mgedmin (~mg@user/mgedmin)
[06:04:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[06:05:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:06:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:07:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:09:02] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[06:10:16] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:10:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[06:10:57] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[06:11:52] *** Joins: xardas (~xardas@149.233.51.127)
[06:12:03] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:ad45:eba8:62a8:4c36)
[06:12:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[06:13:00] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[06:13:27] *** Joins: monkey_ (~user@190.104.116.153)
[06:13:39] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 250 seconds)
[06:13:46] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:15:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[06:15:09] *** Joins: parv (~quass@user/parv)
[06:17:15] *** Joins: fikran (~fikran@user/fikran)
[06:18:31] *** Joins: Bakunin (~Lindis@user/lindis)
[06:18:32] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:19:04] *** Joins: brabrax (~brabrax@user/brabrax)
[06:21:07] *** Quits: Sheilong (uid293653@ilkley.irccloud.com) ()
[06:21:44] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:22:02] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[06:22:36] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:23:23] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[06:24:05] <kungp> anyone else tried the openai codex?
[06:24:07] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[06:24:40] *** Quits: davef (~quassel@user/davef) (Quit: Quit)
[06:25:00] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[06:25:26] *** Joins: davef (~quassel@user/davef)
[06:28:17] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 264 seconds)
[06:30:01] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:27] *** Joins: korros (korros@2600:3c03::f03c:92ff:febf:689a)
[06:30:43] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:28] *** Joins: Viewday11 (~Viewday@user/viewday)
[06:31:50] *** Joins: jazzy (~jaziz@user/jaziz)
[06:32:57] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:32:57] *** Viewday11 is now known as Viewday1
[06:33:16] <kungp> https://imgur.com/a/Qko7Z4i it made me a nice tk script from that description :D
[06:35:47] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:35:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:36:46] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[06:37:32] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[06:38:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:39:23] *** Quits: rany (~rany@user/rany) (Killed (strontium.libera.chat (Nickname regained by services)))
[06:39:36] *** Joins: rany_ (~rany@user/rany)
[06:39:54] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[06:40:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[06:40:59] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 246 seconds)
[06:41:50] *** Joins: rany (~quassel@user/rany)
[06:41:51] <audiobirb> how can i stash .pyc files individually (before doing a `git checkout <branch-name>`
[06:41:59] *** Joins: bitreverb (~bitcycle@174-21-36-109.tukw.qwest.net)
[06:42:51] <nedbat> audiobirb: you should .gitignore the .pyc files
[06:43:26] <bitreverb> better yet:  https://www.toptal.com/developers/gitignore/api/python
[06:43:53] <audiobirb> nedbat, i have
[06:43:56] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[06:44:17] <audiobirb> nedbat, *.pyc is in my gitignore
[06:44:32] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[06:44:38] <nedbat> audiobirb: oh, then why do you need to stash them?
[06:44:59] <audiobirb> nedbat, cause i need to change branches. i accidentally edited code on the wrong branch
[06:45:03] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:45:07] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:45:11] <audiobirb> but im getting "the following files will be overwritten by checkout"
[06:45:29] <nedbat> audiobirb: you shouldn't get that message if you have gitignored the files
[06:45:31] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:45:48] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Max SendQ exceeded)
[06:45:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[06:46:01] <audiobirb> nedbat, i can send you a screenshot of my gitignore?
[06:46:04] <audiobirb> it's there dude
[06:46:12] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[06:46:17] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[06:46:27] <nedbat> audiobirb: can you pastebin the .gitignore and the output you are seeing from the command?
[06:46:39] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[06:46:53] <audiobirb> nedbat, gitignore https://dpaste.org/XBM3
[06:47:12] <audiobirb> nedbat, output https://dpaste.org/qftj
[06:47:58] <nedbat> audiobirb: that's odd. I would ask in #git
[06:48:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:48:41] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[06:49:34] <Swayze> gitignore is for files you wish not to push
[06:49:38] <parv> audiobirb, Does "git log" on that file *pyc show anything?
[06:49:40] <Swayze> it doesnt affect you trying to pull a file
[06:50:07] *** Quits: howdoi (uid224@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:50:12] <Swayze> and if that file has changed locally it will warn you as its doing
[06:50:53] <audiobirb> parv, yes
[06:51:07] *** Joins: sarab (~sarab@183.87.117.24)
[06:51:08] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:51:08] *** Quits: jkcoxson (~jkcoxson@67.199.177.214) (Read error: Connection reset by peer)
[06:51:21] <parv> audiobirb, A commit?
[06:51:27] <InPhase> audiobirb: .gitignore only ignores files that are not already part of the repository.
[06:51:30] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[06:51:34] <audiobirb> parv, many commits
[06:51:42] <audiobirb> son of a mother duck
[06:51:49] *** Quits: sarab (~sarab@183.87.117.24) (Remote host closed the connection)
[06:52:01] <audiobirb> well i just want to stash this one file
[06:52:10] <parv> audiobirb, Looks like you might have committed the file that you want to ignore (now?) in past
[06:52:17] <audiobirb> yes
[06:52:35] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[06:53:28] <InPhase> audiobirb: If you want to permanently ignore a file going forward but just in your local copy of the repository, you can use:  git update-index --skip-worktree yourfilehere
[06:53:55] *** Joins: justache (~justache@user/justache)
[06:54:35] <InPhase> audiobirb: That will cause local changes to not be picked up and pushed.  Remote changes will still clober your local changes.
[06:55:14] <InPhase> By "not be picked up" I mean they won't show up in status, nor get grabbed if you try to add all.
[06:55:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:56:05] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:acef:5bc0:2329:c325)
[06:56:10] *** Quits: ldp (~leonardod@177.50.192.21) (Remote host closed the connection)
[06:56:11] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2 - https://znc.in)
[06:56:24] <parv> If the file is actually a cache, I will just remove it (git rm) & let python compile it again. Gone.
[06:56:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:57:22] <InPhase> audiobirb: If on the other hand you just want git to feel comfortable replacing a file, and you know you have a safe copy of what you need, you can just delete the file...
[06:58:14] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[06:59:06] <parv> audiobirb, You may want to check if there are any other cache files are in past history.
[06:59:06] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:acef:5bc0:2329:c325) (Client Quit)
[06:59:38] <parv> audiobirb, Sorry, one too many "are" *argh*
[07:01:04] *** Quits: saribro (~swinnenb@user/swinnenb) (Remote host closed the connection)
[07:01:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:04:27] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[07:04:57] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:04:57] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:04:57] *** finn_elija is now known as FinnElija
[07:05:17] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[07:05:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[07:06:11] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:acef:5bc0:2329:c325)
[07:06:22] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[07:06:29] *** Joins: mcpac82 (~textual@212.25.0.228)
[07:08:37] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:acef:5bc0:2329:c325) (Client Quit)
[07:08:50] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[07:08:54] *** Joins: Viewday10 (~Viewday@user/viewday)
[07:09:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:09:21] *** Quits: rany (~quassel@user/rany) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:09:31] *** Joins: rany (~quassel@user/rany)
[07:10:55] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:10:55] *** Viewday10 is now known as Viewday1
[07:10:56] *** Quits: rany (~quassel@user/rany) (Client Quit)
[07:11:06] *** Joins: rany (~quassel@user/rany)
[07:13:23] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[07:13:56] *** Joins: Sazpaimon (~wat@pool-71-175-29-161.phlapa.fios.verizon.net)
[07:13:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[07:15:36] <Sazpaimon> so say I have a zip file and I want to do something with the decompressed data within. I can't fit the entire file in memory, so I was hoping to see if there's a way to write the file out to a temporary file, and process it as it's being written to, blocking when seeking to an area that hasn't been decompressed yet. Is that something I can do?
[07:16:03] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[07:18:49] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[07:20:06] *** Quits: emf (~emf@2620:10d:c090:400::5:69be) (Ping timeout: 245 seconds)
[07:20:18] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[07:21:55] *** Joins: emf (~emf@2620:10d:c091:480::1:21b3)
[07:22:30] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:23:36] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[07:25:36] *** Joins: Viewday11 (~Viewday@user/viewday)
[07:26:17] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[07:26:44] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:26:44] *** Viewday11 is now known as Viewday1
[07:27:24] *** Joins: xardas (~xardas@149.233.51.127)
[07:30:02] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:30:22] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 268 seconds)
[07:31:28] *** Joins: haasn (~nand@haasn.dev)
[07:33:04] *** Joins: emf_ (~emf@2620:10d:c090:400::5:538d)
[07:33:10] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Quit: Leaving)
[07:34:35] *** Quits: emf (~emf@2620:10d:c091:480::1:21b3) (Ping timeout: 264 seconds)
[07:35:54] *** Quits: greentree (~greentree@pool-71-167-6-205.nycmny.fios.verizon.net) (Quit: greentree)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:39:02] *** Joins: deltab (~deltab@user/deltab)
[07:40:24] *** Quits: parv (~quass@user/parv) (Quit: parv)
[07:41:26] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[07:41:56] *** Joins: Viewday14 (~Viewday@user/viewday)
[07:42:48] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:43:15] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[07:43:47] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:43:47] *** Viewday14 is now known as Viewday1
[07:44:10] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[07:44:23] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:45:39] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[07:45:57] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[07:46:06] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Ping timeout: 256 seconds)
[07:46:17] *** Quits: ckdCreations (~ckdCreati@147.55.133.132) (Read error: Connection reset by peer)
[07:46:33] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:49:02] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 240 seconds)
[07:52:20] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:52:46] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[07:54:32] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 240 seconds)
[07:54:32] *** jmiehe1 is now known as jmiehe
[07:55:02] <TML> Sazpaimon: https://github.com/allanlei/python-zipstream
[07:56:00] *** Joins: madduck (~madduck@user/madduck)
[07:57:37] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:58:03] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[07:58:17] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 264 seconds)
[07:58:34] *** Joins: Viewday13 (~Viewday@user/viewday)
[07:59:19] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:59:19] *** Viewday13 is now known as Viewday1
[07:59:25] *** Quits: eblip (~eb0t@90.199.241.70) (Read error: Connection reset by peer)
[07:59:30] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[08:00:11] *** Joins: lethu (~lethu@user/lethu)
[08:01:21] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:01:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:02:29] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[08:04:49] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:05:02] *** Joins: eblip (~eb0t@90.209.246.132)
[08:05:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[08:06:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:07:37] *** Quits: julia (~quassel@user/julia) (Ping timeout: 250 seconds)
[08:07:40] *** Joins: p-i- (~Ohmu@2001:44c8:460c:9af1:48a2:d6b4:7308:6a84)
[08:08:33] *** Joins: p-i-_ (~Ohmu@2001:44c8:460c:9af1:c4a8:37b4:3be0:2d50)
[08:08:43] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[08:09:28] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Remote host closed the connection)
[08:10:49] *** Quits: yuesbeez (uid458354@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:11:48] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[08:12:10] <Sazpaimon> TML, this looks like its more suited for creating zip files, not extracting from them
[08:12:11] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[08:12:18] *** Quits: p-i- (~Ohmu@2001:44c8:460c:9af1:48a2:d6b4:7308:6a84) (Ping timeout: 268 seconds)
[08:12:39] <Sazpaimon> I want to extract a file from a zip to a temp directory, and read the file as it's being written, blocking if i do something like seek to an offset that hasn't decompressed yet
[08:13:20] <Sazpaimon> maybe this library will work, all the example seem to be zipfile generation though
[08:14:55] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:ad45:eba8:62a8:4c36) (Quit: WeeChat 3.3)
[08:15:03] *** Joins: Viewday10 (~Viewday@user/viewday)
[08:15:07] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:15:19] <TML> Sazpaimon: in the worst case, it's open source, so maybe you can peek inside and see how they made it work with a stream instead of storing everything in RAM
[08:15:40] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[08:16:10] *** Joins: pankid (~quassel@pankid.club)
[08:16:21] *** Joins: JanC (~janc@user/janc)
[08:16:39] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:16:39] *** Viewday10 is now known as Viewday1
[08:17:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:19:33] <Sazpaimon> i mean streaming a file to a zip you're writing to isn't really hard, i dont see how that's applicable
[08:20:00] <Sazpaimon> extracting a file, and reading from that file as its being written to seems like a completely different thing
[08:20:49] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:21:08] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[08:21:41] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:24:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:26:20] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[08:26:36] *** Joins: fikran (~fikran@user/fikran)
[08:27:19] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:30:57] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:31:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[08:32:14] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:32:45] <BrenBarn> I see this: https://github.com/uktrade/stream-unzip
[08:34:05] <Sazpaimon> this basically still reads the file linearly, and puts each chunk into memory. I wanted something on disk so it can be seekable
[08:34:50] <Sazpaimon> I think for now I'll just bite the bullet of extracting to disk and reading the resulting data sequentially
[08:36:21] <BrenBarn> you could write the stream to disk yourself
[08:36:45] <BrenBarn> I mean it's a bit weird to say at the same time you want to "read the file as its being written" but you also want to seek
[08:37:23] <Sazpaimon> thats why I said I would block on seek if it hasn't extracted that far yet
[08:38:11] <BrenBarn> I'm doubtful you're going to find a library that already does that for you
[08:38:34] <BrenBarn> like if you're seeking in a file, you're seeking in a file, the file seek operation doesn't know that the file is a decompressed thing that may not be complete yet
[08:38:48] <BrenBarn> just use a thing that streams it to memory and then write it to disk if you want it on disk
[08:39:00] <BrenBarn> I don't see how that wouldn't accomplish what you want
[08:39:05] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[08:39:13] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[08:39:39] <Sazpaimon> i cant fit it all in memory, and because i'd need random seeking, i'd probably need a complete file in the end
[08:41:14] <BrenBarn> that's why you use a thing that STREAMS it to memory
[08:41:20] <BrenBarn> the stream will not put the whole file in memory
[08:41:23] <BrenBarn> it will stream you the bytes
[08:41:35] <BrenBarn> you can write those bytes to a file and seek around in that file however you please
[08:41:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[08:42:14] <Sazpaimon> right, yeah that's what I'm inevitably going to be doing
[08:46:13] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[08:46:52] *** Joins: frost (~frost@user/frost)
[08:47:02] *** Quits: Linux77 (~Linux7_7@186.233.178.42) (Ping timeout: 240 seconds)
[08:47:55] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[08:47:57] *** Joins: bindu (~bindu@user/bindu)
[08:48:25] *** Joins: iflema (~ian@user/iflema)
[08:49:10] *** stoned is now known as Hash
[08:50:22] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[08:50:37] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[08:50:48] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Remote host closed the connection)
[08:51:01] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[08:51:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[08:51:03] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:51:11] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[08:53:28] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[08:54:27] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:56:31] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:56:50] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:57:35] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:58:15] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[08:58:38] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Ping timeout: 244 seconds)
[08:59:02] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (Quit: BinarySavior has dropped the mic)
[08:59:50] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[09:02:02] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 240 seconds)
[09:02:11] *** Quits: emf_ (~emf@2620:10d:c090:400::5:538d) (Ping timeout: 264 seconds)
[09:02:29] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[09:04:18] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[09:04:46] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[09:06:31] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 256 seconds)
[09:08:52] *** Quits: justyb11 (~justyb@2601:483:500:3ea:ec98:ebd7:cb24:d194) (Quit: Leaving)
[09:09:32] *** Quits: hailhydra (~hailhydra@136.36.153.168) (Ping timeout: 240 seconds)
[09:10:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[09:10:40] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[09:10:56] *** Joins: mcpac82 (~textual@212.25.0.228)
[09:11:59] *** Quits: mcpac82 (~textual@212.25.0.228) (Client Quit)
[09:12:02] *** Joins: alex11 (~alex11@user/alex11)
[09:13:19] *** Joins: binary01 (~binary01@192.110.171.216)
[09:14:00] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[09:14:02] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[09:14:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[09:14:38] *** Joins: xardas (~xardas@149.233.51.127)
[09:15:35] *** Joins: dvx (~dvx@5.181.92.64)
[09:15:40] *** Joins: Viewday15 (~Viewday@user/viewday)
[09:15:55] *** Joins: analoq (~yashi@user/dies)
[09:17:04] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[09:17:51] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:17:51] *** Viewday15 is now known as Viewday1
[09:19:08] *** Joins: millido (~millido@84.210.150.128)
[09:21:08] *** Joins: emf (~emf@163.114.132.5)
[09:22:09] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:23:01] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[09:23:03] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Remote host closed the connection)
[09:23:16] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[09:24:52] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[09:25:05] *** Quits: emf (~emf@163.114.132.5) (Read error: Connection reset by peer)
[09:26:51] *** Joins: emf (~emf@2620:10d:c090:400::5:97af)
[09:29:22] *** Joins: MrSunshine (~MrSunshin@h-212-85-92-190.NA.cust.bahnhof.se)
[09:29:28] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:44] <MrSunshine> humm whas is it called .. those things to translate database queries directly to objects ?
[09:30:22] *** Joins: vigumnov (~victori@cpe-76-174-179-126.socal.res.rr.com)
[09:30:25] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[09:30:26] *** Joins: Abrax- (~Abrax@user/abrax)
[09:30:31] *** Joins: zmt01 (~zmt00@user/zmt00)
[09:33:22] <MrSunshine> orm ...
[09:33:25] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[09:33:26] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 250 seconds)
[09:33:32] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 246 seconds)
[09:33:41] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 264 seconds)
[09:34:43] *** Joins: Viewday15 (~Viewday@user/viewday)
[09:36:33] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:36:33] *** Viewday15 is now known as Viewday1
[09:37:11] *** Joins: Valeria (~Valeria@user/valeria)
[09:37:12] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[09:39:03] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 250 seconds)
[09:40:11] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 246 seconds)
[09:42:12] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:42:57] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:44:16] *** Quits: hailhydra (~hailhydra@136.36.153.168) (Ping timeout: 245 seconds)
[09:47:17] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:47:36] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[09:47:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:48:35] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[09:50:55] *** Joins: binary01 (~binary01@192.110.171.216)
[09:52:03] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:52:06] *** Joins: han-solo (~hanish@user/han-solo)
[09:53:47] *** Quits: p-i-_ (~Ohmu@2001:44c8:460c:9af1:c4a8:37b4:3be0:2d50) (Remote host closed the connection)
[09:55:32] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[09:58:05] *** Joins: rsx (~dummy@ppp-188-174-137-231.dynamic.mnet-online.de)
[09:58:49] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:00:06] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 260 seconds)
[10:01:29] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[10:03:25] *** Seto_Kaiba is now known as Hunterkll
[10:06:47] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[10:08:03] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:08:15] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[10:10:15] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:10:33] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[10:13:39] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[10:13:43] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[10:14:42] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:15:08] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[10:15:16] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:15:26] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[10:15:43] *** Joins: mei3 (~mei@user/mei)
[10:16:47] *** Joins: kostkon (~androirc@2a02:587:a108:5f73:d067:8cf:12ba:3d42)
[10:18:12] *** Joins: djapo (~archangel@user/djapo)
[10:18:29] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[10:19:26] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[10:20:02] *** Quits: dre (~dre@2001:8003:c932:c301:a62b:d5d5:737b:8c68) (Ping timeout: 240 seconds)
[10:20:17] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[10:20:25] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:23:02] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:23:52] *** Joins: binary01 (~binary01@192.110.171.216)
[10:23:54] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[10:27:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:28:44] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:31:06] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:32:16] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[10:32:32] *** Quits: martums (~martums@user/martums) (Ping timeout: 240 seconds)
[10:32:48] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:33:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[10:33:41] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Quit: Konversation terminated!)
[10:34:11] *** Joins: p-i- (~Ohmu@2001:44c8:460c:9af1:245a:9b6b:6efc:d294)
[10:34:44] *** Joins: mcpac82 (~textual@p5dc1c8e6.dip0.t-ipconnect.de)
[10:35:00] *** Quits: oz4ga (~tim@93.90.4.233) (Quit: ZNC 1.8.2 - https://znc.in)
[10:35:22] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[10:35:57] *** Joins: fikran (~fikran@user/fikran)
[10:36:00] *** Joins: sidj (~sidj@user/sidj)
[10:36:04] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:36:20] *** Joins: martums (~martums@user/martums)
[10:37:17] *** Quits: p-i- (~Ohmu@2001:44c8:460c:9af1:245a:9b6b:6efc:d294) (Client Quit)
[10:37:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:38:21] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[10:38:26] *** Joins: vit (~vit@chello085216193138.chello.sk)
[10:39:11] *** Joins: WarpedAI (~Warped@user/warped)
[10:41:43] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 256 seconds)
[10:42:32] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[10:44:23] *** Joins: dre (~dre@2001:8003:c932:c301:95e0:6e2a:a0f5:346)
[10:45:55] *** Joins: gggpkm (~gggpkm@111.63.44.13)
[10:45:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:46:15] *** Joins: upsala (~zcb@185.213.155.252)
[10:47:51] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:54] *** Joins: arinov (~arinov@213.194.126.155)
[10:48:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[10:48:22] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[10:48:48] *** Joins: seednode (~seednode@user/seednode)
[10:49:37] *** Joins: Pixi (~Pixi@user/pixi)
[10:53:20] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Ping timeout: 244 seconds)
[10:53:33] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[10:53:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[10:54:38] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[10:55:03] *** Joins: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de)
[10:55:19] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:56:03] *** Joins: gulzar (~gulzar@14.139.123.36)
[10:58:58] *** Joins: kostkon_ (~androirc@2a02:1388:4083:e523:5e92:111b:f772:7b41)
[11:00:42] <jim> I'm trying to remember the names of 2 debuggers... are pdb and pudb names of?
[11:01:37] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[11:01:58] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[11:02:26] *** Quits: kostkon (~androirc@2a02:587:a108:5f73:d067:8cf:12ba:3d42) (Ping timeout: 246 seconds)
[11:02:30] <rindolf> jim: "-m pdb" is one
[11:03:13] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[11:03:14] <jim> cool, found a debian package for the other :)
[11:03:31] *** Joins: mickey8 (~user@user/mickey)
[11:04:36] *** Quits: onichomp (~onichomp@2806:264:4404:805a:d92:1932:9ead:b12e) (Read error: Connection reset by peer)
[11:05:13] *** Joins: onichomp (~onichomp@2806:264:4404:805a:d92:1932:9ead:b12e)
[11:06:02] *** Joins: Tas-sos (~Tas-sos@46-174-70.adsl.cyta.gr)
[11:06:13] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[11:06:46] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[11:07:13] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Ping timeout: 256 seconds)
[11:07:25] *** Abrax- is now known as Abrax
[11:07:47] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 256 seconds)
[11:08:02] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:08:04] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[11:09:07] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[11:09:25] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:10:08] <gulzar> Hi. Need logical help. I have a dataframe in this format. https://paste.debian.net/1219113/ . Total 8000 files.  different number of rows in each file.  The first column is the key (PRO, TRP), there are only 20 of them in total, which may or maynot present in each file. What I need is to save the value and count for each key for both columns.  In this eg, TRP has two values in "Mean_mem". 4.4, 6.9   so their ccount is 1 each. TRR: 4.9:1  , TP:6.9:1    , let'
[11:10:09] <gulzar> s say in other file, there is 4.9, incease the count to 2. And so on. Same for other ccolumn.   Any ideas how to do it
[11:11:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:11:57] *** Joins: mach`` (~Mach@2a02:2f09:d105:f200:d139:3880:cbb9:4c3d)
[11:12:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[11:12:22] *** Quits: Chex (~Chex@user/chex) (Ping timeout: 260 seconds)
[11:12:28] <raek> jim: pdb is built into python, so it's always available. pudb is super cool!
[11:12:35] *** Quits: kostkon_ (~androirc@2a02:1388:4083:e523:5e92:111b:f772:7b41) (Ping timeout: 246 seconds)
[11:12:55] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[11:13:17] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 264 seconds)
[11:13:51] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-17.home.otenet.gr)
[11:15:32] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[11:15:38] *** Joins: manti7 (~manti7@176.10.104.94)
[11:16:17] *** Joins: greedom (~greedom@x59cc99eb.dyn.telefonica.de)
[11:18:08] *** Quits: mach`` (~Mach@2a02:2f09:d105:f200:d139:3880:cbb9:4c3d) (Quit: q)
[11:18:33] *** Joins: rendar (~rendar@user/rendar)
[11:20:49] *** Joins: han-solo (~hanish@user/han-solo)
[11:21:27] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:21:35] *** Joins: palasso (~palasso@user/palasso)
[11:22:11] *** Quits: elkclone (~elkclone@user/elkclone) (Ping timeout: 250 seconds)
[11:22:23] *** Quits: arti (~arti@193.40.103.195) (Quit: arti)
[11:22:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com) (Ping timeout: 250 seconds)
[11:24:08] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-7cfd-7535-6a92-0681.res6.spectrum.com) (Ping timeout: 246 seconds)
[11:26:11] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-7cfd-7535-6a92-0681.res6.spectrum.com)
[11:26:36] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[11:30:34] *** Quits: tdsmith (~tdsmith@tds.xyz) (Ping timeout: 260 seconds)
[11:30:51] *** Quits: xiaguan (~parsley@2604:180:f1::173) (Ping timeout: 250 seconds)
[11:31:01] *** Quits: MJ94 (mj94@user/mj94) (Quit: ZNC - http://znc.in)
[11:31:03] *** Quits: con3 (~con3@2604:a880:4:1d0::be:d000) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:04] *** Quits: Hash (~stoned@wants.to.know.howstoned.ru) (Remote host closed the connection)
[11:31:07] *** Joins: xiaguan (~parsley@2604:180:f1::173)
[11:31:16] *** Joins: dynos01 (~dynos01@2600:3c01:e000:36a::8400)
[11:31:20] *** Joins: MJ94 (~MJ94@user/mj94)
[11:31:21] *** Joins: con3 (~con3@143.198.53.32)
[11:31:27] *** Joins: Hash (~stoned@wants.to.know.howstoned.ru)
[11:31:30] *** Quits: dynos01_ (~dynos01@2600:3c01:e000:36a::8400) (Read error: Connection reset by peer)
[11:32:32] *** Quits: fructose (~fructose@user/fructose) (Ping timeout: 246 seconds)
[11:32:55] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (Ping timeout: 260 seconds)
[11:33:22] *** Quits: explodes (~explodes@user/explodes) (Ping timeout: 260 seconds)
[11:33:45] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[11:34:20] *** Joins: vlm (~vlm@user/vlm)
[11:34:28] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[11:34:34] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:34:51] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[11:35:02] *** Quits: grooverman (~grooverma@179.99.123.165) (Ping timeout: 240 seconds)
[11:35:19] *** Joins: explodes (~explodes@user/explodes)
[11:35:23] *** Joins: kosh (~kosh@user/kosh)
[11:35:29] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[11:35:30] *** Joins: dkdns (~dkdns@178.49.152.151)
[11:35:47] *** Joins: tdsmith (~tdsmith@tds.xyz)
[11:36:19] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[11:36:30] *** Joins: nek_minnit (~nek_minni@h-98-128-168-226.NA.cust.bahnhof.se)
[11:36:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:37:21] *** Joins: arti (~arti@193.40.103.195)
[11:37:21] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:38:06] <dkdns> it's nice python can be useful for unexpected automation tasks, like file restoration: https://bpa.st/WPJA
[11:39:19] *** Joins: chele (~chele@user/chele)
[11:39:48] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[11:39:48] *** Quits: nek_minnit (~nek_minni@h-98-128-168-226.NA.cust.bahnhof.se) (Client Quit)
[11:40:39] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[11:41:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[11:41:51] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[11:41:59] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:43:28] *** Quits: greedom (~greedom@x59cc99eb.dyn.telefonica.de) (Remote host closed the connection)
[11:43:35] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[11:44:26] *** Joins: abc_ (~abc@user/abc)
[11:44:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:44:51] *** abc_ is now known as zwindl
[11:45:43] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:48:55] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[11:48:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:50:20] *** Quits: dkdns (~dkdns@178.49.152.151) (Ping timeout: 256 seconds)
[11:51:56] *** Joins: lethu (~lethu@user/lethu)
[11:53:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[11:53:41] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[11:54:47] *** Quits: Samian (~s@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[11:55:02] *** Quits: dre (~dre@2001:8003:c932:c301:95e0:6e2a:a0f5:346) (Ping timeout: 240 seconds)
[11:55:11] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[11:56:11] *** Quits: emf (~emf@2620:10d:c090:400::5:97af) (Ping timeout: 264 seconds)
[11:58:09] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-34c3-239e-b6b7-c683.res6.spectrum.com) (Read error: Connection reset by peer)
[11:59:01] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:59:22] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[11:59:24] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[11:59:35] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:59:45] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[12:00:48] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[12:02:52] *** Joins: mickey8 (~user@user/mickey)
[12:04:13] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[12:04:21] *** Joins: emf (~emf@2620:10d:c090:400::5:538d)
[12:05:12] *** Quits: Batzy (~Batzy@user/batzy) (Read error: Connection reset by peer)
[12:06:43] *** Joins: nomic (~nomic@185.192.69.7)
[12:06:50] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[12:08:22] *** Quits: dynos01 (~dynos01@2600:3c01:e000:36a::8400) (Quit: ZNC 1.7.4 - https://znc.in)
[12:08:26] *** Quits: Hash (~stoned@wants.to.know.howstoned.ru) (Quit: https://hashsecurity.org)
[12:08:35] *** Joins: dynos01_ (~dynos01@2600:3c01:e000:36a::8400)
[12:08:47] *** Joins: Hash (~stoned@wants.to.know.howstoned.ru)
[12:10:04] *** Joins: Viewday16 (~Viewday@user/viewday)
[12:10:43] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (Ping timeout: 250 seconds)
[12:11:42] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[12:11:44] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:11:44] *** Viewday16 is now known as Viewday1
[12:11:57] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:13:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:13:43] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[12:14:25] <gitesh> is there a thing to practice python from start to end?
[12:14:38] <gitesh> like practice all features of python
[12:14:48] <gitesh> but oh i think w3schools
[12:14:49] <gitesh> thanks
[12:16:04] <gitesh> even w3schools doesn't have new python features
[12:16:04] *** Joins: dre (~dre@2001:8003:c932:c301:3aa0:ae93:dc87:2b3)
[12:16:12] <gitesh> like async and wait
[12:16:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[12:16:57] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[12:18:28] *** kostkon_ is now known as kostkon
[12:18:32] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:18:51] <xardas> I would say just code in python everyday
[12:20:00] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:21:05] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 264 seconds)
[12:21:05] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:21:39] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[12:21:41] *** Joins: Viewday13 (~Viewday@user/viewday)
[12:22:35] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[12:22:38] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:22:38] *** Viewday13 is now known as Viewday1
[12:24:41] <iomari891> greetings, I have a movie database app that uses xml as it's database. I have my own code I wrote in python to dump the data in memory then I can search through it for queries. What technique can I use to query the data that is text without having to sequentially search?
[12:25:47] *** Joins: Viewday13 (~Viewday@user/viewday)
[12:26:02] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-944c-6b84-6164-e53e.res6.spectrum.com)
[12:26:26] *** Joins: Pickchea (~private@user/pickchea)
[12:27:24] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:27:25] *** Viewday13 is now known as Viewday1
[12:27:31] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[12:29:52] <han-solo> iomari891: i'd probably use something like https://docs.python.org/3/library/xml.etree.elementtree.html or lxml
[12:30:36] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[12:31:19] <han-solo> disregard the first, unless your data is safe. There seems to a warning at the top of the doc
[12:31:36] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[12:34:33] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[12:35:37] *** Quits: Pent (sid313808@lymington.irccloud.com) (Ping timeout: 256 seconds)
[12:37:15] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:37:22] *** Quits: gitly (~gitly@85.255.233.182) (Ping timeout: 260 seconds)
[12:37:42] <rindolf> gitesh: "python" is large and growing: https://www.shlomifish.org/humour/fortunes/show.cgi?id=shlomif-fact-chuck-15
[12:39:01] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 256 seconds)
[12:39:27] *** Joins: gitly (~gitly@148.252.128.252)
[12:40:37] *** Quits: gulzar (~gulzar@14.139.123.36) (Ping timeout: 250 seconds)
[12:40:53] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[12:41:00] *** Joins: bjs (sid190364@user/bjs)
[12:41:06] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[12:41:56] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[12:42:29] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:43:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:43:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[12:43:54] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[12:44:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:45:18] *** Joins: fikran (~fikran@user/fikran)
[12:46:17] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:46:23] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 246 seconds)
[12:46:42] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[12:47:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:47:27] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[12:47:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:47:44] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[12:48:03] *** Joins: dbristow (~dbristow@user/dbristow)
[12:48:12] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:48:28] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[12:48:39] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[12:48:54] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[12:49:01] *** Joins: Viewday11 (~Viewday@user/viewday)
[12:50:55] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:52:24] *** Joins: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[12:53:14] *** Joins: Viewday111 (~Viewday@user/viewday)
[12:53:37] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 250 seconds)
[12:54:21] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[12:55:27] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:55:27] *** Viewday111 is now known as Viewday11
[12:56:29] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:56:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:57:04] *** Joins: han-solo (~hanish@user/han-solo)
[12:57:14] *** Joins: fecktd (~fecktd@123.208.183.186)
[12:57:55] *** Joins: merijn (~merijn@195.114.232.94)
[12:59:20] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[12:59:29] *** Quits: Widdershins (widders@ps.mad.cash) (Ping timeout: 264 seconds)
[12:59:32] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:59:54] *** Quits: fecktd (~fecktd@123.208.183.186) (Client Quit)
[13:00:26] *** Joins: gulzar (~gulzar@14.139.123.36)
[13:00:53] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:01:19] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Remote host closed the connection)
[13:01:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[13:02:11] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 245 seconds)
[13:02:21] *** Joins: Klinda (~superleag@user/klinda)
[13:02:41] *** Joins: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[13:03:42] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[13:04:40] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[13:04:52] *** Joins: Viewday110 (~Viewday@user/viewday)
[13:05:09] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:06:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:06:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[13:06:48] *** Viewday110 is now known as Viewday11
[13:08:41] *** Quits: leonardo (~leonardo@user/leonardo) (Remote host closed the connection)
[13:08:45] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:09:05] *** Joins: leonardo (~leonardo@user/leonardo)
[13:09:06] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[13:10:16] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[13:10:17] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[13:10:25] *** Joins: bindu_ (~bindu@user/bindu)
[13:10:48] *** Quits: vigumnov (~victori@cpe-76-174-179-126.socal.res.rr.com) (Read error: Connection reset by peer)
[13:11:25] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:16] *** bindu_ is now known as bindu
[13:13:26] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[13:13:39] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[13:14:36] *** Joins: Naan (~Naan@user/naan)
[13:14:44] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 246 seconds)
[13:16:34] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[13:16:47] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[13:16:53] <rendar> why this simple snippet https://bpa.st/PINQ -- tells me: TypeError: expected bytes, str found
[13:16:55] <rendar> what's the matter?
[13:17:23] *** Quits: bkhl (~bkhl@user/bkhl) (Quit: ZNC - https://znc.in)
[13:17:27] *** Quits: mjsir911 (~bnc@user/mjsir911) (Quit: Goodbye, World!)
[13:18:25] *** Joins: mjsir911 (~bnc@user/mjsir911)
[13:18:28] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:19:20] *** Joins: brabrax (~brabrax@user/brabrax)
[13:19:50] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[13:20:12] *** Joins: bkhl (~bkhl@user/bkhl)
[13:20:57] <mav`rik> rendar: splitstream appears to require bytes, not characters/strings as its input
[13:21:38] <rendar> mav`rik, but it requires a file, and with StringIO i'm passing to it a file...
[13:24:02] *** Joins: Socra (~Socra@206.217.216.27)
[13:25:26] *** Joins: Payam (~Payam@138.106.57.132)
[13:25:32] <Payam> hi
[13:26:26] <Payam> I have a inner function in function A. and I have a foor loop in A that calls that innerfunction. But that function is called only once. while it should be called each time in the loop
[13:26:30] <Payam> what am I doing wrong?
[13:26:33] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 250 seconds)
[13:26:57] <rendar> Payam, paste the code in bpaste
[13:27:03] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[13:27:13] <mav`rik> rendar: out of interest, why not do it like this: https://bpa.st/DCZA - why do you need the StringIO?
[13:27:31] <Payam> https://bpa.st/RRBA
[13:27:36] <Payam> rendar
[13:28:22] <rendar> Payam, what is the function?
[13:28:38] <Payam> branch_exist_on_sr
[13:28:45] <Payam> gets called only once in the loop
[13:29:03] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[13:29:32] <rendar> Payam, even if you have multiple branches?
[13:29:42] <Payam> yes
[13:30:11] <mav`rik> Payam: you have your args the wrong way around in either the function declaration or the call
[13:30:23] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:ba48:e218:7214:7e82)
[13:30:27] <rendar> put a print before calling that function, and see if the for loop stops before, then put also a print inside the function to see if it gets called and another print inside the function's for loop to see how many times it gets called
[13:30:54] *** Joins: bindu (~bindu@user/bindu)
[13:31:04] <rakoon> How is this possible, keyword arg before *args? def clean(self, value, row=None, *args, **kwargs):
[13:31:08] <rendar> oh right, mav`rik is right
[13:31:23] <rakoon> (found it in django-import-export)
[13:31:42] <rendar> mav`rik, i need the StringIO because i'm getting those data from a buffer, stdin is just something to 'test' it
[13:32:50] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (Ping timeout: 260 seconds)
[13:32:51] *** Quits: bitreverb (~bitcycle@174-21-36-109.tukw.qwest.net) (Ping timeout: 256 seconds)
[13:32:54] *** Joins: arinov (~arinov@178.240.135.64)
[13:33:11] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[13:33:31] <Payam> mav`rik Thanks:D  Found it
[13:34:49] <mav`rik> rendar: Maybe try it with BytesIO rather than StringIO? Also, you're updating buf in your example, but not writing to the StringIO. stringvar += another_string creates a new string and has the name "stringvar" refer to that new string, it doesn't modify the existing one (strings are immutable)
[13:35:27] <rendar> mav`rik, uhm, that's right, so how can i add more data to the BytesIO object when it comes from a socket, for instance?
[13:35:46] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:35:54] <mav`rik> rendar: same way as with any file. file_var.write(some_data)
[13:36:22] <han-solo> rakoon: it's a positional or keyword argument, but yeah kinda weird use
[13:36:37] *** Joins: brabrax (~brabrax@user/brabrax)
[13:36:37] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[13:37:31] <rakoon> han-solo: what do u mean by "or"? I mean the order should be first positionals and then keyword (I am not counting the "*" or "/" as i am not super familiar)
[13:38:03] <rakoon> i dont get how the library actually works and doesnt through syntax error :/
[13:38:09] <rendar> mav`rik, cool ok
[13:38:13] <han-solo> it's not strictly keyword argument
[13:38:16] <mav`rik> rakoon: https://www.python.org/dev/peps/pep-0570/
[13:38:20] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[13:38:41] <mav`rik> rakoon: it's basically a positional argument with a default (a positional optional argument)
[13:39:21] <rendar> mav`rik, btw, with BytesIO i get: `TypeError: a bytes-like object is required, not 'str'`
[13:39:44] <rakoon> mav`rik: can this work without the "*" or "/" ?
[13:39:46] <mav`rik> rendar: on what line?
[13:40:06] <rakoon> mav`rik: because they dont use them, i checked the parent classes as well
[13:40:17] <mav`rik> rakoon: I would hestitate to say "obviously" (because that's code that works), but... yes?
[13:40:28] <rendar> mav`rik, well, it was because with .write() i have to use string.encode()
[13:40:32] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 240 seconds)
[13:40:43] <rendar> mav`rik, but it still doesn't work, it doesn't get any JSON :(
[13:41:21] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[13:41:21] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[13:41:23] <rendar> i have this now https://bpa.st/DUFQ -- but still it doesn't get any json data, but it quits without any error tho
[13:41:43] <rakoon> mav`rik: yeah i guess if it works is valid but i dont get it. I can't make such function myself, i get error
[13:42:26] <mav`rik> rakoon: do you have an example of one you've written that's similar and the error you get?
[13:42:45] <rakoon> def f(a, b=0, c): print(a, b, c)
[13:42:47] <han-solo> rakoon: `def f(x, y=42, *args, **kwargs):..print(x, y, args, kwargs); f(32, z='dsfsf', *range(10))`
[13:42:53] *** Joins: Widdershins (widders@ps.mad.cash)
[13:43:06] <rakoon> SyntaxError: non-default argument follows default argument
[13:43:17] <mav`rik> rakoon: you can't have _any_ positional argument following an optional, it must either be another optional, or *args
[13:43:25] <rakoon> oh
[13:44:10] <mav`rik> rakoon: c in your case is a required positional argument, but b is optional, it's not smart enough to "fill arguments from the middle" if you have fewer than 3 args provided in a call
[13:44:12] <rendar> basically, what is the best way to make a virtual file, with BytesIO for instance, and add data to it when it comes from a socket or stdin?
[13:44:14] <rakoon> really? omg didnt know that for 8 years now noooooo
[13:44:50] <rakoon> oh man i feel awful
[13:45:48] <rakoon> why python allows me to do that even though having (x, y, *args, with_default=0) is the same and consistent
[13:45:53] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[13:45:58] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[13:46:18] *** Joins: de-facto (~de-facto@user/de-facto)
[13:46:31] <mav`rik> rakoon: it's not the same though. If you called with myfn(1, 2, 3) then args == [3] and with_default == 0
[13:47:01] *** Joins: candyman (~candyman@user/candyman)
[13:49:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:50:37] <rakoon> wow
[13:50:51] <rakoon> thanks a lot mav`rik
[13:51:21] <rendar> anyone?
[13:52:07] *** Joins: califax (~califax@user/califx)
[13:53:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:54:12] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[13:55:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:56:17] <jinsun> rendar: BytesIO has a .write method where you can supply bytes
[13:56:37] *** Joins: tga (~tga@user/tga)
[13:56:46] <rendar> jinsun, i'm doing that, but it still doesn't work, look:  https://bpa.st/DUFQ
[13:56:53] <rendar> i should get JSON files, but i don't
[13:57:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[13:57:18] *** Joins: timkofu (~timkofu@user/timkofu)
[13:57:27] <tga> greets. in a pytest test I am doing a=time.time(); foo(); b=time.time(), and then printing b-a -- but even though foo() takes 30s, the difference is something like 0.05
[13:57:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:57:52] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:d1f6:1f25:eb3d:af22)
[13:57:54] <tga> what am I missing here about time() and pytest that would explain it?
[13:59:03] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:59:06] *** mpmc is now known as c055aA
[13:59:09] *** c055aA is now known as mpmc
[13:59:18] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[13:59:28] <jinsun> rendar: so, what is the output of that?
[13:59:38] <rendar> nothing
[13:59:41] <tga> ah, ok, it's just how the test is layed out, nevermind that
[13:59:42] <tga> quack
[13:59:45] <rendar> it just reads my stdin, and does nothing
[14:00:13] <timkofu> tga: the IRC rubber duck ;)
[14:00:21] <Zweimer> I am using two computers to develop a program. One is my main computer, the other one has additional hardware, that I want to control. Whenever possible, I work on my main pc. The hardware-access is encapsulated in a class. I created a dummy class for my main pc, since it would otherwise complain beacause of the missing hardware. Currently, I am
[14:00:22] <Zweimer> commenting out the class I do not want to use. In C, I would have done this with #defines and #ifndef. How can I do that in python?
[14:01:12] <jinsun> not even the "JSON: "  prefix that you have?
[14:01:39] <jinsun> rendar: ^
[14:01:54] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:02:11] <rindolf> Zweimer: use inheritance?
[14:02:12] <rendar> jinsun, nope!
[14:02:20] <rendar> jinsun, it never triggers that
[14:02:38] <Zweimer> rindolf ?
[14:02:56] *** Joins: Unode (~Unode@194.94.44.220)
[14:03:02] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[14:03:17] <tga> timkofu: works half the time :)
[14:03:33] <rindolf> Zweimer: https://refactoring.com/catalog/replaceConditionalWithPolymorphism.html
[14:04:08] <Zweimer> Right. I will have a look at this
[14:05:40] <jinsun> rendar: actually after writing you have to seek back also, otherwise it will read from the end of the file, and get nothing, so try adding a strio.seek(0) after the write
[14:05:45] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:05:46] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[14:06:08] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[14:06:26] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:06:55] <rendar> jinsun, thats wrong, because with that seek(0) at every adding, i will get every time i get a new json, all other old jsons
[14:07:10] <rendar> so that will trigger exponentially
[14:07:11] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[14:07:47] *** Joins: Valeria (~Valeria@user/valeria)
[14:07:51] <rendar> jinsun, look https://bpa.st/Q2EQ
[14:09:38] <jinsun> yes so so change 0 to some variable that you will have to keep track of
[14:09:43] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[14:09:59] *** Quits: mbarkhau (~mbarkhau@84.38.67.145) (Quit: WeeChat 2.3)
[14:10:29] <jinsun> I just suggested 0 first because that is simple and first we have to see if that gives you any output
[14:11:06] <rendar> i can't keep track of the bytes...
[14:11:09] <jinsun> rendar: so .write gives you the number of bytes written
[14:11:23] <jinsun> you can use that as the number to seek to in the next iteration
[14:11:37] <rendar> uhm
[14:12:06] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[14:12:08] *** Joins: eem (~eem@user/eem)
[14:12:35] <rendar> jinsun,  i don't think that's the right way to proceed
[14:12:44] <han-solo> i wonder, if the other end is sending json lines...
[14:13:05] <rendar> han-solo, the other end is i'm typing to stdin, so yes
[14:13:18] <han-solo> but with the socket, it would be lines ?
[14:13:42] <rendar> nope, it will be pieces of data, that's why this is a json *streamer*
[14:13:48] <rendar> it's the purpose of that library getting partial json
[14:13:56] <rendar> and trigger full json when it gets last }
[14:14:05] <han-solo> Okay
[14:14:10] *** Quits: s98259 (~s98259@user/helenah) (Quit: WeeChat 3.3)
[14:14:17] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[14:14:49] <rendar> so i get these partial jsons (which i'm typing on stdin, for testing) and the program should trigger full json pieces when it gets }
[14:15:13] <rendar> also, i want to discard old data, to not accumulate a very big buffer
[14:15:22] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:15:34] <rendar> the problem is that library only reads *a file*, hence i have to fake a file with BytesIO
[14:15:38] <rendar> but how to do this properly?
[14:16:02] *** Joins: Viewday110 (~Viewday@user/viewday)
[14:16:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[14:17:08] <varaindemian> How can I modify the first part so that later I'll be able to use the second part to decypt?
[14:17:21] <varaindemian> https://www.irccloud.com/pastebin/8PdUMDQp/
[14:17:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:17:43] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[14:18:11] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[14:18:11] *** Viewday110 is now known as Viewday11
[14:18:31] <bjs> rendar: well stdin is a file,  and that function probably just accepts any file-like object (thing with a read())
[14:18:35] *** Joins: totvs (~sidj@user/sidj)
[14:18:48] <rendar> bjs, indeed, if i pass stdin to that function, it works like a charm
[14:18:56] <rendar> but now i have to write the virtual file version
[14:19:06] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[14:19:12] *** Joins: ayustae (~Thunderbi@2a0c:5a80:520c:1400:1b53:6810:7033:6534)
[14:19:14] <rendar> because i'm getting data with asyncio socket, and i have to pass such data to that function
[14:19:39] <bjs> rendar: make a class with a read function
[14:19:46] <rendar> so i thought to create a virtual file with BytesIO, but it must clear data already read by that function
[14:19:54] *** Joins: jdw3000 (~jonathan@c-76-18-136-183.hsd1.tn.comcast.net)
[14:19:54] <tsujp> hi friends I want to write a python application which can look at a portion of my screen and understand how to navigate a GUI program, that's computer vision right? Which packages do I need for this
[14:20:01] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:20:03] <rendar> bjs, huh? that's all?
[14:20:11] *** Joins: drogas (~drogas@jump2.jet.uk)
[14:20:23] <bjs> rendar: well you'll have to write it, and make it interact with the asyncio stuff but yes
[14:20:25] *** Joins: NeoCore (~neocore@160.238.38.85)
[14:20:27] *** Quits: arinov (~arinov@178.240.135.64) (Ping timeout: 256 seconds)
[14:20:44] <rendar> bjs, why can't i use BytesIO?
[14:21:09] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 250 seconds)
[14:21:10] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:21:21] *** Joins: nyah (~nyah@94.6.71.219)
[14:21:35] <rendar> i think this is exactly the purpose of BytesIO
[14:21:56] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:22:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:22:12] <bjs> rendar: you can use bytesio too
[14:22:16] <bjs> that's also a file
[14:22:26] *** Joins: driib6 (~driib@185.65.135.233)
[14:22:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:22:39] <rendar> bjs, problem is that it doesn't work :(
[14:22:52] <bjs> rendar: it definitely does work, you'll just be doing it wrong then
[14:23:11] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:23:27] <jinsun> the purpose of bytesIO is a bt different, it keeps the entire thing in memory that you don't want
[14:23:31] <cluelessperson> rendar, I'm not sure what doesn't work, I havne't found a link to your code.
[14:23:36] <bjs> but you already said why you don't want to use bytesio -- it's because it'll keep the whole bytes in memory
[14:23:45] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 250 seconds)
[14:23:47] <rendar> cluelessperson, https://bpa.st/QLRQ
[14:24:02] *** Quits: driib (~driib@185.65.135.253) (Ping timeout: 240 seconds)
[14:24:02] *** driib6 is now known as driib
[14:24:05] *** Quits: ayustae (~Thunderbi@2a0c:5a80:520c:1400:1b53:6810:7033:6534) (Ping timeout: 264 seconds)
[14:24:05] *** ayusta is now known as ayustae
[14:24:06] <rendar> bjs, well, i guess that BytesIO provides something to reset the bytes, no?
[14:24:12] <bjs> rendar: well this obviously won't work because you will write 1 line to the bytesio file then try read the json out
[14:24:24] *** Joins: alkino (~quassel@user/alkino)
[14:24:29] <cluelessperson> rendar, I'm not sure what splitfile does
[14:25:02] <rendar> cluelessperson, it ingest data, partial json or xml, and when a *full* json or xml is parsed, it returns (or yields) it
[14:25:14] <cluelessperson> ah, splitfile is neat
[14:25:27] <bjs> rendar: you want to do these loops concurrently (one thread doing splitfile) and the other writing to the file
[14:25:29] *** Quits: lz__ (l@gateway/vpn/protonvpn/lz/x-63480406) (Ping timeout: 250 seconds)
[14:25:35] <cluelessperson> it handles splitting data across numerous files.
[14:25:58] <rendar> bjs, huh? why? when i wrote data to BytesIO, splitline should be able to read such data! With StringIO it works!
[14:26:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[14:26:21] <cluelessperson> rendar, what's the error, and what does it mean to "not work" ?
[14:26:27] <tsujp> how can I use python to click on a defined co-ordinate on the screen and type "foo" _exactly_ as a user would, i.e. the same events and what not not any kind of special process-to-process events
[14:26:29] <rendar> cluelessperson, well, more numerous "packet" of the file, arriving from the network for instance, but yes
[14:26:46] <bjs> rendar: when you tried with StringIO did you type whole JSON at the prompt but with BytesIO you didn't?
[14:26:47] <rendar> cluelessperson, no errors, it simply doesn't trigger the print("JSON: ...) call
[14:27:09] *** Joins: vladoski (~vladoski@2001:b07:add:d406:53ce:c75e:e268:3c9d)
[14:27:11] <bjs> That's what you expect no?  because it's reading 1 line and then trying to read the JSON from it
[14:27:12] <rendar> bjs, i have typed both whole and partial jsons, and with StringIO it worked very well, same syntax, same loop
[14:27:24] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[14:27:47] <jinsun> I thought you got bytes needed not str error in that case
[14:28:03] <jinsun> that is why you were trying bytesIO
[14:28:18] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:28:20] <bjs> rendar: oh if it works with StringIO then probably it's just that splitfile expects strings not bytes
[14:28:39] <rendar> no, i don't think that's the problem
[14:28:40] <bjs> rendar: does the docs say the file should be binary or text?
[14:29:17] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (Ping timeout: 246 seconds)
[14:29:38] <rendar> i'll check
[14:29:43] <bjs> rendar: you'll have to share the BytesIO and StringIO versions then and what you typed in
[14:29:48] *** Joins: scruz (~scruz@41.58.60.238)
[14:29:52] <rendar> splitstream appears to require bytes btw
[14:30:04] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[14:30:14] <bjs> rendar: Because I'm going to guess there's more differences between the two cases than you told us
[14:30:15] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[14:30:24] <bjs> rendar: is it https://github.com/rickardp/splitstream ?  It seems to say it accepts strings
[14:30:28] *** Joins: maromau (~mauro@151.62.104.132)
[14:31:29] <rendar> yes that one
[14:31:40] <scruz> a bit offtopic, but i'm wondering what's going wrong with my pyenv setup. i have a .python-version in my project folder, but the virtualenv isn't activated, even though pyenv claims it is (and changes the prompt accordingly). the thing is, i have starship also installed, and it shows the active python version, and it isn't the version for the project virtualenv
[14:32:31] *** Joins: larkfisherman (~pasko@77.239.7.207)
[14:33:01] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[14:33:22] <bjs> rendar: ah I'm a bit confused then because it explicitly says StringIO and you say it works with StringIO and not BytesIO but then say it accepts bytes not strings(?)
[14:33:32] <bjs> something doesn't seem right :)
[14:33:44] <jinsun> the docs might be for python2?
[14:33:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:34:22] <tsujp> does anyone know if pyautogui keypress events look the same at the OS level as a real keyboard keypress event?
[14:34:25] *** Joins: arinov (~arinov@178.240.135.64)
[14:35:11] <jinsun> scruz: do you have `eval "$(pyenv virtualenv-init -)` in your .bashrc/.profile, I think that is needed for the pyenv-virtualenv stuff to work
[14:36:09] <scruz> jinsun: it's in my .zshenv
[14:36:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:37:02] <rendar> bjs, wait, i was wrong
[14:37:11] <bjs> rendar: about which part?  it's all very confusing
[14:37:32] *** Quits: larkfisherman (~pasko@77.239.7.207) (Quit: Konversation terminated!)
[14:37:33] <rendar> yes, sorry, let's reset everything, with StringIO i get this TypeError: expected bytes, str found
[14:37:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:37:42] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[14:38:02] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 246 seconds)
[14:38:39] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[14:38:51] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[14:39:13] <rendar> the only one which worked was the one taking sys.stdin as the input file for splitlines()
[14:39:16] <bjs> rendar: you can make BytesIO work for this (it'll be awkward, and like you say it'll keep the actual bytes in memory)
[14:39:17] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:39:35] <bjs> rendar: making a class with a read method might just be the simplest (if the docs are to be believed,  which we have established they may not be so up-to-date)
[14:39:48] <jinsun> scruz: okay then it is not that problem at least, have you checked `which python` and `pyenv which python`
[14:39:57] <rendar> bjs, ok
[14:39:58] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[14:40:28] <bjs> rendar: but your code has the main problem about the fact it's not doing things concurrently.  It's writing exactly 1 line and then trying to read out the JSON *before* it even writes the next line
[14:41:02] <bjs> also you're not seek()ing which is a problem because when you write() to a bytesio it seeks forward so the read()s are all empty
[14:41:23] <bjs> basically BytesIO can work it's just not designed to be a stream
[14:41:43] <scruz> hmm. seemed moving the lines in .zshenv to .zshrc and restarting the shell fixed it
[14:41:44] <bjs> it's designed to mimic an actual file
[14:41:57] <scruz> starship also shows the correct version now
[14:42:04] <scruz> jinsun: thank you
[14:42:17] <rendar> bjs, yes indeed
[14:44:07] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 250 seconds)
[14:45:58] *** Joins: G_w (~Gw@ircgo.net)
[14:46:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[14:46:48] *** Joins: faceface (~faceface@user/faceface)
[14:47:43] <jinsun> scruz: ah so it was was that problem, had to be .zshrc
[14:48:09] <rendar> now i have this, https://bpa.st/T4SQ but it still doesn't work: when i type a full json it works, but when i type a partial json, it doesn't do nothing when i copmlete it will a full json
[14:48:10] <rendar> any clues?
[14:48:43] <bjs> rendar: this is exactly the same problem you haven't solved it. You need to do the things concurrently. Here you read exactly 1 line and then call splitfile.  There's only been 1 line
[14:49:06] <bjs> if that 1 line doesn't contain a complete bit of JSON then the program will just hang forever as splitfile waits for the rest of it, but you're waiting for the JSON before writing the next line
[14:50:03] <bjs> rendar: you could move the sys.stdin.readline call into the read function for example
[14:50:14] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[14:50:47] <rendar> bjs, but how is this possible? every time i type a new line, that wait is wake up
[14:51:05] <bjs> rendar: inside read you return sys.stdin.readline()
[14:51:28] <bjs> rendar: I don't really understand why you're trying to do this in the way you are,  creating a new file (TempData) for every line and then trying to read the JSONs just from that line
[14:51:34] <rendar> bjs, what i'm saying is that it creates a new TempData everytime i type \n on stdin
[14:51:43] <bjs> rendar: yes why are you doing that? it's very strange
[14:51:54] <bjs> just make 1, and make its `def read` read from stdin
[14:52:01] <rendar> what else i could do this to test partial json without having a socket?!
[14:52:24] <bjs> rendar: you could try making one, and making its read method read from stdin
[14:52:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:52:53] <rendar> i have already tested the reading from stdin, and it works
[14:53:00] <rendar> now i have to try the reading from a buffer
[14:53:11] <bjs> rendar: yes
[14:53:19] <rendar> when i will have an asyncio socket, i will get data from socket, i couldn't do those read() tricks
[14:53:23] <bjs> Yes you can
[14:53:29] <rendar> how?
[14:53:44] <bjs> rendar: by making one fake file and  then making its read return the next line
[14:54:03] <rendar> but that's what i'm doing!!!
[14:54:04] <bjs> if you're using asyncio maybe you *also* want some kind of asyncio task running in some event loop collecting the lines
[14:54:10] <bjs> rendar: where?
[14:54:17] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:54:38] <rendar> for Christ sake! i can't believe i have to write all of this code to simple pass a JSON through a socket
[14:54:39] *** Joins: fikran (~fikran@user/fikran)
[14:55:38] <rendar> i wish to understand why that code doesn't work, since every time i type a \n in stdin, i get a new line, then i create a fake file with that line, and i pass that fake file to splitlines()
[14:55:46] <rendar> it should work, because with full jsons it works
[14:55:47] <bjs> rendar: I don't really understand, the problem is stemming from your nested loops. Trying to loop over each line and then inside the loop you're calling splitfile
[14:55:57] <bjs> so splitfile only sees the first line...
[14:56:29] <rendar> why it sees only the first line? at every line i create a new fake file with the new line!
[14:56:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:56:56] <bjs> rendar: If I went `bio = BytesIO(); bio.write(b"abc"); splitfile(); bio.write(b"end")`   the splitfile isn't going to see the end
[14:57:29] <rendar> you mean that since splitlines() is a generator, it blocks?
[14:57:54] <rendar> but it shouldn't block, because if it ingests partial data, that for loop returns immediately
[14:58:00] <rendar> and the control goes to the next line
[14:58:13] <rendar> indeed, when i type \n, i get a new line, every time...
[14:58:28] <bjs> rendar: what do you mean?  I'm not sure any of that is true
[14:58:33] <bjs> how can it be true? all it can do is read()
[14:59:03] <rendar> yes, and if it reads full jsons that for loop generates them
[14:59:14] <rendar> if it reads partial json, the for loop immediately quits!
[14:59:25] <rendar> i mean the `for splitlines(...` loop
[14:59:26] <bjs> rendar: yes for a start you're still not seeking
[14:59:42] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[14:59:48] <rendar> but i don't need to seek here, since i'm sending all the line data at once
[14:59:51] *** Joins: teut (~teut@223.182.71.245)
[14:59:59] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:00:23] *** Quits: gulzar (~gulzar@14.139.123.36) (Ping timeout: 264 seconds)
[15:00:48] <rendar> bjs, check the output https://bpa.st/JZOQ
[15:00:53] <bjs> rendar: I don't understand why you're being so defensive here, you're trying to do this in a very weird and just broken way. There's no way it can work this way, especially not without seeking.  It works for whole chunks of JSON on a single line but not if there are partial chunks. And it definitely can't work if you're making a new file for every line..
[15:01:08] *** Quits: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[15:01:37] <rendar> i can't get it
[15:01:56] <rendar> splitlines reads the whole data i pass to it, so it has to save the partial data somewhere...
[15:02:34] <Yhg1s> What splitlines are you talking about here?
[15:03:08] <bjs> rendar: yes it'll store it inside the generator/whatever, so if you make a new one...
[15:03:44] <rendar> Yhg1s, https://github.com/rickardp/splitstream
[15:03:45] <rendar> this one
[15:03:48] <bjs> and if for each new one you're using a new "file" then it can't even see the old bit of the data if it wanted.  This whole approach of nested for loops is just weird and wrong and confusing when the other approach of calling it once with exactly 1 file-like object is so much simpler and is exactly how the library was designed to be used
[15:04:03] <rendar> Yhg1s, https://bpa.st/T4SQ and this is the code which doesn't work
[15:04:24] <rendar> bjs, uhm, oh.. now i see your point
[15:04:24] *** Quits: maromau (~mauro@151.62.104.132) (Quit: Konversation terminated!)
[15:04:29] *** Joins: Pickchea (~private@user/pickchea)
[15:04:39] <rendar> bjs, basically that function is keeping a mapping with TempData->old_partial_data
[15:05:02] *** Quits: visl (visl@user/visl) (Ping timeout: 240 seconds)
[15:05:13] *** Quits: tga (~tga@user/tga) (Ping timeout: 256 seconds)
[15:05:50] *** Joins: Atque (~Atque@user/atque)
[15:06:24] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:06:36] *** Joins: visl (~visl@user/visl)
[15:07:10] <rendar> bjs, i think this proves you wrong on this https://bpa.st/KSZQ -- now it has the exactly same file, still can't get partial jsons
[15:07:28] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:07:56] <bjs> rendar: this is exactly the same problem, you're calling splitfile many times
[15:07:59] <bjs> so those partial ones get lost
[15:08:14] <bjs> I don't know why you're so obsessed with this nested loop, it's just confusing and wrong
[15:08:19] <rendar> wtf? get lost? the purpose of a streamer is just keep partial stuff
[15:08:28] <bjs> rendar: yes but you're calling it *many times*
[15:08:40] *** Joins: slav0nic (slav0nic@python.su)
[15:08:50] <bjs> so the partial bits get given to different calls and they never get combined
[15:08:50] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: brb)
[15:08:50] <rendar> bjs, but of course! i call the streamer many times, every time i get some data from a socket...
[15:08:58] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[15:09:00] <bjs> no that's not what you're supposed to do, call it just once
[15:09:12] <rendar> what? call it once?
[15:09:21] <rendar> but i get a stream of json documents
[15:09:21] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:09:47] <rendar> hence it is an *generator*... it has to generate multiple json documents
[15:10:06] <bjs> rendar: yes, you call a generator once and get many things out of it
[15:10:19] *** Joins: arseru (uid515527@user/arseru)
[15:10:24] <rendar> packets that may arrive are |{"a":2}{"b"|   ...    |:4}{"c":|    .... |55}|
[15:10:34] <rendar> oh!
[15:12:08] <rendar> bjs, https://bpa.st/YT3A do you mean like this? you're still wrong because it doesn't work either, and now it doesn't recognize full json neither
[15:12:25] <nedbat> rendar: i have to step in here. please stop saying "you are wrong"
[15:12:33] <rendar> nedbat, ok, sorry
[15:12:34] <nedbat> rendar: there's a misunderstanding. work through it.
[15:12:46] <rendar> you're right, sorry
[15:14:44] <tsujp> im trying to do a really basic screenshot and locate the thing within the screenshot using pyautogui but it's not working with WindowsPath object has no attribude 'mode', here's an 11 line paste can someone help: https://bpa.st/P3ZA
[15:15:47] <bjs> rendar: https://bpa.st/6T3Q like this
[15:17:17] <bjs> here read reads from stdin directly, but it could return some line that was read from stdin earlier,  infact there could be a sibling thread/asyncio task that does the reading saving it somewhere so read can see it
[15:17:22] <rendar> bjs, yes!! i already know this, and i have already tested this! but, honestly, i don't need a fake file to "fake" sys.stdin, since sys.stdin *IS* a file, and i can pass directly it!! I need a fake file when i get partial data from an *asyncio* socket
[15:17:35] <bjs> rendar: ... the point isn't to show how to fake stdin, but how to fake *anything*
[15:17:40] <rendar> which is not a file, in the meaning of how splitlines() thinks
[15:17:49] <rendar> ok
[15:17:56] <bjs> you could have some complex machinery that read from a socket
[15:18:04] <bjs> or if you wanted an asyncio task in the background it could be running and feeding data
[15:18:05] <Yhg1s> rendar: bjs is saying "take this example and change FakeStream, not how FakeStream is used"
[15:18:13] <bjs> yeah :)
[15:18:19] <rendar> Yhg1s, ok ok, i see
[15:18:23] *** Quits: merijn (~merijn@195.114.232.94) (Ping timeout: 264 seconds)
[15:18:33] <rendar> but i have made a my version of that, and it doesn't work, that's the matter, i guess...
[15:18:46] <Yhg1s> rendar: how us that version. Remember _not to change how FakeStream is used_, though.
[15:18:59] <Yhg1s> because all the code you've shown so far has been significantly different.
[15:19:25] *** Joins: nomic (~nomic@185.192.69.7)
[15:19:35] <rendar> Yhg1s, but how is that possible? basically my fake class provides a read() function like that one..
[15:19:43] <rendar> it just returns some data it keeps inside
[15:19:58] <kushal> Anyone here running an instance of https://github.com/pypiserver/pypiserver ? I am wondering if we can make it to provide only the local packages and no proxy to the upstream pypi.
[15:20:07] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:9c57:4715:1ac5:a700)
[15:20:20] <Yhg1s> rendar: I don't understand what you're asking, sorry.
[15:20:28] <rendar> Yhg1s, ok, no problem
[15:20:37] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[15:21:08] *** Joins: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de)
[15:21:32] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[15:21:34] <jinsun> kushal: use --index instead of --extra-index-url with pip?
[15:22:10] <rendar> for the records, my problem is that i receive some data from an asyncio socket, and i have to pass that data to a json streamer which accepts only a file
[15:22:16] <kushal> jinsun, that is what being used and I can see that it is proxying any package is not there in the index.
[15:22:25] <Yhg1s> rendar: yes. We know.
[15:22:38] <rendar> i can't get why it doesn't work...
[15:22:54] <Yhg1s> rendar: the code you showed earlier? For the reasons bjs already outlined.
[15:23:06] <Yhg1s> rendar: you need to have _one_ file-like object that can be asked for more data.
[15:23:25] <Yhg1s> rendar: bjs's FakeStream example does that. You just need to change FakeStream to get the data you want it to provide.
[15:23:36] <rendar> Yhg1s, but i have modified the code to have _one_ file: https://bpa.st/YT3A
[15:23:48] <kushal> jinsun, example: try this URL https://pypi.sunet.se/simple/jinja2/
[15:25:05] <jinsun> kushal: ah okay, yeah it redirects to pypi, the example in the readme shows --extra-index-url so I thought it is just that problem
[15:25:25] <rendar> Yhg1s, then i have also modified the code to have a generator and not creating a new generator every time as bjs kindly suggested, it still doesn't work, indeed that modify is even worse: now it doesn't read full jsons anymore
[15:25:25] <Yhg1s> rendar: except that class doesn't get data. It uses the data it already has. You add data to it _after_ splitstream.splitfile has already read from it, and probably found EOF (since you return b'')
[15:25:56] <rendar> uhm, i see
[15:27:03] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[15:27:07] <rendar> Yhg1s, point is that even if i substitute that `b''` with `b' '` it still doesn't work
[15:27:18] <Yhg1s> ... yes, of course not. Why would it?
[15:27:19] <rendar> and with write() i simply "update" the data inside the fake file..
[15:27:28] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:27:47] <jinsun> kushal: seems like there is   --disable-fallback commandline option
[15:27:58] <Yhg1s> Your class needs to provide the next bit of data, and if it doesn't have more data, it should return b''. That means the end of the file. If you can't provide data right now, it has to block, waiting for more data.
[15:28:00] <kushal> jinsun, ah, thank you for the find :)
[15:28:36] <kushal> jinsun, you solved the problem, thank you :)
[15:28:55] <rendar> Yhg1s, you mean that i should provide at least the last 2 pieces of data?
[15:29:05] <Yhg1s> ... no, very much not so.
[15:29:21] <Yhg1s> I mean you can't just return b'' if you're waiting for more data. You have to *wait for more data*. You can't return anything until you have data.
[15:30:03] <rendar> Yhg1s, but the point is that this is a fake file.. so i can't block it since i'm waiting more data from an *asyncio* socket
[15:30:12] <rendar> otherwise i will be block the entire application
[15:30:18] <rendar> and the purpose of asyncio is useless
[15:30:40] <Yhg1s> rendar: it doesn't matter what you are waiting for. You have to block waiting for more data, because that's what splitstream.splitfile requires. If you can't block, *you can't use splitstream.splitfile*.
[15:30:52] <bjs> rendar: here's a terribly hacky way with a background thread https://bpa.st/QKCA
[15:30:57] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[15:30:58] *** Joins: Klinda (~superleag@user/klinda)
[15:31:03] <bjs> rendar: it's okay for splitfile to block, you just put splitfile in a thread (e.g. with asyncio.to_thread)
[15:31:05] *** Joins: binary01 (~binary01@192.110.171.216)
[15:31:16] <rendar> Yhg1s, so i can't use any functions require a file with asyncio?
[15:31:30] <Yhg1s> rendar: again, very much not what I said.
[15:31:40] <rendar> ok
[15:32:00] <rendar> bjs, but i can't have N threads for every socket receiving JSON..
[15:32:06] <Yhg1s> rendar: *splitstream.splitfile* requires a file that blocks until there's data available. You can make it block by using a background thread, like bjs shows.
[15:32:32] <Yhg1s> rendar: then don't use splitstream.splitfile. Use something that doesn't require a blocking file to read data from.
[15:32:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[15:32:55] <rendar> ok
[15:33:06] <bjs> rendar: sure but, again, this is just showing you can have background stuff doing work (in threads, tasks whatever) collecting data that read then later returns
[15:33:32] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[15:33:46] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 260 seconds)
[15:33:47] <rendar> ok
[15:34:01] <rendar> so, any other way to streaming json?
[15:34:13] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:35:07] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[15:35:20] <Yhg1s> I wouldn't know, sorry. I've never tried to parse partial JSON like that.
[15:35:25] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[15:35:57] <rendar> ok
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:02] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (Ping timeout: 240 seconds)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:50] *** Joins: rexbinary_ (~rexbinary@user/rexbinary)
[15:36:54] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[15:37:33] *** Joins: merijn (~merijn@195.114.232.94)
[15:39:13] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 256 seconds)
[15:39:13] *** rexbinary_ is now known as rexbinary
[15:39:25] *** Joins: xardas (~xardas@149.233.51.127)
[15:40:28] <supakeen> one could search for an event emitting json parser, those however tend to require you do a lot by yourself
[15:40:56] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 245 seconds)
[15:41:07] <rendar> i can't do a json parser myself, that would be crazy
[15:41:26] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[15:41:34] <supakeen> well, you can use yajl which is a sax-style parser and has python bindings if i recall correctly
[15:42:18] *** Joins: oakridge (~oakridge@user/oakridge)
[15:42:38] <rendar> supakeen, https://github.com/kashifrazzaqui/json-streamer do you mean this?
[15:43:02] <supakeen> No, I mean yajl.
[15:43:20] <rendar> supakeen, that *uses* yajl, check the homepage
[15:43:50] <supakeen> In that case that might work yes.
[15:43:56] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[15:43:57] <supakeen> But it's noteworthy that you'll have to use SAX-style events.
[15:44:16] <supakeen> It's a very different type of working with JSON (or XML for that matter) :)
[15:44:38] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:44:43] <rendar> :\
[15:44:58] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:45:05] <supakeen> The thing is, one doesn't know if JSON is valid until the entire data has been seen.
[15:45:35] *** Quits: scruz (~scruz@41.58.60.238) (Ping timeout: 246 seconds)
[15:48:23] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[15:49:08] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[15:51:05] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 264 seconds)
[15:51:15] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[15:51:35] *** Quits: cation (cation@user/cation) (Ping timeout: 260 seconds)
[15:53:35] *** Joins: Viewday117 (~Viewday@user/viewday)
[15:54:00] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[15:54:00] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[15:54:40] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[15:54:44] *** Joins: oakridge (~oakridge@user/oakridge)
[15:55:05] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:55:05] *** Viewday117 is now known as Viewday11
[15:55:33] <rendar> supakeen, well, with SAX style events, i guess the main difference is that i have to manage the callbacks
[15:58:19] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:58:37] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[15:58:40] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[15:58:54] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[15:59:08] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[15:59:09] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[15:59:16] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 245 seconds)
[15:59:39] *** Joins: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy)
[15:59:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:01:18] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[16:01:39] *** Joins: oakridge (~oakridge@user/oakridge)
[16:02:47] *** Joins: giesen (~ggiesen@ego.giesen.me)
[16:04:27] *** Joins: e2m4n (~ezman@user/e2m4n)
[16:04:48] *** Joins: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl)
[16:04:55] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[16:04:56] *** Parts: arseru (uid515527@user/arseru) ()
[16:05:21] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:08:07] *** Quits: mallkrampus (~mallkramp@172.93.207.85) (Ping timeout: 256 seconds)
[16:08:30] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[16:09:14] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[16:09:15] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[16:09:23] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:10:50] *** Quits: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[16:11:46] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 245 seconds)
[16:11:49] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[16:11:56] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:12:06] *** Joins: Pickchea (~private@user/pickchea)
[16:12:16] *** Joins: de-facto (~de-facto@user/de-facto)
[16:13:51] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[16:13:59] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[16:15:10] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:d907:893e:d946:ca2a)
[16:19:00] *** Joins: parv (~quass@user/parv)
[16:19:09] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[16:19:49] *** Joins: ggnoredo (~user@212.98.236.50)
[16:20:58] *** Joins: Gerula (~Gerula@user/gerula)
[16:21:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:21:20] *** Joins: mallkrampus (~mallkramp@172.93.207.88)
[16:21:23] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[16:21:45] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:21:59] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 246 seconds)
[16:22:17] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 256 seconds)
[16:22:20] *** Quits: vladoski (~vladoski@2001:b07:add:d406:53ce:c75e:e268:3c9d) (Ping timeout: 246 seconds)
[16:22:28] *** Joins: alkino (~quassel@user/alkino)
[16:22:46] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[16:22:59] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[16:24:28] *** LordKalma_ is now known as LordKalma
[16:24:33] *** Quits: hailhydra (~hailhydra@136.36.153.168) (Ping timeout: 256 seconds)
[16:24:36] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[16:25:07] <cluelessperson> I'm confused, what is required to run a coroutine?
[16:25:24] <cluelessperson> trio.run(coro),  loop.run_until_complete(coro) don't work, I get an error about awaiting
[16:25:36] <cluelessperson> but I don't think I want to await this?  just add it to a loop?
[16:25:41] *** Joins: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de)
[16:26:23] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.3)
[16:26:49] *** Quits: merijn (~merijn@195.114.232.94) (Ping timeout: 256 seconds)
[16:26:58] <rendar> try with coro()
[16:27:19] <rendar> trio.run(coro()),  loop.run_until_complete(coro())
[16:27:27] <rendar> cluelessperson, ^
[16:28:53] *** Joins: jbkkd (~jbkkd@109.226.48.143)
[16:29:06] <han-solo> cluelessperson: run it using nursery ?
[16:29:34] <han-solo> `async with trio.open_nursery() as nursery:..nursery.start_soon(coro)` # ?
[16:30:44] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:30:55] <cluelessperson> rendar, TypeError: 'coroutine' object is not callable
[16:31:44] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[16:31:52] <cluelessperson> RuntimeError: use 'async with open_nursery(...)', not 'with open_nursery(...)'
[16:31:52] <cluelessperson> sys:1: RuntimeWarning: coroutine 'serve' was never awaited
[16:31:52] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[16:31:53] <bjs> cluelessperson: trio.run takes the coroutine *function* to run
[16:31:54] <cluelessperson> han-solo, ^
[16:32:21] <cluelessperson> bjs, quart-trio's   app.create_task(host="0.0.0.0", port=5000)   returns a coroutine.
[16:32:28] <cluelessperson> sorry,   run_task
[16:32:34] <bjs> cluelessperson: you'll have to share the actual code you're trying to run rather than single line snippets because it's hard to know exactly what the types of things even are.  It sounds like you got han-solo's code wrong anyway (you missed the `async` part)
[16:32:48] <bjs> cluelessperson: that's fine, are you already inside an `async def` ?
[16:33:37] <bjs> and are you using trio? or asyncio? or?
[16:33:46] <cluelessperson> bjs,    either
[16:33:54] *** Joins: vladoski (~vladoski@2001:b07:add:d406:bfc1:12d1:eab7:b467)
[16:34:00] <bjs> well quart-trio implies trio?
[16:34:56] <cluelessperson> well,   it's a library, quart-trio.       app = QuartTrio();   coro = app.run_task(host="0.0.0.0");   trio.run(coro),   or  asyncio.get_event_loop().run_until_complete(coro)
[16:35:02] <bjs> so you need to use trio
[16:35:22] *** Quits: teut (~teut@223.182.71.245) (Ping timeout: 256 seconds)
[16:35:39] <bjs> cluelessperson: is this already inside an `async def`? Maybe you just want to `await coro`
[16:36:57] <cluelessperson> bjs, I'm trying to run it from a syncronous context.
[16:36:58] *** Joins: Hydra (~sejan@user/hydra)
[16:37:09] <bjs> cluelessperson: can you show the code? I'm a little confused
[16:38:07] *** Parts: Hydra (~sejan@user/hydra) ()
[16:38:38] <cluelessperson> https://gist.github.com/cluelessperson/372dd9a925c1459a409da1a1faca018f
[16:38:40] <cluelessperson> bjs, ^
[16:38:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[16:38:52] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[16:39:02] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[16:39:03] <han-solo> from the source, i can see you can directly use the `run`(whcih will run the `run_task` using `trio.run`) method instead of the `run_task`
[16:39:06] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 260 seconds)
[16:39:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:39:23] <bjs> cluelessperson: this doesn't seem right, if the library is called quart-trio then for a start you should use trio
[16:39:24] *** Quits: LordKalma_ (~LordKalma@server.ruilvo.com) (Ping timeout: 250 seconds)
[16:39:40] <bjs> cluelessperson: don't you just want app.run() ?
[16:40:07] <han-solo> yeah, even their docs shows examples of that
[16:40:10] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:41:14] <bancroft> SnoopJ: oh thanks!
[16:42:07] <bjs> cluelessperson: if https://gitlab.com/pgjones/quart-trio is the library their examples just call app.run()   (or ask "hypercorn" some trio-aware ASGI thing, to run it for you)
[16:42:17] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[16:42:33] <cluelessperson> bjs, run() is basically run_forever, and blocks forever
[16:42:49] <cluelessperson> bjs, I'm trying to manage the web server as a discrete component in a loop in the background.
[16:43:09] <cluelessperson> bjs, I'm thinking that you create a loop, and add tasks to it
[16:43:24] <cluelessperson> or am I confused and you always have to start with an async function?
[16:43:43] <bjs> cluelessperson: you already have a loop?
[16:44:02] <bjs> When you say "in the background" what exactly did you mean?
[16:44:20] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:44:44] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:44:47] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 264 seconds)
[16:45:34] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:46:05] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[16:46:39] <cluelessperson> bjs, My understanding is you can create an async loop and add tasks to run on it, and the loop will handle its async stuff while you do sync stuff
[16:46:53] <bjs> cluelessperson: well the async loop has a blocking "run" method of some kind
[16:47:04] <bjs> maybe you just want to app.run() in a thread?
[16:49:17] *** Quits: mcpac82 (~textual@p5dc1c8e6.dip0.t-ipconnect.de) (Quit: mcpac82)
[16:50:12] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[16:51:05] *** Quits: mallkrampus (~mallkramp@172.93.207.88) (Ping timeout: 264 seconds)
[16:51:14] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:d1f6:1f25:eb3d:af22) (Ping timeout: 256 seconds)
[16:51:30] <cluelessperson> what am I misunderstanding here?
[16:51:35] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:51:39] <cluelessperson> app.run() is blocking indefinitely
[16:51:53] <cluelessperson> my thinking is to create the loop (which runs in the background?) and move on with other syncronous taskss.
[16:52:42] <bjs> cluelessperson: what does "which runs in the background" mean
[16:53:16] <bjs> there will always be a blocking call (whether it be app.run, or something that runs the event loop) since the event loop is just a function with a `while True: ...` loop in it.  You can put *that* function in the background (e.g. in a thread) if you want
[16:53:27] <cluelessperson> bjs, loop = asyncio.get_event_loop();    loop.run_until_complete(some_task);    do_other_thing_now();
[16:53:37] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:53:46] <bjs> cluelessperson: the other thing won't happen until some_task completes
[16:53:58] *** Joins: stranac (~stranac@195.29.239.126)
[16:54:22] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[16:54:29] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[16:54:38] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[16:54:42] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[16:55:02] *** Joins: ubert1 (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233)
[16:55:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:55:18] *** Joins: xardas (~xardas@149.233.51.127)
[16:55:36] <amosbird> Hello! How can I clone an element of https://docs.python.org/3/library/xml.etree.elementtree.html?
[16:55:51] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[16:57:27] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[16:57:44] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:58:00] *** Joins: pycurious (~Adium@user/pycurious)
[16:58:02] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 240 seconds)
[16:58:03] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[16:58:15] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[16:58:32] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 240 seconds)
[17:00:36] *** Joins: cation (cation@user/cation)
[17:01:57] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[17:01:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:03:14] *** Quits: javabean (~javabean@user/javabean) (Read error: Connection reset by peer)
[17:03:34] *** Joins: javabean (~javabean@user/javabean)
[17:03:39] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 256 seconds)
[17:03:42] <cluelessperson> bjs, I don't get this
[17:04:00] *** Joins: fikran (~fikran@user/fikran)
[17:04:04] <cluelessperson> https://gist.github.com/cluelessperson/50e993fb907472dc6c75e17bf64c9318
[17:04:21] *** Joins: mallkrampus (~mallkramp@172.93.207.88)
[17:04:54] *** Joins: Viewday111 (~Viewday@user/viewday)
[17:05:31] *** Joins: pogotech (~pogotech@047-132-047-100.res.spectrum.com)
[17:06:05] <bjs> cluelessperson: I think start_soon accepts coroutine functions;  but I'm not sure what you're trying to achieve here.  What kind of "other thing" are you doing? Will the other thing also do async things?
[17:06:31] <cluelessperson> bjs, in this case print("hi")
[17:06:43] <bjs> cluelessperson: yes I can see but I'm assuming you're going to change that print to be something else
[17:07:03] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:07:03] *** Viewday111 is now known as Viewday11
[17:07:46] <bjs> cluelessperson: because maybe you just want to do app.run in a thread
[17:10:02] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[17:10:02] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[17:10:02] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[17:10:22] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:10:35] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 264 seconds)
[17:10:38] *** Quits: kmikita (uid461814@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[17:10:50] *** Quits: ormiret (sid314108@lymington.irccloud.com) (Ping timeout: 260 seconds)
[17:10:50] *** Quits: eichin (sid27120@tinside.irccloud.com) (Ping timeout: 260 seconds)
[17:10:57] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Read error: Connection reset by peer)
[17:10:57] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Read error: Connection reset by peer)
[17:11:00] *** Joins: matrixbot_bartab (~matrixbot@195.200.221.101)
[17:11:01] *** Quits: Pr0phet (sid505706@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: Tiago_Paolini (sid172748@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: arch-geek (uid525804@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: Venhal (sid515085@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: hwrd (sid64402@lymington.irccloud.com) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: braxas (sid508886@lymington.irccloud.com) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: jposer (sid132110@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: pjlsergeant (sid143467@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: flagrama (sid145621@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[17:11:02] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Read error: Connection reset by peer)
[17:11:02] *** Quits: bjs (sid190364@user/bjs) (Read error: Connection reset by peer)
[17:11:11] *** Quits: mobius (sid478273@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:11:16] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[17:11:16] *** Quits: jesse-s (sid98646@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[17:11:16] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 268 seconds)
[17:11:17] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Ping timeout: 268 seconds)
[17:11:17] *** Quits: shurane (sid132556@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[17:11:18] *** Quits: MrNaz (sid133418@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[17:11:18] *** Quits: matthewwilkes (sid500242@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[17:11:18] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 260 seconds)
[17:11:18] *** Quits: johnny_ (sid481967@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[17:11:24] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:11:28] *** Quits: Knyght (sid365271@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:11:30] *** Joins: exarchd (~exarch@98.46.60.169)
[17:11:34] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[17:11:35] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[17:11:35] *** Quits: rpittau (sid346891@tinside.irccloud.com) (Ping timeout: 256 seconds)
[17:11:35] *** Quits: AhmedAmerican (sid470527@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[17:11:42] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[17:11:46] *** Quits: rburton (rburton@user/rburton) (Ping timeout: 260 seconds)
[17:11:46] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 260 seconds)
[17:11:47] *** Quits: coldmountain (sid484352@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: JayDoubleu (sid339529@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: altendky (sid135382@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: graingert (sid128301@tinside.irccloud.com) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: EWDurbin (sid38710@tinside.irccloud.com) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: Tips|Cloud (sid62231@ilkley.irccloud.com) (Ping timeout: 264 seconds)
[17:11:53] *** Quits: Gaurhoth (sid75085@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[17:11:53] *** Quits: hardwire (sid415742@uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[17:11:53] *** Quits: ericoc (sid179921@uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[17:11:53] *** Quits: TheXAbove (uid526127@user/thexabove) (Ping timeout: 268 seconds)
[17:12:02] *** Quits: holbrode (sid339826@tinside.irccloud.com) (Ping timeout: 240 seconds)
[17:12:09] *** Quits: arinov (~arinov@178.240.135.64) (Ping timeout: 256 seconds)
[17:12:09] *** Quits: mustache_ride (sid451683@user/mustache-ride/x-6533344) (Ping timeout: 256 seconds)
[17:12:09] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 256 seconds)
[17:12:09] *** Quits: circuitbone (sid355934@user/circuitbone) (Ping timeout: 256 seconds)
[17:12:20] *** Quits: cuppajoeman (sid521943@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[17:12:22] *** Joins: rburton (rburton@user/rburton)
[17:12:23] *** Quits: joel135 (sid136450@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:12:23] *** Quits: sparc (sid160069@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:12:23] *** Quits: hogarius (hogarius@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:12:25] *** Joins: johnny_ (sid481967@hampstead.irccloud.com)
[17:12:25] *** Joins: matthewwilkes (sid500242@uxbridge.irccloud.com)
[17:12:28] *** Joins: hogarius_ (hogarius@uxbridge.irccloud.com)
[17:12:28] *** Joins: AhmedAmerican (sid470527@ilkley.irccloud.com)
[17:12:30] *** Joins: debnet_ (sid330295@python/afpy/debnet)
[17:12:30] *** Joins: Evolver (sid32215@user/evolver)
[17:12:30] *** Joins: mobius (sid478273@uxbridge.irccloud.com)
[17:12:30] *** Quits: sa (sid1055@tinside.irccloud.com) (Ping timeout: 268 seconds)
[17:12:31] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[17:12:32] *** Quits: poiqwepoiqwe (uid525840@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[17:12:36] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[17:12:41] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[17:12:43] *** Quits: lk (sid504574@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[17:12:43] *** Quits: seds (sid492514@user/seds) (Ping timeout: 256 seconds)
[17:12:43] *** Quits: liam (sid7517@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:12:43] *** Quits: st3fan (sid43079@lymington.irccloud.com) (Ping timeout: 256 seconds)
[17:12:43] *** Quits: salimfadhley (sid31217@wikipedia/salimfadhley) (Ping timeout: 256 seconds)
[17:12:45] *** Joins: jposer (sid132110@uxbridge.irccloud.com)
[17:12:47] *** Joins: r0bby_ (r0bby@user/r0bby)
[17:12:49] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[17:12:54] *** Joins: altendky (sid135382@id-135382.hampstead.irccloud.com)
[17:12:59] *** Quits: mindlesstux (sid18072@user/mindlesstux) (Ping timeout: 264 seconds)
[17:12:59] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 264 seconds)
[17:12:59] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 264 seconds)
[17:12:59] *** Quits: drmessano (drmessano@user/drmessano) (Ping timeout: 264 seconds)
[17:12:59] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 264 seconds)
[17:13:00] *** r0bby_ is now known as r0bby
[17:13:04] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[17:13:07] *** Quits: TingPing (sid2800@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[17:13:07] *** Quits: km (sid515529@user/km) (Ping timeout: 268 seconds)
[17:13:07] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 268 seconds)
[17:13:08] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[17:13:08] *** debnet_ is now known as debnet
[17:13:10] *** Joins: salimfadhley_ (sid31217@wikipedia/salimfadhley)
[17:13:14] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[17:13:14] *** Joins: liam_ (sid7517@id-7517.helmsley.irccloud.com)
[17:13:18] *** Joins: KnownSyntax_ (sid233169@user/knownsyntax)
[17:13:18] *** Quits: exarchd (~exarch@98.46.60.169) (Changing host)
[17:13:18] *** Joins: exarchd (~exarch@user/exarchd)
[17:13:29] *** Joins: bjs (sid190364@user/bjs)
[17:13:33] *** Quits: ubert1 (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) (Remote host closed the connection)
[17:13:44] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[17:15:33] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[17:16:07] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[17:16:26] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[17:16:49] <cluelessperson> bjs, I don't only want to run the app in the asyncio event loop
[17:16:53] <cluelessperson> I'm trying to run multiple things
[17:17:06] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[17:17:07] <cluelessperson> app.run literally blocks everything else as I understand it
[17:17:09] <cluelessperson> I don't want that
[17:17:11] <bjs> cluelessperson: well if you're using a library called quart-trio you want trio not asyncio but yeah
[17:17:22] *** Joins: gitesh (uid423739@2a03:5180:f:3::6:773b)
[17:17:27] <bjs> cluelessperson: oh okay, what other things do you want to run in the loop?
[17:17:33] <cluelessperson> that last I gave is oding that
[17:17:45] <cluelessperson> whatever, just some async function
[17:17:47] <bjs> well the print isn't actually running at the same time (since it's not async)
[17:17:53] <cluelessperson> not JUST app
[17:18:01] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[17:18:15] <bjs> cluelessperson: okay, well you can do that, you can start_soon those async functions then you can `await` the coro returned by run_task
[17:18:31] <bjs> you can even await in in another async def so that you can start_soon them all to run concurrently
[17:18:34] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:18:36] <cluelessperson> why not  start_soon(run_task() ?"???
[17:18:48] <bjs> cluelessperson: because start_soon takes the function and calls it
[17:19:00] <bjs> you could start_soon(app.run_task, ...)  I suppose
[17:19:05] *** Joins: ballingt (sid190590@id-190590.helmsley.irccloud.com)
[17:19:47] <bjs> i don't exactly know what run_task *is*, but if it's just an async def then that should work too
[17:19:50] *** Joins: cosimone (~user@93-44-184-239.ip98.fastwebnet.it)
[17:20:02] *** Quits: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl) (Ping timeout: 240 seconds)
[17:20:15] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 260 seconds)
[17:21:11] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[17:21:49] <cluelessperson> it returns a coroutine
[17:21:53] <bjs> cluelessperson: yeah
[17:21:56] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[17:22:32] *** Quits: malwar3hun73r_ (~malwar3hu@134.122.29.124) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[17:23:06] *** Joins: Venhal (sid515085@uxbridge.irccloud.com)
[17:24:18] *** Joins: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl)
[17:25:26] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:28:42] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[17:28:46] *** Joins: binary011 (~binary01@192.110.171.216)
[17:28:47] *** Quits: binary01 (~binary01@192.110.171.216) (Read error: Connection reset by peer)
[17:29:04] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Quit: nyaa~)
[17:29:46] <han-solo> cluelessperson: one thing to note is, your usage was wrong with the `start_soon`
[17:30:12] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:30:17] <han-solo> could you try `n.start_soon(functools.partial(app.run_task, host="0.0.0.0", port=5000))` # ?
[17:30:23] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:31:09] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:31:44] <han-solo> er, already said
[17:31:53] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:31:58] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[17:32:17] <cluelessperson> that amount of "sugar" seems bad, but I'll try it
[17:33:02] <bjs> you shouldn't need partial at all
[17:33:02] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 246 seconds)
[17:33:22] <cluelessperson> exactly
[17:33:26] <cluelessperson> why is this hard
[17:33:33] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:33:34] <cluelessperson> the whole point of asyncio is you run a loop and things on that loo
[17:33:48] <cluelessperson> I have a coroutine that I'm trying to run on that loop, along with other things
[17:33:55] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[17:34:01] <Pilate> app.run isnt a coroutine
[17:34:09] <cluelessperson> app.run_task()  is
[17:34:30] <bjs> cluelessperson: it's not hard, just start_soon(app.run, '0.0.0.0', 5000) (or if you really want to pass by keyword, then use partial)
[17:34:32] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:35:13] <bjs> I mean it's fairly simple, trio gives you start_soon to run a coroutine in the background. You pass it a function and some args.  It calls the function and awaits the resulting coroutine in the background in the nursery
[17:35:19] <amosbird> Hi, how can I implement this get_sub_string_before_colon properly?
[17:35:21] <amosbird> with open(host) as file:
[17:35:23] <amosbird>     lines = file.readlines()
[17:35:25] <amosbird>     hosts = [line.get_sub_string_before_colon() for line in lines]
[17:35:27] <bjs> amosbird: don't paste here :)
[17:35:28] <Yhg1s> amosbird: don't paste here.
[17:35:34] <amosbird> ok
[17:35:42] <amosbird> well, I thought the rule is <= 3 lines
[17:35:45] <Yhg1s> amosbird: 'line' will be a string. You can't add methods to a string.
[17:35:53] <lericson> amosbird: left, middle, right = line.partition(':')
[17:35:54] <cluelessperson>         nursery.start_soon(app.run_task, "0.0.0.0", 5000)
[17:35:55] <cluelessperson> works
[17:36:09] <cluelessperson> https://gist.github.com/cluelessperson/c2f24049a2f2ddad70c7b0260c1929e2
[17:36:15] <amosbird> lericson: how does it fit into the comprehension?
[17:36:17] * cluelessperson smears face across wall
[17:36:20] <lericson> amosbird: it doesn't
[17:36:33] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[17:36:33] <jpic> hi all, is there a way to use an async descriptor getter @property in nowadays python?
[17:36:47] *** Joins: Viewday116 (~Viewday@user/viewday)
[17:36:50] <lericson> jpic: how would that work?
[17:36:53] <cluelessperson> amosbird,    with open(some_file) as f:
[17:36:54] <Yhg1s> amosbird: code snippets of three lines or two, or one, are still much eaier to talk about when they're in a pastebin.
[17:37:06] <jpic> lericson: implicit await on parent event loop
[17:37:10] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[17:37:12] <lericson> jpic: then no
[17:37:22] <amosbird> Yhg1s: really? even one liner?
[17:37:26] <jpic> any other way that works?
[17:37:32] <lericson> jpic: an async getter function lol
[17:37:33] <amosbird> That means the audience needs to open the link
[17:37:48] <Yhg1s> amosbird: correct.
[17:37:52] <lericson> if your property needs to be async, it should probably not be a property
[17:37:54] <jpic> lericson: are you mocking me?
[17:38:22] <Yhg1s> jpic: you can't have an implicit await. Your property would need to return an awaitable, and whatever gets the property would have to await for it.
[17:38:46] <Yhg1s> jpic: if you want to use 'await myobject.the_property', you can do that by just making the property a coroutine.
[17:38:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:39:14] *** Joins: pro_z (~pro_z@37.214.56.218)
[17:39:19] <jpic> is there any new feature that helps syntactic readability in the asyncio world that I might have missed and that you would recommend? I mean against foo = (await Some()).thing
[17:39:25] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[17:39:41] <Ninpo> trio is a nice library for making async easier to reason about/read imo
[17:39:49] *** Joins: Elodin (~weechat@user/elodin)
[17:39:55] <Ninpo> I'm unaware of anything for straight up asyncio though
[17:39:55] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[17:39:59] <Yhg1s> jpic: I assume you mean 'foo = (await Some().thing)'. Nope.
[17:40:01] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[17:40:04] <lericson> jpic: best approach is probably to do my_some = await Some() \n foo = some.thing
[17:40:18] <lericson> my_some*
[17:40:27] *** Quits: kostkon (~androirc@2.142.66.94.static.otenet.gr) (Read error: Connection reset by peer)
[17:40:43] *** Joins: Viewday11 (~Viewday@user/viewday)
[17:40:43] *** Joins: kostkon (~androirc@2.142.66.94.static.otenet.gr)
[17:41:26] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 246 seconds)
[17:41:27] <jpic> thanks, i'm reading the trio tutorial and it shows trio.run and trio.sleep, is there any difference with asyncio.run and asyncio.sleep ?
[17:41:36] <cluelessperson> bjs, han-solo   Thanks for the help, I don't know why I'm losing my mind.
[17:41:59] <bjs> jpic: conceptually? not really.  in practice they're not interchangeable libraries and have slightly different APIs
[17:42:02] <cluelessperson> jpic, they're mostly the same, but I'm not strictly aware of the technical differences.
[17:42:03] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:42:04] <bjs> (e.g. trio.run takes a function not a coroutine)
[17:42:04] *** Joins: kostkon_ (~androirc@2a02:1388:4083:e523:a435:397d:ce6b:1990)
[17:42:14] *** Joins: lastshell (~lastshell@user/lastshell)
[17:42:45] *** Quits: Viewday116 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:42:48] *** Quits: kostkon_ (~androirc@2a02:1388:4083:e523:a435:397d:ce6b:1990) (Read error: Connection reset by peer)
[17:43:16] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[17:43:35] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:44:00] <jpic> thank you, I'm not sure what value trio adds in terms of syntax then
[17:44:08] <Ninpo> bjs: what, p sure I pass async defs to trio.run?
[17:44:24] *** Quits: kostkon (~androirc@2.142.66.94.static.otenet.gr) (Read error: Connection reset by peer)
[17:44:29] <han-solo> still a function :)
[17:44:35] <Ninpo> what's the difference?
[17:44:39] <bjs> Ninpo: yes
[17:45:24] <Ninpo> jpic: the trio docs and NJS' blog explain what trio brings to the table/why it exists
[17:45:46] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:45:55] *** Joins: bjs48 (~bjs@user/bjs)
[17:46:22] *** Quits: bjs (sid190364@user/bjs) (Killed (gold.libera.chat (Nickname regained by services)))
[17:46:22] *** bjs48 is now known as bjs
[17:46:24] <jpic> imagine you have subprocess runner, non async you could do out = Run(...).out, getting the out attribute would internally cause execution and communicate, but with async for me it becomes out = (await Run(...).communicate()).out, or run = await Run(...); await run.communicate(); run.out. Is that correct or is there any better way? thanks
[17:46:35] *** Quits: matthewwilkes (sid500242@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:46:45] <bjs> Ninpo: sorry irccloud is having issues,  what do you mean?
[17:46:46] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Ping timeout: 260 seconds)
[17:46:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:47:00] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 250 seconds)
[17:47:03] <jpic> Ninpo: but it exists since the early days of asyncio before python even had asyncio.run right?
[17:47:11] *** Quits: mobius (sid478273@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:47:17] *** Quits: hogarius_ (hogarius@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[17:47:26] *** Quits: AhmedAmerican (sid470527@ilkley.irccloud.com) (Ping timeout: 250 seconds)
[17:47:42] *** Quits: johnny_ (sid481967@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[17:47:47] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 264 seconds)
[17:47:48] <Ninpo> bjs: I asked what made an async def a function or a coro
[17:47:48] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[17:47:51] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 256 seconds)
[17:47:51] *** Quits: holbrode (sid339826@tinside.irccloud.com) (Ping timeout: 256 seconds)
[17:47:51] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:47:51] *** Quits: KnownSyntax_ (sid233169@user/knownsyntax) (Ping timeout: 250 seconds)
[17:47:51] *** Quits: salimfadhley_ (sid31217@wikipedia/salimfadhley) (Ping timeout: 250 seconds)
[17:47:51] *** Quits: liam_ (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:47:59] <bjs> Ninpo: an async def is a function
[17:48:03] <bjs> the thing it returns is a coro
[17:48:18] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:48:23] *** Quits: jposer (sid132110@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:48:25] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 256 seconds)
[17:48:25] *** Quits: rburton (rburton@user/rburton) (Ping timeout: 256 seconds)
[17:48:32] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 240 seconds)
[17:48:38] *** Quits: Venhal (sid515085@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[17:48:56] <Ninpo> oohhh OK so passing async_def() is passing a coro, passing async_def is passing the function
[17:48:58] <Ninpo> I see
[17:48:59] *** Quits: gitesh (uid423739@2a03:5180:f:3::6:773b) (Ping timeout: 264 seconds)
[17:49:10] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Ping timeout: 250 seconds)
[17:49:10] *** Quits: altendky (sid135382@id-135382.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[17:49:18] <bjs> asyncio mainly works with coroutines,  trio mainly works with functions
[17:49:29] *** Quits: ggnoredo (~user@212.98.236.50) (Remote host closed the connection)
[17:49:35] *** Quits: ballingt (sid190590@id-190590.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:49:36] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 250 seconds)
[17:49:36] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:50:08] <bjs> in its API I mean,  obviously underneath it's a big event loop with coroutines in it :)
[17:50:11] *** Joins: gitesh (~gitesh@183.87.155.24)
[17:50:29] <cluelessperson> https://github.com/python-trio/trio/issues/470
[17:50:34] <gitesh> I am trying flask in jupyter notebook
[17:50:43] <gitesh> I want to know what is a package ?
[17:51:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[17:51:24] <cluelessperson> gitesh, in the context of python libraries, a package is typically an installable package within an environment,  in python the goto is "pip"
[17:51:32] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[17:52:13] *** Joins: mobius (sid478273@uxbridge.irccloud.com)
[17:52:15] <gitesh> cluelessperson ok
[17:52:23] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[17:52:35] <grym> gitesh: a package is a directory with a file in it named __init__.py
[17:52:38] <grym> (more or less)
[17:52:53] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 264 seconds)
[17:53:06] <diverdude> Hello... i have seen that its possible to make a dependency to a git repository in requirements.txt What is required to be able to do that?
[17:53:08] *** Joins: Evolver (sid32215@user/evolver)
[17:53:14] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[17:53:22] *** Joins: LyndsySimon (sid34452@lymington.irccloud.com)
[17:53:25] *** Joins: xkuru (~xkuru@user/xkuru)
[17:53:27] *** Joins: jposer (sid132110@uxbridge.irccloud.com)
[17:53:31] *** Joins: coldmountain (sid484352@helmsley.irccloud.com)
[17:53:44] *** Joins: ormiret (sid314108@lymington.irccloud.com)
[17:53:54] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[17:54:07] *** Joins: johnny_ (sid481967@hampstead.irccloud.com)
[17:54:11] <grym> diverdude: something like `packagename @ git+repo`
[17:54:32] *** Joins: debnet (sid330295@python/afpy/debnet)
[17:54:35] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:54:39] *** Joins: rburton (rburton@user/rburton)
[17:54:41] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[17:55:10] *** Quits: mallkrampus (~mallkramp@172.93.207.88) (Ping timeout: 260 seconds)
[17:55:17] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[17:55:30] <diverdude> grym: yes but i mean what is required from the python package. i want to make a python package which i can import and add in my requirements.txt by pointing to the git repor where its located
[17:55:49] <grym> diverdude: oh.  it needs to be pip installable; there are several ways to do this
[17:56:17] <gitesh> grym and what does that file do?
[17:56:23] <grym> you need things like a setup.py, setup.cfg, and/or a pyproject.toml file
[17:56:39] <grym> gitesh: https://docs.python.org/3/tutorial/modules.html#packages
[17:56:51] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:57:05] *** Joins: pycurious (~Adium@user/pycurious)
[17:57:31] *** Joins: Axy (~Axy@user/axy)
[17:57:53] *** Joins: candyman (~candyman@user/candyman)
[17:58:11] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:58:23] <diverdude> grym: could i use cookiecutter and this template? https://github.com/audreyfeldroy/cookiecutter-pypackage?
[17:58:44] <grym> diverdude: it's easy enough to roll your own, frankly
[17:58:50] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[17:58:53] *** Quits: bjs (~bjs@user/bjs) (Quit: Client closed)
[17:59:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[17:59:11] <grym> diverdude: the link i just pointed gitesh at is probably good reading for you too
[17:59:16] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[17:59:40] <grym> because you're going to make your code into a package, and then add some metadata that makes that package something pip can install
[17:59:51] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[18:00:20] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:2d85:38b9:f7f3:5e1)
[18:00:23] <jpic> diverdude: I use this: https://github.com/codrsquad/setupmeta and I love it, it's really easy and automates things like versions etc
[18:00:50] *** Joins: zoneu (~zoneu@user/zoneu)
[18:00:51] *** Quits: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:00:53] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[18:00:54] *** Quits: m1dnight (~christoph@xvm-104-119.dc0.ghst.net) (Quit: WeeChat 3.1)
[18:01:05] <diverdude> what are people take on poetry in here? Worth using?
[18:01:10] <jpic> you just have to paste the first little example in setup.py and you'll be able to distribute your package
[18:01:17] *** Joins: matthewwilkes (sid500242@uxbridge.irccloud.com)
[18:01:31] <grym> diverdude: i use it and generally like it.  it will certainly make pip installable packages
[18:01:37] *** Joins: metaace (~metaace@user/metaace)
[18:01:43] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[18:01:45] <jpic> i find poetry too defensive for my style but it's very popular
[18:02:15] *** kostkon_ is now known as kostkon
[18:02:18] *** Joins: m1dnight (~christoph@christophe.dev)
[18:02:29] <diverdude> jpic: defensive? in what way?
[18:02:41] <jpic> pip is taking the same road, it became unusable with older big projects
[18:03:02] <grym> uhhh
[18:03:17] <grym> well, it dropped 2.x support anyway
[18:03:27] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[18:03:32] <grym> so you just use an old pip and slog on
[18:03:39] <jpic> diverdude: it does way to much checks for me, it's a waste of time because my policy is continuous integration of upstream releases
[18:03:59] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 264 seconds)
[18:04:05] <jpic> grym: they added recursion checks which made some big requirements files fail to install
[18:04:22] *** Joins: Viewday117 (~Viewday@user/viewday)
[18:04:28] *** Joins: AhmedAmerican (sid470527@ilkley.irccloud.com)
[18:04:29] *** Joins: Venhal (sid515085@uxbridge.irccloud.com)
[18:04:59] <diverdude> can i install all pip installable packages with poetry?
[18:05:28] <grym> diverdude: yes
[18:05:36] <grym> `poetry add` just calls your venv's pip
[18:05:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[18:05:41] *** Viewday117 is now known as Viewday11
[18:07:07] *** Joins: Axy (~Axy@user/axy)
[18:07:10] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[18:07:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 264 seconds)
[18:08:17] *** Joins: mallkrampus (~mallkramp@172.93.207.88)
[18:09:04] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[18:09:12] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[18:10:08] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[18:10:10] *** Joins: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de)
[18:10:16] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[18:10:30] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[18:10:45] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:11:02] *** Joins: bindu (~bindu@user/bindu)
[18:12:26] <ferros> anyone ever had an issue where importing something (DLL for sqlite3 for my case) fails when python script is invoked from git (hook) and when invoked from windows command line (works there), I am confuse
[18:13:24] <cluelessperson> ferros, are they invoking different pythons?
[18:13:42] <ferros> Nope, checked and they invoke the same
[18:13:45] <ferros> That's why I'm confused
[18:14:02] *** Quits: gitly (~gitly@148.252.128.252) (Ping timeout: 240 seconds)
[18:14:29] *** Joins: bjs (sid190364@user/bjs)
[18:14:37] *** Joins: gitesh_ (uid423739@ilkley.irccloud.com)
[18:15:00] *** Joins: Pixi_ (~Pixi@user/pixi)
[18:15:36] <lionslicer> can someone help? what am I doing wrong here?
[18:15:37] <lionslicer> https://bpa.st/DPSA
[18:15:50] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[18:16:02] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:16:05] *** Joins: gitly (~gitly@85.255.236.108)
[18:16:23] <SnoopJ> ferros, fails how?
[18:16:31] <bjs> lionslicer: `(j+j)**2` doesn't  sound like it corresponds to the text "xyzw = (xy + zw)**2"
[18:17:01] <ferros> SnoopJ: there's 'import nltk' in there but ultimately sqlite3 import gives ImportError: DLL load failed
[18:17:27] <ferros> But since it's the same python I'm vaguely confused, guess it must have different priviledges to files or something
[18:17:31] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[18:17:34] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 260 seconds)
[18:17:50] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e120) (Remote host closed the connection)
[18:17:57] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[18:18:01] *** Joins: vaio (~gary@user/ghost)
[18:18:29] <lionslicer> bjs:  I see what you mean. lemme see if I can try something else.
[18:18:53] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::1e0b)
[18:19:14] <SnoopJ> ferros, it might help to see the complete error report. The only privilege you should need is the ability to read the file (and I think it would fail with a different error in that case)
[18:19:31] <bjs> lionslicer: the text seems to be talking about splitting up the digits
[18:19:39] <lionslicer> yup
[18:20:12] <bjs> lionslicer: note that 1234 % 100 == 34, and 1234 // 100 == 12
[18:20:13] <bjs> that might help :)
[18:20:30] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[18:20:42] <Tas-sos> I have a problem with unittest.TestCase
[18:20:54] <Tas-sos> When I enable this :
[18:20:55] <Tas-sos> https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/tests/selenium_tests/agora_unit_tests.py#L30-L33
[18:21:06] <SnoopJ> If the error message is "DLL load failed with error code XXX..." then the XXX should be a win32 error code. I don't see just "DLL load failed" anywhere in the CPython source (it appears to always be followed by some more information about what went wrong)
[18:21:21] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:21:34] *** Quits: onichomp (~onichomp@2806:264:4404:805a:d92:1932:9ead:b12e) (Read error: Connection reset by peer)
[18:22:02] *** sgn_ is now known as sgn
[18:22:11] *** Joins: onichomp (~onichomp@2806:264:4404:805a:d92:1932:9ead:b12e)
[18:22:54] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[18:23:36] *** Joins: bindu (~bindu@user/bindu)
[18:23:37] *** Joins: ballingt (sid190590@helmsley.irccloud.com)
[18:24:05] *** Joins: altendky (sid135382@hampstead.irccloud.com)
[18:24:53] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[18:24:58] *** Joins: r0bby (r0bby@user/r0bby)
[18:25:03] <ferros> SnoopJ: https://i.imgur.com/5DIzTiF.jpeg
[18:25:35] <Tas-sos> I have this problem/failure :
[18:25:35] <Tas-sos> https://pastebin.com/raw/FzCynieY
[18:25:39] *** Joins: akk (~akk@75.161.146.115)
[18:25:46] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[18:25:47] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:26:11] *** Joins: merijn (~merijn@sp10.openwifi.nl)
[18:26:30] *** Quits: gitesh (~gitesh@183.87.155.24) (Quit: gitesh)
[18:26:43] <grooverman_> ferros: you need to install the _sqlite3 module, apparently
[18:26:44] *** gitesh_ is now known as gitesh
[18:26:49] *** grooverman_ is now known as grooverman
[18:26:50] <SnoopJ> _sqlite3 is stdlib
[18:27:01] <SnoopJ> it's the part of sqlite3 that is not-Python
[18:27:41] <Tas-sos> only in this environment :
[18:27:41] <Tas-sos> https://raw.githubusercontent.com/Tas-sos/agora-sp/devel/tests/selenium_tests/Dockerfile
[18:28:01] *** Joins: candyman1 (~candyman@user/candyman)
[18:28:26] <Tas-sos> but when I run the following without comment out lines: https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/tests/selenium_tests/agora_unit_tests.py#L30-L33
[18:29:06] <Tas-sos> locally - with `Python 3.7.3` I have not any problem - everything works well
[18:29:29] <ferros> grooverman: would not have worked invoking python regularly in that case, the issue must be that git runs in some kind of pseudo-linux-vm which breaks this, but I've no idea exactly
[18:29:30] <Tas-sos> only in docker container with `python:3.7.12-bullseye` I have the problem
[18:29:55] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[18:29:55] *** Quits: candyman1 (~candyman@user/candyman) (Remote host closed the connection)
[18:30:16] <SnoopJ> ferros, do you use WSL?
[18:30:31] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[18:31:12] <ferros> Just regular Git for Windows, don't think it uses WSL but maybe I'm wrong
[18:31:20] <SnoopJ> it doesn't, it's native
[18:31:22] *** Joins: Inline (~Inline@aftr-37-201-240-87.unity-media.net)
[18:33:20] *** Joins: et (~et@user/et)
[18:33:58] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[18:34:37] <SnoopJ> ferros, do you have _sqlite3.dll in C:\Program Files\Anaconda3\lib\sqlite3? I am seeing some reports of users having trouble with this because their %PATH% isn't including some other folder where the stdlib DLLs actually live (I've never used conda on windows, personally)
[18:35:42] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[18:35:47] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 264 seconds)
[18:35:58] <SnoopJ> If not, possibly it would be under Anaconda3\Library\bin which is what I'm seeing in the relevant issues on GitHub (and this would be what you want to add to your %PATH%)
[18:37:00] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:37:40] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[18:37:48] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[18:39:52] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:40:14] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 246 seconds)
[18:40:41] *** Quits: vladoski (~vladoski@2001:b07:add:d406:bfc1:12d1:eab7:b467) (Ping timeout: 268 seconds)
[18:41:22] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[18:41:48] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[18:42:52] <ferros> SnoopJ: found the issue, PATH is different when invoked from git bash so it's missing Anaconda3\Library\bin there
[18:43:13] <ferros> Not really sure how that works but guess should be easy enough to fix now that I know what the issue is, thanks a lot!
[18:43:52] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[18:44:04] *** Quits: onichomp (~onichomp@2806:264:4404:805a:d92:1932:9ead:b12e) (Read error: Connection reset by peer)
[18:44:04] *** Joins: yac (~user@user/yac)
[18:44:10] <SnoopJ> 👍
[18:44:22] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:44:54] <SnoopJ> ferros, in the absolute worst case you could fiddle with the PATH from your hook, but there may be a better way to do it, probably buried in the Git for Windows docs
[18:45:07] <lionslicer> bjs: I really don't know how to solve this lol
[18:45:22] <bjs> lionslicer: what part are you struggling with
[18:45:40] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[18:46:13] <jpic> hi all, i'm getting this warning, is it internal to python or is there a problem with my code ?   /usr/lib/python3.9/asyncio/subprocess.py:196: DeprecationWarning: The loop argument is deprecated since Python 3.8, and scheduled for removal in Python 3.10.
[18:46:21] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Client Quit)
[18:46:38] <bjs> jpic: it means you (or some library you're using) is using a feature of the asyncio library that is going to be removed in 3.10
[18:47:03] <bjs> if a library is doing it, and you're not using 3.10 you can probably ignore it.  If you are the one using asyncio and passing the loop parameter, you can just not do that :)
[18:47:18] *** Joins: vlt (~dm@157.230.21.14)
[18:47:20] <lionslicer> well, I know what I have to do, but I don't know how to do it
[18:47:33] <lionslicer> I simply don't know how
[18:47:40] <bjs> lionslicer: okay,  what part do you need help doing
[18:47:44] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:47:53] <jpic> i'm using asyncio directly, with my own asyncio.subprocess.SubprocessStreamProtocol subclass, and thus my own protocol factory, but instanciating a asyncio.subprocess.SubprocessStreamProtocol without a loop argument causes TypeError: __init__() missing 1 required positional argument: 'loop'
[18:48:16] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[18:48:38] <jpic> i will put together a small reproduce code if that helps
[18:48:38] <lionslicer> how to I calculate this? xyzw = (xy + zw)**2?
[18:49:48] *** Joins: chance2105 (~chatzilla@mab.sdf.org)
[18:49:54] *** Quits: zoneu (~zoneu@user/zoneu) (Remote host closed the connection)
[18:50:27] *** Joins: zoneu (~zoneu@user/zoneu)
[18:50:45] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[18:50:47] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 264 seconds)
[18:51:35] <bjs> lionslicer: did you see what I said earlier
[18:51:42] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[18:51:43] *** Parts: zoneu (~zoneu@user/zoneu) ()
[18:51:45] <bjs> lionslicer: 1234 // 100 == 12, 1234 % 100 == 34
[18:51:45] <lionslicer> yes
[18:51:49] <bjs> does that help?
[18:51:58] *** Joins: metaace (~metaace@user/metaace)
[18:52:22] <vlt> Hello. I inherited a Dockerfile with a Python complie step that uses --enable-optimizations (and takes ages to build). What parts of the environment does this optimize for? Does this make sense in a Docker container? (The purpose, though, are a bunch of Python instances that run number crunching jobs of several hours length.)
[18:52:23] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:52:34] <lionslicer> I don't think it got it. at least in my head the properties don't seem to apply in this case
[18:52:42] <bjs> lionslicer: what properties?
[18:53:03] <lionslicer> xyzw = (xy + zw)**2
[18:53:09] <bjs> lionslicer: oh, sure 1234 doesn't satisfy it
[18:53:17] <bjs> but you can check because (12+34)**2 != 1234
[18:53:29] <lionslicer> oh, yeah
[18:53:35] <lionslicer> I forgot I can do that
[18:53:39] *** Quits: davef (~quassel@user/davef) (Quit: Quit)
[18:53:41] <lionslicer> thanks
[18:53:44] <lionslicer> lemme try it
[18:54:20] <Klinda> distutils.errors.DistutilsPlatformError: Microsoft Visual C++ 14.0 or greater is required. Get it with "Microsoft C++ Build Tools": https://visualstudio.microsoft.com/visual-cpp-build-tools/
[18:54:23] <Klinda> why?
[18:54:30] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:54:32] <Tas-sos> I have no problem if I run the tests locally on Debian GNU/Linux 10 (buster)
[18:54:45] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Quit: leaving)
[18:55:10] <Tas-sos> I just running this docker file : https://raw.githubusercontent.com/Tas-sos/agora-sp/devel/tests/selenium_tests/Dockerfile
[18:55:30] <Klinda> I run this pip install -U scikit-learn
[18:55:40] <Tas-sos> but from Jenkins  ( CentOS 7 VM )  I have problem :-/
[18:57:10] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[18:57:11] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com)
[18:57:38] <lionslicer> bjs: it worked
[18:57:41] <lionslicer> https://bpa.st/4EGA
[18:57:43] <lionslicer> thanks!
[19:00:48] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[19:00:48] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[19:00:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:02:07] *** Joins: brabrax (~brabrax@user/brabrax)
[19:02:57] <grooverman> So... I need to fire up few processes from a script that does some monitoring job.
[19:03:52] <grooverman> When the monitoring script detects a problem, it must call another script that does fixes the problem on the system that is being monitored.
[19:04:58] <grooverman> But, it must be non-blocking, it must be an independent child process, I do not need to collect anything from it. Just start it.
[19:05:02] *** Quits: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:05:29] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[19:06:19] *** Joins: igserrano (~ismael@p216-n5.kthopen.kth.se)
[19:06:34] <igserrano> Is it possible to validate with pydantic two different types for the same field?
[19:06:44] *** Joins: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de)
[19:06:45] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[19:06:50] *** Quits: mirai (~mirai@2001:bc8:630:161::1) (Read error: Connection reset by peer)
[19:07:01] *** Joins: dohtem (uid524096@user/dohtem)
[19:07:04] <jess> nedbat: re "eval is really dangerous" is parsing and evaluating an AST any better?
[19:07:14] <grym> igserrano: if you could, i think you'd typehint the field as typing.Union[foo,bar]
[19:07:55] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:07:59] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[19:08:08] *** Joins: waynew (~wayne@user/waynew)
[19:09:09] *** Quits: chance2105 (~chatzilla@mab.sdf.org) (Quit: ChatZilla 0.9.99 [SeaMonkey 2.53.9.1/20210921174532])
[19:11:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:11:55] <Tas-sos> I have something like that : https://stackoverflow.com/questions/62768963/error-running-unit-tests-using-pytest-attributeerror-testcasefunction-objec
[19:12:18] <igserrano> @grym Are foo, bar BaseModel classes?
[19:13:22] *** Joins: fikran (~fikran@user/fikran)
[19:14:29] <grym> igserrano: or like, str and int
[19:15:50] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:16:04] <grym> igserrano: https://bpa.st/C7OA  that seems to work
[19:17:56] <phy1729> It's easier to restrict an AST to a safe subset at least
[19:18:29] <jpic> indeed, it seems like this warning is internal to python, given I could get it with the stdlib alone, tried removing both places where there is a loop argument in this code but then I get the TypeError: https://bpa.st/2K3Q
[19:19:00] <jpic> I really thought it was part of the release process to fix internal warnings, good to know
[19:19:29] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:19:41] <jpic> or, I'm using an API that is meant to be deprecated but lacks a DeprecationWarning? would like to know if this is the case
[19:19:42] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:20:16] *** Joins: magla (~gelignite@55d4f4a1.access.ecotel.net)
[19:20:32] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:20:50] <jpic> or, am I doing anything else wrong right there?
[19:21:19] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:21:59] <phy1729> It doesn't appear that directly creating an asyncio.subprocess.Process is documented at all https://docs.python.org/3.9/library/asyncio-subprocess.html#asyncio.asyncio.subprocess.Process
[19:22:14] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[19:22:20] <jpic> I feel like I've tried everything, besides editing python's asyncio/subprocess.py of course
[19:23:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[19:24:34] *** Joins: dez (uid92154@user/dez)
[19:24:46] <jpic> interesting, thanks phy1729, I guess I should go for what's there nowadays: https://docs.python.org/3.9/library/asyncio-protocol.html#loop-subprocess-exec-and-subprocessprotocol awesome!!
[19:24:50] *** Quits: rsx (~dummy@ppp-188-174-137-231.dynamic.mnet-online.de) (Quit: rsx)
[19:25:06] *** Joins: pycurious (~Adium@user/pycurious)
[19:25:57] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[19:26:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:27:08] <jpic> looks way cleaner too ;)
[19:28:26] *** Quits: dld (~dld@2601:197:600:1210:1d51:fa28:794f:615f) (Ping timeout: 245 seconds)
[19:28:27] *** Joins: darksun (~darksun@user/darksun)
[19:28:28] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[19:28:29] *** Joins: Klinda (~superleag@user/klinda)
[19:29:45] *** Joins: brabrax (~brabrax@user/brabrax)
[19:29:49] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[19:30:08] *** Quits: spai (~spai@user/spai) (Quit: You have been kicked for being idle)
[19:30:23] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[19:32:11] *** Quits: merijn (~merijn@sp10.openwifi.nl) (Ping timeout: 264 seconds)
[19:33:36] *** Quits: Jefren1 (~Jefren@70.35.67.14) (Ping timeout: 250 seconds)
[19:34:10] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:34:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:35:55] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:36:11] *** Quits: jbkkd (~jbkkd@109.226.48.143) (Ping timeout: 250 seconds)
[19:36:49] <igserrano> grym: very nice, thanks
[19:37:01] *** Quits: Yasumoto (~Yasumoto@136.152.37.118) (Remote host closed the connection)
[19:37:25] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[19:38:21] *** Joins: malwar3hun73r (~malwar3hu@134.122.29.124)
[19:38:29] <grym> igserrano: i think you could Foo(x=1.0) and wind up with an instance where x=1
[19:38:30] *** Joins: __that__ (~Guest8@161.116.133.77)
[19:38:33] <__that__> Hi all
[19:38:35] <grym> igserrano: so this isn't perfect
[19:39:01] <grym> igserrano: yeah, you can pass a float in and get an int back
[19:39:11] <grym> a (rounded) int
[19:39:20] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[19:39:48] <Tas-sos> Please could anyone help me about this lines : https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/tests/selenium_tests/agora_unit_tests.py#L30-L33
[19:39:54] <Tas-sos> why I get :
[19:40:09] <Tas-sos> AttributeError: 'TestCaseFunction' object has no attribute 'errors'
[19:40:10] <__that__> I know this questions is very generalist. I have been proposed to do a project in R to visualise species distributions based in a lot of data. The perception I have always had is that R is a better "visualiser" than Python. However I am not sure if this is any longer true
[19:40:10] *** Joins: califax (~califax@user/califx)
[19:40:16] *** Joins: node1 (~node1@user/node1)
[19:40:52] *** Joins: Jefren1 (~Jefren@70.35.67.14)
[19:41:03] <__that__> I am Python developer and a bit reluctant to get into R although the community around me are R users. I do no need to use R if I wished hence I was wondering to actually use Python
[19:41:40] <grym> __that__: https://pypi.org/project/plotnine/  if you have R folks around, can be pretty natural
[19:42:01] *** Quits: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl) (Remote host closed the connection)
[19:42:09] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[19:42:34] <ammar2> __that__: that maybe used to be the case when just raw matplotlib was your only option in python but between newer graphing libraries and jupyter notebooks, Python is awesome for visualizing data
[19:42:39] <akk> __that__: I've only used R a little (for a MOOC), but it did seem a lot easier to take data you have and just plot it, without wrestling with questions like "how do I get matplotlib make the labels legible?"
[19:43:05] <grym> akk: ehh, it's just shifting the complexity in some ways
[19:43:19] <akk> __that__: It wasn't that R could do visualizations python couldn't, just that the detaults seemed to "just work" which isn't so true for matplotlib (I haven't tried plotnine that grym recommended).
[19:43:28] *** Quits: binary011 (~binary01@192.110.171.216) (Remote host closed the connection)
[19:43:37] *** Quits: irrgit_ (~irrgit@192.241.175.183) (Remote host closed the connection)
[19:43:57] <__that__> That's good to hear
[19:44:09] <grym> p9 is ggplot for python.  deep at its core is matplotlib, but it's been very carefully hidden
[19:44:19] <__that__> Feel more relaxed with Python
[19:44:27] <__that__> and also a good excuse to move on from Python 3.6
[19:45:15] <jpic> in this high level example, is there any way to await for any of stdout or stderr line? ie. like with select() https://docs.python.org/3.9/library/asyncio-subprocess.html#examples
[19:45:43] <jpic> or, is it necessary to use a SubprocessProtocol? https://docs.python.org/3.9/library/asyncio-protocol.html#asyncio-example-subprocess-proto
[19:46:41] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[19:47:02] <johnjay> is numpy not available on aarch64?
[19:47:18] <johnjay> i tried installing scikit-learn on a mac and it errored at the first step
[19:47:18] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:47:37] <grym> johnjay: you might need to build your own
[19:47:43] <grym> https://tilcode.blog/2021/06/14/how-to-install-numpy-and-pandas-for-data-science-in-a-m1-macbook/
[19:47:50] <johnjay> ah ok
[19:47:57] <grym> (but it should build!)
[19:48:18] <johnjay> it said something about setup.py is deprecated and to use git --something
[19:48:24] *** Quits: __that__ (~Guest8@161.116.133.77) (Quit: Client closed)
[19:48:26] <johnjay> but it was a ton of error messages
[19:48:40] <grym> you can ignore those things i think
[19:48:56] *** Joins: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl)
[19:49:17] *** Quits: yaalon (~yaalon@24.243.76.137) (Read error: Connection reset by peer)
[19:49:33] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[19:49:52] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:50:03] *** Joins: elkclone (~elkclone@user/elkclone)
[19:51:36] *** Quits: hailhydra (~hailhydra@136.36.153.168) (Ping timeout: 268 seconds)
[19:51:36] <johnjay> ah ok. that link you gave suggests a way to install pandas is to git clone the repo then run 'python3 setup.py install'
[19:51:46] <johnjay> but i thought setup.py was deprecated. lol
[19:51:48] <grym> no, `venv/bin/pip install`
[19:52:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:52:05] <grym> `python setup.py` is bad; setup.py is fine but is meant to be eaten by pip
[19:52:33] *** edro is now known as edr
[19:52:55] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[19:53:14] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:54:13] <johnjay> well either way i'm out of luck. the command that link said for numpy vomitted a ton of error messages
[19:54:22] <mav`rik> is there a nice way to check "is this thing a collection, that's not a string type" (the joys of writing a custom JSONEncoder)?
[19:54:32] <grym> johnjay: bpaste it
[19:54:32] <johnjay> i can't tell for sure but skimming it looks like it wants libraries in /Library and not in my home directory
[19:55:12] <grym> johnjay: bpa.st/+python+pytb+bash
[19:56:25] *** Joins: yaalon_ (~yaalon@24.243.76.137)
[19:56:34] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[19:56:50] *** Joins: binary01 (~binary01@192.110.171.216)
[19:57:10] *** Quits: yaalon (~yaalon@24.243.76.137) (Read error: Connection reset by peer)
[19:57:24] <johnjay> alright learning how to do that
[19:57:25] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[19:57:27] <johnjay> sec
[19:57:54] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 260 seconds)
[19:58:35] *** Quits: mallkrampus (~mallkramp@172.93.207.88) (Ping timeout: 264 seconds)
[19:58:47] *** Joins: zaz\ (~zaz@poneybl.eu)
[19:59:12] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[19:59:35] *** Quits: matrixbot_bartab (~matrixbot@195.200.221.101) (Ping timeout: 250 seconds)
[20:00:00] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[20:00:20] <grym> i think it's the --no-binary thing that will get you the sources (which then will be built for you)
[20:00:58] <johnjay> that link you provided wants a pytb and a bash file as well
[20:01:04] <johnjay> clicking remove
[20:01:23] <grym> oh i just added some extra files for you in case you needed 'em
[20:01:33] <johnjay> hmm exceeded size limit. lol
[20:01:35] <grym> hahah
[20:01:46] *** Joins: bn_work (uid268505@uxbridge.irccloud.com)
[20:01:51] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[20:01:56] <johnjay> by the way this is why people don't report bugs or at least i don't
[20:01:56] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[20:02:02] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[20:02:05] <johnjay> too much work to learn the reporting system, organize a report, send it, etc
[20:02:33] <johnjay> i probably should submit that emacs bug though i told you
[20:02:39] <johnjay> https://dpaste.org/7NNB
[20:02:41] <johnjay> ok that worked
[20:02:48] *** Joins: nomic (~nomic@185.192.69.7)
[20:03:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:03:35] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[20:03:50] <grym> you might need some deps that macs don't ship with
[20:03:55] <grym> like blas
[20:03:57] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:03:58] <schemanic[m]> Hello
[20:04:05] <schemanic[m]> Is there a way to conditionally pass an argument to a function?
[20:04:25] <puff> I was just answering a question about python and virtual environments and I wondered what the current defacto standard is.  I started with virtualenv, and then venv, and then there's the one built into pip (is that actually distinct or does it call through to venv?  Or do both venv and pip call through to common binaries?) and I keep hearing about Conda.
[20:04:25] <ChrisWarrick> schemanic[m]: what do you mean by “conditionally pass”?
[20:04:28] <johnjay> really? ok. i had no idea how to parse that output. do you have numpy like with rosetta or something?
[20:04:40] <grym> johnjay: i don't have a M1 :(
[20:04:43] <ChrisWarrick> puff: there is no environment manager built into pip, pip and venv are separate
[20:04:50] <schemanic[m]> I have a boto3 function that I'm calling from inside my own function, and I only want to pass an argument to the boto3 func if the top level func has received an argument
[20:04:54] <johnjay> ah gotcha.
[20:04:59] <johnjay> for some reason i thought you said you did
[20:05:17] <johnjay> i think i was talking to someone else who did have one cause he was talking about porting things to arm64
[20:05:35] <Tas-sos> I have *exactly* the same inveronment localy and in docker
[20:06:03] <Tas-sos> but when I execute from docker I have an unexpected error!
[20:06:03] <Tas-sos> https://pastebin.com/raw/wqKd4VZ7
[20:06:07] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 256 seconds)
[20:06:12] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[20:06:42] <Tas-sos> Please, some help/idea/something ?
[20:06:46] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[20:07:09] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:07:10] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[20:07:31] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[20:07:47] <grym> johnjay: sadly no,not i
[20:07:53] <puff> ChrisWarrick: Ah right, I was confusing pipenv and "python3 -m venv"
[20:08:12] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[20:08:14] <johnjay> i think there's a way to install x86 things in rosetta. not sure exactly but he gave me an example
[20:08:22] <puff> Anyway, my question still stands, is there a defacto standard?
[20:08:23] *** Parts: exarchd (~exarch@user/exarchd) (The Lounge - https://thelounge.chat)
[20:08:25] <grym> johnjay: that might be the easy win for you
[20:08:26] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 246 seconds)
[20:08:35] <grym> puff: then no there's the usual 18 defactos
[20:08:46] <ChrisWarrick> puff: (and pipenv is garbage)
[20:08:50] <johnjay> yeah he had some weird trick of running terminal in x86 mode and somehow that made everything x86.
[20:08:58] <grym> puff: (but tools like poetry, pipenv, flit ... essentially vendor venv/virtualenv/pip)
[20:09:17] <puff> grym: Can you explain more about that?
[20:09:17] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[20:09:19] <grym> puff: so the building blocks are constant, how you make your lego set is a matter of taste
[20:09:27] <puff> grym: Not the garbae part, the vendor part :-)
[20:09:34] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[20:09:36] <grym> puff: i belive pipenv literally ships its own pip
[20:09:39] *** Joins: knstn (~knstn@ppp-94-66-57-29.home.otenet.gr)
[20:09:44] <grym> i do not think poetry and flit do
[20:09:46] <puff> Do you mean that a lot of these tools use the same underlying binaries etc?
[20:09:49] <puff> Ah, okay.
[20:09:55] <grym> puff: yes, they all use the same underlying ideas
[20:10:04] <grym> with different layers of chrome glommed on top
[20:10:31] <johnjay> grym: i'm very confused. it says successfully installed numpy. installed it into what? where?
[20:10:47] <grym> conceptually, poetry is not very much different than "just " automating `python -m venv somespecialvenv; somespecialvenv/bin/python -m pip install ... `
[20:10:58] *** Joins: mallkrampus (~mallkramp@172.93.177.93)
[20:10:59] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[20:11:00] <grym> johnjay: `python -c "import numpy; print(numpy)"`
[20:11:05] <puff> grym: Well they're all using the same OS concepts, but is there any commonality of code, etc, in the tools themselves?
[20:11:36] *** Joins: hel0 (~hel0@user/redrum88)
[20:11:40] <grym> puff: i _think_ poetry uses the venv and pip that its python have
[20:11:43] <johnjay> it says /opt/homebrew/lib/python3.9/site-packages/numpy/__init__.py
[20:11:45] <puff> Or to put it another way, obviously the same building blocks go into all of them, etc.
[20:11:49] <puff> Okay.
[20:11:51] <puff> Thanks.
[20:12:32] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[20:12:38] *** Quits: igserrano (~ismael@p216-n5.kthopen.kth.se) (Ping timeout: 246 seconds)
[20:12:46] <grym> johnjay: that looks like the install location for your "base" brew-managed python 3.9 install
[20:13:02] <johnjay> grym: if i check in the .dylibs subfolder it also says libopenblas.0.dylib is arm64. so you're right it does depend on blas somehow
[20:13:15] <puff> Also, I get the feeling that most virutal environment tools use the same python package system, but a few (Conda?) don't.
[20:13:20] <johnjay> true
[20:13:26] <grym> puff: conda is a totally other kettle of fish, yes
[20:13:38] <johnjay> but which python refers to /usr/bin/python which is the default mac version
[20:13:51] <johnjay> oh it's because i invoked it as python3 not python
[20:13:54] <grym> johnjay: yeah, who wins on $PATH is ..up for grabs
[20:14:22] <johnjay> apparently i have python2 as the native and python3 in /opt/homebrew
[20:14:29] <johnjay> does python3 not exist natively on mac?
[20:14:45] <grym> i think you'd have /usr/bin/python3, but i really don't know
[20:14:54] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[20:15:01] <grym> as a philosophical position, i try to ignore system python as thorougly as possible
[20:15:08] <johnjay> i see
[20:15:18] *** Quits: yaalon_ (~yaalon@24.243.76.137) (Remote host closed the connection)
[20:15:19] <johnjay> i'm confused why it said openblas was arm64 though
[20:15:30] <johnjay> i'm running terminal in x86 mode like that person showed me
[20:15:33] *** Joins: ali1234 (~al@user/ali1234)
[20:15:48] <johnjay> homebrew i believe i installed from regular console as well. so how i can use numpy i don't understand exactly
[20:15:59] *** Quits: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Remote host closed the connection)
[20:16:18] <grym> johnjay: right now, you have numpy installed if you call python3.9 that was installed by brew
[20:16:26] *** Joins: davef (sid287421@user/davef)
[20:16:32] *** Joins: Linux77 (~Linux7_7@2804:d45:8c02:b300:a12c:8838:4db4:91c9)
[20:16:38] <grym> that interpreter will be able to import numpy
[20:16:52] <johnjay> oh i guess it put it in site packages
[20:17:23] <grym> for that python's site
[20:17:28] <puff> Is it just me, or does Conda/Anaconda seem more popular in a) the mac world, b) the data science world?
[20:17:39] <johnjay> yes but i did it in x86 mode. but it said   Downloading numpy-1.21.4-cp39-cp39-macosx_11_0_arm64.whl
[20:17:44] <grym> puff: for a while, conda was very popular on windows
[20:18:38] <grym> conda has a data science niche, but data science core libraries do not require conda
[20:18:55] <johnjay> now i'm even more confused. the pip3 i have is /usr/bin/pip3 but i don't have /usr/bin/python3
[20:18:56] <johnjay> @_@
[20:19:02] <akk> puff: I would have said more windows, but it's definitely slanted toward data science and machine learning.
[20:19:12] <grym> johnjay: https://snarky.ca/why-you-should-use-python-m-pip/  :/
[20:19:12] <puff> grym, akk: Thanks.
[20:19:46] <grym> i'm in ML/science, and conda crops up from time to time but i can't recall a case where it was obligatory
[20:19:51] <grym> (which is good; i don't use it)
[20:20:08] *** Joins: binary01 (~binary01@192.110.171.216)
[20:20:09] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:20:13] <johnjay> grym: yikes!
[20:20:25] *** Joins: philectro (~quassel@2a02:2788:9a4:946:82ea:b277:6640:1c7f)
[20:20:28] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:20:29] <SnoopJ> johnjay, `pip3` is usually a really tiny shim anyway, but if you want to avoid heartache, do what Brett advocates in that post, invoke it as `python3 -m pip`
[20:20:32] *** Joins: hogarius (hogarius@uxbridge.irccloud.com)
[20:20:38] <grym> johnjay: indeed.
[20:20:40] <SnoopJ> that will *always* give you pip for the Python you pointed at
[20:21:02] <johnjay> python3 -m pip3 doesn't work rofl
[20:21:09] <SnoopJ> It's -m pip, not pip3
[20:21:13] <SnoopJ> The module is named pip.
[20:21:18] <johnjay> yes. that's why it's hilarious
[20:21:19] <grym> johnjay: my local dev hygiene practices extend to `export PIP_REQUIRE_VIRTUALENV=1` for reasons like this
[20:21:23] <SnoopJ> johnjay, if you say so
[20:21:42] <johnjay> well i love good game of "guess the command I'm thinking" in the morning
[20:21:44] <johnjay> so that was fun
[20:22:29] *** Joins: iftheraincomes (~iftherain@2804:14d:5c5b:9352:c17f:76a8:a52b:d028)
[20:22:45] <SnoopJ> the module is always named pip. Sometimes, there is an executable named `pip3`. Using it is kind of a bad idea unless you're in a virtual environment.
[20:22:51] *** Joins: yaalon (~yaalon@24.243.76.137)
[20:22:56] <SnoopJ> Ideally, don't guess.
[20:25:16] <johnjay> ideally bugs don't exist either
[20:25:22] <johnjay> but sadly we don't live in an ideal world
[20:25:29] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[20:25:35] <johnjay> but thanks at least i have numpy now. so that's good
[20:25:45] *** Joins: anonymeowo (~anonymeow@45.90.57.51)
[20:26:21] *** Quits: iftheraincomes (~iftherain@2804:14d:5c5b:9352:c17f:76a8:a52b:d028) (Client Quit)
[20:26:46] <puff> Question, where do the packages that pip/pip3 install live?  I assume it's something like ubuntu or debian packages, where there's a central repository that's been endorsed by somebody (Guido?)?
[20:26:51] *** Joins: alzgh (~alzgh@user/alzgh)
[20:27:10] <ChrisWarrick> puff: pypi.org
[20:27:10] <grym> puff: nope
[20:27:17] <ChrisWarrick> puff: pypi is open to uploads from anyone
[20:27:26] <grym> oh, i thought you meant locally :)
[20:27:40] <puff> Thanks.
[20:27:51] <puff> Yeah, I meant in the sense that ChrisWarrick answered.
[20:28:01] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:28:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:28:43] <ChrisWarrick> (yeah, I initially thought of the other meaning :) - and the answer to that one can be revealed by `python -m site`)
[20:29:37] *** Quits: yaalon (~yaalon@24.243.76.137) (Read error: Connection reset by peer)
[20:33:05] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:33:24] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[20:34:07] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[20:35:00] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[20:38:14] *** Joins: vladoski (~vladoski@2001:b07:add:d406:3c91:4335:8b8a:b120)
[20:38:23] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[20:38:50] *** Joins: computeiro (~Wender@189.37.64.214)
[20:39:53] <Swahili> Q: I'm not a python dev, but helping a 3d artist friend, writing a script. I'm on python 3 and he is on python 2.7.
[20:40:03] <Swahili> The issue seems to be here: requests.get(apiUrl.replace('$id', str(currFrame))).json()
[20:40:09] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:40:19] <ChrisWarrick> Swahili: ask them to upgrade to python 3
[20:40:20] <Swahili> If I hard-type requests.get('foobar.com/api/xxx').json() works fine
[20:40:44] <Swahili> @ChrisWarrick thanks for looking! I'd like that instead but he doesn't know how
[20:40:45] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 250 seconds)
[20:40:57] <ChrisWarrick> Swahili: what platform is he in?
[20:40:59] <Swahili> apparently comes shipped with "Houdini"
[20:40:59] <ChrisWarrick> s/in/on/
[20:41:21] <ChrisWarrick> Swahili: oh, then you’d need to install dead python 2 and debug on it
[20:41:29] <Swahili> ChrisWarrick: I think it's doable, to upgrade but if I can find the syntax different maybe would be easier for now
[20:41:33] *** Quits: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:41:41] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:41:46] <Swahili> ChrisWarrick: Is there an online repl I can use a particular version for python?
[20:41:53] *** Joins: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy)
[20:42:00] <InPhase> Swahili: I used to point people to this.  It would be nice if they changed it to start counting up regarding how long ago it reached end of life.  :)  https://pythonclock.org/
[20:42:03] <ChrisWarrick> Swahili: helping by proxy doesn’t really work
[20:42:16] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:42:27] <Swahili> ChrisWarrick: I sent that to him :~D
[20:42:32] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:42:45] <Swahili> @ChrisWarrick you are right, specially when trying to help friends and just gaining frustration with this
[20:42:47] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[20:43:03] <ChrisWarrick> Swahili: you’ll help the most if you install python 2 on your machine and get the script to work
[20:43:56] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[20:44:09] <Swahili> ChrisWarrick: from top of your head do you see any issue here? apiUrl.replace('$id', str(currFrame)
[20:44:15] <Swahili> missing )
[20:44:22] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[20:44:27] <ChrisWarrick> Swahili: you’d need the full traceback
[20:45:02] <ChrisWarrick> if I had to guess, it’s probably about mixing up bytestrings and unicode strings
[20:45:13] <Swahili> ChrisWarrick: yeh that's a good bet!
[20:45:34] <Swahili> Is casting correctly done here? str(1)
[20:46:07] <ChrisWarrick> Swahili: pastebin full code and traceback
[20:46:55] <Swahili> ChrisWarrick: https://paste.sh/nRQUo2Fv#GrFkWRo9V_GQfDoheuFx3TwU
[20:46:55] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[20:47:01] *** Quits: vit (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[20:47:17] <ChrisWarrick> Swahili: and the traceback?
[20:47:18] *** Joins: vit (~vit@chello085216193138.chello.sk)
[20:47:25] <Swahili> ChrisWarrick: sorry just copying from him
[20:47:25] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[20:47:28] <Swahili> https://paste.sh/IZYepJ0b#jr3gJ88StNq0o2bHQJaMXU9L
[20:47:52] <Swahili> the "http://" ?
[20:48:36] <ChrisWarrick> Swahili: this looks really weird
[20:48:53] <ChrisWarrick> Swahili: is this houdini thing perhaps messing with python code? what if you try using regular string formatting instead of $id?
[20:48:54] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:49:02] <Swahili> ChrisWarrick: yup! And if hardtype the address it works, works fine on python 3.9
[20:49:04] <ChrisWarrick> Swahili: apiUrl = "https://noodles-weather-api-9vly2.ondigitalocean.app/weather/{}"
[20:49:14] *** Joins: alzgh (~alzgh@user/alzgh)
[20:49:28] <ChrisWarrick> Swahili: result = requests.get(apiUrl.format(currFrame)).json()
[20:49:29] <Swahili> ChrisWarrick: I'm not a python dev so when I need something I check the doc (i code in other languages)
[20:49:34] <Swahili> I'll look for string formatting
[20:49:43] <Swahili> Oh thanks! I'll try ;)
[20:49:49] *** Trieste_ is now known as Trieste
[20:50:20] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[20:50:54] <Swahili> ChrisWarrick: do I have to cast the numer? as in requests.get(apiUrl.format(str(currFrame))).json()
[20:50:59] <ChrisWarrick> Swahili: no
[20:51:27] <Swahili> ChrisWarrick: Ok, sent to him, let's see if it runs :)
[20:51:36] <Swahili> is there a version manager for python?
[20:51:44] <ChrisWarrick> Swahili: pyenv
[20:51:48] <Swahili> ChrisWarrick: awesome ;)
[20:52:00] <ChrisWarrick> Swahili: but if you’re dealing with some fancy platform that mangles code, all bets are off anyway
[20:52:14] <Swahili> ChrisWarrick: exactly!
[20:52:38] <Swahili> Let's hope not :) I asked him to upgrade, his answers was that "installed 18.5 and it comes with this, and scripts depend on 2.7"
[20:53:27] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:54:19] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:54:26] <grym> looks like houdini can run py3, at least
[20:54:37] <grym> it looks like a blenderish thing that's not blender
[20:54:44] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:55:29] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[20:55:32] <Swahili> grym: Blender is so much better, I used to work with Blender in early 2000's and huge fan of Ton Rosendal and the Blender foundation
[20:56:01] <Swahili> I have no idea why someone would use Houdini, I really feel its like one of those software applicartions or games that used to come in the cereal breakfast boxes in the 90s
[20:56:31] <Swahili> no disrespect to the devs, but I haven't had such a terrible user experience for ages - and that was just by installing their Apprentice version
[20:56:31] *** Joins: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de)
[20:56:49] <Swahili> I had to work with /etc/host, renaming my machine to not include dash in the name, etc
[20:56:58] <SnoopJ> "Immutable objects' contents never change." sigh, this one is so persistent
[20:57:23] *** Quits: Xeago (~Xeago@user/xeago) (Ping timeout: 264 seconds)
[20:57:36] <bjs> SnoopJ: was that an intended pun
[20:57:36] *** Joins: shawwwn (uid6132@helmsley.irccloud.com)
[20:57:45] <SnoopJ> it was not
[20:57:51] <grym> finest kind
[20:57:53] <bjs> okay, if it was I would have had to shame you
[20:58:13] <SnoopJ> I suppose it's not incorrect if we rules-lawyer about what "contents" means, but it's careless either way
[20:58:59] <grym> SnoopJ: did you run across someone surprised by the ([],)[0].append(1) thing working?
[20:59:18] <SnoopJ> grym, no
[20:59:24] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[20:59:32] <SnoopJ> https://mathspp.com/blog/pydonts/pass-by-value-reference-and-assignment
[21:00:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:00:38] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:00:44] <deniska> pass by irc flame wars
[21:01:57] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:02:33] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[21:03:05] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[21:03:12] <SnoopJ> deniska, flame wars?
[21:03:53] <ChrisWarrick> between people who say “python is pass by reference” and “python is neither”
[21:04:05] <deniska> SnoopJ: I remember derailing this channel a couple times by accident
[21:05:03] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:07:40] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:07:53] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[21:10:09] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[21:10:25] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[21:12:03] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:12:57] *** Joins: tobybl (~tobybl@213.31.135.91)
[21:13:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:14:27] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:15:03] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[21:15:17] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[21:15:24] *** Joins: dld (~dld@73.61.8.16)
[21:15:35] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:15:38] *** Joins: alzgh (~alzgh@user/alzgh)
[21:16:08] *** Joins: tobybl_ (~tobybl@213.31.135.91)
[21:17:21] *** Joins: kostkon_ (~androirc@2a02:1388:4083:e523:d12f:8684:b8a6:ed39)
[21:18:05] *** Quits: tobybl_ (~tobybl@213.31.135.91) (Client Quit)
[21:18:23] *** Quits: Teacup (~teacup@user/teacup) (Ping timeout: 264 seconds)
[21:18:27] *** Quits: tobybl (~tobybl@213.31.135.91) (Ping timeout: 250 seconds)
[21:19:35] *** Joins: mimmy (~mimmy@72.142.88.18)
[21:19:48] *** Joins: tobybl (~tobybl@213.31.135.91)
[21:19:55] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[21:20:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[21:20:46] *** Joins: bloody (~bloody@user/bloody)
[21:21:14] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[21:21:14] *** Quits: kostkon (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 246 seconds)
[21:21:28] *** Joins: binary01 (~binary01@192.110.171.216)
[21:22:42] *** Joins: fikran (~fikran@user/fikran)
[21:23:47] *** Joins: arinov (~arinov@213.194.126.155)
[21:24:05] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[21:24:29] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[21:24:44] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:24:52] *** Joins: Teacup (~teacup@user/teacup)
[21:25:17] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:25:40] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:25:47] *** Quits: computeiro (~Wender@189.37.64.214) (Quit: Leaving)
[21:26:41] *** Quits: mallkrampus (~mallkramp@172.93.177.93) (Ping timeout: 250 seconds)
[21:27:17] *** Joins: menace (~someone@user/menace)
[21:27:23] <ksynwa> Have a bit of a strange question. Let's say I have a class Node that has an attribute Node.children which is a list. So if I have a Node `n`, I can set its children by doing `n.children = [...]`. But if I have a function that like `def get_children(node): return node.children`, and I get `children` by doing `children = get_children(node)`, is there a way for me to change `node`'s children by
[21:27:25] <ksynwa> manipulating this `children` variable?
[21:27:58] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[21:28:11] <ksynwa> Like some pointer magic
[21:28:14] <TML> so is there any way to make "pip search" work these days - e.g., could I run a private copy of the PyPI XMLRPC endpoint and instruct pip to use that?
[21:28:45] *** Joins: TingPing (sid2800@helmsley.irccloud.com)
[21:29:59] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 256 seconds)
[21:30:08] <raek> ksynwa: no :-)
[21:30:34] <roxfan> https://pypi.org/project/pip-search/
[21:30:35] <ksynwa> No worries
[21:30:47] <ksynwa> Thanks for responding :)
[21:30:50] <raek> ksynwa: well, you can modify the list, but you cannot replace it with a different one inside n without access to n
[21:31:18] *** Joins: vimart (~vimart@85.255.236.236)
[21:31:21] <jinsun> TML: there are packages that scrape pypi, but pip itself doesn't have anything and xmlrpc endpoint is not coming back
[21:31:33] <raek> you cannot get a reference to a variable in python like you can in C++, for instance
[21:31:57] <TML> jinsun: I know it's not coming back, I can't blame them at all. Just wondering what solutions there are for those who are willing to build a private index.
[21:32:36] *** Quits: kostkon_ (~androirc@2a02:1388:4083:e523:d12f:8684:b8a6:ed39) (Ping timeout: 245 seconds)
[21:32:44] *** Quits: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:32:51] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:32:56] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:33:32] *** Joins: Deneb (~johnch@117.111.189.80.dyn.plus.net)
[21:33:42] <BlueSky> when using argparser to make a script, after storing the bunch of variable data, is it a bunch of if statements or is there any better way to do it?
[21:33:49] <jinsun> TML: ah okay, earlier today I learnt about https://github.com/pypiserver/pypiserver which seems to support pip search according to the readme
[21:34:07] <TML> jinsun: Thanks!
[21:34:38] <TML> raek: Uh - are you sure about your answer to ksynwa's question?
[21:34:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:34:51] *** Joins: kostkon_ (~androirc@2a02:587:a108:5f73:d067:8cf:12ba:3d42)
[21:34:57] *** kostkon_ is now known as kostkon
[21:35:01] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[21:35:02] <Deneb> I have a byte array, ba, and am trying to append a byte to it with ba.append(). The byte is stored as an integer, 128 (hex 0x80). I have tried toByte and byte([value]) but both give me errors . How does one do this simple thing in python?
[21:35:14] <TML> ksynwa: Maybe I misunderstood the question, but https://replit.com/@tml/CavernousNewLaw#main.py
[21:35:43] <TML> Deneb: What is type(ba)?
[21:36:48] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[21:37:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:37:21] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[21:37:22] *** ayusta is now known as ayustae
[21:37:22] <Deneb> ba is bytearray
[21:37:33] *** Joins: martums (~martums@user/martums)
[21:37:33] <Deneb> ba = bytearray()
[21:37:45] <deniska> a = bytearray(); a.append(128) works fine
[21:37:56] <TML> ok, just making sure you weren't loosely applying the term "byte array" to something
[21:38:20] <raek> TML: I interpreted the question like this: is it possible to set an attribute of an object when only having access to the value of the attribute, and not the containing object?
[21:38:27] <Deneb> agreed, if you substitute a literal it works
[21:38:37] <Deneb> but I need it to work with an int var
[21:38:41] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[21:38:43] <deniska> x = 128; a.append(x) should work too
[21:38:48] <deniska> are you sure it's an int?
[21:38:57] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5811:1ea8:8cab:4910) (Quit: Textual IRC Client: www.textualapp.com)
[21:39:02] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 240 seconds)
[21:39:14] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[21:39:19] <Deneb> no. Initialised as byteval = 0.
[21:39:39] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Remote host closed the connection)
[21:39:46] <Deneb> it then receives bytes from a file: byteval = file.read(1)
[21:39:50] <TML> ba = bytearray([72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100]); b = 0x80; ba.append(b); print(ba) - works fine here
[21:39:54] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[21:39:55] *** Joins: johnjay (~pi@192.142.100.50)
[21:40:09] <deniska> Deneb: what's type(byteval) after the read?
[21:40:22] *** Joins: mallkrampus (~mallkramp@172.93.177.92)
[21:40:44] <deniska> Deneb: you'll need to use .extend() instead if it's `bytes`
[21:41:19] *** Quits: Jefren1 (~Jefren@70.35.67.14) (Ping timeout: 256 seconds)
[21:41:19] <Deneb> deniska: not sure how to check
[21:41:23] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[21:41:37] *** Joins: greedom (~greedom@x59cc99bf.dyn.telefonica.de)
[21:41:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[21:42:04] <renlo> print(type(byteval))
[21:42:12] <renlo> or use a logger if nec
[21:43:17] *** Joins: Jefren1 (~Jefren@70.35.67.14)
[21:43:20] *** Joins: teut (~teut@223.182.71.245)
[21:43:28] *** Joins: pycurious (~Adium@user/pycurious)
[21:44:17] *** Joins: djapo (~archangel@user/djapo)
[21:44:47] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[21:44:57] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[21:44:57] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Client Quit)
[21:45:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:45:52] *** Joins: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-237-69.pool.digikabel.hu)
[21:46:02] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 240 seconds)
[21:46:18] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[21:46:21] <Deneb> renlo: thanks, had to comment out the error lines to make it run. Prints <class bytes>
[21:46:50] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9cac:50bd:54aa:d4c2)
[21:47:09] <jwhisnant> jinsun: TML - https://pypi.org/project/bandersnatch/ ?
[21:47:47] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:48:07] *** Quits: Jefren1 (~Jefren@70.35.67.14) (Ping timeout: 256 seconds)
[21:48:33] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[21:49:00] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:49:13] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[21:49:22] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:49:43] <jinsun> jwhisnant: says explicitly it doesn't do pip search though
[21:50:02] <deniska> Deneb: so, bytes are iterable, you need to use .extend() instead of .append()
[21:50:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:50:52] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[21:50:53] <jwhisnant> jinsun: ah sorry, missed that was a requirement (and good to know), carry on :)
[21:51:30] <Deneb> deniska: ok, thank you. I have one more question. What is th correct way to clear a byte array. Is ba = bytearray() or ba = '' sufficient?
[21:51:58] <deniska> Deneb: I'd use ba.clear()
[21:52:00] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:52:19] <deniska> ba = bytearray() works but creates a new instance, which might be what you want or not
[21:52:33] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[21:52:34] <deniska> and `ba = ''` makes it a str object instead which is probably not what you want
[21:52:39] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[21:52:48] <kevr> So, I have an Optional kwarg, and it defaults to None, is there a way to check the _existence_ of this variable; None is a valid value
[21:52:50] <Deneb> deniska: ah, so there is a method for that then. Thank you.
[21:53:12] <Deneb> deniska: and you are right, a str object is not what I want...
[21:53:14] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[21:53:23] <deniska> kevr: use some other value instead of None
[21:53:37] <kevr> that doesn't really work unfortunately
[21:53:47] <deniska> kevr: you can do 'Nothing = object()` to quickly create a sentinel
[21:53:48] <kevr> if i want to use the param, which is a fallback, it needs to accept any type.
[21:54:06] <kevr> oh, true!
[21:54:19] <kevr> i'll go that route, thanks <3
[21:54:25] <renlo> yeah, "object()" is an "atom" you can use for checks
[21:54:32] <renlo> equiv to JS "symbol"
[21:56:35] *** Quits: dld (~dld@73.61.8.16) (Ping timeout: 250 seconds)
[21:56:56] *** Quits: bfortified (~bfortifie@user/bfortified) (Ping timeout: 246 seconds)
[21:57:04] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[21:57:17] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[21:57:22] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[21:57:25] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:57:33] <jinsun> bad for type hinting though, create a custom Sentinel class in that case
[21:58:11] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[21:58:30] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[21:58:47] *** Joins: beli6174 (~beli6174@cpe-76-175-52-6.socal.res.rr.com)
[21:59:28] <renlo> or an enum
[22:00:23] *** Quits: vladoski (~vladoski@2001:b07:add:d406:3c91:4335:8b8a:b120) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:00:54] <Deneb> I am trying to write the array to a file and getting this: TypeError: a bytes-like object is required, not 'type' <- what does it mean? The object being written is a bytearray so wouldn't that be a bytes-like object?
[22:01:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:01:21] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 245 seconds)
[22:01:56] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[22:01:58] <deniska> Deneb: seems like you are passing a type instead of an object instance
[22:01:58] <renlo> sounds like you mayve done `bytearray = type(bytearray)` somewhere?
[22:02:12] <deniska> Deneb: maybe you forgot to put () somewhere
[22:02:33] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:02:44] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[22:03:48] <beli6174> I am looking for a way of checking a range in semantic versioning. Something like ">=1.0.0-rc.0,<1.0.1". Is there a module that supports that?
[22:03:52] <Deneb> deniska: hmm, yes apparently the brackes were required. To me that denotes a function not a variable though so confused.
[22:04:56] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[22:05:06] <deniska> Deneb: bytearray is a class (also known as type, in python nomenclature), calling it bytearray() creates an object (instance) of type bytearray
[22:05:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:06:35] <renlo> beli6174: https://github.com/python-semver/python-semver
[22:06:45] <Deneb> thank you
[22:09:01] <beli6174> Thanks renlo!
[22:09:30] *** Joins: bfortified (~bfortifie@user/bfortified)
[22:10:37] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[22:11:33] *** Quits: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Quit: Leaving)
[22:12:39] *** Joins: teut (~teut@223.182.71.245)
[22:12:42] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[22:15:09] *** Joins: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de)
[22:17:06] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[22:17:26] *** Joins: alzgh (~alzgh@user/alzgh)
[22:18:10] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[22:18:43] *** Joins: johnjay (~pi@192.142.100.50)
[22:19:17] *** Quits: bfortified (~bfortifie@user/bfortified) (Ping timeout: 256 seconds)
[22:19:21] *** Joins: bfortifi- (~bfortifie@user/bfortified)
[22:19:34] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[22:19:55] *** kindablue_ is now known as kindablue
[22:21:00] *** Joins: Jefren1 (~Jefren@70.35.67.14)
[22:21:13] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:21:35] <TML> ksynwa: did you look at my repl?
[22:21:53] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[22:22:22] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:24:22] <grooverman> I run a script regularly, at intervals of 1 minute. This script monitors a log. If it detects a problem in the log, it must call a second script as a module (I already know how to do that) for as many incidents it finds in the log. But I want the second script to be an independent process(es), so that the first script can keep running and finish its job regardless of what happens with the child processes (the module it calls).
[22:24:24] *** Quits: NeoCore (~neocore@160.238.38.85) (Quit: Leaving)
[22:24:28] <grooverman> How would you do that?
[22:25:34] <Pi-sistance> so I coded the taylor expansion for sin(x) and at 9 and 11 terms it is accurate to 16d.p but why does it just say 1.0 at 10 terms??? so weird!!!
[22:27:00] <jwhisnant> grooverman: what does the second script do? (and how does it receive input?)
[22:27:28] <Pi-sistance> https://bpa.st/C4JA
[22:28:05] <hexology> my guess would be: floating point weirdness
[22:28:21] <grooverman> jwhisnant: it receives an id number as an argument, and it does its job on that specific id number (if necessary), then it reports to a different system what it did.
[22:28:23] <hexology> maybe use Decimal()
[22:28:39] <ksynwa> TML: Checking it now
[22:29:02] <grooverman> jwhisnant: so, the first script doesn't need to know what happens after the second script is called. Humans need to know, but that's managed by the second script itself.
[22:29:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[22:29:16] *** Quits: johnjay (~pi@192.142.100.50) (Remote host closed the connection)
[22:29:35] <TML> grooverman: If you want it as an independent process, you don't want it as a module.
[22:29:36] <ksynwa> TML: That's consistent with what raek said
[22:29:51] <grooverman> TML: damn it... hahahahha, I wasted my time today then.
[22:30:00] <TML> ksynwa: ok, I may have missed some context, then :)
[22:30:28] <grooverman> TML: how would you call it then if not as an imported module?
[22:30:28] <TML> grooverman: I mean, maybe I'm missing something obvious, but those really seem like completely opposing goals to me
[22:30:39] <nedbat> Pi-sistance: it oscillates around the value, so it's not surprising that it could do that
[22:30:50] *** Joins: sidj (~sidj@user/sidj)
[22:31:12] <grooverman> TML: I know what you mean, like it's not what modules are for. But then how do you call a second script to be a child, from a first script?
[22:31:25] <TML> grooverman: Well, exec() and the subprocess module are two obvious solutions.
[22:31:25] <jinsun> Pi-sistance: if it gets too close to 1.0 then python doesn't display all the digits after the decimal point
[22:31:26] *** Quits: Jefren1 (~Jefren@70.35.67.14) (Ping timeout: 260 seconds)
[22:31:32] <jwhisnant> grooverman: no particular thoughts, other than you might like watchgod or pyinotify for your file watching (or even incron)
[22:31:47] *** Quits: totvs (~sidj@user/sidj) (Quit: Leaving)
[22:31:57] <TML> exec(f"python -m othermodule {id}")
[22:32:03] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:32:19] <grooverman> TML: I think that the subprocess module is more elegant? For some reason I thought that exec() was horrible, but now I'm not sure why.
[22:32:28] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[22:32:46] <TML> Yeah, subprocess has a lot more knobs
[22:32:56] <TML> exec() is just kind of the 10 pound sledgehammer
[22:33:11] <grooverman> hahaha
[22:33:30] *** Joins: Jefren1 (~Jefren@70.35.67.14)
[22:33:41] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[22:33:48] <Pi-sistance> jinsun: it should be getting closer the mroe terms there are though, it goes back to 16 d.p on 11 terms
[22:34:49] <Pi-sistance> it should be EVEN closer and still display 1.0, seems weird
[22:36:01] <deniska> exec() executes python code, not shell commands
[22:36:58] <renlo> grooverman: IPC; "inter process communication". can be done in any number of ways. people most often do it over a socket via a webserver / client
[22:37:45] <grooverman> renlo: thanks, but I don't really need these processes to communicate, I only need to spawn them without getting any zombie process lying around after they finish their job.
[22:37:48] <renlo> not limited to webserver; file, memory-mapped-file, named pipe, shared mem
[22:38:14] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Ping timeout: 246 seconds)
[22:38:21] <renlo> oh, got it, just spawn a process
[22:38:34] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[22:38:52] <grooverman> exactly, yes
[22:38:57] <renlo> grooverman: https://docs.python.org/3/library/subprocess.html
[22:39:11] <grooverman> renlo: thank you, very much, I will read it now.
[22:39:51] <grooverman> I was reading "multiprocessing", but I guess it's too advanced for what I want. This subprocess one looks better suited.
[22:40:31] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[22:40:45] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Client Quit)
[22:41:11] *** Quits: pro_z (~pro_z@37.214.56.218) (Ping timeout: 268 seconds)
[22:41:29] <jinsun> Pi-sistance: yea True, so after 10 your code does 1.0 + some small number, so then python knows it is not 1.0 after that, before that it was a difference of a number close to 1.0 and a small number and there python thought the final result might be 1.0
[22:42:08] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[22:42:47] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 246 seconds)
[22:43:01] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:43:04] *** Joins: Valeria (~Valeria@user/valeria)
[22:43:59] <Pi-sistance> jinsun: interesting, thanks that makes sense!
[22:44:16] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 245 seconds)
[22:44:30] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[22:46:38] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:47:03] *** Quits: Jefren1 (~Jefren@70.35.67.14) (Ping timeout: 256 seconds)
[22:47:20] *** Quits: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 246 seconds)
[22:49:16] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[22:49:54] *** Joins: MikZyth (~MikZyth@host-206-152-66-217.spbmts.ru)
[22:51:00] <jinsun> Pi-sistance: the main thing to keep in mind is that with floating point there is always chance of error, and you shouldn't care about what you see after a dozen or so digits
[22:52:24] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[22:53:21] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 250 seconds)
[22:54:00] *** Quits: Deneb (~johnch@117.111.189.80.dyn.plus.net) (Quit: Leaving)
[22:54:38] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[22:55:32] *** Joins: sgn (~sgn@user/sgn)
[22:57:45] *** Parts: G_w (~Gw@ircgo.net) ()
[22:58:01] *** Joins: oz4ga (~tim@93.90.4.233)
[23:02:03] *** Quits: resmo (~resmo@2a00:d420:9:8a00:52cf:2a03:ad73:fcb7) (Remote host closed the connection)
[23:02:16] *** Joins: resmo (~resmo@2a00:d420:9:8a00:3056:fa96:c708:4824)
[23:02:46] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 268 seconds)
[23:02:53] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 250 seconds)
[23:04:03] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[23:05:36] <catern> hm, what would be the most concise way, given a single integer below 255, e.g. something returned from ord, to turn it into a bytestring of length one?
[23:06:16] <tdsmith> bytes([128])?
[23:06:38] <catern> tdsmith: oh, yes, perfect, thanks!
[23:06:48] <tdsmith> yw!
[23:07:31] *** Joins: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77)
[23:07:47] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Quit: guenhael)
[23:08:04] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[23:08:28] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[23:10:34] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 260 seconds)
[23:10:40] *** Joins: binary011 (~binary01@192.110.171.216)
[23:11:02] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Remote host closed the connection)
[23:11:15] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[23:12:12] *** Joins: yaalon (~yaalon@24.243.76.137)
[23:13:01] *** Joins: erica (~erica@user/erica)
[23:14:49] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 256 seconds)
[23:15:50] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[23:16:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:17:05] *** Quits: yaalon (~yaalon@24.243.76.137) (Ping timeout: 256 seconds)
[23:17:12] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[23:18:14] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[23:19:04] *** Joins: Jefren1 (~Jefren@70.35.67.14)
[23:20:27] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[23:20:47] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[23:21:07] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[23:23:03] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[23:27:27] *** Joins: yaalon (~yaalon@24.243.76.137)
[23:27:29] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[23:28:21] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[23:29:03] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:29:04] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:d907:893e:d946:ca2a) (Read error: Connection reset by peer)
[23:29:05] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[23:29:15] *** Joins: alzgh (~alzgh@user/alzgh)
[23:30:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[23:31:29] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Remote host closed the connection)
[23:32:03] *** Joins: fikran (~fikran@user/fikran)
[23:32:55] *** Joins: dunc (sid16@uxbridge.irccloud.com)
[23:33:55] <dunc> Is there a better alternative to having a Makefile in the root of your repo for common commands that are shared between the whole team / do common things in the dev env?
[23:34:01] <The-Compiler> dunc: tox
[23:34:09] *** Joins: Elodin (~weechat@user/elodin)
[23:34:18] <dunc> The-Compiler: The thing about tox though is that the commands aren't shell commands
[23:34:23] <dunc> There's a layer of Python in the way
[23:34:32] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[23:34:38] <The-Compiler> dunc: you can run shell commands from tox though?
[23:34:50] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[23:35:25] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:36:19] <The-Compiler> then again sharing shell commands between the whole team is a lot harder than sharing Python stuff
[23:36:56] <raek> dunc: one alternative is to add console script entry points to the setup.py/setup.cfg. each console script points to a main function in a module.
[23:37:18] <SnoopJ> dunc, let's flip the question around: what don't you like about GNU Make?
[23:39:32] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[23:39:33] <The-Compiler> there's https://docs.pyinvoke.org/ too but off-hand I can't remember a project using it
[23:40:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:40:57] *** Quits: Inline (~Inline@aftr-37-201-240-87.unity-media.net) (Quit: Leaving)
[23:41:15] <renlo> <3 Makefile
[23:41:33] <SnoopJ> always the option of shell scripts, too, depending on what "common commands/things" really looks like on the ground
[23:41:40] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[23:41:49] <NeilRG> Is there an actively developed logging module?
[23:42:01] <dunc> SnoopJ: I find it pretty hard to do pretty simple things. Like the variable passing with `call`, if statements, just the bare basics that you need to call onwards to a program in the right way.
[23:42:28] <dunc> I am currently trying to work out how to expand a list of parameters that are in a string into separate parameters in a called script
[23:42:29] <grym> NeilRG: stdlib, structlog, eliot
[23:42:42] <NeilRG> grym thanks
[23:42:48] <SnoopJ> NeilRG, the stdlib module still gets love, and yea, those others are good too if you want 3rd party
[23:42:49] <renlo> just use argparse dunc ?
[23:43:01] <NeilRG> grym those are the best in your opinion?  the stdlib is not good enough imo
[23:43:08] <SnoopJ> dunc, I'm not really sure I understand, perhaps you could share an example task?
[23:43:13] <SnoopJ> NeilRG, why not?
[23:43:26] <NeilRG> SnoopJ, just ugly, no automatic indentation, progress bars, etc.
[23:43:40] <NeilRG> no automatic colors
[23:43:42] <dunc> renlo: Yeah, but then you have an extra language in the way, and I've been down that path before. There's lots of shell quoting to deal with. Make is, at least, closer to the shell.
[23:43:43] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[23:43:48] <The-Compiler> NeilRG: wait, progress bars in logs?
[23:44:00] <NeilRG> The-Compiler, it's in fastlog, for example
[23:44:07] <SnoopJ> You can customize the formatting pretty arbitrarily, but if you want it to Just Work you probably want something like eliot/structlog
[23:44:08] <NeilRG> but fastlog isn't actively developed, so I want to switch
[23:44:22] <The-Compiler> NeilRG: https://github.com/willmcgugan/rich has some logging stuff too I think
[23:44:45] <renlo> dunc: are you trying to capture environment variables and pass them as arguments to a script or something? example would help
[23:44:57] <SnoopJ> The-Compiler, interesting, it supplies a handler to the stdlib
[23:45:02] <SnoopJ> s/to/for/
[23:45:06] <dunc> https://www.irccloud.com/pastebin/3ICUmGzW/
[23:45:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[23:45:39] <dunc> This is a stylized example
[23:45:41] <grym> i've used coloredlogs + stdlib recently and felt OK with it
[23:45:46] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9cac:50bd:54aa:d4c2) (Quit: Client closed)
[23:45:51] <NeilRG> The-Compiler, thanks, I forgot about rich
[23:46:07] <dunc> But I am basically aggregating the parameters depending on the case, and then passing them to the command
[23:46:15] <The-Compiler> omg rich has a Swiss German readme
[23:46:37] <grym> The-Compiler: "this way, we don't offend nobody"?
[23:46:47] <grym> that might be a pretty deep cut reference
[23:46:59] <renlo> dunc: why not just pass as env vars to showparams.sh; `PARAMS=$(PARAMS) ./showparams.sh`
[23:47:02] <SnoopJ> so is it in French, or German? ;)
[23:47:13] <The-Compiler> SnoopJ: Swiss German is probably not French
[23:47:20] <dunc> renlo: Because showparams.sh is actually docker-compose
[23:47:36] *** Quits: greedom (~greedom@x59cc99bf.dyn.telefonica.de) (Remote host closed the connection)
[23:47:39] <dunc> This is just me testing it to try and work out if it's even possible
[23:47:39] <SnoopJ> The-Compiler, just a bad joke about how it's spoken differently based on geographical location
[23:47:59] <The-Compiler> SnoopJ: I'm Swiss German ;)
[23:48:18] * dunc Basically the make equivalent of python's `show_params(**ALL_PARAMS)`
[23:48:58] <SnoopJ> dunc, "aggregating" sounds like it might be a case for writing a dedicated tool that lives in the repository (I usually put mine in tools/)
[23:49:26] <renlo> dunc: imo going to come down to preference, but, why not just have a directory with configs in it, then you just do `docker-runner.sh --config myconfig`,
[23:49:27] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[23:49:29] <SnoopJ> You could torture cmake into doing it, too, but it's not a good fit if you're *just* providing convenience
[23:49:39] <renlo> docker-runner.sh is a script which reads your config and runs docker compose
[23:49:49] <renlo> trying to fit it into Makefile one-liners is code smell imo
[23:50:00] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:50:06] <dunc> Is it?
[23:50:25] <dunc> I mean, this is kind of how you always see Python projects using make
[23:50:49] <dunc> Clearly we aren't using it to compile code selectively
[23:50:58] <dunc> Like, every target is a PHONY
[23:51:02] <SnoopJ> caveat: what is clear to you may not be to us
[23:51:23] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 264 seconds)
[23:51:23] *** ayusta is now known as ayustae
[23:51:40] <SnoopJ> but yea I'd probably write a dedicated helper here, either in a shell language of your choice, or in Python (almost always in Python, for me)
[23:52:26] <SnoopJ> if you really want to introduce tooling burden, direnv might be a fit, too. You could define functions/aliases in your .envrc that everybody would have when checking out the repo.
[23:52:47] *** Quits: bfortifi- (~bfortifie@user/bfortified) (Ping timeout: 256 seconds)
[23:53:38] *** Joins: bfortified (~bfortifie@user/bfortified)
[23:53:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:54:39] <dunc> Right. I'll take a look into these.
[23:54:42] <dunc> Ta!
[23:54:48] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:55:37] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 256 seconds)
[23:55:57] *** Joins: parv (~quass@user/parv)
[23:58:03] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9cac:50bd:54aa:d4c2)
[23:58:25] *** Joins: yaalon (~yaalon@24.243.76.137)
[23:58:32] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[23:58:47] *** Joins: Auron (~Auron956@user/auron)
[23:59:01] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
