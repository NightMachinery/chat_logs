[00:47:11] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 256 seconds)
[01:41:30] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[01:51:41] *** Joins: rtypo (~alex@user/rtypo)
[02:10:47] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[02:32:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[02:47:18] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[03:14:06] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[03:14:49] <dto> borodust: reviving my partial Morphic port to CL. https://usercontent.irccloud-cdn.com/file/UBkwNuzO/Screenshot%20at%202022-01-07%2015-06-11.png
[03:16:35] <dto> i'd like to update it for modern opengl soon, might pick your brain here or there if possible!
[03:17:15] <drakonis> morphic?
[03:19:50] <dto> hey drakonis. I'm referring to Morphic, the GUI framework of Squeak Smalltalk.
[03:19:53] *** Quits: artchad (~user@public-gprs224306.centertel.pl) (Read error: Connection reset by peer)
[03:20:36] <drakonis> oh
[03:20:39] <drakonis> i see, that's neat.
[03:46:13] <dto> üòç
[04:11:02] <drakonis> its very nice to hear about cool things
[04:50:51] *** Quits: OlCe (~user@amarseille-657-1-5-245.w90-8.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[05:04:52] *** Joins: notzmv (~zmv@user/notzmv)
[13:20:33] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[13:37:55] *** Joins: artchad (~user@public-gprs230031.centertel.pl)
[14:09:31] *** Joins: rtypo (~alex@user/rtypo)
[14:17:42] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[14:46:45] *** Joins: rtypo (~alex@user/rtypo)
[15:20:39] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[17:14:31] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:14:51] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[19:54:16] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[19:55:09] *** Joins: aeth (~aeth@user/aeth)
[20:29:41] *** Quits: phantomics (~phantomic@97-118-150-246.hlrn.qwest.net) (Excess Flood)
[20:37:04] <borodust> dto: awesome! shoot me with questions
[20:37:24] <dto> pew pew pew
[20:37:39] <borodust> i don't do direct opengl these days, so my knowledge might be of limited uses
[20:41:30] <dto> i just need to implement 3 functions that do draw-textured-png-with-alpha, draw-ttf-string, vertex coloring or whatever they do now
[20:42:39] <dto> like i'm totally happy to implement it within whichever of your various contraptions you would recommend. would i be able to use trivial gamekit? or am i misunderstanding the problem? 
[20:46:16] *** Joins: jstoddard (~Jeremiah@2600:8801:a400:5a00::ba77)
[20:56:59] <dto> how is your day today 
[21:02:56] <jstoddard> I think I'm going to try playing around with OpenGL this weekend. I'd like to see if I can get farther than displaying a triangle this time, hahaha.
[21:04:15] <dto> hey cool jstoddard let us know what happens. i assume you're going with the cool kids new opengl api 
[21:07:25] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[21:09:30] *** Joins: aeth (~aeth@user/aeth)
[21:10:40] <dto> the kind that invovles vertex buffers and stuff
[21:15:50] <jstoddard> Sure, but not cool enough for Vulkan.
[21:28:02] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[22:27:50] <borodust> dto: what's vertex coloring?
[22:28:43] <dto> in immediate mode opengl it is the feature i use to apply color to a white-on-transparent PNG
[22:28:48] <dto> jstoddard: :)
[22:29:33] <borodust> polygonal shape with bon-flat shading?
[22:29:44] <borodust> non-flat
[22:34:32] <dto> i just render squares
[22:34:43] <dto> i mean, rectangles
[22:34:46] <dto> sometimes rotated
[22:34:49] <dto> it's okay, we can work it out later ;)
[23:08:46] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Quit: WeeChat 3.4)
[23:26:04] *** Quits: gingerale (~gingerale@2a03:b0c0:0:1010::19:c001) (Quit: WeeChat 3.3)
[23:26:14] *** Joins: gingerale (~gingerale@2a03:b0c0:0:1010::19:c001)
[23:55:06] <GreaseMonkey> main things to remember about OpenGL Core (3.0+): you need shaders (vertex + fragment will be enough), you bring your own matrix code (matrix stack is gone, provide your own shader uniforms), you always use VBOs for rendering, all settings for a VBO (except for the glDraw* things) go into a VAO
[23:55:49] <aeth> you "bring your own matrices" except you mostly just type in the old ones
[23:55:51] <GreaseMonkey> and if supporting crapple's OpenGL implementation, you need to do glBindBuffers each time you draw, whereas if they were actually doing things right you'd only need to set it up once in the VAO
[23:56:00] <GreaseMonkey> unless they fixed that
[23:56:16] <GreaseMonkey> besides, MoltenVK exists
[23:56:26] <GreaseMonkey> wait crap that's Vulkan not OpenGL
[23:56:27] <aeth> e.g. I just searched glulookat... https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluLookAt.xml
[23:56:38] <aeth> there, now you know exactly what matrix to use, you just need to type it yourself
[23:56:46] <GreaseMonkey> and yes, classic OpenGL gives you the math for that stuff
[23:56:49] <aeth> gluperspective... https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluPerspective.xml
[23:56:59] <aeth> etc.
[23:57:46] <GreaseMonkey> for C stuff i use this thing and it's public domain so if you want some code you can pinch it should be fine: https://github.com/datenwolf/linmath.h
[23:58:30] <aeth> fortunately, with graphics, if you make a typo, you usually get something that looks like a horrifying nightmare, if you get anything at all
[23:59:02] <GreaseMonkey> unfortunately, NVidia exists
[23:59:20] <GreaseMonkey> which means you can do things completely wrong and your driver will apply eleventy billion workarounds for your wrongness
[23:59:30] <aeth> surprisingly, Nvidia's GLSL supports CL-style '1f0' whereas everyone else only supports C-style '1f'
[23:59:42] <aeth> so if you're constantly context-switching, you will make that typo and break code without realizing it
[23:59:58] <GreaseMonkey> moral of the story, don't develop on NVidia
