[00:00:33] *** Quits: Guest59 (~Guest59@host-79-27-95-23.retail.telecomitalia.it) (Client Quit)
[00:01:19] *** Joins: zeev (~zeev@147.161.9.150)
[00:01:27] <ChrisWarrick> dante-as: your life will be much easier if you have a `devops` folder
[00:01:48] <ChrisWarrick> this structure can be confusing to IDEs
[00:01:50] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:01:50] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[00:01:58] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[00:02:01] <dante-as> ChrisWarrick: I know, but my boss doesn't want to have a `devops` folder
[00:02:19] *** Joins: mossman93 (~quassel@user/mossman93)
[00:02:19] <ChrisWarrick> …okay?
[00:02:31] <ChrisWarrick> why does your boss dictate your folder structure?
[00:02:52] <dante-as> It's any alternative to skip the `devops` folder?
[00:03:03] <dante-as> Well, I'm afraid that I cannot change that
[00:03:35] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[00:03:42] *** Quits: marcello42 (~mp@p200300dfaf3285016a9099c1cfe042d6.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[00:04:01] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[00:05:19] <ChrisWarrick> there might be some option to make setuptools do that, but I’d really work on convincing your boss otherwise
[00:05:59] *** Quits: parv (~quass@user/parv) (Ping timeout: 256 seconds)
[00:06:36] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[00:06:55] *** Joins: parv (~quass@user/parv)
[00:08:38] *** Joins: opaca_lux (~opaca_lux@185.169.233.139)
[00:08:52] *** Quits: opaca_lux (~opaca_lux@185.169.233.139) (Client Quit)
[00:09:59] *** Joins: bluedust (~bluedust@89.238.143.233)
[00:10:07] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:10:30] *** Joins: vivekl_ (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[00:10:41] *** Joins: tWqaq (~tWqaq@101.93.138.74)
[00:11:03] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[00:11:35] *** Joins: Naan (~Naan@user/naan)
[00:11:55] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[00:11:59] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[00:12:49] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[00:13:37] *** Quits: bluedust_ (~bluedust@59.99.182.45) (Ping timeout: 240 seconds)
[00:13:59] *** Quits: vivekl_ (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[00:15:10] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[00:15:42] *** Joins: jose1711 (~jose@93.184.65.164.host.vnet.sk)
[00:16:28] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:16:52] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:17:02] *** Joins: mat001 (~mat001@72.28.108.216)
[00:17:36] *** Joins: mharig (~mharig@181.188.139.46)
[00:18:32] *** Quits: mat001 (~mat001@72.28.108.216) (Remote host closed the connection)
[00:18:53] *** Joins: mat001 (~mat001@72.28.108.216)
[00:19:26] <jose1711> hello, please is there a way to propagate modules down to imported modules?
[00:19:28] <jose1711> https://bpa.st/5SIA
[00:19:37] *** Joins: mat001_ (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[00:19:55] <jose1711> here.. i would like to be able to call 're' module and not import ig again in foo.py
[00:20:17] *** Quits: emf (~emf@2620:10d:c090:400::5:ab3f) (Ping timeout: 240 seconds)
[00:20:21] *** Quits: mat001_ (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:20:57] *** Joins: mat001_ (~mat001@72.28.108.216)
[00:21:04] <Repiphany> jose1711: No, you should explicitly import all modules you need inside foo itself
[00:21:57] *** Joins: emf (~emf@2620:10d:c090:400::5:ab3f)
[00:22:00] <jose1711> so.. if re is gettext and i need to do some gettext initialization then perhaps it's better to make a small module that just does that and then call it from everywhere
[00:23:26] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 250 seconds)
[00:24:53] *** Joins: p-i-_ (~Ohmu@183.89.38.16)
[00:25:28] *** Joins: gumol (~gumol@195-240-229-124.fixed.kpn.net)
[00:25:36] *** Quits: mat001_ (~mat001@72.28.108.216) (Ping timeout: 250 seconds)
[00:25:36] <Repiphany> If you import gettext in main and do some module initialization, that would be shared across any other module that imports gettext
[00:26:25] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:27:41] <jose1711> Repiphany: thank you
[00:27:47] *** Joins: Guest22 (~Guest22@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[00:27:50] *** Quits: jose1711 (~jose@93.184.65.164.host.vnet.sk) (Quit: leaving)
[00:27:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:8b4d:3897:4978:8f12:ada4) (Ping timeout: 240 seconds)
[00:28:39] *** Joins: bluedust_ (~bluedust@59.99.182.45)
[00:28:47] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:28:47] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[00:29:10] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Client Quit)
[00:30:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:31:28] *** Joins: radiovulpine (~kenwoodfo@19-81-182-166.mobile.uscc.net)
[00:31:43] *** Quits: bluedust (~bluedust@89.238.143.233) (Ping timeout: 256 seconds)
[00:32:04] <radiovulpine> Hey #python, im having some issue with pip on a fresh ubuntu install, looked around google for ssl issues and did not find anything matching exactly, cant update pip or install anything, any ideas? Gist here: https://gist.github.com/KenwoodFox/bf1e0063f765f03926b728fe9a727f37
[00:33:22] <p-i-_> How can I regex the numbers out of 'Range : 3-5x' 'Range: 3x' and 'Range :2-7' are all valid inputs? I'd want [3,5] [1] and [2,7]
[00:33:37] *** Joins: yte3 (~0@151.31.101.47)
[00:33:37] <p-i-_> Alternatively '3-5' '1' and '2-7' would be fine
[00:33:55] <Repiphany> Why would "3x" go to 1
[00:34:12] <p-i-_> sorrry typo
[00:34:33] *** Quits: tWqaq (~tWqaq@101.93.138.74) (Ping timeout: 256 seconds)
[00:34:49] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 268 seconds)
[00:34:59] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[00:35:09] *** Joins: summersault (~summersau@179.221.251.36)
[00:35:10] <deniska> p-i-_: is it a whole line? re.findall(r'\d+') will pluck [3, 5], [3] and [2, 7]
[00:35:23] <p-i-_> Can I catch a repeating pattern of \D(\d)?
[00:35:28] <p-i-_> yeah it's a single  line
[00:35:57] <p-i-_> But I need to only match  if it has 'Range' at the start
[00:36:09] <Guest22> I want to edit the color https://github.com/szagoruyko/pytorchviz/blob/master/torchviz/dot.py#L111 uses from 'orange' to some other color I will specify after the function returns. Thus I plan to replace dot with an object that merely builds up a list of all method calls made to it, which can later be executed, perhaps multiple times, once the list
[00:36:09] <Guest22> of colors become available. That sounds like one might a general library for it, does one exist?
[00:36:24] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:36:25] <Repiphany> You need to be more explicit about what you are trying to match vs what you don't want to match if you want proper regex answers
[00:36:49] <Guest22> I imagine that something involving coroutines might be the answer.
[00:37:11] *** Joins: jose1711 (~jose@93.184.65.164.host.vnet.sk)
[00:37:14] *** Quits: jose1711 (~jose@93.184.65.164.host.vnet.sk) (Client Quit)
[00:37:21] *** Joins: dme86 (~dan@user/dan86)
[00:37:58] <Guest22> The problem being that I want the linked function to immediately proceed - the colors can only be calculated once the function has finished.
[00:38:24] <Guest22> so i can't just say yield to have the function wait until I know the color.
[00:38:36] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:7b1a:1704:5e87:dff9) (Quit: pvergain)
[00:38:50] *** Joins: audio (~audio@user/audio)
[00:38:57] *** Joins: zamanf (~dev@213.133.91.246)
[00:39:28] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 250 seconds)
[00:39:37] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[00:39:48] <radiovulpine> I still cant seem to get past the ssl errors
[00:39:49] *** Quits: esv (~esv@74.124.178.154) (Quit: Leaving)
[00:40:12] *** Joins: esv (~esv@74.124.178.154)
[00:41:11] <p-i-_> Maybe I should do it in 2 steps: `range = re.search(r'^Range:(.*)x?$', c.replace(' ', ''), re.M)[1]`. That'll give '3-5' or '1' etc.
[00:41:28] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[00:41:36] <radiovulpine> If i do pip debug i get a module not found error for pip._vendor.certifi
[00:41:38] <radiovulpine> Yikes
[00:42:42] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[00:42:49] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:43:17] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[00:44:00] *** beco is now known as drbeco
[00:44:01] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[00:44:38] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[00:44:42] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[00:44:44] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[00:45:06] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:45:45] <p-i-_> deniska: That's  what I'm after, but it's  a multiline string and I need the numbers for the line containing 'Leverage'
[00:45:58] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[00:46:07] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 256 seconds)
[00:46:41] *** Quits: radiovulpine (~kenwoodfo@19-81-182-166.mobile.uscc.net) (Ping timeout: 256 seconds)
[00:46:45] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[00:46:49] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Remote host closed the connection)
[00:46:52] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[00:47:05] *** Joins: Thanatos (~Thanatos@105.112.24.71)
[00:47:11] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[00:47:31] <p-i-_>  sorry, Range. I think if I made a helper function, I could regex on `line_containing('Range')` and it would reduce complexity.
[00:47:53] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:47:58] *** Joins: cjb (~cjb@user/cjb)
[00:47:59] <deniska> p-i-_: I'd iterate over lines, looking for lines starting with 'Range', then use a regex
[00:48:08] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[00:48:42] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[00:49:30] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[00:49:30] *** Quits: magla (~gelignite@55d4c694.access.ecotel.net) (Quit: Stay safe!)
[00:49:45] *** Joins: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de)
[00:50:01] *** Joins: dman777_alter (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[00:50:16] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:50:41] *** Joins: kilitary (~kilitary@188.242.105.134)
[00:51:10] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Ping timeout: 250 seconds)
[00:52:21] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[00:52:26] *** Quits: zeev (~zeev@147.161.9.150) (Quit: zeev)
[00:53:36] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[00:53:47] <p-i-_> https://regex101.com/r/GkbdYW/1 `Range\D+(\d+)\D+(\d+)?` does the job
[00:53:58] *** Joins: scruz (~scruz@41.58.60.237)
[00:54:02] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:54:30] <jaggz> what's newer, 0.5.0 or 0.5.0rc1 ?
[00:54:33] *** Joins: Nivlac (~gabriel@181.223.199.100)
[00:54:34] *** Quits: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de) (Ping timeout: 260 seconds)
[00:55:05] <scruz> anyone here used flask-smorest? i've marked a view's arguments as required=False, but i still keep getting a 422 on trying to access the endpoint without passing the parameters for the schema
[00:55:08] <p-i-_> but what if I had something like 'List: 1 - 3 - 5.5 - 7' where I don't know how many elements to expect?
[00:55:08] <dman777_alter> https://dpaste.org/Q998 How come I get TypeError: foo() takes 0 positional arguments but 1 was given? I am not passing any args
[00:55:18] *** Quits: gumol (~gumol@195-240-229-124.fixed.kpn.net) (Quit: Client closed)
[00:55:20] <p-i-_> 0.5.0
[00:55:23] <jaggz> thanks
[00:55:43] <p-i-_> you make the release cands before the actual release
[00:55:47] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[00:55:56] <Repiphany> dman777_alter: You need to pass `self`  to instance function definitions
[00:55:57] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[00:56:20] <jaggz> p-i-_, (\d+\D+)(\d)+
[00:56:36] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[00:56:44] <jaggz> but you'll have to process the stuff in the first paren group
[00:56:52] <dman777_alter> Repiphany: thank you
[00:56:59] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:8d59:d491:8da1:3cf0) (Ping timeout: 250 seconds)
[00:57:00] *** Joins: toma (~RubbishPu@2001:56a:7c0f:6a00:c91a:3696:a2a5:4e44)
[00:57:10] <Repiphany> dman777_alter: `self.bar()` is really doing `Foobar.bar(self)`
[00:57:24] *** Quits: toma (~RubbishPu@2001:56a:7c0f:6a00:c91a:3696:a2a5:4e44) (Remote host closed the connection)
[00:57:27] <jaggz> or you can ((\d+)\D+)+(\d)  ?
[00:57:49] *** Joins: toma (~RubbishPu@2001:56a:7c0f:6a00:c91a:3696:a2a5:4e44)
[00:57:56] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:84a2:fd2b:97e3:6244)
[00:58:14] *** Joins: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com)
[00:58:18] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 260 seconds)
[00:59:14] *** Quits: kilitary (~kilitary@188.242.105.134) (Remote host closed the connection)
[00:59:22] <df00z> print(int(50).to_bytes(8,'big'))  This isn't doing what I would expect.  I would expect a byte array with the last byte being \x32
[00:59:50] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 250 seconds)
[01:00:32] <Repiphany> df00z: b'2' is b'\x32'
[01:00:37] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[01:00:49] *** Joins: Trigraph (~Trigraph@user/trigraph)
[01:01:16] <df00z> Hm weird
[01:01:17] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[01:01:34] <Guest22> Ohhh is "defer the execution of this method call until i know what this argument will be" what factories do?
[01:01:44] *** Joins: Naan` (~Naan@user/naan)
[01:01:59] *** Joins: cpunk (~mm@ip2505fdb6.dynamic.kabel-deutschland.de)
[01:02:00] <Repiphany> `print((50).to_bytes(8, 'big').hex())`
[01:02:03] <p-i-_> jaggz: thanks, I'll have to loo tomorrow  when I have the energy
[01:02:16] *** Joins: velix (~velix@user/velix)
[01:02:28] <p-i-_> It checks out on regex101
[01:03:38] <velix> Interesting. I'm on Debian Buster with Python 3.9.2. I've created a venv, but forgot to import a dist-packages. So I've copied the missing dist-package to the venv's site-package. Outside the venv, "import" works. Inside the venv "import" leads to a segfaul. What could be wrong here? Python is the same of course.
[01:03:44] <velix> Debian Bullseye*
[01:05:01] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 250 seconds)
[01:05:09] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[01:05:50] <gjvc> https://www.pyhex.org/ is my favourite
[01:05:58] <gjvc> https://www.pythex.org/ is my favourite
[01:06:01] <novns> velix, it's not nice to copy system packages to venv manually
[01:06:15] *** Joins: jazzy (~jaziz@user/jaziz)
[01:06:16] <novns> velix, you have to install packages with pip inside
[01:06:29] <velix> novns: I know, but I'm just curious why it doesn't work.
[01:06:42] <novns> because paths are wrong all over the place
[01:06:59] <velix> novns: which "paths"? ldd shows me, all paths are fine.
[01:07:25] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 256 seconds)
[01:07:28] <novns> velix, paths to various things that are modified during installation
[01:07:48] <novns> velix, and you can analyze your segfaults
[01:08:09] <velix> novns: How? Python doesn't give a traceback on segfault :(
[01:08:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:08:13] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[01:08:24] <velix> gdb?
[01:08:34] <novns> velix, segfault is a system thing, you have coredump, gdb, etc
[01:08:45] <velix> Ok.
[01:08:56] *** vivekl is now known as vivek
[01:08:57] <hexnewbie> velix: import faulthandler; faulthandler.enable()
[01:09:11] <velix> novns: Building this package inside the container needs ~ 248 dependencies in the system :D
[01:09:18] <velix> novns: It'll take the whole night.
[01:09:18] <InPhase> velix: https://docs.python.org/3/library/faulthandler.html
[01:09:26] *** vivek is now known as Guest2843
[01:09:32] <novns> velix, find a new job then
[01:09:36] *** Joins: pycurious (~Adium@user/pycurious)
[01:09:45] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[01:10:13] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[01:10:19] <velix> hexnewbie & InPhase Thanks
[01:10:56] <InPhase> velix: I have some of my C++ code setup to do stack traces at segfaults.  It works, sometimes.  You ultimately can't guarantee that the handler will ever get called, especially depending on what piece of library code the fault happens in.  But it's nice to have that output the times it can catch it.
[01:11:56] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:12:25] *** Quits: Guest2843 (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[01:12:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:90d6:f3c8:741b:677a) (Ping timeout: 250 seconds)
[01:12:35] <jaggz> p-i-_, doesn't seem to work..
[01:12:36] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:13:01] <jaggz> (?:(.))+  tested on the string "a1b2c3d4e"  and it only gets one match in capture group 1, containing the 'e'
[01:13:16] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[01:15:03] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Read error: Connection reset by peer)
[01:15:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:15:23] *** Joins: janemba (~janemba@94.204.254.193)
[01:15:55] *** Parts: cpunk (~mm@ip2505fdb6.dynamic.kabel-deutschland.de) ()
[01:16:13] <dfkfs> ranges can be parsed with regexes, but _should_ they?
[01:16:21] *** Quits: dante-as (~dante-as@2a02:2f00:3103:ff00:8823:81f2:5607:7960) (Quit: Client closed)
[01:16:48] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[01:17:48] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:17:55] *** Quits: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com) (Quit: Client closed)
[01:19:05] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:19:13] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[01:19:39] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[01:19:54] *** Quits: paul424 (~tom@ip-5-172-235-243.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[01:19:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[01:20:00] *** Quits: waynew (~wayne@user/waynew) (Remote host closed the connection)
[01:20:26] <hrob> o/
[01:20:29] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[01:21:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[01:21:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:23:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:23:50] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:23:52] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:25:07] *** Quits: ThePhilgrim (~ThePhilgr@151.41.4.108) (Quit: ThePhilgrim)
[01:25:20] *** Quits: Trigraph (~Trigraph@user/trigraph) (Quit: Leaving)
[01:25:26] *** Joins: ice99 (~ice9@user/ice9)
[01:26:27] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[01:26:34] *** Joins: Trigraph (~Trigraph@user/trigraph)
[01:26:49] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:26:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:27:38] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[01:27:50] *** Joins: pycurious (~Adium@user/pycurious)
[01:27:50] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[01:28:23] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[01:30:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:30:05] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[01:30:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:31:13] *** Joins: pycurious (~Adium@user/pycurious)
[01:31:26] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:84a2:fd2b:97e3:6244) (Ping timeout: 260 seconds)
[01:31:42] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:32:19] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[01:32:51] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[01:32:53] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[01:33:07] *** Joins: pycurious (~Adium@user/pycurious)
[01:33:07] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:33:48] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-77.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:33:53] *** Joins: ice9 (~ice9@user/ice9)
[01:34:17] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[01:34:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[01:34:39] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:34:44] <velix> meh... `/usr/bin/ld: cannot find -lboost_pytho` who coded this? Where is the missing "n"? :D
[01:35:06] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[01:35:23] *** Quits: NeoCore (~neocore@195.200.221.109) (Quit: Leaving)
[01:35:23] *** Joins: ice9 (~ice9@user/ice9)
[01:35:25] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Read error: Connection reset by peer)
[01:35:29] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Read error: Connection reset by peer)
[01:35:46] <hrob> velix if this in git repo use git blame
[01:35:50] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[01:36:21] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[01:36:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:37:16] <velix> hehe, yeah. But I've fixed it and will create a PR.
[01:37:20] <velix> Ha, I love git(hub)
[01:37:27] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[01:37:29] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[01:37:56] *** Joins: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com)
[01:38:07] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[01:38:20] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:38:22] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[01:39:19] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[01:40:46] *** Joins: georgios (~georgios@user/georgios)
[01:41:41] <Thanatos> Hello everyone
[01:41:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:42:08] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[01:42:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[01:42:20] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Remote host closed the connection)
[01:42:35] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[01:42:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:42:53] *** Joins: ice9 (~ice9@user/ice9)
[01:42:56] <HiccupJul> should function parameter names be capitalised, if they are not intended to be changed by the function?
[01:43:33] <KirkMcDonald> No, there's no convention for that.
[01:43:34] <HiccupJul> normally, you capitalise constants, but i've never seen capitalised function parameters
[01:43:50] <HiccupJul> ah
[01:43:52] <bjs> HiccupJul: the "standard" convention is described by https://www.python.org/dev/peps/pep-0008/ ; capitalising parameters is unusual
[01:44:46] <HiccupJul> seems a bit weird currently, as i have mixture of capitalised constants and non-capitalised constants
[01:44:58] *** Joins: benmatselby (~ben@188.205.199.146.dyn.plus.net)
[01:45:14] <bjs> HiccupJul: well to be honest "this function doesn't modify the variable" isn't quite the same thing as what I would call a "constant"
[01:45:31] <bjs> `def increment(x): return x + 1`  I wouldn't call x a *constant* here
[01:45:42] <HiccupJul> yeah i guess not
[01:45:50] <bjs> if it really is a constant, then why is it a parameter rather than a global (or a class-level attribute)
[01:46:06] <HiccupJul> well i mean i'm avoiding globals
[01:46:15] <bjs> HiccupJul: for what reason?
[01:46:42] <HiccupJul> supposedly its bad practice. i'm trying to keep stuff "contained" within each function
[01:46:56] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:71fb:7a3d:845d:425d)
[01:46:56] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:71fb:7a3d:845d:425d) (Changing host)
[01:46:56] *** Joins: skapata (~Skapata@user/skapata)
[01:46:58] <bjs> HiccupJul: the `math` module has a global constant called `pi`
[01:47:00] <bjs> do you object to that?
[01:47:06] <KirkMcDonald> Globals per se are not a problem.
[01:47:17] <KirkMcDonald> The problem is shared mutable state.
[01:47:33] <HiccupJul> you're totally right Kiry
[01:47:35] <HiccupJul> *Kirk
[01:47:56] <HiccupJul> yeah i was wasn't thinking straight there. global constants don't really pose any issue.
[01:48:07] <bjs> HiccupJul: if they're really constants that is :)
[01:48:17] <bjs> like pi is
[01:48:40] <HiccupJul> maybe it'll help if i post the snippet of code
[01:48:47] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[01:49:00] <HiccupJul> the function
[01:49:01] <HiccupJul> https://bpa.st/SXCA
[01:49:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:49:55] <HiccupJul> maybe its a silly nitpick, but the mixture of capitalised variables and non-capitalised ones seems weird
[01:50:03] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[01:50:04] <bjs> HiccupJul: I think you're trying to apply the "uppercase for constants" style too ... robotically
[01:50:12] <bjs> I wouldn't use uppercase for any of these and make them all lowercase
[01:50:29] <HiccupJul> yeah that seems more natural
[01:50:52] <HiccupJul> in fact
[01:50:53] <HiccupJul> "Constants are usually defined on a module level and written in all capital letters with underscores separating words. Examples include MAX_OVERFLOW and TOTAL."
[01:50:58] <HiccupJul> that's what PEP 8 says
[01:51:08] <HiccupJul> so according to that, these don't really count as constants anyway
[01:51:41] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:51:58] *** Joins: fikran (~fikran@user/fikran)
[01:53:23] *** Quits: nomic (~nomic@185.192.69.148) (Quit: Leaving)
[01:54:26] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[01:55:09] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[01:55:13] *** Joins: Betal (~Betal@user/betal)
[01:55:25] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[01:55:28] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:55:46] <jaggz> INFO: pip is looking at multiple versions of attrs to determine which version is compatible with other requirements. This could take a while.
[01:55:55] *** Quits: parv (~quass@user/parv) (Ping timeout: 250 seconds)
[01:56:07] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[01:56:10] <jaggz> once it finds a suitable version, how do we store them all in req...txt ?
[01:56:21] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:56:21] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[01:56:48] <Celeo> Like, how do you, the programmer using pip, store it, or how does pip itself figure that out?
[01:56:57] <jaggz> how do I get them recorded for the future
[01:57:02] *** Quits: benmatselby (~ben@188.205.199.146.dyn.plus.net) (Quit: leaving)
[01:57:11] <Celeo> pip freeze
[01:57:19] *** Quits: esv (~esv@74.124.178.154) (Remote host closed the connection)
[01:57:19] <jaggz> to make a proper requirements.txt .. it doesn't have attrs package or a few others
[01:57:23] <jaggz> and I found it looking and looking
[01:57:29] <jaggz> thanks
[01:57:32] <Celeo> Sure
[01:57:39] <jaggz> :}
[01:57:47] <jaggz> it's also super slow
[01:58:05] <jaggz> attrs is only 30k but it's sitting on each line here trying.. not sure what it's doing
[01:58:28] <jaggz> like, it's been sitting at this line for several minutes:   Downloading attrs-17.3.0-py2.py3-none-any.whl (29 kB)
[01:59:05] *** Joins: esv (~esv@74.124.178.154)
[01:59:33] *** Quits: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com) (Ping timeout: 256 seconds)
[02:00:05] * jaggz does -v -v
[02:00:32] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:01:10] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[02:01:23] *** Joins: pycurious (~Adium@user/pycurious)
[02:01:41] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[02:02:13] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 250 seconds)
[02:02:46] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[02:02:57] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:03:13] <jaggz> pip freeze doesn't put out anything
[02:03:24] <jaggz> I only have a requirements.txt file from this git repo
[02:03:43] *** Joins: shreyasminocha (51fdc93eda@user/shreyasminocha)
[02:03:44] <jaggz> (ie. pip install -r requirements.txt)
[02:05:03] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:05:11] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:05:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[02:05:17] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[02:05:25] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:06:07] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[02:06:17] *** Joins: tesuji (~quassel@2a02:908:180:9500:7dfb:8bc4:47fe:281d)
[02:07:09] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:07:13] *** Joins: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de)
[02:09:01] *** Joins: artur (~artur@78-63-43-243.static.zebra.lt)
[02:09:19] <HiccupJul> that was probably the least debugging i've ever needed to do to get a working script
[02:09:47] <HiccupJul> nice
[02:09:48] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[02:09:55] *** Joins: Nutte35 (~Nutte@202.153.81.232)
[02:10:23] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:11:19] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[02:11:47] *** Quits: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[02:11:56] *** Joins: oriba (~oriba@dynamic-077-183-110-253.77.183.pool.telefonica.de)
[02:13:25] *** Joins: Guest32 (~Guest32@2a01:4b00:9d75:f200:d1a9:3ab2:6a2:55a8)
[02:13:54] <Guest32> hey guys, I have some basic pytorch questions as im on a deadline.. stack overflow is down..
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:50] <fruitypunk> yea, it's down. so how do you expect us to know anything then :)
[02:15:58] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:04] *** Quits: artur (~artur@78-63-43-243.static.zebra.lt) (Quit: Konversation terminated!)
[02:16:28] *** Joins: Trigraph1 (~Trigraph@user/trigraph)
[02:16:33] *** Quits: Trigraph1 (~Trigraph@user/trigraph) (Read error: Connection reset by peer)
[02:16:42] *** Joins: llh (~llh@user/llh)
[02:16:50] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:17:02] *** Quits: Nutte35 (~Nutte@202.153.81.232) (Read error: Connection reset by peer)
[02:17:07] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[02:17:11] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[02:19:37] *** Quits: Trigraph (~Trigraph@user/trigraph) (Ping timeout: 256 seconds)
[02:20:31] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[02:22:48] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[02:23:06] *** Joins: Celeo (~Celeo@user/celeo)
[02:24:09] *** Joins: kilitary (~kilitary@188.242.105.134)
[02:24:09] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[02:24:41] <foul_owl> I'm getting nicodeEncodeError: 'ascii' codec can't encode character when doing a requests.get().json()
[02:24:52] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[02:25:10] <foul_owl> I'm sure I need to just set some "utf-8" flag somewhere, but not sure what
[02:25:45] <Guest22> aight i got my deferred-method thing. https://gist.github.com/Gurkenglas/1d4cd479adca3c7dbe81fec9e968998e suggestions?
[02:25:56] <Guest22> (prints 1 2 3 4)
[02:26:38] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:27:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:27:37] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[02:28:12] <foul_owl> The only info I can find is hacky stuff like "search and replace the unicode characters"
[02:29:00] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:29:11] *** Joins: duuude (~user@user/duuude)
[02:29:15] <BtbN> Sounds like the other end of that request claims the data to be ascii, and then sends a unicode character.
[02:30:02] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[02:30:37] *** Quits: emf (~emf@2620:10d:c090:400::5:ab3f) (Ping timeout: 240 seconds)
[02:31:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:31:31] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[02:34:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[02:34:59] *** Quits: toadtoad (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: toadtoad)
[02:37:04] *** Quits: Guest32 (~Guest32@2a01:4b00:9d75:f200:d1a9:3ab2:6a2:55a8) (Quit: Ping timeout (120 seconds))
[02:38:08] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[02:38:59] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[02:39:17] *** Quits: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Client Quit)
[02:40:12] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:42:30] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[02:45:29] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:47:36] <nedbat> foul_owl: can you pastebin the code and full error report? I don't know why .json() would cause that error, but maybe you are trying to print the result?
[02:47:53] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[02:48:43] <dfkfs> i had a weird unicode issue once; it turned out I forgot 'r'-flag for a string
[02:50:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[02:51:22] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:51:38] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[02:51:41] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[02:52:03] *** Joins: abf (~abf@user/abf)
[02:52:51] *** Joins: medium_cool (~medium_co@136.36.128.48)
[02:54:24] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:54:36] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[02:58:58] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[02:59:00] *** Joins: Fulgen (znc@mail.maxmitti.tk)
[02:59:36] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[03:01:39] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[03:02:34] <dre> I had a weird unicode issue once; then I took an arrow to the knee xx--DDDD
[03:03:20] *** Quits: scruz (~scruz@41.58.60.237) (Ping timeout: 250 seconds)
[03:06:05] *** Quits: kilitary (~kilitary@188.242.105.134) (Remote host closed the connection)
[03:07:37] <hrob> foul_owl  what python version are you using?
[03:11:42] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[03:11:55] *** Joins: cyber-hagen (~cyber-hag@public-gprs213170.centertel.pl)
[03:12:05] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:12:35] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:13:41] <Soni> jinsun: how would one go about fixing the packaging to not need --force-reinstall?
[03:15:05] *** Joins: kilitary (~kilitary@188.242.105.134)
[03:15:21] <Forty-Bot> if I get a deadlock using importlib._bootstrap._ModuleLock is it a bug?
[03:15:30] <exarkun> using it directly?
[03:15:37] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:49] <exarkun> it is a private class in a private module, you're not meant to touch it
[03:15:59] <Forty-Bot> no, I'm unpickling something
[03:16:22] <exarkun> pickle is a bad idea and breaks a lot
[03:16:31] <Forty-Bot> traceback: https://paste.debian.net/1229855/
[03:16:35] <bjs> Forty-Bot: pickling a lock doesn't sound right
[03:16:40] <Forty-Bot> yeah, but it's part of the language
[03:16:46] <Forty-Bot> I'm not pickling the lock
[03:16:50] <Forty-Bot> I'm picking something else
[03:17:05] *** Joins: duuude (~user@user/duuude)
[03:17:10] <exarkun> multiprocessing is a bad idea and breaks a lot too
[03:17:13] <bjs> Forty-Bot: that's part of a traceback? is it from you interrupting it? Deadlocks normally don't have tracebacks
[03:17:28] <Forty-Bot> bjs: yes, I broke in with gdb
[03:17:29] <nedbat> Forty-Bot: what does "but it's part of the language" mean?
[03:17:34] <exarkun> a minimal example that reproduces the problem would help everyone better understand what's going on though
[03:17:45] <exarkun> we can't say much just from that traceback
[03:17:50] <Forty-Bot> nedbat: well, multiprocessing is part of python, so presumably it is supported to some degree
[03:18:02] <nedbat> Forty-Bot: sure, but that doesn't mean it always works well
[03:18:25] <Forty-Bot> sure, but presumably it should not deadlock in a lock which says it is designed not to deadlock
[03:18:30] <bjs> Forty-Bot: what are you pickling?  you shouldn't be *allowed* to pickle anything that is, or contains, a Lock
[03:18:37] <bjs> right?
[03:18:43] <Forty-Bot> I don't have a lock in what I'm pickling
[03:18:53] <exarkun> I don't really understand why you even mentioned importlib._bootstrap._ModuleLock
[03:18:58] <exarkun> The traceback doesn't mention it
[03:19:02] <exarkun> And you say you're not using it directly
[03:19:04] <Forty-Bot> it's line 120
[03:19:05] <velix> Is it better to build an egg or wheel?
[03:19:12] <bjs> Forty-Bot: okay so what does pickle have to do with it?  what are you pickling?
[03:19:14] <Forty-Bot> that's what acquire is
[03:19:17] <bjs> why are we playing 20 questions? can you just show us :P
[03:19:18] <exarkun> You only pasted 21 lines
[03:19:29] <Forty-Bot> bjs: I can try and get something minimal
[03:19:36] <Forty-Bot> but it will take a bit
[03:19:36] <exarkun> velix: eggs are history, use wheels
[03:19:41] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[03:19:45] <velix> exarkun: okay!
[03:19:55] <Forty-Bot> exarkun: the second line says 'File "<frozen importlib._bootstrap>", line 120, in acquire'
[03:19:58] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:20:05] <velix> exarkun: ruby on rails, python on wheels :D
[03:20:07] <exarkun> Forty-Bot: Ok.  That basically means nothing.
[03:20:17] *** Quits: cyber-hagen (~cyber-hag@public-gprs213170.centertel.pl) (Quit: Leaving...)
[03:20:18] <Forty-Bot> which happens to be importlib._bootstrap._ModuleLock.acquire
[03:20:25] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[03:20:26] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:20:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[03:20:47] <Forty-Bot> and of course that class documents itself as "A recursive lock implementation which is able to detect deadlocks"
[03:20:50] <bjs> Forty-Bot: okay but there's no evidence there's a deadlock in the _ModuleLock
[03:20:54] <Forty-Bot> so presumably a deadlock is a bug?
[03:20:55] <exarkun> Forty-Bot: in a Python traceback, the top is the code that ran first and each frame below it is something it called and put onto the stack.
[03:21:04] <exarkun> Forty-Bot: The *bottom* is the most specific thing that is happening
[03:21:06] <Forty-Bot> well, it's been going for around 30s now with no progress
[03:21:11] <Forty-Bot> so I'd call that a deadlock
[03:21:24] <exarkun> Oh except maybe gdb made this for you, okay
[03:21:30] <exarkun> Forty-Bot: Anyway, go make the minimal example
[03:21:33] <Forty-Bot> yes, this is from py-bt in gdb
[03:21:47] <Forty-Bot> and I really hate how python backtraces are backwards >.>
[03:22:00] <exarkun> doesn't sound productive
[03:22:27] <bjs> Forty-Bot: backwards?
[03:22:39] <Forty-Bot> newest goes "on top" of the stack
[03:22:47] *** Sargento is now known as aldair-3
[03:22:56] *** aldair-3 is now known as Sargento
[03:22:56] <Forty-Bot> which is actually how this trace is laid out
[03:23:02] <Forty-Bot> 'Traceback (most recent call first):'
[03:23:27] <Forty-Bot> but it's really confusing to switch back and forth between python's backtraces and e.g. C's
[03:23:39] <bjs> Yes that is not normally how Python prints tracebacks
[03:24:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[03:25:46] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[03:26:01] *** Quits: Guest7003 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[03:26:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[03:26:44] *** Quits: Fohsap (~Muimi@2001:19f0:6001:e4d:5400:3ff:fe41:8d5b) (Ping timeout: 250 seconds)
[03:27:22] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:27:32] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:27:37] *** Quits: mharig (~mharig@181.188.139.46) (Ping timeout: 240 seconds)
[03:27:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:28:03] *** Quits: kilitary (~kilitary@188.242.105.134) (Remote host closed the connection)
[03:28:39] *** Quits: callq_ (~callq@2409:4062:202:fb53:35cf:a4ba:9e6b:cada) (Ping timeout: 250 seconds)
[03:29:44] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[03:29:55] *** Parts: velix (~velix@user/velix) (Leaving)
[03:30:24] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:49] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:35] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:34:24] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:38:29] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 256 seconds)
[03:41:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[03:42:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:43:34] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:43:37] *** Joins: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br)
[03:44:39] <Forty-Bot> ok, minimal reproducer https://bpa.st/UL4Q
[03:45:20] <Forty-Bot> the only important thing is that the object inserted into the dict is in a.py
[03:45:28] <Forty-Bot> or rather, has a class from a.py
[03:45:50] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[03:48:09] *** Joins: scruz (~scruz@41.58.60.237)
[03:48:26] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[03:49:07] <Forty-Bot> even more minimal reproducer https://bpa.st/G7DQ
[03:49:29] *** Joins: kilitary (~kilitary@188.242.105.134)
[03:50:17] *** Quits: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br) (Ping timeout: 240 seconds)
[03:51:37] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[03:52:06] *** Quits: scruz (~scruz@41.58.60.237) (Client Quit)
[03:52:19] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[03:52:25] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Changing host)
[03:52:25] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:52:33] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:52:34] *** Joins: matsaman (~matsaman@user/matsaman)
[03:54:50] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b)
[03:55:31] <bjs> Forty-Bot: are you supposed to run this code? or do something with it? or make an instance?
[03:55:39] <bjs> i don't really understand
[03:55:43] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[03:58:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[03:59:06] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[03:59:07] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[04:01:19] *** Joins: fikran (~fikran@user/fikran)
[04:01:21] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:02:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:03:55] *** Joins: Wulf (~Wulf@user/wulf)
[04:04:16] *** Quits: Nivlac (~gabriel@181.223.199.100) (Quit: leaving)
[04:04:53] <akk> I have a scoping question; I've tried to make a small example here: https://bpa.st/R7ZA
[04:05:05] *** Joins: idiocrash (~textual@216.73.163.42)
[04:05:12] *** Joins: parv (~quass@user/parv)
[04:05:27] <akk> Basically, a parent function calls a child function, which uses requests to get some JSON from the web.
[04:06:09] <akk> If the child function returns something that has pointers to objects inside that JSON, will they still exist even if the containing JSON object goes out of scope when returning from the child function?
[04:06:21] <akk> (I hope that made sense)
[04:06:34] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[04:07:06] <bjs> akk: yes they will exist,  scope is about variables not objects
[04:07:36] <bjs> akk: you return the bills_scheduled object, and so the whole object (and everything it references etc) will stay alive
[04:07:47] <bjs> until you can no longer access it at all
[04:08:33] <akk> Thanks, bjs! I didn't want to have to make copies since several billnos will reference the same meetingdate.
[04:08:50] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[04:09:49] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[04:10:06] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[04:10:24] *** Joins: Soni (~quassel@autistic.space)
[04:11:37] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: I have gone to sleep. ZZZzzz…)
[04:11:43] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[04:14:25] *** Quits: Guest22 (~Guest22@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:15:25] *** Joins: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de)
[04:16:07] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[04:16:27] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 256 seconds)
[04:16:30] *** Quits: toma (~RubbishPu@2001:56a:7c0f:6a00:c91a:3696:a2a5:4e44) (Quit: Leaving)
[04:18:40] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[04:20:02] *** Quits: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[04:20:25] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 256 seconds)
[04:20:46] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4d74:be9c:8758:8859) (Ping timeout: 245 seconds)
[04:21:36] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[04:23:33] *** Joins: dme86 (~dan@user/dan86)
[04:24:41] *** Joins: Soni (~quassel@autistic.space)
[04:24:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:25:44] <Forty-Bot> bjs: import a; a.A()
[04:27:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[04:27:42] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:27:57] *** Quits: j0ma (~jonne@static-198-54-135-78.cust.tzulo.com) (Ping timeout: 240 seconds)
[04:28:26] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Remote host closed the connection)
[04:28:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:29:04] *** Joins: Elodin (~elodin@user/elodin)
[04:30:15] <dale> When I really care about the speed of copying bytes, but not enough to pull out ctypes/Cython/PyPy/etc.: For some bytearray A, do we think A[0:5] = A[10:15] is quite efficient in CPython, using memmove or such?  Or should I use memoryview which I'm _pretty_ sure will use memmove.
[04:30:23] *** Joins: j0ma (~jonne@146.115.163.209)
[04:31:44] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:31:44] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:31:57] *** Quits: maxzor__ (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[04:31:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:32:42] *** Joins: brabrax (~brabrax@user/brabrax)
[04:33:28] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:33:29] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:33:37] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 240 seconds)
[04:34:18] *** Quits: idiocrash (~textual@216.73.163.42) (Quit: Textual IRC Client: www.textualapp.com)
[04:35:07] *** Quits: mwilson (mwilson@2600:3c01::f03c:92ff:fe7f:1149) (Read error: Connection reset by peer)
[04:35:41] *** Joins: mwilson (~mwilson@li159-72.members.linode.com)
[04:35:41] *** Joins: califax (~califax@user/califx)
[04:36:11] *** Quits: treefrob (~treefrob@p57a96ba4.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:37:16] *** Joins: Elodin (~elodin@user/elodin)
[04:37:17] <kenwoodfox> Im trying to write a pretty complex program and im already running into weird threading issues, im using opencv to grab webcam frames and i eventually want to save high quality frames while transcoding and serving the transcoded frames via http, im not there yet but im trying to build in small testable steps
[04:37:18] <kenwoodfox> im working on saving out video in a thread, it works when i use the single threaded example but this code dosent seem to work, the filesize grows and grows but the video length is 0 and invalid, i put the closing code under terminate() but even when i force closed the single threaded example code and did not allow .release() to run the video was still playable, even blender could not extract the frames https://github.com/FRC-1721/BlueBox/blob/
[04:37:18] <kenwoodfox> e50b15cf5bc9b15fd132535d74a5d118aa0d8186/BlueBox/LocalStreamer.py#L29-L48
[04:37:23] *** Quits: jrjsmrtn_ (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[04:37:25] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[04:37:53] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[04:38:16] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[04:38:57] *** Joins: jrjsmrtn (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be)
[04:39:02] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:39:55] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[04:41:34] *** Joins: julia (~quassel@user/julia)
[04:41:48] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[04:41:57] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 256 seconds)
[04:42:48] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:44:07] *** Quits: julia (~quassel@user/julia) (Client Quit)
[04:45:09] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:45:40] <kenwoodfox> Ok if i set the codec to MJPG, at 20fps and 640x480, it works but still dosent show in the imshow() window
[04:46:01] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[04:46:02] <kenwoodfox> any other fps, or resolution dosent work, silent error, idk why ret() is true all the time when imshow cant display it
[04:46:09] *** Joins: julia (~quassel@user/julia)
[04:46:37] *** Quits: julia (~quassel@user/julia) (Client Quit)
[04:47:30] *** Quits: ano (~ano@user/ano) (Quit: ano)
[04:47:32] *** Joins: julia (~quassel@user/julia)
[04:49:00] *** Joins: treefrob (~treefrob@pd9e2dc5a.dip0.t-ipconnect.de)
[04:49:01] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:49:11] *** Joins: ano (~ano@user/ano)
[04:49:15] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:49:22] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[04:50:40] <kenwoodfox> 29.9 works, 30 does not, i dident know my webcam was suited for 1960s video broadcast
[04:51:17] *** Quits: kilitary (~kilitary@188.242.105.134) (Ping timeout: 240 seconds)
[04:52:37] *** Quits: julia (~quassel@user/julia) (Ping timeout: 256 seconds)
[04:53:18] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:54:10] <kenwoodfox> Maybe an exception i cant see is being held up? I tried using .join at the end of my catch in BlueBox.py
[04:54:30] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:54:37] <kenwoodfox> traceback is interesting, gisting now, talking about exiting during blocking thread, maybe thats why it cant terminate()?
[04:54:55] <kenwoodfox> https://gist.github.com/KenwoodFox/42b71ed20b05e9573c7f3e6ebc7c30c7
[04:55:13] *** Joins: imp (~imp@179-191-215-199.static.sumicity.net.br)
[04:55:45] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[04:56:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:57:44] *** Quits: yte3 (~0@151.31.101.47) (Ping timeout: 250 seconds)
[04:57:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:58:18] <kenwoodfox> Is it my threading thats the problem? Maybe im going about this wrong,
[05:01:05] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[05:01:10] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[05:01:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:02:07] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:02:16] *** Quits: oriba (~oriba@dynamic-077-183-110-253.77.183.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:02:21] *** Joins: driib23 (~driib@185.195.233.159)
[05:04:31] *** Quits: driib2 (~driib@185.65.135.253) (Ping timeout: 256 seconds)
[05:04:31] *** driib23 is now known as driib2
[05:05:32] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[05:05:59] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[05:06:10] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[05:06:37] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Ping timeout: 240 seconds)
[05:07:37] *** Joins: maxxe_ (~maxxe@c-de90205c.020-27-73766c1.bbcust.telenor.se)
[05:08:53] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[05:09:19] *** Quits: maxxe_ (~maxxe@c-de90205c.020-27-73766c1.bbcust.telenor.se) (Client Quit)
[05:12:21] <dale> kenwoodfox: I feel like imshow is going to be talking to whatever your GUI is, and historically GUIs have often had problems being used from any thread other than the "main" thread (which I read as "first thread" typically).  Might not be a big problem, but perhaps something to consider.
[05:12:57] *** Quits: j0ma (~jonne@146.115.163.209) (Ping timeout: 240 seconds)
[05:13:01] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[05:13:33] *** Joins: julia (~quassel@user/julia)
[05:14:04] <dale> kenwoodfox: What is calling LocalStreamer.terminate?
[05:17:45] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[05:19:18] *** Joins: portalrat (~portalrat@user/portalrat)
[05:19:24] *** Quits: Dotz0cat (~Dotz0cat@h124.175.40.162.dynamic.ip.windstream.net) (Ping timeout: 250 seconds)
[05:19:51] *** Joins: j0ma (~jonne@146.115.163.209)
[05:20:13] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[05:20:41] *** Joins: funhouse (~funhouse@user/funhouse)
[05:20:45] *** Joins: aod (~a@186-89-229-60.genericrev.cantv.net)
[05:22:54] *** Joins: Dotz0cat (~Dotz0cat@173.188.34.42)
[05:23:17] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[05:26:38] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:28:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:29:44] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[05:29:47] *** Quits: julia (~quassel@user/julia) (Ping timeout: 256 seconds)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:51] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:32:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:33:21] *** Joins: Guest70 (~Guest70@177.128.42.94)
[05:33:52] *** Quits: Guest70 (~Guest70@177.128.42.94) (Client Quit)
[05:34:41] *** Quits: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Remote host closed the connection)
[05:35:27] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:35:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[05:35:55] *** Joins: schumaml (~schumaml@dslb-188-104-168-024.188.104.pools.vodafone-ip.de)
[05:35:56] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[05:36:11] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:36:45] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-1dd2-2407-4980-07a2.res6.spectrum.com)
[05:36:53] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[05:36:55] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:39:17] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-708d-a2f0-bac0-934a.res6.spectrum.com) (Ping timeout: 240 seconds)
[05:43:09] *** Quits: therufuser (~therufuse@p5b00084c.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:43:17] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:43:38] *** Joins: julia (~quassel@user/julia)
[05:44:40] *** Joins: therufuser (~therufuse@p5b02e029.dip0.t-ipconnect.de)
[05:46:16] *** Joins: califax- (~califax@user/califx)
[05:46:47] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Ping timeout: 256 seconds)
[05:47:07] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[05:48:57] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:48:57] *** califax- is now known as califax
[05:49:03] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:49:08] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[05:49:28] *** Quits: dudebbn (~dudebbn@cpe-174-97-16-77.cinci.res.rr.com) (Quit: Leaving)
[05:49:53] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[05:49:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[05:49:57] *** brabrax_ is now known as brabrax
[05:50:32] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[05:51:00] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[05:51:33] *** Joins: maxzor__ (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr)
[05:52:16] *** Joins: dubs (~user@user/sbudnik)
[05:53:02] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[05:53:35] *** Joins: hams (~hams@73.232.205.0)
[05:53:35] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[05:53:35] *** Joins: hams (~hams@user/hams)
[05:54:29] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[05:55:07] *** Joins: vlm (~vlm@user/vlm)
[05:55:54] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5d9e-b0d5-b070-4737.res6.spectrum.com) (Read error: Connection reset by peer)
[05:56:47] *** Joins: Seirdy0 (~Seirdy@sourcehut/user/seirdy)
[05:56:55] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[05:57:22] *** Joins: duuude (~user@user/duuude)
[05:57:47] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:57:53] *** Quits: foul_owl (~kerry@94.140.8.107) (Ping timeout: 256 seconds)
[05:58:45] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[05:58:51] <aphysically> bjs: remember that test we tracked down?
[05:58:58] <aphysically> not-a-bug :D
[05:59:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:02:18] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[06:02:29] *** Joins: rev1nchn_ (~rev1nchn@user/rev1nchn)
[06:02:34] *** Joins: portalrat (~portalrat@user/portalrat)
[06:02:37] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 240 seconds)
[06:02:59] *** Quits: eXtre3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:03:04] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[06:03:31] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[06:04:06] *** Quits: dubs (~user@user/sbudnik) (Quit: l)
[06:04:20] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[06:04:30] *** Joins: dubs (~user@user/sbudnik)
[06:05:24] *** Joins: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net)
[06:08:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:09:22] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[06:09:33] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:10:40] *** Joins: fikran (~fikran@user/fikran)
[06:12:53] *** Joins: foul_owl (~kerry@23.82.193.178)
[06:14:34] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Quit: bye)
[06:14:56] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6cfb-90af-4036-f9c3.res6.spectrum.com)
[06:15:18] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[06:20:18] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:21:08] *** Joins: Guest68 (~Guest68@2600:1700:18a2:490:6951:81cf:bdcc:348e)
[06:22:50] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:24:25] *** Quits: rev1nchn_ (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[06:26:39] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[06:29:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:31:01] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:27] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:33:10] *** Quits: Guest68 (~Guest68@2600:1700:18a2:490:6951:81cf:bdcc:348e) (Quit: Client closed)
[06:33:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:33:59] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:35:57] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 240 seconds)
[06:38:57] *** Joins: minip (~minip@user/minip)
[06:39:49] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[06:40:38] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[06:42:19] *** Quits: foul_owl (~kerry@23.82.193.178) (Ping timeout: 256 seconds)
[06:42:25] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:43:00] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[06:43:20] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[06:43:20] *** Quits: aod (~a@186-89-229-60.genericrev.cantv.net) (Quit: leaving)
[06:44:05] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[06:44:15] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[06:45:22] *** Joins: maxzor (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr)
[06:45:40] *** Joins: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de)
[06:46:16] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:46:33] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[06:46:57] *** Quits: maxzor__ (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[06:47:34] *** Joins: audiobirb (~audio@user/audio)
[06:48:38] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:48:42] *** Joins: p-i- (~Ohmu@183.89.35.200)
[06:50:10] *** Joins: dubs` (~user@072-182-039-016.res.spectrum.com)
[06:50:23] *** Quits: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[06:50:29] *** Quits: p-i-_ (~Ohmu@183.89.38.16) (Ping timeout: 256 seconds)
[06:50:57] *** Quits: dubs (~user@user/sbudnik) (Ping timeout: 240 seconds)
[06:51:11] *** Joins: Vonter (~Vonter@user/vonter)
[06:52:00] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[06:54:04] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[06:55:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[06:55:49] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6cfb-90af-4036-f9c3.res6.spectrum.com) (Read error: Connection reset by peer)
[06:56:46] *** Joins: adeliktas9 (~adeliktas@i59F5F08B.versanet.de)
[06:57:42] *** Joins: foul_owl (~kerry@23.82.193.176)
[06:58:10] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: brb)
[06:58:17] *** Quits: adeliktas (~adeliktas@i59F52850.versanet.de) (Ping timeout: 240 seconds)
[06:58:17] *** adeliktas9 is now known as adeliktas
[06:58:28] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[06:58:33] *** Joins: cdown_ (~cdown@188.214.11.14)
[06:59:17] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (Ping timeout: 240 seconds)
[06:59:43] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Remote host closed the connection)
[07:00:21] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[07:01:28] *** runelind_ is now known as runelind
[07:02:57] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[07:03:11] *** Joins: cheater (~Username@user/cheater)
[07:04:21] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[07:05:05] *** Joins: tWqaq (~tWqaq@101.93.138.74)
[07:07:03] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:53] *** Joins: rev1nchn_ (~rev1nchn@user/rev1nchn)
[07:08:23] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:09:21] *** Joins: bytehackr (~Sandipan@45.249.73.174)
[07:10:05] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:10:21] *** Quits: kts (~kts@103.73.237.209) (Quit: Konversation terminated!)
[07:13:29] *** Quits: rev1nchn_ (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[07:14:27] *** Joins: ericlee_ (~ericlee@2600:1700:5450:41e0::30)
[07:15:52] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:15:52] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:15:52] *** finn_elija is now known as FinnElija
[07:19:29] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 256 seconds)
[07:20:17] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[07:20:57] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[07:21:16] *** Joins: nomic (~nomic@185.192.69.148)
[07:23:48] *** Joins: odrling (~odrling@korone.aidoru.agency)
[07:25:28] *** Joins: medium_cool (~medium_co@136.36.128.48)
[07:25:39] *** Quits: odrling (~odrling@korone.aidoru.agency) (Client Quit)
[07:25:57] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[07:26:32] *** Joins: cabo40 (~cabo@189.217.81.59)
[07:26:47] *** Quits: ericlee_ (~ericlee@2600:1700:5450:41e0::30) (Ping timeout: 250 seconds)
[07:26:55] *** Joins: odrling (~odrling@korone.aidoru.agency)
[07:27:41] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:29:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:30:09] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:02] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[07:31:34] <amosbird> The iPython REPL is superior when doing multi-line editing. Where can I find the related code?
[07:32:21] *** Joins: cyphase (~cyphase@user/cyphase)
[07:32:22] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:33:23] *** Joins: cyphase_ (~cyphase@2600:1700:7800:4680::49)
[07:33:31] *** Quits: tWqaq (~tWqaq@101.93.138.74) (Remote host closed the connection)
[07:33:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:33:52] <mefistofeles> amosbird: this probably doesnt' help much, but somewhere here https://github.com/ipython/ipython/tree/master/IPython for what is worth
[07:34:22] <amosbird> I see
[07:35:21] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:09] *** Quits: foul_owl (~kerry@23.82.193.176) (Ping timeout: 256 seconds)
[07:36:09] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:32] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:37:54] *** Quits: cabo40 (~cabo@189.217.81.59) (Quit: WeeChat 3.4)
[07:39:22] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[07:39:41] *** Joins: callq (~callq@157.41.72.120)
[07:40:16] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[07:41:40] *** Quits: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il) (Read error: Connection reset by peer)
[07:42:16] *** Joins: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il)
[07:42:48] *** Joins: Guest68 (~Guest68@2600:1700:18a2:490:6951:81cf:bdcc:348e)
[07:43:25] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[07:45:40] *** Joins: blink9 (~hr@209.202.206.249)
[07:46:55] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[07:47:12] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:6f6a:1255:7550:e64c)
[07:49:45] *** Joins: scruz (~scruz@41.58.60.237)
[07:51:28] *** Joins: foul_owl (~kerry@192.145.116.101)
[07:51:38] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[07:51:57] *** Quits: bluedust_ (~bluedust@59.99.182.45) (Remote host closed the connection)
[07:52:29] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: I have gone to sleep. ZZZzzz…)
[07:53:26] *** Quits: optimant (~asavage@user/optimant) (Quit: quit)
[07:55:00] *** Seirdy0 is now known as Seirdy
[07:55:08] *** Joins: rev1nchn_ (~rev1nchn@user/rev1nchn)
[07:55:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[07:55:33] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:56:57] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[07:57:59] *** Quits: sreve (~quassel@p549d7279.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:58:35] *** Joins: sreve (~quassel@p549d714e.dip0.t-ipconnect.de)
[07:59:46] *** Joins: dme86 (~dan@user/dan86)
[07:59:57] *** Quits: rev1nchn_ (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[08:01:39] *** Quits: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:02:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[08:04:29] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[08:04:33] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:05:37] *** Quits: j0ma (~jonne@146.115.163.209) (Ping timeout: 256 seconds)
[08:08:37] *** Joins: ericlee_ (~ericlee@2600:1700:5450:41e0::30)
[08:08:42] *** Joins: j0ma (~jonne@146.115.163.209)
[08:09:12] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:10:09] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Ping timeout: 256 seconds)
[08:11:12] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: Leaving)
[08:11:39] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[08:12:49] *** Quits: Guest68 (~Guest68@2600:1700:18a2:490:6951:81cf:bdcc:348e) (Quit: Client closed)
[08:13:20] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:14:09] *** Quits: p-i- (~Ohmu@183.89.35.200) (Read error: Connection reset by peer)
[08:14:26] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[08:14:45] *** Joins: p-i- (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th)
[08:16:53] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[08:17:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:19:19] *** Joins: fef (~thedawn@user/thedawn)
[08:20:01] *** Joins: fikran (~fikran@user/fikran)
[08:20:17] *** Quits: ericlee_ (~ericlee@2600:1700:5450:41e0::30) (Ping timeout: 240 seconds)
[08:20:44] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[08:21:05] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[08:23:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[08:24:00] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:25:18] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[08:27:06] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[08:27:53] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[08:28:53] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:30:09] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[08:30:20] *** Quits: moog (~moog@107.126.53.132) (Remote host closed the connection)
[08:30:25] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:30:47] *** Joins: Guest7003 (~vit@chello085216193138.chello.sk)
[08:30:57] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 240 seconds)
[08:31:16] *** Quits: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net) (Quit: WeeChat 2.8)
[08:32:11] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b) (Quit: Leaving)
[08:32:45] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[08:33:07] *** Joins: califax (~califax@user/califx)
[08:33:32] *** Quits: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter) (Ping timeout: 250 seconds)
[08:33:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:34:47] *** Joins: bindu (~bindu@user/bindu)
[08:35:26] *** Joins: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter)
[08:35:37] *** Quits: cyphase_ (~cyphase@2600:1700:7800:4680::49) (Ping timeout: 240 seconds)
[08:36:02] *** Joins: optimant (~asavage@user/optimant)
[08:36:07] *** Joins: Hasselsaurus (~broseidon@68-94-226-0.lightspeed.sntcca.sbcglobal.net)
[08:36:27] *** Quits: mwilson (~mwilson@li159-72.members.linode.com) (Read error: Connection reset by peer)
[08:36:33] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 256 seconds)
[08:36:39] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:36:54] *** Joins: mwilson (~mwilson@li159-72.members.linode.com)
[08:37:38] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[08:39:16] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:41:17] *** Joins: cyphase (~cyphase@user/cyphase)
[08:41:45] *** Joins: irc_standardnick (~irc_stand@203.110.242.22)
[08:44:01] *** Joins: husky2490 (~husky2490@136.32.254.41)
[08:45:53] *** Joins: vanessa (~vanessa@103.160.128.7)
[08:46:32] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[08:49:05] *** Joins: cyphase_ (~cyphase@2600:1700:7800:4680:ad7b:92e1:e5e1:b310)
[08:51:21] *** Joins: brookesy66 (~will@203.220.123.174)
[08:52:07] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[08:52:14] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[08:52:35] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Ping timeout: 252 seconds)
[08:53:52] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[08:54:14] *** Quits: imp (~imp@179-191-215-199.static.sumicity.net.br) (Quit: imp)
[08:54:17] *** Joins: pepper (~pepper@user/pepper)
[08:54:34] *** Joins: mattfoxxx (~mattfoxxx@200116b8222f6d004117e6c6200191b3.dip.versatel-1u1.de)
[08:55:29] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[08:55:49] *** Quits: therufuser (~therufuse@p5b02e029.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:56:17] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:57:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:59:57] *** Quits: mattfoxxx (~mattfoxxx@200116b8222f6d004117e6c6200191b3.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[09:00:38] *** Joins: humberto1 (~humbertow@187.202.198.64)
[09:00:45] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[09:00:55] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[09:01:40] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:02:42] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[09:03:11] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[09:03:27] *** Quits: husky2490 (~husky2490@136.32.254.41) (Remote host closed the connection)
[09:04:10] *** Joins: savolla (~quassel@84.44.28.28)
[09:04:11] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[09:04:14] *** Joins: rev1nchn_ (~rev1nchn@user/rev1nchn)
[09:04:21] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f)
[09:04:39] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f)
[09:05:20] *** Joins: zaquest (~notzaques@5.130.79.72)
[09:06:10] *** Quits: irc_standardnick (~irc_stand@203.110.242.22) (Quit: Leaving)
[09:07:06] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f) (Client Quit)
[09:07:06] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f) (Client Quit)
[09:07:17] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f)
[09:08:45] *** Quits: rev1nchn_ (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[09:09:28] *** Quits: scruz (~scruz@41.58.60.237) (Quit: Leaving)
[09:09:36] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[09:09:53] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[09:09:57] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[09:10:57] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[09:11:21] *** Quits: foul_owl (~kerry@192.145.116.101) (Ping timeout: 256 seconds)
[09:12:16] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[09:12:34] *** Joins: ketiv (~ketiv@cpc148896-sgyl44-2-0-cust233.18-2.cable.virginm.net)
[09:12:43] *** Quits: adde9708 (uid139358@id-139358.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:13:30] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[09:16:25] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[09:17:45] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[09:20:57] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[09:23:37] *** Quits: humberto1 (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[09:24:11] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[09:24:22] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[09:24:37] *** Quits: maxzor (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[09:26:17] *** Joins: foul_owl (~kerry@23.82.194.141)
[09:26:32] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:1a04:c808:a051:d2eb)
[09:29:39] *** Joins: Oddity (~Oddity@user/oddity)
[09:30:51] *** Quits: seoul_man (~meh@097-087-062-229.res.spectrum.com) (Ping timeout: 256 seconds)
[09:30:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:34:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:35:07] *** Joins: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de)
[09:35:11] *** Joins: rev1nchn_ (~rev1nchn@user/rev1nchn)
[09:35:38] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[09:36:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[09:38:21] *** Quits: brennoflavio (~brennofla@2804:14c:2b:87c1:15ca:5eba:c6a4:38bb) (Remote host closed the connection)
[09:38:32] <callq> I'd like to test if an input is blank '' or whitespace '  ' both. Any builtins for this?
[09:38:47] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:38:54] *** Quits: Hasselsaurus (~broseidon@68-94-226-0.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 3.0)
[09:39:10] <grawity> test if mystring.strip() is blank
[09:39:19] *** Joins: bluedust (~bluedust@59.99.182.45)
[09:39:42] <Repiphany> `re.match('\s*', input_string)`
[09:39:52] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:40:01] *** Quits: emerent (~quassel@p200300cd57044377ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:40:04] *** Joins: emerent_ (~quassel@p200300cd5704433fba27ebfffed28a59.dip0.t-ipconnect.de)
[09:40:04] *** emerent_ is now known as emerent
[09:40:12] <Repiphany> Actually `'\s*$'` I guess
[09:40:28] <callq> :(
[09:41:34] *** Quits: jw_dungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34) (Ping timeout: 250 seconds)
[09:42:23] *** Joins: seoul_man (~meh@097-087-062-229.res.spectrum.com)
[09:43:01] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:44:37] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-1dd2-2407-4980-07a2.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:47:23] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[09:48:14] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:48:20] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[09:48:24] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[09:48:42] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-60ea-51c9-1b23-ab22.res6.spectrum.com)
[09:48:46] *** Quits: blink9 (~hr@209.202.206.249) (Quit: Konversation terminated!)
[09:49:10] *** Joins: koo5_ (~quassel@51.140.155.227)
[09:49:31] *** Joins: mickey87 (~user@user/mickey)
[09:50:06] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[09:50:41] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[09:51:24] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[09:51:25] *** mickey87 is now known as mickey8
[09:55:01] *** Quits: bluedust (~bluedust@59.99.182.45) (Remote host closed the connection)
[09:57:29] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:57:55] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:58:23] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Client Quit)
[09:59:10] *** Joins: dvx (~dvx@5.181.92.64)
[09:59:51] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:00:19] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[10:01:13] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[10:02:31] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[10:02:57] *** Quits: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:03:21] *** Joins: masoudd (~masoudd@user/masoudd)
[10:04:57] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[10:05:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[10:06:50] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[10:06:57] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:09:06] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[10:09:10] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[10:09:11] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[10:09:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[10:10:16] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[10:10:53] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[10:12:10] *** Joins: jwdungeon (~quassel@2601:44:4380:4a10:9460:46ca:716d:d886)
[10:12:25] *** Joins: han-solo (~hanish@user/han-solo)
[10:13:18] *** Joins: mattfoxxx (~mattfoxxx@200116b8222f6d004117e6c6200191b3.dip.versatel-1u1.de)
[10:14:31] <parv> I would go with /^\s*$/ if using regex; prefer str.strip() myself for the case
[10:17:11] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f) (Quit: Leaving)
[10:17:27] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f)
[10:17:44] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f) (Read error: Connection reset by peer)
[10:17:57] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f)
[10:18:56] *** Quits: mattfoxxx (~mattfoxxx@200116b8222f6d004117e6c6200191b3.dip.versatel-1u1.de) (Ping timeout: 252 seconds)
[10:19:03] *** Joins: vin (~vin@user/crash)
[10:19:17] *** Joins: manti7 (~manti7@176.10.104.94)
[10:20:11] *** Quits: dfkfs (~dfkfs@178.49.152.151) (Quit: Client closed)
[10:21:07] *** Joins: upsala (~zcb@185.213.155.252)
[10:22:25] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[10:22:59] <rvalue> quick question, when putting objects into python list, does it make copies of the objects?
[10:23:05] *** Joins: bluedust (~bluedust@59.99.182.45)
[10:23:18] *** Quits: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net) (Read error: Connection reset by peer)
[10:23:30] <grawity> no, it doesn't
[10:23:40] <rvalue> thanks
[10:23:54] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[10:25:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:25:59] *** Joins: Guest3 (~Guest3@106.51.143.241)
[10:26:33] *** Joins: nunggu (~q@user/nunggu)
[10:26:52] *** Joins: pepper (~pepper@user/pepper)
[10:27:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:27:54] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[10:27:55] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[10:28:16] *** Quits: kostkon_ (~androirc@2a02:587:a116:f212:4109:3cf5:55f4:55f5) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[10:28:47] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:1a04:c808:a051:d2eb) (Quit: pvergain)
[10:28:59] *** Quits: yaraju (~yaraju@user/yaraju) (Remote host closed the connection)
[10:29:02] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:1a04:c808:a051:d2eb)
[10:29:22] *** Joins: fikran (~fikran@user/fikran)
[10:29:51] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:31:21] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[10:31:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:32:31] *** Joins: csm3105 (~csm3105@31.177.97.44)
[10:33:07] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[10:33:27] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[10:33:55] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-86.poda.cz)
[10:33:58] *** fling is now known as swing
[10:34:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:34:58] <vin> crossposting for more opinions: I am trying to make use of map/filter/reduce for a particular task; fetch 10 bytes at every 100th offset of a bytearray. Any suggestions? I understand that doing this with a simple for loop is much easier but I would like to solve this with a functional approach.
[10:35:44] <vin> Any suggestions on how I can achieve this?
[10:35:47] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[10:35:52] *** Quits: csm3105 (~csm3105@31.177.97.44) (Client Quit)
[10:36:17] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-86.poda.cz) (Client Quit)
[10:36:51] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:36:56] <grawity> something like map(lambda x: array[x:x+10], range(0, len(array), 1000))
[10:37:26] *** Joins: mat001 (~mat001@72.28.108.216)
[10:37:29] <grawity> though [array[..] for x in range..] would be still one-line and more of python's usual style
[10:40:34] *** Joins: mat001_ (~mat001@72.28.108.216)
[10:40:59] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-86.poda.cz)
[10:41:07] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:41:18] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[10:43:09] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[10:43:18] *** Joins: mattfoxxx (~mattfoxxx@200116b8222f6d004117e6c6200191b3.dip.versatel-1u1.de)
[10:43:43] *** Quits: mattfoxxx (~mattfoxxx@200116b8222f6d004117e6c6200191b3.dip.versatel-1u1.de) (Client Quit)
[10:43:59] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[10:44:21] *** Joins: kuter (~kuter@public-gprs526290.centertel.pl)
[10:45:25] *** Joins: Everything (~Everythin@37.115.210.35)
[10:45:29] <nomic> people who use lambdas are just trying to be clever. lambdas should never be needed .. they are a very last resort
[10:45:41] <nomic> they also make code obscure .. do not use lambdas everywhere
[10:46:32] <nomic> use lambdas to fix specfic instances , things that python will not do
[10:46:47] <nomic> do not employ them when python does the job explicitly
[10:47:07] <nomic> its heading like the c legacy mess. decades of programmers 'proving how clever they are'
[10:47:55] *** Quits: mat001_ (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[10:49:44] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[10:50:30] <vin> thanks grawity. I am writing pyspark code which requires me to write data transformation in a map reduce format. Hence the need for lambdas nomic
[10:51:17] *** Joins: mdemo (~mdemo@user/mdemo22)
[10:51:55] *** Joins: mrwick (~mrwick@user/mrwick)
[10:57:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[10:57:18] *** Joins: fef (~thedawn@user/thedawn)
[10:57:26] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[10:57:26] *** Joins: onur (~onur@user/onur)
[10:58:12] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[10:58:27] *** Quits: Guest3 (~Guest3@106.51.143.241) (Ping timeout: 256 seconds)
[10:59:07] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[10:59:42] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[11:00:32] *** Joins: luigibu (~luigi@93.176.155.54)
[11:00:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:01:23] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[11:01:23] *** Joins: onur (~onur@user/onur)
[11:01:42] *** Joins: kts (~kts@103.73.237.238)
[11:04:02] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[11:05:35] <vin> grawity: In data[x:x+10] Would it be possible to avoid accessing by index? Unfortunately I am not able to access spark dataframe by index.
[11:05:42] *** Quits: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[11:06:18] <grawity> I thought it was a bytearray?
[11:06:41] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[11:07:48] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[11:07:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[11:08:09] *** Parts: Everything (~Everythin@37.115.210.35) ()
[11:08:11] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:08:51] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:10:15] <vin> grawity: it is. >>> data DataFrame[path: string, modificationTime: timestamp, length: bigint, content: binary]. >>> data.select("content").take(1) [Row(content=bytearray(b'\x08\x00`\x83k9,\xd5\x8b\x8f^U\x96\x18U\xe7\x9b\x87\xf...
[11:12:01] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[11:12:26] <vin> it does not support iloc :/
[11:13:41] *** Quits: kts (~kts@103.73.237.238) (Quit: Konversation terminated!)
[11:14:13] <vin> when I convert it to a pandas dataframe the bytearray gets converted to something weird -> Name: content, dtype: object
[11:14:40] *** Joins: ircuser (~ircuser@203.109.202.231)
[11:15:05] <jinsun> so it is not a bytearray, it is a bytearray stuffed inside that spark thingy
[11:15:47] <jinsun> (if it was a bytearray you would be able to index it)
[11:17:25] <kevr> is there a way to disable specific loglevels in logging.conf?
[11:17:28] *** Joins: systronnz (~systronnz@203.109.202.231)
[11:17:42] *** Quits: ircuser (~ircuser@203.109.202.231) (Client Quit)
[11:17:57] <kevr> i want to enable info, but disable warning.
[11:18:00] <vin> It is a bytearray, I just has to unwrap it from the pyspark Row type array = data.select('content').take(1)[0].__getitem__('content')
[11:18:15] <vin> But I fear this kind of defeats the purpose of lazily execution
[11:19:09] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[11:20:24] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[11:20:40] *** Quits: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il) (Read error: Connection reset by peer)
[11:20:48] *** Joins: vaio (~gary@user/ghost)
[11:20:52] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[11:20:59] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[11:21:09] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[11:21:09] *** Joins: onur (~onur@user/onur)
[11:21:44] *** Joins: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il)
[11:21:48] *** Joins: andreasbuhr (~quassel@p549db796.dip0.t-ipconnect.de)
[11:22:51] <jinsun> kevr: can't do it just with levels I think, because warning is higher than info, probably need a filter https://docs.python.org/3/library/logging.html#filter-objects
[11:22:59] *** Joins: kosh (~kosh@user/kosh)
[11:23:04] <kevr> gah..
[11:23:15] <kevr> alright, thanks
[11:23:18] <systronnz> hey, I've got a refactoring question. I've got a relatively simple Class which is passed to argparse add_argument action=ClassHere. The challenge is that the class is quite a few years old and takes 9 arguments, including self. My issue is that in git pipeline I'm performing a few pre-checks and the test pipeline is failing pylint. I'm looking to
[11:23:19] <systronnz> re-factor it but quite new to Python and haven't figured out the best way to tackle this problem. normally you'd probably pass in an object or **kwargs, *args from what I can tell however not sure how to do it in this case. Is anyone free to have a quick look and maybe provide some pointers? That'd be rad. thanks.
[11:23:46] <kevr> jinsun: do you know if i can use dictConfig and fileConfig together?
[11:25:25] <p-i-> How come `re.search(r'.*ID.*([A-Z][0-9]+)', 'ID: #F123')[1]` correctly yields 'F123', but using `r'.*ID.*(\w+)'` only yields '3'?
[11:25:39] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[11:25:45] <jinsun> kevr: dunno, I've only used them separately, and more commonly I just do the config from python code
[11:25:45] *** Joins: greedom (~greedom@p200300de6709f40082584878dae66a4d.dip0.t-ipconnect.de)
[11:26:08] <kevr> for sure.
[11:26:10] <kevr> thanks
[11:26:11] <dba> it possible to achieve this `mod_name = x from mod.mod_name import z`
[11:26:41] <Repiphany> p-i-: .* is greedy and matches as many characters as possible
[11:27:43] <p-i-> But how is \w+ different from articulating it manually as [A-Z][0-9]+? Why is .* eating one but not t'other?
[11:28:00] *** Joins: Grace (uid33812@id-33812.lymington.irccloud.com)
[11:28:13] <Repiphany> [A-Z] can only be matched to the "F"
[11:28:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:28:32] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:29:35] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:30:01] <jinsun> systronnz: the easiest option is to disable that pylint warning, sometimes pylint just nitpicks too much
[11:30:38] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:54] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:55] *** Quits: andreasbuhr (~quassel@p549db796.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:31:02] <p-i-> `r'.*ID\W+(\w+)'` .. I see this is better.
[11:31:15] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:30] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[11:31:39] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[11:31:52] <p-i-> And I see why .* yields to [A-Z]. I still don't see why it won't yield to \w+.
[11:31:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:32:06] <systronnz> Thanks. From a best practice standpoint, how many arguments is "too much"? As long as it's still within sane limits then that's just saved me some time :)
[11:32:10] <Repiphany> \w+ only needs to match one character
[11:33:09] <Repiphany> .*? makes the match non-greedy and take as few characters as possible
[11:33:48] <grawity> p-i-: it *does* yield to \w+ -- but only the absolute minimum that's necessary to satisfy the \w+ match, and that's just the '3'
[11:34:01] <p-i-> oh so .* is outranking \w+
[11:34:06] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[11:34:13] <grawity> "outranking" happens left-to-right
[11:34:16] <p-i-> There's a precedence thing going on
[11:34:17] <grawity> the .* matches first
[11:34:20] <Repiphany> I already said it's greedy, i.e. it matches as many characters as possible
[11:34:24] <grawity> there's no prececdence of .* vs \w+ otherwise
[11:34:31] <grawity> the .* matches first because it literally goes first, left-to-right
[11:34:33] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:35:10] <p-i-> ok starting to see it
[11:35:12] <p-i-> thanks
[11:35:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[11:35:44] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[11:36:13] <grawity> as I understand it, first you have .* and the regex actually consumes *everything* until the end, then you have the \w+ and the regex engine has to keep going *back* until it finds something that'll satisfy the match (i.e. backtracks)
[11:36:19] <jinsun> systronnz: well without much details about the function, the rule that pylint uses is fine, the rule is there because normally when you have so many parameters, they are all related and can be stuffed in class, or maybe a collection like list or a dict
[11:36:25] *** Joins: yte3 (~0@151.31.110.176)
[11:36:34] *** Joins: maxzor (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr)
[11:36:42] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[11:36:42] *** Joins: onur (~onur@user/onur)
[11:36:50] <grawity> with [A-Z][0-9]+, of course it needs to go all the way back to the 'F' to satisfy [A-Z]
[11:37:05] <grawity> with \w+ just the '3' is fine
[11:37:15] <p-i-> oh wow, I've been writing some dangerous regexp then
[11:37:27] <p-i-> re.search(r'.*ID.*([A-Z][0-9]+)', 'ID: #F123 F456')[1] # this gives F456
[11:37:49] <grawity> yeah that's not good
[11:37:52] <grawity> so in your case .*? would help
[11:38:14] <grawity> though in general, I'd avoid littering the regex with .*'s unless you're absolutely sure it's needed there
[11:38:15] <Repiphany> You need to be aware of what you're trying to match as well as what you don't want to match
[11:38:24] <grawity> I mean you said it's a mess of inconsistent formats, but even then
[11:38:58] *** Joins: palasso (~palasso@user/palasso)
[11:39:05] <grawity> better make it strict, expand until it passes tests against your entire collection of messages, and fail hard on non-match
[11:39:15] *** Quits: vanessa (~vanessa@103.160.128.7) (Ping timeout: 256 seconds)
[11:39:15] <p-i-> I got r'.*?ID\W+(\w+)' ... there may be fluff before ID on the same line.
[11:39:39] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Quit: Leaving)
[11:39:40] <Repiphany> If you're doing re.search, you don't need .* at the start of the pattern
[11:39:40] <p-i-> Yeah that's what I've done... I've created a dict with all possible message formats, and I'm trying to robustly extract all fields one at a time, testing over all.
[11:39:53] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[11:39:55] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[11:40:15] <Repiphany> re.match is what looks for an exact match from the start of the string
[11:40:58] <grawity> in other words, re.match implies a ^ at the beginning, re.fullmatch implies ^ and $, re.search implies neither?
[11:41:17] *** Joins: vanessa (~vanessa@103.160.128.7)
[11:41:47] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[11:43:30] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[11:43:48] *** Joins: mickey8 (~user@user/mickey)
[11:44:10] <grawity> and really this is one thing even I would try to set up some tests for
[11:44:20] *** gentooclimax is now known as climax
[11:44:28] *** climax is now known as gentooclimax
[11:44:30] <grawity> in case a new format comes up, the regex is adjusted, it stops matching old ones
[11:44:39] *** Joins: rendar (~rendar@user/rendar)
[11:44:52] *** Joins: chele (~chele@user/chele)
[11:45:51] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[11:45:56] *** Joins: cosimone (~user@93-47-231-87.ip115.fastwebnet.it)
[11:46:07] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[11:47:20] <p-i-> yeup
[11:48:08] <Jimmy2027> hi, I want to create a flat list (a list with no list inside) with a setup like this: https://bpa.st/CFBA but I don't know how to unpack the results of my_function(). Is there a way in python to do that?
[11:48:23] <Jimmy2027> I guess what I want is something like this: [1 if my_condition else *my_function() for _ in range(5)]
[11:48:46] <grawity> [1 for _ in range(5)] if my_condition else my_function()
[11:49:04] <grawity> I suspect that's what you're looking for?
[11:49:50] <grawity> (possibly "...else [*my_function()]", in case it returns an iterable that *has* to be unpacked)
[11:49:52] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:50:08] <grawity> well, the [1 for _ in range(5)] can be simplified to [1]*5 for immutable values
[11:50:33] <grawity> so "return [1]*5 if my_condition else my_function()", maybe
[11:50:50] <Jimmy2027> grawity: [*my_function] would still return a list no?
[11:50:58] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[11:50:59] <grawity> what else do you want to return?
[11:51:04] <Jimmy2027> since I have a recurrent function that would give me a list of lists
[11:51:27] <systronnz> I've got a class which I'm curious if there is a way to write it smarter. It's used argparse.add_argument in action=. The Class is referenced here. https://bpa.st/LVIQ. It works so I'm not overly concerned although I'm all for learning tricks and tips to improve. Any feed back would be most useful.
[11:51:27] <grawity> hmm
[11:51:48] <grawity> oh, it's calling itself recursively
[11:51:51] <Jimmy2027> yup :)
[11:51:58] <grawity> where does my_condition come from?
[11:52:13] <Repiphany> Jimmy2027: Maybe go with a generator, e.g. `if condition: yield from my_function()`
[11:52:45] <Jimmy2027> Repiphany: ah yes that might work!
[11:54:59] *** Joins: Arw| (~Arwalk@lfbn-dij-1-969-26.w90-125.abo.wanadoo.fr)
[11:54:59] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[11:55:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[11:55:34] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[11:55:39] *** Quits: Arw- (~Arwalk@lfbn-dij-1-961-160.w90-125.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[11:56:40] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Client Quit)
[11:58:25] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:58:36] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d411:12a8:7964:fbd9)
[11:59:22] *** Quits: jaggz (~jaggz@user/jaggz) (Ping timeout: 250 seconds)
[12:00:22] <aphysically> did ya'll see there's discussion to deprecate urllib
[12:02:24] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:1112:9313:c74:be44)
[12:02:29] *** Quits: j0ma (~jonne@146.115.163.209) (Ping timeout: 256 seconds)
[12:02:46] *** Joins: jaggz (~jaggz@user/jaggz)
[12:02:51] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 245 seconds)
[12:03:02] *** Joins: onur (~onur@2a01:4f8:121:4bf::2)
[12:03:17] *** Quits: nomic (~nomic@185.192.69.148) (Quit: Leaving)
[12:03:21] *** Quits: kmh (~kmh@2a00:6020:5004:6800:9881:9737:5341:5446) (Quit: Leaving)
[12:03:33] *** Joins: j0ma (~jonne@146.115.163.209)
[12:03:45] *** Quits: onur (~onur@2a01:4f8:121:4bf::2) (Changing host)
[12:03:45] *** Joins: onur (~onur@user/onur)
[12:04:09] <dirtwash> can someone show ma an example of an mysql insert with python substitution with an duplicate key update clause?
[12:04:17] <dirtwash> I am confused as to where the %s goes
[12:04:29] *** Joins: esperegu (~quassel@ip-213-124-221-102.ip.prioritytelecom.net)
[12:04:46] <deniska> dirtwash: can you show an example of the query with hardcoded values?
[12:04:47] *** Joins: MajorBiscuit (~MajorBisc@c-001-017-058.client.tudelft.eduvpn.nl)
[12:05:00] <Jimmy2027> Repiphany: not quite sure how to use the generator though, I tried to make a runnabel example: https://bpa.st/VYEA
[12:05:03] <grawity> I'm going to guess two %s, two substitutions
[12:05:07] <Jimmy2027> this would also give lists of lists
[12:05:31] <deniska> If a driver supports it, I also suggest using named substitutions instead of positional
[12:05:35] <dirtwash> deniska: normally its like "INSERT INTO customers (name, address) VALUES (%s, %s)"
[12:05:44] <dirtwash> now i want insert into ... on duplicate key update name=..
[12:05:54] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[12:05:55] <grawity> Jimmy2027: because you're still putting the return of my_function() *inside* the list
[12:05:58] <grawity> Jimmy2027: don't do that
[12:06:10] <deniska> dirtwash: it'd be name=%s, and duplicate a value in a tuple you pass
[12:06:26] <dirtwash> ok but how do I tell it to use the 4th tuple
[12:06:36] <grawity> something vaguely like query("INSERT INTO customers (name, address) VALUES (%s, %s) ON DUPLICATE KEY UPDATE name=%s, address=%s", [name, address, name, address])
[12:06:37] <dirtwash> if i have 4 fields and only need to update 2 of them
[12:07:04] <grawity> well, my example didn't make sense but still shows the point
[12:07:26] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-2e841f-185.dhcp.inet.fi)
[12:07:30] <deniska> dirtwash: cursor.execute('INSERT INTO customers (name, address) VALUES (%s, %s) on duplicate key update name=%s', (name, address, name))
[12:07:33] <deniska> something like that
[12:07:34] <dirtwash> grawity: but what if you only want toupdate e.g. address?
[12:07:44] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Quit: The Lounge - https://thelounge.chat)
[12:07:50] <grawity> dirtwash: "...UPDATE address=%s", [name, address, address]
[12:08:06] <dirtwash> how does it know which one to assign?
[12:08:25] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[12:08:35] <dirtwash> python only seen %s to substitute from the tuple right?
[12:08:40] <dirtwash> how does it know which one to pick
[12:09:03] <deniska> dirtwash: it just "replaces" each %s in a query with a corresponding index from a tuple
[12:09:17] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[12:09:19] <Jimmy2027> grawity: not sure how to do it otherwise, something like this would not work: https://bpa.st/COFA
[12:09:26] <dirtwash> yea but how does it know which index
[12:09:38] *** Joins: vladoski (~vladoski@2001:b07:add:d406:b7d1:c154:3662:af1a)
[12:09:42] *** Joins: widp (~user@124.123.107.237)
[12:09:48] <dirtwash> "...UPDATE address=%s", [name, address, address]  like wouldnt it use name instead of address?
[12:09:52] <dirtwash> given the order matters
[12:10:15] <deniska> dirtwash: positionally, first %s gets the first item, second %s gets the second etc
[12:10:41] <dirtwash> yes exactly , so my first insert is name, address, street, but the on duplicate key update says only update .e.g street
[12:10:46] <dirtwash> how to assign the proper %s then?
[12:10:56] *** Quits: foul_owl (~kerry@23.82.194.141) (Read error: Connection reset by peer)
[12:10:57] <dirtwash> because %s is just string sub
[12:11:01] <dirtwash> position matters
[12:11:04] <deniska> dirtwash: you have some specific query, it has a fixed amount of params at fixed positions
[12:11:05] <grawity> Jimmy2027: what output are you expecting?
[12:11:10] <vin>  keys = data_sp.rdd.map(lambda x: x['Key']).map(lambda x: (x, i)) is there a way to increment i for each map here? Since i++ does not work.
[12:11:23] <grawity> dirtwash: it literally uses the position
[12:11:44] <dirtwash> grawity: yes for the first insert maybe, but on the second update what would be the position of %s again? first? 4th?
[12:12:07] <deniska> dirtwash: it substitutes all the things at once, and then runs the resulting query
[12:12:07] <grawity> dirtwash: there's no such thing as "the first insert" or "the second update", it's one large SQL query
[12:12:22] <grawity> dirtwash: one large SQL query with three %s in it
[12:12:33] <dirtwash> so if i have another %s in my query I need to append it to my string
[12:12:34] <vin> should I have a closure to increment i?
[12:12:44] <dirtwash> ok now it makes sense
[12:12:47] <Jimmy2027> grawity: I would expect this but as a flat list: [[[[1, 1, 1, 1, 1], 1, 1, 1, 1], 1, 1, 1, 1], 1, 1, 1, 1]
[12:13:04] <deniska> dirtwash: the amount of %s in your string corresponds to the amount of items in your tuple
[12:13:14] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:13:24] <dirtwash> deniska: yes but that means i need to have double entries right
[12:13:33] <deniska> dirtwash: yes
[12:13:51] <dirtwash> isnt there a smarter way and jut use vars? this seems primitive
[12:13:58] <deniska> dirtwash: With complex queries it can become confusing. I suggest looking at named substitutions, (the syntax is probably `%(name)s`), and then instead of a tuple you pass a dict
[12:14:09] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (Ping timeout: 256 seconds)
[12:14:13] <dirtwash> ok i have a look, thanks guys
[12:14:28] <grawity> hmm don't some SQL modules support named ones, like "INSERT VALUES (:name, :address) UPDATE name=:name", {"name": name, "address": address}
[12:14:38] <deniska> yeah, a lot of them do
[12:14:47] <grawity> iirc mysql or sqlite in particular didn't, when I wanted it :(
[12:14:50] <deniska> :name is oracle syntax :)
[12:15:12] <deniska> %(foo)s works with postgres. Either way, consult the docs of the driver you are using
[12:15:30] <dirtwash> thx
[12:15:39] <deniska> (or use a query builder like sqlalchemy)
[12:17:13] <grawity> Jimmy2027: so more like this then?
[12:17:15] <deniska> sqlite seem to support named style
[12:18:49] <grawity> vin: does it have to be (x, i) or could it be (i, x)? you could get that from "keys = enumerate(data_sp.rdd.map(lambda x: x['Key']))"
[12:19:12] <grawity> vin: but if you want something incrementable, then "i = itertools.count()" and then "(x, next(i))"
[12:19:14] <aphysically> jinsun: Guido pointed out that TypeAlias thing is also reachable if you're using from __future__ import annotations, because then you don't even need to stringize it
[12:19:25] <aphysically> anyway my patch is merged and being backported so the issue is fixed
[12:19:38] <vin> itertools.count() makes a lot of sense, thanks! grawity
[12:19:56] <aphysically> unfortunately I don't see any reasonable way to backport the fix to typing_extensions because (nonsense about the technicalities of the typing.py implementation)
[12:21:56] <dirtwash> gawd i hate database stuff
[12:22:15] *** Quits: vladoski (~vladoski@2001:b07:add:d406:b7d1:c154:3662:af1a) (Remote host closed the connection)
[12:23:28] <deniska> databases are cool, they store your data, you can query them
[12:23:35] <dirtwash> ok im at a loss again, if i have a first_seen field in my table, how do I write this mysql insert+update query without knowing the first-seen ?!
[12:23:37] *** Joins: vladoski (~vladoski@2001:b07:add:d406:2ee8:4107:dac9:807f)
[12:23:47] <dirtwash> cause first_seen will stay in db, and I'd prefer not to read it into a var beforehand
[12:24:06] <grawity> just don't update it?
[12:24:36] <dirtwash> gawd i need a vacation
[12:24:43] <dirtwash> grawity: yes obviously, wtf is wrong with me
[12:25:13] <dba> How do I make at least one of a two args parser.add_argument1 and parser.add_argument2 required to run the script? any one presented the script should run fine
[12:25:47] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[12:25:49] *** Joins: clarkk (~clarkk@2a00:23c7:d106:2600:941:80d2:e315:5046)
[12:26:22] <deniska> dba: make both optional from argparser side of things, and just check that one of them was provided?
[12:26:22] <grawity> hmm don't know if argparse is capable of that, but tbh I just make custom errors for those, "if not (args.foo or args.bar): exit("error: Either --this or --that is required.")"
[12:27:10] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:27:11] *** Joins: bindu_ (~bindu@user/bindu)
[12:27:29] <dirtwash> deniska: but db design is hard
[12:27:33] <grawity> "error: An operation is required (such as --foo or --bar)"
[12:27:36] <dba> deniska, grawity I was just curious if argparse has something built in
[12:27:39] <dirtwash> especially if you didnt think through all use cases beforehand
[12:28:06] *** Quits: brookesy66 (~will@203.220.123.174) (Quit: WeeChat 3.4)
[12:28:09] *** Quits: greedom (~greedom@p200300de6709f40082584878dae66a4d.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:28:34] <deniska> dirtwash: well, sure, data storage format is a long term commitment, and long term commitments are hard
[12:29:09] *** bindu_ is now known as bindu
[12:29:23] *** Joins: foul_owl (~kerry@192.145.116.33)
[12:29:43] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:30:01] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[12:30:02] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[12:30:02] *** Joins: n00bcoderkb (~n00bcoder@122.161.48.139)
[12:30:21] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:31:17] <dirtwash> deniska: thats what my gf said
[12:31:22] <p-i-> I can get ANSI color output with: rgb = lambda r,g,b: f'\033[38;2;{r};{g};{b}m' ; print(rgb(255,0,0) + 'foo')` But can I achieve strike-thru? From google I infer `print('\e[9m' + 'strikethrough' + '\e[0m')` but it isn't working.
[12:31:41] <grawity> yes, but not all terminals support it
[12:31:42] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[12:32:04] <p-i-> Do I need to adjust my ANSI sequence, or is it likely a limitation of VSCode's ipynb editor (which _does_ handle colours)?
[12:32:23] <grawity> it's a limitation of the terminal you're using
[12:32:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:32:31] <grawity> or other program tha parses the sequences
[12:32:47] *** Joins: shad (~shad@user/shad)
[12:32:56] *** Quits: shad (~shad@user/shad) (Client Quit)
[12:33:18] *** Joins: shad (~shad@user/shad)
[12:33:42] <deniska> can't you output literal html from ipython notebooks?
[12:33:57] <grawity> most programs tend to roll it anew, so e.g. they mishandle \e[m, or don't include italic, or forget strikethrough, or support only the 38;2;r;g;b but not the actually correct 38:2::r:g:b
[12:33:59] <p-i-> hmm, if I write that to file, and `cat` it in iterm, still no strikethru
[12:34:32] <grawity> https://gitlab.com/gnachman/iterm2/-/issues/5130 sounds like it should be there
[12:34:38] <p-i-> dayum grawity you been in the game a long time
[12:35:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[12:37:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[12:37:28] *** Joins: hams (~hams@73.232.205.0)
[12:37:28] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[12:37:28] *** Joins: hams (~hams@user/hams)
[12:38:00] <p-i-> yeah I'm on iterm 3.4.13 and that issue was on 3.0.8 2 years back and `echo -e "\e[9mstrikethrough\e[0m"` is fail.
[12:38:05] <p-i-> ok so much for strikethru
[12:38:43] *** Joins: fikran (~fikran@user/fikran)
[12:40:30] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[12:42:40] *** Quits: n00bcoderkb (~n00bcoder@122.161.48.139) (Quit: Client closed)
[12:45:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-2e841f-185.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:46:35] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[12:47:57] *** Quits: bluedust (~bluedust@59.99.182.45) (Read error: Connection reset by peer)
[12:48:32] *** Joins: bluedust (~bluedust@103.160.194.110)
[12:48:40] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:50:36] *** Joins: ThanatosJ (~Thanatos@105.112.24.71)
[12:50:48] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[12:51:08] *** Joins: xkuru (~xkuru@user/xkuru)
[12:51:12] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:51:23] *** Joins: Naan` (~Naan@user/naan)
[12:51:46] *** Quits: Thanatos (~Thanatos@105.112.24.71) (Read error: Connection reset by peer)
[12:52:18] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:52:40] *** Joins: LimeOn (~user@user/limeon)
[12:53:29] *** Quits: hams (~hams@user/hams) (Ping timeout: 252 seconds)
[12:53:54] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4d74:be9c:8758:8859)
[12:55:04] <dirtwash> mysql errors are super useless
[12:55:18] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[12:55:36] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:482f:4cea:4482:ea3a)
[12:59:11] *** Quits: vladoski (~vladoski@2001:b07:add:d406:2ee8:4107:dac9:807f) (Remote host closed the connection)
[12:59:38] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Quit: leaving)
[13:00:17] *** Quits: gitly (~gitly@148.252.129.10) (Ping timeout: 256 seconds)
[13:03:43] *** Joins: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[13:06:47] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[13:07:17] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[13:07:48] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[13:07:48] *** Joins: onur (~onur@user/onur)
[13:08:30] *** Joins: sudorm (~sudorm@2a01cb06a011744fcd2bb4c8c7a06d20.ipv6.abo.wanadoo.fr)
[13:09:19] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:09:34] *** Quits: savolla (~quassel@84.44.28.28) (Ping timeout: 260 seconds)
[13:10:23] *** Joins: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net)
[13:10:39] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:11:04] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[13:12:36] *** Joins: lakrass (~lakrass@user/lakrass)
[13:12:42] <oneforall2> why is it compilinng kajongg it complains it cxan't dinf twisted but it is installed .. python3 FindTwisted.py and iy comes up o.o.o
[13:13:19] <supakeen> Perhaps you are using different Python interpreters for both tasks.
[13:15:21] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 245 seconds)
[13:16:55] *** Joins: andreasbuhr (~quassel@p549db796.dip0.t-ipconnect.de)
[13:17:04] <oneforall2> #!/usr/bin/env python3
[13:17:31] *** Joins: someuser (~user@197.54.43.98)
[13:19:09] *** Joins: savolla (~quassel@84.44.28.28)
[13:21:16] <oneforall2> wgats it supposed to read to get the version from twisted ?the PKG-INFO?
[13:21:54] <supakeen> Don't know, it depends on how you are compiling things. Do you have any error output you can put in a pastebin that includes the commands you ran?
[13:22:16] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[13:23:22] *** Quits: systronnz (~systronnz@203.109.202.231) (Quit: Client closed)
[13:23:59] <dirtwash> so I get  'builtin_function_or_method' object is not subscriptable for line.split[0]
[13:24:01] <dba> `if not (False or True) and (False or True)` isnt suppost to return False? or is it the whole statement wrong?
[13:24:16] <dirtwash> why though?
[13:24:30] <dba> because it is returing True
[13:24:32] <dirtwash> if i have a line like "bla blubb" shouldnt line.split[0] yield bla?
[13:24:55] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:24:56] <deniska> dba: `not (False or True) and (False or True)` evaluates to False
[13:26:45] *** Joins: plastico (~plastico@neomutt/plastico)
[13:26:52] <grawity> dba: according to ast.dump(ast.parse()), the precedence is like "(not (False or True)) and (False or True)"
[13:26:53] <dirtwash> ok so the error is because i cant pull that from split function since its builtin, how do i do it without saving the var in between?
[13:27:02] <grawity> instead of your expected "not ((False or True) and (False or True))"
[13:27:51] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[13:28:16] *** Joins: ice9 (~ice9@user/ice9)
[13:28:18] <tm007> Anyone's worked with gRPC in Python?
[13:28:41] <tm007> Need some brief on where to begin
[13:28:43] <dba> Thanks grawity, deniska
[13:29:17] <grawity> aha, pip install astpretty && python -m astpretty <(echo "not (False or True) and (False or True)")
[13:30:39] <dirtwash> how do I split a line and make it subscriptable?
[13:30:39] *** Joins: Adoi (~Adoi@user/adoi)
[13:30:50] <dirtwash> without iterating over it and adding to another list
[13:30:50] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:30:53] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[13:31:09] <grawity> to call .split, you always need the parens, i.e. line.split() for the default separator
[13:31:28] <grawity> same for any other method
[13:31:49] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[13:32:09] <dirtwash> ah silly me
[13:32:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:33:27] *** Joins: ice99 (~ice9@user/ice9)
[13:33:49] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[13:34:17] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[13:34:40] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[13:35:15] *** Joins: onur (~onur@2a01:4f8:121:4bf::2)
[13:35:42] *** Quits: onur (~onur@2a01:4f8:121:4bf::2) (Changing host)
[13:35:42] *** Joins: onur (~onur@user/onur)
[13:36:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:37:31] *** Joins: pepper (~pepper@user/pepper)
[13:37:51] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Ping timeout: 245 seconds)
[13:38:25] *** Joins: gusto (~Augustus@109.255.100.54)
[13:39:51] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[13:40:17] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[13:42:47] <Zweimer> https://bpa.st/OZQA << I would like to have one database-file per object. However, both queries from line 39 and 40 end up in the first database-file. What do I do wrong?
[13:44:08] *** Joins: Ha-Jo (~hajo@2a01:c23:8dc4:e700:821f:2ff:feef:dabf)
[13:45:07] *** Joins: Mini_Me (~chatzilla@136.158.29.146)
[13:45:24] <mar77i> looks good to me, though
[13:45:33] *** Joins: slav0nic (slav0nic@python.su)
[13:45:50] <Ha-Jo> Hi, is there something like an inline increment? eg: a=1, print(a+=1)
[13:45:53] *** Quits: Mini_Me (~chatzilla@136.158.29.146) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10.2/20211221193415])
[13:45:57] <oneforall2> python3    import twisted   print (twisted.version)  [Twisted, version 21.7.0] so must be the /kajongg-21.12.2/cmake-modules/FindTwisted.py .. ?
[13:46:43] <mar77i> Ha-Jo: python rather recently added the `:=` operator. I don't know how popular it is. I would yell at you if you for overusing it. :)
[13:46:55] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4d74:be9c:8758:8859) (Remote host closed the connection)
[13:47:20] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102)
[13:47:21] <Ha-Jo> mar77i: what does it do?
[13:47:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[13:47:33] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[13:47:50] <mar77i> it's like a shorthand for assignment-and-return-the-result
[13:47:54] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:48:05] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[13:48:44] <mar77i> this way you can do loops while `while (item := get_items_or_none_when_done()):`
[13:48:52] <mar77i> *like
[13:49:08] <oneforall2> https://pastebin.com/JiC4PieJ thats what is inn the FindTwisted.py
[13:49:25] *** Quits: asix (~Anders@user/asix) (Ping timeout: 250 seconds)
[13:49:57] <oneforall2> not sure how to test that doing python3 like I did the other
[13:50:01] <grawity> Ha-Jo: if you specifically want something incrementable, a=itertools.count(); print(next(a))
[13:50:05] <oneforall2> lost at the try part :)
[13:50:14] <Ha-Jo> mar77i: i have seen something like that on the net. That looked similar to a lambda function to me.
[13:50:49] <mar77i> thing is that in the loop body you get to have the respective `item`, too
[13:52:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[13:52:45] <Ha-Jo> mar77i: okay, not another include. I will do it on two lines: a +=1 , print(a)
[13:52:57] *** Quits: Jong (~Jong@2620:10d:c090:400::5:d8b2) (Ping timeout: 240 seconds)
[13:53:35] <Ha-Jo> Thank you btw. :-)
[13:53:56] *** Joins: Mini_Me (~chatzilla@136.158.29.146)
[13:55:13] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:482f:4cea:4482:ea3a) (Quit: Client closed)
[13:55:25] *** Joins: summonner (~summonner@188.24.40.180)
[13:56:39] *** Joins: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br)
[13:58:16] *** Joins: Valeria (~Valeria@user/valeria)
[13:58:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:58:59] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[14:02:26] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[14:02:34] *** Joins: masoudd (~masoudd@user/masoudd)
[14:03:34] *** Joins: asix (~Anders@user/asix)
[14:03:49] *** Quits: bluedust (~bluedust@103.160.194.110) (Remote host closed the connection)
[14:04:53] *** Joins: jpic (~jpic@82.142.2.94)
[14:05:06] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 260 seconds)
[14:05:34] *** Joins: Klinda (~superleag@user/klinda)
[14:05:41] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[14:06:20] *** Joins: nomic (~nomic@185.192.69.148)
[14:06:59] *** Joins: naan (~Naan@user/naan)
[14:07:23] *** Joins: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt)
[14:08:32] *** Joins: shad (~shad@user/shad)
[14:08:42] <koopman> Hey all, I’m trying to implement a merge using fuzzywuzzy but my problem is I cannot match a first name and middle name, first and last seem to be fine tho… I’ve taken the code from here: https://stackoverflow.com/questions/13636848/is-it-possible-to-do-fuzzy-match-merge-with-python-pandas
[14:09:22] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[14:10:06] *** Quits: duuude (~user@user/duuude) (Remote host closed the connection)
[14:10:32] *** Joins: duuude (~user@user/duuude)
[14:11:02] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 252 seconds)
[14:11:07] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:11:07] *** Joins: comerijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:11:46] *** Joins: Jong (~Jong@2620:10d:c090:400::5:6b6c)
[14:13:30] *** Quits: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt) (Ping timeout: 260 seconds)
[14:15:46] *** Quits: Mini_Me (~chatzilla@136.158.29.146) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10.2/20211221193415])
[14:15:57] *** Quits: rev1nchn_ (~rev1nchn@user/rev1nchn) (Ping timeout: 240 seconds)
[14:17:18] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[14:17:28] *** Joins: Feriun (uid524309@user/Feriun)
[14:18:11] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[14:19:20] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[14:19:51] *** Quits: comerijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:20:45] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[14:20:59] <koopman> Here is my code: https://dpaste.com/DVT7UXEQ5
[14:21:31] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:21:47] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:23:16] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[14:26:35] *** Joins: bluedust (~bluedust@103.160.194.110)
[14:26:59] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:26:59] *** Joins: Mini_Me (~chatzilla@136.158.29.146)
[14:27:32] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 252 seconds)
[14:28:17] *** Quits: bluedust (~bluedust@103.160.194.110) (Remote host closed the connection)
[14:28:20] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:30:51] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:31:31] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:32:05] *** Quits: foul_owl (~kerry@192.145.116.33) (Ping timeout: 256 seconds)
[14:32:27] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:32:44] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:55] *** Joins: rsx (~dummy@ppp-188-174-144-83.dynamic.mnet-online.de)
[14:32:56] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[14:33:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:35:13] *** Joins: DavidMilestone (~DavidMile@122.179.195.13)
[14:36:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:37:57] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 250 seconds)
[14:38:18] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[14:38:52] *** Quits: ice99 (~ice9@user/ice9) (Quit: Leaving)
[14:39:10] *** Joins: ice9 (~ice9@user/ice9)
[14:40:42] <DavidMilestone> Hi, I'm learning OOPs right now. And this is a piece of code I've written so far: https://bpa.st/IH6A
[14:40:42] <DavidMilestone> Are there any precautions that I should keep in mind while writing these programs? And what would be the scope of improvement in this program?
[14:41:52] *** Quits: doko (~doko@2a02:8106:1a:7600:22a5:1ce8:8623:3577) (Ping timeout: 250 seconds)
[14:42:10] <supakeen> Most of the pitfalls for OOP are surrounding inheritance and you haven't gotten there yet :)
[14:42:43] <DavidMilestone> Yep, that's the next concept I'll cover in a moment
[14:42:50] *** Quits: sudorm (~sudorm@2a01cb06a011744fcd2bb4c8c7a06d20.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[14:43:06] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[14:45:33] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[14:45:38] *** Joins: cursey (~cursey@user/cursey)
[14:46:01] *** Joins: paul424 (~tom@ip-5-172-234-221.multi.internet.cyfrowypolsat.pl)
[14:46:06] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[14:46:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:46:24] *** Joins: dme86 (~dan@user/dan86)
[14:47:17] *** Joins: foul_owl (~kerry@23.82.194.143)
[14:48:03] *** Joins: fikran (~fikran@user/fikran)
[14:49:36] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[14:49:52] <nedbat> DavidMilestone: since this is a User class, you could name your method describe() instead of describe_user()
[14:50:07] <DavidMilestone> Thank you!
[14:50:29] <nedbat> DavidMilestone: on line 16, it's more common to use:  if isinstance(value, str)    # but some people would use;   if hasattr(value, "title")
[14:50:53] <nedbat> DavidMilestone: on line 23, you calculate a full name for the user. This could be a method unto itself.
[14:51:11] <nedbat> in fact, you do almost the same thing on line 12
[14:51:34] <DavidMilestone> Great feedback, thank you so much nedbat
[14:54:06] *** Joins: thevishy (~Nishant@2405:201:f005:c007:f886:9bab:89ec:ff42)
[14:54:43] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[14:55:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[14:56:45] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:56:55] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[14:57:03] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:59:06] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 245 seconds)
[14:59:10] *** Joins: masoudd_ (~masoudd@user/masoudd)
[15:01:15] *** Joins: Jefren (~Jefren@208.104.190.50)
[15:01:42] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[15:01:57] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:02:02] *** Joins: LimeOn (~user@user/limeon)
[15:02:53] *** Quits: nomic (~nomic@185.192.69.148) (Quit: Leaving)
[15:03:05] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 250 seconds)
[15:05:09] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:05:17] *** Quits: Mini_Me (~chatzilla@136.158.29.146) (Ping timeout: 240 seconds)
[15:07:23] *** Joins: arinov_ (~arinov@213.194.126.155)
[15:08:19] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.66) (Quit: Client closed)
[15:08:49] *** Joins: jose1711 (~jose@93.184.65.164.host.vnet.sk)
[15:10:00] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[15:10:03] <jose1711> hello, just a quick question. will all respect to cool factor of f-strings.. if i want a localized string (like f'file {filename} does not exist') i need to go back to % or ''.format, correct?
[15:10:10] *** Joins: lakrass (~lakrass@user/lakrass)
[15:10:46] <supakeen> yes, format, .format are the usual suspects for that.
[15:10:58] <jose1711> thank you
[15:11:06] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 268 seconds)
[15:11:45] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[15:11:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[15:11:59] *** Quits: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) (Remote host closed the connection)
[15:12:03] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:9511:1adf:ad63:3d17) (Quit: Client closed)
[15:14:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:17:13] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[15:17:27] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[15:18:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:19:17] *** Joins: Achylles (~Achylles_@2804:431:d724:1728:f3b4:d659:13ba:d509)
[15:20:01] *** Joins: imp (~imp@179-191-215-199.static.sumicity.net.br)
[15:20:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:21:23] *** Joins: Mini_Me (~chatzilla@136.158.29.146)
[15:22:43] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[15:23:11] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:23:27] *** Joins: mickey8 (~user@user/mickey)
[15:24:11] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[15:24:31] *** Joins: therufuser (~therufuse@p5b02e029.dip0.t-ipconnect.de)
[15:25:44] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:25:49] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[15:25:52] *** Quits: pabed (~Thunderbi@89.37.15.34) (Read error: Connection reset by peer)
[15:26:17] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:26:34] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:27:51] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[15:28:30] *** Joins: Barones (~Barones@user/Barones)
[15:28:54] *** Quits: Mini_Me (~chatzilla@136.158.29.146) (Remote host closed the connection)
[15:29:16] <theprophet> guys , i am learning testing right now and  i am working in pycharm, tbh this testing thing makes very little sense since the pycharm bassicaly does everything what this testing would do. and plus to everthing, i better enjoy testing software manually , like when i personally think that the program might 'be' done to wrap it up and test it for
[15:29:16] <theprophet> myself on my personal computer. i personally think that learning testing with unittest is waste of time, since i think that i do the same with different ways to achieve the perfection for the program. do you have any suggestions ?
[15:29:26] *** Quits: Barones (~Barones@user/Barones) (Client Quit)
[15:30:35] <theprophet> like i should keep up with unittest learning or you also think that its a waste of time?
[15:30:43] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:941:80d2:e315:5046) (Quit: Leaving)
[15:30:46] <supakeen> well, software is never done, it will still change over time and tests help a lot with that part of it, to guarantee that things keep working in the face of changes being made to underlying code
[15:30:49] <nedbat> theprophet: as your programs get larger, it is impossible to test them manually
[15:31:20] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[15:31:25] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[15:31:50] <theprophet> supakeen nedbat  i see.
[15:32:22] *** Joins: anotheruser (~user@197.54.66.26)
[15:33:14] <theprophet> do people who work in companies use pycharm at all? in which redactor people mostly work?
[15:33:17] *** Quits: xizhendu_ (~xizhendu@240e:305:7380:8900:395b:be7:2347:dfa7) (Ping timeout: 240 seconds)
[15:33:43] <koopman> Anyone know what I may be doing wrong here? I’m not matching on names that have a second first name Here is my code: https://dpaste.com/DVT7UXEQ5
[15:33:49] <theprophet> or its a personal prefference? and any1 in the company can use any editor they want?
[15:33:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:34:57] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 240 seconds)
[15:35:47] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:07] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:53] *** Joins: nomic (~nomic@185.192.69.148)
[15:36:55] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:36:59] *** Joins: artur (~artur@78-63-43-243.static.zebra.lt)
[15:37:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:38:20] *** Quits: davor (~davor@user/davor) (Read error: Connection reset by peer)
[15:38:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:39:03] <Juhaz> theprophet, might come as a surprise but not every company in the world is the same. Some will dictate the tools you can use, others will allow personal preference.
[15:39:04] *** Quits: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br) (Quit: vsantana)
[15:39:21] *** Joins: fivaldi (~fivaldi@213-29-36-107.adslcust.sbone.cz)
[15:39:36] *** Quits: withered1wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[15:39:45] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[15:40:13] *** Quits: luigibu (~luigi@93.176.155.54) (Ping timeout: 240 seconds)
[15:40:42] <nedbat> theprophet: i have heard of companies that dictate IDEs, but to me that sounds like a very bad idea.
[15:40:59] *** Joins: Barones (~Barones@user/Barones)
[15:41:22] <theprophet> nedbat how so?
[15:41:47] <theprophet> nedbat like where do you write your code?
[15:42:00] *** Joins: davor (~davor@user/davor)
[15:42:02] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[15:42:09] <nedbat> theprophet: i meant, it's a bad idea for the company to tell developers what IDE to use.  They should choose for themselves.
[15:42:16] *** Joins: luigibu (~luigi@93.176.155.54)
[15:42:46] <theprophet> nedbat ahh i see.  .. what about you? where do you write your code?
[15:42:53] <nedbat> theprophet: I use vim
[15:42:57] *** Quits: callq (~callq@157.41.72.120) (Ping timeout: 240 seconds)
[15:42:59] *** Quits: artur (~artur@78-63-43-243.static.zebra.lt) (Quit: Konversation terminated!)
[15:43:25] *** Quits: davor (~davor@user/davor) (Read error: Connection reset by peer)
[15:43:57] <theprophet> nedbat checked it,,, i see.
[15:44:06] *** Quits: Linux77 (~LinuMage@186.233.179.225) (Read error: Connection reset by peer)
[15:44:43] <supakeen> i use `ed` during presentations because everyone hates it equally :)
[15:44:46] <jinsun> at my company people can use whatever they want, but only marketplace.visualstudio.com is whitelisted by the proxy, other websites need a manual process to request a file and it has to be approved manually for each file
[15:44:51] *** Joins: ravish_ (~ravish@175.100.149.127)
[15:44:57] <jinsun> (so you can guess which one most people use)
[15:45:12] *** Joins: Guest5203 (~vivek@175.100.149.127)
[15:45:36] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:45:45] <ravish_> exit
[15:45:50] *** Quits: ravish_ (~ravish@175.100.149.127) (Client Quit)
[15:45:54] <Guest5203> exit
[15:45:57] *** Quits: Guest5203 (~vivek@175.100.149.127) (Client Quit)
[15:46:12] *** Joins: zeden (~zeden@user/zeden)
[15:46:22] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[15:46:24] *** Joins: davor (~davor@user/davor)
[15:47:33] *** Joins: doko (~doko@89.27.154.45)
[15:47:43] *** Joins: pycurious (~Adium@user/pycurious)
[15:49:16] <theprophet> jinsun hmm
[15:49:24] *** Quits: nomic (~nomic@185.192.69.148) (Quit: Leaving)
[15:50:13] <theprophet> jinsun visual studio ? lol
[15:50:49] *** Quits: paul424 (~tom@ip-5-172-234-221.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[15:50:58] <jinsun> close, VS Code :D
[15:51:17] *** Joins: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br)
[15:51:18] <theprophet> jinsun yea thats what i meant. :D
[15:51:28] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[15:52:08] <theprophet> jinsun i use vs code for django projects. since free pycharm does not support CSS
[15:52:53] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:1112:9313:c74:be44) (Ping timeout: 256 seconds)
[15:53:33] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[15:54:12] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[15:55:15] <DavidMilestone> VSCode + Vim extension is a deadly combo
[15:56:05] <theprophet> DavidMilestone exactly how?
[15:56:57] *** Quits: Grace (uid33812@id-33812.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:56:58] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:d805:f6bc:66b1:7d9f) (Read error: Connection reset by peer)
[15:57:05] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 256 seconds)
[15:57:19] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 256 seconds)
[15:57:25] *** Quits: luigibu (~luigi@93.176.155.54) (Ping timeout: 240 seconds)
[15:57:31] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:58:05] *** Quits: imp (~imp@179-191-215-199.static.sumicity.net.br) (Read error: Connection reset by peer)
[15:58:16] *** Joins: luva (~luva@146.70.62.238)
[15:58:38] *** swing is now known as fling
[15:59:26] <The-Compiler> add https://vspacecode.github.io/ to the mix, it makes things even more awesome
[15:59:48] <supakeen> oh no
[15:59:55] <apollo13> haha
[15:59:55] *** Joins: callq (~callq@2409:4062:2d8d:345f:158c:2117:eab6:8c14)
[16:00:03] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[16:02:42] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:02:49] *** Joins: OPK (~OPK@user/opk)
[16:03:09] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:08:05] *** Joins: shad (~shad@user/shad)
[16:08:45] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[16:08:45] *** Joins: ProgramRipper (~ProgramRi@120.239.67.33)
[16:09:14] *** Parts: ProgramRipper (~ProgramRi@120.239.67.33) ()
[16:10:17] *** Quits: OPK (~OPK@user/opk) (Read error: Connection reset by peer)
[16:10:56] *** Joins: OPK (~OPK@user/opk)
[16:12:51] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[16:15:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[16:15:20] *** Joins: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[16:15:22] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:15:53] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 250 seconds)
[16:17:22] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[16:17:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:19:28] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:19:45] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[16:19:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:20:13] *** Joins: bloody (~bloody@user/bloody)
[16:21:46] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[16:22:30] <DavidMilestone> theprophet: it makes writing code efficient. Once you've got the keybindings stored in your muscle memory, you'll never want to look back again.
[16:25:23] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[16:26:23] *** Joins: rev1nchn_ (~rev1nchn@user/rev1nchn)
[16:26:44] *** Joins: dme86 (~dan@user/dan86)
[16:27:01] *** Quits: Feriun (uid524309@user/Feriun) (Quit: Connection closed for inactivity)
[16:28:04] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:2bc0:5251:27cf:39d7)
[16:29:42] *** Joins: fanis30 (~anon@adsl-116.37.6.160.tellas.gr)
[16:31:33] *** Joins: msk (~Thunderbi@89.205.124.40)
[16:32:20] *** Quits: masoudd_ (~masoudd@user/masoudd) (Remote host closed the connection)
[16:32:23] *** Joins: dubs`` (~user@072-182-039-016.res.spectrum.com)
[16:33:21] *** Quits: dubs` (~user@072-182-039-016.res.spectrum.com) (Ping timeout: 256 seconds)
[16:33:47] *** Joins: rixycan (~rixycan@modemcable253.165-177-173.mc.videotron.ca)
[16:34:11] *** Quits: rixycan (~rixycan@modemcable253.165-177-173.mc.videotron.ca) (Client Quit)
[16:34:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:35:21] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:35:43] *** Joins: cuz (~user@50.226.229.246)
[16:36:45] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[16:36:51] <merijn> Are there any channels dedicated to TensorFlow anyone here knows?
[16:36:59] *** Quits: doko (~doko@89.27.154.45) (Ping timeout: 256 seconds)
[16:37:11] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[16:37:14] *** Joins: ovelny (~ovelny@user/ovelny)
[16:37:37] *** Joins: dubs``` (~user@072-182-039-016.res.spectrum.com)
[16:37:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:38:19] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[16:38:27] *** Quits: dubs`` (~user@072-182-039-016.res.spectrum.com) (Ping timeout: 256 seconds)
[16:39:53] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:40:55] *** Joins: Shanx (~Shanx@ccguco.in2p3.fr)
[16:41:00] <Shanx> Hello
[16:41:13] <Shanx> I have those data:
[16:41:14] <Shanx> input = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
[16:41:14] <Shanx> keys = ["a", "b", "c"]
[16:41:25] <Shanx> How can I get :
[16:41:25] <Shanx> output = [{"a": 1, "b": 4, "c": 7}, {"a": 2, "b": 5, "c": 8}, {"a": 3, "b": 6, "c": 9}]
[16:41:40] <Shanx> I'm fighting with zip but I can't get what I want :(
[16:42:28] *** Joins: ovelny (~ovelny@user/ovelny)
[16:42:28] <dminuoso> Shanx: You can zip and then dict
[16:42:39] <supakeen> [dict(zip(keys, D)) for D in input]
[16:42:40] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[16:43:25] <Shanx> >>> [dict(zip(keys, D)) for D in input]
[16:43:25] <Shanx> [{'a': 1, 'b': 2, 'c': 3}, {'a': 4, 'b': 5, 'c': 6}, {'a': 7, 'b': 8, 'c': 9}]
[16:43:36] <supakeen> oh, i misread
[16:43:37] <Shanx> That's not what I need
[16:43:54] <Shanx> Tha's basically from where I started
[16:44:12] <Shanx> But then I got lost in the limbs of zip(), map() and comprehensions :/
[16:44:45] <supakeen> Like so: `[dict(zip(keys, D)) for D in zip(*data)]` then?
[16:44:49] *** Joins: mickey83 (~user@user/mickey)
[16:44:54] *** Quits: fanis30 (~anon@adsl-116.37.6.160.tellas.gr) (Quit: WeeChat 3.3)
[16:45:04] <supakeen> I renamed input to data.
[16:45:06] <jinsun> merijn: not specific to tensorflow, but you can try ##machinelearning-general
[16:45:08] <supakeen> Because I don't like shadowing names.
[16:45:23] <Shanx> Yeah that's it!
[16:45:31] <Shanx> Thanks very much
[16:45:32] *** Joins: masoudd (~masoudd@user/masoudd)
[16:45:32] <supakeen> :)
[16:46:03] <Shanx> Yeah I named it `input` for here but I forgot about input(), in the code it's not this name
[16:46:09] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[16:46:34] <merijn> jinsun: tbh, my problems are more of a practical/python nature than machine learning problems, like "where the hell is my memory going?!" I've profiled the Python code, but the python heap is only 1 GB of data, so that's not it.
[16:46:40] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[16:47:01] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 245 seconds)
[16:47:01] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[16:47:14] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:47:45] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[16:48:02] <kosh> merijn, how much memory is it using? main memory or GPU memory?
[16:48:43] <jinsun> merijn: ah then this channel is probably better than ##machinelearning-general (dunno about tensorflow specific one)
[16:48:50] <merijn> kosh: 251 GB virtual allocation (but that just seems to be a virtual reservation tensorflow always does) and a total resident memory of >12GB
[16:49:13] <kosh> merijn, training on cpu or gpu?
[16:49:18] <merijn> But for the size of data/network I would expect, like, an order of magnitude less.
[16:49:20] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[16:49:21] <merijn> That's CPU
[16:49:35] <merijn> The GPU usage seems fairly well behaved for now
[16:49:43] *** Joins: nunggu (~q@user/nunggu)
[16:50:16] *** Joins: dme86 (~dan@user/dan86)
[16:50:46] <merijn> I've found some profiler info for it, but 98% of it seems to assume you're running stuff from jupyter/notebooks, not a standalone program
[16:51:18] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[16:51:18] *** mickey83 is now known as mickey8
[16:52:20] *** Joins: cdown (~cdown@188.214.11.14)
[16:52:20] *** Joins: timkofu (~timkofu@user/timkofu)
[16:52:21] <kosh> merijn, the tensorflow training I have going right now is using about 3GB of ram, that seems about right for me, my dataset is about 400MB and I have the scaled versions also in memory
[16:52:27] <timkofu> Howdy
[16:53:29] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[16:53:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[16:54:11] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[16:54:25] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:54:39] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[16:54:46] *** Quits: Achylles (~Achylles_@2804:431:d724:1728:f3b4:d659:13ba:d509) (Quit: Leaving)
[16:55:04] <kosh> merijn, for a stand alone program you can use the tensorboard callback during training and then use tensorboard to view the data but I am not sure if that will help you find the memory issue
[16:55:27] *** Joins: raym (~raym@user/raym)
[16:55:31] <kosh> merijn, that is how I do it, I don't run tensorflow inside a notebook, that has mostly just been a headache to do
[16:55:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[16:55:44] <merijn> kosh: Well, there's a profiling plugin for tensorboard. My main problem will be to figure out where the actual training happens to insert that tensorboard callback
[16:55:47] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:56:22] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[16:56:26] <kosh> merijn, in my case I used keras to build the model and the callback going in the model.train call
[16:57:09] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[16:57:24] *** Joins: fikran (~fikran@user/fikran)
[16:58:27] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[16:59:47] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:01:08] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[17:01:31] *** Joins: zeden (~zeden@user/zeden)
[17:02:01] *** Joins: ovelny (~ovelny@user/ovelny)
[17:02:48] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[17:03:04] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[17:04:58] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[17:05:08] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[17:05:12] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[17:05:28] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[17:06:12] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[17:06:27] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[17:07:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:08:23] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (tantalum.libera.chat (Nickname regained by services)))
[17:08:25] *** Joins: kmh (~kmh@2a00:6020:5004:6800:a9a0:db5f:e579:ecf2)
[17:08:27] <merijn> kosh: Yeah, my problem is that I don't even know where train is called, because it's 130k LOC I'm not familiar with. Oh well, RIP me
[17:08:32] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:08:48] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[17:09:13] <MacGyver> merijn: Can you alter the code for train itself?
[17:09:37] <merijn> MacGyver: Eh, if I can manage to locate it, sure :)
[17:09:39] <MacGyver> merijn: If so, you could make it print the call stack on each invocation, or just crash the first time.
[17:09:53] <MacGyver> (Which will also make it print the call stack but then you only get the first one.)
[17:10:17] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 240 seconds)
[17:10:28] *** Joins: lidless (~lidless@user/lidless)
[17:10:39] <MacGyver> Iirc it's format_stack() in the traceback module.
[17:11:20] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:12:02] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[17:12:02] *** Joins: kts (~kts@103.73.237.38)
[17:12:29] *** Joins: ovelny (~ovelny@user/ovelny)
[17:13:03] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[17:13:13] *** Joins: georgios (~georgios@user/georgios)
[17:13:37] <kosh> merijn, oh that is painful
[17:13:47] *** Joins: ovelny (~ovelny@user/ovelny)
[17:13:51] <kosh> merijn, yeah you need an actual memory profiler
[17:14:03] <kosh> merijn, which is not something that is great in python
[17:14:10] <xheimlich> is this possible with decorators?  or something that approximates it? https://dpaste.org/OZGJ
[17:14:12] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:14:14] <merijn> kosh: I have noticed :)
[17:14:29] <MacGyver> merijn: Finding the *definition* of train() shouldn't be too difficult, unless it's often redefined -- just grep the entirety of the file tree for "def train("
[17:14:46] <MacGyver> And work from there.
[17:14:50] <kosh> merijn, this is supposed to do it https://github.com/emeryberger/scalene  but I have not gotten it to work with my code
[17:15:04] <kosh> MacGyver, it would be .train( you would search for
[17:15:08] <merijn> Which kinda surprises me...given multiple decades of wide adoption I had kinda hoped *someone* would've just made a profiiler where I could just do "run this code and show me profile of the heap over time"
[17:15:34] *** Joins: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de)
[17:15:35] <MacGyver> kosh: That's if you're trying to figure out the call graph using static grepping -- my suggestion was doing it through introspection during execution.
[17:15:38] <kosh> merijn, someone did write a profiler that does that, memorprofiler exists but it is SLOW
[17:15:40] <deniska> merijn: during multiple decades we also got more RAM in our systems :)
[17:15:40] <merijn> kosh: Hah, well, after 30 minutes of trying that, it seems what I *should* look for is .compile(, not .train( :)
[17:15:52] <wib_jonas> xheimlich: I think it is, but you're missing some global statements in the definition of wrapped. it will try to assign to a local variable `users` otherwise.
[17:16:27] <wib_jonas> xheimlich: alternately add `users` as an extra parameter of the function that you're wrapping
[17:16:35] <kosh> merijn, that is odd, compile builds the model but that is not where the tensorboard callback goes
[17:17:06] <kosh> deniska, using a lot more ram than you need also makes programs slower
[17:17:26] <kosh> deniska, I worked on a program where we lowered memory usage from about 600MB to 60MB and we more than doubled the speed doing that
[17:18:44] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[17:18:58] <kosh> merijn, scalene is supposed to work and others use it, the problem is my code has a lot of multiprocessing and runs into problems
[17:19:45] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[17:19:51] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[17:19:59] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[17:20:19] <xheimlich> ok!
[17:20:26] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.4)
[17:20:35] <xheimlich> unrelatedly: can I just "raise ValueError" with no comment?
[17:21:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[17:21:53] <deniska> Sure, although can be kinda rude
[17:22:40] <xheimlich> mongo gives this result count attribute. I'm just saying if count==0: this; if count>0: that; else: what the fuck.
[17:23:02] <deniska> xheimlich: I doubt it will give a negative number
[17:23:06] <xheimlich> I know.
[17:23:27] <MacGyver> xheimlich: Why not just pass it "count can't be negative"?
[17:23:37] <deniska> I would just use `if count == 0: this; return;; here_what_we_do_if_count_is_not_zero`
[17:23:57] <wib_jonas> xheimlich: you can, but you need parenthesis to construct an exception, as in raise ValueError()
[17:24:00] <deniska> (or vice versa, depending on which branch is the main one)
[17:24:14] <MacGyver> As in, raise ValueError("Count can't be negative")
[17:24:18] <MacGyver> No comment needed then.
[17:24:21] *** Quits: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[17:24:25] <deniska> wib_jonas: `raise ValueError` works too
[17:24:29] <xheimlich> early returns yes. but here we're doing some ugly iterating.
[17:24:29] <wib_jonas> hmm indeed
[17:24:30] <wib_jonas> sorry
[17:24:31] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[17:24:56] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[17:25:29] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[17:25:50] <merijn> kosh: I mean, I don't find any train( calls, but do find 3 .compile( calls, so those sound like the best place to have a look what's going on :)
[17:25:56] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[17:26:15] *** Joins: ice9 (~ice9@user/ice9)
[17:26:16] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[17:26:50] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[17:27:15] <xheimlich> ugly iterating. https://dpaste.org/JVaR
[17:27:53] *** Quits: ThanatosJ (~Thanatos@105.112.24.71) (Read error: Connection reset by peer)
[17:27:59] <kosh> merijn, interesting
[17:28:02] <kosh> merijn, good luck
[17:28:31] *** Joins: cdown_ (~cdown@188.214.11.14)
[17:30:25] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[17:30:36] *** Quits: slackware15 (~hecman@207.155.98.24) (Quit: Leaving)
[17:31:47] <merijn> ah, there's also a bunch of callbacks and a perform_fit, so maybe that's more relevant
[17:32:09] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[17:32:53] *** Joins: pro_z_ (~pro_z@37.214.69.56)
[17:33:01] *** Quits: Jefren (~Jefren@208.104.190.50) (Quit: WeeChat 2.8)
[17:33:11] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[17:33:40] *** Quits: BSaboia (~bsaboia@95.179.154.99) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[17:33:52] *** Joins: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c)
[17:34:02] *** Joins: cuz` (~user@2607:fb90:e7b:bc92:1455:2c0:e8af:6e02)
[17:34:39] *** Quits: cuz (~user@50.226.229.246) (Read error: Connection reset by peer)
[17:34:50] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[17:34:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:35:57] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b)
[17:36:22] *** Quits: rev1nchn_ (~rev1nchn@user/rev1nchn) (Quit: WeeChat 3.4)
[17:36:37] *** Joins: eron (~eron@2804:431:c7c2:934:9877:36f8:e8ed:91e)
[17:36:40] *** Joins: Polyblank (~Polyblank@user/polyblank)
[17:37:07] *** Joins: cuz`` (~user@50.226.229.246)
[17:38:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:38:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:38:37] *** Quits: cuz` (~user@2607:fb90:e7b:bc92:1455:2c0:e8af:6e02) (Ping timeout: 240 seconds)
[17:38:37] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:39:35] *** Quits: anotheruser (~user@197.54.66.26) (Read error: Connection reset by peer)
[17:39:39] *** Quits: Shanx (~Shanx@ccguco.in2p3.fr) (Quit: Client closed)
[17:40:35] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[17:40:36] *** Joins: Thanatos (~Thanatos@105.112.188.80)
[17:41:46] <xheimlich> Ha I just got  a negative count
[17:41:55] *** Joins: cdown__ (~cdown@163.114.131.1)
[17:42:13] <deniska> joys of eventual consistency?
[17:42:21] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[17:43:23] *** Quits: _0az3 (~az0@user/az0) (Quit: Ping timeout (120 seconds))
[17:43:36] *** Joins: AutomatedTester (uid395371@selenium/developer/AutomatedTester)
[17:43:43] *** Joins: _0az3 (~az0@user/az0)
[17:43:50] *** Joins: henco9 (~henco@lon11.dustyservers.com)
[17:44:04] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[17:44:31] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[17:44:41] *** cdown__ is now known as cdown
[17:44:43] *** Joins: ThanatosJ (~Thanatos@105.112.188.80)
[17:44:44] *** Quits: doglike (~godlike@user/godlike) (Quit: No Ping reply in 180 seconds.)
[17:45:25] *** Quits: henco (~henco@lon11.dustyservers.com) (Ping timeout: 240 seconds)
[17:45:25] *** henco9 is now known as henco
[17:45:55] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d091:25a9:e1c5:1d46)
[17:45:55] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d091:25a9:e1c5:1d46) (Changing host)
[17:45:55] *** Joins: skapata (~Skapata@user/skapata)
[17:45:59] *** Quits: ThanatosJ (~Thanatos@105.112.188.80) (Read error: Connection reset by peer)
[17:46:01] *** Joins: godlike (~godlike@user/godlike)
[17:46:11] *** Joins: ThanatosJ (~Thanatos@105.112.188.80)
[17:46:21] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:46:26] *** Quits: Thanatos (~Thanatos@105.112.188.80) (Read error: Connection reset by peer)
[17:46:28] *** Quits: lidless (~lidless@user/lidless) (Remote host closed the connection)
[17:47:01] *** Quits: widp (~user@124.123.107.237) (Ping timeout: 256 seconds)
[17:47:39] <AutomatedTester> hey friends, bit of a long shot, but I'm trying to get hold of cgoldberg who used to hang out in python channel a few years ago on freenode. If anyone knows them now could you ask them to get in touch? TIA
[17:47:49] *** Parts: dubs``` (~user@072-182-039-016.res.spectrum.com) (ERC 5.4 (IRC client for GNU Emacs 28.0.91))
[17:48:12] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[17:49:06] *** Joins: blingrang (~blingrang@user/blingrang)
[17:49:17] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[17:50:05] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[17:50:35] *** Joins: dme86 (~dan@user/dan86)
[17:52:15] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:54:08] <DavidMilestone> Have I implemented this program correctly? https://bpa.st/IIVQ
[17:54:09] <DavidMilestone> Or is there anything I should work upon?
[17:54:35] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[17:54:55] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[17:56:11] *** Joins: someuser (~user@197.54.38.77)
[17:56:12] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:56:17] *** Joins: sydbarret (~anton@static-186-121-195-86.acelerate.net)
[17:57:00] *** Joins: np0x0zy (~np0x0zy@ipbcc2d6ef.dynamic.kabel-deutschland.de)
[17:57:11] *** Quits: ThanatosJ (~Thanatos@105.112.188.80) (Read error: Connection reset by peer)
[17:57:45] *** Joins: ubert (~Thunderbi@p200300ecdf0994592d10ea882e78994b.dip0.t-ipconnect.de)
[17:58:09] *** Joins: luva1 (~luva@185.168.9.233)
[17:58:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Quit: bye)
[17:58:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:01:16] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[18:01:16] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[18:01:16] *** Joins: JordiGH (~jordi@user/jordigh)
[18:01:42] *** Quits: luva (~luva@146.70.62.238) (Ping timeout: 260 seconds)
[18:01:42] *** luva1 is now known as luva
[18:01:54] *** Joins: ThanatosJ (~Thanatos@102.91.4.145)
[18:02:13] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[18:02:38] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[18:02:47] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[18:02:53] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[18:02:56] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:03:25] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:03:29] *** Quits: ThanatosJ (~Thanatos@102.91.4.145) (Read error: Connection reset by peer)
[18:04:58] *** Quits: seoul_man (~meh@097-087-062-229.res.spectrum.com) (Changing host)
[18:04:58] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[18:05:00] *** Joins: Thanatos (~Thanatos@102.91.4.145)
[18:05:32] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[18:05:51] *** Quits: DavidMilestone (~DavidMile@122.179.195.13) (Quit: Client closed)
[18:08:26] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:12:41] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[18:13:19] *** Joins: luva1 (~luva@37.120.197.52)
[18:13:32] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:14:06] *** Quits: ubert (~Thunderbi@p200300ecdf0994592d10ea882e78994b.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:14:24] *** Joins: ubert (~Thunderbi@p200300ecdf0994592d10ea882e78994b.dip0.t-ipconnect.de)
[18:15:09] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[18:15:27] *** Joins: califax (~califax@user/califx)
[18:15:48] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:16:00] *** Joins: Syzygy_ (~Syzygy@2001:871:265:1cdc:a9fb:7502:11b1:eda6)
[18:16:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:16:13] *** Quits: luva (~luva@185.168.9.233) (Ping timeout: 240 seconds)
[18:16:49] *** Joins: esther (~esther@2607:fb90:5fed:4013:34f4:2a06:df6e:5be4)
[18:16:55] <Syzygy_> I'm using matplotlib histograms and my y axis shows 1.0 instead of the count of my histogram...
[18:17:08] <grym> Syzygy_: i believe it normalises by default
[18:17:37] *** Joins: DavidMilestone (~DavidMile@122.179.195.13)
[18:17:45] <grym> or, no, that's if you pass weights=True
[18:17:47] *** Joins: cruncher (~cruncher@90.68.118.49)
[18:18:45] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[18:18:56] <Syzygy_> Ah, I guess I had some random flag (density) from the guide I looked up.
[18:19:07] <Syzygy_> thanks
[18:20:57] *** Quits: esther (~esther@2607:fb90:5fed:4013:34f4:2a06:df6e:5be4) (Ping timeout: 240 seconds)
[18:20:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[18:21:33] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:22:35] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[18:23:02] *** gentooclimax is now known as climax
[18:24:30] <p-i-> https://regex101.com/r/sCZSzF/1 Can anyone help me get my head around this regex? It's not mine. I'm trying to pull out all numbers on a line after TOKEN.
[18:24:36] *** Joins: OPK (~OPK@user/opk)
[18:24:49] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[18:25:08] <p-i-> e.g. 'quux TOKEN: 1 - 3 - 5.5 - 7' -> ['1', '3', '5.5', '7']
[18:25:35] <p-i-> `(?m)(?:\G(?!^)|^.*?TOKEN:).*?\K\d+(?:\.\d+)?` ... this is the regex
[18:25:52] <p-i-> Can I build it it up from the ground more simply?
[18:25:56] <grym> DavidMilestone: what you've written as `describe` is idiomatically probably __str__ , and increment_ and reset_ probably aren't needed
[18:26:05] <yolo> based on PEP544 | PEP 484, so python is both nominal and structural typing? confused. java/c++ is 100% nominal, javascript/typescript is 100% structural typing(duck-typing), what's about python
[18:26:15] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6cfb-90af-4036-f9c3.res6.spectrum.com)
[18:26:41] *** climax is now known as gentooclimax
[18:26:46] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[18:28:06] <jinsun> yeah you have both choices
[18:28:13] <merijn> yolo: tbh, I wouldn't consider JS to have structural typing in any classic sense
[18:28:31] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:5d64:f740:70fe:4456)
[18:28:40] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:5d64:f740:70fe:4456) (Client Quit)
[18:29:04] *** Joins: waynew (~wayne@user/waynew)
[18:29:31] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:29:32] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[18:29:38] <Syzygy_> Next matplotlib. My X axis for my histogram containing integers only displays 2.5 steps. I tried plt.xticks(range(20)), but that doesn't align with my data. plus it only works with one of my subplots.
[18:30:03] *** Joins: dme86 (~dan@user/dan86)
[18:30:11] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[18:30:15] *** Joins: pycurious (~Adium@user/pycurious)
[18:30:46] *** Quits: savolla (~quassel@84.44.28.28) (Ping timeout: 245 seconds)
[18:30:49] *** Joins: someone235 (uid419897@id-419897.ilkley.irccloud.com)
[18:30:51] * yolo needs to compare duck-typing(runtime)/structural-typing(compile-time) among python/js/golang
[18:31:07] <DavidMilestone> grym: Is __str__ a built-in method? I'm sorry I've not yet learned about it.
[18:31:09] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[18:31:14] *** Joins: zamanf (~dev@213.133.91.246)
[18:31:14] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[18:31:14] *** Joins: zamanf (~dev@user/zamanf)
[18:31:46] <jinsun> DavidMilestone: str is a built-in method, which calls the __str__ method of the object you pass to it
[18:31:53] <merijn> yolo: I mean, there isn't really much difference between python/JS (python has enforced tag-checking on some stuff, but that's kinda minor). And golang kinda encourages the same kinda programming with it's interface design
[18:31:57] *** Joins: Vonter (~Vonter@user/vonter)
[18:32:00] <jinsun> DavidMilestone: and print calls str
[18:32:11] <DavidMilestone> thank you, jinsun
[18:32:25] <SnoopJ> DavidMilestone, it's a plain old method, but it's got a special name that the interpreter knows about and will call when something wants to convert that object to a string.
[18:33:05] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[18:33:07] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[18:34:00] <DavidMilestone> Okay, I'll note it down
[18:34:02] <jinsun> DavidMilestone: so instead of print(obj.describe()) you will just do print(obj) which auto-tranlates to print(obj._str__())
[18:34:45] <DavidMilestone> That's much better
[18:35:11] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[18:35:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:35:34] <DavidMilestone> In which class do we have these methods?
[18:35:38] <SnoopJ> The official docs have a list of the most common special methods, but sometimes you'll see things that aren't on that list: https://docs.python.org/3/reference/datamodel.html#specialnames
[18:35:39] *** Joins: luigibu (~luigi@93.176.155.54)
[18:35:53] <DavidMilestone> wow, thank you so much!
[18:35:56] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:ae6:a06f:8a32:c379)
[18:36:29] <SnoopJ> The rule of thumb is that when you see a double-underscore (or "dunder") method, that's one of these methods the interpreter (or perhaps a library) knows about and will call for you.
[18:36:33] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 256 seconds)
[18:36:40] *** Joins: cdown_ (~cdown@188.214.11.14)
[18:37:33] <DavidMilestone> Okay
[18:37:34] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[18:37:35] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[18:37:44] *** Joins: Adoi (~Adoi@user/adoi)
[18:38:12] *** Quits: j0ma (~jonne@146.115.163.209) (Quit: WeeChat 3.4)
[18:39:09] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:39:29] *** Quits: Dotz0cat (~Dotz0cat@173.188.34.42) (Ping timeout: 256 seconds)
[18:40:08] *** Joins: Dotz0cat (~Dotz0cat@173.187.195.128)
[18:40:13] *** Joins: alicefreak17 (~alicefrea@103.41.24.232)
[18:40:21] <Adoi> hello, I am trying to extract lines in a file that start with "<dt><a", and have been trying to get the regex right (I suppose the rest of the code is correct)..https://bpa.st/7CAA
[18:40:54] <Adoi> it hasnt given any output yet..what am I doing wrong here?
[18:43:34] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[18:44:23] <jinsun> don't use regex to find tags
[18:44:59] <jinsun> since you are already using beautifulsoup, it might help to go over its docs https://www.crummy.com/software/BeautifulSoup/bs4/doc/
[18:45:33] *** Quits: DavidMilestone (~DavidMile@122.179.195.13) (Quit: Client closed)
[18:46:36] *** Quits: kuter (~kuter@public-gprs526290.centertel.pl) (Quit: Lost terminal)
[18:46:55] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[18:47:38] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[18:48:02] *** Joins: dme86 (~dan@user/dan86)
[18:48:22] *** Joins: nomic (~nomic@185.192.69.148)
[18:51:02] <Adoi> jinsun, I did my best not to :)
[18:52:38] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 252 seconds)
[18:53:19] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[18:53:46] *** Joins: pepper (~pepper@user/pepper)
[18:54:29] <Adoi> the above regex picks the lines with their parent tags, too, even though the rule shows that it should start with the above tags
[18:54:53] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:56:35] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[18:59:13] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Ping timeout: 256 seconds)
[18:59:45] *** Quits: thevishy (~Nishant@2405:201:f005:c007:f886:9bab:89ec:ff42) (Quit: Leaving)
[18:59:57] *** Joins: RawFiend (~RawFiend@46.196.88.41)
[19:00:32] *** Joins: cuz``` (~user@2607:fb90:e7e:cbcd:4035:8992:d7c:96cf)
[19:00:40] *** Quits: Jong (~Jong@2620:10d:c090:400::5:6b6c) (Quit: Textual IRC Client: www.textualapp.com)
[19:00:56] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[19:01:46] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:02:44] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:03:54] *** Quits: cuz`` (~user@50.226.229.246) (Read error: Connection reset by peer)
[19:04:00] *** Joins: cuz```` (~user@50.226.229.246)
[19:04:35] *** Joins: doko (~doko@77.241.229.232)
[19:04:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:05:57] *** Quits: cuz``` (~user@2607:fb90:e7e:cbcd:4035:8992:d7c:96cf) (Ping timeout: 240 seconds)
[19:06:45] *** Joins: fikran (~fikran@user/fikran)
[19:06:52] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[19:07:05] *** Quits: someuser (~user@197.54.38.77) (Read error: Connection reset by peer)
[19:07:27] *** Joins: dme86 (~dan@user/dan86)
[19:08:18] *** Joins: netpipe (~netpipe@user/netpipe)
[19:08:41] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Remote host closed the connection)
[19:09:53] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b) (Remote host closed the connection)
[19:10:08] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:345c:19fc:7530:25c8:1eee)
[19:12:41] *** Joins: moog (~moog@107.77.244.68)
[19:13:39] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[19:14:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[19:15:10] *** Joins: dme86 (~dan@user/dan86)
[19:16:06] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[19:17:00] *** Joins: luva19 (~luva@185.168.9.236)
[19:17:09] *** Joins: fef (~thedawn@user/thedawn)
[19:17:13] *** Joins: imp (~imp@177-131-189-195.static.sumicity.net.br)
[19:17:39] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 250 seconds)
[19:18:22] *** Joins: luva196 (~luva@37.120.197.54)
[19:18:29] *** Joins: savolla (~quassel@88.227.92.215)
[19:19:15] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:1a04:c808:a051:d2eb) (Quit: pvergain)
[19:19:37] *** Quits: cuz```` (~user@50.226.229.246) (Ping timeout: 256 seconds)
[19:19:43] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[19:20:02] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[19:20:31] *** Quits: luva1 (~luva@37.120.197.52) (Ping timeout: 256 seconds)
[19:21:37] *** Quits: luva19 (~luva@185.168.9.236) (Ping timeout: 240 seconds)
[19:21:37] *** luva196 is now known as luva19
[19:21:51] *** Parts: moha (uid506645@id-506645.helmsley.irccloud.com) ()
[19:22:27] <sydbarret> is there a channel for xpath or similar?
[19:23:21] <gjvc> #xml ?
[19:24:00] *** Joins: aw1231 (~alan@155.58.3.30)
[19:24:33] *** Joins: jmd (~user@195.243.197.82)
[19:25:01] *** Joins: someuser (~user@197.54.40.212)
[19:25:13] *** Quits: ubert (~Thunderbi@p200300ecdf0994592d10ea882e78994b.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:27:07] *** Joins: masoudd (~masoudd@user/masoudd)
[19:27:49] *** Joins: bluedust (~bluedust@103.161.144.34)
[19:28:10] *** Joins: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl)
[19:28:31] <Macuser> so I have two .txt files. One file is just TRUE or FALSE on each line. and the other file is satellite positions and velocities where the lines are repeating x_pos, y_pos, z_pos, x_vel, y_vel, z_vel (each on it's own line). The TRUE/FALSE lines match up basically every 6 lines for the pos/vel's
[19:28:33] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[19:28:43] <Macuser> do I need to use .zip to form some kind of dictionary for these?
[19:28:49] <Macuser> errr. zip()*
[19:28:51] <rakoon> How can type hint in pydantic a list that can expect A type or B, but at least one A in it? :/
[19:29:01] *** Quits: luigibu (~luigi@93.176.155.54) (Ping timeout: 240 seconds)
[19:29:31] <SnoopJ> rakoon, I don't think you can annotate that because it's not type information.
[19:29:44] <rakoon> SnoopJ: oh ok thanks :(
[19:29:44] <grym> rakoon: afaik conlist only has one item_type kwarg
[19:30:30] <SnoopJ> oh, pydantic. I'd think that's tricky enough to justify a custom validator
[19:30:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[19:30:52] <grym> that's how i'd do it too
[19:31:13] <rakoon> yeah i was trying to avoid custom code but i guess i need to code it
[19:31:16] <grym> hmm, does conlist take a union type
[19:31:20] <grym> it might...
[19:31:32] *** Quits: alicefreak17 (~alicefrea@103.41.24.232) (Quit: Client closed)
[19:31:36] *** Joins: joaofukuda_ (~joaofukuk@191.255.113.250)
[19:31:38] <rakoon> tried: conlist(Union[A, B], min_items=1), but i cant force at least one A
[19:31:40] <grym> and then your validator can just `if isinstance ... break `
[19:31:44] <grym> or if any(), rather
[19:32:21] <grym> rakoon: ok, yeah; do as SnoopJ suggested and make a validator with any(isinstance(x, A) for x in values) in it, i think
[19:32:43] <rakoon> yeah thanks guys
[19:32:49] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:32:57] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[19:33:05] <grym> cheers
[19:33:22] <Macuser> basically what I'm asking I guess si
[19:33:23] <Macuser> is*
[19:33:44] <Macuser> how can I zip two lists and specify 6 things from one list paired with 1 item from the other list
[19:33:45] *** Joins: dme86 (~dan@user/dan86)
[19:34:25] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:34:29] <Macuser> wb [itchyjunk]
[19:34:39] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:345c:19fc:7530:25c8:1eee) (Read error: Connection reset by peer)
[19:35:20] <Wooble> Macuser: zip a grouper (from more_itertools or the recipe in the itertools docs) with the second list?
[19:35:30] <Macuser> interesting, i'll read into that
[19:35:55] <vlt> Hello. Is there a more readable way than 0, 1, or 2 to specify f.seek()’s "whence" argument? Something tha tells me that "1" actually seeks from the current position?
[19:35:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:37:10] <Wooble> vlt: the io module has constants for those now.
[19:37:53] *** Joins: cuz```` (~user@38.140.58.234)
[19:38:15] *** Joins: maxxe_ (~maxxe@c-de90205c.020-27-73766c1.bbcust.telenor.se)
[19:38:34] <vlt> Wooble: Thanks, I’ll have a look.
[19:39:21] *** Quits: ice9 (~ice9@user/ice9) (Quit: Leaving)
[19:39:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:39:35] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:40:12] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[19:40:37] *** Joins: ice9 (~ice9@user/ice9)
[19:42:18] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[19:44:08] *** Quits: maxxe_ (~maxxe@c-de90205c.020-27-73766c1.bbcust.telenor.se) (Quit: Swirc IRC client)
[19:45:00] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[19:45:10] *** Joins: pycurious (~Adium@user/pycurious)
[19:46:56] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[19:47:17] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[19:47:42] *** Joins: teut (~teut@2401:4900:1c68:dbe1:a589:5c05:d8df:7643)
[19:48:20] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[19:48:33] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:51:07] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[19:51:39] *** Joins: Telvana (~capo@user/telvana)
[19:52:15] *** Joins: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[19:52:56] *** Joins: knstn (~knstn@ppp-94-66-57-191.home.otenet.gr)
[19:53:45] *** Joins: bluedust_ (~bluedust@59.99.182.45)
[19:53:48] *** Quits: aw1231 (~alan@155.58.3.30) (Quit: Leaving)
[19:54:05] *** Joins: Barones (~Barones@user/Barones)
[19:54:13] *** Joins: aw1231 (~alan@155.58.3.30)
[19:54:35] *** Quits: nomic (~nomic@185.192.69.148) (Quit: Leaving)
[19:54:53] *** Quits: aw1231 (~alan@155.58.3.30) (Client Quit)
[19:55:17] *** Joins: aw1231 (~alan@155.58.3.30)
[19:55:48] *** Quits: aw1231 (~alan@155.58.3.30) (Client Quit)
[19:56:34] *** Quits: jmd (~user@195.243.197.82) (Remote host closed the connection)
[19:57:21] *** Quits: bluedust (~bluedust@103.161.144.34) (Ping timeout: 256 seconds)
[19:57:30] *** Joins: jmd (~user@195.243.197.82)
[19:57:48] <[itchyjunk]> ty Macuser
[19:58:09] *** Quits: someuser (~user@197.54.40.212) (Ping timeout: 256 seconds)
[19:58:24] *** Joins: icy_hot (~icy_hot@172.58.72.57)
[19:58:38] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:58:46] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:58:54] *** Joins: DavidMilestone (~DavidMile@122.179.195.13)
[19:59:13] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:59:17] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[19:59:40] *** Quits: jmd (~user@195.243.197.82) (Remote host closed the connection)
[19:59:41] *** Quits: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:00:30] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:01:06] *** Joins: aw1231 (~alan@155.58.3.30)
[20:01:22] *** Quits: cruncher (~cruncher@90.68.118.49) (Quit: Leaving)
[20:01:46] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:e358:d188:e0f2:7618)
[20:02:52] *** Joins: SanchoPanza (~rose@2a03:ef42:6:e347:4542:2e35:ddeb:ae4f)
[20:02:57] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[20:03:24] *** Quits: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (Quit: Client closed)
[20:03:32] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[20:03:41] <SanchoPanza> Hi - I have a telegram channel that I put there crypto news , how can I automate this task with python
[20:03:45] <SanchoPanza> is there any source
[20:04:17] <SanchoPanza> I should write a scrapper ?
[20:05:40] *** Joins: rapha (~jrs@user/rapha)
[20:05:46] <rapha> hi dear pythonistas!
[20:05:48] *** Joins: nicode (~nic@2607:f2c0:9545:fa00:47ff:84f1:8a69:2f9)
[20:05:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[20:06:08] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[20:06:16] *** Joins: esther (~esther@2607:fb90:5fed:694c:91cf:6ee2:e586:a99d)
[20:06:52] <SanchoPanza> I have a telegram channel that I put there crypto news , how can I automate this task with python
[20:06:54] *** Joins: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[20:07:00] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:07:33] *** Quits: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br) (Ping timeout: 256 seconds)
[20:07:42] <jinsun> SanchoPanza: there are pacakges to help write telegram bots like https://pypi.org/project/pyTelegramBotAPI/
[20:08:05] *** Joins: vsantana (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com)
[20:08:08] <SanchoPanza> jinsun:Thanks dude
[20:08:40] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[20:09:06] <jiffe> I don't suppose its possible to have both a sync and async version of the same function with the same name is there?
[20:09:30] <DavidMilestone> hello rapha
[20:09:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:10:09] <SnoopJ> jiffe, not in the same module
[20:10:45] *** Parts: SanchoPanza (~rose@2a03:ef42:6:e347:4542:2e35:ddeb:ae4f) (WeeChat 2.8)
[20:11:17] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[20:12:09] *** Quits: catbeard (~noise@user/catbeard) (Remote host closed the connection)
[20:12:10] <xheimlich> SanchoPanza: you have to apply with telegram to have bots running in channels.
[20:12:16] <rapha> is it possible, programmatically, to tell if i have a string that includes unencoded Unicode in the form of '...\u064e\u0631\u0629 :  https://...') so that it may be .encoded() without running into exceptions?
[20:12:21] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Quit: Leaving)
[20:12:26] *** Joins: catbeard (~noise@user/catbeard)
[20:12:34] <xheimlich> But you can run bots that naswer to direct messages. There's an API and detailed instructions online.
[20:12:42] *** Joins: wac (~wac@user/wac)
[20:12:52] <xheimlich> rapha: regex?
[20:13:09] *** Quits: ouemt (~quassel@user/ouemt) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[20:13:26] *** Joins: ouemt (~quassel@user/ouemt)
[20:13:27] <dreamer> so, I'm trying to add a custom type to our pydantic settings, however when evaluating the setting it returns the enumerator object, not the string value. what could I do differently to just get nice strings returned? minimal example -> https://bpa.st/RN4A
[20:14:10] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[20:14:35] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Ping timeout: 256 seconds)
[20:14:37] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[20:14:54] <dreamer> (pretty new to pydantic and such custom classes. getting the whole enum object including the class name is a tad annoying. we have some very long names here and there. means our logs are harder to parse. doesn't fit in sentry meta columns etc.)
[20:16:02] <rapha> xheimlich: hmm, okay. i thought maybe there was something built-in for this.
[20:16:05] <rapha> oh, wait!
[20:16:19] <dsc_> dreamer: https://paste.centos.org/view/raw/582881a3
[20:16:31] <rapha> the strings ARE encoded ... but when i write the dict containing them as JSON, it gets saved DEcoded. graah.
[20:16:39] *** ouemt is now known as cl
[20:18:33] <dreamer> dsc_: aha!
[20:18:34] <dreamer> so close ..
[20:19:26] <dreamer> dsc_: should I still use the `.value` on the default. yes right?
[20:19:46] *** Joins: ericlee_ (~ericlee@23-120-34-97.lightspeed.sntcca.sbcglobal.net)
[20:19:53] <Syzygy_> I'm doing this to add numbers on top of my histogram bars, but I have subplots and it only works for my bottom plot. https://stackoverflow.com/a/58995971
[20:20:07] <Syzygy_> my first plot is drawn on top of my first.
[20:21:50] *** Joins: crashrep (~crashrep@user/crashrep)
[20:22:28] *** Quits: kmh (~kmh@2a00:6020:5004:6800:a9a0:db5f:e579:ecf2) (Quit: Leaving)
[20:22:29] <mekhami> I need to design an API client for a third party service, and I'm just wondering if there are any good models out there for API clients, well designed clients i could look to get inspiration from
[20:22:41] <dsc_> dreamer: i forgot everything i knew about pydantic but i dont think .value is neccesary there
[20:23:15] <dsc_> :p
[20:23:38] *** Joins: Jong (~Jong@2620:10d:c090:400::5:905d)
[20:23:40] <dreamer> hehe. thnx
[20:23:55] *** Joins: ice99 (~ice9@user/ice9)
[20:24:01] *** Joins: lidless (~lidless@user/lidless)
[20:24:08] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:25:43] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:26:21] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[20:26:29] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[20:28:04] *** Quits: DavidMilestone (~DavidMile@122.179.195.13) (Quit: Client closed)
[20:28:35] *** Joins: bluedust (~bluedust@117.204.132.5)
[20:28:57] *** Quits: bluedust_ (~bluedust@59.99.182.45) (Ping timeout: 240 seconds)
[20:29:01] *** xavie is now known as xcombelle
[20:32:38] <The-Compiler> hmmm, why does "ValueError | TypeError" work in Python 3.10 (something about that being interpreted as union of types?), and why does "except ValueError | TypeError:" pass silently as long as there is no exception?
[20:32:45] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:bdd8:27ef:418f:c751)
[20:34:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:bc81:ba25:7a70:67f2)
[20:34:40] <SnoopJ> The-Compiler, it works because it produces a UnionType of those two types, yea. And I guess it only complains that the thing you're catching isn't an exception if you actually enter the handler :/
[20:34:49] <pragmaticenigma> mekhami: dozens of Python based API clients on GitHub... pick a few to look at... my last project I used OpenWeatherMap (PyOWM) and an older implementation of The TVDB
[20:35:02] <pragmaticenigma> to base some of my design decisions on
[20:35:05] <Yhg1s> The-Compiler: let's call it an unintended consequence of | for union types.
[20:35:47] <The-Compiler> that seems unfortunate, as | seems a somewhat natural way of combining exceptions for "except" if you aren't aware that it does not work that way (one of my students handed in this code)
[20:36:05] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Ping timeout: 250 seconds)
[20:36:18] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:36:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:36:45] <waynew> Only if you want a binary or of the things
[20:36:55] <SnoopJ> I think the second part of your question is because the expr isn't evaluated at all until an exception occurs?
[20:37:04] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:37:13] <The-Compiler> waynew: | can mean much more than a binary or (see unions, sets, etc. etc.)
[20:37:31] <waynew> but only *sort of*
[20:37:42] <SnoopJ> technically speaking it can mean any binary operation
[20:37:55] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:38:01] <waynew> technically speaking it can mean anything, because operator overloading (:
[20:38:20] <SnoopJ> it can only be redefined to a binary op AFAIK because it's a binary op
[20:38:23] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 256 seconds)
[20:38:24] <The-Compiler> yup
[20:38:25] <Yhg1s> waynew: 'binary' means' takes 'two operands'
[20:38:32] <Yhg1s> eh, 'takes two operands'
[20:38:41] *** Joins: SlicerDicer688 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[20:38:42] <waynew> *that* binary :P
[20:38:50] <waynew> so, yes
[20:39:08] <SnoopJ> The-Compiler, I'm guessing the deferred evaluation of what-are-you-catching is so you can define handling dynamically, but I've never used that
[20:39:22] <xheimlich> that's messed up, though. a binary operation that neither acts on binaries nor returns a binary.
[20:39:23] <pragmaticenigma> If it was me, I'd avoid the syntax with anything but intended bitwise operations. Seems like a good way to confuse yourself or another maintainer of the code later down the road
[20:39:28] <SnoopJ> i.e. `try: ...; except compute_exception() as exc: ...`
[20:39:48] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[20:39:53] *** Joins: darksun (~darksun@user/darksun)
[20:40:04] <The-Compiler> xheimlich: I mean, so does, say, +
[20:40:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:40:23] <SnoopJ> pragmaticenigma, "intended bitwise operations" is a false characterization, though. With union types it's not even descriptive of the behavior for builtin types.
[20:40:29] <Yhg1s> SnoopJ: sure. Also, that's just how expressions work. And it's going to be hard to change, because it's potentially useful for something like 'except NewException: ...; except DeprecatedPossblyRemovedException: ...'
[20:40:36] * SnoopJ nods
[20:40:41] <The-Compiler> pragmaticenigma: using them for sets, dicts or type annotations is quite common
[20:40:52] <waynew> Oh that's wild. Yeah, looks like the exception expression isn't evaluated until exception time
[20:40:59] *** Quits: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (Ping timeout: 256 seconds)
[20:41:06] <Yhg1s> pragmaticenigma: it's very common for the 'intended numerical operations' to do something else entirely, like % on strings.
[20:41:07] <waynew> that... makes me wanna see what `except call_some_func():` does
[20:41:12] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[20:41:20] <SnoopJ> it'll call the function to get the exception type
[20:41:25] <Yhg1s> waynew: it calls the function when it has to evaluate whether it matches a raised exception.
[20:41:35] <pragmaticenigma> These are things I have no encountered myself... so my thoughts would gravitate towards what I most quickly find in the documentation
[20:41:40] <xheimlich> The-Compiler: yeah. I'm saying another word for arity-two should exist. Di-ary.
[20:41:55] <waynew> wild. Sure enough it doesn't call the function
[20:42:17] <The-Compiler> I wonder if this would warrant a SyntaxWarning or something, and how hard that would be to implement
[20:42:20] <Yhg1s> waynew: it does, just not if no exception needs to be compared to it.
[20:42:24] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:42:37] <Yhg1s> The-Compiler: it'd be very easy in type checkers :)
[20:42:49] <xheimlich> I've heard of "variadic" in the context of variable arity. That sort of conflicts with p-adic fields in maths, but "dyadic" exists in sociology.
[20:43:08] <rapha> g'night y'all, thx for nudging me the right direction
[20:43:10] *** Parts: rapha (~jrs@user/rapha) (WeeChat 2.3)
[20:43:27] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[20:43:47] <waynew> Yhg1s: indeed - a quick test verifies that unless the except needs to be called it won't be - if an earlier exception applies for instance
[20:44:06] *** Quits: casastorta (~casastort@neo3.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:44:10] <The-Compiler> Yhg1s: hm, that might be a good place for it actually
[20:44:21] <Yhg1s> waynew: yes, that's exactly what we've been saying.
[20:44:22] <SnoopJ> Yea this seems like a good fit for linting
[20:44:23] *** Quits: SlicerDicer688 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (Ping timeout: 256 seconds)
[20:44:38] <The-Compiler> oh, heh, mypy does catch this actually
[20:44:42] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[20:44:46] <waynew> I didn't realize that works generally in Python
[20:44:48] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:45:02] <waynew> if True: pass elif (TypeError | KeyError): pass
[20:45:06] <waynew> that won't throw an error
[20:45:11] *** Joins: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[20:45:12] *** Quits: rsx (~dummy@ppp-188-174-144-83.dynamic.mnet-online.de) (Quit: rsx)
[20:45:13] <waynew> flip True to False and it will
[20:45:23] <SnoopJ> Sure, it's "just" an expression
[20:45:49] <SnoopJ> It won't throw an error in 3.10, either
[20:46:05] <Yhg1s> waynew: otherwise it would be quite hard to write something like 'if match is None: ...; elif match.group(0) == ...'
[20:46:05] <xheimlich> I'm trying to remember what was the clever use of Tralse = random.choice[True,False] I saw recently.
[20:46:06] <SnoopJ> (the union type is truthy)
[20:46:19] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:46:21] <waynew> I knew, for instance, `foo if foo else bar()` wouldn't evaluate bar
[20:46:39] <waynew> Heh... I've actually never written code like that (:
[20:46:59] <waynew> it's usually `if not match: ...; else: ...`
[20:47:09] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[20:48:30] <SnoopJ> it's pretty common with `re` since that library likes to barf None in your face
[20:48:57] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[20:49:13] *** Joins: dme86 (~dan@user/dan86)
[20:49:14] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:49:31] <waynew> (hence `if not match:`)
[20:49:32] *** Joins: cdown_ (~cdown@188.214.11.14)
[20:50:08] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[20:50:10] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[20:50:18] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:51:32] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[20:52:00] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:6f6a:1255:7550:e64c) (Quit: Leaving)
[20:52:05] <pragmaticenigma> me thinks re does that just to discourage its usage :)
[20:53:03] <sydbarret> how can I grab first a href tag from this class in xpath?  //*[@class="g"]/
[20:53:15] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:53:27] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 256 seconds)
[20:53:37] *** Joins: jay-m1262 (~jay-m@154.72.162.81)
[20:53:49] *** Joins: smoke (~smoke@user/smoke)
[20:54:01] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[20:54:09] *** Joins: nomic (~nomic@185.217.117.232)
[20:54:26] *** Quits: imp (~imp@177-131-189-195.static.sumicity.net.br) (Quit: imp)
[20:55:23] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:55:53] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:55:55] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[20:55:58] <SnoopJ> waynew, that doesn't distinguish between None and an empty Match
[20:55:59] <lidless> sydbarret: //*[@class="g"]/@href
[20:56:07] <SnoopJ> IIRC empty Match objects are also falsey
[20:56:10] *** Quits: cosimone (~user@93-47-231-87.ip115.fastwebnet.it) (Remote host closed the connection)
[20:56:11] <lidless> sydbarret: FYI http://xpather.com/
[20:56:17] <TML> sydbarret: You generally don't want to use = with class - the correct invocation for a class name is //*[contains(concat(' ',normalize-space(@class),' '),' g ')]
[20:56:17] <Yhg1s> SnoopJ: they are not.
[20:56:25] <SnoopJ> well, nevermind me then :)
[20:56:27] *** Joins: mat001 (~mat001@72.28.108.216)
[20:57:57] *** Joins: bnchs (~bnchs@160.177.45.26)
[20:58:08] <TML> sydbarret: but then, as lidless said, it's just /@href
[20:58:13] <bnchs> how do you print a integer as a unsigned hex
[20:59:14] <lidless> yeah I'm not an xpath guy. listen to TML
[20:59:18] <TML> bnchs: Are you looking for the twos complement?
[20:59:28] <bnchs> no
[20:59:34] <bnchs> i really need this
[20:59:44] <bjs> bnchs: I think you'll have to be more specific by what you mean by "unsigned" there,  but roughly print(hex(i)) or print(f"{i:x}")
[20:59:58] *** Joins: yaalon (~yaalon@2806:102e:18:9263:88bf:487a:cf12:c978)
[20:59:58] <bnchs> hexademical without the minus
[21:00:01] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[21:00:09] <bnchs> print it without adding minus
[21:00:12] <bjs> bnchs: an example?
[21:00:40] <bjs> bnchs: you mean like printing hex(abs(i)) instead of just hex(i) ?
[21:00:42] <TML> bnchs: so if the value is -6, what are you expecting back in hex?
[21:00:54] <bnchs> in C it's usually a unsigned type
[21:00:57] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[21:01:08] <bnchs> like not a signed value
[21:01:09] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[21:01:28] <bnchs> lemme get an example
[21:01:31] <bjs> bnchs: i've given you some examples, do they do what you want? it's still not clear to me exactly what you want
[21:02:50] <bnchs> i'm dealing with a bunch of CRC32 (in 4 bytes) and i'm trying to print them in actual hexademical form
[21:02:55] <bnchs> python's signing ruins that
[21:03:03] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:c664:11b3:548d:70f8)
[21:03:08] <SnoopJ> "actual hexadecimal form" is not unambiguous
[21:03:09] <bnchs> and i'm also using it in filenames
[21:03:20] *** Joins: cosimone (~user@93-47-231-87.ip115.fastwebnet.it)
[21:03:21] <bnchs> something thats not -0x1F
[21:03:35] <bnchs> and something thats 0x00 and 0xFF
[21:03:38] <lidless> SnoopJ: is it not not ambiguous?
[21:03:48] <SnoopJ> lidless, it is not
[21:03:58] * lidless nods
[21:03:59] *** Quits: doko (~doko@77.241.229.232) (Ping timeout: 256 seconds)
[21:03:59] <bjs> bnchs: do you want to see 0x1F instead? or something else?
[21:04:05] <bnchs> -0x3f41649e.fil
[21:04:13] <bnchs> what is this supposed to be
[21:04:25] <bnchs> [CRC32 number in hex].fil
[21:04:31] <bnchs> the minus ruins it
[21:04:43] <bjs> bnchs: if you just remove the minus do you even get the right answer?
[21:05:30] *** Quits: cuz```` (~user@38.140.58.234) (Remote host closed the connection)
[21:05:38] *** Joins: cuz```` (~user@38.140.58.234)
[21:05:38] <lidless> .py import zlib; hex(zlib.crc32(b'lidless'))
[21:05:41] <bnchs> i don't know
[21:05:55] <bjs> bnchs: I mean the minus sign suggests that it's a negative number, and you're just printing the hex of that negative number
[21:06:09] <The-Compiler> bnchs: where are you getting the current output from, and what type is the underlying thing?
[21:06:16] <bjs> bnchs: print(hex(-16)) prints '-0x10'
[21:06:17] <bnchs> bjs the CRC32 number is supposed to be a unsigned 32-bit long
[21:06:24] <lidless> bjs: what if it's bit-shifted 1<<32 ?
[21:06:26] *** Quits: icy_hot (~icy_hot@172.58.72.57) (Quit: WeeChat 3.4)
[21:06:27] <lidless> er bnchs
[21:06:29] <bnchs> The-Compiler: from a file format
[21:06:31] <bjs> bnchs: then why do you have a negative number? where did it come from.
[21:06:41] *** Joins: icy_hot (~icy_hot@172.58.72.57)
[21:06:41] *** Joins: emf_ (~emf@2620:10d:c090:400::5:9645)
[21:06:45] <bnchs> it's from a binary file format
[21:06:52] <The-Compiler> bnchs: no, I mean, how does your code look like now that gives you the current output?
[21:07:15] <lidless> bnchs: what does `number % (1<<32)` yield?
[21:07:20] <bjs> bnchs: what did you do in Python to get this negative number? maybe you're just doing it wrong to get a negative number at all
[21:07:26] <bnchs> wait
[21:07:30] <bnchs> i'm gonna make a paste
[21:07:35] <bjs> and the minus sign is a symptom of a problem not the problem itself
[21:07:36] <lidless> lol too many folks calling you. sorry
[21:07:59] <SnoopJ> bjs +1, getting a negative value for what's allegedly unsigned seems indicative of an underlying problem
[21:08:14] <lidless> Evidently python2 does a signed 32-bit CRC whereas python3 does unsigned
[21:08:42] <bnchs> https://bpa.st/QU6A
[21:08:44] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[21:08:49] <bnchs> it's a binary file format parser
[21:08:57] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[21:09:08] *** Quits: MajorBiscuit (~MajorBisc@c-001-017-058.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:09:42] <bjs> bnchs: so those "l"s are the 32-bit integers?
[21:09:45] <bnchs> yes
[21:09:49] <bjs> bnchs: did you mean to use L
[21:09:50] <bjs> not l ?
[21:09:50] <bnchs> it's big-endian longs
[21:10:08] <bnchs> wait what?
[21:10:08] *** Quits: Thanatos (~Thanatos@102.91.4.145) (Ping timeout: 250 seconds)
[21:10:23] <TML> bnchs: You're using signed types in your unpack()
[21:10:38] <TML> That's why it comes back to Python as a negative number
[21:10:42] <bjs> bnchs: I'm not sure what was unclear,  perhaps you want to use 'L' not 'l' in your unpacking.  l is "long" and L is "unsigned long" as per https://docs.python.org/3/library/struct.html#format-characters
[21:10:51] <sydbarret> TML doesnt work. im trying to get the organic results from this url  https://www.google.com/search?q=how+much+do+personal+trainers+make&oq=how+much+do+personal+trainers+make&uule=w+CAIQICIeQ2hpY2FnbyxJbGxpbm9pcyxVbml0ZWQgU3RhdGVz&hl=en&gl=us&sourceid=chrome&ie=UTF-8
[21:11:10] <bnchs> thought it was ul
[21:11:14] <bnchs> like printf()
[21:11:19] <bjs> bnchs: did you read the docs?
[21:11:23] <bnchs> yeah
[21:11:36] <sydbarret> it should give issonline.com/ fitnessmentors.com/ salary.com and so on
[21:11:50] <bnchs> i'm stupid
[21:11:51] <lidless> sydbarret: vioew source on that page
[21:11:54] <lidless> *view
[21:12:12] <TML> sydbarret: Well, I don't see a "g" class on those links
[21:12:21] <SnoopJ> bnchs, nah, trivia like that can be hard to keep track of.
[21:12:36] <sydbarret> they have g class in their ancestor element
[21:12:45] <sydbarret> or which class would you chose
[21:13:09] <TML> OK, so you want the href of the first <a> tag below a div with 'g' in the class property?
[21:13:10] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[21:13:28] *** Joins: Arw- (~Arwalk@lfbn-dij-1-972-242.w90-125.abo.wanadoo.fr)
[21:13:53] *** Joins: doko (~doko@77.241.229.232)
[21:13:57] <TML> sydbarret: That'll be something like //*[contains(concat(' ',normalize-space(@class),' '),' g ')]//a[1]/@href
[21:14:00] *** Quits: yaalon (~yaalon@2806:102e:18:9263:88bf:487a:cf12:c978) ()
[21:14:23] *** Joins: hojasuelta (~hojasuelt@2806:102e:18:9263:88bf:487a:cf12:c978)
[21:14:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:14:45] *** Quits: Arw| (~Arwalk@lfbn-dij-1-969-26.w90-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[21:15:04] <TML> or you can drop the [1] and get the href property from ALL <a> tags below a parent with 'g' in the class property
[21:15:11] *** luva19 is now known as luva
[21:15:31] *** Quits: vitali64 (~vitali64@user/vitali64) (Read error: No route to host)
[21:15:33] <TML> and you can probably change '//*' to '//div', but I didn't actually look at the results to confirm that's a 100% safe assumption
[21:15:35] *** Joins: Adoi (~Adoi@user/adoi)
[21:15:37] *** Quits: esther (~esther@2607:fb90:5fed:694c:91cf:6ee2:e586:a99d) (Ping timeout: 240 seconds)
[21:15:59] <bnchs> also how do you pad hex to have 6 digits
[21:16:06] *** Joins: fikran (~fikran@user/fikran)
[21:16:18] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[21:16:45] <bjs> bnchs: print(f"0x{i:06x}")
[21:16:53] <bjs> :06x  means pad with 0, up to 6 chars, hex
[21:16:55] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[21:17:00] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:17:02] <lidless> nice. TIL
[21:17:23] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:18:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:18:42] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:d145:b3f1:6a99:b6f0)
[21:18:42] *** Joins: Lunatrius (~Lunatrius@77.38.76.5)
[21:19:06] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:19:12] <Jimmy2027> is anyone here familiar with graph-tools?
[21:19:27] <sambauer64> is it a bad decision if I name my company 'vaccinium'?
[21:20:07] <grym> sambauer64: i don't think that's a python question
[21:20:39] <sambauer64> no, but i'll do python programming and was curious
[21:21:01] <sydbarret> TML thanks the double slash before a[1] made the difference. Why is that?
[21:21:21] <SnoopJ> Jimmy2027, let's assume "yes," ask your follow-up question
[21:21:36] <TML> sydbarret: `/` means "immediate child", `//` means "descendant at any level"
[21:22:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:22:08] *** Joins: jamiejackson (~jamiejack@131.106.140.145)
[21:22:21] <TML> sydbarret: so /div/a matches <div><a> but not <div><span><a>
[21:22:48] <sydbarret> cool
[21:22:51] <TML> sydbarret: while /div//a matches both
[21:23:19] <TML> as well as something like <div><span><dt><ul><li><font><a>
[21:23:58] *** Quits: RawFiend (~RawFiend@46.196.88.41) (Quit: Client closed)
[21:24:14] *** Joins: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[21:25:45] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 256 seconds)
[21:27:31] <Jimmy2027> SnoopJ: SnoopJ I'm trying to get a graph visualisation out of something like this: http://dpaste.com/3HVXA3GWM
[21:28:15] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[21:29:09] *** Quits: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 256 seconds)
[21:30:37] *** Quits: jose1711 (~jose@93.184.65.164.host.vnet.sk) (Ping timeout: 240 seconds)
[21:31:49] *** Joins: jose1711 (~jose@93.184.65.164.host.vnet.sk)
[21:33:17] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[21:34:49] *** Quits: jay-m1262 (~jay-m@154.72.162.81) (Ping timeout: 256 seconds)
[21:35:30] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[21:35:42] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[21:36:32] *** Joins: funhouse (~funhouse@user/funhouse)
[21:36:45] *** Joins: bnchs__ (~bnchs@160.177.45.26)
[21:36:45] *** Joins: Lunatrius` (~Lunatrius@77.38.99.224)
[21:36:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:37:12] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[21:37:17] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 240 seconds)
[21:37:17] *** Lunatrius` is now known as Lunatrius
[21:38:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:38:44] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[21:39:03] *** Joins: wallsY (~wallsY@c-73-211-135-175.hsd1.il.comcast.net)
[21:39:09] *** Quits: bnchs (~bnchs@160.177.45.26) (Ping timeout: 250 seconds)
[21:39:35] *** Quits: therufuser (~therufuse@p5b02e029.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:39:41] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:40:28] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[21:40:52] *** Quits: teut (~teut@2401:4900:1c68:dbe1:a589:5c05:d8df:7643) (Quit: Client closed)
[21:40:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:41:37] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:d145:b3f1:6a99:b6f0) (Quit: WeeChat 3.3)
[21:41:49] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:42:11] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[21:42:11] *** jwdungeon is now known as jw_dungeon
[21:42:40] *** Joins: jay-m1262 (~jay-m@154.72.162.81)
[21:44:00] *** Joins: aslicedbanjo (~aslicedba@host31-52-125-36.range31-52.btcentralplus.com)
[21:44:39] *** Joins: vsantana1 (~Thunderbi@fttx-177136149223.usr.predialnet.com.br)
[21:45:03] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[21:45:35] *** Quits: vsantana (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[21:45:35] *** vsantana1 is now known as vsantana
[21:45:45] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[21:46:11] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 245 seconds)
[21:46:37] <stewie925> hi guys, for pandas, I notice that when I run df.info() the string and integer types are showing as `object `
[21:46:37] *** Joins: Masterphi (~Masterphi@user/masterphi)
[21:47:21] *** Joins: fldme (~fldme@178.49.152.151)
[21:48:31] *** Quits: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Remote host closed the connection)
[21:48:44] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[21:49:08] <stewie925> when I run `df.convert_dtypes().dtypes `,  the strings and integers do become `string ` and `int64 ` respectively
[21:49:50] <stewie925> interestingly, though, I have a float type that, when I run `df.convert_dtypes().dtypes `, it changes to `int64 ` as well.
[21:50:01] *** Joins: Thanatos (~Thanatos@197.210.70.82)
[21:50:50] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[21:51:03] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[21:51:55] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:6114:c56c:8a91:41ae)
[21:51:55] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:6114:c56c:8a91:41ae) (Changing host)
[21:51:55] *** Joins: skapata (~Skapata@user/skapata)
[21:52:23] *** Quits: jay-m1262 (~jay-m@154.72.162.81) (Ping timeout: 256 seconds)
[21:53:14] <stewie925> oh sorry, I see only strings show as `objects ` in dataframe.info(),  integers do show as `int64 ` by default.
[21:55:57] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[21:55:59] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[21:56:14] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[21:57:23] <lidless> stewie925: I'm going through this now: https://pandas.pydata.org/docs/user_guide/10min.html
[21:57:27] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:57:33] <lidless> I have no idea why I'm doing this, or what I'm doing... but it's fun.
[21:58:27] <stewie925> Oh, hey, thanks - yeah I seen that:)
[21:58:41] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[21:59:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:59:37] *** Joins: blei (~blei@209.201.38.106)
[21:59:40] <stewie925> lidless: thanks, I need to bookmark this :D
[22:00:06] *** Joins: masoudd (~masoudd@user/masoudd)
[22:00:18] *** Joins: pycurious (~Adium@user/pycurious)
[22:00:23] *** Joins: kts_ (~kts@103.73.237.200)
[22:00:24] *** Quits: kts (~kts@103.73.237.38) (Ping timeout: 250 seconds)
[22:00:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:00:46] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.4)
[22:00:47] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[22:01:22] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:01:31] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[22:02:04] *** Quits: kts_ (~kts@103.73.237.200) (Client Quit)
[22:02:09] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[22:03:39] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[22:03:41] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:03:55] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[22:03:59] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:3a02:add3:3d49:2043)
[22:04:30] *** Joins: jay-m1262 (~jay-m@154.72.162.81)
[22:04:31] *** Quits: cuz```` (~user@38.140.58.234) (Ping timeout: 256 seconds)
[22:06:33] *** Quits: Thanatos (~Thanatos@197.210.70.82) (Ping timeout: 256 seconds)
[22:08:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[22:08:27] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:c664:11b3:548d:70f8) (Quit: pvergain)
[22:09:43] <lidless> np! :)
[22:09:45] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:10:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:10:58] <lidless> Oh wow! bjs nice new pip colors :)
[22:11:39] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 250 seconds)
[22:11:44] *** Quits: cosimone (~user@93-47-231-87.ip115.fastwebnet.it) (Read error: Connection reset by peer)
[22:12:44] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[22:14:21] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[22:14:22] *** Parts: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Leaving)
[22:15:17] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:17:28] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[22:17:33] *** Joins: pycurious (~Adium@user/pycurious)
[22:17:38] *** Quits: wallsY (~wallsY@c-73-211-135-175.hsd1.il.comcast.net) (Quit: Leaving)
[22:18:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:18:10] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[22:18:17] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 240 seconds)
[22:18:27] *** Quits: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 256 seconds)
[22:18:33] *** Joins: smoke (~smoke@user/smoke)
[22:18:56] *** Quits: hojasuelta (~hojasuelt@2806:102e:18:9263:88bf:487a:cf12:c978) (Remote host closed the connection)
[22:19:25] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[22:19:26] *** Joins: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt)
[22:19:37] *** Quits: sambauer64 (~sambauer6@86.121.131.207) (Quit: Lost terminal)
[22:19:49] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[22:20:00] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[22:20:07] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[22:20:49] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[22:22:08] *** Joins: dme86 (~dan@user/dan86)
[22:22:27] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f98e:e38d:b4ba:5a03)
[22:22:56] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[22:23:30] *** Quits: naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[22:23:38] *** Joins: Auron (Auron956@user/auron)
[22:23:50] <aphysically> AssertionError: {'args': P.args, 'kwargs': P.kwargs} != {'args': P.args, 'kwargs': P.kwargs}
[22:23:55] <aphysically> :thinking:
[22:24:40] *** Joins: gumol (~gumol@195-240-229-124.fixed.kpn.net)
[22:25:05] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[22:25:49] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[22:26:03] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[22:26:36] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:2bc0:5251:27cf:39d7) (Ping timeout: 245 seconds)
[22:26:57] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[22:26:57] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:a1aa:66f1:e1b1:abb3)
[22:26:59] *** Joins: Nutte35 (~Nutte@202.153.80.40)
[22:27:31] *** Quits: doko (~doko@77.241.229.232) (Ping timeout: 256 seconds)
[22:27:41] <lidless> aphysically: what's the assert?
[22:27:53] <aphysically> this is a cpython bug I'll fix it
[22:27:56] <lidless> oh
[22:28:22] *** Quits: joaofukuda_ (~joaofukuk@191.255.113.250) (Read error: Connection reset by peer)
[22:28:38] *** Quits: jpic (~jpic@82.142.2.94) (Ping timeout: 260 seconds)
[22:28:46] *** Joins: brennan (~wallsY@c-73-211-135-175.hsd1.il.comcast.net)
[22:29:01] <jinsun> ah ParamSpec creates a new args and kwargs object everytime you access them
[22:29:21] *** brennan is now known as wallsY
[22:29:26] *** Joins: thiras (~thiras@user/thiras)
[22:29:51] <jinsun> weird, why did it even have to be property? could have been just an attribute?
[22:30:01] <aphysically> it's a separate class
[22:30:05] *** Quits: icy_hot (~icy_hot@172.58.72.57) (Quit: WeeChat 3.4)
[22:30:07] <aphysically> :)
[22:30:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:30:18] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:a1aa:66f1:e1b1:abb3) (Client Quit)
[22:30:25] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[22:30:27] *** Joins: jpic (~jpic@82-64-233-31.subs.proxad.net)
[22:30:31] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[22:31:40] <jinsun> so the fix would be to define a eq method that checks for the origin I guess
[22:31:46] *** Joins: skapata (~Skapata@user/skapata)
[22:31:50] <aphysically> or to cache the property
[22:32:13] <jinsun> yeah that works too
[22:32:20] *** Quits: bluedust (~bluedust@117.204.132.5) (Remote host closed the connection)
[22:32:39] *** karlnashville is now known as karl_AFK
[22:33:02] *** Quits: gumol (~gumol@195-240-229-124.fixed.kpn.net) (Quit: Client closed)
[22:33:58] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[22:34:13] *** Quits: jay-m1262 (~jay-m@154.72.162.81) (Ping timeout: 240 seconds)
[22:34:56] *** Quits: jpic (~jpic@82-64-233-31.subs.proxad.net) (Ping timeout: 245 seconds)
[22:36:48] *** Joins: jpic (~jpic@82.142.19.130)
[22:37:12] <bnchs__> thank you guys for helping me with my script. now i can mod a game
[22:37:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:39:36] *** Joins: hams (~hams@user/hams)
[22:39:36] *** Joins: zebrag (~chris@user/zebrag)
[22:40:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[22:41:39] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[22:41:45] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[22:42:35] *** Joins: Thanatos (~Thanatos@197.210.70.201)
[22:42:36] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:43:34] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[22:44:28] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[22:45:07] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:31] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[22:45:53] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[22:46:30] *** Joins: jay-m1262 (~jay-m@154.72.162.81)
[22:46:37] *** Quits: ttys000 (~ttys000@user/ttys000) (Read error: Connection reset by peer)
[22:47:18] *** Joins: hojasuelta (~hojasuelt@2806:102e:18:4063:413e:3b2f:c322:3b17)
[22:47:58] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[22:47:59] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d411:12a8:7964:fbd9) (Quit: Textual IRC Client: www.textualapp.com)
[22:48:31] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:49:02] *** Joins: ExpiredKebab (~sgreadly@2407:7000:8995:c103:4120:45d3:c40d:d00d)
[22:49:11] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[22:49:25] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[22:49:30] *** Joins: yitz (~yitz@exercism/yitz)
[22:49:32] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[22:49:48] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:49:59] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[22:50:25] *** Quits: pro_z_ (~pro_z@37.214.69.56) (Ping timeout: 256 seconds)
[22:51:06] <Macuser> this doesn't make sense to me... I do A.append(B[C]) and I get an IndexError
[22:51:16] <Macuser> but then I do print(B[C]) and it works
[22:51:43] *** Quits: hojasuelta (~hojasuelt@2806:102e:18:4063:413e:3b2f:c322:3b17) (Ping timeout: 250 seconds)
[22:51:44] *** Quits: Nutte35 (~Nutte@202.153.80.40) (Read error: Connection reset by peer)
[22:52:12] *** Joins: parv (~quass@user/parv)
[22:52:42] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[22:52:42] *** Joins: upsala (~zcb@185.213.155.252)
[22:52:50] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:52:59] *** Joins: cuz```` (~user@38.140.58.234)
[22:53:45] <jinsun> Macuser: show code?
[22:54:01] <Macuser> ok
[22:54:18] <Macuser> https://bpa.st/VX6A
[22:54:25] <Macuser> line 74
[22:56:25] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[22:57:19] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 256 seconds)
[22:57:27] <Batzy> Does anyone know a good library for doing matrix modular arithmetic? (mostly just inverses and multiplication). I think numpy is an option, but I know for example that using numpy is not always the most optimal choice (that or it's too large for what's needed). For example using numpy arrays vs something like https://docs.python.org/3/library/array.html
[22:58:34] <lantech19446> ok clearly I'm not as smart as I'd like to think I am can someone tell me why the second condition is coming back as empty set? https://pastebin.com/NnF2eZc9
[22:58:38] <SnoopJ> Batzy, it's hard to compare `numpy` and `array`, they have very little feature overlap
[22:58:57] *** Joins: masoudd_ (~masoudd@user/masoudd)
[22:58:58] <Batzy> SnoopJ: yes but someone could use them for similar things
[22:59:14] <Batzy> like if you're just trying to get quick/efficient array storage and access
[22:59:21] <Batzy> i can see someone considering both of these as good candidates
[22:59:29] <SnoopJ> Batzy, sure. You could re-write the numpy features that array does not have on top of any library that provides only the storage
[22:59:41] <Batzy> yes
[22:59:45] <jinsun> Macuser: okay simple list and integer, nothing fancy, then you shouldn't see that behavior, maybe print(A, B, C) before doing the append and then look at the values just when you get the error
[22:59:51] <Batzy> either way im not asking about this directly
[23:00:01] <Batzy> im mostly just trying to get modular matrix arithmetic
[23:00:08] <Batzy> (actually i only need *)
[23:00:20] <Macuser> jinsun good idea, will try
[23:00:36] <vbgunz> What's the preferred module for working with XML files? Trying to read and write them, any help is appreciated?
[23:00:45] <SnoopJ> Based on your description it sounds like numpy would be a good choice, but I don't know if there are more domain-specific choices, because I don't know what your problem domain is.
[23:00:55] *** Joins: bdeshi- (~bdeshi@bdeshi.space)
[23:01:00] *** Joins: NightMonkey_ (~NightMonk@user/nightmonkey)
[23:01:24] <jinsun> vbgunz: lxml is good
[23:01:29] <SnoopJ> vbgunz, there's `xml` in the stdlib, and `lxml` is API-compatible with it, and has lots of extra speed/features.
[23:01:31] *** Joins: ThatOtherGuy (~LogicAsid@user/logicaside)
[23:01:33] <vbgunz> oh, I didn't know Python actually has an xml library
[23:01:40] <Batzy> SnoopJ: I have two randomized integer matrices and I'm going to be doing multiplications mod p^k
[23:01:52] *** Joins: blackpawn_ (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[23:01:52] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[23:01:57] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[23:02:02] <Batzy> so if i have X, Y I could be doing X*Y and X*Y*Y or X*X*Y and so on
[23:02:04] <dba> lantech19446: not sure why are you tying to use ijson you can parse the json directly with contents.json()
[23:02:10] <Batzy> (all mod p^k)
[23:02:17] <SnoopJ> Batzy, numpy is capable of doing modular arithmetic, so if you're shying away from it it would help to know why
[23:02:23] <Batzy> but yeah, numpy is actually the only thing i can find
[23:02:28] <vbgunz> thanks, I just need something simple, not read and write everything. thanks again <3
[23:02:35] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[23:02:35] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[23:02:36] *** Quits: andreasbuhr (~quassel@p549db796.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:02:37] *** Quits: bytehackr (~Sandipan@45.249.73.174) (Ping timeout: 240 seconds)
[23:02:44] <lantech19446> dba: because it didn't work so I went to ijson but I'd assume i'd face the same problem using json too
[23:02:46] *** Joins: cYmen_ (~simon@squint.a-oben.org)
[23:02:56] *** Joins: weechat (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[23:02:56] <Batzy> SnoopJ: one time i came in here talking about the requests library because it was all i could find. Someone recommended httpx and i found out i liked it better. I'm hoping for the same magic today
[23:03:00] *** Joins: Ischwitch (~Ingvix@user/ingvix)
[23:03:08] <Batzy> but there aren't many other good choices though, i have no qualms with numpy
[23:03:09] *** Joins: kiska35 (james@user/kiska)
[23:03:31] <Macuser> jinsun you can append a list to a list right
[23:03:45] <jinsun> Macuser: yes you can
[23:03:50] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[23:03:52] <Macuser> A.append(a_list)
[23:03:57] *** Joins: unautre_ (~unautre@omsk.bandar-log.dev)
[23:03:57] *** Joins: mrec (~markus@sundtek.de)
[23:04:01] <Macuser> in my case it's A.append(B[a_list])
[23:04:14] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:05:06] *** Joins: Coroz (~Numerlor@whydoyouhate.me)
[23:05:06] <jinsun> lantech19446: why are you doing `if 'coalition' in directory` in the second one?
[23:05:09] *** Joins: therufuser (~therufuse@p5b02e029.dip0.t-ipconnect.de)
[23:05:12] <SnoopJ> Batzy, I imagine it wouldn't be too hard to have a nice tidy implementation of such a thing in Cython, but it seems like it would have to re-implement a lot of numpy to get comparable performance
[23:05:25] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[23:05:31] <dba> lantech19446, I just tried out and it parsed the json in that url `r = requests.get('https://lansdalelibrary.org/html/report.json') data = r.json()`
[23:05:37] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 240 seconds)
[23:05:47] *** Joins: Adoi (~Adoi@user/adoi)
[23:05:50] *** karl_AFK is now known as karlnashville
[23:05:51] <Batzy> SnoopJ: yeah
[23:05:54] <Batzy> ok, thanks
[23:05:55] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[23:06:03] <SnoopJ> Or perhaps a Python implementation chucked into Numba could do a good job? I'm skeptical about the performance and I'm *really* skeptical about guaranteeing correctness
[23:06:46] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[23:06:51] <Wooble> httpx was, I think, also a response to requests not doing async. There's no similar pressure on numpy I'm aware of...
[23:06:51] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Killed (NickServ (GHOST command used by ThatOtherGuy)))
[23:06:52] *** Joins: Scotteh_ (~Scotteh@user/scotteh)
[23:06:52] *** ThatOtherGuy is now known as LogicAside
[23:06:52] <lantech19446> jinsun: I only want it to return a number to me if it's related to a coalition entry, directory corresponds to the dictionary where the url resides
[23:07:20] <SnoopJ> Wooble, I think the corresponding pressure would be doing things as parallel as possible, but you get that "for free" with NumPy
[23:07:21] <lantech19446> dba: the part that didn't work was being able to scrape it
[23:07:34] <jinsun> Macuser: okay that B[a_list] is not a list probably, and if B is a list then it would be an error because you can't index a list with another list
[23:07:52] *** Quits: masoudd (~masoudd@user/masoudd) (*.net *.split)
[23:07:52] *** Quits: sirn (~sirn@user/sirn) (*.net *.split)
[23:07:52] *** Quits: gonzo[m] (~gonzotchn@2001:470:69fc:105::1:9920) (*.net *.split)
[23:07:52] *** Quits: st3fan (sid43079@id-43079.lymington.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (*.net *.split)
[23:07:52] *** Quits: TransitusFluvii (~ingfix-2m@wikipedia/-Alabama-) (*.net *.split)
[23:07:52] *** Quits: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65) (*.net *.split)
[23:07:52] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (*.net *.split)
[23:07:52] *** Quits: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106) (*.net *.split)
[23:07:52] *** Quits: jinsun_ (~jinsun@user/jinsun) (*.net *.split)
[23:07:52] *** Quits: mdk[m] (~mdk@python/psf/mdk) (*.net *.split)
[23:07:52] *** Quits: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3) (*.net *.split)
[23:07:52] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (*.net *.split)
[23:07:52] *** Quits: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb) (*.net *.split)
[23:07:52] *** Quits: led_belly (~led_belly@83.97.23.14) (*.net *.split)
[23:07:52] *** Quits: Ingvix (~Ingvix@user/ingvix) (*.net *.split)
[23:07:52] *** Quits: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421) (*.net *.split)
[23:07:52] *** Quits: daniel2 (daniel@user/daniel2) (*.net *.split)
[23:07:52] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (*.net *.split)
[23:07:52] *** Quits: r0bby (r0bby@user/r0bby) (*.net *.split)
[23:07:52] *** Quits: cside (sid479702@id-479702.uxbridge.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: dstufft (~dstufft@shitbird.caremad.io) (*.net *.split)
[23:07:52] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[23:07:52] *** Quits: dirtwash (~dirtwash@user/dirtwash) (*.net *.split)
[23:07:52] *** Quits: explodes (~explodes@user/explodes) (*.net *.split)
[23:07:52] *** Quits: OlaNys (onm@irccore.ofelbar.se) (*.net *.split)
[23:07:52] *** Quits: Quietus_ (~quietus@2a04:52c0:101:181::) (*.net *.split)
[23:07:52] *** Quits: Knyght (sid365271@id-365271.helmsley.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: mexen (uid495612@user/mexen) (*.net *.split)
[23:07:52] *** Quits: daex (~daex@user/daex) (*.net *.split)
[23:07:52] *** Quits: jposer (sid132110@id-132110.uxbridge.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: agronholm (sid403424@id-403424.helmsley.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: kostkon (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03) (*.net *.split)
[23:07:52] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: jesse-s (sid98646@id-98646.hampstead.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: TML (~tml@user/tml) (*.net *.split)
[23:07:52] *** Quits: madduck (~madduck@user/madduck) (*.net *.split)
[23:07:52] *** Quits: atomicwrites (~atomicwri@user/atomicwrites) (*.net *.split)
[23:07:52] *** Quits: Titore (~Titore@user/titore) (*.net *.split)
[23:07:52] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (*.net *.split)
[23:07:52] *** Quits: pyfisch (~pyfisch@user/pyfisch) (*.net *.split)
[23:07:52] *** Quits: metta (~Advanced@2a01:4f8:1c0c:49df::1) (*.net *.split)
[23:07:52] *** Quits: Timvde (~tim@towely.vdeynde.com) (*.net *.split)
[23:07:52] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[23:07:52] *** Quits: cYmen (~simon@squint.a-oben.org) (*.net *.split)
[23:07:52] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[23:07:52] *** Quits: Scotteh (~Scotteh@user/scotteh) (*.net *.split)
[23:07:52] *** Quits: jcass (~cindy@50-0-146-31.dsl.dynamic.fusionbroadband.com) (*.net *.split)
[23:07:52] *** Quits: meti (~meti@user/meti) (*.net *.split)
[23:07:52] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[23:07:52] *** Quits: mrec_ (~markus@user/mrec) (*.net *.split)
[23:07:52] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[23:07:52] *** Quits: fxrs (~fxrs@192.227.212.130) (*.net *.split)
[23:07:52] *** Quits: neil (~kneel@rockylinux/infra/neil) (*.net *.split)
[23:07:52] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (*.net *.split)
[23:07:52] *** Quits: kiska3 (james@user/kiska) (*.net *.split)
[23:07:52] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (*.net *.split)
[23:07:52] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[23:07:52] *** Quits: n0____ (~n0___@user/n0/x-7412091) (*.net *.split)
[23:07:52] *** Quits: Numerlor (~Numerlor@whydoyouhate.me) (*.net *.split)
[23:07:52] *** Quits: RoadrunnerWMC (~Roadrunne@46.101.129.38) (*.net *.split)
[23:07:52] *** Quits: unautre (~unautre@user/unautre) (*.net *.split)
[23:07:52] *** Quits: bailsman (~Mm1@xls01.freecult.org) (*.net *.split)
[23:07:52] *** Quits: ntome (~ntome@user/ntome) (*.net *.split)
[23:07:52] *** Quits: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net) (*.net *.split)
[23:07:52] *** Quits: arza (arza@arza.us) (*.net *.split)
[23:07:52] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[23:07:52] *** Quits: thumbs (1000@apache/committer/thumbs) (*.net *.split)
[23:07:52] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[23:07:52] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (*.net *.split)
[23:07:52] *** Quits: Russell (russell@bnc4free/staff/russell) (*.net *.split)
[23:07:52] *** Quits: johnplos1 (~John_Plos@user/johnplosky) (*.net *.split)
[23:07:52] *** Quits: carlio (~carlio@static.62.204.34.188.clients.your-server.de) (*.net *.split)
[23:07:52] *** Quits: moonmoon (awoo@libera/staff/moonmoon) (*.net *.split)
[23:07:52] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (*.net *.split)
[23:07:52] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (*.net *.split)
[23:07:52] *** Quits: mobius (sid478273@id-478273.uxbridge.irccloud.com) (*.net *.split)
[23:07:53] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (*.net *.split)
[23:07:53] *** Quits: niluje (~niluje@2a05:d012:f91:1700:6975:ef0b:def6:3bdd) (*.net *.split)
[23:07:53] *** Quits: Wegge (~wegge@user/wegge) (*.net *.split)
[23:07:53] *** Quits: Bato (~plauder@2001:bc8:182c:b39::1) (*.net *.split)
[23:07:53] *** Quits: eloy (~quassel@2001:bc8:182c:650::1) (*.net *.split)
[23:07:53] *** Ischwitch is now known as Ingvix
[23:07:53] *** bdeshi- is now known as bdeshi
[23:07:53] *** kiska35 is now known as kiska3
[23:07:54] <dba> lantech19446. what do you mean by scrap it?
[23:07:55] *** NightMonkey_ is now known as NightMonkey
[23:08:00] *** Quits: Saxtheowl (~roro@78.192.226.182) (Read error: Connection reset by peer)
[23:08:09] *** Joins: naquad (~naquad@79.135.214.17)
[23:08:30] <naquad> hi. are there any good visual debuggers except pycharm? i don't want to install the whole thing just to get a debugger with proper display
[23:08:35] <Batzy> SnoopJ: ok, sounds good. thank you
[23:08:37] *** Joins: n0____ (~n0___@user/n0/x-7412091)
[23:08:39] <jinsun> lantech19446: but your loop variable is h not directory
[23:08:46] <lantech19446> dba: extract the desired information from it
[23:08:54] <Wooble> SnoopJ: there may be some nvidia vs amd pressures, I guess. but http is really easy to implement compared to decades of work that went into numpy :)
[23:08:59] *** Joins: thumbs (1000@apache/committer/thumbs)
[23:09:06] <SnoopJ> If you wanted to offload it to the GPU, yea
[23:09:07] <jinsun> lantech19446: so I expected some condition in h there, like if "coalition" in h
[23:09:13] <Macuser> jinsun whoops I meant to say A.append(B[int]) where B[int] is a list
[23:09:20] *** Joins: TML (~tml@user/tml)
[23:09:22] <JordiGH> naquad: I like pudb: https://www.youtube.com/watch?v=IEXx-AQLOBk
[23:09:31] <Macuser> for some reason not working though... so weird
[23:09:37] <lantech19446> jinsun: I need it to look in requests.data.item.hits but only return a number if coalition is in requests.data.item.data
[23:09:52] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[23:09:54] *** Joins: bnchs (~bnchs@160.177.45.26)
[23:09:56] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[23:09:57] *** Quits: bnchs__ (~bnchs@160.177.45.26) (Remote host closed the connection)
[23:10:08] <naquad> JordiGH, could be an option unless i would have so much data & exprs to display :(
[23:10:09] *** Quits: jay-m1262 (~jay-m@154.72.162.81) (Ping timeout: 250 seconds)
[23:10:13] *** Joins: goldfish (~goldfish@user/goldfish)
[23:10:16] * naquad misses ddd so much
[23:10:20] *** Joins: ttys000 (~ttys000@user/ttys000)
[23:10:24] *** Joins: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net)
[23:10:31] *** Joins: csm3105 (~csm3105@31.4.128.67)
[23:10:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[23:10:37] *** Joins: led_belly_ (~led_belly@83.97.23.14)
[23:10:43] <Macuser> I thought it should be [int][int2]
[23:10:56] <Macuser> where the first one is the outer list and the second one is the inner list?
[23:11:03] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[23:11:11] <jinsun> lantech19446: okay so don't go so deep in the query if you need the information from previous levels, you probably want to loop over "requests.data.item" only and check the data and hits inside the dicts you get
[23:11:13] <Macuser> no no
[23:11:31] <Macuser> yes
[23:11:32] <Macuser> maybe..
[23:11:41] <Macuser> but that didn't work either
[23:11:53] <ChrisWarrick> naquad: vscode?
[23:11:59] <lantech19446> jinsun: that makes sense and I did try to do it that way but I really don't know how to do it in a way that works
[23:12:07] *** Joins: jay-m1262 (~jay-m@154.72.162.81)
[23:12:13] <jinsun> lantech19446: if 'coalition' in directory is going to be the same value everytime, it will loop over all of 'requests.data.item.data' and see if any of of them is exactly equal to "coalition"
[23:12:26] *** Joins: gonzo[m] (~gonzotchn@2001:470:69fc:105::1:9920)
[23:12:26] *** Joins: sirn (~sirn@user/sirn)
[23:12:26] *** Joins: st3fan (sid43079@id-43079.lymington.irccloud.com)
[23:12:26] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[23:12:26] *** Joins: TransitusFluvii (~ingfix-2m@wikipedia/-Alabama-)
[23:12:26] *** Joins: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65)
[23:12:26] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[23:12:26] *** Joins: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106)
[23:12:26] *** Joins: jinsun_ (~jinsun@user/jinsun)
[23:12:26] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[23:12:26] *** Joins: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3)
[23:12:26] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[23:12:26] *** Joins: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb)
[23:12:26] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[23:12:26] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[23:12:26] *** Joins: daniel2 (daniel@user/daniel2)
[23:12:26] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[23:12:26] *** Joins: r0bby (r0bby@user/r0bby)
[23:12:26] *** Joins: cside (sid479702@id-479702.uxbridge.irccloud.com)
[23:12:26] *** Joins: dstufft (~dstufft@shitbird.caremad.io)
[23:12:26] *** Joins: baloona (~baloona@mail.baloona.de)
[23:12:26] *** Joins: explodes (~explodes@user/explodes)
[23:12:26] *** Joins: dirtwash (~dirtwash@user/dirtwash)
[23:12:26] *** Joins: OlaNys (onm@irccore.ofelbar.se)
[23:12:26] *** Joins: Quietus_ (~quietus@2a04:52c0:101:181::)
[23:12:26] *** Joins: daex (~daex@user/daex)
[23:12:26] *** Joins: jposer (sid132110@id-132110.uxbridge.irccloud.com)
[23:12:26] *** Joins: agronholm (sid403424@id-403424.helmsley.irccloud.com)
[23:12:26] *** Joins: kostkon (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03)
[23:12:26] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[23:12:26] *** Joins: jesse-s (sid98646@id-98646.hampstead.irccloud.com)
[23:12:26] *** Joins: madduck (~madduck@user/madduck)
[23:12:26] *** Joins: Titore (~Titore@user/titore)
[23:12:26] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[23:12:26] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[23:12:26] *** Joins: metta (~Advanced@2a01:4f8:1c0c:49df::1)
[23:12:26] *** Joins: jcass (~cindy@50-0-146-31.dsl.dynamic.fusionbroadband.com)
[23:12:26] *** Joins: ntome (~ntome@user/ntome)
[23:12:26] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[23:12:26] *** Joins: bleb (~cm@user/bleb)
[23:12:26] *** Joins: neil (~kneel@rockylinux/infra/neil)
[23:12:26] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[23:12:26] *** Joins: meti (~meti@user/meti)
[23:12:26] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[23:12:26] *** Joins: fxrs (~fxrs@192.227.212.130)
[23:12:26] *** Joins: tabakhase (tabakhase@user/tabakhase)
[23:12:26] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[23:12:26] *** Joins: RoadrunnerWMC (~Roadrunne@46.101.129.38)
[23:12:26] *** Joins: arza (arza@arza.us)
[23:12:26] *** Joins: n-st (~n-st@user/n-st)
[23:12:26] *** Joins: eloy (~quassel@2001:bc8:182c:650::1)
[23:12:26] *** Joins: Russell (russell@bnc4free/staff/russell)
[23:12:26] *** Joins: johnplos1 (~John_Plos@user/johnplosky)
[23:12:26] *** Joins: carlio (~carlio@static.62.204.34.188.clients.your-server.de)
[23:12:26] *** Joins: moonmoon (awoo@libera/staff/moonmoon)
[23:12:26] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[23:12:26] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[23:12:26] *** Joins: mobius (sid478273@id-478273.uxbridge.irccloud.com)
[23:12:26] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[23:12:26] *** Joins: niluje (~niluje@2a05:d012:f91:1700:6975:ef0b:def6:3bdd)
[23:12:26] *** Joins: Wegge (~wegge@user/wegge)
[23:12:26] *** Joins: Bato (~plauder@2001:bc8:182c:b39::1)
[23:12:26] <JordiGH> naquad: If you need something like ddd, in pudb you can open an ipython REPL and do matplotlib displays of your data.
[23:12:41] <SnoopJ> pudb +1
[23:12:47] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Quit: Leaving)
[23:12:50] <JordiGH> btw how do you pronounce it?
[23:12:52] <SnoopJ> I hear good things about JupyterLab's debugger, too
[23:13:02] <JordiGH> In that video I pronounced it like "Pud-Bee".
[23:13:10] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:13:10] *** Quits: csm3105 (~csm3105@31.4.128.67) (Client Quit)
[23:13:11] *** Emet-Selch is now known as Azem
[23:13:12] <SnoopJ> JordiGH, I've never had to but I would pronounce it like an initialism
[23:13:15] <JordiGH> But not like "p-ew! DB"
[23:13:25] <JordiGH> Oh, so you pronounce it like it stinks.
[23:13:35] <jinsun> lantech19446: also since you need to do it "manually" anyway, I'd also suggest just using normal .json() instead of ijson
[23:13:37] <Macuser> maybe I need .extend()
[23:13:37] * Macuser thinks
[23:13:39] <lantech19446> jinsun_: so what you're telling me is that my second line doesn't do what I think it does at all that if coalition in directory does not form a condition
[23:13:42] *** Joins: mickey8 (~user@user/mickey)
[23:13:58] <Macuser> nah
[23:14:17] *** Joins: Timvde (~tim@towely.vdeynde.com)
[23:14:17] <lantech19446> jinsun: I tried I couldn't get it to extract the results from the json getting it to parse it was easy enough but i couldn't go further
[23:14:33] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[23:14:36] *** Joins: Roey (~Roey@user/Roey)
[23:14:40] <naquad> and no other options except pudb?
[23:14:44] *** Joins: cliluw (~cliluw@47.147.73.223)
[23:14:57] <SnoopJ> 14:42 <SnoopJ> I hear good things about JupyterLab's debugger, too
[23:14:58] <JordiGH> idk maybe vscode has something?
[23:15:09] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:15:13] <JordiGH> Emacs has pretty good debugger integration too.
[23:15:21] <JordiGH> M-x praise-be-unto-emacs
[23:15:39] <JordiGH> But I don't know if you're ready to change religions.
[23:15:52] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:a1aa:66f1:e1b1:abb3)
[23:15:55] <SnoopJ> and you'd still have to pick a debugger, if I read that correctly :)
[23:16:02] *** Quits: nitchi[m] (~nitchimat@2001:470:69fc:105::1:8f53) (Ping timeout: 240 seconds)
[23:16:02] *** Quits: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4) (Ping timeout: 240 seconds)
[23:16:02] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Ping timeout: 240 seconds)
[23:16:02] *** Quits: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57) (Ping timeout: 240 seconds)
[23:16:02] *** Quits: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8) (Ping timeout: 240 seconds)
[23:16:02] <jinsun> lantech19446: okay, what did you try and why do you think it didn't work?
[23:16:09] <Batzy> i use lunarvim
[23:16:12] *** Quits: Tardar (~tardar@2001:470:69fc:105::1:4b40) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: james[m]123 (~jamesjame@2001:470:69fc:105::1:5aa1) (Ping timeout: 245 seconds)
[23:16:13] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: arnik[m] (~arnik@2001:470:69fc:105::1:8f4b) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: vitali64[m] (~notrealvi@user/vitali64) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: ktosiek (~ktosiek@2001:470:69fc:105::87ab) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: lola (~irelativi@2001:470:69fc:105::f015) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: Simon[m]123 (~srwalker1@2001:470:69fc:105::1:64ea) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: allegary (~allegary@apache/committer/gjm) (Ping timeout: 240 seconds)
[23:16:15] <JordiGH> SnoopJ: You'd use pdb with Emacs and let Emacs handle the display layer.
[23:16:23] <Batzy> it tells me things about my code
[23:16:23] <Batzy> idk
[23:16:26] *** Quits: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: capra[m] (~capramatr@2001:470:69fc:105::1:2280) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: miique (~miiquemat@2001:470:69fc:105::1:6901) (Ping timeout: 250 seconds)
[23:16:32] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: Hist (~histausse@2001:470:69fc:105::b91) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: Dominik[m] (~ddunglmat@2001:470:69fc:105::1:7799) (Ping timeout: 240 seconds)
[23:16:36] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: d1rewolf_x (~d1rewolfm@2001:470:69fc:105::1:74f2) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 256 seconds)
[23:16:38] *** Quits: e_i00[m] (~ei00matri@2001:470:69fc:105::1:6bd9) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: interestingname[ (~throwaway@2001:470:69fc:105::1:6560) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: M3RELATIVISM[m] (~irelativi@2001:470:69fc:105::1:741f) (Ping timeout: 252 seconds)
[23:16:39] *** Quits: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed) (Ping timeout: 250 seconds)
[23:16:39] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Ping timeout: 250 seconds)
[23:16:39] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 250 seconds)
[23:16:39] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Ping timeout: 250 seconds)
[23:16:39] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Ping timeout: 250 seconds)
[23:16:42] <JordiGH> Batzy: As long as you get a repl, it's a debugger.
[23:16:42] *** Quits: gonzo[m] (~gonzotchn@2001:470:69fc:105::1:9920) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: TransitusFluvii (~ingfix-2m@wikipedia/-Alabama-) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: mdk[m] (~mdk@python/psf/mdk) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb) (Ping timeout: 260 seconds)
[23:17:01] *** Joins: CoolerX (~CoolerX@user/coolerx)
[23:17:03] <SnoopJ> JordiGH, ah, it provides creature comforts like variable lists etc?
[23:17:03] *** Quits: pikabell[m] (~pikabellm@2001:470:69fc:105::1:6125) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Ping timeout: 268 seconds)
[23:17:03] <lantech19446> jinsun: I don't remember the exact code I had tried but it kept returning object at <genexp> or some crap instead of results
[23:17:59] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:18:03] <Wooble> SnoopJ: "it's easy, all you have to do is write 5K lines of elisp yourself and then you can have it display whatever you want."
[23:18:08] <Batzy> yep
[23:18:29] <Wooble> I *might* be cynical as a lapsed emacs fanatic ;)
[23:18:33] <jinsun> lantech19446: okay that means you still have ijson, it would be easier to just do contents.json() and get a normal dict and traverse that
[23:18:41] <SnoopJ> Wooble, I'm sympathetic to "a solution exists" but I can never keep track of which parts are that and which parts are actual functionality out of the box/with a plugin
[23:18:44] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:a1aa:66f1:e1b1:abb3) (Client Quit)
[23:18:48] <TML> jinsun: LOL - that's what I kept telling them
[23:18:54] <purplex> If i use os.walk on path C:\A\B recursively and it finds a file in path C:\A\B\C\D.txt then can i get the directory 'C' using some path library? 'C' would be top most directory in my search path i.e. C:\A\B where file was found..  currently i use string.split to work it out
[23:19:16] <lantech19446> jinsun: that was before I even knew ijson existed
[23:20:26] *** Quits: jinsun_ (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[23:21:06] <jinsun> TML: yeah I remember, the other problems were kinda simpler with ijson, but now this one needs doing it the dict way even with ijson, so now I'm also just falling back on .json
[23:21:21] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Ping timeout: 268 seconds)
[23:21:21] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Ping timeout: 268 seconds)
[23:21:21] *** Quits: Vipulk (~vipulk@user/vipulk) (Ping timeout: 268 seconds)
[23:21:21] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (Ping timeout: 268 seconds)
[23:21:49] *** Joins: crashrep (~crashrep@user/crashrep)
[23:22:06] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:22:18] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[23:22:33] *** Quits: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: macbook)
[23:22:44] <lantech19446> jinsun: TML: I'm not married to any particular way of doing it I just need to get it done if either of you can explain to me what the advantage of json over ijson is and maybe a very basic overview of what direction I need to go it would help this noob greatly
[23:23:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:23:31] *** Joins: MrFantastik (~f@12.244.8.98)
[23:23:50] *** Joins: hojasuelta (~hojasuelt@2806:102e:18:abc0:60e9:e960:2794:1af9)
[23:23:58] <TML> lantech19446: By going with contents.json(), it just becomes a Python dictionary, and you just access it by keys
[23:24:23] *** Joins: Atque (~Atque@user/atque)
[23:24:55] <lantech19446> TML: ok but it doesn't believe me that data, hits, and visitors are keys of the requests tree
[23:25:27] *** Joins: fikran (~fikran@user/fikran)
[23:25:38] <jinsun> lantech19446: both json and ijson will help you do it, ijson's advantage was that it gave you some fancy glom way of querying the json if your needs were simple
[23:25:53] <TML> lantech19446: I no longer have your code around, but I showed you some examples the other day
[23:26:27] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Quit: harpia)
[23:26:34] *** Joins: lakrass (~lakrass@user/lakrass)
[23:26:54] <jinsun> lantech19446: but now you want to do too many things at once, so you can't use the simple query strings from ijson, so just do it the normal way
[23:26:57] <lantech19446> TML: I know you did and they worked in ijson for me but not json that was part of what prompted me to change lol
[23:27:28] <TML> lantech19446: I sent you some examples that worked on a contents.json(), but again - I no longer have that stuff here.
[23:28:00] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[23:28:32] <lantech19446> TML: that's ok I don't expect you to save it, you're not my personal tutor I'm just in over my head on this
[23:28:53] *** Joins: harpia (~harpia@143.208.84.235)
[23:29:29] <parv> purplex, There is os.path.dirname( file-path ); pathlib has "parent" somewhere
[23:29:52] *** Joins: magla (~gelignite@d5366c9a.access.ecotel.net)
[23:30:03] <TML> lantech19446: Let me try rephrasing this: If you want some additional help trying to navigate the structure of your response, you're going to have to share a paste of the response structure so I can re-familiarize myself with it.
[23:30:05] *** Quits: Thanatos (~Thanatos@197.210.70.201) (Ping timeout: 250 seconds)
[23:30:09] *** Quits: sydbarret (~anton@static-186-121-195-86.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[23:30:22] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[23:31:03] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:31:07] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:31:21] <lantech19446> TML: I'm currently trying to rewrite it in with json instead of ijson so I guess I'll just come back when I get the point where I'm stuck again because then I'll have something to show
[23:31:29] <TML> fair enough
[23:32:05] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:32:31] <jinsun> lantech19446: the thing you were trying with hits can be done like `print([x["hits"] for x in content["requests"]["data"] if "coalition" in x["data"]])`
[23:32:47] <jinsun> lantech19446: where content is requests.get("https://lansdalelibrary.org/html/report.json").json()
[23:32:50] <purplex> parv: seems to return parent, but i want 'C' from path C:\A\B\C\D.txt given C:\A\B
[23:34:26] <lantech19446> jinsun: oh interesting, I didn't realize I could just append .json as a function on the end of contents like that
[23:34:43] <Macuser> stupid question: how do I make a function that just increments a bunch of variables but doesn't return anything
[23:35:10] <jinsun> lantech19446: well that is what people meant when they said use .json() instead of ijson
[23:35:11] <sn_fk_n> just dont return
[23:35:14] *** Joins: Thanatos (~Thanatos@197.210.70.201)
[23:35:20] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[23:35:31] *** Quits: masoudd_ (~masoudd@user/masoudd) (Quit: Leaving)
[23:35:42] <Macuser> oh. for some reason I thought every function had to have a return statement
[23:36:02] <Wooble> Macuser: it will return None if you don't return something else.
[23:36:21] <Wooble> Macuser: note that it's generally a Bad Idea for a function to mutate global state.
[23:36:30] <Macuser> i hear ya
[23:36:36] <lantech19446> jinsun: I'm sorry man it must have been really frustrating that I didn't understand that. I'm still really really new to all programming in general let alone python.
[23:36:44] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[23:37:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:37:58] <parv> purplex, os.path.split( os.path.split( '/a/b/c/doo.kdkl' )[0]  )[1]
[23:38:28] <jinsun> lantech19446: no problem, so now hopefully it is clear how to do it the .json way
[23:39:05] <lantech19446> more clear certainly, now I'm just trying to add in the other two keys I need it to print in that condition
[23:39:06] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[23:39:36] <purplex> parv: interesting how there's path.split, i am currently using string split, seems better approach
[23:39:53] *** Quits: nomic (~nomic@185.217.117.232) (Quit: Leaving)
[23:39:57] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[23:40:28] <parv> purplex, "better" only in the sense that one does not have to care for directory separator AFAIK
[23:41:00] <purplex> yes that could change i think
[23:41:17] <jinsun> purplex: pathlib.Path(r"C:\A\B\C\D.txt").relative_to(r"C:\A\B").parent ?
[23:41:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:42:15] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Remote host closed the connection)
[23:42:17] *** Joins: audiobirb (~audio@user/audio)
[23:42:38] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:42:49] *** macbook is now known as toadtoad
[23:43:09] <jinsun> you can also change your code to use Path().rglob("*") instead of  os.walk, so you don't have to convert string to Path all the time
[23:43:25] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[23:43:40] *** Quits: toadtoad (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Client Quit)
[23:44:19] <kungp> am i supposed to create one threading.lock for everything or make new ones for specific variables/contexts?
[23:44:26] <purplex> .parent.parent seems to work, jinsun
[23:45:41] *** Joins: nomic (~nomic@185.217.117.232)
[23:46:26] <jinsun> purplex: hmm, C is the .parent, double .parent would be B (which relative to C:\A\B would be .)
[23:46:26] <dba>  lantech19446  this is what you need `[x for x in data['requests']['data'] if 'coalition' in x['data']]`
[23:46:37] <jinsun> if you wanted that, okay, but you said you want C
[23:47:12] <purplex> jinsun, but i could have two different paths so it seems it won't just work
[23:47:12] <SnoopJ> kungp, it's hard to come up with universal rules, but it sounds like you should create a Lock for each thing you want to synchronize, if re-using an existing one is inappropriate or cumbersome.
[23:47:27] *** Quits: Logi_ (~quassel@83.229.86.115) (Quit: No Ping reply in 180 seconds.)
[23:47:40] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:48:01] <jinsun> purplex: okay I didn't understand your question at then I think
[23:48:16] *** Joins: used____ (~used____@5-12-254-132.residential.rdsnet.ro)
[23:48:17] <used____> .
[23:48:41] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 245 seconds)
[23:48:43] *** Joins: Logi (~quassel@83.229.86.115)
[23:49:05] <purplex> jinsun: e.g. i could have C:\A\B\C\D\E\F.txt and C:\A\B\C so now next dir is 'D'
[23:49:38] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 252 seconds)
[23:50:06] <jinsun> purplex: ah so you don't want the deepest level, you want the 1st level under the root
[23:50:20] <purplex> yes
[23:50:29] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[23:50:58] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[23:51:01] <used____> Hi. I am a rookie at py, porting a 9 loc program to tcl. I do not understand how this line of py works: v3_1 += numpy.dot(v4_3, v4_1) -- where v3_1 is vector 3 cols 1 row 4_3 is 4 cols 3 rows etc.
[23:51:21] <SnoopJ> used____, which part of that line has you confused?
[23:51:44] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:51:44] <used____> I don't understand how the 4_3 x 4_1 dot product yields a 3_1 vector
[23:51:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:52:00] <kungp> SnoopJ I think so too, thanks!
[23:52:03] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[23:52:23] <used____> v4_1 is to be read v1_4 sorry
[23:52:55] <used____> so 4_3 .dot. 1_4 -> 3_1
[23:52:57] *** Joins: ivii (~ivan@user/ivii)
[23:53:02] <lantech19446> jinsun: what do I do when python doesn't recognize hits or visitors as a key it only recognizes metadata and data inside requests
[23:53:06] <used____> the code works, it is not mine.
[23:53:19] <lantech19446> do I just search all of requests?
[23:53:43] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[23:54:16] <SnoopJ> used____, are sure those arrays are 2-dimensional? You can `print(arr.ndim)` to check the number of dimensions in an array. np.dot() does different things based on the dimensionality of the inputs (and is therefore extremely confusing)
[23:54:23] <SnoopJ> are you* sure
[23:54:32] <jinsun> purplex: not so nice, but .parents[-2] would work `pathlib.Path(r"C:\A\B\C\D\E\F.txt").relative_to(r"C:\A\B\C").parents[-2]` (parents[-1] would be . because it is a relative path)
[23:55:06] <SnoopJ> it should be matrix multiplication for 2D inputs, but those shapes would give an error in that case, so I suspect they may have more than 2 dimensions and trigger one of those other implementations of dot()
[23:55:51] <used____> The arrays are pretty sure what I said, def is: v3_4 = array([[0,0,1],[1,1,1],[1,0,1],[0,1,1]]) -- and the v3_4.T is used so it becomes v4_3
[23:56:05] *** Joins: mintograde (~mintograd@47.201.5.61)
[23:56:13] *** Joins: Celeo (~Celeo@user/celeo)
[23:56:18] <SnoopJ> used____, can you paste the complete program to https://bpa.st/+python ?
[23:56:31] <used____> I'll try to link. Just a second.
[23:56:32] <jinsun> lantech19446: well python would always "recognize" it if the data has those keys, if the data doesn't have the key what did you want to do?
[23:56:49] <used____> SnoopJ: https://gist.githubusercontent.com/miloharper/62fe5dcc581131c96276/raw/68145c6ac966617a8d1ef46f2d19df8909808620/short_version.py line 8
[23:56:51] <purplex> jinsun seems to raise IndexError(idx)
[23:57:17] <used____> And indeed the author abused all modes of .dot there...
[23:57:21] *** Joins: p-i-_ (~Ohmu@183.89.35.200)
[23:57:31] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[23:57:44] <SnoopJ> the author certainly isn't doing you any favors writing a 2.x program, heh.
[23:57:54] <used____> It is fairly ancient.
[23:58:30] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:58:31] <used____> https://numpy.org/doc/stable/reference/generated/numpy.dot.html fwiw
[23:58:37] *** Quits: minto (~mintograd@47.201.5.61) (Ping timeout: 240 seconds)
[23:58:44] *** Quits: np0x0zy (~np0x0zy@ipbcc2d6ef.dynamic.kabel-deutschland.de) (Quit: np0x0zy)
[23:59:04] <purplex> jinsun i think i could use os.path.split or path.parts to do it
[23:59:19] <lantech19446> jinsun: I need to extract data, hits, and visitors all of which exist under requests but for some reason it only recognizes data as a key
[23:59:22] <used____> The code has one syntax error from ancient cobwebs: put a () around the args of print
[23:59:24] <SnoopJ> used____, the input shapes to dot() are not what you think they are, I see them as (3,4) and (4,1) which does indeed result in (3,1). I think you missed the .T that transposes (4,3) to (3,4)
[23:59:28] <jinsun> purplex: if you give the same path then it will give indexerror yes, I was assuming you'll have a single path difference always
[23:59:37] <jinsun> purplex: yeah if split works use that
[23:59:38] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:59:38] <used____> SnoopJ: hmm
[23:59:42] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
