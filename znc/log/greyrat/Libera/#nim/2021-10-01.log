[00:00:00] <FromDiscord> <Elegantbeef> If you must make it more complicated `import std/strutils; var myArr: array[100, int]; myArray.applyit(it = 5)` 😀
[00:00:16] <FromDiscord> <Elegantbeef> No reason to make it more complicated
[00:00:22] <nrds> <06Prestige99> sequtils
[00:00:41] <FromDiscord> <haxscramper> quick, patch strutils to have applyit
[00:00:44] <FromDiscord> <Elegantbeef> Yea i'm dumb
[00:00:48] <Mister_Magister> but looping is like
[00:00:57] <Mister_Magister> even in C you can do it
[00:01:02] <FromDiscord> <Elegantbeef> like exactly what happens underneat
[00:01:04] <Mister_Magister> but not in nim
[00:01:07] <FromDiscord> <haxscramper> wel
[00:01:14] <FromDiscord> <Elegantbeef> you can do `array = [5, 5, 5, 5, 5]`
[00:01:17] <FromDiscord> <haxscramper> what do you mean even in C but not in nim
[00:02:13] <nrds> <06Prestige99> Seems like newSeqWith is _almost_ what he'd want
[00:02:14] <FromDiscord> <Elegantbeef> To be fair since we left out the `{.noinit.}` we're doing twice the work
[00:02:20] <nrds> <06Prestige99> https://nim-lang.org/docs/sequtils.html#newSeqWith.t%2Cint%2Cuntyped
[00:02:22] <Mister_Magister> int array[1000] = {0}
[00:02:26] <Mister_Magister> every element will be 0
[00:02:48] <FromDiscord> <treeform> @haxscramper I think `types.add &"class {objName}(Structure):" & loc() & "\n"` but be better but up to you
[00:02:50] <Mister_Magister> you don't need to use loop like neanderthal
[00:02:56] <FromDiscord> <haxscramper> we don't have special magic syntax to splice array initialization
[00:03:03] <Mister_Magister> shiet
[00:03:20] <nrds> <06Prestige99> it does default to 0 for ints if you were curious
[00:03:25] <FromDiscord> <Yardanico> @Mister_Magister https://nim-lang.org/docs/algorithm.html#fill%2CopenArray%5BT%5D%2CT
[00:03:25] <Mister_Magister> oh
[00:03:29] <nrds> <06Prestige99> Is the playground down?
[00:03:29] <Mister_Magister> hmm
[00:03:42] <nrds> <06Prestige99> nice Yard
[00:03:43] <FromDiscord> <haxscramper> In reply to @treeform "<@!608382355454951435> I think `types.add": they are literally all `loc("\n")`, so would be unnecessary clutter
[00:03:45] <Mister_Magister> but does it default to 0 with uint8
[00:03:46] <FromDiscord> <Yardanico> !eval echo "I'm not down"
[00:03:54] <FromDiscord> <Elegantbeef> I mean you can just do `proc newArrayWith[Idx;T](a: array[Idx, T], val: T): array[Idx, T] = for x in mitems(a): x = val`
[00:03:55] <FromDiscord> <Yardanico> @Mister_Magister all value types in nim are zero-initialized
[00:03:58] <nrds> <06Prestige99> 🤔
[00:04:04] <Mister_Magister> ah
[00:04:06] <Mister_Magister> thank
[00:04:09] <FromDiscord> <Yardanico> including uint8
[00:04:12] <FromDiscord> <Elegantbeef> "all value types" all memory is
[00:04:14] <Mister_Magister> oki
[00:04:32] <Mister_Magister> thank
[00:04:48] <NimBot> Compile failed: <no output>
[00:04:50] <Mister_Magister> just debugging some stuff and slowly going insane
[00:04:55] <FromDiscord> <haxscramper> In reply to @haxscramper "they are literally all": But I"m just testing things around, right now I'm mostly thinking about whether or not I should try to do `template <typename T> struct NimSeq() {}` and related iterator things
[00:04:56] <Mister_Magister> !eval echo "what"
[00:05:20] <FromDiscord> <Yandong Zhang> Hello everyone. I have a large float seq and I am wandering that how to save to a file effectively. In python's numpy, we can use the npy format.
[00:05:45] <FromDiscord> <Yardanico> @Yandong Zhang what do you mean by "effectively"? for binary serialization you can just use https://github.com/treeform/flatty
[00:05:48] <nrds> <12R2D299> 4GitHub: 7"Flatty - tools and serializer for plain flat binary files."
[00:05:57] <NimBot> Compile failed: <no output>
[00:06:07] <FromDiscord> <Elegantbeef> The simplest way non third party library way is to open a file stream write the length of the seq then iterate the seq writing each float
[00:06:19] <FromDiscord> <Yandong Zhang> I will try. Thank you
[00:06:45] <FromDiscord> <haxscramper> https://forum.nim-lang.org/t/8214#52833
[00:06:46] <FromDiscord> <Elegantbeef> Otherwise flatty, frosty, or any other file format saving is the best
[00:07:38] <FromDiscord> <Elegantbeef> So hax thanks again for mentioning the proper method of Nimscript interop, finally did get the Nimscript -\> Nim method finished and functioning
[00:07:55] <FromDiscord> <Elegantbeef> Have to do the otherway which will be "fun"
[00:07:58] <FromDiscord> <haxscramper> In reply to @haxscramper "But I"m just testing": `set[T]`, `seq[T]`, probably do something unholy with `mitems` and `items`
[00:08:28] <FromDiscord> <haxscramper> like mutable and immutable iterators over underlying data ...
[00:08:38] <FromDiscord> <haxscramper> I can pause/resume nim iterator evaluation
[00:08:44] <FromDiscord> <haxscramper> I can put then into closure iterators
[00:09:03] <FromDiscord> <haxscramper> but doing this in general case is basically reimplementing CPS transform
[00:09:21] <FromDiscord> <haxscramper> and `try: finally` blocks inside of nim iterators have to be ported somehow maybe
[00:09:44] <FromDiscord> <haxscramper> well, easiest way to get quick internal brain bleeding
[00:10:45] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[00:11:10] *** Joins: rockcavera (~rc@192.12.114.205)
[00:11:11] *** Quits: rockcavera (~rc@192.12.114.205) (Changing host)
[00:11:11] *** Joins: rockcavera (~rc@user/rockcavera)
[00:23:29] <FromDiscord> <Yandong Zhang> I met an error while trying the frosty\: "frosty.nim(1, 11) Error\: cannot open file\: std/genasts
[00:23:37] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:23:41] <FromDiscord> <Yandong Zhang> Can anyone help?
[00:23:55] <FromDiscord> <haxscramper> it seems like you need to use lastest nim devel
[00:24:00] <FromDiscord> <haxscramper> for frosty
[00:45:21] <FromDiscord> <haxscramper> In reply to @haxscramper "`set[T]`, `seq[T]`, probably do": I think the only way to provide `NimSeq<T>` instead of creating billion identically-named-but-actually-different types is to reimplement some part of the nim sequence API in C++
[00:50:10] *** Quits: beshr (~beshr@user/beshr) (Read error: Connection reset by peer)
[00:50:21] <FromDiscord> <Yandong Zhang> sent a long message, see http://ix.io/3As1
[00:50:21] <FromDiscord> <iffy (Matt Haggard)> I'm attempted to POST to a https://www.google.com address using and AsyncHttpClient and postContent, but I keep getting Additional info\: "Temporary failure in name resolution". I can ping [www.google.com](http://www.google.com) from the machine just fine. What are some other debugging steps I can try?
[00:50:26] <FromDiscord> <Yandong Zhang> It works, though not very efficient.
[01:45:14] <kinkinkijkin> is there a uint4 in nim? I could check but i wanna make sure here
[01:45:26] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[01:45:36] *** Joins: oprypin (~irc@pryp.in)
[01:53:53] <FromDiscord> <Elegantbeef> there is not but you can use bit fields
[01:54:21] <FromDiscord> <Elegantbeef> Assuming you want it in an object
[01:54:40] <kinkinkijkin> might just use uint8 then, just trying to fit colour information for an output interface that only accepts 4 bit colour
[01:54:59] <kinkinkijkin> but has col1 and col2 for every position
[01:55:03] <FromDiscord> <Elegantbeef> You also can do `0u8..(0b1111)u8`
[01:55:34] <FromDiscord> <Elegantbeef> It'd accept values 0-15 that are u8
[01:56:59] <kinkinkijkin> tbh the codesize penalty might be more than the datasize penalty of using u8 and just limiting 0-15
[01:58:03] <kinkinkijkin> im trying to make a media creation software to run on a particular device that comes with a max of 32MB ram in its largest configuration
[01:58:58] <kinkinkijkin> not terribly hard considering it's just a tracker and people did this all the time a while back, it's just that id like to assure cleanliness like they would've back when such a size was big
[02:43:07] *** Quits: max22- (~maxime@2a01cb08833598008dc43d9542692ebe.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:21:37] *** Quits: naquad (~naquad@79.135.214.17) (Ping timeout: 252 seconds)
[03:29:41] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[03:30:30] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[03:30:55] *** Joins: rockcavera (~rc@192.12.114.205)
[03:30:55] *** Quits: rockcavera (~rc@192.12.114.205) (Changing host)
[03:30:55] *** Joins: rockcavera (~rc@user/rockcavera)
[03:33:32] <Pyautogui> Question: The playground is not working for me. Did I miss something? It's showing a "Cloudflare Always Online snapshot", while saying it's offline.
[03:33:51] <FromDiscord> <Elegantbeef> Seems it's having troubles atm
[03:33:56] <FromDiscord> <Elegantbeef> Pmunch you around?!
[03:35:13] <FromDiscord> <Elegantbeef> Anyone have something they want to submit to TMWN? Last call!
[03:35:24] <FromDiscord> <Elegantbeef> (TMWN = This Month With Nim)
[04:23:20] <FromDiscord> <Jakes1403> What's that?
[04:23:49] <Pyautogui> A blog series, I think: https://nim-lang.org/blog.html.
[04:26:56] <FromDiscord> <Jakes1403> Oh cool
[04:27:33] <FromDiscord> <Jakes1403> If I had something finished I would put it out. Does a closed source steam game count?
[04:28:45] <Pyautogui> https://www.goodboygalaxy.com/ is closed source, and I think it got a place in August.
[04:29:33] <kinkinkijkin> if i had anything nearing production-readiness i would submit it
[04:30:33] <FromDiscord> <Elegantbeef> Yea closed source doesnt really matter it's just to showcase libraries,blogs, projects that use nim due to a forum post sometime last year
[04:32:24] <FromDiscord> <Jakes1403> Maybe next month I will try lol. My game is called Indirection, it has a store page on Steam. Still in the process of rewriting it in Nim
[04:32:43] <FromDiscord> <impbox [ftsf]> yay more nim games
[04:32:59] <FromDiscord> <Elegantbeef> Yay more nim users i've evangelized 😛
[04:33:15] <Pyautogui> Agreed! I loved the demo for GoodBoy Galazy.
[04:33:15] <FromDiscord> <Jakes1403> ElegantBeef actually got me into Nim
[04:33:48] <kinkinkijkin> im writing a nim game engine, occasionally
[04:33:59] <FromDiscord> <Elegantbeef> arent we all
[04:34:34] <FromDiscord> <Jakes1403> I'm using Godot atm.↵Used to make my own engines but wanted to focus more on actually having something to release
[04:34:50] <FromDiscord> <Jakes1403> With C++ of all things
[04:35:07] <kinkinkijkin> im also currently involved in a project making a demotool
[04:35:21] <kinkinkijkin> as in im heading the project and should have my ide open but im playing minecraft instead
[04:35:45] <Pyautogui> That should be a meme. 100%.
[04:36:19] <FromDiscord> <Jakes1403> Nim has definitely helped me increase the speed that my low level stuff gets made
[04:37:31] <kinkinkijkin> this is really funny because it's designed firstly as a tooling and systems language, and most of what i do with it is tooling
[04:37:35] <kinkinkijkin> afair
[04:38:58] <FromDiscord> <treeform> @juan_carlos Hey I am trying to run your benchmarks vs puppy, but I am getting this error: `undeclared identifier: 'SslError'`. We have done a ton of changes to puppy and I want to see if it will pass your tests now.
[04:41:36] <FromDiscord> <juan_carlos> What, which benchmark
[04:42:20] <FromDiscord> <treeform> harpoon's ones
[04:44:18] <FromDiscord> <treeform> Its defined here 2 years ago: https://github.com/nim-lang/Nim/blame/0d3af5454b66dfe4a8a7017030708a890207c658/lib/pure/net.nim#L110
[04:44:24] <FromDiscord> <juan_carlos> Are they annoying?, I can delete it, I did not remember I pushed that.
[04:44:25] <FromDiscord> <treeform> I don't get how its not working
[04:44:58] <FromDiscord> <treeform> you have import std/net which should give SslError
[04:45:05] <FromDiscord> <treeform> but some how nim just forgets about it?
[04:45:08] <FromDiscord> <juan_carlos> That was done during early dev as tinkering with code.
[04:46:30] <FromDiscord> <treeform> do the benchmarks run for you?
[04:47:04] <FromDiscord> <juan_carlos> I see it in devel https://github.com/nim-lang/Nim/blob/devel/lib/pure/net.nim#L110
[04:47:23] <FromDiscord> <treeform> oh I think I just needed to add --d:ssl sorry
[04:47:40] <FromDiscord> <juan_carlos> No idea, have you `-d:ssl` ?.
[04:49:06] <FromDiscord> <juan_carlos> Send PR deleting the bench if you want, I do not care, I just made to tinker and to learn benchy.
[04:51:44] <FromDiscord> <treeform> I just noticed you used puppy and it gave you errors.
[04:51:51] <FromDiscord> <treeform> We have fixed puppy so your benchmarks now run fine.
[04:52:05] <FromDiscord> <treeform> puppy is the slowest though 😦
[04:55:48] <FromDiscord> <juan_carlos> Good that is not a bug in Nim. puppy is better.
[05:01:53] *** Joins: neurocyte01328 (~neurocyte@185.117.69.4)
[05:01:53] *** Quits: neurocyte01328 (~neurocyte@185.117.69.4) (Changing host)
[05:01:53] *** Joins: neurocyte01328 (~neurocyte@user/neurocyte)
[05:03:47] *** Quits: neurocyte0132 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[05:03:47] *** neurocyte01328 is now known as neurocyte0132
[05:07:34] <FromDiscord> <statvoltron> sent a long message, see http://ix.io/3AsV
[05:10:52] <FromDiscord> <Elegantbeef> Why does it matter that treesitter doesnt run on JS? Arent you just going to be outputting JS, or do you want to embed the compiler into browser?
[05:14:17] <FromDiscord> <statvoltron> I'm writing an interpreter and I'd like the interpreter to run in the browser so I need the parser to run in the browser as well.
[05:14:51] <FromDiscord> <statvoltron> Its just a simple sort of calculator language
[05:16:41] <FromDiscord> <Elegantbeef> `std/jsffi` and `std/asyncjs` will help you there, though i'd probably say the easiest thing is to build it for wasm and write some JS interop
[05:16:41] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 252 seconds)
[05:18:52] <FromDiscord> <acek7> how is everyone?
[05:20:14] <FromDiscord> <statvoltron> I'm a bit confused.  Right now I am building the tree-sitter grammar for wasm.  The trick now is figuring out to use that wasm grammar from nim.  I was trying to write some js interop and then call that js from nim using `{.importc.}` but I'm tripped up by the libraries use of async.  Is there a better way to call wasm from nim?
[05:21:19] <FromDiscord> <Elegantbeef> I've never build for wasm but if you build the nim binary and the treesitter library for wasm(assumiiing it can) it should work without any changing afaik
[05:21:30] <FromDiscord> <Elegantbeef> I could be wrong in this assumption
[05:29:48] <FromDiscord> <Elegantbeef> Looking into it more idk if what i said is possible with treesitter, so i'll just go into the shush corner
[05:33:28] <FromDiscord> <statvoltron> I appreciate the help anyway.  I have very little idea what I'm doing here.  Perhaps to clarify a bit, tree-sitter compiles a grammar to c which can either then be used in c or compiled to wasm.   I'm trying to implement the interpreter for the language in nim.  Right now in nim I can use `nimtreesitter` (https://github.com/genotrance/nimtreesitter) to use the c version of my grammar in nim.  But if I js compile the resulting nim libr
[05:35:17] <FromDiscord> <Elegantbeef> Yea i dont know much about wasm, so my idea would be to compiler the nim code as wasm aswell, but dont know if that'd make it usable
[05:36:06] <FromDiscord> <Elegantbeef> Given that you can use sdl2/opengl with wasm i figure it's possible
[05:42:16] <FromDiscord> <statvoltron> I'll give it a shot, compiling `nlvm` now.  I guess to generalize the question a bit, let's say you were building some library in nim that uses some external c library.  How would you go about compiling that thing for the web?
[05:44:45] <FromDiscord> <Elegantbeef> I guess this would be how https://emscripten.org/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html#implement-a-c-api-in-javascript
[05:44:59] <FromDiscord> <Elegantbeef> Like i said i havent done WASM so hopefully someone with a brain comes into answer this
[05:56:30] <FromDiscord> <Jakes1403> In speaking of that, is Nim appropriate for programming language development?
[05:57:01] <FromDiscord> <Jakes1403> I haven't heard of many projects that use Nim for that, so not sure
[06:04:31] *** Joins: Guest6586 (~Guest65@2600:1700:74c4:a070:f0d1:3f2b:752:ad4a)
[06:04:40] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:05:15] *** Quits: Guest6586 (~Guest65@2600:1700:74c4:a070:f0d1:3f2b:752:ad4a) (Client Quit)
[06:14:09] <FromDiscord> <Elegantbeef> I'd say so https://gist.github.com/haxscramper/3562fa8fee4726d7a30a013a37977df6
[06:14:39] <FromDiscord> <Elegantbeef> It's self hosted on top of it so \:P
[06:52:07] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[07:01:35] <FromDiscord> <Gumber> In reply to @Jakes1403 "In speaking of that,": there's a #langdev  community channel
[07:23:08] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:43:50] <FromDiscord> <NullCode> is it possible to create nested `proc`s
[07:44:02] <FromDiscord> <NullCode> like nested `def func()` in python
[07:44:17] <FromDiscord> <NullCode> just to have a local func
[07:44:22] <FromDiscord> <NullCode> (edit) "func" => "proc"
[07:44:25] <FromDiscord> <NullCode> or is that useless
[07:46:32] <FromDiscord> <Elegantbeef> You can
[07:49:37] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 250 seconds)
[09:34:29] *** Joins: Onionhammer1 (~onionhamm@207-153-1-151.fttp.usinternet.com)
[09:35:21] *** Joins: dom96_ (~dom@mail.nim-lang.org)
[09:35:22] *** Joins: flynn (~mcbloch@user/flynn)
[09:35:42] *** Joins: lucerne9 (~lucerne@ip202.ip-51-178-215.eu)
[09:35:51] *** Joins: Mister_Magister_ (~Mister_Ma@user/mister-magister/x-2636733)
[09:36:14] *** Joins: koltrast_ (~koltrast@h77-53-57-114.cust.a3fiber.se)
[09:39:08] *** Joins: mst_ (~matthewt@vps-6c71e929.vps.ovh.net)
[09:41:24] *** Joins: Zevv_ (~Zevvvvv@185.238.131.12)
[09:41:44] *** Joins: def-- (~def-@static.238.114.9.176.clients.your-server.de)
[09:43:10] *** Joins: redj_ (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[09:44:18] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (*.net *.split)
[09:44:19] *** Quits: dom96 (~dom@mail.nim-lang.org) (*.net *.split)
[09:44:19] *** Quits: Zevv (~Zevvvvv@185.238.131.12) (*.net *.split)
[09:44:19] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (*.net *.split)
[09:44:19] *** Quits: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com) (*.net *.split)
[09:44:20] *** Quits: flynn1 (~mcbloch@user/flynn) (*.net *.split)
[09:44:20] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:44:20] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[09:44:20] *** Quits: redj (~quassel@76.69.197.62) (*.net *.split)
[09:44:20] *** Quits: mst (~matthewt@perl/shadowcat-mst/chainsaw-wielder) (*.net *.split)
[09:44:20] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[09:44:20] *** def-- is now known as def-
[09:44:20] *** Mister_Magister_ is now known as Mister_Magister
[09:44:20] *** Onionhammer1 is now known as Onionhammer
[09:44:20] *** lucerne9 is now known as lucerne
[09:51:39] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[09:56:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[09:56:21] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:01:53] <FromDiscord> <impbox [ftsf]> and it's not useless
[10:07:04] <FromDiscord> <Rika> its somewhat useful
[10:15:26] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[10:46:42] *** Joins: Vladar (~Vladar@46.162.2.53)
[10:51:12] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (Read error: Connection reset by peer)
[10:52:15] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[10:53:45] *** Joins: Vladar_ (~Vladar@46.162.2.53)
[10:55:39] *** Quits: Vladar_ (~Vladar@46.162.2.53) (Client Quit)
[10:56:19] *** Joins: nixfreak_nim[m]1 (~reversem3@2001:470:69fc:105::33d1)
[10:57:02] *** Quits: Vladar (~Vladar@46.162.2.53) (Ping timeout: 252 seconds)
[10:57:03] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Ping timeout: 252 seconds)
[11:00:17] *** Quits: neurocyte0132 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[11:04:07] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[11:04:43] *** Quits: mal``` (~mal``@static.38.6.217.95.clients.your-server.de) (Ping timeout: 252 seconds)
[11:05:11] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[11:15:20] *** Quits: redj_ (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Ping timeout: 250 seconds)
[11:15:43] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[11:47:12] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[11:53:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:55:52] *** Joins: pch_ (~pch@66.49.131.33)
[11:56:30] *** Quits: kinkinkijkin (~pch@66.49.131.33) (Remote host closed the connection)
[12:12:29] *** Quits: lain (~lain@172.16.254.xxx) (Ping timeout: 252 seconds)
[12:12:29] *** Quits: jfinkhaeuser (~jfinkhaeu@user/jfinkhaeuser) (Ping timeout: 252 seconds)
[12:12:41] *** Joins: jfinkhaeuser (~jfinkhaeu@user/jfinkhaeuser)
[12:13:17] *** Joins: lain (~lain@209.251.245.34)
[12:13:28] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Read error: Connection reset by peer)
[12:14:35] *** Joins: greaser|q (greaser@antihype.space)
[12:35:55] *** Joins: pch__ (~pch@66.49.131.33)
[12:37:40] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Ping timeout: 252 seconds)
[12:40:04] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[12:44:39] *** Quits: pch_ (~pch@66.49.131.33) (Ping timeout: 252 seconds)
[12:45:51] *** Joins: neurocyte0132 (~neurocyte@185.117.69.4)
[12:45:51] *** Quits: neurocyte0132 (~neurocyte@185.117.69.4) (Changing host)
[12:45:51] *** Joins: neurocyte0132 (~neurocyte@user/neurocyte)
[12:56:29] <FromDiscord> <dom96> Hey PMunch, is there anything we can do to make the playground more reliable? It feels like it's down quite often :/
[12:56:42] <PMunch> Is it down again?
[12:57:47] <FromDiscord> <dom96> yes
[12:58:06] <FromDiscord> <dom96> Pyautogui reported it above
[12:58:51] <PMunch> Ah, I wasn't on when they did
[12:58:59] <FromDiscord> <whisperdev> Is there any way how to ship a single exe with the libcrypto/libssl libs and cacert.pem?
[12:59:23] <PMunch> Part of it is that the server keeps running out of storage
[12:59:30] <PMunch> But that's not what happened this time
[13:00:19] <FromDiscord> <dom96> can we clear the storage periodically?
[13:04:51] <FromDiscord> <arnetheduck> In reply to @whisperdev "Is there any way": we use bearssl for our needs, which allows us to create fully standalone binaries that don't depend on libcrypto/libssl - see https://github.com/status-im/nim-chronos/blob/master/chronos/streams/tlsstream.nim
[13:05:31] <FromDiscord> <arnetheduck> bearssl gets compiled as part of "normal" compilation, so there are no issues with cross-platform support either
[13:12:59] <FromDiscord> <whisperdev> Thanks.I assume it's not as simple as just importing your bearssl package right?
[13:18:59] <FromDiscord> <arnetheduck> it should be that simple, though ymmv may vary if you use nimble (we don't)
[13:24:58] *** Quits: neurocyte0132 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[13:33:00] <NimEventer> New thread by Rforcen: Complex lib inline, see https://forum.nim-lang.org/t/8471
[13:37:14] *** Joins: neurocyte0132 (~neurocyte@185.117.69.4)
[13:37:14] *** Quits: neurocyte0132 (~neurocyte@185.117.69.4) (Changing host)
[13:37:14] *** Joins: neurocyte0132 (~neurocyte@user/neurocyte)
[13:39:10] <PMunch> @dom96, I've tried my best to automate the process
[13:39:31] <PMunch> But it's a bit of a whack-a-mole situation
[13:39:50] <PMunch> But it wasn't full this time
[13:40:00] <PMunch> Actually not quite sure what caused it to stop working
[13:40:12] <PMunch> Applied some updates and rebooted it and it seems to be back now
[13:40:43] <PMunch> It could do with some more RAM as well..
[13:40:49] <PMunch> That's harder to overcome
[14:12:37] <FromDiscord> <Rika> In reply to @arnetheduck "we use bearssl for": I’d say only do this if you have to ship OpenSSL anyway
[14:13:00] <FromDiscord> <Rika> Anyway? I mean otherwise
[14:39:09] <NimEventer> New thread by Miran: This Month with Nim: September 2021, see https://forum.nim-lang.org/t/8472
[14:54:54] *** Quits: neurocyte0132 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[14:55:04] *** Joins: neurocyte0132 (~neurocyte@185.117.69.4)
[14:55:04] *** Quits: neurocyte0132 (~neurocyte@185.117.69.4) (Changing host)
[14:55:04] *** Joins: neurocyte0132 (~neurocyte@user/neurocyte)
[15:04:01] <FromDiscord> <geeksforgeeksnitrr> sent a long message, see http://ix.io/3AuN
[15:05:27] <FromDiscord> <cabboose> What is algorithm
[15:05:34] <FromDiscord> <cabboose> I think you are in the wrong place
[15:12:58] *** Joins: naquad (~naquad@79.135.214.17)
[15:30:24] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:15] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[16:19:58] *** Joins: arkurious (~arkurious@user/arkurious)
[16:39:10] *** Quits: neurocyte0132 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[16:49:36] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[16:58:13] *** Joins: rockcavera (~rc@192.12.112.232)
[16:58:13] *** Quits: rockcavera (~rc@192.12.112.232) (Changing host)
[16:58:13] *** Joins: rockcavera (~rc@user/rockcavera)
[17:13:00] *** Joins: max22- (~maxime@2a01cb0883359800cfca41976f0516e3.ipv6.abo.wanadoo.fr)
[17:15:38] *** Joins: neurocyte0132 (~neurocyte@185.117.69.4)
[17:15:38] *** Quits: neurocyte0132 (~neurocyte@185.117.69.4) (Changing host)
[17:15:38] *** Joins: neurocyte0132 (~neurocyte@user/neurocyte)
[17:17:14] *** Joins: smvg (~smvg@85.218.163.88)
[17:20:25] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 252 seconds)
[17:26:08] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[17:27:44] *** Quits: smvg (~smvg@85.218.163.88) (Remote host closed the connection)
[17:35:12] *** Quits: neurocyte0132 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[17:35:48] *** Joins: neurocyte0132 (~neurocyte@185.117.69.4)
[17:35:48] *** Quits: neurocyte0132 (~neurocyte@185.117.69.4) (Changing host)
[17:35:48] *** Joins: neurocyte0132 (~neurocyte@user/neurocyte)
[17:39:41] *** Joins: neurocyte01325 (~neurocyte@185.117.69.4)
[17:39:41] *** Quits: neurocyte01325 (~neurocyte@185.117.69.4) (Changing host)
[17:39:41] *** Joins: neurocyte01325 (~neurocyte@user/neurocyte)
[17:41:16] *** Quits: neurocyte0132 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[17:41:16] *** neurocyte01325 is now known as neurocyte0132
[17:41:42] <FromDiscord> <arnetheduck> for anyone interested in the coordination of upgrading a large Nim codebase, here's how we plan on approaching it: https://discuss.status.im/t/the-road-to-nim-1-6/2305
[17:49:56] <FromDiscord> <reilly> I'm trying to assign to some anonymous procs, but it looks like it's complaining because the proc I'm assigning has side effects... Can I do anything about this?
[17:50:24] <FromDiscord> <reilly> To be more specific, `type mismatch: got <proc (s: ptr Stack): uint16{.gcsafe, locks: 0.}> but expected 'proc (s: ptr Stack): uint16{.noSideEffect, gcsafe, locks: 0.}'`.
[17:52:28] <FromDiscord> <cabboose> Thanks for sharing! 👏↵(@arnetheduck)
[17:54:44] <FromDiscord> <haxscramper> If procvar requires no side effect it means your callback also needs to have no side effects↵(@reilly)
[17:55:15] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Avz
[17:55:16] <FromDiscord> <haxscramper> But this is not recommended
[17:55:28] <FromDiscord> <ceramicskate0> First time using nim, I've been looking around google to see if I can find my answer but no luck for me. My question is can I set a process mitigation policy in nim. Ive tried using `emit{}` with the cpp from msdn but I keep getting `SetProcessMitigationPolicy()` not found. Does anyone have any assistance?
[17:58:01] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3AvA
[17:58:49] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3AvB
[17:58:51] <FromDiscord> <haxscramper> maybe there is a windows wrapper for this already
[17:59:02] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[17:59:29] <FromDiscord> <haxscramper> yes there is https://github.com/khchen/winim/blob/b7b32603f4ef672bc34405bc6200e8aab2c366b1/winim/inc/winbase.nim#L1977
[17:59:29] <FromDiscord> <Rika> In reply to @reilly "But my procvar type": you have to add nosideeffects to it
[17:59:54] <FromDiscord> <Marvel> Hi all, I'm new to nim and was wonder is there a way to import other files like you can in python?
[18:00:05] <FromDiscord> <Rika> yes? just import them
[18:00:23] <FromDiscord> <Rika> `import file_name` it checks the same directory as where the file is located
[18:00:46] <FromDiscord> <Marvel> oh ok thanks
[18:02:22] <FromDiscord> <Marvel> also
[18:02:36] <FromDiscord> <Marvel> whats the best way to read from a yaml file
[18:02:42] <FromDiscord> <Marvel> is there some sorta library for that
[18:03:01] <FromDiscord> <haxscramper> nimyaml
[18:03:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[18:06:51] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3AvC
[18:07:36] <FromDiscord> <reilly> (edit) "https://play.nim-lang.org/#ix=3AvC" => "https://play.nim-lang.org/#ix=3AvD"
[18:09:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:09:28] <FromDiscord> <haxscramper> you can do just
[18:09:43] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3AvE
[18:09:58] <FromDiscord> <haxscramper> you can define inner procs, it is not mandatory to declare `let x = proc() ....`
[18:10:52] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3AvF
[18:10:56] <FromDiscord> <haxscramper> you can't use `func` in procvar
[18:11:03] <FromDiscord> <haxscramper> still don't know why it is not allowed
[18:11:09] <FromDiscord> <haxscramper> but it is explicitly disallowed IIRC
[18:11:14] <FromDiscord> <haxscramper> don't ask me why
[18:11:29] <FromDiscord> <haxscramper> in procvar or for inline proc definitions
[18:12:26] <FromDiscord> <reilly> But my procs do have side effects. I've just been using `discard` in my examples since nobody wants to have to read all that.
[18:12:45] <FromDiscord> <haxscramper> ah, well
[18:12:50] <FromDiscord> <haxscramper> now we get to important parts
[18:13:07] <FromDiscord> <haxscramper> I thought you were getting some weird effect tracking bug
[18:13:21] <FromDiscord> <reilly> Yeah, give me a second to actually better describe what's going on here.
[18:13:22] <FromDiscord> <haxscramper> back to the first reply
[18:17:32] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3AvJ
[18:18:53] <FromDiscord> <reilly> > If procvar requires no side effect it means your callback also needs to have no side effects↵So, by "procvar" do you mean procvars in general, or the specific typing of these particular procvars? Because I don't specify `noSideEffect` in any of these types.
[18:24:41] <FromDiscord> <haxscramper> you can run this on latest devel, it shows exact reasons for side effects
[18:24:51] <FromDiscord> <haxscramper> like X calls Y calls Z so you got side effected
[18:25:05] <FromDiscord> <haxscramper> at least it might tell you why it thinks so
[18:25:24] <FromDiscord> <haxscramper> other than that, I don't think there is any clear way to fix it unless I just take the whole code and check it
[18:31:21] <FromDiscord> <reilly> But are all procvars required to have no side effects?
[18:33:29] <FromDiscord> <haxscramper> no
[18:33:49] <FromDiscord> <haxscramper> procvars are not required to have noSideEffect
[18:33:57] <FromDiscord> <reilly> Then why is it forcing me to have no side effects even though I never asked for that?
[18:34:11] <FromDiscord> <haxscramper> I don't know
[18:34:20] <FromDiscord> <reilly> That's wack.
[18:36:55] <FromDiscord> <reilly> http://ix.io/3Aw0
[18:37:25] <FromDiscord> <reilly> CTRL+F "#! How can I get this to stop complaining?"
[18:37:30] <FromDiscord> <reilly> (edit) ""#!" => "`#!" | "complaining?"" => "complaining?`"
[18:39:04] <FromDiscord> <haxscramper> nim error message at it's finest
[18:39:07] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Aw2
[18:39:14] <FromDiscord> <haxscramper> `/tmp/asdfasfdas.nim(133, 14) Error: type mismatch: got 'proc (m: ptr MemoryArray, a: uint16, b: uint16){.noSideEffect, gcsafe, locks: 0.}' for 'poke16' but expected 'proc (m: ptr uint8, a: uint16, b: uint16){.closure.}'`
[18:39:23] <FromDiscord> <haxscramper> you have different proc types
[18:39:30] <FromDiscord> <haxscramper> this is not even a question of side effects
[18:39:55] <FromDiscord> <reilly> Bruh.
[18:40:00] <FromDiscord> <cabboose> Oh I’ve hit that wall before
[18:40:01] <FromDiscord> <cabboose> Feels
[18:40:04] <FromDiscord> <cabboose> Feels bad
[18:40:12] <FromDiscord> <reilly> I,
[18:40:16] <FromDiscord> <reilly> forgot I made that change
[18:40:28] <FromDiscord> <haxscramper> and `ptr uint8` is not the same as `ptr array[N, uint8]`
[18:40:38] <FromDiscord> <haxscramper> you need to use `ptr UncheckedArray[uint8]`
[18:40:48] <FromDiscord> <reilly> I'm going to go shoot myself in the foot
[18:40:51] <FromDiscord> <haxscramper> but yeah, nobody here gives a shit about error messages
[18:41:20] <FromDiscord> <haxscramper> actually this could've been prevented if error message was like↵(@reilly)
[18:41:22] <FromDiscord> <haxscramper> optimized
[18:41:23] <FromDiscord> <haxscramper> for people
[18:41:25] <FromDiscord> <haxscramper> to see the error
[18:42:53] *** Joins: pro (~pro@user/pro)
[18:42:54] *** Quits: pro (~pro@user/pro) (Client Quit)
[18:42:56] <FromDiscord> <reilly> I made a type alias so that I wouldn't have to write `array[65536, uint8]` everywhere, and I just forgot to do that for the procvar type definitions..................... ... .. . . .. . . .  .  .    .....  . .. ..   . ...
[18:43:00] <FromDiscord> <cabboose> Yeah this
[18:43:12] <FromDiscord> <cabboose> I’ve hit this wall before many times in hind sight
[18:43:19] <FromDiscord> <cabboose> The error makes you think the issue is somewhere else
[18:43:39] <FromDiscord> <cabboose> My classic example is when my gully comments was causing compilation errors
[18:43:44] <FromDiscord> <cabboose> But 0 explanation on why
[18:43:54] <FromDiscord> <cabboose> That hurt \:’)
[18:44:01] <FromDiscord> <haxscramper> like
[18:44:03] <FromDiscord> <cabboose> At least that’s fixed 🙏
[18:44:05] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Aw5
[18:44:07] <FromDiscord> <haxscramper> case\:↵  thin in case↵  another thing
[18:44:25] <FromDiscord> <haxscramper> notcaseRANDOM COMMENT↵of one↵of two
[18:45:14] <FromDiscord> <reilly> Nim's case syntax is definitely, uh, unconventional
[18:45:35] <FromDiscord> <haxscramper> well, you can do it like
[18:45:46] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Aw6
[18:45:46] <FromDiscord> <haxscramper> like every single other language construct
[18:45:47] <FromDiscord> <haxscramper> indent after `:`
[18:45:54] <FromDiscord> <haxscramper> nothing special anywhere
[18:53:12] <FromDiscord> <reilly> I wish Nimsuggest:↵1. Had more helpful error messages↵2. Wasn't so slow↵3. Wouldn't randomly multiply itself hundreds of times and use 100% of my cpu
[18:53:35] <FromDiscord> <haxscramper> https://github.com/nim-lang/RFCs/issues/300
[18:54:07] <FromDiscord> <haxscramper> IC is suposed to be a solution to that
[18:54:17] <FromDiscord> <haxscramper> IC stands for incremental compilation
[18:55:18] <FromDiscord> <Yardanico> In reply to @reilly "I wish Nimsuggest: 1.": "3. Wouldn't randomly multiply itself hundreds of times and use 100% of my cpu" tbh don't remember the last time I've had this issue
[18:55:22] <FromDiscord> <Yardanico> and it's pretty fast for me too
[18:55:39] <FromDiscord> <Yardanico> about error messages - that's not specific to nimsuggest at all
[18:55:49] <FromDiscord> <haxscramper> it is still slow as hell for me
[18:56:02] <FromDiscord> <haxscramper> well, I try it periodically
[18:56:10] <FromDiscord> <haxscramper> and then turn off again
[18:56:25] <FromDiscord> <xflywind> I always turn off nimsuggest.
[18:57:17] <FromDiscord> <xflywind> It causes frustrating experience for me.
[18:57:41] <FromDiscord> <xflywind> (edit) "for" => "to"
[18:59:06] <FromDiscord> <reilly> In reply to @Yardanico ""3. Wouldn't randomly multiply": Consider yourself lucky! I had this happen just yesterday.
[18:59:14] <FromDiscord> <Yardanico> are you using nimsaem's extesion?
[18:59:36] <FromDiscord> <reilly> Is that an issue with the nimsaem one?
[19:00:03] <FromDiscord> <Yardanico> well, the kosz nim extension for vscode is effectively unmaintained
[19:00:19] <FromDiscord> <Yardanico> nimsaem is the maintained fork of kosz nim extension translated to Nim
[19:00:29] <FromDiscord> <Yardanico> and yes, there were fixed for nimsuggest in it
[19:00:35] <FromDiscord> <Yardanico> https://github.com/saem/vscode-nim
[19:00:37] <FromDiscord> <Yardanico> https://marketplace.visualstudio.com/items?itemName=nimsaem.nimvscode
[19:00:38] <nrds> <12R2D299> 4GitHub: 7"<No Description>"
[19:01:05] <FromDiscord> <reilly> That's exactly why I use the nimsaem one. Pure Nim and actively maintained.
[19:01:17] <FromDiscord> <xflywind> I think it is better to turn off nimsuggest and use tabnine.
[19:01:19] <FromDiscord> <Yardanico> then I don't know :eShrug1: :eShrug2:
[19:01:26] <FromDiscord> <Yardanico> In reply to @flywind "I think it is": I've tried TabNine and IMO it's not that good
[19:01:33] <FromDiscord> <Yardanico> it's only good for repetetive code, but for new code it's pretty bad
[19:01:46] <FromDiscord> <xflywind> yeah
[19:02:19] <FromDiscord> <reilly> Does TabNine support Nim?
[19:02:26] <FromDiscord> <Yardanico> it doesn't have to support a specific language
[19:02:28] <FromDiscord> <Yardanico> it's language-agnostic
[19:02:45] <FromDiscord> <Yardanico> it has some special features for popular languages, but Nim isn't one of them, but it still works
[19:02:57] <FromDiscord> <reilly> In that case, I can't imagine it works too well, especially on something relatively obscure like Nim.
[19:03:45] <FromDiscord> <Yardanico> well, it can learn from the codebase you're editing
[19:03:58] <FromDiscord> <Yardanico> maybe I should try it again, I haven't checked it out in a while
[19:08:40] <FromDiscord> <cabboose> It helps in the same way vs codes normal pattern recognition and suggestions would work
[19:08:42] <FromDiscord> <cabboose> I imagine
[19:08:58] <FromDiscord> <cabboose> Nimsuggest is still pretty painful
[19:08:58] <FromDiscord> <cabboose> It eats a shit load of memory too
[19:09:07] <FromDiscord> <cabboose> It’s like chromes step bro
[19:14:22] <FromDiscord> <Yardanico> @cabboose that's because nimsuggest is essentially the nim compiler constantly running
[19:14:58] <FromDiscord> <Yardanico> nim compiler uses quite some RAM when compiling (depends on the project size of course) but it's hard to notice because the compilation is usually pretty fast
[19:41:46] <FromDiscord> <alehander42> is https://github.com/Niminem
[19:41:47] <FromDiscord> <alehander42> around
[19:42:00] <FromDiscord> <alehander42> i want to talk with him about his python to nim project
[19:43:58] <FromDiscord> <Shoto> Has anyone made a matrix home server in Nim?
[19:44:14] <FromDiscord> <Shoto> I wanna see the code and maybe do something stupid with it lol
[19:46:52] <FromDiscord> <haxscramper> https://github.com/zevv/cpstest https://github.com/zevv/cpstest/blob/master/matrix.nim seems to be using matrix
[19:46:55] <nrds> <12R2D299> 4GitHub: 7"<No Description>"
[19:47:04] <FromDiscord> <haxscramper> someone was also working on matrix library
[19:47:10] <FromDiscord> <haxscramper> this one also uses CPS
[19:47:21] <FromDiscord> <haxscramper> https://github.com/nim-works/cps
[19:47:25] <nrds> <12R2D299> 4GitHub: 7"Continuation-Passing Style for Nim 🔗"
[19:48:02] <FromDiscord> <Shoto> Oh? What's that?
[19:48:12] <FromDiscord> <Shoto> Oh, I'm talking about the Matrix home server
[19:48:27] <FromDiscord> <Shoto> Like, Synapse https://github.com/matrix-org/synapse
[19:48:31] <nrds> <12R2D299> 4GitHub: 7"Synapse: Matrix reference homeserver"
[19:49:19] <FromDiscord> <cabboose> Ooye true.↵(@Yardanico)
[19:49:57] *** Joins: smvg (~smvg@85.218.163.88)
[19:50:02] <FromDiscord> <haxscramper> In reply to @Shoto Todoroki "Oh, I'm talking about": ah, you are talking about setting up matrix server for nim
[19:50:08] <FromDiscord> <cabboose> hissssss Python 🐍↵(@alehander42)
[19:50:09] <FromDiscord> <haxscramper> not writing someting matrix-related in nim
[19:50:28] <FromDiscord> <haxscramper> In reply to @Shoto Todoroki "Oh? What's that?": CPS is an async/threading etc. alternative
[19:50:48] <FromDiscord> <haxscramper> and lots of other things
[19:55:30] *** Joins: Vladar (~Vladar@46.162.2.53)
[19:56:11] <FromDiscord> <alehander42> @cabboose i sent him an email
[19:56:16] <FromDiscord> <alehander42> is it you
[19:57:11] <FromDiscord> <cabboose> Nein sorry friend
[19:57:25] <FromDiscord> <alehander42> ok
[19:57:32] <FromDiscord> <alehander42> i would be very surprised
[19:57:40] <FromDiscord> <alehander42> nice to meet you again
[19:58:42] <FromDiscord> <cabboose> Que? Nice to meet you compadre
[19:58:56] <FromDiscord> <Shoto> In reply to @haxscramper "ah, you are talking": No i mean is there a homeserver that has been implemented in Nim, lol
[19:59:12] <FromDiscord> <Shoto> Like, it's been written in Nim, and runs
[19:59:29] <FromDiscord> <Yardanico> don't think so
[19:59:40] <FromDiscord> <cabboose> Sounds like a good project shoot
[19:59:49] <FromDiscord> <cabboose> I look forward to your PR shoto!
[20:00:10] <FromDiscord> <cabboose> How exciting to get our own nim written matrix server
[20:04:26] <FromDiscord> <Rika> In reply to @cabboose "I look forward to": PR?
[20:04:38] <FromDiscord> <Rika> Project?
[20:21:18] <Zevv_> haxscramper: nah' that's nothing. it's one or to API calls
[20:21:25] <Zevv_> the protocol is pretty huge to implement.
[20:22:50] <FromDiscord> <juan_carlos> Does calling a `SIGTERM ` calls all destructors ?.
[20:28:17] <FromDiscord> <Rika> Should
[20:36:43] <FromDiscord> <Yardanico> In reply to @Rika "Should": it's SIGTERM, why "should"?
[20:36:58] <FromDiscord> <Rika> Because it’s a graceful exit on term isn’t it
[20:37:07] <FromDiscord> <Rika> It’s only immediate on kill
[20:52:11] <FromDiscord> <Gumber> well assuming Nim does the right thing when it handles a SIGTERM signal
[20:52:22] <FromDiscord> <Gumber> but I imagine that was an important thing to get right 🙂
[20:52:48] <FromDiscord> <Gumber> (edit) "Nim" => "Nim's runtime"
[21:03:01] <FromDiscord> <dom96> In reply to @haxscramper "CPS is an async/threading": It's not an alternative to async, it's an alternative to closure iterators
[21:04:53] <FromDiscord> <haxscramper> In reply to @dom96 "It's not an alternative": Well https://github.com/nim-lang/RFCs/issues/295 mostly compares it to async, await and threads
[21:04:59] <FromDiscord> <haxscramper> Not closure iterators specifically
[21:08:21] <FromDiscord> <dom96> Yeah, and it does so dishonestly. https://github.com/nim-lang/RFCs/issues/295#issuecomment-748117262
[21:10:30] <FromDiscord> <cabboose> Isn't it a good framework that things like async could be built off though?
[21:11:00] <FromDiscord> <haxscramper> In reply to @dom96 "Yeah, and it does": But you could do just the same things with cps you do with async and other stuff
[21:11:13] <FromDiscord> <cabboose> yeah but thats what I mean
[21:11:17] <FromDiscord> <dom96> sure
[21:11:24] <NimEventer> New post on r/nim by jabbalaci: int vs int32 vs uint32, see https://reddit.com/r/nim/comments/pzd29f/int_vs_int32_vs_uint32/
[21:11:24] <FromDiscord> <cabboose> like you can do any control flow stuff with it
[21:14:03] <FromDiscord> <Yardanico> ^probably int is faster than int32 because operating on 64-bit integers is faster on a 64-bit CPU than 32-bit integers?
[21:14:21] <FromDiscord> <Yardanico> or maybe the compiler does better optimizations for that combination
[21:14:46] <FromDiscord> <cabboose> The fastest was actually uint32
[21:15:02] <FromDiscord> <Yardanico> oh
[21:15:11] <FromDiscord> <Yardanico> did you post that?
[21:15:14] <FromDiscord> <cabboose> image.png https://media.discordapp.net/attachments/371759389889003532/893554164221751316/image.png
[21:15:15] <FromDiscord> <cabboose> nah
[21:15:19] <FromDiscord> <cabboose> I had a look at the source
[21:15:21] <FromDiscord> <cabboose> quite odd
[21:15:46] <FromDiscord> <Yardanico> well
[21:15:48] <FromDiscord> <Yardanico>  https://media.discordapp.net/attachments/371759389889003532/893554302059171950/unknown.png
[21:15:52] <FromDiscord> <cabboose> Just the int32 is odd \:/
[21:15:55] <FromDiscord> <cabboose> oh
[21:15:56] <FromDiscord> <cabboose> hahahahhaha
[21:15:57] <FromDiscord> <Yardanico> v3 with in32 is -d:release so it has runtime checks
[21:16:04] <FromDiscord> <Yardanico> v4 is uint32 with -d:danger so no runtime checks
[21:16:06] <FromDiscord> <cabboose> mylawd
[21:18:36] <FromDiscord> <Yardanico> ah wait no
[21:19:27] <FromDiscord> <Yardanico> I think it's just because uint32 doesn't have overflow checks
[21:19:29] <FromDiscord> <Yardanico> while int32 does
[21:27:50] <FromDiscord> <cabboose> huh. interesting
[21:37:57] <FromDiscord> <enthus1ast> @ceramicskate0\: you can install and import winim
[21:38:28] <FromDiscord> <enthus1ast> https://github.com/khchen/winim/blob/b7b32603f4ef672bc34405bc6200e8aab2c366b1/winim/inc/winbase.nim#L1977
[21:39:16] <FromDiscord> <enthus1ast> Then use it directly from nim
[21:42:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[22:01:23] *** Quits: max22- (~maxime@2a01cb0883359800cfca41976f0516e3.ipv6.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[22:20:07] <Mister_Magister> previously i asked how u fill array with single value
[22:20:16] <Mister_Magister> but what if i want array of x elements with value of 1 to x
[22:21:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:22:36] <FromDiscord> <Yardanico> you use a loop then :)
[22:22:51] <FromDiscord> <haxscramper> `for idx in 0 .. x: arr[idx] = idx`
[22:22:54] <FromDiscord> <haxscramper> you know
[22:22:55] <FromDiscord> <haxscramper> loops
[22:23:28] *** Quits: rockcavera (~rc@user/rockcavera) (Ping timeout: 252 seconds)
[22:23:36] <FromDiscord> <Yardanico> too hard
[22:23:47] <Mister_Magister> ye
[22:23:51] <Mister_Magister> i used loop
[22:23:53] <FromDiscord> <Yardanico> we must create fillarraywithnumbersfrom1tox nimble package
[22:24:01] <Mister_Magister> Yardanico: hell ye
[22:24:17] <Mister_Magister> or modify fill method to accept sequence
[22:24:20] *** Joins: max22- (~maxime@2a01cb088335980098b0bbe63a5a4455.ipv6.abo.wanadoo.fr)
[22:24:25] <Mister_Magister> so you could array.fill(0..x)
[22:25:29] <Mister_Magister> i might even do a PR
[22:25:31] <Mister_Magister> xd
[22:25:36] <FromDiscord> <Yardanico> that's not a sequence though, it's a range
[22:25:45] <Mister_Magister> ye okay
[22:25:49] <Mister_Magister> but you know what i mean
[22:25:57] <FromDiscord> <Yardanico> In reply to @Mister_Magister "i might even do": you can try, but I don't think it'll really get accepted]
[22:25:58] <FromDiscord> <Yardanico> (edit) "accepted]" => "accepted"
[22:26:09] <Mister_Magister> why xd
[22:26:17] <FromDiscord> <Yardanico> you can of course go ahead and make your better ™️ nim stdlib
[22:26:17] <Mister_Magister> its pretty nice idea
[22:26:19] <FromDiscord> <Yardanico> like some people do
[22:26:51] <Mister_Magister> naah
[22:26:55] <FromDiscord> <Yardanico> In reply to @Mister_Magister "why xd": because it can be solved with 1 or 2 lines of code
[22:27:40] <Mister_Magister> so can entire fill function
[22:27:42] <Mister_Magister> yet its there
[22:28:43] <FromDiscord> <Yardanico> ok, go ahead, I can't stop you from submitting a PR of course
[22:52:22] *** Quits: smvg (~smvg@85.218.163.88) (Remote host closed the connection)
[22:52:49] <FromDiscord> <jmgomez> Hey guys, how is going? Im wondering if Nim can be used as a embedded lang inside cpp (like you would do with lua)?
[22:52:57] <FromDiscord> <Gumber> Nimscript can
[22:53:19] <FromDiscord> <Gumber> https://github.com/h0lley/embeddedNimScript
[22:53:21] <nrds> <12R2D299> 4GitHub: 7"Using NimScript as embedded scripting language, enabling hot loading"
[22:53:47] <FromDiscord> <Gumber> I guess maybe some fairly exciting news? The CEO / lead dev of The Machinery game engine shares my sentiments about Rust being a poor language for game dev
[22:54:05] <FromDiscord> <Gumber> and also I believe I planted a seed in their head today about looking at Nim as a potential language to incorporate into the machinery
[22:54:30] <FromDiscord> <Gumber> so it's an exciting topic to stay tuned about / keep an eye out for because maybe it will be a thing they decide to explore in the near future 🙂
[22:55:06] <FromDiscord> <Gumber> and thanks to @geekrelief for all the work he's doing on TM bindings and porting examples to Nim - I'm sure as more TM users are exposed to his work the Nim evangelism in that community will pay dividends in brining new attention and users to Nim
[22:55:32] <FromDiscord> <jmgomez> In reply to @Gumber "https://github.com/h0lley/embeddedNimScript": That's pretty cool. Will look into it, Im looking for a lang to integrate into UE inside a Blueprint node. Thanks!
[22:55:35] <FromDiscord> <Gumber> and also thank you for pointing out the opportunity to spread awareness / knowledge of Nim to the leaders of that community - it was a superb callout this morning
[22:55:54] <FromDiscord> <Gumber> In reply to @jmgomez "That's pretty cool. Will": I hate the use case, but no problem 😉
[22:56:23] <FromDiscord> <Yardanico> In reply to @Gumber "and also thank you": can  I like, buy our machinery and explicitly say somewhere in the message "hey, I bought it because I want to use machinery with nim" so they see there's nim demand :D
[22:56:26] <FromDiscord> <Rika> Mister_Magister: `import sequtils; let a = toSeq(1..5)`?
[22:56:34] <FromDiscord> <Yardanico> @Rika that's not an array though
[22:56:37] <FromDiscord> <Yardanico> he wants to fill an array
[22:56:38] <FromDiscord> <Rika> oh did he say array
[22:56:47] <FromDiscord> <Gumber> In reply to @Yardanico "can  I like,": xD not so sure about that but you could certainly buy it and have full source access to it and build things with it and Nim
[22:57:07] <FromDiscord> <Gumber> and you could also get into the machinery discord server and talk about how much you think Nim would be a good fit for it / brag about the fact that you're using it with Nim
[22:57:16] <FromDiscord> <Gumber> and I mean, at the end of the day $50 for full source code of a AAA game engine
[22:57:21] <FromDiscord> <Yardanico> well yeah, it's just that I've done almost nothing with gamedev and don't think that a 3d game engine like that would be a good thing for me to start out
[22:57:27] <FromDiscord> <Gumber> that is probably the best architected / designed game engine to hit the market in a decade
[22:57:29] <FromDiscord> <Yardanico> i hope they'll add 2D soon(ish) :D
[22:57:32] <FromDiscord> <Gumber> is a pretty effing good deal if you ask me
[22:57:37] <FromDiscord> <Gumber> I'm sure someone will build a 2d renderer in userland
[22:57:43] <FromDiscord> <Gumber> after all everything is possible with TM in userland
[22:57:52] <FromDiscord> <Gumber> given its brilliantly thought out architecture and design
[22:57:52] <FromDiscord> <Yardanico> also what's with the naming (just curious)
[22:57:57] <FromDiscord> <Yardanico> our machinery/the machinery/machinery
[22:58:01] <FromDiscord> <Yardanico> which one
[22:58:04] <FromDiscord> <Yardanico> (edit) "which one ... " 03added "to use"
[22:58:06] <FromDiscord> <Gumber> our machinery is the name of the company
[22:58:09] <FromDiscord> <Gumber> the machinery is the name of the game engine
[22:58:12] <FromDiscord> <Yardanico> oh
[22:58:13] <FromDiscord> <Gumber> they're all the former bitsquid guys
[22:58:20] <FromDiscord> <Yardanico> yeah i don't know them, sorry :D
[22:58:23] <FromDiscord> <Gumber> or autodesk stingray guys depending on when you became aware of their old engine
[22:58:40] <FromDiscord> <Gumber> yeah no worries! I just know about it because well, I knew about bitsquid when I started getting into game engine dev
[22:58:50] <FromDiscord> <Yardanico> but yeah, you've convinced me to buy it just as an investment
[22:58:51] <FromDiscord> <Gumber> and I built a few projects relying on their foundation lib
[22:58:56] <FromDiscord> <Gumber> I think it's totally worth it
[22:59:15] <FromDiscord> <Gumber> like if you enjoy reading C / find well written C valuable especially in the sense of seeing it in a huge project like a game engine
[22:59:22] <FromDiscord> <Gumber> then it's a no-brainer IMO
[23:01:54] <FromDiscord> <Yardanico> In reply to @Gumber "and I built a": you should work in sales :D https://media.discordapp.net/attachments/371759389889003532/893581006697807912/unknown.png
[23:02:02] <FromDiscord> <Gumber> lmao
[23:02:29] <FromDiscord> <Gumber> I've been told I can be fairly convincing from time to time, but I enjoy writing code way more than trying to sell stuff to people
[23:02:33] <FromDiscord> <Gumber> it's so much easier xD
[23:16:56] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3Axn
[23:18:50] <FromDiscord> <Gumber> In reply to @geekrelief "Thanks for jumping into": I'm not sure what `vcc.exe` does in relation to setting up the env... I know you normally do it by  `Use Vcvarsall.bat to set a 64-bit hosted build architecture`
[23:19:11] <FromDiscord> <geekrelief> Yeah I tried running inside the developer console, but it made no difference.
[23:19:41] <FromDiscord> <Gumber> https://github.com/nim-lang/Nim/blob/8ccde68f132be4dba330eb6ec50f4679e564efac/tools/vccexe/vccexe.nim#L55-L105
[23:19:48] <FromDiscord> <Gumber> looks like there's a flag there you can pass
[23:21:19] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3Axo
[23:22:31] <FromDiscord> <Gumber> I'd need to see your bindings probably to understand fully what's going on
[23:22:36] <FromDiscord> <Gumber> along with the TM header you're trying to wrap
[23:23:34] <FromDiscord> <geekrelief> let me tinker around with this a little more
[23:23:38] <FromDiscord> <geekrelief> thanks
[23:23:41] <FromDiscord> <Gumber> np!
[23:31:27] <FromDiscord> <geekrelief> a little progress, I think I resolved the pointer truncation issue by including `_WIN64` as a define for the generator as opposed to when compiling the dll.  Not sure what's the difference in the binding output yet.  Yak shaving now cause nimterop doesn't like 'tm.gcc.nim` as a filename!
[23:40:29] <FromDiscord> <geekrelief> Are dots allowed in module names?  Or do they basically follow identifier rules when used as arguments to import and include?
[23:40:37] <FromDiscord> <Yardanico> they follow identifier rules
[23:40:45] <FromDiscord> <geekrelief> I see thanks!
[23:40:50] <FromDiscord> <Yardanico> because you can use modules as identifiers
[23:40:59] <FromDiscord> <Yardanico> import strutils↵↵echo strutils.strip("a b  ")
[23:41:23] <FromDiscord> <geekrelief> thx for the clarification
