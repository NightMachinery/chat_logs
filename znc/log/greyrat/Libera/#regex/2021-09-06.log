[00:12:28] *** Joins: ZZzz (~ZZzz@77.137.108.101)
[00:18:58] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 240 seconds)
[00:31:54] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Read error: Connection reset by peer)
[00:33:27] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[00:48:56] <ZZzz> Hello. Could somebody, please, help me to rewrite this regex (substituting matching of \n by matching empty lines ^$) so that it works with PCRE (grep --perl-regexp). Thank you!  https://stackoverflow.com/questions/69005195/gtksourceview-gedit-regex-matching-discrepancy
[01:02:25] <JohnDoe2> ZZzz what is the actual... question?
[01:04:10] <ZZzz> JohnDoe2: how the regex should look like to match paragraphs?
[01:04:30] <ZZzz> considering the limitations of being line based
[01:04:58] *** Joins: lavaball (felix@31.204.155.215)
[01:05:32] <JohnDoe2> ZZzz why is there that limitation? And if that's the case it's not quite possible without some outside logic or something - like a state variable
[01:07:05] <ZZzz> that's the way GtkSourceView syntax engine and also `grep --perl-regexp` both work
[01:07:23] <rewt> ZZzz, grep processes its input line by line, so it cannot match multiple lines... you could try  grep -z
[01:07:37] <ZZzz> it is possible, see here:  https://i.imgur.com/t26fPCN.png
[01:07:49] <JohnDoe2> ZZzz well in that case consider another tool? Or simply do something like ... ^[\S ]+$ ?
[01:08:15] <ZZzz>  https://www.reddit.com/r/gnome/comments/csjpxk/problem_writing_own_syntax_highlighting_for/ey5yerg?utm_source=share&utm_medium=web2x&context=3
[01:08:26] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:08:54] <JohnDoe2> ZZzz not sure I follow how that proves it's possible to match paragraphs on a line by line basis with just regex
[01:08:57] <ZZzz> that's exactly what I'm trying to do - rewrite the regex to rely on ^$ instead of \n\n... the problem - I'm not that good at it...
[01:09:18] <JohnDoe2> you will never have \n\n if your software can only read line by line
[01:10:12] <rewt> each \n is the end of a line; so \n\n is 2 lines, which cannot be matched if the text is processed 1 line at a time
[01:10:12] <ZZzz> can you catch an empty line?
[01:10:50] <JohnDoe2> ^$ I guess?
[01:10:53] <rewt> ^$ is the regex for an empty line
[01:11:02] *** Joins: lavaball (felix@31.204.155.215)
[01:11:06] <rewt> but it won't help if the tool only matches one line at a time
[01:13:30] <ZZzz> so how this guy got it working?  https://www.reddit.com/r/gnome/comments/csjpxk/problem_writing_own_syntax_highlighting_for/ey5yerg?utm_source=share&utm_medium=web2x&context=3
[01:16:11] <JohnDoe2> ZZzz did you try it out?
[01:16:24] <rewt> he's matching the blank line between the paragraphs, not multiple consecutive newlines
[01:18:07] <ZZzz> JohnDoe2: yes - grep --perl-regexp '^(\[\^)([^\]\s\p{C}]+)(\])\ (\P{C}*^$)' syntax.dar
[01:18:12] <rewt> look at the original question that's answering... he needs to define a regex for the start and put that in a <start>...</start> tag, and the end in a <end>...</end> tag ... by putting ^$ in the <end> tag, he's saying the syntax highlight ends when it encounters a blank line
[01:18:15] <ZZzz> but it doesn't work...
[01:19:00] <ZZzz> (my attempt above didn't work)
[01:19:05] <rewt> ZZzz, ^ means start of line, and $ means end of line
[01:19:44] <rewt> your regex wants to match the start of the line right after a space followed by 0 or more \P{C} ... that will never match
[01:19:48] <ZZzz> so ^$ is empty line, no?
[01:20:01] <rewt> ^$ is empty line only because ^ means start of line, and $ means end of line
[01:20:12] <rewt> match start of line, followed by end of line == empty line
[01:20:24] <ZZzz> and ^$^$ are two empty lines?
[01:21:36] <ZZzz> rewt: ok I understood why my regex above didn't work - thank you...
[01:22:07] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 252 seconds)
[01:22:17] <rewt> $ matches before the \n, so you'd need to match a \n between them
[01:22:34] <ZZzz> grep --perl-regexp '^(\[\^)([^\]\s\p{C}]+)(\])\ (\P{C}*\n^$)' syntax.dar
[01:22:45] <ZZzz> also didn't work... 
[01:22:56] <rewt> <+rewt> ZZzz, grep processes its input line by line, so it cannot match multiple lines
[01:22:57] <rewt> <+rewt> ZZzz, grep processes its input line by line, so it cannot match multiple lines
[01:23:14] <rewt> you could try  grep -z
[01:23:24] <ZZzz> hmm... no way to hack that?
[01:23:29] <rewt> you could try  grep -z
[01:23:54] <ZZzz> grep -z '^(\[\^)([^\]\s\p{C}]+)(\])\ (\P{C}*\n^$)' syntax.dar
[01:23:58] <ZZzz> also nothing...
[01:24:09] <rewt> you dropped the -P (--perl-regexp)
[01:24:31] *** Joins: lavaball (felix@31.204.155.215)
[01:24:33] <ZZzz> grep -z --perl-regexp '^(\[\^)([^\]\s\p{C}]+)(\])\ (\P{C}*\n^$)' syntax.dar
[01:25:16] <ZZzz> didn't work... but I actually need to find a solution for grep -P, as it is the way GtkSourceView works... which is my real target...
[01:26:21] <rewt> why do you still have that ^$ ?  that will probably match it like this: https://i.stack.imgur.com/cdhHn.png, because after "footnote.", there is a newline, and then a blank line after it
[01:26:55] <rewt> forget ^$ for your case; that other thing you linked to has nothing to do with what you're doing
[01:27:18] <ZZzz> ok... so how can I approach my problem?
[01:27:54] <rewt> if you want to match like this:  https://i.stack.imgur.com/nRhMA.png, you need to match 3 newlines:  grep -z --perl-regexp '^(\[\^)([^\]\s\p{C}]+)(\])\ (\P{C}*\n\n\n)' syntax.dar
[01:28:18] <rewt> "it!" has a newline after it, then the next empty line has a newline, and the 2nd empty line has a newline
[01:28:30] *** Joins: Neel (~Neel@pool-108-35-3-18.nwrknj.fios.verizon.net)
[01:28:46] <Neel> !rehelp
[01:28:46] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[01:28:49] <ZZzz> that's exactly what I want, just the engine is line based... 
[01:28:59] <rewt> which engine?  grep?
[01:29:15] <ZZzz> no GtkSourceView (which behaves as grep -P)
[01:29:29] <rewt> grep with -z matches what you want?
[01:30:20] <ZZzz> Neel: the regex is here: https://regex101.com/r/Zl3te8/1
[01:30:35] <ZZzz> rewt: no, also with -z it didn't work
[01:30:42] <ZZzz> a wait...
[01:31:10] <rewt> that link has a different regex...
[01:31:27] <ZZzz> grep -z --perl-regexp '^(\[\^)([^\]\s\p{C}]+)(\])\ (\P{C}*(?:\n(?!\n[\[\n])\P{C}*)*)' syntax.dar
[01:31:34] <ZZzz> this also didn't work...
[01:32:07] <Neel> How do I let a string pass all escape sequences and characters in Java except the invalid backslash?
[01:32:17] <rewt> if a tool processes its input line by line, there's nothing we can do about it;  there is no regex that will change that behaviour
[01:32:40] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[01:34:23] <rewt> Neel, you need to be more specific... what do you mean by "let a string pass all escape sequences"?  how do you define an invalid backslash?  please go to https://regex101.com/, post some sample text and your attempt, and then click 'save' on the top left and give us the link it gives you
[01:34:35] <Neel> "invalid\escape" should not pass but "valid\n@@@" should.
[01:37:38] <Neel> if my regex is "(.)*", it is matching the invalid as well as valid sequences. How do I filter out the invalid sequences?
[01:37:54] <ZZzz> rewt: thank you!
[01:44:14] *** Joins: re101-oyster-4 (~re101-oys@181.53.72.21)
[01:44:26] <re101-oyster-4> !rehelp
[01:44:27] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[01:44:31] <re101-oyster-4> https://regex101.com/r/05eTar/1
[01:44:36] <re101-oyster-4> i need change to
[01:44:42] <re101-oyster-4> [9:04 a. m., 22/6/2021] ingenierofelipeurrego: Concejo girardota
[01:44:42] <re101-oyster-4> [9:04 a. m., 22/6/2021] ingenierofelipeurrego: +57 301 4274629
[01:44:43] <re101-oyster-4> [9:04 a. m., 22/6/2021] ingenierofelipeurrego: El dovio
[01:44:43] <re101-oyster-4> [9:04 a. m., 22/6/2021] ingenierofelipeurrego: +57 312 7539991
[01:44:44] *** ChanServ sets mode: +o rebot
[01:44:45] <re101-oyster-4> to this
[01:44:45] *** rebot sets mode: +q-o *!*re101-oys@181.53.72.* rebot
[01:44:46] <rebot> 14re101-oyster-4: You've been muted for posting too many lines too quickly. You'll be unmuted in 0730s14.
[01:45:14] *** ChanServ sets mode: +o rebot
[01:45:15] *** rebot sets mode: -qo *!*re101-oys@181.53.72.* rebot
[01:45:32] <re101-oyster-4> Concejo girardota
[01:45:33] <re101-oyster-4> +57 301 4274629
[01:45:33] <re101-oyster-4> El dovio
[01:45:34] <re101-oyster-4> +57 312 7539991
[01:45:34] *** ChanServ sets mode: +o rebot
[01:45:35] *** rebot sets mode: +q-o *!*re101-oys@181.53.72.* rebot
[01:45:36] <rebot> 14re101-oyster-4: You've been muted for posting too many lines too quickly. You'll be unmuted in 075m14.
[01:46:50] <VectorX> re101-oyster-4 https://regex101.com/r/05eTar/2
[01:49:30] *** Quits: re101-oyster-4 (~re101-oys@181.53.72.21) (Quit: Client closed)
[01:50:34] *** ChanServ sets mode: +o rebot
[01:50:35] *** rebot sets mode: -qo *!*re101-oys@181.53.72.* rebot
[01:55:07] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[02:11:36] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[02:12:00] *** Joins: r3m (~launch@user/r3m)
[02:12:43] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[02:14:27] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:17:52] *** Joins: re101-insect-18 (~re101-ins@wsip-70-191-134-100.mc.at.cox.net)
[02:18:23] <re101-insect-18> Is there a way to have the tester highlight what was found rather than the whole line?
[02:19:08] <VectorX> that would depend on your pattern and what you are trying to match
[02:20:17] <re101-insect-18> I am trying to match the string cui but don't want it to find it in the word circuit for example.  I haven't figured out how to make that happen.  When I have a pattern, it finds the whole string but doesn't show me which one was found
[02:21:48] <re101-insect-18> string:  find this cui or this _cui but don't find it in circuit.  1st patter I have tried: .*[Cc][Uu][Ii].
[02:22:02] <re101-insect-18> .*[Cc][Uu][Ii].*
[02:25:28] <VectorX> !rehelp @ re101-insect-18
[02:25:28] <perlbot> re101-insect-18: Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[02:27:42] *** Quits: ZZzz (~ZZzz@77.137.108.101) (Quit: ZZzz)
[02:28:00] <re101-insect-18> how do it get the link?
[02:28:39] <VectorX> press the Save Regex link at the top left
[02:28:51] <re101-insect-18> .*[Cc][Uu][Ii].*
[02:29:39] <re101-insect-18> https://regex101.com/r/a6FiFF/1
[02:30:20] <VectorX> you can do something like this https://regex101.com/r/a6FiFF/2
[02:30:35] <re101-insect-18> basically I want to not have a match if the cui is in the middle of a particular word
[02:31:30] <re101-insect-18> I think that will work.  duh!  Thanks.
[02:32:40] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:33:29] <re101-insect-18> Thank you, +VectorX
[02:36:04] *** Parts: jasper_ (~user@styria.daemonized.org) ()
[02:46:15] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[02:50:38] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:02:50] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 252 seconds)
[03:05:25] *** Joins: BUSY (~BUSY@user/busy)
[03:18:41] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[03:23:40] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 240 seconds)
[03:36:49] *** Quits: Neel (~Neel@pool-108-35-3-18.nwrknj.fios.verizon.net) (Quit: Client closed)
[04:48:44] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[04:53:52] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[05:05:25] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 252 seconds)
[05:18:41] *** Joins: joo (~joo@80-62-117-58-mobile.dk.customer.tdc.net)
[05:18:41] *** Quits: joo (~joo@80-62-117-58-mobile.dk.customer.tdc.net) (Changing host)
[05:18:41] *** Joins: joo (~joo@fsf/member/joo--)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:27] *** Quits: vaasa (~vaasa@user/vaasa) (Quit: Be excellent to each other.)
[05:31:27] *** Joins: vaasa (~vaasa@user/vaasa)
[05:32:41] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:38:34] *** Joins: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se)
[05:38:34] *** Quits: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se) (Changing host)
[05:38:34] *** Joins: maetthew (~maetthew@user/maetthew)
[05:40:07] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:04:22] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-8d04-d072-beb-41fc.fixed6.kpn.net) (Ping timeout: 250 seconds)
[06:08:40] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[06:10:36] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[06:12:53] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[06:18:01] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[06:45:02] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 252 seconds)
[07:20:34] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-8d04-d072-beb-41fc.fixed6.kpn.net)
[07:22:22] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 252 seconds)
[07:25:07] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-8d04-d072-beb-41fc.fixed6.kpn.net) (Ping timeout: 252 seconds)
[07:27:55] *** Joins: bin101 (~bin101@user/bin101)
[07:33:05] *** Joins: re101-uguisu-66 (~re101-ugu@240e:468:2d20:b389:7923:1569:10c5:c2d9)
[07:33:14] *** Quits: re101-uguisu-66 (~re101-ugu@240e:468:2d20:b389:7923:1569:10c5:c2d9) (Client Quit)
[07:45:38] *** Quits: army (~aL@user/army) (Quit: Going offline, see ya! (www.adiirc.com))
[08:42:33] *** Parts: r3m (~launch@user/r3m) (WeeChat 3.3-dev)
[08:51:33] *** Quits: re101-insect-18 (~re101-ins@wsip-70-191-134-100.mc.at.cox.net) (Ping timeout: 256 seconds)
[08:56:53] *** Joins: r3m (~launch@user/r3m)
[08:57:57] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-237.090.186.pools.vodafone-ip.de)
[09:00:30] *** Quits: Firecatmon (~firecatmo@pa49-181-223-122.pa.nsw.optusnet.com.au) (Remote host closed the connection)
[09:01:33] *** Joins: Firecatmon (~firecatmo@pa49-181-223-122.pa.nsw.optusnet.com.au)
[09:42:56] *** Quits: Firecatmon (~firecatmo@pa49-181-223-122.pa.nsw.optusnet.com.au) (Remote host closed the connection)
[09:43:19] *** Joins: Firecatmon (~firecatmo@pa49-181-223-122.pa.nsw.optusnet.com.au)
[09:49:34] *** Quits: Firecatmon (~firecatmo@pa49-181-223-122.pa.nsw.optusnet.com.au) (Quit: Konversation terminated!)
[09:52:35] *** Quits: rebot (~death@about/regex/rebot) (Remote host closed the connection)
[09:52:36] *** Quits: digitok (~death@about/regex/digitok) (Remote host closed the connection)
[10:05:32] *** Joins: digitok (~death@about/regex/digitok)
[10:05:35] *** Joins: rebot (~death@about/regex/rebot)
[10:05:35] *** ChanServ sets mode: +v rebot
[10:24:49] *** Joins: re101-mist-94 (~re101-mis@223.178.114.145)
[10:27:25] <re101-mist-94> !rehelp https://regex101.com/r/7jIV9G/1
[10:27:25] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[10:27:57] <re101-mist-94> from the above link,, i need to check in my code that address should contain @ and .
[10:28:19] <re101-mist-94> even though if it contains two dots then also my regex should work and pass the address sucessfully
[10:28:23] <re101-mist-94> Please help here
[10:39:57] <VectorX> re101-mist-94 https://regex101.com/r/7jIV9G/2
[10:47:34] *** Quits: re101-mist-94 (~re101-mis@223.178.114.145) (Quit: Client closed)
[10:49:42] *** Joins: palasso (~palasso@user/palasso)
[11:16:33] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-8d04-d072-beb-41fc.fixed6.kpn.net)
[11:29:06] <Xavier7> hi, VectorX
[11:29:08] <Xavier7> does your code work?
[11:29:13] <Xavier7> https://regex101.com/r/7jIV9G/2
[11:29:33] <VectorX> it does what he asked for
[11:29:44] *** Joins: lavaball (felix@31.204.155.215)
[11:29:49] <VectorX> or she/they
[11:29:49] <Me-me> We specialise in being very literal.
[11:30:15] <VectorX> Xavier7 were you expecting something like this, https://regex101.com/r/7jIV9G/3
[11:30:16] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[11:30:51] *** Joins: lavaball (felix@31.204.155.215)
[11:31:52] <Xavier7> yes, VectorX
[11:32:25] <Xavier7> I would like to know the difference, of the first, with the second
[11:33:02] <Xavier7> i'm new to regex
[11:33:20] <VectorX> Xavier7 im about to hit the sack unfortunately, maybe someone around can explain it, anyway later
[11:33:42] * VectorX gets a sack and starts hitting it
[11:34:01] <Xavier7> ok, thanks anyway :)
[11:34:16] <Me-me> Xavier7: Most of the regex is in "lookaheads" which means it isn't advancing the "cursor".
[11:34:46] <Me-me> That means it's validating the conditions asked for but in a tester like re101 it'll just show it matching a position, rather than the actual text.
[11:34:57] <Me-me> Version /3 has .*$ on the end, which is doing the actual "matching" of the text, after that validation.
[11:35:02] <Me-me> Does that make sense?
[11:35:55] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:37:02] <Xavier7> 4[Me-me4] yes, thanks.
[11:37:04] <VectorX> Xavier7 just before I go though, given the scenario the $ in #3 could be redundant, since it would be assumed the test is a single line string so this would achive the same result without it, https://regex101.com/r/7jIV9G/4
[11:37:30] *** Joins: re101-wrasse-40 (~re101-wra@114.241.215.196)
[11:37:56] *** Quits: re101-wrasse-40 (~re101-wra@114.241.215.196) (Client Quit)
[11:38:48] <Xavier7> VectorX, thanks
[11:51:48] *** Joins: I-M (~id@78.183.96.41)
[11:54:58] <Xavier7> it works
[11:55:12] <Xavier7> //echo -a $regex(sabic.costing@ins.maersk.com,/^(?=.*\.)(?=.*@){9}/g)
[11:55:51] <Xavier7> but I can't get the info with $ regml (default, 1)
[11:58:23] <digitok> you have a couple of issues there
[11:58:46] <digitok> first, you're applying {9} to the lookahead, which doesn't make much sense. you probably wanted .{9}
[11:59:03] <digitok> adn i'm assuming that's intended to ensure the string is at least 9 chars
[11:59:04] <digitok> and*
[11:59:32] <digitok> second, mirc doesn't return the full match, and the regex doesn't contain a capture group 1
[12:00:31] <digitok> and if you placed a group around .{9}, you'd only capture the first 9 chars of the string
[12:00:42] <digitok> so you may want (.{9,})
[12:01:44] <Xavier7> ahh, that's why it doesn't return the text, $ regml (default, 1)
[12:02:15] <digitok> yep
[12:02:27] <digitok> //echo -a $regex(sabic.costing@ins.maersk.com,/^(?=.*\.)(?=.*@)(.{9,})/) $regml(1)
[12:03:30] <Xavier7> wow
[12:04:48] <Xavier7> the parenthesis () was missing
[12:05:39] <Xavier7> and why didn't you put / g
[12:05:53] <digitok> because we only need one match
[12:06:22] <Me-me> As we intend to test it on the entire string.
[12:06:59] <purplex> we, as in you and i both need it :p
[12:07:08] <Me-me> purplex! There you are.
[12:07:19] <Me-me> This man is you from the past. I nominate you to educate him.
[12:07:30] <digitok> :D
[12:07:56] <purplex> nice to meet you, Xavier7
[12:08:20] <purplex> i'm your future self haha
[12:08:31] <Xavier7> Thanks also
[12:08:34] <Xavier7> 4[purplex4]
[12:08:46] <Xavier7> :D
[12:09:11] <Xavier7> I'm already understanding
[12:09:30] <Me-me> Well if you think of anything else to ask, purplex here has got you covered.
[12:09:38] <Xavier7> thanks digitok, Me-me .. Cracks
[12:10:16] <purplex> they got your front and side, but i got your back
[12:10:24] <Xavier7> 4[purplex4] thanks, future me
[12:10:39] <Xavier7> 4[purplex4] xD
[12:19:17] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-8d04-d072-beb-41fc.fixed6.kpn.net) (Quit: WeeChat 3.2)
[12:23:08] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-b075-fa1b-5b38-aada.fixed6.kpn.net)
[12:27:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-b075-fa1b-5b38-aada.fixed6.kpn.net) (Ping timeout: 245 seconds)
[12:44:09] <Xavier7> https://regex101.com/r/GbvNBG/1
[12:44:23] <Xavier7> draw 9 numbers and start with 9 from all the text
[12:45:07] <Xavier7> thanks
[12:45:42] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[12:51:10] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:52:03] <purplex> Xavier7: looks like a good start with ^9 but what's with . and \d after that?
[12:53:16] <Xavier7> ^9\d{9}
[12:55:04] <Xavier7> I need to read the 9 numbers in the whole text
[12:55:55] <purplex> Did you get 9 numbers with ^9\d{9} ?
[12:56:29] <Xavier7> yes
[12:57:38] <purplex> but its not matching line 3
[12:58:29] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[12:58:31] <Xavier7> not
[12:58:57] <Xavier7> I need to know more characters
[12:59:02] <Xavier7> -_-!
[12:59:36] *** Quits: I-M (~id@78.183.96.41) (Read error: Connection reset by peer)
[13:01:35] <purplex> Remove the ^ from start, it find in whole text.
[13:01:50] <purplex> finds*
[13:02:49] <Xavier7> ok
[13:06:52] <Xavier7> https://regex101.com/r/IByn8n/1
[13:07:14] <Xavier7> I detect the first 9 anywhere
[13:12:28] <purplex> Was that the goal?
[13:13:54] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:15:05] <Xavier7> not
[13:16:18] <Xavier7> I chose a very difficult challenge, when I am still in my infancy. I will keep looking for more info .. and reading ..
[13:18:30] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[13:21:53] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-b075-fa1b-5b38-aada.fixed6.kpn.net)
[13:26:26] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-b075-fa1b-5b38-aada.fixed6.kpn.net) (Ping timeout: 256 seconds)
[13:32:09] <purplex> Which tutorial? Xavier7
[13:32:56] <Xavier7> there is a tutorial here, to see it
[13:33:00] <Xavier7> 4[purplex4]
[13:33:04] *** Parts: Xavier7 (~Xavier7@179.6.153.243) ()
[13:33:41] *** Joins: Xavier7 (~Xavier7@179.6.153.243)
[13:34:13] <purplex> there is? i see
[13:35:22] <Xavier7> I was seeing that that same page regex101 has the concept of all characters
[13:38:30] <Xavier7> quick reference
[13:38:41] <purplex> can you expain what's 'yes' and 'not' in https://regex101.com/r/IByn8n/1 ?
[13:40:16] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:41:15] <Xavier7> comment, that if it should leave or not
[13:42:37] <purplex> why do you want leave 9's in line 7 out of match but not 9's in line 1?
[13:45:34] <Xavier7> because starting from 9, it does not have 9 digits in total to its right in all that line
[13:45:46] <Xavier7> 9 numbers
[13:46:37] <purplex> ok now it makes sense what you want, brb in bit
[13:47:21] <Xavier7> I'm sorry, it wasn't very clear at the beginning
[13:48:46] <purplex> but line 4 has more than 9 numbers and you have 'yes' at it
[13:49:12] <purplex> so as line 6..
[13:50:03] <purplex> also re-count in line 2
[13:50:48] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[13:51:24] <Xavier7> Yes, it detects the 9 numbers, starting with it and if it has more numbers, fine. I think I should not have put that data, since it was obvious
[13:52:00] *** asynkron is now known as jackboot
[13:53:39] <Xavier7> Oops, I got complicated just
[13:58:50] *** Joins: lavaball (felix@31.204.155.215)
[14:01:21] *** Joins: Floflobel_ (~Floflobel@cosium-fo-152-18.fib.nerim.net)
[14:02:34] *** Quits: davido (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9) (Remote host closed the connection)
[14:03:41] *** Joins: davido (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9)
[14:10:02] *** Joins: re101-squid-12 (~re101-squ@2a00:23c5:c30c:ec00:d8a5:d647:da2a:9618)
[14:11:35] <re101-squid-12> Good Morning, I'm a RegEx novice and I'm having trouble getting my head around how to get to what I'm looking for. I'm pretty sure this is simple what i'm looking to do is take a string in this case a username e.g AzureAD\hello@domain.co.uk what i need to return is everything after AzureAD\
[14:11:46] <re101-squid-12> Would anyone be able to point me in the correct direction?
[14:11:51] *** Parts: Xavier7 (~Xavier7@179.6.153.243) ()
[14:11:59] *** Joins: Xavier7 (~Xavier7@179.6.153.243)
[14:20:58] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[14:21:20] <digitok> 07re101-squid-12, would you say you just want everything after the first \ in the string, without the need to validate anything?
[14:26:17] <digitok> well, here are a couple of options: 07(?<=\\).+ and 07[^\\]+$
[14:26:18] *** Quits: re101-squid-12 (~re101-squ@2a00:23c5:c30c:ec00:d8a5:d647:da2a:9618) (Quit: Client closed)
[14:26:28] *** Joins: re101-squid-12 (~re101-squ@2a00:23c5:c30c:ec00:d8a5:d647:da2a:9618)
[14:26:38] <digitok> and 07\\\K.+ if it's pcre
[14:26:47] <re101-squid-12> sorry it disconnected me! Yes just need everything after the \ without the need to validate
[14:27:15] <digitok> and are you using pcre?
[14:27:57] <digitok> of course, you can always just split the string if you're using a programming language
[14:28:48] <digitok> back in a bit though, but one of those options should work for you. i recommend #3 if you're using pcre
[14:28:55] <digitok> bbs
[14:29:45] *** Joins: re101-hound-14 (~re101-hou@150.228.101.236)
[14:29:51] <re101-hound-14> !rehelp
[14:29:52] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[14:29:58] <re101-hound-14> https://regex101.com/r/MWJOW5/1
[14:30:08] *** Joins: re101-bird-6 (~re101-bir@170.251.192.187)
[14:30:18] <re101-squid-12> its a java engine im no programmer this is actually for a print solution which it picking up bits in the username it doesnt need :(
[14:30:23] <re101-hound-14> Need to match from 4th tab character to 6th tab
[14:30:31] *** Quits: re101-squid-12 (~re101-squ@2a00:23c5:c30c:ec00:d8a5:d647:da2a:9618) (Client Quit)
[14:30:32] <re101-hound-14> H64I	MRFP
[14:30:43] <re101-hound-14> https://regex101.com/r/MWJOW5/1/
[14:30:46] <re101-hound-14> Please help
[14:32:19] <re101-hound-14> Need only H64I	MRFP
[14:49:41] *** Quits: re101-bird-6 (~re101-bir@170.251.192.187) (Ping timeout: 256 seconds)
[14:56:23] *** Quits: Xavier7 (~Xavier7@179.6.153.243) (Quit:  IRcap  8.72 )
[15:05:48] *** Joins: karakedi (~eAC53C340@user/karakedi)
[15:06:42] *** Joins: ZZzz (~ZZzz@77.137.108.7)
[15:08:30] <ZZzz> Hello, does anybody has an idea?  Thank you!    https://stackoverflow.com/questions/69073101/is-it-possible-to-match-a-paragraph-followed-by-two-empty-lines-in-a-new-line-ba
[15:12:39] *** Quits: ZZzz (~ZZzz@77.137.108.7) (Remote host closed the connection)
[15:18:15] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:18:19] *** Joins: ZZzz (~ZZzz@77.137.108.99)
[15:18:57] <ZZzz> sorry, got disconnected...
[15:27:49] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[15:31:17] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:34:37] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[15:43:25] <digitok> 07re101-hound-14, that would be H64I<tab>MRFP. regex won't remove the tab
[15:43:36] <digitok> the best you could do is capture them separately and then join them
[15:44:07] <digitok> something like https://regex101.com/r/MWJOW5/2
[15:44:18] <digitok> this assumes the values between tabs won't contain regular spaces either
[15:46:02] *** Joins: Firecatmon (~firecatmo@pa49-181-223-122.pa.nsw.optusnet.com.au)
[15:46:27] *** Quits: ToAruShiroiNeko (~eva@user/toarushiroineko) (Ping timeout: 240 seconds)
[15:47:32] <digitok> 07ZZzz, i think it has something to do with grep -z, but not sure
[15:49:07] <ZZzz> digitok: I try to get it working with GtkSourceView, not grep... grep -P can be used to test possible workaround as it behaves as GtkSourceView...
[15:49:39] <digitok> right, even less idea then
[15:49:49] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[15:50:53] <ZZzz> digitok: that was your regex BTW... it worked 30x faster then the older alternative I had... I'm not sure it is GtkSourceView specific...
[15:51:56] <ZZzz> digitok: a cool idea is needed...
[16:16:47] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[16:17:59] *** Joins: re101-bear-79 (~re101-bea@221.232.58.156)
[16:18:21] *** Quits: re101-bear-79 (~re101-bea@221.232.58.156) (Client Quit)
[16:35:03] *** Quits: ZZzz (~ZZzz@77.137.108.99) (Quit: ZZzz)
[17:05:52] *** Quits: shailangsa (~shailangs@host86-186-127-196.range86-186.btcentralplus.com) (Ping timeout: 252 seconds)
[17:20:05] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:35:13] *** Joins: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com)
[17:48:52] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 245 seconds)
[17:49:05] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[17:50:58] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:03:47] *** Joins: re101-zebu-25 (~re101-zeb@141.226.241.16)
[18:04:35] <re101-zebu-25> Hello there folks, I'd like to know how to match things like vector<something> but avoid any lines that include std::vector<something>
[18:10:49] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:13:05] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[18:14:39] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[18:17:42] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[18:33:10] *** Quits: re101-hound-14 (~re101-hou@150.228.101.236) (Quit: Client closed)
[18:34:50] <digitok> meaning don't match 07std::vector<something>? or don't match 07vector<something> if the line also contains 07std::vector<something>?
[18:45:56] *** Joins: jpsa (~user@c-va-c3ef24d846-78-1.tingfiber.com)
[18:55:57] <purplex> first one, digitok
[18:56:12] <purplex> its C++ my language
[18:56:28] <digitok> lol
[18:56:58] <digitok> then, assuming lookbehind is supported, probably 07(?<!std::)vector\w*
[18:57:33] <testuser[m]> Someone's been `using namespace std;`'ing :p 
[18:58:29] *** Joins: nvmd (~nvmd@user/nvmd)
[18:59:54] <digitok> not <
[19:01:35] <re101-zebu-25> Ah I see, I'll look into it
[19:01:53] <re101-zebu-25> And yeah, I'm cleaning up a clustertruck of `using namespace std;`
[19:05:39] *** Parts: jpsa (~user@c-va-c3ef24d846-78-1.tingfiber.com) (ERC (IRC client for Emacs 28.0.50))
[19:06:28] <purplex> actually there are really < and > there
[19:07:09] <purplex> so, (?<!std::)vector<\w*>
[19:07:27] <purplex> nope, 73(?<!std::)vector<\w*>
[19:10:57] <purplex> To be extra sure, 61(?<!std::)vector\s*<\s*\w*\s*> because syntax is flexible
[19:17:33] <digitok> how do the first 2 differ? the colour? :p
[19:32:12] *** Joins: re101-zonkey-19 (~re101-zon@80.120.161.68)
[19:32:18] *** Quits: re101-zonkey-19 (~re101-zon@80.120.161.68) (Client Quit)
[19:32:23] *** Joins: re101-llama-18 (~re101-lla@pd954cfde.dip0.t-ipconnect.de)
[19:32:50] <re101-llama-18> !rehelp
[19:32:50] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[19:35:17] *** Quits: re101-llama-18 (~re101-lla@pd954cfde.dip0.t-ipconnect.de) (Client Quit)
[19:37:05] <re101-zebu-25> purplex, that was pretty good overall
[19:39:22] <purplex> Thank you for choosing purple regexes!
[19:44:57] *** Joins: army (~aL@user/army)
[19:49:18] <digitok> i vote for colour 50
[19:49:39] <digitok> so it matches your nick
[19:56:57] <purplex> that color is premium access lol
[19:58:46] <digitok> :(
[20:07:30] *** Joins: cth (~Cthulchu@193.194.107.250)
[20:10:43] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[20:12:56] *** Joins: Guest40 (~Guest40@179.186.134.16.dynamic.adsl.gvt.net.br)
[20:13:15] <Guest40> !rehelp
[20:13:16] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[20:15:15] *** Quits: Guest40 (~Guest40@179.186.134.16.dynamic.adsl.gvt.net.br) (Client Quit)
[20:30:36] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:31:35] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[20:58:25] *** Joins: lavaball (felix@31.204.155.215)
[21:46:17] <re101-zebu-25> Good day folks, thanks for the help :)
[21:46:27] *** Quits: re101-zebu-25 (~re101-zeb@141.226.241.16) (Quit: Yeet)
[21:52:06] *** Quits: Floflobel_ (~Floflobel@cosium-fo-152-18.fib.nerim.net) (Remote host closed the connection)
[22:07:40] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 240 seconds)
[22:35:13] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[22:38:00] *** Joins: re101-sheep-47 (~re101-she@103.86.180.114)
[22:38:26] <re101-sheep-47> !rehelp
[22:38:26] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[22:40:19] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[22:41:48] <re101-sheep-47> !rehelp
[22:41:49] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[22:41:52] <re101-sheep-47> https://regex101.com/r/kTfXmN/1
[22:44:53] <purplex> sheep, question?
[22:46:46] <re101-sheep-47> looking to extract all numeric values 
[22:49:23] <purplex> Well it appears to match, where's the problem?
[22:49:50] <re101-sheep-47> but there are 2 matches 
[22:50:33] <re101-sheep-47> trying to get all the numeric values into one variable
[22:53:16] <purplex> It will always be two matches, you need to do replace.
[22:53:41] <re101-sheep-47> replace, sorry but I did not understand
[22:53:58] <purplex> https://regex101.com/r/kTfXmN/2
[22:54:39] <purplex> I mean the numbers are separated by letters, you can remove letters. 
[22:56:13] <re101-sheep-47> yes but I am using this extractor in JMeter and it will always return the characters only 
[22:56:14] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[22:56:49] *** Joins: cebor (~cebor@user/cebor)
[23:00:48] <purplex> What result are you expecting, 1 match of '56'?
[23:02:02] <re101-sheep-47> yes
[23:02:22] <re101-sheep-47> I know we will get 2 matches but checking how can I do that
[23:04:13] <purplex> Hm, "how can I do that", what is "that"?
[23:05:09] <re101-sheep-47> I am new to this 
[23:05:25] <re101-sheep-47> wanted to know if that can be achieved or not
[23:05:28] <purplex> You already got 2 matches in your https://regex101.com/r/kTfXmN/1
[23:06:02] <re101-sheep-47> Yes I do 
[23:06:32] <purplex> Matching '56' as single match is not possible, you can get result of '56' by replace
[23:06:59] <re101-sheep-47> Thank you for taking time for me and the help as well :) 
[23:07:12] <re101-sheep-47> I got that :)  many thanks
[23:07:40] <re101-sheep-47> I will check in the JMeter script if I can club the number of matches
[23:09:10] <purplex> Yes it works pretty much like searching a text. The replace/join/split to transform matches come after applying your regex.
[23:10:14] <purplex> Compared to a regular search, you have a pattern search in regex. That's the only difference.
[23:12:22] <re101-sheep-47> :)  Thank for information ...Have a great day ahead:)
[23:15:07] *** Quits: re101-sheep-47 (~re101-she@103.86.180.114) (Quit: Client closed)
[23:27:17] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[23:32:46] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 256 seconds)
