[00:00:28] <ColonelJ> I guess map/reduce/filter are discouraged in python generally
[00:01:49] <grym> ColonelJ: the language has shifted to prefer comprehensions, generally
[00:01:53] <grym> which do ehhhh the same thing
[00:02:01] <ColonelJ> yes that's what I was referring to
[00:03:15] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 265 seconds)
[00:04:23] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[00:09:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:13:49] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[00:14:42] *** Quits: medium_cool (~medium_co@2605:a601:a9ed:4300:8908:c49a:eaf1:c71) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[00:14:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[00:16:45] *** Joins: fikran (~fikran@user/fikran)
[00:18:22] *** Joins: brelod (~me@90.244.150.142)
[00:19:10] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[00:20:25] *** Quits: Cheaterman (~cheaterma@user/cheaterman) (Ping timeout: 252 seconds)
[00:22:23] *** Joins: Cheaterman (~cheaterma@user/cheaterman)
[00:25:29] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[00:25:48] *** Joins: medium_cool (~medium_co@2605:a601:a9ed:4300:34d4:c16a:6c5c:ed9)
[00:25:52] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[00:27:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:29:50] *** Quits: lack (~lack@user/lack) (Ping timeout: 265 seconds)
[00:31:38] *** Joins: lack (~lack@user/lack)
[00:31:48] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[00:32:03] <ColonelJ> is there a way to specify in format string that you want up to N decimal digits but only if they are necessary?
[00:32:26] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 260 seconds)
[00:32:31] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[00:33:41] <mawk> yes I think
[00:34:57] <mawk> with #
[00:35:24] <mawk> in theory
[00:35:39] <ColonelJ> I thought that this just adds the decimal point always
[00:36:02] <mawk> hmm no right
[00:36:10] <p-i-_> How come [f(a) for a in A] invokes f but (f(a) for a in A) doesn't?
[00:36:12] <mawk> so, the g option does what you want, but can also use the exponent notation which isn't great
[00:36:17] <mawk> but maybe it's good enough for you
[00:36:25] <ColonelJ> anyway I found a solution, which is simply to use round() :)
[00:36:34] <ColonelJ> before printing
[00:36:52] <mawk> yeah but that doesn't do the same thing as you asked
[00:37:00] <mawk> I guess
[00:37:05] <mawk> well it probably is the same in the end yes
[00:37:09] <mawk> but g is useful too, try it maybe
[00:37:18] <ColonelJ> it worked for hacking the hackerrank solution to work, so I'm happy anyway
[00:37:29] <mawk> '{:.010g}'.format(1.2345)
[00:38:56] <ColonelJ> I think that's counting the number of significant figures, not decimal places
[00:40:26] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:40:57] *** Quits: MaximB (~MaximB@87.68.165.194) (Quit: Client closed)
[00:43:31] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Ping timeout: 252 seconds)
[00:43:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:44:13] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:44:41] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[00:45:34] *** Quits: int (~int@0x4.cx) (Quit: see you :))
[00:45:36] <p-i-_> map(a.pop, ['sessions', 's_mia' ,'s_ams' ,'s_sing'])  # this fails to remove 4 keys from a dict, even tho' individually doing a.pop('sessionis') etc. works fine.
[00:45:36] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:47:11] <theprophet> p-i-_ does not pop only remove the last element from the list?
[00:48:03] <theprophet> p-i-_ are you looping trough the list?
[00:48:37] *** Joins: Bardon_ (~Bardon@user/Bardon)
[00:48:43] <p-i-_> theprophet: let's leave this for one of the experts
[00:48:46] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[00:48:47] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 245 seconds)
[00:49:08] <theprophet> p-i-_ no i am not suggesting anything, i am trying to understand the problem
[00:50:04] <theprophet> p-i-_ but ok
[00:51:37] <Repiphany> p-i-_: map is lazy so you have to actually run through the map by calling list on it or something
[00:52:01] <p-i-_> Thanks!
[00:52:08] <ColonelJ> the joys of side-effectful code
[00:52:35] <ColonelJ> but I'm here writing input() in list comprehensions haha
[00:52:56] <Repiphany> It would be much clearer just to do `for key in keys: del a[key]`
[00:53:18] <theprophet> Repiphany wow my deduction was right lol
[00:53:39] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:53:45] *** Joins: int (~int@0x4.cx)
[00:53:47] *** Quits: medium_cool (~medium_co@2605:a601:a9ed:4300:34d4:c16a:6c5c:ed9) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[00:54:59] <p-i-_> theprophet: Repiphany contributed intel. You contributed spam.
[00:55:21] *** Joins: Maciej (~maciej@2001:470:69fc:105::ed7d)
[00:55:35] <Omega037> So I have a set of functions which act on a DataFrame, either making changes in place (inplace=True) or returning a copy with the changes (inplace=False).
[00:55:41] <theprophet> p-i-_ i asked, i did not suggested anything, how is that spam?
[00:55:43] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[00:55:52] <p-i-_> Yes, 10 minutes after "Grym: ColonelJ: the language has shifted to prefer comprehensions, generally"
[00:55:55] <Omega037> However, I also want to write out the changes to a file, which I do by simply passing in a filename to the function (if None then no write)
[00:55:55] <p-i-_> and boom
[00:56:12] <p-i-_> Yes, much cleaner not to try to one-liner it.
[00:56:42] <theprophet> p-i-_ and btw its not my fault newbie like me knows more then you do about simple itteration.
[00:57:07] <Omega037> However, I think it might make more sense to combine all these error files into one.  Since I want to avoid multiple returns (when inplace=False), should I just send in an open file stream?
[00:57:20] <Omega037> Or have them write with append (harder to do with dataframes)
[00:57:48] <Omega037> I suppose I could send in a list and have it modify that, then write it all later?
[00:58:05] <Omega037> None of these seem like "good" patterns
[00:58:12] *** Parts: fmlatghor (~lcoogan@2601:5cd:8100:2890::1) (WeeChat 3.2)
[00:58:38] <p-i-_> Can anyone explain why [f(a) for a in A] invokes f but (f(a) for a in A) doesn't?
[00:59:05] <bjs> p-i-_: well, it does invoke it... once you iterate over the object.  (... for ... in ...) makes a generator object
[00:59:10] <ColonelJ> p-i-_: because the first one generates a list (actually computes the elements) and the second one just produces a generator
[00:59:15] <The-Compiler> p-i-_: because the former is a list comprehension which is evaluated immediately, and the latter is a generator expression which is evaluated lazily
[00:59:36] <bjs> p-i-_: it's similar to `def noname(): for a in A: yield f(a)`  calling this function doesn't invoke f either... until you iterate
[00:59:56] <The-Compiler> p-i-_: and FWIW I'll have to agree with theprophet - be considerate of others who are trying to help (or just trying to understand your question in order to learn something!)
[01:00:41] <Omega037> Hmm, seems like sending in an error_list to each function to be appended to "should" work in theory
[01:01:03] <Omega037> But something is screaming at me not to treat Python like it has real pointers
[01:02:06] <bjs> Omega037: "real" pointers?
[01:02:27] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[01:02:30] <The-Compiler> theprophet: the issue earlier wasn't the a.pop, since that removes an element of the 'a' dict (it doesn't remove anything from the list). But map returns a lazily evaluated generator, hence pop was never actually called
[01:03:05] <Omega037> bjs, pass by reference vs pass by value
[01:03:19] <theprophet> The-Compiler ohhh that makes sense.. good info. thank you.
[01:03:25] <The-Compiler> Omega037: seems fine to me. Nothing really is pass by value in Python.
[01:03:31] <bjs> Omega037: I'm not really sure what the point is you're trying to make with respect to pointers here
[01:03:46] <Omega037> I am basically asking if it is unsafe
[01:03:54] <The-Compiler> Omega037: mutable vs. immutable is probably a much better distinction for Python code
[01:03:57] <Omega037> Or is this the correct way to handle the situation
[01:04:17] <Omega037> Passing the same list into each function to collect errors but not explicitly returning it
[01:04:20] <bjs> Omega037: well the things you append to the error_list will be put in the list,  not a copy
[01:04:28] *** Joins: ShArkZ (sharkz@user/sharkz)
[01:04:35] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:04:36] <bjs> Omega037: yes it's perfectly fine for functions to mutate (e.g. lists) from inside the function
[01:05:12] *** Quits: stdout (~stdout@50.115.255.72) (Quit: Leaving)
[01:06:13] *** Quits: Bardon_ (~Bardon@user/Bardon) (Ping timeout: 252 seconds)
[01:06:46] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Ping timeout: 252 seconds)
[01:06:59] *** Joins: rajkosto (~rajkosto@93-87-97-127.dynamic.isp.telekom.rs)
[01:07:03] <altendky> grym: were you working with actual APIs?  or just a schema?  i'm starting to dig into why i'm getting empty output from both sphinxcontrib-openapi and sphinxcontrib-redoc and my guess is that i only have a schema, no paths.
[01:07:32] *** Joins: BenMcLean (~BenMcLean@2601:300:4080:6230:21cc:af0d:598c:a743)
[01:08:11] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[01:08:19] *** Joins: Bardon (~Bardon@user/Bardon)
[01:08:25] <BenMcLean> Hello. I am trying to figure out what would be the easiest way using Python to parse out the metadata from PNG images
[01:08:47] <BenMcLean> While I do a lot of programming in other languages such as C#, I am rather inexperienced with Python
[01:08:50] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-158.dyn.luxfibre.pt.lu) (Ping timeout: 260 seconds)
[01:09:05] <The-Compiler> BenMcLean: what kind of metadata?
[01:09:24] <The-Compiler> BenMcLean: for high-level stuff (say, image dimensions or so), probably Pillow
[01:09:27] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[01:09:45] <BenMcLean> It is for Pico-8 games actually, which are distributed as .PNG files
[01:09:48] <The-Compiler> BenMcLean: for low-level stuff I like https://github.com/d0c-s4vage/pfp which can use the template definitions from https://www.sweetscape.com/010editor/
[01:09:50] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[01:10:38] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:11:13] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[01:11:26] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[01:11:35] <The-Compiler> https://formats.kaitai.io/png/python.html is something similar which is a bit more open
[01:11:50] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[01:12:12] <The-Compiler> (but I love 010 editor personally, despite it being not free, neither the beer nor the freedom kind)
[01:12:26] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[01:12:30] <deniska> BenMcLean: seems like pico 8 stores data as lower bits of pixel values, pillow allows you to read pixel data
[01:13:11] <BenMcLean> deniska, I am looking through the pico8 manual trying to find that info
[01:13:31] <deniska> BenMcLean: that's what I found https://pico-8.fandom.com/wiki/P8PNGFileFormat
[01:13:36] <The-Compiler> BenMcLean: https://pico-8.fandom.com/wiki/P8PNGFileFormat links to a Python library at the bottom already FWIW :)
[01:13:47] <The-Compiler> https://github.com/dansanderson/picotool
[01:13:52] <BenMcLean> basically i am trying to make a python script for running Pico8 games on Retropie that'll make all your pico8 cartridges show up in a menu in EmulationStation on RetroPie with all your cartridge labels and metadata in there
[01:14:20] <BenMcLean> The-Compiler wow that may already have everything I need
[01:14:21] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:3100:2071:52b6:bf1e) (Quit: Leaving)
[01:14:42] <The-Compiler> and for general image manipulation and such, Pillow is great
[01:16:19] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[01:16:49] <BenMcLean> thanks!
[01:18:40] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:19:52] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:2895:779c:652e:9cb8)
[01:20:45] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Ping timeout: 260 seconds)
[01:22:18] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-158.dyn.luxfibre.pt.lu)
[01:28:28] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[01:28:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[01:28:57] <aphysically> huh, I think I found a bug in rich
[01:29:14] <aphysically> but it's simple enough that I feel like I must be doing something wrong
[01:29:19] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:30:55] *** Quits: greedom (~greedom@2001:16b8:2e11:4b00:7779:9b55:b8f5:1ce0) (Remote host closed the connection)
[01:31:51] *** Joins: greedom (~greedom@2001:16b8:2e11:4b00:7779:9b55:b8f5:1ce0)
[01:32:43] <aphysically> it looks like disabling the header causes the header box style to leak into the main body of the table, at least with the default style: https://bpa.st/5MCQ
[01:32:51] <aphysically> f.ex https://i.imgur.com/aAmxtin.png
[01:34:31] *** Joins: nomic (~nomic@185.192.69.176)
[01:38:34] <p-i-_> BenMcLean: Something like im = PIL.Image.open('foo.png'); arr = np.array(im) and now you have the raw pixel values.
[01:39:40] <p-i-_> so arr[0,0,1] is the leftmost pixel's green component
[01:39:53] <p-i-_> *topleftmost
[01:41:21] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 265 seconds)
[01:42:18] *** Quits: rajkosto (~rajkosto@93-87-97-127.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[01:42:58] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:44:10] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-158.dyn.luxfibre.pt.lu) (Ping timeout: 252 seconds)
[01:46:47] *** Joins: smvg (~smvg@85.218.163.88)
[01:49:14] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-158.dyn.luxfibre.pt.lu)
[01:56:54] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[01:58:40] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 260 seconds)
[01:59:12] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net)
[02:00:41] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[02:03:20] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-158.dyn.luxfibre.pt.lu) (Ping timeout: 260 seconds)
[02:08:36] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:09:43] *** Joins: csevast (~csevast@79.103.159.103.dsl.dyn.forthnet.gr)
[02:10:12] *** Quits: csevast (~csevast@79.103.159.103.dsl.dyn.forthnet.gr) (Client Quit)
[02:10:47] <foo> Does anyone see anything wrong with this? Getting some odd behavior. api_response[k] = arrow.get(v).format() if isinstance(v, datetime.datetime) else v
[02:11:23] <foo> huh, it works fine in ipython.
[02:13:13] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[02:13:33] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[02:14:15] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-53.dyn.luxfibre.pt.lu)
[02:17:08] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[02:17:46] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[02:19:08] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Read error: Connection reset by peer)
[02:22:40] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[02:22:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:24:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:26:08] *** Joins: fikran (~fikran@user/fikran)
[02:27:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[02:27:51] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-7da2-0ff1-7444-3a5d.res6.spectrum.com) (Read error: Connection reset by peer)
[02:30:16] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 252 seconds)
[02:30:33] *** Joins: esaym153 (~esaym153@net153.net)
[02:30:35] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[02:30:45] *** Joins: LiftLeft (~LiftLeft@172.98.92.75)
[02:31:30] *** Joins: portalrat (~portalrat@user/portalrat)
[02:32:04] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[02:32:57] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[02:33:33] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-53.dyn.luxfibre.pt.lu) (Quit: Leaving)
[02:34:10] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Ping timeout: 240 seconds)
[02:34:12] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:35:16] *** Joins: pycurious (~Adium@user/pycurious)
[02:35:29] <pycurious> In redis, how do I make a Q from which I can pop / push, but the elements are always unique?
[02:36:00] *** Quits: gentlinux (~gentlinux@2a02:8108:1880:294:3787:9d9d:a422:6d07) (Quit: WeeChat 2.3)
[02:38:23] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 265 seconds)
[02:39:55] *** Joins: sshrubber (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[02:40:56] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[02:42:59] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 252 seconds)
[02:43:59] *** Quits: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage) (Remote host closed the connection)
[02:44:09] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[02:44:15] *** Quits: upsala (~zcb@194.36.25.10) (Quit: WeeChat 3.2)
[02:45:12] *** Joins: Bardon_ (~Bardon@user/Bardon)
[02:45:55] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 260 seconds)
[02:46:56] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:48:47] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 245 seconds)
[02:54:28] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[02:57:07] *** Joins: eb0t (~eb0t@90.209.54.144)
[02:57:51] *** Joins: Fiji (~Fiji@user/fiji)
[02:58:29] *** Joins: medium_cool (~medium_co@2605:a601:a9ed:4300:8908:c49a:eaf1:c71)
[02:59:12] *** Quits: eblip (~eb0t@90.214.8.179) (Ping timeout: 245 seconds)
[03:00:14] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[03:01:19] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[03:02:23] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[03:02:36] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:04:08] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[03:04:11] *** Joins: driib7 (~driib@185.195.233.170)
[03:04:12] *** Quits: BlackBishop (dexter@user/blackbishop) (Ping timeout: 245 seconds)
[03:05:24] *** Joins: moto (~moto@user/moto)
[03:05:56] *** Quits: Cheaterman (~cheaterma@user/cheaterman) (Ping timeout: 265 seconds)
[03:06:01] *** Quits: driib (~driib@185.195.233.163) (Ping timeout: 252 seconds)
[03:06:01] *** driib7 is now known as driib
[03:08:26] *** Joins: tlaxkit (~hexchat@170.253.38.52)
[03:08:47] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 240 seconds)
[03:09:16] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Write error: Connection reset by peer)
[03:09:16] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Write error: Connection reset by peer)
[03:09:16] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Write error: Connection reset by peer)
[03:09:16] *** Quits: ano (~ano@user/ano) (Write error: Connection reset by peer)
[03:09:16] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Write error: Connection reset by peer)
[03:09:16] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Write error: Connection reset by peer)
[03:09:16] *** Quits: mickey0 (~user@user/mickey) (Write error: Connection reset by peer)
[03:09:16] *** Quits: hendursaga (~weechat@user/hendursaga) (Write error: Connection reset by peer)
[03:09:16] *** Quits: CombatVet (~c4@user/combatvet) (Write error: Connection reset by peer)
[03:09:16] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Write error: Connection reset by peer)
[03:09:16] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Write error: Connection reset by peer)
[03:09:16] *** Quits: spithash (~spithash@user/spithash) (Write error: Connection reset by peer)
[03:09:16] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Write error: Broken pipe)
[03:09:16] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[03:09:16] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Read error: Connection reset by peer)
[03:09:16] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Write error: Connection reset by peer)
[03:11:16] *** Joins: Moyst (~moyst@user/moyst)
[03:20:55] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 265 seconds)
[03:21:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:40] *** Joins: ub (~Thunderbi@178.165.201.147.wireless.dyn.drei.com)
[03:23:14] *** Quits: ubert (~Thunderbi@178.165.183.38.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[03:23:15] *** ub is now known as ubert
[03:24:10] *** Quits: vince (~vince@75.127.14.76) (Ping timeout: 240 seconds)
[03:24:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[03:25:08] *** Joins: Wulf (~Wulf@user/wulf)
[03:27:08] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:34:12] *** Joins: pizdets_ (~pizdets@183.182.111.150)
[03:34:26] *** Quits: pizdets (~pizdets@183.182.114.68) (Ping timeout: 260 seconds)
[03:35:24] *** Quits: smvg (~smvg@85.218.163.88) (Quit: Leaving...)
[03:35:25] *** Quits: y1n (~y1n@212095005237.public.telering.at) (Ping timeout: 265 seconds)
[03:35:50] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 260 seconds)
[03:36:24] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[03:39:29] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Excess Flood)
[03:39:56] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[03:40:22] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[03:42:30] *** Quits: Akuli (~Akuli@82-203-167-105.bb.dnainternet.fi) (Quit: Leaving)
[03:44:05] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:44:12] *** Joins: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[03:45:08] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[03:46:46] *** Quits: medium_cool (~medium_co@2605:a601:a9ed:4300:8908:c49a:eaf1:c71) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[03:52:37] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[03:52:53] *** Joins: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net)
[03:57:53] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[03:58:20] *** Joins: Kvothe (~weechat@user/elodin)
[03:58:42] *** Quits: magla (~gelignite@55d40e31.access.ecotel.net) (Quit: Stay safe!)
[04:01:05] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[04:01:10] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[04:02:52] *** Joins: Wulf (~Wulf@user/wulf)
[04:04:50] *** Joins: medium_cool (~medium_co@2605:a601:a9ed:4300:5448:6fb1:9c6b:ccb6)
[04:09:09] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[04:10:08] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[04:15:00] <BenMcLean> @p-i-_ was actually trying to get the metadata, like the game title and description, which I believe is in the first few lines of code. The picotool library is actually the exact thing I needed. Just didn't know it existed till today :)
[04:16:34] *** Lando-SpacePimp is now known as Dobie4Life
[04:18:03] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[04:18:29] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:19:01] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[04:19:42] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[04:22:45] *** Quits: medium_cool (~medium_co@2605:a601:a9ed:4300:5448:6fb1:9c6b:ccb6) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[04:22:56] *** Joins: sxm (~nerv@2600:8800:8282:b900:28:1068:df7:fea2)
[04:23:29] <ColonelJ> Well I completed all 115 Python challenges on Hackerrank... wow was that boring
[04:23:34] *** Quits: tlaxkit (~hexchat@170.253.38.52) (Quit: Leaving)
[04:28:52] *** Parts: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) ()
[04:29:16] <BenMcLean> OK so here's a dumb newbie question:
[04:30:01] <BenMcLean> Do I have to get my end users to install this picotool thing in order to use it in my script or can I just include picotool as a git submodule and pull it in without installing the library? https://github.com/dansanderson/picotool
[04:32:08] *** Quits: waxfire8 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[04:32:19] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[04:33:17] <BenMcLean> ooh i found an article on this, reading it now. https://www.almeta.io/en/blog/git-submodules-in-the-python-world-why-and-how/
[04:33:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:33:39] <BenMcLean> only asked because I wasn't immediately seeing answers on google but after digging more i think I may be finding it after all ;)
[04:33:42] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[04:33:54] *** Quits: Xeago (~Xeago@user/xeago) (Ping timeout: 265 seconds)
[04:34:08] <nedbat> BenMcLean: the usual way is to make your program installable, and it can declare its requirements.
[04:34:52] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[04:35:13] <BenMcLean> nedbat my only uses of python so far have been launching very tiny python scripts from windows batch or linux bash that do tiny jobs. never made anything installable or even anything with multiple .py files
[04:35:30] *** Joins: fikran (~fikran@user/fikran)
[04:35:36] <BenMcLean> so will need to learn how that's done
[04:38:36] <nedbat> BenMcLean: it's tricky to figure out the best way to distribute programs sometimes.
[04:39:31] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[04:39:40] *** Quits: zepolen (~zepolen@2a02:587:8611:2428:f8f0:cc0b:630c:65af) (Ping timeout: 260 seconds)
[04:42:53] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[04:45:45] *** Joins: zaquest (~notzaques@5.128.210.178)
[04:49:05] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:49:07] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[04:51:22] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[04:51:33] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[04:52:01] *** Joins: rany (~rany@user/rany)
[04:53:07] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[04:53:20] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[04:55:43] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[04:56:44] *** Joins: Naan (~naan@user/naan)
[04:57:02] <grym> BenMcLean: when someone shares a python tool or library with me, I am disappointed when i cannot use `pip` to install it
[04:57:15] <grym> (and i'm unlikely to use it)
[04:58:35] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Remote host closed the connection)
[04:59:00] <BenMcLean> grym look at this
[04:59:01] <BenMcLean> https://pastebin.com/0nHaWdiK
[04:59:03] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[04:59:30] <grym> BenMcLean: yes, you can't name things that
[04:59:48] <BenMcLean> well p8tool is a valid name yet not allowed
[05:00:05] <BenMcLean> "import picotool" seems to work but it not clear how to actually access any of the features
[05:00:19] *** Joins: Julian (~tos9@python/site-packages/Julian)
[05:00:25] <grym> the name you use for pip install and the name you use for import, sadly, don't have to have anything to do with one another
[05:00:36] <grym> e.g., you `pip install PyYAML` and `import yaml`
[05:00:48] <BenMcLean> OK ... should I assume there is a good reason for this?
[05:00:49] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[05:01:37] <BenMcLean> also while python -c "import picotool" works, when I type import picotool at the top of a new .py file in Visual Studio Code, it highlights picotool as missing
[05:01:50] <grym> BenMcLean: vs code doesn't know which interpreter to look at
[05:02:08] <grym> and every interpreter has a seperate list of installed pakcages
[05:02:09] *** Joins: zepolen (~zepolen@2a02:587:8611:2428:df96:4a4b:cf16:bdb0)
[05:03:07] *** Dobie4Life is now known as CrunkJuice
[05:05:31] *** Joins: Xeago (~Xeago@user/xeago)
[05:05:49] <BenMcLean> grym so how do i tell it
[05:07:34] <BenMcLean> or should i be using a different program to write python in on windows
[05:08:28] <grym> BenMcLean: https://code.visualstudio.com/docs/python/environments
[05:08:35] <grym> there's a setting somewhere
[05:08:44] <grym> every editor will need to do this; how each one does it differs
[05:09:20] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[05:09:37] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 245 seconds)
[05:09:46] <BenMcLean> OK I find it stupid beyond all reason that python, java and every other language doesn't at least have an option in their installer to add them to the system path in windows
[05:09:54] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[05:10:15] <BenMcLean> why the hell are we going in to add their paths by hand just to get a basic dev environment set up
[05:10:17] <Repiphany> Python does have an option to add it to $PATH when you install
[05:10:24] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:10:26] <Repiphany> in windows
[05:10:28] <BenMcLean> well it didn't show up, maybe i should re-install just for that
[05:10:38] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[05:10:43] <grym> BenMcLean: python can do that, but arguably you don't want it to.  and there's this py.exe thing, too? i'm not a windows dev any more
[05:11:29] <BenMcLean> "arguably you don't want it to" -- that's why it should be optional
[05:12:03] <Repiphany> https://docs.python.org/3/using/windows.html#configuring-python
[05:12:28] <grym> BenMcLean: it is ..?
[05:12:46] <BenMcLean> yeah ok apparently it was in there. don't know why i didnt see it the first time
[05:12:52] <BenMcLean> this may solve my problems pretty quick
[05:12:58] <BenMcLean> thanks for your help guys
[05:13:10] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[05:13:25] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[05:13:41] *** Quits: ColonelJ (~ColonelJ@user/colonelj) (Quit: leaving)
[05:14:40] <grym> BenMcLean: just until you learn about venvs :)
[05:15:42] *** Quits: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net) (Quit: Konversation terminated!)
[05:17:23] <BenMcLean> Nope, that did nothing whatsoever
[05:18:13] <BenMcLean> Doesn't exactly work like xkcd does it. https://xkcd.com/353/
[05:19:08] *** Quits: greedom (~greedom@2001:16b8:2e11:4b00:7779:9b55:b8f5:1ce0) (Remote host closed the connection)
[05:24:35] *** Quits: flokuehn (~flokuehn@muedsl-82-207-236-000.citykom.de) (Ping timeout: 260 seconds)
[05:24:37] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 245 seconds)
[05:25:07] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[05:26:19] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[05:26:28] *** Joins: flokuehn (~flokuehn@muedsl-82-207-236-228.citykom.de)
[05:27:14] *** Joins: jazzy2 (~jaziz@2600:380:865d:911b:e5e1:b429:e129:6354)
[05:27:43] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:27:52] <BenMcLean> py -c "import picotool" works
[05:28:12] <BenMcLean> import picotool in visual studio code still says it can't find it, even though i have selected the interpreter to be the only python I have installed.
[05:29:06] <BenMcLean> wait .... ok so "py -c "import picotool"" works in powershell outside visual studio code
[05:29:10] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:29:20] <BenMcLean> the terminal in visual studio code is apparently going to a different python
[05:29:28] <BenMcLean> what the hell
[05:29:35] <BenMcLean> how can i have two pythons when i only installed one?
[05:29:43] <BenMcLean> does the visual studio code extension for python come with its own?
[05:30:57] <nedbat> BenMcLean: in each python, try this:  import sys; print(sys.executable)
[05:31:45] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:55] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[05:32:23] <BenMcLean> nedbat they both say C:\Program Files\Python39\python.exe
[05:32:25] *** Joins: cheater (~Username@user/cheater)
[05:32:59] <nedbat> BenMcLean: then in each:  import os, sys;  print(os.getcwd()); print(sys.path)
[05:34:12] <BenMcLean> "IndentationError: unexpected indent"
[05:34:16] <BenMcLean> so uhh, whatever you did there was wrong
[05:34:36] <nedbat> BenMcLean: you'll need to avoid copying leading whitespace
[05:35:01] <nedbat> or, there's an extra space in the middle
[05:35:08] <nedbat> import os, sys;print(os.getcwd());print(sys.path)
[05:36:59] <BenMcLean> OK so the real command is: py -c "import os, sys;print(os.getcwd());print(sys.path)"|clip
[05:37:08] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[05:38:27] <BenMcLean> result on both is ['', 'C:\\Program Files\\Python39\\python39.zip', 'C:\\Program Files\\Python39\\DLLs', 'C:\\Program Files\\Python39\\lib', 'C:\\Program Files\\Python39', 'C:\\Users\\mclea\\AppData\\Roaming\\Python\\Python39\\site-packages', 'C:\\Program Files\\Python39\\lib\\site-packages']
[05:39:15] <BenMcLean> oh wait i figured out the differnce
[05:39:24] <BenMcLean> the powershell was in my repos folder
[05:39:38] <BenMcLean> the visual studio code is in my repos/RetroPiePico8 folder
[05:39:51] <BenMcLean> when i import picotool in the repos folder, there's no output
[05:40:05] <BenMcLean> But when I import picotool in the RetroPiePico8 folder, it can't find it then.
[05:40:11] <BenMcLean> so ..... what does pip install actually do?
[05:40:17] <BenMcLean> anything?
[05:40:39] <nedbat> BenMcLean: of course it does.
[05:40:46] *** Joins: nergar (~Nergar@177.225.152.16)
[05:41:09] <nedbat> BenMcLean: what does "pip freeze" say?
[05:41:48] <BenMcLean> p8tool==0.1 pypng==0.0.21
[05:42:03] <BenMcLean> so maybe this thing is called p8tool after all ?
[05:42:30] <nedbat> BenMcLean: did you write it? or are there docs for it?
[05:42:44] <BenMcLean> nedbat, no it is here https://github.com/dansanderson/picotool
[05:43:23] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[05:44:24] *** Joins: mcglk (~mcglk@131.191.49.120)
[05:44:52] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[05:48:31] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[05:48:52] *** Joins: minip (~minip@user/minip)
[05:50:08] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:50:08] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: Connection reset by peer)
[05:50:55] <nedbat> BenMcLean: it's confusing: the pypi package is called p8tool, but the module you import is pico8 it looks like?
[05:51:51] *** Joins: Julian (~tos9@python/site-packages/Julian)
[05:52:01] <BenMcLean> I guess. It very confusing. Visual Studio Code finds a module called pico8 but the module seems to be empty, like nothing's in it
[05:52:21] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:52:31] <BenMcLean> I'm trying to get to listlua
[05:52:34] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[05:52:53] <Repiphany> There's nothing in pico8/__init__.py to automatically import everything
[05:53:31] <BenMcLean> module 'pico8' has no attribute 'listlua'
[05:53:38] <Repiphany> import pico8.tool; pico8.tool.listlua
[05:53:48] <BenMcLean> wow how you find that
[05:55:18] <Repiphany> Seems like it's mainly made as a command line tool, not really for importing it as a library
[05:55:31] <Repiphany> So you'd have to kind of dig into the code internals if you want to use it that way
[05:56:09] *** Joins: oatmealraisin (~ryan@2603-7000-4000-7c46-0000-0000-0000-16d9.res6.spectrum.com)
[05:58:22] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[05:59:11] <BenMcLean> Reipiphany OK thanks. I made an issue about this. https://github.com/dansanderson/picotool/issues/87
[05:59:55] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 252 seconds)
[06:00:02] *** Joins: bilb_ono_ (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[06:00:30] <Repiphany> Having a blank __init__.py isn't really a mistake, it just means nothing specific happens when you do `import module` instead of `import module.tool` or whatever
[06:01:03] <oatmealraisin> I'm having some trouble maintaining the state of a settings dict in a submodule, https://bpa.st/RB7A
[06:01:14] <Repiphany> Is there a reason you're trying to run functions internally instead of using the commandline tool
[06:01:29] <oatmealraisin> Seems when other modules do 'from .database import guild_settings' that it's an empty dict
[06:01:52] <oatmealraisin> err, specifically after `load_database()`
[06:02:32] <oatmealraisin> What's going wrong?
[06:02:33] <dba> is there a way to convert this dictionary data to new data as shown here https://bpa.st/JUPQ regardless of key names and how may we have?
[06:03:06] <oatmealraisin> dba: you're looking for a flatten function?
[06:03:21] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:03:32] <dba> oatmealraisin, what does that mean?
[06:03:37] *** Joins: matsaman (~matsaman@user/matsaman)
[06:03:52] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[06:04:06] <oatmealraisin> I think this may solve your problem? https://stackoverflow.com/questions/6027558/flatten-nested-dictionaries-compressing-keys
[06:04:32] <dba> oatmealraisin, Thank you!
[06:05:15] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Quit: leaving)
[06:05:18] <oatmealraisin> dba: 'flattening' is like what you want, taking nested dicts and making it all just one big dict
[06:05:27] <oatmealraisin> not sure what a good definition is
[06:05:52] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[06:07:54] <nomic> why nest dicts. sort of defeats the object. dict keys = extendeable. there is no reason to 'nest dicts'
[06:08:12] <oatmealraisin> nomic: poor man's objects xP
[06:09:52] <BenMcLean> Repiphany yeah i have discovered that this program's problems are much worse than I had initially thought
[06:10:07] *** Quits: sxm (~nerv@2600:8800:8282:b900:28:1068:df7:fea2) (Quit: Leaving)
[06:10:12] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[06:10:35] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[06:10:46] *** Joins: bindu (bindu@user/bindu)
[06:11:02] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[06:11:27] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:11:34] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:12:34] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:12:34] *** brabrax_ is now known as brabrax
[06:13:37] *** Joins: dld (~davidlowr@2601:197:600:1210:28c1:cdd6:e3ed:bb3d)
[06:15:00] <nedbat> oatmealraisin: `from mod import var` will give you a reference to the var at the time of the import.  then your  module does `var = something_new()`, which won't affect the var in the other module
[06:15:28] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:15:54] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 260 seconds)
[06:16:08] <oatmealraisin> nedbat: ty! would global help this? or should i just get the var from a getter function instead
[06:16:33] <nedbat> oatmealraisin: it would help to do this:  `import mod; .....   mod.load_database;  print(mod.var)`
[06:17:01] <nedbat> oatmealraisin: if you keep a reference to the module, and always use the var through the mod, it will be the same variable
[06:17:29] <oatmealraisin> nedbat: that's super interesting. If i have mod_a and mod_b both doing import mod_c, and mod_a does mod_c.load_db;, would mod_b also have the correct mod.var?
[06:18:00] <nedbat> oatmealraisin: they will all see the same variable if you stick to accessing it through the module rather than importing it.
[06:18:54] <nedbat> oatmealraisin: this is about mocks, but explains the same dynamic: https://nedbatchelder.com/blog/201908/why_your_mock_doesnt_work.html
[06:20:02] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[06:20:52] *** Joins: dan64 (~dan64@dannyadam.com)
[06:21:10] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:21:55] *** Quits: schumaml (~schumaml@p57b7eeab.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:22:11] *** Joins: sargon (~sargon@188.250.185.117)
[06:23:43] *** Joins: schumaml (~schumaml@p4ff9103f.dip0.t-ipconnect.de)
[06:23:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:24:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[06:27:31] *** Quits: jjasghar (~quassel@user/jjasghar) (Quit: No Ping reply in 180 seconds.)
[06:27:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[06:30:22] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[06:37:17] *** Quits: dan64 (~dan64@dannyadam.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:40:09] *** Joins: dan64 (~dan64@dannyadam.com)
[06:40:58] *** Joins: korg815 (~korg815@user/korg815)
[06:41:45] *** Quits: BenMcLean (~BenMcLean@2601:300:4080:6230:21cc:af0d:598c:a743) (Ping timeout: 256 seconds)
[06:42:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:43:01] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[06:43:16] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[06:44:53] *** Joins: fikran (~fikran@user/fikran)
[06:44:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[06:46:32] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:47:54] *** Quits: dan64 (~dan64@dannyadam.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:49:01] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[06:49:54] *** Joins: dan64 (~dan64@dannyadam.com)
[06:52:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:55:43] *** Joins: srhm (~srhm@user/srhm)
[06:56:06] *** Quits: srhm (~srhm@user/srhm) (Client Quit)
[06:58:48] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 256 seconds)
[07:00:44] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[07:01:11] *** Joins: OPK (~OPK@user/opk)
[07:02:23] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Client Quit)
[07:03:07] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:06:27] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[07:11:33] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:12:15] *** Joins: sgn (~sgn@user/sgn)
[07:14:20] *** Pixi_ is now known as Pixi
[07:14:59] *** Joins: gggp (~textual@111.63.44.6)
[07:17:30] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 260 seconds)
[07:18:30] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[07:19:55] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[07:20:06] *** Joins: et_ (~et@user/et)
[07:20:18] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:20:47] *** Quits: bindu (bindu@user/bindu) (Quit: WeeChat 3.2)
[07:20:50] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[07:21:13] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[07:21:13] *** et_ is now known as et
[07:22:03] *** Joins: Cheaterman (~cheaterma@user/cheaterman)
[07:26:50] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[07:28:27] *** Joins: BenMcLean (~BenMcLean@2601:300:4080:6230:44d4:571d:67c3:ce9e)
[07:28:37] <BenMcLean> See this line of code here: et = xml.etree.ElementTree.parse(filename) if os.path.exists(filename) else xml.etree.ElementTree.fromstring('<?xml version="1.0"?><gameList></gameList>')
[07:29:14] <BenMcLean> There's a problem with this, because the `fromstring` method returns type `Element` while the `parse` method returns type `ElementTree`
[07:29:23] <BenMcLean> How do I get `Element` turned into `ElementTree` ??
[07:29:39] *** Joins: junktext (~junktext@77.247.181.215)
[07:31:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[07:33:24] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:34:46] *** Quits: gggp (~textual@111.63.44.6) (Ping timeout: 260 seconds)
[07:35:38] *** Quits: et (~et@user/et) (Read error: Connection reset by peer)
[07:36:21] *** Quits: Skyfire (~pyon@user/pyon) (Quit: brb)
[07:36:32] *** Joins: gggp (~textual@60.10.194.45)
[07:36:36] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:37:12] *** Joins: frost (~frost@59.71.242.61)
[07:37:14] *** Joins: sgn (~sgn@user/sgn)
[07:37:16] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[07:39:03] *** Joins: et (~et@user/et)
[07:41:08] *** Quits: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf) (Quit: Leaving)
[07:44:44] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:19] <dba> is there somehow to controll how randint() works, for example if I did randin(1,10) but I dont want the same number to be printed 4 times in sequence like [0,1,3,4,4,4...]
[07:45:34] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 250 seconds)
[07:46:06] *** Joins: Skyfire (~pyon@user/pyon)
[07:46:55] <phy1729> What about 3 times in a row?
[07:48:40] *** Joins: et_ (~et@user/et)
[07:48:46] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[07:48:50] *** Joins: Wubull (~Thunderbi@user/wuniu)
[07:49:22] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[07:49:23] *** et_ is now known as et
[07:51:08] *** Wubull is now known as Wuniu
[07:52:02] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 260 seconds)
[07:52:21] <energizer> dba: what's the use case?
[07:53:51] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[07:55:50] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[07:59:39] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:00:14] <BenMcLean> I figured it out: et = ElementTree.parse(filename).getroot() if os.path.exists(filename) else ElementTree(Element('gameList'))
[08:00:32] <BenMcLean> but that's using lxml because the default ElementTree is too limited 4 me
[08:01:34] <foo> I'm trying to make a python as easy as possible for someone to install. I normally run all my code myself... trying to figure out how to get this to them. I can write a bash script to install a venv and then a click cli package... but perhaps there is a way to have the repo install via pip and then they can access cli within venv and not even need to see all the code?
[08:03:09] <FH_thecat> I am reading file line by line
[08:03:10] <phy1729> iirc you can point pip at a git repo with pip install git+...
[08:03:14] <FH_thecat> each line has following format
[08:03:19] <FH_thecat> : 1631373881:0;echo
[08:03:29] <FH_thecat> I need to extract the first number (epoch time) and the last part after ';'
[08:05:46] <foo> phy1729: thanks, how does a package need to be set up to be installed via pip? I haven't written a package that is installed with pip before. #latetotheparty
[08:07:11] <foo> phy1729: also, I assume this can be done with a private repo?
[08:07:20] <foo> :x
[08:07:53] <phy1729> private repo yes; for what to do setup.cfg, but I honestly don't do it much so can't help much
[08:08:09] <foo> phy1729: I'm open to a guide /me googles
[08:08:32] <foo> Can someone confirm this is what I want? seems so https://python-packaging-tutorial.readthedocs.io/en/latest/setup_py.html
[08:15:41] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[08:17:26] *** Joins: homerj (~homerj@user/homerj)
[08:18:46] *** Joins: CombatVet (~c4@user/combatvet)
[08:18:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:19:34] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[08:19:36] *** Joins: spithash (~spithash@user/spithash)
[08:19:41] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[08:20:05] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:20:35] *** Quits: gitly (~gitly@85.255.235.88) (Ping timeout: 265 seconds)
[08:20:49] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[08:21:00] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Client Quit)
[08:21:04] *** Joins: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com)
[08:21:58] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:22:12] *** Joins: gitly (~gitly@185.69.145.6)
[08:22:30] *** Joins: Wubull (~Thunderbi@user/wuniu)
[08:23:47] *** Quits: zepolen (~zepolen@2a02:587:8611:2428:df96:4a4b:cf16:bdb0) (Ping timeout: 245 seconds)
[08:23:58] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[08:23:59] *** Wubull is now known as Wuniu
[08:26:31] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:26:40] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:c1f1:2555:cca3:62a0)
[08:27:16] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[08:27:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[08:28:11] <BrenBarn> dba: If you don't want that then you're not really getting a "random" number
[08:28:21] *** Joins: ano (~ano@user/ano)
[08:28:25] <BrenBarn> but in some cases maybe what you want is something like taking a list of numbers 1-10 and shuffling it
[08:28:29] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[08:28:32] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[08:32:23] *** Joins: fsg (zzzzz@2600:3c00::f03c:92ff:fec6:da18)
[08:33:35] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[08:33:49] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[08:34:46] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[08:35:32] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[08:35:46] *** Joins: spithash (~spithash@user/spithash)
[08:35:55] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:22] *** Joins: gggp (~textual@60.10.23.169)
[08:37:23] *** Quits: BenMcLean (~BenMcLean@2601:300:4080:6230:44d4:571d:67c3:ce9e) (Quit: Client closed)
[08:37:44] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[08:39:41] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:40:20] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:48:42] *** Joins: odoood (~odoood@2601:c8:c003:a550::9)
[08:50:19] <llanhmod> foo: it checks out! sure
[08:50:33] <foo> llanhmod: thanks, will package this up tomorrow.
[08:52:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[08:54:15] *** Joins: fikran (~fikran@user/fikran)
[08:55:18] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:56:28] *** Quits: CrunkJuice (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[08:56:34] *** Joins: zepolen (~zepolen@2a02:587:8611:2428:7b78:ff3c:cdfb:afba)
[08:56:50] *** Joins: spithash (~spithash@user/spithash)
[08:58:56] *** Joins: pycurious (~Adium@user/pycurious)
[08:59:47] *** Joins: Wubull (~Thunderbi@user/wuniu)
[09:00:38] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[09:01:11] *** Joins: flyingchef (~flyingche@user/flyingchef)
[09:02:09] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[09:02:10] *** Wubull is now known as Wuniu
[09:04:21] *** Joins: Wulf (~Wulf@user/wulf)
[09:07:19] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[09:08:02] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.69-101.dynamic.3bb.co.th) (Remote host closed the connection)
[09:08:51] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[09:10:59] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[09:11:22] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[09:11:37] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[09:11:37] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:14:20] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:14:47] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[09:14:51] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[09:15:23] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[09:17:18] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:17:22] *** Quits: odoood (~odoood@2601:c8:c003:a550::9) (Ping timeout: 252 seconds)
[09:17:40] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[09:17:43] *** Joins: sgn (~sgn@user/sgn)
[09:18:19] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[09:20:14] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[09:20:15] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:22:21] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:c1f1:2555:cca3:62a0) (Read error: Connection reset by peer)
[09:24:43] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:25:47] *** Joins: semeion (~semeion@user/semeion)
[09:31:46] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[09:31:46] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:33:34] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[09:39:38] *** Joins: p-i- (~Ohmu@223.206.69.101)
[09:40:36] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[09:41:34] *** Quits: emerent (~quassel@p200300cd5701a14cba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:41:36] *** Quits: brachamh (~brachamh@user/brachamh) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:41:39] *** Joins: emerent_ (~quassel@p200300cd5701a1dfba27ebfffed28a59.dip0.t-ipconnect.de)
[09:41:39] *** emerent_ is now known as emerent
[09:43:06] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:43:22] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:43:50] *** Joins: brachamh (~brachamh@user/brachamh)
[09:44:17] *** Parts: llanhmod (~developer@user/domhnall/x-2887755) ()
[09:44:28] *** Joins: adder (~adder@user/adder)
[09:44:36] *** Joins: gggp (~textual@111.63.44.6)
[09:45:34] <adder> Hello, I'm implementing traceroute and I have an issue - it looks like the packets don't get past the first hop, despite a correct TTL being set. I've had a working program a while ago, but then I decided to try to fire off all packets concurrently, and that's when it broke. Here's the code if anyone wants to look: https://dpaste.com/EG7A75KE7
[09:45:45] <adder> I'm new to trio so I might be doing something stupid
[09:46:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:47:44] <bpalmer> before anything else, does standard traceroute work? (Some networks will block ICMP traffic)
[09:48:13] <bpalmer> oh, sorry, it was working until the concurrency comes in.
[09:48:15] <adder> yeah it works
[09:48:31] <bpalmer> Still possible that the network is interpreting it as an attack of some kind and suppressing it.
[09:49:24] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[09:49:34] <adder> that's what I thought as well, but if I try my old program it works just fine
[09:50:31] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[09:51:18] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[09:52:12] <bpalmer> try limiting your concurrency to only two packets at a time
[09:53:11] *** Joins: upsala (~zcb@194.36.25.10)
[09:54:08] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[09:54:17] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:55:55] <adder> doesn't seem to help
[09:56:34] <adder> provided I did this correctly; I created a CapacityLimiter(2) and am passing that to tracer, then async with limit ...
[09:57:34] *** Quits: oatmealraisin (~ryan@2603-7000-4000-7c46-0000-0000-0000-16d9.res6.spectrum.com) (Ping timeout: 260 seconds)
[09:58:16] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[10:03:29] *** AndrewYu is now known as xeroxIRC
[10:03:29] *** xeroxIRC is now known as Guest591
[10:04:00] *** Guest591 is now known as AndrewIRC
[10:04:20] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (Quit: Bye)
[10:06:35] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[10:06:45] <bpalmer> no more ideas here, I'm afraid.
[10:06:51] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[10:08:10] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[10:09:19] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[10:09:49] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[10:10:00] *** Joins: homarlone (~homarlone@2804:14d:baa3:4341:a4ed:9e92:1eb0:a3e2)
[10:10:35] *** Quits: homarlone (~homarlone@2804:14d:baa3:4341:a4ed:9e92:1eb0:a3e2) (Quit: Client closed)
[10:11:00] *** Joins: homarlone (~homarlone@2804:14d:baa3:4341:a4ed:9e92:1eb0:a3e2)
[10:12:08] *** Joins: Wubull (~Thunderbi@user/wuniu)
[10:13:26] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[10:13:27] *** Wubull is now known as Wuniu
[10:13:32] *** Quits: homarlone (~homarlone@2804:14d:baa3:4341:a4ed:9e92:1eb0:a3e2) (Changing host)
[10:13:32] *** Joins: homarlone (~homarlone@user/homarlone)
[10:13:42] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[10:14:12] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 245 seconds)
[10:15:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:15:48] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:16:22] <adder> ok, got it. it seems like I"m too fast for whatever part of the network, probably my home router. If I sleep a bit before starting a task, everything's fine...but that beats the point of firing off packets concurrently :)
[10:20:04] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[10:21:32] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[10:21:51] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:22:25] *** Joins: r3m (~launch@user/r3m)
[10:24:19] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[10:24:33] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[10:25:30] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[10:26:42] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[10:27:20] *** Quits: zepolen (~zepolen@2a02:587:8611:2428:7b78:ff3c:cdfb:afba) (Ping timeout: 260 seconds)
[10:28:41] *** Quits: homarlone (~homarlone@user/homarlone) (Quit: Client closed)
[10:29:09] *** Joins: homarlone (~homarlone@user/homarlone)
[10:31:10] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 260 seconds)
[10:36:17] *** Joins: gggp (~textual@60.10.23.169)
[10:36:48] *** Quits: gggp (~textual@60.10.23.169) (Client Quit)
[10:37:01] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[10:37:16] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[10:39:08] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[10:39:09] <Gurkenglas> I'd like to take this square matrix C (of form J*J^t), find the two diagonal entries with biggest c_ii*c_jj/(cii*cjj-cij*cji), merge them into a block, and repeat (the general formula being det(one block)*det(other block)/det(their union)). Much of the time I'm therefore working with sparse matrices; how should I therefore make this more efficient? (For bonus points, intuit what I'm doing and what I should be
[10:39:10] <Gurkenglas> doing instead >:) )
[10:44:49] <Widdershins> Gurkenglas: i think you're going to need to lay that out a lot more clearly for people who aren't used to reading dense arxiv papers about matrix math with all the formatting stripped out
[10:45:50] <Gurkenglas> Widdershins, is there some library that tries to optimize your matrix operations by using, say, sparse representation, when this is wise?
[10:45:52] *** Quits: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-6a03-1306-90b0-2cde.res6.spectrum.com) (Ping timeout: 245 seconds)
[10:45:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:46:21] <Widdershins> Gurkenglas: there are a lot of such libraries but i'm not intimately familiar with exactly which ones you want or whether there are any convenient python bindings
[10:46:21] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:53] *** Joins: seednode (~seednode@user/seednode)
[10:48:34] <Widdershins> much blood and sweat has gone into such things
[10:49:37] <Widdershins> you're gonna have to be pretty good at native bindings and toolchains. there are for example a couple bindings for SuiteSparse but none of them are particularly polished
[10:51:40] *** Joins: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at)
[10:51:43] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[10:52:01] <Widdershins> maybe you don't need it to be that fast. there are other libraries, some stuff in BLAS
[10:52:05] <Widdershins> who knows
[10:52:53] *** Joins: EGH (~EGH@185.25.195.104)
[10:53:11] <Gurkenglas> Yeah, probably it's enough for now to do the "obvious" one line change that stops wasting 99% of time...
[10:53:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:53:22] *** Quits: upsala (~zcb@194.36.25.10) (Ping timeout: 245 seconds)
[10:54:35] *** Joins: iflema (~ian@user/iflema)
[10:56:18] <Widdershins> idk how big your sparse whatevers are or how slow it's currently running. if you can find anything in numpy that can just make matrix operations more efficient then just do that
[10:56:30] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[10:57:11] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[10:59:57] *** Joins: OPK (~OPK@user/opk)
[11:01:02] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[11:01:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:03:39] *** Joins: fikran (~fikran@user/fikran)
[11:06:40] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:07:43] *** Quits: p-i- (~Ohmu@223.206.69.101) (Remote host closed the connection)
[11:07:52] *** Joins: Mark_Pinecone (~Mark_Pine@gateway/tor-sasl/markpinecone/x-88286818)
[11:08:18] *** Joins: p-i- (~Ohmu@223.206.69.101)
[11:12:15] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 260 seconds)
[11:13:02] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[11:13:16] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.2)
[11:13:47] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[11:14:13] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[11:14:35] *** Quits: gitly (~gitly@185.69.145.6) (Ping timeout: 260 seconds)
[11:15:12] *** Quits: nergar (~Nergar@177.225.152.16) (Read error: Connection reset by peer)
[11:15:55] *** Joins: Vonter (~Vonter@user/vonter)
[11:16:31] *** Joins: gitly (~gitly@85.255.235.91)
[11:18:18] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[11:19:25] *** Quits: LiftLeft (~LiftLeft@172.98.92.75) (Ping timeout: 265 seconds)
[11:19:55] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (Ping timeout: 265 seconds)
[11:20:54] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[11:21:37] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[11:25:23] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:27:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:30:01] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[11:32:28] *** Joins: enkrypt (~enkrypt@user/enkrypt)
[11:34:10] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[11:35:11] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[11:35:34] *** Quits: junktext (~junktext@77.247.181.215) (Ping timeout: 260 seconds)
[11:35:51] *** Joins: dcompoze (~dcompoze@5E98D6D9.static.tld.pl)
[11:36:04] *** Quits: dcompoze (~dcompoze@5E98D6D9.static.tld.pl) (Client Quit)
[11:36:36] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[11:37:26] *** Quits: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[11:41:06] *** Joins: grey_ham (~graham@88-111-245-14.dynamic.dsl.as9105.com)
[11:43:05] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[11:44:49] *** Quits: grey_ham (~graham@88-111-245-14.dynamic.dsl.as9105.com) (Quit: WeeChat 3.2)
[11:46:29] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 265 seconds)
[11:48:38] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 260 seconds)
[11:49:08] *** Joins: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at)
[11:49:34] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:51:35] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[11:52:58] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:54:31] *** Quits: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net) (Quit: bye)
[11:55:51] *** Quits: homarlone (~homarlone@user/homarlone) (Quit: Client closed)
[11:56:06] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[11:56:21] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[11:56:27] *** Joins: homarlone (~homarlone@user/homarlone)
[11:56:32] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:57:33] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[11:57:35] *** Joins: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net)
[11:58:43] *** Joins: Wubull (~Thunderbi@user/wuniu)
[11:59:32] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[11:59:33] *** Wubull is now known as Wuniu
[12:05:48] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:05:56] *** Joins: akaWolf (~akaWolf@akawolf.org)
[12:06:54] *** Joins: control (~v1@user/control)
[12:08:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:12:16] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[12:12:26] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:13:57] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[12:13:59] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[12:14:40] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[12:14:55] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:15:01] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[12:16:25] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[12:16:26] *** Joins: et (~et@user/et)
[12:16:45] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[12:17:20] *** Joins: kosh (~kosh@user/kosh)
[12:19:25] *** Joins: tempate (~alpha@user/tempate)
[12:19:31] *** Parts: tempate (~alpha@user/tempate) ()
[12:20:48] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 265 seconds)
[12:21:46] *** Quits: Cheaterman (~cheaterma@user/cheaterman) (Ping timeout: 265 seconds)
[12:22:59] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[12:23:15] *** Joins: Cheaterman (~cheaterma@user/cheaterman)
[12:25:37] *** Joins: et_ (~et@user/et)
[12:26:55] *** Quits: et (~et@user/et) (Ping timeout: 260 seconds)
[12:26:55] *** et_ is now known as et
[12:31:27] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[12:31:54] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:32:36] *** Joins: raxor2k (~raxor2k@78.158.248.203)
[12:35:46] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[12:36:10] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:10] *** Quits: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[12:37:20] *** Joins: Wulf (~Wulf@user/wulf)
[12:39:15] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:41:10] *** Joins: Veri (~yourname@110.247.190.135)
[12:41:45] *** Parts: Veri (~yourname@110.247.190.135) ()
[12:42:09] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:45:07] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[12:45:10] *** Joins: pycode (~pycode@2001:b07:5d28:551:a02c:9437:9f6b:1af7)
[12:46:31] *** Joins: Wulf (~Wulf@user/wulf)
[12:46:54] *** Joins: greedom (~greedom@2001:16b8:3211:e300:6699:60e1:6a47:9a7c)
[12:47:53] *** Joins: trace987 (~trace@95.90.106.112)
[12:49:57] *** Quits: trace987 (~trace@95.90.106.112) (Remote host closed the connection)
[12:50:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:50:14] *** Joins: y1n (~y1n@84-115-65-117.wifi.dynamic.surfer.at)
[12:50:40] *** Quits: brachamh (~brachamh@user/brachamh) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[12:50:46] *** Quits: pycode (~pycode@2001:b07:5d28:551:a02c:9437:9f6b:1af7) (Ping timeout: 252 seconds)
[12:51:04] *** Quits: greedom (~greedom@2001:16b8:3211:e300:6699:60e1:6a47:9a7c) (Remote host closed the connection)
[12:51:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:51:50] *** Joins: greedom (~greedom@2001:16b8:3211:e300:6699:60e1:6a47:9a7c)
[12:51:57] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[12:54:39] *** Joins: theprophet (~theprophe@85.114.228.184)
[12:55:08] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-53.dyn.luxfibre.pt.lu)
[12:56:18] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[12:56:59] *** Joins: brachamh (~brachamh@user/brachamh)
[12:57:32] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 245 seconds)
[12:58:45] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[13:04:32] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:04:44] <Gurkenglas> How should I calculate the jacobian between a network's input and the vector of all numbers in the computation graph? the naive way seems to take much longer than the jacobian between the input and output, even though all the gradients already have to be computed, right?
[13:07:13] *** pizdets_ is now known as pizdets
[13:11:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[13:11:20] *** Quits: homarlone (~homarlone@user/homarlone) (Quit: Client closed)
[13:11:24] *** Joins: rsx (~dummy@ppp-188-174-153-122.dynamic.mnet-online.de)
[13:12:18] <p-i-> Gurkenglas: Did you get the right channel? That sounds like a ML question.
[13:12:58] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[13:13:01] *** Joins: fikran (~fikran@user/fikran)
[13:13:10] <Gurkenglas> I wouldn't call it an ML question because from the math side it seems straightforward that the naive way should be fine, and yet it takes much longer so I'm expecting a python snag.
[13:13:56] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:14:16] *** Quits: menace (~someone@user/menace) (Quit: menace)
[13:16:00] <p-i-> Are you using numpy to compute it?
[13:16:53] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 265 seconds)
[13:17:21] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[13:18:06] *** Joins: gggp (~textual@123.113.181.187)
[13:18:42] *** Quits: gggp (~textual@123.113.181.187) (Client Quit)
[13:21:03] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[13:21:58] *** Quits: sshrubber (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[13:24:03] <Gurkenglas> No, pytorch.
[13:24:10] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[13:25:24] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[13:25:42] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[13:25:51] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[13:28:37] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[13:30:58] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[13:34:13] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[13:35:30] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[13:36:23] *** Joins: magla (~gelignite@55d48887.access.ecotel.net)
[13:36:32] *** Joins: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net)
[13:36:39] *** Joins: shangxiao (~davids@124.187.193.187)
[13:36:58] *** Quits: y1n (~y1n@84-115-65-117.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[13:36:59] *** Quits: shangxiao (~davids@124.187.193.187) (Client Quit)
[13:37:21] *** Joins: shangxiao (~davids@124.187.193.187)
[13:37:34] *** Joins: rendar (~rendar@user/rendar)
[13:37:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:38:08] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[13:38:41] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[13:38:42] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[13:40:31] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:45:05] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[13:45:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[13:46:41] *** Joins: Bardon (~Bardon@user/Bardon)
[13:47:16] *** Quits: Bardon_ (~Bardon@user/Bardon) (Ping timeout: 252 seconds)
[13:47:50] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:49:03] *** Joins: gggp (~textual@111.63.44.6)
[13:50:11] *** Joins: y1n (~y1n@84-115-65-117.wifi.dynamic.surfer.at)
[13:50:13] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 265 seconds)
[13:54:39] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.2)
[13:56:17] *** Joins: Vonter (~Vonter@user/vonter)
[13:56:50] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:57:42] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:58:03] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[13:59:06] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:01:12] *** Quits: magla (~gelignite@55d48887.access.ecotel.net) (Quit: Stay safe!)
[14:01:19] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[14:01:59] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:03:36] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[14:03:43] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[14:05:06] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[14:05:20] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:05:21] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:06:08] *** Joins: plastico (~plastico@neomutt/plastico)
[14:08:25] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[14:11:35] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[14:12:50] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[14:12:50] *** Quits: audiocat (~audio@2603-8081-1800-6a6f-3385-4171-3f40-226b.res6.spectrum.com) (Ping timeout: 260 seconds)
[14:17:58] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[14:18:36] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:18:38] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Read error: Connection reset by peer)
[14:22:11] <rendar> i want to check if a function/coroutine has an annotation of class 'MyClass', what is the best way to do this?
[14:22:45] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[14:23:34] *** Quits: control (~v1@user/control) (Ping timeout: 252 seconds)
[14:24:23] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:24:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:25:49] <bjs> rendar: "has an annotation" ?
[14:25:54] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-53.dyn.luxfibre.pt.lu) (Ping timeout: 260 seconds)
[14:26:19] <rendar> bjs, e.g. def f(r:MyClass, ...)
[14:26:30] <bjs> rendar: the function stores the annotations in f.__annotations__
[14:26:51] <rendar> bjs, yes i know, but do i have to check that manually or there is a library to do that properly?
[14:27:20] <bjs> rendar: you're not really supposed to check at runtime at all, so there's no good library to abstract the reading away
[14:27:28] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[14:27:32] <rendar> i see
[14:27:32] <bjs> rendar: what would you want the library to do anyway?
[14:28:48] <rendar> bjs, well, basically now i have a library which receives commands from strings, i can call function or coroutines, but i want to pass the library global state Runtime class to those functions/coros. Not everyone of them need that, only few
[14:29:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[14:29:11] <rendar> so i thought if a function explicitly specify an annotation of class Runtime, it gets the instanced passed as argument
[14:29:19] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[14:29:53] <bjs> rendar: isn't the usual way to do this to look for keyword arguments with a particular name
[14:30:07] <bjs> or have a decorator to specify you want the argument
[14:30:37] <rendar> yeah i think you're right
[14:31:08] <rendar> bjs, how to check for the keyword, anyway?
[14:32:21] <shangxiao> rendar: how to check for keyword arguments?
[14:32:59] <shangxiao> did you mean this?  def foo(*args, **kwargs): ... kwargs is a dictionary of keyword arguments  ... ?
[14:33:10] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:33:25] <bjs> rendar: the inspect module has lots of stuff
[14:33:46] <bjs> that can read the signature of a function (e.g. inspect.signature(f), which also includes the annotations if you wish)
[14:33:47] <rendar> shangxiao, nope
[14:33:49] <theprophet> does initialize and implement save same purpose in python?
[14:33:56] <theprophet> serve*
[14:34:01] *** Quits: ubert (~Thunderbi@178.165.201.147.wireless.dyn.drei.com) (Remote host closed the connection)
[14:34:02] <bjs> theprophet: what is "initialize and implement" ?
[14:34:27] <theprophet> bjs initiliaze a class  __init__ i know what it is
[14:34:47] <theprophet> @bjs but my question is, does initlializing class means implementing?
[14:34:50] <bjs> theprophet: __init__ is just a method that gets called automatically when a new instance is created
[14:34:57] <bjs> theprophet: I'm not sure what you mean by "implementing"
[14:35:07] <theprophet> atributes
[14:35:13] <theprophet> implementing with atributes
[14:35:21] <bjs> theprophet: i'm even less sure what you mean by implementing now
[14:35:26] <shangxiao> heh
[14:35:33] <theprophet> ok let me be more specific
[14:35:50] <theprophet> well i got this line in python crash course
[14:35:52] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[14:35:59] <theprophet> def __init__(self):
[14:35:59] <theprophet> """Initialize the game, and create game resources."""
[14:36:14] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[14:36:23] <bjs> theprophet: yeah, that's what "init" stands for ("initialize")
[14:36:28] <theprophet> yes i get that
[14:36:39] <shangxiao> aka constructor
[14:36:41] <bjs> initialize just means to set things up at the start, it's not a technical term really
[14:37:07] *** Quits: y1n (~y1n@84-115-65-117.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[14:37:11] <theprophet> bjs i know that line includes __init__ method, but look now, if i initialize game, do i need to implement it with atributes?
[14:37:30] <theprophet> bjs to set things up at start also means to implement atributes? is that a same thing?
[14:37:34] <bjs> theprophet: I have no idea what you mean by "implement".  I mean, usually "implement" means pressing the keys on your keyboard to type Python code
[14:37:39] *** Joins: Tuju (~tuju@214-204-50-195.sta.estpak.ee)
[14:37:43] <theprophet> yes
[14:37:50] <theprophet> bjs thats what i am asking
[14:37:58] <Tuju> if iso2 not in report or vuuid not in report[iso2]              i get keyerror from that, how i'm supposed to test that in python3 ?
[14:37:58] <theprophet> bjs ok thank you
[14:38:00] <bjs> theprophet: it could mean to set up attributes
[14:38:04] <rendar> theprophet, i guess you're confusing words, there is no such thing as 'implementing a game with attributes'
[14:38:07] <shangxiao> often "implementation" in OO means to define classes from an interface (at least in Java)
[14:38:36] <rendar> theprophet, usually implementation means you're writing methods of a class which *USE* attributes, you write too
[14:38:37] <bjs> theprophet: if you want the instance to be setup with some attributes then yes, the __init__ should set those attributes.
[14:38:50] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-110.dyn.luxfibre.pt.lu)
[14:38:57] *** Quits: Enitin (~Enitin@82.102.22.84) (Remote host closed the connection)
[14:39:07] <theprophet> got my answer thank you all
[14:39:08] <bjs> theprophet: Nothing *requires* you to even have an __init__ at all,  or that it must do anything with attributes.  (Although it'd be weird to have a class and not use attributes because then, what is the point of it?)
[14:39:29] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:39:32] *** Quits: Enitin (~Enitin@82.102.22.84) (Read error: Connection reset by peer)
[14:40:18] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[14:40:22] <shangxiao> one would've thought one who was a prophet would be able to forsee such answers ;)
[14:40:50] <theprophet> bjs i am translating eveyrhting i am learning to my own(georgian) language and i want to describe what initializing means. thats why asked about implementing to be sure that initializing means that you create atributes and that act is implementing.
[14:41:52] *** Joins: Wubull (~Thunderbi@user/wuniu)
[14:42:10] <bjs> theprophet: okay,  it's quite often useful to know that a lot of the terms in programming languages come from their standard English definitions (so take a look at https://dictionary.com/ or something to get an idea of what the word means) but sometimes individual languages have technical terms themselves (e.g. Python has "classes" which are a specific thing with a specific meaning)
[14:42:16] <theprophet> shangxiao sorry but, my language for english words have lots of meanings, 2-3 least.
[14:42:40] <bjs> theprophet: initialize and implement aren't those kinds of words, they don't mean anything specific,  people are using them with their standard English meanings
[14:42:49] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[14:42:49] *** Wubull is now known as Wuniu
[14:42:50] <bjs> "attribute" *is* a technical term, and means something specific in Python
[14:42:57] <theprophet> bjs yes i know that, but i wanted to be sure.
[14:43:08] <theprophet> @bjs double check so i dont spread wrong information
[14:43:14] <bjs> theprophet: spread?
[14:43:19] <shangxiao> theprophet: I was joking in reference to your nick
[14:43:20] <theprophet> yes i want to teach in future
[14:43:33] <theprophet> so i am translating everything
[14:43:39] <theprophet> in my own language
[14:43:53] <bjs> theprophet: it's kind of a failure of English to not be able to distinguish between the different meanings (esp. the technical ones) in a sentence
[14:44:09] <theprophet> @bjs i agree 100%
[14:44:21] <bjs> presumably if you're translating to a different language you can leave the technical words in English and have the rest be your own language, so it's easier for the readers
[14:44:27] <bjs> but then you need to know which is which in the original :)
[14:45:05] <theprophet> good to know, thanks
[14:45:21] <theprophet> bjs and agree again on the last sentence
[14:45:54] <bjs> theprophet: are you also trying to learn Python?  It might be too much to try learn and translate to teach others at the same time
[14:46:25] *** Joins: Bardon_ (~Bardon@user/Bardon)
[14:46:30] <theprophet> bjs yes i am learning also, but i am not teaching right now, i am going to in the future, so far i am just teaching my self.
[14:47:07] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 245 seconds)
[14:47:08] <theprophet> bjs writting and reading in my language helps me to understand something ,exactly how and what is it.
[14:47:52] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[14:48:43] <theprophet> bjs for example, while i was learning month ago, i struggled to understand what implementing meant, because everytutorial i wateched or read used  that word
[14:49:11] <theprophet> bjs and since in my language implementing has atleast 4 meanings i was confused, but later i got it.
[14:49:50] *** Quits: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[14:50:19] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[14:50:41] *** Joins: y1n (~y1n@84-115-65-211.wifi.dynamic.surfer.at)
[14:50:56] <theprophet> bjs i dont know why do people use "fancy" words to describe something, when in reality it is something very easy.  i  bet lot of people, whos first language is not a english are confused by that.
[14:51:10] *** Joins: audiocat (~audio@2603-8081-1800-6a6f-7618-ec86-2f00-63d5.res6.spectrum.com)
[14:51:42] <bjs> theprophet: hmm well, the people who write those tutorials and things are probably native english speakers and to be honest that word isn't fancy
[14:52:01] <theprophet> bjs yea thats why i used those " "
[14:52:13] <theprophet> i was sarcastic towards it
[14:52:34] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 265 seconds)
[14:52:55] <theprophet> @bjs and no , there are lot of indians who teach coding and they also say "implement"
[14:53:48] <theprophet> bjs ok ill go back to studying, thank you for your time brother/sister. i aprecciate your time and effort.
[14:53:58] <bjs> theprophet: if they speak English fine then they'll use the words in a sensible way.  Obviously if they're not native or do not have very good English then maybe they use the words in a confusing way
[14:54:22] <theprophet> bjs true
[14:54:54] *** Joins: gggp (~textual@111.63.44.6)
[14:55:28] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-110.dyn.luxfibre.pt.lu) (Ping timeout: 265 seconds)
[14:55:33] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:55:40] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[14:56:12] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-110.dyn.luxfibre.pt.lu)
[14:58:09] <bjs> theprophet: for what it's worth,  I will often use the words "make" or "write" when referring to making something from scratch and "implement" when you need to make/write something that fits a particular shape
[14:58:48] <theprophet> bjs understandable. and i also lean towards your way.
[14:59:56] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:01:22] *** Quits: audiocat (~audio@2603-8081-1800-6a6f-7618-ec86-2f00-63d5.res6.spectrum.com) (Ping timeout: 260 seconds)
[15:04:37] *** Joins: Wubull (~Thunderbi@user/wuniu)
[15:06:02] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-110.dyn.luxfibre.pt.lu) (Ping timeout: 260 seconds)
[15:06:10] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[15:06:11] *** Wubull is now known as Wuniu
[15:06:45] *** Quits: Bardon_ (~Bardon@user/Bardon) (Ping timeout: 260 seconds)
[15:06:49] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:07:48] *** Joins: Bardon (~Bardon@user/Bardon)
[15:11:48] *** Quits: greedom (~greedom@2001:16b8:3211:e300:6699:60e1:6a47:9a7c) (Remote host closed the connection)
[15:12:38] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:15:54] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:16:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:16:51] <raxor2k> bjs: what am i doing wrong here? only the first object gets updated
[15:16:54] <raxor2k> https://bpa.st/476Q
[15:17:27] <bjs> raxor2k: your loop that sets body_area_id is very weird
[15:17:38] <bjs> it just constantly overwrites the last body_area_id that was set
[15:18:00] <bjs> and  then you try use the loop variable ("body_areas") outside of the loop
[15:18:18] *** Joins: Franciman (~Franciman@openglass.it)
[15:18:28] <Franciman> Hi all, is there any library to do statistically significant benchmarks?
[15:18:40] <Franciman> I'd like to test how fast python computes my fibonacci function
[15:18:42] <raxor2k> bjs: in other words, i have wrote a trash code as usual ? :)
[15:18:53] <Franciman> (not because I want to see how fast python is, but to use it as a term of comparison!)
[15:20:22] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 252 seconds)
[15:20:30] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:20:56] <bjs> Franciman: comparison with what
[15:21:10] <bjs> raxor2k: well, the loop is weird. and probably not what you wanted to do.
[15:21:36] <bjs> Franciman: there is the `timeit` module to time things
[15:22:04] <raxor2k> bjs: but you know what i am trying to do, right ?
[15:22:04] <Franciman> bjs: with my interpreter XD
[15:22:23] *** Joins: fikran (~fikran@user/fikran)
[15:22:52] <bjs> raxor2k: not really,  I just know that loop looks weird
[15:22:59] <bjs> because you're trying to use the loop variable outside of the loop
[15:23:32] <Franciman> bjs: but it does not give me enough info, it just outputs a number, without unit meausre too
[15:23:34] <Franciman> there is no mean
[15:23:35] <Franciman> no variance
[15:23:44] <Franciman> how should I interpret that number?
[15:24:45] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[15:24:53] <bjs> Franciman: you said you were implementing your own interpreter
[15:24:57] <bjs> is that right?
[15:24:57] *** Joins: johnny (~johnny@user/johnny)
[15:25:24] <Franciman> yes for my language
[15:25:44] *** Quits: sargon (~sargon@188.250.185.117) (Read error: Connection reset by peer)
[15:25:47] <bjs> Franciman: oh for a different language?
[15:25:52] <Franciman> yes
[15:25:57] <johnny> i'm trying to help someone kinda uhmm modernize their existing setup, but i haven't touched python in about 3 years, and the setup was already there then, so i didn't pay much attention to it
[15:26:18] <johnny> what's the uhm.. best current way to handle python dependencies and installation?
[15:26:24] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[15:26:59] <Repiphany> venvs and pip
[15:27:09] <johnny> still venvs huh
[15:27:15] <bjs> Franciman: I'd say that benchmarking is hard, but you can write your own little timeit thing that computed those statistics if you wanted, I don't know of any that will off the top of my head.
[15:27:17] <johnny> i was hoping those would have gone away
[15:27:27] <Franciman> well no prob!
[15:27:29] <Franciman> thanks bjs
[15:27:30] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[15:27:39] <shangxiao> johnny: virtualenvs are now a part of stdlib :)
[15:27:41] <Franciman> I wanted to avoid doing it, for time (pun) issues
[15:27:45] <bjs> Franciman: those statistical values are often not very meaningful here, see https://docs.python.org/3/library/timeit.html#timeit.Timer.repeat
[15:27:48] <raxor2k> bjs: look now: https://bpa.st/BFVA    you cant say that this is weird
[15:27:48] <Franciman> but I understand, I'll probably go down that way
[15:27:51] <shangxiao> (not sure if that was on your radar 3 years ago)
[15:27:57] <johnny> too bad
[15:28:12] <shangxiao> johnny: why?
[15:28:19] <bjs> raxor2k: that looks even weirder, what is all_body_areas ? You're still just overwriting body_area_id  again and again and using it outside the loop
[15:28:34] <Franciman> hmm I see
[15:28:37] <johnny> i was inda hoping for something that worked more like rust, node, and php in that i get my deps right local without anything fancy
[15:28:50] <Franciman> ty
[15:28:52] <johnny> and i'd also have a lockfile
[15:29:01] *** Quits: y1n (~y1n@84-115-65-211.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[15:29:06] <johnny> does python really not have lockfiles yet?
[15:29:18] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[15:29:20] <shangxiao> johnny: create a symlink to your virtual env's site-packages, and bada-boom ... local deps
[15:29:20] <johnny> i mean dep managers for python, not python itself
[15:29:34] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[15:29:36] <shangxiao> pip freeze > lockfile :)
[15:29:37] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[15:29:43] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[15:29:49] <shangxiao> but on a more serious note you can get lockfiles with poetry
[15:29:58] <shangxiao> you may want to check that out
[15:30:03] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[15:30:36] <shangxiao> it's quite popular, but I still think it has teething problems
[15:30:49] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 252 seconds)
[15:31:24] <shangxiao> and fwiw I use direnv, it manages virtualenvs for you within your project's directory
[15:31:30] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[15:31:47] <johnny> ah. i was just gonna ask about something i could integrate direnv with
[15:31:58] <johnny> but i wanted to understand what activate did under the ood
[15:32:00] <johnny> hood*
[15:32:14] *** Parts: Franciman (~Franciman@openglass.it) (WeeChat 3.2)
[15:32:26] <Repiphany> pyenv, pipenv, poetry
[15:32:27] <shangxiao> you mean how direnv activates a python venv?
[15:32:43] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[15:32:56] <johnny> more like what activate itself does. i assume it adjusts the uhmm iirc PYTHONPATH , but what else?
[15:33:03] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[15:33:06] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[15:33:27] *** Joins: xa0s (~xa0s@mab.sdf.org)
[15:34:09] <johnny> oh yeah it does something to get you the proper python binary so python as a command works
[15:34:16] <shangxiao> I don't know what the specifics are, but if you wanted to know more about "venv" (as opposed to pypa's virtualenv) here's the docs: https://docs.python.org/3/library/venv.html
[15:34:55] <johnny> Repiphany, isn't pyenv the thing to get you different versions of python itself? or am i think of something else
[15:35:01] <shangxiao> yes
[15:35:01] <johnny> i remember having something like that at one point
[15:35:11] <shangxiao> similar to rvm
[15:35:29] <johnny> yeah. i used pyenv when i worked on the beets project to help it convert to python3
[15:35:48] <johnny> that was around uhmm.. python 3.6 or so ithink
[15:36:02] <johnny> maybe it was 7
[15:37:18] <raxor2k> bjs: ok now then? https://bpa.st/UBSA does it still look weird?
[15:37:40] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[15:37:56] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[15:38:10] <Repiphany> Lines 15-16 aren't doing anything except getting the last body_area_ID from your list
[15:38:50] <Repiphany> You're missing an indent for 18-21 probably
[15:39:41] <shangxiao> fwiw a linter would warn about unused var body_area_id :)
[15:39:52] <Repiphany> But why you do loop over the dict values when you can just look up the body_area directly
[15:40:09] <raxor2k> repiphany: thanks !
[15:40:19] <Repiphany> Oh wait, no your key is different
[15:40:41] <raxor2k> worked perfectly
[15:40:46] <raxor2k> appreciate it :)
[15:40:53] *** Quits: flyingchef (~flyingche@user/flyingchef) (Quit: WeeChat 3.2)
[15:41:05] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[15:41:21] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[15:41:34] <shangxiao> someone ought to write a python pastebin that forces readable formatting with black xD
[15:42:13] <raxor2k> shangxiao: what do you mean ?
[15:42:54] *** Quits: raxor2k (~raxor2k@78.158.248.203) ()
[15:43:04] *** Joins: y1n (~y1n@84-115-64-69.wifi.dynamic.surfer.at)
[15:43:12] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[15:43:48] *** Joins: greedom (~greedom@2001:16b8:3211:e300:6699:60e1:6a47:9a7c)
[15:44:11] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[15:45:31] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.2)
[15:47:12] *** Joins: Vonter (~Vonter@user/vonter)
[15:48:49] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[15:49:29] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:53:40] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[15:54:45] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[15:55:07] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:57:11] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[15:57:25] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[15:57:54] <sveinse> Are there any smart tricks to enter a context conditonally? I need to optinonally enter a context, but the inner code remains the same. I suppose the best is a traditional try: finally: block and do the conditional context enter and exit manually.
[16:00:02] <bjs> sveinse: or just conditionally decide which context to enter (e.g. between yours and nullcontext
[16:00:29] *** Joins: gggp (~textual@60.10.23.169)
[16:01:14] <sveinse> bjs: Ah, there is a nullcontext in contextlib. Thanks!
[16:01:59] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[16:03:07] *** Quits: y1n (~y1n@84-115-64-69.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[16:05:51] *** Joins: Adoi (~Adoi@user/adoi)
[16:06:08] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:11:16] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[16:11:56] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[16:13:48] *** jazzy2 is now known as jazzy
[16:13:51] *** Joins: slav0nic (slav0nic@python.su)
[16:15:15] *** Quits: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) (Quit: Leaving.)
[16:17:50] <theprophet> is pygame.quit  and pygame.QUIT are same?
[16:18:18] <theprophet> are*
[16:18:45] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Ping timeout: 250 seconds)
[16:19:21] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:20:03] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[16:20:39] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-23.dyn.luxfibre.pt.lu)
[16:21:47] *** Quits: uuair (~quassel@user/uuair) (Quit: No Ping reply in 180 seconds.)
[16:22:11] *** Joins: b_jonas (~x@catv-176-63-3-104.catv.broadband.hu)
[16:25:25] <shangxiao> theprophet: no, just looking at the pygame code: quit() is a method whereas QUIT is a constant.
[16:25:54] <shangxiao> This particular project might be a bit hard to read the source as it's partially in C, but here's the constant: https://github.com/pygame/pygame/blob/main/src_c/constants.c#L360
[16:26:22] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:26:32] *** Joins: georgios (~georgios@user/georgios)
[16:27:02] <theprophet> shangxiao ok thanks.
[16:27:42] <shangxiao> this looks like the method if you're curious: https://github.com/pygame/pygame/blob/main/src_c/display.c#L3127
[16:28:06] *** Joins: uuair (~quassel@user/uuair)
[16:28:37] <theprophet> shangxiao can you tell me, how both affect the game?
[16:29:18] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:30:21] <shangxiao> so a constant is just something used as a value, it doesn't affect anything. It looks like it's being used for a specific "quit" event.
[16:30:38] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (Quit: brb, sex)
[16:30:40] <shangxiao> perhaps calling quit() triggers a quit event
[16:30:50] <shangxiao> I don't really know pygame
[16:30:56] *** Joins: Leliana (is@2a02:2658:1133:0:dead:babe:0:1)
[16:31:06] <theprophet> shangxiao ok.thank you
[16:32:33] <johnny> ah.. pdm is the thing i want
[16:32:44] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-23.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[16:32:58] <johnny> it's worth a shot.. worst thing that can happen is i do virtualenv again
[16:33:22] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[16:33:34] <johnny> pep 582 is exactly what i was waiting for
[16:34:21] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:52] *** Quits: sandb0y (pirate@user/sandb0y) (Quit: WeeChat 3.2)
[16:39:20] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.2)
[16:40:44] *** Joins: Vonter (~Vonter@user/vonter)
[16:44:48] *** Joins: skylite (~skylite@2E6B2CD6.unconfigured.pool.telekom.hu)
[16:47:23] <skylite> when I loop through a list of strings with for..in and change the list element, it will not change the original list element. When doing the same with a list of dictionaries, I am able to mutate the oroginal dictionary in the list. What's the explanation?
[16:48:05] <grym> skylite: strings are immutable, dicts aren't
[16:48:21] <grym> skylite: bit.ly/pynames1 can clear up many confusions that arise here
[16:50:42] <skylite> grym: but the loop items are copied inside the loop if they are strings but they are used as a reference when they are dictionaries
[16:50:59] <skylite> how is this connected to immutability?
[16:51:25] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.69-101.dynamic.3bb.co.th)
[16:51:44] <grym> skylite: search in that link for the phrase "Let’s say we have a list of numbers, and we want to multiply them all by 10"
[16:52:02] <skylite> okay
[16:52:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[16:52:33] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[16:52:39] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:54:08] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[16:55:15] *** Quits: p-i- (~Ohmu@223.206.69.101) (Ping timeout: 260 seconds)
[16:55:49] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 265 seconds)
[16:55:50] *** Quits: johnny (~johnny@user/johnny) (Ping timeout: 260 seconds)
[17:00:29] <skylite> I think I get it now thanks
[17:02:16] *** Joins: Naan (~naan@user/naan)
[17:03:22] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:03:57] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:05:21] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[17:06:01] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:12:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[17:14:35] *** Joins: Pickchea (~private@user/pickchea)
[17:16:23] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[17:17:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:17:45] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:20:29] *** Quits: axe (~duidvd@178.238.167.98) (Read error: Connection reset by peer)
[17:21:01] <space-ghost> grym: lol should it not say: strings are immutable, dicts are
[17:21:07] <space-ghost> :p
[17:24:06] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:25:59] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2)
[17:27:16] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 252 seconds)
[17:29:05] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 260 seconds)
[17:29:35] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:29:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:31:31] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:31:46] *** Joins: fikran (~fikran@user/fikran)
[17:32:34] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[17:33:21] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:33:48] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:34:00] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 265 seconds)
[17:41:51] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[17:44:55] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[17:45:52] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[17:46:05] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[17:46:23] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[17:49:22] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[17:50:07] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[17:52:07] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[17:52:34] *** Joins: pycurious (~Adium@user/pycurious)
[17:53:59] *** Joins: gareppa (~gareppa@user/gareppa)
[17:54:32] *** Joins: Atque (~Atque@user/atque)
[17:54:39] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[18:01:02] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[18:03:05] <nedbat> space-ghost: shouldn't what say?
[18:03:45] *** Joins: sedeki (~textual@user/sedeki)
[18:04:44] *** Joins: gggp (~textual@123.113.181.187)
[18:04:58] *** Joins: sp0fp12 (~sp0f.p12@114.79.21.54)
[18:05:10] <sp0fp12> no one here?
[18:05:22] <sp0fp12> welp
[18:05:54] *** Quits: sp0fp12 (~sp0f.p12@114.79.21.54) (Quit: WeeChat 3.2.1)
[18:05:55] <Yhg1s> very many people here.
[18:05:58] <Yhg1s> oh well.
[18:06:33] <nedbat> what sort of signal were they looking for?
[18:07:27] * grym frantically googling 'bat kaomoji'
[18:08:00] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[18:09:11] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:13:24] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[18:13:30] <gimzmoe> I'm trying to do a list-comprehension with a lot of elements very quickly.  I have a somewhat complex function to perform on each value.  I notied that calling a 'function' was much slower than putting all the math steps inside the the very ugly list-comprehension... why is that?  can I do anything to make that better?
[18:14:16] *** Joins: sp0fp12 (~sp0f.p12@114.79.17.102)
[18:15:35] *** Quits: gggp (~textual@123.113.181.187) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:15:52] *** Joins: clarkk (~clarkk@host86-164-233-103.range86-164.btcentralplus.com)
[18:15:55] <The-Compiler> gimzmoe: can you show some code? How much slower are we talking?
[18:16:43] <gimzmoe> sure, I'll do a pastebin, it's a couple of orders of magnitude... but the faster version isn't quite fast enough, I'm still looking to shave off more if I can do it
[18:17:05] <nedbat> gimzmoe: i don't see how one function call can add orders of magnitude to the time
[18:17:32] *** Quits: Duality (~pi@82-197-207-54.dsl.cambrium.nl) (Ping timeout: 245 seconds)
[18:17:43] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:18:54] <bpalmer> It wouldn't surprise me if something like [x**x for x in l]  vs something like [math.pow(x, x) for x in l] is significantly faster , although maybe not multiple orders of magnitude
[18:19:22] <gimzmoe> https://pastebin.com/LE4LgQsp
[18:19:37] <gimzmoe> that's the "faster" one
[18:20:05] <clarkk> I've written this very simple script to read a csv file and output it to the shell, but nothing is being output. Can anyone suggest why, please?  https://bpa.st/BIJA
[18:20:06] <bpalmer> since it's not just a function call, but also a function lookup
[18:20:35] <bpalmer> (in theory, python could be smart enough to pull the lookup out of the loop; hmm)
[18:20:54] <grym> clarkk: well, you're not printing anything
[18:20:59] <shlomif> clarkk: line 6 needs a print() call
[18:21:40] *** Joins: heco (~redrum@user/redrum88)
[18:21:49] <sp0fp12> is there any of python pip package that useful for hacking?
[18:22:57] <The-Compiler> sp0fp12: define hacking
[18:23:12] <clarkk> grym, I'm following https://realpython.com/python-f-strings/#how-to-use-strformat
[18:23:12] <bpalmer> just checked with dis.dis and it looks like it's doing the math and pow lookup each time through.
[18:23:27] <nedbat> gimzmoe: can you also show the slower one, and how you timed them?
[18:24:07] *** Quits: frost (~frost@59.71.242.61) (Quit: Connection closed)
[18:24:08] <nedbat> gimzmoe: i'm also curious what types A and C are?
[18:24:33] <gimzmoe> nedbat: the slower one called the conditions as a function instead of cramming everything in the comprehension.  A is a np.array/vector and C is a float
[18:24:46] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-99d6-bdeb-8186-b199.res6.spectrum.com)
[18:25:03] <grym> clarkk: ok, but if you don't print a string it won't be displayed
[18:25:05] <grym> clarkk: https://bpa.st/MKOQ
[18:25:06] <gimzmoe> basically i'm trying to shortcut checking the that the angle between two vectors is less than the angle representedd by C
[18:25:19] <sp0fp12> The-Compiler: What do you mean?
[18:25:22] <nedbat> gimzmoe: i think there is something other than the function call making it slower.  If you could pastebin the actual code you ran, we might see what's going on.
[18:25:34] <nedbat> sp0fp12: we don't know what you mean by "hacking"
[18:25:38] <grym> clarkk: whoops, forgot an indent https://bpa.st/KQ6Q
[18:26:20] <gimzmoe> nedbat: the answer to my main question seems to be that calling a function shouldn't slow thing down
[18:26:26] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:26:43] <nedbat> gimzmoe: there is some overhead for a function call, but not 100 times the work you are doing here
[18:26:46] <sp0fp12> nedbat: pip package that help me to find open ports, or scraping
[18:27:01] <grym> clarkk: sorry, early :) https://bpa.st/644Q
[18:27:09] <gimzmoe> I am running over 21,000 items in the list
[18:27:50] <nedbat> gimzmoe: ok, but you have two function calls here as it is.  How could adding one more function make it 100 times slower?
[18:28:40] <The-Compiler> sp0fp12: "hacking" can mean a lot, it's like if you were asking for a package useful for doing things with files, that could mean a lot of different things
[18:28:44] <gimzmoe> nedbat: that was what was confusing me
[18:29:02] <nedbat> gimzmoe: so it's a mystery, and only you have all the details :)
[18:29:03] <bpalmer> (is it 100 times slower or, like, 4 times slower? What's the radix?)
[18:29:26] <nedbat> bpalmer: does anyone say "two orders of magnitude" and mean base 2?
[18:29:31] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[18:29:39] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[18:29:52] <bpalmer> I have...
[18:30:09] <clarkk> thank you, grym - that works nicely :)
[18:30:12] <gimzmoe> nedbat: it's cog in a much bigger program so it's hard to extract
[18:30:28] <bpalmer> Then I realized it was ambiguous and I try to just give approximate multiples instead.
[18:32:03] <sp0fp12> The-Compiler: Ok sorry for not talking clearly, i already have the package found on google
[18:32:13] <nedbat> sp0fp12: what did you find?
[18:32:35] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[18:33:00] <sp0fp12> nmap, requests, bs4, etc
[18:33:10] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:34:15] *** Quits: sp0fp12 (~sp0f.p12@114.79.17.102) (Quit: Shutdown bye)
[18:34:30] <The-Compiler> ¯\_(ツ)_/¯
[18:34:42] *** Joins: pro_z (~pro_z@37.214.66.151)
[18:35:56] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[18:40:50] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[18:40:52] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:54b0:43e6:cce0:83c) (Ping timeout: 245 seconds)
[18:41:41] <fbiagent> anyone here aware of the "best" way to run tests in python where the test data is defined in a bunch of custom files?
[18:42:32] <grym> fbiagent: i usually write pytest fixtures that ultimately wind up doing silly Path(__file__) games
[18:42:39] <grym> i don't feel very bad about this
[18:43:16] <Cheaterman> Oh, wow ; say I wanna keep track of all modules a user has imported under a specific folder/package, I just need to play with the sys.path_hook import-machinery-magic thingies?
[18:43:24] <fbiagent> grym, that sounds about right for my research thus far, was just curious if there was anything that said "hey look into these files for parameterized tests and use this function to parse the file into inputs and outputs"
[18:43:31] <Cheaterman> it all seems extremely simple - at least surprisingly so for a topic that's so complex in practice
[18:43:53] <The-Compiler> fbiagent: you can use anything returning a list inside parametrize, or you could write a custom pytest collection plugin collecting those files as tests
[18:43:58] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[18:44:13] <The-Compiler> fbiagent: see https://docs.pytest.org/en/6.2.x/example/nonpython.html for the plugin approach
[18:44:15] <fbiagent> pytest collection plugin sounds interesting
[18:44:41] <Cheaterman> (if you're wondering "why" - I'm making some sort of plugin system for a videogame)
[18:44:52] <The-Compiler> fbiagent: and https://github.com/qutebrowser/qutebrowser/blob/master/tests/end2end/test_hints_html.py#L33-L87 for an example of the "returning a list" thing
[18:45:15] <fbiagent> The-Compiler, thanks for the references, seems either will work OK
[18:45:19] <grym> Cheaterman: ahh, you have elected for the way of pain :D
[18:45:26] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[18:45:29] <grym> s/for//
[18:46:21] <Cheaterman> grym: How so!? It honestly seems relatively painless, and let me show you what kind of dark wizardry circles we're treading anyway... :
[18:46:43] <Cheaterman> grym: https://gist.github.com/Cheaterman/adb03cfbba0066d67630cfbc80a1ce3c#file-__init__-py-L109
[18:46:54] <Cheaterman> Take a look at this beauty, exec() in a for loop in global scope
[18:47:36] <Cheaterman> I'll stop at nothing (nothing!) to make my users' lives easier. Short of the technically impossible of course, but as it turns out that's a pretty small set
[18:48:10] <Cheaterman> The thing I wanna get rid of right now is the "pyload()" calls you can see under OnPyInit
[18:48:33] <Cheaterman> Ideally those would merely be imports in the global scope, and the magic hooking that pyload() does would be done by a sys.path_hook or something along those lines
[18:48:38] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[18:49:34] <Cheaterman> Does that make sense? The general idea is that I wanna keep track of those modules so that I can call callbacks on them (like that for-exec() loop might suggest)
[18:50:01] <Cheaterman> This ties into my question from yesterday, where I was evoking a different (inferior IMHO) approach of simply iterating over _all_ sys.modules for each callback
[18:50:36] <Cheaterman> (and doing some string compare, eg module.__name__.startswith('python.') )
[18:50:56] *** Joins: X4 (~X4@ip-95-223-73-17.hsi16.unitymediagroup.de)
[18:51:39] *** Joins: fr_sleepy (~fr_sleepy@209.94.138.128)
[18:51:50] <Cheaterman> grym: (if the general "games" part is "the way of pain", then SA-MP (that I'm working on) is probably some sort of purgatory)
[18:53:03] <Cheaterman> (you don't wanna start the server with ASan... no you don't. If you do, you don't wanna look up the difference between delete and delete[]... keep thinking they're "similar enough" and be happy that you don't have to write/debug C++ code...)
[18:57:04] *** Quits: shangxiao (~davids@124.187.193.187) (Quit: WeeChat 3.2.1)
[18:57:58] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 260 seconds)
[19:00:06] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:00:25] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:00:51] *** Joins: zepolen (~zepolen@2a02:587:8611:2428:1141:e764:dbdc:24dd)
[19:07:35] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[19:10:30] *** Joins: badmap (~badmap@user/badmap)
[19:11:03] *** Joins: paul424 (~tom@ip-37-248-154-203.multi.internet.cyfrowypolsat.pl)
[19:11:20] <badmap> How can one break out of a loop in a python one-liner on the command-line with -c ?  (Seeing as indentation is not really appropriate there)
[19:13:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:14:03] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[19:14:13] <bpalmer> badmap: you can normally have multiple lines on "the" command line , with appropriate quoting. But by the time you're doing blocks, consider it might be easier to have a throwaway script rather than doing it on the command line
[19:14:39] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[19:15:34] <bpalmer> badmap: for example, using bash, after I type python3 -c '   , I can just hit return and be on a newline, while bash waits for me to finish the quote. I can use the readline binding C-x C-e to pop into an editor (perhaps vim or emacs) to edit the command line to taste.
[19:15:39] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[19:15:59] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Ping timeout: 265 seconds)
[19:17:39] <badmap> bpalmer: yeah, aware of the potential to use shell features to support multi-line - as you allude to, it gets a bit rotten by that point.  was just wondering if python -c supported any kind of ergonomics for that common use-case, surprised it does not.
[19:18:17] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[19:19:10] <badmap> bpalmer: ps your scare-quotes there make it seem as though I had referred to "the google" - I don't consider "the command-line" egregious in any kind of way! :D
[19:19:43] <bpalmer> badmap: sorry, I meant to highlight it's not an actual single line.
[19:19:56] <badmap> Ha, I see what you mean
[19:20:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:22:52] *** Joins: srhm (~srhm@user/srhm)
[19:23:17] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:23:34] *** Joins: gentlinux (~gentlinux@2a02:8108:1880:294:3787:9d9d:a422:6d07)
[19:23:44] *** Joins: srhm (~srhm@user/srhm)
[19:28:57] *** Joins: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282)
[19:29:01] *** Joins: LiftLeft (~LiftLeft@172.98.92.55)
[19:29:33] *** Joins: magla (~gelignite@55d48887.access.ecotel.net)
[19:30:51] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:31:02] *** Joins: asix (~Anders@user/asix)
[19:32:47] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[19:33:00] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-23.dyn.luxfibre.pt.lu)
[19:34:56] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[19:36:33] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[19:36:47] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[19:38:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[19:39:54] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[19:39:59] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[19:40:10] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[19:40:14] *** Quits: pizdets (~pizdets@183.182.111.150) (Quit: pizdets)
[19:40:58] *** Joins: pizdets (~pizdets@183.182.111.150)
[19:41:10] *** Joins: fikran (~fikran@user/fikran)
[19:41:51] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:42:49] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:43:06] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.2)
[19:46:18] *** leonardus is now known as leonardus_
[19:47:55] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:49:08] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[19:49:57] *** Joins: lastshell (~lastshell@user/lastshell)
[19:52:15] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[19:52:31] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[19:54:26] *** Joins: djfhn (~djfhn@178.49.152.151)
[19:54:58] <djfhn> what is the easiest way to download an archive from the net and unpack it?
[19:56:04] <Elon_Satoshi> give me a small example archive and i'll try to find out
[19:56:12] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[19:56:31] <The-Compiler> djfhn: requests and shutil.unpack_archive (or the zipfile module) probably
[19:57:01] <Elon_Satoshi> urllib can be used based on what i saw in a duckduckgo search
[19:57:08] <djfhn> is requests built-in in python3?
[19:57:29] <bjs> djfhn: no
[19:57:45] *** Joins: zmt01 (~zmt00@user/zmt00)
[19:57:57] <The-Compiler> urllib works and is in the stdlib, but not the easiest way
[19:59:54] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[20:01:48] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:02:24] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[20:09:44] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Quit: Leaving...)
[20:09:49] *** Joins: patates (~patates@24.133.97.166)
[20:11:01] *** Joins: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-3d71-7027-8609-c88c.res6.spectrum.com)
[20:14:14] *** Quits: patates (~patates@24.133.97.166) (Quit: Leaving)
[20:22:55] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:23:20] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[20:24:23] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:24:52] *** Joins: upsala (~zcb@194.36.25.10)
[20:25:33] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[20:25:48] *** Joins: nomic (~nomic@185.192.69.176)
[20:26:16] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[20:28:25] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[20:28:49] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[20:28:55] *** Joins: txtsd (~txtsd@user/txtsd)
[20:28:55] *** Joins: alaudet (~al@135.129.115.175)
[20:30:09] *** Quits: alaudet (~al@135.129.115.175) (Client Quit)
[20:30:23] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Read error: Connection reset by peer)
[20:31:01] *** Joins: KombuchaKip (~kip@192.252.230.5)
[20:35:12] *** Quits: paul424 (~tom@ip-37-248-154-203.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[20:36:20] *** Joins: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi)
[20:37:51] *** Quits: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi) (Client Quit)
[20:42:31] *** Joins: rapha (~jrs@user/rapha)
[20:42:33] <rapha> hi all!
[20:43:09] <rapha> in https://gist.github.com/sixtyfive/03101f2f968245accef02594b293179b , is there a faster (in terms of computation) way of extracting those two floats and 4 bools out of the "line" string?
[20:43:28] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:50:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[20:54:04] <gitesh> what is __name__ variable?
[20:55:03] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[20:58:03] *** Joins: sshrubber (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[20:58:40] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.69-101.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[20:59:54] *** Joins: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net)
[21:00:32] *** Joins: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th)
[21:01:46] <rapha> either "__main__" or the name of the script, if you import it, gitesh
[21:01:53] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:02:04] <gitesh> rapha: got it
[21:03:07] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[21:03:07] <Compu-Celebi> I have been attempting to open a MIDI device for input or output with the ALSA API function `snd_rawmidi_open` with `ctypes`, but my attempts to do so have, at best, resulted in the function returning the value `-2`, which represents the error message, "No such file or directory."
[21:03:37] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[21:04:01] <Compu-Celebi> I am perhaps specifying one or more of the arguments incorrectly, perhaps due to data type-related issues.
[21:04:17] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[21:04:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[21:04:26] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[21:04:49] <Compu-Celebi> The function is documented at https://www.alsa-project.org/alsa-doc/alsa-lib/group___raw_midi.html#ga2ab783051deeb7eb37eb568b76448889.
[21:06:03] <Compu-Celebi> The data type `snd_rawmidi_t` is documented at https://www.alsa-project.org/alsa-doc/alsa-lib/group___raw_midi.html#gaa21972df6ca3ebde0f7225b2472d0095, but it merely indicates that it is a type definition of the structure `_snd_rawmidi`, documentation for which I cannot locate.
[21:06:43] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:08:02] <Compu-Celebi> I have attempted to pass `snd_rawmidi_t` arguments by reference, with `ctypes.byref`, applying it to a variable whose value is a `ctypes.pointer` instance, but I am uncertain of what the data type of the data to which the pointer is to point should be.  I have tried a few possibilities that seemed to make sense.
[21:08:10] *** Quits: et (~et@user/et) (Ping timeout: 260 seconds)
[21:09:29] *** Joins: Logograph (~logograph@user/logograph)
[21:09:48] *** Joins: et (~et@user/et)
[21:11:18] <Compu-Celebi> I have used `ctypes.c_char_p` for the name argument, but that the documentation precedes "`char *`" with "`const`" causes me to wonder whether that is not quite correct.
[21:11:42] *** Joins: wilk (~wilk@user/wilk)
[21:11:43] *** Quits: rsx (~dummy@ppp-188-174-153-122.dynamic.mnet-online.de) (Quit: rsx)
[21:12:30] <Compu-Celebi> For undesired handles, I have used `None` for their respective arguments.
[21:16:44] <Logograph> question
[21:17:00] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[21:17:03] <Logograph> does uwsgi have any advantages over gunicorn other than customization?
[21:17:25] <Compu-Celebi> I do not know what either of those is.
[21:17:30] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[21:17:36] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[21:17:53] <Logograph> wsgi application servers
[21:18:00] *** Joins: n1ceaf (~Mark_Pine@gateway/tor-sasl/markpinecone/x-88286818)
[21:18:26] <Compu-Celebi> I do not know what "wsgi" is, either.
[21:19:14] <enyc> https://wiki.python.org/moin/IRC  <- links need updating for irc network I think!
[21:19:40] <enyc> presumably,  https://staging.python.org/community/irc/  is a test/"staging" server not important...?
[21:19:54] *** Quits: Mark_Pinecone (~Mark_Pine@gateway/tor-sasl/markpinecone/x-88286818) (Ping timeout: 276 seconds)
[21:19:54] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[21:20:25] *** Joins: sh4rk (~lemonade@sharkdrip.com)
[21:21:21] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[21:23:13] <supakeen> Logograph, not really plus easy to swap out later anyways.
[21:23:48] <NeilRG> could someone help me understand how I figure out where something is installed?
[21:23:51] *** Joins: fanis30 (~fanis30@adsl-121.37.6.3.tellas.gr)
[21:24:00] <NeilRG> when I call pip freeze, I see a library that I can't remove
[21:24:42] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[21:24:50] <NeilRG> ah nm, I got rid of it somehow
[21:25:14] <Logograph> supakeen, ah k
[21:25:17] *** Quits: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-3d71-7027-8609-c88c.res6.spectrum.com) (Quit: Konversation terminated!)
[21:25:23] <Logograph> gonna stick with gunicorn then
[21:25:54] *** Quits: jazzy (~jaziz@2600:380:865d:911b:e5e1:b429:e129:6354) (Ping timeout: 260 seconds)
[21:26:59] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[21:27:12] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[21:27:43] *** Quits: clarkk (~clarkk@host86-164-233-103.range86-164.btcentralplus.com) (Quit: Leaving)
[21:28:32] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[21:31:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:32:14] *** Joins: daoudr (~daoudr@178.197.216.245)
[21:39:54] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 260 seconds)
[21:39:56] *** Quits: greedom (~greedom@2001:16b8:3211:e300:6699:60e1:6a47:9a7c) (Remote host closed the connection)
[21:40:30] *** Joins: greedom (~greedom@2001:16b8:3211:e300:6699:60e1:6a47:9a7c)
[21:40:38] *** Joins: korg815 (~korg815@user/korg815)
[21:43:41] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 252 seconds)
[21:45:03] <rapha> hmm, ok let me try without a gist then...
[21:45:07] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[21:45:09] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[21:46:02] *** Joins: Joel (~jjshoe@user/joel)
[21:46:04] <rapha> what's the computationally fastest method of extracting 1.22, -1.82, and 4x False out of "< 1:1.22N 2:-1.82N 0,0,0,0\r\n"?
[21:47:27] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[21:47:41] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[21:48:06] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[21:48:31] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[21:48:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[21:48:52] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[21:49:12] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[21:50:32] *** Joins: fikran (~fikran@user/fikran)
[21:51:37] *** Joins: LucaTM (~LucaTM@user/lucatm)
[21:52:20] <jinsun> is it always 2 floats and 4 bools? then a single regex can be written for the entire string
[21:54:18] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[21:55:07] <jinsun> if the number varies, then regex will be pain, then I'll do string split and slicing, but that might not be too fast
[21:55:27] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[21:56:16] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[22:00:13] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:00:23] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[22:02:52] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-23.dyn.luxfibre.pt.lu) (Ping timeout: 252 seconds)
[22:03:54] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[22:04:33] <vd> hi there -- I use `python -m http.server` to expose a local directory to my network. I want to trace how much data was transferred, how can I do that?
[22:05:12] <vd> (like maybe dumping the summary when I kill the process)
[22:05:37] <ali1234> you would have to extend the server class in your own script, or use an external program to monitor the connections
[22:06:08] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:06:11] <AhmedAmerican> am using the following `df1['Expiration'] = pd.to_datetime(df1['Expiration']).dt.to_period('M')` within a big file `5gb` and right now it's giving me an error -- > `pandas._libs.tslibs.np_datetime.OutOfBoundsDatetime: Out of bounds nanosecond timestamp: 1-07-22 00:00:00`
[22:06:19] <AhmedAmerican> how to know the line which cause that error ?
[22:06:55] <grym> AhmedAmerican: bisect your data?
[22:06:57] <vd> Since I'm using http.server for development, I figured it would be best to extend the server class then
[22:07:10] <vd> how do I change the default port (8000) for python -m http.server?
[22:07:41] *** Joins: hanzlu (~hanzlu@aruba-eduroam-149-151.abo.fi)
[22:07:47] <grym> vd: try `python -m http.server --help`
[22:07:55] <vd> ha nice
[22:07:57] <AhmedAmerican> grym: what do you mean by `biesct` ?
[22:08:03] <Compu-Celebi> AhmedAmerican, your original inquiry lacks context.  What are the values of `df1` and `pd`?
[22:08:09] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[22:08:43] <jinsun> pd is pandas probably
[22:08:52] <Compu-Celebi> What is "pandas"?
[22:08:55] <grym> AhmedAmerican: if you have 5 GB of data and you don't know what's bad in it, cut it in half; run your code on half.  if no problem run the other half, etc.
[22:09:14] <grym> Compu-Celebi: if someone's question is entirely without context to you, you can just let it pass by
[22:09:33] <grym> pandas is a pretty hairy library that's commonly used in data science applications
[22:10:21] <Compu-Celebi> The fact remains that AhmedAmerican presented code that contains variables whose values he did not specify.
[22:10:30] *** Parts: hanzlu (~hanzlu@aruba-eduroam-149-151.abo.fi) (Konversation terminated!)
[22:10:48] <jinsun> you don't want to see the 5 gb of data really
[22:11:25] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[22:12:17] *** Joins: Akuli (~Akuli@82-203-160-226.bb.dnainternet.fi)
[22:13:20] *** Quits: X4 (~X4@ip-95-223-73-17.hsi16.unitymediagroup.de) (Quit: Client closed)
[22:13:30] *** Quits: fanis30 (~fanis30@adsl-121.37.6.3.tellas.gr) (Quit: WeeChat 3.2)
[22:13:34] <AhmedAmerican> https://bpa.st/336Q here's the code
[22:13:40] <AhmedAmerican> the error relay on line# 30
[22:14:17] <ramblebamble> vd if you know the packet-size(roundabout) you can use "netstat -s"
[22:15:34] <ramblebamble> vd or dedicated programm  as ali1234 suggested, like bmon
[22:16:19] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:16:22] <rapha> jinsun: yes, always 2 floats and 4 bools. i have a regex at the moment, but i'm wondering if it's the thing giving me performance troubles.
[22:16:23] <rendar> why do i get this strange behavior? https://bpa.st/MWIQ
[22:17:54] <The-Compiler> rendar: nonlocal is for an enclosing non-global scope
[22:18:20] <The-Compiler> rendar: https://docs.python.org/3/reference/simple_stmts.html#grammar-token-nonlocal-stmt
[22:18:52] <rendar> oh, right, i see
[22:18:57] <rendar> so here i need `global gate`
[22:19:00] <The-Compiler> yep
[22:19:14] <The-Compiler> actually, no
[22:19:27] <The-Compiler> only if you want to reassign gate (i.e. 'gate = ...' from inside the function)
[22:22:21] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:26:36] *** Joins: Balzy (~Balzy@host-95-251-241-144.retail.telecomitalia.it)
[22:27:01] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[22:27:47] *** Joins: nomic (~nomic@185.192.69.176)
[22:27:52] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 265 seconds)
[22:28:28] <Compu-Celebi> It turns out my code was valid but that I was specifying the device name incorrectly.  Although the output of `aplaymidi -l` on my computer indicated specified that the port of the MIDI device that I was attempting to open (my Yahama PortableGrand DGX-505) was 24:0, I needed to use `b"hw:2,0,0"`, not, for example, `b"hw:24,0"`.
[22:28:29] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[22:28:50] *** Quits: daoudr (~daoudr@178.197.216.245) (Quit: Leaving)
[22:29:15] <Compu-Celebi> The output of `amidi -l` on my computer specified the former string, instead, and it was specified as the "device."
[22:29:47] <Compu-Celebi> Evidently, the card number is two and the device and subdevice numbers are zero.
[22:29:48] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[22:30:40] <Compu-Celebi> That seems to be a standard method of referring to a computer's devices on GNU/Linux systems.  I am unfamiliar with any such method.
[22:30:59] <Compu-Celebi> I have only been using GNU/Linux for a few years and was using Windows for many years prior.
[22:31:41] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:32:40] *** Quits: gitly (~gitly@85.255.235.91) (Ping timeout: 252 seconds)
[22:32:47] *** Quits: homerj (~homerj@user/homerj) (Quit: leaving)
[22:34:50] *** Joins: gitly (~gitly@85.255.232.119)
[22:36:58] *** Joins: clarkk (~clarkk@host86-164-233-103.range86-164.btcentralplus.com)
[22:40:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[22:40:23] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[22:40:35] *** Joins: vats (~vats@103.70.83.191)
[22:41:48] <rapha> Compu-Celebi: the only place where you probably wanna be prepending "Linux" with "GNU/" might be #gnu :)
[22:42:10] *** Joins: kosh_ (~kosh@user/kosh)
[22:42:32] <Compu-Celebi> "GNU/Linux" is the proper name.  "Linux" is the kernel's name.
[22:42:44] *** Joins: promey_ (~Promeys@gateway/tor-sasl/promey)
[22:42:56] <Compu-Celebi> Calling the operating system "Linux" is analogous to calling Native Americans "Indians."
[22:42:58] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Remote host closed the connection)
[22:43:00] *** Joins: djapo (~archangel@user/djapo)
[22:43:13] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[22:43:15] *** Quits: Strom (strom@fedora/strom) ()
[22:43:50] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[22:43:56] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Remote host closed the connection)
[22:43:57] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Remote host closed the connection)
[22:44:22] *** Joins: Strom (strom@fedora/strom)
[22:44:46] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Ping timeout: 260 seconds)
[22:44:51] <jinsun> rapha: if it is just 2 floats and 4 bools then you can do a very simple regex like this https://bpa.st/EO4A, and actually I realised that generalizing will not be too much pain either, just will need some extra string splitting
[22:45:05] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[22:45:11] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Remote host closed the connection)
[22:45:12] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[22:45:40] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[22:45:42] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[22:45:49] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[22:46:04] <Compu-Celebi> I have managed to invoke `snd_rawmidi_write` to cause my computer to transmit a message to my synthesizer to instruct it to play a middle C (whose pitch number is sixty) on channel zero at maximal velocity (127).
[22:49:51] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[22:50:39] <Compu-Celebi> For an unknown reason, creating a new integer pointer for the handle and passing it to `snd_rawmidi_write`, instead of reusing the handle that was passed (by reference) to `snd_rawmidi_open`, caused IDLE to restart its shell.
[22:52:10] <Compu-Celebi> I originally had the pointer dereferenced and the integer returned and that provided to my function that invokes `snd_rawmidi_open`, which would create the new pointer.
[22:53:40] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[22:54:43] <Compu-Celebi> I should note that, also, the Python integer was extracted from the `ctypes` object that represented its C counterpart and that a new `ctypes` object for it was created.
[22:55:05] <Compu-Celebi> I have discovered that simply avoiding doing this prevents the shell restart.
[22:55:10] <rapha> Compu-Celebi: only a very small part, in comparison, of most distributions, is software belonging to the GNU project.
[22:55:13] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[22:55:46] <rapha> jinsun: i see, so regexes are not all that computationally intensive after all?
[22:56:28] <rapha> (i'm having to do this 80+ times each second)
[22:56:45] *** Joins: homarlone (~homarlone@user/homarlone)
[22:56:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:57:06] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:57:36] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[22:57:37] <jinsun> depends on the regex, in this simple case it might be fast enough
[22:58:30] <rapha> okay, thank you!
[22:59:07] <Compu-Celebi> Evidently, the new `ctypes` integer object's value is stored in a different address and the new pointer is required to point to the original address.
[22:59:09] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[22:59:18] <gitesh> I came to know that list compression can have multiple for loops , what about multiple other things in that?
[22:59:36] <Compu-Celebi> Elucidate "multiple other things."
[22:59:43] <gitesh> If elif else
[22:59:52] <Compu-Celebi> Oh, I just noticed you said "list compression," not "list comprehension."
[22:59:55] <Compu-Celebi> Did you intend to say the latter?
[23:00:06] <gitesh> Oh yeah
[23:00:15] <gitesh> Comprehension
[23:00:21] <jinsun> you can have if conditions also
[23:00:23] <Compu-Celebi> I doubt that list comprehensions can have multiple `if` constructs.
[23:00:59] <Compu-Celebi> As far as I know, the condition is only evaluated within the innermost `for` loop.
[23:01:06] <Compu-Celebi> Doing otherwise would probably not make sense.
[23:01:40] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[23:02:59] <jinsun> just tried it, you can have multiple ifs actually
[23:03:10] <jinsun> and even if between 2 fors
[23:03:48] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:03:54] <Compu-Celebi> However, sometimes, skipping some iterations of a non-innermost `for` loop is desirable.
[23:04:30] <Compu-Celebi> I only learned that list comprehensions could contain multiple `for` loops approximately two to three years ago.
[23:04:36] <jinsun> although multiple ifs at the end are usually done with a single `if` and `and`
[23:04:42] *** Joins: dskullz (~dskull@user/dskull)
[23:05:06] <Compu-Celebi> Despite having commenced programming in Python in 2005, I continue to learn about it features.
[23:05:45] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[23:05:52] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 245 seconds)
[23:06:26] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[23:06:40] *** Quits: dskull (~dskull@user/dskull) (Ping timeout: 240 seconds)
[23:07:59] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[23:08:40] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[23:08:55] *** Quits: greedom (~greedom@2001:16b8:3211:e300:6699:60e1:6a47:9a7c) ()
[23:09:04] <jinsun> new releases add new features usually, so there is always new to learn, the latest thing to learn and use 3-4 years later will be pattern matching
[23:09:30] *** Quits: dskullz (~dskull@user/dskull) (Ping timeout: 260 seconds)
[23:09:43] <Compu-Celebi> In addition, I was using the Python 2.7 series until approximately two years ago.
[23:09:49] <dreamer> g79
[23:09:52] <dreamer> woops
[23:10:29] <Compu-Celebi> Then, I commenced using the Python 3.6 series, which is my Linux Mint system's default Python version.
[23:10:54] *** Joins: System12_ (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com)
[23:14:10] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 260 seconds)
[23:16:17] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2)
[23:16:31] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[23:17:42] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[23:17:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:17:55] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:19:18] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 260 seconds)
[23:20:07] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:20:44] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[23:21:16] *** Quits: dan64 (~dan64@dannyadam.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:21:37] *** Joins: GreyArea (~GreyArea@176.8.7.51.dyn.plus.net)
[23:22:08] *** Joins: dan64 (~dan64@dannyadam.com)
[23:23:56] *** Trieste_ is now known as Trieste
[23:24:17] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:24:41] *** Joins: dstein64 (~dstein64@dannyadam.com)
[23:25:14] *** Quits: dan64 (~dan64@dannyadam.com) (Client Quit)
[23:26:13] *** Quits: dstein64 (~dstein64@dannyadam.com) (Client Quit)
[23:26:35] *** Joins: dstein64 (~dstein64@dannyadam.com)
[23:26:49] *** Joins: semeion (~semeion@user/semeion)
[23:28:36] *** Joins: dskull (~dskull@user/dskull)
[23:29:24] *** Quits: dstein64 (~dstein64@dannyadam.com) (Client Quit)
[23:30:31] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[23:30:58] *** Quits: badmap (~badmap@user/badmap) (Ping timeout: 260 seconds)
[23:34:03] *** Quits: GreyArea (~GreyArea@176.8.7.51.dyn.plus.net) (Remote host closed the connection)
[23:34:30] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.2)
[23:35:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:36:04] *** Joins: relationalalgebr (~relationa@59.94.190.204)
[23:36:19] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[23:36:37] *** Joins: dstein64 (~dstein64@dannyadam.com)
[23:37:18] *** Quits: relationalalgebr (~relationa@59.94.190.204) (Client Quit)
[23:41:27] *** Joins: X4 (~X4@ip-95-223-73-17.hsi16.unitymediagroup.de)
[23:42:10] *** Quits: schumaml (~schumaml@p4ff9103f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[23:42:43] *** Joins: paul424 (~tom@ip-37-248-154-213.multi.internet.cyfrowypolsat.pl)
[23:43:32] <paul424> Hello, why  print ([1,2,3].reverse()) prints None ?
[23:43:40] <paul424> a literal is not a reference object right ?
[23:43:53] <paul424> so it cannot be a subject to reverse() method ?
[23:44:02] <Compu-Celebi> The list method `reverse` reverses the list in place, instead of returning a reversed copy of the list.
[23:44:05] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[23:44:30] <paul424> ahh that , thanks :D
[23:44:39] <sveinse> paul424: list.reverse() returns None
[23:45:06] *** Joins: dutch (~DutchIngr@user/dutch)
[23:45:18] <yitz> See also `reversed()`
[23:45:20] <Compu-Celebi> If you desire the latter, use the built-in function `reversed` on the list, instead, but the return value is a special iterator.  Therefore, apply the built-in function `list` to the result.
[23:46:26] *** Parts: dutch (~DutchIngr@user/dutch) ()
[23:46:26] <Compu-Celebi> However, versions of Python whose major version number is less than three do not use a special iterator.  In those cases, the return value of `reversed` is simply a reversed copy of the list.
[23:47:23] <yitz> At what point can we assume people are not using sunsetted languages?
[23:47:50] <Compu-Celebi> I attempt to avoid assuming things.
[23:48:25] <jinsun> I just assume people are not using it as soon as it is sunset
[23:48:26] <sveinse> Assumptions are the mother of all, uhm, foulups
[23:49:11] *** Joins: ubert (~Thunderbi@178.165.198.127.wireless.dyn.drei.com)
[23:50:56] <deniska> as far as this channel goes, py2 questions are either explicitly market as such, or it becomes really apparent when py2 is the case due to the specifics of a question
[23:51:03] <deniska> marked*
[23:51:45] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[23:52:20] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[23:53:12] <sveinse> py2 still lives in our system. There's still lots of legacy systems that have to live on with py2, and sometimes those systems needs maintenance despite of it being offically EOL
[23:53:21] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[23:53:53] <paul424> Compu-Celebi, oki thanks I GG
[23:53:56] *** Quits: paul424 (~tom@ip-37-248-154-213.multi.internet.cyfrowypolsat.pl) (Quit: GG)
[23:54:58] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:56:49] *** Quits: pro_z (~pro_z@37.214.66.151) (Ping timeout: 252 seconds)
[23:57:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:58:49] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[23:59:37] <theprophet> whenever i am trying to open up a kv(kivy) file, pycharm only makes a text file, does somebody know why?
[23:59:54] *** Joins: fikran (~fikran@user/fikran)
