[00:10:53] *** jackhill is now known as KM4MBG
[00:30:13] *** Joins: arichiardi[m] (~arichiard@2001:470:69fc:105::cf87)
[00:44:33] *** Quits: mattil (~mattilinn@62-113-176-119.bb.dnainternet.fi) (Quit: Leaving)
[00:47:38] *** Quits: Null_A (~null_a@2601:645:8700:2290:7da4:a1bb:6c20:daba) (Remote host closed the connection)
[00:50:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:7da4:a1bb:6c20:daba)
[00:54:50] *** Quits: op2 (~op@user/op2) (Quit: rcirc on GNU Emacs 28.0.50)
[01:07:45] *** Quits: Null_A (~null_a@2601:645:8700:2290:7da4:a1bb:6c20:daba) (Remote host closed the connection)
[01:10:44] *** Joins: Null_A (~null_a@2601:645:8700:2290:7da4:a1bb:6c20:daba)
[01:20:30] *** Quits: Null_A (~null_a@2601:645:8700:2290:7da4:a1bb:6c20:daba) (Remote host closed the connection)
[01:28:06] *** Joins: Null_A (~null_a@2601:645:8700:2290:7da4:a1bb:6c20:daba)
[01:31:55] <arichiardi[m]> Nice to see almost 200 folks here on this channel!
[01:42:04] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 272 seconds)
[01:45:59] <Para> That's realtor rounding :-)
[01:57:21] <sobel> i just figured out WebStorm (JetBrains) is gonna bridge me to full cljs
[01:57:35] <sobel> bye bye vscode, until i need calva
[02:02:40] <arichiardi[m]> lol yeah 200 is stretching it ;)
[02:05:31] *** Joins: goodger[m] (~goodgerma@2001:470:69fc:105::30be)
[02:06:58] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[02:22:53] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[02:23:52] *** Joins: flynn (~mcbloch@user/flynn)
[02:31:24] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:54:07] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[02:54:21] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[03:09:16] *** Joins: son0p (~ff@181.136.122.143)
[03:16:07] *** KM4MBG is now known as Jack-KM4MBG
[03:38:26] *** Joins: rinwa (~rinwa@141.226.14.13)
[03:44:42] *** Quits: Melantha (~pyon@user/pyon) (Quit: WeeChat 3.2)
[03:45:07] *** Joins: Melantha (~pyon@user/pyon)
[04:26:09] *** Quits: xsperry (~as@user/xsperry) ()
[04:30:11] *** Joins: xsperry (~as@user/xsperry)
[04:46:11] *** Quits: Null_A (~null_a@2601:645:8700:2290:7da4:a1bb:6c20:daba) (Remote host closed the connection)
[05:01:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:7da4:a1bb:6c20:daba)
[05:28:10] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 272 seconds)
[05:46:49] *** Jack-KM4MBG is now known as jackhill
[05:50:22] *** Joins: xsperry (~as@user/xsperry)
[06:07:13] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[06:23:42] *** Quits: lad (~lad@user/lad) (Ping timeout: 252 seconds)
[06:24:46] *** Joins: to-hu (~Thunderbi@p200300e9af353a006e0b84fffe0c009d.dip0.t-ipconnect.de)
[06:26:14] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Quit: The Lounge - https://thelounge.chat)
[06:26:38] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[06:55:49] *** Joins: libertyprime (~libertypr@client-172-129.guest.otago.ac.nz)
[07:11:50] *** Quits: to-hu (~Thunderbi@p200300e9af353a006e0b84fffe0c009d.dip0.t-ipconnect.de) (Quit: to-hu)
[07:12:05] *** Joins: to-hu (~Thunderbi@p200300e9af353a006e0b84fffe0c009d.dip0.t-ipconnect.de)
[07:18:36] *** Quits: to-hu (~Thunderbi@p200300e9af353a006e0b84fffe0c009d.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[07:23:39] *** Quits: mwnaylor` (~user@cpe-173-93-91-188.ec.res.rr.com) (Ping timeout: 252 seconds)
[07:46:58] *** Quits: libertyprime (~libertypr@client-172-129.guest.otago.ac.nz) (Ping timeout: 240 seconds)
[07:49:15] *** Joins: libertyprime (~libertypr@client-172-129.guest.otago.ac.nz)
[08:02:05] *** Joins: RedNifre__ (~michael@dslb-002-201-038-051.002.201.pools.vodafone-ip.de)
[08:05:18] *** Quits: RedNifre_ (~michael@dslb-002-201-038-054.002.201.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[08:28:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:7da4:a1bb:6c20:daba) ()
[08:30:28] *** Joins: lad (~lad@user/lad)
[08:51:30] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 240 seconds)
[08:53:41] *** Joins: jespada (~jespada@90.254.247.46)
[09:05:57] *** Quits: libertyprime (~libertypr@client-172-129.guest.otago.ac.nz) (Ping timeout: 245 seconds)
[09:10:49] *** Joins: lockdown (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com)
[09:11:12] *** Joins: libertyprime (~libertypr@client-172-129.guest.otago.ac.nz)
[09:36:36] *** Quits: libertyprime (~libertypr@client-172-129.guest.otago.ac.nz) (Ping timeout: 258 seconds)
[09:38:14] *** Joins: libertyprime (~libertypr@client-172-129.guest.otago.ac.nz)
[10:36:42] *** Quits: libertyprime (~libertypr@client-172-129.guest.otago.ac.nz) (Ping timeout: 276 seconds)
[10:38:42] *** Joins: makara (~sol@196.61.111.63)
[10:53:46] *** Quits: jonys (~jonys@user/jonys) (Read error: Connection reset by peer)
[10:54:20] *** Joins: xulfer (uid452788@id-452788.charlton.irccloud.com)
[10:55:24] *** Quits: silasfox (~sbv@xdsl-87-79-98-159.nc.de) (Ping timeout: 252 seconds)
[10:58:04] *** Joins: silasfox (~sbv@xdsl-87-79-98-159.nc.de)
[11:58:30] *** Quits: rinwa (~rinwa@141.226.14.13) (Read error: Connection reset by peer)
[12:36:18] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:19] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[12:38:20] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:52:09] <EdwardIII> sobel: isn't there something like calva for webstorm?
[12:53:23] *** Quits: silasfox (~sbv@xdsl-87-79-98-159.nc.de) (Quit: WeeChat 3.2)
[13:54:27] * faxmodem wonders what happened to towel.blinkenlights.nl
[14:03:43] *** Quits: runejuhl (~runejuhl@185.166.122.161) (Changing host)
[14:03:43] *** Joins: runejuhl (~runejuhl@user/runejuhl)
[14:21:15] *** Quits: victor (sid208353@id-208353.tinside.irccloud.com) (Changing host)
[14:21:15] *** Joins: victor (sid208353@user/victor)
[14:42:50] *** Joins: sakalli (~user@88-115-213-158.elisa-laajakaista.fi)
[14:54:01] *** Quits: xulfer (uid452788@id-452788.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[15:17:39] *** Joins: mamapitufo (~mamapituf@92.41.177.29.threembb.co.uk)
[15:19:57] *** Quits: mamapitufo (~mamapituf@92.41.177.29.threembb.co.uk) (Client Quit)
[15:32:54] <sobel> EdwardIII: sorta, the Cursive extension for IntelliJ (their java IDE) is ok but i like calva better and i believe Cursive is not really cljs aware
[15:34:43] <sobel> so i'm basically planning on a Jetbrains regime for the java/clojure/sql/reactjs work i have but i expect to migrate to cider for future clojure/clojurescript
[15:35:24] <sobel> (except where i'll probably use calva for clojure on jvm because i quit paying for Cursive)
[15:36:32] <sobel> Jetbrains could knock it right out of the park if they built a great REPL-oriented IDE for Clojure/CLJS
[15:36:55] <andreyorst> I guess they're more interested in their Kotlin 
[15:47:01] <EdwardIII> cider+emacs?
[15:52:08] <sobel> EdwardIII: that's the combo i'm leaning toward
[15:52:35] <EdwardIII> neat
[15:53:14] <sobel> andreyorst: if it weren't for clojure (and vertx when i must use java) i'd likely be a kotlin lover.
[15:54:05] <EdwardIII> sobel: think kotlin could scratch the clojure itch? it has pretty good support for FP right? 
[15:54:14] <ridcully> for java-ish stuff there basically is no way around idea... yet i am very happy, that i dont have to use it for clojure
[15:55:13] <sobel> EdwardIII: i don't know what FPish features it has, but it's had direct support for CSP as long as i can remember
[15:56:01] <EdwardIII> well, it has first class functions heh
[15:56:20] <sobel> ridcully: saaaame, though Jetbrains does a bang-up job on language-integrated editors and i miss then when i get back to vim/emacs/vscode (yes even vscode is totally subpar compared to jetbrains)
[15:56:39] <EdwardIII> sobel: are you using vim with something like coc / deep cider integration?
[15:56:47] <ridcully> yeah, but there is alot of other things around, that are just pish
[15:57:08] <sobel> EdwardIII: yeah, it has a lot to like but i'm not enough of a functional-programmer-advocate to really have what i consider a worthy opinion :)
[15:57:10] <ridcully> so intellj and i are business partners: we dont like each other, but we earh money together ;)
[15:57:25] <EdwardIII> sobel: well you use clojure so you're doing more FP than many i think :)
[15:59:42] <sobel> ridcully: hah. promotional arrangement or something?
[16:00:22] <sobel> EdwardIII: so i found out when i got into frontend work and felt like the odd-man-out using map and arrow-functions liberally
[16:00:27] <EdwardIII> sobel: kotlin is on the jvm so you could use it with vertx, right?
[16:00:35] <sobel> EdwardIII: right
[16:00:41] <EdwardIII> just clojure holding you back then :)
[16:00:53] <EdwardIII> sobel: in JS you mean?
[16:03:55] <sobel> EdwardIII: i thought i might one day delegate some of this backend work to a java developer because the skillset is relatively easy to find
[16:04:22] <sobel> i'm trying to remember if i know any other clojure developers personally, or before we were both clojure developers
[16:04:25] <sobel> coming up empty
[16:04:42] <EdwardIII> sobel: sensible if a bit of a shame. how is modern java? is it really that bad still in terms of verbosity?
[16:05:51] <sobel> modern java is not bad. it's not clojure but anonymous function-objects and promises on top of netty-based libraries are a sea-change compared to the 2010s
[16:06:04] <EdwardIII> did you use java streams at all? they look quite good
[16:06:31] <sobel> no choice in some cases. they work as advertised and have actually been part of the language longer than most people knew.
[16:06:38] <sobel> syntax is clunky tho
[16:07:05] <sobel> lacking homoiconicity, it's never gonna be pretty
[16:07:29] <EdwardIII> did you miss atoms?
[16:08:09] <EdwardIII> i'm particularly interested in this approach you see
[16:08:27] <EdwardIII> clojure for some stuff, java for some other stuff (for practical / hiring reasons)
[16:09:38] <sobel> i try not to get into complex concurrency situations in java. i suppose there are situations where i'd have to, but i have a lot of freedom as CTO and solo developer to address problems whever it is most advantageous throughout my system
[16:10:00] <EdwardIII> i suppose with your workload vertx helps out with most of the heavy lifting on that side anyway 
[16:10:26] <sobel> EdwardIII: start a basic clojure project, add a java src tree, add java compilation to your project.clj, and you're off to the races. i call into my java library from clojure all teh time.
[16:11:01] <EdwardIII> sobel: yeah i saw that, it looks very straight forward from having seen the sample leiningen polyglot example project
[16:11:03] <sobel> to be sure i don't have any heavy lifting, if you mean transaction rates or user count. i just want to get to the finish line cleanly and quickly.
[16:11:08] <EdwardIII> from a technical perspective at least
[16:11:26] <sobel> mixing java+clojure under leiningen is trivial
[16:11:51] <EdwardIII> and you use an IDE for java? and that works ok-ish in the lein project?
[16:12:24] <sobel> the java project is a subset of the clojure project
[16:13:13] <sobel> i can work on the java project in IntelliJ but it doen't know about the clojure part
[16:13:47] <EdwardIII> is any of the crap it needs other than java source generated by lein?
[16:13:49] <sobel> if it were hard, i couldn't tolerate maintaining project.clj and intelliJ settings. but it's not hard. worst part is when i decide to upgrade ALL the libraries.
[16:14:11] <sobel> ? intellij doesn't need anything generated by lein
[16:14:20] <EdwardIII> doesn't need to see the deps or anything?
[16:14:21] <sobel> it is entirely agnostic
[16:14:55] <sobel> i have to manually sync deps between project.clj and IntelliJ
[16:15:06] <EdwardIII> right ok
[16:15:13] <Para> Hmm, sobel you could try adding Clojure-Kit. It might help or not :)
[16:15:15] <sobel> obnoxious in the early phases but in practice i don't play musical chairs with libraries
[16:15:36] <sobel> Para: i mean to take another pass at Clojure-Kit. it wasn't quite ready for me the last time i checked.
[16:16:44] <ridcully> sobel: no, most my work is in Groovy - i sneak in Clojure where i can.  so i have to use IDEA for most of work
[16:16:47] <EdwardIII> i don't know what you think, but i feel like languages that have a strong paradigm just make it tons easier to work in a team. i'm sure you all hate ruby :) but i found that at least everyone who was working on it was on the same page, or it was easy and fast for them to learn 
[16:17:01] <EdwardIII> i kind of feel the same way in clojure
[16:18:02] <EdwardIII> JS is the opposite example, everything seems inconsistent and it feels like herding cats trying to get people working in a roughly similar way. or it feels like i'm constantly crashing in the same car (e.g. saying please don't use await in a for loop, it will slow this thing down, use map instead and deal with the promises all at once)
[16:42:15] <sobel> strong agree on alignment but i think language/ecosystem alignment is but one of several critical topics to be aligned on
[16:42:48] <sobel> yes, poor alignment will sink a team, but language/ecosystem is far from the end of that need
[16:43:40] <EdwardIII> agree
[16:43:46] <sobel> EdwardIII: the concurrency scenario you described is one of the things i don't want to have to teach. i want to start with peers that already taught themselves concurrency.
[16:44:00] <EdwardIII> sobel: yes, this is the ideal scenario :)
[16:44:11] <EdwardIII> well not even ideal, just the 'good enough'
[16:44:24] <sobel> wow, i think that just identified my interview tactic. i need to list out the things i don't want to have to teach.
[16:45:09] <EdwardIII> not bad
[16:45:16] <EdwardIII> as long as your salary offering is inline with your expectations :)
[16:45:16] <sobel> security and concurrency top the list
[16:45:38] <sobel> EdwardIII: <crying anime father emoji>
[16:46:38] <EdwardIII> i'm kind of interested in the idea of clojure jobs (although i'm not really good enough yet, although i guess most places in 2021 recruiting for clojure expect to have people doing some learning on the job as it's a little esoteric)
[16:49:36] *** Joins: yoonkn (~user@175.197.208.79)
[17:21:14] *** Joins: libertyprime (~libertypr@124.197.60.232)
[17:34:01] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:34:33] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:42:20] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:44:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[18:03:10] *** Joins: silasfox (~sbv@xdsl-87-79-98-159.nc.de)
[18:06:38] *** Quits: turlando (~turlando@user/turlando) (Read error: Connection reset by peer)
[18:11:37] <sobel> i think there's an amount of clojure that makes you useful enough to employ even as you pursue more of the language
[18:13:00] <sobel> and there's always room for growth into higher-order structures as you discover how and where to use them
[18:13:16] <ridcully> also it's to expect, that clojure is the nth self-taught language of a polyglot programmer
[18:13:34] <sobel> ^ that took me a while to internalize
[18:14:19] <sobel> my professional experience has trained me to constantly ask, "how does a new user discover, learn, then use this?" and for clojure, the counter-intuitive answer has been, they won't, and that's ok
[18:14:52] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 258 seconds)
[18:14:54] <sobel> as i stumble into more natural use cases for transducers, juxt, comp, etc. that makes ever-more sense
[18:15:32] <sobel> with other languages, i was only ever proving Greenspun's 10th at best
[18:15:46] *** Joins: mattil (~mattilinn@87-92-5-183.bb.dnainternet.fi)
[18:17:00] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Remote host closed the connection)
[18:17:40] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[18:22:27] *** Quits: silasfox (~sbv@xdsl-87-79-98-159.nc.de) (Quit: WeeChat 3.2)
[18:23:01] *** Joins: silasfox (~sbv@2001-4dd6-62dc-0-6027-7522-36-c7ab.ipv6dyn.netcologne.de)
[18:31:25] *** Joins: to-hu (~Thunderbi@p200300e9af21ee006e0b84fffe0c009d.dip0.t-ipconnect.de)
[18:36:24] *** Quits: to-hu (~Thunderbi@p200300e9af21ee006e0b84fffe0c009d.dip0.t-ipconnect.de) (Ping timeout: 276 seconds)
[18:36:29] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[18:36:30] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[18:36:30] *** Joins: turlando (~turlando@user/turlando)
[18:42:15] *** Quits: silasfox (~sbv@2001-4dd6-62dc-0-6027-7522-36-c7ab.ipv6dyn.netcologne.de) (Ping timeout: 276 seconds)
[18:43:08] *** Joins: silasfox (~sbv@2001-4dd6-8e13-0-6f0d-fa0c-ffdd-c563.ipv6dyn.netcologne.de)
[18:45:54] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 240 seconds)
[18:56:33] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[19:03:02] *** Quits: mattil (~mattilinn@87-92-5-183.bb.dnainternet.fi) (Quit: Leaving)
[19:14:35] *** Joins: op2 (~op@user/op2)
[19:20:20] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[19:25:24] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:25:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:26:11] *** Quits: hendursaga (~weechat@user/hendursaga) (Client Quit)
[19:26:35] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:51:06] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[20:00:00] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[20:01:38] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[20:02:35] *** Quits: makara (~sol@196.61.111.63) (Ping timeout: 258 seconds)
[20:03:46] *** Joins: op2 (~op@user/op2)
[20:03:48] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[20:06:25] *** Quits: silasfox (~sbv@2001-4dd6-8e13-0-6f0d-fa0c-ffdd-c563.ipv6dyn.netcologne.de) (Ping timeout: 258 seconds)
[20:09:15] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 252 seconds)
[20:13:16] <technomancy> that's funny; I didn't see a lot of cohesion in ruby at all
[20:13:53] <technomancy> back when I was writing it in 2007 or whatever
[20:13:58] <technomancy> I guess partly because some people tried to make *everything* into a class whether it made sense or not, and other people actually stopped to think about it first
[20:15:31] <EdwardIII> technomancy: well in ruby everything is literally an object :) but i take your point
[20:17:06] <EdwardIII> now you seem to see more 'service objects' in ruby, like EmailSender.send("user@host.com"). or sometimes even just classes where the only method is `call`. it's just function with ugly verbose syntax heh
[20:17:25] <technomancy> classes instead of modules? lol whyyyy
[20:19:46] <EdwardIII> you see things like this where people are looking to bring fp principles to ruby: https://dry-rb.org/
[20:20:16] <EdwardIII> it looks interesting but it also looks kind of unidomatic. i feel a bit, at that point, like it might be time to jump to another language where that's a more common paradigm if you feel that's what you really need
[20:27:11] <victor> I think most people create things like dry-rb instead of using a different language is because then they can take their existing ecosystem with them, libs and so on. A big part of Clojure was being able to do the same with Java (and later on JavaScript)
[20:31:33] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[20:35:46] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[20:37:49] *** Quits: form_fee- (~form_feed@nixon.einval.eu) (Quit: ZNC 1.8.2 - https://znc.in)
[20:50:55] *** Quits: uncleyear (~ian@pppoe.178-66-158-144.dynamic.avangarddsl.ru) (Quit: Lost terminal)
[20:52:56] *** Joins: uncleyear (~ian@pppoe.178-66-158-144.dynamic.avangarddsl.ru)
[20:56:12] *** Joins: oreoking[m] (~oreokingm@2001:470:69fc:105::d039)
[20:56:15] <oreoking[m]> hello
[21:00:00] *** Joins: seschwar (~seschwar@user/seschwar)
[21:18:59] <sobel> when i worked with a bunch of ruby devs, they regularly added a query into a method that could have had the same data wired in from up the call chain. a typical query dump revealed 5-10 distinct queries issued at least 3 times each
[21:19:10] <sobel> for one web request
[21:19:52] <sobel> modularity, they called it. because what if you copy that method and paste it into another class?
[21:20:39] <sobel> i hired onto that team /because/ their database was redlining and they needed folks who could a) operate inside that constraint and b) help dig their way out
[21:22:56] <sobel> victor: i get some great libraries from java ecosystem but i would be at least as happy with pure clojure alternatives. especially the email and xml support.
[21:23:28] <sobel> alas, i don't see anyone doing a SOAP library that doesn't depend on java xml
[21:23:29] <victor> sobel: yeah, same here. Babashka is great for smaller utilities, replaced a lot of Golang/Bash tools I use as daily drivers
[21:24:16] <sobel> i depend on clojure in production, daily. SOAP is the same thorn in clojure as in java, because it's really a java mess in both cases.
[21:27:28] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[22:00:19] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[22:14:00] *** Quits: libertyprime (~libertypr@124.197.60.232) (Ping timeout: 268 seconds)
[22:19:37] *** Joins: makara (~sol@196.61.111.63)
[22:23:38] *** Quits: op2 (~op@user/op2) (Quit: rcirc on GNU Emacs 28.0.50)
[22:31:00] <EdwardIII> sobel: do you use class generation when you're doing soap?
[22:42:37] <sobel> EdwardIII: no, i use ie.zeto/clj-soap
[22:43:16] <EdwardIII> ah ha right
[22:43:18] <EdwardIII> with spec?
[22:47:06] <EdwardIII> also is my use of vec here disgusting? https://gist.github.com/EdwardIII/bcf1f944d87455ee1a4f000d81187909
[22:51:45] <EdwardIII> (otherwise conj returns a list when the values in the hask-map are nil, which they always are at first) 
[22:53:31] <ridcully> EdwardIII: you could use (fnil conj [])
[22:53:57] <EdwardIII> ridcully: do you think that is better / more idomatic? or that there's not much in it? 
[22:55:25] <ridcully> to me this reads more like showing the intend here
[22:56:10] <EdwardIII> mm yeah i agree. also, am i missing something good here? like could i be doing this with transducers or something? this is just for an exercise ofc, in real life i'd use group-by itself
[22:57:28] <sobel> i haven't used spec before, but it sounds neat
[22:58:31] <EdwardIII> i've done a lot of work with soap in the past, using languages where getting a data structure as you do is the only option (as opposed to something like class generation)
[22:59:02] <EdwardIII> and usually my expectations would not equate to reality, something would come in in a way i hadn't guessted, and then we have problems :)
[22:59:03] <sobel> EdwardIII: i found a great way to exercise transducers is with reducible-query. write the equivalent query/transform stack with threading macros and regular query, then implement the transducer with reducible-query
[23:00:13] <sobel> my only use cases for SOAP these days are beyond class generation. the servers are generated with VisualStudio and it's impossible to classgen
[23:00:44] <sobel> it's just a terrible wrapper for a collection of K:V globs
[23:01:02] <EdwardIII> well i think with clojure's tools for navigating around data and something like spec to verify you're definitely getting what you think you are, you'd be much better off than with class gen
[23:01:11] <ridcully> EdwardIII: if you need inspiration, take a look at (source group-by); yet it's close to your version (except it uses get, since update wasn't there back then and it uses transients for speed)
[23:01:43] <EdwardIII> i always forget (source f), i go to github then hunt around trying to find the function heh
[23:01:54] <sobel> also don't forget to (doc f)
[23:02:35] <EdwardIII> yes, this i use. although i end up going to the website as i find the docs sometimes a bit hard to understand, and the examples help 
[23:04:23] <EdwardIII> like this one for example, might just be me, but i don't see that it passes in acc, current to your function (but that was super clear from the examples)
[23:04:28] <EdwardIII> https://gist.github.com/EdwardIII/718d9ca13597c9efd58821a6281b0956
[23:29:08] *** Joins: vats (~vats@103.70.83.249)
[23:29:31] *** Quits: vats (~vats@103.70.83.249) (Client Quit)
[23:29:39] *** Joins: vats (~vats@103.70.83.249)
[23:31:25] *** Quits: vats (~vats@103.70.83.249) (Client Quit)
[23:40:46] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[23:55:39] *** Joins: tzagorsky (~textual@37.57.0.211)
[23:56:10] *** Quits: tzagorsky (~textual@37.57.0.211) (Client Quit)
[23:56:22] *** Joins: vats (~vats@103.70.83.249)
[23:56:34] *** Quits: vats (~vats@103.70.83.249) (Remote host closed the connection)
[23:57:35] *** Joins: vats (~vats@103.70.83.249)
[23:58:31] *** Quits: vats (~vats@103.70.83.249) (Remote host closed the connection)
[23:59:58] *** Joins: vats (~vats@103.70.83.249)
