[00:02:27] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:dd8:2efd:65ad:4167)
[00:03:48] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[00:07:01] *** Quits: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Ping timeout: 245 seconds)
[00:08:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[00:13:38] *** Joins: karakedi (~eAC53C340@user/karakedi)
[00:15:25] *** Quits: smeso (~smeso@user/smeso) (Ping timeout: 256 seconds)
[00:16:17] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[00:16:40] *** Joins: smeso (~smeso@user/smeso)
[00:17:52] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[00:19:56] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[00:20:11] *** Quits: Inline (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de) (Quit: Leaving)
[00:20:51] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[00:22:15] *** Joins: Inline (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de)
[00:24:31] *** Quits: alch (~alch@151.34.168.141) (Read error: Connection reset by peer)
[00:28:08] *** Joins: eddof13 (~eddof13@185.153.177.238)
[00:28:24] *** Joins: alch (~alch@151.34.205.87)
[00:34:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:01] *** Quits: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e) (Remote host closed the connection)
[00:35:28] *** Joins: seninha (~chatzilla@user/seninha)
[00:37:07] *** Joins: ekathva (~ekathva@2001:999:53:4449:188a:48b1:2ca2:338c)
[00:39:10] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:a875:45d9:5bbc:7fa6)
[00:39:26] *** Joins: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[00:40:02] <ws2k3> C n00b here. i do a memcpy and that results in a segmentation error. can anyone advice me on how i should start finding out Why it crashes?
[00:41:46] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:dd8:2efd:65ad:4167)
[00:43:11] <fizzie> Memory debugging tools (GCC/clang `-fsanitize=address`, or Valgrind) can give you more informative error messages at runtime; or you could just think about the parameters you're passing it (are they all non-null pointers that point to at least as many bytes as you're copying, and is the destination writable).
[00:45:06] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:dd8:2efd:65ad:4167) (Ping timeout: 260 seconds)
[00:45:50] *** Joins: cruncher (~cruncher@79.116.64.92)
[00:48:11] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[00:48:23] <sham1> Even gdb or lldb would work
[00:49:09] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[00:49:40] *** Quits: eddof13 (~eddof13@185.153.177.238) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:50:33] *** Quits: Elladan (~elladan@user/elladan) (Ping timeout: 256 seconds)
[00:51:27] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c137:5b23:feaf:eefd) (Ping timeout: 256 seconds)
[00:52:32] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[00:52:35] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[00:53:28] *** Joins: Elladan (~elladan@user/elladan)
[00:55:38] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 272 seconds)
[00:56:17] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[00:56:54] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Ping timeout: 272 seconds)
[01:00:41] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:02:22] *** Joins: joev1 (~joev@user/joev)
[01:02:22] *** Quits: joev1 (~joev@user/joev) (Remote host closed the connection)
[01:02:46] *** Joins: joev1 (~joev@user/joev)
[01:04:36] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Ping timeout: 240 seconds)
[01:05:46] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[01:08:30] *** Joins: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[01:08:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:10:29] *** Joins: eddof13 (~eddof13@185.153.177.233)
[01:16:08] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:23:42] *** Joins: slimbo (~qooupapn@user/slimbo)
[01:24:17] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[01:24:41] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:27:26] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[01:28:16] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 256 seconds)
[01:28:18] *** Quits: ekathva (~ekathva@2001:999:53:4449:188a:48b1:2ca2:338c) (Quit: Leaving)
[01:28:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:29:18] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 268 seconds)
[01:29:20] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f783) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:32:04] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[01:32:57] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[01:35:11] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[01:35:34] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:37:02] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[01:39:19] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[01:41:07] *** Joins: donald (~donald@114.125.79.178)
[01:41:34] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[01:45:17] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[01:55:01] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[01:55:44] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[01:57:10] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[01:58:17] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[01:58:18] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[01:58:51] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[02:00:21] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:a875:45d9:5bbc:7fa6) (Ping timeout: 245 seconds)
[02:01:04] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[02:02:02] *** Joins: rgrinberg (~textual@187.223.170.172)
[02:03:27] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 252 seconds)
[02:04:07] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[02:04:57] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[02:05:18] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[02:05:35] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:07:14] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:07:34] *** Joins: Alhazred_ (~Alhazred@45.129.56.151)
[02:09:24] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[02:10:11] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 256 seconds)
[02:10:21] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[02:10:31] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:10:45] *** Quits: eddof13 (~eddof13@185.153.177.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:12:14] *** Quits: donald (~donald@114.125.79.178) (Remote host closed the connection)
[02:12:17] *** Joins: donald_ (~donald@182.1.91.70)
[02:13:47] *** Joins: eddof13 (~eddof13@185.153.177.233)
[02:15:09] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.3)
[02:16:53] <shailangsa> does anybody know whether it's normal to perceive source code and code bases as improper and unconventional despite the owners of the source code following the best programming practices and making it easy to understand?
[02:17:04] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[02:18:51] *** Quits: donald_ (~donald@182.1.91.70) (Remote host closed the connection)
[02:23:16] <gog> i don't follow
[02:23:27] <gog> what would be improper and unconventional vs the practices in place?
[02:23:51] <shailangsa> it seems with java why generics is used in some libraries the way they're used though
[02:24:05] *** Quits: eddof13 (~eddof13@185.153.177.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:24:16] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[02:24:26] <Rounin> shailangsa: There are always some programmers here and there who talk shit about other people's code, saying it's unreadable or doesn't follow best practice XYZ and things like that
[02:25:01] <Rounin> Seeing as code quality is to some extent a matter of personal taste, and some people just think their own taste is better
[02:25:26] *** Joins: hashfunc803 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[02:25:46] <Rounin> Or because they want to seem more competent, perhaps
[02:27:04] *** Joins: eddof13 (~eddof13@185.153.177.233)
[02:28:10] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[02:31:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:31:41] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[02:32:42] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[02:33:27] *** Quits: pizdets (~pizdets@183.182.111.207) (Ping timeout: 256 seconds)
[02:34:14] *** Joins: pizdets (~pizdets@183.182.114.199)
[02:36:10] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[02:37:26] *** Quits: eddof13 (~eddof13@185.153.177.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:39:21] *** Quits: alphabeta (~kilolympu@31.205.200.235) (Ping timeout: 256 seconds)
[02:39:45] *** Joins: kilolympus (~kilolympu@31.205.200.235)
[02:40:44] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:42:35] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:44:01] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[02:45:48] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[02:47:21] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[02:48:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[02:50:10] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[02:53:22] <constxd> my taste is better
[02:53:27] <constxd> don't forget that
[02:54:30] *** Quits: rgrinberg (~textual@187.223.170.172) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:54:37] *** Quits: hashfunc803 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[02:54:42] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[02:56:26] *** Joins: eddof13 (~eddof13@185.153.177.231)
[02:58:21] *** Quits: bnchs (~bnchs@41.141.13.79) (Ping timeout: 256 seconds)
[03:02:40] *** Joins: rgrinberg (~textual@2806:101e:7:134:c52e:384:2f97:6256)
[03:03:44] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[03:06:23] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:06:58] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:07:59] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:08:16] *** Quits: eddof13 (~eddof13@185.153.177.231) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:09:03] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[03:13:17] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[03:13:37] *** Joins: ferdna (~ferdna@user/ferdna)
[03:17:01] *** Quits: Akuli (~Akuli@87-94-110-209.bb.dnainternet.fi) (Quit: Akuli)
[03:18:07] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[03:20:17] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[03:20:33] <dragonmaster> but what about your flavor?
[03:20:54] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:23:00] *** Joins: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac)
[03:23:28] *** Joins: wroathe (~wroathe@user/wroathe)
[03:24:42] *** Joins: eddof13 (~eddof13@185.153.177.240)
[03:26:21] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[03:27:43] *** Joins: System_Error (~SystemErr@user/systemerror)
[03:29:26] *** Joins: constxd_ (~brad@142.134.78.128)
[03:30:36] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[03:33:37] *** Quits: cruncher (~cruncher@79.116.64.92) (Ping timeout: 240 seconds)
[03:34:05] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[03:34:40] *** Quits: eddof13 (~eddof13@185.153.177.240) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:35:13] *** Quits: rgrinberg (~textual@2806:101e:7:134:c52e:384:2f97:6256) (Ping timeout: 256 seconds)
[03:35:35] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[03:35:54] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 260 seconds)
[03:42:36] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[03:43:18] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[03:47:07] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[03:50:08] *** Joins: zer0x (~zer0x@1.55.170.131)
[03:51:04] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:51:38] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 256 seconds)
[03:51:39] *** Quits: zer0x (~zer0x@1.55.170.131) (Read error: Connection reset by peer)
[03:52:11] *** Joins: zer0x (~zer0x@1.55.170.131)
[03:52:20] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 272 seconds)
[03:54:12] *** Quits: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac) (Ping timeout: 240 seconds)
[03:56:53] *** Joins: rgrinberg (~textual@187.223.170.172)
[03:58:51] *** Quits: oriba (~oriba@dynamic-077-013-129-008.77.13.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:59:52] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[04:01:36] *** pooryori1k is now known as pooryorick
[04:02:37] *** Joins: constxd_ (~brad@142.134.78.128)
[04:03:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[04:04:37] *** Quits: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[04:04:52] *** Joins: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[04:05:05] *** Joins: eddof13 (~eddof13@185.153.177.231)
[04:07:05] *** Joins: beencubed (~beencubed@209.131.238.248)
[04:09:57] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:10:42] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[04:14:45] *** Quits: eddof13 (~eddof13@185.153.177.231) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:15:21] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 245 seconds)
[04:15:41] *** Joins: ejjfunky (~ejjfunky2@125.164.20.168)
[04:16:52] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[04:17:39] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) ()
[04:19:57] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[04:21:17] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[04:22:10] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[04:24:01] *** Quits: alch (~alch@151.34.205.87) (Read error: Connection reset by peer)
[04:27:45] *** Joins: alch (~alch@151.34.196.83)
[04:27:48] *** Quits: zer0x (~zer0x@1.55.170.131) (Ping timeout: 250 seconds)
[04:29:04] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 272 seconds)
[04:29:20] *** Quits: matt|home (~matt@adsl-74-233-58-91.mia.bellsouth.net) (Quit: Leaving)
[04:30:56] *** Quits: rgrinberg (~textual@187.223.170.172) (Read error: Connection reset by peer)
[04:31:53] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:32:10] *** Joins: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781)
[04:32:37] *** Quits: mahmutov (~mahmutov@37.155.48.73) (Ping timeout: 240 seconds)
[04:33:17] *** Joins: Wulf (~Wulf@user/wulf)
[04:37:42] *** Joins: eddof13 (~eddof13@185.153.177.241)
[04:39:18] *** Joins: g2anj (~v@58.228.230.4)
[04:47:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:48:27] *** Joins: zer0x (~zer0x@1.55.170.131)
[04:49:52] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[04:50:16] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Remote host closed the connection)
[04:50:42] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[04:54:12] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[04:59:38] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 256 seconds)
[05:04:36] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[05:05:30] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[05:07:00] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:08:28] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[05:08:44] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[05:09:09] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[05:10:19] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[05:10:30] *** Joins: vysn (~vysn@user/vysn)
[05:12:06] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Remote host closed the connection)
[05:12:25] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[05:12:46] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Remote host closed the connection)
[05:14:14] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[05:14:50] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[05:15:52] *** Joins: wroathe (~wroathe@user/wroathe)
[05:23:18] *** Joins: Matt|home (~matt@adsl-74-233-58-97.mia.bellsouth.net)
[05:23:21] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[05:27:59] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[05:29:40] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Ping timeout: 256 seconds)
[05:30:52] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Quit: The true sign of intelligence is not knowledge but imagination.)
[05:33:44] *** Joins: geli (~gelignite@55d44ff4.access.ecotel.net)
[05:35:23] *** Joins: slimbo (~qooupapn@user/slimbo)
[05:36:00] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[05:36:29] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:36:42] *** Quits: magla (~gelignite@55d44f73.access.ecotel.net) (Ping timeout: 250 seconds)
[05:37:12] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[05:38:59] *** Joins: mrgz_ (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:39:44] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[05:39:44] *** Quits: mrgz_ (~mrgz@201-42-0-191.dsl.telesp.net.br) (Client Quit)
[05:40:13] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:45:52] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:46:16] *** Joins: masoudd (~masoudd@user/masoudd)
[05:49:34] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[05:53:07] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[05:53:28] *** Joins: Jong (~Jong@2620:10d:c090:400::5:9b63)
[05:53:45] *** Joins: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac)
[05:54:29] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[05:56:20] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[05:58:50] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[06:00:30] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 252 seconds)
[06:00:58] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 250 seconds)
[06:03:28] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[06:04:09] *** Joins: seninha (~chatzilla@user/seninha)
[06:06:22] *** Quits: eddof13 (~eddof13@185.153.177.241) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:06:34] *** Quits: geli (~gelignite@55d44ff4.access.ecotel.net) (Quit: Stay safe!)
[06:08:57] *** Joins: xa0s (~xa0s@mab.sdf.org)
[06:11:55] *** Joins: constxd_ (~brad@142.134.78.128)
[06:18:55] *** Joins: Inline__ (~Inline@p200300cd473dda00d9049d80a70df8bf.dip0.t-ipconnect.de)
[06:19:05] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Remote host closed the connection)
[06:19:35] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:21:49] *** Quits: Inline (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:22:00] *** Joins: pnbeast (~pnbeast@2601:140:4280:3800::1)
[06:23:22] *** Quits: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:25:01] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:26:32] *** Joins: slimbo (~qooupapn@user/slimbo)
[06:28:01] *** Joins: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781)
[06:29:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:31:18] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[06:33:42] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:31] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:34:47] *** Joins: noarb (~noarb@user/noarb)
[06:35:06] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 272 seconds)
[06:35:27] *** Quits: noonien (~noonien@user/noonien) (Quit: The Lounge - https://thelounge.chat)
[06:35:37] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[06:35:37] *** Quits: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac) (Ping timeout: 240 seconds)
[06:36:09] *** Quits: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com) (Remote host closed the connection)
[06:36:22] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 272 seconds)
[06:36:32] *** Quits: Jong (~Jong@2620:10d:c090:400::5:9b63) (Quit: Textual IRC Client: www.textualapp.com)
[06:37:01] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[06:37:07] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[06:37:16] *** Joins: noonien (~noonien@user/noonien)
[06:37:28] *** Joins: slimbo (~qooupapn@user/slimbo)
[06:38:52] *** Quits: noarb (~noarb@user/noarb) (Remote host closed the connection)
[06:39:12] *** Joins: noarb (~noarb@user/noarb)
[06:39:17] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[06:44:27] *** Joins: Satin (uid193953@user/Seten)
[06:45:08] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:46:15] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[06:46:38] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:47:26] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[06:55:05] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:56:49] *** Quits: constxd_ (~brad@142.134.78.128) (Quit: WeeChat 3.3)
[07:01:12] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:01:51] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:dd8:2efd:65ad:4167) (Quit: Quit)
[07:02:50] *** Joins: fe23 (~fe23@2409:8a34:466:6010:fc79:80f9:1414:917)
[07:03:24] *** Joins: slimbo (~qooupapn@user/slimbo)
[07:04:17] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[07:05:07] *** Quits: davros (~davros@host86-185-61-1.range86-185.btcentralplus.com) (Ping timeout: 256 seconds)
[07:05:25] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[07:08:10] *** Joins: frost (~frost@user/frost)
[07:10:06] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[07:10:59] *** Joins: boB_K7IQ (~boB_K7IQ@c-67-161-96-150.hsd1.wa.comcast.net)
[07:18:26] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[07:19:03] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 256 seconds)
[07:19:50] *** Joins: wootz (~wootz@2806:1000:8000:b6a2:9197:d69a:2ddb:9440)
[07:21:51] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[07:22:35] *** Joins: semeion (~semeion@user/semeion)
[07:22:45] *** Quits: zzbot (~zbot@68.23.85.99) (Quit: Leaving)
[07:23:29] *** Joins: zzbot (~zbot@68.23.85.99)
[07:24:30] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 272 seconds)
[07:27:04] *** Quits: zzbot (~zbot@68.23.85.99) (Client Quit)
[07:29:17] *** Joins: zzbot (~zbot@68.23.85.99)
[07:29:24] *** Joins: botz (~zbot@68.23.85.99)
[07:30:12] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[07:31:06] *** Quits: zzbot (~zbot@68.23.85.99) (Client Quit)
[07:32:34] *** Joins: slimbo (~qooupapn@user/slimbo)
[07:33:16] *** Quits: finalriposte (~finalripo@2403-5802-74-2-20c-29ff-fe7c-2548.ip6.aussiebb.net) (Ping timeout: 250 seconds)
[07:33:59] *** Parts: botz (~zbot@68.23.85.99) ()
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:48] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[07:37:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:39:37] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[07:42:35] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 240 seconds)
[07:43:18] *** Joins: semeion (~semeion@user/semeion)
[07:44:33] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[07:48:14] *** Joins: zzbot (~zbot@user/zzbot)
[07:51:42] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:52:45] *** Quits: lllh (~UPP@198.48.244.21) (Quit: :::: ( UPP ) ::::)
[07:56:28] *** Joins: davros (~davros@host86-183-171-240.range86-183.btcentralplus.com)
[07:57:07] *** Joins: frost (~frost@user/frost)
[07:58:44] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[08:08:42] *** Quits: zzbot (~zbot@user/zzbot) (Remote host closed the connection)
[08:12:25] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[08:12:28] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[08:13:13] *** Quits: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[08:14:29] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:16:37] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[08:19:12] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[08:23:18] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: Lost terminal)
[08:23:20] *** Quits: alch (~alch@151.34.196.83) (Read error: Connection reset by peer)
[08:25:34] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[08:28:06] *** Joins: alch (~alch@151.34.148.17)
[08:30:21] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 245 seconds)
[08:34:28] <pony> hi
[08:34:41] <slimbo> hello
[08:38:37] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:40:49] *** Joins: kts (~kts@103.73.237.221)
[08:46:52] <gog> hi
[08:47:20] <dave0> hi gog
[08:48:00] *** Quits: zer0x (~zer0x@1.55.170.131) (Ping timeout: 256 seconds)
[08:48:03] <gog> sup?
[08:48:15] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[08:49:11] <dave0> nuffing just stuffing my face, you?
[08:52:25] *** Joins: GiorgiGzirishvil (~drnmatrix@2001:470:69fc:105::1:d1e5)
[08:52:29] <gog> was sleepy then realized i hadn't brushed my teeth while nodding off. can't sleep now :p
[08:52:36] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[08:52:49] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[08:53:14] *** Joins: slimbo (~qooupapn@user/slimbo)
[08:54:23] <dave0> yesterday i was up till 5am watching youtube videos :-(
[08:54:36] <gog> heh
[08:54:38] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[08:54:46] <gog> its currently 5am and i'm watching youtube :|
[08:54:55] <dave0> haha
[08:55:52] <gog> there was a new adrian's digital basement with a brand new project computer, a commdore pet 4120 (i think?)
[08:56:07] <gog> he cut off the video just when it was getting interesting saying "oh this is getting long" at 28 mins
[08:56:17] <gog> dude has videos that are in excess of 90
[08:57:43] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[08:57:44] *** Joins: kts (~kts@103.73.237.221)
[08:58:10] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[09:00:38] *** Quits: kts (~kts@103.73.237.221) (Client Quit)
[09:02:02] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[09:07:18] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[09:07:55] *** Joins: epony (epony@user/epony)
[09:08:45] <nitrix> I wonder if it would be the modern day equivalent of being an alcoholic. You numb the mind with silly videos until you pass out.
[09:10:46] <nitrix> There's something comforting to it though, not unlike when I would leave the TV on for background noise as a kid.
[09:11:27] <gog> my wife is gone for the weekend so im incredibly bored :P
[09:11:41] <nitrix> The only problem is the algorithm learns nonsensical interests and the ads are obnoxiously loud.
[09:11:58] <gog> ublock origin aka "youtube has ads?"
[09:12:15] *** Joins: slimbo (~qooupapn@user/slimbo)
[09:12:27] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[09:12:30] <nitrix> Can't have that on mobile. I'm assuming he's watching videos on his phone in bed.
[09:13:11] *** Joins: kts (~kts@103.73.237.221)
[09:13:28] <nitrix> Where are all the people with their weekend projects coding late at night :<
[09:13:36] <ent58> hi!
[09:13:41] <ent58> I'm that
[09:13:54] <nitrix> Thank you being that. We need more of that.
[09:14:22] <ent58> I was taking a look at replacing some code I already use with the Decimal TR
[09:14:39] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Ping timeout: 256 seconds)
[09:14:43] <ent58> but at least for gcc 11.2, the types are there...the functions are not
[09:14:51] <gog> nitrix: firefox for android has it
[09:15:00] <ent58> WIP I assume
[09:16:38] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[09:19:44] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 256 seconds)
[09:20:23] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[09:21:35] *** Joins: slimbo (~qooupapn@user/slimbo)
[09:21:40] *** Quits: epony (epony@user/epony) (Remote host closed the connection)
[09:22:49] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[09:23:25] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[09:24:37] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[09:24:56] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[09:25:13] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:26:10] *** Quits: pizdets (~pizdets@183.182.114.199) (Quit: pizdets)
[09:26:49] *** Joins: pizdets (~pizdets@183.182.114.199)
[09:27:05] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[09:29:16] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Ping timeout: 272 seconds)
[09:31:09] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[09:43:18] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[09:51:41] *** Joins: epony (epony@user/epony)
[09:54:01] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[09:54:23] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[09:58:12] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[09:59:50] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[10:08:54] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[10:09:09] *** Quits: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:11:00] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:13:02] *** Joins: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781)
[10:16:24] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[10:17:41] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[10:18:50] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:20:09] *** Quits: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:22:36] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:cfdc:46b6:d3d6:d388) (Ping timeout: 240 seconds)
[10:23:15] *** Joins: rgrinberg (~textual@187.223.170.172)
[10:23:52] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:24:50] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:c731:e273:a007:5879)
[10:29:55] *** Joins: ekathva (~ekathva@n14jozpbxtbgza7g9-1.v6.elisa-mobile.fi)
[10:32:26] *** Joins: seninha (~chatzilla@user/seninha)
[10:35:24] *** Joins: zer0x (~zer0x@1.55.170.131)
[10:40:39] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[10:41:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[10:46:00] *** Quits: gog (~ada@user/gog) (Remote host closed the connection)
[10:46:19] *** Joins: gog (~ada@user/gog)
[10:47:40] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[10:52:14] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:54:08] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[10:54:10] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[10:56:25] *** Joins: cherrry9 (~jan@deh49.neoplus.adsl.tpnet.pl)
[10:57:08] <cherrry9> are the names prefixed with _ reserved for compiler? e.g: "_some_internal_function_or_macro_to_header"?
[10:58:20] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[10:58:38] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Quit: leaving)
[10:58:53] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[10:59:24] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Client Quit)
[10:59:45] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[11:01:51] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:05:38] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:05:40] *** Quits: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[11:05:57] *** Joins: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[11:06:16] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 256 seconds)
[11:15:29] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:15:48] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[11:16:54] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:19:22] *** Joins: aradesh (~aradesh@user/aradesh)
[11:21:01] <dave0> cherrry9: yes, names that start with 2 underscores, and names that start with 1 underscore followed by a capital letter
[11:21:52] *** Joins: mrig (~mrig@user/mrig)
[11:22:00] <dave0> cherrry9: an example of this is   _Bool   which is the real reserved name, and it's typedef'ed if you #include the right header which i forget the name of
[11:22:51] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[11:22:56] <dave0> not sure why underscore is a letter but eh .. okay
[11:23:54] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Ping timeout: 272 seconds)
[11:24:25] <ent58> stdbool I believe
[11:29:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:31:18] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:31:57] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:33:34] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[11:33:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[11:34:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:41:17] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 240 seconds)
[11:42:06] *** Joins: mahmutov (~mahmutov@37.155.51.74)
[11:48:07] *** Joins: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:f16f:93d4:67ae:2d35)
[11:49:37] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[11:51:48] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[11:52:31] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[11:53:18] *** Joins: mrig (~mrig@user/mrig)
[11:56:23] <dave0> a priest, a bishop, and a rabbit walk into a bar, and the rabbit says "i think i'm a typo"
[11:57:01] *** Quits: ekathva (~ekathva@n14jozpbxtbgza7g9-1.v6.elisa-mobile.fi) (Ping timeout: 245 seconds)
[11:57:10] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 250 seconds)
[12:00:34] <ent58> lol
[12:01:25] <dave0> :-)
[12:02:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[12:04:25] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[12:07:34] *** Quits: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:f16f:93d4:67ae:2d35) (Ping timeout: 250 seconds)
[12:07:39] *** Joins: ekathva (~ekathva@85-76-69-134-nat.elisa-mobile.fi)
[12:07:41] *** Quits: ekathva (~ekathva@85-76-69-134-nat.elisa-mobile.fi) (Remote host closed the connection)
[12:08:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[12:10:16] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[12:10:41] *** Joins: epony (epony@user/epony)
[12:11:48] *** Quits: cherrry9 (~jan@deh49.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[12:12:56] *** Quits: rgrinberg (~textual@187.223.170.172) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:13:08] *** Quits: [RMS] (~rs@genoce.org) (Ping timeout: 256 seconds)
[12:14:15] *** Joins: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr)
[12:14:31] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 245 seconds)
[12:16:33] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:20:54] *** Joins: moose (~moose@user/moose)
[12:22:04] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[12:22:21] *** Joins: lleo (~leo@31-161-231-166.mobile.kpn.net)
[12:24:57] *** Joins: bnchs (~bnchs@160.176.39.0)
[12:27:14] *** Quits: alch (~alch@151.34.148.17) (Ping timeout: 272 seconds)
[12:28:28] *** Joins: alch (~alch@151.36.200.21)
[12:30:42] *** Quits: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:32:16] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:32:37] *** Quits: fe23 (~fe23@2409:8a34:466:6010:fc79:80f9:1414:917) (Ping timeout: 240 seconds)
[12:36:20] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:37:18] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[12:37:38] *** Joins: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr)
[12:39:30] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[12:42:02] *** Quits: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:44:10] *** Joins: freddietilley (~freddieti@2a02-a454-7f89-1-3c51-5256-3160-82c6.fixed6.kpn.net)
[12:44:42] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[12:48:17] *** Quits: lleo (~leo@31-161-231-166.mobile.kpn.net) (Ping timeout: 240 seconds)
[12:48:46] *** Joins: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr)
[12:49:09] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 252 seconds)
[12:49:09] *** Quits: freddietilley (~freddieti@2a02-a454-7f89-1-3c51-5256-3160-82c6.fixed6.kpn.net) (Ping timeout: 252 seconds)
[12:49:16] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[12:52:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:53:15] *** Joins: kts (~kts@103.73.237.221)
[12:53:32] *** Quits: bnchs (~bnchs@160.176.39.0) (Remote host closed the connection)
[12:54:02] *** Joins: lleo (~leo@31-161-231-166.mobile.kpn.net)
[12:55:24] *** Quits: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[12:56:36] *** Quits: Starfoxxes (~Starfoxxe@ip-037-201-006-167.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[13:01:01] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[13:01:38] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:01:57] *** Joins: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr)
[13:07:21] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[13:08:59] <pony> hiiii
[13:09:24] <dave0> hi pony
[13:10:42] <pony> o/
[13:10:56] *** Quits: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[13:11:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[13:12:51] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[13:16:33] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:17:33] *** Joins: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr)
[13:19:09] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[13:22:58] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:23:17] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[13:25:04] *** Quits: lleo (~leo@31-161-231-166.mobile.kpn.net) (Quit: butterflies in 1024 bits mobius trumpets)
[13:25:59] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[13:28:45] *** Quits: X-Scale (~ARM@83.223.233.227) (Ping timeout: 256 seconds)
[13:28:45] *** X-Scale` is now known as X-Scale
[13:30:42] *** Joins: lleo (~leo@31-161-231-166.mobile.kpn.net)
[13:30:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:31:11] *** Quits: lleo (~leo@31-161-231-166.mobile.kpn.net) (Client Quit)
[13:32:28] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:32:30] *** Joins: lleo (~leo@31-161-231-166.mobile.kpn.net)
[13:32:30] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[13:32:39] *** Quits: lleo (~leo@31-161-231-166.mobile.kpn.net) (Remote host closed the connection)
[13:32:57] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[13:33:00] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:34:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:37:44] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[13:40:31] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:305c:3b7d:bfc5:900f) (Remote host closed the connection)
[13:42:07] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 256 seconds)
[13:46:37] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[13:47:46] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:49:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[13:51:25] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[13:53:08] *** Joins: fe23 (~fe23@2409:8a34:466:6010:e0f8:f024:1fa0:2314)
[13:55:03] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:56:14] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 252 seconds)
[13:56:36] *** Joins: dudek (~dudek@185.150.236.127)
[14:00:46] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[14:01:13] *** Joins: kts (~kts@103.73.237.221)
[14:05:04] *** Quits: dudek (~dudek@185.150.236.127) (Quit: Leaving)
[14:07:31] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[14:07:37] *** Quits: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[14:08:27] *** Joins: Waynes (~Waynes@user/waynes)
[14:10:02] *** Joins: somlis (~somlis@user/somlis)
[14:12:19] *** Joins: cherrry9 (~jan@deh49.neoplus.adsl.tpnet.pl)
[14:13:29] *** Joins: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr)
[14:14:07] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:14:55] *** Joins: plastico (~plastico@neomutt/plastico)
[14:16:00] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:17:49] *** Quits: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e) (Ping timeout: 256 seconds)
[14:19:50] *** Joins: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[14:21:43] <Waynes> I am trying to build a printf where I don't have to specify a format string. Is there a "nice" way to differentiate between size_t and char* parameters with C99 (no _Generic or __builtin stuff)? E.g. to differentiate between int and char*, I can check if the value is larger than 0x7fffffff, which is a bit crazy, but it does not have to work on every system under the sun. It's just for debugging.
[14:25:02] <dave0> Waynes: just cast everything to (long)
[14:25:28] <Waynes> How would that help?
[14:25:30] <dave0> that'll work if you're on anything but windows where it'd have to be long long
[14:25:53] <dave0> Waynes: then you can treat everything as long and there's no need to differentiate anything
[14:25:55] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[14:27:08] <Waynes> True I guess, but a printf function that prints the address of a string instead of its content is a bit cryptic.
[14:28:34] <dave0> stuffing a pointer into long should work good enough for debugging... just cast it to char* in your function
[14:30:21] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 245 seconds)
[14:31:02] <Waynes> But I'd have to know somehow that the long was a char* before that. That is the problem. E.g. my_fancy_printf("Hello visitor number", number, "."); should print "Hello visitor number 5." or something like that.
[14:31:11] *** Quits: pnbeast (~pnbeast@2601:140:4280:3800::1) (Quit: WeeChat 2.7.1)
[14:31:21] <dave0> hmm
[14:32:04] *** Joins: oriba (~oriba@dynamic-078-054-198-245.78.54.pool.telefonica.de)
[14:32:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[14:36:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:37:21] <dave0> i can't think of anything except put some tag bit in the value.. you could make it look nicer with a macro
[14:39:29] <Waynes> Yes, I guess that is the only way. Thank you for thinking about it.
[14:39:54] *** Quits: oxfuxxx (~oxfuxxx@lfbn-poi-1-702-7.w82-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[14:41:46] <dave0> #define STR(x) ((long)(x) | 0x800000000000)   #define isSTR(x) (((x) & 0xc00000000000) == 0x800000000000)       then pointers start with binary 10xxx and you could use smaller positive and negative numbers
[14:41:58] <caze> but why
[14:42:45] <dave0> seems like convenience
[14:43:00] <caze> Seems like the opposite of convenience.
[14:44:21] <sham1> I'd personally put the tag at the least significant bits
[14:45:37] *** Joins: Rounin (~david@84.212.130.215)
[14:45:38] <dave0> there's no room in the low bit, char* can point to anything
[14:45:53] <sham1> Hm
[14:45:58] <sham1> I suppose
[14:46:07] <sham1> Then again I'd argue the same thing for the high bits
[14:46:10] <masoudd> seems like you want to implement a dynamic typing system in C. Look at python to see how it's done
[14:46:54] <dave0> on amd64 0b10xxxx is never a valid pointer .. pretty sure it's limited to 52 bits these days .. maybe it'll increase in the future but it's good enough for debugging today
[14:47:30] *** Joins: Burgundy (~NA@86.121.143.206)
[14:49:22] <dave0> that leaves 0b10xxxx for char* pointer, 0b00xxx for positive numbers, and 0b11xxx for negative numbers
[14:51:56] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[14:53:18] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[14:56:14] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) ()
[14:57:20] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[14:58:02] <gog> dave0: 48 bits unless PML5 is available
[14:58:35] <gog> physical addresses can be up to 52 bits iirc
[14:58:57] <gog> for now
[15:00:31] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[15:02:59] <nomagno> https://stackoverflow.com/a/68070066
[15:03:03] <nomagno> Is the claim at the end of this answer correct?
[15:03:09] <nomagno> if so, What The Fuck
[15:03:22] *** Joins: magla (~gelignite@55d44ff4.access.ecotel.net)
[15:04:57] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[15:06:08] *** Joins: v4mp (~v4mp@user/v4mp)
[15:08:33] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:08:44] *** Quits: jkotra (~jkotra@122.169.141.242) (Ping timeout: 272 seconds)
[15:09:15] *** Joins: kts (~kts@103.73.237.221)
[15:12:43] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:15:49] <supakeen> As far as I understand the promotion rules I'd say that uint16_t is considered a small integer type on a 32-bit system and is thus promoted to a signed int.
[15:15:51] <dave0> the uint16_t a = 65535; uint16_t b = a*a; being signed and overflow?
[15:17:35] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[15:18:16] *** Joins: jkotra (~jkotra@122.169.141.242)
[15:18:19] <dave0> the only thing i know about integer promotion is that it's not "unsigned preserving" so something smaller than an int but unsigned, is promoted to signed int
[15:18:36] *** Joins: geeknix (~pi@2001:e68:5432:c3ad:6169:3c11:7246:dce1)
[15:18:39] <gog> https://godbolt.org/z/3eoPjaEda
[15:19:36] <dave0> i think the reasoning was that promoting unsigned to signed is surprising, but no more surprising than not
[15:19:56] <dave0> someone is gonna be surprised
[15:19:58] <dave0> :-)
[15:20:01] <supakeen> dave0: that's the same as my understanding with the bit that it also has something to do with the types being 'small integers' (which is dependent on architecture *which* those are)
[15:21:15] *** Quits: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net) (Remote host closed the connection)
[15:21:18] *** Joins: Ecophobia (~Ecophobia@kpg91.kuuskaista.fi)
[15:21:23] <dave0> supakeen: i don't understand it and i don't want to
[15:21:40] *** Joins: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net)
[15:22:04] <nomagno> I am going to pretend this doesn't even exit
[15:22:06] <nomagno> exist*
[15:23:13] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[15:23:42] <dave0> the rule of thumb i follow is that you're safe as long as the value fits in the type
[15:24:05] *** Joins: jhunk (~jhunk@c-69-143-130-202.hsd1.md.comcast.net)
[15:24:24] *** Quits: Ecophobia (~Ecophobia@kpg91.kuuskaista.fi) (Client Quit)
[15:24:41] <dave0> 65535*65535, unsigned or not, doesn't fit in 31 bits
[15:26:48] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[15:28:33] <gog> https://godbolt.org/z/ne3z7odaY :|
[15:28:58] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 260 seconds)
[15:29:03] <nomagno> dave0: 0xFFFF*0xFFFF fits on an unsigned type because wraparound is a perfectly defined and verifiable behaviour
[15:29:12] <nomagno> Its safe, in ambiguously
[15:29:25] *** Quits: Hazza (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[15:29:55] <nomagno> if(0xFFFF*0xFFFF < UINT_MAX) { handle_wraparound }
[15:30:16] <nomagno> if(0xFFFF*0xFFFF > INT_MAX) { you're_f*cked }
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:20] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[15:30:33] <nomagno> Well, not like that exactly but, you get it
[15:30:45] <nomagno> If you get overflow with unsigned, you can handle it
[15:30:55] <nomagno> If it happens with signed, the computer might as well explode
[15:31:03] *** Joins: csrf (~csrf@user/csrf)
[15:31:04] <dave0> i mean the value x=4294836225 doesn't fit in 31 bits ie. it's not INT_MIN < x < INT_MAX
[15:31:44] <nomagno> dave0: that doesn't matter of though, if it actually got promoted to an unsigned type like it should
[15:31:57] <nomagno> It would work without any safety issues
[15:32:18] <dave0> nomagno: i agree that unsigned types should remain unsigned when they are promoted, but ansi overrules me
[15:33:20] <nomagno> It's treacherous standarization
[15:33:27] <nomagno> Also it's ISO
[15:33:27] <nomagno> Not ANSI
[15:33:37] <gog> no optimization on gcc seems to be right, it zeros out the upper word of the register with that funky movzx from the stack
[15:33:48] <gog> with optimization though idk
[15:34:08] <nomagno> -Ofast might get very funky very fast
[15:35:03] <gog> let me see what it does with different parameters
[15:35:52] <gog> squaring might not matter
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:21] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[15:36:27] <gog> ah ok nope
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:03] <gog> just mov's edi into eax and imuls by esi
[15:37:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:41:07] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[15:43:42] *** Joins: Reaster_ (~textual@219.212.24.109.rev.sfr.net)
[15:47:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[15:48:43] *** Reaster_ is now known as Reaster
[15:51:43] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[15:53:15] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[15:53:16] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:56:08] *** Quits: Reaster (~textual@219.212.24.109.rev.sfr.net) (Changing host)
[15:56:08] *** Joins: Reaster (~textual@user/Reaster)
[15:59:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 260 seconds)
[16:00:34] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[16:01:13] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[16:02:45] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[16:03:04] *** Joins: cruncher (~cruncher@79.116.74.120)
[16:04:02] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[16:04:02] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[16:08:16] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 272 seconds)
[16:08:45] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[16:09:00] *** Joins: MajorBiscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl)
[16:10:02] *** Joins: Klinda (~superleag@user/klinda)
[16:12:09] *** Joins: acerbic (~acerbic@cs-xdata-50-86-51-236.cspire.com)
[16:13:16] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 245 seconds)
[16:16:00] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[16:16:17] *** Joins: Miles2Go (~Miles2Go@1410789-v106.1225-static.fshrinaa.metronetinc.net)
[16:17:01] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[16:18:27] *** Joins: [R] (~rs@genoce.org)
[16:20:36] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[16:24:07] *** Joins: kts (~kts@103.73.237.221)
[16:24:44] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 272 seconds)
[16:25:06] <nomagno> The mov instruction naming convention is very confusing
[16:25:14] <nomagno> It should be called 'set' or 'cpy'
[16:25:31] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:25:40] *** Joins: savolla (~quassel@95.10.239.22)
[16:25:57] *** Quits: alch (~alch@151.36.200.21) (Ping timeout: 240 seconds)
[16:27:53] *** Joins: alch (~alch@151.38.172.212)
[16:32:20] *** Quits: kts (~kts@103.73.237.221) (Ping timeout: 272 seconds)
[16:34:02] *** Joins: ymwm__ (~yingmanwu@27.153.167.245)
[16:35:10] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:36:46] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Ping timeout: 272 seconds)
[16:36:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[16:40:10] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:42:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:42:27] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[16:42:48] *** Joins: strajder (~strajder@user/strajder)
[16:42:54] *** Quits: Reaster (~textual@user/Reaster) (Quit: Reaster out)
[16:43:05] *** Joins: pulse (~pulse@user/pulse)
[16:43:19] *** Quits: Miles2Go (~Miles2Go@1410789-v106.1225-static.fshrinaa.metronetinc.net) (Quit: Leaving)
[16:44:09] *** Joins: Reaster (~reaster@219.212.24.109.rev.sfr.net)
[16:44:23] *** Quits: Reaster (~reaster@219.212.24.109.rev.sfr.net) (Client Quit)
[16:46:30] *** Joins: kts (~kts@103.73.237.221)
[16:47:31] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 268 seconds)
[16:49:26] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[16:52:37] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:53:19] *** Joins: wlemuel_ (~wlemuel@210.22.124.110)
[16:53:20] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[16:55:41] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[17:01:28] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[17:02:34] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:04:00] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Ping timeout: 272 seconds)
[17:09:56] *** Joins: vekay (~vekay@user/vekay)
[17:14:22] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:14:55] *** Joins: shivesh (~shivesh@user/shivesh)
[17:16:15] <rcf> Expecting the standard to help the developer is silly
[17:16:30] *** Joins: Torr (~Torr@user/torr)
[17:18:02] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[17:18:21] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[17:19:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:20:16] *** Quits: kts (~kts@103.73.237.221) (Ping timeout: 256 seconds)
[17:20:54] <dave0> the standard was hard to write so it should be hard for developers too
[17:21:33] <rcf> It's easy to write, though
[17:21:43] <rcf> "the behavior is undefined"
[17:21:46] <rcf> Solves all problems
[17:22:26] <APic> The Standard should be rewritten in E-Prime.
[17:22:50] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[17:22:54] <APic> „The Behaviour is undefined.“ → „We undefine the Behaviour.“, for Example.
[17:23:25] <APic> (E-Prime despoils the English Language from Forms of „to be“.)
[17:24:18] <APic> So also: „The Standard should be rewritten in E-Prime.“ → „Someone should rewrite the Standard in E-Prime.“
[17:25:29] <dave0> depends if historical compilers did it that way
[17:26:03] <APic> An uncountably infinite Number of Histories exist in our Quantum-String-Worlds.
[17:26:20] <APic> Researching the History modifies it.
[17:26:22] <rcf> I feel like the sort of people who would embark upon that endeavor are using haskell already.
[17:28:06] <APic> Haskell keeps many very intelligent and well-bred People away from our sacred C, yes. ☺
[17:28:43] <APic> Also Scala, Lisp, …
[17:29:54] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[17:30:53] <APic> Clojure…
[17:31:41] <APic> ,o0(Some Day i will reopen #Language-Comparison and really get it populated.)
[17:31:55] <candide> That's blatantly interesting, A﻿Pic
[17:32:13] <APic> candide: Thanks for the Compliment!
[17:32:24] <candide> np, A﻿Pic
[17:33:01] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[17:35:06] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) (Remote host closed the connection)
[17:35:45] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[17:39:56] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 250 seconds)
[17:41:14] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 256 seconds)
[17:42:00] *** Joins: constxd_ (~brad@142.134.78.128)
[17:42:04] <constxd_> hey kings
[17:42:06] *** Joins: joev1 (~joev@user/joev)
[17:42:57] <constxd_> what's up with this weird convention of prefixing struct member names with some abbreviation of the struct name
[17:44:16] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:c486:dc7e:8ce4:e6c9)
[17:44:20] <constxd_> like POSIX with stat(2) and `struct timeval` etc.
[17:44:42] <constxd_> st_mode, st_ino... why not just mode and ino?
[17:45:03] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.55)
[17:46:16] <jrm> I'm working with a make file that includes '-ansi' when building.  On one Linux host, it complains that snprintf() is implicitly defined.  This is with an ancient gcc (5.4.0).  On another host, both clang and gcc (10.3.0) don't give that warning.  Why is that?  I thought snprint() was not part of ansi C.
[17:47:42] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.138) (Ping timeout: 272 seconds)
[17:48:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 260 seconds)
[17:48:22] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[17:48:45] <twkm> constxd_: once upon a time struct member names weren't in their own namespace.
[17:49:08] <jrm> It seems the old gcc is doing the right thing, but newer clang/gcc are not.
[17:49:12] <APic> constxd_: Kings, lol. Thanks for the Compliment.
[17:49:46] <twkm> using -ansi isn't strict.  add -pedantic if that's what you want.
[17:49:48] *** Quits: jhunk (~jhunk@c-69-143-130-202.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[17:50:04] * APic probably rather resembles a Pawn than a King.
[17:50:15] <twkm> (though even that isn't enough)
[17:50:24] <APic> But at least i could transform myself into a Queen if i ever reached the other Side of the Playing-Field. 😉
[17:50:38] <APic> twkm: You rock.
[17:51:39] *** dogbert_2 is now known as dogbert2
[17:52:34] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 256 seconds)
[17:53:25] *** Joins: joev1 (~joev@user/joev)
[17:57:44] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:59:07] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:59:24] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[18:00:51] <nomagno> Can I reasonably expect the compiler to optimize away something like:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/b483f19280dd629026ba03926c2f401c37fc21e2)
[18:01:46] *** Joins: kts (~kts@103.73.237.247)
[18:02:01] <nomagno> Obviously the different here is neglibible, but when the argument is much bigger... You want to avoid memory copies, but it is much simpler to stick to the pass-by-value and return-by-value model
[18:02:38] <twkm> pass by value is all that exists in c.
[18:02:54] <nomagno> You understood me, I think
[18:03:12] <nomagno> It's infinitely cheaper to pass a pointer to a big struct than to pass the struct and return the struct
[18:03:52] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[18:03:53] <twkm> no i didn't, and it isn't always cheaper.
[18:05:27] <nomagno> Is it likely that a compiler will optimize, where it makes sense, a function that takes a struct and returns a modified struct, into a function that takes a pointer to a struct and modifies it?
[18:05:30] <twkm> of note, where you seemed to mean space cheaper i meant compute cheaper, e.g., an int that is likely passed in a register is faster to access than a pointer to an int due to the dereference needed.
[18:06:08] <nomagno> twkm: I said for big structs though
[18:06:17] <nomagno> Where you just can't fit them into a modern register
[18:06:28] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[18:06:39] <twkm> not all compilers are the same, so yes it is possible yet not certain.
[18:06:44] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[18:06:57] <fizzie> nomagno: It's an optimization that generally speaking either requires the function definition to be available at the point of call (e.g., it's `static` in the same translation unit) or the compiler to do link-time optimization; otherwise it can't change the calling convention from what the (possibly separately compiled sides) expect.
[18:06:59] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[18:07:16] <fizzie> So "it depends", as always.
[18:07:24] <jrm> twkm: Thanks.  With -ansi and -pedantic the result is the same.  That is, only a warning with gcc 5.4.0 and no warning with modern compilers.  I read that snprint() is only part of c99, so the modern compilers seem wrong.
[18:07:48] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[18:07:58] <twkm> compilers are sometimes shitty.
[18:08:07] <fizzie> Also *returning* a large struct is in typical calling conventions equivalent to having the caller pass in a pointer to modify.
[18:08:31] <fizzie> jrm: C89 allows implicit function declarations, so it's not "wrong" per se; whether to warn about them would be up to the implementation's discretion.
[18:09:15] <fizzie> (It'd be arguably good to warn, because the implicit function is not correct for a variadic function like snprintf. But still.)
[18:09:36] <jrm> fizzie: Ah, good to know.  Thank you.
[18:09:37] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[18:09:49] *** Joins: bebyx (~Thunderbi@user/bebyx)
[18:11:24] <fizzie> On that note, I get a pretty amusing warning from current GCC if I do explicitly call for it: https://0x0.st/oPwf.txt
[18:11:54] <fizzie> Especially love the suggestion to add #include <stdio.h> right under #include <stdio.h>. Yeah, including it twice will surely help.
[18:12:11] <constxd_> lmao
[18:12:12] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[18:12:37] <twkm> so bug report time?
[18:13:05] <dave0> jrm: what happens if you do  -std=c99  instead of  -ansi  ?
[18:13:46] <vysn> cany anyone recommend a good place to continue learning C for a lower intermediate C student?
[18:13:56] <vysn> I got up to tic tac toe
[18:14:06] <twkm> i suggest more books.
[18:14:26] <jrm> dave0: I'll check, but I assume there will be no warnings at all, since snprintf() is part of c99.
[18:14:46] <twkm> but if other venues worked for you to reach this point likely they have more.
[18:15:06] <vysn> twkm: thx
[18:15:35] <jrm> dave0: Yes.  No warnings at all.
[18:16:26] <twkm> because <stdio.h> (which is not part of gcc) arranged to declare snprintf due to gcc indicating that c99 was wanted.
[18:16:26] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[18:18:14] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[18:24:29] *** Joins: sweetsymph_ (uid509475@id-509475.lymington.irccloud.com)
[18:27:08] *** Quits: zer0x (~zer0x@1.55.170.131) (Ping timeout: 256 seconds)
[18:28:31] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[18:33:26] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:37:54] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[18:39:25] *** Quits: haniaF_ (~haniaF@83.24.224.152.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[18:39:49] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-543d-a065-e6d9-3062.res6.spectrum.com)
[18:39:49] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[18:42:27] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[18:47:11] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 252 seconds)
[18:47:32] *** Quits: ncrowl_ (~ncrowl@89-160-77-219.cust.bredband2.com) (Ping timeout: 256 seconds)
[18:47:36] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d96f:789:dcb9:a5e6)
[18:47:36] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d96f:789:dcb9:a5e6) (Changing host)
[18:47:36] *** Joins: skapata (~Skapata@user/skapata)
[18:49:22] *** Joins: ncrowl (~ncrowl@83-233-50-39.cust.bredband2.com)
[18:53:21] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[18:58:52] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[18:59:13] *** Quits: davros (~davros@host86-183-171-240.range86-183.btcentralplus.com) (Remote host closed the connection)
[19:00:34] *** Quits: boB_K7IQ (~boB_K7IQ@c-67-161-96-150.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[19:00:58] *** Joins: boB_K7IQ (~boB_K7IQ@c-67-161-97-77.hsd1.wa.comcast.net)
[19:02:38] *** Joins: ferdna (~ferdna@user/ferdna)
[19:04:43] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:06:52] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[19:12:10] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[19:12:26] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[19:13:50] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[19:15:02] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[19:16:14] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[19:16:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:17:12] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[19:19:33] *** Joins: Rynn (~rynn@216.30.158.198)
[19:19:41] *** Joins: pert (~pert@fsf/member/pert)
[19:20:46] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 245 seconds)
[19:26:07] *** Joins: masoudd (~masoudd@user/masoudd)
[19:26:28] *** Joins: Everything (~Everythin@37.115.210.35)
[19:29:24] *** TonyStone31 is now known as TonyStone
[19:30:03] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[19:31:16] *** Joins: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se)
[19:33:44] *** Joins: haniaF (~haniaF@79.191.94.234.ipv4.supernova.orange.pl)
[19:38:03] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:38:22] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[19:40:02] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[19:45:37] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[19:49:21] *** Joins: bnchs (~bnchs@160.176.39.0)
[19:50:25] <bnchs> ,cc void increase(int *integer) { *integer++ } int main(void) { int test = 0; increase(&test); printf("%d", test); }
[19:50:26] <candide> bnchs:  In function 'increase':  error: expected ';' before '}' token
[19:50:51] <bnchs> ,cc void increase(int *integer) { *integer++; } int main(void) { int test = 0; increase(&test); printf("%d", test); }
[19:50:54] <candide> bnchs: 0
[19:50:59] <bnchs> and why is this???
[19:51:28] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[19:51:49] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[19:51:51] <constxd> bro
[19:51:55] <constxd> man 7 operator
[19:52:51] <constxd> ,cc void incr(int *integer) { ++*integer; } int test = 0; incr(&test); print(test);
[19:52:53] <candide> constxd:  test = 1
[19:53:06] <bnchs> so wait
[19:53:19] <bnchs> i've been doing it wrong?
[19:53:34] <constxd> doing what wrong?
[19:53:44] <bnchs> the increasing the integer in a function
[19:53:53] <bnchs> i wondered why it didn't increase
[19:54:12] <constxd> you incremented the local variable `integer` which is a pointer
[19:54:13] <gnoo> ,paren *integer++
[19:54:14] <candide> gnoo: *(integer++)
[19:54:16] <constxd> and then dereferenced it
[19:54:25] <bnchs> oh so i'm retarded
[19:54:32] <bnchs> i incremented the pointer
[19:54:42] <bnchs> ok thanks for your help
[19:54:44] <constxd> don't worry i'm retarded too
[19:54:48] <constxd> you are in good company
[19:56:00] <bnchs> ,cc void increase (int *integer) { (*integer)++; } int test = 0; increase (&test); print(test);
[19:56:02] <candide> bnchs:  test = 1
[19:56:09] <bnchs> similar solution
[19:56:22] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[19:57:41] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[20:00:19] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 256 seconds)
[20:00:32] <Waynes> how do I include headers with candide
[20:00:43] <candide> Waynes: Are you sure you're not a gigantic Cro-Magnon?
[20:01:17] <Waynes> I have to admit that I am not entirely certain.
[20:03:44] <pragma-> Just include them normally.
[20:04:05] <pragma-> It requires no special syntax.
[20:04:06] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:d94a:5af7:3b65:8539)
[20:04:11] *** Joins: meator (~meator@user/meator)
[20:05:13] <Waynes> Oh, I thought I had to do something special with line breaks as with geordi bot, but it just works
[20:06:19] <pragma-> Needing line breaks for #include is absurd because #include has very clear delimiters.
[20:06:26] *** Joins: Rynn (~rynn@216.30.158.198)
[20:07:15] <pragma-> ,cc
[20:07:15] <candide> pragma-: Usage: cc [-lang=<language>] [-info] [-paste] [-args "command-line arguments"] [compiler/language options] <code> [-stdin <stdin input>]
[20:07:20] <Waynes> !cc #include <netinet/in.h> #include <stdio.h> int main() {char s = socket(AF_INET, SOCK_STREAM, 0), b[9999] = "GET / HTTP/1.0\r\nHost: www.example.com\r\n\r\n", a[16] = {2, 0, 0, 80, 93, -72, -40, 34};connect(s, (void*)&a, 16);send(s, b, 99, 0);fwrite(b, 1, recv(s, b, 9999, 0), stdout);}
[20:07:20] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[20:07:30] <pragma-> You can also provide argv arguments or stdin input.
[20:07:47] <pragma-> I need to document the new -vm=<virtual machine> switch.
[20:07:49] *** Quits: Fairy (~Fairy@2001:464a:4992:0:6105:d368:45f9:802f) (Ping timeout: 240 seconds)
[20:08:34] <pragma-> The bot trigger is "," in this channel.
[20:08:42] <Waynes> ,cc #include <netinet/in.h> #include <stdio.h> int main() {char s = socket(AF_INET, SOCK_STREAM, 0), b[9999] = "GET / HTTP/1.0\r\nHost: example.com\r\n\r\n", a[16] = {2, 0, 0, 80, 93, -72, -40, 34};connect(s, (void*)&a, 16);send(s, b, 99, 0);fwrite(b, 1, recv(s, b, 9999, 0), stdout);}
[20:08:44] <candide> Waynes:  Program received signal SIGPIPE, Broken pipe in send () called by main () at statement: send(s, b, 99, 0);
[20:09:06] <Waynes> Too bad, the developer was smarter than me :D
[20:09:49] <pragma-> ,sh ping google.com
[20:09:50] <candide> pragma-: ping: google.com: Temporary failure in name resolution
[20:09:59] <pragma-> It's network cable is not plugged in.
[20:10:02] <pragma-> Its
[20:10:53] <Waynes> In this case it must communicate wirelessly with IRC
[20:11:29] <pragma-> It communicates over a virtual serial cable or over VM socket.
[20:11:33] <twkm> that's not how it works, receiving the program.
[20:12:06] <pragma-> Waynes: check it out https://github.com/pragma-/pbot/tree/master/applets/pbot-vm
[20:12:07] <candide> Title of pragma-'s link: pbot/applets/pbot-vm at master · pragma-/pbot · GitHub
[20:12:28] <Waynes> Very cool, thanks!
[20:15:15] *** Joins: pehaef (~pehaef@user/pehaef)
[20:19:42] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[20:20:11] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:20:38] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[20:24:12] *** Quits: alch (~alch@151.38.172.212) (Read error: Connection reset by peer)
[20:27:08] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[20:28:13] *** Joins: alch (~alch@151.38.150.187)
[20:31:23] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:31:36] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 245 seconds)
[20:35:19] <bnchs> my code is a mess
[20:35:27] <bnchs> i'm using double pointers in functions
[20:37:24] <fizzie> Just one more step and you'll be a https://wiki.c2.com/?ThreeStarProgrammer
[20:37:27] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[20:38:12] *** flooded is now known as _flood
[20:38:13] <bnchs> i'm using double pointers because i have to handle automatic resizing of strings if they get full
[20:38:22] <bnchs> let's just hope nobody touches this
[20:39:58] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[20:41:43] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[20:42:40] <bnchs> fizzie, i use triple pointer in my hashtable
[20:43:02] <fizzie> Congratulations.
[20:43:07] <bnchs> [bucket][conflicting_bucket][pointer_to_object]
[20:44:01] <NRK> 3 start programmer
[20:44:04] <NRK> s/start/star/
[20:44:16] <bnchs> yes it's a mess
[20:44:37] <bnchs> i use it as a 3d array
[20:45:28] <bnchs> is it bad?
[20:45:57] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[20:46:24] *** Joins: Klinda (~superleag@user/klinda)
[20:48:43] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:50:10] *** Quits: pehaef (~pehaef@user/pehaef) (Quit: leaving)
[20:51:36] <NRK> dunno, depends really. i don't think 3star programming is inherently bad.
[20:51:38] *** Joins: Betal (~Betal@user/betal)
[20:52:07] *** Joins: Burgundy (~NA@86.121.143.206)
[20:53:36] <fizzie> Last time the topic came up, we dug a few examples of five or six. Should've kept those links.
[20:54:47] <nomagno> what is the point at that point though?
[20:54:57] <bnchs> 6D arrays
[20:55:02] <nomagno> Doesn't it get extremely expensive to dynamically resize multi-dimension arrays?
[20:55:02] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.55) (Ping timeout: 240 seconds)
[20:55:09] <nomagno> since you gotta shift everything
[20:55:34] *** Quits: andro (~andro@user/andro) (Quit: leaving)
[20:55:46] <NRK> fizzie: i remember a five star program from musl
[20:55:47] <bnchs> if i used linked list i would have brought it down to 1 star
[20:56:13] <nomagno> I need to look for 2D array examples in my code...
[20:56:30] <bnchs> no wait i just looked at my hashtable cod
[20:56:32] <nomagno> Oh yes, I have a 2D array in one place for storing operands of my VM instructions relative to their PC
[20:56:39] <nomagno> That's the one place
[20:56:52] <bnchs> *(int*)hashtable[0][0][0]->value
[20:57:05] <bnchs> this is an example of my hashtable API
[20:57:19] <bnchs> s/->/.
[20:57:20] *** Joins: FatAlbert (~archer@user/tessio)
[20:57:33] *** Parts: FatAlbert (~archer@user/tessio) (WeeChat 3.4)
[20:57:43] <bnchs> get rid of the third [0]
[20:58:09] <bnchs>  *(int*)hashtable[0][0]->value
[20:58:15] *** Joins: andro (~andro@user/andro)
[20:59:25] *** Quits: sweetsymph_ (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:59:51] <bnchs> should i redesign my hashtable?
[20:59:53] <nomagno> And I also have a 2D array for storing pixels for software rendering purposes, thanks grep!
[21:00:33] <nomagno> bnchs: that seems fine to me
[21:00:42] <nomagno> though why the (int)?
[21:00:47] <nomagno> ugh, formatting
[21:00:49] <bnchs> because value is a void*
[21:01:02] <nomagno> Ah, makes sense
[21:02:04] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[21:04:58] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.31)
[21:05:39] *** Quits: fe23 (~fe23@2409:8a34:466:6010:e0f8:f024:1fa0:2314) (Quit: fe23)
[21:05:46] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[21:06:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:06:54] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 252 seconds)
[21:07:11] *** Quits: MajorBiscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:07:47] <pragma-> pft, only 3 stars. not even a 5 star programmer.
[21:08:11] <Waynes> I thought that a regular expression to search for triple pointers might be a good idea, but half of the matches I find are comments https://sourcegraph.com/search?q=context:global+%5Ba-zA-Z_%5D%5Ba-z_A-Z0-9%5D*%5C+*%5C*%7B3%2C%7D%5C+*%5Ba-zA-Z_%5D%5Ba-z_A-Z0-9%5D*+lang:c+&patternType=regexp&case=yes
[21:08:58] <bnchs> pragma-, is there a 16 star programmer
[21:09:10] <pragma-> Waynes: use a negative lookbehind/ahead for /, perhaps
[21:09:11] <fizzie> Yeah, musl's AIO implementation had a page table of sorts declared as `static struct aio_queue *****map;` at https://git.musl-libc.org/cgit/musl/tree/src/aio/aio.c#n75
[21:09:46] <bnchs> ,cc int ********************************dereference_all_this_now = &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&{0}
[21:09:47] * pragma- rates musl 5 stars.
[21:09:48] <candide> bnchs: error: expected identifier before '&&' token
[21:10:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.31) (Ping timeout: 256 seconds)
[21:10:02] <bnchs> damn
[21:11:02] <Waynes> pragma-: if I used lookbehind, my CS teacher would get mad because then it wouldn't be a true regular expression any longer
[21:11:02] <ashafq> Well function pointers can be fun because you can use any number of * and it will still deref into that same function.
[21:11:22] <bnchs> functino pointers
[21:11:27] <fizzie> ,cc int ********p = &(int*******){&(int******){&(int*****){&(int****){&(int***){&(int**){&(int*){&(int){123}}}}}}}}; printf("%d", ********p);
[21:11:28] <bnchs> are they technically
[21:11:29] <candide> fizzie: 123
[21:11:32] <bnchs> you know
[21:11:36] <ashafq> So you can have something like: void (*fun)(void) = some_function; and then (******************fun)();
[21:11:37] <bnchs> instruction pointers
[21:11:53] <bnchs> not function pointers
[21:12:45] <ashafq> ,cc void hello(void) { puts("hello world"); } { void (*fun)(void) = hello; (***********fun)(); }
[21:12:47] <candide> ashafq: hello world
[21:13:08] <bnchs> ,cc void hello(void) { puts("hello world"); } { void (*fun)(void) = hello+12; (*fun)(); }
[21:13:09] <candide> bnchs: [warning: pointer to a function used in arithmetic [-Wpointer-arith]]  Program received signal SIGILL, Illegal instruction in hello () at statement: puts("hello world"); called by hello () at statement: puts("hello world"); called by hello () at statement: puts("hello world"); called by hello () at statement: puts("hello world");
[21:13:10] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 256 seconds)
[21:13:24] <bnchs> hello + 12 instructions later
[21:13:25] <Waynes> I only see stars here. I must have hit my head or something.
[21:13:53] <bnchs> Waynes, when you hit your head, your eyes' display refreshes
[21:13:59] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[21:14:02] <bnchs> it becomes white for a spilt second
[21:14:24] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[21:14:26] <ashafq> bnchs: depends on the architecture. Note x86 insturctions are variable length.
[21:14:40] <bnchs> yes, it depends
[21:14:57] <bnchs> certain compilers and architecture have more or less instructions
[21:15:07] <pragma-> hmm
[21:15:15] <ashafq> bnchs: For RISC-V without compressed ISA extension, I would call that "instruction pointer" but then I still won't be correct.
[21:15:40] *** Quits: Waynes (~Waynes@user/waynes) (Quit: Leaving.)
[21:16:08] <pragma-> curious debug trace
[21:16:59] <bnchs> what does puts("hello world"); compile to (in x86 assembly)
[21:17:28] <fizzie> ,cc -paste void hello(void) { puts("hello world"); } gdb("disas hello");
[21:17:31] <candide> fizzie: https://0x0.st/oP3H.txt
[21:17:31] <fizzie> ^ that.
[21:18:33] <bnchs> i have plan
[21:18:37] <pragma-> dat nop
[21:18:46] <fizzie> Though godbolt.org is a rather better experience for exploring generated code. No offence intended to candide.
[21:19:01] <candide> f﻿izzie, That would be intriguing.
[21:19:11] *** Joins: graywolf (~wolf@user/graywolf)
[21:19:15] <pragma-> candide: can you feel offense?
[21:19:15] <candide> No such factoid 'feel'; Found one factoid in #c containing 'feel': canihaztehcodez is /say ##c is not the place to have others do your homework. If you don't understand parts of your assignment, feel free to ask but don't expect others to do your homework.
[21:19:52] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[21:22:15] *** Joins: seninha (~chatzilla@user/seninha)
[21:22:25] <bnchs> candide: rule
[21:22:25] <candide> No such factoid 'rule'; Found 2 factoids containing 'rule': [#c] spiral therule
[21:22:27] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[21:22:28] <bnchs> i mean rude
[21:22:42] <bnchs> this isn't homework
[21:22:58] <pragma-> candide: can you feel offense?
[21:23:07] <candide> p﻿ragma-, Do I look like I care?
[21:23:13] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[21:23:13] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:23:14] *** Joins: kurahaupo (~kurahaupo@pa49-182-8-44.pa.qld.optusnet.com.au)
[21:23:22] *** Joins: Akuli (~Akuli@82-203-164-15.bb.dnainternet.fi)
[21:24:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[21:24:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[21:24:44] <pragma-> ,show utftest
[21:24:44] <candide> [#c-offtopic] utftest: é
[21:24:53] <pragma-> ,show utftest2
[21:24:53] <candide> [#c-offtopic] utftest2: /call echo $args:json
[21:24:57] <pragma-> ,utftest
[21:24:57] <candide> [#c-offtopic] utftest is é
[21:25:16] *** Joins: shivesh (~shivesh@user/shivesh)
[21:25:39] <pragma-> oh my god
[21:25:43] <pragma-> this isn't my candide buffer
[21:25:52] <pragma-> I have been spewing this into #c.
[21:26:55] <bnchs> ,cc char opcode = {0x55, 0x48, 0x89, 0xEC, 0x89, 0x1C, 0x25, 0x10, 0x00, 0x00, 0x00}; (*opcode)(); printf("%d\n");
[21:26:57] <candide> bnchs: warning: excess elements in scalar initializer  note: (near initialization for 'opcode')  warning: excess elements in scalar initializer  note: (near initialization for 'opcode')  warning: excess elements in scalar initializer  note: (near initialization for 'opcode')  warning: excess elements in scalar initializer  note: (near initialization for 'opcode')  warning: excess elements in scalar initia... <truncated; https://0x0.st/oP3K.txt>
[21:27:23] <bnchs> oh i forgot
[21:27:32] <bnchs> ,cc char opcode[] = {0x55, 0x48, 0x89, 0xEC, 0x89, 0x1C, 0x25, 0x10, 0x00, 0x00, 0x00}; (*opcode)(); printf("%d\n")
[21:27:33] <candide> bnchs: warning: overflow in conversion from 'int' to 'char' changes value from '137' to '-119' [-Woverflow]  warning: overflow in conversion from 'int' to 'char' changes value from '236' to '-20' [-Woverflow]  warning: overflow in conversion from 'int' to 'char' changes value from '137' to '-119' [-Woverflow]  error: called object '*(char *)&opcode' is not a function or function pointer
[21:27:35] *** Joins: Jong (~Jong@2620:10d:c090:400::5:9b63)
[21:27:47] <fizzie> You can't call what isn't a pointer to a function.
[21:28:03] <bnchs> oh
[21:28:14] <bnchs> ok sure
[21:28:37] <fizzie> And chances are very high a non-const array of char isn't in an executable segment. A `const` one occasionally is.
[21:29:09] <bnchs> yes of course thanks to the no-execute bit that CPUs have
[21:29:21] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[21:30:24] *** Joins: Camilo (~hugh@host-92-0-13-2.as13285.net)
[21:30:54] *** Joins: cousteau (~cousteau@user/cousteau)
[21:31:22] *** Joins: soul-d (~uknown@user/soul-d)
[21:34:33] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[21:35:54] <bnchs> fizzie: you're a good guy
[21:36:04] *** Joins: tiotags (~tiotags@user/tiotags)
[21:37:01] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[21:37:08] *** Quits: bnchs (~bnchs@160.176.39.0) (Read error: Connection reset by peer)
[21:37:31] *** Joins: bnchs (~bnchs@160.176.39.0)
[21:37:46] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[21:38:05] *** Joins: not_not (~not_not@193.178.220.11)
[21:38:05] *** ChanServ sets mode: +o candide
[21:38:05] *** not_not was kicked by candide (Evaded *!*@5.2.79.79 set by candide)
[21:38:06] *** candide sets mode: +b $a:not_not
[21:38:27] <Camilo> I'm trying to read a double from an little endian binary file,
[21:38:35] *** Joins: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e)
[21:38:45] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[21:39:15] <bnchs> camilo: whats your CPU
[21:39:21] <bnchs> is it big endian
[21:39:37] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:39:46] <Camilo> yeah, I've found a solution I just wanted to ask if it was an acceptable solution of if I'm doing something stupid
[21:40:05] <Camilo> can i paste a link to gitlab?
[21:40:06] <bnchs> read the file backwards?
[21:40:13] <bnchs> yeah sure
[21:40:17] <Camilo> https://gitlab.com/HughTaylor/nanosims-scripts/-/blob/master/c/raster.c#L206
[21:40:17] <gog> use fscanf?
[21:40:25] <gog> or is it stored in binary format?
[21:40:37] <bnchs> gog: he said binary
[21:40:48] <gog> ugh
[21:40:52] <gog> ignore me pls :D
[21:41:04] *** Joins: Rynn (~rynn@216.30.158.198)
[21:41:38] <bnchs> we all do mistakes but i'm the one who does the most
[21:41:39] <Camilo> There's an array of doubles called "masses", I'm reading the little endian doubles into the masses array
[21:41:50] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[21:42:12] *** Quits: savolla (~quassel@95.10.239.22) (Ping timeout: 240 seconds)
[21:42:30] *** Joins: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net)
[21:42:30] *** Quits: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net) (Changing host)
[21:42:30] *** Joins: wroathe (~wroathe@user/wroathe)
[21:42:38] <bnchs> camilo: you could read it backwards
[21:42:44] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Quit: Leaving)
[21:42:45] <bnchs> seek to the end of the double
[21:42:48] <bnchs> and read until you reached the start
[21:43:00] <bnchs> store it byte-by-byte in the double
[21:43:57] *** Joins: sweetsymph_ (uid509475@id-509475.lymington.irccloud.com)
[21:45:08] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[21:45:15] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[21:46:12] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:46:26] *** Joins: bnchs__ (~bnchs@41.143.84.151)
[21:47:08] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:47:29] *** sweetsymph_ is now known as thelma
[21:47:55] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:e4ff:83e1:d0cb:eb4e)
[21:47:58] <cousteau> Camilo: the advised way to go in these cases is to use unions
[21:48:06] <cousteau> rather than type-punning via pointers
[21:48:37] *** Quits: bnchs (~bnchs@160.176.39.0) (Ping timeout: 240 seconds)
[21:49:01] <cousteau> type-punning via pointers can have undesirable side effects; the compiler might try to be a smartass and say "hey, these are two different types, and thus must be different objects"... and somehow optimize how things are done.
[21:49:01] *** thelma is now known as sweetsymph_
[21:49:56] *** Quits: Red (~Red@41.92-221-233.customer.lyse.net) (Ping timeout: 245 seconds)
[21:50:20] <cousteau> on another hand, there's a rule in C that says that anything can be accessed as an array of characters (char / signed char / unsigned char); you could take advantage of that
[21:51:09] <cousteau> so... you could use an array of unsigned char as the "binary type" on which you do the magic, rather than a uint64_t
[21:52:44] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:52:55] <constxd> kings
[21:53:02] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 260 seconds)
[21:53:17] <constxd> do i get a new 16inch mbp with 64gb of ram
[21:53:20] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[21:53:28] *** Joins: Rynn (~rynn@216.30.158.198)
[21:53:55] <cousteau> union { double d; unsigned char b[sizeof (double)]; } u;  fread(&u.b, sizeof u.b, 1, inptr);  flip the order of bytes u.b[0] to u.b[sizeof (double) - 1];  masses[i] = u.d;
[21:54:56] <cousteau> as far as I know that's the safest way to do that sort of byte reordering
[21:55:40] <cousteau> ...then again, the way you proposed has the advantage of working regardless of the endianness
[21:56:48] <cousteau> so you could use union { double d; uint64_t n; } u; and then pretty much the code you did, but ditching the (double *) cast
[21:57:24] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 240 seconds)
[21:57:40] <cousteau> constxd: maybe you want to ask in #hardware
[21:57:54] <Camilo> great thank you so much for the comment cousteau
[21:58:06] <cousteau> but they might tell you "no don't get a mac, build your own computer from scratch"
[21:58:13] <cousteau> Camilo: you're welcome :)
[21:59:08] <cousteau> the (sizeof (uint8_t), sizeof (double)) kind of annoys me... I'd just use (sizeof (double), 1)
[21:59:57] *** Joins: bnchs___ (~bnchs@160.177.100.240)
[21:59:57] *** Quits: kts (~kts@103.73.237.247) (Ping timeout: 240 seconds)
[22:00:01] <cousteau> or, if you want to pretend that "you don't know the size of a uint8_t", or leave it abstract, then in principle you would do (sizeof (uint8_t), sizeof (double) / sizeof (uint8_t))
[22:00:20] <cousteau> (even if a uint8_t, if it exists, MUST have a size of 1)
[22:00:32] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[22:00:52] <DPA> I havn't read all of this, but as far as I know, unions don't guarantee anything when reading and writing different members. It's usually a better idea to just use memset. Compilers can optimize that away just fine. I think casting to char is usually also allowed.
[22:01:08] <DPA> s/memset/memcpy/
[22:01:24] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:02:10] *** Joins: Rynn (~rynn@216.30.158.198)
[22:03:02] *** Quits: bnchs__ (~bnchs@41.143.84.151) (Ping timeout: 256 seconds)
[22:05:19] <cousteau> yes; now that you mention it, maybe using unions isn't safe for type-punning between two types that aren't character arrays.  But I recall that unions were quite resilient in this regard.
[22:06:20] <cousteau> ,c11std FOOTNOTE.95
[22:06:20] <candide> http://www.iso-9899.info/n1570.html#FOOTNOTE.95 If the member used to read the contents of a union object is not the same as the member last used to store a value in the object, the appropriate part of the object representation of the value is reinterpreted as an object representation in the new type as described in 6.2.6 (a process sometimes called ``type punning''). This might be a trap representation.
[22:06:22] *** Joins: iceneko (~iceneko@user/iceneko)
[22:06:35] <cousteau> (footnotes are non-normative, but well...)
[22:07:34] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Ping timeout: 256 seconds)
[22:09:53] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:10:31] *** Parts: iceneko (~iceneko@user/iceneko) (Leaving)
[22:11:32] <fizzie> Ugh, that thing again. Instead of resolving the defect report that generated it by adding a footnote, the committee should've just put explicitly in the normative part what they mean.
[22:11:39] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[22:11:46] <fizzie> Some of the context: http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_257.htm + http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_283.htm + http://www.open-std.org/jtc1/sc22/wg14/www/docs/n980.htm
[22:11:47] <candide> Title of fizzie's link: Proposed resolution for DR236
[22:12:25] <cousteau> "what they MEAN"?  in a standard?  Since when are standards meant for explaining things?  :)
[22:13:02] <cousteau> god, so many things would be easier if people added notes to laws/rules/standards explaining the why, and not just the what...
[22:13:41] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 245 seconds)
[22:13:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:16:08] <fizzie> IIRC, even though footnotes are supposed to "emphasize consequences of the rules described in that subclause or elsewhere", there's at least one case where there's a footnote that sounds like it means *something*, even if it's a little unclear what -- C11 footnotes 41 & 48: "The same representation and alignment requirements are meant to imply interchangeability as arguments to functions, return values
[22:16:09] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 250 seconds)
[22:16:10] <fizzie> from functions, and members of unions" -- but also a later defect report response that says those footnotes are there just to "encourage" implementations to make something that's undefined by the standard to work in a given way.
[22:18:40] *** Inline__ is now known as Inline
[22:20:12] *** Quits: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se) (Ping timeout: 240 seconds)
[22:20:45] <fizzie> In addition to the footnote, C99 did also do a normative change in that the part of C90 that explicitly made type-punning implementation-defined ("With one exception, if a member of a union object is accessed after a value has been stored in a different member of the object, the behavior is implementation-defined.") was removed.
[22:20:47] <fizzie> (The "one exception" was the common initial subsequence rule, which still remains.)
[22:21:22] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[22:21:59] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 256 seconds)
[22:23:03] *** Joins: Atque (~Atque@user/atque)
[22:23:13] *** Joins: seninha (~chatzilla@user/seninha)
[22:26:45] *** Quits: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:27:59] *** Joins: skapata (~Skapata@user/skapata)
[22:29:02] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[22:29:08] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:31:10] *** Quits: ejjfunky (~ejjfunky2@125.164.20.168) (Read error: Connection reset by peer)
[22:31:29] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:31:41] *** Quits: wlemuel_ (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:32:29] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:33:13] <ws2k3> when i look at the output of readelf i see addr off and size. what does off exacly mean?
[22:33:31] *** Joins: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e)
[22:33:48] *** Quits: bnchs___ (~bnchs@160.177.100.240) (Ping timeout: 252 seconds)
[22:34:06] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[22:34:11] <chiselfuse> ws2k3: offset
[22:34:53] <pony> how do people implement Maybe (from Haskell), or Option (from Rust) in C?
[22:35:48] <Amun-Ra> via implementing tagged union
[22:35:48] <pony> ski: Maybe you know the answer to this? :D
[22:35:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:35:58] <pony> ahh, ok
[22:36:30] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:36:46] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[22:37:05] <pony> unions were one thing I never learned, but I'm going to read K&R2 after I finish Pro Git
[22:37:10] *** Joins: lispy (~lispy@user/lispy)
[22:37:31] *** Joins: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net)
[22:37:31] *** Quits: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net) (Changing host)
[22:37:31] *** Joins: wroathe (~wroathe@user/wroathe)
[22:37:32] <ws2k3> chiselfuse yes that i know. but what is an offset exacly?
[22:37:59] <ws2k3> or how is Addr different from offset?
[22:38:37] *** Joins: ta180m (~ta180m@2001:470:69fc:105::1d3)
[22:39:17] <fizzie> One's about the location in memory, the other's about the location in the file? Usually.
[22:40:14] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 250 seconds)
[22:43:41] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:44:50] *** Joins: pulse (~pulse@user/pulse)
[22:45:05] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:46:18] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[22:47:18] *** Joins: seninha (~chatzilla@user/seninha)
[22:47:30] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[22:47:30] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:48:36] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:48:36] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:48:52] <pragma-> ,add essentialc http://cslibrary.stanford.edu/101/EssentialC.pdf
[22:48:53] <candide> essentialc added to #c.
[22:50:15] <pony> thank you pragma-
[22:50:18] <pony> I might read that
[22:50:31] *** Quits: alch (~alch@151.38.150.187) (Read error: Connection reset by peer)
[22:50:36] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[22:52:50] <wroathe> I can't read
[22:52:57] <pony> why not?
[22:53:30] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[22:53:42] <wroathe> Because the system
[22:54:00] *** Joins: alch (~alch@151.82.79.192)
[22:54:16] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[22:54:49] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[22:55:20] <pragma-> pony: it's pre-C99, but hopefully useful
[22:55:36] <constxd> >char
[22:55:40] <pony> yeah, I saw it said no boolean
[22:55:40] <constxd> >pronounced "car"
[22:55:46] <constxd> delete that shit
[22:56:10] <constxd> who the fuck says "car" lmao
[22:56:12] <bertvvvs> hahahaha
[22:56:14] <constxd> unsigned car
[22:56:26] <pragma-> yeah, some people go for char as in character, but i prefer char as in charcoal.
[22:56:40] <pony> I heard Brian K pronounce it that way
[22:57:06] <pony> actually it was more like "Karen" without the n
[22:57:19] <constxd> you mean like "care"? lmao
[22:57:25] <pony> no
[22:58:23] <constxd> then you're pronouncing karen wrong
[22:58:31] <pony> nope
[22:59:34] <pony> Karen (/ˈkærən/)
[22:59:48] <constxd> muh IPA
[22:59:56] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 272 seconds)
[23:00:37] <bertvvvs> google translate's woman pronounces "kare" and "care" the same, it's good enough 4 me
[23:00:54] <bertvvvs> but "car"?! definitely a no-no
[23:00:56] *** Quits: frostygoth_ (~frostygot@li1566-163.members.linode.com) (Quit: Leaving)
[23:01:23] <wroathe> chairacter
[23:01:24] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[23:01:48] <pony> is it time for you to say kings yet, constxd?
[23:01:48] <Amun-Ra> I got a friend who pronounces 'char' as in 'char'
[23:01:49] <pragma-> wroathe: so it should be pronounced "chair"
[23:01:57] <constxd> not yet
[23:01:59] <wroathe> pragma-: Thus I have spoken
[23:02:10] <constxd> channel is too active now
[23:02:20] <wroathe> Don't you mean chainnel?
[23:02:27] <Inline> tshar
[23:02:38] <Amun-Ra> tzar
[23:02:45] <lispy> tsar
[23:03:08] <Inline> kar
[23:03:09] <lispy> I pronounce char like car sometimes, do I have brain damage?
[23:03:22] *** candide sets mode: -q *!*root@5.2.79.79
[23:03:22] <Amun-Ra> well, I do too
[23:03:31] <pony> good
[23:03:39] <Amun-Ra> as in 'character'
[23:03:41] <Inline> well not really like car but more like kar
[23:03:52] <Inline> yes as in character
[23:04:01] <Inline> karacter
[23:04:05] <lispy> yeah ^
[23:04:08] <Amun-Ra> to us, poles, car and kar is the same ;)
[23:04:13] <constxd> just say char
[23:04:31] <constxd> that way you can say
[23:04:41] <constxd> puts() takes a char star
[23:04:43] <constxd> and it rhymes
[23:04:43] <pragma-> ugh, it casts malloc too
[23:04:44] <Inline> otherwise it would be just caracter
[23:04:52] <pony> pragma-: oof
[23:04:56] <pragma-> ,forget essentialc
[23:04:56] <candide> essentialc removed from #c.
[23:05:01] * pragma- whistles innocently.
[23:05:04] <pragma-> nothing to see here.
[23:05:08] <pony> my professor said "you must ALWAYS cast malloc!"
[23:05:13] <pony> and then in the lab book it didn't
[23:05:14] <pony> ?
[23:05:22] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e4ff:83e1:d0cb:eb4e) (Quit: Quit)
[23:05:30] <Amun-Ra> if there's a difference between 'caracter', 'character' and 'karacter' I guess I couldn't tell
[23:05:37] <constxd> he misspoke he meant to say you must NEVER cast malloc!
[23:05:41] <pragma-> but then he doesn't cast realloc
[23:05:48] <Amun-Ra> pony: I can't cast malloc, not enought manan
[23:05:50] <Amun-Ra> mana*
[23:05:59] <Amun-Ra> and enough*
[23:06:05] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[23:06:17] <constxd> pragma-: well yeah because you already set the type when you malloc()d it initially
[23:06:30] <constxd> the allocated object remembers its type after that
[23:06:37] <pragma-> ah, it was written in 1998 and updated in 2003 with minor typo fixes.
[23:06:40] <pony> what
[23:06:57] *** Joins: undt (undt@gateway/vpn/protonvpn/undt)
[23:07:15] <pragma-> malloc has no notion of types, just sizes.
[23:07:48] <constxd> forgot /s
[23:08:03] <pony> pragma-: would it be right to say that objects do not have types, only variables do?
[23:08:16] <constxd> no
[23:08:30] <pragma-> variables are objects
[23:08:33] <fizzie> Objects have a thing called an /effective type/. And some objects have a declared type also.
[23:08:42] <fizzie> ,c11 6.5p6
[23:08:44] <candide> http://www.iso-9899.info/n1570.html#6.5p6 [Expressions] The effective type of an object for an access to its stored value is the declared type of the object, if any.87) If a value is stored into an object having no declared type through an lvalue having a type that is not a character type, then the type of the lvalue becomes the effective type of the object for that access and for subsequent accesses that... <truncated; https://0x0.st/oPYr.txt>
[23:09:03] *** Joins: Filystyn (~piotr@user/filystyn)
[23:09:05] <Filystyn> hello
[23:09:10] <Amun-Ra> cześć
[23:09:11] <constxd> hello king
[23:09:21] <lispy> Hello Fily
[23:09:29] <Filystyn> Polski na #c ? :>
[23:09:33] <Filystyn> ok question :
[23:09:44] <Amun-Ra> nope, I just noticed your user@host.id
[23:10:09] *** Quits: knusbaum (~knusbaum@23.249.37.254) (Ping timeout: 256 seconds)
[23:10:12] <Filystyn> swap memory, is there way to hint somehow inside program code - this part of heap memory effectivly can resident in swap memory?
[23:11:20] <constxd> to guide optimization?
[23:12:09] <Filystyn> mmm I would not say it's guiding optimilization more of - this part of memory will not likel often be used. But on the other hand it will be anyway copied to ram the moment it is needed
[23:12:15] <Filystyn> so that probably would not have sens anyway
[23:12:48] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[23:13:31] <Filystyn> but for exmaple it could copy those parts always to small ram space instead of polluting rets f ram which gets entered more often with blocks that get used rarely
[23:13:32] <wroathe> Filystyn: Your operating system already handles that on the fly for you through virtual memory
[23:14:12] <Filystyn> I know but it can't knwo which parts of memory are used all the time and which one just get there and like might  be used in an hour right ?
[23:14:38] <Amun-Ra> I don't think you can control that
[23:14:48] <fizzie> The closest thing along those lines is probably the POSIX `posix_madvise`, and the different implementation-specific `madvise` calls, which have various constants that can be used to hint at how the application is going to use a particular range. But it doesn't have anything exactly like that.
[23:14:52] <wroathe> Filystyn: Yes, it's tracking access to pages and making decisions about what can be flushed back to disk to make room in physical memory
[23:15:19] <wroathe> Same for cache access
[23:15:26] *** Joins: bnchs (~bnchs@160.177.100.240)
[23:15:46] <Filystyn> Ok, I would not dare to give hints to cache ;-)
[23:15:54] <Filystyn> Thanks you for answers
[23:15:57] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[23:16:02] <wroathe> In fact, your whole program is operating on a many-layered caching system that is very sophisticated
[23:17:44] <fizzie> `posix_madvise` for example has POSIX_MADV_DONTNEED ("Specifies that the application expects that it will not access the specified range in the near future"), but I believe that's a no-op on Linux, because the Linux `MADV_DONTNEED` actually has different semantics and isn't just a hint (it also forgets about the data).
[23:19:07] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:20:10] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[23:21:35] *** Joins: frostygoth (~frostygot@li1566-163.members.linode.com)
[23:22:10] <wroathe> I suppose I should qualify my answer by saying that this is true for modern operating systems running on hardware that supports virtual memory and caches
[23:22:34] <wroathe> If you're on some sort of smart toaster then all bets are off
[23:23:57] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:24:25] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:24:29] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:24:58] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[23:25:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:25:17] <bnchs> why do you need memory advise
[23:25:34] <bnchs> and how is it usable
[23:26:09] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[23:27:11] *** Lord_of_Life_ is now known as Lord_of_Life
[23:33:08] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 256 seconds)
[23:33:48] *** Joins: strajder (~strajder@user/strajder)
[23:34:30] *** Joins: frostygoth_ (~frostygot@98.97.80.133)
[23:35:17] *** Quits: frostygoth (~frostygot@li1566-163.members.linode.com) (Ping timeout: 240 seconds)
[23:37:34] *** Quits: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e) (Ping timeout: 260 seconds)
[23:37:58] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:38:10] *** candide sets mode: -o candide
[23:40:53] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:41:20] *** Quits: andro (~andro@user/andro) (Quit: leaving)
[23:41:56] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[23:43:49] <bnchs> ,cc int main (void) { return INT_MAX; }
[23:43:58] <candide> bnchs: [gdb time-out]
[23:44:25] <bnchs> it appears i have found a vulnerability
[23:45:05] <pragma-> ,cc INT_MAX
[23:45:07] <candide> pragma-: no output: INT_MAX = 2147483647
[23:48:26] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Ping timeout: 256 seconds)
[23:48:58] *** Joins: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[23:49:37] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[23:49:50] *** pippijn_ is now known as pippijn
[23:51:17] *** Quits: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e) (Ping timeout: 256 seconds)
[23:52:06] *** Joins: rpaezbas (~rpaezbas@68.242.15.37.dynamic.jazztel.es)
[23:53:46] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[23:54:05] *** Joins: trisk (~trisk@c-73-253-10-38.hsd1.ma.comcast.net)
[23:55:37] <cousteau> ,cc return 255;
[23:55:46] <candide> cousteau: [gdb time-out]
[23:56:00] <cousteau> My guess is that return 255 is something gdb uses as a special value
[23:56:03] <Xeroine> ws2k3: a debugger?
[23:56:12] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[23:56:23] <Xeroine> nevermind
[23:58:11] <rpaezbas> hi guys, new programmer to c here. noob question: can I assing a struct pointer that I want to access like pointer[n]. I get a compilation error that says pointer[n] is a struct instead of a pointer.
[23:59:37] <fizzie> ,cc return 1;
[23:59:46] <candide> fizzie: [gdb time-out]
[23:59:49] <fizzie> TBH, kind of looks like any non-successful termination gives that.
