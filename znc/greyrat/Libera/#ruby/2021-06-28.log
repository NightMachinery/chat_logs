[00:01:03] *** Quits: sagax (~sagax@213.138.71.146) (Remote host closed the connection)
[00:17:25] *** Quits: tungki (~Guest54@subs31-116-206-15-16.three.co.id) (Ping timeout: 246 seconds)
[00:32:21] *** Joins: MachinShin (sid243317@id-243317.brockwell.irccloud.com)
[00:34:05] *** Joins: lunarkitty (uid501895@user/pyra)
[00:54:44] *** Quits: lucf117 (~lucf117@179.108.21.58) (Changing host)
[00:54:44] *** Joins: lucf117 (~lucf117@user/lucf117)
[00:58:27] *** Quits: lucf117 (~lucf117@user/lucf117) (Quit: Leaving)
[00:58:36] *** Joins: lucf117 (~lucf117@user/lucf117)
[01:00:25] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[01:04:20] *** Joins: glider (~glider@user/glider)
[01:13:18] *** Quits: Guest33 (~textual@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:21:35] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net)
[01:35:19] *** Joins: Garb000 (~Garb0@user/garb0)
[01:38:10] *** Quits: Garb00 (~Garb0@user/garb0) (Ping timeout: 272 seconds)
[02:00:42] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net) (Quit: Client closed)
[02:04:22] *** Joins: ur5us (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610)
[02:10:52] *** Joins: pwnd_sfw5 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[02:11:09] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 268 seconds)
[02:11:09] *** pwnd_sfw5 is now known as pwnd_sfw
[02:46:15] *** Quits: factor (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[02:49:05] *** Joins: factor (~factor@c-66-30-67-217.hsd1.ma.comcast.net)
[02:55:34] *** Quits: entel_ (uid256215@id-256215.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[03:05:08] *** Quits: Garb000 (~Garb0@user/garb0) (Ping timeout: 268 seconds)
[03:06:43] *** Joins: Garb000 (~Garb0@user/garb0)
[03:10:38] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 258 seconds)
[03:12:33] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (Quit: Connection closed for inactivity)
[03:15:58] *** Quits: Garb000 (~Garb0@user/garb0) (Ping timeout: 252 seconds)
[03:18:06] *** Joins: Garb000 (~Garb0@user/garb0)
[03:19:53] *** Joins: finsternis (~X@23.226.237.192)
[03:41:14] *** Quits: ur5us (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610) (Ping timeout: 250 seconds)
[03:41:53] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[03:48:07] *** Quits: cdolan (~chris@pool-108-20-118-27.bstnma.fios.verizon.net) (Quit: WeeChat 3.0.1)
[04:21:32] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (Remote host closed the connection)
[04:21:39] *** Joins: entel_ (uid256215@id-256215.brockwell.irccloud.com)
[04:27:40] *** Joins: easbarbosa (~user@2804:1b2:83:7e91:ede2:b968:f6f5:77ad)
[04:35:08] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 265 seconds)
[05:08:43] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[05:12:00] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 272 seconds)
[05:42:55] *** Quits: lucf117 (~lucf117@user/lucf117) (Remote host closed the connection)
[05:49:01] *** Joins: factor4 (~factor@c-66-30-67-217.hsd1.ma.comcast.net)
[05:50:05] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[05:52:46] *** Quits: factor (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Ping timeout: 272 seconds)
[05:52:46] *** factor4 is now known as factor
[06:52:41] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[07:15:53] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[07:18:16] *** Joins: pwnd_sfw1 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:18:46] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:18:46] *** pwnd_sfw1 is now known as pwnd_sfw
[07:20:26] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[07:27:10] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[07:46:00] *** Quits: slothby (~JoshAshby@irc.isin.space) (Quit: brb ... maybe)
[07:57:14] *** Joins: slothby (~JoshAshby@irc.isin.space)
[08:23:49] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[08:25:28] *** Joins: lucf117 (~lucf117@user/lucf117)
[08:28:53] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[09:02:45] *** Joins: Nik- (~textual@p5b3f9738.dip0.t-ipconnect.de)
[09:08:16] *** Quits: Nik- (~textual@p5b3f9738.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[09:09:12] *** Joins: Nik- (~textual@p5b3f9738.dip0.t-ipconnect.de)
[09:30:17] *** Quits: Garb000 (~Garb0@user/garb0) (Remote host closed the connection)
[09:30:34] *** Joins: Garb000 (~Garb0@user/garb0)
[09:33:25] *** Joins: Toledo (~quassel@nat-pool-rdu-t.redhat.com)
[09:34:56] *** Toledo is now known as croberts
[09:42:13] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-18.prtc.net)
[09:42:29] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-18.prtc.net) (Write error: Broken pipe)
[09:44:42] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[09:48:42] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:b4e8:792b:fbd2:5eab) (Ping timeout: 250 seconds)
[09:49:24] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 272 seconds)
[09:52:18] *** Joins: dvgorod (~dvgorod@94.19.245.86)
[09:56:44] *** Quits: factor (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[10:13:08] *** Quits: lucf117 (~lucf117@user/lucf117) (Remote host closed the connection)
[10:14:59] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[10:32:24] *** Joins: pwnd_sfw3 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[10:34:04] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 268 seconds)
[10:34:05] *** pwnd_sfw3 is now known as pwnd_sfw
[10:35:09] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[10:35:34] *** Joins: lad (~lad@user/lad)
[11:34:05] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[11:34:26] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 250 seconds)
[11:38:59] *** Joins: teclator_ (~quassel@85.155.180.70.dyn.user.ono.com)
[11:39:05] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[12:03:27] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:08:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[12:15:44] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 258 seconds)
[12:17:27] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[12:23:50] *** Quits: lad (~lad@user/lad) (Ping timeout: 268 seconds)
[12:31:43] *** Quits: teclator_ (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:39:48] *** Quits: easbarbosa (~user@2804:1b2:83:7e91:ede2:b968:f6f5:77ad) (Remote host closed the connection)
[12:48:35] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[12:51:30] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:20:34] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Ping timeout: 268 seconds)
[13:24:58] *** Joins: pusewicz (~pusewicz@170.253.50.181)
[13:28:51] <nakilon> there should be a gemspec field thread_safe
[13:29:11] <nakilon> so people would see it on rubygems.org immediately when deciding to use and how to use the gem
[13:42:10] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 268 seconds)
[13:59:17] *** Joins: royo25 (~supergeek@user/royo25)
[14:35:08] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 250 seconds)
[14:54:02] *** Joins: TomyWork (~TomyLobo@p200300e80f133c000512b9808dfc1445.dip0.t-ipconnect.de)
[15:40:03] *** Joins: Danishman (~Allan@62-243-156-218-static.dk.customer.tdc.net)
[16:02:12] *** Quits: _aeris_ (~aeris@gateway/tor-sasl/aeris) (Ping timeout: 244 seconds)
[16:03:40] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[16:14:49] *** Joins: _aeris_ (~aeris@gateway/tor-sasl/aeris)
[16:16:49] *** Joins: Guest33 (~textual@c-107-4-204-12.hsd1.mn.comcast.net)
[16:21:00] *** Quits: pusewicz (~pusewicz@170.253.50.181) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:25:27] *** Joins: lunarkitty (uid501895@user/pyra)
[16:28:22] <adam12> Most people probably don't know. Ie. See Samuel's talk about threads and fibers.
[16:47:17] <ccooke> I think I'v always worked on the assumption that any gem is not thread safe
[16:55:51] <nakilon> adam12 don't know if their gem is thread-safe? that's why I as their gem user should know if they don't know it
[16:56:23] <adam12>  nakilon: Not sure how that helps tho. People would just set it to true even if they didn't know.
[16:56:53] <nakilon> I mean, just having this standard field in gemspec will make them start thinking about thread safety and if they don't know about it they won't set this field since it would be by default set to "not safe"
[16:57:25] <nakilon> most of fields in gemspec are optional -- people don't set them if they don't need to, I assume
[17:03:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[17:05:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:07:31] <nakilon> lol I want to record by CLI gem usage example; I choose between two tools to record terminal session: https://github.com/faressoft/terminalizer/issues/21
[17:07:44] <nakilon> > Another advantage I think it's relevant is the fact Terminalizer is implemented in Node.js and not Python.
[17:08:31] <nakilon> "oh nice!" I think, then I do npm install and it... installs python! and obviously fails because puthon always fails
[17:08:50] <nakilon> I didn't see anything this misleading for a while
[17:09:31] <nakilon> what a cancer https://www.npmjs.com/package/node-gyp
[17:15:14] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.110)
[17:32:35] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[17:34:55] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.110) (Quit: Textual IRC Client: www.textualapp.com)
[17:39:25] *** Joins: xuochi (~xuochi@c-24-98-208-21.hsd1.ga.comcast.net)
[17:40:49] *** Joins: pusewicz (~pusewicz@170.253.50.181)
[17:46:49] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[17:49:09] *** Joins: pusewicz_ (uid2036@id-2036.tooting.irccloud.com)
[17:49:11] *** Quits: pusewicz (~pusewicz@170.253.50.181) (Quit: Textual IRC Client: www.textualapp.com)
[17:49:12] *** pusewicz_ is now known as pusewicz
[17:49:15] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[17:59:54] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.166)
[18:09:03] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:88a9:d02:3dd9:e518)
[18:24:40] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[18:27:01] *** Quits: Guest33 (~textual@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:27:40] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[18:30:08] *** Joins: motherr (~motherr@user/motherr)
[18:33:40] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[18:34:42] <jidar> wait installing a node package will install python?
[18:34:47] <jidar> heh, that seems... odd
[18:36:43] <adam12> >> {one: nil, two: nil, three: 3}.lazy.filter_map { |k, v| v }.first
[18:36:45] <ruby[bot]> adam12: # => 3 (https://carc.in/#/r/bfyk)
[18:39:42] <adam12> I wonder how common it is to want the return value of the block and not the element, when using something like Enumerator#find
[18:40:11] <adam12> >> {one: nil, two: nil, three: 3}.find { break _2 if _2 }
[18:40:11] <ruby[bot]> adam12: # => 3 (https://carc.in/#/r/bfyl)
[18:51:18] <nakilon> adam12 I did it a lot
[18:52:29] <nakilon> (filter_map is useless method btw)
[18:52:55] *** Joins: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net)
[18:53:10] <nakilon> it's just flat_map.compact, are we gonna make extra method for every two methods chainings?...
[18:54:36] <nakilon> that's just my opinion though
[18:55:01] <nakilon> btw, neither of two python tools did install neither in macos nor in dockerized alpine or ubuntu, lol
[18:55:54] <nakilon> so I used a rust wrapper onto ffmpeg that is slow and tedious https://github.com/sassman/t-rec-rs
[19:13:32] *** Joins: finsternis (~X@23.226.237.192)
[19:24:11] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:24:13] <adam12> nakilon: flat_map.compact isnt' just two method calls, it's two iterations through the collection. O(n)*2 or something.
[19:25:14] <nakilon> O(n)*2 = O(n) though
[19:25:45] <jhass[m]> O notation is not sufficient to point out all performance problems there are :)
[19:26:19] <nakilon> unfortunately there is no notation to point out problems of having bloated stdlib
[19:26:30] <jhass[m]> for really big collections it makes a difference. For many small collections it makes a difference if your forget to use .compact! over compact
[19:26:37] <jhass[m]> the latter due to GC pressure mostly
[19:28:02] <nakilon> the "want the return value of the block and not the element, when using something like Enumerator#find" isn't even a self-sufficient problem -- it's somewhere inside your algorithm where you might not even need to compact, it all depends on the whole picture
[19:28:49] *** Joins: Guest33 (~textual@c-107-4-204-12.hsd1.mn.comcast.net)
[19:31:32] <jhass[m]> I'm actually responsible for Crystal having Enumerable#min_of/max_of which are min_by/max_by but returning the block's value. Not sure why "find_value" didn't happen at the same time
[19:31:56] <jhass[m]> maybe because it's too easy to break
[19:34:22] *** Joins: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a)
[20:11:06] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.166) (Quit: Textual IRC Client: www.textualapp.com)
[20:14:59] *** Quits: saba_sedigh (~saba_sedi@5.160.21.189) (Ping timeout: 268 seconds)
[20:17:09] *** Joins: saba_sedigh (~saba_sedi@109.125.173.133)
[20:18:31] *** drincruz_ is now known as drincruz
[20:28:28] *** Quits: royo25 (~supergeek@user/royo25) (Quit: Bye)
[20:36:58] *** Quits: TomyWork (~TomyLobo@p200300e80f133c000512b9808dfc1445.dip0.t-ipconnect.de) (Quit: Leaving)
[20:44:40] *** Quits: FetidToot (~FetidToot@user/fetidtoot) (Quit: The Lounge - https://thelounge.chat)
[20:45:55] *** Joins: FetidToot (~FetidToot@user/fetidtoot)
[20:49:25] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[20:52:05] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[20:54:09] *** Joins: reset (~reset@user/reset)
[20:56:32] *** Quits: Nik- (~textual@p5b3f9738.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[21:03:58] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 258 seconds)
[21:05:04] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[21:59:16] *** Joins: TorpedoSkyline (~torpedosk@wsip-70-168-198-102.br.br.cox.net)
[21:59:16] *** Quits: TorpedoSkyline (~torpedosk@wsip-70-168-198-102.br.br.cox.net) (Changing host)
[21:59:16] *** Joins: TorpedoSkyline (~torpedosk@user/torpedoskyline)
[22:12:35] *** Joins: MalkbabY_ (MalkbabY@user/malkbaby)
[22:15:04] <riceandbeans> What is the simplest way to say `unless foo.include?(bar)` where `bar = %w[ baz biff ]`
[22:28:47] *** Quits: xuochi (~xuochi@c-24-98-208-21.hsd1.ga.comcast.net) (Quit: leaving)
[22:30:46] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[22:30:59] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 256 seconds)
[22:33:43] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[22:37:25] *** Joins: goldfish (~goldfish@user/goldfish)
[22:38:41] <havenwood> riceandbeans: bar.none? { foo.include? _1 }
[22:42:14] *** Quits: Guest33 (~textual@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:44:05] <riceandbeans> I actually figured out a different way for my situation that was a little weird but it worked
[22:44:11] <riceandbeans> I'm validating it right now..
[22:44:19] <riceandbeans> But, so far in a quick test it seemed to work
[22:44:53] <riceandbeans> Basically, I flipped it. I added something than said bar.include(foo)
[22:45:24] <riceandbeans> So, if I get this test to exit 1, it will have worked, because I slipped in a broken file that should trigger it to exit badly where it exited cleanly before
[22:47:16] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-1000.res6.spectrum.com)
[22:51:11] <adam12> >> (%w[foo bar] & [baz bif]).none?
[22:51:13] <ruby[bot]> adam12: # =>  (https://carc.in/#/r/bg29)
[22:51:20] <adam12> >> (%w[foo bar] & %w[baz bif]).none?
[22:51:20] <ruby[bot]> adam12: # => true (https://carc.in/#/r/bg2a)
[22:51:36] <adam12> I wonder which method is more efficient.
[22:55:59] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[22:59:27] <riceandbeans> D'OH!
[22:59:42] <riceandbeans> I botched a lint when I needed to botch a syntax, two different checks lol
[22:59:50] <riceandbeans> This time testing the right test!
[23:13:34] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[23:14:17] *** Joins: lucf117 (~lucf117@user/lucf117)
[23:22:23] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[23:25:22] *** Quits: dvgorod (~dvgorod@94.19.245.86) (Ping timeout: 272 seconds)
[23:35:51] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[23:38:13] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 265 seconds)
[23:39:32] *** Quits: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a) (Remote host closed the connection)
[23:49:06] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[23:57:08] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-1000.res6.spectrum.com) (Quit: Konversation terminated!)
