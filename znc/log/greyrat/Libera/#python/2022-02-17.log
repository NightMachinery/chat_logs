[00:00:49] <boddax> tnks grym
[00:01:00] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:01:06] *** Quits: boddax (~boddax@host-87-7-135-196.retail.telecomitalia.it) (Read error: Connection reset by peer)
[00:01:29] *** Joins: evanextreme (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5)
[00:01:47] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:02:05] <whatsupdoc> Is there a remove element function in a PriorityQueue in python?
[00:02:19] *** Quits: ubert1 (~Thunderbi@p200300ecdf0994b46944f41320f0055f.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:03:22] <pgib> Guddu - I've done this before for a project. Ideally, if you are just wanting to print to some printer at another site, then you'd just use a VPN.
[00:04:26] <pgib> If you want to do soemthing like, automatically print reports to different customers' printers, then it becomes more complicated. We opted to writing a "print agent" they would run on their site.
[00:04:42] <Guddu> pgib, Being connected to the VPN 100% of the time is not guaranteed. So was loooking for something more seamless.
[00:05:19] *** Quits: PCatinean (~pcatinean@188.26.231.238) (Quit: Leaving)
[00:05:51] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:06:03] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[00:06:14] <pgib> I don't think you will get more seamless than that. Connectivity will be an issue regardless and you'll want to make sure queuing/spooling is resilient against networking failure
[00:06:18] <SnoopJ> Guddu, you'll need a way to talk to a print spooler. E.g. on Linux you might want `pycups` to talk to libcups. Might want to subprocess depending on what OS you have.
[00:06:33] <SnoopJ> And yes, a network connection to the remote site is going to be necessary at some point in the process...
[00:07:11] *** Joins: darksun (~darksun@user/darksun)
[00:07:56] <SnoopJ> If you're connected to that network, doing it from a spooler on the local machine is probably much simpler
[00:08:41] <pgib> Perhaps the remote printer is configured to print documents emailed to it? If so, you'd be able to leverage SMTP for redelivery attempts, getting around the firewall, etc.
[00:09:11] <Guddu> Thanks SnoopJ and pgib
[00:09:31] <Guddu> pgib, I will explore that print documents via email thing. Sounds very promising.
[00:10:17] <SnoopJ> It does require a printer that is capable of this and configuration of it. I've mostly used devices where the emailed document has to be "released" at the device's console.
[00:10:37] <SnoopJ> (you might want to consult the documentation for the remote printer(s))
[00:10:53] <Guddu> Thanks SnoopJ
[00:10:56] *** Joins: Vonter (~Vonter@user/vonter)
[00:11:15] *** Joins: ysiry (~ysiry@user/ysiry)
[00:12:04] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-2016-2641-923b-d276.res6.spectrum.com) (Quit: Client closed)
[00:12:23] <karlpinc> Worst case, you could write an imap client that then sends to a local print spooler and install that at remote sites....
[00:13:12] <karlpinc> (Although at that point it's not clear what the trip through smtp buys you.)
[00:14:40] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Read error: Connection reset by peer)
[00:15:48] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:18:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:18:39] *** Joins: finsternis (~X@23.226.237.192)
[00:20:42] *** Joins: dre (~dre@101.191.49.59)
[00:21:18] <dre> hola! I come with an architectural / typing problem: https://dpaste.org/oqib
[00:21:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:21:54] <dre> TLDR is I feel the want for static duck-typing, but I don't want to specify that separate type ???
[00:22:12] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[00:22:56] <dre> is it possible to nest the Protocol type in a class that uses it?
[00:22:59] <dre> :hmm:
[00:23:06] <exarkun> dre: Hi.  Have you used Hypothesis?
[00:24:00] *** Quits: rooiratel (~rooiratel@156-155-163-86.ip.internet.co.za) (Quit: Leaving)
[00:24:21] <dre> hm, no
[00:24:29] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[00:24:30] <exarkun> dre: I think hypothesis.strategies.builds(PreloadedData) will Just Work™
[00:24:48] *** Joins: matsaman (~matsaman@user/matsaman)
[00:25:44] *** Quits: blei (~blei@c-73-153-189-5.hsd1.co.comcast.net) (Quit: Client closed)
[00:25:54] <dre> not sure if im following.
[00:26:22] *** Joins: summersault (~summersau@179.221.251.36)
[00:26:59] <dre> I want to be able to specify some but not all data in the PreloadedData class, for tests ( ie: testing certain components that use 3-4 fields, etc)
[00:27:05] *** Quits: ttys000_ (~ttys000@user/ttys000) (Ping timeout: 256 seconds)
[00:27:37] <ham5urg_> Is it possible (without regex magic) to check which of two strings (yyyymmdd) is 'older'?
[00:27:51] *** Joins: cgrage (~cgrage@107.175.102.158)
[00:27:55] <dre> it feels like Mock() is the right thing but I don't WANT to do it? with a Mock I could set the 3-4 fields I want, the rest are mocked.
[00:28:01] <dre> ham5urg_, str1 > str2
[00:28:01] <grym> ham5urg_: sure, make 'em both datetime objects, correctly apply their timezones, and compare
[00:28:03] <SnoopJ> ham5urg_, could you parse them to datetime.date objects?
[00:28:12] *** Joins: emf (~emf@2620:10d:c090:400::5:dcea)
[00:28:34] <dre> grym, dates don't have timezones
[00:28:48] <grym> dre: they ought to :P
[00:29:04] <grym> maximize the pain!
[00:29:08] *** Joins: ttys000 (~ttys000@user/ttys000)
[00:29:09] <dre> :D
[00:29:24] *** Joins: redkrieg (~redkrieg@user/redkrieg)
[00:29:32] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Read error: Connection reset by peer)
[00:29:38] *** Joins: pyevery__ (~pyeveryth@23-30-184-117-static.hfc.comcastbusiness.net)
[00:30:28] <dre> ham5urg_, the yyyymmdd format is written perfectly order things "chronologically" which is why you sometimes see people do filenames that way, or along those lines atleast.
[00:30:34] <matsaman> ham5urg_: farther in the past? A simple greater-than/less-than comparison (as int) should suffice
[00:30:38] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:31:02] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[00:31:20] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 272 seconds)
[00:31:24] *** Quits: loofy (~loofy@user/loofy) (Ping timeout: 240 seconds)
[00:31:32] <matsaman> or even as strings, apparently, never thought to check
[00:31:34] <dre> not as int, just do strings. it will handle it for you
[00:31:38] *** Joins: netpipe (~netpipe@user/netpipe)
[00:31:40] <ham5urg_> dre, matsaman, I will try.
[00:31:42] <dre> a < b
[00:31:44] <SnoopJ> you could do `yr, mon, day = s[:4], s[4:6], s[6:8]` if you're sure about those first 8 chars being there and in that order. date.fromisoformat() unfortunately expects hyphens
[00:32:11] <dre> SnoopJ, yes, because that's isoformat :P
[00:32:12] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[00:32:16] <SnoopJ> dre, you aren't wrong
[00:32:31] <SnoopJ> (it's unfortunate because the datum in question is *not* in that format)
[00:32:53] <dre> you could just datetime.strptime(str,'%Y%m%d') as well                                          *(could be wrong on syntax)
[00:33:21] *** Joins: tmm88 (~tmm88@user/tmm88)
[00:33:30] *** Joins: loofy (~loofy@user/loofy)
[00:33:38] <ham5urg_> works, great
[00:33:49] <SnoopJ> yea, `datetime.strptime("20220216", "%Y%m%d").date()` does the trick
[00:34:13] <SnoopJ> I wonder why date doesn't have strptime 😕
[00:34:17] <matsaman> hrmm
[00:34:24] <Pi-sistance> shouldnt int(input(message)) give me a type error if i input a string?
[00:34:27] <matsaman> '100' < '45' # True?
[00:34:31] <matsaman> I think ints
[00:34:36] <dre> SnoopJ, grym, did you know you could have dt1 == dt2   BUT dt1.date() != dt2.date()         ???
[00:34:47] <matsaman> even though those are different lengths
[00:35:03] <SnoopJ> dre, of course
[00:35:04] <dre> matsaman using 20220101 as an int is a bad idea.
[00:35:06] <dre> leave it as a string
[00:35:08] *** Quits: cgrage (~cgrage@107.175.102.158) (Ping timeout: 272 seconds)
[00:35:14] *** Quits: DK3 (~DK3@user/DK3) (Ping timeout: 250 seconds)
[00:35:15] <matsaman> dre: why?
[00:35:23] <dre> SnoopJ, it's part of the much fun I have to deal with at work :P
[00:35:28] <SnoopJ> matsaman, because it's not an integer
[00:35:31] <dre> because some people don't get that.
[00:35:31] <Pi-sistance> when inputting a string int(input(message)) gives a value error instead of a type error?
[00:35:35] <matsaman> SnoopJ: of course it is
[00:35:39] <dre> matsaman, ^
[00:35:46] <Pi-sistance> surely it should be a type error?!?
[00:35:46] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[00:35:50] <matsaman> dre: people don't get it I can accept
[00:35:53] <dre> no, 20210101 is a poorly formatted date.
[00:35:59] *** Joins: rvalue (~rvalue@user/rvalue)
[00:36:05] <SnoopJ> matsaman, perhaps evaluating 20220228 + 1 will change your mind
[00:36:09] <matsaman> poorly formatted is where we started
[00:36:18] <dre> lol
[00:36:37] <matsaman> SnoopJ: which year do I evaluate that, though? =)
[00:36:46] <SnoopJ> that is in yyyymmdd format
[00:36:47] <dre> but I would expect '0001' > '2' for instance
[00:36:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:36:59] <dre> SnoopJ, 20220228 + 1 = 20220229. works on my machine
[00:37:04] <SnoopJ> dre, the date does not exist.
[00:37:16] <SnoopJ> and certainly there aren't 100 days in a month!
[00:37:17] <dre> infact it can go all the way to 20220240 without error.
[00:37:24] <matsaman> I feel like now I'm also leaning towards actually making them datetimes =P
[00:37:29] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[00:37:54] <matsaman> SnoopJ: sorry, joke about leap years
[00:37:55] <dre> this is like that microwave thing. "why can I only put in 59, but if I try to increase, it goes all the way to 100 ! where's 60 or 65???!! "
[00:38:05] <matsaman> heh
[00:38:17] <matsaman> I like microwaves with little egg timer turn knobs $
[00:38:27] <dre> cute
[00:38:29] <matsaman> haven't seen one in a while
[00:38:32] <SnoopJ> you can go into all kinds of detail about the lexocographic ordering etc., but it's simplest to say "that isn't an integer" because it...isn't.
[00:38:32] <dre> yeah neither
[00:38:37] <dre> I love tvs with turn knobs.
[00:38:48] <matsaman> SnoopJ: sure, but nor is it a string
[00:38:52] <matsaman> I think we're all on the same page
[00:38:56] <dre> it is simply
[00:38:56] <dre> data
[00:38:57] <matsaman> who asked the question again? =P
[00:38:59] <SnoopJ> the data is a string, representing a date
[00:39:10] <matsaman> the data is an integer, as a string, representing a date =P
[00:39:19] <dre> can we go back to riddling my question
[00:39:24] <matsaman> dre: which'n?
[00:39:38] <SnoopJ> we've certainly gotten off track in exactly the way I've come to expect
[00:39:52] <matsaman> I think we tied a bow around it
[00:40:08] <dre> matsaman, Q about duck typing and avoiding mocks in tests:  https://dpaste.org/AVTa
[00:40:17] <matsaman> ham5urg_, that's the name
[00:40:47] <dre> Pi-sistance, value error is at run time, type error is at "compile time"
[00:41:05] *** Joins: cgrage (~cgrage@107.175.102.155)
[00:41:16] <dre> it's not a type error because it COULD work, the types are fine. you are turning the input into an int.
[00:41:20] *** Joins: Vonter (~Vonter@user/vonter)
[00:41:38] <dre> but the actual value you give the input() function, (through user input) - is what causes the problem.
[00:41:41] <dre> thus ValueError
[00:42:44] * SnoopJ has never seen a TypeError at compile time
[00:43:12] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 252 seconds)
[00:43:14] <dre> now that you mention it, no. I just tried to do zip(int(input()))) to demonstrate and it didn't "compile" wrong.
[00:43:24] <SnoopJ> Pi-sistance, it isn't a type error because str is a valid type for int(), but the *value* is not valid.
[00:43:26] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[00:43:41] <dre> that's much better.
[00:43:47] <SnoopJ> int("42") is a valid invocation, int("the answer") is not
[00:44:05] *** Joins: ub (~Thunderbi@193.32.127.226)
[00:44:19] <dre> but both are of type string
[00:44:20] <Pi-sistance> ok I get it, thanks.
[00:44:37] <SnoopJ> dre, no need for scare quotes, it's truly a compilation in most implementations. It just doesn't do static type analysis.
[00:45:06] <dre> neat thanks
[00:45:11] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[00:45:24] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[00:45:24] *** ub is now known as ubert
[00:45:40] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[00:45:46] *** Joins: Guest1924 (~Guest19@ec2-3-133-99-150.us-east-2.compute.amazonaws.com)
[00:45:58] <SnoopJ> mypy's static analysis can work out that it's wrong, though: https://bpa.st/CATA
[00:46:22] <Guest1924> Any good resources on optimizing python - code/data loading etc?
[00:46:41] <dre> that's good; I'm getting too used to having type-checking while-u-wait!
[00:46:43] *** Joins: Klinda (~superleag@user/klinda)
[00:46:50] <SnoopJ> Guest1924, what kind of resources are you looking for? Tools, tutorials, etc.?
[00:46:58] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.4)
[00:46:58] <Guest1924> @snoop
[00:47:05] *** Joins: shodan45 (~quassel@107.161.22.155)
[00:47:16] <Guest1924> SnoopJ yeah all, trying to make my machine learning stuff faster - and code in general
[00:47:29] <SnoopJ> Guest1924, are you using numpy?
[00:47:46] <Guest1924> numpy, tensorflow, pytorch ye
[00:48:08] <Guest1924> big data for personal computer, 2Gb datasets
[00:48:25] *** Joins: Fiji (~Fiji@user/fiji)
[00:48:41] <SnoopJ> Do you understand the difference between basic/advanced indexing? In my experience it's the #1 reason numpy code ends up slower than it could be. https://numpy.org/doc/stable/reference/arrays.indexing.html
[00:48:52] <SnoopJ> (an advanced indexing operation will *always* produce a copy, and copies are slow)
[00:49:01] <Repiphany> Buy 128GB of ram
[00:49:31] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[00:49:36] <Guest1924> SnoopJ ill look at it thanks, any optimization tutorials/advice for python3 in general?
[00:49:44] <mefistofeles> SnoopJ: how is that disctintion made? advanced vs basic
[00:49:48] <Guest1924> that I could read
[00:50:49] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[00:51:20] <SnoopJ> Guest1924, nothing really comes to mind. Good general advice: optimization is best when guided by measurement. Using a good profiler (I like cProfile and Scalene) really helps quite a lot.
[00:51:48] <SnoopJ> oh hmm my indexing link is bad
[00:52:07] <SnoopJ> should be: https://numpy.org/devdocs/user/basics.indexing.html
[00:53:03] *** Joins: asdfsfdasdfw (~asdfsfdas@12.182.213.210)
[00:53:25] <SnoopJ> mefistofeles, the long answer is "read that ^" but the short answer is that non-tuple sequences (including ndarrays) or sequences that include bool indexes will trigger advanced indexing.
[00:53:44] <Guest1924> SnoopJ okay thanks. Just heard about some guy who is hired just to optimize scientist python code, so was wondering if there was some material I could go through in general to see if theres stuff I have missed
[00:54:05] <Repiphany> Oof scientist code
[00:54:12] *** Joins: parv (~quass@user/parv)
[00:54:26] <SnoopJ> mefistofeles, i.e. anything where the resulting index might not be something you can express using strides is going to end up making a copy because it can't just "window" over the data member
[00:54:33] <Guest1924> Repiphany ye
[00:55:02] <SnoopJ> (hmm, why don't I have a `playground` explainer on basic/advanced indexing? I should write one)
[00:56:58] <dre> I can't do much lispy change-data-like-code things can I.
[00:57:35] <Repiphany> I tried looking into strides recently and it's a minefield
[00:57:37] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[00:57:47] <Guest1924> SnoopJ do you have a website?
[00:57:47] <SnoopJ> Repiphany, how's that?
[00:57:53] <SnoopJ> Guest1924, yes, but there isn't very much on it.
[00:58:12] <Guest1924> SnoopJ python articles?
[00:58:21] <SnoopJ> nope
[00:58:29] <Guest1924> what is the playground explainer?
[00:58:32] <dre> is it possible to make a "Type" programetrically? like I have PreloadedDataclass, could I somehow make a dataclass like "[field: Optional for field in PreloadedDataClass]"
[00:59:01] *** Joins: somlis (~somlis@user/somlis)
[00:59:15] <dre> or I'd just have to copy paste from one to the other
[00:59:17] <SnoopJ> Guest1924, a personal respository of code samples: https://github.com/SnoopJeDi/playground/tree/master/python
[00:59:24] <Repiphany> Just hard to wrap your head around the memory layout and how to reshape arrays by specifying multidimensional byte jumps
[00:59:48] <Guest1924> SnoopJ cool! if you are going to write one on indexing let me know
[00:59:51] <SnoopJ> Repiphany, ah, yea. Being conceptually "simple" does not make pointer arithmetic any less painful :)
[01:00:13] <SnoopJ> Guest1924, I really can't recommend the numpy documentation section about it enough, it's quite thorough.
[01:00:25] <Guest1924> ye
[01:00:46] *** Joins: Auron (Auron956@user/auron)
[01:00:49] *** Joins: KombuchaKip (~kip@192.252.230.5)
[01:01:07] *** Joins: ub (~Thunderbi@86.107.21.10)
[01:01:15] <SnoopJ> Guest1924, oh, another very common numpy performance antipattern: if you ever find yourself writing `for elem in array: ...`, you are probably going *way* slower than you could be. Python loops and ndarrays don't mix very well
[01:01:48] <Guest1924> How would you do it instead?
[01:01:48] *** Quits: ubert (~Thunderbi@193.32.127.226) (Ping timeout: 240 seconds)
[01:01:49] *** ub is now known as ubert
[01:01:57] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:01:58] <Guest1924> somehow with vectors?
[01:02:29] <KirkMcDonald> Depends on the operation, but the whole point of numpy is that it provides a huge variety of ways to do array operations.
[01:02:30] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[01:02:34] <SnoopJ> usually you can use numpy's "broadcasting" functionality to get equivalent behavior (numpy does a loop, too, but a MUCH faster one)
[01:02:52] <Guest1924> ye
[01:02:55] <SnoopJ> https://numpy.org/devdocs/user/basics.broadcasting.html
[01:03:00] *** Joins: melty_cheese (~melty_che@75-174-20-17.boid.qwest.net)
[01:03:17] *** Quits: unautre (~unautre@omsk.bandar-log.dev) (Ping timeout: 240 seconds)
[01:04:04] <Guest1924> matrix multiplication i have done with broadcasting but some feature engineering i havent, it must be a bottleneck
[01:04:04] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:04:41] *** Joins: unautre (~unautre@omsk.bandar-log.dev)
[01:05:09] <SnoopJ> well, measure it
[01:05:17] *** Quits: nolan_ (~nolan_@user/nolan/x-2434303) (Ping timeout: 256 seconds)
[01:05:25] <SnoopJ> it can be surprising how often "X _must_ be a bottleneck" turns out to be wrong :)
[01:05:30] *** Quits: ejjfunky (~ejjfunky2@125.164.19.191) (Read error: Connection reset by peer)
[01:06:05] *** Quits: alukach (~alukach@173.183.15.218) (Remote host closed the connection)
[01:06:07] <Guest1924> yeah, it is a long list multiple times done with for elem in list... I will convert the list into a numpy array and try without the for loop
[01:06:21] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[01:06:32] <SnoopJ> well, I meant specifically `for elem in ndarray: ...`
[01:06:34] *** Joins: Zen (~Zen@2001:818:e940:7d00:9d11:d08:1e85:74ca)
[01:06:40] *** Joins: ejjfunky (~ejjfunky2@125.164.19.33)
[01:06:46] <SnoopJ> `for elem in list:` will frequently outperform that, because there isn't a lot of work to do going between array and list
[01:07:03] <Guest1924> if I can just broadcast it i dont need for loop tho
[01:07:27] <SnoopJ> right, that's where savings can be massive, because Python loops are pretty slow in comparison
[01:07:32] <Guest1924> ye
[01:07:43] <Guest1924> thanks
[01:08:29] *** Quits: magla (~gelignite@55d40b59.access.ecotel.net) (Quit: Stay safe!)
[01:09:03] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 252 seconds)
[01:09:53] *** Quits: ZenMachine (~Zen@2001:818:e940:7d00:9d11:d08:1e85:74ca) (Ping timeout: 250 seconds)
[01:11:52] *** Joins: mtwx (~mtwx@82.42.67.35)
[01:12:18] *** Quits: mtwx (~mtwx@82.42.67.35) (Client Quit)
[01:14:19] *** Joins: masoudd_ (~masoudd@user/masoudd)
[01:15:03] *** evanextreme is now known as evanextreme[away
[01:15:20] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f08f:f09d:4f68:e2f5) (Quit: Client closed)
[01:15:37] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[01:17:16] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[01:17:24] *** Quits: davit (~davit@50.35.184.227) (Ping timeout: 240 seconds)
[01:17:24] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[01:17:26] *** Joins: audio (~audio@user/audio)
[01:18:35] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:18:45] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Remote host closed the connection)
[01:18:57] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[01:18:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:18:57] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[01:19:21] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[01:19:31] *** Quits: ubert (~Thunderbi@86.107.21.10) (Quit: ubert)
[01:19:49] <Guest1924> @Snoopj
[01:19:57] *** Joins: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[01:20:00] <Guest1924> do you have a playground example of professional syntax?
[01:20:34] <SnoopJ> what is professional syntax?
[01:20:41] <Guest1924> I see some people use """  """ comments saying what is returned in functions, and so on -in others not, wondering if its common practise
[01:21:10] <SnoopJ> those don't produce comments, they're proper strings
[01:21:20] <Repiphany> Guest1924: https://www.python.org/dev/peps/pep-0257/
[01:21:25] <SnoopJ> But the string will often be ignored so functionally they're the same. I only use them for ^
[01:21:38] <SnoopJ> (or for multi-line strings)
[01:21:39] *** Joins: jokoon (~eio@2a01:e0a:542:e160:3d9c:f044:e5e7:d254)
[01:21:58] <jokoon> can somebody explain to me why groupby requires the data to be sorted?
[01:22:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:22:12] <grym> it would be harder to write if it didn't!
[01:22:26] <SnoopJ> jokoon, it doesn't require that, do you mean "requires...in order to get the result I want?"
[01:22:29] <jokoon> https://bpa.st/AYCA I wrote this and it works well
[01:22:30] <Guest1924> ah okay thanks, i was misinformed (actually I was told its for doing multiple line comments lol"
[01:22:58] <SnoopJ> Guest1924, yea this is not uncommon, but it's sort of an abuse of the syntax. I try not to do it unless I'm writing a docstring (see above link)
[01:23:01] <jokoon> grym, as you see it's not hard to write without being sorted
[01:23:12] <Guest1924> @snoopJ okay thanks
[01:23:21] <jokoon> SnoopJ, because without sorting it seems it doesn't work
[01:23:23] *** Joins: zmotaj (~zmotaj@86.61.81.185)
[01:23:23] *** Quits: zmotaj (~zmotaj@86.61.81.185) (Changing host)
[01:23:23] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[01:23:47] <grym> well, it works
[01:23:49] <jokoon> the doc says 'it generally requires'
[01:23:52] <SnoopJ> jokoon, the function itself can work just fine without sorting first, but the result may not be what you expected
[01:23:52] <grym> it just doesn't do what you want :P
[01:24:04] <jokoon> so what does it do then?
[01:24:17] <SnoopJ> jokoon, the reason is because it's walking the iterable and when the predicate changes value, it says "ah! this must be a new group" and yields the group it's been building
[01:24:24] <grym> jokoon: "It generates a break or new group every time the value of the key function changes"
[01:24:25] <Repiphany> # [k for k, g in groupby('AAAABBBCCDAABBB')] --> A B C D A B
[01:24:28] <jokoon> not what I expected ? could you expand?
[01:24:35] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:24:44] <jokoon> oh
[01:24:52] <jokoon> that's not very useful
[01:24:53] *** Joins: Elodin (~elodin@user/elodin)
[01:24:59] <SnoopJ> for *your* task
[01:24:59] <jokoon> why is it doing that?
[01:25:00] *** Quits: ovelny (~ovelny@user/ovelny) (Ping timeout: 252 seconds)
[01:25:08] <Repiphany> Because that's what it was designed to do
[01:25:38] <jokoon> mmmh okay
[01:26:07] <pgib> its grouping. Groups don't have to be unique
[01:26:16] <jokoon> does that mean using sort() and groupby is faster than the paste I linked?
[01:26:17] *** Quits: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft) (Quit: Bye)
[01:26:31] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[01:26:33] <jokoon> how do you call uniqute groups then?
[01:26:40] *** Joins: davit (~davit@50.35.184.227)
[01:26:56] <SnoopJ> jokoon, imagine the iterable is infinitely long, but you want to group it by the predicate. Sorting can't happen because it's an infinite amount of data, but groupby() is still useful for collapsing contiguous data
[01:26:58] *** Joins: ovelny (~ovelny@user/ovelny)
[01:27:29] *** Joins: Betal (~Betal@user/betal)
[01:28:48] *** Quits: asdfsfdasdfw (~asdfsfdas@12.182.213.210) (Quit: Going offline, see ya! (www.adiirc.com))
[01:29:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[01:29:22] *** Quits: s1b1 (~s1b1@user/s1b1) (Read error: Connection reset by peer)
[01:29:29] *** Joins: slav0nic (slav0nic@python.su)
[01:29:34] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:32:19] *** Quits: melty_cheese (~melty_che@75-174-20-17.boid.qwest.net) ()
[01:32:52] *** Quits: achilleas (~ach@user/achilleas) (Quit: :wq)
[01:34:00] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[01:34:14] *** Joins: achilleas (ach@user/achilleas)
[01:34:17] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:34:32] <Batzy> hi all, i have a cython module with defines a function wtih cpdef. In another folder i can import my cython module but if i print the functions in the module, i get an empty list
[01:36:13] <c4017w__> How can I assign multiple keys in a dict comprehension? `{"a": a, "b": b for a,b in something}`
[01:36:23] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[01:36:43] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[01:36:45] <anddam> pyside2 question: how do I access platform classes like https://github.com/qt/qtbase/blob/5.12/src/plugins/platforms/cocoa/qcocoawindow.mm#L490 ?
[01:37:41] <pgib> c4017w__ Why would you want to do that? The last element will "win" and provide the values for a and b
[01:37:51] *** Quits: admin123 (~harrymore@pool-71-125-21-97.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[01:37:56] *** Quits: Guddu (~Guddu@117.247.156.185) (Read error: Connection reset by peer)
[01:38:00] <anddam> I am currently installing pyobjc and doing some objc_object() dance with ctypes.c_void_p but this adds pyobjc to requirements, and it's only for a single Cocoa access
[01:38:03] <pgib> unless you are wanting to nest dictionaries within a dictionary, list, generator, etc?
[01:38:12] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[01:38:18] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[01:39:10] <matsaman> c4017w__: k:k for k,k?
[01:39:20] <matsaman> does seem odd
[01:39:38] *** Quits: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[01:40:01] <c4017w__> maybe I shouldn't be using a for loop. The `something` will only iterate one time actually
[01:40:34] <matsaman> should be? mmm
[01:40:50] <matsaman> IRC as rubber duck
[01:40:52] <matsaman> =)
[01:40:56] <pgib> Or put another way c4017w__, say something looks like [(1,2), (3,4)] what do you want the result to be? from your code, it looks like you would have intended {'a':3, 'b':4}
[01:41:12] <c4017w__> I just need to destructure it and assign it's elements to a specific key, like `d["a"] = something[0]; d["b"] = something[1]; ...`
[01:42:29] <pgib> oh, and alphabetic keys like that?
[01:42:43] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:8c1c:a482:bdcb:d80)
[01:43:40] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[01:43:41] <pgib> Like this? something = [1,2,4,8]; {k:v for k,v in zip(string.ascii_lowercase, something))
[01:43:53] <c4017w__> if `something = [(1,2), (3,4)]`, output should be `{"some_key": (1,2), "another_key": (3,4)}`.
[01:43:59] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:44:20] <c4017w__> no, alphabetic keys was just an example
[01:44:36] <Repiphany> How are you deciding what "some_key" and "another_key" are and why is that more useful than just indexing the original something
[01:44:37] <pgib> Ok. well substitute string.ascii_lower case with the sequence of keys you want
[01:44:59] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:45:01] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[01:45:05] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[01:45:11] <c4017w__> Yeah I think I'll just zip(key_sequence, something)
[01:45:20] <c4017w__> I just wanted a one liner
[01:45:40] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:46:11] <pgib> Don't need the comprehension either:
[01:46:11] <Repiphany> btw you can directly call `dict(zip(a, b))` rather than `{k:v for k, v in zip(a, b)}`
[01:46:13] <pgib> keys=['some', 'that', 'another', 'their']; something = [1,2,4,8]; dict(zip(keys, something))
[01:46:14] <pgib> {'some': 1, 'that': 2, 'another': 4, 'their': 8}
[01:46:26] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[01:46:30] <c4017w__> oh nice
[01:46:50] *** Quits: pyevery__ (~pyeveryth@23-30-184-117-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[01:50:10] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:51:16] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[01:52:40] *** Quits: mharig (~mharig@190.104.21.253) (Quit: WeeChat 3.4)
[01:53:18] *** Joins: Masterphi (~Masterphi@user/masterphi)
[01:53:52] *** Quits: ddoering (~Devinn@searspoint.nvidia.com) (Remote host closed the connection)
[01:54:14] *** Joins: ddoering (~Devinn@searspoint.nvidia.com)
[01:55:25] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[01:57:41] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[01:59:15] *** Joins: Barones (~Barones@user/Barones)
[01:59:33] <Batzy> can someone help me import a function i wrote in cython into regular python? it only works if i run python from the same directory my .pyx file is in
[01:59:48] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[01:59:52] <Batzy> and yes i put an __init__.py in the folder with my cython code
[01:59:56] *** Quits: jokoon (~eio@2a01:e0a:542:e160:3d9c:f044:e5e7:d254) (Quit: Leaving)
[02:00:01] *** Joins: vancz (~vancz@user/vancz)
[02:00:11] <Batzy> if i cd to the parent and try to import modulename it works, but if i try to use any function it's not found
[02:00:31] <SnoopJ> Batzy, sounds like you're missing the "run the Cython compiler" step.
[02:00:41] <Batzy> i did the python setup.py thing
[02:01:07] *** Joins: brookesy66 (~will@203.220.123.174)
[02:01:15] <Batzy> SnoopJ: is that what u mean
[02:01:36] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Read error: Connection reset by peer)
[02:01:48] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[02:01:52] <Batzy> i have a .so file and everything
[02:02:03] <SnoopJ> Batzy, I mean that a .pyx file is something that is compiled to produce a library file (on Linux generally a .so) that describes a module with the compiled functions/etc.
[02:02:12] <SnoopJ> And then you import from that .so
[02:02:13] *** Joins: Atque (~Atque@user/atque)
[02:02:16] <Batzy> oo
[02:02:19] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[02:02:20] <Batzy> so that went to a builds folder
[02:02:21] <Batzy> i see
[02:02:26] *** Quits: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be) (Quit: harpia)
[02:02:38] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[02:02:46] <Batzy> what's the directory structure for that?
[02:02:53] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:03:03] <Batzy> i have a temp.linux and a lib.linux folder, i guess i just copy the lib.linux
[02:03:11] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:03:11] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[02:03:39] *** Joins: funhouse (~funhouse@user/funhouse)
[02:06:19] *** Joins: pepper (~pepper@user/pepper)
[02:06:41] <Batzy> I think that works
[02:06:42] <Batzy> thanks
[02:07:49] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Remote host closed the connection)
[02:09:07] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:09:07] *** Joins: Elodin (~elodin@user/elodin)
[02:09:08] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:09:12] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[02:09:30] *** Quits: cgrage (~cgrage@107.175.102.155) (Ping timeout: 272 seconds)
[02:10:18] *** Joins: vorap (~vorap@user/vorap)
[02:11:16] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:11:35] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:11:55] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[02:12:08] *** Joins: s1b1 (~s1b1@user/s1b1)
[02:12:21] *** Joins: vicfred (~vicfred@user/vicfred)
[02:12:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[02:14:05] *** Quits: lxdr (~lxdr@user/lxdr) (Remote host closed the connection)
[02:14:11] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:14:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:02] *** Joins: Betal (~Betal@user/betal)
[02:16:04] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:36] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[02:16:47] *** Joins: XV8 (~XV8@2601:5cb:c001:50:bc8e:6b45:56b4:8945)
[02:18:17] *** Quits: emf (~emf@2620:10d:c090:400::5:dcea) (Ping timeout: 240 seconds)
[02:19:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:20:12] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[02:20:46] <Pi-sistance> so i used try except ona function that tired to change a string to an int, on the except i turned back to an string, guesss what the output is?
[02:20:53] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[02:20:59] <Pi-sistance> tried*
[02:21:43] <pgib> a string? hard to know without seeing the code
[02:22:39] *** Quits: Wh0 (~V@103.250.139.82) (Quit: Leaving)
[02:22:45] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[02:22:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[02:23:09] <Pi-sistance> https://bpa.st/VUHA
[02:23:27] <Pi-sistance> so I input a string when the input called for it
[02:23:43] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:25:08] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[02:25:51] <pgib> I'm going to bet None?
[02:26:35] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[02:26:38] <pgib> the userInput assignment in the try won't get called unless you provide an integer
[02:26:57] <Pi-sistance> yep
[02:27:52] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[02:27:54] <pgib> You'll want to split the input and the type() construction (a few ways you can organize it)
[02:28:03] *** Quits: five6433334 (~five6@8.40.26.72) (Quit: The Lounge - https://thelounge.chat)
[02:28:03] <SnoopJ> type(input(...)) looks really weird
[02:28:41] <SnoopJ> (it will always be `str`)
[02:28:46] <pgib> Looks like it is intended to optimistically convert the return to type `type`, which defaults to integer. Upon failure, to keep it as a string
[02:28:48] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4ce0:43ca:b786:3e76)
[02:29:05] <SnoopJ> oh, nevermind, `type` is an argument of the function
[02:30:27] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[02:31:07] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f08f:f09d:4f68:e2f5)
[02:31:20] <SnoopJ> I would probably express the loop as `while True:` and `break` when the conversion succeeds (i.e. after line 5)
[02:31:29] *** Quits: greatgatsby_ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Read error: Connection reset by peer)
[02:32:11] <Pi-sistance> ok ty, tbh im confusing myself, im incorrectly recalling what can actually DO what atm
[02:32:12] <pgib> I think the loop is not necessary
[02:32:14] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:c5ff:8a02:34b1:f9b4)
[02:32:26] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[02:32:42] <SnoopJ> pgib, it's necessary if you want to give the user an arbitrary number of attempts to input something valid, but the presence of the exception handler does seem weird if that were the intent.
[02:33:11] <pgib> right, it seems like it should always succeed. Even if you enter nothing, the result is "" which won't pass the loop
[02:33:16] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:718b:109c:a9c0:c272)
[02:33:18] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:33:45] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[02:33:49] <pgib> also the str() is irrelevant
[02:33:51] <QuaternionsRock> Are dict.keys and dict.values guaranteed to be insertion ordered?
[02:34:05] <Pi-sistance> i cant seem to use a default argument if i inout the second argument after it callingafunction(,3) doesnt work
[02:34:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:34:14] <SnoopJ> pgib, it's not irrelevant but looks weird: if you enter the handler, it will be `str(None)` which doesn't seem like what the author intended.
[02:34:25] <SnoopJ> QuaternionsRock, from 3.7 forward, yes
[02:34:31] <SnoopJ> (before that no)
[02:34:46] <pgib> correct. I'm assuming that it is intended to be str(resultFromInputCall)
[02:34:51] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:3fe5:a985:3e72:9932) (Ping timeout: 252 seconds)
[02:35:07] *** Joins: andreasbuhr (~quassel@p549dbd84.dip0.t-ipconnect.de)
[02:35:23] *** Joins: purple_cthulhu (~rax@2.186.4.16)
[02:35:49] <pgib> Assuming they want "cast it if you can, otherwise a string", then this seems sufficient other than checking for other exceptions from `input` (which they didn't have in the first place) https://bpa.st/GGTA
[02:36:39] <SnoopJ> pgib, the intent of that is definitely more clear, although you do still have to worry about KeyboardInterrupt in the input() call there
[02:36:56] <SnoopJ> but there's probably no reason to handle that, just let it propagate to the caller
[02:37:01] *** Quits: grimvar (~grimvar@i5C75F5D3.versanet.de) (Ping timeout: 240 seconds)
[02:37:07] <pgib> Yup. But the prior code didn't either. It only handled ValueError explicitly
[02:37:12] * SnoopJ nods
[02:38:40] <QuaternionsRock> Also, I have a question about the internals of CPython: as far as I'm aware, most compilers implement hash sets as a special case of hash maps. But in Python, the insertion order of sets isn't guaranteed... why is this the case?
[02:39:03] *** Joins: grimvar (~grimvar@i5C75F5D3.versanet.de)
[02:39:14] <QuaternionsRock> I remember reading about key-sharing dictionaries and all that but I guess I'm asking why that wasn't also applied to sets?
[02:39:15] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[02:39:36] <SnoopJ> QuaternionsRock, sets are implemented separately, the optimization that coincidentally made dicts insertion-ordered doesn't apply to them
[02:40:17] <QuaternionsRock> Could sets not theoretically benefit from the same optimization though?
[02:40:40] <SnoopJ> I can't think of any way they would, since the optimization is about details that don't exist in the set implementation..
[02:40:54] *** Quits: adeliktas (~adeliktas@i59F52959.versanet.de) (Ping timeout: 252 seconds)
[02:41:00] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[02:41:05] <SnoopJ> Raymond Hettinger gave a great talk about the optimization: https://www.youtube.com/watch?v=p33CVV29OG8
[02:41:19] *** Joins: cgrage (~cgrage@107.175.102.156)
[02:41:56] *** Joins: adeliktas (~adeliktas@i59F52854.versanet.de)
[02:42:18] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:42:30] *** Quits: voidsync (~void@user/voidsync) ()
[02:42:46] <QuaternionsRock> I thought the idea of key sharing was to essentially store an vector of values for each key in a group of dictionary instances to avoid heap allocation of each individual dict
[02:43:14] <QuaternionsRock> I guess I'll have to watch that video then
[02:43:48] *** Joins: jtj90 (~jtj90@2607:fb90:b28f:3646:7ce2:24dd:b07:84ed)
[02:43:59] *** Joins: cliluw (~cliluw@47.147.77.43)
[02:44:03] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[02:44:09] *** Joins: Pandadub (~Barones@user/Barones)
[02:44:10] <Pi-sistance> if i set z=int so its an abitrary int, it just says its type is.... type, when I type(z)
[02:44:41] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[02:44:56] <Pi-sistance> def addfun(a=3,b=45)
[02:44:59] <Pi-sistance> oops
[02:45:28] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[02:45:35] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: taking a break.  remember kids, sekai is better than kotonoha)
[02:45:50] <SnoopJ> QuaternionsRock, it's not really about key-sharing, but if you would prefer to just read the implementation changes, that's this commit: https://github.com/python/cpython/commit/742da040db28e1284615e88874d5c952da80344e
[02:46:24] *** Quits: cgrage (~cgrage@107.175.102.156) (Ping timeout: 252 seconds)
[02:46:58] <SnoopJ> Pi-sistance, `int` is a type, so yes, its type is `type`
[02:46:59] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[02:47:22] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:48:06] <Pi-sistance> shouldnt it output int
[02:48:32] <SnoopJ> Pi-sistance, the type named `int` is an object, and that object's type is `type` because it's a type.
[02:48:50] <Pi-sistance> ok ty..
[02:48:55] <SnoopJ> (this is true of most types because they're...um, types 😇)
[02:50:00] <bjs> Pi-sistance: the key here is that `z = int` doesn't set z to an "arbitrary int",  I'm not sure what you were trying to do with that
[02:50:53] <Pi-sistance> so it becomes the "class" int or, ugh i dont know any of these terms#
[02:51:00] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 240 seconds)
[02:51:01] <bjs> Pi-sistance: yes,  int is a class
[02:51:13] <Pi-sistance> cant believe i got that right pmsl
[02:51:29] *** Quits: jtj90 (~jtj90@2607:fb90:b28f:3646:7ce2:24dd:b07:84ed) (Quit: Client closed)
[02:51:45] <SnoopJ> "class" and "type" are effectively synonyms in Python
[02:51:54] *** Quits: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e) (Ping timeout: 252 seconds)
[02:52:00] *** Joins: jtj90 (~jtj90@2607:fb90:b28f:3646:7ce2:24dd:b07:84ed)
[02:52:37] *** Joins: five64333349 (~five6@8.40.26.55)
[02:52:55] *** Joins: gossie (~gossie@2001:1c02:11e:c700:c824:f8ed:a210:e662)
[02:53:12] <Pi-sistance> oh ok, type sounded odd used that way, ty.
[02:53:53] <SnoopJ> it's kind of an unfortunate terminology and I don't know why it is that way
[02:53:59] <bjs> Pi-sistance: well in Python everything is an instance of some class, including the classes themselves.  You can't call that class "class", so they called it "type".
[02:54:09] <bjs> That's basically why there's two names
[02:54:23] <SnoopJ> bjs, why doesn't the same logic apply to `type(type) is type` ?
[02:54:24] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:54:37] *** Quits: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:718b:109c:a9c0:c272) (Quit: Client closed)
[02:54:47] <bjs> SnoopJ: type is an instance of itself,  just don't think about it
[02:54:56] * SnoopJ rarely thinks about it
[02:55:51] <bjs> SnoopJ: well if you do want to think about it, the logic applies perfectly fine. all classes are instances of type,  type is a class, so type must be an instance of type. and indeed it is: `print(isinstance(type, type))`
[02:56:08] *** Quits: JC5 (~X@user/jc5) (Quit: Bye)
[02:56:10] <SnoopJ> yea but then why the need for two names :)
[02:56:25] <bjs> SnoopJ: because you can't use the name `class` because it's a keyword :D
[02:56:31] <ssbr> because it wasn't always so, old style classes had a distinction between class and type
[02:56:40] <Pi-sistance> I can get the exact type of int by doing int.__name__     I win! something.
[02:56:41] <bjs> ssbr: ssh, Python 2 is dead
[02:56:41] <ssbr> today, the distinction is silly.
[02:56:54] <SnoopJ> ahh, right, classobj
[02:56:58] <bjs> Pi-sistance: well int *is* the type
[02:57:00] <ssbr> bjs: well, when one asks "why is something this way?" the answer sometimes involves dead history
[02:57:09] <ssbr> Python 1/2 was why things are the way they are right now
[02:57:12] <bjs> Pi-sistance: the __name__ is just that, the name of it.
[02:57:14] <SnoopJ> yea I've always assumed it was a historical artifact but never thought about old-style classes
[02:57:39] *** Quits: njhanley (~njhanley@static.15.210.217.95.clients.your-server.de) (Quit: ZNC - https://znc.in)
[02:57:44] *** Joins: Z-cat (~Z-cat@user/z-cat)
[02:58:19] <ssbr> Checking my interpreter, on an old-style class, type(Class()) was `instance`, and type(Class) was `classobj`.
[02:58:28] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:58:47] <ssbr> (and Class().__class__ was Class, and Class.__class__ was an attribute error.)
[02:59:24] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d5c1:86c3:2258:8392) (Ping timeout: 240 seconds)
[02:59:25] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:59:57] *** Quits: andreasbuhr (~quassel@p549dbd84.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:01:00] *** Joins: dme86 (~dan@user/dan86)
[03:01:36] *** Joins: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net)
[03:02:06] *** Quits: upsala (~zcb@185.209.196.166) (Quit: WeeChat 3.4)
[03:02:43] *** Joins: cul8r (~cul8r@76.113.95.199)
[03:03:20] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 272 seconds)
[03:05:02] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 240 seconds)
[03:05:21] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[03:05:28] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:05:32] *** Quits: pwillard (sid136981@id-136981.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[03:05:32] *** Quits: mustache_ride (sid451683@user/mustache-ride/x-6533344) (Ping timeout: 240 seconds)
[03:05:38] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 260 seconds)
[03:05:38] *** Quits: jposer (sid132110@id-132110.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[03:05:38] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Ping timeout: 260 seconds)
[03:05:41] *** Quits: kaibi_ (sid16580@id-16580.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[03:05:44] *** Quits: ballingt (sid190590@id-190590.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:05:44] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Read error: Connection reset by peer)
[03:05:45] *** Quits: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:05:45] *** Quits: cside (sid479702@id-479702.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:05:46] *** Quits: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:46] *** Quits: dba (uid533975@id-533975.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[03:05:50] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Read error: Connection reset by peer)
[03:05:50] *** Quits: rburton (rburton@user/rburton) (Read error: Connection reset by peer)
[03:05:50] *** Quits: agronholm (sid403424@id-403424.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:05:53] *** Joins: ballingt (sid190590@id-190590.helmsley.irccloud.com)
[03:05:54] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[03:05:55] *** Joins: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com)
[03:05:56] *** Joins: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com)
[03:05:56] *** Joins: cside (sid479702@id-479702.uxbridge.irccloud.com)
[03:05:57] *** Quits: polo (uid538075@user/joeroot) (Ping timeout: 240 seconds)
[03:05:58] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:05:58] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:05:59] *** Quits: st3fan (sid43079@id-43079.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:05:59] *** Quits: Knyght (sid365271@id-365271.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:05:59] *** Quits: mobius (sid478273@id-478273.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:05:59] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Read error: Connection reset by peer)
[03:05:59] *** Quits: peac (sid344662@id-344662.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: MrNaz (sid133418@id-133418.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: sunarch (uid526836@user/sunarch) (Read error: Connection reset by peer)
[03:06:00] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Read error: Connection reset by peer)
[03:06:00] *** Quits: angular_mike_ (sid45533@ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: jesse-s (sid98646@id-98646.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: Darkfoe (sid402081@id-402081.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:06:01] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:06:01] *** Quits: nem (sid113421@user/nem) (Write error: Connection reset by peer)
[03:06:01] *** Quits: rpittau (sid346891@id-346891.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:06:01] *** Quits: Olfodr (sid535265@user/Olfodr) (Write error: Connection reset by peer)
[03:06:01] *** Quits: neoweb (sid343200@id-343200.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:06:03] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:06:04] *** Joins: agronholm (sid403424@id-403424.helmsley.irccloud.com)
[03:06:04] *** Joins: rburton (rburton@user/rburton)
[03:06:09] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[03:06:13] *** Joins: kaibi_ (sid16580@id-16580.hampstead.irccloud.com)
[03:06:22] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:06:23] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[03:06:23] *** Joins: MrNaz (sid133418@id-133418.uxbridge.irccloud.com)
[03:06:24] *** Joins: dba (sid533975@id-533975.hampstead.irccloud.com)
[03:06:25] *** Joins: angular_mike_ (sid45533@id-45533.ilkley.irccloud.com)
[03:06:25] *** Joins: mustache_ride (sid451683@id-451683.ilkley.irccloud.com)
[03:06:27] *** Quits: mustache_ride (sid451683@id-451683.ilkley.irccloud.com) (Changing host)
[03:06:27] *** Joins: mustache_ride (sid451683@user/mustache-ride/x-6533344)
[03:06:27] *** Joins: Olfodr (sid535265@id-535265.lymington.irccloud.com)
[03:06:29] *** Quits: Olfodr (sid535265@id-535265.lymington.irccloud.com) (Changing host)
[03:06:29] *** Joins: Olfodr (sid535265@user/Olfodr)
[03:06:31] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[03:06:32] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[03:06:34] *** Joins: sunarch (sid526836@user/sunarch)
[03:06:36] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[03:06:36] *** Joins: peac (sid344662@id-344662.hampstead.irccloud.com)
[03:06:44] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[03:06:45] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[03:06:51] *** Joins: mobius (sid478273@2a03:5180:f:5::7:4c41)
[03:06:52] *** Joins: nem (sid113421@user/nem)
[03:06:52] *** Joins: jesse-s (sid98646@2a03:5180:f:4::1:8156)
[03:06:53] *** Joins: Darkfoe (sid402081@id-402081.helmsley.irccloud.com)
[03:06:53] *** Joins: st3fan (sid43079@2a03:5180:f:2::a847)
[03:06:54] *** Joins: neoweb (sid343200@2a03:5180:f:2::5:3ca0)
[03:06:55] *** Joins: chromis (sid150893@2a03:5180:f::2:4d6d)
[03:06:55] *** Joins: jposer (sid132110@2a03:5180:f:5::2:40e)
[03:06:57] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[03:07:00] *** Joins: sa (sid1055@2a03:5180:f::41f)
[03:07:00] *** Joins: Knyght (sid365271@2a03:5180:f:1::5:92d7)
[03:07:06] *** Joins: pwillard (sid136981@2a03:5180:f:4::2:1715)
[03:07:08] *** Joins: rpittau (sid346891@id-346891.tinside.irccloud.com)
[03:07:10] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[03:07:11] *** Joins: Sario (sid356235@fosshost/cdo/Sario)
[03:07:12] *** Joins: r0bby (r0bby@user/r0bby)
[03:07:25] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[03:07:59] *** Joins: polo (sid538075@id-538075.tinside.irccloud.com)
[03:08:19] *** polo is now known as Guest4191
[03:08:22] *** Joins: JC5 (~X@user/jc5)
[03:08:28] *** Quits: n-st (~n-st@user/n-st) (Quit: ␄)
[03:08:43] *** Joins: n-st (~n-st@user/n-st)
[03:09:32] *** Joins: ali1234 (~al@user/ali1234)
[03:09:56] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:12:57] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[03:13:51] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[03:13:54] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[03:14:15] *** Joins: crashrep (~crashrep@user/crashrep)
[03:16:48] *** Quits: XV8 (~XV8@2601:5cb:c001:50:bc8e:6b45:56b4:8945) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:17:48] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 240 seconds)
[03:17:55] *** Quits: Zen (~Zen@2001:818:e940:7d00:9d11:d08:1e85:74ca) (Quit: Leaving)
[03:18:07] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:18:18] *** Quits: redkrieg (~redkrieg@user/redkrieg) (Ping timeout: 252 seconds)
[03:18:43] *** Quits: shodan45 (~quassel@107.161.22.155) (Ping timeout: 256 seconds)
[03:19:01] *** Quits: Guest1924 (~Guest19@ec2-3-133-99-150.us-east-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[03:19:55] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:19:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:22:39] *** Quits: purple_cthulhu (~rax@2.186.4.16) (Quit: Leaving.)
[03:23:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:23:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:23:48] <whatsupdoc> Why doesn't PriorityQueue or heapq have a delete an arbitrary value from the priority queue in O(logn) time?
[03:23:53] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:24:14] *** Joins: MrFantastik (~f@2607:f598:bbda:220:3e7f:b84e:3ed2:c5bb)
[03:24:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Read error: Connection reset by peer)
[03:25:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:26:05] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[03:26:12] *** Joins: beeze (~beeze@cpe-174-109-135-39.nc.res.rr.com)
[03:26:51] <Pi-sistance> why does list() only work on a long integer if its wrapped round user input?
[03:27:06] *** Joins: njhanley (~njhanley@static.15.210.217.95.clients.your-server.de)
[03:27:26] <SnoopJ> Pi-sistance, list() shouldn't work on any integer because the input to list() is an iterable object. Can you clarify, perhaps show us your program?
[03:27:32] <SnoopJ> (and the complete error report, if there is one)
[03:27:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:28:22] <Pi-sistance> i did it without even bothering to ame a function too
[03:28:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:28:55] <Pi-sistance> just jusing bzblahblah=list(input())   and print(bz)blahblah
[03:29:22] <Pi-sistance> oh.. the number inout is considered a string..
[03:29:27] <SnoopJ> again, input() returns a string, *always*
[03:29:46] <Pi-sistance> damnit
[03:29:48] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:30:37] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:31:42] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:32:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:32:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:32:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:32:48] *** Quits: martums5 (~martums@user/martums) (Read error: Connection reset by peer)
[03:33:08] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:33:22] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:33:44] *** Joins: martums5 (~martums@user/martums)
[03:35:46] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[03:35:53] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[03:35:54] <parv> SnoopJ, I liked Raymond H's presentation for he repeated the questions without a miss, unlike many other people that I saw/heard at other cons
[03:36:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[03:36:18] <SnoopJ> It's a good habit, yea
[03:36:36] *** Quits: envex (~rf@cpe-173-91-189-33.neo.res.rr.com) (Remote host closed the connection)
[03:37:26] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[03:37:28] *** Joins: k8yun (~k8yun@user/k8yun)
[03:37:37] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[03:38:07] <Pi-sistance> if i return an array of strings why does it always give me its dtype without my asking, its quite impertinent
[03:38:11] <k8yun> Hi! I'm interested in learning about ML in Python.  Can anyone recommend any good ML modules/tutorials (preferably in MS source)?
[03:38:18] *** Quits: Fl0pFl1p (~FlipFlop@user/fl1pfl0p) (Read error: Connection reset by peer)
[03:38:26] <Pi-sistance> doesnt do that for inters or floats!!
[03:38:28] *** Quits: chadea (~a@pool-96-241-113-90.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[03:38:42] *** Joins: Fl0pFl1p (~FlipFlop@user/fl1pfl0p)
[03:38:46] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: Ping timeout (120 seconds))
[03:38:51] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[03:38:51] *** Joins: chadea (~a@pool-96-241-113-90.washdc.fios.verizon.net)
[03:38:58] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[03:39:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:39:18] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[03:39:27] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[03:39:47] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:39:47] *** Joins: henco6 (~henco@lon11.dustyservers.com)
[03:39:58] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[03:40:13] *** Joins: xkuru (~xkuru@user/xkuru)
[03:40:19] *** Quits: zigo_ (~quassel@shade.infomaniak.ch) (Remote host closed the connection)
[03:40:23] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[03:40:33] *** Quits: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz) (Ping timeout: 256 seconds)
[03:40:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[03:40:35] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 240 seconds)
[03:40:35] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[03:40:35] *** Joins: lucerne0 (~lucerne@ip202.ip-51-178-215.eu)
[03:40:38] *** Joins: lunchd (launchd@bitbot/launchd)
[03:40:39] *** Joins: linuxdaemon_ (linuxdemon@bnc.linuxdemon.xyz)
[03:40:40] *** Joins: Pharynx (~Pharynx@larynx.ventricle.us)
[03:40:41] *** Joins: deetwelv- (~deetwelve@user/deetwelve)
[03:40:42] *** Joins: user3456_ (user3456@user/user3456)
[03:40:42] *** Quits: Ninpo (~Ninpo@user/ninpo) (Ping timeout: 250 seconds)
[03:40:43] *** Joins: Bitflux (~byte@byteflux.net)
[03:41:07] *** Quits: Pharyngeal (~Pharynx@larynx.ventricle.us) (Ping timeout: 256 seconds)
[03:41:07] *** Quits: unixcorn_ (unixcorne@applejack.urlab.be) (Ping timeout: 256 seconds)
[03:41:07] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 256 seconds)
[03:41:07] *** Quits: The-Compiler (~compiler@the-compiler.org) (Ping timeout: 256 seconds)
[03:41:07] *** Quits: rodstewart1 (~dmartins@188.ip-149-56-97.net) (Ping timeout: 256 seconds)
[03:41:07] *** Quits: oelewapp1rke (~cde@ns509915.ip-198-245-49.net) (Ping timeout: 256 seconds)
[03:41:08] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (Ping timeout: 250 seconds)
[03:41:08] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Ping timeout: 250 seconds)
[03:41:09] *** Quits: masoudd_ (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[03:41:14] *** Joins: hirish_ (~hirish@ip85.ip-137-74-20.eu)
[03:41:18] *** Joins: tomaw_ (~tom@libera/staff/tomaw)
[03:41:27] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[03:41:31] *** Joins: zigo (~quassel@shade.infomaniak.ch)
[03:41:33] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Ping timeout: 250 seconds)
[03:41:34] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Ping timeout: 250 seconds)
[03:41:35] *** lucerne0 is now known as lucerne
[03:41:37] *** user3456_ is now known as user3456
[03:41:41] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (Ping timeout: 256 seconds)
[03:41:41] *** Quits: Xat`_ (~Xat`@ns300217.ip-91-121-29.eu) (Ping timeout: 256 seconds)
[03:41:41] *** Quits: launchd (launchd@bitbot/launchd) (Ping timeout: 256 seconds)
[03:41:41] *** Quits: henco (~henco@lon11.dustyservers.com) (Ping timeout: 256 seconds)
[03:41:41] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (Ping timeout: 256 seconds)
[03:41:41] *** Quits: Byteflux (~byte@byteflux.net) (Ping timeout: 256 seconds)
[03:41:41] *** Quits: deetwelve (~deetwelve@user/deetwelve) (Ping timeout: 256 seconds)
[03:41:41] *** henco6 is now known as henco
[03:41:44] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[03:42:10] <SnoopJ> k8yun, numpy is likely to show up near any ML stuff in Python, so it's worth knowing about. PyTorch and scikit-learn are specialty libraries well worth knowing about for convolutional networks and [most other things], respectively. pandas is also worth knowing about for data cleaning/manipulation/exploration, some people like it for that.
[03:42:20] *** deetwelv- is now known as deetwelve
[03:42:36] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[03:42:36] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[03:42:39] *** Joins: oelewapperke (~cde@ns509915.ip-198-245-49.net)
[03:42:45] *** Quits: dave2F (~dave@78-56-248-37.static.zebra.lt) (Quit: ZNC - https://znc.in)
[03:42:50] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[03:42:53] *** Quits: Pandadub (~Barones@user/Barones) (Remote host closed the connection)
[03:42:58] *** Joins: vaio (~gary@user/ghost)
[03:43:04] *** Joins: dave2F (~dave@78-56-248-37.static.zebra.lt)
[03:43:13] *** Joins: Barones (~Barones@user/Barones)
[03:43:14] *** Joins: rodstewart1 (~dmartins@188.ip-149-56-97.net)
[03:43:24] *** Quits: ShotokanZH (~ShotokanZ@aitch.me) (Ping timeout: 240 seconds)
[03:43:25] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:43:30] *** Joins: Xat` (~Xat`@ns300217.ip-91-121-29.eu)
[03:43:30] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[03:43:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:44:23] *** Joins: The-Compiler (~compiler@2001:41d0:2:3b68::1)
[03:44:44] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[03:44:44] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[03:44:59] *** Joins: Ninpo (~Ninpo@leviathan.qap.la)
[03:45:05] *** Joins: crashrep (~crashrep@user/crashrep)
[03:45:07] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:45:09] <Pi-sistance> numpy is racist against strings, it is profiling them
[03:45:19] *** Joins: bloody_ (~bloody@user/bloody)
[03:45:25] *** Joins: Vonter (~Vonter@user/vonter)
[03:45:52] *** Joins: Syzygy_ (~Syzygy@178-190-76-245.adsl.highway.telekom.at)
[03:46:03] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:46:18] *** Quits: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de) (Quit: No Ping reply in 180 seconds.)
[03:46:18] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d)
[03:46:34] <k8yun> Thanks SnoopJ!  I know a bit about Panda so that's good.  I will study the resources you've listed, and come back with well-prepared questions in a month or so.  Thanks so much!
[03:46:35] *** Joins: unixcorn_ (unixcorne@applejack.urlab.be)
[03:46:44] *** Joins: ShotokanZH (~ShotokanZ@aitch.me)
[03:47:02] *** Quits: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 272 seconds)
[03:47:11] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:47:21] *** Quits: tomaw (tom@libera/staff/tomaw) (Ping timeout: 606 seconds)
[03:47:21] *** tomaw_ is now known as tomaw
[03:48:14] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:48:18] *** Quits: bloody (~bloody@user/bloody) (Ping timeout: 272 seconds)
[03:48:29] *** Quits: Syzygy (~Syzygy@2001:871:265:1cdc:3550:ebd5:e922:4ec8) (Ping timeout: 250 seconds)
[03:48:35] *** lunchd is now known as launchd
[03:49:00] <SnoopJ> no need to study all of those, just listing some libraries. If you tell us what specifically you're interested in doing, we might have more specific feedback :)
[03:49:13] *** Quits: reset (~reset@user/reset) (Quit: reset)
[03:49:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:49:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:8c1c:a482:bdcb:d80) (Ping timeout: 240 seconds)
[03:50:17] *** Joins: Haddock (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[03:50:46] *** Haddock is now known as JimmyRustles
[03:51:24] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:51:33] <Evolver> chadea: any thoughts on redis vs keydb for performance?
[03:51:47] <k8yun> ok, good to know
[03:51:53] *** Quits: davor_ (~davor@user/davor) (Ping timeout: 256 seconds)
[03:52:00] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[03:52:06] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[03:52:23] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[03:52:29] *** Joins: k8yun (~k8yun@user/k8yun)
[03:53:09] <Evolver> k8yun: scikit-learn
[03:53:46] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:53:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:53:58] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[03:54:02] *** Joins: pepper (~pepper@user/pepper)
[03:54:08] *** Joins: Wulf (~Wulf@user/wulf)
[03:54:44] *** Quits: capn (~capn@user/capn) (Remote host closed the connection)
[03:55:35] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[03:55:44] *** Joins: bindu_ (~bindu@user/bindu)
[03:56:01] <k8yun> scikit-learn gets mentioned twice - I guess I will start with that
[03:56:05] <k8yun> thanks all!
[03:56:31] *** Joins: parvXirc (~quass@user/parv)
[03:56:44] *** Joins: x_kuru (~xkuru@user/xkuru)
[03:56:58] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[03:56:59] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[03:56:59] *** Joins: martums59 (~martums@user/martums)
[03:57:04] <Evolver> k8yun: better start with numpy and pandas
[03:57:08] *** Joins: fstd (~fstd@xdsl-81-173-174-103.nc.de)
[03:57:24] *** Joins: Syzygy__ (~Syzygy@2001:871:265:1cdc:3550:ebd5:e922:4ec8)
[03:57:24] *** Joins: ham5urg__ (~ham5urg@84.46.13.255.dynamic-pppoe.dt.ipv4.wtnet.de)
[03:57:25] *** Joins: tracey (~trace@user/trace)
[03:57:26] *** Joins: demon__ (~user@62.114.200.238)
[03:57:32] *** Joins: jinsun (~jinsun@user/jinsun)
[03:57:33] *** Joins: iron_ (~Conjectur@160-2-104-193.cpe.sparklight.net)
[03:57:38] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[03:57:38] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[03:57:39] *** Joins: vicfred_ (~vicfred@user/vicfred)
[03:57:39] <Evolver> k8yun: clean data is required for good models
[03:57:42] *** bindu_ is now known as bindu
[03:57:42] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:57:42] *** Joins: Orimendix (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net)
[03:57:43] *** Joins: KevinX_ (~KevinX@user/KevinX)
[03:57:53] *** Quits: tomg (~tomg@user/tomg) (Read error: Connection reset by peer)
[03:57:53] *** Quits: Syzygy_ (~Syzygy@178-190-76-245.adsl.highway.telekom.at) (Read error: Connection reset by peer)
[03:57:53] *** Quits: yotsuba (~yotsuba@89-138-112-148.bb.netvision.net.il) (Remote host closed the connection)
[03:57:53] *** Quits: ham5urg_ (~ham5urg@84.46.13.255.dynamic-pppoe.dt.ipv4.wtnet.de) (Read error: Connection reset by peer)
[03:57:53] *** Quits: Conjecture (~Conjectur@160-2-104-193.cpe.sparklight.net) (Read error: Connection reset by peer)
[03:57:53] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[03:57:53] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[03:57:53] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Remote host closed the connection)
[03:57:53] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[03:57:53] *** Quits: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[03:57:53] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[03:57:53] *** Quits: vicfred (~vicfred@user/vicfred) (Read error: Connection reset by peer)
[03:57:53] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[03:57:53] *** Quits: chadea (~a@pool-96-241-113-90.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[03:57:53] <dre> ok I'll put my problem another way:
[03:57:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:57:54] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Ping timeout (120 seconds))
[03:58:01] *** Quits: fstd_ (~fstd@xdsl-81-173-174-103.nc.de) (Read error: Connection reset by peer)
[03:58:01] *** Quits: trace987 (~trace@user/trace) (Read error: Connection reset by peer)
[03:58:03] *** Joins: thiras_ (~thiras@user/thiras)
[03:58:03] *** Joins: dbristow (~dbristow@user/dbristow)
[03:58:04] *** Joins: pepper (~pepper@user/pepper)
[03:58:07] *** Joins: moose (~moose@user/moose)
[03:58:11] <dre> I have a function that accepts a type book:     def func_a( book_to_use: Book) -> bool
[03:58:11] *** Joins: chadea (~a@pool-96-241-113-90.washdc.fios.verizon.net)
[03:58:13] *** Joins: tomg (~tomg@user/tomg)
[03:58:13] *** Joins: yotsuba (~yotsuba@89-138-112-148.bb.netvision.net.il)
[03:58:26] *** Quits: ddoering (~Devinn@searspoint.nvidia.com) (Ping timeout: 272 seconds)
[03:58:52] *** Quits: mpmc (~mpmc@user/mpmc) (Quit: ZNC - https://znc.in)
[03:59:00] *** Quits: MercilessDeth (~brad@136.49.59.177) (Remote host closed the connection)
[03:59:02] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[03:59:25] *** Joins: MercilessDeth (~brad@136.49.59.177)
[03:59:28] <dre> how can I give it "something that looks like a book"  like Magazine, without # type: ignore
[03:59:42] <dre> and without subclassing Book and Magazine
[03:59:42] *** Quits: parv (~quass@user/parv) (Ping timeout: 272 seconds)
[03:59:42] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 272 seconds)
[03:59:43] *** Quits: mraag (~martinraa@188.213.138.59) (Ping timeout: 272 seconds)
[03:59:46] <grym> dre: to make mypy happy?
[03:59:50] *** Joins: mpmc (~mpmc@user/mpmc)
[03:59:50] <dre> ye
[03:59:52] *** justm33 is now known as justm3
[04:00:00] <grym> Union[Book, Magazine]
[04:00:07] *** Joins: cheater1__ (~Username@user/cheater)
[04:00:21] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: martums5 (~martums@user/martums) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: deviantfero (~deviantfe@179.51.61.253) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Ping timeout: 272 seconds)
[04:00:21] *** martums59 is now known as martums5
[04:00:25] *** cheater1__ is now known as cheater
[04:00:28] <Evolver> what about Type[Book]
[04:00:39] *** Quits: anotheruser (~user@41.176.171.61) (Ping timeout: 256 seconds)
[04:00:51] <Evolver> https://docs.python.org/3/library/typing.html#typing.Type
[04:00:54] <dre> ok to further complicate it; grym I only use "Magazine" to test it.
[04:01:10] <grym> F
[04:01:24] <dre> Evolver, interesting......
[04:01:28] <Evolver> Disregard. Type is wrong here.
[04:01:35] <Evolver> Type expects a class itself.
[04:01:38] <dre> yeah I think it is
[04:01:48] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[04:01:53] *** Joins: deviantfero (~deviantfe@179.51.61.253)
[04:01:57] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[04:02:04] <dre> so my thing is that Book is a big dataclass that has many properties; I don't want any of those attributes to be None in the production code, so that's all well and good.
[04:02:14] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[04:02:16] *** Quits: cul8r (~cul8r@76.113.95.199) (Remote host closed the connection)
[04:02:23] *** KevinX_ is now known as KevinX
[04:02:33] <dre> and I'll be passing that single Book instance, to many different functions, many different functions all require some attributes in one way or another
[04:02:57] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[04:03:00] <dre> like one function will use attribute_a, another function would use attribute_b, etc.
[04:03:05] <dre> when it comes to testing:
[04:03:14] <Evolver> All this is too much info for your question
[04:03:39] *** Quits: parvXirc (~quass@user/parv) (Quit: parvXirc)
[04:03:48] <dre> I want to test the function, should be easy, only needs one parameter: "attribute_a" from the type Book, but to instaniate book, I have to specify everything.
[04:03:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:04:10] *** Joins: parv (~quass@user/parv)
[04:04:15] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[04:04:26] <dre> Evolver, I'd surely hope you'd be able to read more than 3 lines of text
[04:06:12] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 240 seconds)
[04:06:16] *** Joins: cgrage (~cgrage@107.175.102.156)
[04:06:43] *** Parts: cgrage (~cgrage@107.175.102.156) ()
[04:06:53] <Evolver> dre: Did `book_to_use: Book` actually make mypy unhappy?
[04:07:13] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[04:07:25] <dre> grym, thoughts on the above? Protocol would be the right way about it (something that looks like it has attribute_a) but then I have to specify a protocol for each function..
[04:08:03] <dre> Evolver, no
[04:08:10] <dre> the issue isn't the type of the Book
[04:08:25] <dre> the issue is that I want to test the function without giving it a whole Book
[04:08:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[04:08:56] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[04:08:57] <grym> a mock, i guess?  i'm not sure i have a good answer
[04:08:58] <nedbat> dre: it sounds like you want a helper function that can make a Book with just a little bit of data provided to it.
[04:09:04] <dre> I'm leaning towards "Mock is the only way to go about it"
[04:09:24] <nedbat> dre: maybe something like factoryboy?
[04:09:35] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[04:10:11] <dre> nedbat, oh yeah good spot. I think we do use factoryboy in a few places elsewhere
[04:10:53] <dre> it should just generate junk/random data for the other attributes that I don't specify myself, right?
[04:11:01] <dre> :o
[04:11:15] <nedbat> dre: tbh, i don't know how factoryboy works! :)
[04:11:59] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[04:12:19] <dre> I hope it works for just regular dataclasses and not ONLY orm models
[04:12:38] <dre> but that's a good shot, thanks nedbat; when all else fails I'll just go back to mock if i really have to
[04:12:39] <nedbat> dre: i have to imagine there's a tool out there to do it for dataclasses
[04:12:56] <dre> yeah same; which is why I was pulling my hair out about it
[04:13:22] *** Joins: fluter (~fluter@user/fluter)
[04:14:45] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:15:16] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[04:15:51] *** Joins: kaiseisei (~Thunderbi@183.184.95.155)
[04:16:53] *** Joins: capn (~capn@user/capn)
[04:18:21] *** Joins: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy)
[04:19:47] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[04:20:18] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[04:20:19] <SnoopJ> dre, what are the real `attribute_a, attribute_b` like? Is this a case where objects representing different bits of data about a Book may be worthy of their own class?
[04:20:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:21:16] <SnoopJ> i.e. I can imagine a Book that contains a PublicationInfo object in its .publication_info field or something like this, where the field data represents a fairly meaningful object in its own right.
[04:21:37] <SnoopJ> oO(dataclasses/attrs really throws a wrench into the "classes are state and behavior" rule of thumb, doesn't it?)
[04:22:26] *** Joins: kaivai (~kaivai@user/kaivai)
[04:23:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[04:24:12] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[04:25:14] *** Joins: sanmingzhi1 (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net)
[04:26:27] *** Joins: davor (~davor@user/davor)
[04:26:48] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[04:26:56] *** Quits: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net) (Ping timeout: 272 seconds)
[04:27:53] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:28:12] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 240 seconds)
[04:29:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:30:44] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 272 seconds)
[04:30:55] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[04:31:25] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:31:26] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Ping timeout: 252 seconds)
[04:31:33] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[04:31:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:32:12] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4ce0:43ca:b786:3e76) (Ping timeout: 240 seconds)
[04:33:34] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:33:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:34:10] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:34:24] *** Joins: jdmark (~jdmark@user/jdmark)
[04:36:12] *** Joins: Vonter (~Vonter@user/vonter)
[04:36:39] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Ping timeout: 256 seconds)
[04:37:41] <dre> yeah I was thinking about that as well, but sometimes it might simply be a single attribute; and I wanted to have a cleaner API of "you only have this ONE Book type, nothing else, don't do anything else" because it's a tidy up of the existing code
[04:37:59] <dre> tough to explain, but tbh if I could get away from state and just focus on behaviour that would be dabest.
[04:38:20] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[04:39:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[04:39:43] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:5947:a168:126f:95f4)
[04:39:43] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:5947:a168:126f:95f4) (Changing host)
[04:39:43] *** Joins: skapata (~Skapata@user/skapata)
[04:40:00] <SnoopJ> dre, I guess that sounds a bit like a contradiction: you want to have a piece you can break off of this object for testing, which suggests it's nonatomic, but you're saying that it's convenient to treat it as an atom and all the data's just on it.
[04:40:23] <SnoopJ> um, that's atomic as in "indivisble" not as in atomicity
[04:40:56] <grym> dre: perhaps this matters, maybe not; when i find it really hard to create instances of classes to test my code, i start to wonder if my classes are too big
[04:42:18] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[04:43:43] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[04:44:03] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[04:44:42] <dre> yeah I get it
[04:44:58] <dre> but can I not argue that sometimes classes just have to be big? like a big storage container
[04:45:16] <dre> the problem I'm facing is actually with django, and we're doing PDF bill statements
[04:45:25] <dre> so we go "generate_pdf(statement)"
[04:45:39] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[04:45:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:45:52] <grym> i mean, my big go-to use case for pydantic is "2-8 level deep class hierarchy that recapitulates a nasty JSON file", so i get it :)
[04:46:06] <SnoopJ> dre, you can argue for either type of class, but it's hard to argue for one type of class that has *both* properties simultaneously.
[04:46:09] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[04:46:15] <dre> and then all through the function we do these crazy ORM lookups and loops, multiple times, refetching all the same data, bending it different ways, 1000's of lines. to spit out a dict at the end.
[04:46:31] <SnoopJ> Either you wanna break chunks off of it, and it's designed to do that (or at least the part you wanna break off is), or you wanna treat it as a big amorphous blob
[04:46:57] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 240 seconds)
[04:47:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:47:05] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[04:47:10] <dre> so my option is : no, we "pre_generate" and do all the crazy lookups, and spit out a dataclass at the end.           (i'm only just realising that this sounds the same as what we already do)
[04:47:15] <SnoopJ> For large objects just statistically you're likely to have categories that describe good candidate subobjects in any large class that is at least domain-specific
[04:47:19] <ali1234> you can avoid large classes but the only nice way to do it is with inheritance (no, composition is not a nice way to do it)
[04:47:30] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:47:37] <SnoopJ> (all bets are off if it's a true-old-school "god" object that holds an entire application's worth of state...)
[04:47:48] <dre> "as a big amorphous blob"
[04:47:50] <dre> sorta?
[04:48:13] <SnoopJ> dre, well, I do think you can turn one into the other by making one group of characteristics at a time
[04:48:37] <dre> I mean the use case is this: we have Account models that have Statements that reflect their Charges that were done at certain times, for certain Things, etc etc.
[04:48:46] *** Joins: Guest83 (~Guest83@104-184-54-53.lightspeed.hstntx.sbcglobal.net)
[04:48:50] <SnoopJ> So it's not as though you have to choose up-front between these two notions of objects. Sometimes it's convenient to have an amorphous blob while you work a problem, then you start finishing it up and remove the scaffolding.
[04:49:01] <dre> so why can't we make a PrefetchedData object that stores all that information, as primitive as possible, and pass that around
[04:49:04] <Guest83> hello everybody
[04:49:15] <dre> yeah I get you
[04:49:15] <ali1234> how would you divide up "numpy array"?
[04:49:25] <ali1234> just as an example
[04:50:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:50:16] <dre> SnoopJ, I suppose this is just an interim measure; we're just seperating the ORM stuff from the presentation logic stuff in a way that's still doable to slowly migrate over. aftwards we'll get rid of the god-object i guess.
[04:50:17] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:50:36] <dre> god-object is perhaps better than "single functino that does everything?" - not sure. :P
[04:50:49] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[04:50:50] *** Joins: hub (~hub@user/hub)
[04:51:00] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[04:51:14] <SnoopJ> dre, I think we under-emphasize the importance of not having our minds made up 100% when we start building.
[04:51:29] <dre> absolutely
[04:51:40] <SnoopJ> It can be nice to do a lot of planning to work a problem, but it can also be nice to just _get in there_ and see what the problem looks like from the inside, too.
[04:52:12] *** Quits: tristan_ (~tristan@223.62.202.67) (Ping timeout: 240 seconds)
[04:52:19] <dre> not beheld to any idea; get in there and comb it out. more or less what I'm aiming to do; I'll try to focus less on forcing my idea to work
[04:52:23] <ali1234> having a lot of experience is really the only way you can just come up with the right class heirarchy at the start of a project
[04:53:03] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:53:05] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[04:53:33] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[04:53:45] <SnoopJ> I don't think it's the only way, and I think "right class hierarchy" is a little reductive: there are probably large spaces of type structures that capture (in some formal way?) a problem
[04:53:58] <SnoopJ> But it sure helps if you've just seen a variety of solutions to that problem before, heh.
[04:53:59] *** Joins: k8yun (~k8yun@user/k8yun)
[04:54:05] <ali1234> okay then, "class heirarchy that is suitable and works"
[04:54:20] *** Quits: moog (~moog@107.77.244.68) (Remote host closed the connection)
[04:54:21] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[04:54:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:54:32] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:54:41] <Guest83> russia is supposed to invade Ukraine tonight according to the us intelligence
[04:54:47] <ali1234> it is the only way because nobody teaches it
[04:54:49] <SnoopJ> I'm finding that "don't make up your mind too early" is important when I'm working on something brand new
[04:54:50] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[04:55:01] <ali1234> yeah, i don't disagree with that
[04:55:13] <Guest83> I really believe they should go for it
[04:55:16] <ali1234> but on the other hand you might get it right the first time as well
[04:55:19] <Guest83> end the neoliberal world order
[04:55:27] <SnoopJ> Guest83, I'm sure they're talking about it in ##politics
[04:55:35] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[04:55:35] <Guest83> ok thanks Ill go over there
[04:55:37] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Client Quit)
[04:55:52] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[04:55:58] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d5c1:86c3:2258:8392)
[04:56:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[04:56:49] *** Joins: moog (~moog@107.77.244.68)
[04:57:20] *** Guest83 is now known as RocketSphere
[04:57:53] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:58:32] *** Joins: reset (~reset@user/reset)
[04:59:19] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:59:46] <SnoopJ> ali1234, yep, the goal is to see more of it up-front if you can. I think of it as kind of starting with "low resolution/fidelity" and working to "high resolution/fidelity"
[05:00:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:01:09] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 252 seconds)
[05:01:21] <RocketSphere> they aren't talking about it over there
[05:01:24] <RocketSphere> the channel is dead
[05:01:25] *** Joins: cliluw (~cliluw@47.147.77.43)
[05:02:31] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:02:50] *** Quits: tracey (~trace@user/trace) (Remote host closed the connection)
[05:03:59] <SnoopJ> RocketSphere, we mostly talk about Python, in here
[05:04:11] <RocketSphere> yeah I get that
[05:04:23] <SnoopJ> there's always ##python-offtopic
[05:05:15] *** Joins: MrPaul (~MrPaul@172-124-194-94.lightspeed.nsvltn.sbcglobal.net)
[05:05:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[05:06:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:06:56] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[05:08:44] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:09:17] *** Joins: Vonter (~Vonter@user/vonter)
[05:10:07] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[05:11:20] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[05:11:28] *** Quits: jladd (~jladd@c-71-63-157-185.hsd1.or.comcast.net) (Remote host closed the connection)
[05:11:47] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:12:24] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:12:26] *** Quits: wac (~wac@user/wac) (Quit: Zzzz…)
[05:12:59] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:14:36] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 240 seconds)
[05:16:15] *** Joins: tristan_ (~tristan@223.62.175.39)
[05:17:03] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:18:07] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[05:18:14] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:20:27] *** Joins: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be)
[05:20:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:21:07] *** Quits: beeze (~beeze@cpe-174-109-135-39.nc.res.rr.com) (Ping timeout: 256 seconds)
[05:21:21] *** Joins: brentaarnold (~brentaarn@24.112.56.42)
[05:22:40] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 272 seconds)
[05:23:07] *** Quits: jtj90 (~jtj90@2607:fb90:b28f:3646:7ce2:24dd:b07:84ed) (Ping timeout: 256 seconds)
[05:23:08] *** Joins: dme86 (~dan@user/dan86)
[05:24:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:25:12] *** Quits: MrPaul (~MrPaul@172-124-194-94.lightspeed.nsvltn.sbcglobal.net) (Quit: Client closed)
[05:25:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:27:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:27:12] *** Joins: MrPaul (~MrPaul@172-124-194-94.lightspeed.nsvltn.sbcglobal.net)
[05:27:44] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[05:28:33] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[05:28:43] *** Quits: MrPaul (~MrPaul@172-124-194-94.lightspeed.nsvltn.sbcglobal.net) (Client Quit)
[05:29:50] *** Parts: agireud (~agireud@user/agireud) ()
[05:30:00] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:29] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:30:45] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1011:2752:807d:fa72) (Ping timeout: 250 seconds)
[05:30:47] *** Joins: mat001 (~mat001@72.28.108.216)
[05:31:38] *** Joins: k8yun (~k8yun@user/k8yun)
[05:31:52] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[05:32:22] *** Joins: agireud (~agireud@user/agireud)
[05:32:54] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:33:02] *** Quits: unyu (~pyon@user/pyon) (Quit: Reboot.)
[05:33:15] *** Joins: vlm (~vlm@user/vlm)
[05:33:23] *** Joins: k8yun_ (~k8yun@user/k8yun)
[05:33:31] *** Quits: Veil (~Veil@user/Veil) (Read error: Connection reset by peer)
[05:33:48] *** Joins: Veil (~Veil@user/Veil)
[05:37:00] *** Quits: RocketSphere (~Guest83@104-184-54-53.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 240 seconds)
[05:37:25] *** Joins: Masterphi (~Masterphi@user/masterphi)
[05:37:30] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[05:37:48] *** Quits: vin (~vin@user/crash) (Ping timeout: 240 seconds)
[05:37:52] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:37:52] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 272 seconds)
[05:37:57] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:38:07] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:38:19] *** brabrax_ is now known as brabrax
[05:38:43] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:39:01] *** Joins: vin (~vin@user/crash)
[05:39:43] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[05:40:11] *** Joins: Guest83 (~Guest83@104-184-54-53.lightspeed.hstntx.sbcglobal.net)
[05:40:16] *** Joins: agireud (~agireud@user/agireud)
[05:41:17] *** Guest83 is now known as RocketSphere
[05:42:34] *** Quits: RocketSphere (~Guest83@104-184-54-53.lightspeed.hstntx.sbcglobal.net) (Client Quit)
[05:43:08] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:cf7:316a:d226:c21f) (Quit: Client closed)
[05:43:31] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:44:31] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:45:09] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 252 seconds)
[05:45:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:47:27] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[05:47:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:48:05] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:5645:8ac2:d647:aa4d) (Ping timeout: 250 seconds)
[05:48:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:49:00] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 252 seconds)
[05:49:16] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:49:19] *** Joins: hamms (~hams@73.232.205.0)
[05:50:02] *** Joins: Mnedusza (~Thunderbi@S010620e52a118339.ed.shawcable.net)
[05:50:27] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:50:53] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[05:51:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[05:52:31] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[05:53:31] *** sturm_ is now known as sturm
[05:53:38] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Quit: leaving)
[05:53:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[05:53:51] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:54:31] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[05:55:25] *** Joins: dirtydan (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net)
[05:55:30] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[05:56:40] *** Quits: dirtydan (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net) (Client Quit)
[05:57:07] *** Quits: davit (~davit@50.35.184.227) (Quit: Leaving)
[05:57:20] *** Joins: davit (~davit@50.35.184.227)
[05:57:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 250 seconds)
[05:57:44] *** [_] is now known as [itchyjunk]
[05:58:13] *** Quits: sturm (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Quit: Leaving)
[05:58:49] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:00:36] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:00:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[06:01:07] *** Joins: user_ (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net)
[06:01:26] *** Quits: user_ (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net) (Client Quit)
[06:01:52] *** Joins: user_ (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net)
[06:02:02] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[06:02:03] *** Quits: user_ (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net) (Client Quit)
[06:02:35] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:f48e:ecac:8cfc:2c43)
[06:03:33] *** Quits: justGhost (~justache@user/justache) (Remote host closed the connection)
[06:03:40] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:3511:c1b2:b4e7:7f1c)
[06:03:55] *** Joins: dirtydan (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net)
[06:04:18] *** Quits: dirtydan (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net) (Client Quit)
[06:04:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:04:33] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[06:04:41] *** Joins: dirtydan (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net)
[06:04:54] *** Joins: justGhost (~justache@user/justache)
[06:05:03] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:05:16] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[06:05:42] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[06:05:45] *** Joins: Vonter (~Vonter@user/vonter)
[06:06:25] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:07:00] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[06:07:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c9dd:301:29f7:88f5) (Ping timeout: 250 seconds)
[06:08:39] *** Joins: junebug (~junebug@2600:1700:3db0:2540:a5ae:bda3:8ae8:3ea5)
[06:10:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:12:04] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:13:08] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:13:18] <domicron> so this app which I inherited to maintain has a call... some_function(string1, string2, string3). I'd like to add an if condition so string2 is only present in certain circumstances. Is there a way I can concatenate string1, string2, string3 into enumeratedstring, and call the function with the same multiple arguments?
[06:13:42] <domicron> ps. I hate this app, unfortunately I didnt write it
[06:14:28] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[06:14:50] *** Quits: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be) (Quit: harpia)
[06:16:52] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[06:16:54] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[06:17:12] *** Joins: thiras_ (~thiras@user/thiras)
[06:17:24] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[06:17:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[06:17:36] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:197b:1695:9065:307b) (Ping timeout: 252 seconds)
[06:18:57] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:20:17] *** Joins: unyu (~pyon@user/pyon)
[06:20:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:21:19] <JimmyRustles> hi guys, my ball python has been sleeping a lot and isn't interested in playing much anymore, do you think he's alright?
[06:21:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:22:23] <SnoopJ> JimmyRustles, you have had a lot of questions about your ball python over some time, have you considered consulting a veterinarian?
[06:23:06] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[06:23:30] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[06:24:06] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:24:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:24:45] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:24:46] *** Quits: kanin (~kanin@112.41.64.39) (Read error: Connection reset by peer)
[06:25:51] <stewie925> hey guys, how do I convert the following multiprocessing statement to a multiprocessing Pool statement? `p = Process(target=function, args=(shared_number, lock)) `
[06:26:22] <domicron> actually i figured out this mess
[06:26:28] <stewie925> I have  `pool = Pool() `
[06:26:51] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[06:27:02] <stewie925> but my pool map is not accepted - `pool.map(function, [(shared_number,lock)] * 2) `
[06:27:24] <SnoopJ> ahh, pip's new progress bars are so nice :)
[06:27:25] <stewie925> I did a *2 beacuse I want to spawn two processes
[06:27:47] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[06:27:51] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Killed (NickServ (GHOST command used by Seto_Kaiba)))
[06:27:53] *** Seto_Kaiba is now known as Hunterkll
[06:28:30] <stewie925> so I have a problem with passing args with the pool.map()
[06:28:57] *** Quits: Mnedusza (~Thunderbi@S010620e52a118339.ed.shawcable.net) (Quit: Mnedusza)
[06:29:09] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[06:29:48] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:30:34] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:31:19] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f08f:f09d:4f68:e2f5) (Quit: Client closed)
[06:31:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[06:34:14] *** Quits: tristan_ (~tristan@223.62.175.39) (Ping timeout: 272 seconds)
[06:34:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:35:30] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:36:23] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:37:00] <voldial> anyone aware of a open source hardware database? I want to query stuff like "2 channel oscilloscope <=5GS/s"? I found https://github.com/OPEN-NEXT/OKH-LOSH just curious if anyone knows of another.
[06:38:48] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Ping timeout: 250 seconds)
[06:38:53] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f08f:f09d:4f68:e2f5)
[06:39:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[06:40:01] <foul_owl> What's the cleanest way to run a block of code with a certain percentage of occuring? I've just been doing something like: if random.randint(0,100) > 30: but this seems a little hacky, I feel like there might be a cleaner way
[06:40:26] <JimmyRustles> that's how i've always done it, foul_owl
[06:40:27] <deviantfero> well it's clean enough depending on the probability of being run you want
[06:40:30] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[06:41:09] <deviantfero> like I think that will run 70% of the time right? ideally
[06:41:12] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:41:12] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[06:41:33] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[06:41:41] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:41:56] *** Joins: y1n (~y1n@77.119.211.138.wireless.dyn.drei.com)
[06:42:00] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f08f:f09d:4f68:e2f5) (Client Quit)
[06:42:12] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:42:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:43:15] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[06:43:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:44:43] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[06:46:24] <Repiphany> There's an off-by-one error in that, you'd be getting ~69.3% instead of 70%
[06:47:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:47:03] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:47:09] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bc57-aa05-744c-cbb3.res6.spectrum.com) (Read error: Connection reset by peer)
[06:47:13] <Repiphany> `random.random() > 0.3`
[06:47:15] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[06:47:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:47:37] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:47:40] <foul_owl> Aha!
[06:47:42] <foul_owl> Thank you :)
[06:47:53] <SnoopJ> yea do `random.random() > p` :)
[06:48:15] *** Joins: Guest83 (~Guest83@104-184-54-53.lightspeed.hstntx.sbcglobal.net)
[06:48:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:49:02] *** Guest83 is now known as RocketSphere
[06:49:49] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:49:50] *** Joins: MercilessDeth (~brad@136.49.59.177)
[06:50:09] <Repiphany> (`random.random() < 0.7` is slightly clearer showing 70%)
[06:51:16] *** Joins: Masterphi (~Masterphi@user/masterphi)
[06:51:28] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:51:30] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:51:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:51:31] *** finn_elija is now known as FinnElija
[06:51:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:53:09] *** Joins: greknod2821 (~grek@120.88.171.98)
[06:53:20] *** greknod2821 is now known as greknod
[06:55:23] *** Joins: millido (~millido@84.210.150.128)
[06:56:03] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:57:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[06:57:28] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[06:57:44] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[06:57:48] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d5c1:86c3:2258:8392) (Ping timeout: 240 seconds)
[06:57:48] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:59:07] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[06:59:14] <SnoopJ> yea, depends on which 'side' of the probability is more natural to express in the actual computation
[06:59:15] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[07:00:01] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Remote host closed the connection)
[07:00:13] *** Quits: junebug (~junebug@2600:1700:3db0:2540:a5ae:bda3:8ae8:3ea5) (Remote host closed the connection)
[07:00:37] *** Joins: junebug (~junebug@2600:1700:3db0:2540:975d:5280:dc95:7b4e)
[07:00:44] *** Joins: shodan45 (~quassel@107.161.22.155)
[07:00:59] *** Joins: kaiseisei (~Thunderbi@183.184.95.155)
[07:01:33] *** Joins: hyiltiz (~quassel@31.220.5.250)
[07:02:21] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:02:51] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[07:03:06] *** Quits: RocketSphere (~Guest83@104-184-54-53.lightspeed.hstntx.sbcglobal.net) (Quit: Connection closed)
[07:03:32] *** Joins: lord_daemon (~lord_daem@187.36.203.244)
[07:05:14] *** Joins: theo3 (~theo@user/theo)
[07:05:28] *** Quits: theo (~theo@user/theo) (Read error: Connection reset by peer)
[07:05:28] *** theo3 is now known as theo
[07:05:35] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:6309:1ce4:579d:e991)
[07:06:30] *** Joins: Vonter (~Vonter@user/vonter)
[07:07:05] *** Joins: Azem (~haise01@user/haise01)
[07:08:45] *** Joins: adeliktas8 (~adeliktas@i59F52BE7.versanet.de)
[07:08:49] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Read error: Connection reset by peer)
[07:09:19] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[07:10:12] *** Quits: adeliktas (~adeliktas@i59F52854.versanet.de) (Ping timeout: 240 seconds)
[07:10:12] *** adeliktas8 is now known as adeliktas
[07:10:24] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 252 seconds)
[07:12:03] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[07:12:35] *** Parts: ysiry (~ysiry@user/ysiry) (Leaving)
[07:12:51] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 245 seconds)
[07:12:55] *** Joins: kaivai (~kaivai@user/kaivai)
[07:15:32] *** Joins: saroy (~Sandipan@43.252.250.104)
[07:15:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:15:54] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[07:16:03] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[07:17:01] *** Joins: redkrieg (~redkrieg@user/redkrieg)
[07:18:49] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[07:20:12] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[07:20:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:20:51] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[07:21:15] *** Joins: kaivai (~kaivai@user/kaivai)
[07:21:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:22:34] *** Joins: audio (~audio@user/audio)
[07:23:11] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[07:23:59] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[07:24:21] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[07:25:03] *** Joins: freefall (~owner@2600:6c40:1600:39ec:e5ae:1b07:6961:572f)
[07:25:24] *** Joins: Masterphi (~Masterphi@user/masterphi)
[07:25:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:26:00] <freefall> hello. i got a quick question.. im using sqlite3 in a class so my program can call it for storing data but i dont know how to close it
[07:26:55] <grym> freefall: i `with sqlite3.connect(db) as con: `
[07:27:13] <grym> (then the connection is released when the block exits)
[07:27:40] <freefall> dont understand..
[07:27:47] *** Joins: bluedust (~bluedust@103.161.144.138)
[07:27:52] <freefall> what you mean i '....?
[07:28:56] <freefall> would it be sqlite3.connection.close()?
[07:28:59] <grym> no
[07:29:05] <grym> the with block does that for you
[07:29:43] <freefall> what does the con: mean?
[07:30:09] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:12] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:3511:c1b2:b4e7:7f1c) (Ping timeout: 240 seconds)
[07:31:04] <grym> it's the name of the connection
[07:31:05] <grym> https://bpa.st/XGUQ
[07:31:25] <grym> er, https://bpa.st/J5XQ
[07:32:16] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:33:02] *** Joins: masoudd (~masoudd@user/masoudd)
[07:33:19] *** Joins: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com)
[07:34:35] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18) (Quit: Leaving)
[07:34:43] <freefall> grym: how would this work inside of a class?
[07:34:43] *** Joins: k8yun__ (~k8yun@user/k8yun)
[07:35:09] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[07:35:09] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[07:35:12] <freefall> i dont plan on it being open an close just stay at the read..
[07:35:21] *** Joins: tristan_ (~tristan@223.62.162.126)
[07:35:49] <freefall> unless that smarter programming
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:02] *** Joins: CombatVet (~c4@user/combatvet)
[07:36:19] <grym> freefall: you can use a context manager wherever you'd like
[07:36:29] <grym> (with statements are context managers)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:37:28] *** Joins: evanextreme (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5)
[07:38:12] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[07:38:46] <grym> as a general rule i keep connections open when they're being used, but i don't keep them open for the lifetime of a class instance
[07:38:53] <grym> barring any other considerations
[07:39:52] <freefall> so basically any time you need to access it you connect to it (open it) then after done doing what needed you close it?
[07:40:12] *** Quits: demon__ (~user@62.114.200.238) (Ping timeout: 240 seconds)
[07:41:27] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[07:41:41] *** Quits: k8yun__ (~k8yun@user/k8yun) (Quit: Leaving)
[07:42:12] *** Joins: Masterphi (~Masterphi@user/masterphi)
[07:42:14] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[07:42:34] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:43:37] <dre> oh gosh.
[07:43:39] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[07:45:23] *** Joins: ham5urg_ (~ham5urg@134.101.162.147.dynamic-pppoe.dt.ipv4.wtnet.de)
[07:46:29] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 256 seconds)
[07:47:33] *** Joins: someuser (~user@62.114.198.142)
[07:47:42] *** Quits: sreve_ (~quassel@p549d71aa.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[07:47:48] *** Quits: ham5urg__ (~ham5urg@84.46.13.255.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 240 seconds)
[07:47:57] *** Joins: sreve (~quassel@p4ff4449e.dip0.t-ipconnect.de)
[07:48:11] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[07:48:35] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:48:59] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[07:49:14] <dre> is there a way I can get the attribute name and type of a dataclass?
[07:49:33] <dre> something like getattr, but not instantiating it first.
[07:51:21] <dre> like [ a for a in getattr(module.MyDataclass) ]
[07:52:01] <ssbr> dre: https://docs.python.org/3/library/dataclasses.html#dataclasses.fields
[07:52:31] *** Quits: freefall (~owner@2600:6c40:1600:39ec:e5ae:1b07:6961:572f) (Quit: Leaving)
[07:54:40] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[07:55:40] <SnoopJ> fields +1
[07:57:09] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:58:05] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[07:58:19] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[07:58:57] *** Joins: matsaman (~matsaman@user/matsaman)
[08:01:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:03:20] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[08:03:24] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:05:48] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[08:09:29] *** Joins: Masterphi (~Masterphi@user/masterphi)
[08:09:36] *** Joins: Vonter (~Vonter@user/vonter)
[08:09:47] <CrtxReavr> Logging issue: https://bpa.st/J2VQ
[08:09:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:09:52] *** Quits: y1n (~y1n@77.119.211.138.wireless.dyn.drei.com) (Ping timeout: 272 seconds)
[08:10:01] <CrtxReavr> Why isn't my 'ERROR' log getting written?
[08:11:05] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[08:11:24] *** Joins: Betal (~Betal@user/betal)
[08:12:26] <SnoopJ> That program only writes the CRITICAL message because it's the last level you set, but you didn't delete the log from old runs (23:21, 23:25) and you're seeing old output before that.
[08:13:31] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1011:2ee9:c0ad:92f0)
[08:14:54] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:16:23] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[08:16:36] *** Joins: Guest17 (~Guest17@d24-55-202-166.home4.cgocable.net)
[08:17:12] *** Guest17 is now known as trapmau5
[08:17:20] *** Joins: zaquest (~notzaques@5.130.79.72)
[08:17:57] *** evanextreme is now known as evanextreme[away
[08:18:49] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[08:20:27] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:20:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:21:11] *** Joins: fdan (~fdan@207.141.66.99)
[08:21:16] *** Joins: Lazenca (Lazenca@user/lazenca)
[08:21:17] *** Quits: bloody_ (~bloody@user/bloody) (Quit: okluvyabubye)
[08:22:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:22:30] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[08:22:31] *** Quits: kiran (~kiranostr@78.40.148.178) (Quit: Toodle-oo!)
[08:22:51] *** Joins: kiran (~kiranostr@78.40.148.178)
[08:24:57] *** Quits: cowsay_moo_ (~cowsay-mo@2001:ac8:28:900:1026:8eea:d397:b779) (Ping timeout: 250 seconds)
[08:25:00] <dre> SnoopJ, grym - solved it, it's a lot simplier than I thought rather, sealing the mocks so they have less "bad things" about themn
[08:25:03] <dre> https://docs.python.org/3/library/unittest.mock.html#sealing-mocks
[08:25:04] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 272 seconds)
[08:25:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:25:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:25:55] <SnoopJ> dre, huh, interesting
[08:26:07] *** Quits: MrFantastik (~f@2607:f598:bbda:220:3e7f:b84e:3ed2:c5bb) (Quit: Leaving)
[08:26:30] <dre> so now I can do this: https://dpaste.org/Hwrq
[08:26:39] *** Joins: fldme (~fldme@178.49.152.151)
[08:26:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:26:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:27:33] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:28:28] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[08:29:11] <dre> what's it called when you name a function in pascal case so it looks like an class instantiation?
[08:29:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:29:41] <parv> CamelCase
[08:31:33] <matsaman> HardToType
[08:32:01] <parv> betterthanthis
[08:32:02] <matsaman> you mean specifically the action of making a function name look like a class name?
[08:32:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[08:32:11] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[08:32:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:32:34] *** Quits: Armen (~Armen@armen138.com) (Remote host closed the connection)
[08:32:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:33:06] *** Joins: Armen (~Armen@armen138.com)
[08:35:05] *** Joins: bluedust (~bluedust@103.161.144.138)
[08:35:56] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[08:37:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[08:37:49] <jazzy> what's the name of the logical rule that says `not (x and b)` is `(not x) or (not b)`? I forget
[08:38:22] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[08:39:00] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 240 seconds)
[08:40:32] <SnoopJ> jazzy, "operator precedence," documented here: https://docs.python.org/3/reference/expressions.html#operator-precedence
[08:41:11] <matsaman> jazzy: https://en.wikipedia.org/wiki/De_Morgan%27s_laws ?
[08:41:13] *** Quits: AlanMD_ (~AlanMD@86.124.30.89) (Remote host closed the connection)
[08:41:19] <SnoopJ> oh, oops
[08:41:20] <jazzy> right matsaman that's the one
[08:41:25] * SnoopJ misread the question
[08:41:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:41:34] <jazzy> it's all good haha
[08:41:39] <SnoopJ> think that means I've had enough computer for the day
[08:41:44] <matsaman> I misread a question once, now I'm stuck with this nick forever
[08:41:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[08:42:02] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[08:42:32] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[08:42:51] * parv remembered only the "De" part & went searching, to find https://plato.stanford.edu/entries/algebra-logic-tradition/ among others
[08:42:57] *** Joins: blackleitus (~blackleit@189.195.195.100)
[08:43:56] *** Joins: savolla (~quassel@84.44.28.28)
[08:44:58] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[08:45:02] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[08:45:02] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[08:45:02] *** Joins: JordiGH (~jordi@user/jordigh)
[08:45:03] <matsaman> I bet he was fun at parties
[08:45:17] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:46:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:47:00] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:47:27] *** Joins: jtj90 (~jtj90@2607:fb90:b2ae:985a:7ce2:24dd:b07:84ed)
[08:47:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:49:14] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:50:48] *** Joins: navigator (~Navigator@047-229-046-254.res.spectrum.com)
[08:51:19] <jazzy> Boolean algebra might've been one of the most boring cs courses I've ever taken
[08:51:25] <jazzy> that and sql
[08:52:05] <matsaman> I know why boolean algebra hasn't changed much
[08:52:11] <matsaman> don't know what SQL's excuse is =D
[08:52:17] <jazzy> haha
[08:52:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[08:52:31] *** Quits: navigator (~Navigator@047-229-046-254.res.spectrum.com) (Client Quit)
[08:52:56] *** Quits: AnimalFarmPig (~quassel@user/animalfarmpig) (Ping timeout: 272 seconds)
[08:54:08] *** Joins: navigator (~Navigator@2605:6440:3008:a001::1fa)
[08:54:11] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[08:54:30] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:56:00] *** Quits: tristan_ (~tristan@223.62.162.126) (Remote host closed the connection)
[08:56:19] *** Joins: tristan_ (~tristan@223.62.162.126)
[08:56:25] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d5c1:86c3:2258:8392)
[08:58:29] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[08:59:01] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[08:59:42] <CrtxReavr> I had a 7th grade math teacher that taught us boolean algrebra.
[08:59:54] <matsaman> rad
[09:00:50] <CrtxReavr> Back in. . . '81 or '82.
[09:01:05] <matsaman> it's such an amazing hack
[09:01:07] *** Joins: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net)
[09:01:12] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:01:29] <CrtxReavr> It is pretty amazing what you can store with just zeros & ones.
[09:01:31] <amogorkon> hi
[09:01:55] <matsaman> hi amo
[09:02:04] <amogorkon> i think i'm back from discord for good :p
[09:02:13] <matsaman> discord is pretty weird
[09:02:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:02:20] <matsaman> and slow
[09:02:41] <amogorkon> moderation is weird, too
[09:03:13] <matsaman> moderation is pretty weird most places, but
[09:03:23] <matsaman> I can't say I've spent enough time on discord to experience moderation
[09:03:58] <amogorkon> the ability to delete msgs without warning or means to complain is a big invitation for power abuse
[09:04:19] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[09:04:34] <CrtxReavr> It's a gaming chat/voice app. . . what were you expecting?
[09:05:00] <CrtxReavr> I mean, I use it to interact with some gaming communities, but with my eyes wide open.
[09:05:01] <amogorkon> on the python discord? something more.. pythonic
[09:05:02] *** Joins: dvx (~dvx@5.181.92.64)
[09:05:23] <CrtxReavr> Though, really for in-game voice, I prefer mumble/murmur.
[09:05:39] <CrtxReavr> I can run my own damned server.
[09:06:02] <amogorkon> my motivation to build my own communication network/system has grown considerably :p
[09:06:04] <matsaman> amogorkon: oh sure
[09:06:07] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[09:06:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:06:25] <matsaman> amogorkon: you want IRC but with markdown? =P
[09:06:36] <amogorkon> hrhrhr.. you can read my mind
[09:06:43] <meejah> and emoji!
[09:06:48] <matsaman> meejah: haha, yeah
[09:06:57] <meejah> ;) just doesn't cut it anymore
[09:07:01] <CrtxReavr> WebEx Teams already supports markdown.
[09:07:03] <matsaman> the problem that I always have with that approach is that the code you share takes up way too much space
[09:07:05] <CrtxReavr> And emojis.
[09:07:12] <matsaman> like IRC when flooding pastes is allowed
[09:07:22] <matsaman> it should be 100% collapsed by default
[09:07:27] <matsaman> or it will always slow down communication
[09:07:35] <amogorkon> <matsaman> it should be 100% collapsed by default <- THAT
[09:07:55] <matsaman> you can click on it to see it if you want, just like a pastebin link, only built-in because why not
[09:07:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:07:57] <CrtxReavr> I *HATE* threaded chat platforms.
[09:08:09] <CrtxReavr> If I wanted threads, I'd visit a forum, not a chat.
[09:08:13] <matsaman> everything gets so so slow
[09:08:18] <matsaman> look at how fast we're communicating here, it's bananas
[09:08:25] *** Joins: mat001 (~mat001@72.28.108.216)
[09:08:39] <amogorkon> the slowmode is excruciating
[09:09:21] <amogorkon> <CrtxReavr> I *HATE* threaded chat platforms <- and i hate channels. lets have #keywords you may or may not filter?
[09:09:23] <matsaman> I bet you could tweak mattermost to be pretty close to what you want
[09:10:23] <matsaman> I mean, I bet you could tweak it to be 100% what you want, but pretty close with little effort
[09:10:35] <amogorkon> i had a vision of a tabular chat of some kind, where you see matrix-like chats happening in realtime and you can zoom in or out
[09:10:36] <CrtxReavr> amogorkon, use telnet as an IRC client. . . you'll see all channels in one terminal.
[09:10:41] <matsaman> although I'm sure its code is beastly, though I haven't looked at it
[09:10:49] <CrtxReavr> Sounds like, you just want twitter.
[09:10:50] <matsaman> gitlab's issue trackers are pretty out of control
[09:11:11] *** Joins: bahamas (~lucian@84.232.140.52)
[09:11:13] <amogorkon> <CrtxReavr> Sounds like, you just want twitter. <- no thanks :p
[09:11:22] <matsaman> you want sub-channels like discord?
[09:11:26] <amogorkon> no
[09:11:50] <matsaman> you want a taggedFS for IRC topics
[09:12:01] <amogorkon> something like that
[09:12:24] <matsaman> channels with one more dimension of metadata
[09:12:31] <matsaman> that'd be nice
[09:12:41] <amogorkon> yes!
[09:12:47] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[09:13:00] <matsaman> you could check on all the browser channels via a single tag
[09:13:15] <matsaman> or all the dataviz chans
[09:13:38] <matsaman> I think that would only be a small convenience, but
[09:13:42] <matsaman> why not, software is about convenience
[09:14:12] <CrtxReavr> Been using IRC since '91. . . like it just fine.
[09:14:46] <sgt_chuckles> can anyone recommend a good library for parsing/linting avro schema files?
[09:15:03] <CrtxReavr> Un familiar.
[09:15:13] <CrtxReavr> What's the format?
[09:15:15] <CrtxReavr> XML?
[09:15:29] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Quit: Leaving)
[09:16:11] <sgt_chuckles> json
[09:16:17] <sgt_chuckles> but avro specification
[09:16:21] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[09:16:24] <amogorkon> never heard of it
[09:17:10] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[09:17:30] <CrtxReavr> https://stackoverflow.com/questions/59867835/given-arvo-schema-and-a-json-array-how-to-convert-them-to-a-list-of-avro-generi
[09:17:34] <CrtxReavr> Just looks like JSON.
[09:18:17] <CrtxReavr> you can ``stuff_dict = json.loads(string_of_json)``
[09:18:54] <CrtxReavr> Which will give you a dictionary of the JSON data. . . then write your own arvo parser, whatever that would be.
[09:19:20] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[09:20:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[09:21:48] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:488f:4fae:ee7d:89e0)
[09:22:49] *** Joins: _navigator (~Navigator@2605:6440:3008:a001::1fa)
[09:22:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:23:46] *** Quits: _navigator (~Navigator@2605:6440:3008:a001::1fa) (Client Quit)
[09:24:03] *** Joins: kts (~kts@103.73.237.179)
[09:24:10] <sgt_chuckles> i basically want to validate data in the .avsc file to make sure schemas follow avro specification: https://avro.apache.org/docs/current/spec.html#schemas
[09:24:30] *** Quits: navigator (~Navigator@2605:6440:3008:a001::1fa) (Remote host closed the connection)
[09:25:16] <sgt_chuckles> problem is, the fields in some schemas can refer to other schemas, so i'd like to be able to verify that refered external schemas exist.
[09:25:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:25:48] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[09:26:16] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:26:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:27:24] <CrtxReavr> log4jwhat?
[09:30:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:30:29] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) ()
[09:30:38] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Read error: Connection reset by peer)
[09:30:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:31:45] *** Joins: smoke (~smoke@user/smoke)
[09:33:25] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:33:48] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[09:35:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:36:59] *** Quits: dvx (~dvx@5.181.92.64) (Ping timeout: 256 seconds)
[09:37:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:37:25] *** Quits: tristan_ (~tristan@223.62.162.126) (Remote host closed the connection)
[09:37:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[09:37:49] *** Joins: tristan_ (~tristan@223.62.162.126)
[09:39:10] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:39:31] *** Joins: mexen (uid495612@user/mexen)
[09:40:42] *** Joins: han-solo (~hanish@user/han-solo)
[09:41:00] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[09:41:10] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5) (Quit: My laptop has gone to sleep. Bye!)
[09:41:28] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[09:41:35] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[09:41:43] *** Joins: vanessa (~vanessa@103.160.128.7)
[09:43:01] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[09:43:19] <dre> I never know if what I'm doing is good or not xD
[09:43:35] *** Quits: _0ne (~one@user/0ne/x-2101768) (Ping timeout: 250 seconds)
[09:44:28] *** Joins: noteness (~noteness@user/noteness)
[09:44:58] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[09:48:23] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[09:48:58] <dre> I have this mypy issue:      List item 0 has incompatible type "Type[BillingAddress]"; expected "StatementComponent"  [list-item]
[09:49:12] <dre> but BillingAddress is derived from StatementComponent
[09:49:29] <dre> and I think this is where if I made it [BillingAddress()] mypy would stop complaining;
[09:49:41] <dre> is there a way i can stop mypy from complaining other than that?
[09:49:56] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Ping timeout: 272 seconds)
[09:52:34] *** Quits: kts (~kts@103.73.237.179) (Quit: Konversation terminated!)
[09:52:55] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[09:53:18] *** Quits: fldme (~fldme@178.49.152.151) (Quit: Client closed)
[09:57:38] *** Joins: funhouse (~funhouse@user/funhouse)
[10:00:42] *** Quits: dre (~dre@101.191.49.59) (Ping timeout: 272 seconds)
[10:01:27] *** Joins: upsala (~zcb@185.209.196.166)
[10:02:49] *** Joins: evanextreme (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5)
[10:03:09] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[10:04:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:05:48] *** Joins: sh0v (~sh0v@47-216-93-172.bhcycmtk01.res.dyn.suddenlink.net)
[10:06:04] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[10:06:19] *** Quits: thegtg (~the_gtg@103.79.105.132) (Quit: Lost terminal)
[10:07:00] *** Quits: junebug (~junebug@2600:1700:3db0:2540:975d:5280:dc95:7b4e) (Quit: Leaving)
[10:07:54] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:58aa:23ac:af43:136b)
[10:07:55] *** evanextreme is now known as evanextreme[away
[10:07:55] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5) (Quit: My laptop has gone to sleep. Bye!)
[10:08:33] *** Joins: thevishy (~Nishant@2405:201:f005:c007:c978:2cb1:53a0:d8f2)
[10:08:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:09:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:09:36] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[10:09:50] *** Joins: rvalue (~rvalue@user/rvalue)
[10:10:57] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[10:12:41] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[10:14:19] *** Quits: sh0v (~sh0v@47-216-93-172.bhcycmtk01.res.dyn.suddenlink.net) ()
[10:15:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:15:54] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 250 seconds)
[10:16:04] *** Joins: ravan (~ravan@user/ravan)
[10:16:05] *** Joins: angelacrust (~angelacru@182.64.13.254)
[10:17:48] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:488f:4fae:ee7d:89e0) (Quit: Client closed)
[10:18:00] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[10:18:27] *** Joins: djapo (~archangel@user/djapo)
[10:20:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:23:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:23:29] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[10:25:19] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[10:26:16] *** Joins: hanzo (uid532183@user/hanzo)
[10:26:32] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:26:33] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[10:27:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:27:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:27:56] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[10:28:57] *** Quits: angelacrust (~angelacru@182.64.13.254) (Quit: Client closed)
[10:29:00] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:29:50] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[10:30:16] *** Cyp_ is now known as Cyp
[10:30:59] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.19)
[10:32:19] <stewie925> hey guys any multiprocessing pool.starmap experts here?
[10:32:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[10:32:36] <matsaman> what if there were
[10:34:31] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:34:55] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 240 seconds)
[10:35:09] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:35:40] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[10:37:28] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[10:37:54] *** Joins: manti7 (~manti7@176.10.104.94)
[10:38:25] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[10:39:06] *** Joins: angelacrust (~angelacru@182.64.13.254)
[10:39:26] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:39:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[10:40:45] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[10:42:18] <TML> Nothing, it would seem
[10:42:30] <stewie925> here's the code listing and the issue - https://bpa.st/PP2A
[10:42:47] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[10:44:24] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[10:45:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[10:45:22] <matsaman> https://stackoverflow.com/questions/1675766/combine-pool-map-with-shared-memory-array-in-python-multiprocessing
[10:45:53] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:46:00] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[10:46:00] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 252 seconds)
[10:47:34] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[10:51:14] <stewie925> sorry, couldnt understand the solution
[10:51:27] <matsaman> check the other answers, like
[10:52:01] <matsaman> [The problem I see is that Pool doesn't support pickling shared data through its argument list. That's what the error message means by "objects should only be shared between processes through inheritance". The shared data needs to be inherited, i.e., global if you want to share it using the Pool class.]
[10:53:49] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:54:32] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 272 seconds)
[10:54:36] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[10:55:39] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:55:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:56:12] *** Quits: botfathe1 (~botfather@shell1.dds.nl) (Quit: -)
[10:56:29] *** Joins: botfather (~botfather@shell1.dds.nl)
[10:56:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:58:48] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 250 seconds)
[10:59:02] *** Joins: andreasbuhr (~quassel@p549dba39.dip0.t-ipconnect.de)
[10:59:45] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d5c1:86c3:2258:8392) (Ping timeout: 252 seconds)
[11:00:00] *** Quits: tristan_ (~tristan@223.62.162.126) (Remote host closed the connection)
[11:00:18] *** Quits: jamiejackson (~jamiejack@131.106.140.145) (Ping timeout: 252 seconds)
[11:00:22] *** Joins: DK3 (~DK3@user/DK3)
[11:00:23] *** Joins: tristan_ (~tristan@223.62.162.126)
[11:00:45] *** Joins: digilink (~digilink@user/digilink)
[11:00:48] *** Joins: efil4cri_ (~efil4cri@gateway/tor-sasl/wfnintr)
[11:00:55] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 240 seconds)
[11:02:10] <stewie925> yeah, I changed the shared_number into a global variable, still getting the same error
[11:03:01] *** Quits: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[11:03:02] *** Quits: rigid (~rigid@user/rigid) (Ping timeout: 260 seconds)
[11:03:22] *** Joins: ravish0007_ (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[11:03:24] *** Quits: vanessa (~vanessa@103.160.128.7) (Ping timeout: 272 seconds)
[11:03:25] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[11:04:10] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[11:04:21] <stewie925> actually, now I am seeing this problem - "Lock objects should only be shared between processes through inheritance"
[11:04:34] <stewie925> so I was able to resolve the shared_number issue by making it global
[11:05:04] *** Joins: ravan (~ravan@user/ravan)
[11:05:06] *** Joins: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com)
[11:05:09] *** Joins: JordiGH (~jordi@user/jordigh)
[11:05:12] *** Joins: gusto (~Augustus@109.255.100.54)
[11:05:16] *** Joins: vanessa (~vanessa@103.160.128.7)
[11:05:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[11:06:08] <stewie925> ahhh... cant pass multiprocessing Lock to pool methods, argh
[11:06:13] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:07:27] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[11:08:17] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:08:22] *** Joins: Andy_Flatline (~Andy_flat@141.98.252.252)
[11:09:29] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[11:10:25] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:ec60:588d:8895:97a7)
[11:10:49] *** Joins: rigid (~rigid@user/rigid)
[11:11:40] *** Joins: rajkosto (~rajkosto@109-93-41-254.dynamic.isp.telekom.rs)
[11:11:53] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[11:11:56] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:12:13] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Read error: Connection reset by peer)
[11:12:31] *** Joins: Vonter (~Vonter@user/vonter)
[11:13:11] *** Joins: finsternis (~X@23.226.237.192)
[11:13:26] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:14:08] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:58aa:23ac:af43:136b) (Quit: Client closed)
[11:14:16] *** Joins: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr)
[11:15:44] *** Joins: Pickchea (~private@user/pickchea)
[11:15:48] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Ping timeout: 240 seconds)
[11:16:09] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[11:17:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.130)
[11:18:28] *** Quits: Orimendix (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[11:20:42] *** Joins: jtj9087 (~jtj90@2607:fb90:b27a:c8c5:7ce2:24dd:b07:84ed)
[11:21:37] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 240 seconds)
[11:23:31] *** Quits: jtj90 (~jtj90@2607:fb90:b2ae:985a:7ce2:24dd:b07:84ed) (Ping timeout: 256 seconds)
[11:23:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:24:48] *** Joins: kosh (~kosh@user/kosh)
[11:25:24] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[11:25:38] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[11:26:41] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:26:55] *** Quits: jtj9087 (~jtj90@2607:fb90:b27a:c8c5:7ce2:24dd:b07:84ed) (Ping timeout: 256 seconds)
[11:28:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[11:30:00] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[11:31:20] *** Joins: palasso (~palasso@user/palasso)
[11:32:03] *** Joins: MajorBiscuit (~MajorBisc@c-001-018-023.client.tudelft.eduvpn.nl)
[11:34:33] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:34:36] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[11:35:38] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:36:32] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:38:02] *** Joins: mrwick (~mrwick@user/mrwick)
[11:38:29] *** Joins: Vonter (~Vonter@user/vonter)
[11:39:17] *** Quits: gossie (~gossie@2001:1c02:11e:c700:c824:f8ed:a210:e662) (Quit: = "bye bye")
[11:39:25] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[11:40:08] *** Quits: hamms (~hams@73.232.205.0) (Ping timeout: 272 seconds)
[11:41:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[11:44:11] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:45:39] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[11:46:48] *** Joins: xa0s (~xa0s@mab.sdf.org)
[11:47:35] *** Parts: pragma- (~chaos@user/pragmatic-chaos) (Bye!)
[11:48:36] *** Quits: apteryx (~maxim@dsl-205-236-230-188.b2b2c.ca) (Ping timeout: 240 seconds)
[11:50:15] *** Joins: dme86 (~dan@user/dan86)
[11:50:50] *** Joins: ubert (~Thunderbi@p200300ecdf09942d5bc34c7f8597781f.dip0.t-ipconnect.de)
[11:50:54] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 252 seconds)
[11:50:54] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Ping timeout: 252 seconds)
[11:51:29] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:52:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:52:36] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[11:53:00] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[11:53:20] *** Joins: rendar (~rendar@user/rendar)
[11:54:07] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[11:56:23] *** Quits: tristan_ (~tristan@223.62.162.126) (Ping timeout: 256 seconds)
[11:56:25] *** Joins: Vonter (~Vonter@user/vonter)
[11:57:57] *** Joins: commiemuslim (~communist@bras-base-tnhlon4048w-grc-63-67-70-22-70.dsl.bell.ca)
[11:57:58] *** Joins: adham (~adham@37.237.47.40)
[11:58:00] <commiemuslim> Hello
[11:58:00] *** Joins: yotsuba-chan (~yotsuba@89-138-112-148.bb.netvision.net.il)
[11:58:23] <adham> Hey
[11:59:13] *** Joins: wolfshappen (~waff@irc.furworks.de)
[11:59:52] *** Quits: wolfshappen (~waff@irc.furworks.de) (Client Quit)
[12:00:37] *** Quits: yotsuba (~yotsuba@89-138-112-148.bb.netvision.net.il) (Ping timeout: 256 seconds)
[12:01:51] *** Joins: apteryx (~maxim@dsl-149-79.b2b2c.ca)
[12:01:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:02:30] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:02:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[12:03:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:03:44] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[12:03:45] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[12:03:48] *** Quits: yotsuba-chan (~yotsuba@89-138-112-148.bb.netvision.net.il) (Ping timeout: 240 seconds)
[12:05:43] *** Joins: wolfshappen (~waff@irc.furworks.de)
[12:06:02] *** Joins: Vonter (~Vonter@user/vonter)
[12:06:18] *** Joins: monkey_ (~monkey@122.161.50.191)
[12:06:35] <monkey_> I've a problem with i'm not being able to solve forom many hours
[12:07:43] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[12:07:49] *** Joins: cosimone (~user@93-47-231-171.ip115.fastwebnet.it)
[12:08:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[12:08:34] *** Joins: sh0v (~sh0v@47-216-93-172.bhcycmtk01.res.dyn.suddenlink.net)
[12:08:34] *** Joins: BillyZane2 (~BillyZane@185.202.221.61)
[12:09:59] *** Quits: BillyZane (~BillyZane@185.202.221.60) (Ping timeout: 256 seconds)
[12:11:31] *** Joins: darksun (~darksun@user/darksun)
[12:11:34] *** Joins: TGone (~TGone@66.42.67.197)
[12:12:21] <monkey_> the problem is: "Consider two user inputs M and N ( Both +ve ) can you write a python program that will count all the numbers ( only with M digits ) which are divisible by N.. For example input, M= 2 and N =& then output will be 13
[12:12:27] <monkey_> N=7
[12:12:31] <monkey_> How to do it
[12:13:14] *** Quits: TGone (~TGone@66.42.67.197) (Client Quit)
[12:14:12] *** Quits: ubert (~Thunderbi@p200300ecdf09942d5bc34c7f8597781f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:15:17] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d) (Read error: Connection reset by peer)
[12:16:11] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:995d:44ee:22f0:1482)
[12:17:05] *** Joins: slav0nic (slav0nic@python.su)
[12:17:46] *** Joins: vladoski (~vladoski@2001:b07:add:d406:907e:4f:b57f:11c2)
[12:19:04] <Repiphany> monkey_: (10 ** m - 1) // n - math.ceil((10 ** (m - 1)) / n) + 1
[12:19:16] *** Joins: TGone (~TGone@66.42.67.197)
[12:19:54] *** Joins: et_ (~et@user/et)
[12:20:29] *** Quits: Andy_Flatline (~Andy_flat@141.98.252.252) (Quit: Andy_Flatline)
[12:21:09] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[12:21:09] *** et_ is now known as et
[12:21:29] *** Quits: TGone (~TGone@66.42.67.197) (Client Quit)
[12:21:57] *** Quits: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com) (Quit: WeeChat 3.4)
[12:22:36] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 240 seconds)
[12:22:49] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:23:51] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[12:24:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:24:28] *** Quits: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[12:25:14] *** Joins: TGone (~quassel@110.182.254.65)
[12:26:16] *** Quits: TGone (~quassel@110.182.254.65) (Client Quit)
[12:27:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:28:16] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[12:28:25] *** Joins: vladoski_ (~foo@2001:b07:add:d406:45f4:7b92:7e74:f5c4)
[12:29:00] *** Joins: bindu (~bindu@user/bindu)
[12:29:24] <monkey_> One more,
[12:29:36] <Repiphany> I guess that's wrong if N >= 10**m
[12:29:39] *** Quits: vladoski_ (~foo@2001:b07:add:d406:45f4:7b92:7e74:f5c4) (Client Quit)
[12:29:50] <monkey_> Given a positive integer; generate all binary strings that contains both 0's and 1's in equal number
[12:29:58] <monkey_> like for 2 it is 10, 01
[12:30:07] <monkey_> how do we do it
[12:30:08] *** Quits: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba) (Quit: You have been kicked for being idle)
[12:30:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:30:21] *** Joins: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba)
[12:30:28] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:30:33] *** Parts: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba) ()
[12:31:05] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[12:31:19] *** Quits: sh0v (~sh0v@47-216-93-172.bhcycmtk01.res.dyn.suddenlink.net) ()
[12:31:36] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:32:19] *** Joins: bindu (~bindu@user/bindu)
[12:33:56] *** Joins: nomic (~nomic@185.217.117.193)
[12:34:55] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:35:17] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:35:24] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[12:35:37] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:35:51] <Repiphany> Could use recursion
[12:35:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[12:36:37] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[12:36:44] <monkey_> um, i tried but didn't work Repiphany
[12:36:52] <monkey_> i couldnt do it :(
[12:36:58] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[12:37:06] <monkey_> jru Wamttpje;[
[12:37:12] <monkey_> HEY WANT TO HELP
[12:37:14] <monkey_> I NEED U LMAO
[12:37:26] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[12:37:42] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (Remote host closed the connection)
[12:37:51] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[12:38:45] *** dcaro_away is now known as dcaro
[12:38:50] *** Joins: manti7 (~manti7@176.10.104.94)
[12:38:53] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[12:39:15] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 240 seconds)
[12:39:57] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:40:44] *** Joins: wawr (~w@2607:fb91:1503:5023:8c09:2e17:3405:e225)
[12:43:07] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 256 seconds)
[12:43:09] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[12:43:10] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[12:43:37] *** Joins: kevr (~kevr@user/kevr)
[12:43:54] *** Joins: voidsync (~void@user/voidsync)
[12:44:53] *** Joins: synbiose (~synbiose@user/synbiose)
[12:45:11] <monkey_> how to do it >  Given a positive integer; generate all binary strings that contains both 0's and 1's in equal number.. for to it is 10,01
[12:46:00] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[12:46:36] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:47:00] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[12:48:36] <deniska> monkey_: itertools probably has something you may use for that
[12:50:13] *** Quits: Ninpo (~Ninpo@leviathan.qap.la) (Changing host)
[12:50:13] *** Joins: Ninpo (~Ninpo@user/ninpo)
[12:50:54] *** Joins: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr)
[12:52:12] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[12:52:20] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 272 seconds)
[12:52:45] <Pi-sistance> i still dont see how z isnt a generic int, when i : z=int
[12:53:15] <Repiphany> int is a class
[12:53:21] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:53:25] <Pi-sistance> its type is type, which makes me feel even mroe that z is a generic int
[12:53:28] <Pi-sistance> yeah
[12:53:53] <Repiphany> You're just giving a different name to the class, not making an instance of it
[12:54:05] *** Joins: shad (~shad@user/shad)
[12:54:06] <Pi-sistance> you could say that the class of int, is a gerneic int
[12:54:13] <Repiphany> No
[12:54:23] <Pi-sistance> ok
[12:54:43] <deniska> Pi-sistance: it's `foo: SomeClass = some_instance`
[12:54:47] <deniska> `int` is an instance of `type`
[12:55:09] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:56:05] <jinsun> Pi-sistance: if you want random integers, random module has randint function for that
[12:56:09] <monkey_> it is not working
[12:56:12] <monkey_> i tried it 10 times
[12:56:17] <monkey_> even my python teacher could not do it
[12:56:36] <Pi-sistance> so a specific named int is an instance of type, right
[12:56:52] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d5c1:86c3:2258:8392)
[12:57:22] <grawity> wat
[12:57:26] <jinsun> not sure what you mean by "specific named int"
[12:57:29] *** Joins: dme86 (~dan@user/dan86)
[12:57:40] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[12:57:41] <jinsun> the builting thing called "int" is a type yes
[12:57:53] <jinsun> s/builting/builtin
[12:59:00] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[12:59:11] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[12:59:40] <Pi-sistance> ok, ok i ust had to google instance to make sure. ty.
[13:00:18] <Pi-sistance> i beeter write this down so i never mistake it again. think i have an example in anotebook elsewhere, but need my notes in my binder.
[13:02:28] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[13:02:45] <Pi-sistance> did anyone realize why numpy returns an array's dtype IFF the array is a string? seems odd
[13:02:55] <Pi-sistance> not important,  judt vurious
[13:03:10] *** Joins: et (~et@user/et)
[13:04:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[13:04:12] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 240 seconds)
[13:04:59] <mawk> monkey_: itertools.permutations(n * '0' + n * '1', 2*n) will give all such strings of length 2*n
[13:05:05] <mawk> that's just one way to do it
[13:05:08] <mawk> not the most efficient probably
[13:05:35] <Pi-sistance> it does it for a mixture too as long as a string is in at least one dimension of the array
[13:05:47] <mawk> doing it recursively is probably easier
[13:06:04] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[13:06:48] *** nikos_ is now known as nikos
[13:07:09] *** Joins: et_ (~et@user/et)
[13:07:38] *** Joins: weedmic (~weedmic@5.102.235.240)
[13:08:03] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[13:08:03] *** et_ is now known as et
[13:08:12] <monkey_> lol its very hard
[13:08:30] <mawk> I gave you a very easy solution
[13:08:30] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:10:07] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[13:11:15] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[13:11:24] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[13:11:37] *** Quits: wawr (~w@2607:fb91:1503:5023:8c09:2e17:3405:e225) (Ping timeout: 240 seconds)
[13:12:21] *** Joins: chele (~chele@user/chele)
[13:12:25] <mawk> to do it recursively you could keep track of how many 0 and how many 1 you still have to distribute, and the base case is when you have 0 of each to distribute and then you stop
[13:13:38] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[13:14:01] *** Quits: capn (~capn@user/capn) (Ping timeout: 256 seconds)
[13:14:04] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:14:16] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:14:39] *** Joins: plastico (~plastico@neomutt/plastico)
[13:16:23] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:18:08] *** Joins: et_ (~et@user/et)
[13:18:46] <bjs> Pi-sistance: I’m still not sure what you’re trying to do for “an arbitrary int”
[13:18:49] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[13:18:49] *** et_ is now known as et
[13:19:44] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:20:19] <bjs> Pi-sistance: z=42 assigns the 42 object the name “z”. 42 is an int. z=int assigns the int class to z. the int class is a class, it’s not an int itself.
[13:20:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[13:21:15] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[13:23:25] <monkey_> madarchod bhen k lod
[13:23:34] <monkey_> madarchod bhen k lode
[13:23:40] <monkey_> teri maa ki chut
[13:23:46] <monkey_> teri maa ki chut
[13:23:50] <monkey_> madarchod randi chutiye
[13:23:55] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[13:24:13] *** Quits: txhc4lif- (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[13:24:17] <monkey_> Teri maa chod dunga me bhen k lode sale chakke chutiye
[13:24:25] <monkey_> aukat nai hain tumhari mere samne
[13:24:36] <monkey_> 10000 ki salary wale chutiye
[13:24:43] <Pi-sistance> yeah im fine with it bjs, just had to clarify some terms thanks.
[13:24:45] <bjs> monkey_: wrong channel?
[13:24:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:25:03] <Pi-sistance> i need a translation now monkey lol
[13:25:08] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[13:25:09] <monkey_> i just cursed
[13:25:15] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[13:25:18] <monkey_> wanted to know if anyone's from my native country or not
[13:25:28] <bjs>  monkey_: to do the task you wanted you take the string 1111…0000 and compute all combinations
[13:25:35] <monkey_> yeah
[13:25:40] <rendar> monkey_, which is?
[13:25:44] <Pi-sistance> cambodia?
[13:25:48] <monkey_> uganda
[13:25:53] <Pi-sistance> prob not, why am  guessing haha'
[13:26:07] <Pi-sistance> hmm, close
[13:26:19] <bjs> close? :p
[13:26:20] * Pi-sistance checks if its really close on maps
[13:26:48] <Pi-sistance> doh
[13:27:19] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 256 seconds)
[13:27:22] *** Joins: adham_ (~adham@37.237.47.16)
[13:28:11] *** Quits: adham (~adham@37.237.47.40) (Ping timeout: 256 seconds)
[13:28:11] *** Joins: et (~et@user/et)
[13:28:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:29:31] * Pi-sistance checks to see if any african or asian countries somehow have a shared root language, to save face
[13:29:50] * monkey_ test
[13:30:04] * monkey_ well i lied im indian
[13:30:12] *** Joins: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net)
[13:30:13] <monkey_> can u read it
[13:30:27] *** Quits: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[13:30:43] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:30:48] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[13:31:00] <interestingname> I read all of it
[13:31:29] <interestingname> irc me bhi chutiyapa lmao
[13:32:01] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[13:32:15] <monkey_> bhai ye gore bhen k lode hote h
[13:32:36] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 240 seconds)
[13:32:42] *** Quits: angelacrust (~angelacru@182.64.13.254) (Quit: Client closed)
[13:32:50] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:32:50] <monkey_> andi bandi sandi, angrejo ki mummy randi
[13:32:53] <interestingname> ab chup chap python ki baat kar
[13:32:58] <monkey_> ok sorry
[13:33:26] *** Quits: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[13:34:24] *** Quits: monkey_ (~monkey@122.161.50.191) (Quit: Leaving)
[13:37:18] *** Joins: stikx (~stikx@2604:3d08:7a7e:a900::ed8)
[13:37:48] *** Quits: jpic (~jpic@82.142.6.174) (Ping timeout: 240 seconds)
[13:39:16] *** Joins: lxdr (~lxdr@user/lxdr)
[13:39:46] *** Joins: jpic (~jpic@188.95.144.209)
[13:39:48] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[13:41:57] *** Joins: georgios (~georgios@user/georgios)
[13:42:33] *** Quits: rajkosto (~rajkosto@109-93-41-254.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[13:42:36] *** Quits: georgios (~georgios@user/georgios) (Client Quit)
[13:44:28] *** Joins: klf (~klf@66.220.205.98)
[13:44:57] *** Quits: schumaml (~schumaml@dslb-188-104-168-024.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[13:45:16] <klf> p = re.compile(r'(\d+[^#lL]+)')
[13:46:12] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:47:10] *** Joins: schumaml (~schumaml@dslb-188-104-160-189.188.104.pools.vodafone-ip.de)
[13:47:35] *** Joins: txtsd (~txtsd@user/txtsd)
[13:47:54] <klf> p.match("12l34")
[13:48:17] <klf> <re.Match object; span=(0, 2), match='12'>
[13:48:29] <klf> Why is it matching 12?
[13:48:42] <grawity> why wouldn't it?
[13:48:50] <grawity> the \d+ matches '1' and the [^#lL]+ matches '2'
[13:49:11] *** Joins: dme86 (~dan@user/dan86)
[13:49:41] <grawity> although + is greedy and would match '12' on its own, the regex engine will backtrack if necessary to find a match for [^#lL] as well
[13:49:49] <grawity> if 'backtrack' is the right term
[13:50:03] <klf> grawity so you understand what I had in mind.
[13:50:13] <supakeen> They likely only want a match if it's the entire term.
[13:50:47] *** Joins: paul424 (~tom@ip-5-172-234-95.multi.internet.cyfrowypolsat.pl)
[13:52:40] <jinsun> hmm, re.match(r'(\d+[^#lL]+)', '12134') matches the whole thing
[13:53:07] <bjs> klf: what did you have in mind?
[13:53:13] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:53:46] <klf> bjs, expected \d+ would be greety and would eat up all the digits
[13:53:46] <jinsun> ah no I typed wrong, 1 vs l
[13:53:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[13:54:13] <jinsun> the 3rd character is not a digit in your string
[13:54:49] <klf> jinsun and so I didn't expect a match of the whole pattern\
[13:55:02] <klf> r'(\d+[^#lL]+)'
[13:55:10] <jinsun> oh, so you wanted fullmatch?
[13:55:30] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[13:55:33] *** Joins: kts (~kts@103.73.237.179)
[13:55:54] <jinsun> match matches at the beginning of the string, doesn't require that the whole string matches
[13:56:00] <bjs> klf: maybe you want to add digits to your second part
[13:56:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:56:12] <bjs> so it won’t match any digit
[13:56:41] *** Joins: mdemo (~mdemo@user/mdemo22)
[13:57:03] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d)
[13:57:04] *** Quits: mdemo (~mdemo@user/mdemo22) (Client Quit)
[13:57:40] *** Joins: angelacrust (~angelacru@182.64.13.254)
[13:58:44] *** Joins: mdemo (~mdemo@user/mdemo22)
[13:59:07] *** Quits: upsala (~zcb@185.209.196.166) (Quit: WeeChat 3.4)
[13:59:28] <klf> grawity, re.match(r'(\d+[^#lL]+)', "12l34")  Did I call  the wrong function or I just got regex all wrong.  B/c I always thought \d+ was greedy.
[13:59:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:00:29] <amogorkon> i read there's a new language just for regex
[14:00:36] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:995d:44ee:22f0:1482) (Ping timeout: 240 seconds)
[14:00:55] <klf> shouldn't it stay in the same state if it comes across a digit?
[14:01:17] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d) (Ping timeout: 240 seconds)
[14:01:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[14:01:47] *** Joins: cdown (~cdown@188.214.11.14)
[14:02:19] *** Joins: edd_lc (~edd_lc@85.64.203.19.dynamic.barak-online.net)
[14:02:19] *** Joins: upsala (~zcb@185.209.196.166)
[14:02:55] *** Joins: georgios (~georgios@user/georgios)
[14:03:19] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Quit: kaiseisei)
[14:03:55] <grawity> klf: like I said, the regex engine will backtrack if necessary, to find a better match
[14:04:24] <grawity> klf: especially if the original match is greedy
[14:04:27] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:04:52] <grawity> e.g. r'<.*>' will match '<aaaaaaaaa>'
[14:04:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:05:33] <jinsun> yeah, finding a match gets preference over greedyness
[14:07:21] *** Joins: Vonter (~Vonter@user/vonter)
[14:08:04] *** Quits: trapmau5 (~Guest17@d24-55-202-166.home4.cgocable.net) (Quit: Client closed)
[14:08:07] *** Quits: kts (~kts@103.73.237.179) (Ping timeout: 256 seconds)
[14:08:31] *** Joins: kts (~kts@103.73.237.2)
[14:08:52] <klf> hmm... I am feeling uneasy that all this time I didn't think it works like that. in automaton context, or previous lessons on regex.
[14:09:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[14:09:42] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[14:10:29] *** Joins: dme86 (~dan@user/dan86)
[14:11:25] <klf> is there another function that I can all that exibit/operates in a greedy fashion w/o backtrack?
[14:11:26] <grawity> hmm I guess some regex engines (e.g. those which implement POSIX BRE) don't backtrack as such, but they still have the same behavior, in that they'll still find the "best" match
[14:11:53] *** Joins: Atque (~Atque@user/atque)
[14:12:08] <grawity> I think you really should just exclude \d along with #lL in the regex
[14:12:33] <grawity> not sure exactly what you're trying to match in general, but e.g. \d+[^#lL\d]+
[14:12:39] <klf> okay, how wouldl you write it?
[14:12:59] <grawity> depends on actual requirements (i.e. what's the input and output in practice, not just in this example)
[14:13:02] *** Joins: Ischwitch (~Ingvix@user/ingvix)
[14:13:04] <grawity> I can read minds over IRC but not to this extent
[14:13:13] *** Quits: Ingvix (~Ingvix@user/ingvix) (Ping timeout: 256 seconds)
[14:13:21] *** Ischwitch is now known as Ingvix
[14:14:37] *** Joins: gabagool` (~user@2a01:cb1d:40b:9b00:438b:958f:19c0:f372)
[14:14:58] *** Joins: bahamas (~lucian@84.232.140.52)
[14:15:33] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[14:17:42] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:18:05] *** Joins: dme86 (~dan@user/dan86)
[14:19:21] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[14:22:29] *** Quits: baltazar (~baltazar@178-164-240-26.pool.digikabel.hu) (Remote host closed the connection)
[14:24:10] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[14:24:59] *** Joins: acresearch (~acresearc@user/acresearch)
[14:25:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:26:36] <acresearch> people if i have the following code: https://paste.debian.net/1231213/   i am trying to constructure a np.array from unqeaul lists   how can i fill the gaps with NaN?
[14:26:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:28:29] *** Joins: driib26 (~driib@185.65.135.236)
[14:28:48] *** Joins: Xardas (~Xardas@149.233.51.127)
[14:28:49] *** Quits: fdan (~fdan@207.141.66.99) (Ping timeout: 256 seconds)
[14:28:51] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[14:29:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[14:29:21] <gabagool`> which gaps are you talking about?
[14:29:39] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Ping timeout: 256 seconds)
[14:29:46] *** Joins: baltazar (~baltazar@195.199.251.47)
[14:30:01] *** Joins: nre (~nre@55d42325.access.ecotel.net)
[14:30:13] *** Quits: driib2 (~driib@185.195.233.154) (Ping timeout: 256 seconds)
[14:30:13] *** driib26 is now known as driib2
[14:31:03] <acresearch> gabagool`: x[1]  len=2 while the others len=3   that is the gap
[14:31:10] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[14:32:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[14:32:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:32:28] <gabagool`> there is a function to drop NaN values but I don't think you have one that does the opposite. you can code it yourself though
[14:32:48] <gabagool`> try:
[14:32:49] <Pi-sistance> ir i use raise in a while loop is it supposed to end the loop? becasue i dont want it to!
[14:32:50] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:33:07] <Pi-sistance> the try except blocks dont end the loop
[14:33:37] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[14:34:08] <acresearch> gabagool`: what is the function that drops NaN values? let me try it
[14:34:39] <jinsun> acresearch: one simple way is `np.array([lst  + [np.nan] * (3 - len(lst)) for lst in x])`
[14:34:47] *** Quits: paul424 (~tom@ip-5-172-234-95.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[14:35:18] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:36:10] <acresearch> jinsun: nice that works well
[14:36:13] <jinsun> where that 3 is the max length of the lists, you can calculate that too instead of hardcoding, `max(len(lst) for lst in x)`
[14:36:39] *** Quits: gabagool` (~user@2a01:cb1d:40b:9b00:438b:958f:19c0:f372) (Remote host closed the connection)
[14:36:57] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[14:37:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:37:32] *** Joins: gabagool (~user@2a01:cb1d:40b:9b00:438b:958f:19c0:f372)
[14:37:52] <acresearch> jinsun: ok now a harder question:   now that i have an array with NaN in place of gaps, how can i standerdise it?   when i perform X=(X-np.mean(X))/np.std(X)   i get an all NaN array    it seems the NaN breaks the standardisation
[14:38:27] <acresearch> so I guess, how can i ignore these NaNs from the standerdisation calcualtion?
[14:38:43] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:38:49] *** Quits: edd_lc (~edd_lc@85.64.203.19.dynamic.barak-online.net) (Quit: leaving)
[14:39:02] <Repiphany> np.nanmean and np.nanstd
[14:40:03] <jinsun> ah TIL
[14:40:21] <acresearch> jinsun: ?
[14:40:26] <jinsun> I was going to suggest something like replacing nas with zeros
[14:40:32] *** Joins: godSend23 (~journeyMa@2601:646:8900:6fe0:700e:aa29:d83e:f231)
[14:40:38] <godSend23> hey all
[14:40:39] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[14:40:42] <jinsun> acresearch: Repiphany answered your question
[14:40:52] *** Joins: luciusf1 (~luciusf@46.23.90.165)
[14:43:57] <acresearch> Repiphany: where do i add them?  or replace the mean std that i already have?
[14:44:17] <rendar> could i use pyhton 3.10.2 in production by now?
[14:44:57] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[14:45:08] <acresearch> Repiphany: its ok i think i got it
[14:45:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[14:45:57] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[14:45:58] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[14:46:34] <jinsun> rendar: it is stable, so yes, depends only on the libraries you use, most of them support 3.10 by now
[14:46:39] *** Joins: capn (~capn@user/capn)
[14:48:36] *** Quits: angelacrust (~angelacru@182.64.13.254) (Quit: Client closed)
[14:50:14] <acresearch> jinsun: Repiphany   can you guys check my work?  https://paste.debian.net/1231217/    first without a NaN gap (then standerdised) and the second with a NaN gap (then standerdised)    is this right?   should they be equal?
[14:51:24] <rendar> jinsun, yep
[14:51:39] <jinsun> acresearch: why would they be equal? ignoring nan is not the same as replacing nan with 3, in the first case you have 9 numbers, in the second case you have 8 numbers only
[14:51:43] <rendar> jinsun, if they don't support 3.10 i'll get errors on pip install i presume, right?
[14:52:22] *** Joins: ge0rgios (~georgios@user/georgios)
[14:52:41] <acresearch> jinsun: ah ok,,, so my code it correct? no mistakes? (i tend to make silly mistakes)  :-(
[14:52:57] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 252 seconds)
[14:53:22] *** Joins: cdown_ (~cdown@163.114.131.1)
[14:54:00] <jinsun> rendar: yeah probably, there might be few weird cases that actually don't work with 3.10 but didn't pin down the versions, then you will find out at runtime
[14:54:14] <rendar> ok
[14:54:28] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[14:56:15] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 252 seconds)
[14:56:20] *** cdown_ is now known as cdown
[14:56:35] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[14:56:36] <jinsun> acresearch: depends on what you wanted to do, if you wanted to keep than nan then it is fine, if you wanted to replace nan with something else then not correct
[14:57:04] *** Joins: ivii (~ivan@user/ivii)
[14:57:44] *** Joins: xkuru (~xkuru@user/xkuru)
[14:59:03] <acresearch> jinsun: i want to keep the NaN, :-)
[15:00:03] *** Joins: kaiseisei (~Thunderbi@223.11.82.191)
[15:00:06] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d5c1:86c3:2258:8392) (Ping timeout: 252 seconds)
[15:00:32] *** Quits: klf (~klf@66.220.205.98) (Quit: Leaving)
[15:01:36] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[15:02:16] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:02:20] *** Joins: bahamas (~lucian@84.232.140.52)
[15:03:29] *** Joins: rhagu (~rhagu@ipbcc261cb.dynamic.kabel-deutschland.de)
[15:03:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:04:13] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 256 seconds)
[15:04:21] *** Joins: xkuru (~xkuru@user/xkuru)
[15:04:51] *** Parts: godSend23 (~journeyMa@2601:646:8900:6fe0:700e:aa29:d83e:f231) (Leaving)
[15:05:57] <Pi-sistance> my teacher managed to use raise in a  while loop WITHOUT breaking the loop, I understand why his code could do that and mine couldnt..
[15:05:57] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:06:16] <Pi-sistance> its extremely annyoing, i cant follow the logic, unless
[15:07:14] *** Quits: kaiseisei (~Thunderbi@223.11.82.191) (Ping timeout: 272 seconds)
[15:07:58] <amogorkon> <Pi-sistance> my teacher managed to use raise in a  while loop WITHOUT breaking the loop, I understand why his code could do that and mine couldnt.. <- code?
[15:08:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:08:29] <Pi-sistance> only difference is mine was within a simple loop and his was embedded in a try except block that itself was within a while loop
[15:08:49] <Pi-sistance> ok i paste ty
[15:08:53] *** Joins: nomic (~nomic@185.217.117.193)
[15:09:48] <jinsun> well if you didn't catch the exception, it is kinda obvious why the loop would end
[15:09:55] <amogorkon> yeah..
[15:10:28] <amogorkon> it's more mindboggling to return from a function without returning
[15:10:39] <rendar> https://bpa.st/DZ2Q -- i have this code, and that .run() function raises an exception but it never prints that TTTT or TYTYTY string, how come? any clue?
[15:11:45] <Pi-sistance> jinsun i did catch the exception though, and it shouldnt end the loop
[15:11:51] <Pi-sistance> https://bpa.st/C4LQ
[15:11:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:12:02] <Pi-sistance> im sorry if im being dense again :/
[15:12:39] <jinsun> you didn't catch the ValueError you raised in line 11
[15:13:00] <jinsun> you only caught the valueerror that would have been raised by line 7
[15:14:06] <amogorkon> tbh i don't like your teacher's code either
[15:14:46] <Pi-sistance> well its probably noob friendly and not an example of optimized code
[15:14:50] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[15:14:59] <amogorkon> not only because it violates pep8
[15:15:17] *** Quits: kts (~kts@103.73.237.2) (Quit: Konversation terminated!)
[15:15:21] <Pi-sistance> jinsun, the printed message is the one that indicates i do catch the value error in line 11 , if i enter a negative digit
[15:15:28] <amogorkon> i don't find it very readable either
[15:16:02] *** Quits: rhagu (~rhagu@ipbcc261cb.dynamic.kabel-deutschland.de) (Quit: Leaving)
[15:17:09] <Pi-sistance> if i caight the error in line 7, it would print this is not an int, and it didnt print that
[15:17:22] <jinsun> Pi-sistance: umm? the message doesn't matter, to catch the exception you have to put it inside try: except: block
[15:17:23] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:17:26] <rendar> any help?
[15:17:58] *** Quits: faceface (~faceface@user/faceface) (Quit: Lost terminal)
[15:18:10] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:de86:d03c:7719:1796)
[15:18:12] *** Quits: adham_ (~adham@37.237.47.16) (Ping timeout: 240 seconds)
[15:18:53] <amogorkon> i'd go with a while True-break
[15:18:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[15:19:18] <amogorkon> setting userInput to None feels like a hack
[15:19:19] *** Quits: Ergo^ (~ergo@91.238.59.144) (Read error: Connection reset by peer)
[15:19:49] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[15:20:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[15:21:46] <jinsun> Pi-sistance: raiing Exception is unnecessary if you just want to print a message, I would write it like this https://bpa.st/B62Q
[15:21:52] *** Joins: y1n (~y1n@178.165.172.35.wireless.dyn.drei.com)
[15:21:58] <jinsun> s/raiing/raising
[15:22:23] <jinsun> or yeah while True with a break, instead of checking None
[15:23:24] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[15:23:29] <ychaouche> Hello #python
[15:23:50] *** Joins: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr)
[15:24:06] <ychaouche> I have absolutely no idea how jupyter notebook works. I'm trying it online. Before I go further, is it possible to upload a csv file to a jupyter notebook online ?
[15:24:09] <Pi-sistance> it printed the wrong error message then???  finding it hard to make sense of that. if it was the first value error (and how? its a negative number and should have satisfied and passed the first while loop ) it would keep looping
[15:24:12] *** Quits: nre (~nre@55d42325.access.ecotel.net) (Ping timeout: 240 seconds)
[15:24:26] <ychaouche> I'm on a website called mybinder.org if that's of any importance.
[15:25:07] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[15:25:16] *** xavie is now known as xcombelle
[15:25:37] <Pi-sistance> well at least i understand your code jinsun, so thanks.
[15:25:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:26:53] *** Quits: Deimos (~Deimos@ool-44c51adf.dyn.optonline.net) (Ping timeout: 256 seconds)
[15:27:00] *** Joins: adham (~adham@37.237.47.24)
[15:27:19] *** Quits: adham (~adham@37.237.47.24) (Client Quit)
[15:27:27] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Remote host closed the connection)
[15:27:36] *** Quits: MajorBiscuit (~MajorBisc@c-001-018-023.client.tudelft.eduvpn.nl) (Ping timeout: 252 seconds)
[15:27:48] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[15:28:32] *** Joins: Deimos (~Deimos@ool-44c51adf.dyn.optonline.net)
[15:29:10] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:29:27] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:29:52] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:30:19] <Pi-sistance> ychaouche its simple enough for me to use, so im sure youll be fine.
[15:30:41] <ychaouche> Pi-sistance: I have no idea how to upload a file there
[15:31:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:31:43] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:31:47] <ychaouche> Apparently I need to create a github
[15:31:49] <ychaouche> repo
[15:31:54] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[15:32:00] <amogorkon> ychaouche, that's just convoluted
[15:32:09] <jinsun> there would be some process specific to that website, not somethinng related to jupyter
[15:32:14] <jinsun> easier to just run it locally
[15:32:15] <amogorkon> get anaconda, install juypter lab and run it locally
[15:32:21] <amogorkon> very easy
[15:32:33] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[15:33:16] <ychaouche> amogorkon: and you can share you work after that ?
[15:33:49] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:34:06] <amogorkon> ychaouche, you can simply save the notebook and put it wherever you want
[15:34:12] <amogorkon> share it via dropbox, github..
[15:34:17] <ychaouche> amogorkon: thanks mate.
[15:34:22] <amogorkon> on github it's even rendered
[15:34:28] *** Quits: foul_owl (~kerry@23.82.193.104) (Ping timeout: 272 seconds)
[15:34:29] *** Joins: Pickchea (~private@user/pickchea)
[15:34:49] <amogorkon> i use it as showcase for projects like here https://github.com/amogorkon/justuse/blob/unstable/docs/Showcase.ipynb
[15:34:53] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[15:35:19] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:37:32] *** dcaro is now known as dcaro_lunch
[15:38:36] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:39:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:41:37] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[15:41:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[15:42:34] *** Joins: dme86 (~dan@user/dan86)
[15:43:53] *** Joins: Barones (~Barones@user/Barones)
[15:43:56] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:44:36] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[15:44:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[15:44:50] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:44:56] *** Joins: vit (~vit@chello085216193138.chello.sk)
[15:45:20] *** vit is now known as Guest9416
[15:46:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:46:30] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Ping timeout: 272 seconds)
[15:46:50] *** Joins: Alexthek1d (~Alexthek1@p5b3ae233.dip0.t-ipconnect.de)
[15:46:53] <Alexthek1d> hello
[15:47:09] <Alexthek1d> what could be a simple solution to achieve the output in the last line?
[15:47:09] <Alexthek1d> https://onecompiler.com/python/3xtnew4cm
[15:47:36] <Alexthek1d> 2d list -> get sum of the nested lists
[15:47:46] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[15:47:54] *** Joins: defiant (~defiant@user/defiant)
[15:48:05] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-023.client.tudelft.eduvpn.nl)
[15:48:24] <Repiphany> [sum(sublist) for sublist in list_of_lists]
[15:49:11] *** Joins: Z-cat (~Z-cat@user/z-cat)
[15:49:31] *** Joins: foul_owl (~kerry@23.82.193.88)
[15:50:00] <defiant> Heya. So, if I have a one-way serial line on linux, what's the best way in python to send a file (or several) over this line to the other end? Preferably with some error checking.
[15:50:07] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[15:50:43] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:51:05] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:51:09] <Alexthek1d> Repiphany, thanks :D
[15:51:12] *** Joins: rsx (~dummy@ppp-188-174-158-157.dynamic.mnet-online.de)
[15:51:14] <Alexthek1d> that was easy ... :s
[15:52:45] *** Guest9416 is now known as freeworld
[15:54:24] *** Joins: gossie (~gossie@2001:1c02:11e:c700:62d2:a6bd:bb3b:ccfa)
[15:54:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[15:54:45] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 272 seconds)
[15:55:06] *** Joins: CoolerX (~CoolerX@user/coolerx)
[15:55:31] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 256 seconds)
[15:56:11] *** Joins: shad (~shad@user/shad)
[15:56:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:56:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:57:47] *** Quits: bzl (~identme@bzl.si) (Ping timeout: 256 seconds)
[15:57:49] <thevishy> https://termbin.com/gml0 -> https://termbin.com/dvav ... is there a more pythonic way to solve this?
[15:57:57] *** Joins: bzl (~identme@bzl.si)
[15:58:36] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[15:59:10] *** Quits: y1n (~y1n@178.165.172.35.wireless.dyn.drei.com) (Ping timeout: 272 seconds)
[15:59:33] <thevishy> someone said you need to use more complicated capturing groups, but i didn't why it shoud be that complicated
[15:59:48] <thevishy> i even feel regex is not necessary, simple splitting works!
[16:01:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:03:12] *** Joins: zeden (~zeden@user/zeden)
[16:03:31] *** Joins: dme86 (~dan@user/dan86)
[16:04:38] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[16:04:50] <Pi-sistance> ok ill try one last time: if inp is negative then why does this not loop?
[16:04:56] <Pi-sistance> while inp<0:
[16:04:56] <Pi-sistance>         raise ValueError("Please don't enter a negative value")
[16:05:13] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[16:05:51] *** Joins: zeden (~zeden@user/zeden)
[16:06:13] <marduk> Pi-sistance: because you're raising an (uncaught?) exception?
[16:06:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:07:34] *** Joins: avaxar (~avaxar@36.80.236.156)
[16:07:36] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[16:08:22] *** Quits: avaxar (~avaxar@36.80.236.156) (Client Quit)
[16:08:57] *** Quits: onichomp (~onichomp@2806:264:4408:95:1120:7614:19a3:7876) (Read error: Connection reset by peer)
[16:09:37] *** Joins: onichomp (~onichomp@2806:264:4408:95:1120:7614:19a3:7876)
[16:10:04] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:10:13] *** Joins: bindu (~bindu@user/bindu)
[16:10:22] *** Joins: mickey8 (~user@user/mickey)
[16:10:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:10:53] *** Joins: nre (~nre@55d42325.access.ecotel.net)
[16:11:00] <Pi-sistance> the function raise manually lets me set whatever i want to be an exception to catch, i have no idea what youre talking about
[16:11:36] <jinsun> raise doesn't catch exception, it raises them
[16:11:48] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[16:11:52] <marduk> I have no idea what you're talking about.
[16:11:54] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:6309:1ce4:579d:e991) (Quit: pvergain)
[16:12:19] <amogorkon> <jinsun> raise doesn't catch exception, it raises them <- that doesn't make sense! no way! :o
[16:12:22] <Pi-sistance> i feel this has been taught badly by my teacher at all (not at all)
[16:12:52] <marduk> Pi-sistance: it's analogous to `if True: raise Exception()` that's an infinite loop in theory. in practice it will only iterate once.
[16:13:04] <marduk> oops, `while True: raise Exception()`
[16:13:09] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:13:24] <amogorkon> except.. if there's a finally
[16:14:54] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:15:16] <thevishy> Pi-sistance, raise = telling something is not so good to the caller
[16:15:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:15:42] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[16:15:57] <thevishy> Pi-sistance, catch = caller handling that situation (it shud be done only if real can)
[16:16:15] *** Quits: BillyZane2 (~BillyZane@185.202.221.61) (Read error: Connection reset by peer)
[16:16:29] *** Joins: bahamas (~lucian@84.232.140.52)
[16:16:34] *** Joins: BillyZane2 (~BillyZane@185.202.221.61)
[16:16:56] *** Quits: Sylhouette (~johan@87.233.191.146) (Remote host closed the connection)
[16:17:30] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[16:17:38] <MacGyver> Pi-sistance: The exception mechanism you're using consists of two parts: *raising* the exception, which you are doing, and *handling* the raised exception, which you're not. If you're not handling the exception, it "bubbles up" through the call stack (every function called throws the exception to its caller) until it is caught or you crash out of the program.
[16:18:28] <MacGyver> Pi-sistance: If you want to loop on negative value input, simply don't raise an exception but instead *print* an error to sys.stderr and loop.
[16:18:48] <MacGyver> Pi-sistance: Exceptions are for, well, exceptional things. A user inputting an out-of-range value isn't exceptional.
[16:18:48] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[16:18:57] *** Joins: Ergo^ (~ergo@91.238.59.144)
[16:19:11] <MacGyver> Pi-sistance: Handling wrong user input is usually part of the *normal* program flow.
[16:19:23] *** Quits: ejjfunky (~ejjfunky2@125.164.19.33) (Remote host closed the connection)
[16:20:09] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:20:31] <amogorkon> how can i test against print output?
[16:20:49] *** Quits: Alexthek1d (~Alexthek1@p5b3ae233.dip0.t-ipconnect.de) (Quit: Leaving)
[16:21:00] <interestingname> amogorkon: ideally, you're the one that's printing
[16:21:27] <amogorkon> hu?
[16:21:30] <amogorkon> test.
[16:21:33] <amogorkon> as in unit test
[16:21:35] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[16:21:43] <Pi-sistance> okay thanks MacGyver!
[16:22:25] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[16:23:09] <MacGyver> Pi-sistance: As an example of what I would *expect* to see when reading user input into a number is a try-except block around the conversion of user input into number, and if that fails, print error and loop. After all, the user might input something not convertible to a number.
[16:23:34] <MacGyver> Pi-sistance: But that's *handling* any exceptions that the conversions might raise, not raising them yourself.
[16:24:52] <jinsun> amogorkon: contextlib.redirect_stdout and io.StringIO maybe
[16:24:58] *** Quits: maxzor (~maxzor@2a01cb04054faa005e5492c0e79f264a.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[16:25:27] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:25:30] <amogorkon> looks fancy, thanks
[16:25:49] <amogorkon> i'll try it
[16:25:54] *** Joins: bahamas (~lucian@84.232.140.52)
[16:26:17] <jinsun> amogorkon: example https://bpa.st/MHFQ
[16:26:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:26:40] *** Joins: crashrep (~crashrep@user/crashrep)
[16:26:48] <amogorkon> hah, neat :)
[16:26:51] <amogorkon> thanks
[16:27:24] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[16:27:33] *** Joins: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be)
[16:28:51] *** Joins: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com)
[16:29:04] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[16:29:42] <Guest20> Hi, I'm getting an error without stacktrace for this, why?
[16:29:42] <Guest20> https://bpa.st/4PCA
[16:29:50] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[16:30:12] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[16:30:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:32:18] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[16:33:55] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[16:34:32] *** Quits: baltazar (~baltazar@195.199.251.47) (Quit: leaving)
[16:34:47] *** Joins: dvx (~dvx@5.181.92.64)
[16:35:56] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:35:56] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:35:56] *** Joins: JordiGH (~jordi@user/jordigh)
[16:36:27] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[16:39:20] *** Joins: b_jonas (~x@catv-176-63-4-103.catv.fixed.vodafone.hu)
[16:39:59] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:40:41] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:41:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:41:41] *** Quits: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[16:43:20] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:43:25] *** Joins: dme86 (~dan@user/dan86)
[16:43:40] *** Quits: voidsync (~void@user/voidsync) (Remote host closed the connection)
[16:44:05] <supakeen> Dunno, seems to work fine here: https://bpa.st/raw/6LRA
[16:44:08] <crashrep> Guest20:  i just ran that while commenting out line 7 and i didn't get an error
[16:44:28] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[16:44:43] <Guest20> :O  I get an error, Python 3.7 Windows
[16:45:15] <supakeen> Aha, something might be given off to the Windows time APIs then that might or might not be able to deal with this.
[16:45:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:47:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:fd91:b5ed:c30f:b9c2)
[16:47:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:fd91:b5ed:c30f:b9c2) (Changing host)
[16:47:18] *** Joins: skapata (~Skapata@user/skapata)
[16:49:21] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[16:50:47] *** Joins: dme86 (~dan@user/dan86)
[16:51:14] *** Quits: upsala (~zcb@185.209.196.166) (Quit: WeeChat 3.4)
[16:51:48] *** Quits: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com) (Quit: Client closed)
[16:57:12] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:747f:b23b:8083:c201)
[16:57:26] *** Quits: schumaml (~schumaml@dslb-188-104-160-189.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[16:57:42] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[16:58:05] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:58:19] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[16:58:37] *** Joins: schumaml (~schumaml@dslb-188-104-178-148.188.104.pools.vodafone-ip.de)
[16:59:09] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:59:18] *** Joins: Pickchea (~private@user/pickchea)
[17:01:17] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[17:02:22] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:3130:efab:19e7:e707)
[17:03:16] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:04:28] *** Quits: Babar (~Babar@115.74.184.138) (Killed (copper.libera.chat (Nickname regained by services)))
[17:04:30] *** Joins: Babar (~Babar@116.102.89.252)
[17:05:13] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 256 seconds)
[17:05:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:07:57] <amogorkon> jinsun, i love it. i've got quite a couple of warnings directed to the user where line number doesn't matter, it's perfect
[17:08:00] *** dcaro_lunch is now known as dcaro
[17:08:12] <amogorkon> with StringIO() as f, redirect_stdout(f):
[17:08:12] <amogorkon>     assert f.getvalue() == "Hello\n"
[17:08:26] *** Joins: kaiseisei (~Thunderbi@223.11.82.191)
[17:08:54] <amogorkon> is even more concise than the pytest catch warning things
[17:10:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:10:41] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[17:11:01] *** Joins: portalrat (~portalrat@user/portalrat)
[17:11:26] <jinsun> ah right can put the StringIO in the context manager too
[17:12:03] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:12:35] *** Quits: ychaouche (~ychaouche@user/ychaouche) (Quit: Konversation terminated!)
[17:15:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:15:25] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[17:15:25] *** gentooclimax is now known as climax
[17:15:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:16:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[17:17:44] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[17:18:42] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[17:19:41] *** Joins: Barones (~Barones@user/Barones)
[17:19:47] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[17:20:14] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[17:20:47] *** Quits: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 256 seconds)
[17:21:17] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[17:21:34] *** Joins: upsala (~zcb@185.209.196.166)
[17:22:24] *** Joins: baltazar (~baltazar@84-236-101-128.pool.digikabel.hu)
[17:23:18] *** Joins: nre1 (~nre@55d42325.access.ecotel.net)
[17:23:26] *** Quits: nre (~nre@55d42325.access.ecotel.net) (Read error: Connection reset by peer)
[17:25:30] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:26:34] *** Quits: davor (~davor@user/davor) (Ping timeout: 272 seconds)
[17:26:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:27:40] *** Quits: tribo (~tribo@p5b0fb69c.dip0.t-ipconnect.de) (Quit: WeeChat 2.8)
[17:30:01] *** Joins: pmcnabb1 (~pmcnabb@user/pmcnabb)
[17:30:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:30:12] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 240 seconds)
[17:30:12] *** pmcnabb1 is now known as pmcnabb
[17:31:21] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[17:31:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:32:03] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:32:46] <jinsun> why is this happening to me on windows? https://bpa.st/5YZQ
[17:32:53] *** climax is now known as gentooclimax
[17:33:43] <grym> jinsun: ...wat
[17:33:51] *** Quits: nre1 (~nre@55d42325.access.ecotel.net) (Remote host closed the connection)
[17:34:08] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[17:34:54] <grym> jinsun: https://github.com/numpy/numpy/issues/21047  what python are you using?
[17:35:01] <jinsun> it was a crash in matplotlib, and I was thinking it would be some GUI library problem, but turned out to be numpy when I stepped though
[17:35:25] <amogorkon> hi grym :)
[17:35:26] <jinsun> it is conda installed stuff
[17:35:28] <grym> amogorkon: yo
[17:35:37] <grym> jinsun: make a clean conda env and see if it repros?
[17:35:44] <jinsun> so I guess conda-forge broke their nump build somehow
[17:35:48] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 240 seconds)
[17:35:52] <grym> (and if it does, throw in on that issue maybe; they seem stumped)
[17:35:54] <jinsun> yeah let me try with only numpy
[17:36:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[17:37:03] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[17:37:10] <Soni> why don't we have tuple generators?
[17:37:25] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:38:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:39:19] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[17:39:59] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[17:40:12] <jinsun> grym: hmm it gets more interesting, works in a new environment with only numpy
[17:40:15] <phy1729> tuple(generator goes here)
[17:40:24] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:41:09] <jinsun> grym: so I guess now I have to keep adding other libraries till it shows up, too much work for now, I'll try tomorrow
[17:41:17] <grym> jinsun: something's wedged, yeah
[17:41:49] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[17:41:56] <jinsun> let me just try matplotlib for now, I found it through that
[17:42:00] <grym> Soni: `yield (foo, bar)` ?
[17:42:14] *** Parts: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Leaving)
[17:43:20] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[17:43:23] <Soni> grym: (x for x in foo) => (*(x for x in foo),)
[17:43:40] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[17:44:00] *** Joins: nomic (~nomic@185.217.117.193)
[17:44:01] <Soni> why not require users to use gen(x for x in foo), where gen is just def gen(x): return x
[17:44:19] <Soni> (optionally with some type checking)
[17:44:43] <phy1729> I think it makes sense because without parens the expression is a generator in arguments
[17:44:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:44:50] <jinsun> well there was a choice to be made, lazy by default or not, lazy by default makes more sense
[17:45:15] <jinsun> you can write stuff like sum(x for x in foo) wihout making intermediate tuple
[17:46:04] <Soni> yes, that's what gen() would be for
[17:46:05] *** Joins: thiras_ (~thiras@user/thiras)
[17:46:14] *** Quits: ham5urg_ (~ham5urg@134.101.162.147.dynamic-pppoe.dt.ipv4.wtnet.de) (Remote host closed the connection)
[17:46:20] <phy1729> and parens are already only tuples if they're empty or have a comma
[17:46:26] *** Joins: ham5urg_ (~ham5urg@134.101.162.147.dynamic-pppoe.dt.ipv4.wtnet.de)
[17:46:37] <amogorkon> <> for tuples?
[17:46:47] <jinsun> eh gen() would be uglier, you want the more frequently used thing to be less uglier
[17:47:10] <Soni> range says hi
[17:47:16] *** Quits: kaiseisei (~Thunderbi@223.11.82.191) (Remote host closed the connection)
[17:47:34] *** Joins: kaiseisei (~Thunderbi@223.11.82.191)
[17:47:39] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:47:40] <grym> i thought we were talking about generators >:)
[17:48:10] <Soni> yes but if ppl are gonna talk about gen() being ugly then they should also be made to talk about range() being ugly :p
[17:48:18] <jinsun> grym: doesn't crash with numpy+ matplotlib too, so I guess I'll just use this new environment for plotting now, plt.plot crashes because of that numpy problem
[17:48:30] <Pi-sistance> from my noob perspective range is ugly
[17:48:31] <Soni> gen() feels more consistent with the rest of the language tbh :/
[17:48:40] <Soni> at least to us
[17:49:09] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:50:33] *** Quits: vanessa (~vanessa@103.160.128.7) (Ping timeout: 256 seconds)
[17:51:00] *** Quits: ham5urg_ (~ham5urg@134.101.162.147.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 240 seconds)
[17:51:54] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[17:52:44] *** Joins: vanessa (~vanessa@103.160.128.7)
[17:52:45] <jinsun> yeah range is ugly too, there should be some kind of range operator that other languages have
[17:52:50] <jinsun> like 1..10
[17:52:59] <grym> jinsun: did you see the c# r-string proposal :D
[17:53:01] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[17:53:17] *** Joins: bahamas (~lucian@84.232.140.52)
[17:53:21] <grym> More Pythonic By The Day
[17:54:21] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 250 seconds)
[17:54:27] <acresearch> people i am struggling with this code: https://paste.debian.net/1231243/ I am trying to one-hot encode values between -4 and 4 and putting them into 8 bins (such that values -4.0 -3.9 -3.5 are all in one bin etc...) but also have the NaN items as all zeros    code attached with outputs, anyone can help me improve this code please?
[17:54:51] <jinsun> grym: ah didn't see that one, I this 1..10 syntax I caught in F#
[17:55:12] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:55:23] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:55:53] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:55:53] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[17:56:10] *** Joins: superaga (~superaga@165.225.95.67)
[17:58:10] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[17:58:14] *** Joins: cdown_ (~cdown@188.214.11.14)
[17:58:15] <Pi-sistance> so its the try part of the try except block that has exception handling built into it, cool
[17:59:19] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-023.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[17:59:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:00:12] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[18:01:18] *** Quits: ge0rgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[18:01:24] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 272 seconds)
[18:01:33] *** cdown_ is now known as cdown
[18:02:03] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[18:03:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:06:26] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[18:07:15] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[18:07:37] *** Joins: maroloccio (~marolocci@pousada3ja.mma.com.br)
[18:07:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:08:16] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[18:08:56] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[18:08:57] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Ping timeout: 256 seconds)
[18:09:06] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[18:09:34] *** Joins: Alcap (~tcerqueir@154.135.61.94.rev.vodafone.pt)
[18:09:49] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[18:09:57] <ychaouche> hey pythonistas
[18:10:06] *** Joins: masoudd (~masoudd@user/masoudd)
[18:10:12] <hodapp> O HAI!
[18:10:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:10:21] *** Joins: bluedust (~bluedust@103.161.144.138)
[18:10:39] <ychaouche> I have a pandas series object that apparently has two columns without headers. I want to get the number of values in that series that have 0 in second column. How do i do that ? https://gist.githubusercontent.com/ychaouche/389314298c5c50c3534271a5d1eab428/raw/0a5dc8b1815bd57416562373016caf51f0d515b3/gistfile1.txt
[18:11:37] <mickey8> can anyone recommend a decent library to use for text preprocessing for nlp purposes?
[18:11:56] <mickey8> i could collect different techniques online and make my own script but im sure someone did it better already
[18:11:58] *** Joins: NeoCore (~neocore@195.200.221.225)
[18:12:39] *** Guest4191 is now known as Polo
[18:12:58] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[18:13:18] <grym> mickey8: nktl, spacy
[18:13:21] <grym> mickey8: nltk*
[18:13:34] *** Quits: kaiseisei (~Thunderbi@223.11.82.191) (Remote host closed the connection)
[18:13:37] <mickey8> can those take text and some sort of options/flags of what to clean?
[18:13:40] <ychaouche> +1 for nltk
[18:13:49] <grym> mickey8: both of them can do those sorts of things, yeah
[18:13:51] *** Joins: kaiseisei (~Thunderbi@223.11.82.191)
[18:13:55] <mickey8> i'll look. thanks.
[18:13:56] <grym> remove stopwords, normalise text, etc.
[18:14:10] *** Quits: apteryx (~maxim@dsl-149-79.b2b2c.ca) (Quit: apteryx)
[18:14:14] <jinsun> ychaouche: Series is one column of data, the first "column" is the index, you can do (nullvalues_summed == 0).sum()
[18:14:32] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[18:14:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:15:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:16:20] <ychaouche> jinsun: but I see two columns in the output
[18:16:21] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:16:36] <grym> let's say package foo has two extras, A and B.  If i make a venv, venv/bin/pip install foo[A], and later venv/bin/pip install foo[B], is that the same as venv/bin/pip install foo[A,B]?
[18:16:51] <grym> (or does A get clobbered?)
[18:16:52] <ychaouche> they look like two columns but they're not I know
[18:17:10] *** Joins: gasbag (~gasbag@024-216-149-125.res.spectrum.com)
[18:17:12] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[18:17:31] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:18:20] <jinsun> ychaouche: it looks like two columns but it is one, and well it is not good to call it column also because there is no table, it is just one Sequence of values
[18:18:28] <jinsun> ychaouche: the thing that looks like the first column is the index, it is just a label for the data
[18:19:04] <ychaouche> ok thanks for the gentle intro jinsun
[18:19:04] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[18:19:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:19:29] *** Joins: blackleitus (~blackleit@189.195.195.100)
[18:19:46] *** Joins: mickey8 (~user@user/mickey)
[18:19:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:20:48] *** Joins: Xardas (~Xardas@149.233.51.127)
[18:21:51] *** gentooclimax is now known as climax
[18:22:06] <Alcap> Hi! I'm trying to learn python coming from other programming languages and I'm doing some exercises online. I came across the following: given a string array (represented in the code by the array variable), containing 3 fields space separated (company A ID, company B ID and transfer ammount, respectively), count how many transactions are processed by a given company. Transactions within the same company count as one transaction. I've
[18:22:08] <Alcap> performed this using the code at: https://bpa.st/4L5A but I was wondering if there is a better way to do it
[18:22:31] *** Joins: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr)
[18:23:16] <exarkun> Alcap: just fyi, the name of the type of the value the `array` name refers to is `list` (not `array`)
[18:23:47] <Alcap> it is supposed to provide a list of companies with transactions higher than threshold, but that's pretty easy once the data is grouped together
[18:24:15] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[18:24:49] <Alcap> exarkun: thanks, I was not aware!
[18:24:55] <exarkun> readability would probably benefit a lot from unpacking `transElems`
[18:25:16] *** Joins: trace987 (~trace@user/trace)
[18:25:25] <exarkun> python has destructuring bind ("tuple unpacking") - `(a, b, amount) = transaction.split()`
[18:26:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:26:36] *** Joins: tachoknight (~textual@2600:1700:3060:3ee0:f467:fda7:b67f:3b6)
[18:26:39] *** Joins: nolan_ (~nolan_@user/nolan/x-2434303)
[18:26:50] *** climax is now known as gentooclimax
[18:27:01] *** Joins: dme86 (~dan@user/dan86)
[18:27:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:27:25] *** Parts: davidd (~hay_sup@user/memorious) (WeeChat 3.4)
[18:27:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:27:26] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[18:27:43] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:28:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[18:28:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:29:24] *** Quits: savolla (~quassel@84.44.28.28) (Ping timeout: 240 seconds)
[18:30:09] <Alcap> exarkun: got it, I'm reading up on it
[18:30:57] <SnoopJ> (it works on not-tuples, too)
[18:31:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:33:21] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Ping timeout: 250 seconds)
[18:36:05] *** Joins: Y4kuzi (~provision@85.159.233.183)
[18:36:24] *** Quits: hays (rootvegeta@fsf/member/hays) ()
[18:36:47] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:36:52] *** gentooclimax is now known as climax
[18:38:47] <Alcap> but in terms of algorithm, is there any way to do it differently?
[18:38:53] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:38:56] <Alcap> seems too many ifs :D
[18:39:22] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[18:39:23] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-f007-0334-e7f5-e312.res6.spectrum.com)
[18:40:23] *** Joins: hays (rootvegeta@fsf/member/hays)
[18:40:52] *** Quits: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be) (Quit: harpia)
[18:42:08] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:42:15] <rendar> https://bpa.st/DZ2Q -- i have this code, and that .run() function raises an exception but it never prints that TTTT or TYTYTY string, how come? any ideas?
[18:42:25] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[18:44:23] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[18:44:33] *** Joins: Xardas (~Xardas@149.233.51.127)
[18:44:59] *** Quits: kaiseisei (~Thunderbi@223.11.82.191) (Remote host closed the connection)
[18:45:18] *** Joins: kaiseisei (~Thunderbi@223.11.82.191)
[18:46:14] <SnoopJ> Alcap, a lot of the repetition there seems to be coming from the dict, collections.Counter can make a lot of it go away: https://bpa.st/4TOQ
[18:46:15] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[18:46:46] <SnoopJ> (the counts 'start' at 0, so you don't need to check for membership first, you just increment)
[18:47:27] *** Quits: ychaouche (~ychaouche@user/ychaouche) (Quit: Konversation terminated!)
[18:47:38] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[18:48:26] <jinsun> Alcap: `collections.Counter(x for t in ["151 73891 200", "151 73981 2500", "6178 6178 200", "29343 29682 14968"] for x in set(t.split()[:2]))`
[18:48:33] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:48:37] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[18:49:11] * SnoopJ winces
[18:50:07] *** Joins: Klinda (~superleag@user/klinda)
[18:50:16] <jinsun> :D wouldn't have done it if I saw your solution before, but I already started one-linering it
[18:50:23] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[18:50:47] <SnoopJ> It does technically show another way to do it :)
[18:51:23] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:52:32] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:53:27] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[18:53:46] <vladoski> mypy tells me to annotate even list in something like dict[str, list]
[18:53:53] <vladoski> how can I disable this behaviour?
[18:54:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:54:31] <Alcap> SnoopJ: I understand using a counter, but the code itself doesn't do what it is supposed to do
[18:54:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[18:54:55] <SnoopJ> Alcap, I think I misunderstood your question, then, can you restate?
[18:54:59] <jinsun> vladoski: fix your annotation ideally, it should be list[Any] or list[object]
[18:55:24] <Alcap> nevermind SnoopJ
[18:55:26] <Alcap> I was wrong :D
[18:55:40] <vladoski> jinsun, I don't want that. I want mypy to understand that list = list[Any]
[18:55:59] <vladoski> like an implicit any if I don't specify what's inside
[18:56:17] <vladoski> i think that list[Any] is just an unuseful repetition...
[18:56:33] <jinsun> yes you should try to avoid Any too
[18:56:42] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[18:56:47] <jinsun> but mypy will assume any in non-strict mode by default
[18:56:52] *** Quits: hays (rootvegeta@fsf/member/hays) ()
[18:57:11] <jinsun> it would have started complaining because you enabled strict mode
[18:57:27] <vladoski> i'm not in strict mode (I think?)
[18:57:37] <vladoski> I've just runned mypy file
[18:57:45] <vladoski> without any flags or --strict
[18:57:49] <jinsun> assuming Any by default is bad, so strict mode doesn't allow it
[18:57:54] <jinsun> it could be in your config
[18:57:58] <vladoski> let me check
[18:58:16] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:58:19] *** Joins: hays (rootvegeta@fsf/member/hays)
[18:58:26] *** Joins: sharpertool (sid80151@id-80151.hampstead.irccloud.com)
[18:58:55] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:59:28] *** Joins: kts (~kts@103.73.237.42)
[18:59:55] <vladoski> jinsun, oh yea you're right, there's disallow_any_generics there
[19:00:01] <vladoski> thanks
[19:00:18] <sharpertool> Where can I find documentation, in the official python docs, for this syntax -- `val, *rest = function()`
[19:00:49] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[19:00:51] <sharpertool> I don't know what it's called in python. It's called destructuring in JS.
[19:00:51] *** Joins: ravan (~ravan@user/ravan)
[19:00:56] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 272 seconds)
[19:01:07] <llanhmod> same term for python
[19:01:15] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[19:01:24] *** Quits: kaiseisei (~Thunderbi@223.11.82.191) (Ping timeout: 240 seconds)
[19:01:43] *** Joins: fef (~thedawn@user/thedawn)
[19:01:46] *** resmo_ is now known as resmo
[19:02:17] *** Joins: akaWolf (~akaWolf@akawolf.org)
[19:03:19] <SnoopJ> sharpertool, https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
[19:03:34] <sharpertool> hmm. Well, searching for 'destructuring' returns nothing.
[19:03:42] <sharpertool> Thanks @SnoopJ
[19:04:04] *** Joins: cowsay-moo (~cowsay-mo@2a0d:5600:24:1400:1016:ed97:1df8:b3cc)
[19:04:38] <SnoopJ> it's often called "multiple assignment" in Python but the terminology is a little wibbly
[19:05:01] <jinsun> I hear iterable unpacking usually
[19:05:08] <han-solo> "iterable unpacking"
[19:05:09] <SnoopJ> jinsun, that can happen in not-an-assignment, though
[19:05:11] <han-solo> er
[19:05:38] <han-solo> though i gotta admit, i can't see many example of it
[19:05:53] <SnoopJ> but yes, "multiple assignment is really just a combination of tuple [sic] packing and sequence unpacking"
[19:05:54] <bahamas> han-solo: passing args to a function
[19:05:59] <sharpertool> Ah.. I think the answer appears to be 'unpacking' is the pythonic term, no destructuring
[19:06:15] <sharpertool> and, iterable unpacking specificallly. Thanks all.
[19:06:35] <jinsun> SnoopJ: like where? function calls? those are kinda assignment too
[19:06:38] <llanhmod> sharpertool: https://www.python.org/dev/peps/pep-0622/#syntax
[19:07:18] <SnoopJ> sharpertool, right, in Python we only really do this with iterables/sequences. I think destructuring in other langauges is more concerned with structure in the type sense (e.g. objects in JS)
[19:07:34] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:488f:4fae:ee7d:89e0)
[19:07:56] *** Quits: ckdCreations (~ckdCreati@147.55.133.130) (Read error: Connection reset by peer)
[19:08:02] <SnoopJ> jinsun, in the sense that names may be bound, sure. You could say this about any function call, then
[19:08:11] <SnoopJ> which I think makes the confusion worse, not better :)
[19:12:11] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[19:14:42] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:488f:4fae:ee7d:89e0) (Quit: Client closed)
[19:14:45] *** Joins: StickyIcky (~StickyIck@ec2-3-88-97-62.compute-1.amazonaws.com)
[19:15:04] *** Joins: StickyIcky2 (~StickyIck@ec2-3-88-97-62.compute-1.amazonaws.com)
[19:15:55] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[19:17:00] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[19:17:15] <Alcap> SnoopJ: I see the error in my ways :D
[19:17:35] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:488f:4fae:ee7d:89e0)
[19:17:41] <SnoopJ> I envy you that!
[19:18:36] *** Joins: y1n (~y1n@178.165.172.35.wireless.dyn.drei.com)
[19:18:38] <Zweimer> I would like to convert a data structure like you can see in this example: https://bpa.st/4GCQ I would implement it with a couple of loops and checks if an element already exists. Is there a better way of how I could approach this?
[19:19:08] *** Joins: paul424 (~tom@ip-5-172-236-127.multi.internet.cyfrowypolsat.pl)
[19:19:22] *** Joins: ice9 (~ice9@user/ice9)
[19:20:12] *** Joins: Devinn (~Devinn@searspoint.nvidia.com)
[19:20:17] *** Joins: revolve (~u0_a227@82-132-237-210.dab.02.net)
[19:20:39] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[19:20:44] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[19:21:09] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[19:21:12] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[19:21:49] *** Joins: teut (~teut@122.161.83.81)
[19:22:27] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[19:23:00] *** Quits: schumaml (~schumaml@dslb-188-104-178-148.188.104.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[19:23:38] <jinsun_> Zweimer: make a dd = defaultdict(lambda: defaultdict (list))
[19:24:31] *** Joins: cdown_ (~cdown@163.114.131.1)
[19:24:32] *** Joins: SuperLag (~akulbe@user/superlag)
[19:24:41] *** Joins: onichomp666 (~onichomp@177.231.44.9)
[19:25:12] *** Quits: onichomp (~onichomp@2806:264:4408:95:1120:7614:19a3:7876) (Ping timeout: 252 seconds)
[19:26:55] <jinsun_> Zweimer  then `for d in list_of_dicts: dd[d['Level1']][d['Level2']].append(d['Level3'])`
[19:27:27] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[19:27:33] *** cdown_ is now known as cdown
[19:27:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:28:35] *** Joins: dme86 (~dan@user/dan86)
[19:28:50] *** Quits: thevishy (~Nishant@2405:201:f005:c007:c978:2cb1:53a0:d8f2) (Quit: Leaving)
[19:29:30] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[19:29:39] <Zweimer> Uh, that's awesome! Thank you.
[19:29:58] <Zweimer> defaultdict didn't even come into my mind.
[19:30:42] *** Quits: Alcap (~tcerqueir@154.135.61.94.rev.vodafone.pt) (Ping timeout: 272 seconds)
[19:31:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[19:32:15] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d)
[19:32:38] *** Joins: aselman4 (~aselman4@ashpr013-p2.nls.ford.com)
[19:32:40] *** Parts: aselman4 (~aselman4@ashpr013-p2.nls.ford.com) ()
[19:34:57] *** Joins: mintograde (~mintograd@47.201.5.61)
[19:35:43] *** Joins: Midjak (~Midjak@91-169-30-149.subs.proxad.net)
[19:35:44] *** Quits: revolve (~u0_a227@82-132-237-210.dab.02.net) (Read error: Connection reset by peer)
[19:36:22] *** Joins: hfckjg (~hfckjg@user/hfckjg)
[19:36:26] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Changing host)
[19:36:26] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[19:36:31] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Ping timeout: 256 seconds)
[19:37:18] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-237-110.poda.cz) (Ping timeout: 252 seconds)
[19:37:38] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[19:38:02] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[19:38:26] *** Joins: blackleitus (~blackleit@189.195.195.100)
[19:38:29] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[19:38:47] *** Quits: pa (~pah@user/pah) (Ping timeout: 256 seconds)
[19:39:24] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[19:39:35] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[19:39:56] *** Joins: pah (~pah@user/pah)
[19:40:15] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:41:50] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[19:46:00] *** Quits: superaga (~superaga@165.225.95.67) (Quit: Client closed)
[19:46:09] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 250 seconds)
[19:46:11] *** Joins: sobkas (~sobkas@95.175.17.217)
[19:46:12] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:46:12] <graingert[m]> whey when you close a multiprocessing.Queue() does it only close the read end of the pipe and not the write end?
[19:46:43] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[19:46:50] *** Joins: timkofu (~timkofu@user/timkofu)
[19:46:54] <timkofu> Hi
[19:47:16] *** Joins: schumaml (~schumaml@dslb-092-074-002-089.092.074.pools.vodafone-ip.de)
[19:48:40] <graingert[m]> s/whey/why/
[19:48:59] *** Joins: superaga (~superaga@165.225.95.67)
[19:49:00] *** Joins: elichai2 (sid212594@2a03:5180:f:4::3:3e72)
[19:49:25] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:654e:e335:8cc0:9975)
[19:49:26] <elichai2> Hi, is it possible that `pathlib.Path.rename()` silently fails to move the file? or leaves the original in place?
[19:49:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[19:50:02] *** Parts: pjoter (~october@s166.cyber-folks.pl) ()
[19:50:29] *** Joins: pjoter (~october@s166.cyber-folks.pl)
[19:51:03] *** Joins: theprophet (~theprophe@212.58.102.155)
[19:51:21] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[19:51:36] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:51:46] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:52:04] <exarkun> elichai2: what's your real question
[19:52:05] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[19:52:32] *** Joins: runelind (~runelind@user/runelind)
[19:52:46] <elichai2> exarkun: part of my program moves files using `Path.rename` and a file seems to still be in the original location even after moving
[19:53:01] <elichai2> so I'm trying to understand the semantics of this operation and why/how it could've happened
[19:53:13] <elichai2> (maybe due to not calling fsync?)
[19:54:10] <SnoopJ> elichai2, I believe os.rename() is what does the lifting, if that helps narrow the hunt for your answer
[19:54:11] *** Joins: bluedust_ (~bluedust@68.235.43.173)
[19:54:11] <Macuser> wtf
[19:54:20] <Macuser> how do I add every 6 strings of a line into a list
[19:54:27] <Macuser> idk why this is so mind boggling
[19:54:36] *** Quits: pjoter (~october@s166.cyber-folks.pl) (Quit: Lost terminal)
[19:54:38] <exarkun> elichai2: What makes you think it is still in the original location?
[19:54:52] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:54:57] <rendar> https://bpa.st/DZ2Q -- i have this code, and that .run() function raises an exception but it never prints that TTTT or TYTYTY string, how come? any ideas?
[19:55:08] <elichai2> exarkun: `Path('oldpath').glob(f"*")` returns me files that I've already "moved"
[19:55:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[19:55:39] <elichai2> I might be wrong and it's a bug in a different place, which is why I'm trying to figure out the semantics
[19:55:55] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[19:56:09] <SnoopJ> I *think* it shouldn't fail silently, but I don't know enough about the OS side of this to know if there's a non-failure scenario that matches this symptomology (it sounds unlikely, though?)
[19:56:22] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Quit: Leaving)
[19:56:36] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[19:56:37] <SnoopJ> on the other hand, OSes love to violate your assumptions in ways that seem unlikely
[19:56:40] *** Joins: bluedust (~bluedust@103.161.144.138)
[19:58:05] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.3)
[19:58:27] <remote> emacs
[19:58:40] <remote> ^ totally worth it
[19:58:47] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:58:49] *** Joins: october (~october@s166.cyber-folks.pl)
[19:59:03] <exarkun> elichai2: Do you have a minimal example that reproduces the behavior?  What Python version and OS?
[19:59:16] *** Joins: Xardas (~Xardas@149.233.51.127)
[19:59:50] *** Quits: bluedust_ (~bluedust@68.235.43.173) (Ping timeout: 272 seconds)
[20:00:48] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2 Beta Build (2022/02/17 UTC) 64 Bit)
[20:00:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:747f:b23b:8083:c201) (Ping timeout: 240 seconds)
[20:01:08] *** Joins: Tempesta (~Tempesta@user/tempesta)
[20:01:26] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[20:02:08] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[20:02:31] *** Quits: superaga (~superaga@165.225.95.67) (Quit: Client closed)
[20:02:51] *** Joins: superaga (~superaga@165.225.95.67)
[20:03:17] *** october is now known as pjoter
[20:03:24] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[20:03:32] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[20:04:13] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[20:04:51] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[20:07:08] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[20:07:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[20:07:42] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[20:07:43] <causa_sui> I want to subprocess to 'man <thing>' and let the user interactively control their pager as if they had typed it in the shell. is this a thing that can be done in a straightforward way? I don't see facilities for handing over interactive control in the subprocess module
[20:08:12] *** Joins: wovixo (~wovixo@128.104.205.49)
[20:08:14] <causa_sui> if it helps, my process dies after doing this
[20:08:54] *** Joins: Masterphi (~Masterphi@user/masterphi)
[20:09:00] <CrtxReavr> My personal hell today: https://bpa.st/P2VQ
[20:09:05] <Macuser> nvm i got it
[20:09:52] <elichai2> exarkun: sadly no, i'll try to add some asserts and `os.fsync()` to see what's happening
[20:09:53] <exarkun> causa_sui: no, it is not straightforward.
[20:09:58] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:09:59] *** Parts: pjoter (~october@s166.cyber-folks.pl) ()
[20:10:03] <causa_sui> rats
[20:10:51] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[20:12:18] *** NoxTurminal8 is now known as NoxTurminal
[20:12:56] <acresearch> people, i have an array p.shape = (45755, 5)    it contains floats and NaN values   i am trying to collect only the non-NaN values through    p = np.unique(p[~np.isnan(p)])    but this returns (3668,)  what happened to the 5 dimentions? how do i conserve the array shape?
[20:13:14] *** Joins: Wh0 (~V@103.249.234.116)
[20:14:40] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[20:14:47] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[20:15:07] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Remote host closed the connection)
[20:15:18] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[20:15:23] *** Quits: superaga (~superaga@165.225.95.67) (Quit: Client closed)
[20:15:46] *** Joins: theprophet (~theprophe@212.58.102.155)
[20:15:48] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[20:16:09] <dba> I am trying to put 3 dataframe side by side, all of them has 1 row, the issue with `df.concat([df1, df2, df3], axis=1)` is that df2 row will be in the second row of concatenated df and the df3 row will be in the 3rd row and first 2 are null how do I concatenate them all in one row.?
[20:16:42] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:17:06] *** Joins: Fauve (~Fauve@user/fauve)
[20:17:14] <Fauve> Hello people o/
[20:17:17] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:17:29] *** Joins: darksun (~darksun@user/darksun)
[20:17:29] <ChrisWarrick> acresearch: 3668 is not divisible by 5, so how would that array look?
[20:18:14] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[20:18:18] <SnoopJ> dba, you mean pd.concat(), right? Anyway, sounds like the indices in the three DataFrames don't align with each other. Maybe you can share a minimal reproducing example?
[20:18:32] <acresearch> ChrisWarrick: it is flattened
[20:18:40] <acresearch> ChrisWarrick: i am confused
[20:18:59] <ChrisWarrick> acresearch: you can’t reshape an array with 3668 items into (___, 5)
[20:19:00] <Fauve> I whant to develop a litle status bar (here is a mokup https://raw.githubusercontent.com/FauveNoir/HereticBar/master/preview.png) with python. But I wonder how to let it fixed on top.
[20:19:00] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:19:30] <acresearch> ChrisWarrick: so then what is going on with the code? what is the line doing?   or how to i better perform the selection?
[20:19:32] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[20:19:43] *** Quits: y1n (~y1n@178.165.172.35.wireless.dyn.drei.com) (Quit: Leaving)
[20:19:57] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[20:19:58] <ChrisWarrick> acresearch: try running `p[~np.isnan(p)]` and then `np.unique(p[~np.isnan(p)])` with a smaller array
[20:20:07] <acresearch> ChrisWarrick: let me try
[20:20:22] <Macuser> why isn't matplotlim ylim working
[20:20:32] <Macuser> oh f*ck
[20:20:37] <Macuser> my .show() is above the ylim
[20:20:38] <Macuser> :)
[20:20:49] *** Joins: pjoter (~october@s166.cyber-folks.pl)
[20:21:41] <acresearch> ChrisWarrick: ahhh p[~np.isnan(p)] flattens it
[20:21:43] *** Joins: Barones (~Barones@user/Barones)
[20:21:48] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[20:21:54] *** Joins: matsaman (~matsaman@user/matsaman)
[20:22:14] <ChrisWarrick> Fauve: you’ll probably need some appropriate window manager flags — you might be interested in https://en.wikipedia.org/wiki/Inter-Client_Communication_Conventions_Manual or https://en.wikipedia.org/wiki/Extended_Window_Manager_Hints or your GUI library’s options for that
[20:22:31] <Fauve> Ok, thank you ChrisWarrick :)
[20:22:50] <Fauve> ChrisWarrick: It’s plained to use it on i3.
[20:23:10] <Fauve> But, idealy, it should work everywhere. Or at least in main WMs.
[20:23:10] *** Joins: crashrep (~crashrep@user/crashrep)
[20:23:14] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:23:25] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:3130:efab:19e7:e707) (Ping timeout: 250 seconds)
[20:24:17] <acresearch> ChrisWarrick: ok so what is the best way to remove NaN from an array?
[20:24:18] *** Parts: pjoter (~october@s166.cyber-folks.pl) ()
[20:24:27] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:24:37] <ChrisWarrick> acresearch: what do you mean by best?
[20:24:40] *** Joins: savolla (~quassel@95.10.205.18)
[20:24:47] <Macuser> numpy has a flatten function fyi
[20:24:57] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[20:25:20] <acresearch> ChrisWarrick: so that the array does not get flattened
[20:25:36] *** Quits: hfckjg (~hfckjg@user/hfckjg) (Remote host closed the connection)
[20:25:52] *** Joins: V_ (~V@103.240.169.19)
[20:26:00] *** Joins: hfckjg (~hfckjg@182.215.2.123)
[20:26:01] *** Quits: hfckjg (~hfckjg@182.215.2.123) (Changing host)
[20:26:01] *** Joins: hfckjg (~hfckjg@user/hfckjg)
[20:26:25] <ChrisWarrick> acresearch: a = np.array([[1, np.nan, 2], [3, 4, 5]])
[20:26:31] <ChrisWarrick> acresearch: what should be done with this array?
[20:26:32] *** Joins: wac (~wac@user/wac)
[20:26:45] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:3130:efab:19e7:e707)
[20:27:41] *** Quits: saroy (~Sandipan@43.252.250.104) (Quit: Leaving)
[20:27:53] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:28:07] <acresearch> ChrisWarrick: i want to loop through it one line at a time, and get back only the non-NaN values   but maintain the dimentions     let me try and writing a working example
[20:28:20] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[20:28:27] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:28:32] *** Joins: txtsd (~txtsd@user/txtsd)
[20:28:34] <ChrisWarrick> acresearch: what should be done with the array I gave as an example?
[20:28:39] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 256 seconds)
[20:28:51] <acresearch> ChrisWarrick: it gets flattened
[20:29:30] <acresearch> i need the dimentions to be conserved
[20:29:36] *** Quits: Wh0 (~V@103.249.234.116) (Ping timeout: 272 seconds)
[20:29:40] <acresearch> one moment   this is confusing let me write a working exmaple
[20:31:36] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[20:31:39] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[20:31:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[20:31:56] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:32:17] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Ping timeout: 240 seconds)
[20:32:51] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.19) (Ping timeout: 252 seconds)
[20:32:56] <dba> SnoopJ, you are right the indices are messed up here is an example of the 3df https://bpa.st/GHNQ how do I fix this?
[20:34:32] <SnoopJ> dba, this doesn't look like Python source-code... are these JSON?
[20:36:06] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[20:36:06] <dba> SnoopJ, I couldnt find any other way of sharing an example of the current dfs so I exported them to json to be able to share them. not sure if there is a more better way to share an example
[20:36:25] *** Quits: paul424 (~tom@ip-5-172-236-127.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[20:36:40] <SnoopJ> ideally something that would let me produce exactly the objects you are trying to concat() ...
[20:36:58] <SnoopJ> although I think I can see the problem well enough from your JSON, the integer keys are all different
[20:37:10] <SnoopJ> I don't know how to fix that, though, because I don't understand the data
[20:37:15] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[20:37:40] *** Joins: pjoter (~october@s166.cyber-folks.pl)
[20:38:04] <acresearch> ChrisWarrick: https://paste.debian.net/1231265/    this is simulation of the larger dataset that i have
[20:38:21] <acresearch> ChrisWarrick: are my comments clearly explained?  you get what i am trying to do?
[20:39:09] <ChrisWarrick> acresearch: can you show an example output as well?
[20:39:29] <acresearch> ok ChrisWarrick  1 moment
[20:39:53] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:654e:e335:8cc0:9975) (Ping timeout: 250 seconds)
[20:40:18] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:654e:e335:8cc0:9975)
[20:40:49] *** Joins: bloody (~bloody@user/bloody)
[20:43:17] <dba> SnoopJ, https://bpa.st/23BA I hope this is helpful :)
[20:43:20] *** Joins: Roey (~Roey@user/Roey)
[20:43:30] <SnoopJ> dba, a naïve solution would be to forcefully change the index on all the DataFrames before joining, if you know that they correspond to the same index in the resulting DataFrame: https://bpa.st/VDFA
[20:43:36] *** pah is now known as pa
[20:45:13] <acresearch> ChrisWarrick: https://paste.debian.net/1231266/
[20:45:15] <dba> SnoopJ, what is there are multiple row (more than one) in the all dataframes?
[20:45:32] *** Quits: tomaw (~tom@libera/staff/tomaw) (Quit: Quitting)
[20:45:49] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[20:46:09] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[20:46:31] <SnoopJ> dba, then you will have to make whatever index adjustment is actually correct. It doesn't look like there's any information you can use to actually correlate which entries go together, but you know your data better than I do
[20:47:11] <SnoopJ> DataFrame.join() would be maybe useful if you had a column with an ID or something, but that doesn't appear to be the case...
[20:47:24] *** Joins: elink (~elink@user/elink)
[20:48:22] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:48:25] *** Quits: savolla (~quassel@95.10.205.18) (Read error: Connection reset by peer)
[20:48:49] <dba> SnoopJ, thanks! I will look at this further more and check DataFrame.join()
[20:48:51] <jinsun> dba: if they all have same number of rows you could do `pd.concat((x.reset_index(drop=True) for x in [df1, df2, df3]), axis=1)`
[20:48:53] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[20:48:54] *** Joins: savolla (~quassel@95.10.205.18)
[20:48:57] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:654e:e335:8cc0:9975) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:49:07] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[20:49:11] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:6bea:8d28:181a:13ad)
[20:49:16] *** Joins: tomaw (tom@libera/staff/tomaw)
[20:51:17] *** Joins: jdmark2 (~jdmark@user/jdmark)
[20:51:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[20:51:43] *** Joins: darksun (~darksun@user/darksun)
[20:51:51] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[20:51:52] *** Quits: jdmark2 (~jdmark@user/jdmark) (Remote host closed the connection)
[20:51:59] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[20:52:10] *** Quits: rsx (~dummy@ppp-188-174-158-157.dynamic.mnet-online.de) (Quit: rsx)
[20:52:12] *** Quits: hfckjg (~hfckjg@user/hfckjg) (Remote host closed the connection)
[20:52:13] <ChrisWarrick> acresearch: google says: https://stackoverflow.com/a/1643457
[20:52:27] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[20:52:35] <dba> jinsun, yes all dfs i will be working with have the same number of rows. I guess this would work like a charm :D
[20:52:40] *** Joins: hfckjg (~hfckjg@182.215.2.123)
[20:52:40] *** Quits: hfckjg (~hfckjg@182.215.2.123) (Changing host)
[20:52:40] *** Joins: hfckjg (~hfckjg@user/hfckjg)
[20:52:45] *** Joins: bancroft (~bancroft@user/bancroft)
[20:52:57] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[20:53:48] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:53:58] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[20:54:12] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 240 seconds)
[20:55:57] *** Quits: StickyIcky (~StickyIck@ec2-3-88-97-62.compute-1.amazonaws.com) (Ping timeout: 252 seconds)
[20:56:07] *** Quits: StickyIcky2 (~StickyIck@ec2-3-88-97-62.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[20:56:17] *** Quits: V_ (~V@103.240.169.19) (Quit: Leaving)
[20:56:33] *** Joins: StickyIcky2 (~StickyIck@fixed-187-190-161-48.totalplay.net)
[20:56:34] *** Joins: StickyIcky (~StickyIck@fixed-187-190-161-48.totalplay.net)
[20:56:50] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[20:57:24] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[20:57:36] <SnoopJ> ah yea, reset_index() is a good way to do the naive "they're already aligned just do it" thing
[20:58:49] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:58:57] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[20:59:26] <SnoopJ> Is `pip install pkg.whl[extra]` the right/best way to ask for extras when installing a .whl?
[20:59:39] <SnoopJ> (it seems to work, I just don't know if there are alternatives or what benefits they might offer)
[20:59:51] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:00:19] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:00:44] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[21:01:00] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[21:01:13] *** Joins: bluedust (~bluedust@103.161.144.138)
[21:01:17] <bancroft> question, if I set PIP_PREFIX, PYTHONUSERBASE, and PYTHONPATH in my systemd config, will it be essentially the same as running it inside a virtual environment?
[21:01:18] *** Joins: Guest87 (~Guest87@117.194.197.128)
[21:01:19] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[21:02:04] *** Joins: tct (~tct@user/tct)
[21:02:11] *** Joins: kosh (~kosh@user/kosh)
[21:02:13] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[21:02:39] *** Joins: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net)
[21:02:56] <tct> I have a version string of format MM.mm.bbbb (Major, minor, build). I need to pack that into a 32-bit integer. I already split the string successfully into the three components. but how does one assemble a 32-bit integer correctly in python from these three fields?
[21:03:00] <ChrisWarrick> bancroft: you should never set any of those variables
[21:03:04] *** Joins: teut (~teut@122.161.83.81)
[21:03:19] <bancroft> ChrisWarrick: ok, but why?
[21:03:21] <ChrisWarrick> bancroft: in a systemd unit, just run /path/to/venv/bin/python whatever.py
[21:03:37] <ChrisWarrick> bancroft: they will only break things, lead to confusion, and to things running in ways you didn’t expect
[21:04:12] <bancroft> ChrisWarrick: fair enough, I wasn't sure if all the installed libraries would get picked up fi I ran it with /path/to/venv/bin/python
[21:04:14] <bancroft> thanks for that!
[21:04:27] <ChrisWarrick> bancroft: yes, they will
[21:04:30] *** Quits: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net) (Client Quit)
[21:04:46] <ChrisWarrick> bancroft: the activate script is only a convenience for humans which modifies $PATH (and a few unimportant extras)
[21:05:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 272 seconds)
[21:06:20] *** Quits: savolla (~quassel@95.10.205.18) (Ping timeout: 272 seconds)
[21:06:32] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[21:07:07] *** Quits: pjoter (~october@s166.cyber-folks.pl) (Quit: Lost terminal)
[21:07:28] *** Joins: funhouse (~funhouse@user/funhouse)
[21:09:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:09:25] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[21:09:40] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:10:02] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[21:10:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:10:32] <SnoopJ> related question that I had yesterday: is there a way to tell Python "use the usercustomize.py at [path]?"
[21:10:41] *** Joins: darksun (~darksun@user/darksun)
[21:10:49] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:6bea:8d28:181a:13ad) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:10:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:11:04] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:6bea:8d28:181a:13ad)
[21:11:13] *** Joins: thiras_ (~thiras@user/thiras)
[21:11:17] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[21:11:41] <SnoopJ> I know I can put the file in the particular site (or symlink it) but this is enough fuss for multiple sites that I wouldn't bother.
[21:12:42] <acresearch> ChrisWarrick: it is not working, i can't get it to remove only the NaN without flattening,   the reccomendation you sent keep the value in
[21:13:07] *** Quits: Deimos (~Deimos@ool-44c51adf.dyn.optonline.net) (Ping timeout: 256 seconds)
[21:13:17] *** Joins: d1cor (~diego@179.63.242.122)
[21:13:47] *** Quits: hfckjg (~hfckjg@user/hfckjg) (Remote host closed the connection)
[21:15:06] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[21:15:11] *** Joins: mat001_ (~mat001@72.28.108.216)
[21:15:23] *** Joins: hfckjg (~hfckjg@182.215.2.123)
[21:15:23] *** Quits: hfckjg (~hfckjg@182.215.2.123) (Changing host)
[21:15:23] *** Joins: hfckjg (~hfckjg@user/hfckjg)
[21:15:26] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[21:15:50] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[21:16:49] *** Quits: StickyIcky2 (~StickyIck@fixed-187-190-161-48.totalplay.net) (Ping timeout: 256 seconds)
[21:17:05] *** Quits: StickyIcky (~StickyIck@fixed-187-190-161-48.totalplay.net) (Ping timeout: 256 seconds)
[21:17:22] *** Joins: StickyIcky2 (~StickyIck@ec2-3-88-97-62.compute-1.amazonaws.com)
[21:17:22] *** Joins: StickyIcky (~StickyIck@ec2-3-88-97-62.compute-1.amazonaws.com)
[21:17:52] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[21:18:17] *** Quits: hfckjg (~hfckjg@user/hfckjg) (Remote host closed the connection)
[21:18:23] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 272 seconds)
[21:18:35] *** Joins: hfckjg (~hfckjg@user/hfckjg)
[21:18:36] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[21:19:49] *** Quits: sobkas (~sobkas@95.175.17.217) (Read error: Connection reset by peer)
[21:20:09] *** Joins: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net)
[21:20:12] *** Joins: Blackpajamas (~Blackpaja@167.167.46.2)
[21:20:15] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[21:20:34] <novapy> How can I heck if an item exists at an index of a list?
[21:20:47] <novapy> s/heck/check
[21:20:57] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[21:20:58] <amogorkon> if item == List[i]?
[21:21:19] <amogorkon> or even
[21:21:20] <bjs> novapy: do you mean a particular item, or just if the list is that long>?
[21:21:26] <amogorkon> if item is List[i]
[21:21:40] <novapy> bjs: just if the list is that long
[21:21:51] <bjs> novapy: len(the_list) is the length of the list
[21:21:58] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:22:21] <amogorkon> len(yourlist) >= length?
[21:22:25] <bjs> novapy: so if len(the_list) > i  then the list has elements at least up to index i.
[21:22:36] *** Joins: mickey8 (~user@user/mickey)
[21:22:41] <novapy> ok
[21:22:51] *** Quits: Blackpajamas (~Blackpaja@167.167.46.2) (Client Quit)
[21:23:06] <novapy> if trying to factor large numbers faster
[21:23:11] <novapy> I'm
[21:23:23] *** Joins: fofoni_ (~fofoni@user/fofoni)
[21:23:34] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[21:23:47] <novapy> by comparing it to number being factored
[21:23:50] *** Quits: fofoni_ (~fofoni@user/fofoni) (Remote host closed the connection)
[21:24:08] *** dcaro is now known as dcaro_away
[21:26:02] *** Quits: hfckjg (~hfckjg@user/hfckjg) (Remote host closed the connection)
[21:26:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[21:26:37] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Ping timeout: 272 seconds)
[21:27:04] *** Joins: duuude (~user@user/duuude)
[21:27:45] <duuude> I try to add stuff to index i in a list this way:
[21:28:15] <duuude> list=list[:i]+[the_thing]+list[i:]
[21:28:30] <duuude> but it doesn't seem to get into the list
[21:28:30] *** Quits: vladoski (~vladoski@2001:b07:add:d406:907e:4f:b57f:11c2) (Remote host closed the connection)
[21:28:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:29:49] <duuude> why?
[21:29:55] <demsh> why not list = list.insert(i, the_thing)
[21:30:12] <demsh> oops, just "list.insert(i, the_thing)"
[21:30:13] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:de86:d03c:7719:1796) (Remote host closed the connection)
[21:30:21] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[21:30:24] *** Quits: jpic (~jpic@188.95.144.209) (Ping timeout: 272 seconds)
[21:31:38] <duuude> demsh: i recall it was because the thing at i no longer stays at index i
[21:32:08] *** Joins: jpic (~jpic@82.142.6.174)
[21:32:38] <duuude> neither it does with my approach
[21:32:45] <duuude> what did i even think
[21:32:56] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[21:32:59] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[21:34:35] <demsh> >>> t = [1,2,3];t.insert(2,55);t
[21:34:35] <demsh> [1, 2, 55, 3]
[21:34:59] *** Joins: sharksauce (sharksauce@user/sharksauce)
[21:35:28] <demsh> or you want to insert after i?
[21:35:36] <demsh> like at i+1?
[21:35:47] *** chowmein__ is now known as chowmeined
[21:35:57] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[21:36:12] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 240 seconds)
[21:38:54] <novapy> can I use break to get out of a for loop?
[21:38:59] <acresearch> people, anyone can help me compress this for loop into list comprehension?   https://paste.debian.net/1231275/
[21:39:29] *** Joins: jdmark (~jdmark@user/jdmark)
[21:40:16] <demsh> novapy: https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops
[21:40:32] *** Quits: kts (~kts@103.73.237.42) (Ping timeout: 272 seconds)
[21:40:39] <commiemuslim> Anyone here like to code in python?
[21:41:00] <commiemuslim> Or am I the only person in this arbitrary random channel who loves python
[21:41:17] *** Quits: mat001_ (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[21:42:47] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:f48e:ecac:8cfc:2c43) (Quit: Leaving)
[21:43:00] *** Quits: schumaml (~schumaml@dslb-092-074-002-089.092.074.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:43:15] *** Quits: jdmark (~jdmark@user/jdmark) (Read error: Connection reset by peer)
[21:43:25] <vanessa> commiemuslim: wut? did you mean to ask it in another channel?
[21:43:35] <The-Compiler> commiemuslim: what makes you think you'd be the only person who loves Python in a channel named #python?
[21:43:46] <grym> munch munch
[21:44:04] *** Joins: darksun (~darksun@user/darksun)
[21:44:16] <commiemuslim> The-Compiler, because... Well. Why else would I have come to a random channel I didn't select for any reason, and talk about python than to hope and pray to find others who like python
[21:44:34] <commiemuslim> Intel python interpreter FTW
[21:44:51] <The-Compiler> commiemuslim: I'm... not sure what your point is
[21:45:05] *** Joins: schumaml (~schumaml@dslb-178-002-181-231.178.002.pools.vodafone-ip.de)
[21:45:09] <commiemuslim> The-Compiler, sarcasm for the sake of conversation starting
[21:45:18] *** Joins: maxzor (~maxzor@laubervilliers-657-1-67-14.w90-63.abo.wanadoo.fr)
[21:45:35] <matsaman> grym: heh
[21:45:37] <commiemuslim> I like to chat on IRC about many things, including programming, and I love to code in python
[21:45:59] <commiemuslim> So I picked this channel to make a poor attempt to invoke some dialogue and maybe enjoy a chat
[21:46:06] *** Joins: jamiejackson (~jamiejack@131.106.140.145)
[21:46:09] <grym> commiemuslim: chat usually goes to ##python-offtopic, here
[21:46:10] <matsaman> and your nick is not provocative
[21:46:13] <commiemuslim> Oh
[21:46:34] *** Joins: trace987 (~trace@user/trace)
[21:46:39] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[21:46:41] <commiemuslim> Well martums5... I mean, I did choose it during a manic episode, which I am currently having another of
[21:46:51] <grym> #python itself is more tightly focused on answering technical questions about python stuff
[21:46:54] *** commiemuslim is now known as MarcusCockatooOw
[21:46:58] <exarkun> stop feeding the trolls
[21:47:06] <grym> munch munch
[21:47:25] <MarcusCockatooOw> I am not trolling, I'm trying to chat about python without any social skills
[21:47:27] <amogorkon> crunch crunch
[21:47:43] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: byebye)
[21:48:08] <MarcusCockatooOw> I have a non stable non usable python 3.6 frontend for GCC, that I started very recently but have plans and ideas of how to do the main work to get it written out
[21:48:11] *** Joins: zebrag (~chris@user/zebrag)
[21:48:14] <MarcusCockatooOw> I wish I succeed
[21:48:16] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[21:48:31] <MarcusCockatooOw> But, I have never made a language frontend to support another language in GCC
[21:48:34] *** Quits: elink (~elink@user/elink) (Read error: Connection reset by peer)
[21:48:34] *** Quits: mncheck (~mncheck@193.224.205.254) (Read error: Connection reset by peer)
[21:48:55] *** Quits: schumaml (~schumaml@dslb-178-002-181-231.178.002.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[21:48:58] *** MarcusCockatooOw is now known as CockatooDude
[21:49:07] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[21:49:25] <CockatooDude> there... less provocative nick?
[21:50:22] <deviantfero> how do people generally feel about types in python3?
[21:50:32] <CockatooDude> there... less provocative nick??
[21:50:51] <duuude> demsh: thanks fixed
[21:51:03] <deviantfero> I always thought python community would hate them, given that it is in theiry great that you have dynamic variables
[21:51:17] <bjs> deviantfero: well, lots of work is going into the typecheckers and annotations and people are using them so it can't be that everyone hates them
[21:51:21] <The-Compiler> deviantfero: seems to me like they gained a lot of traction, most popular libraries have type stubs available in some way or another. I really like using them personally, and think they are a must for bigger projects.
[21:51:22] <acresearch> SnoopJ: ChrisWarrick can you help me with this multi stage list comprehension?   https://paste.debian.net/1231276/   i can't figure out where to put the final if statement
[21:51:33] *** Quits: maroloccio (~marolocci@pousada3ja.mma.com.br) (Quit: WeeChat 3.0)
[21:51:57] <deviantfero> The-Compiler: thanks for qutebrowser btw :), yeah but it seems to be a thing even outside python
[21:52:13] <deviantfero> development is moving more towards statically type languages
[21:52:24] <CockatooDude> deviantfero, I like that types are not static and predefined, but can be checked and enforced if you choose to. Sometimes the best thing to do is convert a multiple type returning value to a specific type like a string from either an into or a float or a long float, or a bool... sometimes the type doesn't matter you need the string you convert it to with the string() invocation
[21:52:28] <deviantfero> ruby, javascript and python all have some sort of typing support that is really popular
[21:52:32] *** Joins: pyevery__ (~pyeveryth@dot1x-155-41-203-218.bumc.bu.edu)
[21:52:51] <deviantfero> or integrated in the language
[21:53:19] <deviantfero> CockatooDude, yeah I guess it is a bit more flexible in these languages than in an actual typed language, so it can provide the good stuff without the tedious stuff
[21:53:21] *** Joins: schumaml (~schumaml@dslb-178-002-181-231.178.002.pools.vodafone-ip.de)
[21:53:25] <CockatooDude> Well, there is python interpreters that have static typing. Some necessary while others just better to optimize use with no worries about some unexpected type conversion
[21:53:33] <The-Compiler> deviantfero: I know some people just use them for better IDE support, but also mypy is a great linter (and I love linters!). The great thing about gradual typing is that you can leave types off in situations where you really need them to be dynamic, or where they would get too complex. I used to hate static typing (though mostly coming from C and a bit of Java), but I really think an approach with
[21:53:35] <The-Compiler> optional type annotations is great.
[21:53:41] <SnoopJ> deviantfero, point of clarification: Python has always been "typed," but type annotations give a way to...well, annotate.
[21:53:43] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[21:54:08] <The-Compiler> deviantfero: and even many languages with static typing seem to gravitate towards making them a bit less mandatory (see e.g. auto in C++)
[21:54:12] <SnoopJ> Python won't be turning to a static type system any time soon, though. After all, many of the benefits are now available with 3rd party tools :)
[21:54:45] <deviantfero> well I think that's awesome, I do enjoy me some typescript, but I haven't really given annotations a try in python
[21:54:56] <deviantfero> I like the annotation flexibility
[21:55:09] <deviantfero> SnoopJ is this from python2 days?
[21:55:09] <CockatooDude> I love to just write simple text based games in python
[21:55:15] <SnoopJ> deviantfero, what is "this?"
[21:55:17] <grym> i kind of habitually add type hints now when it's easy to do so
[21:55:34] *** Joins: summersault (~summersau@179.221.251.36)
[21:55:36] <deviantfero> what you shared about python bein technically typed from the start
[21:55:39] <grym> i won't lie; at least half of why is that it lets my IDEs do autocompletion better
[21:55:41] <CockatooDude> Sometimes, I go overkill and start adding ridiculous features that don't belong in a text based RPG I am writing for fun and don't intend to take seriously
[21:55:56] <grym> deviantfero: "foo" + 1 has ~always been a TypeError
[21:56:01] <The-Compiler> I like how I can just e.g. run partially refactored code to see where I stand in a larger refactoring, without a compiler in the way (hah)
[21:56:02] <SnoopJ> deviantfero, yes, Python has had types for a very long time. Type annotations are new in 3.x though
[21:56:41] <The-Compiler> makes perfect sense to me to look at types from more of an IDE support / linting perspective
[21:57:13] <grym> i also use annotations heavily for situations that don't involve ide tooling or an explicit typechecker step
[21:57:15] <CockatooDude> The first programming I ever did, why and when I learned... Was MUD coding. Started with SMAUG codebase and minimal little changes... after carrying around thousands of pages of printed out code when I was young and there was no portable computers I could use 6 or 8 hours without plugging in
[21:57:33] <grym> as third party libraries have learned to leverage them for, e.g., class generation
[21:57:36] <CockatooDude> That was C. Python is so much more enjoyable to write code in, but has it's pros as well as cons
[21:57:45] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:747f:b23b:8083:c201)
[21:57:51] <CockatooDude> I wish I knew C++ well
[21:57:59] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[21:58:27] <CockatooDude> because that's C += 1. So it's one arbitrary unit better than my main low level non asm language
[21:58:45] *** Quits: schumaml (~schumaml@dslb-178-002-181-231.178.002.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:58:51] <CockatooDude> I mean. It isn't something I enjoy working with but I know and appreciate many benefits
[21:59:10] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[21:59:41] <SnoopJ> seful terminology in languages with static type systems, too. A type specifier is just a note for the compiler's sake, after all :)
[21:59:54] *** Joins: Ryzome (~Ryzome@static-host-66-18-59-100.epbinternet.com)
[21:59:56] <SnoopJ> erm, oops, I accidentally the start of that message
[21:59:58] <Ryzome> Hi.
[22:00:00] *** Joins: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur)
[22:00:07] <CockatooDude> Python I wish has a very optimized native elf binary compiler with GCC level system architecture and instruction set optimizing, or unoptimized human readable asm output, or easily debuggable output
[22:00:46] <SnoopJ> CockatooDude, CPython is quite debuggable with e.g. gdb, and if you want something that compiles Python source to native, check out PyPy and Numba
[22:00:51] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[22:00:51] *** Joins: schumaml (~schumaml@dslb-092-074-011-063.092.074.pools.vodafone-ip.de)
[22:00:55] *** Joins: Guest143332 (~Guest1433@ppp046177199213.access.hol.gr)
[22:01:12] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[22:01:25] <novapy> How is annotation specified?
[22:01:26] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 272 seconds)
[22:01:26] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 272 seconds)
[22:01:35] *** Quits: Guest87 (~Guest87@117.194.197.128) (Ping timeout: 256 seconds)
[22:01:41] <CockatooDude> my goal is to make Python 3.6, be able to compile with GCC. I have never tried a new language support frontend for GCC... just some minor optimizing changes, a few new routines same purpose, and I did a few unit test failure fixes for Rzyen gen 1
[22:01:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[22:02:06] <CockatooDude> I am no expert with compilers, but not completely unexperienced with compiler work
[22:02:13] *** Quits: Guest143332 (~Guest1433@ppp046177199213.access.hol.gr) (Client Quit)
[22:02:13] <demsh> instruction set optimization contradicts easy debugging, you have to trade-off one for another somewhat
[22:02:17] *** Quits: StickyIcky2 (~StickyIck@ec2-3-88-97-62.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[22:02:17] *** Quits: StickyIcky (~StickyIck@ec2-3-88-97-62.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[22:02:29] <bjs> CockatooDude: you mean adding a frontend to gcc to accept .py files ?
[22:02:33] <CockatooDude> Yeah, you want both, as options for different stages of development
[22:02:37] <CockatooDude> bjs, yes
[22:02:49] *** Quits: andreasbuhr (~quassel@p549dba39.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:02:55] <EdFletcher> Why not make it an LLVM front end?
[22:03:01] *** Joins: StickyIcky (~StickyIck@fixed-187-190-161-48.totalplay.net)
[22:03:03] <SnoopJ> that's basically what Numba is
[22:03:07] *** Joins: Cera (~Cera@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[22:03:07] *** Joins: StickyIcky2 (~StickyIck@fixed-187-190-161-48.totalplay.net)
[22:03:13] <EdFletcher> Yeah thought so
[22:03:13] *** Quits: Cera (~Cera@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Changing host)
[22:03:13] *** Joins: Cera (~Cera@user/Cera)
[22:03:15] <CockatooDude> Because I know GCC fairly well, and LLVM not at all
[22:04:52] <CockatooDude> I mean, i have read a large amount of GCC code, and I have done some small contributions. And it is the toolchain I prefer to use based on knowing and relying on it since 30+ years ago when I got my first compiler, which I needed to order a Linux CD image of because dailup could never stay connected for the 4 days needed for a full installer ISO
[22:05:15] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[22:05:33] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[22:05:48] *** Quits: schumaml (~schumaml@dslb-092-074-011-063.092.074.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[22:05:55] *** Joins: kevr (~kevr@user/kevr)
[22:06:42] <CockatooDude> Also, I didn't know of or have help finding a free Windows compiler, it was with DOS 16 bit compiler, I forget which one, but it came with a book on C I got... and it wasn't really anything more than a compiler and text editor. the name started with B and was all capitals, it was paid software, but I had the 16 bit DOS version with my C book my dad bought me
[22:06:56] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[22:07:46] <HurricaneHarry> good ol Borland C
[22:07:49] <CockatooDude> But, I wish I learned python in my early days, then advanced to C, instead of struggling with low level more CS type concepts, vs high level beginner friendly guides and easier to write functional code
[22:07:58] <CockatooDude> Yes BORLAND C
[22:08:04] <CockatooDude> For MS DOS 5.0
[22:08:11] *** Joins: schumaml (~schumaml@dslb-178-002-185-177.178.002.pools.vodafone-ip.de)
[22:08:15] <CockatooDude> It didn't even have Windows support for 3.1
[22:09:02] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[22:09:27] *** Joins: blackleitus (~blackleit@189.195.195.100)
[22:10:16] <EdFletcher> i used to work in Borland's old Scott's Valley building! we went wandering around once and found old manuals for the C compiler in filing cabinets, it was a fun blast from the past
[22:10:17] <causa_sui> sounds doable, go for it
[22:10:24] *** Joins: jjasghar8 (~jjasghar@idlerpg/player/jjasghar)
[22:11:11] *** Pixi_ is now known as Pixi
[22:11:18] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 260 seconds)
[22:11:19] *** Joins: sirn- (~sirn@user/sirn)
[22:11:28] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[22:11:41] *** Joins: Vonter (~Vonter@user/vonter)
[22:11:43] *** sirn- is now known as sirn
[22:11:55] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[22:12:06] <novapy> Someone mind helping me here? https://bpaste.net/6BXA
[22:12:41] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Ping timeout: 256 seconds)
[22:12:41] *** jjasghar8 is now known as jjasghar
[22:13:33] <phy1729> Could you explain the goal in words rather than code?
[22:13:57] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[22:14:15] *** Joins: lbalhar (~lbalhar@93.185.13.25)
[22:14:42] <novapy> So, when factoring big numbers, the program takes a long time from having to iterate through all those numbers
[22:15:03] *** Joins: naeui (~cpp@user/naeui)
[22:15:03] <CockatooDude> I agree. Sometimes the code intent and purpose is just obvious. Usually in my experience reading good code of widely used and adopted projects... This code, has no context to follow what your purpose and intended methodology is
[22:16:10] <novapy> to speed up the process, I figured that upon reaching the halfway point of the factors, the rest of the factors can be determined by arithmetic
[22:16:25] <CockatooDude> try writing pseudocode, and then writing python with comments, use lots of lines and comment every step, and then throw into elegant form of combined into fewer lines but without compromising on function, and with comments to help others still involvex
[22:16:48] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[22:16:52] <EdFletcher> novapy: looks like you can benefit from memoization here
[22:16:56] <novapy> I just can't figure out how to properly add them in to the list
[22:17:03] <CockatooDude> I mean, I learned in a programming class for kids... Start with a flow chart diagram set. That was ANCIENT methodology
[22:17:08] <phy1729> Is hard-coding a list of primes up to a relevant size possible?
[22:17:24] <phy1729> (That's what I did for primel solving)
[22:17:34] <amazigh> hey, I built an immutable binary search tree, I am wondering how I can put it for good use, any idea?
[22:17:45] *** Joins: sirn- (~sirn@user/sirn)
[22:17:48] <novapy> EdFletcher: memoization?
[22:17:50] <CockatooDude> Has anyone here ever designed an entire useful program in a flow chart before coding anything? I have not other than that one class lesson.
[22:17:54] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 272 seconds)
[22:17:54] *** Quits: Staunch (~Staunch@150.93.99.34.bc.googleusercontent.com) (Ping timeout: 272 seconds)
[22:17:58] *** Joins: Betal (~Betal@user/betal)
[22:18:12] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 240 seconds)
[22:18:13] *** sirn- is now known as sirn
[22:18:17] *** Quits: stikx (~stikx@2604:3d08:7a7e:a900::ed8) (Remote host closed the connection)
[22:18:34] *** Joins: stikx (~stikx@2604:3d08:7a7e:a900::67d6)
[22:18:50] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[22:18:59] <EdFletcher> novapy: caching previously-performed expensive calculations so that you don't have to re-perform them, just cheaply look them up in the cache instead https://en.wikipedia.org/wiki/Memoization -- admitedly i only skimmed your code but from your description it sounds like it could help
[22:19:06] *** Joins: purple_cthulhu (~rax@2.186.4.20)
[22:19:41] <EdFletcher> it's a classic example of time/space(memory) tradeoff
[22:20:02] <novapy> EdFletcher: Not really sure thats what I need
[22:20:22] <EdFletcher> novapy: well again i only skimmed your code, it's quite dense. if not, no biggie. if so, there ya go!
[22:21:43] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[22:22:14] <novapy> I just want to know how I can properly calculate the rest of the list, I'm struggling with how exactly to add them back to the list
[22:22:33] *** Quits: maxzor (~maxzor@laubervilliers-657-1-67-14.w90-63.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:23:00] *** Joins: asdfsfdasdfw (~asdfsfdas@12.182.213.210)
[22:23:17] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:23:48] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[22:23:57] *** Quits: lbalhar (~lbalhar@93.185.13.25) (Ping timeout: 252 seconds)
[22:24:02] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Remote host closed the connection)
[22:24:46] *** Joins: sirn- (~sirn@user/sirn)
[22:25:07] <novapy> how do I iterate a list in reverse
[22:25:12] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[22:25:30] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 272 seconds)
[22:25:31] *** sirn- is now known as sirn
[22:26:06] <EdFletcher> reverse it first then iterate the reversed copy normally? (that's the functional way) a loop counting the index backward is the traditional imperative way i suppose
[22:26:51] <bjs> novapy: `for v in reversed(a_list):`
[22:27:49] <novapy> bjs: Can I start at an index in the reversed list?
[22:28:02] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 272 seconds)
[22:28:25] <bjs> novapy: not exactly,  what are you trying to do
[22:28:34] <SnoopJ> `for v in a_list[start::-1]:`  ?
[22:28:34] *** Joins: qlixed (~qlixed@181.44.129.13)
[22:29:15] *** Joins: sirn- (~sirn@user/sirn)
[22:29:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:29:37] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 240 seconds)
[22:29:37] *** sirn- is now known as sirn
[22:30:18] *** Joins: whistl (~whistl@2600:1700:3d10:f80:aa20:79b6:facf:26cc)
[22:30:57] *** Joins: Masterphi (~Masterphi@user/masterphi)
[22:31:14] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[22:32:16] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:32:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:32:51] *** Joins: mat001 (~mat001@72.28.108.216)
[22:33:05] *** Joins: edd_lc (~edd_lc@85.64.220.62.dynamic.barak-online.net)
[22:33:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[22:34:14] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[22:34:37] *** Quits: dld (~davidlowr@2601:197:600:1210:5c9e:f676:ddc7:b9f7) (Ping timeout: 240 seconds)
[22:34:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:35:47] *** Joins: dld (~davidlowr@2601:197:600:1210:c94f:64b7:1eea:84b1)
[22:36:00] *** Joins: ham5urg (~ham5urg@p200300d1671a760027a033cde4cfa662.dip0.t-ipconnect.de)
[22:36:45] *** Quits: whistl (~whistl@2600:1700:3d10:f80:aa20:79b6:facf:26cc) (Quit: Leaving)
[22:36:53] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[22:37:21] *** Joins: qlixed (~qlixed@181.44.129.13)
[22:37:29] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:37:55] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[22:37:56] *** Quits: naeui (~cpp@user/naeui) (Read error: Connection reset by peer)
[22:38:14] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[22:38:23] *** Joins: naeui (~cpp@user/naeui)
[22:38:56] *** Quits: naeui (~cpp@user/naeui) (Read error: Connection reset by peer)
[22:39:16] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:c5ff:8a02:34b1:f9b4) (Quit: Textual IRC Client: www.textualapp.com)
[22:39:58] *** Joins: CombatVet (~c4@user/combatvet)
[22:40:27] *** Joins: naeui (~cpp@user/naeui)
[22:41:08] <frat3rius> guys I'm looking for some good way to create Protocol class from django Model class, is there some way or I need to manually copy all methods from Model, ModelBase classes into new Protocol class? Generally what I'd like to achieve is have some way to annotate Mixins that should be used with Model class
[22:41:09] *** Joins: klf (~fkl@66.220.205.98)
[22:41:37] *** Joins: nomic (~nomic@185.217.117.193)
[22:41:48] *** Quits: naeui (~cpp@user/naeui) (Read error: Connection reset by peer)
[22:41:57] <klf> Is there an appropriate channel for PLY (Python Lex Yacc) discussions
[22:42:25] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[22:42:37] *** Quits: slowtype- (~slowtyper@2a02:214c:8494:a100:8f:b3ce:d37b:a68d) (Ping timeout: 240 seconds)
[22:42:37] *** Joins: darksun (~darksun@user/darksun)
[22:43:13] *** Joins: naeui (~cpp@user/naeui)
[22:43:45] *** Quits: cliluw (~cliluw@47.147.77.43) (Remote host closed the connection)
[22:44:15] *** Joins: cliluw (~cliluw@47.147.77.43)
[22:44:32] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:44:54] *** Joins: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de)
[22:45:20] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:45:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:47:07] *** Joins: slowtype- (~slowtyper@79.103.111.41.dsl.dyn.forthnet.gr)
[22:47:08] *** Quits: naeui (~cpp@user/naeui) (Read error: Connection reset by peer)
[22:47:17] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 250 seconds)
[22:47:24] *** Quits: schumaml (~schumaml@dslb-178-002-185-177.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[22:47:40] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[22:48:32] *** Joins: naeui (~cpp@user/naeui)
[22:48:54] *** Quits: naeui (~cpp@user/naeui) (Client Quit)
[22:49:22] *** Joins: schumaml (~schumaml@dslb-178-007-196-136.178.007.pools.vodafone-ip.de)
[22:50:38] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[22:50:39] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[22:52:07] *** Quits: slowtype- (~slowtyper@79.103.111.41.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[22:52:43] *** Joins: Xardas (~Xardas@149.233.51.127)
[22:54:08] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Quit: WeeChat 3.4)
[22:54:47] *** Joins: cdown_ (~cdown@188.214.11.14)
[22:55:16] *** Quits: schumaml (~schumaml@dslb-178-007-196-136.178.007.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[22:56:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:56:40] *** Joins: schumaml (~schumaml@ipservice-092-211-206-075.092.211.pools.vodafone-ip.de)
[22:56:46] <novapy> frat3rius: Does creating a subcalss not work?
[22:57:23] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[22:57:30] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[22:57:34] *** cdown_ is now known as cdown
[22:58:01] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:58:03] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[22:58:04] <bancroft> besides PYENV_ROOT are there any other environment variables I should be setting?
[22:58:10] *** Joins: summersault (~summersau@179.221.251.36)
[22:59:17] <novapy> SnoopJ: How does that syntax work?
[22:59:41] <frat3rius> novapy I need Protocol cause I want to extend it and create Protocol that will annotate self in my mixin
[23:00:22] <frat3rius> I cant derive Protocol class from non-protocol one
[23:00:39] <novapy> frat3rius: `class Mixin(Protocol):` ?
[23:00:45] <frat3rius> so I'd like to create Protocol from Model class and extend it
[23:00:55] *** Joins: sukil (~sukil@169.red-81-47-88.dynamicip.rima-tde.net)
[23:01:02] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[23:01:25] <novapy> err `class Protocol(Model)` ?
[23:01:26] *** Joins: blackleitus (~blackleit@189.195.195.100)
[23:01:31] *** Joins: ttpp (~tttppp@37.115.45.192)
[23:01:34] *** Joins: slowtype- (~slowtyper@79.103.224.184.dsl.dyn.forthnet.gr)
[23:01:49] <SnoopJ> novapy, `lst[start:stop:end]` is the same thing as `lst[slice(start, stop, end)]`, and if you omit one of them it will be None. The nitty-gritty details of what it does for sequences are described under "Sequences" here: https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy
[23:02:13] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 256 seconds)
[23:02:32] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[23:02:47] * novapy is now researching how to properly slice lists
[23:03:03] <frat3rius> novapy then I'm not getting Protocol class in meaning of `from typing import Protocol`
[23:03:30] <novapy> frat3rius: wym?
[23:03:30] *** Joins: djapo (~archangel@user/djapo)
[23:04:39] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[23:04:39] <novapy> all you want to do is extend and modify the Model class, right?
[23:05:53] *** Joins: magla (~gelignite@55d4275f.access.ecotel.net)
[23:06:10] <sukil> hi, how does python know when a package doesn't belong to another? If I have the bs4 package in another package, it (correctly) doesn't consider it to be inside it, and sys.modules yields the correct output
[23:06:26] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[23:08:03] <frat3rius> novapy no I'd like to create Protocol class that will have all attributes and methods from Model class, so I could extend it with some new method definitions and finaly use it with my mixin like described here: https://stackoverflow.com/a/59128961
[23:08:27] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[23:08:31] <sukil> use case: my screen reader is extensible with Python plugins. I'd like to avoid the situation where if two plugins depend on one package, the alphabetically least ordered one will be used by both (as per plugins.__path__), even if two copies are included
[23:09:14] <novapy> frat3rius: Yes, that's kind of the same thing
[23:09:35] *** Quits: CockatooDude (~communist@bras-base-tnhlon4048w-grc-63-67-70-22-70.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:09:52] <novapy> the syntax is `class Protocol(Model):`
[23:10:07] *** Joins: ubert (~Thunderbi@p200300ecdf09942db6b20453daa25e1f.dip0.t-ipconnect.de)
[23:10:25] *** Quits: sobkas (~sobkas@95.175.17.217) (Ping timeout: 256 seconds)
[23:11:19] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:12:39] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[23:13:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:13:01] *** Lord_of_Life_ is now known as Lord_of_Life
[23:13:12] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:793d:d161:ffe1:d8df) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:13:15] *** Quits: schumaml (~schumaml@ipservice-092-211-206-075.092.211.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[23:14:02] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:1dac:22ea:b208:2f46)
[23:15:08] *** Joins: schumaml (~schumaml@dslb-178-002-189-048.178.002.pools.vodafone-ip.de)
[23:15:55] *** Quits: amaenli (~amaenli@aries.uberspace.de) (Changing host)
[23:15:55] *** Joins: amaenli (~amaenli@user/amaenli)
[23:16:30] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[23:17:05] *** Polo is now known as GiverOfDomains
[23:17:21] *** GiverOfDomains is now known as POLO
[23:17:24] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:17:26] *** Quits: StickyIcky2 (~StickyIck@fixed-187-190-161-48.totalplay.net) (Ping timeout: 272 seconds)
[23:17:26] *** Quits: StickyIcky (~StickyIck@fixed-187-190-161-48.totalplay.net) (Ping timeout: 272 seconds)
[23:17:33] *** POLO is now known as GiverOfDomains
[23:17:48] *** Joins: vicfred (~vicfred@user/vicfred)
[23:18:05] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[23:18:29] *** Joins: StickyIcky2 (~StickyIck@ec2-35-174-93-111.compute-1.amazonaws.com)
[23:18:29] *** Joins: StickyIcky (~StickyIck@ec2-35-174-93-111.compute-1.amazonaws.com)
[23:18:42] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[23:19:49] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[23:20:27] *** Joins: dme86 (~dan@user/dan86)
[23:20:29] *** Joins: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net)
[23:20:35] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[23:21:04] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[23:21:29] *** Joins: blackleitus (~blackleit@189.195.195.100)
[23:21:49] *** Joins: toobroketoquit (~toobroket@163.123.206.20)
[23:21:53] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[23:22:21] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[23:25:58] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:26:58] *** Quits: klf (~fkl@66.220.205.98) (Remote host closed the connection)
[23:27:32] <novapy> EdFletcher phy1729: I managed to get it work, it goes significantly faster now: https://bpaste.net/GDRQ
[23:27:33] <frat3rius> novapy so what does Protocol class from typing actually do?
[23:27:56] <novapy> frat3rius: What do you mean?
[23:28:22] *** Quits: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net) (Read error: Connection reset by peer)
[23:28:54] <frat3rius> I thought that Protocol class from typing has some magic inside which tells type checkers that it's a Protocol not a normal class
[23:29:42] <novapy> `class Protocol(Model):` creates the class Protocol as a child of the class Model, thus inheriting all of Model's attributes and methods.
[23:29:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:30:26] <frat3rius> yup but it's no longer Protocol class in context of type checking or am I wrong?
[23:30:34] *** Joins: sobkas (~sobkas@95.175.17.217)
[23:30:40] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:31:41] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[23:31:48] <novapy> So, wait, you want to create a class that is a fusion of both Protocol and Model?
[23:31:53] *** Joins: sobkas (~sobkas@95.175.17.217)
[23:32:08] <frat3rius> yes exactly
[23:32:34] <frat3rius> I'd like to somehow create Protocol class in meaning of type checking from a Model
[23:32:46] <novapy> which one do you want to inherit the most from?
[23:33:04] <frat3rius> cause it's pointless to copy everything from Model and ModelBase into new Protocol
[23:33:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:33:20] *** Joins: shardok_ (~shardok@ip-088-153-002-040.um27.pools.vodafone-ip.de)
[23:33:22] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Remote host closed the connection)
[23:33:23] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:33:31] <novapy> are you trying to create a new Protocol?
[23:33:41] <frat3rius> and I was wondering if there's way to do that or everyone simply creates such Protocol class by hand
[23:33:50] <frat3rius> novapyyes new Protocol class
[23:34:21] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[23:34:32] <novapy> frat3rius: Which do you want to inherit from? typing.Protocol or Model?
[23:34:40] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:34:54] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[23:36:08] <novapy> afaik, You can only inherit from on class at a time, however, you can import the otherone and use it in class methods
[23:36:09] <frat3rius> I want to have Protocol class which describes Model class, and I want extend it with some additional methods/attributes which will describe final model class
[23:36:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:36:43] *** Joins: aselman4 (~aselman4@ashpr013-p2.nls.ford.com)
[23:36:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:37:06] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[23:37:10] <frat3rius> such Protocol can then be used as type annotation for self parameter inside of my Mixin class
[23:37:15] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[23:37:15] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:37:36] <novapy> frat3rius: https://realpython.com/lessons/multiple-inheritance-python/ should help
[23:38:07] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:38:18] <aselman4> Hello. does anyone know how to attach the visual studio debugger to python to debug a pyd extension?
[23:38:35] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:38:43] *** Joins: crashrep (~crashrep@user/crashrep)
[23:40:19] *** Joins: Auron (Auron956@user/auron)
[23:40:45] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[23:42:15] *** Joins: jazzy (~jaziz@user/jaziz)
[23:42:27] *** Parts: llanhmod (~developer@user/domhnall/x-2887755) ()
[23:43:16] *** ravioli_ is now known as ravioli
[23:43:33] *** Joins: duuude (~user@user/duuude)
[23:44:57] *** Quits: edd_lc (~edd_lc@85.64.220.62.dynamic.barak-online.net) (Ping timeout: 240 seconds)
[23:45:42] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[23:46:12] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:3130:efab:19e7:e707) (Quit: Leaving)
[23:47:22] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:47:47] *** climax is now known as gentooclimax
[23:47:55] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1002)
[23:48:27] *** Joins: bluedust_ (~bluedust@81.92.205.26)
[23:48:50] <aselman4> nvm, figured it out. i was attached to the wrong python process
[23:48:51] *** Joins: panella32 (~panella32@154.6.22.33)
[23:50:13] *** Quits: aselman4 (~aselman4@ashpr013-p2.nls.ford.com) (Quit: Client closed)
[23:50:34] *** Quits: shardok_ (~shardok@ip-088-153-002-040.um27.pools.vodafone-ip.de) (Quit: Someone cut the cable...)
[23:51:31] *** Quits: bluedust (~bluedust@103.161.144.138) (Ping timeout: 256 seconds)
[23:52:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[23:52:55] *** Stench is now known as Staunch
[23:53:46] *** Joins: darksun (~darksun@user/darksun)
[23:54:25] <novapy> Is there anyway to optimize this to work even faster? https://bpaste.net/MG5Q
[23:55:42] <novapy> The number passed to main() takes ~13 seconds to run, and while my pc is not very fast, I'm wondering if I can work with even larger numbers
[23:57:07] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[23:57:13] *** Joins: CombatVet_ (~c4@user/combatvet)
[23:57:31] <KirkMcDonald> novapy: The goal is to find all of the factors of a given integer?
[23:57:40] <novapy> KirkMcDonald: Right
[23:57:48] *** Quits: purple_cthulhu (~rax@2.186.4.20) (Quit: Leaving.)
[23:58:05] *** CombatVet_ is now known as CombatVet
[23:58:09] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Quit: WeeChat 3.3)
[23:59:14] <novapy> It does it properly, but I'm wondering if there is anything I can make use of to make it work faster
[23:59:33] <feoh> I thought lists were super slow and that you should use dicts instead for perf
[23:59:59] <feoh> I dunno if that's still true in modern Python versions.
