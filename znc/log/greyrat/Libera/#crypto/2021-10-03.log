[00:01:14] <damarusama> when encrypting a string, or clear text data, what is the size of the encrypted message? does it become bigger the 'strongest' the encryption is used?
[00:01:48] <Wulf> damarusama: quite often the size is the same as before
[00:02:01] *** Joins: NeoCron (~NeoCron@p200300c4cf383d002d40c41e1edf7d71.dip0.t-ipconnect.de)
[00:02:11] <damarusama> hum ok
[00:02:47] <Wulf> damarusama: why don't you look at some common crypto algorithms and see for yourself?
[00:02:48] <damarusama> so I have this string of 160 numbers only, I can deduct that the data could be appx 160 characters? Or the reverse doesn't apply here?
[00:02:54] <damarusama> right
[00:04:44] <Wulf> damarusama: that might be the silly-RSA encryption scheme: very small N, encrypt each char on its on using textbook RSA, convert each encrypted message to decimal without leading zeros, concatenate this.
[00:05:34] <tolarz> ECB mode?
[00:05:41] <Wulf> damarusama: data size might be like a third or fifth of the encrypted size.
[00:05:57] <Wulf> damarusama: of course I'm only guessing here :)
[00:05:58] <damarusama> yeah I have part of the data 
[00:06:19] <damarusama> which should be really small probably 30 character maximum
[00:07:10] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:09:59] <Alipha> With RSA, you could have a decryption key and be unable to encrypt, but that would be unusual and you'd have to go to special lengths to create such a key (typically, the encryption exponent is 3, 65537, or something guessable, but you could design a key pair where it is not)
[00:11:06] <MacGyver> 3 has kinda fallen out of favour though.
[00:11:14] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[00:11:36] <Wulf> Today I learned that once 1 was used :)
[00:11:42] <MacGyver> What.
[00:11:46] <MacGyver> Explain.
[00:11:52] <MacGyver> [citation needed]
[00:11:58] <Wulf> MacGyver: https://github.com/saltstack/salt/commit/5dd304276ba5745ec21fc1e6686a0b28da29e6fc
[00:14:47] <MacGyver> I'm not sure whether I was aware of this before.
[00:14:59] <MacGyver> If I was, I may have suppressed the memory
[00:15:57] <ericonr> understandable 
[00:17:39] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[00:17:44] *** Quits: lord| (~lordpipe@user/lordpipe) (Quit: https://i.imgur.com/xacQ09F.mp4)
[00:19:01] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[00:27:56] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[00:28:56] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[00:36:37] *** Quits: msfninja (~root@ip149-32-176-143.adsl2.static.versatel.nl) (Changing host)
[00:36:38] *** Joins: msfninja (~root@user/msfninja)
[00:45:56] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 252 seconds)
[00:46:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:47:21] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:03:15] *** Joins: shawn_ (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[01:07:13] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Ping timeout: 252 seconds)
[01:08:31] *** Joins: jarthur (~jarthur@cpe-70-114-141-26.austin.res.rr.com)
[01:09:07] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[01:13:49] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[01:16:46] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[01:17:21] *** Server sets mode: +nt 
[01:28:47] *** Joins: machinedgod (~machinedg@24.105.81.50)
[01:48:48] *** Quits: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net) (Read error: Connection reset by peer)
[01:48:50] *** Quits: jarthur (~jarthur@cpe-70-114-141-26.austin.res.rr.com) (Quit: jarthur)
[01:52:35] *** Joins: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net)
[02:00:05] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 264 seconds)
[02:00:15] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[02:07:16] *** Joins: gggpkm_ (~gggpkm@60.10.194.45)
[02:07:36] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[02:11:28] *** Joins: akaWolf (~akaWolf@akawolf.org)
[02:12:20] *** Quits: gggpkm_ (~gggpkm@60.10.194.45) (Remote host closed the connection)
[02:13:23] *** Quits: Disconsented (~quassel@107.170.227.20) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:13:28] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[02:13:46] *** Joins: Disconsented (~quassel@107.170.227.20)
[02:31:49] *** Joins: norskal (~norskal@101.175.64.73)
[02:32:42] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Remote host closed the connection)
[02:35:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[02:37:13] *** Joins: Populus (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se)
[02:42:30] <ioxzev1z> Does using 1 destroy the security of that key?
[02:44:37] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[02:45:44] <ericonr> ioxzev1z: RSA is message^exponent mod n
[02:46:06] <ericonr> if exponent ==1 -> cypher text == message
[02:46:11] *** Joins: Wulf (~Wulf@user/wulf)
[02:46:20] <ioxzev1z> o i c
[02:46:32] <ericonr> message here probably including padding and such, since apparently they did do padding
[02:49:01] <ioxzev1z> small mistake then
[02:49:25] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[02:55:04] *** Quits: X-Scale (~ARM@83.223.242.77) (Ping timeout: 252 seconds)
[02:57:39] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[03:24:56] *** Joins: jarthur (~jarthur@cpe-70-114-141-26.austin.res.rr.com)
[03:25:42] *** Quits: jarthur (~jarthur@cpe-70-114-141-26.austin.res.rr.com) (Client Quit)
[03:29:53] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[03:33:37] *** Joins: gggpkm (~gggpkm@111.61.226.166)
[03:39:13] *** Joins: tent405 (~tent405@138.199.40.168)
[03:40:50] *** Quits: shawn_ (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Ping timeout: 252 seconds)
[03:42:34] *** Joins: jarthur (~jarthur@cpe-70-114-141-26.austin.res.rr.com)
[03:44:06] *** Quits: BadKarma (~BadKarma@user/badkarma) (Quit: leaving)
[03:47:49] *** Quits: chomwitt (~chomwitt@ppp-2-85-111-14.home.otenet.gr) (Ping timeout: 252 seconds)
[03:49:28] *** Quits: tent405 (~tent405@138.199.40.168) (Ping timeout: 252 seconds)
[03:53:50] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:54:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:58:55] *** Quits: NeoCron (~NeoCron@p200300c4cf383d002d40c41e1edf7d71.dip0.t-ipconnect.de) (Quit: Leaving)
[04:01:00] *** Joins: igemnace (~ian@user/igemnace)
[04:08:03] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[04:09:17] <rk4> the salt rsa thing is one of many reminders that maybe you should treat saltstack as not far off a telnetd with a blank password [https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=saltstack]
[04:10:55] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[04:21:45] *** Quits: jarthur (~jarthur@cpe-70-114-141-26.austin.res.rr.com) (Quit: jarthur)
[04:22:53] *** Joins: carlino3 (~carlino3@user/carlino3)
[04:22:59] <carlino3> hello
[04:23:11] <ms7821> welcome
[04:24:15] *** Joins: gggpkm_ (~gggpkm@60.10.194.45)
[04:26:45] *** Quits: gggpkm (~gggpkm@111.61.226.166) (Ping timeout: 250 seconds)
[04:29:14] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[04:30:47] *** Joins: Ori_B (~ori@mimir.eigenstate.org)
[04:32:39] <carlino3> what is a good way to generate any asymmetric algorithm key pair using a 4-digit or 6-digit pin as seed?
[04:32:43] *** Quits: Ori_B (~ori@mimir.eigenstate.org) (Remote host closed the connection)
[04:33:26] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:33:41] <rk4> there isn't one
[04:34:04] <rk4> that's a woefully short about of entropy
[04:34:07] <ms7821> use DHKE, and use the PIN to validate the result
[04:34:30] *** Joins: esses (uid38151@id-38151.hampstead.irccloud.com)
[04:34:36] <ms7821> (basically reducing the chance of MITM by the birthday factor of the size of the pin)
[04:35:28] <ms7821> if you really need an asymmetric key pair, yeah, nothing you can do
[04:36:21] <ms7821> unless you have a trusted third party and low traffic I suppose
[04:37:10] <carlino3> actually i'm trying to solve a problem, i will try to explain it the best as i can
[04:37:24] <rk4> it is normally best to explain the problem being solved :)
[04:43:46] *** Joins: gggpkm (~gggpkm@60.10.194.45)
[04:45:37] *** Quits: gggpkm_ (~gggpkm@60.10.194.45) (Ping timeout: 252 seconds)
[04:49:15] *** Joins: gggpkm_ (~gggpkm@60.10.194.45)
[04:51:40] *** Quits: gggpkm (~gggpkm@60.10.194.45) (Ping timeout: 252 seconds)
[04:54:33] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[05:04:10] *** Joins: gggpkm (~gggpkm@60.10.194.45)
[05:05:58] *** Quits: gggpkm_ (~gggpkm@60.10.194.45) (Ping timeout: 252 seconds)
[05:14:14] *** Joins: dez (uid92154@user/dez)
[05:24:58] *** Quits: carlino3 (~carlino3@user/carlino3) (Quit: Client closed)
[05:26:23] *** Joins: jarthur (~jarthur@cpe-70-114-141-26.austin.res.rr.com)
[05:39:01] <snappy> see debian weak keys
[05:39:08] *** Quits: jarthur (~jarthur@cpe-70-114-141-26.austin.res.rr.com) (Quit: jarthur)
[05:40:00] <snappy> oh carlino3 left
[05:52:49] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[06:02:23] *** Quits: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net) (Read error: Connection reset by peer)
[06:07:26] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[06:08:39] *** Joins: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net)
[06:16:48] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[06:19:21] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:25:17] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[06:25:35] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:34:15] *** Joins: lord| (~lordpipe@user/lordpipe)
[06:43:42] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Remote host closed the connection)
[07:13:29] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2.1)
[07:33:28] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[07:33:49] *** Joins: kish` (~aqua@user/aqua)
[07:42:52] *** Joins: udet__ (~udet@ve603.venus.servdiscount-customer.com)
[07:43:02] *** Joins: Warped (~Warped@user/warped)
[07:43:08] *** Joins: HifiKuno5 (~HifiKuno@167-179-170-202.a7b3aa.bne.nbn.aussiebb.net)
[07:43:19] *** Joins: gde35 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[07:43:45] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[07:45:09] *** Joins: dostoyev1ky2 (~sck@user/dostoyevsky2)
[07:45:47] *** Joins: scjosh2 (~scjosh@206.189.79.69)
[07:45:51] *** Joins: g00fy76 (~g00fy@user/g00fy)
[07:46:03] *** Joins: voiceofreason (~voiceofre@207.148.10.181)
[07:46:05] *** Joins: Irc2PGuest71530 (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se)
[07:46:44] *** Joins: electr0n_ (~electr0n@about/security/founder/electr0n)
[07:46:45] *** Joins: ms7821_ (~Mark@london.rack.ms)
[07:46:58] *** Joins: sarnold_ (~sarnold@ubuntu/member/sarnold)
[07:47:09] *** Joins: akaWolf1_ (~akaWolf@akawolf.org)
[07:47:14] *** Joins: Kryczek (~kryczek@5.194.215.142)
[07:47:20] *** Joins: Henry151_ (~bishop@user/henry151)
[07:47:20] *** Joins: shachaf_ (~shachaf@li227-219.members.linode.com)
[07:50:55] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 252 seconds)
[07:51:40] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[07:51:40] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[07:52:01] *** Quits: akaWolf1_ (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[07:52:01] *** Quits: Henry151_ (~bishop@user/henry151) (Ping timeout: 252 seconds)
[07:52:01] *** Quits: Disconsented (~quassel@107.170.227.20) (Ping timeout: 252 seconds)
[07:52:27] *** Quits: chowmein__ (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[07:52:34] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 252 seconds)
[07:52:57] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:52:57] *** Joins: rudi_s_ (~simon@user/rudi-s/x-7673890)
[07:52:58] *** Joins: aleck1 (~aleck@user/aleck)
[07:52:58] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[07:52:58] *** Quits: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt) (*.net *.split)
[07:52:58] *** Quits: Populus (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se) (*.net *.split)
[07:52:58] *** Quits: akaWolf (~akaWolf@akawolf.org) (*.net *.split)
[07:52:58] *** Quits: WarpedAI (~Warped@user/warped) (*.net *.split)
[07:52:59] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[07:52:59] *** Quits: _rtypo (~alex@user/rtypo) (*.net *.split)
[07:52:59] *** Quits: AllMyNames (~AllMyName@user/allmynames) (*.net *.split)
[07:52:59] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (*.net *.split)
[07:52:59] *** Quits: son0p (~ff@181.136.122.143) (*.net *.split)
[07:52:59] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[07:52:59] *** Quits: mz` (~mz`@user/mz/x-8532539) (*.net *.split)
[07:52:59] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[07:52:59] *** Quits: Kryczek_ (~kryczek@5.194.215.142) (*.net *.split)
[07:52:59] *** Quits: rudi_s (~simon@user/rudi-s/x-7673890) (*.net *.split)
[07:52:59] *** Quits: sarnold (~sarnold@ubuntu/member/sarnold) (*.net *.split)
[07:52:59] *** Quits: voiceofreason_ (~voiceofre@207.148.10.181) (*.net *.split)
[07:52:59] *** Quits: jtgd (~jtgd@user/jtgd) (*.net *.split)
[07:52:59] *** Quits: udet_ (~udet@ve603.venus.servdiscount-customer.com) (*.net *.split)
[07:52:59] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[07:52:59] *** Quits: gde33 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[07:52:59] *** Quits: zegalch (~zegalch@178.128.75.133) (*.net *.split)
[07:52:59] *** Quits: chasmo77 (~chas77@71.63.241.168) (*.net *.split)
[07:53:00] *** Quits: g00fy7 (~g00fy@user/g00fy) (*.net *.split)
[07:53:00] *** Quits: fltrz (~fltrz@109.236.138.219) (*.net *.split)
[07:53:00] *** Quits: shachaf (~shachaf@user/shachaf) (*.net *.split)
[07:53:00] *** Quits: ms7821 (~Mark@london.rack.ms) (*.net *.split)
[07:53:00] *** Quits: HifiKuno (~HifiKuno@167-179-170-202.a7b3aa.bne.nbn.aussiebb.net) (*.net *.split)
[07:53:00] *** Quits: scjosh (~scjosh@206.189.79.69) (*.net *.split)
[07:53:00] *** Quits: _0ne (~one@user/0ne/x-2101768) (*.net *.split)
[07:53:00] *** Quits: snappy (~snappy@user/snappy) (*.net *.split)
[07:53:00] *** g00fy76 is now known as g00fy7
[07:53:00] *** HifiKuno5 is now known as HifiKuno
[07:53:00] *** Joins: zegalch (~zegalch@178.128.75.133)
[07:53:01] *** Joins: ravish0007_ (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[07:53:01] *** Joins: gggpkm_ (~gggpkm@60.10.194.45)
[07:53:01] *** Joins: Disconsented (~quassel@107.170.227.20)
[07:53:01] *** scjosh2 is now known as scjosh
[07:53:01] *** Joins: udet_ (~udet@ve603.venus.servdiscount-customer.com)
[07:53:04] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[07:53:07] *** Quits: udet__ (~udet@ve603.venus.servdiscount-customer.com) (Ping timeout: 252 seconds)
[07:53:09] *** Joins: Henry151 (~bishop@user/henry151)
[07:53:10] *** Joins: akaWolf (~akaWolf@akawolf.org)
[07:53:24] *** Quits: shachaf_ (~shachaf@li227-219.members.linode.com) (Changing host)
[07:53:24] *** Joins: shachaf_ (~shachaf@user/shachaf)
[07:53:26] *** shachaf_ is now known as shachaf
[07:53:31] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[07:54:32] *** Quits: gggpkm (~gggpkm@60.10.194.45) (Ping timeout: 246 seconds)
[07:56:02] *** Joins: chasmo77 (~chas77@71.63.241.168)
[07:56:08] *** Joins: shawn_ (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[07:56:10] *** Joins: JvD_ (~jvd@kpa15.kuuskaista.fi)
[07:56:42] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[07:56:45] *** Joins: HifiKuno2 (~HifiKuno@167-179-170-202.a7b3aa.bne.nbn.aussiebb.net)
[07:56:45] *** Joins: voiceofreason_ (~voiceofre@207.148.10.181)
[07:56:47] *** Joins: berndj-blackout (~berndj@ns1.linksynergy.co.za)
[07:57:13] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[07:57:22] *** Joins: snappy (~snappy@user/snappy)
[07:57:34] *** Joins: human_g33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[07:57:40] *** Joins: _0ne (~one@user/0ne/x-2101768)
[07:57:52] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04) (Ping timeout: 252 seconds)
[07:57:52] *** Quits: JvD (~jvd@kpa15.kuuskaista.fi) (Ping timeout: 252 seconds)
[07:58:24] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[07:58:24] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 252 seconds)
[07:58:24] *** Quits: andreas3- (andreas303@ip227.orange.bnc4free.com) (Ping timeout: 252 seconds)
[07:58:24] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (Ping timeout: 252 seconds)
[07:58:28] *** Quits: nullheroes (~nullheroe@168.235.66.22) (Ping timeout: 252 seconds)
[07:58:28] *** Quits: rxcomm (~rxcomm@user/rxcomm) (Ping timeout: 252 seconds)
[07:58:40] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (Ping timeout: 252 seconds)
[07:58:40] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Ping timeout: 252 seconds)
[07:58:41] *** Joins: szarkaorg (~szarka@2001-48F8-9004-E05-1C57-FEFF-7275-5BE3-dynamic.midco.net)
[07:59:13] *** Quits: HifiKuno (~HifiKuno@167-179-170-202.a7b3aa.bne.nbn.aussiebb.net) (Ping timeout: 252 seconds)
[07:59:13] *** HifiKuno2 is now known as HifiKuno
[07:59:14] *** Joins: fltrz (~fltrz@109.236.138.219)
[07:59:15] *** Joins: mz` (~mz`@user/mz/x-8532539)
[07:59:20] *** Joins: jtgd (~jtgd@user/jtgd)
[07:59:42] *** Joins: rxcomm (~rxcomm@user/rxcomm)
[07:59:48] *** Quits: Awoobis (A_D@libera/staff/dragon) (Killed (NickServ (GHOST command used by A_Dragon)))
[07:59:54] *** A_Dragon is now known as Awoobis
[08:00:05] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[08:00:24] *** Quits: webstrand (~webstrand@user/webstrand) (Ping timeout: 252 seconds)
[08:00:24] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (Ping timeout: 252 seconds)
[08:00:39] *** Joins: DefiantN (~DefiantN@user/defiantn)
[08:00:46] *** electr0n_ is now known as electr0n
[08:01:07] *** Joins: webstrand (~webstrand@user/webstrand)
[08:01:19] *** berndj-blackout is now known as berndj
[08:01:54] *** Quits: gggpkm_ (~gggpkm@60.10.194.45) (Remote host closed the connection)
[08:02:14] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[08:02:35] *** Joins: sonOfRa_ (sonOfRa@user/sonofra)
[08:03:22] *** Quits: szarkanet (~szarka@2001-48F8-9004-E05-71C7-F1C3-1988-A525-dynamic.midco.net) (Ping timeout: 252 seconds)
[08:03:22] *** Quits: sonOfRa (sonOfRa@user/sonofra) (Ping timeout: 252 seconds)
[08:03:44] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[08:06:01] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[08:06:08] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:07:14] *** Quits: zegalch (~zegalch@178.128.75.133) (Quit: Ping timeout (120 seconds))
[08:07:14] *** Quits: JvD_ (~jvd@kpa15.kuuskaista.fi) (Ping timeout: 252 seconds)
[08:07:14] *** Quits: tkob (tkob@shell.xshellz.com) (Ping timeout: 252 seconds)
[08:07:14] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[08:07:14] *** Joins: JvD (~jvd@kpa15.kuuskaista.fi)
[08:07:33] *** Joins: zegalch (~zegalch@178.128.75.133)
[08:08:42] *** Joins: tkob (tkob@2607:5300:60:21b::1)
[08:08:51] *** Quits: Henry151 (~bishop@user/henry151) (Ping timeout: 252 seconds)
[08:09:13] *** Joins: Henry151 (~bishop@user/henry151)
[08:09:14] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[08:09:14] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[08:11:25] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6) (Remote host closed the connection)
[08:11:26] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[08:11:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[08:11:26] *** Quits: ericnoan (~en@user/ericnoan) (Ping timeout: 252 seconds)
[08:11:49] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6)
[08:12:01] *** Joins: akaWolf (~akaWolf@akawolf.org)
[08:12:05] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[08:13:05] *** Joins: ericnoan (~en@user/ericnoan)
[08:13:12] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:13:38] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 252 seconds)
[08:14:51] *** Joins: darkstarx (~darkstard@2601:1c2:300:c8a0::f2b6)
[08:16:16] *** Quits: EmmyNoether (~EmmyNoeth@yoke.ch0wn.org) (Ping timeout: 252 seconds)
[08:16:49] *** Quits: int-e (~noone@int-e.eu) (Ping timeout: 252 seconds)
[08:16:55] *** Joins: EmmyNoether (~EmmyNoeth@yoke.ch0wn.org)
[08:16:58] *** Joins: int-e (~noone@int-e.eu)
[08:17:40] *** Quits: dostoyev1ky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[08:17:52] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[08:18:04] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6) (Ping timeout: 252 seconds)
[08:18:38] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (Ping timeout: 252 seconds)
[08:21:46] *** Quits: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net) (Ping timeout: 252 seconds)
[08:22:04] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[08:22:06] *** Joins: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net)
[08:28:32] *** Joins: swebb_ (~swebb@209.209.9.4)
[08:28:38] *** Joins: weyhmueller_ (~weyhmuell@blofeld.nc.w9r.de)
[08:30:46] *** Joins: haskal1 (~haskal@tilde.town)
[08:31:50] *** Joins: Peng__ (~mnordhoff@ultimate1.mnrd.us)
[08:33:31] *** Quits: weyhmueller (~weyhmuell@blofeld.nc.w9r.de) (Ping timeout: 252 seconds)
[08:33:31] *** Quits: swebb (~swebb@209.209.9.4) (Ping timeout: 252 seconds)
[08:33:31] *** Quits: haskal (~haskal@tilde.town) (Ping timeout: 252 seconds)
[08:33:31] *** Quits: Peng_ (~mnordhoff@ultimate1.mnrd.us) (Ping timeout: 252 seconds)
[08:40:31] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[08:45:17] *** Joins: AllMyNames (~AllMyName@user/allmynames)
[09:03:54] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:13:54] *** rudi_s_ is now known as rudi_s
[09:16:34] *** Joins: lampilelo (~user@user/lampilelo)
[09:16:51] *** Joins: chomwitt (~chomwitt@2a02:587:dc04:fc00:12c3:7bff:fe6d:d374)
[09:16:52] *** gggpkm_ is now known as gggpkm
[09:18:30] *** Quits: norskal (~norskal@101.175.64.73) (Quit: Ping timeout (120 seconds))
[09:23:58] *** Joins: Torr (~Torr@user/torr)
[09:24:09] *** Quits: esses (uid38151@id-38151.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:26:15] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[09:26:32] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[09:28:49] *** Quits: gggpkm (~gggpkm@60.10.23.162) (Ping timeout: 252 seconds)
[09:33:02] *** Joins: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name)
[09:43:20] *** Joins: norskal (~norskal@101.175.64.73)
[10:05:23] *** Joins: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr)
[10:30:11] *** Joins: gggpkm (~gggpkm@111.61.226.166)
[10:31:20] *** Quits: norskal (~norskal@101.175.64.73) (Quit: Ping timeout (120 seconds))
[10:32:04] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Ping timeout: 252 seconds)
[10:35:51] *** Quits: gggpkm (~gggpkm@111.61.226.166) (Remote host closed the connection)
[10:38:40] *** Quits: terminaldweller (~devi@ip137.ip-145-239-165.eu) (Ping timeout: 252 seconds)
[10:38:58] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697)
[10:45:34] *** Joins: terminaldweller (~devi@5.115.239.241)
[11:04:11] *** Joins: defiant (~defiant@user/defiant)
[11:15:00] *** Joins: menace (~someone@ppp-93-104-177-194.dynamic.mnet-online.de)
[11:15:01] *** Quits: menace (~someone@ppp-93-104-177-194.dynamic.mnet-online.de) (Changing host)
[11:15:01] *** Joins: menace (~someone@user/menace)
[11:15:08] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697) (Ping timeout: 252 seconds)
[11:15:10] *** menace is now known as Deknos
[11:24:14] *** Quits: terminaldweller (~devi@5.115.239.241) (Read error: Connection reset by peer)
[11:30:28] *** Joins: terminaldweller (~devi@ip137.ip-145-239-165.eu)
[11:38:43] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:53:30] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[12:00:21] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Remote host closed the connection)
[12:13:14] *** Quits: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[12:26:39] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[12:44:07] *** Joins: somlis (~somlis@user/somlis)
[13:00:14] *** Joins: kish` (~aqua@user/aqua)
[13:02:56] *** Joins: chiselfu1e (~chiselfus@user/chiselfuse)
[13:05:00] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[13:21:16] *** Quits: g00fy7 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[13:22:10] *** Quits: chomwitt (~chomwitt@2a02:587:dc04:fc00:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[13:22:52] *** Joins: g00fy7 (~g00fy@user/g00fy)
[13:31:22] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 252 seconds)
[13:35:17] *** Joins: chomwitt (~chomwitt@2a02:587:dc04:fc00:12c3:7bff:fe6d:d374)
[13:35:27] *** Joins: andreasbuhr (~quassel@p5dcf995e.dip0.t-ipconnect.de)
[13:39:50] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[13:48:58] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[13:52:14] *** Quits: andreasbuhr (~quassel@p5dcf995e.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:55:31] *** Joins: AllMyNames_2 (~AllMyName@2.57.169.111)
[13:58:52] *** Quits: AllMyNames (~AllMyName@user/allmynames) (Ping timeout: 252 seconds)
[14:00:21] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Remote host closed the connection)
[14:06:29] *** Joins: igemnace (~ian@user/igemnace)
[14:07:39] *** Quits: igemnace (~ian@user/igemnace) (Client Quit)
[14:07:52] *** Joins: igemnace (~ian@user/igemnace)
[14:08:59] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[14:10:30] *** Quits: Arsen (~arsen@managarm/dev/Arsen) (Quit: Quit.)
[14:10:49] *** Joins: Arsen (~arsen@managarm/dev/Arsen)
[14:13:02] *** Joins: lxlldr (~I@a89-152-175-20.cpe.netcabo.pt)
[14:24:38] *** Joins: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr)
[14:26:01] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:29:11] *** Joins: Mach (~mach@2a02:2f09:d304:6f00::738)
[14:33:31] *** ms7821_ is now known as ms7821
[14:37:20] *** Quits: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net) (Read error: Connection reset by peer)
[14:40:41] *** Joins: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net)
[14:48:07] *** Quits: msfninja (~root@user/msfninja) (Ping timeout: 240 seconds)
[14:52:08] *** Joins: BadKarma (~BadKarma@user/badkarma)
[14:52:23] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 252 seconds)
[14:55:31] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 250 seconds)
[14:58:06] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[15:04:00] *** Quits: yggdrasil (~yggdrasil@67-0-3-20.albq.qwest.net) (Ping timeout: 265 seconds)
[15:10:38] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[15:10:51] *** Joins: yggdrasil (~yggdrasil@75-161-21-194.albq.qwest.net)
[15:20:08] *** Joins: gabriel1_ (~gabriel1@37.171.113.121)
[15:22:31] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 252 seconds)
[15:25:21] *** Quits: AllMyNames_2 (~AllMyName@2.57.169.111) (Quit: Leaving)
[15:26:52] *** Quits: dusk (~quassel@2a01:4f8:231:3ac7:2702::1) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:27:06] *** Joins: dusk (~quassel@2a01:4f8:231:3ac7:2702::1)
[15:32:33] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[15:33:14] *** Joins: mouseghost (~draco@user/mouseghost)
[15:33:46] *** udet_ is now known as udet
[15:44:29] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[15:45:04] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[15:46:12] *** Quits: Mach (~mach@2a02:2f09:d304:6f00::738) (Quit: q)
[15:55:45] *** Joins: szarkanet (~szarka@2001-48F8-9004-E05-AD86-4432-59A4-445A-dynamic.midco.net)
[15:58:35] *** Quits: szarkaorg (~szarka@2001-48F8-9004-E05-1C57-FEFF-7275-5BE3-dynamic.midco.net) (Ping timeout: 246 seconds)
[16:08:31] *** Joins: igemnace (~ian@user/igemnace)
[16:16:29] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[16:17:20] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2.1)
[16:21:48] *** Joins: _rtypo (~alex@user/rtypo)
[16:29:47] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[16:30:08] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:47:46] *** Quits: chomwitt (~chomwitt@2a02:587:dc04:fc00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[16:48:16] *** Quits: gabriel1_ (~gabriel1@37.171.113.121) (Ping timeout: 252 seconds)
[16:50:35] *** Quits: introom (introom@2600:3c01::f03c:92ff:fe95:9f0f) (Quit: WeeChat 1.6)
[16:51:20] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[16:51:59] *** Quits: lxlldr (~I@a89-152-175-20.cpe.netcabo.pt) (Ping timeout: 245 seconds)
[16:53:36] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:56:28] *** Joins: machinedgod (~machinedg@24.105.81.50)
[17:02:46] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:04:13] *** Quits: BadKarma (~BadKarma@user/badkarma) (Ping timeout: 252 seconds)
[17:22:55] *** Joins: chomwitt (~chomwitt@ppp-2-85-111-14.home.otenet.gr)
[17:25:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:34:40] *** Joins: BadKarma (~BadKarma@user/badkarma)
[17:39:16] *** Joins: mei (~mei@user/mei)
[17:41:20] *** Joins: igemnace (~ian@user/igemnace)
[17:44:37] *** Joins: gabriel1_ (~gabriel1@37.171.113.121)
[17:47:07] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 252 seconds)
[17:50:36] *** Joins: gabriel1__ (~gabriel1@37.164.117.142)
[17:53:10] *** Quits: gabriel1_ (~gabriel1@37.171.113.121) (Ping timeout: 252 seconds)
[17:57:04] *** Quits: terminaldweller (~devi@ip137.ip-145-239-165.eu) (Ping timeout: 252 seconds)
[17:59:06] *** Joins: terminaldweller (~devi@192.99.102.52)
[17:59:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[18:00:03] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[18:03:37] *** Quits: terminaldweller (~devi@192.99.102.52) (Ping timeout: 252 seconds)
[18:04:19] *** Joins: terminaldweller (~devi@192.99.102.52)
[18:13:11] <bugweiser> I'm not entirely convinced that for my use forward or backward security is super important when for every message another rng with different settings is used. As long as the password element is sufficiently protected such that if in the offchance one message is cracked and the initial state of the rng is uncovered that the password element is still sufficiently secret.
[18:13:18] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[18:15:53] <bugweiser> i've been toying a bit and have been looking at mcg (instead of lcg). In double float I can very cheaply maintain a seed of 52 bits (loosing 1 bit to keep them odd) and get 2 full period tracks (so 2 uniform streams of 50 bits effectively). That is at least a small bit more than 32 bits state (single track lcg).
[18:18:30] *** Quits: halbeinfach (~semisimpl@ipbcc1ab10.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.2)
[18:19:11] <bugweiser> now here's what i'm wondering a bit: If I use such a dual track mcg and feed in a component of the previously encrypted 'character' (thus a value based on input (giving entropy) mixed with a uniform pseudorandom value), then the mcg would start to jump between tracks, based on previous encrypted character, breaking the common pattern (from a single track). It would 'automatically' and pseudorandomly jump between the 2 tracks.
[18:19:36] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[18:20:06] <bugweiser> is this assumption correct ? If yes, is that worth ANYTHING ? Does it make things slightly more complicated to anaylse and attack ?
[18:22:37] <Wulf> bugweiser: Hello.
[18:24:20] <Wulf> mcg? lcg?
[18:30:23] <bugweiser> Hi Wulf
[18:30:53] <bugweiser> Liniar congruential generator: s=(s*f+a)mod m
[18:31:21] <bugweiser> Multiplicative congruential generator: s=(s*f) mod m
[18:32:14] <bugweiser> where s=seed|state, f=factor, m=stateModulus
[18:34:29] <bugweiser> mcg with a modulus in a power of 2, and f mod 8 == +/-3 (3 or 5) we get a dual track rng, where every track has a complete and uniform track of m/4  (we loose the least significant bit to maintain an odd state (aka divided by 2) and 2 tracks means again divided by 2).
[18:34:53] <bugweiser> hence, 52 bits state in mcg gives 2 full 50 bit period tracks.
[18:35:15] <bugweiser> and in normal use one would stay on ONE track (dictated by the starting seed)
[18:35:48] <bugweiser> hence.. track skipping by mixing in some component of the previously 'encrypted' 'character'.
[18:36:14] <bugweiser> s/skipping/jumping/
[18:37:26] <bugweiser> (sorry, I forgot, the 'a' is for 'addant' constant in lcg " s=(s*f+a)mod m "
[18:40:03] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[18:40:07] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (Client Quit)
[18:40:22] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[18:45:09] *** introom is now known as asdfasdfasdf
[18:45:13] *** asdfasdfasdf is now known as introom
[18:47:29] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[18:48:14] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (Quit: WeeChat 3.3)
[18:48:29] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[18:50:25] *** Quits: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net) (Read error: Connection reset by peer)
[18:50:55] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[18:52:50] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (Client Quit)
[18:53:06] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[18:53:26] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2.1)
[18:54:14] *** Joins: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net)
[18:54:42] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (Client Quit)
[18:54:59] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[18:56:34] *** Quits: terminaldweller (~devi@192.99.102.52) (Ping timeout: 245 seconds)
[18:58:07] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[18:58:22] *** Joins: terminaldweller (~devi@ip137.ip-145-239-165.eu)
[19:03:16] *** Quits: human_g33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04) (Remote host closed the connection)
[19:04:31] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[19:14:41] *** Joins: son0p (~ff@181.136.122.143)
[19:21:31] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.3)
[19:22:33] <Alipha> mcg would be more difficult to break than lcg, but both are in the realm of "easily broken"
[19:22:39] *** Joins: gareppa (~gareppa@user/gareppa)
[19:23:37] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[19:23:43] <Alipha> Using "forward secrecy" would protect your messages from being decrypted even in the event the password is discovered at a later date
[19:31:04] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[19:42:53] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[19:43:54] *** Server sets mode: +nt 
[19:45:37] *** sonOfRa_ is now known as sonofRa
[19:45:41] *** sonofRa is now known as sonOfRa
[19:50:30] *** Joins: machinedgod (~machinedg@24.105.81.50)
[20:04:37] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[20:24:52] *** Joins: Torr (~Torr@user/torr)
[20:26:07] *** Peng__ is now known as Peng_
[20:29:22] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[20:36:48] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Remote host closed the connection)
[20:38:14] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[20:40:31] <Alipha> bugweiser: you should consider RC4. It's super simple and way more secure than lcg and mcg. Lines 11-19 is the key generation and the rest is the actual encryption: https://gist.github.com/farhadi/2185197
[20:42:30] <bugweiser> Alipha, if i'd do all that work and waste so many ram, why would't I just use isaac (at least that one isn't broken as RC4 is said to be). 
[20:44:04] *** Joins: aleck (~aleck@user/aleck)
[20:44:10] <bugweiser> I get that as a general purpose building block one would reccommend a jumbo-jet (and not need to think about what is actually needed). I just fear a lot that there might be an operation at an extra cost which for my purpose isn't needed. In that case that operation would just be bad (a waste).
[20:45:02] <ericonr> Alipha: are the comments supposed to make me horrified because people are using rc4 for encryption on web facing applications?
[20:45:08] <bugweiser> I'm the kind of programmer that doesn't care about going home to spend time with a spouse if there is the oppertunity to shave off one operation somewhere, regardless of how much time that costs me..
[20:45:41] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 264 seconds)
[20:48:18] <bugweiser> I've been seriously looking at what exactly seperates a csprng from an prng and for the life of me, I can't understand why for backward and forward security in my case are required.. Wikipedia isn't really giving me more info than that...
[20:48:42] <Alipha> <Alipha> Using "forward secrecy" would protect your messages from being decrypted even in the event the password is discovered at a later date
[20:49:21] <bugweiser> if the password is discovered then all command messages are cracked..
[20:50:01] <bugweiser> (and it appears I missed 2 msg from you, sorry reading now!)
[20:51:23] <bugweiser> <Alipha> mcg would be more difficult to break than lcg, but both are in the realm of "easily broken"  << so my basic premise especially when track-jumping (by mixing in an addant as if it was an lcg) was correct? I am in that case breaking the expected pattern/cycle?
[20:53:03] <bugweiser> I could make 2 of them face eachother and xor their outputs (top 14 bits seems to work for mod95) together.. Have the both jump tracks automatically based on input..
[20:54:50] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 252 seconds)
[21:00:12] <maroon> you're encoding 14 bits into base95?
[21:00:44] <bugweiser> topmost 14 bits of truncated rng
[21:01:45] <bugweiser> and i'm not doing the topmost 14 bits MOD 95,  instead I blur it a lot better (and get better uniform output) by multiplying the topmost 14 bits with 95 and then divide by 2**14
[21:02:12] <bugweiser> messages would NEVER reach 100 chars, likely 50 chars is already a lot.
[21:03:27] <bugweiser> from the current dual 50bit mcg that would mean 50-14=36 bits of remaining secret state (the 2 lost bits for how this works are already excluded).
[21:03:38] <maroon> if the input is exactly 14 bits, you have 2 base95 symbols as your output?
[21:05:50] *** Joins: Narrat (~omnius@p200300df5f398fc106ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:06:15] <bugweiser> the rng would output 14 bit. yes. Input clear-text is 95 printable characters, output is 95 printable characters (but I can toy with that if need be). that means that the 'encryption part' would do basically do modular addition on char in mod95.  Authenticatin is the prime goal, followed by verification, followed by obfuscating the short messages.
[21:06:37] <bugweiser> every message is preceded by requesting a 'challenge' (aka nonce).
[21:06:46] <bugweiser> nonces are per message
[21:07:25] <bugweiser> nonce permutates password, permutated password permutates nonce, the resulting 2 new values are used in selecting and setting up the cheap rngs.
[21:10:45] *** Joins: BUSY (~BUSY@user/busy)
[21:11:19] <maroon> so you would have 2^14=16384 possible inputs, and 95^2=9025 possible outputs, a 1.8 ratio, which means some outputs have 1 input mapped to them, and other outputs only have 1 input
[21:12:55] <maroon> one way to avoid modulo bias like that is to have your RNG discard inputs that aren't in the range [0,2^95-1], which makes your output much more uniform
[21:18:31] <bugweiser> just to be very clear, i'd have rng output range of 0 to 2^14-1, and it's there magnitude that decides linearly values of 0 to 95  (which are added to the input character, if the result comes above 126 (decimal) I add 33 decimal.   hence mod95 +32 offset (starting at 'space', excluding 'del')
[21:19:15] <bugweiser> and i'd have 50-14=36 (in this particular example of mcg), so 2^36 sequences of 14 bits output (to be scaled onto 0 to 95)
[21:20:26] <bugweiser> (ideally, that would likely depend on the multiplier used)
[21:22:09] <maroon> you'll have some encodings which can be created by 2 different lcg states, but other encodings can be created by only 1 lcg state
[21:23:23] <maroon> but if you think of the lcg as a long series of 'random' values from 0 to 2^14-1, you can simply discard the ones that are greater than or equal to the highest multiple of 95^2
[21:24:37] <bugweiser> hmm.. interesting concept!
[21:25:50] <bugweiser> That would help lowering the bias I would get if i run the following test:
[21:26:30] <maroon> it's a common behavior of random number generators. if you're getting a random dice roll of 1-6 out of a generator that has 2^n inputs, there are some dice rolls that are slightly favored over others
[21:27:00] *** Parts: lampilelo (~user@user/lampilelo) (ERC (IRC client for Emacs 27.2))
[21:27:04] <bugweiser> set up a matrix/table of 95 rows (previous rng output) * 95 cells (count of each value that comes after the previous value) and run 95^3 iterations
[21:27:17] <maroon> you can reduce bias by adding more bits to the input size, but you can never completely eliminate it when your output is not also 2^n possibles
[21:27:37] <bugweiser> yes, I figured that out :)
[21:29:22] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Ping timeout: 252 seconds)
[21:33:46] *** Quits: Narrat (~omnius@p200300df5f398fc106ea56fffe2e7cdc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[21:38:35] *** haskal1 is now known as haskal
[21:43:55] <bugweiser> at least the part that ideally rng output range and target range idially should be commensurable :)
[21:47:57] <bugweiser> is there any value to additionally twart an attacker to output (insert) a random 'character' in the output-stream when this condition of discarding an rng output (when >=95^2 ) occurs?
[21:48:58] *** Joins: semisimple (~semisimpl@188.193.171.16)
[21:49:36] <yawkat> that would probably reduce security
[21:54:11] *** Joins: Narrat (~omnius@p200300df5f0e906306ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:55:20] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[21:56:14] <maroon> your prime consideration is which? fast/short-output/crypto-secure? fast vs crypto-secure is often competing goals
[21:57:51] <maroon> if you're using base95 to have the output be as short as possible, then doesnt make sense to salt your output with extra chars
[21:58:53] <bugweiser> yawkat, why would that probably reduce security?
[22:00:25] <maroon> how is your extra char created? is it going to be evenly distributed?
[22:01:24] <bugweiser> maroon, prime consideration was auth (nonce based, per message). Intuition told me that the message/command to pass attributed to entropy. within some reason validating the message was the second consideration, which (as i was processing the message in that case, adding some obfuscuation/'encryption' would become cheaper, and lastly, if the sheme did something with a nonce and a password taking the message into account, then 'encryption' of the 
[22:01:24] <bugweiser> message would hold value. 
[22:02:05] <bugweiser> implementation-wise.. i wanted something 'simple' without needing special libraries (and in the process learn a thing or 2).
[22:02:49] <bugweiser> size/performance: I don't want to weigh down a simple bot such that most of it's code consists of a simple controll-scheme. 
[22:03:29] <bugweiser> I understand that at high security we mainly talk about buying time (as with any lock), so its kinda acceptable to make things big/slow.
[22:03:43] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-3171-5bf3-53f0-51fc.res6.spectrum.com)
[22:03:52] <bugweiser> but it's a simple temporary (during dev time) lock.
[22:04:55] <yawkat> no we dont
[22:04:57] <bugweiser> maroon, I haven't yet thought of the extra char (in that optional idea), i'd assume to pull a random value (perhaps even from the language itself).
[22:05:00] <yawkat> security does not have to be slow
[22:05:04] <yawkat> and it usually is not
[22:05:14] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-3171-5bf3-53f0-51fc.res6.spectrum.com) (Client Quit)
[22:06:07] <bugweiser> lol, I forgot to mention why I said that, indeed, it feels we could have fast small methods, if cracking the system would just need much computation space (hence I bumped the state, i agreed it was an attack-vector).
[22:08:40] <yawkat> we could and we do
[22:08:55] <yawkat> symmetric crypto is very fast
[22:09:06] <bugweiser> I know of this 'vinegar' or super-secret salt thing, where you just don't store the super secret salt and make a password auth system bruteforce search a match (as a trivial method of bumping iterations controlled by selecting the size of the vinegar)
[22:11:48] <bugweiser> anywho, digressing :)
[22:15:02] <bugweiser> sadly (for me) i'm really out of time (i'm late as it is for an appointment)  :(
[22:18:36] <bugweiser> the core question I had (if even for my understanding) was if I have a statistically strong Mcg setup correctly to obtain the full *2* tracks, then mix in an part of the previous 'encrypted' output such that it would automatically (and for free, no branches) *jump* between the 2 tracks based on the message+previous_random_output would add any value make things somewhat more complicated to attack?
[22:18:58] <yawkat> probably not
[22:18:59] <bugweiser> and it appears that would be correct (compared to just an Lcg with one track)
[22:19:10] <bugweiser> oh. 
[22:19:15] <bugweiser> why?
[22:20:11] <yawkat> both are bad csprngs
[22:21:08] <yawkat> i would not bet on a simple switch making cryptoanalysis much harder
[22:21:31] <yawkat> just use a stream cipher
[22:23:02] <bugweiser> both arent even an CSprng :) 
[22:23:34] <bugweiser> a stream cipher would likely do pretty much the same thing, just having choosen another CSprng (it seems to me)
[22:24:10] <yawkat> yes
[22:24:12] <bugweiser> ie, roughly fake a one type pad by mixing an CSprng output with clear-text
[22:24:16] <yawkat> and it wouldnt be terrible
[22:26:42] <bugweiser> so then the question boils down to what properties make a CSprng better over a prng (apart from statisticly good). And it seems to me wikipedial lists only 3 points: bumping cycles, forward and backward security.  The latter don't seem important to my application  (as long as worst case cracing the message, uncovering the initial state doesn't leak the password that selected/created the prng parameters). 
[22:27:13] <bugweiser> after all, every message would use a different rng permutation (perhaps even prng selection as in a random number factory)
[22:27:43] <bugweiser> and those are said to be secure couse an attacker don't even know what rng is selected or what it's parameters are).
[22:28:00] <yawkat> you will need a one-way step at some point in the process
[22:28:07] <yawkat> CSPRNGs are the sensible way to do it
[22:29:07] <bugweiser> yes, the one-way step would be needed in permuting password according to nonce, and permuting nonce according to permuted password. At that point use the rng factory and go about business as a stream cipher
[22:29:37] <yawkat> "permuting" can only be secure with a stream cipher or similar construction
[22:30:53] <bugweiser> candidates for the permuting function (one way/trapdoor) could also be password stretchers, 'randomness extractors', 'output-mixers' etc no?
[22:31:49] <yawkat> which you will find are surprisingly similar to a stream cipher
[22:34:02] <bugweiser> yes, i've seen that, though the ones I mentioned often seem to do some more 'hash' like steps, 3-fold or 5-fold xor-shifts and similar. Those schemes are not spinning up a 256 byte block array to crunch through using 10.000 iterations (is what i've seen reccommended).
[22:35:18] <yawkat> PBKDFs use those iterations to make low-entropy inputs (passwords) usable
[22:35:28] <bugweiser> but I fully agree, the initial trapdoor/oneway functions must be sufficiently strong. It's somewhat acceptable if the message is cracked, it's not if that uncovers the password 
[22:35:29] <yawkat> i assume you have already decided that is not a problem
[22:35:37] <bugweiser> yeah, that was indeed pbkdf I just had in mind.
[22:36:33] <bugweiser> well, obviously I was also looking for the cheapest thing to do this permutation 
[22:36:50] <bugweiser> but, I really have to go :(  I'm terribly sorry !!
[22:36:59] <yawkat> if you already have a kdf, why add a permutation
[22:37:08] <bugweiser> allow me to pick this up later please
[22:38:27] <bugweiser> thanks all for the kind help again! later :(
[23:01:38] *** Joins: gabriel1_ (~gabriel1@37.172.164.136)
[23:02:03] *** Joins: Ep (~Ep@148.79-161-76.customer.lyse.net)
[23:02:17] *** Parts: Ep (~Ep@148.79-161-76.customer.lyse.net) ()
[23:02:35] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[23:04:04] *** Quits: gabriel1__ (~gabriel1@37.164.117.142) (Ping timeout: 245 seconds)
[23:11:44] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:14:04] *** Quits: semisimple (~semisimpl@188.193.171.16) (Ping timeout: 245 seconds)
[23:16:17] *** Joins: semisimple (~semisimpl@ipbcc1ab10.dynamic.kabel-deutschland.de)
[23:18:59] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[23:21:53] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[23:22:43] *** Joins: Warped (~Warped@user/warped)
[23:28:17] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[23:32:05] *** Joins: d-code (~d-code@20014C4E15114400C7EB428DB9956B86.dsl.pool.telekom.hu)
[23:32:37] *** Parts: d-code (~d-code@20014C4E15114400C7EB428DB9956B86.dsl.pool.telekom.hu) ()
[23:45:55] *** Joins: Torr (~Torr@user/torr)
