[00:00:06] <rewt> <rewt> the problem is "failed to map segment from shared object"... there are some google results for that phrase
[00:00:47] <rewt> not sure... maybe it's a permssions issue
[00:01:34] * GumbyPAN CPAN Upload: Rex-Hook-File-Diff-v0.3.0.2-TRIAL by FERKI https://metacpan.org/release/FERKI/Rex-Hook-File-Diff-v0.3.0.2-TRIAL
[00:02:12] <drocsid> I was able to install another module via cpan
[00:02:53] <rewt> not all modules compile XS into .so files
[00:03:13] <rewt> see if /home/chronos/user/.cpan/build/Net-SSLeay-1.90-1/blib/arch/auto/Net/SSLeay/SSLeay.so is readable and possibly executable
[00:03:25] <drocsid> And I installed this package which doesn't seem to be detected : https://github.com/skycocker/chromebrew/blob/master/packages/perl_io_socket_ssl.rb
[00:03:26] <Paperbot> Link title(s): [ chromebrew/perl_io_socket_ssl.rb at master · skycocker/chromebrew · GitHub ]
[00:03:35] <rewt> i thought there was something about android become more "secure" by limiting what's executable
[00:03:56] <drocsid> running linux / chrome os but not android
[00:04:08] <rewt> close enough
[00:04:29] <rewt> that module is already compiled; the installer puts it where other system libs are, and it's available and ready to use
[00:05:26] <rewt> what do you get when you run:  perl -E 'use IO::Socket::SSL; say "ok"'
[00:06:09] <drocsid> rewt: ls -halt /home/chronos/user/.cpan/build/Net-SSLeay-1.90-1/blib/arch/au
[00:06:09] <drocsid> to/Net/SSLeay/SSLeay.so
[00:06:10] <drocsid> -rwxr-xr-x 1 chronos chronos 587K Jul 31 03:21 /home/chronos/user/.cpan/build/Net-SSLeay-1.90-1/blib/arch/auto/Net/SSLeay/SSLeay.so
[00:07:26] <drocsid> rewt: perl -E 'use IO::Socket::SSL; say "ok"'
[00:07:27] <drocsid> Can't locate Net/SSLeay.pm in @INC (you may need to install the Net::SSLeay module) (@INC contains: /usr/local/lib/perl5/site_perl/5.32.1/armv7l-linux-thread-multi /usr/local/lib/perl5/site_perl/5.32.1 /usr/local/lib/perl5/5.32.1/armv7l-linux-thread-multi /usr/local/lib/perl5/5.32.1 /usr/local/lib/perl5/site_perl/5.26.1
[00:07:28] <drocsid> /usr/local/lib/perl5/site_perl) at /usr/local/lib/perl5/site_perl/5.32.1/IO/Socket/SSL.pm line 19.
[00:07:28] <drocsid> BEGIN failed--compilation aborted at /usr/local/lib/perl5/site_perl/5.32.1/IO/Socket/SSL.pm line 19.
[00:07:28] <drocsid> Compilation failed in require at -e line 1.
[00:07:29] <drocsid> BEGIN failed--compilation aborted at -e line 1.
[00:08:01] <rewt> that's weird... can you install Net::SSLeay with crew?
[00:08:14] <drocsid> I don't think so
[00:08:20] <drocsid> do not see it
[00:09:20] <rewt> that's really weird... how can they have IO::Socket::SSL but not Net::SSLeay ?
[00:09:47] <drocsid> idk. I see something called : ```perl_module_build: Module::Build - Build and install Perl modules
[00:09:48] <drocsid> ```
[00:10:01] <drocsid> anyone know what that is?
[00:11:54] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 240 seconds)
[00:15:09] *** Quits: drocsid (~drocsid@207.32.160.224) (Quit: Client closed)
[00:15:57] *** Joins: discord100 (~discord@207.32.160.224)
[00:16:10] *** discord100 is now known as drocsid
[00:17:43] <rewt> drocsid, you should raise an issue with chromebrew and let them know that perl_io_socket_ssl depends on Net::SSLeay, so they should make that available as well
[00:17:55] *** Joins: magla (~gelignite@55d418d7.access.ecotel.net)
[00:18:03] <drocsid> Ok, I will put that in the existing issue
[00:19:39] <rewt> in the meantime, i'm not sure what you can do to get it working
[00:20:18] <rewt> it seems to be able to compile Net::SSLeay but not load it
[00:21:21] *** Joins: zacts (~zacts@user/zacts)
[00:22:51] <brtastic> I've got a problem with Carton, it says it installed true, but then 'carton exec perl -e "use true;"' throws an error that it can't find true.pm
[00:23:37] <brtastic> I tried 'carton update', and it says true is up to date. There's no true.pm in local/lib/perl5 directory though
[00:23:59] <brtastic> it always worked well for me, not sure what I'm doing wrong this time :P
[00:25:50] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[00:26:39] <drocsid> rewt maybe it's related to https://chromium.googlesource.com/chromiumos/docs/+/HEAD/security/noexec_shell_scripts.md
[00:26:39] <Paperbot> Link title(s): [ Chromium OS Docs - Shell scripts & noexec mounts ]
[00:27:26] <rewt> drocsid, that looks like it (after a quick glance)
[00:27:40] <rewt> can you check if that .so is in a noexec mount?
[00:28:54] *** Joins: Guest9 (~Guest9@103.240.169.29)
[00:30:24] <brtastic> nevermind my previous question, I had Carton installed for system perl and I'm using perlbrew
[00:36:14] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[00:36:19] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:305b:93f9:5c18:6642:4482)
[00:38:48] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:305b:71d2:34a1:44af:7617)
[00:41:18] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:305b:93f9:5c18:6642:4482) (Ping timeout: 272 seconds)
[00:44:39] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 276 seconds)
[00:49:24] *** Quits: drocsid (~discord@207.32.160.224) (Quit: Client closed)
[00:50:30] *** Joins: drocsid (~drocsid@207.32.160.224)
[00:51:30] <drocsid> rewt I think it is in a no exec mount. Do you know how to set the cpan location so it will place the modules in an accessible mounted location?
[00:53:15] *** Joins: Trigon (~reuben@73.127.1.41)
[00:55:32] <drocsid> I don''t want it to put the shared objects in E.G.: /home/chronos/user/.cpan/build/Net-SSLeay-1.90-3/blib/arch/auto/Net/SSLeay/SSLeay.so
[00:56:13] <drocsid> I need to place them in /usr/local . Trying to figure out how to move the .cpan path so it places them where they are executable.
[00:56:34] *** Quits: PavelB (~PavelB@50.125.179.101) (Quit: Client closed)
[00:57:46] *** Joins: koo7 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:59:07] <drocsid> Maybe I use --install_path flag with cpan?
[01:06:41] * GumbyPAN CPAN Upload: Type-Tiny-1.012004 by TOBYINK https://metacpan.org/release/TOBYINK/Type-Tiny-1.012004
[01:08:06] <mst> drocsid: what
[01:08:12] <drocsid> hmm how do i set the cpan options mentioned here: https://askubuntu.com/questions/209615/change-cpan-install-directoryhttps://askubuntu.com/questions/209615/change-cpan-install-directory https://askubuntu.com/questions/209615/change-cpan-install-directory 
[01:08:13] <Paperbot> Link title(s): [ 12.04 - change cpan install directory - Ask Ubuntu ]
[01:08:25] <mst> drocsid: please stop and explain the actual problem here
[01:09:06] <drocsid> cpan is installing the shared objects at a noexec mount under /home/... and i need to change the .cpan path
[01:09:11] <mst> drocsid: no it isn't
[01:09:18] <drocsid> yes, it is
[01:09:24] <mst> drocsid: well, .cpan/build isn't an install directory at all
[01:09:30] <mst> that's your *build* directory
[01:09:41] <mst> you've not got as far as installation
[01:09:50] <drocsid> Can't load '/home/chronos/user/.cpan/build/Net-SSLeay-1.90-3/blib/arch/auto/Net/SSLeay/SSLeay.so' for module Net::SSLeay: /home/chronos/user/.cpan/build/Net-SSLeay-1.90-3/blib/arch/auto/Net/SSLeay/SSLeay.so
[01:10:01] <mst> yes, again, that is the *build* directory
[01:10:03] <drocsid> I need to place .cpan/build files at another location
[01:10:12] <drocsid> yeah so it needs to be set at another path
[01:10:19] <drocsid> not under /home
[01:10:21] <mst> yes, correct, what I'm saying is "cpan is installing" is a lie
[01:10:30] <mst> it's not even got as far as installing
[01:10:33] <drocsid> i would call it a mistake
[01:10:37] <drocsid> not a lie
[01:10:51] <mst> it was a mistake when I said "not is isn't< when you replied "yes, it is" it became a lie
[01:10:57] <mst> next time listen to the person trying to help you
[01:11:00] <drocsid> at least not an intentional lie. so how do i specify the .cpan/build path?
[01:11:12] <mst> now, which partition do you have that isn't noexec?
[01:11:37] * mst might go with /usr/local/src/cpan-build and then symlink .cpan/build to there
[01:12:03] <mst> (note that I often run with noexec /tmp and break all sorts of things, I know your pain ;)
[01:12:12] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[01:12:24] <drocsid> can i just set a cpan configuration and not use a symlink?
[01:12:51] <mst> you can move the whole .cpan tree somewhere else using the CPAN_HOME environment variable but personally I think the symlink would be more elegant
[01:14:36] <drocsid> what are the o conf options mentioned via cpan and how are they set?
[01:15:52] <drocsid> I see a build_dir option in the o conf options. I think I should try to set that via cpan to another location
[01:15:53] <mst> at the cpan shell, you can do 'o conf option value; o conf commit;' - or you can edit the .cpan/CPAN/MyConfig.pm
[01:17:08] <mst> personally I tend to use App::cpanminus (cpanm) or App::cpm (cpm) rather than the classic cpan client
[01:18:41] <drocsid> mst thanks. I like this option setting. I can test it out and then commit if it doesn't work. It's a shame that the posts that mention the options don't mention setting them, which is trivial but I couldn't find.
[01:19:02] <brtastic> is there a way I can get rid of experimental warnings once and for all? 'no warnings ...' works, but then many CPAN modules do 'use warnings', which turns them on again
[01:20:26] <mst> brtastic: generally only OO modules - Moo, Mojo::Base etc. - turn them on
[01:20:44] <mst> what I tend to do is build a 'standard setup' bundle package using Import::Into
[01:20:58] <mst> e.g.
[01:21:09] <mst> https://github.com/shadowcat-mst/nxcl/blob/master/lib/NXCL/Class.pm which piggybacks on https://github.com/shadowcat-mst/nxcl/blob/master/lib/NXCL/Package.pm
[01:21:09] <Paperbot> Link title(s): [ nxcl/Class.pm at master · shadowcat-mst/nxcl · GitHub ] [ nxcl/Package.pm at master · shadowcat-mst/nxcl · GitHub ]
[01:21:50] <mst> drocsid: I've had CPAN.pm usage burned into my brain for 20 years so I've no idea where it's documented anymore, sorry
[01:23:46] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Remote host closed the connection)
[01:24:01] <brtastic> mst: yes, I've got my package that turns on the stuff I want, but I tend to use it before any other module, so any further Moo or Mojo import discards my warnings config. So you're saying I should use it after other modules, not before?
[01:24:31] <brtastic> I hoped there's a better way, but if there isn't then yeah, I guess I can do that :P
[01:24:55] <mst> brtastic: generally I follow the pattern of 'imports, then OO system, then pragmata'
[01:25:13] <drocsid> mst never wrote a perl script and have just executed a few directly myself... I found https://askubuntu.com/questions/209615/change-cpan-install-directory informative and if I can find a so account login i will add the details for setting the configuration
[01:25:13] <Paperbot> Link title(s): [ 12.04 - change cpan install directory - Ask Ubuntu ]
[01:25:58] <mst> brtastic: but, yeah, basically, 'use Moo; use experimental qw(signatures);' is the way to go, and if you're doing that a lot, then make a 'MyApp::Class' importer like I showed you above
[01:26:20] <mst> (also 'imports first' is how e.g. a Moo::Role tells that something's an import rather than a method)
[01:26:39] *** Quits: Guest9 (~Guest9@103.240.169.29) (Quit: Connection closed)
[01:26:56] *** Quits: EGD_ (~egd@user/egd) ()
[01:27:44] <brtastic> mst: ah right, I tend to do it differently - pragmas, then core modules, then cpan modules, and local lib modules at the very end. Maybe I'll reconsider that, thanks
[01:29:32] <mst> brtastic: yeah, since stevan little stole my 'automatic strict+warnings code' and baked it into Moose about 15 years ago, the ordering I propose has generally been a better plan
[01:30:58] <mst> (we've tried a bunch of ways to make Moo et. al. leave warnings alone but they all turned out to be more confusing overall sadly)
[01:32:10] <drocsid> mst rewt setting build_dir option via cpan solved my issue. I think I will try to set this for chromebrew cpan package so installing packages via cpan just works 
[01:32:54] *** Quits: drocsid (~drocsid@207.32.160.224) (Quit: Client closed)
[01:38:20] *** Joins: drocsid (~drocsid@207.32.160.224)
[01:38:34] *** Quits: drocsid (~drocsid@207.32.160.224) (Client Quit)
[01:44:43] *** Quits: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-88.dsl.bell.ca) (Read error: Connection reset by peer)
[01:51:46] * GumbyPAN CPAN Upload: Dist-Inkt-0.026 by TOBYINK https://metacpan.org/release/TOBYINK/Dist-Inkt-0.026
[01:57:28] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[02:15:20] *** Joins: gast0n (~g4570n@user/gast0n)
[02:21:22] *** Quits: brtastic (~bartosz@185.24.91.138) (Ping timeout: 272 seconds)
[02:23:42] *** Joins: drocsid (~drocsid@207.32.160.224)
[02:26:52] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[02:27:15] *** Joins: thunder (~thunder@user/thunder)
[02:28:43] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[02:34:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[02:36:48] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:40:42] *** Quits: subie (~subie@2601:4c0:4080:bc0:686c:f7e1:2fe3:d0e1) (Ping timeout: 240 seconds)
[02:44:13] *** Joins: subie (~subie@2601:4c0:4080:bc0:1024:f42:22ee:4297)
[02:45:07] *** Joins: jess (~jess@libera/staff/jess)
[02:46:47] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[02:54:25] <leitz> Yay me...back to my Book::Collate module.
[02:54:51] <leitz> Oddly enough, the reporting capability is taking on a life of its own. Even more than the collation.
[03:00:00] *** Quits: dimbag (~dimbag@pppoe-77-75-15-109.ppp.kmv.ru) (Ping timeout: 272 seconds)
[03:02:12] <xenu> naming your module after Grinnz is a nice gesture
[03:02:42] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[03:03:01] *** Joins: thunder (~thunder@user/thunder)
[03:07:43] *** Joins: whynot (~whynot@37.73.40.201)
[03:18:59] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (Ping timeout: 265 seconds)
[03:19:56] *** Quits: djerius_ (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 258 seconds)
[03:20:23] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[03:21:18] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:24:06] <leitz> :)
[03:35:12] *** Joins: PavelB (~PavelB@50.125.179.101)
[03:39:53] *** Quits: magla (~gelignite@55d418d7.access.ecotel.net) (Quit: Stay safe!)
[04:02:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[04:04:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:04:38] <simcop2387> Leitz, yea reporting tends to do that in every place I've ever seen it used
[04:14:08] *** Joins: XV8 (~XV8@2601:5cb:c001:50:10a1:eeb0:363c:d4c2)
[04:17:54] *** Quits: johnjay (~pi@38.120.10.99) (Ping timeout: 240 seconds)
[04:19:06] *** Joins: johnjay (~pi@38.120.10.99)
[04:33:06] *** Quits: whynot (~whynot@37.73.40.201) (Ping timeout: 272 seconds)
[04:57:02] *** Quits: XV8 (~XV8@2601:5cb:c001:50:10a1:eeb0:363c:d4c2) (Quit: Leaving)
[05:00:32] *** Joins: whynot (~whynot@37.73.45.72)
[05:00:53] *** Joins: ens (~ens@oasys.ch0wn.org)
[05:01:49] <ens> i have an app which is doing "Mojo::IOLoop->start" to go into an event-listener state. i want to add a periodic check to this that executes every 10 seconds. is there a recognised way to do this?
[05:02:08] <ens> i thought about using the alarm signal but that seems pretty hacky
[05:10:29] <simcop2387> ens: https://metacpan.org/pod/Mojo::IOLoop#timer
[05:10:30] <Paperbot> Link title(s): [ Mojo::IOLoop - Minimalistic event loop - metacpan.org ]
[05:11:12] *** Joins: YaoNai (~YaoNai@user/yaonai)
[05:11:13] <PavelB> You can set the timer event to recursively set the next timer event
[05:11:33] <ens> i saw on the manual it also has Mojo::IOLoop->recurring(5 => sub ($loop) {...}); << which i am gonna test out now
[05:12:03] <simcop2387> yea recurring does that for you, forgot it exists
[05:13:39] <ens> yup, that did the trick. sorry for bothering!
[05:13:43] <PavelB> What are the odds timer and recurring are totally just implemented through an alarm
[05:14:16] <simcop2387> ens: no bother at all
[05:15:23] *** Quits: YaoNai (~YaoNai@user/yaonai) (Client Quit)
[05:16:40] <ens> i'm writing a discord bot using https://github.com/vsTerminus/Mojo-Discord and it is not too bad.
[05:16:41] <Paperbot> Link title(s): [ GitHub - vsTerminus/Mojo-Discord: Perl Modules that implement parts of the Discord API. Intended ... ]
[05:23:31] *** Joins: whynot_ (~whynot@37.73.11.14)
[05:23:47] *** Quits: whynot (~whynot@37.73.45.72) (Killed (NickServ (GHOST command used by whynot_!~whynot@37.73.11.14)))
[05:23:58] *** whynot_ is now known as whynot
[05:37:04] *** Quits: Pali (~pali@user/pali) (Ping timeout: 272 seconds)
[05:37:38] *** Quits: tabakhase (tabakhase@user/tabakhase) (Quit: ZNC - http://znc.in)
[05:42:09] *** Quits: whynot (~whynot@37.73.11.14) (Ping timeout: 258 seconds)
[05:43:06] *** Joins: whynot (~whynot@37.73.11.14)
[05:43:40] *** Joins: tabakhase (tabakhase@user/tabakhase)
[06:06:11] <Grinnz> PavelB: zero, thats not how event loops work
[06:06:30] <Grinnz> (which helps them work sensibly on windows)
[06:07:05] <PavelB> I don't know how event loops work I just know how sleep works
[06:07:52] *** Joins: zacts (~zacts@user/zacts)
[06:08:30] *** Joins: Su-Shee (~Susanne@p4ffc7fc2.dip0.t-ipconnect.de)
[06:08:33] <Grinnz> they do usually sleep, either via the socket polling syscall or directly if they know nothing will happen until the next timer
[06:11:30] *** Quits: Su-Shee_ (~Susanne@p4ffc71a5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:11:48] <PavelB> perlfoc -f sleep informs me sleep is alarm
[06:14:38] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[06:15:33] *** Joins: zacts (~zacts@user/zacts)
[06:18:52] *** Joins: zacts47 (~zacts@user/zacts)
[06:20:31] *** Quits: zacts (~zacts@user/zacts) (Killed (NickServ (GHOST command used by zacts47)))
[06:20:42] *** zacts47 is now known as zacts
[06:31:09] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[06:31:57] *** Joins: zacts (~zacts@user/zacts)
[06:33:27] *** Parts: zacts (~zacts@user/zacts) ()
[06:35:53] <pragma-> You're not supposed to do much more than quickly set a flag and bail when in an interrupt handler. But for the longest time I was abusing alarm and running a lot of code in the interrupt handler without any noticeable adverse effects. I just had to worry about resetting the alarm timeout if anything else used it, like sleep.
[06:35:59] * pragma- shakes his head.
[06:36:14] <pragma-> That is probably one of the worst programming offenses I've committed.
[06:45:52] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[06:48:22] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[06:51:32] *** Quits: bobsy (~bobsy@eth122.vic.adsl.internode.on.net) (Ping timeout: 258 seconds)
[06:51:35] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:55:14] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:55:14] *** FinnElija is now known as Guest3020
[06:55:14] *** finn_elija is now known as FinnElija
[06:58:25] *** Quits: Guest3020 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 265 seconds)
[07:01:17] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[07:01:32] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[07:04:18] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Client Quit)
[07:04:32] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[07:04:59] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[07:06:24] *** Quits: whynot (~whynot@37.73.11.14) (Ping timeout: 256 seconds)
[07:07:52] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Client Quit)
[07:08:08] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[07:13:18] *** Joins: whynot (~whynot@37.73.11.14)
[07:14:50] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[07:15:04] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[07:16:24] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Client Quit)
[07:16:30] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[07:16:39] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[07:19:41] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 265 seconds)
[07:26:22] * GumbyPAN CPAN Upload: Pod-Coverage-TrustMe-0.001002 by HAARG https://metacpan.org/release/HAARG/Pod-Coverage-TrustMe-0.001002
[07:26:47] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:43:59] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[07:44:35] *** Joins: Martchus_ (~martchus@2a01:c22:6e50:7400:d250:99ff:fe49:3cce)
[07:46:16] *** Quits: whynot (~whynot@37.73.11.14) (Ping timeout: 272 seconds)
[07:46:16] *** Quits: Martchus (~martchus@2a01:c22:7a61:7000:d250:99ff:fe49:3cce) (Ping timeout: 272 seconds)
[07:46:34] *** Joins: whynot (~whynot@37.73.11.14)
[07:54:50] *** Quits: whynot (~whynot@37.73.11.14) (Remote host closed the connection)
[08:29:37] *** Joins: Guest9 (~Guest9@43.250.157.202)
[09:07:07] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:08:24] *** Joins: PavelB30 (~PavelB@50.125.179.101)
[09:09:15] *** Quits: PavelB30 (~PavelB@50.125.179.101) (Client Quit)
[09:10:55] *** Quits: PavelB (~PavelB@50.125.179.101) (Ping timeout: 246 seconds)
[09:31:28] *** Joins: mattil (~mattilinn@84-253-253-42.bb.dnainternet.fi)
[09:32:36] *** Quits: mattil (~mattilinn@84-253-253-42.bb.dnainternet.fi) (Remote host closed the connection)
[09:33:05] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 265 seconds)
[09:33:08] *** Joins: mattil (~mattilinn@84-253-253-42.bb.dnainternet.fi)
[09:42:54] *** Joins: thunder (~thunder@user/thunder)
[09:44:14] *** Joins: monkey_ (~user@190.104.116.134)
[09:48:57] *** Quits: Guest9 (~Guest9@43.250.157.202) (Quit: Connection closed)
[09:51:05] *** Quits: mattil (~mattilinn@84-253-253-42.bb.dnainternet.fi) (Remote host closed the connection)
[09:56:13] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:06:27] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[10:21:41] * GumbyPAN CPAN Upload: Firefox-Marionette-1.11 by DDICK https://metacpan.org/release/DDICK/Firefox-Marionette-1.11
[10:22:28] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
[10:53:18] *** Joins: brtastic (~bartosz@185.24.91.138)
[11:00:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 276 seconds)
[11:02:00] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:07:24] *** Joins: EGD (~egd@user/egd)
[11:26:48] * GumbyPAN CPAN Upload: JSONSchema-Validator-0.003 by LOGIONIZ https://metacpan.org/release/LOGIONIZ/JSONSchema-Validator-0.003
[11:43:46] *** Quits: deadmarshal (~deadmarsh@95.38.228.142) (Ping timeout: 272 seconds)
[11:57:59] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
[12:03:44] *** Joins: koo7 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:09:06] *** Quits: bs338 (~pi@host86-172-138-26.range86-172.btcentralplus.com) (Ping timeout: 276 seconds)
[12:10:16] *** Joins: bs338 (~pi@host86-188-3-147.range86-188.btcentralplus.com)
[12:16:54] * GumbyPAN CPAN Upload: Excel-ValueReader-XLSX-1.01 by DAMI https://metacpan.org/release/DAMI/Excel-ValueReader-XLSX-1.01
[12:18:41] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[12:20:06] *** Joins: WinterStar (~IceLight@user/icelight)
[12:33:44] *** Quits: deadmarshal (~deadmarsh@95.38.228.142) (Ping timeout: 272 seconds)
[12:36:56] * GumbyPAN CPAN Upload: Crypt-OpenSSL-X509-1.910 by JONASBN https://metacpan.org/release/JONASBN/Crypt-OpenSSL-X509-1.910
[12:41:07] *** Quits: EGD (~egd@user/egd) ()
[12:46:33] *** Joins: furrymcgee (~devuan@31.179.186.66)
[12:48:39] *** Joins: magla (~gelignite@55d482e4.access.ecotel.net)
[12:48:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[12:51:09] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:10:31] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[13:13:51] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Quit: Leaving)
[13:25:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[13:30:51] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
[13:35:34] *** Joins: Guest9 (~Guest9@43.250.157.202)
[13:58:02] *** Quits: deadmarshal (~deadmarsh@95.38.228.142) (Ping timeout: 272 seconds)
[14:21:30] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[14:25:30] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 240 seconds)
[14:30:18] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[14:30:31] <gamo> set colors=0n
[14:32:50] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:36] *** Joins: csrf (~csrf@user/csrf)
[14:33:50] *** Joins: Pali (~pali@user/pali)
[14:37:20] *** Quits: drocsid (~drocsid@207.32.160.224) (Quit: Client closed)
[14:38:49] <shlomif> gamo: what?
[14:38:49] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[14:41:01] <gamo> I want colors
[14:48:56] <lopid> perhaps don't set it to zero
[14:52:11] * GumbyPAN CPAN Upload: DBD-SQLite-1.70 by ISHIGAKI https://metacpan.org/release/ISHIGAKI/DBD-SQLite-1.70
[14:52:26] <gamo> set colors=on
[14:52:41] <lopid> Colors [sic] enabled.
[14:52:45] <gamo> set color=1
[14:52:49] <lopid> Colors [sic] enabled.
[14:56:18] * shlomif fixed some broken internal today
[14:57:11] * GumbyPAN CPAN Upload: Rex-Hook-File-Diff-v0.3.0.3-TRIAL by FERKI https://metacpan.org/release/FERKI/Rex-Hook-File-Diff-v0.3.0.3-TRIAL
[15:04:51] <Adura> set colours=oun
[15:10:48] <lopid> Unknown value for colours: oun
[15:14:51] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 258 seconds)
[15:19:36] <mst> set colours=owned
[15:21:26] <lopid> Colours owned.
[15:23:53] <buZz> set colours=rainbow
[15:24:15] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[15:24:17] <lopid> bored of this already
[15:24:26] <buZz> set lopid=bored
[15:24:43] * lopid : bored of this already
[15:27:27] *** Quits: Guest9 (~Guest9@43.250.157.202) (Quit: Connection closed)
[15:36:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[15:40:16] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[15:42:17] * GumbyPAN CPAN Upload: File-Rename-1.29_02 by RMBARKER https://metacpan.org/release/RMBARKER/File-Rename-1.29_02
[15:45:53] * mst elects lopid 'chairmonger of the bored'
[15:56:58] <ehuelsmann[m]> hi.
[15:57:23] <ehuelsmann[m]> I see a lot of dists have adopted the use of Log::ger over Log::Any.
[15:57:44] <ehuelsmann[m]> I also see that many applications really want to use Log4perl for logging.
[15:57:52] <mst> ehuelsmann[m]: Log::ger is perlancar and you'll almost certainly find those dists are perlancar dists
[15:58:03] <mst> he basically has his own parallel universe
[15:58:04] <ehuelsmann[m]> ah. ok.
[15:58:12] <ehuelsmann[m]> heh :-)
[15:58:20] <ehuelsmann[m]> yes, I was actually concluding that 
[15:59:02] <ehuelsmann[m]> because I was failing to find how to do the logging through all the logging solutions available.
[15:59:02] <mst> if you look through https://metacpan.org/module/Log::ger/requires?size=100 you can see what I mean - I hovered over the first ten and then got bored
[15:59:05] <Paperbot> Link title(s): [ Distributions which depend on Log::ger - metacpan.org ]
[15:59:22] <ehuelsmann[m]> but indeed, you need to log through Log::ger.
[15:59:26] <mst> Log::Any is a pretty good cpan-level option
[15:59:45] <mst> Log::Log4perl or Log::Dispatch are the common app level approaches
[16:00:01] <mst> I helped design Log::Conextual and am still rather fond of it but it never really took off
[16:00:55] <ehuelsmann[m]> for my libraries, I don't want to force people to Log::Log4perl.
[16:01:12] <mst> I said *app* level
[16:01:17] <ehuelsmann[m]> basically, I'm convinced the app developer should determine the logging solution.
[16:01:18] <mst> again, for libraries, you use Log::Any
[16:01:24] <ehuelsmann[m]> right.
[16:01:32] <lopid> isn't is perlancar that's really a group of people at a company in singapore or something?
[16:01:33] <mst> since it's trivial to plug Log::Log4perl into that from the app
[16:01:34] <ehuelsmann[m]> that's why I'm trying to move Workflow out of log4perl.
[16:01:38] <mst> yes
[16:02:08] <ehuelsmann[m]> Packaging of Log::Any could have been a bit leaner though.
[16:02:12] <mst> lopid: when we poked them on cpan the response indicated a singular developer who uploads their own stuff because waiting for people to apply patches is too hard
[16:02:37] <mst> ehuelsmann[m]: what do you mean leaner
[16:02:38] <ehuelsmann[m]> I'd love the proxy to have been in its own package, the only dependency for libraries.
[16:02:42] <lopid> maybe they ahve one person in charge of the cpan account
[16:03:07] <ehuelsmann[m]> well, currently it depends on a lot of stuff just for Log::Any, like Sys::Syslog.
[16:03:10] <lopid> alright, two typos in two attempts. that's enough
[16:03:15] <mst> ehuelsmann[m]: ...
[16:03:36] <mst> perlbot: corelist Sys::Syslog
[16:03:37] <perlbot> mst: Sys::Syslog Added to perl core as of 5
[16:03:43] <mst> ehuelsmann[m]: you're an idiot :P
[16:03:57] * ehuelsmann[m] ducks
[16:04:01] <mst> every single one of its dependencies are shipped with perl core
[16:04:19] <mst> so given it has *zero* deps I dunno what 'leaner' you wanted
[16:04:35] <ehuelsmann[m]> :-/
[16:04:37] <ehuelsmann[m]> ok.
[16:04:47] <ehuelsmann[m]> I stand corrected.
[16:05:31] <mst> btw, as a useful technique, if 'strict' is on the dep list, that's a good hint that a dist is specifying its core deps
[16:05:55] <mst> since strict.pm -only- ships as part of perl, it structurally can't be shipped via cpan
[16:07:43] <mst> note also https://metacpan.org/release/PREACTION/Log-Any-1.709/source/META.yml#L86
[16:07:44] <Paperbot> Link title(s): [ META.yml - metacpan.org ]
[16:08:00] <mst> about the only reason that's useful is to make things easy to package for RHELL derivatives with broken perl rpms
[16:08:23] <ehuelsmann[m]> thanks for the help again!
[16:08:50] <ehuelsmann[m]> I'll go create a PR for Workflow to move it off Log4perl to Log::Any.
[16:10:03] * mst pings the maintainer to see if he's willing to de-explicit-ify the deps
[16:10:32] <mst> hah, in fact, https://github.com/preaction/Log-Any/blob/master/dist.ini#L146
[16:10:33] <Paperbot> Link title(s): [ Log-Any/dist.ini at master · preaction/Log-Any · GitHub ]
[16:10:43] <mst> it actually uses a dzil plugin that -forces- it to have only core prereqs
[16:12:04] <mst> ehuelsmann[m]: anyway, I do hope you understand that 'idiot' was said with love in this case, and also will try and remember to check that in future if you hit a similar situation :)
[16:20:52] *** Quits: brtastic (~bartosz@185.24.91.138) (Quit: leaving)
[16:22:19] <ehuelsmann[m]> oh, I will!
[16:23:44] *** Joins: gggp__ (~gggp@123.113.184.133)
[16:28:26] <mst> ehuelsmann[m]: also remember you get a 'corelist' script with your perl install for checking stuff like that
[16:29:16] <mst> ehuelsmann[m]: though you can also cheat using p3rl.org since it's a smart redirector - e.g. p3rl.org/Sys::Syslog redirects to perldoc.perl.org instead of metacpan
[16:29:29] <mst> so you can check "core or not" *and* get the docs for the thing in one step
[16:30:03] <ehuelsmann[m]> actually, I have used corelist, but as a module, not as a script.
[16:30:09] <ehuelsmann[m]> never known it was a script too.
[16:30:24] <ehuelsmann[m]> thanks for that hint. I usually go trawl perldoc.perl.org.
[16:32:04] * mst uses the script, or if I'm in here the bot command, or if I know I'm going to need to check the docs anyway the "see where p3rl.org sends me" approach
[16:37:13] *** Joins: gggp_ (~gggp@123.113.184.133)
[16:40:42] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
[16:40:48] *** Quits: gggp__ (~gggp@123.113.184.133) (Ping timeout: 272 seconds)
[16:46:40] *** Quits: gggp_ (~gggp@123.113.184.133) (Read error: Connection reset by peer)
[16:46:55] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:47:06] *** Joins: gggp_ (~gggp@123.113.184.133)
[17:02:37] <perlbot> Anonymous pasted a new file at https://l.perl.bot/p/624oyg - 
[17:03:50] <arthurpbs> what I am missing ? https://l.perl.bot/p/624oyg because I thought after I apply a Moo::Role an instance of App would have $instance->foo attribute (member)
[17:03:51] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[17:04:14] <mst> arthurpbs: you've jammed two packages into the same file
[17:04:19] <mst> arthurpbs: so the 'with' runs before the 'has'
[17:04:30] <mst> arthurpbs: split them out into their own .pm files like a sensible person and it'll work
[17:04:46] <mst> arthurpbs: or as a quick hack to test make sure the role comes *first*
[17:05:29] <mst> perl is kinda magic but it still can't see forward in time
[17:06:25] * GumbyPAN CPAN Upload: Getopt-EX-Hashed-0.9906 by UTASHIRO https://metacpan.org/release/UTASHIRO/Getopt-EX-Hashed-0.9906
[17:09:18] *** Quits: gggp_ (~gggp@123.113.184.133) (Ping timeout: 272 seconds)
[17:14:40] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:16:03] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:30:16] *** Joins: gryphn (~gryphon@191.96.106.193)
[17:45:43] *** Joins: habamax (~habamax@user/habamax)
[18:11:33] * GumbyPAN CPAN Upload: File-Rename-1.29_03 by RMBARKER https://metacpan.org/release/RMBARKER/File-Rename-1.29_03
[18:13:16] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[18:15:58] <haarg> ehuelsmann[m]: where were you looking at the prereq list for Log::Any when you concluded that it had a lot of deps?
[18:26:34] * GumbyPAN CPAN Upload: RxPerl-v6.7.2 by KARJALA https://metacpan.org/release/KARJALA/RxPerl-v6.7.2
[18:28:37] <ehuelsmann[m]> haarg: on MetaCPAN , but mst straightened me out
[18:30:23] <haarg> i'd like to improve how it's displayed on metacpan
[18:30:50] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[18:31:08] <haarg> ehuelsmann[m]: https://i.imgur.com/DtCKudL.png - here's an early draft. would this have been enough to avoid the confusion?
[18:32:18] <mst> haarg: my first thought is: put the CPAN modules -first-
[18:32:42] <haarg> probably better that way, yes
[18:33:10] <mst> haarg: esp. since that means when there are core deps but no cpan deps it can start with 'cpan modules' (none)
[18:36:48] <haarg> aside from separating them, i want to filter out pragma modules entirely, and create a separate page with the full dep list, including the different phases and relationships.
[18:36:58] <pragma-> :(
[18:37:21] <mst> pragma-: you are not a dependency, you are a feature :P
[18:37:30] <pragma-> :D
[18:41:36] * GumbyPAN CPAN Upload: Astro-satpass-0.120_01 by WYANT https://metacpan.org/release/WYANT/Astro-satpass-0.120_01
[18:41:36] * GumbyPAN CPAN Upload: App-ansifold-1.0901 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-ansifold-1.0901
[18:44:46] <ehuelsmann[m]> haarg: that would totally do it
[18:47:12] <ehuelsmann[m]> Especially with mst 's remark about the order
[18:50:18] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[18:50:18] <ehuelsmann[m]> haarg: will the full dep list include feature names and deps?
[18:50:40] <haarg> feature names?
[18:51:39] <haarg> if you mean optional_features, it could be added, although very few dists actually use that
[18:52:35] <ehuelsmann[m]> Ok. I meant optional features, yes
[18:52:46] <mst> I sincerely doubt it's worthwhile currently
[18:52:56] <mst> it'd be more noise than it was worth even in the cases where they -do- exist
[18:53:53] <ehuelsmann[m]> Hmm. I have been using them, although probably for applications
[18:54:08] <mst> they're sometimes useful for applications yeah
[18:54:24] <mst> for libraries they're not honestly that helpful IME
[18:55:10] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[18:56:37] * GumbyPAN CPAN Upload: Encode-RAD50-0.017 by WYANT https://metacpan.org/release/WYANT/Encode-RAD50-0.017
[19:02:40] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Ping timeout: 272 seconds)
[19:03:45] <ehuelsmann[m]> Agreed
[19:06:12] <mst> hrm, I appear to have finished the vodka
[19:06:18] * mst declares it to be cider-and-black-O-clock
[19:11:28] *** Quits: rando25892 (~sthk@user/rando25892) (Ping timeout: 272 seconds)
[19:12:22] <Grinnz> ehuelsmann[m]: the "dependency graph" linked under the deps on metacpan will also only show noncore deps
[19:12:59] *** Joins: rando25892 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net)
[19:13:35] <Grinnz> and yes optional features are extremely useful for applications distributed with a cpanfile on github. not really at all useful for cpan installed dists
[19:14:00] <Grinnz> anything otehr than the default behavior of 'cpan Module' or 'cpanm Module' is not likely to occur
[19:22:12] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[19:26:41] * GumbyPAN CPAN Upload: Data-Table-Text-20210728 by PRBRENAN https://metacpan.org/release/PRBRENAN/Data-Table-Text-20210728
[19:36:42] * GumbyPAN CPAN Upload: Lingua-Jspell-1.96 by AMBS https://metacpan.org/release/AMBS/Lingua-Jspell-1.96
[19:42:23] *** Joins: krismatrix (~krismatri@38.80.149.51)
[19:43:21] *** Joins: thrig (~thrig@70.97.65.251)
[19:59:40] *** Quits: subie (~subie@2601:4c0:4080:bc0:1024:f42:22ee:4297) (Ping timeout: 272 seconds)
[20:02:54] *** Joins: subie (~subie@2601:4c0:4080:bc0:1024:f42:22ee:4297)
[20:09:59] *** Quits: Sleepy63 (~Sleepy63@user/sleepy63) (Ping timeout: 252 seconds)
[20:17:11] *** Joins: monkey_ (~user@190.104.116.134)
[20:34:15] *** Quits: Adura (~Adura@user/adura) (Quit: Quit)
[20:34:26] *** Quits: subie (~subie@2601:4c0:4080:bc0:1024:f42:22ee:4297) (Ping timeout: 272 seconds)
[20:36:10] <perlbot> Anonymous pasted a new file at https://l.perl.bot/p/qnbv7v - 
[20:37:11] <mst> arthurpbs: you can use BUILDARGS and BUILD to add stuff, applying method modifiers to new() is a footgun
[20:37:19] <arthurpbs> again, can´t see the problem here: why the around modifier inside around dont work ?
[20:37:40] <mst> like, that's not how anything works
[20:38:02] *** Joins: subie (~subie@2601:4c0:4080:bc0:1024:f42:22ee:4297)
[20:38:06] <mst> also applying modifiers from new() makes no sense
[20:38:52] <mst> also the code you've written is trying to apply modifiers into the role package to methods that don't exist in there, so even if it -did- run it would explode
[20:39:09] <mst> also you wanted 'use experimental qw(signatures);'
[20:39:15] <thrig> summon... the monitor gnomes
[20:39:21] <mst> but other than that Mrs. Lincoln, how was the play?
[20:39:53] <mst> arthurpbs: I've no idea what you think you're trying to do here, I'm afraid - this code is well into "not even wrong" territory
[20:40:58] <arthurpbs> mst: the idea is to apply the debug modifier around the method in the _to_debug list
[20:41:29] <mst> but why
[20:41:54] <arthurpbs> mst: well to print those values
[20:41:57] <mst> you're trying to use a per-object attribute to apply stuff to methods that are per-class, and then you wrote code to try and modify them in the role, where they don't even exist
[20:42:16] <mst> do you actually have real code you're trying to do stuff in, or is this an invented test?
[20:42:26] <arthurpbs> mst real code
[20:42:40] <mst> then you're going to need to show me that, because your invented example makes no sense at all
[20:43:20] <mst> like, this is a russian doll of "this makes no sense and can never work (and would make no sense without Moo because perl doesn't work like that at all)", there's multiple layers of it :P
[20:45:00] <mst> arthurpbs: so, yeah, I need the actual, real problem, so I can suggest a solution that's within shouting distance of reality for you :D
[20:47:13] <mst> like, why are you trying to print those values, and why do you only know which ones at runtime, and and and ...
[20:49:24] *** Quits: thrig (~thrig@70.97.65.251) (Read error: Connection reset by peer)
[20:49:34] *** Joins: unthrig (~thrig@70.97.65.251)
[21:06:22] *** Joins: mattil (~mattilinn@87-92-237-144.rev.dnainternet.fi)
[21:08:50] *** Quits: unthrig (~thrig@70.97.65.251) (Remote host closed the connection)
[21:09:21] *** Quits: mattil (~mattilinn@87-92-237-144.rev.dnainternet.fi) (Remote host closed the connection)
[21:09:48] *** Joins: mattil (~mattilinn@87-92-237-144.rev.dnainternet.fi)
[21:25:53] *** Joins: thunder (~thunder@user/thunder)
[21:27:52] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[21:28:39] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[21:29:15] *** Joins: LSD (~LSD@2.lsd.systems)
[21:32:03] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 258 seconds)
[21:33:45] <ether> haarg: re your mockup, I'd add a little triangle thingy by 'core modules' to show/hide them
[21:34:18] <ether> not sure if the default should be to have them shown or hidden. probably shown is safest for now as it's less of a change
[21:36:18] *** Joins: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[21:41:51] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[21:51:28] <simcop2387> haarg: core modules from which version?
[21:52:12] <simcop2387> otherwise the look seems good
[21:52:28] <haarg> probably latest
[21:54:58] <simcop2387> perlbot: farnsworth 230MiB/s -> Mib/s
[21:55:00] <mjgardner> LeoNerd: In porting from Moo to Object::Pad, where should attribute default code to?
[21:55:01] <perlbot> simcop2387:  1840 
[21:55:17] <simcop2387> wow so 1840 megabits/s write speed on a single spinning rust disk?
[21:55:19] <mjgardner> s/to/go/
[21:55:53] <simcop2387> mjgardner: class Foo {has $x = default; ... }
[21:56:06] <mst> mjgardner: https://metacpan.org/pod/Object::Pad#has
[21:56:06] <Paperbot> Link title(s): [ Object::Pad - a simple syntax for lexical slot-based objects - metacpan.org ]
[21:56:10] <mst> mjgardner: 'has $var = EXPR;'
[21:56:52] <simcop2387> mjgardner: it's a slight brain impedence mismatch from how things used to be done, it does take a while to get used to.  it's not hard but it's just very different
[21:57:24] <simcop2387> i don'pt think there's any equivilent lazy pattern for that yet though
[21:57:36] <mjgardner> Does that work with slot attributes like :reader?
[21:58:19] <simcop2387> it should yes
[21:59:19] <mst> mjgardner: ...
[21:59:21] <mst> try and avoid imagining extra problems that don't exist - programming is hard enough when you only have to deal with the real ones.
[21:59:28] <mjgardner> Yah, without lazy, how can I set a slot based on another slot?
[21:59:39] <mst> for that you'd need to write a method
[21:59:55] <mst> I believe there's a lazy builder type thing being developed but it's not there yet
[22:00:02] <mst> you could always volunteer to test it though
[22:00:42] <mjgardner> Sure
[22:00:47] <haarg> i don't think there's really any agreement on how lazy should work
[22:01:18] <mst> haarg: I believe LeoNerd's using it as an example of an attribute implementation on cpan outside of O::P itself
[22:01:23] <simcop2387> mjgardner: i'd setup a customer reader/mutator, read both of those in the docs.  that'll let you do it manually right now
[22:01:34] <mst> but yeah
[22:01:42] <mst> method foo { $foo //= $self->_build_foo }
[22:01:47] <mst> isn't too awful for the moment
[22:01:49] <simcop2387> basically
[22:02:19] <mjgardner> Thanks
[22:02:30] <simcop2387> i think you want to use :lvalue and then make sure it returns the slot so it can act like a mutator and be used how you'd expect with a normal moo lazy/whatever.  but you don't have to do that either
[22:02:44] <mst> my lazy built attributes are pretty much always read only
[22:03:04] <mst> otherwise I'd write
[22:03:23] <mst> method foo ($new_foo = (return $foo //= $self->_build_foo)) { $foo = $new_foo }
[22:04:13] <haarg> i wasn't sure if Object::Pad was allowing defaults to use previously defined slots, so i tested it
[22:04:20] <haarg> Segmentation fault: 11
[22:04:23] <mst> damnit
[22:04:48] <mst> sub foo ($self, $new_foo = (return $self->{foo} //= $self->_build_foo)) { $self->{foo} } works
[22:04:58] <mst> in non O::P code
[22:05:06] <mst> that's clearly an oversight
[22:05:26] <mst> (ok, the oversight may be that it doesn't thrown an exception telling me to fuck off and not do that, but still)
[22:05:57] <simcop2387> Lol
[22:09:17] <haarg> mst: your 'method' works. i was referring to slot defaults.
[22:09:23] <mst> ohhh right
[22:09:39] <mst> yeah, but defaults that rely on other slots are always evil
[22:10:05] <haarg> kind of
[22:10:45] <mst> non-lazy relying-on-other-stuff defaults have always been a footgun IME
[22:10:46] <haarg> but with O::P, they are lexical-ish, so you couldn't refer to slots from parent classes or roles, so definition order should be sane
[22:19:54] *** Quits: jess (~jess@libera/staff/jess) ()
[22:23:09] *** Quits: finsternis (~X@23.226.237.192) (Read error: Connection reset by peer)
[22:37:37] *** Quits: mattil (~mattilinn@87-92-237-144.rev.dnainternet.fi) (Read error: Connection reset by peer)
[22:41:39] *** Joins: fling (~fling@user/fling)
[22:42:02] * GumbyPAN CPAN Upload: Crypt-Twofish2-1.03 by MLEHMANN https://metacpan.org/release/MLEHMANN/Crypt-Twofish2-1.03
[22:52:33] *** Quits: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 258 seconds)
[22:53:20] *** Joins: Sleepy63 (~Sleepy63@user/sleepy63)
[22:54:10] *** Quits: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[22:54:52] *** Joins: Guest9 (~Guest9@43.250.157.202)
[22:59:42] *** Joins: EGD (~egd@user/egd)
[23:01:49] *** Joins: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu)
[23:10:33] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[23:18:08] *** Joins: thunder (~thunder@user/thunder)
[23:21:04] *** Quits: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu) (Ping timeout: 272 seconds)
[23:23:15] *** Joins: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[23:27:03] <LeoNerd> mjgardner: attribute default code (i.e. not constant expressions) probably wants to live in ADJUST blocks
[23:27:23] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[23:28:17] *** Quits: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 265 seconds)
[23:30:30] *** Quits: deadmarshal (~deadmarsh@95.38.228.142) (Ping timeout: 258 seconds)
[23:33:25] *** Joins: EvanCarroll (~ecarroll@c-76-30-158-126.hsd1.tx.comcast.net)
[23:34:54] *** Joins: WinterStar (~IceLight@user/icelight)
[23:37:16] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:cc94:ff80:486b:bc69:ca86)
[23:38:06] *** Joins: Trigon (~reuben@73.127.1.41)
[23:39:26] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Ping timeout: 272 seconds)
[23:40:04] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:305b:71d2:34a1:44af:7617) (Ping timeout: 272 seconds)
[23:40:47] *** Quits: gryphn (~gryphon@191.96.106.193) (Quit: kthxbye)
[23:41:22] *** Joins: finsternis (~X@23.226.237.192)
[23:45:15] *** Quits: nperez (~nperez@2a02-a45b-17c4-1-a00-27ff-feab-4723.fixed6.kpn.net) (Ping timeout: 276 seconds)
[23:47:02] *** Joins: nperez (~nperez@2a02-a45b-17c4-1-a00-27ff-feab-4723.fixed6.kpn.net)
[23:53:22] *** Quits: nperez (~nperez@2a02-a45b-17c4-1-a00-27ff-feab-4723.fixed6.kpn.net) (Ping timeout: 272 seconds)
[23:56:14] *** Joins: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-25-184-147-14-206.dsl.bell.ca)
[23:59:47] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
