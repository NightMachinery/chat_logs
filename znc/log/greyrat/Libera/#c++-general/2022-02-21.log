[00:01:11] <bobb_> yolo consider turning off pedantic for this specific lib only
[00:02:41] <bobb_> yolo https://www.foonathan.net/2018/10/cmake-warnings/ is a good read
[00:02:51] <yolo> in g++ manpage pedantic is discussed along with C(to make -ansi more strict), it has very little info about what it exactly does for c++, other than it enforce iso c++ standards, I got tons of anonymouse struct waring(which is legal in c) and  the only way to silience that is to turn off pedantic one for all
[00:03:21] <yolo> -once for all-
[00:07:23] <PJBoy> { switch (0) default: do cout << "{}"; while(false); }
[00:07:23] <geordi> {}
[00:07:36] <PJBoy> TIL that neither switch nor do-while need braces
[00:08:23] <yolo> i found whenever I turn on -Wsign-conversion the third-party is warning everywhere...it's not just noisy, it's overwhelming noise
[00:08:44] <yolo> bobb_: thanks for that cmake post, don't know that trick
[00:13:42] <leonardus> what is the difference between using std::allocator and using malloc()/etc?
[00:21:54] <PJBoy> aside from fulfilling the allocator interface
[00:22:18] <PJBoy> it handles the size of the thing you're allocating for you
[00:22:21] <nightstrike> pedantic was named pedantic because the authors felt it warned for stupid things
[00:22:25] <nightstrike> at least in c
[00:22:25] <PJBoy> it can be used for constexpr code
[00:22:48] <PJBoy> allocations made via std::allocator can be fused or optimised away by the optimiser
[00:23:07] <PJBoy> it works via operator new, so it respects those overloads
[00:23:28] <PJBoy> in C++23 it has an allocate_at_least method, that can work faster
[00:23:31] <nightstrike> https://www.gnu.org/prep/standards/standards.html#Non_002dGNU-Standards  ....[[ If you want these constructs to give an error message as “required” by the standard, you must specify ‘--pedantic’, which was implemented only so that we can say “GCC is a 100% implementation of the standard”, not because there is any reason to actually use it. ]]
[00:34:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:37:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:37:35] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[00:37:56] *** Joins: Hello72 (~Hello71@wireguard/contributor/hello71)
[00:40:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:42:24] *** Joins: evilpyro (~evilpyro@user/evilpyro)
[00:44:44] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:48:27] <yolo> i just turned off pendantic for now, my take-away is that, use it with C, for c++, I failed to find any 'evidence' that it's worthy or not.
[00:50:07] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:4c08:71:8cb3:77da)
[00:50:11] *** Joins: rajkosto (~rajkosto@93-86-159-18.dynamic.isp.telekom.rs)
[00:50:56] <PJBoy> use pedantic
[00:51:11] <PJBoy> it flags up extensions like VLAs
[00:51:23] <PJBoy> and some other non-standard crap
[00:53:31] <PJBoy> and the ?: operator
[00:53:35] <PJBoy> << (0 ?: 1)
[00:53:36] <geordi> error: ISO C++ does not allow '?:' with omitted middle operand
[00:53:55] <PJBoy> pedantic should 100% be the default
[00:54:52] <PJBoy> AFAIK -pedantic doesn't warn about anything pedantic
[00:55:17] <yolo> VLA is C, yes I use pedantic for C, just not c++
[00:55:22] <PJBoy> think of it more as "conforming"
[00:55:51] <yolo> it's overly noisy sometimes, and it does not let me disable part of those warning, it's a one or nothing thing
[00:56:05] <PJBoy> what kind of thing is it warning you on?
[00:56:16] <yolo> anonymous struct is the one i met today
[00:56:33] <yolo> that third party has many usage of anony struct/union
[00:56:41] <PJBoy> well there you go, that's non-standard
[00:57:40] <yolo> it's always painful to deal with 3rd libs, my default c++ flags will render that build unbearable, i mean, probably 10 thousands warnings
[00:58:05] <PJBoy> yeah you ideally want different build flags for your third party shit
[00:58:07] <yolo> in the meantime, it worked "fine"
[01:00:23] *** Quits: AmR (~AmREiSa@156.199.67.136) (Quit: Konversation terminated!)
[01:00:25] <PJBoy> yeah you can't help what 3rd parties do
[01:00:36] <PJBoy> they're usually riddled with warnings
[01:01:07] <PJBoy> especially annoying when they're in header files
[01:01:54] *** Quits: evilpyro (~evilpyro@user/evilpyro) (Quit: Leaving)
[01:01:57] <PJBoy> { union { struct {}; } u; }
[01:01:57] <geordi> error: ISO C++ prohibits anonymous structs
[01:02:02] <PJBoy> blurgh, terrible
[01:11:08] *** Quits: robod34 (Username@79.113.243.73) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:11:47] *** Quits: sigma__ (~sigma@86.57.90.219) (Quit: Konversation terminated!)
[01:13:32] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:13:35] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[01:15:15] *** Joins: sigma_ (~sigma@164.215.201.51)
[01:16:14] <ville> yolo: https://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Pragmas.html
[01:18:07] *** Joins: badone (~badone@209.132.189.152)
[01:20:42] *** Quits: magla (~gelignite@55d46ecf.access.ecotel.net) (Quit: Stay safe!)
[01:22:12] <nightstrike> PJBoy: are gcc extensions really that bad?
[01:22:30] <nightstrike> I'm probably biased, but I mean... they tend to be supported in any compiler that matters
[01:22:42] <PJBoy> yeah definitely
[01:22:52] <nightstrike> I use them all the time :)
[01:23:04] <PJBoy> you have to check the compiler docs for every compiler you use them in to see their behaviour
[01:23:10] <nightstrike> I have little desire to support msvc or something
[01:23:27] <PJBoy> they won't be considered by any developments in the standard
[01:23:53] <nightstrike> eh... sounds like you're being pedantic :P     Zing!!
[01:23:54] <PJBoy> they likely work differently in different compilers in subtle ways
[01:24:04] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:24:15] <PJBoy> undocumented ways most likely
[01:24:26] <nightstrike> seriously though, I have yet to see an occasion where any legitimate compiler behaved differently
[01:24:46] <PJBoy> well the anonymous struct thing doesn't compile in my MSVC
[01:25:01] <PJBoy> and my MSVC extensions definitely don't work in GCC
[01:25:05] <nightstrike> I use mostly intel and gcc, I definiltey have reason for never wanting to ever support msvc :)
[01:25:28] <PJBoy> yeah if you don't want portable or conforming code, then extensions are probably ok
[01:25:30] <nightstrike> which msvc extensions don't work in gcc?  We added support for a bunch
[01:25:43] <PJBoy> passing an rvalue to a function taking non-const lvalue reference
[01:26:07] <nightstrike> hm... that sounds like a PR I read recently...
[01:26:56] <PJBoy> { auto it = istream_iterator<int>(istringstream("123")); }
[01:26:56] <geordi> error: cannot bind non-const lvalue reference of type 'istream_iterator<int>::istream_type&' {aka 'istream&'} to an rvalue of type 'istream'
[01:26:58] <PJBoy> for example
[01:27:56] <nightstrike> hm, I'm thinking of https://gcc.gnu.org/bugzilla/show_bug.cgi?id=62109 maybe, which we just fixed.  Anyway, we generally try to support them if someone tells us about them
[01:28:15] <nightstrike> so like, we have a whole chunk of code devoted to ms style printf
[01:28:39] <PJBoy> I don't like any of them
[01:28:56] <nightstrike> (to be clear, I'm referring to mingw-w64 when I say we)
[01:29:06] <PJBoy> you can't expect people that know C++ to know the language extensions, that's a drawback
[01:29:40] <PJBoy> like I don't know how those anonymous structs work
[01:29:47] <PJBoy> even though I wrote an example
[01:30:29] <nightstrike> https://gcc.gnu.org/onlinedocs/gcc/Unnamed-Fields.html << You mean that?
[01:30:33] <nightstrike> it's pretty well documented
[01:30:54] <PJBoy> nah it was a struct inside a union
[01:30:55] <nightstrike> and hey, it references -fms-extensions!
[01:31:07] <PJBoy> { union { struct {}; } u; }
[01:31:07] <geordi> error: ISO C++ prohibits anonymous structs
[01:31:30] <PJBoy> normal anonymous structs are fine
[01:31:35] <PJBoy> { struct {} s; }
[01:31:36] <geordi>  
[01:32:10] <PJBoy> even if there's GCC docs for it, I haven't read them
[01:32:19] <PJBoy> I know C++, now gnu++
[01:32:22] <PJBoy> *not
[01:32:57] <PJBoy> I hate the MSVC extensions just as much btw
[01:33:21] <PJBoy> I'd be a lot more accepting of them if they were opt-in rather than opt-out
[01:36:44] *** Quits: sigma_ (~sigma@164.215.201.51) (Quit: Konversation terminated!)
[01:38:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:39:17] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d1e0:a278:ec0d:b0b1) (Ping timeout: 240 seconds)
[01:40:42] <johnny> I've only ever built whole programs with extensions turned off, so i don't actually know if it'd recognize the extensions in somebody else's codebase :(
[01:40:50] <johnny> if I'd*
[01:40:53] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d1e0:a278:ec0d:b0b1)
[01:41:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[01:41:32] <johnny> guess I'd have to let CI yell at me on that one
[01:41:38] *** Joins: markong (~kvirc@213.146.188.203)
[01:41:47] <yolo> my original question was like: I only code for linux with gcc/g++(ok, maybe clang++ if then can catch up again), I care less about msvc, is pendantic still worthy
[01:41:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[01:42:14] *** Joins: sigma_ (~sigma@164.215.201.51)
[01:42:26] <johnny> and this isn't some FOSS code?
[01:42:36] <johnny> i mean really, isn't that up to you then?
[01:42:47] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:42:55] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:42:55] *** ChanServ sets mode: +v npaperbot
[01:43:07] <johnny> people here seem to be against compiler extensions on principle, but this is a C++ channel.
[01:43:49] <PJBoy> there's a question of what compiler extensions you find useful
[01:43:51] <johnny> yep
[01:43:52] <yolo> I can make the call, I just don't know what pedantic brings for g++/linux situation, between noisy-warning vs portability when portability is not a concern, so, is pendantic all about portability then? nothing else got lost
[01:44:04] <PJBoy> and what kind of value they bring to you
[01:44:46] <PJBoy> I'm unfamiliar with most of them myself, and I get by seemingly without any issue
[01:44:52] <yolo> again, pedantic makes sense for C
[01:45:18] <sigma_> hi, i need information about font. how it's work and how load in c++. font is related to terminal?
[01:45:23] <yolo> anyway, off pendantic for g++/linux until the world falls apart one day
[01:45:32] <PJBoy> I'd find it a lot easier to justify non-pedantic in C
[01:45:41] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[01:46:12] <PJBoy> C has lack of features, so it makes sense you'd want some more tools to work with
[01:46:27] <PJBoy> C++ you can do everything in a conforming way
[01:47:33] <PJBoy> (I'm sure there are times and places where it makes sense)
[01:48:42] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[01:50:07] <johnny> yolo, i just kept it in there without thinking because I have some C code too in my embedded project
[01:50:16] <johnny> but i also don't see why i wouldn't just always keep it in my flags
[01:50:21] *** Quits: Tokamak (~Tokamak@172.58.188.134) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:50:25] <johnny> like.. what's the argument to not.. is my opinion
[01:51:00] <johnny> oh, and also clang has implemented gcc extensions, so it's possible it won't even matter even if you were breaking the rules
[01:51:06] <sigma_> hi, i need information about font. how it's work and how load in c++. font is related to terminal?
[01:51:26] <johnny> sigma_, what does fonts have to do with C++?
[01:52:02] <johnny> sigma_, you need to rephrase your question
[01:53:00] <sigma_> i want make special termial app, i need to load ttf font. i use linux
[01:53:25] <PJBoy> you want some way of telling the terminal to change font?
[01:53:41] <PJBoy> is that even possible?
[01:53:47] <Friithian> maybe with *curses?
[01:53:53] <PJBoy> don't think I've ever seen an application change terminal font
[01:53:58] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[01:54:15] <PJBoy> and I'd be annoyed if it did
[01:54:45] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Remote host closed the connection)
[01:55:07] <johnny> can evne curses do that?
[01:55:08] <PJBoy> does you app spawn the terminal?
[01:55:14] <PJBoy> that would be a different story
[01:55:16] <sigma_> <PJBoy>: i see some compelx binary code in c, and it is work
[01:55:25] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43)
[01:55:29] <Friithian> johnny: from my 10 seconds of research I dont think so
[01:55:42] <PJBoy> sigma_, you got a link?
[01:55:50] <sigma_> <johnny>: curses cant
[01:55:52] <johnny> well maybe it doesn't acutally change the font, but rather prints out something that approximates a different font as text
[01:56:19] <johnny> so you're not actually rendering text, but rather dots???
[01:56:29] <johnny> yeah show the code sigma_
[01:56:35] <sigma_>  <PJBoy>: no but you can search , change font in terminal. just wait
[01:56:51] <johnny> nobody is gonna do the work for you sigma_
[01:57:11] <johnny> you're the one who wants help so it's on you to send things that make it easier for the helper
[01:58:49] <johnny> recently i was thinking about what i've gotten out of my adventure in C++ land
[01:59:07] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Read error: Connection reset by peer)
[01:59:28] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43)
[01:59:39] <ville> yolo: did you read the page i gave you?
[02:00:20] <johnny> i can't say i learned more about say dealing with say memory management or writing faster code or anything. The most interesting things i learned were about the standard library, build systems, libraries, and the ecosystem overall
[02:00:53] *** Joins: Tokamak (~Tokamak@172.58.188.134)
[02:01:20] <yolo> ville: yes except this is a big non-cmake project and the 3rd party code is mixed with our code 'seamlessly', so far I just get rid of pendantic and the noise level was tuned down 95%, good for now
[02:01:51] <johnny> well how many of those errors could have been fixed in an automated way vs not?
[02:02:04] <johnny> err probably warnings, not errors
[02:02:47] <johnny> yolo, then you should have just said (or not said anything) you turned off pedantic because it's just too much of a bother to deal with right now and that'd be completely valid
[02:02:53] <yolo> i could fix all those warning, then I will be fired, as I got 'nothing done' for probably one or two weeks---boss, sorry, I'm fixing warnings
[02:03:19] <Friithian> you have a bad boss
[02:03:32] <johnny> you didn't need to be convinced to turn it off, you were gonna turn it off anyways because you just can't deal with it right now
[02:04:31] <PJBoy> at my job I'd mark down "thousands of warnings" as a possible motivation to invest some time in the build system
[02:04:39] <ville> macro the push/pops and stick those in front of the offending includes or if you control the headers being included into the headers
[02:04:42] <johnny> sure, but it doesn't ha to be right now
[02:04:53] <yolo> ville: it's all in the code, not headers
[02:05:25] <ville> so you have one giant source file?
[02:05:49] <johnny> i suppose this would be one of those times whe you wish each problem have a specific pedantic error code name or number
[02:07:10] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:4c08:71:8cb3:77da) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:07:31] <sigma_> i cant find that page, but about terminal font https://stackoverflow.com/questions/7083463/change-terminal-font-size-with-c#7083555 / we cant in c++.
[02:08:05] <sigma_> just use system() and some special syntax.
[02:08:28] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Remote host closed the connection)
[02:08:50] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43)
[02:09:19] <sigma_> but how load it , in linux?
[02:10:16] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[02:12:04] <sigma_> the user need install font and flush font cache. how access files or directory in c++. i use fstream before but those it work ?
[02:12:44] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[02:17:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[02:17:20] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:19:42] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Read error: Connection reset by peer)
[02:20:00] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43)
[02:24:43] <NyB> hmm... can I somehow convince SWIG to convert a type into another C++ type before it creates an interface? Context: I'm trying to get SWIG to transparently convert string_view to string
[02:25:11] <NyB> (because then - in theory - it knows what to do with a string. I think...?)
[02:26:20] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5322)))
[02:26:21] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[02:26:23] <johnny> i don't even know what swig is, so i can't say
[02:28:18] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Remote host closed the connection)
[02:28:40] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43)
[02:29:42] <NyB> nevermind, SWIG (it's (one of?) the most common binding generator for C++) has no idea what to do with std::string either, it seems. Bugger...
[02:32:11] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[02:33:21] <NyB> ah, there's a typemap that you can include for std::string
[02:33:33] *** Joins: teepee (~teepee@openscad/teepee)
[02:33:38] <NyB> but nothing for std::string_view; I'd have to write it myself :-(
[02:35:21] <sigma_> if you want use two language why use swing? you can make api or binary file with c++ and then put in target code. it is very safer than this way
[02:38:19] *** Quits: rajkosto (~rajkosto@93-86-159-18.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[02:38:21] <NyB> sigma_: I'm not sure I understand what you mean. Without SWIG I'd have to write bindings for Python and Java myself. And I'm really trying to stay away from JNI, for starters...
[02:38:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:41:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:42:36] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d1e0:a278:ec0d:b0b1) (Ping timeout: 240 seconds)
[02:42:45] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[02:47:59] <sigma_> <NyB>: you want use swig for bindings Python and Java. like your code is java but you want use python for ui? like mixed together in binary level. i think swig do this.
[02:48:00] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[02:48:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:78cf:6f3f:4205:5ab9)
[02:49:19] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:49:46] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[02:50:37] <NyB> sigma_: my code is in C++; I want bindings for Java and Python, so that I can use my library in those languages. Unfortunately, SWIG does not seem to support string_view out-of-the-box, which complicates things...
[02:51:53] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Remote host closed the connection)
[02:52:21] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43)
[02:53:06] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:56:32] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[02:56:48] <sigma_> <NyB>: i say you can make c++ code and compile to binary. so when your python app want to run just call and excute your binary. you c++ act like api. this like os boot and kernel run driver binary file
[02:57:05] *** Quits: bobb_ (~bobb_@dslb-088-066-130-106.088.066.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:03:30] <sigma_> <NyB>: your python code just pass argumant to api
[03:03:52] *** Joins: pulse (~pulse@user/pulse)
[03:04:21] <NyB> sigma_: that would only work for the most trivial of cases. For anything more you need a proper integration. I'm not just starting a binary with 3 arguments or something, you know...
[03:04:45] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Remote host closed the connection)
[03:05:07] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43)
[03:05:58] <cbreak> for python bindings, I usually use boost::python or pybind11
[03:07:13] <NyB> cbreak: my priority is Java, to be honest. Otherwise I'd have gone for boost... or maybe I'd have convinced myself to set CLIF up.
[03:07:37] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Read error: Connection reset by peer)
[03:08:15] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43)
[03:08:31] <cbreak> I've luckily never had to deal with that thing
[03:09:37] <NyB> mistakes of times past, and all that :-)
[03:12:09] <NyB> at some point I found myself looking into ASM code generated by the JVM and decided I was using the wrong language...
[03:13:59] <sigma_> <NyB>: i not recommended to do this. it is so buggy and sometimes does not support c++ ability. but that way is so fast and i dont no why proper integration is important. they cant understant each other it is like install macos file on windows.
[03:15:13] <sigma_> so why  proper integration is important?
[03:19:05] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[03:19:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:20:36] <NyB> sigma_: alright, here's an example: you have a special kind of map implemented in C++. How can you use it by running a binary? The only way I can think of is to write a full RPC server around it, which would be a major undertaking for any moderately complicated library.
[03:21:46] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:22:52] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:22:57] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:24:48] <NyB> even for a simple map, the RPC server would need to track objects on demand... and getting the API code to use the object traking correctly on the Java side would be... annoying
[03:25:31] *** Quits: DSpider (~DSpider@82.79.237.78) (Quit: Leaving)
[03:28:15] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 256 seconds)
[03:30:12] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[03:30:14] <sigma_> <NyB>: java cant access to memory, like get a object refrence to api? or you can write object data in hard disk and copy to java
[03:31:44] <NyB> sigma_: ermm... Java can access native memory just fine. It's just a bit annoying. See https://en.wikipedia.org/wiki/Java_Native_Interface
[03:32:47] <NyB> (OK, it's _very_ annoying, which is why we have things like SWIG)
[03:33:18] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:34:18] <sigma_> by the way if you have complex and big library , convert to ASM is so harder. i never see big system work like this. os is very big and use many languge but they are use api maybe is more code but much better
[03:38:58] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 272 seconds)
[03:39:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:40:41] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:7c47:953e:6e68:fa4d)
[03:41:53] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[03:42:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:44:08] <NyB> sigma_: I'm having trouble understanding what you are trying to say. "...but they are use api": as opposed to?
[03:46:12] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[03:48:39] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[03:54:37] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[03:54:58] *** Joins: Hello72 (~Hello71@wireguard/contributor/hello71)
[03:56:38] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[03:57:14] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[03:59:51] <sigma_> <NyB>: im thinking about other connection mybe you think im stupid . jni run api or native methode inside java but you just run app in java with https://ourcodeworld.com/articles/read/834/how-to-run-a-system-application-executable-from-java
[04:01:11] <sigma_> and then wirte data in disk, your c++ app read and change file. after process is complete. java can read new file
[04:01:43] <sigma_> they are work to gether with out any thouch
[04:03:37] <sigma_> or you can run system command for run special app
[04:05:05] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[04:13:23] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[04:22:17] *** Joins: pulse (~pulse@user/pulse)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:28:32] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:33:12] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[04:33:42] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:37:37] *** Quits: jsbach (~jsbach@2a01:c23:6025:2d00:256b:a810:99a0:449b) (Ping timeout: 240 seconds)
[04:39:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:40:12] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[04:41:15] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[04:43:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[04:51:19] *** Joins: arch-angel (~quassel@user/arch-angel)
[04:52:16] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:78cf:6f3f:4205:5ab9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:55:25] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:10:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:13:15] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 240 seconds)
[05:15:12] *** Joins: kevr (~kevr@user/kevr)
[05:18:30] *** Joins: MBrod208 (~MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[05:32:44] *** Joins: pulse (~pulse@user/pulse)
[05:33:03] <hnOsmium0001[m]> you realize this requires hand writing a lot of busywork code right?
[05:33:06] <hnOsmium0001[m]> parser and serializers for days
[05:34:08] <hnOsmium0001[m]> oh that was like 2 hours ago, nevermind
[05:35:07] <Friithian> what is time, anyway
[05:38:15] <pulse> time is the continued sequence of existence and events that occurs in an apparently irreversible succession from the past, through the present, into the future
[05:38:40] <Friithian> why does it have to be so wishey washey?
[05:40:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:42:48] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:42:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:42:57] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:42:57] *** ChanServ sets mode: +v npaperbot
[05:43:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:43:43] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:51:42] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[05:54:15] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 240 seconds)
[05:55:11] *** Joins: Hello72 (~Hello71@wireguard/contributor/hello71)
[05:57:44] <sigma_> <hnOsmium0001[m]>: i know  but she/he dont want use jni so this is my advice
[05:58:08] <sigma_> mybe swing is better
[06:03:00] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[06:03:15] *** Joins: ferdna (~ferdna@user/ferdna)
[06:04:21] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[06:07:13] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[06:10:06] *** Joins: rajkosto (~rajkosto@93-86-159-18.dynamic.isp.telekom.rs)
[06:17:37] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:7c47:953e:6e68:fa4d) (Ping timeout: 240 seconds)
[06:19:23] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:20:25] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th) (Remote host closed the connection)
[06:21:04] <hnOsmium0001[m]> Friithian: Undoubtedly the language use of the sentence is comprehensible, given the reader commits moderate amount of cognitive attention, and under the right circumstances, appropriate utilization of assisting appliances.
[06:21:04] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:74c7:3101:7ef7:bc18)
[06:21:22] <Friithian> I am way to tired for those words
[06:21:28] <Friithian> ssosoos
[06:22:54] <Friithian> yeah my cognative something isn't enough to figure this out
[06:26:38] <hnOsmium0001[m]> in other news thanks for the qt company for making things confusingly named
[06:26:45] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[06:27:24] <hnOsmium0001[m]> it seems like qtdeclarative is synonymous for qt quick 1, but but in qt6 it got deprecated and qt quick 2 was merged into qtdeclarative...?
[06:27:53] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[06:35:58] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[06:40:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:42:17] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:42:17] *** Joins: kevr` (~kevr@user/kevr)
[06:42:55] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 240 seconds)
[06:43:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:47:00] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 240 seconds)
[06:56:44] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:59:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:00:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:03:48] *** Joins: adeliktas5 (~adeliktas@i59F5279A.versanet.de)
[07:05:24] *** Quits: adeliktas (~adeliktas@i59F5265C.versanet.de) (Ping timeout: 240 seconds)
[07:05:24] *** adeliktas5 is now known as adeliktas
[07:07:25] *** Joins: Azem (~haise01@user/haise01)
[07:11:08] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 272 seconds)
[07:17:48] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[07:25:52] *** Quits: rajkosto (~rajkosto@93-86-159-18.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[07:27:26] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:4c08:71:8cb3:77da)
[07:27:31] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:33:56] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 272 seconds)
[07:37:48] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:4c08:71:8cb3:77da) (Ping timeout: 240 seconds)
[07:41:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:42:12] *** Joins: rajkosto (~rajkosto@93-86-159-18.dynamic.isp.telekom.rs)
[07:44:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[07:45:42] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:46:50] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:50:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[08:07:56] *** Quits: Tokamak (~Tokamak@172.58.188.134) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:17:56] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:7c47:953e:6e68:fa4d)
[08:20:12] *** Quits: MBrod208 (~MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[08:33:26] *** Joins: toastloop (~toastloop@user/toastloop)
[08:36:40] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[08:41:20] <nightstrike> std::atomic<std::size_t> count; // what memory model does this use by default?
[08:41:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:42:18] <yolo> not a c++ question, I need use -nostdlib to get some bare-metal benchmark running on a CPU that has no IO access, it just has memory and cpu and I can only load stuff to its memory and read from the memory(e.g. a GPU core that is part of a Nvidia's ARM chip), is there a stdio-to-RAM library(i.e. printf will just save chars to memory)? most bare-metal code still uses stdio.h, I need write a library that
[08:42:25] <yolo> does stdio, but to memory buffer.find nothing available, time to do some C work(again)
[08:43:02] <yolo> nightstrike: what does memory model mean there? atomic to me is like some special assembly code that guard the data
[08:43:22] <nightstrike> yolo: c++ defines 5 or 6 memory models
[08:43:43] <nightstrike> sounds like you just want memcpy, no?  Or std::copy?
[08:44:52] <yolo> maybe, the problem is memcpy does not do %s %d stuff which is important for debugging, plus existing (benchmark) code uses printf so I need mimic the same API
[08:45:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:46:32] <nightstrike> sprintf?
[08:46:59] <nightstrike> sprintf writes to memory, so....
[08:47:57] <nightstrike> and recent c++ made the printf family c++ified: https://en.cppreference.com/w/cpp/utility/format/format
[08:48:12] <nightstrike> I dunno, clearly I don't understand your question
[08:50:33] <johnny> yolo there are a fari amount of minimal printf libs out there for embedded purposes that you might want ot use
[08:51:27] <johnny> this one in mine does just push to the uart, so it won't be helpful to you, but i'm sure there's one that basically writes to a buffer
[08:52:48] <yolo> yeah I can find uart-printf but that won't work here, has to be memory only
[08:53:09] <nightstrike> isn't that sprintf?
[08:53:16] <yolo> nightstrike: snprint eventually ended up with write() syscall for memory I believe, as I chased down the call chain
[08:53:28] <kalven> nightstrike: the variable itself doesn't imply a memory model. you can select which model to use when doing operations on it.
[08:53:49] <nightstrike> kalven, so if I use operator++, I don't see a way to specify the model
[08:53:52] <johnny> cant you create a somethnig for it to write to though ? some sort of fake file descriptor?
[08:54:28] <johnny> i've never tried it before, but it seems like you should be able to just make file descriptor 0 point to something else?
[08:54:31] <nightstrike> kalven: std::atomic<std::size_t> count = 0;   if (++count == 1) ....    // That's sort of what I'm doing
[08:54:58] <johnny> so rather than avodiing write(), just make write() succeed
[08:55:06] <nightstrike> yolo: then use std::format
[08:55:20] <johnny> maybe with fmtlib?
[08:55:29] <yolo> does libstc++ has the freestanding thing? never used that
[08:55:51] <nightstrike> also, I find it surprising that sprintf calls write()
[08:56:00] <nightstrike> there's no fd for it to write to
[08:56:15] <kalven> nightstrike: those operations use seq_cst by default afaik, you have operations like .fetch_add that let you specify the model
[08:56:40] <yolo>  there is no os thus no syscall and no libc/libstdc++, it's bare metal, anyways I could not find anything and I will report to my boss that I'm going to write one
[08:56:51] <nightstrike> kalven: ok...  so maybe that's my issue, then.  ty, I'll try changing to fetch with acq / rel
[08:57:24] <nightstrike> yolo: Use __builtin_sprintf() maybe?
[08:57:53] <yolo> that's a good point, though I sometimes have -fno-builtin
[08:58:29] <nightstrike> to answer your other q, libstdc++ has a free standing mode with certain features disabled
[08:59:29] <nightstrike> yolo: "snprint eventually ended up with write() syscall for memory I believe, as I chased down the call chain" << That is what I don't understand.  why would sprintf ever call write?
[09:00:32] *** Joins: Burgundy (~NA@86.121.143.206)
[09:02:54] <yolo> snprintf->vsnprintf->vfprintf->(print_core and FILE *fp->write())
[09:03:20] <yolo> https://github.com/cloudius-systems/musl/blob/master/src/stdio/vfprintf.c I use musl to check as it's simpler than glibc
[09:03:51] <yolo> nightstrike: isn't __built_in_whatever still ending up with syscalls
[09:06:39] <nightstrike> vsnprintf doesn't call vfprintf.....
[09:07:20] <nightstrike> __builtin_sprintf doesn't make a syscall, but it does make a library call, so still probably not good for you.  Sometimes, builtins avoid library calls.  In this case, it doesn't.
[09:07:29] <yolo> https://github.com/BlankOn/musl/blob/master/src/stdio/vsnprintf.c  it does, see #37
[09:08:50] <ville> writing a printf-like may be quite challenging, at least if you intend to write a correct one
[09:09:32] <yolo> yes i'm thinking to write a limited one, that varargs are tricky
[09:10:09] <ville> heh. no. it's getting floating point printing correct
[09:10:21] <yolo> no floating point that is
[09:10:37] <yolo> http://www.sparetimelabs.com/printfrevisited/printfrevisited.php will study this one
[09:10:39] <nightstrike> musl is being dumb...  it's creating a fake file descriptor to use memcpy to copy stuff through a callback from vprintf.
[09:11:42] <ville> if there's no floating point then that's 80-90% of the difficulty gone
[09:14:03] <yolo> AI silicon these days have thousands or even close to 1 million cores on a wafer, the only way to interact and debug is via memory, a tiny stdio.h(printf,memcpy,memset, probably 10 APIs) should exist, I even check linux kernel's klibc, nothing fit.
[09:14:56] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:15:47] <yolo> they're all just matrix multiplication units basically, so called tensor computing
[09:16:51] <nightstrike> I work on that stuff too.  I usually just copy out to my host and debug there.
[09:18:58] <nightstrike> kalven: omg... holy freakin cow
[09:19:30] <nightstrike> seqcst, you suck! acqrel, you saved me
[09:19:45] <yolo> need measure performance too, so they have to be stored to local buffer and after the benchmark is done then copy to host side
[09:20:37] <nightstrike> unbelievable.....  the timing difference between seqcst and acqrel is insane
[09:29:21] *** Quits: nickel84481 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (Quit: WeeChat 3.3)
[09:30:11] <kalven> yolo: then why do text formatting on them? just have it write the data to a buffer in some easy to produce binary format
[09:32:00] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 250 seconds)
[09:35:00] <yolo> kalven: for user friendly, as some other team will like a familiar printf style, in fact I'm thinking forcing them to write a consistent format such as a k-v format
[09:35:29] <yolo> always writing say 16 chars of text followed by some integer to memory, basically a c++ map
[09:36:27] <yolo> <string,int> is all you can write to memory, that will make my life _much_ easier
[09:37:23] <yolo> memory will be circular buffer, will do this most likely. a k-v store in circular buffer pool
[09:39:00] <kalven> and instead of string, you could have an enum.
[09:40:53] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:42:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:42:16] *** Quits: rajkosto (~rajkosto@93-86-159-18.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[09:42:48] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:42:55] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:42:55] *** ChanServ sets mode: +v npaperbot
[09:43:07] <yolo> i will let them write whatever string, i just make sure its length is limited and checked
[09:43:34] <yolo> enum means i need predefine text for them, which i don't know
[09:43:42] <ville> sticking the formating on the cpu-side does not decrease user-friendliness
[09:45:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:45:56] <ville> you're using some function to read the memory back from the gpu anyways, or some sort of shared memory i guess, so insead of calling the read_bytes version you call read_formated() which calls read_bytes() and format(). hardly a change worth noting
[09:46:36] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 240 seconds)
[09:46:44] <nightstrike> that's what I meant by "I usually just copy out to my host and debug there."
[09:48:14] <yolo> i agree, it's about 'what's a better/simple way to record those debug info in local memory before they're copied to cpu host, which is, after the code finished'
[09:48:18] *** Joins: malloy (~jimery@116.30.220.175)
[09:48:58] <yolo> once it completes on the device side, I can easily copy to cpu-host and parse/format it
[09:50:08] <yolo> now i will just allocate a piece of memory pool, and supply one or a mem_write(string[16],int[4]) for developers to record
[09:50:24] <yolo> s/or a//
[09:50:26] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:50:59] <yolo> basically a simple logging-to-memory, nice, thanks for suggestions
[10:07:10] *** Joins: KombuchaKip (~kip@192.252.230.5)
[10:09:48] *** Quits: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Remote host closed the connection)
[10:13:57] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Ping timeout: 240 seconds)
[10:23:51] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[10:33:17] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:40:22] *** gentooclimax is now known as climax
[10:42:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:45:16] *** Joins: p-i-_ (~Ohmu@183.89.29.122)
[10:45:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:46:09] *** Joins: jsbach (~jsbach@2a01:c22:ad5b:3300:3988:6864:2fb1:fbc9)
[10:47:16] *** Joins: NiD27 (~nid27@49.205.150.78)
[10:47:58] *** climax is now known as gentooclimax
[10:48:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:74c7:3101:7ef7:bc18) (Ping timeout: 240 seconds)
[10:49:38] *** Joins: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:6344)
[10:50:32] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[10:50:52] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:54:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[10:55:20] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[10:58:37] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:01:27] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:dc05:c100:25e7:ad04)
[11:03:00] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[11:05:02] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[11:13:00] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[11:14:00] *** Quits: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu) (Quit: Leaving.)
[11:18:13] *** Joins: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu)
[11:28:10] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[11:33:12] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[11:43:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:46:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:46:36] *** Joins: MatSharrow (~matthew@11.20.9.51.dyn.plus.net)
[11:58:20] *** Joins: k8yun (~k8yun@user/k8yun)
[11:58:43] *** Quits: k8yun (~k8yun@user/k8yun) (Remote host closed the connection)
[12:12:48] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[12:16:10] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Remote host closed the connection)
[12:17:00] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:18:34] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:18:57] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[12:19:19] *** Joins: toastloop (~toastloop@user/toastloop)
[12:26:35] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[12:31:50] *** Joins: robod34 (Username@79.113.243.73)
[12:33:29] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:33:29] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:40:46] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[12:41:12] *** Joins: rajkosto (~rajkosto@178.220.66.235)
[12:41:42] *** Joins: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[12:42:12] *** Joins: manjaro-user (~manjaro-u@199-7-159-124.eng.wind.ca)
[12:43:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:46:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:47:17] *** Quits: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0) (Ping timeout: 240 seconds)
[12:48:31] *** Joins: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0)
[12:48:41] *** Quits: riksteri (d20812115c@2604:bf00:561:2000::1e6) (Ping timeout: 245 seconds)
[12:49:43] *** Joins: riksteri (d20812115c@2604:bf00:561:2000::1e6)
[13:02:51] *** Quits: p-i-_ (~Ohmu@183.89.29.122) (Remote host closed the connection)
[13:03:23] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:a52c:82f0:fae0:da04)
[13:07:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:07:24] *** Parts: toastloop (~toastloop@user/toastloop) (Leaving)
[13:11:47] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:50] *** Quits: manjaro-user (~manjaro-u@199-7-159-124.eng.wind.ca) (Ping timeout: 260 seconds)
[13:18:46] *** Quits: sigma_ (~sigma@164.215.201.51) (Quit: Konversation terminated!)
[13:20:56] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:9c8d:bc4a:f54f:40ea)
[13:22:13] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:9c8d:bc4a:f54f:40ea) (Remote host closed the connection)
[13:22:47] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:1daf:a0:fe39:6993)
[13:24:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:a52c:82f0:fae0:da04) (Ping timeout: 240 seconds)
[13:24:41] *** Joins: manjaro-user (~manjaro-u@199-7-159-124.eng.wind.ca)
[13:35:18] <Haohmaru> !fact
[13:35:19] <nolyc> Haohmaru: The underlying type can be explicitly specified using an enum-base.
[13:35:20] *** Quits: rajkosto (~rajkosto@178.220.66.235) (Read error: Connection reset by peer)
[13:36:51] <LordKalma> the factoid should include the link to the paragraph
[13:37:02] <LordKalma> so we can understand the context on the ones that aren't self standing
[13:37:37] <Haohmaru> it's about enum : carpet_t
[13:39:18] <TinoDidriksen> !aka show fact
[13:39:18] <nolyc> TinoDidriksen: Web title <concat http://eel.is/c++/14882/ <concat <math calc (<at> * 19) % 1000 > .html>>
[13:39:46] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:40:27] <Haohmaru> {} enum carpet : uint8_t { fuzzy = 1 }; enum shoes : carpet { dirty = 0 };
[13:40:28] <geordi> error: underlying type 'carpet' of 'shoes' must be an integral type
[13:40:48] *** Joins: paul424 (~tom@ip-5-172-238-6.multi.internet.cyfrowypolsat.pl)
[13:40:53] <Haohmaru> see, absolutely no shoes on the carpet
[13:42:48] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:42:58] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:42:58] *** ChanServ sets mode: +v npaperbot
[13:44:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:47:26] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[13:53:37] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:54:13] *** Joins: Burgundy (~NA@86.121.143.206)
[14:25:08] *** Quits: Cienisty (Cienisty@user/cienisty) (Quit: Error 606 | Demon not found)
[14:30:11] *** Joins: Cienisty (Cienisty@user/cienisty)
[14:30:16] *** Quits: NiD27 (~nid27@49.205.150.78) (Remote host closed the connection)
[14:32:47] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:38:37] *** Joins: AmR (~AmREiSa@156.199.67.136)
[14:42:28] <PJBoy> oh hey, they merged views::join_with
[14:43:10] <Haohmaru> vas ist das?
[14:44:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:46:10] *** Joins: cursey (~cursey@user/cursey)
[14:46:41] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[14:48:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:51:52] <PJBoy> it joins a view of sequences together
[14:51:59] <PJBoy> with a delimiter
[14:52:17] <Haohmaru> is that for strings?
[14:52:32] <PJBoy> strings or vectors etc
[14:52:42] <PJBoy> views in general
[14:53:07] <PJBoy> string/string_View would get the most use though
[14:53:15] *** Joins: proller (~p@2a02:6b8:0:40c:e354:206b:1d2f:beea)
[14:53:18] <Haohmaru> huh, kewl, but i've made some helper RAII objects for adding the pesky commas or other delimiters between things
[14:57:30] *** Joins: jokoon (~eio@2a01:e0a:542:e160:b516:4eef:796d:4942)
[15:01:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[15:02:09] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[15:04:15] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Read error: Connection reset by peer)
[15:11:43] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[15:24:22] *** Joins: markong (~kvirc@213.146.188.203)
[15:28:52] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:32:25] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[15:33:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:7799:fd4a:71a0:8bdb:db3d)
[15:35:00] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[15:35:15] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[15:36:06] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:1daf:a0:fe39:6993) (Ping timeout: 260 seconds)
[15:36:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:51cf:76e6:128:2246)
[15:36:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:51cf:76e6:128:2246) (Changing host)
[15:36:18] *** Joins: skapata (~Skapata@user/skapata)
[15:40:04] *** Quits: jsbach (~jsbach@2a01:c22:ad5b:3300:3988:6864:2fb1:fbc9) (Remote host closed the connection)
[15:42:24] *** Joins: jsbach (~jsbach@2a01:c22:ad5b:3300:4d02:2c71:33f7:3a7b)
[15:43:47] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:45:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:46:24] *** Joins: txtsd (~txtsd@user/txtsd)
[15:47:48] <PJBoy> wow conan center hates me now
[15:48:07] <PJBoy> > ERROR: HTTPSConnectionPool(host='center.conan.io', port=443): Max retries exceeded with url: /v1/ping (Caused by ResponseError('too many 502 error responses')). [Remote: conancenter]
[15:48:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:48:37] <PJBoy> that ain't great
[15:50:37] <Haohmaru> h4x0r
[15:55:09] *** Quits: paul424 (~tom@ip-5-172-238-6.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:55:15] <LordKalma> bold statement https://twitter.com/lawilog/status/1495089031436292097
[15:55:47] <LordKalma> PJBoy, same complain in the slack, it seems
[15:56:19] <LordKalma> everybody that wants to be conscious about chain-of-supply attacks/problems should have their own artifactory
[15:56:42] <PJBoy> feels bad
[15:57:13] <PJBoy> how am I supposed to make conan look all cool and shiny when it goes down >:(
[15:58:48] <Haohmaru> put an "autoconf" facemask on it
[15:59:45] <PJBoy> don't think lawilog knows C++
[15:59:56] <PJBoy> not sure he knows code whatsoever
[16:00:15] <Haohmaru> he probably another C fanboi
[16:00:23] <very_sneaky> PJBoy: looks like conan center is down, a few people posting the same thing on slack
[16:00:27] <very_sneaky> i can replicate too
[16:00:38] <PJBoy> yeah, search don't work either
[16:00:57] <very_sneaky> i've been loving life since setting up a remote repo in my private artifactory
[16:01:02] <LordKalma> I just told a guy with irracional rage to shut the fuck up, the service is free :)
[16:01:06] <very_sneaky> can still access all my old packages without issues
[16:01:59] <LordKalma> PJBoy, indeed, things tend to not work when we want to showcase them haha
[16:02:53] <PJBoy> oh well, can sleep on this task until tomorrow
[16:03:34] <LordKalma> but the optics for a devops company to have server outages isnt good
[16:03:38] <LordKalma> ill give you that
[16:03:48] <LordKalma> sorry for no apostrophes, weird keyboard atm
[16:04:29] * Haohmaru gives LordKalma a bag of '''''''''''
[16:04:49] <Haohmaru> these should be enough for today
[16:05:01] <LordKalma> so generous
[16:05:06] <PJBoy> haha
[16:05:07] <Haohmaru> always
[16:06:56] <PJBoy> << R""""""("""""")""""""
[16:06:57] <geordi> """"""
[16:06:57] *** Quits: manjaro-user (~manjaro-u@199-7-159-124.eng.wind.ca) (Ping timeout: 250 seconds)
[16:07:40] <very_sneaky> having said that, it looks like i can't even install from my own artifactory rn - it's trying to resolve conan.io prior to resolving my remote cache
[16:08:28] <PJBoy> yeah, think you'll have to `conan remote disable conancenter`
[16:08:41] <very_sneaky> oh wait, my _artifactory is down_ wat
[16:08:49] <PJBoy> :p
[16:08:52] <PJBoy> * :o
[16:08:53] <amosbird> Hello! Is it possible to forward a declaration from namespace Foo to namespace Bar, which makes Bar::func() identical to Foo::func()
[16:09:07] <PJBoy> no
[16:09:25] <LordKalma> PJBoy, not even with using?
[16:09:39] <PJBoy> using is for types
[16:09:55] <PJBoy> you could make a function pointer/reference
[16:10:06] <PJBoy> but you'd get screwed by overloads
[16:10:11] <LordKalma> hum, inside classes you can using some parent method, can you?
[16:10:27] <PJBoy> you can expose the base class function yeah
[16:10:41] <PJBoy> that just prevents the hiding a derived class does
[16:10:48] <LordKalma> JIRA is such a buggy mess. when I go to see qt bugs, it always shows me QTWEBSITE bugs instead of QTBUGs which is the project Im on
[16:11:34] <very_sneaky> i hate atlassian. there are so many simple QoL features that have tickets that are 8+ years old
[16:11:35] <amosbird> PJBoy: does it work for template types?
[16:11:47] <very_sneaky> like, how hard is it to implement extended markdown in all of your text input boxes
[16:12:00] <PJBoy> does what work?
[16:12:21] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:12:42] <PJBoy> adding markdown's potentially hard because of existing comments that would get interpreted differently in markdown
[16:12:47] <LordKalma> very_sneaky, I hate that I can write markdown in bug reports, URGH
[16:12:51] <LordKalma> its a bs syntax
[16:12:57] <PJBoy> you dislike markdown?!
[16:13:01] <PJBoy> it's alright
[16:13:18] <LordKalma> no
[16:13:27] <LordKalma> I hate that I cant, sorry
[16:13:39] <LordKalma> in JIRA you have to use some custom BS syntax
[16:13:41] <PJBoy> ahh
[16:13:50] <PJBoy> yeah I hate the JIRA syntax
[16:14:01] <PJBoy> the {{text}} teletype only works half the time
[16:14:05] <PJBoy> I don't get it
[16:14:12] <very_sneaky> {{preformatted text}}, [hyperlink text|https://hyperlink.com] - rip
[16:14:12] <geordi> error: Unexpected end of request. Expected ']' or balanced code.
[16:14:43] <PJBoy> why does geordi expect ]
[16:14:51] <very_sneaky> they moved to markdown in bitbucket which is great, but it's not _extended_ markdown, so it doesn't support things like check boxes
[16:15:06] <PJBoy> oh the link bit, nvm
[16:15:15] <PJBoy> dang checkboxes?
[16:15:20] <very_sneaky> in the version of bitbucket we run, it doesn't even wrap text in pull request diffs lol
[16:15:25] <PJBoy> that's beyond my markdown knowledge
[16:15:45] <very_sneaky> `- [ ]` for unticked, `- [x]` for ticked
[16:16:04] <PJBoy> neat
[16:16:11] <very_sneaky> it's handy for having checklists when submitting pull requests
[16:16:29] <very_sneaky> example: https://github.com/conan-io/conan-center-index/pull/9451
[16:17:49] <PJBoy> doesn't work in discord v_v
[16:19:35] <LordKalma> discord has syntax highlighting which I like, slackm a fucking corporate product for developers, doesnt
[16:19:43] <LordKalma> unless you use the snippet stuff
[16:20:17] <LordKalma> like  ```js ``` gives you actual syntax highlight in discord
[16:20:24] <PJBoy> yeah it's great
[16:20:47] <PJBoy> you can upload text files and choose the language highlighted there too
[16:20:54] <very_sneaky> slack used to. so did teams
[16:20:55] <PJBoy> and it'll show a snippet of the file that you can expand
[16:20:55] <LordKalma> slack does do that
[16:21:05] <LordKalma> yes, slack does that bit
[16:21:09] <very_sneaky> now they don't allow normal markdown syntax, except as shortcuts (sometimes)
[16:21:12] <LordKalma> but not on markdown
[16:21:49] <PJBoy> I wish they had some formatting for giving text specific colours
[16:22:00] <LordKalma> well, you can use html
[16:22:20] <PJBoy> also they don't have a syntax highlighter for my 65816 assembly :(
[16:23:24] <LordKalma> assembler? just write a llvm backend :p
[16:25:33] <LordKalma> speaking of
[16:25:34] <LordKalma> https://github.com/llvm/llvm-project/commit/b9b6938183e837e66ff7450fb2b8a73dce5889c0
[16:25:41] <LordKalma> nice to see its being cared for :D
[16:25:55] <LordKalma> also
[16:25:55] <LordKalma> https://github.com/llvm/llvm-project/commit/ab28488efe6de6f8fa856a1dfd8c0320d41d7608
[16:27:18] <LordKalma> lots of RISC-V commits
[16:28:21] <very_sneaky> is conan center still down?
[16:28:29] <very_sneaky> i got my artifactory up and it seems ot be working fine for me
[16:29:51] <very_sneaky> looks like it's back up
[16:30:37] <noent> fundamental question: Is it possible that a core dump shows 2 different conflicting states due to race conditions? Like showing an empty map, but on the other hand stepping into a for loop iterating that map?
[16:40:50] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[16:40:52] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:45:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:48:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:55:31] *** Quits: jbalint (~jbalint@071-090-119-177.res.spectrum.com) (Read error: Connection reset by peer)
[16:55:37] <PJBoy> yeah you can start iterating a map and have that map erased in the meantime
[16:55:59] *** Quits: artok (~azo@mobile-access-b0486a-201.dhcp.inet.fi) (Quit: reboot for update)
[16:57:10] *** Joins: jbalint (~jbalint@071-090-119-177.res.spectrum.com)
[16:58:17] *** Quits: MatSharrow (~matthew@11.20.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[17:00:14] *** Joins: MatSharrow (~matthew@11.20.9.51.dyn.plus.net)
[17:06:53] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[17:08:03] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[17:08:37] *** Quits: MatSharrow (~matthew@11.20.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[17:10:57] *** Joins: artok (~azo@mobile-access-b0486a-201.dhcp.inet.fi)
[17:12:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[17:16:07] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:16:48] <noent> PJBoy: I know that this can happen, but what about gdb? Will the core dump reflect that or will it show that there was something when the program flow entered the loop?
[17:17:11] <PJBoy> the core dump will reflect it
[17:17:59] <noent> meh.
[17:18:05] <noent> thanks :)
[17:27:43] *** Joins: angelacrust (~angelacru@182.68.142.100)
[17:33:48] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[17:35:28] *** Quits: hackkitten (~hackkitte@94.31.104.136) (Read error: Connection reset by peer)
[17:35:51] *** Joins: hackkitten (~hackkitte@94.31.104.136)
[17:40:23] <rpav> it's a bit silly how many statements it takes for "move slice of v0 to v1"
[17:41:42] <PJBoy> std::move(it_begin_v0, it_end_v0, it_begin_v1)?
[17:42:49] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:42:58] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:42:58] *** ChanServ sets mode: +v npaperbot
[17:43:17] <PJBoy> I guess you'd probably want to erase those elements afterwards
[17:43:36] <PJBoy> and probably want to insert them on the v1
[17:45:34] <PJBoy> v1.insert(it_begin_v1, make_move_iterator(it_begin_v0), make_move_iterator(it_end_v0)); v0.erase(it_begin_v0, it_end_v0);
[17:46:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:47:12] <rpav> wait move has an overload for that?
[17:47:42] <rpav> ah nice, better
[17:47:47] <rpav> but yeah still requires the erase
[17:48:31] <rpav> probably an indication of how much it's used that i haven't had to do that, but, nicer tools would be nicer
[17:50:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[17:53:26] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[18:00:39] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[18:00:39] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Client Quit)
[18:01:26] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[18:05:17] *** Quits: jokoon (~eio@2a01:e0a:542:e160:b516:4eef:796d:4942) (Quit: Leaving)
[18:07:56] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[18:08:45] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[18:11:44] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[18:13:56] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:15:16] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[18:20:47] *** Joins: pulse (~pulse@user/pulse)
[18:23:00] *** Quits: proller (~p@2a02:6b8:0:40c:e354:206b:1d2f:beea) (Ping timeout: 240 seconds)
[18:33:08] <rpav> argh, another accidental pointer to vector element heh
[18:34:01] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:36:15] *** Joins: proller (~p@2a02:6b8:0:40c:6697:86eb:bf8a:e77e)
[18:38:45] <rpav> "caveat vector"
[18:39:06] *** Joins: jokoon (~eio@2a01:e0a:542:e160:b516:4eef:796d:4942)
[18:46:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:47:39] *** Quits: angelacrust (~angelacru@182.68.142.100) (Quit: Client closed)
[18:49:25] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:49:59] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:54:49] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Write error: Broken pipe)
[18:55:08] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[19:10:04] *** Quits: arch-angel (~quassel@user/arch-angel) (Ping timeout: 250 seconds)
[19:19:21] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:26:46] *** Joins: xkuru (~xkuru@user/xkuru)
[19:28:27] *** Joins: Tokamak (~Tokamak@172.58.188.134)
[19:34:52] *** Quits: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) (Quit: Leaving.)
[19:35:52] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:37:54] <LordKalma> https://lists.qt-project.org/pipermail/interest/2022-February/037986.html
[19:37:56] <LordKalma> ouch, harsh
[19:40:07] <rpav> electron 🤔
[19:40:19] <LordKalma> "desktop integration" -> electron?
[19:40:24] <rpav> it's dumb, but consider the relative size of chromium vs qt
[19:40:28] <rpav> yeah ;/
[19:41:13] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:41:15] <LordKalma> qt is a big framework, but the deployment size if faaaarrr smaller
[19:41:27] <LordKalma> any electron app is a 100mb download
[19:41:50] *** Quits: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0) (Remote host closed the connection)
[19:41:51] *** Quits: riksteri (d20812115c@2604:bf00:561:2000::1e6) (Remote host closed the connection)
[19:42:02] <Haohmaru> what is this? someone asking for cue-tea alternatives on a cue-tea mailing list?
[19:42:03] <rpav> qwidgets is definitely smaller
[19:42:11] <rpav> i don't apparently even have qml stuff on here to compare
[19:42:17] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[19:42:22] <LordKalma> qwidgets is a 5mb dll
[19:42:27] <Haohmaru> "Welcome to Ford Motors." "yeah, well, i want something that isn't a Ford"
[19:42:32] *** Joins: riksteri (d20812115c@2604:bf00:561:2000::1e6)
[19:42:38] *** Joins: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0)
[19:42:41] <rpav> on this system Qt5 base libs are 30MB
[19:42:50] <rpav> just the .so's
[19:44:45] <rpav> (also technically speaking you could do something like neutralinojs which is like 1MB and uses whatever "native" renderer is available)
[19:44:57] <rpav> i think it's terrible desktop UI has come to this, but what can you do
[19:45:44] <LordKalma> https://i.gyazo.com/dae5bc784b8c1d2b761fb7fb515c5494.png
[19:45:45] <rpav> even if you're like, "ok let's not use C++ for desktop UI," i'm not sure what else is as portable as Qt, besides "teh browser"
[19:45:57] <LordKalma> yeah, Qt core+gui+widgets is around 15mbish
[19:46:49] <rpav> linux stuff is probably adding a few more .. i see some EGL and XCB stuff
[19:47:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:49:24] *** Joins: Miyu (~hackkitte@94.31.104.136)
[19:49:48] *** Quits: hackkitten (~hackkitte@94.31.104.136) (Ping timeout: 240 seconds)
[19:49:52] *** Miyu is now known as hackkitten
[19:51:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[19:52:16] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:53:39] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[20:00:31] *** Joins: magla (~gelignite@d5361f17.access.ecotel.net)
[20:04:02] *** Quits: jokoon (~eio@2a01:e0a:542:e160:b516:4eef:796d:4942) (Ping timeout: 240 seconds)
[20:06:32] *** Joins: markong (~kvirc@213.146.188.203)
[20:11:09] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[20:13:21] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[20:13:32] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[20:15:15] *** Joins: MatSharrow (~matthew@56.93.9.51.dyn.plus.net)
[20:20:24] <Haohmaru> "Oculto" o_O
[20:21:10] <LordKalma_> who's Oculto?
[20:21:14] *** LordKalma_ is now known as LordKalma
[20:21:27] <Haohmaru> your dlls could be
[20:21:48] <LordKalma> Oculto means hidden
[20:22:17] *** Joins: Crash (~dmon@177.21.52.60)
[20:22:37] <Haohmaru> mmm, like viruses
[20:22:44] <LordKalma> yes
[20:22:50] <LordKalma> but the checkbox isn't checked
[20:23:11] <Haohmaru> C:\windows\system32\innocent.dll
[20:27:07] *** Quits: Crash (~dmon@177.21.52.60) (Quit: Leaving)
[20:27:14] <pulse> nice, i like dlls
[20:27:22] <pulse> much better than "so"s, like wtf is a so
[20:27:33] <LordKalma> shared object?
[20:27:42] <pulse> sounds unappealing
[20:28:11] <Friithian> nah, it's a significant other
[20:28:11] *** Quits: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0) (Remote host closed the connection)
[20:28:11] <Haohmaru> or maybe it means Sexy Object
[20:28:13] <LordKalma> sounds like what you found out your ex liked to be when you weren't looking
[20:28:16] <Haohmaru> how about now?
[20:28:17] *** Quits: riksteri (d20812115c@2604:bf00:561:2000::1e6) (Remote host closed the connection)
[20:28:24] <LordKalma> okay, strong joke this one
[20:34:15] *** Joins: riksteri (d20812115c@2604:bf00:561:2000::1e6)
[20:34:37] *** Joins: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0)
[20:35:29] *** Joins: phoenix (phoenix@user/phoenix)
[20:44:37] <nightstrike> concurrency is kicking my rear end again
[20:45:54] <LordKalma> first rule about concurrency: always consider if you need it
[20:45:59] <LordKalma> if you think you do, think again
[20:46:05] <LordKalma> or, to put it in concurrency terms
[20:46:17] *** Quits: MetaNova (zero-one@znc/supporter/metanova) (Ping timeout: 240 seconds)
[20:46:33] <LordKalma> think if, you again thing
[20:47:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:48:20] * Haohmaru attaches gdb to LordKalma
[20:48:55] <Haohmaru> ** SIGSEGV **
[20:49:12] <nightstrike> https://www.irccloud.com/pastebin/J55IE8BD/
[20:49:49] <nightstrike> The commented lines use seqcst, the uncommented lines use acqrel.  The former works, the latter results in 2 threads getting stuck in wait()
[20:50:00] <nightstrike> (after calling sync)
[20:50:48] <nightstrike> clearly, acquire/release isn't working the way I expected
[20:51:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:53:39] *** Joins: MetaNova (~zero-one@znc/supporter/metanova)
[20:53:57] <pulse> multithreading is easy, just bloc you  kthreads frating on same reso om operurces
[20:54:11] <rpav> !grab pulse
[20:54:11] <nolyc> rpav: The operation succeeded.
[20:54:18] <nightstrike> that musta been tough to type out :)
[20:56:10] <nightstrike> anyway, am I using acq/rel correctly?  acqrel for the fetch_add, acquire for the load?
[20:56:14] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:02:30] <nightstrike> oh
[21:02:31] <nightstrike> oops
[21:02:47] <nightstrike> /while (count != n) ;    is not the same as     while (count.load(std::memory_order_acquire)) {
[21:03:12] <LordKalma> missing a != n ?
[21:03:31] <nightstrike> yeah, so that's one bug.  But I still maintain that I shouldn't be able to have a core file where both threads called terminate, and I do
[21:05:59] <nightstrike> if both threads call sync(), then one thread should call reset() and the other should call wait().  But in my core file, both are in the sync() > wait() > terminate() path
[21:07:06] <Alipha> amosbird: you're best off making a Bar::func with an identical declaration to Foo::func which simply calls Foo::func
[21:07:06] <ville> presumably you've tried all the usual sanitizer builds to give clues?
[21:07:34] <nightstrike> yeah, the thread sanitizer doesn't work too well when I'm dealing with microsecond timing issues
[21:07:48] <nightstrike> that's why I decided to just core it and see where it's at
[21:10:28] <ville> and a mutex-based implementation works?
[21:10:40] <nightstrike> nope
[21:10:42] <nightstrike> too slow
[21:10:48] <nightstrike> and requires syscalls
[21:11:06] <ville> at this points those don't count for the definition of works
[21:12:25] <cbreak> nightstrike: while (count != n); can be optimized away to do nothing
[21:12:41] <ville> the "required syscall" is aslo not as straight cut. a futex-based implementation under light contention wouldn't hit the kernel. that's the fu part
[21:12:45] <nightstrike> cbreak: but count is atomic
[21:12:50] <cbreak> it's obviously dead code, if n and count are side-effect free
[21:13:08] <cbreak> hmm...
[21:13:26] <cbreak> default memory order is sequential consistent
[21:13:44] <nightstrike> right, which is why count != n works...  I switched to acq/rel, and it failed
[21:14:00] <PJBoy> "performs an atomic operation" is one of the listed forms of progress
[21:14:28] <nightstrike> ville: I can try looking at that again, but I did extensive testing a few years ago, and mutexes were unusable.  I wrote a paper on it :)
[21:14:36] <Alipha> nightstrike: ville's point is that a mutex-based solution is simpler, and so, you should make sure that a mutex-based solution works to be certain that any problems you're seeing are in fact related to the std::atomic instead of an unrelated bug
[21:15:12] <Alipha> but if `count != n` works, then perhaps that step is unnecessary
[21:15:13] <nightstrike> Alipha: fair enough, but a mutex solution fails in my test environment.  The seq/cst solution works, so I figured that was a happy medium.
[21:15:42] <cbreak> why is check not a function local variable?
[21:16:09] <Latexi95> nightstrike: fetch_sub returns previous value. So when notify returns true, count == -1
[21:16:23] <nightstrike> I suppose it could be, I just threw that in a the last minute to see where things were.
[21:16:36] <nightstrike> Latexi95: eh..............  maybe you're onto something there
[21:16:51] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[21:16:56] <nightstrike> so fetch_sup is x-- not --x?
[21:17:19] <cbreak> nightstrike: n is potentially uninitialized
[21:17:35] <nightstrike> n is set in the main thread before spawning the two worker threads
[21:18:02] <Latexi95> yes. fetch_sub is x--
[21:19:07] <Latexi95> its "fetch" and then "sub" :)
[21:19:18] <nightstrike> so....   count.fetch_sub(1) - 1  ?
[21:19:42] <ville> nightstrike: well not sure what you mean exactly when you say "mutex". std::mutex is not a specific implementation. i would expect different performance from different implementations i.e. different operating systems. i was referring to linux-based ones where std::mutex should be backed by a futex
[21:19:47] <Alipha> or: count.fetch_sub(1) == 1?
[21:20:09] <nightstrike> Alipha: that works
[21:20:37] <nightstrike> ville: std::mutex under gcc 8, I think
[21:21:47] <nightstrike> ok, no more multiple threads stuck in wait().  Thanks all!
[21:22:36] <nightstrike> good fine, Latexi95
[21:22:49] <Latexi95> You should add PAUSE instruction in the spin lock loop. It has a significant performance boost on CPUs with hyper-threading
[21:23:10] <nightstrike> hyperthreading is disabled in my system, but why does that make it faster?
[21:23:27] <nightstrike> I guess it makes the twin thread faster, not my spinning thread?
[21:23:49] <Latexi95> correct
[21:24:15] <nightstrike> FWIW, I'm building a hard realtime system that's reading from a digitizer at 1 MHz
[21:24:22] <nightstrike> well, multiple digitizers
[21:24:36] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[21:25:07] <nightstrike> not that anyone cares about that, but I thought I'd give some context :)
[21:27:59] <kalven> fwiw, atomic got a wait function in c++20
[21:28:19] <nightstrike> oh, that's a nice feature.
[21:28:34] <nightstrike> hey, lookee here!  https://en.cppreference.com/w/cpp/atomic/atomic/wait
[21:29:46] *** Joins: jokoon (~eio@2a01:e0a:542:e160:b516:4eef:796d:4942)
[21:30:32] *** Quits: proller (~p@2a02:6b8:0:40c:6697:86eb:bf8a:e77e) (Ping timeout: 240 seconds)
[21:31:33] *** Quits: jokoon (~eio@2a01:e0a:542:e160:b516:4eef:796d:4942) (Client Quit)
[21:31:42] <nightstrike> "If those are equal, then blocks until..."  I wonder how it's blocking
[21:31:46] <Friithian> style question: do you guys do Type& name or Type & name or what
[21:32:20] <nightstrike> I do Type & name, but I do things nobody likes
[21:33:07] <Friithian> … I just when to cppreference to look at a member function while my LSP was showing me the info I needed. I am smart.
[21:33:32] <Friithian> sshensents
[21:34:34] <PJBoy> Type& name
[21:35:35] <PJBoy> as recommended by Stroustrup
[21:37:49] <nightstrike> Huzzah! My software works again!!
[21:37:50] <cbreak> spaaaace
[21:37:51] <Friithian> how about Type^I&^Iname ?
[21:38:29] <Friithian> I think I'll be using Type& name
[21:39:01] <cbreak> Type& name is slightly misleading
[21:39:10] <great_taste> here we go...
[21:39:16] <Friithian> oh no did I start something
[21:39:23] <nightstrike> I prefer blue sheds, but I don't store bikes in them
[21:39:24] <Friithian> quick quick tabs or spaces *runs*
[21:39:25] <great_taste> :)
[21:42:45] *** Quits: Tokamak (~Tokamak@172.58.188.134) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:42:49] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:42:57] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:42:57] *** ChanServ sets mode: +v npaperbot
[21:48:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:51:49] *** Parts: wielding (~wielding@user/wielding) ()
[21:52:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[21:59:57] *** Joins: paul424 (~tom@ip-5-172-235-10.multi.internet.cyfrowypolsat.pl)
[22:07:25] *** Joins: CaCode (~CaCode@user/cacode)
[22:08:06] <Friithian> should I worry at all about putting unicode in strings that are just being printed to cout?
[22:08:19] *** Quits: john99 (~johnny@138.62.221.87.dynamic.jazztel.es) (Remote host closed the connection)
[22:09:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:12:18] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[22:15:01] <cbreak> Friithian: are you on windows?
[22:15:08] <Friithian> heck no
[22:15:09] <cbreak> are you using utf-8?
[22:15:13] <Friithian> I have no idea
[22:15:19] <cbreak> is your system using an utf8 locale?
[22:15:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:15:50] <Friithian> I think so
[22:15:54] <Friithian> I could be wrong
[22:17:26] *** Joins: jokoon (~eio@2a01:e0a:542:e160:b516:4eef:796d:4942)
[22:17:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:18:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:18:08] *** Joins: evilpyro (~evilpyro@user/evilpyro)
[22:18:14] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:7c47:953e:6e68:fa4d) (Quit: Quit)
[22:19:47] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:22:28] *** Quits: jokoon (~eio@2a01:e0a:542:e160:b516:4eef:796d:4942) (Quit: Leaving)
[22:23:31] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:e00b:cb48:98a7:f7f9)
[22:24:02] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[22:24:03] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[22:24:56] *** Quits: talisein (~talisein@user/talisein) (Quit: WeeChat 3.5-dev)
[22:25:00] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:dc05:c100:25e7:ad04) (Ping timeout: 240 seconds)
[22:26:13] *** Joins: proller (~p@80.240.216.69)
[22:27:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[22:28:57] *** Joins: talisein (~talisein@user/talisein)
[22:31:19] <Alipha> << "🙂"
[22:31:20] <geordi> 🙂
[22:31:30] <Alipha> Seems to work fine?
[22:32:36] <Friithian> so I shouldn't worry about throwing in unicode?
[22:35:05] <Alipha> if you're just doing a passthrough of unicode from one data source to a std::ostream, i think you'll get reasonable results. it's when you need to analyze or manipulate the string that things get complicated
[22:35:45] <rpav> and if you try writing extended identifiers, you can for a limited subset
[22:36:10] <Friithian> ok cool, yeah it's mainly just ostream << "unicode…"; sorta stuff
[22:40:35] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 252 seconds)
[22:40:57] *** Joins: proller (~p@2a02:6b8:b081:b40d::1:18)
[22:47:25] *** Quits: Shell (~shell@user/shell) (Quit: ZNC 1.8.2 - https://znc.in)
[22:48:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:49:54] *** Joins: Shell (~shell@user/shell)
[22:52:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[22:55:18] <cbreak> Friithian: try to use utf8 if you can
[22:55:38] <Friithian> can I use utf-32 and really confuse everyone?
[22:58:49] *** Tobbi__ is now known as Tobbi
[23:00:07] <rpav> { u32string yes; }
[23:00:07] <geordi>  
[23:00:39] <rpav> but really there's mostly nothing but disadvantage to >utf8
[23:01:12] <Friithian> well that's the point
[23:01:33] <Friithian> utf-32 is unneedly… well, long
[23:03:00] <Alipha> if we're talking about std::cout specifically, your OS's terminal is *probably* configured to handle utf-8. so utf-32 would be a bad idea. though there's also std::wcout, which is another can of worms
[23:03:17] <rpav> wormcan out
[23:03:37] <Friithian> wcout? huh, never heard of that
[23:05:21] <Alipha> Friithian: for dealing with wchar_t... but using wchar_t is probably a bad idea :-)
[23:05:34] <Friithian> bad idea? sounds fun :P
[23:05:45] <rpav> despite the insistence of like, qt and .. win32?
[23:06:08] <Alipha> yeah, windows uses wchar_t...
[23:06:08] <rpav> anything both qt and win32 does you know must be top technical choice
[23:06:27] <rpav> also possibly java, but i really don't know
[23:06:38] <rpav> ah yeah ucs-2 by default
[23:08:51] *** Quits: magla (~gelignite@d5361f17.access.ecotel.net) (Quit: Stay safe!)
[23:08:52] *** Joins: Tokamak (~Tokamak@172.58.188.134)
[23:27:07] <RandomReader> Friithian - whether they come out as intended depends on the system
[23:28:36] <RandomReader> as far as the language goes, the character encoding used by cout is up to the implementation, no universal standard .. in practice, like Alipha mentioned, most systems treat it as a byte stream until they reach some kind of "terminal" concept which can be adjusted by the user
[23:29:45] <RandomReader> usually if there's a mismatch, it just looks like unreadable junk
[23:30:12] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 240 seconds)
[23:33:04] *** Joins: Terminus (~null@user/terminus)
[23:39:00] *** Joins: magla (~gelignite@d5361f17.access.ecotel.net)
[23:41:28] *** Quits: jbalint (~jbalint@071-090-119-177.res.spectrum.com) (Read error: Connection reset by peer)
[23:43:09] *** Joins: jbalint (~jbalint@071-090-119-177.res.spectrum.com)
[23:43:25] *** Quits: evilpyro (~evilpyro@user/evilpyro) (Quit: Leaving)
[23:44:38] <Friithian> so if it comes out wrong I can blame the user :P
[23:49:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:49:48] *** Joins: CaCode_ (~CaCode@user/cacode)
[23:51:08] *** Joins: Deneb (~johnch@245.82.159.143.dyn.plus.net)
[23:52:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:53:04] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 272 seconds)
[23:54:18] *** Quits: Shell (~shell@user/shell) (Quit: ZNC 1.8.2 - https://znc.in)
[23:56:11] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[23:57:18] *** Joins: Shell (~shell@user/shell)
[23:57:45] <rpav> 1) the user is always wrong 2) everyone is a user to something
