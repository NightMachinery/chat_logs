[00:00:06] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:00:30] <whatsupdoc> How does python resolve which method to call from its parent class if there is multiple inheritance?
[00:00:37] <energizer> whatsupdoc: "if you're doing x you're doing it wrong" might be true for lots of xs including multiple inheritance, inheritance, classes, python, OOP, programming... but dogma doesnt get us very far
[00:00:43] <ChrisWarrick> henistein: numpy can’t do that
[00:00:58] <energizer> whatsupdoc: see article
[00:01:00] <whatsupdoc> energizer: i'm somewhat trolling lol
[00:01:03] <henistein> oh sad
[00:01:06] <energizer> whatsupdoc: i know
[00:01:28] <whatsupdoc> I've never written mutliple inheritance before tho
[00:01:30] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:01:43] <whatsupdoc> But I'm a newb who's not in software
[00:01:55] <energizer> whatsupdoc: what are you in?
[00:01:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:02:27] <sco1> henistein: You can just transform the indices yourself, you know the shape of the array.
[00:02:58] <whatsupdoc> energizer: nothing i guess, research?
[00:03:14] <whatsupdoc> energizer: i'm applying to medical school lol
[00:03:33] <energizer> whatsupdoc: complicated inheritance structures are mainly in older frameworks like django and twisted. mixins are a pretty neat idea i think
[00:03:42] <energizer> whatsupdoc: cool
[00:03:46] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[00:03:54] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[00:04:28] <whatsupdoc> whatsupdoc, M.D. (hopefully)
[00:04:44] <energizer> nick checks out
[00:06:10] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:06:14] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[00:06:21] <jinsun> aphysically: yeah if it is not self.name but some constant strng that you know is something differnt then you can use it
[00:06:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[00:06:49] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[00:08:38] <Pi-sistance> why dont the backslashes escape the first quotemarks? print(\""cakes are meh\"")
[00:08:54] <KirkMcDonald> Pi-sistance: print("\"cakes are meh\"")
[00:08:59] <Pi-sistance> im trying to print with quote marks
[00:09:30] *** Joins: Telvana (~capo@user/telvana)
[00:10:12] <Pi-sistance> ok that makes sense, thanks
[00:11:11] *** Quits: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42) (Ping timeout: 264 seconds)
[00:12:54] *** Joins: FireFish5000 (~FireFish5@user/firefish5000)
[00:13:11] <aphysically> jinsun: because the property there doesn't store anything and it's specific to the class, I think I will propose a descriptor without setname and with typing that clearly signals it's specific to the class it is to be used with
[00:13:21] <aphysically> I'll show it to you in new PR whenever I get to it
[00:13:57] <aphysically> this also lets cleanly inlining the method
[00:14:36] <aphysically> and I don't need to use getattr/setattr at all
[00:16:04] *** Joins: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42)
[00:17:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 258 seconds)
[00:17:50] *** Quits: jgrout (~jgrout@pool-71-174-224-95.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[00:19:01] <whatsupdoc> can someone tldr https://rhettinger.wordpress.com/2011/05/26/super-considered-super/ ?
[00:19:15] <whatsupdoc> (multiple inheritance calling order)
[00:19:41] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[00:19:45] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:19:50] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:20:14] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[00:20:37] *** Joins: Telvana (~capo@user/telvana)
[00:21:15] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:21:33] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[00:21:58] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[00:22:11] <spaceone> what is the difference between {:s} and {!s} in python format strings?
[00:23:57] <spaceone> :s calls __format__() while !s calls str() ?
[00:25:00] *** Quits: FireFish5000 (~FireFish5@user/firefish5000) (Ping timeout: 258 seconds)
[00:25:10] <nedbat> spaceone: yes, try it with a datetime to see a stark difference
[00:26:00] <nedbat> spaceone: f"{now:s}" --> 's';  f"{now!s}" --> '2021-10-18 16:55:31.839528'
[00:26:37] <spaceone> okay^^
[00:27:43] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[00:28:24] *** Joins: djapo (~archangel@user/djapo)
[00:28:35] <sco1> Also in https://docs.python.org/3/library/string.html#format-string-syntax "The conversion field causes a type coercion before formatting. Normally, the job of formatting a value is done by the __format__() method of the value itself. However, in some cases it is desirable to force a type to be formatted as a string, overriding its own definition of formatting. By converting the value to a string before calling __format__(), the normal formatting logic is
[00:28:37] <sco1> bypassed."
[00:28:46] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[00:28:49] <nedbat> spaceone: the odd thing is that "{now}" implies calling str() anyway
[00:28:59] <spaceone> i can't explain that datetime thing to me: https://bpa.st/YOUA
[00:29:17] *** Joins: NoelFlantier (~Hubert@gifi.cassossie.net)
[00:29:30] <nedbat> spaceone: sorry?
[00:29:55] <spaceone> that's the __format__ method of datetime.date. why is it returning 's' in the example?
[00:31:05] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:32:22] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[00:33:01] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[00:33:18] <nedbat> spaceone: because it's expecting something like "%Y%m%d", a strftime string
[00:33:25] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Remote host closed the connection)
[00:33:33] <nedbat> spaceone: and in those strings, anything not prefixed by % is a literal
[00:33:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[00:34:05] <nedbat> spaceone: because :s doesn't just call __format__(), it calls __format__("s")
[00:34:07] <spaceone> okay, thanks
[00:34:11] *** Joins: unixbeard (~ironbeard@neuro.mancer.org)
[00:35:42] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:36:15] <unixbeard> Where's the best channel to ask a pandas dependency related issue question on?  I'm unfortunately running into an issue when running makemigrations in django where pandas.tseries.offsets BDay has been used and dependencies updated via pipenv (pipfile/pipfile.lock recently updated).  The error is ModuleNotFoundError: No module named 'pandas._config.localization'
[00:37:36] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 245 seconds)
[00:37:48] <energizer> unixbeard: this is the best channel for that but i doubt you'll get an answer
[00:37:51] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:37:55] *** Quits: Elzington (~Elzington@static-68-235-44-38.cust.tzulo.com) (Quit: Leaving)
[00:38:19] *** Joins: BlessJah (~BlessJah@user/blessjah)
[00:38:35] <energizer> unixbeard: it sounds like pipenv or pandas messed up
[00:38:53] <unixbeard> yeah ... I succeeded in forcing pipenv install pandas (req: *) and it's resolving dependencies again.
[00:39:03] <unixbeard> I will freeze after this I guess.
[00:39:16] <unixbeard> Thanks for the answer though :)
[00:39:46] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b8d6:cab7:8c07:6d7b) (Quit: Konversation terminated!)
[00:39:55] <unixbeard> *every* time I have to install a dependency or update I get some issue with pandas, but that's probably because I'm just using the latest code.
[00:40:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[00:41:06] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 258 seconds)
[00:41:09] *** Quits: Akuli (~Akuli@87-94-110-226.bb.dnainternet.fi) (Quit: Leaving)
[00:41:23] <sco1> Seems like an environment problem
[00:41:42] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[00:41:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:42:06] <energizer> unixbeard: fwiw i've found poetry to be significantly more reliable than pipenv
[00:42:30] *** Joins: fikran (~fikran@user/fikran)
[00:42:31] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:42:58] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:44:01] *** guntbert_ is now known as guntbert
[00:45:01] <unixbeard> energizer: I've used that in other projects.
[00:45:41] *** Quits: henistein (~henistein@2001:8a0:fc8f:9501:e985:77a1:88e5:69a1) (Quit: Client closed)
[00:46:16] *** Joins: tdsmith (~tdsmith@tds.xyz)
[00:50:07] <sartan> has anyone used python-etcd?  can we do client.read(path, wait=True) with async processes?
[00:50:40] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:54:56] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[00:56:06] *** Quits: b_jonas (~x@catv-176-63-2-81.catv.broadband.hu) (Ping timeout: 265 seconds)
[00:58:38] *** Joins: parv (~quass@user/parv)
[00:59:13] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:59:17] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[00:59:23] *** Joins: Gaming4LifeDE (~Gaming4Li@a89-182-125-122.net-htp.de)
[00:59:33] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:59:43] *** Joins: upsala (~zcb@185.213.155.160)
[01:00:49] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[01:01:49] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Ping timeout: 252 seconds)
[01:03:10] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:03:59] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[01:04:50] *** Joins: interweb (~interweb@cpc87801-haye26-2-0-cust245.17-4.cable.virginm.net)
[01:04:55] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[01:05:04] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[01:05:29] *** Quits: interweb (~interweb@cpc87801-haye26-2-0-cust245.17-4.cable.virginm.net) (Client Quit)
[01:05:34] *** Joins: iflema (~ian@user/iflema)
[01:05:39] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:06:01] *** Joins: interweb (~interweb@cpc87801-haye26-2-0-cust245.17-4.cable.virginm.net)
[01:06:08] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[01:07:49] <unixbeard> energizer: I solved the problem by rm -rf'ing the local .env (thanks sco1) and just re-installing everything, and downgrading from 1.3.4 to ==1.3.1 (matching the hash in staging and prod for that dependency).  SHRUG!
[01:07:58] *** Quits: interweb (~interweb@cpc87801-haye26-2-0-cust245.17-4.cable.virginm.net) (Client Quit)
[01:08:16] *** Joins: interweb (~interweb@cpc87801-haye26-2-0-cust245.17-4.cable.virginm.net)
[01:08:40] *** Joins: thiras_ (~thiras@user/thiras)
[01:11:02] *** Joins: cjb (~cjb@user/cjb)
[01:11:46] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[01:12:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[01:13:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[01:13:45] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: Leaving)
[01:14:48] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[01:15:26] *** Quits: jbe (~jbe@lysator/root/jbe) (Ping timeout: 265 seconds)
[01:16:19] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Quit: Leaving)
[01:16:36] <whatsupdoc> Just read the article, yes I see the usefulness of super() now
[01:17:11] *** Quits: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42) (Ping timeout: 245 seconds)
[01:18:00] <Gaming4LifeDE> Hi. I have a question. I'm trying to build an .rpm for a project i'm working on. The challenge for me is that i need to be able to import AND run it. This is my setup: https://bpa.st/ISTQ   I wonder how I can make it so it finds the script and makes it executable without having to do it manually after package install. any ideas?
[01:18:21] <Gustavo6046> does CPython have somethinga analogous to a symbol?
[01:18:35] <Gustavo6046> at least internally so it could look up an attribute without having to hash it each time
[01:19:17] <InPhase> What do you mean by "a symbol"?
[01:20:25] <Gustavo6046> As in, an atomic, numeric value, which is bijective to a string identifier
[01:20:52] <KirkMcDonald> Gustavo6046: Not as such. Not generally. But there is something analogous to this for local variables specifically.
[01:21:00] <Gustavo6046> Let's pretend for a moment Python has a symbol class whose literal is a word (a string of characters that are also valid as variable names) preceded by $
[01:21:09] <Gustavo6046>   assert $apple == 1
[01:21:13] <Gustavo6046>   assert $orange == 2
[01:21:19] <Gustavo6046>   assert $apple == $apple
[01:21:20] <InPhase> Gustavo6046: How does this differ from a variable?
[01:21:21] <Gustavo6046>   assert $apple != $orange
[01:21:45] <KirkMcDonald> But, to be clear, the thing I'm referring to is an implementation detail.
[01:21:56] <Gustavo6046> InPhase: internally it's just a number or hash or something like that, and the identifier is compiled into the internal symbol value at the step that compiles text into bytecode (AST), not at runtime
[01:21:59] <Gaming4LifeDE> i don't get it  tbh
[01:22:07] <nicode> Howdy, what does [:-1] do on a list? e.g. for item in myList[:-1]:
[01:22:20] <Gustavo6046> I dunno how to make that work context-agnostically, I guess you just hash the identifier?
[01:22:21] <KirkMcDonald> nicode: It makes a slice of the list that omits the last element.
[01:22:28] <Gustavo6046> Instead of literally counting each occurence of each string
[01:22:32] *** Quits: seabass (~seabass@user/seabass) (Remote host closed the connection)
[01:22:32] <nicode> kk, thx KirkMcDonald
[01:22:38] <Gustavo6046> Otherwise it'd also be a pain to multithread
[01:22:44] <Hash> Gustavo6046: substract 1 element from the end of list.
[01:22:47] <Gustavo6046> KirkMcDonald: ah, what about attributes?
[01:22:52] <Hash> Into a slice
[01:22:55] <Hash> What they said.
[01:23:05] <KirkMcDonald> Gustavo6046: Attribute lookup in Python is heinously complicated.
[01:23:08] <Gustavo6046> Hash: uh, sorry, I think you mean to tell that to nicode :p
[01:23:13] <Hash> Oh.
[01:23:15] <mefistofeles> heh
[01:23:20] <Gustavo6046> KirkMcDonald: symbols could help with that!
[01:23:24] <Hash> IRC is so fast!
[01:23:32] <Gustavo6046> So the hashing is done separately from runtime
[01:23:42] <mefistofeles> I was here wondering if Hash was coming up with some 200 iq answer to Gustavo6046 query :P
[01:23:42] <nicode> KirkMcDonald: what is that called, when you do myList[:-1]? I ask 'cause I'd like to look it up but not sure what it's called.
[01:23:49] <Gaming4LifeDE> Hash yeah my question is already gone and probably also forgotten :P
[01:23:49] <KirkMcDonald> nicode: It's a slice.
[01:23:53] <nicode> kk
[01:23:55] <Gustavo6046> lol
[01:23:55] <KirkMcDonald> nicode: With a negative index.
[01:23:59] <Hash> :)
[01:23:59] <InPhase> Gustavo6046: So, s = 'foo'; print(id(x));  This is unique.  :)  It's just not guaranteed to match other 'foo' instances.
[01:24:21] <Gustavo6046> InPhase: well, the idea is that with symbols, the 'id' part is done when the code is compiled into AST, not run
[01:24:26] <braxas> I'm trying to migrate RDFlib from nosetest to pytest, one problem is that somehow nosetest seems to have executed every test file in a seperate interpreter or something, but pytest does not (maybe there is an option for this). And some tests do tamper with global state (e.g. https://github.com/iafork/rdflib/blob/iwana-20211018T2122-pytest/test/test_dawg.py#L59-L69).
[01:24:41] <Gustavo6046> Also, you can have two string variables with identical content return different id()s.
[01:24:44] <braxas>  Is there some way to make pytest run every test file in a separate environment?
[01:24:51] <nicode> Thanks KirkMcDonald
[01:24:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:24:59] <Gustavo6046> That is not possible with symbols – they're uniquely bijective to the identifiers that represent them in text code.
[01:25:28] <Gustavo6046> Symbols are just syntax sugar, and simple, AND at the same time can be more changing than you think.
[01:25:30] <KirkMcDonald> Gustavo6046: The trouble is that attribute lookup can't be resolved at compile-time. You don't know in which thing you're looking up the name until you're actually performing the lookup.
[01:25:45] <InPhase> Gustavo6046: {k:hash(k) for k in ['foo', 'bar', 'baz']}
[01:25:57] <Gaming4LifeDE> braxas in most languages with test frameworks you can have a setup and a teardown method/function which get called before and after the test respectively. look if you can find something similar for python
[01:26:07] *** Quits: unixbeard (~ironbeard@neuro.mancer.org) (Quit: .)
[01:26:12] <InPhase> Gustavo6046: Use the key, or use the value.  If you store the value you don't need the key again, but you can look it up or generate it again at will.
[01:26:28] <KirkMcDonald> Gustavo6046: Prehashing the identifiers saves very little, I would think.
[01:26:44] <braxas> Gaming4LifeDE: I can, I still would prefer to somehow not have this problem, as there may be various places where global state is being contaminated which will make tests ineffective
[01:26:57] <InPhase> Looking it up might be silly though, since it's going to call hash to get the stored hash...  But, just to point out you can store that consistently and make use of it, or assign it places.  You could make a list of just the hashes.
[01:27:06] *** Quits: magla (~gelignite@55d45a4d.access.ecotel.net) (Quit: Stay safe!)
[01:27:11] <Gustavo6046> KirkMcDonald: Yes, but then you can add front matter to a class declaration (or have the AST compiler do that, say, if you use attr, or less trivially by inspecting the code inside __init__), and then each attribute lookup (in code that uses this class, also in the AST step) will check if the attribute identifier exists in this front matter (they're enumerated, not hashed), and only do the
[01:27:13] <Gustavo6046> traditional attr lookup otherwise.
[01:27:31] <energizer> braxas: i think you'd need to ask pytest for the list of tests and then separately invoke pytest with subprocess for each one
[01:27:35] <Gustavo6046> InPhase: Yeah, but what I mean is that this is not done at runtime, it's done in the AST compilation step.
[01:27:46] <KirkMcDonald> Gustavo6046: This is a substantial change to the language that you are proposing.
[01:27:50] <Gaming4LifeDE> braxas i don't really get what the function you link actually does. is it interacting with some external system?
[01:28:03] <InPhase> Gustavo6046: Do you really have a situation where generating a set of hashes once is significant compared to the cost of compilation?
[01:28:15] <Gustavo6046> Runtime means it's run each time the "instruction pointer" bumps into a statement. """Compile-time""" (super mega misleading caveat word LOL) means it's only done once, on AST time.
[01:28:26] <braxas> energizer: :S sounds like heck, maybe I should just fix the tests that fiddle with global state
[01:28:30] <Gustavo6046> InPhase: yes, it's called CPython's internal attribute lookup :)
[01:28:41] <Gustavo6046> KirkMcDonald: It shouldn't be too difficult to make it work with all existing code.
[01:28:46] <KirkMcDonald> Gustavo6046: Classes aren't even defined until runtime.
[01:28:46] <braxas> Gaming4LifeDE: it is setting a package level variable: https://github.com/iafork/rdflib/blob/iwana-20211018T2122-pytest/test/test_dawg.py#L59-L69
[01:28:49] <Gustavo6046> And this "front matter" doesn't have to be specified manually
[01:29:00] <braxas> rdflib.NORMALIZE_LITERALS = True
[01:29:04] *** Quits: yaalon (~yaalon@2600:1700:9450:2d30:ec74:8c39:7366:8759) ()
[01:29:04] <Gustavo6046> KirkMcDonald: I know, but this front matter would be part of the declaration in internal AST
[01:29:18] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[01:29:26] <Gaming4LifeDE> braxas and it only resets when you reset the full envrionment?
[01:29:38] <Gustavo6046> The AST compiler, looks at a class, verifies what attributes are *unconditionally* set to self in the __init__ method, and then enumerates that and adds it somewhere in the class declaration in AST level.
[01:29:39] <braxas> actually, wait, something else is up
[01:29:51] <energizer> braxas: you can use pytest fixtures to do setup/teardown for each test but you'll have to figure out what needs to be torn down
[01:29:52] <braxas> nvm, nosetest did the same as pytest
[01:29:54] <Gustavo6046> The runtime, when it defines the class, simply loads this front matter and attaches it to the class declaration, if it exists.
[01:29:59] *** Joins: Klinda (~superleag@user/klinda)
[01:30:03] <braxas> somethin else was missed
[01:30:13] <Gaming4LifeDE> braxas what might be the issue then?
[01:30:27] *** Joins: Vonter_ (~Vonter@user/vonter)
[01:30:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[01:30:33] <braxas> https://github.com/iafork/rdflib/blob/e3a16bda50e7f04bff8e9bedd59e31df51df9ac9/test/test_dawg.py#L516-L529 < resetFlags() should be in finally
[01:30:43] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[01:30:48] <KirkMcDonald> Gustavo6046: There are innumerable caveats to trying to slap any sort of compile-time guarantees onto Python code.
[01:31:11] *** Quits: Klinda (~superleag@user/klinda) (Client Quit)
[01:31:15] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:31:23] <Gustavo6046> The AST compiler will also automatically hash the identifier of an attribute lookup. That is, *alongside* the identifier, not in lieu of it. Then, the C function that gives a PyObject (I dunno which, I don't know about Python.h to be honest lol), will see if this front matter exists, and if so it will see if the hash given appears anywhere in it, and if so return that attribute. Less pointer
[01:31:24] <Gustavo6046> indirection, less map fuss.
[01:31:43] <Gustavo6046> KirkMcDonald: Yeah, like 'del someobject.an_attr_that_should_always_exist' – but the code will have sanity checks, right?
[01:31:59] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[01:32:05] <Gustavo6046> And if a class does that it's probably doing something wrong and patchworky; but then we print a warning, unless -O is passed or something
[01:32:10] <KirkMcDonald> Gustavo6046: Or like reassigning a class's __init__ method.
[01:32:18] <SnoopJ> Gustavo6046, what is an "AST compiler?"
[01:32:38] <Gustavo6046> KirkMcDonald: well, then the front matter is assigned to the __init__'s AST
[01:32:43] <KirkMcDonald> Gustavo6046: Or descriptors, in particular the data descriptor vs. non-data descriptor distinction, and how that interacts with ordinary instance attributes.
[01:33:09] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:33:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[01:33:27] <Gustavo6046> and when the __init__ assignment is hit at runtime, that will replace the class's own front matter, which will only take effect in instantiatons *after* the fact
[01:33:39] <Gustavo6046> The pre-existing front matter will still exist, and is reference counted or something, IDK.
[01:33:47] *** Joins: thiras_ (~thiras@user/thiras)
[01:33:50] <Gustavo6046> But the internal class has a pointer to the current front matter
[01:33:57] <Gustavo6046> Or something
[01:34:04] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[01:34:10] *** Joins: Mindscape (~Lindis@user/lindis)
[01:34:54] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[01:35:07] <Gaming4LifeDE> Can anyone help me with my problem?
[01:35:44] <Gustavo6046> So yeah, this can be a difficult undertaking, but I wager not because of inflexibility or other "bad" reasons, and definitely not impossible. It can be worked out, and I don't see why it'd be difficult to have it be seamlessly compatible with what is already in place.
[01:35:50] <Gustavo6046> Gaming4LifeDE: braxas said something after your last inquiry
[01:36:10] <Gustavo6046> SnoopJ: it turns the input text into the internal AST representation, which is what is executed internally
[01:36:30] <ses1984> how would you set up your build environment, if you were writing a python package that depends on a c extension, and you want to test different target environments
[01:36:30] <Gustavo6046> So the lexer/tokenizer, parser, and then filters/passes after the parser
[01:36:31] <KirkMcDonald> The CPython interpreter doesn't execute the AST.
[01:36:46] <Gustavo6046> Oh?
[01:36:51] <KirkMcDonald> It compiles to bytecode.
[01:36:54] <SnoopJ> nothing executs ASTs, they are by definition abstract
[01:36:59] <Gustavo6046> Ahhh
[01:37:06] <Gustavo6046> Well, I suppose that is what I am referring to, then
[01:37:10] <grym> Gustavo6046: are you aware of things like https://tree-sitter.github.io/tree-sitter/
[01:37:14] <energizer> Gaming4LifeDE: i dont think many of us know how to use rpm. we can help with pip
[01:37:15] <Gustavo6046> But that could be a bit awkward wrt code/data separation
[01:37:19] <SnoopJ> the compiler takes an AST and spits out something that *is* executable
[01:37:20] <Gaming4LifeDE> Gustavo6046 i'm trying to package a python project into a rpm file. i need to be able to import the module and execute it as a script. executing doesn't work for some reason. see here: https://bpa.st/ISTQ
[01:37:24] <Gustavo6046> grym: no, not that kind of "front matter"
[01:37:29] <Gaming4LifeDE> energizer the tech is 100% the same
[01:37:30] <SnoopJ> (and the parser's job is building the AST in the first place)
[01:37:47] <grym> Gustavo6046: it's not just for syntax highlighting
[01:37:53] <Gaming4LifeDE> basically i need to be able to add the module to $PATH automatically
[01:37:57] <energizer> Gaming4LifeDE: if you can ask your question in terms of pip we'll be able to answer it
[01:37:58] <Gustavo6046> Ah
[01:38:06] <Gustavo6046> grym: it'd be a patch straight into CPython and compatible codebases
[01:38:12] <mefistofeles> Gaming4LifeDE: you need to add it as an entrypoint and it should get copied to /usr/bin or something in your PATH
[01:38:24] <Gustavo6046> CPython already parses Python code so I dunno why tree-sitter is desired here :p
[01:38:34] *** Quits: interweb (~interweb@cpc87801-haye26-2-0-cust245.17-4.cable.virginm.net) (Remote host closed the connection)
[01:38:35] <Gaming4LifeDE> mefistofeles how would i need to write that? (see my paste for the example)
[01:38:37] <Gustavo6046> oh wait, it secretly parses Perl doesn't it. :P
[01:38:53] *** Joins: interweb (~interweb@cpc87801-haye26-2-0-cust245.17-4.cable.virginm.net)
[01:38:53] <Gustavo6046> Gaming4LifeDE: ah, well, you might have missed this
[01:39:01] <Gustavo6046> 19:00 <braxas> https://github.com/iafork/rdflib/blob/e3a16bda50e7f04bff8e9bedd59e31df51df9ac9/test/test_dawg.py#L516-L529 < resetFlags() should be in finally
[01:39:06] <Gustavo6046> sorry for the timestamp, UTC-03:00 I'm Brazlian
[01:39:11] <bjs> Gustavo6046: I'm not really sure what you're trying to do, the scrollback is hard to read :P
[01:39:14] <Gaming4LifeDE> lol ok
[01:39:34] <energizer> Gaming4LifeDE: are you not allowed to use setuptools in rpm?
[01:40:12] <Gaming4LifeDE> energizer how would that be different? setuptools generates the rpm from the info supplied in setup.py
[01:40:16] <Gaming4LifeDE> see the paste
[01:40:19] <energizer> Gaming4LifeDE: https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html
[01:40:30] <Gustavo6046> bjs: well, I should probably summarize in an adoc doc
[01:40:35] <Gustavo6046> lemme gist
[01:41:18] <energizer> Gaming4LifeDE: the setup function used in that example is setuptools.setup
[01:41:29] <Gaming4LifeDE> if it put it in scripts, won't i have it installed twice? i wouldn't think it's smart enough to put a symlink instead
[01:41:40] <Gaming4LifeDE> energizer correct
[01:42:05] <energizer> Gaming4LifeDE: i mean the exmaple i linked
[01:42:20] *** Joins: donald1 (~donald@88.5.131.77.rev.sfr.net)
[01:42:41] <mefistofeles> Gaming4LifeDE: I guess this https://setuptools.pypa.io/en/latest/userguide/entry_point.html
[01:42:59] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 264 seconds)
[01:43:27] <Gaming4LifeDE> energizer i'm using that too
[01:43:42] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:43:52] <Gaming4LifeDE> mefistofeles the entry point specifies takes a function though
[01:44:30] *** Joins: scindmape (~Lindis@user/lindis)
[01:45:07] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[01:45:14] *** Quits: Mindscape (~Lindis@user/lindis) (Killed (NickServ (GHOST command used by scindmape)))
[01:45:14] *** scindmape is now known as Mindscape
[01:45:26] <mefistofeles> Gaming4LifeDE: check the syntax, some of them are optional, so you don't need to specify a function or method
[01:45:33] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:46:01] <Gaming4LifeDE> https://bpa.st/5X7A i just updated the paste with the changes. i wonder if that's another copy or a symlink
[01:47:46] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:48:27] *** Quits: interweb (~interweb@cpc87801-haye26-2-0-cust245.17-4.cable.virginm.net) (Changing host)
[01:48:27] *** Joins: interweb (~interweb@user/interweb)
[01:48:51] <Gaming4LifeDE> it's just a copy, wow
[01:50:52] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:51:40] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[01:52:25] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[01:52:35] <Gaming4LifeDE> i mean at least it works...
[01:52:50] *** Quits: RougeR (~rougex250@user/rouger) (Quit: Leaving)
[01:53:56] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[01:55:02] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:55:32] <Gustavo6046> I wonder whether, if Python code were JIT-ted to machine code to an extent (but with libpython calls, lol), that is as opposed to a state machine interpreter, if it'd still be possible to call that an interpreter. Or also how practical it'd be, or if it's just gonna kick the can down to the libpython methods. https://asmjit.com/
[01:56:35] <nedbat> Gustavo6046: why do we need to call it an interpreter at all?
[01:56:58] <KirkMcDonald> JITing Python is a thing that is done; have a look at pypy.
[01:57:02] <Gustavo6046> Because otherwise we run out of words to call it! And then, apocalypse! \o/
[01:57:17] <Gustavo6046> KirkMcDonald: to platform-specific bytecode?
[01:57:40] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[01:57:58] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[01:58:04] <KirkMcDonald> https://www.pypy.org/features.html
[01:58:18] <SnoopJ> "platform-specific bytecode" contradicts itself, if I'm not mistaken
[01:58:34] <SnoopJ> unless you're talking about different versions of the Z-machine or something like that :)
[01:59:02] <Gustavo6046> Oh I mean machine code, sorry
[01:59:22] <SnoopJ> there are strategies that take Python source to machine instructions, if that's what you're asking
[01:59:24] <Gustavo6046> although that implies that the platform is a physical machine or an emulation of one and I'm sure that isn't necessarily the case (inb4 JPyPy)
[01:59:47] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:00:17] <SnoopJ> both PyPy and Numba can JIT to native
[02:01:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:01:30] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 260 seconds)
[02:01:30] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[02:01:58] <Gustavo6046> After writing a summary/abstract about my proposal I don't know what to detail or why
[02:03:00] <Gaming4LifeDE> entry points don't seem to work for rpm
[02:03:46] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 265 seconds)
[02:03:59] *** Quits: audiobirb (~audio@2603-8081-1800-1546-aa2c-362e-4508-2aa9.res6.spectrum.com) (Ping timeout: 264 seconds)
[02:04:20] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[02:05:02] <Pi-sistance> so variable names aren't allowed to start with a number? My tutorial didn't mention it, but I wonder if there is another reason I get an error
[02:05:19] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[02:05:33] *** Quits: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-bd07-9081-ceb6-d444.res6.spectrum.com) (Ping timeout: 256 seconds)
[02:06:03] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:06:21] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:248b:d0e4:9bb6:3a33) (Ping timeout: 245 seconds)
[02:06:29] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[02:06:37] <SnoopJ> Pi-sistance, correct
[02:07:26] <SnoopJ> the first character in an identifier has some special restrictions, that being a very notable one
[02:08:37] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:10:06] <Pi-sistance> ty
[02:10:10] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Quit: happy math or coding)
[02:11:39] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:12:19] *** Quits: potatosal (~salad@user/potatosal) (Quit: leaving)
[02:12:33] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[02:13:22] *** Joins: dez_ (uid92154@user/dez)
[02:16:49] *** Joins: interweb (~interweb@user/interweb)
[02:17:45] <Gaming4LifeDE> made the entry_point work, yay
[02:18:08] <Gaming4LifeDE> i'll head out now though, it's late here. bye everyone and thanks for your help
[02:18:14] *** Quits: Gaming4LifeDE (~Gaming4Li@a89-182-125-122.net-htp.de) (Quit: Client closed)
[02:19:27] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56) (Remote host closed the connection)
[02:19:51] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56)
[02:20:53] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[02:21:16] *** Joins: portalrat (~portalrat@user/portalrat)
[02:28:39] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:29:06] *** Quits: sfields (~sfields@2603-8090-1605-d7f3-9318-86ec-5dd6-c4be.res6.spectrum.com) (Quit: Leaving)
[02:29:21] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:30:04] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[02:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[02:30:39] *** emerent is now known as Guest540
[02:30:39] *** Joins: emerent_ (~quassel@p200300cd57485550ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:30:39] *** Quits: Guest540 (~quassel@p200300cd57485584ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (tungsten.libera.chat (Nickname regained by services)))
[02:30:39] *** emerent_ is now known as emerent
[02:30:41] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[02:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:31:39] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[02:31:45] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[02:32:38] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[02:32:41] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:32:59] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[02:33:56] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:34:00] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[02:34:32] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[02:36:44] *** Joins: FireFish5000 (~FireFish5@user/firefish5000)
[02:38:27] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:38:51] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[02:39:56] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 258 seconds)
[02:39:57] *** Quits: grys (~quassel@botters/gry) (Quit: No Ping reply in 180 seconds.)
[02:41:22] *** Joins: grys (~quassel@botters/gry)
[02:41:26] *** Joins: Hazza (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[02:41:38] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Read error: Connection reset by peer)
[02:42:34] *** Joins: y1n (~y1n@178.165.197.203.wireless.dyn.drei.com)
[02:44:10] *** Joins: fluffyballoon (~user@131.93.208.196)
[02:44:30] *** Joins: dfch (~dfch@user/dfch)
[02:45:10] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[02:45:27] *** Joins: hanaan (~naan@user/naan)
[02:45:29] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 265 seconds)
[02:45:54] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[02:46:24] *** Joins: breetai (~breetai@mail.northriverboats.com)
[02:46:27] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 265 seconds)
[02:46:35] <breetai> I have a best practices question. I see ENV vars and logging enabled in scrips right after the import's and done ouside of any function. Should that be done? What should be initialized outside of functions?
[02:47:30] <grym> breetai: you kind of have to do those things at module level
[02:48:07] <grym> breetai: avoid doing things at module scope that are things you wouldn't want done at import time (because they will be done at import time)
[02:48:26] *** Quits: Naan (~naan@user/naan) (Ping timeout: 245 seconds)
[02:48:32] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[02:48:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[02:49:09] *** Joins: Naan (~naan@user/naan)
[02:49:11] <breetai> grym: I guess the right question is what do I do at import time apart from imports?
[02:49:31] *** Joins: alnr (~alnr@38.125.204.99)
[02:49:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[02:49:59] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[02:50:34] <grym> things like setting all-caps "constants" and  initialising loggers are pretty regular
[02:51:00] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[02:51:36] <grym> on rare occasions i'll do heavy stuff, but always very clearly on purpose
[02:51:51] *** Joins: fikran (~fikran@user/fikran)
[02:52:32] <alnr> i need a simple private key encrypt/decrpyt. I want it to be repeatable (same key, data,=same cipher. ECB?). i need to migrate out of pycrypto, the cryptography package or pycryptodome dont seem to have a repeatable one. I know that repeatable is deprecated.
[02:52:41] <SnoopJ> breetai, anything that needs to be done for the module to be in a valid state
[02:52:55] <SnoopJ> Everything else can be on-demand
[02:53:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[02:53:58] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:54:18] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:54:42] <breetai> SnoopJ thanks that makes a lot of sense, do just what is required to set up state.
[02:55:03] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:9c46:78b3:906:c68b) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:10] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[02:55:38] *** Joins: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42)
[02:56:06] <SnoopJ> breetai, note that this includes defining functions, `def foo(): ...` is code that gets run at import time, too :)
[02:57:23] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:57:48] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[02:59:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[02:59:28] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 252 seconds)
[02:59:58] <breetai> SnoopJ had not heard of functions surrounded with backticks before.
[03:00:21] <SnoopJ> breetai, that's just how I indicate code interposed with prose in my messages. I mean a conventional function definition in Python (without the backticks)
[03:00:34] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[03:00:52] <SnoopJ> the function definition is itself code that is executed when the module is imported (same for class definitions, etc.), is my point
[03:01:02] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[03:01:56] <breetai> SnoopJ ok, that is what I hoped you meant, I had not seen backticked functions. I was hoping that was just a text formatting issue. Or I was even more ignorant than I thought I was.
[03:02:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:02:06] <Gustavo6046> how can I produce/compile an entirely now Python function from Python code, e.g. if I want to compile a really big operation that would otherwise require my own state machine, down to Python code?
[03:02:14] <Gustavo6046> For instance, compiling 6502 assembly to Python.
[03:02:19] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[03:02:26] <Gustavo6046> And running it that way as opposed to making a class that is a 6502 state machine
[03:02:37] <Gustavo6046> Of course this means there's no way to control the cycles :P
[03:02:41] <Gustavo6046> So idk
[03:02:57] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[03:03:02] <breetai> SnoopJ I have a background in FORTH I find that thinking of code being an input stream that is executed/compiled as it is read a very natural concept.
[03:03:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:04:30] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 260 seconds)
[03:04:58] <SnoopJ> That's how Python's REPL works, but modules are compiled as a unit
[03:05:28] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[03:05:47] <SnoopJ> This is all trivia, though, but it may help you to think of it in terms of "import that module" really just meaning "execute the code in that module and give it a namespace" because, well, that's what it is :)
[03:06:38] <breetai> SnoopJ excellent, that is exactly what I will do. Thanks
[03:07:01] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[03:08:02] <SnoopJ> breetai, I believe Python's execution stack is very much like FORTH's as well, incidentally. Can't recall if it's one of the canonical influences, but it seems to ring a bell.
[03:08:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[03:09:17] <SnoopJ> or whatever the right computer-sciencey name is for the stack that you're always pushing and popping off of to make the program go. If you look at compiled Python, you see lots of "push some stuff, jump to some other code, pop some stuff, do a thing, push the result"
[03:09:28] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[03:09:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:10:15] <dale> Dear lord why https://github.com/celery/kombu/blob/7d13f9b95d0b50c94393b962e6def928511bfda6/kombu/__init__.py#L34-L36
[03:11:41] <dale> I'm staring at this code for a good five minutes before I realize that it's "STATICA_HACK" backwards.  Before that I had convinced myself this was some magic cookie for IDEA StatiCa, some kind of engineering software, and that "kcah_acitats" was meaningful in Czech (company that makes StatiCa is apparently Czech).
[03:11:55] <dale> And if you google for STATICA_HACK, you'll see it in many places.
[03:13:01] <Jonno_FTW> dale: I think the comment explains it well enough
[03:13:19] <SnoopJ> ...wh...why
[03:13:32] <dale> Jonno_FTW: The comment definitely helps.  Unfortunately I hit it in Airflow where they copied the code but not the comment.
[03:13:41] <Jonno_FTW> but yeah doing that is usually a sign of other problems. May as well just use some .pyi files
[03:13:48] *** Joins: pycurious (~Adium@user/pycurious)
[03:14:17] <SnoopJ> Iä! Iä! Annotations fhtaghn!
[03:14:23] <dale> SnoopJ: lol
[03:15:03] *** Quits: Hazza (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[03:15:08] <SnoopJ> I guess dale's 5 minutes are a good sign that at least the identifier they are using for this state is not an obvious one
[03:15:23] <dale> I don't even know what "STATICA" means, really.
[03:15:23] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 264 seconds)
[03:15:30] <Jonno_FTW> static analysis
[03:15:34] <dale> Ohh
[03:15:54] * grym chants 'yvan eht nioj'
[03:16:20] <dale> I propose that STATIC_ANALYSIS_HACK would be clearer but maybe I'm just not cool anymore.
[03:16:27] <SnoopJ> +1
[03:16:28] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[03:16:51] <dale> 1,173 hits for STATICA_HACK on GitHub, though a lot of those seem to be copies of Celery.
[03:17:36] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[03:17:56] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[03:18:24] <SnoopJ> oh, okay, I understand what this is doing after similar minutes of "why is this code doing this?"
[03:19:05] <dale> SnoopJ: Is this magick justified, in your opinion?
[03:19:24] <SnoopJ> I'd have to have a maintainer's view of the constraints
[03:19:55] <SnoopJ> but it could at least have an explanation of what eldritch evils struck from the heavens to make this the best way to do it
[03:20:30] <SnoopJ> I think the idea is that the static analyzer won't (can't?) follow this line and see that the toggle is turned back off, so as far as they're concerned the switch is on
[03:20:46] <SnoopJ> but in actual execution the runtime state juggling turns it off
[03:20:51] <Gustavo6046> In hindsight, this really could be better thought out. https://gist.github.com/Gustavo6046/7ae1b71ee944f2511b8d03e1d095a516
[03:20:57] <Gustavo6046> I'll just leave it here and let you eviscerate it.
[03:21:11] <SnoopJ> I agree, a .pyi would be preferable, but maybe there was a reason a .pyi wasn't suitable (2012 was a while ago, too)
[03:22:09] <dale> SnoopJ: That's what I guessed as well.
[03:23:32] <Roey> hi
[03:23:59] <SnoopJ> dale, I thought it was using some kind of secret handshake that all the cool static analyzers are doing these days, like `if TYPE_CHECKING`
[03:24:06] <Roey> https://pastebin.com/Guzrc9dt <- is Python matching the functions to the signatures? Because when I run this code it looks like it did do that.  I thought that annotations are just annotations?
[03:24:07] <infobob> https://bpaste.net/NA4A (repasted for Roey)
[03:24:09] *** Joins: KombuchaKip (~kip@192.252.230.5)
[03:24:11] <dale> SnoopJ: It seems like that would be highly preferable.
[03:24:37] <dale> SnoopJ: In fact, I wonder if you could just use TYPE_CHECKING there.  I guess a "static analyzer" isn't always a "type checker".
[03:24:44] <SnoopJ> Yea, indeed
[03:25:01] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[03:25:11] <SnoopJ> STATIC_ANALYSIS wouldn't be a terrible way to spell that...
[03:26:18] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:26:24] <Gustavo6046> there is typing.TYPE_CHECKING
[03:26:30] <dale> Roey: You're right, annotations are just annotations.
[03:26:36] <SnoopJ> Roey, this program defines calc() with one annotation, then redefines it with another annotation. Python doesn't have "overloads" if that's what you meant with this program.
[03:26:37] <Gustavo6046> re: SnoopJ and dale
[03:26:54] <Gustavo6046> and yes static analysis type checkers are conspiring to pour marmite all over CPython!
[03:27:00] <SnoopJ> Gustavo6046, well, the point is that it would probably be a good idea to acknowledge static analysis tools that are *not* type checkers
[03:27:09] <Gustavo6046> oh
[03:27:12] <kronicmage> i for one welcome our new static type checker overlords
[03:27:13] <Gustavo6046> or just have a set[str]
[03:27:15] <dale> Roey: If you change n to n=9 you'll probably still see the cube, even though it prints "Square is 729".
[03:27:22] <SnoopJ> and as I look at this code, I realize that it's not a bad solution to that
[03:27:32] <Gustavo6046> like, CONTEXT = { 'static', 'type check' }
[03:27:43] <Roey> dale: ok
[03:27:45] <grym> Gustavo6046: vegimite; please
[03:28:00] <Roey> <SnoopJ> Roey, this program defines calc() with one annotation, then redefines it with another annotation. Python doesn't have "overloads" if that's what you meant with this program.  <-- see this is what I thought
[03:28:06] <Gustavo6046> wat
[03:28:13] <Gustavo6046> oh yeah I forgot I don't know British condiments
[03:28:31] <Roey> https://www.pythonpool.com/match-case-python/  <- I got it from here, SnoopJ, and it did mention overloading
[03:28:50] <Roey> which went contrary to what I thought assignments in python are (they're just binding names to values)
[03:28:55] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[03:29:10] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:29:13] <Roey> SnoopJ, dale ^
[03:29:22] *** Joins: Barones (~Barones@2804:7f3:8987:c42f:e519:2999:4571:c6ce)
[03:30:06] *** Quits: Barones (~Barones@2804:7f3:8987:c42f:e519:2999:4571:c6ce) (Client Quit)
[03:30:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:30:50] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[03:31:20] *** Joins: djhankb (~djhankb@208.113.164.68)
[03:31:36] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[03:31:57] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[03:32:01] <Gustavo6046> back
[03:32:02] <Gustavo6046> homemade bread with margarine, heated a bit on the microwave oven
[03:32:02] <Gustavo6046> yuuuuuuum
[03:32:09] <Gustavo6046> the margarine is not homemade, we're not chemists
[03:32:16] *** Joins: portalrat (~portalrat@user/portalrat)
[03:32:54] *** Joins: brabrax (~brabrax@user/brabrax)
[03:33:46] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Quit: Leaving)
[03:34:12] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[03:34:16] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:34:25] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[03:34:32] *** Joins: alzgh (~alzgh@user/alzgh)
[03:35:49] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:36:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:37:00] *** Joins: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net)
[03:37:09] *** Joins: sbrown (~sbrown@66.44.16.44)
[03:37:39] <parv> I have yet to try runtype, https://github.com/erezsh/runtype; would mainly for multiple dispatch, Opinions?
[03:37:52] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[03:38:03] *** Quits: hanaan (~naan@user/naan) (Quit: Leaving)
[03:38:11] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56) (Ping timeout: 264 seconds)
[03:38:13] *** Parts: fuxaches (~terry@S01060cb6d29d89df.ed.shawcable.net) ()
[03:38:21] *** Joins: mat001 (~mat001@213.143.69.121)
[03:38:34] <SnoopJ> Roey, here is how I would do something like what you were aiming for (dispatching on the type of `n`): https://bpa.st/GGFA
[03:39:11] <Roey> thank you
[03:39:12] *** Quits: gloin (~gloin@user/gloin) (Remote host closed the connection)
[03:39:29] <parv> On dispatch: https://runtype.readthedocs.io/en/latest/dispatch.html
[03:39:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:39:39] *** Quits: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42) (Remote host closed the connection)
[03:39:55] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:39:59] <bilb_ono> can someone help me with how to trace this thing Im running? https://bpa.st/HMHA. You can see the command at the very top and the output. So there is a failure. I am not sure what it means. I want to understand where in the code its failing. I introduce the tracer at the bottom that runs “main()” however I dont feel that it has significantly helped me understand whats happening. Im either using it wrong or expecting something moore
[03:40:00] <bilb_ono> than it does…
[03:40:03] <Roey> ahhhhh htank you, SnoopJ
[03:40:05] *** Joins: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42)
[03:40:20] <Roey> SnoopJ: and so the article I pointed to, it's definitley wrong then
[03:40:31] <bilb_ono> like do I need a tracer on every single function that I want to trace? or the file in general? or can I put it on the entire module?
[03:40:39] <Roey> SnoopJ: because it says that this is a way to overload functions in python
[03:41:10] <donald1> I can not do run setup.py in PyCharm. The button is grey. Could you  help me to enbale it please?
[03:41:43] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: restarting)
[03:41:49] <grym> donald1: that's something you typically do from a terminal
[03:41:49] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:41:52] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[03:42:04] *** Joins: chenqisu12 (~xirndc@183.217.203.91)
[03:42:06] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:42:21] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b157-81d2-c247-f7c3.res6.spectrum.com) (Read error: Connection reset by peer)
[03:42:49] <SnoopJ> Roey, right, it just always cubes
[03:42:51] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:42:54] <Roey> yeah.
[03:43:04] <Roey> I dunno what this author was thinking, yeesh.
[03:43:10] <donald1> grym yes but I want to do it in pycharm
[03:43:10] <SnoopJ> Haven't seen pythonpool.com before, but yea...
[03:43:33] <Roey> I've been pythoning for so long, even my momma says that my mind is gone ♫
[03:43:34] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 258 seconds)
[03:43:36] <SnoopJ> Roey, PEP 636 is quite a good tutorial on pattern matching, if you are looking for one :)
[03:43:49] <Roey> oh yeah I'm showing it to other users here : :) :)
[03:44:02] <donald1> so I can not do that : https://www.jetbrains.com/help/pycharm/creating-and-running-setup-py.html
[03:44:06] <grym> donald1: i would recommend against it, and pycharm may actually prevent you
[03:44:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[03:44:31] <donald1> grym against what? the terminal?
[03:45:02] *** Joins: george_smiley (~george_sm@cpe-192-181-218-188.kya.res.rr.com)
[03:45:11] * SnoopJ predicts that #python will see many more confused tutorials on structured pattern matching in the coming months...
[03:46:10] <grym> donald1: against running setup.py in pycharm. i like terminals
[03:46:59] *** Quits: whatsupdoc (~whatsupdo@148.64.18.46) (Ping timeout: 256 seconds)
[03:47:14] *** Joins: stormdancer (~stormdanc@185.245.86.122)
[03:48:58] *** Joins: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net)
[03:49:31] *** Quits: george_smiley (~george_sm@cpe-192-181-218-188.kya.res.rr.com) (Changing host)
[03:49:31] *** Joins: george_smiley (~george_sm@user/george-smiley/x-3139219)
[03:49:37] <twb> given a pathlib object, how do I say "is this on the same filesystem as /?"  I guess I need statvfs...
[03:50:09] <twb> Hrm, let me just read the source code of any C program that hsa --one-file-system...
[03:51:00] *** Quits: george_smiley (~george_sm@user/george-smiley/x-3139219) (Quit: Leaving)
[03:51:14] <twb> if (one_file_system && st.st_dev != filesystem_dev
[03:51:16] *** Joins: amo (~amogorkon@port-92-196-124-146.dynamic.as20676.net)
[03:51:18] <twb> OK so .stat()
[03:51:28] <donald1> even in a terminal I can not for permissions: https://paste.debian.net/1215921/ should I fix it before come back in pycharm? and how? my command is in admin
[03:51:41] *** Quits: fluffyballoon (~user@131.93.208.196) (Remote host closed the connection)
[03:51:41] <SnoopJ> twb, you want something in `os` at any rate, yea
[03:52:03] <SnoopJ> I think stat(...).st_ino, yea
[03:52:14] <twb> >>> (pathlib.Path('/sys/firmware').stat().st_dev, pathlib.Path('/').stat().st_dev)  ===> (20, 26)
[03:52:25] <KirkMcDonald> .st_dev, not so much .st_ino
[03:52:32] <grym> donald1: look into having pycharm make you a virtual environment for your project, and choose to locate that virtual environment somewhere you have write permissions.
[03:52:36] *** Joins: george_smiley (~george_sm@user/george-smiley/x-3139219)
[03:52:40] <KirkMcDonald> Once is the "device," the other the inode.
[03:52:46] <SnoopJ> err, of course
[03:53:00] <grym> donald1: (then, install into that venv)
[03:53:28] *** Joins: INeedAHandle (~INeedAHan@211.192.133.205)
[03:54:31] *** Quits: amogorkon (~amogorkon@port-92-196-12-224.dynamic.as20676.net) (Ping timeout: 252 seconds)
[03:54:54] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[03:56:36] *** Joins: fluffyballoon (~user@131.93.208.196)
[03:57:01] *** Quits: george_smiley (~george_sm@user/george-smiley/x-3139219) (Quit: Leaving)
[03:58:39] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:00:11] <donald1> I have the same issue in the new env I just created from a terminal with powershell
[04:00:19] <donald1> grym
[04:01:03] <twb> http://ix.io/3CaQ
[04:01:12] <twb> Looks OK to me
[04:02:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) ()
[04:02:56] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[04:03:16] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[04:03:20] *** Joins: george_smiley (~george_sm@user/george-smiley/x-3139219)
[04:04:24] <donald1> ah on windows you just have to do .\setup.py install. not python3 setup.py install !
[04:04:42] <grym> donald1: python3 -m pip install \the\place\wit
[04:04:49] <grym> donald1: python3 -m pip install \the\place\with\setup\in\it
[04:05:24] *** Quits: george_smiley (~george_sm@user/george-smiley/x-3139219) (Client Quit)
[04:05:35] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:f580:3b47:1a1c:cfb5)
[04:06:34] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 258 seconds)
[04:07:33] *** Joins: george_smiley (~george_sm@user/george-smiley/x-3139219)
[04:11:14] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[04:11:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:12:58] *** Quits: INeedAHandle (~INeedAHan@211.192.133.205) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:13:15] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[04:14:49] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[04:15:06] *** Joins: INeedAHandle (~INeedAHan@211.192.133.205)
[04:16:46] *** Quits: george_smiley (~george_sm@user/george-smiley/x-3139219) (Quit: Leaving)
[04:17:08] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[04:18:54] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Remote host closed the connection)
[04:19:33] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[04:20:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:22:35] *** Quits: y1n (~y1n@178.165.197.203.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[04:23:24] <donald1> I want to make a class that could inherit of another but only depending of the os. Because I use a libaray os dependent. Is it possible to make something like: class process(WinProcess if sys.platform.startswith("win") == True, tube):
[04:23:26] <donald1> ?
[04:23:55] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[04:24:03] <twb> donald1: your ternary operator is missing an "else" clause
[04:24:15] <donald1> python -m pip install setup.py
[04:24:15] <donald1> ERROR: Could not find a version that satisfies the requirement setup.py (from versions: none)
[04:24:15] <donald1> ERROR: No matching distribution found for setup.py
[04:24:35] <donald1> twb: could you give  an example please?
[04:24:49] <twb> donald1: WinProcess if sys.platform.startswith('win') else None
[04:24:51] <nedbat> donald1: you could do that, but maybe it's better to not use inheritance there.
[04:25:14] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[04:25:24] *** Joins: Barones (~Barones@2804:7f3:8987:c42f:e519:2999:4571:c6ce)
[04:25:25] <donald1> twb: seems ok sounds very cool. I have to pass the tests
[04:25:42] *** Quits: gitly (~gitly@148.252.128.182) (Ping timeout: 260 seconds)
[04:26:30] *** Quits: Barones (~Barones@2804:7f3:8987:c42f:e519:2999:4571:c6ce) (Client Quit)
[04:27:00] <grym> donald1: pip install takes a directory or package name, not a file name
[04:27:35] *** Joins: gitly (~gitly@148.252.132.214)
[04:28:09] <donald1> File "pwnlib/tubes/process.py", line 86, in <module>                      class process(WinProcess if sys.platform.startswith("win") == True else None, tube):                  TypeError: Error when calling the metaclass bases                      cannot create 'NoneType' instances
[04:28:16] <donald1> I am going to try with pass
[04:28:35] <nedbat> donald1: it really would be better to avoid inheritance
[04:28:40] *** Joins: jbe (~jbe@lysator/root/jbe)
[04:29:04] <donald1> nedbat: it is necessary in my case
[04:29:07] <donald1> and why?
[04:29:32] <nedbat> donald1: because this code seems awkward.  why is it necessary?
[04:29:41] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[04:29:50] <donald1> I am going to try with object
[04:29:58] <donald1> nedbat ineed yes you are right
[04:29:58] *** Quits: stormdancer (~stormdanc@185.245.86.122) (Remote host closed the connection)
[04:30:02] *** Quits: fluiD (~fluiD@161.97.231.145) (Read error: Connection reset by peer)
[04:30:12] <donald1> I am just frustruated to spend too much time
[04:30:27] <donald1> I am just trying to make a code work I plan to make it better latter
[04:30:29] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[04:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[04:31:11] *** Quits: flokuehn (~flokuehn@i577BC63E.versanet.de) (Ping timeout: 265 seconds)
[04:32:39] *** Joins: flokuehn (~flokuehn@mue-88-130-54-069.dsl.tropolys.de)
[04:34:19] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[04:34:39] *** Joins: vlm (~vlm@user/vlm)
[04:34:58] *** Joins: y1n (~y1n@91.141.72.58.wireless.dyn.drei.com)
[04:35:01] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[04:35:13] <george-smiley> anybody have a moment to help a beginner with array/list input?
[04:35:17] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-162-211.red.bezeqint.net)
[04:36:12] <rannnn8888> "20180201 10:00:00" someone know what this format ?
[04:36:53] <donald1> george-smiley: me but you cna ask directly
[04:38:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[04:39:10] <george-smiley> https://dpaste.com/HZPBSGAUQ
[04:39:29] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:39:42] <george-smiley> I can't figure out how to get "totalScore" into the appropriate element of the list
[04:39:47] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:39:49] <donald1> twb plop
[04:39:53] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[04:39:58] <twb> hmmmm?
[04:40:14] <rannnn8888> .strftime("%Y%m%d %H:%M:%S") k thxx
[04:40:22] <parv> rannnn8888, Looks like ISO8601 with date sans separators (%Y%m%d %H:%M:%S)
[04:40:22] <sartan> that's a strange format that maybe somebody thought of typing it up, it's not standards-based
[04:40:47] <sartan> dateutil.parser.parse('20180201 10:00:00') should be able to parse it
[04:41:31] <donald1> I can not inherit of NoneType
[04:41:37] <donald1> twb
[04:41:46] <InPhase> dateutil.parser.parser works almost every time.  :)
[04:42:03] <InPhase> dateutil.parser.parse anyway
[04:42:05] <sartan> i've used it in success for a mongodb project where a 'datetime' field became 'whatever the user felt like formatting it as'
[04:42:13] <sartan> typeless my ass
[04:42:14] <twb> donald1: oh well I can't help you there.  I only understand type classes, not Python's weirdo obscure data classes.
[04:42:23] <donald1> george-smiley: did you try with totalScore[YOURELEMENTINDEX] or something like that
[04:42:48] <donald1> twb what dio you mean?
[04:43:24] <twb> donald1: I mean: ask someone else'
[04:43:26] *** Joins: Voidix (~MisterRog@ip-213-127-3-24.ip.prioritytelecom.net)
[04:44:03] <Voidix> How van you pickle self?
[04:44:28] <InPhase> pickle.dumps(self)
[04:44:42] <donald1> ok :(
[04:44:59] <donald1> do not use pickle it is not safe lol
[04:45:12] <InPhase> It's perfectly safe, if you use it smartly.
[04:45:19] <InPhase> Do not SHARE pickled data.
[04:45:37] <KirkMcDonald> Pickle's insecurity might be the least interesting of the many reasons to avoid it.
[04:45:56] <george-smiley> donald1: no, I haven't. I'm stuck on getting accumulated input from the inner loop into the classroom selected by the outer loop
[04:46:00] <donald1> InPhase the simple fact you store on a disk and reuse it leads to a priviledge escalation
[04:46:20] <grym> donald1: like a text file? :)
[04:46:25] <InPhase> This class, using pickle, is absolutely beautiful and I recommend it regularly to my group's data analysts.  It is enormously convenient, and perfectly safe in this usage.  https://bpa.st/HJPA
[04:46:27] <parv> :-)
[04:46:39] <Voidix> It's intended for a personal project...
[04:47:10] <InPhase> The application of such a class is saving settings to a shared filesystem for cluster analyses, so that every node can reload the saved settings upon launching a job.
[04:47:56] <KirkMcDonald> Whether this usage of pickle avoids pickle's issues depends entirely on how it is used and what is put inside of it.
[04:48:26] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[04:48:26] <InPhase> The core thing is you cannot compromise yourself.  Don't share pickled data.  :)
[04:49:05] <InPhase> Reloading your own pkl file is no more hazardous than loading your own .py file to run it.
[04:49:55] <KirkMcDonald> I think the more serious issue is what happens if you load a pickle after having updated the code which originally generated it.
[04:50:09] <grym> ^ that's the sad panda time
[04:50:13] <sartan> i quite like pickle, i've used it in strange ways in the past
[04:50:27] <sartan> there are better ways to marshal data, but pickle was just like 'here do this thing' and it worked beautifully
[04:51:07] *** Joins: nomic2 (~nomic@185.198.243.172)
[04:51:24] <parv> Are there other methods, besides pickle, to save & store Python data structure that are "safer"?
[04:51:45] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-162-211.red.bezeqint.net) (Quit: Client closed)
[04:51:48] <InPhase> KirkMcDonald: I think that just fails if you don't have a corresponding object anymore.  But the sensible workflows for pkl wouldn't hit this.  It's not a good data archive format, so there's no reason to load them again after changes have been made.
[04:52:01] <KirkMcDonald> InPhase: It just fails if you're lucky.
[04:52:02] <InPhase> corresponding class
[04:52:35] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:3c3b:5ff:2c65:95bc) (Ping timeout: 264 seconds)
[04:53:03] <KirkMcDonald> parv: This question is more interesting if you expand it beyond just "Python data structuress."
[04:53:06] <KirkMcDonald> structures*
[04:53:21] <InPhase> KirkMcDonald: Do you know a testcase that would do something worse?
[04:53:44] <KirkMcDonald> Something like protocol buffers address many of the issues with serializing data.
[04:53:48] <parv> KirkMcDonald, I am, right now, only interested in data structure. But do go on.
[04:53:53] <InPhase> KirkMcDonald: I've not encountered such, but I don't use it in any method that would introduce such an issue.
[04:54:16] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[04:54:37] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[04:55:02] <KirkMcDonald> InPhase: For instance, the unpickled object might be missing an attribute that it expect to exist. So the unpickling itself would succeed, but you'd get a failure somewhere further down the line, perhaps in a way that's difficult to connect back to the fact is was the pickle.
[04:55:07] <InPhase> parv: Generally start by asking what you actually want to save.  Saving "everything" is what gets pickle its problem with sharing.
[04:55:20] *** Joins: leftyfb (leftyfb@ubuntu/member/leftyfb)
[04:55:35] <leftyfb> How can I make this work? https://termbin.com/f9jw  The problem (other than my very beginner code) is I can't set the color codes as variables until "o" is defined but that doesn't get defined until after I call the color variable as part of the change_color function https://termbin.com/f9jw
[04:55:42] <leftyfb> is there some way to define RED = (o, 0, 0)  without first defining "o"  until RED is called?
[04:55:43] <InPhase> parv: When you want to save just meaningful data, there are good formats that contain that data, depending on what type of data it is.
[04:56:05] <KirkMcDonald> InPhase: Or, worse, the new version of the code retains an attribute of a given name but changes its meaning. So you unpickle the old object, and things just get *weird*.
[04:56:53] <KirkMcDonald> leftyfb: Define them as functions?
[04:57:10] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[04:57:33] *** Joins: nrg (~NRG@user/nrg)
[04:58:09] <leftyfb> KirkMcDonald: you mean each color?
[04:58:25] <KirkMcDonald> leftyfb: Yes.
[04:58:26] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[04:58:32] *** Joins: frost (~frost@59.71.244.189)
[04:59:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:59:28] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:59:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[04:59:46] <parv> leftyfb, you could define o to None or 0 before anything else
[04:59:47] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 264 seconds)
[04:59:47] *** brabrax_ is now known as brabrax
[05:00:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:00:21] <leftyfb> parv: I tried that, didn't seem to do what needed to be done. It didn't complain about it not being defined though
[05:01:04] <parv> leftyfb, Yes point was to avoid not being defined.
[05:01:12] *** Joins: fikran (~fikran@user/fikran)
[05:01:15] *** Quits: nrg (~NRG@user/nrg) (Client Quit)
[05:01:36] <leftyfb> parv: sure, but it didn't get passed to the call in the color_change function
[05:02:49] <parv> leftyfb, you would be better off passing o to RED function as mentioned earlier.
[05:03:01] <InPhase> KirkMcDonald: What I've seen in every test I've done is that the class data carries from the code until that point, while the object data comes from the pickle.  But this is sort of what I expect.  I suppose you could shoot yourself in the foot with some mismatches of that, but that would definitely be a usage error.  And you could probably make the same mistake with any sort of serialization as well.
[05:04:22] *** Joins: nrg (~NRG@user/nrg)
[05:04:25] <leftyfb> parv: I kinda get that, but not sure how to pass o to RED a spart of calling the color_change function when o is being defined and redefined within the color_change function
[05:04:31] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[05:04:58] <leftyfb> seems out of order or something
[05:05:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[05:05:07] <aphysically> I think the main thing I really want out of new python stuff right now is more syntactic sugar for type annotations (and luckily there's a ton of movement and work around this)
[05:05:11] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 264 seconds)
[05:05:29] <aphysically> ( + more typing support in general, I guess)
[05:05:45] <Macuser> wonder if I could use PyOrbital to calculate apparent angular speed of a sat
[05:05:49] *** Quits: alnr (~alnr@38.125.204.99) (Quit: Leaving)
[05:06:17] <parv> leftyfb, Say RED is a function. In color_change, pixles.fill( color( o ) )
[05:07:08] *** Quits: gitly (~gitly@148.252.132.214) (Ping timeout: 258 seconds)
[05:07:31] <leftyfb> do I redefine RED within the RED function to include the variable that gets passed to it? Or return the string?
[05:07:50] *** Gustavo6046_ is now known as Gustavo6046
[05:07:59] *** Joins: svet (~svet@47-220-181-211.gtwncmkt04.res.dyn.suddenlink.net)
[05:08:38] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 260 seconds)
[05:08:54] *** Joins: gitly (~gitly@85.255.232.130)
[05:08:56] *** Quits: INeedAHandle (~INeedAHan@211.192.133.205) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:09:09] <parv> leftyfb, Have the color functions return the tuple (remove the color tuple as currently defined)
[05:09:38] <parv> leftyfb, function RED( o ): ( o, 0, 0 )
[05:09:50] <Macuser> what the heck is a normalized velocity
[05:10:35] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[05:10:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:11:06] *** Quits: svet (~svet@47-220-181-211.gtwncmkt04.res.dyn.suddenlink.net) (Quit: Leaving)
[05:11:19] *** nomic2 is now known as nomic
[05:12:11] *** Quits: emf_ (~emf@2620:10d:c090:400::5:a662) (Ping timeout: 245 seconds)
[05:13:18] *** Quits: donald1 (~donald@88.5.131.77.rev.sfr.net) (Ping timeout: 260 seconds)
[05:13:38] <Macuser> it gets divided by 6378.135 whatever that is
[05:13:44] *** Joins: cjb94216 (~cjb@user/cjb)
[05:13:53] <Macuser> earth's radius
[05:14:21] <parv> Km, m(eter), m(ile)?
[05:14:41] <parv> Units, man!
[05:15:52] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[05:16:17] *** Quits: flyback (~flyback@2601:540:8201:1e60::5706) (Quit: Leaving)
[05:16:28] *** cjb94216 is now known as cjb
[05:18:28] *** Quits: jasper_ (~user@styria.daemonized.org) (Read error: Connection reset by peer)
[05:18:37] *** Quits: lyr (~lyr@user/lyr) (Quit: Ping timeout (120 seconds))
[05:18:53] *** Joins: jasper_ (~user@styria.daemonized.org)
[05:18:53] *** Joins: lyr (~lyr@user/lyr)
[05:19:16] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:19:17] <fluter> hi, what's the right tool to collect coverage data for python?
[05:19:22] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[05:19:27] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[05:19:28] <fluter> like gcov does
[05:19:29] *** Quits: yemel (~yemel@user/yemel) (Quit: Goodbye!)
[05:19:33] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[05:19:49] <nedbat> fluter: https://coverage.readthedocs.io
[05:20:09] <fluter> ok :) thanks
[05:20:18] *** Joins: yemel (~yemel@user/yemel)
[05:20:23] <Macuser> lol
[05:20:40] <leftyfb> parv: I'm missing a couple things here I think https://termbin.com/32wv
[05:21:08] <leftyfb> I know the hierarchy doesn't seem right to me
[05:21:27] *** Quits: gitly (~gitly@85.255.232.130) (Ping timeout: 265 seconds)
[05:21:29] <Macuser> parv you know what would be great, if this freakin python package would state units
[05:21:36] <Macuser> documentation nothign
[05:21:42] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 258 seconds)
[05:21:59] <parv> Macuser, Sorry for you find yourself there. :-(
[05:23:12] <parv> leftyfb, you would need to make OFF a function too
[05:23:13] *** Joins: gitly (~gitly@85.255.233.61)
[05:23:18] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[05:23:48] <parv> leftyfb, What do you think is missing? Got errors from python?
[05:24:02] *** Joins: flyback (~flyback@2601:540:8201:1e60::5706)
[05:25:27] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[05:25:51] *** Joins: Jigsy (~Jigsy@user/jigsy)
[05:26:59] <leftyfb> parv: https://termbin.com/55zi
[05:28:22] <parv> *ugh*
[05:28:22] <leftyfb> parv: calling color_change(RED) doesn't seem right to me since RED wants to define o, but we don't define o until inside of color_change
[05:28:59] <parv> leftyfb, Try with explicit return: function RED( o ) : return (o, 0, 0 )
[05:29:00] *** Joins: The_Jag_ (~The_Jag@host-95-252-246-6.retail.telecomitalia.it)
[05:29:16] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[05:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[05:30:36] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[05:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[05:32:03] *** Quits: The_Jag (~The_Jag@host-80-183-32-131.pool80183.interbusiness.it) (Ping timeout: 258 seconds)
[05:32:08] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Quit: Leaving)
[05:32:23] <Macuser> well that doesn't make sense
[05:32:38] <Macuser> I got the xyz velocities in km/s for a starlink sat and it's supposed to be around 7 km/s
[05:32:52] <Macuser> i took the magnitude sqrt(x^2 + y^2 + z^2) and got around 3
[05:33:03] <Macuser> yes it's unnormalized
[05:33:05] <leftyfb> parv: THAT WORKED!
[05:33:27] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[05:33:33] <parv> leftyfb, Great
[05:33:35] *** Quits: gitly (~gitly@85.255.233.61) (Ping timeout: 258 seconds)
[05:34:56] <parv> leftyfb & everybody else: Apologies for using "function" instead of "def" to define a function
[05:35:29] <leftyfb> parv: coming from the bash world, I'm ok with it :)
[05:35:33] *** Joins: gitly (~gitly@148.252.132.214)
[05:37:38] <parv> leftyfb, As you saw one can pass a function to other function where one case set up the arguments for the first function & run it.
[05:37:48] <parv> s/case/can/
[05:39:50] <leftyfb> yeah, that one is a bit of a mind-f for me
[05:39:57] *** fluffyballoon is now known as fluffyballon`
[05:40:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:40:17] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:40:45] <leftyfb> parv: ok, onto my next objective. I want to remove all the breaks and have it pulse each color that is switched on, one after the other. The problem is, it does that but then there's a delay before it loops around again
[05:42:44] *** Joins: svet (~ec2-user@ec2-3-144-179-53.us-east-2.compute.amazonaws.com)
[05:43:25] <parv> leftyfb, I can't help you there with the delay on the next iteration (no experience with Python on Raspberry or other microelectronics)
[05:43:53] <leftyfb> I don't think it's hardware related. I think there's a delay in the code
[05:44:35] <Macuser> oh maybe outdated tle
[05:45:02] *** Quits: gitly (~gitly@148.252.132.214) (Ping timeout: 260 seconds)
[05:45:17] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:45:35] <Macuser> nope
[05:45:41] <leftyfb> tle?
[05:46:07] <parv> Top Level Emissions
[05:46:22] <parv> ... ?
[05:46:35] *** Quits: zepolen (~zepolen@2a02:587:8600:1ad4:755e:28e3:599c:5e55) (Quit: Konversation terminated!)
[05:46:46] <Macuser> two line element
[05:46:53] *** Joins: gitly (~gitly@148.252.128.190)
[05:46:56] <Macuser> for orbital predictions
[05:47:00] *** fluffyballon` is now known as fluffyballoon
[05:47:02] <Macuser> for satellites
[05:52:03] <leftyfb> parv: ok, I noticed it was the else: at the end it was still running through
[05:52:37] <parv> leftyfb, Good eye
[05:53:01] <leftyfb> nope, just stuck print statements everywhere to see what was running :)
[05:54:04] <leftyfb> ok, so I guess I can't do an else? Do I have to say if each color is off?
[05:54:15] <parv> leftyfb, What is updated code?
[05:55:07] <leftyfb> https://termbin.com/x394
[05:56:11] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:56:15] <parv> leftyfb, That "else" goes with "if GPIO.input(19)==0" -- if that is not the case, then OFF() will be callled
[05:56:18] *** Quits: svet (~ec2-user@ec2-3-144-179-53.us-east-2.compute.amazonaws.com) (Quit: leaving)
[05:56:27] *** Joins: interweb (~interweb@user/interweb)
[05:56:49] <leftyfb> ah
[05:57:05] *** Quits: interweb (~interweb@user/interweb) (Client Quit)
[05:57:22] <leftyfb> hm
[05:57:35] *** Joins: svet (~ec2-user@ec2-3-144-179-53.us-east-2.compute.amazonaws.com)
[05:57:52] *** Quits: Seiryu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:59:15] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[05:59:26] *** Joins: zepolen (~zepolen@2a02:587:8600:1ad4:bf3b:2e33:52f2:979d)
[05:59:35] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[06:00:59] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 264 seconds)
[06:02:52] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[06:04:40] <bilb_ono> with python logs, is there a way to filter them using grep? like python something.py | grep DEBUG
[06:05:25] <leftyfb> parv: very hacky. Got a better way? https://termbin.com/nwsp
[06:06:23] *** Joins: whatsupdoc (~whatsupdo@148.64.18.102)
[06:07:07] <KirkMcDonald> bilb_ono: By default, the logging module writes to stderr, so you'd need to redirect stderr to whatever.
[06:07:20] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Quit: leaving)
[06:07:56] <bilb_ono> ok thanks I think I need to make my own logger
[06:08:25] <parv> leftyfb, That lone else-OFF was irritating me, so : https://termbin.com/ptch
[06:09:07] <parv> leftyfb, input() & color_change() are placeholders;
[06:10:02] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[06:10:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[06:10:39] <parv> leftyfb, note color_fx `dict`
[06:11:10] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:11:53] <parv> leftyfb, ... should have renamed that to pin_color_map
[06:11:55] *** Quits: fluffyballoon (~user@131.93.208.196) (Ping timeout: 258 seconds)
[06:12:02] *** Gustavo6046_ is now known as Gustavo6046
[06:13:15] <leftyfb> parv: what do you mean placeholder? I notice color_change doesn't have the timing for pulsing. val is defined but not called anywhere(built in variable?) Not sure about input
[06:13:44] <leftyfb> yeah, I figured there was some sort of dictionary solution to all the pin/color/code mapping, just not familiar with that stuff yet
[06:14:02] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:14:03] <leftyfb> not sure how to integrate your code with what I've got
[06:14:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[06:15:10] <leftyfb> oh, ok. I gotta put my color_change function in there wholesale. I think I got that much
[06:15:20] <parv> leftyfb, Right
[06:15:31] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 245 seconds)
[06:15:50] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Excess Flood)
[06:16:01] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[06:16:29] <parv> leftyfb, minor improvement over the earlier : https://termbin.com/al0xs -- better variable name & comments
[06:16:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[06:17:59] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[06:18:16] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:18:31] <parv> leftyfb, "input" in mine is really "GPIO.input()"
[06:19:12] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[06:24:23] <leftyfb> parv: I'm not sure what to do about input( _ )
[06:24:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:25:00] <leftyfb> for loop ?
[06:25:16] <parv> leftyfb, remove "input" function definition from my example; replace its use with "GPIO.input()"
[06:27:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:27:22] <parv> leftyfb, What about for loop?
[06:27:57] <leftyfb> I think I got it
[06:28:06] <leftyfb> translating it all now then I'll tet :)
[06:28:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[06:28:49] <parv> leftyfb, post a pi'ture of the lights if you can
[06:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[06:30:38] <parv> leftyfb, dict.items() returns key-value pair on each iteration; "pin, color" are assigned those values
[06:30:40] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[06:30:53] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[06:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:31:34] <leftyfb> ok, it's sort of working. But there's a delay for each color regardless if it's lit or not
[06:31:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:33:21] <parv> leftyfb, How does your code look now?
[06:33:36] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[06:33:38] <leftyfb> as in, I think it's "pulsing" off between each color
[06:33:45] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[06:34:05] <leftyfb> https://termbin.com/apu5l
[06:35:11] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:7557:7aab:4b9d:9fbc) (Read error: Connection reset by peer)
[06:35:41] <leftyfb> this is cycling through all of the pin/colors and if it's set to off, it "pulses" off. We don't want that. OFF should only happen if they are all set to 1 not stick OFF for each pin/color that is 1
[06:36:04] <leftyfb> "pulses" off for that pin
[06:36:35] <parv> leftyfb, Earlier OFF() was called only when pin for WHITE was not set. Now OFF() is called for all.
[06:36:50] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[06:37:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[06:37:23] <leftyfb> right, it's being called every time a pin is not set. We only want it called once if we cycle through all of the pins and they are all not set
[06:38:05] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[06:38:56] <whatsupdoc> Does a Counter() object retain order?
[06:39:55] <parv> leftyfb, In "if GPIO.input( pin ) == 0:" block, add "continue" after "color_change()" , to skip else block if any pin you care about is not set
[06:40:17] <leftyfb> parv: I got an easier way that seems to be working
[06:40:28] <parv> leftyfb, OK, tell me
[06:40:34] *** Quits: gitly (~gitly@148.252.128.190) (Ping timeout: 260 seconds)
[06:40:40] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 258 seconds)
[06:40:47] <leftyfb> https://termbin.com/du7au
[06:41:03] <leftyfb> which means we can just remove OFF completely
[06:42:15] <leftyfb> one more task though. I recall python has a way of trapping it being killed by CTRL+C and cleaning up after itself? Can I also have it "pixels.fill(( 0, 0, 0))" if we are killed?
[06:42:16] *** Joins: gitly (~gitly@85.255.234.27)
[06:42:17] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:42:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:42:27] <leftyfb> just so it dies with the lights off
[06:42:31] *** Joins: pycurious (~Adium@user/pycurious)
[06:42:52] <parv> leftyfb, That does not do " We only want it called once if we cycle through all of the pins and they are all not set" -- only thing done there is remove the time to call the function & sleep
[06:44:53] <leftyfb> right, which is fine as it's not noticeable. The OFF function took too much time which caused the delay for every pin not set
[06:45:12] <parv> leftyfb, Put the "while" loop in try-except
[06:45:41] <parv> ... make that try-except-finally
[06:46:04] <parv> ... turn off the lights in finally block
[06:46:15] *** Quits: kujo (~kujo@188.166.12.52) (Remote host closed the connection)
[06:47:07] <leftyfb> ok, the except can just be a print() or whatever right?
[06:47:34] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 258 seconds)
[06:47:57] <parv> leftyfb, Yes
[06:48:03] *** Joins: kujo (~kujo@188.166.12.52)
[06:48:20] *** Joins: pycurious (~Adium@user/pycurious)
[06:48:26] <leftyfb> perfect!
[06:48:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[06:48:46] <parv> leftyfb, Be sure to print the exception (if not the whole stack trace) so that you would not what error was it
[06:48:58] <parv> s/would not/would know/
[06:49:10] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:49:52] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[06:51:10] *** Quits: sbrown (~sbrown@66.44.16.44) (Quit: Leaving…)
[06:51:31] <leftyfb> parv: https://termbin.com/bfri
[06:53:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[06:53:52] <parv> leftyfb, You should catch the error that you actually care about. In you case that would be KeyboardInterrupt
[06:54:02] *** Joins: pycurious (~Adium@user/pycurious)
[06:54:26] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:54:48] <parv> leftyfb, Else you may miss syntax or type rather error easily
[06:55:05] <parv> s/rather error/errors rather/
[06:55:10] <leftyfb> isn't that what I did?
[06:55:34] <leftyfb> https://termbin.com/nir2
[06:55:58] <parv> leftyfb, You had "except Exception ..." not "except Keyboardnterrupt"
[06:56:31] <parv> s/except Keyboardnterrupt/except KeyboardInterrupt/
[06:57:10] <leftyfb> ah, that looks cleaner :)
[06:57:23] *** Quits: whatsupdoc (~whatsupdo@148.64.18.102) (Ping timeout: 256 seconds)
[06:57:36] <parv> Exception is mother of almost all exceptions. It does not tell what kind of errors are expected
[06:58:41] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 258 seconds)
[06:59:23] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[06:59:27] <parv> leftyfb, So the "except" block would be "except KeyboardInterrupt as ex: print( "Program halted due to keyboard interrupt: %s" % ex )"
[06:59:58] <parv> I did not mean to leave of ".. as ex" earlier
[07:00:05] <parv> s/of/off/
[07:01:17] <leftyfb> nothing shows up after interrupt:
[07:01:28] <leftyfb> ^CProgram halted due to keyboard interrupt:
[07:01:33] <leftyfb> that is the entire output
[07:02:12] <parv> leftyfb, What is "except" line
[07:02:46] <queue[m]> what bis python programming
[07:02:50] <leftyfb> except KeyboardInterrupt as ex: print( "Program halted due to keyboard interrupt: %s" % ex )
[07:02:57] <queue[m]> s/bis/is/
[07:03:21] <leftyfb> queue[m]: https://www.python.org/
[07:03:49] <queue[m]> that was a joke at "what is except", sorry it wasnt a good one
[07:03:56] <leftyfb> oh :)
[07:06:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[07:08:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[07:08:48] <parv> leftyfb, Interesting, to say the least. Well then, seems like there is no sense in assigning to a variable. You could just print the message about interruption. That reduces the "except" block to: "except KeyboardInterrupt: print( "Program halted due to keyboard interrupt" )
[07:08:55] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[07:09:01] * parv learned something new today
[07:09:05] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:10:03] *** Quits: Yasumoto (~Yasumoto@136.152.37.118) (Read error: Connection reset by peer)
[07:10:33] *** Joins: fikran (~fikran@user/fikran)
[07:10:44] <leftyfb> parv: thanks for all the help. I need to work on slimming down the OS and making it read-only. If I end up making a video of it I'll link it to you
[07:10:58] <parv> leftyfb, Lovely!
[07:12:37] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[07:13:24] *** Joins: pycurious (~Adium@user/pycurious)
[07:14:15] *** Joins: Yasumoto (~Yasumoto@136.152.37.118)
[07:15:07] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[07:15:31] *** Quits: nocko (sid501219@user/nocko) (Ping timeout: 245 seconds)
[07:15:56] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Ping timeout: 258 seconds)
[07:15:59] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 264 seconds)
[07:16:19] *** Quits: Tiago_Paolini (sid172748@id-172748.hampstead.irccloud.com) (Ping timeout: 258 seconds)
[07:16:21] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 245 seconds)
[07:16:22] *** Quits: dez_ (uid92154@user/dez) (Ping timeout: 252 seconds)
[07:16:35] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 264 seconds)
[07:16:42] *** Quits: pierrepaul (sid504261@id-504261.uxbridge.irccloud.com) (Ping timeout: 258 seconds)
[07:17:10] *** Joins: elkclone (~elkclone@user/elkclone)
[07:17:11] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 245 seconds)
[07:17:11] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (Ping timeout: 245 seconds)
[07:17:11] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Ping timeout: 264 seconds)
[07:17:24] *** Quits: Dotz0cat (~Dotz0cat@h113.245.19.98.static.ip.windstream.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:17:36] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[07:17:37] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[07:17:45] *** Quits: lidless (uid523173@id-523173.tinside.irccloud.com) (Ping timeout: 260 seconds)
[07:17:45] *** Quits: raydeeam (uid325131@dgplug/raydeeam) (Ping timeout: 260 seconds)
[07:17:47] *** Quits: joel135 (sid136450@id-136450.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[07:17:56] *** Joins: Sheilong (uid293653@ilkley.irccloud.com)
[07:18:05] *** Joins: shawwwn (uid6132@helmsley.irccloud.com)
[07:18:05] *** Joins: coldmountain (sid484352@helmsley.irccloud.com)
[07:18:10] *** Joins: nocko (sid501219@user/nocko)
[07:19:32] *** Joins: raydeeam (uid325131@dgplug/raydeeam)
[07:19:36] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[07:19:38] *** Joins: pierrepaul (sid504261@uxbridge.irccloud.com)
[07:19:38] *** Joins: Tiago_Paolini (sid172748@hampstead.irccloud.com)
[07:19:40] *** Joins: Vonter_ (~Vonter@user/vonter)
[07:19:40] *** Joins: Memory (sid459764@user/memory)
[07:19:41] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[07:19:43] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[07:19:45] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[07:19:48] *** Joins: r0bby (r0bby@user/r0bby)
[07:19:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:21:36] *** Joins: Dotz0cat (~Dotz0cat@h113.245.19.98.static.ip.windstream.net)
[07:22:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:23:59] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[07:24:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:24:44] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[07:26:47] *** Quits: Dotz0cat (~Dotz0cat@h113.245.19.98.static.ip.windstream.net) (Ping timeout: 264 seconds)
[07:27:03] *** Joins: nfc_ (nfc@tilde.institute)
[07:27:09] *** Joins: Dotz0cat (~Dotz0cat@h112.238.31.71.dynamic.ip.windstream.net)
[07:29:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[07:30:35] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[07:30:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:30:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Client Quit)
[07:31:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:24] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:37:56] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[07:39:44] *** Quits: subopt (~subopt@2603-8081-2302-459a-440b-995f-5377-b6c9.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:40:09] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[07:40:34] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 252 seconds)
[07:41:41] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: So long king bowser!)
[07:42:00] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[07:44:36] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Remote host closed the connection)
[07:45:54] *** Quits: Linux77 (~Linux7_7@186.233.183.1) (Ping timeout: 260 seconds)
[07:47:38] *** graphitemaster_ is now known as graphitemaster
[07:49:22] *** Quits: Voidix (~MisterRog@ip-213-127-3-24.ip.prioritytelecom.net) ()
[07:52:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[07:52:49] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[07:53:15] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[07:56:09] *** Gustavo6046_ is now known as Gustavo6046
[07:56:39] *** Joins: whatsupdoc (~whatsupdo@148.64.20.27)
[07:57:38] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[07:59:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:03:33] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:04:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[08:04:29] *** Joins: whatsupdoc100 (~whatsupdo@148.64.20.12)
[08:05:48] *** Quits: whatsupdoc100 (~whatsupdo@148.64.20.12) (Client Quit)
[08:06:06] *** Joins: whatsupdoc38 (~whatsupdo@148.64.20.12)
[08:06:29] <whatsupdoc38>  /nickserv identify whatsupdoc torious
[08:07:39] *** Quits: whatsupdoc (~whatsupdo@148.64.20.27) (Ping timeout: 256 seconds)
[08:07:48] <TML> whatsupdoc38: Whoops
[08:07:55] <TML> you'll want to change that
[08:07:56] <whatsupdoc38> lmao
[08:07:59] <whatsupdoc38> lol
[08:08:48] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[08:09:25] <Mindscape> also hoho
[08:09:31] *** whatsupdoc38 is now known as whatsupdoc
[08:09:43] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:09:46] <whatsupdoc> I don't get it
[08:10:10] <TML> you don't get that you typed your nickserv password where the whole channel could see it?
[08:10:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:10:38] <whatsupdoc> i don't get it?
[08:10:59] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:11:15] <TML> 22:36:29     whatsupdoc38 |  /nickserv identify whatsupdoc torious
[08:11:26] <whatsupdoc> ok?
[08:13:36] <whatsupdoc> thank goodness I don't use the same password for all of my other more important accounts *brb*
[08:13:55] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[08:13:56] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[08:14:04] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[08:14:16] *** Joins: portalrat (~portalrat@user/portalrat)
[08:14:23] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[08:15:53] <BrenBarn> heh
[08:17:56] <whatsupdoc> I find people's passwords interesting
[08:18:13] <whatsupdoc> #python-offtopic
[08:21:05] *** Joins: rexbinary_ (~rexbinary@user/rexbinary)
[08:21:32] *** Joins: djangoaddict (~djangoadd@2601:8c:c100:6820:2db5:4277:b2bb:573d)
[08:21:50] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 260 seconds)
[08:21:50] *** rexbinary_ is now known as rexbinary
[08:23:25] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:24:02] *** Quits: cjb (~cjb@user/cjb) ()
[08:24:13] *** Quits: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42) (Read error: Connection reset by peer)
[08:24:34] *** Joins: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42)
[08:27:14] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 258 seconds)
[08:28:28] *** Joins: stranac (~stranac@195.29.239.126)
[08:30:06] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:30:07] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: So long king bowser!)
[08:30:24] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[08:30:34] *** Joins: c10l (~c10l@user/c10l)
[08:30:54] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:34:08] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[08:34:22] *** Joins: upsala (~zcb@185.213.155.160)
[08:34:26] *** Joins: SuperLag (~akulbe@user/superlag)
[08:38:00] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[08:39:13] *** Joins: portalrat (~portalrat@user/portalrat)
[08:40:01] *** Joins: seednode4 (~seednode@user/seednode)
[08:40:58] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 260 seconds)
[08:41:03] *** seednode4 is now known as seednode
[08:41:04] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 252 seconds)
[08:42:12] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:43:32] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:45:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[08:46:14] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:48:47] *** Joins: yeirr (~yeirr@user/yeirr)
[08:59:28] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[09:01:21] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[09:02:19] *** Joins: shangxiao (~davids@124.187.230.212)
[09:03:30] *** Quits: src (~src@user/src) (Quit: Leaving)
[09:03:59] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[09:04:35] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[09:04:56] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Remote host closed the connection)
[09:13:06] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:17:03] *** Quits: Mindscape (~Lindis@user/lindis) (Quit: remote)
[09:17:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[09:19:53] *** Joins: fikran (~fikran@user/fikran)
[09:21:40] *** Quits: Sheilong (uid293653@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[09:24:23] *** Quits: djangoaddict (~djangoadd@2601:8c:c100:6820:2db5:4277:b2bb:573d) (Quit: Client closed)
[09:26:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[09:26:18] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[09:28:07] *** Joins: mexen (uid495612@user/mexen)
[09:29:12] *** Parts: _genuser_ (2fb823e8@67.205.143.82) (The Lounge - https://thelounge.chat)
[09:29:18] *** Joins: manti7 (~manti7@176.10.104.94)
[09:29:23] *** Joins: control (~v1@user/control)
[09:29:57] <control> hello, i have 6 cores cpu. currently with multiprocessing it does 6 random jobs. theres any way i could do 1 job with a power of 6 cores?
[09:30:51] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[09:31:21] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:31:22] *** Quits: y1n (~y1n@91.141.72.58.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[09:32:44] <Juhaz> ... what?
[09:35:48] <bancroft> control: not really?
[09:35:54] <bancroft> control: why would you want that?
[09:36:44] <control> to increase speed of the loop
[09:37:02] <supakeen> You've accidentally stumbled in one of the most diverse and deep subjects in computer science :)
[09:37:11] <supakeen> The answer to that question isn't easy.
[09:38:04] <b0nn> hrm, the answer is easy as! It's "It depends"
[09:38:12] <supakeen> Generally splitting the job up into smaller parts and dividing them over several processes is a good way to approach that problem.
[09:38:35] <control> i was thinking about the splitting the jobs
[09:39:20] <supakeen> How you do that and how you later merge the work again is hard :)
[09:39:32] *** Joins: carl- (~carl-@185.103.188.130)
[09:39:40] *** Joins: brookesy66 (~will@123-243-15-48.tpgi.com.au)
[09:39:54] *** Joins: mcon (~Thunderbi@host-79-55-31-159.retail.telecomitalia.it)
[09:40:03] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[09:40:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:40:16] <control> supakeen: indeed
[09:40:25] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 252 seconds)
[09:40:25] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[09:40:47] <doc> control: you can't do one job with 6 cores any more than you can grow one baby in the womb quicker with 6 women.
[09:40:51] *** Joins: Wulf (~Wulf@user/wulf)
[09:40:58] *** Quits: agireud (~agireud@136.49.88.21) (Ping timeout: 252 seconds)
[09:41:11] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 264 seconds)
[09:41:26] *** Joins: agireud (~agireud@136.49.88.21)
[09:41:53] *** Joins: slavfox (~slavfox@93.158.232.111)
[09:42:06] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[09:43:41] <control> doc: well, i disagree about 6 women :D
[09:43:42] <b0nn> doc, but you can grow 6 babies in 6 women faster than 6 babies in one woman
[09:44:03] <b0nn> er, assuming septuplets is off the table
[09:44:06] <doc> control: you can disagree, but then that's two theories you'd have wrong
[09:44:14] <doc> b0nn: but he's asking about one baby, not 6
[09:44:34] <b0nn> well, it depends what's happening inside the loop
[09:44:51] * doc suspects b0nn is trying to be contrarian :)
[09:45:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[09:45:12] <mcon> I am having problems with `p = subprocess.Popen(['/usr/bin/sudo', '/usr/sbin/tcpdump',  ...])`; specifically I seem unable to `p.terminate()` it because of "PermissionError: [Errno 1] Operation not permitted". This is weird because I can kill the same process if I start it from shell, with plain `CTRL-C`.
[09:45:20] <b0nn> I mean, that's an accusation made by someone whose not across the discussion at hand
[09:45:41] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:45:45] <doc> not across?
[09:46:07] <b0nn> you can read, well done
[09:46:11] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:46:22] <doc> alrighty then...
[09:46:23] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[09:46:30] * doc does something else 
[09:46:35] *** Quits: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42) (Quit: Leaving)
[09:46:40] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:13] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: It's too late now.)
[09:47:19] *** Joins: seednode4 (~seednode@user/seednode)
[09:47:35] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:49:06] *** Joins: p-i- (~Ohmu@223.206.147.206)
[09:49:59] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[09:50:28] <bookworm> mcon: shell=True?
[09:50:38] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[09:51:12] <twb> b0nn: sextuplets.  'sept-' is 7
[09:51:41] <bookworm> hex*
[09:51:44] <parv> mcon, Try to trace -- ktrace, strace, what have you -- the python run to see what exactly is causing the permission error
[09:51:45] <bookworm> not sex
[09:51:59] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[09:52:04] <twb> The version I have written down is this: "It takes nine months for a woman to gestate a child.  Like it or not, you cannot produce a child in a month by assigning nine women to the project, nor can I arrange the production of a child if all you offer me as resources is five hundred chickens."
[09:52:16] <bookworm> parv: the permission error is trying to send a signal to a user that's not you
[09:52:21] <b0nn> twb: heh, I knew it was one of them but didn't want to check first
[09:52:31] <parv> bookworm, Ah.
[09:52:39] <bookworm> real vs effective user id and all
[09:52:43] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[09:53:14] <twb> bookworm: greek vs. latin.  >shrug<
[09:53:39] <bookworm> yeah sure. Mine's the chemistry version
[09:53:53] <twb> https://en.wiktionary.org/wiki/quintuplet#See_also
[09:54:27] <parv> bookworm, So why does shell version is easily terminated?
[09:54:40] <supakeen> That's not entirely how sudo works, you send the signal to sudo which relays it to the forked process (generally).
[09:54:56] <supakeen> (I can kill sudo-started subprocesses with .terminate, .send_signal)
[09:55:33] <twb> supakeen: which implementation of sudo is that?
[09:55:43] <bookworm> is there more than one?
[09:55:50] <bookworm> BSD has doas
[09:55:51] *** Joins: _xor (~xor@72.49.199.147)
[09:55:54] <supakeen> The one in ubuntu.
[09:56:03] <supakeen> However, it seems this behaviour has varied between sudo versions.
[09:56:20] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[09:56:21] <bookworm> probably configurable too
[09:56:40] <twb> supakeen: hrm, it seems you are right, at least for "sudo --background sleep infinity"
[09:56:50] *** Joins: dvx (~dvx@185.63.97.64)
[09:56:50] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[09:57:11] *** Joins: _xor (~xor@72.49.199.147)
[09:57:32] <twb> I did not expect sudo process to continue existing after the command started
[09:57:38] <supakeen> mcon: Can you try adding `subprocess.Popen(..., preexec_fn=os.setpgrp)` to see if that helps?
[09:57:49] <supakeen> twb: It depends on a bunch of variables (like, is there a pty, etc).
[09:57:58] <supakeen> sudo is quite ... complex.
[09:58:23] <supakeen> For the os.setpgrp it seems some versions of sudo won't relay signals from the same process group.
[09:58:30] <twb> "Process model There are two distinct ways sudo can run a command."  TIL
[09:58:37] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[09:59:00] * parv wanted to try an example sudo subprocess but then realized I have not it installed due to seemingly obtuse configuration
[09:59:10] <twb> "if the policy plugin does not define a close function, sudo will execute the command directly instead of calling fork(2) first" <-- this is the model I was expecting
[09:59:37] <twb> supakeen: this is why I prefer really(1)
[09:59:58] <twb> supakeen: it's 200 lines of "if you can write to /etc/inittab, then run this as root, otherwise exit"
[10:00:43] <twb> OTOH sudo can read its policy from LDAP
[10:01:02] * parv also can't properly write in 3rd person :-|
[10:01:19] *** Quits: akimbo (~akimbo@customer-145-40-27-9.stosn.net) (Ping timeout: 252 seconds)
[10:02:46] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:03:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:05:47] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 264 seconds)
[10:06:46] *** Quits: whatsupdoc (~whatsupdo@148.64.20.12) (Quit: Client closed)
[10:06:50] <mcon> bookworm: I currently have no `shell=True`, Should I try it?
[10:07:21] <bookworm> might be an option, but try supakeen's suggestions first
[10:08:26] *** Joins: Vonter_ (~Vonter@user/vonter)
[10:09:06] <parv> .oO( Is there not already a module wrapper around sudo with all the "sane" defaults? )
[10:11:32] *** Joins: Raf|Man (~RafMan@213-66-107-148-no537.tbcn.telia.com)
[10:12:39] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[10:13:03] <mcon> parv: strace is not very informative: "kill(934313, SIGTERM)                   = -1 EPERM (Operation not permitted)"
[10:14:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:14:17] <parv> mcon, Indeed. Thanks for humoring me.
[10:15:48] *** Joins: rendar (~rendar@user/rendar)
[10:17:12] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:9dc6:306d:758f:4554)
[10:17:38] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 258 seconds)
[10:17:56] *** Joins: Trieste (T@user/pilgrim)
[10:18:15] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:18:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[10:19:20] *** Quits: jpic (~jpic@82.142.29.22) (Ping timeout: 265 seconds)
[10:20:19] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[10:21:02] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[10:21:06] *** Joins: jpic (~jpic@82.142.4.78)
[10:21:33] <mcon> supakeen: this does not change anything.
[10:23:56] <mcon> NOTE: while the program is running I *cannot* kill it with `killall sudo` (sudo(978928): Operation not permitted). so behavior is consistent. What is different if I start it from shell and then I issue CTRL-C ?
[10:25:02] *** Quits: shangxiao (~davids@124.187.230.212) (Ping timeout: 260 seconds)
[10:26:16] <mcon> I "kind of" solved the problem wrappping `pr=terminate()` in `try` and issuing: `subprocess.run(['/usr/bin/sudo', '/bin/kill', str(pr.pid)])` on error... but I'm unhappy with that :(
[10:26:44] *** Joins: ihristov (~ihristov@85.187.46.226)
[10:28:37] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[10:28:41] *** Joins: whatsupdoc (~whatsupdo@148.64.20.12)
[10:28:42] *** Joins: yeirr (~yeirr@user/yeirr)
[10:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[10:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:33:08] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:38:11] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 264 seconds)
[10:40:17] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:40:28] *** Joins: kosh (~kosh@user/kosh)
[10:40:43] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:41:32] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:41:43] *** Joins: shangxiao (~davids@124.187.230.212)
[10:43:22] *** Joins: palasso (~palasso@user/palasso)
[10:44:19] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[10:45:35] *** Yugi is now known as Hunterkll
[10:46:31] *** Joins: Meteorhead (~Meteorhea@165.225.77.51)
[10:47:12] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:48:11] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[10:49:05] *** Joins: palasso (~palasso@user/palasso)
[10:51:34] *** Joins: ub (~Thunderbi@178.115.56.221.wireless.dyn.drei.com)
[10:51:48] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:52:21] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[10:56:35] *** Quits: Raf|Man (~RafMan@213-66-107-148-no537.tbcn.telia.com) (Remote host closed the connection)
[10:59:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:00:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:01:43] *** dcaro_away is now known as dcaro
[11:01:58] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[11:02:25] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:02:58] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:03:43] *** Joins: upsala (~zcb@185.213.155.160)
[11:03:47] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[11:04:09] *** Joins: chele (~chele@user/chele)
[11:05:13] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:05:37] *** Joins: seednode4 (~seednode@user/seednode)
[11:06:18] *** Joins: soulisson (~soulisson@user/soulisson)
[11:07:27] *** Joins: akimbo (~akimbo@customer-145-40-27-9.stosn.net)
[11:10:20] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:10:54] *** Quits: soulisson (~soulisson@user/soulisson) (Ping timeout: 265 seconds)
[11:11:12] *** Joins: raxor2k (~raxor2k@78.158.254.247)
[11:13:43] *** Quits: sartan (~sartan@user/sartan) (Quit: WeeChat 1.9.1)
[11:15:06] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:15:30] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[11:16:17] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Remote host closed the connection)
[11:16:27] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[11:16:44] *** Joins: soulisson (~soulisson@user/soulisson)
[11:16:45] *** Joins: JanC (~janc@user/janc)
[11:17:52] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[11:17:57] <soulisson> Hello. I need some help using signal.sigwaitinfo for a signal sent from a process to itself
[11:18:03] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[11:19:54] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[11:24:21] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:25:36] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[11:26:03] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:26:16] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[11:26:56] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[11:27:17] *** Joins: brelod (~me@90.244.150.142)
[11:27:23] *** Joins: Tas-sos (~Tas-sos@ppp141237065163.access.hol.gr)
[11:27:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[11:28:57] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[11:29:14] *** Joins: fikran (~fikran@user/fikran)
[11:30:07] *** Joins: arinov (~arinov@213.194.126.155)
[11:30:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[11:31:01] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:32:12] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:32:44] *** Joins: vladoski (~vladoski@2001:b07:add:d406:3aa3:8d5e:6be4:3a09)
[11:34:09] *** Joins: Ilyu (~quassel@78.202.228.230)
[11:34:37] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[11:35:24] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:14] *** Joins: horseface (~horseface@user/horseface)
[11:38:18] <horseface> hello
[11:39:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:27] <horseface> which is a great way of getting back int programming, i have not touched it in ten years, although i was quite proficient in the field. so i would like to get back into the swing of things, mentally, and etc.
[11:39:39] <horseface> i have decided to start with using python...
[11:40:03] <horseface> now which would be a book which you would recommend for purposes such as these?
[11:40:05] <horseface> :-)
[11:41:10] *** Joins: mei6 (~mei@user/mei)
[11:41:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:42:39] <whatsupboy> horseface:  think python automate boring stuff with python are usually recommended her along with docs tutorial on topic
[11:42:50] <whatsupboy> here*
[11:43:14] <horseface> i see...
[11:43:17] <horseface> for example.
[11:43:32] <whatsupboy> see the topic and check all urls there
[11:44:15] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[11:44:24] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:44:39] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[11:46:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[11:48:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:49:32] *** Joins: ub1 (~Thunderbi@91.141.50.28.wireless.dyn.drei.com)
[11:49:35] *** Quits: ub (~Thunderbi@178.115.56.221.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[11:49:35] *** ub1 is now known as ubert
[11:50:16] *** Quits: vladoski (~vladoski@2001:b07:add:d406:3aa3:8d5e:6be4:3a09) (Ping timeout: 252 seconds)
[11:50:32] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 265 seconds)
[11:52:17] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[11:53:45] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:53:47] *** Joins: Naan (~Naan@user/naan)
[11:53:56] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[11:54:15] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[11:54:18] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:54:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[11:55:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:56:10] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:59:29] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[12:01:02] *** Joins: Hazza (~Haxxa@122.199.45.48)
[12:01:17] *** Joins: zaquest (~notzaques@5.128.210.178)
[12:01:21] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 245 seconds)
[12:02:20] *** Joins: shad (~shad@user/shad)
[12:02:24] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Remote host closed the connection)
[12:02:48] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[12:03:20] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[12:04:10] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:05:26] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Remote host closed the connection)
[12:05:31] *** Quits: FireFish5000 (~FireFish5@user/firefish5000) (Ping timeout: 245 seconds)
[12:05:51] *** Joins: plastico (~plastico@neomutt/plastico)
[12:06:11] *** Joins: FireFish5000 (~FireFish5@user/firefish5000)
[12:06:29] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[12:07:25] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Remote host closed the connection)
[12:09:50] *** Quits: Hazza (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[12:10:31] <bookworm> mcon: the difference is how sudo starts, if a pty is attached which means it sets itself up as a process leader and relays signals, which it may or may not do depending on the current env. There's some info in the manpage of sudo
[12:10:35] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[12:11:20] <Dev0n> hey, when using sqlalchemy binds (https://flask-sqlalchemy.palletsprojects.com/en/2.x/binds/), is it possible to specify which bind to use during querying data?
[12:11:45] <Dev0n> I have two postgres endpoints writer and reader, I want to route all select queries through the reader DB instance
[12:11:59] <Dev0n> Thinking using binds might be the way to go about it?
[12:13:24] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56)
[12:14:08] *** Joins: vladoski (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b)
[12:15:51] *** Quits: whatsupdoc (~whatsupdo@148.64.20.12) (Ping timeout: 256 seconds)
[12:17:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:18:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[12:18:44] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:19:09] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[12:20:20] *** Joins: Naan` (~Naan@user/naan)
[12:20:40] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[12:22:56] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[12:23:11] *** Joins: mozgalom_ (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:23:18] *** Quits: vladoski (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:23:41] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a667:67bd:f1a5:b323)
[12:23:56] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[12:24:08] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 258 seconds)
[12:24:51] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[12:25:46] *** Joins: Klinda (~superleag@user/klinda)
[12:26:28] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:26:57] *** Joins: vulpes_vulpes (~vulpes_vu@88-144-232-205.host.pobb.as13285.net)
[12:29:22] *** Joins: vlado_ (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b)
[12:30:12] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-e581-d43f-7f8e-087a.res6.spectrum.com)
[12:30:14] <p-i-> I'm finding good use of the walrus operator to increase the level of self-documenting in my code e.g. https://bpa.st/RSUQ
[12:30:23] *** Quits: vlado_ (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b) (Client Quit)
[12:30:54] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[12:31:24] <Alex123> hello All, I am new python trying to use cssutils.getUrls to parse urls from css file. cssutils.getUrls("https://www.example.com/file.css") css file does exists . I am getting following error "  File "/usr/local/lib/python3.9/site-packages/cssutils/__init__.py", line 218, in <genexpr>"
[12:31:25] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:31:31] <Alex123> any idea what I am doing wrong
[12:31:44] <Alex123> should straight forward
[12:32:31] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:32:42] *** Joins: mat001 (~mat001@213.143.69.121)
[12:34:48] *** Joins: paul424 (~tom@ip-31-0-120-80.multi.internet.cyfrowypolsat.pl)
[12:36:21] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[12:39:26] *** Joins: BlueSky (~BlueSky@user/bluesky)
[12:40:10] <madduck> I just came up with this idea of "soft exceptions", or "collectables". Might well exist, but am keen to hear thoughts. Let's say instead if "raise Exception", I say "toss Collectable". It does not change the execution like raise does, only registers the collectable, and at any point later, I can call "collect()" and get all the collectables tossed up previously. I could think of heaps of use cases. Good
[12:40:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:40:16] <madduck> idea? Bad idea?
[12:40:44] <Alex123> java has two types of exceptions runtimeexception and exception
[12:40:57] <Alex123> so your soft exception will be run time exceptions in java
[12:41:24] <Alex123> and exception are checked
[12:41:57] <parv> madduck, warnings?
[12:43:13] <madduck> parv: hm, I had not come across those. Seems related ;)
[12:43:16] <madduck> Does it require logging?
[12:43:34] <madduck> I *love* Python, but the one thing I cannot get my head around is logging. I hate the logging library.
[12:44:05] <parv> madduck, No. warnings just go to standard error by default. One may intercept or convert to error if wanted
[12:44:56] <madduck> And if they've gone to stderr, can I still collect them all later and display a warning summary?
[12:45:03] <madduck> I guess I shall go and try it out.
[12:45:11] <parv> madduck, Yeah, logging requires bit too much configuration & care.
[12:45:34] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:46:10] <madduck> it's just also super-non-intuitive I found
[12:46:59] <madduck> I mean, it's pretty much the orthogonal opposite of every logging I've ever implemented in almost 30 years of coding. Shows my age, but also WTF?
[12:47:15] <parv> madduck, https://docs.python.org/3.9/library/warnings.html?highlight=warnings#module-warnings
[12:47:44] <madduck> maybe I should go learn logging and just embrace it.
[12:47:55] <madduck> parv: thanks a lot, I will definitely read up on this!
[12:50:15] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:50:36] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[12:52:22] <nedbat> madduck: your collectibles sounds like a library with a collection, and you can call "collectibles.add()" any time. no need for special syntax.
[12:53:00] <rindolf> Alex123: hi, see https://github.com/shlomif/how-to-share-code-online
[12:53:05] <raek> Alex123: maybe the ccsutils library can only work with local files, and doesn't support arbitrary URLs...
[12:55:27] <parv> nedbat, madduck's idea was in context of "soft exception"
[12:55:53] *** Joins: Tireos (~Tireos@91.223.118.131)
[12:55:55] <raek> Alex123: according to this page it looks like you are have to give getUrls a CSSStyleSheet object: https://cssutils.readthedocs.io/en/stable/utilities.html?highlight=getUrls#geturls
[12:56:07] <nedbat> parv: i understand, but in what way is it like an exception? madduck mentioned the analog of "raise", but what is the "except"?
[12:56:19] <Alex123> thanks raek
[12:56:46] * parv shrugs
[12:56:49] <raek> looks like you can use cssutils.parseUrl() to go from a URL string to a CSSStyleSheet object
[12:56:57] <raek> https://cssutils.readthedocs.io/en/stable/parse.html
[12:57:47] <madduck> nedbat: the equivalent of except would be collect. But I think I did reinvent warnings, didn't I?
[12:57:49] *** Joins: swensson (~swensson@2001:2002:4e46:4b5d:9164:4cda:62bb:6bb4)
[12:59:19] <raek> madduck: I usually put a 'logger = logging.getLogger("name.of.module")' at the top level of files where I want logging and then a call to 'logging.basicConfig(level=logging.DEBUG)' in the main function
[12:59:44] <raek> I'm not super happy with that approach but it gets the work done for me most of the time
[13:00:16] <madduck> raek: yeah, and that is about as good as writing a debug function that prints to stderr unless "not DEBUG"
[13:01:05] <raek> and yeah, I often need to adjust the logging level for some third party libaries, whose debug logs I'm not interested in (requests, paramiko, etc)
[13:01:55] <nedbat> madduck: fwiw, i find warnings very difficult and confusing, and wrongly documented.
[13:01:58] <raek> when I write systemd services, I can just add a JournalHandler to direct everyhing to the journal with the correct levels
[13:02:24] <raek> but I should really dive deeper into how the logging module is inteded to be used
[13:03:00] <raek> (suggestions for tutorials / articles / blogs are welcome! I've read the python docs for it already.)
[13:03:59] <madduck> raek: I remember trying to want to learn logging, and then just nosediving again.
[13:04:12] *** Quits: control (~v1@user/control) (Quit: leaving)
[13:04:15] *** Parts: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Leaving)
[13:04:18] <madduck> nedbat: you mean, like logging? ;)
[13:05:10] <nedbat> madduck: logging is confusing for sure, but I think warnings has straight-up mistakes in the docs and implementation: https://nedbatchelder.com/blog/201810/why_warnings_is_mysterious.html
[13:05:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:07:17] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:07:32] <madduck> interesting.
[13:07:49] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[13:07:52] <madduck> I'll have to keep looking and think about that collectibles.add() suggestion
[13:08:18] *** Joins: mickey8 (~user@user/mickey)
[13:08:38] <raek> ideally I would like to configure logging to use level DEBUG for all modules in some package I'm working on, and WARNING for everything else
[13:15:47] <raek> madduck: you might be interested in the structlog package if you are interested in loggin&collecting things that aren't text
[13:16:44] <parv> nedbat, " After being escaped, a $ is added to the end, so your literal string must be an exact match on the entire module name" -- Fuck! That may explain some my issues
[13:16:48] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a667:67bd:f1a5:b323) (Remote host closed the connection)
[13:17:01] *** Joins: vladoski (~vladoski@2001:b07:add:d406:4924:9759:8700:453a)
[13:17:11] <nedbat> parv: this is what i'm saying: warnings is this weird untended back garden
[13:18:13] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[13:19:05] *** Quits: soulisson (~soulisson@user/soulisson) (Quit: Leaving)
[13:19:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:19:57] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[13:20:35] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[13:20:51] *** Joins: teut (~teut@182.68.178.118)
[13:20:54] <teut> https://dpaste.org/TAEj
[13:21:22] <teut> here is there any way to send a text  to discord  when the  write_text function returns?
[13:21:37] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:21:57] <teut> except for changed the whole model to a message queue based
[13:22:03] <teut> changing*
[13:26:13] <raxor2k> anyone have an idea on this "<class '_io.BufferedWriter'> is not supported."  error? https://bpa.st/RIXA
[13:26:22] <raxor2k> im trying to upload a new AI model once it is created
[13:26:34] *** Joins: Payam (~Payam@138.106.57.132)
[13:27:29] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:3c3f:7182:f9c0:2044)
[13:29:30] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[13:29:49] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[13:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:31:03] <Zweimer> A question about logging: I have a few modules and files inside my project. I would like to implement a logging-functions, that follows the same style. To get a logger I do currently this: logger = logging.getLogger(__name__) and then configure it with a handler and formatter. I need to do the configuration in each file. How can I keep always the
[13:31:04] <Zweimer> same one? Are there best practises?
[13:31:45] *** Quits: breetai (~breetai@mail.northriverboats.com) (Quit: Client closed)
[13:32:03] *** Joins: SixxK (~SixxK@82-65-111-90.subs.proxad.net)
[13:32:07] <Payam> hi
[13:32:23] <SixxK> hello
[13:32:27] <nedbat> Zweimer: you should configure just once in your main program
[13:32:48] <Zweimer> nedbat, but then I need to pass my logger to the submodules and classes?
[13:32:52] <Payam> How do I using RE do a conditional comparision, for instance ´this_patther or this_pattern´
[13:33:18] <parv> Zweimer, No: logging.getLogger( 'root' )
[13:33:23] <nedbat> Zweimer: no, you do a global configuration, then make the logger  in each file as you are doing.
[13:33:23] <SixxK> I am using psycopg2 in a script to realize a bulk update of a table in a PostgreSQL database
[13:33:28] <Yhg1s> Payam: '(this_pattern)|(this_pattern)'
[13:33:38] <nedbat> Zweimer: getLogger(__name__) is the right way
[13:33:44] <SixxK> from an excel file
[13:33:46] *** Joins: gytis (~gytis@static.51.157.90.157.clients.your-server.de)
[13:33:50] <SixxK> xlsx
[13:34:12] *** Joins: vlado_ (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b)
[13:34:39] <SixxK> the thing is that the two data columns of the Excel file refers to two columns from two different tables in my database
[13:34:54] <Zweimer> nedbat, So I can do logger = logging.getLogger(__name__) with some configurations in my main.py, and then do the logger = logging.getLogger(__name__) in any other file again and it will take the prior configurations automatically?
[13:34:56] <parv> n> import re;  re.compile( r'x|y' )
[13:35:38] <SixxK> these two tables are linked with a foreign key, but I don’t know how to a bulk update of a table with data from a file using another table to match the right row
[13:35:40] <parv> ... that might be in the wrong channel ... oops
[13:35:46] <nedbat> Zweimer: yes
[13:35:48] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[13:35:49] *** Quits: Tas-sos (~Tas-sos@ppp141237065163.access.hol.gr) (Ping timeout: 258 seconds)
[13:35:55] <Zweimer> Right. Thank you
[13:36:04] <SixxK> do you have any idea or a resource that would be help me?
[13:36:16] *** Quits: fearnothing (~fearnothi@user/fearnothing) (Remote host closed the connection)
[13:36:34] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[13:36:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:37:14] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[13:37:28] *** Quits: swensson (~swensson@2001:2002:4e46:4b5d:9164:4cda:62bb:6bb4) (Quit: Client closed)
[13:37:52] *** Joins: pycurious (~Adium@user/pycurious)
[13:38:34] *** Joins: fikran (~fikran@user/fikran)
[13:38:40] *** Joins: darksun (~darksun@user/darksun)
[13:40:54] <parv> Wow. Using XML file as database😱
[13:41:39] <parv> ... wait I migh have read that wrong ("the two data columns of the Excel file refers to two columns from two different tables in my database")
[13:42:44] <spaceone> is there a python3.3 online compiler?
[13:42:49] *** Joins: Tas-sos (~Tas-sos@46-165-176.adsl.cyta.gr)
[13:43:02] <spaceone> does br'foo' works with Python 3.3, 3.4, 3.5?
[13:43:07] <jinsun> no
[13:44:25] <SixxK> parv: the excel file is not a database, it’s just an external data file
[13:44:57] *** Quits: paul424 (~tom@ip-31-0-120-80.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[13:45:00] <SixxK> I parse it to get data that will be inserted into a PostgreSQL database
[13:45:14] <parv> SixxK, Do you know SQL?
[13:45:32] <SixxK> yes
[13:47:03] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[13:47:03] <parv> SixxK, Does the file has a key for database table(s) or only non-key values?
[13:47:13] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[13:47:28] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:48:34] <SixxK> only non-key values, but one of them is unique for one of involved table
[13:48:38] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[13:49:17] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[13:50:06] <nedbat> spaceone: are you sure you need to support python 3.3?
[13:50:20] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:50:56] <parv> SixxK, That "unique" value, is it a primary key that serves as foreign key?
[13:51:04] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[13:51:20] *** Joins: Payam (~Payam@138.106.57.132)
[13:51:56] <parv> SixxK, This seems to be  offtopic here; join some SQL or database channel?
[13:54:00] <SixxK> parv, no it’s not a primary key
[13:54:13] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:54:23] <SixxK> you may be right, maybe another channel would be more appropriate
[13:54:54] <parv> There is #sql & also some PostgreSQL ones
[13:54:54] <spaceone> nedbat: not really, but at least py3.5
[13:55:11] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:57:36] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[13:57:38] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:57:43] *** Joins: tga (~tga@user/tga)
[13:57:53] <Jong> Is it possible to use python in place of bash in every single case?  I'm not sure if python can automate running installers like bash can
[13:58:12] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[13:58:22] <tga> greets. if a function can fail in a few different ways, that need to be handled separately by the caller, would you create a different exception type for each one, or use an error code?
[13:58:23] <Jong> like suppose you want to automate installing conda and creating an environment and installing a bunch of packages
[13:58:38] *** Quits: alexyov (~alexyov@84.22.6.244) (Quit: alexyov)
[13:59:01] <bjs> Jong: I mean python can do anything bash can do
[13:59:03] *** Joins: alexyov (~alexyov@84.22.6.244)
[13:59:04] <tga> it's hard to automate installing python with python, the point of bash is that it's already installed
[13:59:28] <bjs> Jong: but basically every computer comes with `bash` (or some shell) installed,  not everything has a nice version of Python :(
[13:59:32] <bjs> just ready to go
[14:00:20] <nedbat> Jong: bash is really good at running commands as subprocesses.  Python can do that too, but it's more verbose.
[14:01:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:01:28] <tga> hmm is there a standard exception that already has a code? looks like even message was removed
[14:01:50] <bjs> tga: what do you mean, message was removed?
[14:02:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:02:02] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 260 seconds)
[14:02:10] <tga> BaseException doesn't have a message field
[14:02:41] <bjs> Yeah it never did (also don't inherit from BaseException,  inherit from Exception)
[14:03:05] <bjs> tga: you can make new errors, but there's lots of built-in exceptions (ValueError, TypeError, etc) that often cover the cases you want
[14:03:40] <tga> I'm trying to extract user-facing errors out of a service function -- the caller must handle each one and show a message
[14:03:44] <bjs> tga: it's hard to give specific help to vague question
[14:03:54] *** Joins: semeion (~semeion@user/semeion)
[14:03:58] <bjs> tga: `raise ValueError("you didn't do the right thing numpty")`
[14:05:04] <tga> right, but this is a problem with what the function is doing, not a ValueError
[14:05:36] <tga> I was wondering whether I should be using a standard error, but against its name, creating a custom error with a code, or creating many individual error classes
[14:05:53] <gloomy> Is there anything more efficient than len(Path("foo").glob("**/*.ext")) to count how many files match a given glob pattern?
[14:06:11] *** Quits: vlado_ (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:07:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:07:40] <raxor2k> no suggestions on this one? https://bpa.st/RIXA
[14:07:48] <raxor2k> i think it has to do something with the file format
[14:07:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:09:32] <gloomy> raxor2k: you need to give more details. A link to the documentation of whatever function you are using would help
[14:09:36] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:09:46] <bjs> raxor2k: I'm not sure how we're supposed to help,  you don't even say what libraries you're using,  there's no hint where `f` comes from or what `client` is
[14:10:02] <raxor2k> bjs: its boto3 obviusly
[14:10:06] <raxor2k> i create a new paste
[14:10:21] <Swayze> you can get all that info from his exception trace
[14:10:25] <Swayze> but yeah its not easily available
[14:10:26] *** Joins: computeiro (~Wender@189.37.65.61)
[14:10:42] <Swayze> eg. lib\site-packages\s3transfer
[14:11:09] <Zweimer> Another silly question: Where would I define my logger? https://bpa.st/QFQA
[14:11:09] <raxor2k> here is the new paste: https://bpa.st/JU7A
[14:11:20] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:11:22] <bjs> raxor2k: what is `f` ?
[14:11:44] <bjs> raxor2k: is f coming from the `with` at the top?
[14:12:09] <bjs> or somewhere else?
[14:12:31] <Swayze> f is supposed to be 'a file-like' object
[14:12:37] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:12:50] <Swayze> implementing read returning bytes
[14:13:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:13:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:14:08] <raxor2k> bjs: thats irrelevant for the issue
[14:14:15] <raxor2k> the issue is at the "upload_file" function
[14:14:23] <bjs> raxor2k: !?
[14:14:26] <Swayze> yeah but upload_file takes f so it seems relevant mate lol
[14:14:34] <bjs> raxor2k: yes, your upload_file mentions `f`, where does it come from?
[14:14:42] <bjs> that seems very relevant...
[14:14:44] <Swayze> if your 'f' is not implemented properly that is probably the sauce of your error
[14:15:02] <Swayze> https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Object.upload_fileobj
[14:15:09] *** Joins: Linux77 (~Linux7_7@186.233.182.226)
[14:15:32] <raxor2k> bjs: im a f*cking idiot
[14:15:33] <raxor2k> sorry
[14:15:34] <bjs> raxor2k: you have one commented out `with` so it can't be coming from there,  your other `with` is outside of the functions entirely and is writeable not readable so it's not that one either?  so where *did* `f` come from?
[14:15:56] <bjs> (and not only writable but has been closed)
[14:15:59] <raxor2k> bjs: i dont now
[14:16:36] <raxor2k> bjs: my bad
[14:16:38] <raxor2k> i am idiot
[14:16:42] <raxor2k> i didnt see that "f"
[14:16:46] <raxor2k> inside the function
[14:16:57] <bjs> raxor2k: let me guess, the thing you said was irrelevant turned out to be the entire issue
[14:16:58] <bjs> :)
[14:17:30] <Zweimer> What is the difference between these declarations? class C(): \n x = "hi" \n def __init__(self): \n self.x = "hello"
[14:17:54] <bjs> Zweimer: between the two `x`s you mean?  One is an attribute of the class C, and the other is an attribute of `self` (i.e. the individual instances)
[14:18:10] <p-i-> wow is numpy doing my head in today. z[PAD : PAD+g.shape[0]+1,  x : x+g.shape[1]+1] = g ... how can this possibly be failing to broadcast?
[14:18:51] <Zweimer> bjs, so the x attribute would be accessed like C().x = "new Text" and would change for all the instances as well?
[14:18:56] <bjs> Zweimer: if you had `class D: y = ...; def __init__(self): self.x = ...` if I made 3 instances of D, I'd have 3 'x's (one for each instance) and 1 'y' attributes (on D itself) in total.
[14:19:26] <bjs> Zweimer: no some_instance.x = ...  sets an attribute for only that instance
[14:19:28] <raxor2k> bjs: yes because i thought you was talkin about line 9 in the paste
[14:19:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:19:40] <bjs> raxor2k: I was, that *is* where `f` is coming from isn't it?
[14:19:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:19:59] <bjs> or is there some other `f` in your program that you didn't share?
[14:20:02] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[14:20:11] <raxor2k> bjs: that F is irrelevant for the function
[14:20:15] <raxor2k> :)
[14:20:20] <bjs> raxor2k: your file doesn't have any other fs
[14:20:24] <bjs> so where is f coming from if not there/
[14:20:43] <raxor2k> bjs: i had f also in the function
[14:20:46] <raxor2k> and that is not needed
[14:21:02] <Zweimer> bjs, if I had to do instance.x = "new" AND instance.y = "also new". Why would I use a class attribute rather than the self attribute?
[14:21:18] <bjs> raxor2k: ... in the code you shwoed us there was only 1 place that defined `f` and it was line 9 so it was not only relevant it looked like it was the cause of your error
[14:21:41] <gloomy> raxor2k: it's not irrelevant, when you call upload_file, f is not an argument and is not defined inside the function, so python uses the one defined on the top level (outside the function)
[14:21:42] <bjs> Zweimer: i'm not sure what you mean, those are instance attributes not class attributes
[14:22:26] <bjs> Zweimer: when you go self.x = ... or some_other_instance.x = ...  then you're setting the instance attribute.  print(self.x) will then read that instance attribute back.  If you go C.x = ... and print(C.x) then you're accessing the class attribute
[14:22:43] <bjs> there's little reason to use class attributes, as they are basically just globals
[14:24:50] *** dcaro is now known as dcaro_lunch
[14:24:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:25:04] <Zweimer> I think I understand. Would I then assign my logger (logger = logging.getLogger(__name__)) as a class attribute or instance attribute?
[14:25:20] <bjs> Zweimer: why not just a global variable?
[14:25:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:25:46] <lericson> the main point in class attrs are scoping imo
[14:25:49] <Zweimer> So outside the class? Would this variable not be then available in every file that is importing my file?
[14:26:00] <bjs> Zweimer: the class attributes are also available too, so yes
[14:26:18] <bjs> lericson: well except that class scopes are weird
[14:26:30] <bjs> and dont make great namespaces because of it
[14:26:38] <Zweimer> They would be, but not straight in the global scope? You would have to do "MyClass().logger"
[14:27:02] <gloomy> bjs: why? where can I read about this?
[14:27:12] <bjs> gloomy: why what?
[14:27:18] <gloomy> Why are they weird?
[14:27:49] <bjs> gloomy: pop quiz: what does this program output (without running it!) https://bpa.st/T44Q
[14:27:56] <raxor2k> bjs: am i an idiot ?
[14:27:57] <Zweimer> Also, the file importing my package with the global logger has its own logger variable. Wouldn't I mess things up? bjs
[14:28:11] <bjs> Zweimer: how are you importing things?
[14:28:32] <Zweimer> "from bla import foo"?
[14:28:36] *** Quits: Tireos (~Tireos@91.223.118.131) (Quit: Не всегда жизнь напоминает сказку, но надо же во что-то верить.)
[14:28:38] <bjs> Zweimer: then just don't import logger
[14:28:43] <bjs> right?
[14:28:50] <bjs> global variables are per-file.
[14:29:44] <bjs> gloomy: well https://bpa.st/2EFQ is perhaps a little more interesting
[14:29:49] <Zweimer> hm yeah maybe. If a silly other person doesn't realise to NOT write "from bla import *", things could be messy. And I am just brainstorming atm.
[14:29:51] <Jong> argparse is ignoring the underscore character in my cli argument. Any idea why?
[14:30:13] <raek> Zweimer: in that case, that's the silly person's problem... :-)
[14:30:30] <bjs> Zweimer: * imports read __all__ to decide what to import;  but if they're doing * imports they probably have other problems :P
[14:30:48] <gloomy> bjs: I would assume 1;2; [1,2]; 3 - but I assume I'd be wrong :-)
[14:30:50] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:30:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:31:00] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[14:31:17] <bjs> gloomy: my most recent paste has 2 scoping errors
[14:31:22] <bjs> can you spot them :P
[14:31:24] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:31:36] <Jong> nevermind, it's mpirun that's screwing up the underscore
[14:31:37] <Zweimer> True. I just can't get my head around, why I just shouldn't put it inside the class straight (since only the class is using it as well).
[14:31:49] <bjs> gloomy: if the answer is "no" or "i'm not sure" then you shouldn't use classes for scoping/namespacing,  is my usual argument :P
[14:31:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:32:00] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[14:32:33] <raek> Zweimer: you could do it either way, but I think putting it at the global level is more common. also, the __name__ name becomes the name of the module, not the class.
[14:32:49] <bjs> Zweimer: you came here not knowing what class attributes did or how they work,  is that not a good enough reason to just make it a global
[14:32:54] <bjs> so that you tomorrow can understand what it's doing :P
[14:33:12] <bjs> and not be confused about self.logger and then accidentally go self.logger = ... somewhere and everything becomes confusing etc
[14:33:36] <gloomy> bjs: Ok. They are weird.
[14:33:40] <bjs> gloomy: :P
[14:33:43] <raek> if you *really* need each class in the module to have its own logger, then you can add that later
[14:34:05] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:34:06] <Zweimer> I wasn't arguing to argue. I just wanted to learn something. I guess that explanation is fair enough
[14:34:20] <Zweimer> I will keep it global then
[14:34:38] *** Quits: alexyov (~alexyov@84.22.6.244) (Quit: alexyov)
[14:35:21] <bjs> Zweimer: if you were to want a per-class logger (e.g. each class has its own logger) then I might consider making it a class attribute,  but you'd have to be careful.  If it's just a logger for that whole file (which yours is because of the __name__) then may as well just put it at the top of the file itself as a global
[14:35:28] *** Joins: alexyov (~alexyov@84.22.6.244)
[14:35:29] *** Parts: SixxK (~SixxK@82-65-111-90.subs.proxad.net) (WeeChat 2.3)
[14:35:30] <bjs> and that is indeed where per-file loggers are usually defined.
[14:36:08] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:36:20] <Zweimer> Right. I wasn't even thinking of the __name__.
[14:37:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:37:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:37:36] *** Quits: alexyov (~alexyov@84.22.6.244) (Client Quit)
[14:37:58] <raek> I assumed that Zweimer was considering each class to have its own logger. if the module has three classes, then there would be three loggers (with distinct names). that is certainly a valid way to do things.
[14:38:16] *** Joins: alexyov (~alexyov@84.22.6.244)
[14:39:02] <raek> will there be a need to control the logging level for each classs individually? only Zweimer knows about this particular application. I haven't ever needed thaay fine-grained control myself though.
[14:39:39] <Zweimer> raek, I was considering doing this but in the end I decided to split each class in its own file. Made everything easier for me :)  I will set the logging level in my main.py and nowhere else.
[14:39:59] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:41:02] <raek> class attributes and instance attributes are kind of independent from each other, except that reading an instance attribute automatically falls back to reading a class attribute if the instance does not have its own one
[14:41:19] <raek> this is only for reading not for setting attributes
[14:41:45] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[14:42:16] <raek> so in the method, both print(C.foo) and print(self.foo) can access a class atribute (assuming there is not instance attribute with the same name), but only C.foo = 1 can be used to set it
[14:42:50] <raek> (or just foo = 1 in inside the class: block outside any def:s)
[14:43:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:44:32] <Zweimer> Right, so there are some tweaks you could use it for. I will keep that in mind. Actually I have a follow up question: My class is now an inherited QThread class. Can I somehow add the information which thread was logging the message?
[14:44:42] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:45:12] *** Joins: mikisid (~mikisid@178-221-173-138.dynamic.isp.telekom.rs)
[14:46:00] *** Joins: slav0nic (slav0nic@python.su)
[14:46:47] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th)
[14:48:14] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[14:48:57] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[14:49:44] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[14:50:04] <Pi-sistance> erm if a= false and b=true why is a+b 1?
[14:50:08] *** Joins: legola (~legola@46.235.101.181)
[14:50:34] *** Quits: p-i- (~Ohmu@223.206.147.206) (Ping timeout: 258 seconds)
[14:50:55] <Pi-sistance> I recall from some logic course that true=1 and false = 0 so I guess that's why
[14:51:56] *** Joins: BlueSky (~BlueSky@user/bluesky)
[14:53:43] *** Joins: debevv (~debevv@212.29.154.22)
[14:54:33] <supakeen> In the context of integers, yep.
[14:54:38] <jinsun> Pi-sistance: yes True == 1 and False == 0
[14:55:05] <supakeen> But generally we consider any integer that isn't 0 to be 'truthy'.
[14:55:58] <debevv> Hi, I have a small problem with pyright type checking.I created two classes, one which is derived from the other:
[14:56:20] <Pi-sistance> ok ty. "You can quickly inspect the methods offered by an object by typing the name of the object followed by a dot ('.') and then pressing Tab."
[14:56:30] <Pi-sistance> this didnt work. dot and tab
[14:56:54] <jinsun> that depends on your IDE
[14:56:56] <debevv> I created two classes, one which is derived from the other
[14:56:56] <debevv> Then a container, inside which i create both `element` and `chart` objects
[14:56:56] <debevv> Now, I'm in a part of the code where I know that a certain item inside `_elements` is a `chart` and
[14:56:56] <debevv> I want to call its specialized update()
[14:56:56] <debevv> A the last line, pyright (rightfully) complains because `el` is of type `element` in the code, not `chart` as I'm sure it is at runtime
[14:56:58] <debevv> Is there a way to "cast" `el` to chart in order to improve this piece of code, and make the type checker quiet?
[14:56:58] *** litharge sets mode: +q $a:debevv
[14:57:29] *** litharge sets mode: -q $a:debevv
[14:57:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:57:45] *** Joins: Vonter_ (~Vonter@user/vonter)
[14:57:59] <jinsun> debevv: https://docs.python.org/3/library/typing.html#typing.cast
[14:58:11] <gloomy> debevv: https://docs.python.org/3/library/typing.html#typing.cast
[14:58:12] <gloomy> heh
[14:58:20] <jinsun> :D
[14:58:54] <Pi-sistance> oh it didnt work, because the cell I typed in I accidentally created too many and ut seemed to chabge the type of cell in one or mroe
[14:59:00] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Quit: happy math or coding)
[15:00:36] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[15:00:48] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[15:00:49] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[15:01:51] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[15:02:04] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[15:07:25] <debevv> Thanks!
[15:07:35] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[15:07:37] <Pi-sistance> ffs Im used to x minimizing all programs
[15:07:48] <Pi-sistance> not the irc client though, doh
[15:08:08] <Pi-sistance> almost did it again after tpying that"
[15:08:15] <deniska> I'm more of a _ button person myself
[15:10:44] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:12:22] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9)
[15:13:17] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[15:14:32] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[15:14:45] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[15:15:45] *** Joins: shad (~shad@user/shad)
[15:15:54] <Deneb> when reading a binary file a byte at a time, how does one detect the end of a file? Using the while True : simply continues ad infinitum....
[15:16:23] <supakeen> `while byte := foo.read(1):`.
[15:16:30] <supakeen> or if you don't have python 3.8
[15:16:34] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:16:55] <supakeen> byte = foo.read(1); while byte: ...; byte = foo.read(1)
[15:17:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:17:58] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:18:23] <theprophet> guys , what is import.os doing in wsgi.py when working with python and django?
[15:18:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 260 seconds)
[15:18:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[15:18:52] <supakeen> Which `wsgi.py`.
[15:19:11] <theprophet> main project wsgi.py
[15:19:27] <theprophet> that comes from pyache.
[15:19:40] <Deneb> supakeen: ah, that makes sense - test that the read succeeds. Will try it. Thanks.
[15:19:49] <theprophet> for example . urls.py and then wsgi.py
[15:20:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:20:22] <supakeen> Deneb: Specifically .read(...) will always return at least one byte because an empty string denotes EOF.
[15:20:37] <theprophet> i mean i know what wsgi.py does and what is it for. but i dont understand the purpose of import.os in there.
[15:20:40] <supakeen> (and let's pretend nonblocking doesnt exist)
[15:20:45] *** Quits: poon (~poooon@94.2.71.133) (Quit: Lost terminal)
[15:20:48] <jinsun> themill: ctrf+f os in the file and see where it is used
[15:21:15] <jinsun> s/ctrf/ctrl
[15:22:00] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:22:10] <jinsun> and oops theprophet ^ not themill
[15:22:27] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th) (Remote host closed the connection)
[15:22:57] *** Quits: mikisid (~mikisid@178-221-173-138.dynamic.isp.telekom.rs) (Remote host closed the connection)
[15:23:02] *** Joins: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th)
[15:23:18] *** Joins: mikisid (~mikisid@178-221-173-138.dynamic.isp.telekom.rs)
[15:23:21] *** Joins: audiobirb (~audio@2603-8081-1800-1546-9262-1b64-15ea-2d11.res6.spectrum.com)
[15:23:50] <theprophet> jinsun ohhhh i see i see, ok thanks man
[15:26:54] *** Quits: mikisid (~mikisid@178-221-173-138.dynamic.isp.telekom.rs) (Remote host closed the connection)
[15:27:18] *** Joins: mikisid (~mikisid@178-221-173-138.dynamic.isp.telekom.rs)
[15:27:32] <Deneb> supakeen: that worked. It now stops at the end of the file. Thanks.
[15:27:45] <theprophet> idk if any wanna know but this is the answer to my question.  Programs that import and use 'os' stand a better chance of being
[15:27:46] <theprophet> portable between different platforms.  Of course, they must then
[15:27:46] <theprophet> only use functions that are defined by all platforms (e.g., unlink
[15:27:47] <theprophet> and opendir), and leave all pathname manipulation to os.path
[15:27:47] <theprophet> (e.g., split and join).
[15:29:46] *** Quits: tga (~tga@user/tga) (Ping timeout: 260 seconds)
[15:30:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:32:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[15:33:30] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 258 seconds)
[15:34:00] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[15:34:58] *** Joins: rich (~rich@2a03:4000:3f:f1:b859:16ff:fe45:e87f)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:33] *** dcaro_lunch is now known as dcaro
[15:37:14] *** Joins: alzgh (~alzgh@user/alzgh)
[15:39:18] *** Quits: summonner (~summonner@188.24.90.174) (Ping timeout: 265 seconds)
[15:40:24] *** Quits: mikisid (~mikisid@178-221-173-138.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[15:40:42] *** Joins: zeden (~zeden@user/zeden)
[15:43:13] *** Quits: mei6 (~mei@user/mei) (Read error: Connection reset by peer)
[15:44:14] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3c3f:7182:f9c0:2044) (Quit: Client closed)
[15:44:15] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[15:44:34] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[15:45:02] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:46:04] *** Joins: y1n (~y1n@91.141.65.32.wireless.dyn.drei.com)
[15:46:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:46:59] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:47:10] *** Joins: maromau (~mauro@151.62.228.166)
[15:47:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:47:41] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 258 seconds)
[15:47:55] *** Joins: fikran (~fikran@user/fikran)
[15:48:32] *** Joins: vlado_ (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b)
[15:51:47] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[15:52:56] *** Joins: CoolerX (~CoolerX@user/coolerx)
[15:54:24] *** Joins: summonner (~summonner@188.24.48.81)
[15:56:43] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9) (Remote host closed the connection)
[15:57:04] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9)
[15:57:11] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[15:57:12] *** Quits: vlado_ (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:58:25] *** Joins: dalan62367 (~dalan@59-102-54-91.tpgi.com.au)
[15:58:29] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[15:59:05] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[16:00:52] *** Joins: vlado_ (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b)
[16:02:16] *** Quits: nomic (~nomic@185.198.243.172) (Quit: Leaving)
[16:02:22] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[16:02:38] *** Joins: mat001_ (~mat001@213.143.69.121)
[16:03:01] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9) (Ping timeout: 245 seconds)
[16:05:11] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 264 seconds)
[16:05:56] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:09:12] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[16:09:13] *** Joins: dez (uid92154@user/dez)
[16:09:34] *** Quits: vlado_ (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:09:42] *** Joins: Barones (~Barones@2804:7f3:8987:c42f:e519:2999:4571:c6ce)
[16:09:54] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[16:10:51] <grym> theprophet: or pathlib.Path, which is even better
[16:11:25] <theprophet> grym how so?
[16:11:37] <grym> theprophet: it's a nicer API
[16:11:38] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[16:11:57] <grym> less stringly
[16:12:05] <theprophet> grym i will consider that, but should i change it django?
[16:12:12] <theprophet> in*
[16:12:22] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:12:36] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Remote host closed the connection)
[16:12:42] <grym> internally to django itself? leave it alone
[16:12:43] <theprophet> cause os is what comes with django originaly
[16:12:50] <theprophet> yea
[16:12:56] <grym> in your code? use whichever you like, but i'd prefer path
[16:13:07] <Lartza> path likely can't os.environ.setdefault
[16:13:10] <theprophet> i see
[16:13:21] <grym> Lartza: i didn't say "don't use os" :)
[16:13:31] <theprophet> grym ok thanks.
[16:13:39] <Lartza> I know, I don't know why theprophet came here and didn't stay on #django...
[16:13:55] <Lartza> Confused even you first with just saying wsgi.py
[16:14:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:14:16] <theprophet> Lartza somehow people got what i was asking here but not in django.
[16:14:29] <Lartza> No they didn't?
[16:14:44] <theprophet> Lartza they did. you must have missed it,
[16:14:45] <Lartza> I said what wsgi.py imported os for
[16:14:48] <Lartza> os.environ.setdefault
[16:14:53] <Lartza> That is what it uses os for
[16:14:56] *** Joins: yotsuba (~yotsuba@213.137.65.220)
[16:15:20] <Lartza> I told you to check three lines below import os
[16:15:27] <Lartza> They told you to ctrl+f the file
[16:15:29] <Lartza> How is that different
[16:15:40] <Lartza> All wsgi.py uses import os for is os.environ.setdefault
[16:15:45] <theprophet> dude....
[16:16:02] <Lartza> The only one who give you any other explanation about the os library was you yourselfd
[16:16:13] <Lartza> Which is a pretty vague explanation too
[16:16:27] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 240 seconds)
[16:16:30] <theprophet> how is that different?
[16:16:35] <Lartza> What is different?
[16:16:54] <Lartza> Yes
[16:16:58] <Lartza> Sorry
[16:17:17] <theprophet> well first of all when you do what jinsun said it actually sends you to the file where documentations are. and you can actually read what every line does.
[16:17:23] <theprophet> thats what is difference.
[16:17:25] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[16:17:30] *** Quits: chenqisu12 (~xirndc@183.217.203.91) (Quit: Leaving)
[16:17:31] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[16:17:40] <Lartza> The documentation for wsgi is linked three lines above import os
[16:17:43] <Lartza> *wsgi.py
[16:17:57] <Lartza> ctrl+f or looking manually is all the same
[16:18:23] *** Quits: mat001_ (~mat001@213.143.69.121) (Ping timeout: 264 seconds)
[16:18:34] <theprophet> i did not control f
[16:18:41] <theprophet> i cllicked control and right mouse click
[16:19:10] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:19:17] <Lartza> I have no clue what that is supposed to do
[16:19:23] *** Joins: mat001 (~mat001@213.143.69.121)
[16:19:45] <Lartza> And that's not what you were told to do so nobody here helped you any better than I did *shrug*
[16:19:52] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:19:58] <theprophet> in pycharm it opens up a path file for what you click on.
[16:20:25] <Lartza> Sure, but you didn't ask for that
[16:20:31] <theprophet> yea that emoji you sent in django channel was 'helpful" yea.
[16:20:35] <Lartza> Emoji?
[16:20:38] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[16:20:48] <theprophet> :/
[16:20:55] <theprophet> this.
[16:21:19] <Masklin_Gurder> Remember to be nice to each other.
[16:21:21] <Lartza> "Well you can clearly see that no? It's only three lines below the import when it's used :/" yes that is what I said
[16:21:23] <Masklin_Gurder> #peaceandlove
[16:21:34] <Lartza> Could have been nicer sure, but didn't say anything really with rude intention either
[16:21:36] *** Joins: zebrag (~chris@user/zebrag)
[16:21:36] <theprophet> this guy......
[16:21:43] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[16:21:51] <Lartza> I told you exactly what you asked
[16:21:57] <Lartza> "why is there a import.os in wsgi.py ? what the purpose of import.os in that particular file?"
[16:22:07] <theprophet> Lartza first of all you said to look at something which i dont understand its purpose? why?
[16:22:15] <Lartza> The purpose is to be able to use os.environ.setdefault
[16:22:23] <Lartza> That is what you asked
[16:22:33] <Lartza> If you then want to know what os.environ.setdefault is used for, ask
[16:22:35] <theprophet> WTF
[16:22:44] <theprophet> holy jc
[16:23:07] <theprophet> you're missing out the main thing here. YOUALREADY KNOW DJANGO AND I DONT>
[16:23:10] <theprophet> thats the fact.
[16:23:11] *** Quits: yotsuba (~yotsuba@213.137.65.220) (Ping timeout: 264 seconds)
[16:23:18] <theprophet> can you realize that.?
[16:23:24] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: Textual IRC Client: www.textualapp.com)
[16:23:27] <Lartza> I can't read your mind and know what you know and don't know, you asked what import os is used for, I told you it's used to os.environ.setdefault
[16:23:32] <Lartza> You didn't ask anything more specific
[16:23:34] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[16:23:40] <Lartza> So I can't answer anything more specific
[16:23:50] <theprophet> my question was so newbie that if you werent ignorant you could see that iwas newbie question
[16:23:51] *** Joins: R035N3R (~phobos@user/r035n3r)
[16:23:58] <theprophet> if your judgment is poor thats not my fault.
[16:24:04] <Lartza> I saw it was a newbie question, just way too vague
[16:24:06] *** Quits: summonner (~summonner@188.24.48.81) (Ping timeout: 265 seconds)
[16:24:19] <Lartza> Also if it was a newbie question, the correct answer is "to import the "os" library"
[16:24:26] <Lartza> But that doesn't answer anything either
[16:24:36] <theprophet> ok enough stop
[16:24:50] <theprophet> just one advice. stop looking at people from above. remember that.
[16:24:53] <Lartza> You didn't ask what environ.setdefault does
[16:25:01] <Lartza> I didn't, you're the only one who insulted me
[16:25:10] <grym> Lartza: theprophet scrollbacks aren't meant to be filled with this sort of argument here. maybe it's time for a joint break
[16:25:35] <theprophet> Lartza i did not insulted you. i dodged your ignorance .
[16:25:41] <Lartza> You called me a "superior race man"
[16:25:45] <Lartza> How is that not an insult
[16:25:46] <theprophet> and as you looked at me from the above.
[16:25:48] <theprophet> thats it.
[16:25:57] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[16:25:58] <theprophet> i am done. sorry everbody.
[16:25:59] <Masklin_Gurder> Slide into each other's pms please
[16:26:06] <grym> eeew
[16:26:43] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:26:44] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[16:26:48] *** Joins: lidless (sid523173@tinside.irccloud.com)
[16:26:57] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[16:27:52] <lidless> Hi folks. I need to be able to test various aspects of streaming audio quality, taking the original source and comparing it to the streamed source, for perceived quality. Looking for any pointers. Fourier transform libraries are out there but a bit over my head.
[16:28:06] * lidless if that sent twice, sorry. IRC cloud is... weird.
[16:28:35] <grym> lidless: yeah, you'll probably want something that can visualise spectrograms and the like
[16:28:50] <lidless> grym: And do this automated, I should've mentioned that
[16:28:57] <lidless> by the way it's jabberwock. I'm in disguise. lol
[16:29:07] <grym> lidless: but note that "percieved quality" is not something that's well captured computationally
[16:29:11] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[16:29:12] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[16:29:29] <lidless> Absolutely. But for starters at least, I can use my own perception
[16:29:45] <grym> lidless: you can, but if you're going to do that i recommend you blind yourself
[16:29:55] *** Joins: pycurious (~Adium@user/pycurious)
[16:30:06] <lidless> I'm pretty good at disrupting my own bias
[16:30:09] <grym> look into basics of psychometrics, because that's what you're doing
[16:30:29] <grym> two-alternative forced choice staircase thresholding is hard to beat, if you set it up right
[16:30:35] <grym> it is _tedious_
[16:30:37] <lidless> So far I have listed Alpha Homeworks (MOC), Visqol, FFMPGE/Matlab, WavePad, FFPRobe, and Python Fourier Transforms. No idea how to use any of them. Just researching.
[16:30:46] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:30:50] <raek> there are standards for audio quality evaluation, such as POLQA and PESQ, FYI
[16:30:58] <lidless> So for now I can remove "perceived" and check the source vs. result.
[16:31:19] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:31:24] <lidless> POLQA! THat was another one, thank you. I do have PESQ/MOS from Visqol jotted down
[16:31:45] <lidless> Hoping to get a semi-quick win here, at least for the non-perceived part
[16:31:53] <raek> I've only heard of them in the context of expensive lab equipment, though
[16:32:14] <lidless> If that expensive lab equipment can do it in an automated fashion...
[16:32:35] <lidless> https://github.com/google/visqol
[16:32:54] <grym> lidless: i mean, i can subtract spectrograms for you and show you where things are different, but relating that objective measure to any subjective one requires a meatbag
[16:33:00] <grym> i mean, uh, research subject
[16:33:07] <raek> there are such products, but I don't remember any manufacturer names.... sorry.
[16:33:15] <raek> (automatable)
[16:33:39] <lidless> I'm realizing this isn't strictly a python thing, but I'm hoping it can be done in python. If it's too off topic then I'll quiet down
[16:34:05] <lidless> grym: Which libs would you use for comparing the spectrum analysis? FFT or?
[16:34:48] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:35:00] *** Joins: xiongxin (~quassel@113.116.34.23)
[16:35:37] <grym> lidless: well, fft isn't a library, it's a mathematical function
[16:35:40] <grym> scipy provides it
[16:35:53] <grym> spectrograms too i think
[16:35:56] <lidless> ok I failed at sounding smart lol
[16:36:11] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 265 seconds)
[16:36:19] <grym> note that there are a bunch of parameters you'll have to choose for spectral analysis :/
[16:36:22] <lidless> I think FFT uses some cross spectrum analysis and that there will be spikes in the "bad" audio
[16:36:35] <lidless> right. and complex math ain't my friend, not yet
[16:37:22] <grym> the FFT of a timeseries signal is a signal in frequency space that gives you the distribution of frequencies that linearly sum to that signal
[16:37:28] *** Quits: R035N3R (~phobos@user/r035n3r) (Quit: WeeChat 3.3)
[16:38:02] <grym> a spectrogram is a time-frequency heatmap that takes many windowed FFTs along your long timeseries data and gives you something like the power distribution in frequency at each time bin
[16:38:27] <supakeen> pfft
[16:38:29] *** Joins: bloody (~bloody@user/bloody)
[16:38:59] <supakeen> a spectrogram is a bunch of frequency domain data drawn on top of eachother
[16:39:01] *** Joins: summonner (~summonner@79.119.114.132)
[16:39:02] *** Quits: raxor2k (~raxor2k@78.158.254.247) ()
[16:39:12] <grym> supakeen: per time window column, yes
[16:39:53] <lidless> speaking of domains, it would be super cool to create something like Scratch for this type of thing, but that's thinking way far ahead
[16:40:12] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 258 seconds)
[16:40:21] <grym> lidless: well there are a few things for audio analysis but they're usually insane
[16:40:21] <lidless> not Scratch itself. Someone has a tool out that for visually programming domain-specific languages. anyhoo
[16:40:34] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:40:41] <grym> one of them, for speech signals primarily, is infamously insane
[16:40:49] <lidless> Which is that?
[16:40:51] <grym> praat
[16:40:54] <lidless> ah
[16:41:14] <lidless> Well for speech only I can note that as well
[16:42:15] <lidless> So I really need to get a good sample and bad sample first, and look at it. I think that's a good starting point... to look at the visual differences.
[16:42:15] <grym> it can do all sorts of cool stuff but its GUI is just totally wild
[16:42:31] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[16:42:34] <supakeen> i assume you'll get quite far looking in the frequency domain only
[16:42:56] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[16:43:01] <lidless> praat docs are old AF :-||
[16:44:16] <grym> lidless: i did warn you
[16:44:19] <lidless> https://stackoverflow.com/questions/4315989/python-frequency-analysis-of-sound-files
[16:44:19] <grym> :)
[16:44:23] <lidless> you did :D
[16:44:34] *** Quits: maromau (~mauro@151.62.228.166) (Quit: Konversation terminated!)
[16:44:36] <lidless> by the way thank you for 'fuck'! haha
[16:44:44] <grym> ?
[16:44:51] <lidless> the CLI tool. I use it a lot
[16:44:57] <grym> oh! yes
[16:44:58] <lidless> I think it was you who recommended it
[16:45:45] <lidless> That link above uses Matploblib and scipy
[16:45:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:48:35] <lidless> It seems 48khz is the needed sample rate for some of these
[16:49:00] <lidless> for streaming I think that's the highest available, and not always
[16:49:20] *** Joins: amogorkon (~amogorkon@port-92-196-124-146.dynamic.as20676.net)
[16:49:43] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 265 seconds)
[16:50:14] <lidless> or I can upsample from 44.1 to 48khz, I think
[16:51:23] *** Quits: amo (~amogorkon@port-92-196-124-146.dynamic.as20676.net) (Ping timeout: 264 seconds)
[16:51:29] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[16:51:57] <newdimension> Does a problem being an NP-hard problem mean there is no solving it? For an instance the Nurse Scheduling Problem is NP hard but obviously nurses get scheduled. What are the implications of being NP-hard?
[16:52:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[16:52:52] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[16:54:13] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[16:54:24] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[16:54:43] <grym> newdimension: if something is NP hard, i can verify that your solution is right or wrong, but i can't give you a tidy way to generate arbitrary solutions without something like brute force
[16:54:44] *** Quits: amogorkon (~amogorkon@port-92-196-124-146.dynamic.as20676.net) (Read error: Connection reset by peer)
[16:54:54] <raek> it being impossible to *always* find a solution in polynomial time
[16:54:57] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:55:16] <raek> it is about the general case
[16:55:34] *** Joins: amogorkon (~amogorkon@port-92-196-124-146.dynamic.as20676.net)
[16:55:39] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[16:55:53] <MacGyver> newdimension: "No solving it" (with a computer or maths anyway) is what's called "undecidable" or "incomputable".
[16:55:58] <raek> ...or finding the optimal solution (depending on the problem)
[16:56:11] <grym> lidless: sampling rate will depend on what frequencies you're interested in capturing.  (it's gotta be at least double your highest frequency of interest; this is called the nyquist limit)
[16:56:14] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[16:56:34] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[16:56:53] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[16:57:02] *** Joins: lethu (~lethu@user/lethu)
[16:57:39] <grym> lidless: 44.1 was chosen as roughly "twice plus a little bit of the highest frequency humans can hear", for example
[16:58:14] <lidless> Thanks. I'm guessing I'll need to have a consistent sample rate across the process in order to get consistent metrics.
[16:58:32] <newdimension> So in regards to the Nurse Scheduling Problem https://en.wikipedia.org/wiki/Nurse_scheduling_problem  it is a problem with no clean solution but because we can verify right answers it is considered NP hard
[16:58:35] <grym> that makes it easier
[16:58:52] <MacGyver> newdimension: "clean" is an inexact term that doesn't communicate anything.
[16:59:02] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:59:19] <MacGyver> There's very clean algorithms for NP-hard problems. They just don't run in polynomial time.
[16:59:30] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[17:00:35] <newdimension> MacGyver: right, this isn't in the context of a class or anything so I probably lack the exact terms. My goal is to understand what the issue is with the Nurse Scheduling Problem and I happen to come across the NP hard concept which seems to only be tangentially related. Is the scheduling problem that with a lot of variables computational time goes
[17:00:35] <newdimension> up?
[17:01:35] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 264 seconds)
[17:02:30] *** Joins: Fiji (~Fiji@user/fiji)
[17:02:36] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[17:03:13] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[17:03:29] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:06:15] <MacGyver> One way to think about it is that it's not necessarily the amount of variables, but that all the variables are "interconnected".
[17:08:09] <supakeen> In NP-hard things are non-deterministic so each state can lead to multiple other states but our computer concepts are deterministic which makes it difficult.
[17:08:20] <supakeen> (it's not proven that all NP-hard stuff is non-polynomial)
[17:08:21] <MacGyver> I'm not intimately familiar with this problem so don't know in which class it falls exactly, but it sounds like it'd be EXPTIME.
[17:08:25] <hodapp> supakeen: what is non-deterministic here?
[17:08:56] *** Joins: src (~src@user/src)
[17:09:10] <supakeen> In the Nurse Rostering Problem?
[17:09:30] *** Joins: arinov (~arinov@213.194.126.155)
[17:09:30] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[17:10:22] <supakeen> I don't know that specific problem but it was said that it was NP-hard :)
[17:11:26] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[17:11:50] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[17:12:28] <hodapp> newdimension: there often may not be a clean "why" behind something being NP-hard; the definition involves being able to map known NP problems to it in polynomial time
[17:13:06] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[17:13:15] *** Joins: stdout (~stdout@216.163.21.11)
[17:13:36] <Masklin_Gurder> I have a dictionary containing two nested dictionaries, does this mean I should finally learn how classes work, or does it not matter much?
[17:14:35] <grym> Masklin_Gurder: depends on what you want to do with the data
[17:14:47] <newdimension> hodapp: right. I'm beginning to think that my interest in this isn't related to it being NP. I'm just curious why something where some kind of solution has to exist (nurses get scheduled) is a problem. Is it just an academic interest that people have? Or are existing solutions non-optimal for some reason. From the looks of it this is a general
[17:14:47] <newdimension> "problem" in scheduling and not limited to the Nurse Scheduling Problem
[17:15:26] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:16:21] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:16:31] <hodapp> newdimension: most of the time one speaks of P/NP, it is of more academic interest or of interest mainly in contexts where formal verifiability of an algorithm or a piece of software is a requirement
[17:16:50] <Wooble> newdimension: fortunately, the limit of the number of nurses you need to schedule in a real hospital never approaches infinity.
[17:16:50] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:17:38] <Wooble> if you're a travelling salesman and you only need to visit 3 cities, figuring out the route being O(N!) isn't an actual problem for you.
[17:18:36] <meatballs> There's a good PyCon UK talk from a few years back on NP-hard problems: https://pyvideo.org/pycon-uk-2016/easy-solutions-to-hard-problems.html
[17:18:56] <grym> Wooble: but if you're a drunk russian undergrad with some bridges to cross, your night will be short no matter how large the city!
[17:18:57] *** Joins: Falc (~Falc@193.191.206.243)
[17:19:25] <hodapp> newdimension: the problem of asymptotic complexity in general, though, is of more practical interest anytime you are making a scalable system
[17:20:15] <newdimension> I see, it's more of a we hit the issue at scale. I've researched a bit, and found out that some hospitals just avoid this problem by having nurses schedule themselves
[17:20:25] <newdimension> btw thanks everyone! I'm in non-CS field so I don't have anyone to discuss these kinds of things with
[17:21:18] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 260 seconds)
[17:22:18] <meatballs> There's also a talk from the following year on how PyCon UK itself was scheduled using these ideas: https://pyvideo.org/pycon-uk-2017/polygons-hill-climbing-metallurgy-and-why-you-are-here.html
[17:22:43] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:23:00] <hodapp> newdimension: it's quite rare in practice for a practical problem to require the theoretical-optimum, versus a good-enough answer
[17:23:14] <Wooble> newdimension: I think in practice they're more likely to paper over any problems with forced overtime but you're talking about a mathematical problem, not some statement that it's impossible to schedule a real number of nurses in a real hospital
[17:24:09] <hodapp> once in awhile, there is a context where "good enough" isn't sufficient - e.g. flight avionics or control software for a nuclear power plant
[17:25:30] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:25:40] *** Joins: thiras_ (~thiras@user/thiras)
[17:27:32] <newdimension> Wooble: right, I initially got the impression like you said that "it's impossible to schedule" which didn't make sense.
[17:28:13] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-593d-53d2-7210-2f1a.res6.spectrum.com)
[17:29:50] *** Quits: y1n (~y1n@91.141.65.32.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[17:30:52] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[17:31:24] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:31:27] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[17:31:50] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:32:13] <hodapp> 'optimal' in a CS or mathematical context means something a bit more specific than in normal usage
[17:34:27] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9)
[17:36:23] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[17:36:36] *** Joins: magla (~gelignite@55d41a29.access.ecotel.net)
[17:36:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[17:37:01] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[17:38:40] *** Joins: poon (~poooon@94.2.71.133)
[17:38:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:39:02] *** Quits: greknod28 (~grek@120.88.171.98) (Ping timeout: 260 seconds)
[17:39:22] <poon> whats the correct shorthand way to return true or false, depending on a bools state? something like: return my_vool ? True : False
[17:39:30] <poon> ** my_bool
[17:39:42] <jbe> if it's a bool why not just return it
[17:40:10] <poon> clever cloggs !
[17:40:13] <poon> ;D
[17:40:18] <poon> thank you
[17:40:59] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:41:09] <jbe> yw
[17:41:09] <MacGyver> If I had a buck for every time I see that anti-pattern employed by my students...
[17:42:09] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[17:42:17] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:42:18] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[17:42:24] <lericson> lol
[17:42:25] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[17:42:35] <lericson> if thing: return True; else: return False
[17:42:38] <lericson> is another timeless classic
[17:42:56] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[17:42:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:43:10] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[17:43:11] <SnoopJ> and if it's not a bool, but is convertible to one: `return bool(thing)`
[17:45:47] <hodapp> not so loud, you'll summon Bob Harper and get us all a lecture on why you should have used SML, not Python
[17:46:04] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[17:46:52] <SnoopJ> prescriptivists have no power here!
[17:47:02] <MacGyver> Oh don't worry, students also do this in functional programming courses.
[17:47:34] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[17:47:42] <MacGyver> Somehow this missing step towards enlightenment is universal across languages.
[17:47:52] <hodapp> I was referencing http://existentialtype.wordpress.com/2011/03/15/boolean-blindness/
[17:48:25] <hodapp> my favorite quote from it, now removed: "There are few things more stupid in the world than code that compares a pointer for equality with null, then branches on the outcome, and then finds itself needing a sat solver or model checker to propagate the provenance of a boolean that should never have been computed in the first place!"
[17:48:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:48:37] <hodapp> few things more stupid. in the world.
[17:48:38] <grym> hodapp: twelf or gtfo.  oh, wait, wrong group
[17:48:39] *** Quits: horseface (~horseface@user/horseface) (Quit: I am brb I reckon... Sirs.. Ma'am... PATRONS! OF! THE! UNIVERSE!!! AHA!!! <3 !!!)
[17:48:51] <Masklin_Gurder> grym: I don't know how I'm supposed to describe what I'm doing with the contents of these dictionaries. I calculate some things here and there and then print with nested loops. Does that help?
[17:48:53] *** Joins: horseface (~horseface@user/horseface)
[17:49:31] <SnoopJ> hodapp, hyperboole?
[17:49:33] * SnoopJ ducks
[17:50:01] * hodapp replaces all interpreters on SnoopJ's computer with Lean Theorem Prover
[17:50:02] <grym> SnoopJ: harper's got Ideas.
[17:51:21] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 245 seconds)
[17:51:28] <SnoopJ> hodapp, I cannot really throw stones, we had The Talk (SAT solver) a few weeks after I started at $employer. Granted, that was actually an explicit dependency problem that we actually have and currently solve with lots of ad-hoc code
[17:51:42] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[17:51:50] <SnoopJ> (we decided to not add a SAT solver to our codebase, which was the right call)
[17:52:42] <hodapp> not sure if that's preferable to the FactoryFactoryFactoryFactory talk or not
[17:52:56] * grym mutters something about chickens
[17:53:03] <p-i-> Given a 2D binary numpy array, can anyone think of a numpythonic way to get the y-index of the first fill on each column?
[17:53:10] <hodapp> "GUYS! I just made a configuration language so powerful I can use it to describe the *entire program*!"
[17:53:16] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[17:53:21] <hodapp> p-i-: the first fill on each column?
[17:53:41] <p-i-> hodapp: first fill going downwards, like in a game of Connect4
[17:54:04] *** Joins: OnceMe (~stefan@user/onceme)
[17:55:11] <OnceMe> hi, if I have in python3 something like: data = '{ "address": { "street": "{{streetName}}", "street2": "{{streetName2}} } }' how do I add {{streetName}} literal into it?
[17:55:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:55:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[17:55:21] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[17:55:23] <mage> hello
[17:55:39] *** Joins: matsaman (~matsaman@user/matsaman)
[17:56:08] <mage> if I call foo.something() how could I call foo.bar.something() if .something() doesn't exist?
[17:56:10] <hodapp> p-i-: that is for each N, the M such that array[M, N:] is all 1s, and array[M, :N] is all 0s?
[17:56:21] <CrtxReavr> Maybe use the same type of quotes at each end of the string?
[17:56:36] <OnceMe> CrtxReavr: what do you mean
[17:56:43] <CrtxReavr> ``"{{streetName2}} } }'``
[17:56:48] <hodapp> errr. sorry. meant "for each M, the N such that...."
[17:57:03] <OnceMe> so '{{streetName2}}' ?
[17:57:12] <OnceMe> wait, my bad
[17:57:13] <OnceMe> it is
[17:57:16] *** Joins: fikran (~fikran@user/fikran)
[17:57:22] <OnceMe> data = '{ "address": { "street": "{{streetName}}", "street2": "{{streetName2}}" } }'
[17:57:47] <CrtxReavr> I would think that should work.
[17:57:49] <OnceMe> streetName can come from street = json.loads(street)
[17:57:56] <p-i-> hodapp: woops connect4 was a bad example. Imagine a connect4 that can have holes. https://bpa.st/W3XA
[17:58:02] <OnceMe> street['streetName'] should work?
[17:58:15] <OnceMe> '{ "address": { "street": "{{street['streetName']}}", "street2": "{{streetName2}}" } }'
[17:58:40] <Wooble> OnceMe: decode data to a python dict, do what you want to it, and maybe encode it back to JSON after?
[17:58:43] <grym> OnceMe: data['address']['street'] == "{{streetName}}"
[17:58:59] <grym> OnceMe: using {{ reminds me of jinja, though,
[17:59:22] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:3c3f:7182:f9c0:2044)
[17:59:48] <CrtxReavr> https://bpa.st/Q6ZA  <===seems to work.
[18:00:04] <hodapp> p-i-: why has column 0 a value of 3, but 2 & 3 have values of 4 despite the columns having identical contents?
[18:00:44] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:00:47] <OnceMe> CrtxReavr: it does work, but for streetName add it to var
[18:00:48] <p-i-> hodapp: gah my fail, should be 3 2 3 3 1
[18:00:57] <OnceMe> to get something street['streetName']
[18:01:05] <OnceMe> and try to injct it where {{streetName}} is
[18:01:28] <hodapp> p-i-: so is this then just the *row* index of the first non-zero element in a given column?
[18:01:37] <p-i-> Yes!
[18:02:05] *** Quits: Falc (~Falc@193.191.206.243) (Quit: Leaving)
[18:02:26] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9) (Remote host closed the connection)
[18:02:46] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9)
[18:03:06] <p-i-> hodapp: Just putting your last message into google, I think I got something: https://stackoverflow.com/questions/66480369/find-the-index-of-first-non-zero-element-to-the-right-of-given-elements-in-pytho
[18:03:13] <p-i-> (tx)
[18:03:23] *** Quits: Tas-sos (~Tas-sos@46-165-176.adsl.cyta.gr) (Ping timeout: 258 seconds)
[18:03:27] <SnoopJ> `np.argwhere(arr[:, col_idx])` and select the first index (if it exists) would be my first attempt
[18:03:58] <hodapp> there is probably a less-loopy way to use np.nonzero
[18:04:29] <SnoopJ> loops over ndarrays usually suggests "why even use numpy in the first place?"
[18:05:15] <p-i-> I'm tempted to use numba for these things.
[18:05:24] *** Joins: Tas-sos (~Tas-sos@ppp005054065184.access.hol.gr)
[18:05:25] <p-i-> But I want to try with numpy first.
[18:06:46] <SnoopJ> well, argwhere() is the thing you want for "indices where a predicate is true"
[18:07:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[18:07:35] <p-i-> Yes, trying to figure out if I can avoid a Python-level looping over cols.
[18:07:47] <SnoopJ> p-i-, is something wrong with my suggestion?
[18:08:43] <CrtxReavr> OnceMe, then you'd need to make the string and fstring, and fill in the variables, prior to feeding it to json.loads()
[18:08:50] *** Joins: rsx (~dummy@ppp-188-174-140-121.dynamic.mnet-online.de)
[18:08:53] <p-i-> What's col_idx? I read that as a single column, so I thought your idea was to python-loop over columns.
[18:09:00] <SnoopJ> it's the column index you are interested in.
[18:09:10] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9) (Quit: Leaving)
[18:09:40] <p-i-> I want to get all of them. It's only a thousand, so I could python-loop over them.
[18:09:42] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[18:09:54] *** Joins: rany_ (~rany@user/rany)
[18:09:56] <SnoopJ> you can. when you do this over ndarrays, you give up basically all of their benefits
[18:10:04] *** Joins: irrgit (~irrgit@192.241.175.183)
[18:10:07] <SnoopJ> but it's not forbidden
[18:10:17] <hodapp> this is why I mentioned np.nonzero maybe having a less-loopy way...
[18:10:20] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[18:10:53] <p-i-> That link I found off googling hodapp's words suggests np.maximum.accumulate might do it
[18:10:56] <CrtxReavr> Actually, you'd need an entirely different approach.
[18:11:01] *** Joins: olliemath (~olliemath@ec2-3-11-125-100.eu-west-2.compute.amazonaws.com)
[18:11:12] *** Joins: Roey (~Roey@user/Roey)
[18:11:50] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Client Quit)
[18:12:17] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[18:12:26] *** Parts: olliemath (~olliemath@ec2-3-11-125-100.eu-west-2.compute.amazonaws.com) ()
[18:12:31] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[18:12:50] <hodapp> p-i-: let 'arr' be the binary array of interest.   cols, rows = arr.T.nonzero(); rows[np.concatenate(([1], np.diff(cols))) == 1]
[18:12:51] *** Joins: olliemath (~olliemath@ec2-3-11-125-100.eu-west-2.compute.amazonaws.com)
[18:12:53] <hodapp> just don't look too close.
[18:12:57] *** Joins: upsala (~zcb@185.213.155.160)
[18:14:02] *** Quits: xiongxin (~quassel@113.116.34.23) (Ping timeout: 260 seconds)
[18:14:12] *** Joins: xiongxin_ (~quassel@113.116.35.81)
[18:14:33] <SnoopJ> why the transpose?
[18:14:58] *** Quits: Tas-sos (~Tas-sos@ppp005054065184.access.hol.gr) (Ping timeout: 260 seconds)
[18:15:22] <hodapp> SnoopJ: results from nonzero always come through row-major
[18:15:54] *** Joins: Tas-sos (~Tas-sos@ppp005054067227.access.hol.gr)
[18:16:02] *** Quits: ubert (~Thunderbi@91.141.50.28.wireless.dyn.drei.com) (Ping timeout: 258 seconds)
[18:16:42] <SnoopJ> ah
[18:16:44] <hodapp> this probably assumes that every column in fact has a 1 in it
[18:16:51] *** Parts: olliemath (~olliemath@ec2-3-11-125-100.eu-west-2.compute.amazonaws.com) ()
[18:17:02] <SnoopJ> yea, that's a relatively straightforward edge-case to check though
[18:17:42] <hodapp> this is probably also rather inefficient if there are a lot of extra 1s because I'd guess it's kinda O(n^2) with # rows/columns
[18:18:24] <SnoopJ> yea, using nditer would be best if the data were large and you wanted to early-exit, but also with all the complexity nditer comes with
[18:18:34] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[18:19:39] <hodapp> might depend on sparsity, who knows
[18:20:29] <SnoopJ> I wouldn't expect that it does, nonzero() scans the whole array
[18:20:35] <p-i-> gottit I think np.sum(np.maximum.accumulate(B, axis=0), axis=0)
[18:21:04] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:7437:27b5:6961:a0a9)
[18:21:39] <SnoopJ> that looks very indirect
[18:21:47] <hodapp> that looks cleaner than mine
[18:22:31] <OnceMe> CrtxReavr: any example
[18:23:19] *** Joins: y1n (~y1n@91.141.59.81.wireless.dyn.drei.com)
[18:24:02] <p-i-> https://bpa.st/4UCQ
[18:24:27] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[18:24:39] <p-i-> It can also operate in place with `out=B`, so I think that's what I was after
[18:24:41] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[18:24:43] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Read error: Connection reset by peer)
[18:27:35] <CrtxReavr> OnceMe, something like this maybe: https://bpa.st/L63Q
[18:28:54] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:29:27] <SnoopJ> p-i-, I would add an explanation of how it works nearby, the result looks right but I would have no idea what this code was doing if I saw it as such
[18:30:22] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 260 seconds)
[18:30:36] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Ping timeout: 258 seconds)
[18:31:00] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:31:13] <OnceMe> CrtxReavr: that looks weird
[18:31:20] <OnceMe> cant i just inject it somehow
[18:31:38] <CrtxReavr> Not with all those {}s.
[18:32:02] <CrtxReavr> I mean. . . json.loads() returns a dict.
[18:32:07] <SnoopJ> ah, maximum() is True at the first one, and then the expression is True forever more because of the accumulate, and the sum is the complement of the index. Clever!
[18:32:18] <grym> OnceMe: jinja2 can do {{- style substitution
[18:32:28] *** Joins: akk (~akk@75.161.146.115)
[18:32:39] *** Joins: marcello42 (~mp@p200300dfaf0e520178b80e9c76b5e17e.dip0.t-ipconnect.de)
[18:32:40] <OnceMe> something like this https://bpa.st/4I2A
[18:32:45] <CrtxReavr> That's how you do assignment within a dict (of dicts).
[18:33:16] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:33:29] *** Joins: interweb (~interweb@user/interweb)
[18:33:52] <OnceMe> grym: this is pure python, no templates
[18:33:56] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:34:06] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[18:34:14] <p-i-> SnoopJ: sounds like numpy ;)
[18:34:28] <OnceMe> CrtxReavr: there's no better way and more clean way?
[18:35:04] <p-i-> What I've started doing is maintaining foo.ipynb alongside foo.py. Otherwise I am clueless when I re-read my own code a month later.
[18:35:37] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[18:35:46] <hodapp> as much as I use notebooks, I try to do that in comments rather than notebooks
[18:36:49] <grym> OnceMe: for now
[18:36:50] <hodapp> SnoopJ: the complement of the index? i.e. some arithmetic is still needed?
[18:37:01] <p-i-> Benefit of notebook is that I can view/store output of cells. For image processing it's a W. picture > word * 1e3 etc.
[18:37:12] <p-i-> Wreaks havoc with VCS of course.
[18:37:13] *** Quits: interweb (~interweb@user/interweb) (Client Quit)
[18:37:24] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[18:37:41] <SnoopJ> hodapp, yea, the subtraction from `B.shape[0]` they did. The sum is the number of indices under the target value.
[18:37:46] <SnoopJ> at-or-under*
[18:38:32] <p-i-> yeah, np.maximum.accumulate sweeps thru an axis propagating any maximum-value forwards.
[18:38:43] *** Joins: curious_user (~curious_u@89-83-27-172.abo.bbox.fr)
[18:38:52] <curious_user> I need your help
[18:38:57] <p-i-> Another super-useful numpy gem
[18:39:01] <grym> curious_user: best ask, then
[18:39:05] <SnoopJ> yea, the reliance on the propagation wasn't immediately clear to me, hence my remark about legibility
[18:39:06] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:39:31] <p-i-> np.maximum.propagate would have been a nicer API I think.
[18:39:46] *** Quits: lyr (~lyr@user/lyr) (Remote host closed the connection)
[18:39:49] <SnoopJ> I wouldn't have any trouble reading it as: `num_below = np.maximum.accumulate(...); row_indices = B.shape[0] - num_below`
[18:40:02] <curious_user> https://pastebin.com/7UMJtxDH
[18:40:13] <p-i-> 👍
[18:40:14] <SnoopJ> p-i-, propagate would be a very confusing name for sum over the integers
[18:40:20] <curious_user> with this code, i cannot get them to work separatly
[18:40:37] *** Joins: lyr (~lyr@user/lyr)
[18:40:40] <curious_user> the first test end up the python script, and the second canno't pass
[18:40:53] *** Joins: Raf|Man (~RafMan@213-66-107-148-no537.tbcn.telia.com)
[18:40:53] <SnoopJ> the .accumulate bit is something that's available on all ufuncs
[18:41:01] <SnoopJ> (it's part of what makes a ufunc "universal")
[18:41:05] <CrtxReavr> OnceMe, old-style string substitution works: https://bpa.st/ZZEA
[18:41:30] *** Quits: curious_user (~curious_u@89-83-27-172.abo.bbox.fr) (Client Quit)
[18:41:57] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:42:40] <CrtxReavr> OnceMe, you're basically tring to manipulate a dict/json style object as a string.  Probably not a good idea, full stop.
[18:44:08] <hodapp> p-i-: how does it handle a column with only 0s though?
[18:44:32] <p-i-> hodapp: I'll cross that bridge when I segfault
[18:44:44] <Masklin_Gurder> [1,2,3,4,5,6]-[1,2,3] is a syntax error
[18:44:53] <Masklin_Gurder> I expected [4,5,6]
[18:45:08] <Masklin_Gurder> Hrmm
[18:45:18] <Masklin_Gurder> A bit naive, innit
[18:45:22] <p-i-> Masklin_Gurder: Nearly there
[18:45:23] <grym> that's a type error
[18:45:27] <grym> nto a syntax error
[18:45:29] <p-i-> Try {1,2,3,4} - {1,2}
[18:45:41] <Masklin_Gurder> grym: My bad
[18:45:42] <p-i-> i.e. using SETs not LISTs
[18:46:01] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[18:46:01] <Masklin_Gurder> I'll just slice instead, meh
[18:46:17] *** Joins: Viewday (~Viewday@user/viewday)
[18:46:25] <SnoopJ> hodapp, it should report row N+1 which is 'invalid'
[18:46:25] <grym> Masklin_Gurder: [1,2,3,4,5,6][3:] == [4,5,6] though
[18:46:37] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[18:47:08] <SnoopJ> i.e. it will be the number of rows, which is one more than the last row because they're indexed from 0
[18:47:19] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[18:47:20] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[18:47:21] *** Joins: white_snack (~white_sha@user/white-shadow/x-1132694)
[18:47:33] <p-i-> hodapp: It handles only-zero-cols fine. the sum comes out zero, and b.shape[0] - 0 gives the correct result.
[18:47:44] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[18:47:55] <SnoopJ> p-i-, it's not correct as an index
[18:47:57] <p-i-> oh yeah
[18:48:04] <SnoopJ> but it's a meaningful sentinel value
[18:49:24] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Quit: WeeChat 2.9)
[18:49:34] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:49:43] *** Quits: white_snack (~white_sha@user/white-shadow/x-1132694) (Client Quit)
[18:49:48] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Client Quit)
[18:49:52] *** Quits: Barones (~Barones@2804:7f3:8987:c42f:e519:2999:4571:c6ce) (Quit: Leaving)
[18:49:55] *** Joins: seabass (~seabass@user/seabass)
[18:50:16] *** Joins: sekiro (~sekiro@125-85.iitb.ac.in)
[18:50:59] *** Joins: roger_rdf (~roger_rdf@201-34-160-46.user3p.brasiltelecom.net.br)
[18:51:14] <coc0nut> noob question : is python data-types, containers, functions, conditions, and loops universal in like the same for all languages? :p
[18:51:18] <roger_rdf> hi everybody, can you help me with a problem about saving graphic imagenes please?
[18:51:33] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[18:52:27] <bjs> coc0nut: depends what you mean exactly
[18:52:35] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[18:52:39] <sekiro> coc0nut do you mean the syntax?
[18:52:42] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:52:46] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Client Quit)
[18:52:47] <roger_rdf> import pandas as pd
[18:52:48] <roger_rdf> from matplotlib import pyplot as plt
[18:52:48] <roger_rdf> from matplotlib import rcParams
[18:52:49] <roger_rdf> import seaborn as sns
[18:52:49] <roger_rdf> %matplotlib inline
[18:52:50] <roger_rdf> rcParams['figure.figsize'] = 5, 4
[18:52:50] *** litharge sets mode: +q $a:roger_rdf
[18:53:01] <grym> roger_rdf: bpa.st/+python please
[18:53:04] <bjs> coc0nut: the ideas and concepts are universal,  but the actual code and names and things are not
[18:53:10] <OMGOMG> that could have been entertainingly long
[18:53:22] *** litharge sets mode: -q $a:roger_rdf
[18:53:37] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[18:53:37] <coc0nut> I am quite new to programming, been into python for maybe 2 months now, and im wondering if I should start head in to java or c++ or if I should just go all in on python
[18:54:03] <Togra> that might be a personal preference type thing?
[18:54:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[18:54:07] <grym> coc0nut: imo it's best to learn one langauge pretty well, then pick up a few more
[18:54:12] <bjs> coc0nut: you should be wary of jumping around programming languages *too* much when you start learning.  In the end it doesn't really matter whether you pick Java, Python or C++ but I'd not try learn all 3 at once so quickly
[18:54:14] <Togra> personally if you're learning I think java might be a good pick, however, python is now my favorite
[18:54:17] <Togra> hell, you can try all three
[18:54:18] <grym> concurrently learning many languages at once with no programming background is just pain
[18:54:20] <coc0nut> It seems python is quite different. so learning e.g c++ after python would be like unlearning python to learn c++ ?
[18:54:30] <Togra> ideally no
[18:54:32] <grym> coc0nut: not really, no
[18:54:32] <bjs> coc0nut: there is a lot of overlap, and learning one will help the others
[18:54:33] <bjs> coc0nut: no.
[18:54:35] <seabass> coc0nut, I think you'll find other programming langauges fascinating. You don't need to unlearn anything; you'll just get better at all of them
[18:54:45] <roger_rdf> is possible to paste the code here?
[18:54:45] <Togra> ideally you want to learn programming in such a way that lessons learned with any language can be applied to any other
[18:54:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:54:57] <Togra> use a pastebin or something like that for code I think is the best way to go
[18:55:01] <grym> roger_rdf: no
[18:55:03] <bjs> roger_rdf: use a website like http://bpa.st/+python to create a link to the code
[18:55:27] <Togra> python is awesome and I like it, but it holds your hand a lot, which is also part of why I like it
[18:55:29] <Togra> however
[18:55:38] <Togra> I think that when you're learning, it's valuable to learn to do a lot of the more finicky things yourself
[18:55:44] <Togra> and python really tempts you to just let it handle sorting for you, etc.
[18:55:47] <roger_rdf> oh, great, thanks
[18:55:50] <roger_rdf> https://bpa.st/432A
[18:55:53] <bjs> coc0nut: and learning Python after C++ doesn't require you to "unlearn" C++ either.  The first language you use may or may not matter so much but what's important is that you stick with it and learn it, and then when you learn the next language it'll be easier
[18:56:10] <Togra> you can still learn with python certainly, but something like java and C++ might be a good idea. plus, you'll then be familiar with 2-3 languages and not just 1
[18:56:30] <Togra> jumping from any of these three to any of the others would certainly be a bit of a shock, but if you become an expert at C++, going to java after wouldn't be a big shock, nor python
[18:56:37] <Togra> different, yes, and you'd have to learn new stuff, but that's fine
[18:56:39] <SnoopJ> coc0nut, C++ is acquiring a lot of features that look very much like they're inspired by Python. C++17's structured bindings are the most prominent example I can think of.
[18:56:43] <grym> Togra: bjs is making a good point, though
[18:56:55] <Togra> yeah, sticking with one at first is a really good plan
[18:56:58] <Togra> makes things simpler
[18:57:12] <bjs> coc0nut: normally after a year or so people will have learned 2-3 similar languages,  but usually not all at once at the start :)
[18:57:13] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[18:57:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:57:27] <SnoopJ> Agreed, when one is new to programming itself, it can be *very* confusing to spread this learning across several languages at once.
[18:57:29] <Togra> I think I started with java, then tried perl? then later tried python, but didn't really mix them as much
[18:57:30] <coc0nut> super nice! thx for nice answers :D
[18:57:34] <Togra> and it was spread across many years
[18:57:44] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[18:57:54] <seabass> coc0nut: I've been programming for about ten years, but just in the last two years I've doubled the number of programming languages I use. Really, there's nothing stopping you bar your limited time :)
[18:57:54] <Togra> this might be an area where there's hard routes and easy routes to learn, but not necessarily a lot of wrong routes
[18:58:20] <coc0nut> hehe seabass :)
[18:58:43] <sekiro> i got so used to python and then one day had to write a java code. it didnt compile. then i checked back and saw i had not put semi colons in any of the lines xD
[18:59:00] <roger_rdf> I don't know the reason of the image without coluns (https://bpa.st/432A)
[18:59:15] <roger_rdf> I use the code in jupyter
[18:59:16] <seabass> coc0nut, can I also suggest reading lots of code on sites like GitHub and GitLab? It's a very nice way to be exposed to lots of ways of doing things
[18:59:18] <bjs> sekiro: right, but if you know Python really well then learning that kind of stuff will only take a few weeks.  It's not a "I have to re-learn everything now" :)
[18:59:21] <coc0nut> ive been taking 2 nice courses. the first one the most advanced one. progressive learning. learning when you feel off the coast ! then suddenly alot of stuff lightens up
[18:59:26] <seabass> you don't have to understand all code to learn from it
[18:59:34] <sekiro> bjs true
[18:59:43] <sekiro> guys, a doubt related to ML. if in my training dataset, the max range of any column is (1, 150), is minmaxscaling or any other feature scaling even going to help in training or i can just ignore it?
[18:59:47] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Quit: WeeChat 2.9)
[19:00:14] *** Quits: poon (~poooon@94.2.71.133) (Quit: Lost terminal)
[19:00:23] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 264 seconds)
[19:01:21] <seabass> I asked a question yesterday but it must have been missed, so I'd like to ask again :) Under what cases is it not allowed to write to __doc__ directly (eg. thing.__doc__ = """explanation""")
[19:01:22] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[19:01:29] *** Quits: Meteorhead (~Meteorhea@165.225.77.51) (Quit: Client closed)
[19:01:39] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 258 seconds)
[19:01:44] <deniska> seabass: static tools won't pick up on that
[19:01:44] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:01:48] <bjs> seabass: there are no cases where it's not allowed (so long as the object is not some weird read-only object)
[19:02:02] <seabass> bjs: well, I'm thinking my object might be :D
[19:02:07] *** Joins: naan (~Naan@user/naan)
[19:02:13] <bjs> seabass: but the main use of the __doc__ is for IDEs and documentation generators and stuff, and they won't be able to do anything with that
[19:02:24] <bjs> seabass: ... that sounds like you have some code/error and are trying to debug with vague IRC questions
[19:02:35] <bjs> seabass: is there some context I'm missing
[19:03:21] <bjs> (IDEs, documentation generators and humans(!) which all read the code not run it, so the assignment to __doc__ doesn't help them, is what i mean)
[19:03:34] *** Quits: xiongxin_ (~quassel@113.116.35.81) (Ping timeout: 258 seconds)
[19:03:53] <seabass> bjs: hmm, interesting; thanks :)
[19:04:10] <bjs> seabass: if you have a specific object you want help with, we can probably help if we know what the object is :P
[19:04:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[19:04:55] <seabass> bjs: TypeVar('T') - that's it :D
[19:05:05] <bjs> seabass: oh okay i have lots of questions now
[19:05:11] <bjs> you're trying to assign a __doc__ to it?
[19:05:11] <seabass> haha so do I lol
[19:05:27] <seabass> bjs: I'm not; someone else recently did and it's breaking some code I work on
[19:05:29] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 258 seconds)
[19:05:34] <seabass> bjs: https://salsa.debian.org/python-debian-team/python-debian/-/raw/f31ee8f3f14892eb42c64fd8513f4cb2a0081d10/lib/debian/_util.py
[19:05:39] <seabass> line 10 or so
[19:06:05] *** Joins: dld (~davidlowr@2601:197:600:1210:5c78:4bcc:82fe:593c)
[19:06:20] *** Joins: orbatos (~orbatos@user/orbatos)
[19:07:14] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 260 seconds)
[19:07:32] <seabass> is it possible to make a docstring at all on that object?
[19:07:33] <bjs> seabass: that __doc__ is not so useful
[19:07:37] *** Quits: Tas-sos (~Tas-sos@ppp005054067227.access.hol.gr) (Quit: leaving)
[19:07:46] <seabass> bjs: I agree there :D
[19:07:59] <bjs> seabass: probably not to attach it to the actual object,  but that doesn't stop you writing a comment, or giving it a descriptive name
[19:08:55] <seabass> bjs: thanks for the confirmation that it's probably a good idea to remove it :)
[19:09:10] <bjs> seabass: who would be the "consumer" of this docstring?
[19:09:25] <seabass> haven't a clue; I can't find any documentation anywhere
[19:09:31] <seabass> so presumably it's for the developers' IDEs
[19:10:17] <seabass> there is a link to online documentation in the README, but it's a broken link
[19:10:44] <OnceMe> CrtxReavr: what to do then
[19:11:56] *** Parts: roger_rdf (~roger_rdf@201-34-160-46.user3p.brasiltelecom.net.br) ()
[19:12:11] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[19:13:22] *** Quits: agireud (~agireud@136.49.88.21) (Remote host closed the connection)
[19:13:23] *** Joins: Guddu (~Guddu@200-90-224-92.baf.movistar.cl)
[19:13:33] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[19:14:10] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[19:14:50] <jinsun> seabass: how is it breaking something?
[19:15:05] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[19:15:07] <seabass> jinsun, the error is __doc__ is read only
[19:15:15] <seabass> AttributeError: 'TypeVar' object attribute '__doc__' is read-only
[19:15:36] *** Quits: Guddu (~Guddu@200-90-224-92.baf.movistar.cl) (Client Quit)
[19:15:38] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:15:54] *** Joins: agireud (~agireud@2605:a601:ab06:c700:211:32ff:fe32:e15f)
[19:16:08] *** Joins: Guddu (~Guddu@200-90-224-92.baf.movistar.cl)
[19:16:17] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[19:16:23] <grym> seabass: what version of python?
[19:16:24] <jinsun> hmm I can set it here on 3.9, maybe it is version dependent
[19:16:33] <grym> it's settable on 3.8 as well
[19:16:35] <seabass> grym: 3.6
[19:16:56] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[19:17:18] <grym> ah, could be too old
[19:17:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:17:31] <grym> or maybe you have a typing backport?
[19:17:38] <grym> that may have different behavior
[19:17:39] <seabass> the file imports typing
[19:17:54] <grym> yes, that's also what the backport is called :/
[19:17:59] <seabass> :o
[19:18:17] <grym> check your venv
[19:18:28] <grym> https://pypi.org/project/typing/
[19:18:29] <seabass> hmm, that's probably a little beyond my knowledge
[19:18:35] *** Quits: sekiro (~sekiro@125-85.iitb.ac.in) (Ping timeout: 256 seconds)
[19:18:37] *** Joins: MaximB (~MaximB@87.68.164.175)
[19:18:45] <grym> it claims to have no effect above 3.5 but it's a lie :)
[19:20:23] <jinsun> works on 3.7 also btw, I don't have 3.6 to check
[19:21:17] <seabass> sorry, I have to go now. Thanks for your help! :)
[19:23:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:24:46] <ToAruShiroiNeko> I realize this is probably not the correct place to ask this but, how can I see the console/log output of an IIS python application?
[19:25:52] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[19:26:50] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[19:27:43] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[19:27:47] *** Quits: OnceMe (~stefan@user/onceme) (Quit: Konversation terminated!)
[19:28:02] *** Quits: mozgalom_ (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[19:28:08] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:28:17] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:58f6:9256:95ca:a08d)
[19:28:21] <zen_coder> does the concept of constructors work in python simmilar like in C++?
[19:28:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[19:28:46] <grym> zen_coder: yes
[19:29:21] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3c3f:7182:f9c0:2044) (Ping timeout: 256 seconds)
[19:29:24] <zen_coder> however I saw that it is better to use this "with" statement in python with dtors
[19:29:32] *** Joins: sartan (~sartan@user/sartan)
[19:29:38] <zen_coder> or is this optional?
[19:29:44] <grym> context managers are a good way to clean up state
[19:30:06] <grym> (you cannot, in general, rely on __del__ ever being called)
[19:30:08] <acegallagher> is there a way to change the number of cpus/processes a pool uses *while* it's executing
[19:30:16] <acegallagher> i.e. to dynamically allocate CPUs
[19:30:20] *** Joins: cruncher (~cruncher@46-127-100-145.dynamic.hispeed.ch)
[19:31:01] <yitz> Thoughts on using abc.ABC for mixin/base type classes purely for the purpose of forcing instances to implement specific functions? Based on the ABC PEP, that's not the purpose of ABC
[19:31:17] <acegallagher> i could modify pool._processes but I'm not sure what will happen
[19:31:18] *** Quits: vladoski (~vladoski@2001:b07:add:d406:4924:9759:8700:453a) (Remote host closed the connection)
[19:31:22] <grym> yitz: it's not really, no
[19:32:47] <yitz> It's entirely not what the PEP is about. But it seems like a fair number of people use ABC as a Java abstract, to lay out what ought to be implemented. Is that bad? Is there a downside or any reason not to use it for that?
[19:33:18] <SnoopJ> yitz, well, there's typing.Protocol now
[19:33:38] *** Joins: AlanMD_ (~AlanMD@86.121.179.183)
[19:33:47] <SnoopJ> although this doesn't "force" the matter in the same way unless you decorate with @runtime_checkable
[19:33:50] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:33:51] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[19:34:29] <yitz> My coworker was arguing that catching not-implemented at instantiation is better. I was arguing that's what unit tests are for and that adding abstract adds unnecessary cognitive complexity and doesn't bring much value
[19:34:29] *** dcaro is now known as dcaro_away
[19:35:12] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-1017-8ef5-a6b6-4f0d.res6.spectrum.com)
[19:35:19] <grym> abcs are not contracts the way that, say, c#'s Interfaces are
[19:35:28] * SnoopJ wonders if the arguments are for argument's sake
[19:35:30] <grym> you can cheerfully ignore them at runtime and nobody's gonna stop you
[19:35:38] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[19:35:59] <grym> yitz: i think things like zope.Interface are more rigorous?
[19:36:02] <SnoopJ> grym, you can't ignore @abstractmethod though
[19:36:40] <grym> SnoopJ: you can ignore the signatures though, right?
[19:36:43] <grym> like it's just the name
[19:36:46] <grym> (i forget)
[19:36:48] <yitz> SnoopJ: mostly ... though the discussion did block my PR approval for a few days
[19:37:13] *** Quits: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de) (Quit: WeeChat 3.3)
[19:38:01] <SnoopJ> grym, you can definitely ignore it with Protocol, not sure about abstractmethod
[19:38:22] <grym> yeah, you can: https://bpa.st/ZYBA
[19:38:50] <SnoopJ> my point was more that Protocol is something you check yourself or count on your users to static-analyze against. An ABC is "subclass this" as API and forces the user into the check
[19:38:58] <SnoopJ> although "check yourself" is pretty okay too
[19:39:36] <SnoopJ> depends on what you're doing, I guess
[19:40:31] <grym> coming from languages where failure to adhere to an interface is a build-time error, abcs always felt too permissive in a way that's almost deceptive
[19:42:36] *** Joins: interweb (~interweb@user/interweb)
[19:42:52] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[19:43:13] <SnoopJ> ah, it fails at instantiation time, not class definition time
[19:43:29] <SnoopJ> and you can indeed change the signature
[19:43:30] <spaceone> python3 -m build always selects a version for me - how can i specify the version explicit?
[19:43:31] * hodapp twiddles thumbs because he can't proceed until someone figures out which layer of their bullshit Lasagna Code isn't passing some very important data to the layer that needs it...
[19:44:40] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[19:45:35] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[19:46:30] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[19:46:50] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[19:46:52] <Macuser> uhh wouldn't this result in a "not supported between instances of 'builtin_function_or_method'" error? https://www.kite.com/python/answers/how-to-iterate-through-a-range-of-dates-in-python
[19:48:30] <spaceone> nvm, i just manipulated setup.py instead of "use_scm_version"
[19:49:10] <Staunch> so i have a library that i think i want to split out into a "core" library and some plugins for it. Does it make sense to do this in one repository, or should i make separate repositories for each plugin?
[19:49:48] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[19:51:47] *** EgonX_ is now known as EgonXMBP
[19:52:20] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:55:13] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[19:55:15] <akk> Staunch: One repository, at least if the plugins are fairly small. Maybe separate if the plugins add a lot to the disk space footprint.
[19:55:33] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[19:57:44] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 265 seconds)
[19:58:30] *** Quits: magla (~gelignite@55d41a29.access.ecotel.net) (Quit: Stay safe!)
[19:59:00] <Staunch> akk: would i be able to use one setup.py to describe each of the modules, or would i use separate setup.py files for each one? It's really hard to find resources about this
[19:59:21] <Macuser> TypeError: unsupported operand type(s) for +=: 'datetime.time' and 'datetime.timedelta'
[19:59:27] <Macuser> how can I fix that?
[19:59:33] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56) (Remote host closed the connection)
[19:59:50] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[20:00:34] <akk> Staunch: The normal thing would be to have setup.py install all the plug-ins. I'm sure it would be possible to modify it to let you specify which modules -- it's python, after all -- but I think that's fairly nonstandard.
[20:01:30] <akk> Staunch: Could you do something like, have setup.py install the main program, then have the main program be responsible for choosing which plugins get installed?
[20:01:35] <Staunch> akk: hm... i was thinking folks would be able to install the plugins they want to, rather than getting all of them no matter what. Then again, i was also hoping the plugins would install themselves in the core library path, like `screenpy` is the core, then you could do `screenpy.selenium` to get the Selenium plugin objects
[20:02:00] <Staunch> akk: i probably could! I'm not sure how to do that though.
[20:02:49] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[20:03:00] *** Joins: enyc (~enyc@user/enyc)
[20:03:14] *** Quits: AlanMD_ (~AlanMD@86.121.179.183) (Ping timeout: 260 seconds)
[20:03:20] <akk> Staunch: I just added plugin capability to one of my programs, and what I did was have a subdirectory "helpers" that the main program adds to its sys.path
[20:03:55] <akk> Staunch: then if the config file specifies that it uses a helper, the program imports it. I'm not claiming this is necessarily right or best, but that's how I did it.
[20:04:27] <Macuser> oof
[20:04:30] *** Joins: interweb (~interweb@user/interweb)
[20:04:32] <Macuser> https://stackoverflow.com/questions/12448592/how-to-add-delta-to-python-datetime-time
[20:04:35] <akk> Staunch: So all the helpers that ship as part of my program are there in the directory, but they're only imported if the user specifies that helper.
[20:04:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[20:04:55] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:05:04] <Staunch> akk: interesting, that might work for me. Can i see your code? Is it hosted somewhere?
[20:06:16] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[20:06:37] *** Joins: fikran (~fikran@user/fikran)
[20:06:42] *** Quits: MaximB (~MaximB@87.68.164.175) (Quit: Client closed)
[20:06:52] *** Joins: subopt (~subopt@2603-8081-2302-459a-dd29-6d14-ef1f-cf55.res6.spectrum.com)
[20:07:11] <akk> Staunch: https://github.com/akkana/feedme/blob/master/feedme.py -- particularly lines 117-119 and 814-on
[20:07:30] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:08:31] <Staunch> "feedme blob master feedme" is a disturbingly cogent statement in a URL path
[20:08:50] <akk> Staunch:  :)
[20:08:56] <Macuser> fixed it
[20:09:56] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[20:10:15] *** Joins: pikajude (~pikajude@c-73-241-157-84.hsd1.ca.comcast.net)
[20:10:28] <Staunch> akk: i love the comments, this is very readable. Thank you!
[20:10:36] *** Quits: Raf|Man (~RafMan@213-66-107-148-no537.tbcn.telia.com) (Remote host closed the connection)
[20:10:43] <akk> Staunch: You're welcome, hope it helps!
[20:10:46] <pikajude> is there a way for me to define multiple type signatures for one of my functions? like if i mouse over `subprocess.run` in vscode, it has multiple signatures where the return type changes based on the arguments
[20:10:56] <pikajude> subprocess.run(..., text=True) returns CompletedProcess[str] for example
[20:11:01] <akk> (and thanks for the compliment :)
[20:11:11] <pikajude> i tried googling this but all the results are stackoverflow questions about what a union type is :)
[20:12:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:12:28] <akk> pikajude: In python, instead of defining a function a bunch of times, you define it with a flexible argument signature ... either optional named arguments, or *args and **kwargs
[20:12:40] <pikajude> yeah, i get that
[20:12:40] *** Joins: interweb (~interweb@user/interweb)
[20:13:02] <pikajude> but i want to specify that the return type depends on the argument values
[20:13:31] <KirkMcDonald> pikajude: I think you are looking for @overload: https://mypy.readthedocs.io/en/stable/more_types.html#function-overloading
[20:13:39] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:13:43] <pikajude> looks like i am. thanks
[20:13:51] *** Joins: vladoski (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b)
[20:14:19] <coc0nut> so its actually worse learning python after another language than it is learning another language from python ? :P
[20:14:32] *** Joins: orbatos_ (~orbatos@user/orbatos)
[20:14:39] <SnoopJ> coc0nut, not really, but learning more than language at a time is harder than learning just one.
[20:14:54] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[20:15:03] <akk> coc0nut: No, it's worse learning another language after python because you're forever going "I CAN'T BELIEVE IT'S THIS HARD, IN PYTHON THIS WOULD BE ONE LINE!"
[20:15:17] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:15:17] <coc0nut> lol
[20:15:23] <akk> :)
[20:15:49] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:16:02] <SnoopJ> The underlying concepts (computer science/math) are the same, what changes between languages is how you refer to and arrange those concepts
[20:16:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:16:41] <coc0nut> yeah, i guess its better to write python with a different language accent than learning a language after python :p
[20:16:42] <SnoopJ> And just like any other language, literal translations are often bad, you have to learn the idioms :)
[20:16:44] *** Joins: donald1 (~donald@37.171.141.128)
[20:16:48] <donald1> a
[20:17:40] <SnoopJ> you'll see this pretty often with people who learned a language with C-style loops before Python, they'll tend to write `for n in range(len(seq)): do_something(seq[n])` instead of `for val in seq: do_something(val)`
[20:17:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:18:11] <SnoopJ> and the other way around, someone who learned iteration in Python might be confused why they have to do all kinds of index juggling in other languages that do it that way.
[20:18:27] *** Quits: pikajude (~pikajude@c-73-241-157-84.hsd1.ca.comcast.net) (Quit: Leaving)
[20:18:44] <coc0nut> yeah
[20:19:12] <Togra> think of it as learning how to design algorithms, not necessarily attached to any particular language or syntax
[20:19:28] <Togra> you think of how you want your code to work, how you want it to get from A to B, and then after that, how to do it in the language you're using
[20:19:57] <Togra> I am also hella guilty of "for i in range(0, len()):" loops
[20:20:01] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[20:20:54] *** Joins: jay-m1262 (~jay-m@129.0.77.213)
[20:20:55] <akk> SnoopJ: So true about the loops. I don't have any difficulty switching back to C loops, but in javascript which has "for x in myarray" I'm forever forgetting that x is just the index, not myarray[index].
[20:21:12] <coc0nut> hehe, i noticed. speaking to a c++ guy while doing courses.. he gives me explainations with c++ accent
[20:21:23] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 264 seconds)
[20:21:54] <coc0nut> i dont want to compare it with real life languages
[20:21:58] <SnoopJ> it can be particularly hard to translate between those two, because the STL is...in flux, let's say.
[20:21:59] <Staunch> haha that's a great way to describe it though
[20:22:02] *** Quits: thiras_ (~thiras@user/thiras) (Quit: Leaving)
[20:22:26] *** Staunch is now known as Stench
[20:22:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:23:01] <dob1> it's not clear to me how to read data from standard input like when you pipe commands on linux, I was looking sys.stdin
[20:23:47] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[20:24:16] <ChrisWarrick> dob1: sys.stdin is a file-like object
[20:24:31] *** Quits: vladoski (~vladoski@2001:b07:add:d406:443:286d:cfe2:4f2b) (Ping timeout: 252 seconds)
[20:25:46] <donald1> Hello. I want to inherit of WinProcess only if I am on windows. this is a hack before I use winprocess as attribute because I am copying a code on internet
[20:25:56] <donald1> I tried class process(WinProcess if sys.platform.startswith("win") else str, tube):
[20:26:04] <donald1> class process(WinProcess if sys.platform.startswith("win") else None, tube):
[20:26:06] <donald1> sorry
[20:26:07] *** Joins: thiras (~thiras@user/thiras)
[20:26:29] <donald1> but I can not inerit of a NoneType
[20:26:42] <ChrisWarrick> donald1: you can’t inherit from a class determined at runtime
[20:26:48] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:26:52] <donald1> ah :(
[20:26:59] <donald1> ok
[20:27:11] <donald1> I will directly edit my script
[20:27:12] <ChrisWarrick> donald1: making an instance of WinProcess an attribute is a very valid approach, and some people would even consider it a better approach (composition over inheritance)
[20:27:36] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[20:27:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:27:54] <dob1> ChrisWarrick, so input = sys.stdin.read().replace('\n', '')   this way?
[20:28:09] <ChrisWarrick> dob1: try it and see?
[20:28:16] <dob1> it seems ok
[20:29:13] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[20:29:14] *** Joins: interweb (~interweb@user/interweb)
[20:29:50] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:30:45] *** Quits: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net) (Quit: bilb_ono)
[20:31:33] *** Joins: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net)
[20:32:22] *** Joins: emf (~emf@2620:10d:c090:400::5:c0de)
[20:32:23] *** Joins: p-i-_ (~Ohmu@223.206.147.206)
[20:32:51] <whatsupdoc> why does this not work? for innerlist in nestedlist: innerlist = [1,2,3]
[20:32:53] *** Quits: jay-m1262 (~jay-m@129.0.77.213) (Ping timeout: 258 seconds)
[20:33:12] <hrob> I'm using TypedDict  as a typehint for pydantic , but I run into trouble when using keys that conflict with python syntax - e.g.
[20:33:13] <whatsupdoc> nestedlist remains unmodified
[20:33:27] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:33:34] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 260 seconds)
[20:33:47] *** Joins: alzgh (~alzgh@user/alzgh)
[20:33:52] *** Joins: jay-m1262 (~jay-m@129.0.205.218)
[20:34:02] <jinsun> whatsupdoc: looks like you need to read http://bit.ly/pynames1
[20:34:06] <ChrisWarrick> whatsupdoc: the `innerlist` variable is assigned the value of the inner list. Then you reassign it to something else. Perhaps start here: https://nedbatchelder.com/text/names1.html
[20:34:44] <hrob> class Names(TypedDict): \ is: str                  conflicts because "is" is a keyword
[20:35:04] <hrob> * I mean "is" is a python keyword
[20:35:09] <whatsupdoc> that ned guy gets namedropped every time
[20:35:13] <SnoopJ> hrob, but you have a dict key that is "is"?
[20:35:34] *** Quits: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th) (Ping timeout: 258 seconds)
[20:35:39] <hrob> SnoopJ  yes  dict key "is"    I cant seem to give it in string quotes
[20:36:14] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:36:16] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[20:36:21] <hrob> is var == "icelandic"     en: str    is fine
[20:36:22] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[20:36:31] <hrob> is == icelandic
[20:36:34] <SnoopJ> hrob, I think you want do do: `TypedDict("Names", {"is": str, ...})`
[20:36:42] <rakoon> How can i overload the max function in my class?
[20:36:42] <donald1> grym: donald1: pip install takes a directory or package name, not a file name => IN want to install setup.py
[20:36:48] <SnoopJ> want to* do
[20:36:56] *** Joins: zeden (~zeden@user/zeden)
[20:37:32] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:37:40] <hrob> SnoopJ, excellent, no need to derive -- was just following one example in docs
[20:37:42] *** Joins: paul424 (~tom@ip-31-0-124-96.multi.internet.cyfrowypolsat.pl)
[20:38:10] <DocMors> does anyone use geany for python? it's using uxterm for running code, is there a way to make it for example mate-terminal?
[20:38:34] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[20:39:04] *** Joins: mickey8 (~user@user/mickey)
[20:39:11] <ChrisWarrick> rakoon: are you referring to the max() builtin? it uses standard ordering methods
[20:39:14] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[20:39:14] <whatsupdoc> so it's impossible to do it?
[20:39:44] <whatsupdoc> am i limited to pop() and append()?
[20:40:36] *** Joins: Akuli (~Akuli@82-203-164-141.bb.dnainternet.fi)
[20:40:48] *** Quits: yac (~user@user/yac) (Quit: .)
[20:40:55] <rakoon> ChrisWarrick: yes, what is standard ordering methods? :/ i tried to overload all __gt__ etc methods but didnt succeed
[20:41:05] <ChrisWarrick> rakoon: but didn’t succeed?
[20:41:25] *** Joins: sbrown (~sbrown@66.44.16.44)
[20:41:29] <DocMors> 'sudo update-alternatives --config x-terminal-emulator' does the trick
[20:41:52] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:79eb:ea87:6f38:cccf)
[20:42:05] <rakoon> ChrisWarrick: when i call max(cls(1), cls(2)) it returns <__main__.cls> at 12312313
[20:42:13] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:42:18] <ChrisWarrick> rakoon: and what do you expect?
[20:42:23] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[20:42:27] <rakoon> ChrisWarrick: 2 :D
[20:42:35] <rakoon> oh sry
[20:42:43] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[20:42:45] <rakoon> you are right im dumb
[20:42:46] <ChrisWarrick> rakoon: that’s an issue with __repr__/__str__
[20:42:50] <rakoon> oh
[20:42:50] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:42:53] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[20:42:56] <rakoon> ok ok let me try again
[20:43:49] <rakoon> ChrisWarrick: btw do u know which of the magic methods i need to overload to avoid overloading all of them?
[20:44:08] *** Quits: drew (~drew@user/drew) (Ping timeout: 265 seconds)
[20:44:20] *** Joins: CoolerX (~CoolerX@user/coolerx)
[20:44:22] *** Joins: magla (~gelignite@55d41a29.access.ecotel.net)
[20:44:43] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[20:44:53] <rakoon> i guess i need to overload all
[20:45:14] <ChrisWarrick> rakoon: not really
[20:45:15] *** Joins: interweb (~interweb@user/interweb)
[20:45:16] <ChrisWarrick> rakoon: https://docs.python.org/3/reference/datamodel.html#object.__lt__
[20:45:26] <ChrisWarrick> rakoon: https://docs.python.org/3/library/functools.html#functools.total_ordering
[20:45:40] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[20:45:51] *** Joins: tall (~tall@2600:1700:1fd8:1ef0:35ad:6148:9346:6a1c)
[20:45:58] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[20:46:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[20:47:20] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:47:27] *** Quits: jay-m1262 (~jay-m@129.0.205.218) (Read error: Connection reset by peer)
[20:47:34] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[20:47:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:47:42] *** Joins: drew (~drew@user/drew)
[20:47:59] <whatsupdoc> Ned talks about the problem, but doesn't give a solution to the problem
[20:48:53] <whatsupdoc> I am tempted to do: for range(len(nestedlist)): nestedlist[i], but IRC seems to hate range(len())
[20:49:06] <rakoon> ChrisWarrick: i implemented only __lt__ (without total_ordering) and min/max worked, am i fine? :/
[20:49:08] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[20:49:33] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[20:49:37] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:6094:3c0:9f71:d454) (Quit: Textual IRC Client: www.textualapp.com)
[20:49:39] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:49:41] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[20:49:57] *** Quits: mat001 (~mat001@213.143.69.121) (Read error: Connection reset by peer)
[20:50:23] <sartan> is this a case for i, elem in enumrate(nested_list) ?
[20:50:34] *** Joins: stavros (~stavros@pon1039.cpe.hcn.gr)
[20:50:34] *** Joins: mat001 (~mat001@213.143.69.121)
[20:50:39] <hrob> SnoopJ: that worked great ! thanks.   Do you know if typing allows me to constrain the form of the keys in the TypedDict ?
[20:50:50] <sartan> enumerate*
[20:50:50] *** Quits: donald1 (~donald@37.171.141.128) (Ping timeout: 260 seconds)
[20:50:58] <stavros> Hello, what is the easiest way to get the return values of a function deep in the call stack when testing?
[20:51:05] <ChrisWarrick> rakoon: I wouldn’t depend on that
[20:51:09] <whatsupdoc> sartan: maybe
[20:51:24] <rakoon> ChrisWarrick: alright, thanks for your help
[20:51:40] <hrob> SnoopJ:  I.e. could I say the TypedDict keys can only be two char long, instead of saying what they are specifically
[20:51:42] <whatsupdoc> There are mutliple ways to solve it. My question is usually, which is best
[20:51:46] *** Quits: tall (~tall@2600:1700:1fd8:1ef0:35ad:6148:9346:6a1c) (Remote host closed the connection)
[20:51:58] <whatsupdoc> I assume the answer is don't use range(len())
[20:52:22] <SnoopJ> hrob, I don't think it does, but maybe you could do dict[ContrainedKeyT, ValueT]?
[20:52:45] <SnoopJ> assuming you can express the constraint in a more general annotation, which I don't have any immediate ideas about how to do
[20:53:12] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[20:53:15] <SnoopJ> Pydantic could definitely do it though, heh.
[20:53:16] <hrob> SnoopJ  ok so its about defining my own Type
[20:53:20] <ChrisWarrick> whatsupdoc: in the general case, enumerate would be fine
[20:53:33] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[20:53:40] <ChrisWarrick> whatsupdoc: for this specific problem, perhaps l.clear() + l.extend() if you don’t mind the list contents changing in place
[20:53:51] <SnoopJ> hrob, well, I don't know if there's any way to express the length constraint in a custom type
[20:53:52] *** Quits: EgonXMBP (~EgonX@2601:2c6:47f:879e:7437:27b5:6961:a0a9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:54:11] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[20:54:15] <SnoopJ> hrob, TypedDict is more like "these specific keys should have values with these types" though
[20:54:28] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[20:54:45] <hrob> SnoopJ  yes, its probably about defining a custom type as you say -- I'll google custom typing with pydantic  .. must be a common issue
[20:55:04] <whatsupdoc> which is better? option 1 or option 2? https://dpaste.org/BBT4
[20:55:11] *** Joins: mickey8 (~user@user/mickey)
[20:55:16] <hrob> SnoopJ  yes, it would be part of a dict then
[20:55:20] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[20:55:35] <SnoopJ> whatsupdoc, option 1
[20:55:35] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Ping timeout: 264 seconds)
[20:55:39] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[20:56:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:56:33] <SnoopJ> hrob, in Pydantic you'd use constr() https://pydantic-docs.helpmanual.io/usage/types/#arguments-to-constr
[20:56:43] <SnoopJ> I don't know if a type analyzer is gonna pick up on that though
[20:56:48] *** Joins: interweb (~interweb@user/interweb)
[20:56:51] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:7437:27b5:6961:a0a9)
[20:56:55] <SnoopJ> I don't think they would
[20:57:11] <ChrisWarrick> whatsupdoc: Option 3: listnums = [[str(x) for x in ele] for ele in listnums]
[20:57:32] <hrob> SnoopJ yeah... im mostly concerned about pydantic within FastAPI  how it renders OpenAPI / swagger instructions
[20:57:38] <hrob> so it might do what I need
[20:57:56] <sartan> class Magic()
[20:58:42] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Remote host closed the connection)
[20:58:45] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[20:58:46] <whatsupdoc> ChrisWarrick: at point should you stop condensing code into a single line?
[20:59:07] *** Quits: y1n (~y1n@91.141.59.81.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[20:59:13] <whatsupdoc> Cuz I feel like I could write a function in 3 lines that I would normally write it in 15
[20:59:22] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:59:28] <whatsupdoc> And that happens all the time in python
[20:59:44] <whatsupdoc> It's like I'm programming in lisp
[20:59:55] <ChrisWarrick> that’s always a subjective thing
[21:00:33] <ChrisWarrick> Also, there’s an Option 4: [list(map(str, ele)) for ele in listnums]
[21:00:58] <whatsupdoc> My example is a little more complicated
[21:02:23] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[21:02:53] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-e581-d43f-7f8e-087a.res6.spectrum.com) (Quit: Leaving.)
[21:03:13] *** Joins: arinov (~arinov@31.142.50.8)
[21:03:30] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Read error: Connection reset by peer)
[21:03:51] *** Quits: horseface (~horseface@user/horseface) (Quit: I am brb I reckon... Sirs.. Ma'am... PATRONS! OF! THE! UNIVERSE!!! AHA!!! <3 !!!)
[21:04:05] *** Joins: horseface (~horseface@user/horseface)
[21:05:11] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:7437:27b5:6961:a0a9) (Ping timeout: 264 seconds)
[21:05:19] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Remote host closed the connection)
[21:08:22] *** Joins: BlueSky (~BlueSky@user/bluesky)
[21:08:51] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[21:11:17] *** Joins: manti7 (~manti7@176.10.104.94)
[21:11:45] *** Joins: ckdCreations (~ckdCreati@147.55.133.139)
[21:12:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:12:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:12:41] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[21:14:03] *** Joins: interweb (~interweb@user/interweb)
[21:14:53] <SnoopJ> hrob, ah, in that case, definitely use Pydantic's functionality here. `ConKey = constr(...); ConDict = dict[ConKey, Value_T]` would let you annotate fields with `ConDict` elsewhere.
[21:16:45] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:7437:27b5:6961:a0a9)
[21:17:27] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:7437:27b5:6961:a0a9) (Client Quit)
[21:18:07] *** Quits: naan (~Naan@user/naan) (Ping timeout: 258 seconds)
[21:18:27] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[21:18:39] *** Joins: Auron (~Auron956@user/auron)
[21:19:40] *** Joins: jay-m1262 (~jay-m@154.72.163.187)
[21:22:27] *** Joins: Hazza (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[21:23:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 264 seconds)
[21:23:17] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Ping timeout: 265 seconds)
[21:23:46] *** Joins: wedgie (~wedgie@swift/wedgie)
[21:26:23] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:27:47] *** Quits: mcon (~Thunderbi@host-79-55-31-159.retail.telecomitalia.it) (Quit: mcon)
[21:28:09] *** Quits: Hazza (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[21:29:53] *** Quits: stavros (~stavros@pon1039.cpe.hcn.gr) (Quit: Leaving)
[21:30:03] *** Joins: teut (~teut@182.68.178.118)
[21:30:10] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[21:30:15] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[21:30:28] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:31:04] *** Joins: raxor2k (~raxor2k@78.158.254.247)
[21:31:41] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[21:31:51] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[21:31:53] <raxor2k> lets say i have a 'dict = {"suggested_programs": [], "other_programs": []}    is there a way to set a max length of "suggested_programs" list?
[21:32:30] *** Quits: l4yer (~l4yer@2a02:6ea0:e102:0:1011:23c9:cfaf:3bc9) (Ping timeout: 268 seconds)
[21:32:53] <Peng> You could check the length before appending stuff.
[21:33:15] <raxor2k> thats a valid point
[21:33:26] <enrh> TIL that pydantic by default creates copies of clesses when encountering them for fields and private attributes! Any other gotchas anyone else can think of?
[21:33:56] <SnoopJ> enrh, it copies the *class*? Or makes instances of it?
[21:34:13] *** Quits: marcello42 (~mp@p200300dfaf0e520178b80e9c76b5e17e.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[21:34:22] <enrh> I believe it copies the class as in using the copy lib
[21:34:45] <enrh> I did some PyTests with `id` and caught it
[21:34:56] <SnoopJ> enrh, can you show us? That sound very weird
[21:35:00] <SnoopJ> sounds*
[21:35:15] <enrh> https://github.com/samuelcolvin/pydantic/blob/master/pydantic/main.py#L655
[21:35:23] <Peng> raxor2k: https://docs.python.org/3/library/collections.html#collections.deque might also be suitable
[21:35:30] *** Quits: paul424 (~tom@ip-31-0-124-96.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[21:36:07] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[21:36:16] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[21:36:32] <Wooble> well, depending on the behavior you want when trying to append an extra item...
[21:37:03] <enrh> There isn't a scenario where I want it to do this, and I was to override. https://pydantic-docs.helpmanual.io/usage/model_config/#change-behaviour-globally
[21:37:14] <SnoopJ> TIL
[21:37:16] <enrh> copy_on_model_validation
[21:37:32] <enrh> The settings effects the class being copied
[21:37:43] <enrh> ... not the class you're copying it into.
[21:37:50] <enrh> Err putting it
[21:37:58] <enrh> :)
[21:38:14] <enrh> So.... any other gotchas?! Are you wondering too, now, SnoopJ?
[21:38:40] <enrh> pydantic is at the core of my projects now
[21:38:53] <mav`rik> Hi all. I've been trying to use pydantic with an inherited type since I have two dicts, one with a filename key, another with a url key. I'd like both dicts to result in an object with a file_reference attribute. I'd hoped I could use inheritance with Field(alias="url") in one and alias="filename" in another. How am I to instantiate one of these objects directly? Do I have to use a Union, or can I rely
[21:38:59] <mav`rik> (somehow) on parse_obj to resolve the correct type based on keys?
[21:40:42] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:42:05] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:42:32] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[21:44:32] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:e9e4:b21b:95a3:3cbf)
[21:44:38] <donald1> grym: donald1: like a text file? :) => yes
[21:46:26] *** Joins: Celeo (~Celeo@user/celeo)
[21:46:27] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:46:31] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:a5f6:b502:565b:9aff)
[21:47:10] <SnoopJ> enrh, nothing in particular comes to mind, but you've dug deeper here than I have before, so this is unfamiliar terrain to me
[21:47:26] <grym> donald1: i like it best when my programs serve useful purposes
[21:48:23] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 264 seconds)
[21:49:49] <hrob> SnoopJ, thanks so much... I was confused there about use of "constr" method ... this is beautiful
[21:50:13] *** Joins: strywgr (~none@101.53.224.196)
[21:50:20] <grym> the various con* things that pydantic provides are very, very handy
[21:50:29] <strywgr>  hi everyone.. Im getting an error on my discord bot. -> https://pastebin.com/d3D5X1wt
[21:50:31] <infobob> https://bpaste.net/NH4A (repasted for strywgr)
[21:50:32] <grym> it's not quite dependent types, but it's darn close
[21:50:49] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[21:50:52] <strywgr> any help will be appreciated
[21:51:05] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[21:51:20] <grym> strywgr: that error message is pretty straightforward; what's confusing about it to you?
[21:51:22] *** Quits: dxrt (~dxrt@user/dxrt) (Ping timeout: 252 seconds)
[21:51:27] <hrob> but I have preferred to hard code stuff a lot myself here-until lol, but working with a team interested in FastAPI I'm seeing all these new approaches
[21:51:56] <hrob> and type hints are making more sense to me as a result
[21:52:07] <grym> fastAPI is great, too
[21:52:12] <strywgr> i tried creating by a yt video ;o
[21:52:17] *** Joins: dxrt (~dxrt@user/dxrt)
[21:52:19] <grym> i use con- stuff in my endpoints a lot
[21:52:27] <whatsupdoc> Is it better to remove items from a list or create a new list?
[21:52:28] <hrob> grym its a worthwhile learning curve I realize
[21:52:42] <grym> whatsupdoc: depends on what you want to do with what's left over
[21:52:59] <grym> whatsupdoc: but x = [thing for thing in x if isagood(thing)]  is pretty normal
[21:53:00] <strywgr> everyone else's comment is that it works, its not working on my end
[21:53:33] <Wooble> strywgr: you probably indented something wrong; show the code.
[21:53:34] *** Joins: stealth[] (~stealth]@i6DFA2725.versanet.de)
[21:53:40] *** Joins: l4yer (~l4yer@2a02:6ea0:e102:0:1011:8d08:ca14:8f03)
[21:54:07] <whatsupdoc> I made a copy of a list before modifying it. Not sure if that's the best practice
[21:54:21] *** Joins: stavros (~stavros@pon1039.cpe.hcn.gr)
[21:54:21] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[21:54:30] <Wooble> whatsupdoc: usually better to create a new list with the items you want, not copy then remove.
[21:54:36] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:d8a9:28d8:19ca:f9b9)
[21:55:01] <stavros> I am trying to get a class method's return value in my tests, and I have mocked the class method with a function, and I want to get the class instance that is passed to this method as `self` from the function. How can I do that?
[21:55:17] *** Joins: y1n (~y1n@77.119.199.199.wireless.dyn.drei.com)
[21:55:45] *** Quits: strywgr (~none@101.53.224.196) (Killed (NickServ (GHOST command used by strywgr1)))
[21:55:51] <mav`rik> stavros: that sounds like it's something that should occur automatically. Do you have some code on a pastebin we could look at?
[21:55:59] *** Joins: ubert (~Thunderbi@91.141.50.28.wireless.dyn.drei.com)
[21:56:03] *** Joins: strywgr (~none@101.53.224.196)
[21:56:06] *** Joins: mustache_ride (sid451683@user/mustache-ride/x-6533344)
[21:56:14] *** Joins: pycurious (~Adium@user/pycurious)
[21:56:33] <strywgr> Wooble: https://pastebin.com/pEUFYq6e
[21:56:34] <infobob> https://bpaste.net/DLVA (repasted for strywgr)
[21:56:46] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[21:57:28] <Wooble> strywgr: lines 15 and 16 should be indented more, as part of the on_message function.
[21:57:29] <mav`rik> strywgr: lines 15 and 16 aren't indented, so aren't part of the on_message function
[21:57:35] <pycurious> anyone has any experience with cors problem in nginx with python servers - https://dpaste.org/8Nvj ? I could use some help. Thanks.
[21:58:00] <whatsupdoc> Why isn't there a list difference in python?
[21:58:20] <Wooble> whatsupdoc: what would that even mean?
[21:58:24] <stavros> mav`rik, I think I don't have the right mock method, because it's not doing it... I'm just doing `with patch("my_module.MyClass.method"), side_effect=alternate_method):`
[21:58:33] <Wooble> whatsupdoc: but there's difflib...
[21:58:39] <stavros> I don't have a minimum reproducible example right now
[21:58:45] *** Quits: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net) (Quit: bilb_ono)
[21:59:39] <mav`rik> stavros: so alternate_method has a self argument of its own, are you wanting to call the original class's function that you've mocked from that?
[21:59:51] *** Joins: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net)
[22:00:13] <whatsupdoc> [1,2,3,4,4] - [2,4] = [1,3,4]
[22:00:14] <stavros> mav`rik, yes, exactly, and retain the return value
[22:00:20] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[22:00:35] <hrob> SnoopJ ,  I did   LangKey = constr(strip_whitespace=True, to_lower=True, min_length=2, max_length=2)
[22:00:36] <hrob> Names = Dict[LangKey, str]
[22:00:36] <stavros> mav`rik, it looks like patch.object() is more promising, I did manage to get the class instance from that
[22:00:44] <stavros> Let me see if I can get it to work
[22:00:54] <hrob> SnoopJ which I think handles validation
[22:01:18] <Wooble> whatsupdoc: doesn't seem generally useful enough to be in the stdlib; write a function?
[22:01:39] <hrob> SnoopJ   but dumb openapi and swagger still suggest a long string key >2  as an example
[22:01:44] <stavros> mav`rik, so I'm trying this now: https://www.pastery.net/xjjbsh/ but it's an infinite recursion
[22:02:08] <stavros> Oh I guess it's already mocked in there
[22:02:46] <stavros> Oh it worked!
[22:02:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:03:25] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:03:50] <strywgr> I really have no idea what on_message function mean or does, i just followed all the steps. It worked for others on the yt video.
[22:04:08] <strywgr> i followed the tutorial
[22:04:10] <mav`rik> stavros: Consider https://www.pastery.net/cagdad/
[22:04:26] *** Quits: debevv (~debevv@212.29.154.22) (Remote host closed the connection)
[22:04:32] *** Joins: nomic (~nomic@185.198.243.172)
[22:04:34] <SnoopJ> hrob, hmm, that sounds like it might be a bug actually, but I think you can still provide your own example in a Field: `d: T = Field(example='{"is": 42}')` or whatever
[22:04:43] <stavros> mav`rik, yep, that's what worked, thank you!
[22:04:49] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[22:05:08] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:05:11] *** Mikaela is now known as Aminda
[22:05:50] <mav`rik> strywgr: https://bpa.st/TXGQ is what Wooble and I were suggesting
[22:06:07] <hrob> SnoopJ  thats always best,  give my own example :D    I know best
[22:06:54] <SnoopJ> hrob, yep :)
[22:07:22] *** Quits: cruncher (~cruncher@46-127-100-145.dynamic.hispeed.ch) (Ping timeout: 260 seconds)
[22:07:27] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:07:29] <Wooble> strywgr: I'd suggest copying and pasting code from a blog posting instead of typing it in from a video if you don't want to learn python before writing a bot.
[22:07:31] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[22:07:44] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[22:07:59] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[22:08:10] <aphysically> is there somewhere a property setter's return value can be used?
[22:08:30] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[22:08:51] <KirkMcDonald> aphysically: Not really.
[22:09:10] <aphysically> I'm looking at https://github.com/willmcgugan/rich/blob/eb673d1204340738d3084ebc2e4c789a35a4e49b/rich/table.py#L324 and trying to figure out if I was missing something
[22:09:16] <strywgr> the error now is longer than the code
[22:09:23] <aphysically> (since it returns self)
[22:09:37] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[22:10:01] <KirkMcDonald> aphysically: I'm fairly sure that does nothing.
[22:10:10] <Wooble> aphysically: I'm vaguely surprised to learn it's not an error to return something.
[22:10:15] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:e9e4:b21b:95a3:3cbf) (Ping timeout: 260 seconds)
[22:11:07] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[22:12:29] <mav`rik> strywgr: You could put the error (and code again) into another paste and perhaps someone could help
[22:12:30] *** Joins: Hazza (~Haxxa@122.199.45.48)
[22:12:52] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 252 seconds)
[22:13:04] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[22:13:48] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[22:13:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:14:06] <Wooble> aphysically: I can't tell if I'm disappointed or relieved to find you can't do val = (obj.setterfunc := something)
[22:15:04] *** Joins: sharksauce (sharksauce@user/sharksauce)
[22:15:41] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[22:15:58] *** Joins: fikran (~fikran@user/fikran)
[22:15:59] <strywgr> mav`rik : got this by the that code -> https://pastebin.com/Bw1ruWVM
[22:16:00] <infobob> https://bpaste.net/W7NA (repasted for strywgr)
[22:16:08] <altendky> i'm trying to get the project dependencies out of setup.py and into .pre-commit-config.yaml so mypy in pre-commit can have the proper dependencies.  i thought it would be handy to put the generated stuff in its own section and then reference via an anchor.  is there some nice way to define an anchor and name with pyyaml?  i'm sure i could hack a thing together by overriding `Dumper.generate_anchor()` but maybe there's a nicer way to do it
[22:16:08] <altendky> with pyyaml to begin with?  https://bpa.st/YLSA
[22:16:36] *** Quits: vulpes_vulpes (~vulpes_vu@88-144-232-205.host.pobb.as13285.net) (Remote host closed the connection)
[22:17:47] <strywgr> Wooble : the whole bot has many features which is on the blog, i followed the steps till the guy makes it come online.
[22:17:48] *** Quits: raxor2k (~raxor2k@78.158.254.247) ()
[22:17:56] <Wooble> strywgr: looks like you forgot to set the TOKEN environment variable before running.
[22:19:06] <strywgr> i did everything as was shown
[22:19:18] <strywgr> btw im using Replit for it
[22:19:21] *** Joins: nomic2 (~nomic@185.198.243.172)
[22:19:35] *** Quits: stavros (~stavros@pon1039.cpe.hcn.gr) (Remote host closed the connection)
[22:20:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:20:43] <Wooble> strywgr: can you even set an environment variable on repl.it? you could try putting your token in the code instead of os.getenv("TOKEN") but I'd be surprised if repl.it lets you open sockets
[22:21:32] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:21:53] <strywgr> i can, the person teaching told that way to, tried it.
[22:21:53] <Wooble> (oh, you can, under "Secrets")
[22:21:58] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:22:27] <strywgr> yes, https://prnt.sc/1wr653g
[22:22:31] *** Quits: nomic (~nomic@185.198.243.172) (Ping timeout: 258 seconds)
[22:22:33] <strywgr> here is a screenshot.
[22:22:33] <Wooble> anyway, if there's a secret "TOKEN" with some valid discord token in it, you shouldn't be able to get that error.
[22:23:03] <Wooble> strywgr: the key should be "TOKEN", the value the actual token.
[22:23:37] <SnoopJ> Weird question: is there any way I could sequester the memory allocated by a particular module to its own arena? Or more generally, to work out which pages that library has allocated?
[22:24:22] <SnoopJ> my only idea is to use PEP 445 and allocate into a dedicated arena if it's the target library
[22:24:25] <strywgr> yes, copied from the discord developer portal
[22:24:34] *** Quits: Hazza (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[22:24:36] <Wooble> strywgr: you have the key and value mixed up I mean.
[22:25:13] *** Joins: horseface (~horseface@user/horseface)
[22:25:35] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 258 seconds)
[22:25:57] *** Joins: schumaml (~schumaml@p200300e2ef0b030053c1821a43d17d29.dip0.t-ipconnect.de)
[22:26:06] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[22:26:26] *** Joins: noarb- (~noarb@user/noarb)
[22:26:27] <SnoopJ> Hmm, even PEP 445 might not be capable of what I had in mind..
[22:26:48] <strywgr> i think not, https://prnt.sc/1wr6ksc
[22:26:50] *** Quits: Madda (~Madda@216.51.198.146.dyn.plus.net) (Remote host closed the connection)
[22:27:07] <SnoopJ> As far as I can tell, the memory for the library I'm targeting with this (torch) just ends up on the heap jumbled up with other stuff, which makes sense, but...
[22:27:08] <strywgr> is there any other way i can paste the token without giving it a value
[22:27:36] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 245 seconds)
[22:27:48] <Wooble> strywgr: the thing starting with OTA... should be in the value box, and the word TOKEN in the key box.
[22:27:51] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[22:28:16] *** Quits: jay-m1262 (~jay-m@154.72.163.187) (Ping timeout: 258 seconds)
[22:28:51] *** Joins: Madda (~Madda@216.51.198.146.dyn.plus.net)
[22:29:31] <wedgie> Hello. I'm playing around with creating Lambda Layers in AWS and, specifically, creating them for the Graviton (arm64) runtime. As a simple example, I'm creating a layer with the "requests" module. I gather the files with "pip install --target ./python/python --platform linux_arm64 --only-binary=:all: requests". Once I package that up and create the layer it works.
[22:29:39] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[22:29:39] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:29:44] <wedgie> That layer works fine on the Lambda arm64 runtime, but it also works when the runtime is x86_64. In fact, if I omit the --platform and --only-binary flags completely and let it choose the default (my workstation is x86_64 Windows) the resulting layer *still* works with either Lambda runtime.
[22:29:59] <newpy> for pandas, is it always better to use df.rename(columns=...) instead of df.columns = [...] or is it just easier when we only want to rename a single column?
[22:29:59] <wedgie> Are the packages installed with pip completely platform independent or have I just got "lucky" in this particular case? The ARM Lambda runtime is pretty new and I haven't found a lot written about preparing python layers for it yet or layers that support both runtimes.
[22:30:12] <strywgr> besides that, the error is on line 16 which is way before token Wobble
[22:30:21] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[22:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:30:50] *** Joins: arseru (uid515527@user/arseru)
[22:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:31:29] <arseru> Hi! Does anybody know if there's a way to install the packages in `[options.extras_require]` from a setup.cfg file when doing `pip install -e .`?
[22:32:07] *** Quits: y1n (~y1n@77.119.199.199.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[22:32:14] <arseru> or is that section only used for entrypoints?
[22:32:20] <tdsmith> wedgie: you're lucky :) pure-python packages are platform independent but it's possible and common for wheels to ship platform-dependent compiled code. requests is pure-python
[22:32:38] <Wulf> a module does def _private(): ...; del _private. Is there some hack to gain access to that function?
[22:32:47] <arseru> I'm following this guide https://setuptools.pypa.io/en/latest/userguide/dependency_management.html#optional-dependencies
[22:33:22] *** Joins: waynew (~wayne@user/waynew)
[22:33:38] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[22:34:16] <Avaris> arseru: `pip install -e .[PDF]` should work
[22:34:23] <wedgie> tdsmith: ok, thanks for that. For the future, if i specicy multiple --platform flags on a package where it matters, it'll grab both versions? Been trying to figure out what changes... comparing the md5s of all the files that it retrieves shows everything the same except for the .pyc files, but those hashes change even when I 'pip install' them twice with the same platform :P
[22:34:39] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[22:34:47] <strywgr> Wobble: i tried your script to which gave even more errors.. my error is on line 16 -> https://pastebin.com/jEex8Mkb
[22:34:48] <Ninpo> if I have a list of tuples and a list of dicts, how do I search the list of dicts for a value in one of the tuples?
[22:34:49] <infobob> https://bpaste.net/OKAQ (repasted for strywgr)
[22:34:55] <strywgr> once this is gone i think it will work
[22:34:57] *** Joins: nomic (~nomic@185.217.117.204)
[22:35:56] *** Quits: nomic2 (~nomic@185.198.243.172) (Ping timeout: 258 seconds)
[22:36:11] <SnoopJ> Ninpo, you want to know if any of the dicts has a value that is contained in one of the tuples?
[22:36:27] <Ninpo> yes
[22:36:30] <arseru> Avaris: that's true, thanks! I was trying that before but since I'm using zsh it was giving me an error `zsh: no matches found: .[PDF]`. Doing `pip install -e ".[PDF]"` works though :)
[22:36:31] <tdsmith> wedgie: i doubt that pip install --platform a --platform b does anything useful, no. i am actually not sure there are any arm wheels published but now i'm out of my knowledge base
[22:36:44] <Ninpo> so for tuple in list, is tuple[1] in this other list of dicts values
[22:36:56] *** Joins: marcello42 (~mp@p200300dfaf0e520178b80e9c76b5e17e.dip0.t-ipconnect.de)
[22:37:15] <Ninpo> or more specifically is it in dict["name"] for dict in list
[22:37:29] <whatsupdoc> What's the best way to program [1,2,3,1,1] - [1,1] = [1,2,3]?
[22:37:34] <aphysically> jinsun: https://github.com/willmcgugan/rich/pull/1612
[22:37:44] <whatsupdoc> I feel like duplicating [1,2,3,1,1] and then using .remove() is cleaner?
[22:37:51] <aphysically> 🤮
[22:37:52] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 268 seconds)
[22:38:09] <SnoopJ> Ninpo, `any(tup in d["name"] for d in list_of_dicts for tup in list_of_tuples)` is the naive way to do it if you just want to know yes/no for any of them
[22:38:43] <wedgie> tdsmith: "Use this option multiple times to specify multiple platforms supported by the target interpreter" from the docs. Guess I just need to try it out :). Know any packages off the top of your head that definitely do have platform-specific compiled code that I can use in my testing? Thanks again :)
[22:38:59] <SnoopJ> if you have a lot of data, you might want to scan the list of tuples first and make a set() to avoid multiple scans
[22:39:16] <SnoopJ> and if you wanted to get the dicts matching the criterion, you'd probably do a list comprehension instead
[22:40:09] <hexnewbie> whatsupdoc: Why not [2,3,1] ?
[22:40:13] <Avaris> whatsupdoc: .remove will get you [2, 3, 1]
[22:40:36] <whatsupdoc> Really? How come?
[22:40:46] <Avaris> it removes the first matching item
[22:40:48] <whatsupdoc> Oh
[22:40:50] <whatsupdoc> duh
[22:41:01] <whatsupdoc> I mean order doesn't matter for me
[22:41:17] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[22:41:22] <whatsupdoc> Is that a bad strategy?
[22:41:44] <Ninpo> SnoopJ: thanks :)
[22:42:05] <whatsupdoc> Sometimes I wish python was always pass by value unless you put a * next to the variable name
[22:42:30] <SnoopJ> it's never pass by value
[22:42:37] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[22:42:42] <altendky> welp, this is a bit closer.  https://bpa.st/SGVQ  uses the key in a mapping as the name for the anchor for the value.  not beautiful.
[22:42:46] <whatsupdoc> Yes that's what I meant
[22:42:52] *** Joins: hifi (hifi@m.vi.fi)
[22:43:18] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[22:43:35] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Ping timeout: 264 seconds)
[22:44:12] <whatsupdoc> Can you convert range() into an iterator?
[22:44:17] <matsaman> whatsupdoc: the order doesn't matter, but you're not trying to simply remove duplicates?
[22:44:18] <whatsupdoc> So I can call next() on it?
[22:44:24] <hexnewbie> whatsupdoc: iter()
[22:44:40] <whatsupdoc> Yes, but not all instances of that element, only the amount found in the second list
[22:45:01] <matsaman> mmm
[22:45:07] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[22:45:30] *** Joins: CoolerX (~CoolerX@user/coolerx)
[22:45:38] <hexnewbie> whatsupdoc: from collections import Counter; list((Counter([1,2,3,1,1]) - Counter([1,1])).elements())
[22:46:00] <Wooble> strywgr: that's just the error you started with. You un-indented line 16 again, and you can't have an await statement outside a function.
[22:46:14] <whatsupdoc> damn i actually knew you could use coutner
[22:46:22] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[22:46:23] <whatsupdoc> but i was trying to avoid importing things
[22:46:43] <SnoopJ> `it = iter(filter(predicate, obj))`
[22:46:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:47:06] <SnoopJ> or `iter(val for val in obj if predicate(val))` if you prefer a comprehension spelling
[22:47:28] <hexnewbie> SnoopJ: iter() on the result of filter() simply returns the result of filter() back, though
[22:47:43] <SnoopJ> yea, I guess iter() isn't necessary in either of those cases actually
[22:47:57] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:10] <hexnewbie> range(30) is actually a proper sequence
[22:48:47] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:c01:f667:d964:c018) (Quit: Leaving)
[22:49:07] *** Quits: kaleido (~adam@user/kaleido) (Quit: peas)
[22:49:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:52:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:52:53] *** Joins: Oddity (Oddity@user/oddity)
[22:53:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:53:55] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Read error: Connection reset by peer)
[22:54:00] *** Joins: yac (~user@user/yac)
[22:54:00] *** Joins: kaleido (~adam@user/kaleido)
[22:54:01] *** Joins: Hazza (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:57:23] <aphysically> jinsun: remember that operator we changed something to false with? I looked at its usage in the rich library and it's solely used in a way that reduces to an or operator
[22:58:23] *** Joins: Ivii (~Ivyy@2001:a61:1304:3a01:31dd:8799:859e:bfc7)
[22:58:23] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:e9e4:b21b:95a3:3cbf)
[22:59:50] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[23:00:06] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[23:00:25] *** Joins: sandb0y (~pirate@user/sandb0y)
[23:00:33] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[23:01:06] <ToAruShiroiNeko> Is there a way to save what python posts to console?
[23:01:29] <ToAruShiroiNeko> I have a python webapp running on IIS and I need to see the console output for debugging.
[23:01:30] <aphysically> ah no wait found one other usage
[23:02:37] <mefistofeles> ToAruShiroiNeko: it depends how you are running the process, but I guess that as a general good practice you should use some logging utility, python comes with one in the stdlib
[23:02:54] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[23:03:50] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[23:05:38] <ToAruShiroiNeko> I really am not looking for a logging utility. I just want to record what is in console.
[23:05:42] *** Quits: arinov (~arinov@31.142.50.8) (Ping timeout: 260 seconds)
[23:05:54] <matsaman> is it going to disappear from the console?
[23:06:10] <matsaman> copy & paste it somewhere, save it to a variable, etc.
[23:06:16] <SnoopJ> ToAruShiroiNeko, then you're looking for a configuration feature of what is invoking Python, in this case IIS. If you tell us more about how you're invoking Python, we might be able to say something more specific
[23:06:16] <ToAruShiroiNeko> I do not have a console output.
[23:06:19] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[23:06:32] <ToAruShiroiNeko> Sure.
[23:06:43] *** Quits: Ivii (~Ivyy@2001:a61:1304:3a01:31dd:8799:859e:bfc7) (Remote host closed the connection)
[23:06:46] <ToAruShiroiNeko> It is a django webapp.
[23:07:13] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[23:07:33] <ToAruShiroiNeko> What specifics do you need?
[23:07:34] <SnoopJ> It doesn't really matter what it is, if it's running Python as a subprocess, it's getting stdout/stderr and what it does with that is not Python's business
[23:07:40] *** Quits: Hazza (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Remote host closed the connection)
[23:08:02] <SnoopJ> ToAruShiroiNeko, how is the Python process being started? The machinery around that will likely be what you want
[23:08:14] <SnoopJ> Or are you calling into this app with e.g. WSGI?
[23:08:24] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[23:08:33] <ToAruShiroiNeko> Yes, WSGI
[23:08:35] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[23:08:52] <ToAruShiroiNeko> I tried outputing to WSGI log but I am doing something wrong.
[23:09:20] <ToAruShiroiNeko> https://stackoverflow.com/questions/31862873/how-to-capture-stdout-of-a-python-process-running-under-iis-fastcgi-and-wsgi
[23:10:15] <SnoopJ> yea I think WSGI_LOG is what you want here. Why do you say you're doing "something wrong?"
[23:10:40] <ToAruShiroiNeko> I get very minimal log, not the stdout...
[23:10:59] *** Quits: nomic (~nomic@185.217.117.204) (Quit: Leaving)
[23:11:49] <ToAruShiroiNeko> I do not get the module relationship with django.
[23:12:06] <ToAruShiroiNeko> With WSGI.
[23:12:16] *** Quits: amogorkon (~amogorkon@port-92-196-124-146.dynamic.as20676.net) (Ping timeout: 252 seconds)
[23:13:01] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[23:14:00] <ToAruShiroiNeko> <add key="WSGI_HANDLER" value="myapp.app" />
[23:14:01] *** Quits: strywgr (~none@101.53.224.196) (Remote host closed the connection)
[23:15:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:15:17] *** Quits: magla (~gelignite@55d41a29.access.ecotel.net) (Quit: Stay safe!)
[23:15:26] <SnoopJ> ToAruShiroiNeko, have you seen this docs page? The stdout options here might be relevant to what you're trying to do (I don't know IIS) https://docs.microsoft.com/en-us/visualstudio/python/configure-web-apps-for-iis-windows?view=vs-2019#set-webconfig-to-point-to-the-python-interpreter
[23:15:53] *** Joins: redrum88 (~redrum88@user/redrum88)
[23:16:28] <mat001> Any idea why pytest/unittest's assertEqual passed the comparison of these two results in Py 3.8. But Py 3.5.5 fails it because it picks on the different memory address of Experiment object: https://bpa.st/VQQA
[23:16:55] <mat001> The assert should fail in Py 3.8 in the first place. And ideas?
[23:16:58] <mat001> (any)
[23:17:15] <ToAruShiroiNeko> SnoopJ chcking that out now.
[23:17:42] *** Joins: evocatus (~evocatus@84.51.113.13)
[23:17:43] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 258 seconds)
[23:17:46] <ToAruShiroiNeko> My WSGI_Handler is myapp.wsgi.application
[23:17:58] * SnoopJ imagines a white cat pawing at documentation
[23:19:09] <SnoopJ> ToAruShiroiNeko, the WSGI_Handler is I think just the fully-qualified name of the thing at the far end of the WSGI protocol (i.e. the callable that does all the application-y stuff)
[23:19:49] <SnoopJ> If you have a PythonHandler section in your config, that's where the stdout flags that doc mentions will live
[23:21:12] *** Joins: stormdancer (~stormdanc@185.245.86.122)
[23:22:05] <SnoopJ> details on HttpPlatformhandler (note: apparently you always get stdout/stderr combined): https://docs.microsoft.com/en-us/iis/extensions/httpplatformhandler/httpplatformhandler-configuration-reference#httpplatformhandler-configuration
[23:24:08] *** Joins: lionrouge_ (~evocatus@84.51.113.13)
[23:24:33] *** Quits: lionrouge_ (~evocatus@84.51.113.13) (Remote host closed the connection)
[23:27:00] *** Joins: evocatus_ (~evocatus@84.51.113.13)
[23:27:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[23:27:11] *** Quits: stealth[] (~stealth]@i6DFA2725.versanet.de) (Quit: Leaving)
[23:28:58] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[23:29:21] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[23:30:03] *** Joins: interweb (~interweb@user/interweb)
[23:30:39] *** Quits: rsx (~dummy@ppp-188-174-140-121.dynamic.mnet-online.de) (Quit: rsx)
[23:30:45] *** Quits: stormdancer (~stormdanc@185.245.86.122) (Remote host closed the connection)
[23:30:47] *** Joins: jazzy (~jaziz@user/jaziz)
[23:31:22] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:58f6:9256:95ca:a08d) (Remote host closed the connection)
[23:31:24] *** Joins: fructose (~fructose@user/fructose)
[23:31:26] <mawk> python's integers are arbitrary precision
[23:31:31] <mawk> but floats are all lame and small
[23:31:41] <mawk> is there a arbitrary precision float thing?
[23:31:49] *** Quits: jazzy (~jaziz@user/jaziz) (Client Quit)
[23:32:12] *** Joins: jazzy (~jaziz@user/jaziz)
[23:33:49] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:34:03] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Remote host closed the connection)
[23:34:04] *** Quits: schumaml (~schumaml@p200300e2ef0b030053c1821a43d17d29.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[23:34:41] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Ping timeout: 245 seconds)
[23:35:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:35:52] <Repiphany> decimal.Decimal
[23:36:03] <mawk> hmm
[23:36:12] <mawk> but it's not exactly the same
[23:36:20] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[23:36:28] <mawk> or is it
[23:36:32] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[23:36:35] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[23:36:37] <SnoopJ> GNU MPFR, maybe?
[23:36:42] <mawk> I guess it doesn't make a difference in the end in how the fraction is computed
[23:36:44] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Read error: Connection reset by peer)
[23:36:46] <ToAruShiroiNeko> SnoopJ I cnnot quite follow it.
[23:37:00] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[23:37:06] <mawk> ah yes mpfr looks like the thing
[23:37:25] <ToAruShiroiNeko> It looks very outdated.
[23:37:41] <SnoopJ> ToAruShiroiNeko, do you have an <httpPlatform> section in your config?
[23:37:42] <ToAruShiroiNeko> I am really surprised how difficult it is to recotd stdout in any way.
[23:37:47] <ToAruShiroiNeko> No I do not.
[23:37:51] <Wooble> mat001: it should just be comparing the objects using their __eq__ method; the memory address should be irrelevant.
[23:38:09] <mawk> why do you say it's difficult?
[23:38:18] *** Joins: grooverman (~grooverma@177.102.119.49)
[23:38:33] <ToAruShiroiNeko> The only entry is I have a django handler.
[23:38:40] <SnoopJ> ToAruShiroiNeko, I don't think it's outdated, the first page was updated exactly one week ago.
[23:38:50] <ToAruShiroiNeko> I added apsettings to configure WSGI logging.
[23:38:51] <mat001> Wooble: really? I had another case where Py 3.8 would bark at diff memory address, but this time it doesn't bother.
[23:38:54] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Quit: Leaving)
[23:39:00] <SnoopJ> Perhaps you are using an older style of configuration or something. I don't know, I can't see your config
[23:39:23] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[23:39:32] <mat001> Wooble: maybe Py 3.5.5 uses a diff comparison mechanism
[23:39:36] *** Joins: arinov (~arinov@213.194.126.155)
[23:39:48] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[23:40:32] <ToAruShiroiNeko> WSGI stdout for IIS does nto appear simple. :(
[23:40:40] <Wooble> mat001: it should depend entirely on the implementation of the classes of the objects they're comparing.
[23:40:45] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[23:40:52] <ToAruShiroiNeko>  "django"
[23:41:10] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[23:41:34] <tdsmith> wedgie: that's backwards from what you want -- that says "this single interpreter works with any of these platform tags, so a wheel that matches any _one_ of these specs is good to install"
[23:41:37] *** Joins: schumaml (~schumaml@p200300e2ef0b030053c1821a43d17d29.dip0.t-ipconnect.de)
[23:41:41] *** jazzy is now known as jazz-o-lantern
[23:41:53] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[23:42:15] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:42:49] <SnoopJ> ToAruShiroiNeko, "WSGI stdout" is a contradiction of terms, there is no such thing
[23:43:02] <mawk> decimal.Decimal doesn't work much better than plain floats
[23:43:18] <mawk> I have really big intermediary numbers so errors propagate
[23:43:18] <SnoopJ> If you want stdout of the Python process, you will need to specify that wherever you are configuring the invocation of the Python subprocess. If you aren't doing that with the stuff in that documentation, I don't know what you're doing.
[23:43:19] <ToAruShiroiNeko> Is what I am trying to do not evident?
[23:43:20] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-a000-ac2a-c1fe-0e16.res6.spectrum.com)
[23:43:37] <SnoopJ> Yes, it's evident, but I'm trying to tell you that you're barking up the wrong tree if you're looking at the WSGI part of it, but you want the process's stdout.
[23:43:45] <ToAruShiroiNeko> I am trying but I get config error and I do not know what is wrong with it.
[23:43:52] <Wooble> mat001: although if the class doesn't define __eq__, it should fall back to identity in both versions. maybe the __eq__ has some weird version-dependent behavior.
[23:43:53] * SnoopJ can't see the error, either
[23:44:01] <mawk> you could maybe modify stdout within the program to redirect it to a file if you really wanted to
[23:44:23] <mawk> os.dup2(some_other_file_descriptor, 1)
[23:44:28] <mawk> something ugly like that
[23:45:04] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[23:46:21] <Wooble> mat001: seems to be based on the 2 Experiment objects having equal __dict__: https://github.com/optimizely/python-sdk/blob/master/optimizely/entities.py#L15
[23:46:32] <wedgie> tdsmith: ah. thanks for that clarification. I guess I still don't know how a layer that supports both arches is supposed to be built. They make it an option so I assume there must be a way to do it. Maybe it's simpler for stuff like Java and that's why they include the option. Oh well, more reading to do, I guess. Thanks!
[23:48:16] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:48:38] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-a000-ac2a-c1fe-0e16.res6.spectrum.com) (Quit: Leaving.)
[23:49:54] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[23:49:55] <mat001> Wooble: interesting. Though the link to equal __dict_- only appears in 4 places, none of them touching the code I'm working on...
[23:49:58] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[23:50:15] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[23:50:16] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[23:50:41] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[23:50:43] <Wooble> mat001: if you compare any entities in optimizely that inherit from that, that's how they'll get compared.
[23:52:38] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:53:15] <Macuser> if anyone has used pyorbital, I'm wondering what might be the issue here: https://stackoverflow.com/questions/69635061/pyorbital-azimuth-elevation-output-not-changing-with-1-sec-increments the az/el output is not changing as I change the seconds even though the precision shows that it is plenty capable
[23:53:26] <mat001> Wooble: ok, but isn't that def _-eq_- only executed when - IF it's called? It doesn't seem to be invoked much
[23:53:28] *** Quits: evocatus_ (~evocatus@84.51.113.13) (Quit: Leaving)
[23:53:35] *** Quits: evocatus (~evocatus@84.51.113.13) (Quit: Leaving)
[23:53:45] <mat001> It's not part of _-init__
[23:53:51] <Wooble> mat001: no, assertEqual will call it (indirectly, but using == )
[23:54:27] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[23:55:15] <mat001> Wooble: hmm, interesting, good know. Btw I checked the dir-s of each Experiment object - they are identical, same attributes
[23:55:25] *** Parts: jasper_ (~user@styria.daemonized.org) ()
[23:55:46] <Wooble> mat001: I'd try looking at the .__dict__ attributes directly under py3.5.5, something odd might be going on.
[23:56:03] *** Joins: _xor (~xor@72.49.199.147)
[23:56:06] <mat001> but seem to be diff objects. WHich makes me think if smth is wrong in my code logic and it found a bug, or is this memory address smth solvable on test assertion level
[23:56:32] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[23:56:37] *** Joins: blei (~blei@209.201.38.106)
[23:56:47] <mat001> Wooble: ok, can try running with 3.5.5
[23:56:51] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[23:57:22] <blei> my code has a lot of configuration boilerplate expressed as nested dicts/lists and i am looking for a better way to do that
[23:57:49] <Wooble> mat001: well what are you trying to test? if 2 objects have the same data, it seems reasonable they're equal. If you really want to check they're the exact same object and not a copy, you could do something like self.assertTrue(obj1 is not obj2) but that's an unusual thing to want to know in a test.
[23:58:44] <Wooble> err, I guess it's just self.assertIs(obj1, obj2) in py3.
[23:59:16] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[23:59:48] <Wooble> (and, uh, in py2.7. it *might* be a long time since I used unittest ;) )
