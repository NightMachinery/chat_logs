[00:00:45] *** Joins: xackus (~xackus@7-24.w.knc.pl)
[00:04:53] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Quit: Leaving)
[00:10:03] *** Joins: terminalpusher (~terminalp@2a01:586:9810:1:d5c5:51af:c205:6a9c)
[00:14:14] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[00:32:14] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[01:13:29] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[01:16:40] *** Quits: terminalpusher (~terminalp@2a01:586:9810:1:d5c5:51af:c205:6a9c) (Remote host closed the connection)
[01:19:38] *** Quits: xackus (~xackus@7-24.w.knc.pl) (Ping timeout: 268 seconds)
[01:30:21] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:38:45] *** Quits: frmdstryr (~jrm@172.58.203.192) (Ping timeout: 268 seconds)
[01:39:04] *** Quits: novakane (~novakane@user/novakane) (Quit: WeeChat 3.3)
[01:46:30] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[01:51:21] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[01:53:18] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[01:55:11] *** Quits: dirkson (~dirkson@2602:61:7830:1e00:ddc9:87de:2cd6:6f65) (Quit: WeeChat 3.2.1)
[01:56:05] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:57:38] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Read error: Connection reset by peer)
[01:58:19] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[02:16:33] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:17:38] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:20:16] *** Joins: frmdstryr (~jrm@172.58.203.233)
[02:21:23] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[02:26:52] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[02:39:35] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:51:15] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:56:55] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:00:36] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[03:05:11] *** Quits: cr1901 (~William@2601:8d:8600:911:8526:c01a:7723:b2ca) (Ping timeout: 264 seconds)
[03:05:42] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[03:07:12] *** Joins: nvmd (~nvmd@user/nvmd)
[03:07:28] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:30:02] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:25ae:baa7:4680:70ca) (Ping timeout: 260 seconds)
[03:30:54] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[03:37:59] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[03:40:46] *** Quits: marler8997 (~marler899@204.229.3.4) (Ping timeout: 260 seconds)
[03:42:59] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[03:44:02] *** Quits: Pistahh (~pistahh@user/pistahh) (Ping timeout: 268 seconds)
[03:45:53] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:54:17] *** Joins: Pistahh (~pistahh@user/pistahh)
[03:58:26] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[04:00:01] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Client Quit)
[04:02:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:03:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:90d0:563b:3279:f95b)
[04:03:40] *** Joins: dom96 (~dom@mail.nim-lang.org)
[04:03:44] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[04:04:26] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[04:04:47] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Client Quit)
[04:05:17] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[04:07:56] <akiselev> whats the best way to profile builds? im up to 1-2min build times and trying to figure out how to refactor to reduce that
[04:09:51] *** Joins: Tekk_ (~tekk@cpe-76-182-45-53.nc.res.rr.com)
[04:12:56] *** Quits: Tekk (~tekk@89.45.224.126) (Ping timeout: 268 seconds)
[04:16:11] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[04:18:42] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[04:21:30] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:47:18] *** Quits: xzto (~xzto@143.202.133.82) (Quit: WeeChat 3.2.1)
[04:47:30] *** Joins: noam (~noam@104.232.42.247)
[04:48:38] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9pliwyyy5u0c1rn2sffe.ipv6.telus.net)
[04:49:35] *** Quits: fleg (64bf4386e9@user/fleg) (Remote host closed the connection)
[04:52:02] <noam> ...was discussing the issue with supporting platforms whose interface is through C, and this came up: is this safe? https://github.com/ziglang/zig/blob/master/lib/std/c/openbsd.zig#L366
[04:52:19] <noam> It seems to be hardcoding internal details about how the macros work, and assuming the macros will never change.
[04:57:56] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[04:58:00] <noam> semarie: I think you originally committed that OpenBSD support code? 
[05:03:29] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[05:04:41] *** Joins: qaph (~weechat@user/qaph)
[05:07:20] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 260 seconds)
[05:07:21] *** qaph is now known as kron
[05:16:17] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[05:18:23] *** Joins: Tekk__ (~tekk@89.45.224.230)
[05:21:01] *** Quits: Tekk_ (~tekk@cpe-76-182-45-53.nc.res.rr.com) (Ping timeout: 256 seconds)
[05:21:19] *** Tekk__ is now known as Tekk
[05:39:41] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[05:44:48] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[05:47:27] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[05:58:21] *** Joins: dbohdan3 (~dbohdan@user/dbohdan)
[05:58:58] *** Quits: luuk (~luuk@user/luuk) (Ping timeout: 260 seconds)
[05:59:34] *** Joins: factor1 (~factor@c-66-30-67-217.hsd1.ma.comcast.net)
[05:59:54] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Ping timeout: 260 seconds)
[06:00:11] *** Joins: luuk (~luuk@user/luuk)
[06:02:42] *** Quits: factor (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[06:02:42] *** factor1 is now known as factor
[06:03:31] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Ping timeout: 256 seconds)
[06:06:02] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[06:06:27] *** Joins: nickster1 (~nickster@67.207.91.6)
[06:08:01] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:08:18] *** Quits: nickster (~nickster@67.207.91.6) (Ping timeout: 260 seconds)
[06:08:18] *** nickster1 is now known as nickster
[06:16:52] *** Joins: livoreno (~livoreno@user/notzmv)
[06:18:50] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[06:21:24] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[06:26:44] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[06:30:31] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Quit: Leaving)
[06:41:18] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[06:45:15] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 268 seconds)
[06:56:01] *** Joins: cr1901 (~William@2601:8d:8600:911:109:c768:abb5:da22)
[07:23:03] *** Quits: hspak (~hspak@user/hspak) (Quit: The Lounge - https://thelounge.chat)
[07:23:30] *** Joins: hspak (~hspak@user/hspak)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:40:06] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[07:42:36] *** Quits: akiselev (~akiselev@cpe-75-80-179-156.san.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[07:48:12] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[07:56:05] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[07:59:47] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6) (Ping timeout: 264 seconds)
[08:05:19] *** Joins: marler8997 (~marler899@204.229.3.4)
[08:06:23] *** Joins: akiselev (~akiselev@cpe-75-80-179-156.san.res.rr.com)
[08:16:43] *** Joins: lane (~lane@86.106.121.217)
[08:33:35] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[08:36:26] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:44:12] *** Quits: tgschultz__ (~UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[08:44:51] *** Joins: tgschultz__ (~UserNick@047-034-058-084.res.spectrum.com)
[08:54:27] *** Quits: boardwalk194 (~boardwalk@136.49.88.66) (Quit: Ping timeout (120 seconds))
[08:54:41] *** Joins: boardwalk194 (~boardwalk@136.49.88.66)
[08:57:10] *** Joins: freshcoffee1 (~fresh@user/freshcoffee)
[08:57:54] <semarie> noam: what do you mean by "is this safe ?"
[08:59:40] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Ping timeout: 268 seconds)
[09:00:04] <semarie> if I take WTERMSIG(), it is a macro (from sys/wait.h) which was ported from C to Zig. so the definition in ziglang is right while OpenBSD doesn't change it on its side
[09:01:23] <semarie> alternative could be to use cInclude() and reexport the macro
[09:01:45] <semarie> it will be right always, even if OpenBSD changes the macro
[09:06:15] <semarie> I would (strongly) prefer using cInclude() over manually rewrite. maybe I was influenced by Rust work where rewrite was mandatory :-)
[09:53:15] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[10:01:47] *** Joins: fleg (64bf4386e9@user/fleg)
[10:17:53] <noam> semarie: yes, exactly - the concern is that the macro could be changed by openbsd
[10:22:13] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:23:03] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[10:39:44] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[10:44:30] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[10:50:01] *** Joins: novakane (~novakane@user/novakane)
[10:50:32] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[10:55:15] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[10:58:37] *** Joins: kenran (~kenran@b2b-37-24-119-190.unitymedia.biz)
[11:00:27] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 257 seconds)
[11:03:13] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[11:03:36] *** Joins: thing (~thing@user/thing)
[11:05:49] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[11:06:17] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[11:11:13] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[11:22:22] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[11:22:41] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:25:21] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[11:27:12] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[11:27:41] *** Quits: lane (~lane@86.106.121.217) (Ping timeout: 268 seconds)
[11:29:55] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[11:45:45] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[11:50:53] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[11:54:12] *** Quits: leon-p (~leon-p@2a02:8108:96c0:1810:9874:aaff:fe7d:3fc2) (Ping timeout: 268 seconds)
[12:06:37] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[12:12:04] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[12:12:16] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[12:14:28] <semarie> noam: the problem could be it is the same for every constants defined
[12:14:43] <semarie> or structs
[12:27:26] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9pliwyyy5u0c1rn2sffe.ipv6.telus.net) ()
[12:44:11] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 264 seconds)
[12:47:00] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[12:47:22] *** Quits: tgschultz__ (~UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[12:48:01] *** Joins: tgschultz__ (~UserNick@047-034-058-084.res.spectrum.com)
[12:48:21] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[12:53:23] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[12:54:05] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 264 seconds)
[12:55:37] *** Joins: notzmv (~zmv@user/notzmv)
[13:08:59] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: The Lounge - https://thelounge.chat)
[13:09:10] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[13:09:30] *** Joins: zkanda (~zkanda@box.makean.art)
[13:12:31] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Ping timeout: 268 seconds)
[13:14:11] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 264 seconds)
[13:30:05] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[13:35:09] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[13:36:30] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[13:46:01] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[13:50:53] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[13:56:07] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[14:11:48] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[14:15:51] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[14:17:05] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[14:21:09] <semarie> noam: where did you have such discussion ?
[14:24:29] *** Joins: okCiel (~okCiel@softbank060067041046.bbtec.net)
[14:49:15] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[14:53:15] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[14:53:32] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[14:58:22] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 260 seconds)
[14:59:57] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:03:24] <daurnimator> noam: essentially: yes. it's the question of API stability vs ABI stability
[15:04:12] <daurnimator> noam: we assume that platforms such as OpenBSD provide ABI stability as much as they provide API stability; and hence that we can reimplement the body of macros
[15:11:46] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[15:13:52] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[15:14:10] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Client Quit)
[15:14:54] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[15:24:18] *** Joins: xackus (~xackus@7-24.w.knc.pl)
[15:35:13] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:30] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[15:45:29] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Ping timeout: 256 seconds)
[15:49:48] *** Quits: kenran (~kenran@b2b-37-24-119-190.unitymedia.biz) (Quit: WeeChat info:version)
[15:53:35] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[15:54:32] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[15:56:03] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[15:56:21] *** Quits: crest (~quassel@user/crest) (Ping timeout: 245 seconds)
[15:57:31] *** Joins: crest (~quassel@user/crest)
[16:01:28] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[16:01:46] *** Quits: okCiel (~okCiel@softbank060067041046.bbtec.net) (Quit: WeeChat 2.8)
[16:16:20] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[16:16:58] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[16:21:54] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 260 seconds)
[16:25:42] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[16:34:02] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:47:43] *** Quits: frmdstryr (~jrm@172.58.203.233) (Ping timeout: 268 seconds)
[16:48:57] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[16:49:35] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Quit: Vexu)
[16:51:48] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Quit: Leaving)
[16:58:42] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[17:03:41] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[17:05:42] *** Joins: earnestly (~earnest@user/earnestly)
[17:08:53] *** Joins: frmdstryr (~jrm@172.58.203.233)
[17:19:19] *** Joins: arkurious (~arkurious@user/arkurious)
[17:19:32] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[17:24:44] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[17:27:24] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[17:48:46] *** Quits: frmdstryr (~jrm@172.58.203.233) (Ping timeout: 268 seconds)
[18:01:16] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[18:06:35] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 256 seconds)
[18:07:03] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[18:07:28] *** Joins: thing (~thing@user/thing)
[18:08:48] <noam> daurnimator: the problem is that OpenBSD explicitly states that they don't provide ABI stability, by design.
[18:12:57] <daurnimator> noam: surely they do at least within a minor release; I'd expect in practice also for a major release. Otherwise everyone would have to recompile all programs for it; and binary distribution for it would be essentially impossible
[18:16:32] *** Joins: ashn (~ashn@2601:45:8080:6160::581c)
[18:17:35] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[18:17:35] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[18:17:35] *** Joins: tane (~tane@user/tane)
[18:17:39] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[18:18:33] <semarie> daurnimator: no. 6.8 and 6.9 are considered as completely separated releases
[18:19:12] <semarie> when updating, you are expected to update your packages (binary distribution) or recompile
[18:20:55] <semarie> we are not freely break compatibility between releases and usually provide N to N+1 compatibility if possible, but there is no guarantee
[18:21:29] <semarie> and in some cases, the compat is broken if it is more simple to manage
[18:22:42] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[18:24:54] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[18:26:52] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[18:27:21] <semarie> here an example of "big upgrade", with time_t changes: https://www.openbsd.org/faq/upgrade55.html#upgrade
[18:29:31] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[18:33:23] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:36:13] *** Quits: novakane (~novakane@user/novakane) (Quit: WeeChat 3.3)
[18:37:28] *** Joins: novakane (~novakane@user/novakane)
[18:37:34] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[18:41:03] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[18:45:21] *** Joins: rgrinberg (~textual@200.5.63.76)
[18:47:03] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[18:53:34] <noam> daurnimator: as semarie noted, they don't; everyone DOES have to recompile all programs for it.
[18:54:55] <daurnimator> that sounds terrible.. I guess no closed source software shows up for openbsd then?
[18:55:42] <daurnimator> and how do you write things in... not C?
[18:55:56] <daurnimator> e.g. I guess you can't even write a program in assembly?
[18:57:10] *** Quits: kron (~weechat@user/qaph) (Quit: kron)
[18:58:08] <noam> daurnimator: you can, but you have to go through libc.
[18:58:10] <noam> By design.
[18:58:16] <noam> It's a security feature, supposedly.
[18:58:52] <daurnimator> going through libc ABI from asm is fine; but libc API.... the whole thing could be macros
[18:58:55] <noam> Basically, by making it so that only libc can make syscalls, and randomizing where libc is put in the address space so that you have to use the dynamic linker, it's supposed to be harder to write malicious software
[18:59:09] <noam> daurnimator: that's exactly what came up in the other discussion on the topic, yes.
[18:59:28] <noam> (tl;dr: someone else writing a programming language who wants portability and realized that OpenBSD causes some issues.)
[18:59:56] <daurnimator> how do people write in assembly for openbsd? or fortran? or anything else that has been around for decades that isn't C?
[19:00:00] <noam> No idea.
[19:00:16] <noam> As long as it can go through libc it's fine.
[19:00:18] <daurnimator> If there is no stable ABI; then they probably can't.
[19:00:23] <noam> so asm isn't that bad
[19:00:41] <noam> (you basically just use a dynamically linked call instead of a syscall)
[19:00:48] <noam> but for any lang that doesn't expect it, it's going to be a lot harder.
[19:01:08] <daurnimator> noam: if libc has no stable ABI then there might not even *be* a dynamic call to do. the whole of libc could be inline assembly in a macro.
[19:01:27] <noam> No.
[19:01:29] <noam> It can't.
[19:01:37] <noam> Because *only the libc .so can make syscalls*.
[19:02:01] <noam> You CANNOT use inline asm, for the same reason Zig cannot make direct syscalls on OpenBSD; the kernel kills you if you try to implement things like that.
[19:02:05] <daurnimator> that doesn't matter/is unrelated
[19:02:18] <noam> It absolutely does - yes, things like strcpy can be inline asm.
[19:02:24] <noam> But anything platform specific cannot.]
[19:02:30] <noam> And that's all you have to care about anyways.
[19:02:43] <noam> e.g. `wait` CANNOT be inline asm.
[19:02:50] <noam> nor can `open`, `write`, etc.
[19:03:07] <noam> Rather, it cannot be inline asm in a macro; it MUST be present in a function *in the libc binary*
[19:03:34] <daurnimator> sure it can; e.g. you could have a `__do_syscall_openbsd_6_8` symbol in libc.so; and everything else in libc is just a macro that calls that.
[19:04:09] <daurnimator> and you could make all sorts of funny business in there; e.g. that the first argument must be the newspaper headline from the day of openbsd 6.8 release/
[19:05:07] <noam> No, pretty sure OpenBSD provides guarantees that they don't do that.
[19:05:18] <daurnimator> my point is that without a stable ABI for libc, you have no way to program in anything but C.
[19:05:20] <noam> ...could be wrong, but I'm pretty sure that "Just call the libc function from asm" is a common response
[19:05:34] <daurnimator> noam: then that's a stable ABI.
[19:05:41] <daurnimator> and zig can just do that
[19:05:43] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:05:56] <noam> daurnimator: and I"m sure that it does, but the problem is that some wrapper code *is* defined as macros.
[19:06:24] <daurnimator> so then ask "how do I call function XXX from assembly?"
[19:07:03] *** Joins: rgrinberg (~textual@200.5.63.76)
[19:07:25] <noam> It's stuff like what I pointed out, in particular.
[19:07:29] <noam> e.g. WIFEXITED
[19:08:04] <noam> Which is explicitly defined by POSIX to be a macro.
[19:16:32] <semarie> daurnimator: regarding __do_syscall_openbsd_6_8, how long would you expect the thing to be kept ? forever like linux ? and who will maintain the code ? a code almost not used. it is dead code. dead code is removed.
[19:17:28] <daurnimator> semarie: I'd expect it to hang around for minor releases; and then perhaps be deprecated for a major release before removal
[19:17:42] <semarie> but we don't have minor releases.
[19:17:52] <daurnimator> 6.8... is that not a major and a minor?
[19:17:57] <semarie> no :)
[19:18:06] <semarie> 6.8, next 6.9, next 7.0, next 7.1 ...
[19:19:40] <semarie> we try to keep some compat between releases (it is more simple to upgrade). but we don't provide guarantee, and if more simple, we break ABI between release (like for time_t size)
[19:22:44] * ifreund wonders why the . is there
[19:23:35] <yeti> cause 6.10 might happen?
[19:24:32] <semarie> ifreund: maybe an historical artefact ?
[19:24:43] <semarie> yeti: no. after 6.9, it is 7.0
[19:27:39] <yeti> hmmm...  maybe we need some mysteries...  ;-)
[19:32:49] *** Joins: leon-p (~leon-p@2a02:8108:96c0:1810:7407:ff:fe55:f7c2)
[19:35:02] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:36:23] <bgiannan> when doing `something() catch {...}` is `{...}` a block or some kind of anonymous function?
[19:39:00] <dutchie> block. you don't even need the {}, you can just put a single value there if you like, or go straight into a switch/whatever
[19:39:39] <bgiannan> alright make sense
[19:40:35] <bgiannan> but if i have to use {} because i need several statement to provide a default value, how do i provide that value since it's a block and return would return the enclosing function?
[19:41:15] <dutchie> name the block and use named break. `something() catch blk: {...; break :blk foo; }`
[19:41:20] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:41:37] <dutchie> or use `if (something) |val| {...} else |e| {...}` syntax
[19:41:50] <bgiannan> ah ok just like a switch block
[20:02:12] *** Joins: JeremyOwensBoggs (~JeremyOwe@192-063-007-169.res.spectrum.com)
[20:02:35] *** Parts: JeremyOwensBoggs (~JeremyOwe@192-063-007-169.res.spectrum.com) ()
[20:03:00] *** Joins: JeremyOwensBoggs (~JeremyOwe@192-063-007-169.res.spectrum.com)
[20:03:10] *** Parts: JeremyOwensBoggs (~JeremyOwe@192-063-007-169.res.spectrum.com) ()
[20:10:42] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:14:25] *** Quits: kragacles_ (kragacles@2600:3c00::f03c:91ff:fe33:9278) (Read error: Connection reset by peer)
[20:14:39] *** Joins: kragacles (kragacles@2600:3c00::f03c:91ff:fe33:9278)
[20:32:10] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[20:32:34] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:35:05] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[20:36:24] *** Quits: anthon (~Thunderbi@p2e52aa21.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:38:55] *** Joins: anthon (~Thunderbi@p2e52aa21.dip0.t-ipconnect.de)
[20:46:35] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:46:51] *** Joins: slowjo (~slowjo@sourcehut/user/slowjo)
[21:09:50] *** Quits: xackus (~xackus@7-24.w.knc.pl) (Ping timeout: 260 seconds)
[21:15:53] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[21:21:31] *** Joins: kron (~weechat@user/qaph)
[21:23:20] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Quit: Leaving)
[21:23:26] *** Quits: jmiven (~vpm@pham.algeb.re) (Quit: reboot)
[21:34:50] *** Joins: nyah (~nyah@176.249.120.61)
[21:35:45] *** Quits: tgschultz__ (~UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[21:36:15] *** Joins: tgschultz__ (~UserNick@047-034-058-084.res.spectrum.com)
[21:44:00] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:44:55] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[22:01:00] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:90d0:563b:3279:f95b) (Ping timeout: 268 seconds)
[22:05:54] *** Quits: nyah (~nyah@176.249.120.61) (Ping timeout: 260 seconds)
[22:07:54] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[22:09:10] *** Joins: livoreno (~livoreno@user/notzmv)
[22:14:02] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:90d0:563b:3279:f95b)
[22:17:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:18:10] *** Joins: nyah (~nyah@94.6.71.219)
[22:31:57] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:33:27] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[22:35:17] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb)
[22:42:02] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb) (Remote host closed the connection)
[22:51:14] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb)
[22:51:16] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[22:52:43] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (Ping timeout: 265 seconds)
[22:53:14] *** Joins: hiato (~op_4@user/op-4/x-9116473)
[22:53:23] *** Joins: thing (~thing@user/thing)
[22:53:35] *** Quits: op_4 (~op_4@user/op-4/x-9116473) (Ping timeout: 260 seconds)
[22:55:43] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[22:56:19] *** Quits: freshcoffee1 (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[22:57:21] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[22:59:18] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[23:16:55] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[23:19:55] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[23:21:47] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[23:26:10] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[23:27:06] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:27:43] *** Joins: xackus (~xackus@7-24.w.knc.pl)
[23:30:45] *** Quits: Miaourt1 (~Miaourt@static.10.244.203.116.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[23:31:07] *** Joins: Miaourt1 (~Miaourt@static.10.244.203.116.clients.your-server.de)
[23:31:38] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[23:33:36] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: Ping timeout (120 seconds))
[23:33:53] *** Joins: zkanda (~zkanda@159.69.159.85)
[23:41:25] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[23:45:58] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[23:54:46] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
