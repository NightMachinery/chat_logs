[00:01:29] <|xD> but it wont be available if i call it from another shell?
[00:01:42] <lopid> source it there
[00:02:23] <|xD> hard to do
[00:02:45] <|xD> since its own environment
[00:02:59] *** Joins: uc50ic4more (~uc50ic4mo@dyn216-8-130-29.ADSL.mnsi.net)
[00:03:01] <|xD> it can call sys exec
[00:03:55] <|xD> but there is ipcs
[00:04:04] <|xD> so there must be a way to store data there
[00:04:17] <|xD> shmget works within C too xD
[00:04:22] <|xD> but how to write
[00:04:40] <|xD> within bash
[00:05:50] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[00:06:42] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[00:07:19] <|xD> so i need a wrapper? https://man.archlinux.org/man/shmdt.2.en
[00:08:09] <|xD> like those examples
[00:09:08] *** Quits: knstn (~knstn@ppp-94-66-57-8.home.otenet.gr) (Quit: leaving)
[00:10:10] <|xD> or write some store.data file to /dev/shm?
[00:11:00] <twkm> beware magic locations.
[00:11:24] <|xD> i like magic :)
[00:12:03] <|xD> but shared memory is best place to exchange data
[00:12:09] <|xD> between some other environments
[00:13:41] <|xD> i cant be the first doin this :P
[00:15:45] <emanuele6> other than the one in ~, there are still 17 urls that should be replaced http://paste.wooledge.org/9756
[00:16:20] <nomn> how can i get the output of a subprocess?
[00:16:39] <emanuele6> nomn: what do you mean?
[00:17:06] <jetchisel> sounds like a Python thing
[00:17:26] <nomn> child* process i guess haha
[00:17:31] <nomn> i'm coming from python indeed
[00:17:35] <emanuele6> still i don't get it
[00:17:52] <emanuele6> you mean like   var=$(a command)  ?
[00:18:04] <emanuele6> !faq 2
[00:18:04] <greybot> https://mywiki.wooledge.org/BashFAQ/002 -- How can I store the return value and/or output of a command in a variable?
[00:18:32] <nomn> yeah but i don't want to wait for the command to finish
[00:18:46] <nomn> if i add the & at the end and store its pid in a var
[00:18:47] <emanuele6> !faq 1
[00:18:47] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[00:19:01] <|xD> xD
[00:24:02] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[00:26:29] <nomn> this is helpful too, i do need to read from a file
[00:26:58] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[00:26:59] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:28:29] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[00:28:43] <|xD> but memory is nicer :)
[00:29:04] <emanuele6> to read from a command line-by-line just pipe to a while loop :|
[00:29:13] <emanuele6> you said  "yeah but i don't want to wait for the command to finish"
[00:29:27] <emanuele6> the faq says how to do it
[00:31:41] <nomn> alright
[00:31:43] <Friithian> nothing like making a million symlinks so jellyfin can properly read my media
[00:32:30] *** Joins: metabulation (~wootehfoo@user/wootehfoot)
[00:33:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:34:01] *** Quits: metabulation (~wootehfoo@user/wootehfoot) (Remote host closed the connection)
[00:36:27] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[00:36:46] *** Quits: luva (~luva@5.180.62.231) (Ping timeout: 260 seconds)
[00:39:42] *** Joins: luva (~luva@5.180.62.228)
[00:43:21] *** Quits: n4dir (~user@mue-88-130-57-234.dsl.tropolys.de) (Remote host closed the connection)
[00:43:57] <Hash> Hi
[00:44:05] <Hash> How do you XOR something in bash? Is this possible?
[00:44:17] <Hash> https://stackoverflow.com/questions/2960136/bitwise-xor-a-string-in-bash I saw this but it writes its own xor function
[00:45:21] <emanuele6> what do you mean?
[00:45:29] <emanuele6> how do you bitwise xor a number?
[00:45:35] <emanuele6> err two numbers
[00:46:21] <emanuele6> # ((i = 7 ^ 2)); declare -p i
[00:46:23] <shbot8> emanuele6: declare -- i="5"
[00:46:35] *** Quits: eblip (~eb0t@90.211.41.180) (Ping timeout: 264 seconds)
[00:48:27] *** Joins: eblip (~eb0t@90.196.142.2)
[00:48:33] <emanuele6> or are you asking how to logically xor the exit statuses of two commands?
[00:49:06] *** Quits: Memory (sid459764@user/memory) ()
[00:49:40] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:50:54] <phy1729> I'd assume has a variable or a pipeline with text he wants to poorly encrypt
[00:52:24] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[00:53:34] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:54:26] *** Quits: uc50ic4more (~uc50ic4mo@dyn216-8-130-29.ADSL.mnsi.net) (Quit: uc50ic4more)
[00:54:30] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[00:54:59] <emanuele6> but even if you do it, you wouldn't be able to store it in a variable
[00:56:22] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:57:39] <emanuele6> # key=20; echo some text | while read -rn1; do printf -v code %d "'$REPLY"; printf -v new %o "$(( code ^= key ))"; printf "\\$new"; false; done || echo
[00:57:41] <shbot8> emanuele6: g{yq4`ql`
[00:57:55] <emanuele6> worked first try it seems
[00:57:57] <emanuele6> hehe
[00:58:15] <emanuele6> # key=20; echo some text | while read -rn1; do printf -v code %d "'$REPLY"; printf -v new %o "$(( code ^= key ))"; printf "\\$new"; false; done || echo | while read -rn1; do printf -v code %d "'$REPLY"; printf -v new %o "$(( code ^= key ))"; printf "\\$new"; false; done || echo
[00:58:17] <shbot8> emanuele6: g{yq4`ql`
[00:58:21] <emanuele6> nevermind
[00:58:55] <emanuele6> ah, yes of course
[00:59:28] <emanuele6> because you can't store the encrypted value in a variable because it is binary
[01:00:02] <emanuele6> # key=20; echo some text | while read -rn1; do printf -v code %d "'$REPLY"; printf -v new %o "$(( code ^= key ))"; printf "\\$new"; false; done || echo | od -An -c
[01:00:05] <shbot8> emanuele6: g{yq4`ql`  \n
[01:00:13] <emanuele6> huh?
[01:00:42] <emanuele6> oh, is this a precedence issue? i thought || had lower precedence of |
[01:00:52] <emanuele6> # key=20; echo some text | { while read -rn1; do printf -v code %d "'$REPLY"; printf -v new %o "$(( code ^= key ))"; printf "\\$new"; false; done || echo ;} | od -An -c
[01:00:54] <shbot8> emanuele6:    g   {   y   q   4   `   q   l   ` 024  \n
[01:00:56] <emanuele6> ah, yes
[01:01:31] <emanuele6> # key=20; echo some text | { while read -rn1; do printf -v code %d "'$REPLY"; printf -v new %o "$(( code ^= key ))"; printf "\\$new"; false; done || echo ;} | { while read -rn1; do printf -v code %d "'$REPLY"; printf -v new %o "$(( code ^= key ))"; printf "\\$new"; false; done || echo ;}
[01:01:33] <shbot8> emanuele6: some text
[01:01:35] <emanuele6> it works
[01:02:04] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[01:02:07] <emanuele6> # printf 'a\0b' | while read -r; do declare -p REPLY; done
[01:02:09] <shbot8> emanuele6: no output
[01:02:14] <emanuele6> # printf 'a\0b' | while read -rn1; do declare -p REPLY; done
[01:02:16] <shbot8> emanuele6: declare -- REPLY="a"
[01:02:16] <shbot8> emanuele6: declare -- REPLY="b"
[01:02:33] <emanuele6> Hash: but as you can't see, it is unrelyable
[01:02:48] <emanuele6> s/y/i/2
[01:03:01] <Hash> Yesir
[01:03:04] <emanuele6> because bash skips character that are NUL
[01:03:21] <Hash> I think I might just use python. I was justrying to see if twas quickly possible in bash/terminal
[01:03:24] <FreeBDSM> is there an example when a command returns both stdout and stderr? or are they always mutually exclusive?
[01:03:33] <emanuele6> for example 32 is ' '
[01:03:38] <emanuele6> # key=32; echo some text | { while read -rn1; do printf -v code %d "'$REPLY"; printf -v new %o "$(( code ^= key ))"; printf "\\$new"; false; done || echo ;} | { while read -rn1; do printf -v code %d "'$REPLY"; printf -v new %o "$(( code ^= key ))"; printf "\\$new"; false; done || echo ;}
[01:03:40] <shbot8> emanuele6: sometext
[01:03:45] <emanuele6> spaces will get lost
[01:03:54] <Hash> *nod* makes sense
[01:03:55] <emanuele6> every character that matches the key gets lost
[01:03:56] <Hash> Thanks a lot man
[01:04:00] <Hash> i really appreciate you
[01:04:31] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:05:54] <FreeBDSM> I'll correct myself: can I write a script that upon execution writes to both stdout and stderr?
[01:06:28] <emanuele6> # { echo hi; echo >&2 hello ;}
[01:06:29] <shbot8> emanuele6: hi
[01:06:29] <shbot8> emanuele6: hello
[01:07:14] <emanuele6> # { echo hi; echo >&2 hello ;} 2> >(sed 's,^,i am stderr:,')|sed 's,^,i am stdout,'
[01:07:16] <shbot8> emanuele6: i am stdouthi
[01:07:16] <shbot8> emanuele6: i am stdouti am stderr:hello
[01:07:46] *** Joins: Raguile (~Raguile@user/raguile)
[01:08:08] <emanuele6> # { echo hi; echo >&2 hello ;} 2> >(sed 's,^,i am stderr: ,') | sed 's,^,i am stdout: ,'
[01:08:09] <shbot8> emanuele6: i am stdout: hi
[01:08:09] <shbot8> emanuele6: i am stdout: i am stderr: hello
[01:08:19] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[01:08:24] <emanuele6> ah, right oops
[01:08:40] <emanuele6> # { echo hi; echo >&2 hello ;} 2> >(sed 's,^,i am stderr: ,') >( sed 's,^,i am stdout: ,')
[01:08:42] <shbot8> emanuele6: bash: syntax error near unexpected token `>( sed 's,^,i am stdout: ,')'
[01:08:49] <emanuele6> # { echo hi; echo >&2 hello ;} 2> >(sed 's,^,i am stderr: ,') > >( sed 's,^,i am stdout: ,')
[01:08:50] <shbot8> emanuele6: no output
[01:09:03] *** Joins: DrNostril (~DrNostril@84.17.59.177)
[01:09:07] *** Quits: pa (~smuxi@86-95-132-61.fixed.kpn.net) (Read error: Connection reset by peer)
[01:09:10] <FreeBDSM> 1> ?
[01:09:22] <emanuele6> no, shbot will exit because these are run in the background
[01:09:25] <emanuele6> # { echo hi; echo >&2 hello ;} 2> >(sed 's,^,i am stderr: ,') > >( sed 's,^,i am stdout: ,'); wait
[01:09:27] <shbot8> emanuele6: i am stderr: hello
[01:09:27] <shbot8> emanuele6: i am stdout: hi
[01:09:50] <emanuele6> FreeBDSM: any way, no a process can write to any file it want to
[01:10:17] <FreeBDSM> damn :(
[01:10:29] <emanuele6> you can write to stderr, stdout, ~/foo, /tmp/tmpfile, ~/.bashrc, whatever
[01:10:32] <emanuele6> all in the same process
[01:10:42] <emanuele6> no problem at all
[01:10:44] <FreeBDSM> I hoped that I shouldn't bother handling a case when a program writes both stdout and stderr
[01:11:24] <emanuele6> if that was the case, it would be a terrible world
[01:11:33] <emanuele6> FreeBDSM: what is your actual issue?
[01:11:50] *** Quits: krisk (~krisk@user/krisk) (Read error: Connection reset by peer)
[01:12:22] *** Joins: krisk (~krisk@user/krisk)
[01:12:25] <emanuele6> you want to suppress the output of a program like   { echo hi; echo >&2 hello ;} ?
[01:12:36] <emanuele6> # { echo hi; echo >&2 hello ;} > /dev/null
[01:12:38] <shbot8> emanuele6: hello
[01:12:41] <emanuele6> # { echo hi; echo >&2 hello ;} 2> /dev/null
[01:12:43] <shbot8> emanuele6: hi
[01:12:48] <emanuele6> # { echo hi; echo >&2 hello ;} > /dev/null 2>&1
[01:12:50] <shbot8> emanuele6: no output
[01:12:51] <emanuele6> easy
[01:13:06] <emanuele6> i don't see the problem or why it would be such a bother
[01:13:13] <FreeBDSM> emanuele6: I wrote a shell script that rehosts video (using youtube-dl and curl), I tied it to a bot (written in go) and now I need to figure how to reply to the user in the most nice manner
[01:17:34] <emanuele6> <FreeBDSM > I hoped that I shouldn't bother handling a case when a program writes both stdout and stderr
[01:17:56] <emanuele6> but what is the issue with this? ^
[01:18:03] <emanuele6> what do you need to handle?
[01:18:27] *** Quits: timj (~timj@user/timj) (Ping timeout: 260 seconds)
[01:18:50] <FreeBDSM> bot calls shell script, what if the script returns both stdOut and stdErr? how should the bot's response to the user look like?
[01:20:05] <nomn> (well that took me a while to understand lol, thanks emanuele6 i wouldn't have found the resource alone)
[01:20:44] <FreeBDSM> thanks emanuele6!
[01:21:08] <emanuele6> FreeBDSM: why would you care of either?
[01:21:15] *** Joins: prifici (~patri@user/prifici)
[01:21:23] <emanuele6> i don't get it
[01:22:22] <FreeBDSM> emanuele6: I probably won't, the question was more interesting as an abstract one.
[01:23:34] <emanuele6> you read either stderr or stdout
[01:23:40] <emanuele6> they are different file descriptor
[01:23:53] <emanuele6> so i don't see the issue at all in any case
[01:23:53] <FreeBDSM> why XOR?
[01:24:29] <emanuele6> you can read either, none or both
[01:24:37] <FreeBDSM> why not both?
[01:24:44] <emanuele6> you can do that too
[01:24:51] <emanuele6> so i don't see the issue
[01:24:59] <FreeBDSM> but the output (to the user) is a single message
[01:25:22] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Remote host closed the connection)
[01:25:44] <Blondie101010> that's a matter of specs, not how it can be implemented
[01:25:46] <FreeBDSM> so I need some transformation, I can't just pass only stdout xor stderr, I need to pass stdout if only it is available, stderr if only it is available and both if both are available
[01:25:52] <emanuele6> that is usually the case in a terminal because the shell (bash) reads both standard input and standard error and prints both of them to the terminal file descriptor
[01:25:59] <Blondie101010> how do you want the two combined?  one after the other?
[01:26:31] <FreeBDSM> emanuele6: told you, I hooked the script to a bot, so the interface (i.e. where the user's interaction occurs) is in IM
[01:26:38] <Blondie101010> if you just want to combine them, do that: 2>&1
[01:26:51] <emanuele6> # echo bash ; echo echo >&2
[01:26:53] <shbot8> emanuele6: bash
[01:26:53] <shbot8> emanuele6: echo
[01:27:06] <emanuele6> the shell running in shbot is also hooked to a bot :/
[01:27:23] <emanuele6> you read both and send both
[01:27:34] <FreeBDSM> and it fails to convey properly what's stdout and what's stderr
[01:27:52] <emanuele6> because the output is the same file :|
[01:28:04] <emanuele6> the same would happen in a terminal
[01:28:10] <FreeBDSM> correct
[01:28:23] <FreeBDSM> but I don't expect the same behavior when interacting with a bot
[01:30:10] <emanuele6> you can process each file however you want
[01:30:19] <emanuele6> you don't have to read&print
[01:30:50] *** Quits: chomwitt (~chomwitt@ppp-94-68-249-8.home.otenet.gr) (Ping timeout: 260 seconds)
[01:31:19] <emanuele6> # exec >(tput setaf 1) 2> >(tput setaf 2); echo hi; echo >&2 hello; echo hi again
[01:31:20] <shbot8> emanuele6: hi
[01:31:20] <shbot8> emanuele6: hi again
[01:31:22] <emanuele6> oops
[01:31:24] <FreeBDSM> I don't have to do anything at all. I just want some nice interface. Like wrap stuff into "Oops, there was an error, here it is: ${stdErr}' in case of just StdErr and into something like `An error occurred. stdout was ${stdOut}, stderr was ${stderr}, good luck fixing!`
[01:31:30] <emanuele6> # exec >(tput setaf 1; cat) 2> >(tput setaf 2; cat); echo hi; echo >&2 hello; echo hi again
[01:31:31] <shbot8> emanuele6: hi
[01:31:31] <shbot8> emanuele6: hi again
[01:31:46] <emanuele6> nevermind, i thought shbot supported colours
[01:31:47] <FreeBDSM> anyways, I don't want to spend any more of your time, you already helped, thanks
[01:32:35] <emanuele6> there isn't just standard error and standard out :/
[01:32:46] <FreeBDSM> ?
[01:32:46] <emanuele6> the program will tell you if it succeeded with an exit code
[01:32:55] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[01:32:59] <FreeBDSM> stdOut, stdErr := exec.Command(rehostVideoShFilePath, urls).Output()
[01:33:02] <emanuele6> if it is 0, it has succeeded, if its not zero it has not
[01:33:17] <emanuele6> !faq 2
[01:33:17] <greybot> https://mywiki.wooledge.org/BashFAQ/002 -- How can I store the return value and/or output of a command in a variable?
[01:33:26] *** Joins: timj (~timj@user/timj)
[01:33:39] <emanuele6> FreeBDSM: i don't know go's std library, but since you have .Output() at the end
[01:33:51] <emanuele6> i would guess there is also ExitCode() or something like that
[01:33:58] <emanuele6> but you are discarding it
[01:34:18] <FreeBDSM> https://pkg.go.dev/os/exec#Cmd.Output
[01:34:25] <FreeBDSM> looks like no, I don't discard
[01:34:46] <FreeBDSM> but it is a bit confusing that they call it 'standard output' while in fact it's both stdout and stderr
[01:34:49] <emanuele6> yes
[01:34:51] <emanuele6> don't you see?
[01:34:57] <emanuele6> .Wait()
[01:35:29] <chiselfuse> I don't understand what bash thinks when it expands `command "${array[@]}"` according to the wiki, it sends each element as an argument to the command as a special case. I don't understand at what level the double quotes fail to escape the whitespace of the expanded elements of the array.
[01:36:25] <emanuele6> cmd := exec.Command(rehostVideoShFilePath, urls); if cmd.Wait() != 0 { HasFailed(cmd); return ; }  hasSucceded(cmd);
[01:36:37] <emanuele6> that how you are meant to do it
[01:36:40] *** Parts: Raguile (~Raguile@user/raguile) ()
[01:36:46] <FreeBDSM> Wait waits for the command to exit and waits for any copying to stdin or copying from stdout or stderr to complete. The command must have been started by Start.
[01:36:53] <FreeBDSM> I don't use Start()
[01:37:34] <emanuele6> you are ignoring the exit code of your external command
[01:37:52] <emanuele6> that is the information that tells you whether it has succeed or not
[01:38:16] <FreeBDSM> but presence of stdErr also tells it
[01:38:22] <emanuele6> it does not
[01:38:30] <emanuele6> you are inventing standards
[01:38:58] <emanuele6> failure is signaled with a non-zero exit code in unix
[01:39:10] <emanuele6> ( and in other systems too )
[01:39:26] <Blondie101010> which doesn't correlate with stderr use though
[01:39:59] <emanuele6> stderr is meant to be used for writing error messages
[01:39:59] <FreeBDSM> >:[
[01:40:07] *** Joins: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net)
[01:40:09] <emanuele6> but a program may fail without writing a message
[01:40:11] <emanuele6> it still failed
[01:40:22] <FreeBDSM> or may write an error message without failing
[01:40:24] <Blondie101010> and it may give out a warning to stderr without failing
[01:40:26] <emanuele6> or it may succeed and write debug output to stderr
[01:40:26] <Blondie101010> :)
[01:42:42] <chiselfuse> array=(foo, bar, "b a z"); strace echo "${array[@]} another_string"
[01:42:42] <chiselfuse> execve("/usr/bin/echo", ["echo", "foo,", "bar,", "b a z another_string"]
[01:43:15] <chiselfuse> How does bash wordsplit this?
[01:43:30] <emanuele6> it doesn't wordsplit anything
[01:43:36] <emanuele6> that is just an array expansion
[01:44:10] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:44:11] *** Quits: luva (~luva@5.180.62.228) (Ping timeout: 264 seconds)
[01:44:13] <chiselfuse> And after it expands, it is quoted, then what?
[01:44:19] *** Quits: ogis (~Android@240d:1c:3d:9500:18fd:8400:b622:9944) (Quit: -a- Connection Timed Out)
[01:44:25] <chiselfuse> So quotes should escape wordsplitting
[01:44:29] <emanuele6> what do you mean?
[01:44:31] <chiselfuse> Ehm
[01:44:35] *** Joins: ogis (~Android@240d:1c:3d:9500:18fd:8400:b622:9944)
[01:44:38] <chiselfuse> Should escape whitespace*
[01:44:45] <emanuele6> what?
[01:45:21] <emanuele6> # array=(foo, bar, "b a z"); declare -p array
[01:45:23] <shbot8> emanuele6: declare -a array=([0]="foo," [1]="bar," [2]="b a z")
[01:45:36] <emanuele6> the array has three elements, right?
[01:45:47] <chiselfuse> Yes
[01:45:47] <emanuele6> "foo,"    "bar,"     "b a z"
[01:46:07] <emanuele6> "${array[@]}" expands to those three values ^
[01:46:34] <chiselfuse> ${array[@]} expands to those three values
[01:46:39] <emanuele6> then since you have " another_string" in quotes with "${array[@]}", that gets appended to the last element of the array
[01:46:47] <emanuele6> chiselfuse: no
[01:47:06] <chiselfuse> "${array[@]}" expands to all these three, and quotes them, that's what I assume
[01:47:18] <chiselfuse> Which is wrong, I still don't understand why
[01:47:18] <emanuele6> no, "${array[@]}" expands to those three values
[01:47:25] <emanuele6> without quotes it doesn't do that
[01:47:40] <emanuele6> without quotes it is a multiple step process
[01:48:01] <chiselfuse> Could you elaborate on that multiple step process?
[01:48:08] <emanuele6> first it is converted then to a string with all the elements joined by " "
[01:48:21] <Blondie101010> chiselfuse:  I think you're confusing the actual call with what is actually happening
[01:48:24] <emanuele6> "foo bar, b a z"
[01:48:28] <emanuele6> oops
[01:48:30] <emanuele6> "foo, bar, b a z"
[01:48:32] <Blondie101010> your execve passes the arguments separately
[01:48:53] <Blondie101010> so they will be received by the called program that way
[01:49:01] *** Quits: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net) (Quit: Bye)
[01:49:02] <emanuele6> then word splitting applies: assuming default IFS, that would split into: "foo," "bar," "b" "a" "z"
[01:49:11] <emanuele6> then for each word, pathname expansion applies
[01:49:23] <emanuele6> since there are not * ? or [, nothing happens in this step
[01:49:36] <pj> # ar1=(foo, bar, "b a z"); ar2=(${ar1[@]}); declare -p ar1 ar2
[01:49:38] <shbot8> pj: declare -a ar1=([0]="foo," [1]="bar," [2]="b a z")
[01:49:38] <shbot8> pj: declare -a ar2=([0]="foo," [1]="bar," [2]="b" [3]="a" [4]="z")
[01:49:55] <emanuele6> # ar1=(foo, bar, "b a z"); IFS=b; ar2=(${ar1[@]}); declare -p ar1 ar2
[01:49:57] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b a z")
[01:49:57] <shbot8> emanuele6: declare -a ar2=([0]="foo," [1]="" [2]="ar," [3]="" [4]=" a z")
[01:50:22] <emanuele6> # ar1=(foo, bar, "b *a* z" ); IFS=b; ar2=(${ar1[@]}); declare -p ar1 ar2
[01:50:24] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b *a* z")
[01:50:24] <shbot8> emanuele6: declare -a ar2=([0]="foo," [1]="" [2]="ar," [3]="" [4]=" *a* z")
[01:50:27] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[01:50:40] <emanuele6> # ar1=(foo, bar, "b *a* z" ); IFS=; ar2=(${ar1[@]}); declare -p ar1 ar2
[01:50:42] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b *a* z")
[01:50:42] <shbot8> emanuele6: declare -a ar2=([0]="foo," [1]="bar," [2]="b *a* z")
[01:50:51] <chiselfuse> "The order of expansions is: brace expansion, tilde expansion, parameter, variable and arithmetic expansion and command substitution (done in a left-to-right fashion), word splitting, and pathname expansion."    Where is the array expansion in this list?
[01:50:52] <emanuele6> # ar1=(foo, bar, "b *a* z" ); ar2=(${ar1[@]}); declare -p ar1 ar2
[01:50:53] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 246 seconds)
[01:50:54] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b *a* z")
[01:50:54] <shbot8> emanuele6: declare -a ar2=([0]="foo," [1]="bar," [2]="b" [3]="*a*" [4]="z")
[01:51:31] <pj> I think array expansion is part of variable expansion
[01:51:41] <emanuele6> that is a (variable and arithmetic expansion and command substitution) so only   word splitting, and pathname expansion. apply
[01:52:34] <emanuele6> pj: it seems to behave slightly differently though; normally pathname expansion is applied after word splitting
[01:52:37] <Blondie101010> # for i in "${array[@]}"; do echo "arg: $i"; done
[01:52:38] <shbot8> Blondie101010: no output
[01:52:48] <emanuele6> # a='a *b* c'; echo $a
[01:52:50] <shbot8> emanuele6: a *b* c
[01:52:56] <emanuele6> oh, nevermind now i get it
[01:53:02] <emanuele6> dotglob being weird
[01:53:05] <Blondie101010> # array=(foo, bar, "b a z"); declare -p array; for i in "${array[@]}"; do echo "arg: $i"; done
[01:53:06] <shbot8> Blondie101010: no output
[01:53:21] <emanuele6> # touch bab; ar1=(foo, bar, "b *a* z" ); IFS=b; ar2=(${ar1[@]}); declare -p ar1 ar2
[01:53:23] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b *a* z")
[01:53:23] <shbot8> emanuele6: declare -a ar2=([0]="foo," [1]="" [2]="ar," [3]="" [4]=" *a* z")
[01:53:31] <emanuele6> # touch bab; ar1=(foo, bar, "b *a* z" ); IFS=; ar2=(${ar1[@]}); declare -p ar1 ar2
[01:53:33] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b *a* z")
[01:53:33] <shbot8> emanuele6: declare -a ar2=([0]="foo," [1]="bar," [2]="b *a* z")
[01:53:45] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu) (Read error: Connection reset by peer)
[01:53:50] <emanuele6> # touch bab;  a='a *b* c'; echo $a
[01:53:52] <shbot8> emanuele6: a bab c
[01:54:02] <emanuele6> no, it seems it is a little different
[01:54:10] <emanuele6> oh, no
[01:54:12] <emanuele6> duh
[01:54:24] <emanuele6> i used IFS=, instead of removing it
[01:54:29] <emanuele6> # touch bab; ar1=(foo, bar, "b *a* z" ); ar2=(${ar1[@]}); declare -p ar1 ar2
[01:54:30] <shbot8> emanuele6: no output
[01:55:15] <emanuele6> # touch bab; ar1=(foo, bar, "b *a* z" ); ar2=(${ar1[@]}); declare -p ar1 ar2
[01:55:16] <Blondie101010> # array=(foo, bar, "b a z") && for i in "${array[@]}"; do echo "arg: $i"; done
[01:55:18] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b *a* z")
[01:55:19] <shbot8> emanuele6: declare -a ar2=([0]="foo," [1]="bar," [2]="b" [3]="bab" [4]="z")
[01:55:19] <shbot8> Blondie101010: arg: foo,
[01:55:19] <shbot8> Blondie101010: arg: bar,
[01:55:19] <shbot8> Blondie101010: arg: b a z
[01:55:25] <emanuele6> yeah, it works
[01:55:35] <emanuele6> i don't know why it "no output" the first time
[01:55:44] <Blondie101010> :?
[01:55:45] <emanuele6> it is exactly like you would expect
[01:55:58] *** Joins: mw__ (~mw@catv-80-98-128-161.catv.broadband.hu)
[01:56:38] <emanuele6> chiselfuse: so basically "${array[@]}" is simple and expands to all the elements in the array
[01:57:02] <emanuele6> ${array[@]} first expands to all the elements in the array
[01:57:11] <emanuele6> "foo,"   "bar," "b *a* z"
[01:57:26] <emanuele6> then it word splits each element based on IFS
[01:57:33] <emanuele6> "foo,"   "bar," "b" "*a*" "z"
[01:57:49] <emanuele6> then it pathname expands each of the resulting word
[01:58:08] <emanuele6> assuming there is test.bash and a audio.mp3 file, the result will be
[01:58:12] <Blondie101010> not in his case
[01:58:28] <emanuele6>  "foo,"   "bar,"    "b"   "test.bash"     "audio.mp3"   "z"
[01:58:32] <chiselfuse> Ughhh, just give me a minute to digest :P
[01:59:03] <emanuele6> you basically never want unquoted substitutions because the have so many (most times unwanted) steps
[01:59:03] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[02:01:30] <emanuele6> though the word splitting step can be skipped by setting   IFS=''
[02:01:31] <Blondie101010> execve() does not call a shell
[02:01:58] <emanuele6> and the pathname expansion step can be skipped by setting:   set -f
[02:02:54] *** Joins: greknod28 (~grek@120.88.171.98)
[02:03:21] *** Quits: skered (~dereks@user/skered) (Quit: ircII EPIC5-2.1.5 -- Are we there yet?)
[02:03:27] <chiselfuse> # ar1=(foo, bar, "b a z"); IFS=b; ar2=(${ar1[@]}); declare -p ar1 ar2
[02:03:29] <shbot8> chiselfuse: declare -a ar1=([0]="foo," [1]="bar," [2]="b a z")
[02:03:29] <shbot8> chiselfuse: declare -a ar2=([0]="foo," [1]="" [2]="ar," [3]="" [4]=" a z")
[02:03:44] <chiselfuse> Why is element [1] "" and not " "?
[02:04:01] <emanuele6> here you have: "foo," "bar," "b a z" initially
[02:04:09] <chiselfuse> OK
[02:04:16] <chiselfuse> Go on
[02:04:19] <emanuele6> then you split each one of the elements individually using IFS characters
[02:04:23] <emanuele6> so in this case b
[02:04:30] <emanuele6> "foo," remains "foo,"
[02:04:41] <emanuele6> "bar," becomes "" "ar,"
[02:04:54] <emanuele6> "b a z" becomes "" " a z"
[02:05:10] <emanuele6> then pathname expansion, but there is nothing to expand
[02:05:31] <chiselfuse> Wait, you said it would evaluate to one big "foo, bar, b a z" string first, then split it.
[02:05:33] <emanuele6> # ar1=(foo, bar, "b a zbcbd" ); IFS=b; ar2=(${ar1[@]}); declare -p ar1 ar2
[02:05:35] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b a zbcbd")
[02:05:35] <shbot8> emanuele6: declare -a ar2=([0]="foo," [1]="" [2]="ar," [3]="" [4]=" a z" [5]="c" [6]="d")
[02:05:44] <emanuele6> chiselfuse: yeah, then i corrected myself
[02:05:56] <emanuele6> <emanuele6 > ${array[@]} first expands to all the elements in the array
[02:05:57] *** Joins: skered (~dereks@user/skered)
[02:05:58] <chiselfuse> Alright
[02:06:04] <emanuele6> <emanuele6 > "foo,"   "bar," "b *a* z"
[02:06:45] <emanuele6> chiselfuse: in the last example: "b a zbcbd" -> "" " a z" "c" "d"
[02:07:03] <emanuele6> again, unquoted substitutions are rarely ever useful and should just be avoided
[02:07:05] <emanuele6> !qefs
[02:07:06] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[02:07:19] *** Joins: luva (~luva@5.180.62.231)
[02:07:39] <emanuele6> !quote
[02:07:39] <greybot> https://mywiki.wooledge.org/Quotes
[02:07:41] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[02:09:16] *** Quits: jess (~jess@libera/staff/jess) ()
[02:10:51] <chiselfuse> ar1=(foo, bar, "b a z"); IFS=b; strace echo "${ar1[@]}"
[02:10:56] <chiselfuse> execve("/usr/bin/echo", ["echo", "foo,", "bar,", "b a z"]
[02:11:17] <chiselfuse> I have to set IFS=b before setting the array for this to split using 'b'
[02:13:17] <chiselfuse> Don't bother, I'll re-read everything from start and hopefully I'll get it
[02:13:19] *** Quits: Fjord (~Fjord@c-73-14-198-35.hsd1.co.comcast.net) (Quit: Ciao Ciao)
[02:13:46] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 260 seconds)
[02:14:25] <hentai> How do I have a case when a literal * is in the variable?
[02:14:52] <chiselfuse> Some sort of regex?
[02:15:06] <chiselfuse> Or extended glob
[02:15:32] <chiselfuse> You put them in variables so it's easier to deal with them rather than using them on the same line of the command directly
[02:15:57] *** Quits: DrNostril (~DrNostril@84.17.59.177) (Quit: Smell ya later~~)
[02:16:00] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:16:41] <emanuele6> or maybe you read input from a user and he inputted " hello *u* "
[02:16:50] <emanuele6> or "how are you?"
[02:17:20] <emanuele6> <chiselfuse> I have to set IFS=b before setting the array for this to split using 'b'
[02:17:34] <emanuele6> that is a quoted substitution
[02:17:43] <emanuele6> the elements of the array won't split
[02:18:25] <chiselfuse> Aaaaa
[02:18:28] *** Joins: Fjord (~Fjord@c-73-14-198-35.hsd1.co.comcast.net)
[02:18:29] <chiselfuse> Grey hair
[02:19:59] <emanuele6> "${a1[@]}" expands to the elements of a1 with no extra steps
[02:23:29] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 264 seconds)
[02:24:04] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[02:24:48] *** Joins: son0p (~ff@181.136.122.143)
[02:31:15] <hentai> I want to catch if $i is for ex. '/var/lib/example/list*' instead of '/var/lib/example/list2
[02:31:16] <hentai> ;
[02:31:54] <hentai> *'
[02:33:26] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[02:34:34] <geirha> *'*'*) ...
[02:37:28] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[02:37:39] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[02:38:11] <hentai> Thanks
[02:38:23] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:39:09] <|xD> hentai: ( ͡⚆ ͜ʖ ͡⚆) oppai
[02:39:39] <hentai> |xD, ⎝◉Ѡ◉⎠ oppai
[02:39:51] <hentai> Lets not do this here.
[02:39:52] *** Joins: ttyX (~ttyX@user/ttyx)
[02:41:02] <hentai> There is a much more appropriate #hentai for that
[02:41:10] <e36freak> of course there is
[02:41:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:43:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:45:59] *** Quits: ttyX (~ttyX@user/ttyx) (Ping timeout: 264 seconds)
[02:48:16] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[02:49:37] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[02:50:34] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[02:51:33] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[02:55:01] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:56:00] *** Joins: uc50ic4more (~uc50ic4mo@dyn216-8-130-29.ADSL.mnsi.net)
[02:58:28] *** Joins: rgrinberg (~textual@190.113.111.74)
[03:00:40] *** Parts: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net) (http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:19:14] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[03:19:58] *** Quits: A|an (~Alan@173.216.51.200) (Quit: A|an)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:30:03] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:11] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Remote host closed the connection)
[03:30:12] *** Joins: waxfire (~waxfire@65.119.2.240)
[03:31:18] *** Quits: uc50ic4more (~uc50ic4mo@dyn216-8-130-29.ADSL.mnsi.net) (Quit: uc50ic4more)
[03:31:33] *** Quits: ogis (~Android@240d:1c:3d:9500:18fd:8400:b622:9944) (Quit: -a- Connection Timed Out)
[03:33:10] *** Joins: son0p (~ff@181.136.122.143)
[03:36:35] *** Joins: ogis (~Android@240d:1c:3d:9500:18fd:8400:b622:9944)
[03:37:03] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[03:39:52] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[03:41:24] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[03:41:56] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[03:47:47] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[03:48:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[03:48:59] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Ping timeout: 264 seconds)
[03:50:41] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:52:37] *** Joins: luva6 (~luva@5.180.62.229)
[03:54:10] *** Quits: luva (~luva@5.180.62.231) (Ping timeout: 260 seconds)
[03:58:30] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[03:59:47] *** Quits: Inline (~Inline@2a02:908:1252:7a80:b384:bd52:ad64:846c) (Ping timeout: 264 seconds)
[04:00:29] *** Joins: xizhendu_ (~xizhendu@106.38.171.15)
[04:01:58] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.3)
[04:03:23] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9) (Ping timeout: 264 seconds)
[04:05:56] *** Quits: pagetelegram (~pageteleg@2601:249:8301:4200::ab9f) (Ping timeout: 245 seconds)
[04:08:09] *** Joins: chandoo (~chandoo@pool-71-172-140-13.nwrknj.fios.verizon.net)
[04:14:44] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:15:18] *** Joins: xayto_ (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[04:15:47] *** Quits: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (Ping timeout: 260 seconds)
[04:16:30] *** Quits: timj (~timj@user/timj) (Ping timeout: 260 seconds)
[04:16:49] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[04:18:23] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 264 seconds)
[04:20:18] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:20:44] *** Quits: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 2.9)
[04:25:56] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 245 seconds)
[04:27:19] *** Joins: pagetelegram (~pageteleg@2601:249:8301:4200:e33b:8607:f09c:154d)
[04:31:35] *** Quits: ogis (~Android@240d:1c:3d:9500:18fd:8400:b622:9944) (Quit: -a- Connection Timed Out)
[04:31:44] *** Quits: miw (~miw@vps-5dc1685f.vps.ovh.ca) (Remote host closed the connection)
[04:31:49] *** Joins: timj (~timj@user/timj)
[04:31:54] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 260 seconds)
[04:34:53] *** Joins: ferdna (~ferdna@user/ferdna)
[04:36:36] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[04:39:50] *** Quits: amrx (~amrx@access-63-249-98-253.static.cruzio.net) (Read error: Connection reset by peer)
[04:42:09] *** Quits: eschwartz (~eschwartz@2600:1700:57f0:ca20:763a:c795:fcf6:91ea) (Quit: A random quit message)
[04:42:25] *** Joins: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz)
[04:48:55] *** Joins: akoana (~ah@user/akoana)
[04:52:15] *** Quits: finstern1s (~X@23.226.237.192) (Quit: leaving)
[04:54:13] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:54:23] *** Joins: finsternis (~X@23.226.237.192)
[04:57:38] *** Quits: luva6 (~luva@5.180.62.229) (Ping timeout: 260 seconds)
[05:00:54] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[05:03:51] <chiselfuse> emanuele6: Can you correct/add anything to the following:
[05:04:02] <chiselfuse> So, `ar1=(foo, bar, "b a z"); IFS=b; strace echo ${ar1[@]}`
[05:04:12] <chiselfuse> At first we have "foo," "bar" "b a z", then bash tries to split stuff so "foo," becomes "foo,", "bar" becomes "" and "ar" and "b a z" becomes "" and " a z".
[05:04:21] <chiselfuse> Then, this gets passed to `echo`
[05:04:30] <chiselfuse> But in the case of `ar1=(foo, bar, "b a z"); IFS=b; strace echo "${ar1[@]}"`
[05:04:37] <chiselfuse> At first we have "foo," "bar," "b a z", then bash tries to split stuff but it can't because it's inside double quotes.
[05:04:38] <emanuele6> it's not passed to echo
[05:04:42] <emanuele6> you are using strace
[05:04:48] <emanuele6> why would it be passed to echo?
[05:05:23] <chiselfuse> OK, sorry, that was a mistake, go on, anything else?
[05:06:06] <emanuele6> > bash tries to split stuff but it can't because it's inside double quotes.
[05:06:39] <emanuele6> it simply doesn't split stuff that is quoted, it does not even try
[05:07:31] <chiselfuse> Because whitespace or whatever IFS is set to, loses its meaning inside ""
[05:07:41] <chiselfuse> its special* meaning
[05:07:56] <emanuele6> no, because it is quoted
[05:07:58] <emanuele6> !quote
[05:07:58] <greybot> https://mywiki.wooledge.org/Quotes
[05:08:36] <emanuele6> it depends on the type of quotes if it loses meaning or not, but whatever, yes
[05:08:36] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[05:08:55] <emanuele6> what is in quotes won't be word splitted
[05:08:58] <emanuele6> that is it
[05:09:57] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:10:04] <emanuele6> # var1='a b' var2='hello x f' var3=' c'; set -x ; : $var1"$var2"$var3
[05:10:06] <shbot8> emanuele6: + : a 'bhello x f' c
[05:10:11] *** Joins: pycurious (~Adium@user/pycurious)
[05:10:20] <emanuele6> var2 is in quotes -> it is not split
[05:10:32] <emanuele6> var1 and var3 are, they get split
[05:11:19] <emanuele6> but the ending part of var1 and the starting part of var3 still get joined with var2
[05:12:25] <chiselfuse> !:
[05:12:25] <greybot> : is a builtin identical to the 'true' builtin; they do nothing and have an exit status of 0
[05:12:40] <emanuele6> !xtrace
[05:12:45] <emanuele6> !set-x
[05:12:45] <greybot> set -x (or ''bash -x myscript'') makes bash output the exact command that it will run after parsing and expansion. You can put ''set -x'' just before the code you want to debug (turn off with ''set +x''). To add more information, change PS4 first: eg. PS4='+($?) $BASH_SOURCE:$FUNCNAME:$LINENO:'
[05:13:23] <emanuele6> !learn xtrace #redirect set-x
[05:13:23] <greybot> OK, emanuele6
[05:14:30] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 2.9)
[05:14:58] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[05:15:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[05:20:36] *** Joins: luva6 (~luva@5.180.62.231)
[05:22:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:27:10] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[05:27:54] *** Joins: rgrinberg (~textual@190.113.111.74)
[05:28:18] <chiselfuse> emanuele6: So, as in the example of var[1..3] that you gave, they are first all laid out like: `a b"hello x f" c` and then split like: `'a' 'bhello x f' 'c'`       OR       first: `'a b'"'hello x f'"' c'`  then  'a' 'b''hello x f''' 'c'  finally 'a' 'bhello x f' 'c'  ?
[05:28:49] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Quit: -a- Connection Timed Out)
[05:28:52] <chiselfuse> Which one?
[05:29:53] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[05:29:54] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[05:30:00] <chiselfuse> All laid out then split altogether, or each split individually then laid out the result?
[05:31:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:29] <emanuele6> quotes are only removed at the end
[05:31:39] <emanuele6> in the quotes removal step
[05:32:13] <emanuele6> as i said, everything that is in quote is not affected by word splitting and pathname expansion
[05:32:34] <emanuele6> some expansions still occur in quotes, but that depends on the kind of quotes
[05:32:42] <emanuele6> !quote > explained here :|
[05:32:42] <greybot> explained here :|: https://mywiki.wooledge.org/Quotes
[05:33:25] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[05:34:08] *** Joins: tejr (~tejr@user/tejr)
[05:34:57] <emanuele6> <a b"hello x f" c> -> <a> <b"hello x f"> <c> -> (no globs to expand so no change) ->  remove quotes <a> <bhello x f> <c>
[05:36:14] <emanuele6> and before that <$var1"$var2"$var3> -> <a b"hello x f" c>
[05:36:20] <emanuele6> but that is quote dependant
[05:36:57] *** Joins: pycurious (~Adium@user/pycurious)
[05:37:06] <emanuele6> if it was $var1'$var2'$var3, it would have been <$var1'$var2'$var3> -> <a b'$var2' c> -> ...
[05:37:53] <chiselfuse> I need to program my brain into a string parser...
[05:38:03] <emanuele6> or just qefs
[05:38:22] <emanuele6> since unquoted substitution are never useful
[05:38:43] <chiselfuse> !qef
[05:38:55] *** Quits: chandoo (~chandoo@pool-71-172-140-13.nwrknj.fios.verizon.net) (Quit: Leaving... Leaving... Left...)
[05:39:00] <emanuele6> !qefs > chiselfuse
[05:39:00] <greybot> chiselfuse: "$Quote" "$Every" "$Fucking" "$Substitution"
[05:39:20] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[05:40:39] <chiselfuse> I want to be driven to do that by reason, not just follow the guideline
[05:41:02] <chiselfuse> Thanks for helping btw, cleared a lot of things up
[05:41:23] *** Joins: rawgreaze (~rawgreaze@c-73-238-236-231.hsd1.nh.comcast.net)
[05:41:23] *** Quits: rawgreaze (~rawgreaze@c-73-238-236-231.hsd1.nh.comcast.net) (Changing host)
[05:41:23] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[05:42:11] *** Quits: xx (~xx@user/xx) (Ping timeout: 245 seconds)
[05:43:22] *** Joins: keypusher (keypusher@user/keypusher)
[05:57:16] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[06:03:12] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Ping timeout: 268 seconds)
[06:03:17] <emanuele6> # touch test.bash audio.mp3; ar1=(foo, bar, "b *a* z" ); declare -p ar1 # ar2=(${ar1[@]}); declare -p ar1 ar2
[06:03:19] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b *a* z")
[06:04:15] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[06:04:35] <emanuele6> <${ar1[@]}> -> <${ar1[0]}> <${ar1[1]}> <${ar1[2]}>
[06:04:43] <emanuele6> pararmeter expansions
[06:05:02] <emanuele6> <${ar1[0]}> <${ar1[1]}> <${ar1[2]}> -> <foo,> <bar,> <b *a* z>
[06:05:42] <emanuele6> word splitting; ifs is default so space, tab and linefeed
[06:05:53] <emanuele6> <foo,> <bar,> <b *a* z> -> <foo,> <bar,> <b> <*a*> <z>
[06:06:39] <emanuele6> pathname expansion: noglob is at the default state (set +f), pathname expansion is performed
[06:06:58] <emanuele6> a file named "test.bash" and a file named "audio.mp3" exist
[06:07:26] <emanuele6> <foo,> <bar,> <b> <*a*> <z> -> <foo,> <bar,> <b> <audio.mp3> <test.bash> <z>
[06:07:48] <emanuele6> all filenames that contain "a" (*a*) are expanded in lexicographical order
[06:07:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:08:08] <emanuele6> now quote removal, but there are no quotes to remove
[06:08:24] <emanuele6> # touch test.bash audio.mp3; ar1=(foo, bar, "b *a* z" ); ar2=(${ar1[@]}); declare -p ar1 ar2
[06:08:26] <shbot8> emanuele6: declare -a ar1=([0]="foo," [1]="bar," [2]="b *a* z")
[06:08:26] <shbot8> emanuele6: declare -a ar2=([0]="foo," [1]="bar," [2]="b" [3]="audio.mp3" [4]="test.bash" [5]="z")
[06:13:33] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[06:13:54] *** Quits: jirido (jirido@gateway/vpn/protonvpn/jirido) (Ping timeout: 268 seconds)
[06:14:16] *** Quits: luva6 (~luva@5.180.62.231) (Ping timeout: 245 seconds)
[06:14:32] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:22:21] *** Joins: The_Jag (~The_Jag@host-82-56-115-92.retail.telecomitalia.it)
[06:25:35] *** Quits: The_Jag_ (~The_Jag@host-79-32-14-38.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[06:25:54] <chiselfuse> emanuele6: I wanted to try with `ar1=(foo, bar, "b a z"); strace echo as df"${ar1[@]}"as df`
[06:25:54] <chiselfuse> execve("/usr/bin/echo", ["echo", "as", "dffoo,", "bar,", "b a zas", "df"]
[06:25:56] <chiselfuse> <as df"${ar1[@]}"as df> -> <as df"${ar1[0]}> <${ar1[1]}> <${ar1[2]}"as df>
[06:25:56] <chiselfuse> <as df"${ar1[0]}> <${ar1[1]}> <${ar1[2]}"as df> -> <as df"foo,> <bar,> <b a z"as df>
[06:26:00] <chiselfuse> <as df"foo,> <bar,> <b a z"as df> -> <as> <df"foo,> <bar,> <b a z"as> <df>
[06:26:05] <chiselfuse> <as> <df"foo,> <bar,> <b a z"as> <df> -> <as> <dffoo,> <bar,> <b a zas> <df>
[06:26:15] <emanuele6> no that is wrong
[06:26:20] <chiselfuse> :(
[06:26:23] <chiselfuse> Where
[06:26:42] <emanuele6> <as df"${ar1[@]}"as df> -> <as df"${ar1[0]}"> <"${ar1[1]}"> <"${ar1[2]}"as df>
[06:27:01] *** Joins: jirido (jirido@gateway/vpn/protonvpn/jirido)
[06:27:09] <emanuele6> i think it's explained in the "Special Expansion" or something like that section of the manual
[06:27:10] <chiselfuse> Oh
[06:27:18] <emanuele6> this behaviour is called `modern "$@"'
[06:27:47] <emanuele6> Special Parameters
[06:28:12] <chiselfuse> So $@ expands like array[@] does too?
[06:28:21] <emanuele6> yes
[06:28:44] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[06:29:12] <emanuele6> <as df"$@"as df> -> <as df"$0> <$1> <$2"as df>
[06:29:19] <emanuele6> that is how bourne shells do it
[06:29:28] <emanuele6> not posix shells that use modern "$@"
[06:30:24] <pj> keeping in mind that POSIX sh doesn't actually have any support for arrays, so the positional args is as close as you can get.
[06:30:57] <emanuele6> but $@ is basically the same as ${arr[@]}
[06:31:06] *** Joins: luva6 (~luva@5.180.62.231)
[06:31:12] <emanuele6> except for an array instead of for the positional args
[06:31:28] <pj> yes, but they're expanded the same way.
[06:31:41] <chiselfuse> emanuele6: You mean that POSIX sh does it like this: <as df"$@"as df> -> <as df"$0> <$1> <$2"as df>, right?
[06:31:43] <chiselfuse> Or bash?
[06:31:51] <chiselfuse> Sorry for the confusion
[06:31:57] <emanuele6> POSIX does that and bash is a POSIX shell
[06:32:07] <pj> I think there are some things you can do with arrays that you can't do with positional args, or that are done differently with positional args, though.
[06:32:27] <emanuele6> chiselfuse: <as df"$@"as df>
[06:32:32] <emanuele6> by the way this is not even possible
[06:32:48] <pj> well technically bash isn't fully POSIX compliant unless you run it in POSIX sh mode.
[06:32:52] <emanuele6> bash would read it as  <as> <df"$@"as> <df>
[06:33:24] <emanuele6> chiselfuse: bourne shells are older pre posix shells
[06:33:24] <llua> its not fully even in sh mode
[06:34:02] <pj> yeah, true, is there any shell that is fully POSIX compliant?
[06:35:13] <llua> i would be skeptical of any shell that claims to be
[06:35:18] * pj nods
[06:35:27] <llua> that is how shit the standard is
[06:35:33] <pj> yeah, no kidding.
[06:35:36] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:35:49] <emanuele6> i have not seen any shell ever that implements this posix builtin https://pubs.opengroup.org/onlinepubs/9699919799/utilities/newgrp.html
[06:36:58] <emanuele6> but even though the spec says it should be a builtin, it does not have to be a builtin technically so it does not matter
[06:39:30] <emanuele6> chiselfuse: the command is: strace echo as df"${ar1[@]}"as df
[06:39:55] <emanuele6> at the beginning you have: <strace> <echo> <as> <df"${ar1[@]}"as> <df>
[06:40:09] <emanuele6> not: <strace> <echo> <as df"${ar1[@]}"as df>
[06:40:59] <emanuele6> <strace> <echo> <as df"${ar1[@]}"as df> -> no brace expansions to do -> no tilde expansions to do -> ...
[06:41:31] <pj> honestly, I tend to avoid expanding an array inside a string like that.  There are other better-defined ways to do do array expansion inside of another string.
[06:41:47] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[06:41:57] <emanuele6> err i pasted the wrong line
[06:42:21] <emanuele6> <strace> <echo> <as> <df"${ar1[@]}"as> <df> -> no brace expansions to do -> no tilde expansions to do -> ...
[06:43:07] <emanuele6> actually tilde expansion is done with parameter expansion
[06:43:31] <emanuele6> so brace expansions are not present (stuff like {0..10}), so you do nothing
[06:43:55] <emanuele6> then tilde/parameter/variable/arithmetic/command substitutions
[06:44:49] <emanuele6> <strace> <echo> <as> <df"foo,"> <"bar,"> <"b a z"as> <df>
[06:45:09] <emanuele6> then word splitting with IFS=$' \t\n'
[06:45:27] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[06:45:52] <emanuele6> nothing to expand (since wordsplitting ignores quoted characters)
[06:46:23] <emanuele6> pathname expansion since `set +f'
[06:46:24] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:46:34] <emanuele6> there are no globs to expand
[06:46:40] <emanuele6> quote removal
[06:46:53] <emanuele6> <strace> <echo> <as> <dffoo,> <bar,> <b a zas> <df>
[06:47:35] <emanuele6> # strace () { :; }; ar1=(foo, bar, "b a z"); set +x; strace echo as df"${ar1[@]}"as df
[06:47:37] <shbot8> emanuele6: no output
[06:47:44] <emanuele6> # strace () { :; }; ar1=(foo, bar, "b a z"); set -x; strace echo as df"${ar1[@]}"as df
[06:47:45] <shbot8> emanuele6: + strace echo as dffoo, bar, 'b a zas' df
[06:47:45] <shbot8> emanuele6: + :
[06:48:03] <emanuele6> QED
[06:49:12] <chiselfuse> Perfect
[06:52:08] *** Joins: earendel (uid498179@user/earendel)
[06:52:59] <hejux> #for a in "1 2 3 4" ; do printf '%s  '  "$a" ; done
[06:53:08] <hejux> # for a in "1 2 3 4" ; do printf '%s  '  "$a" ; done
[06:53:10] <shbot8> hejux: 1 2 3 4
[06:53:14] <chiselfuse> But I have one last thing not clarified, since you mentioned it.. What would <as df"$0> <$1> <$2"as df> turn out to be intead?
[06:53:26] <hejux> how can i remove the spaces after the last var which is 4 ?
[06:53:32] <emanuele6> well that is not valid
[06:53:37] <emanuele6> i mean possible
[06:53:44] <emanuele6> for two reason
[06:53:58] <emanuele6> <as> <df"$0> <$1> <$2"as> <df>
[06:54:07] <emanuele6> this is how bash would parse something like that
[06:54:17] <hejux> # for a in "1 2 3 4" ; do printf '%s==='  "$a" ; done
[06:54:19] <shbot8> hejux: 1 2 3 4===
[06:54:23] <emanuele6> and second `df"$0' this would be a syntax error
[06:54:29] <emanuele6> # df"$0
[06:54:36] <shbot8> emanuele6: Missing terminating quote, bracket or keyword
[06:55:19] <emanuele6> chiselfuse: bourne expansions were different in other ways to posix
[06:55:20] <chiselfuse> I see...
[06:55:29] <emanuele6> for example: IFS=x; echo hixhello
[06:55:35] <earendel> cheesh. no clue how i broke it. okay. how can i expand $* with a dynamic index $i ?
[06:55:39] <emanuele6> word splitting would apply to the literal
[06:55:41] <llua> pj: http://schilytools.sourceforge.net/bosh.html that dude has a hard-on for the standard but i've never used the shell.
[06:55:58] <emanuele6> b# IFS=x; echo hixhello
[06:56:00] <shbot8> emanuele6: hi hello
[06:56:05] <hejux> # for a in "1 2 3 4" ; do printf '%s==='  "${a}s" ; done
[06:56:07] <shbot8> hejux: 1 2 3 4s===
[06:56:09] <emanuele6> <echo> <hi> <hello>
[06:56:11] *** Quits: timj (~timj@user/timj) (Ping timeout: 264 seconds)
[06:57:07] <earendel> spent half an hour and couldn't make it. for some reason it seems args=($*) doesn't work as it did here .. maybe some shopt? however. ${#*} would even get me the number.. but i cant iterate $*
[06:57:22] <earendel> help ps/
[06:57:45] <hejux> # for a in "1 2 3 4" ; do printf '%s==='  "${a}-s" ; done
[06:57:47] <shbot8> hejux: 1 2 3 4-s===
[06:57:51] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:57:52] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:58:03] <hejux> # for a in 1 2 3 4 ; do printf '%s==='  "${a}-s" ; done
[06:58:05] <shbot8> hejux: 1-s===2-s===3-s===4-s===
[06:58:09] <hejux> yes!
[06:58:20] <hejux> how can i remove the last "==="
[06:58:43] <emanuele6> earendel: ${@:i:0}
[06:58:54] <earendel> work in progress? cool.
[06:59:32] <earendel> emmanuele6: thank you.
[07:00:10] <emanuele6> !xy > hejux
[07:00:10] <greybot> hejux: http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[07:00:52] <earendel> # f(){ i=3; echo "${@:i:0}"; }; f "a x" b c d e f;
[07:00:53] <emanuele6> earendel: err i typoed
[07:00:55] <shbot8> earendel: no output
[07:00:55] <emanuele6> ${@:i:1}
[07:01:14] <emanuele6> # f(){ i=3; echo "${@:i:1}"; }; f "a x" b c d e f;
[07:01:16] <shbot8> emanuele6: c
[07:01:46] *** Joins: pycurious (~Adium@user/pycurious)
[07:02:11] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[07:02:34] <emanuele6> subarray of length 1 from index i
[07:03:06] <earendel> hm.. i don't understand that 0 there
[07:03:20] <emanuele6> it is not 0, i typoed..
[07:03:23] *** Quits: jos1 (~jos3@dyndsl-095-033-174-133.ewe-ip-backbone.de) (Ping timeout: 264 seconds)
[07:03:26] <emanuele6> ${@:i:1}
[07:03:30] <emanuele6> # f(){ i=3; echo "${@:i:1}"; }; f "a x" b c d e f
[07:03:32] <shbot8> emanuele6: c
[07:03:37] <earendel> well 1?
[07:03:54] <earendel> what is it. length?
[07:04:03] <earendel> len of range
[07:04:05] <emanuele6> # f(){ i=3; echo "${@:i:2}"; }; f "a x" b c d e f
[07:04:07] <shbot8> emanuele6: c d
[07:04:14] <emanuele6> from index 3, two elements
[07:04:53] <earendel> chappie emanuele6
[07:05:14] <emanuele6> what?
[07:05:38] * earendel celebrates emanuele6 with a quick hailing gesture
[07:05:41] <pj> the interesting thing is that form is zero-based, whereas the usual form of indexing args is one-based ($1 is the first arg, and so is ${@:0:1}
[07:05:59] <earendel> chapeau*
[07:06:22] <emanuele6> $@ when used as an array has $0 as zero-th element iirc
[07:06:25] * chiselfuse hails emanuele6 too
[07:06:26] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[07:06:29] <pj> yes
[07:06:43] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:07:05] <emanuele6> it is interesting, yes
[07:07:14] <pj> # set -- 1 2 3 4 5; echo "$3" "${@:3:1}"
[07:07:15] <shbot8> pj: 3 3
[07:07:25] <pj> hrmmmm, both are 1-based
[07:07:29] <earendel> hofacker, sie sind raus.
[07:07:49] <emanuele6> actually i think only when used for ${@:0:x}
[07:08:02] <emanuele6> because ${@@Q} doesn't include $0 for example
[07:08:45] <emanuele6> "${@:0}"   is pretty much a weird way of writing   "$0" "$@"
[07:08:50] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[07:08:57] <pj> yeah
[07:10:14] <pj> so it's different for function args?
[07:10:53] <emanuele6> no, $0 in functions is the value of the main $0
[07:10:53] <pj> # f(){ echo "$3" "${@:3:1}";}; f 1 2 3 4 5
[07:10:55] <shbot8> pj: 3 3
[07:11:06] <emanuele6> and same for ${@:0:1} in functions
[07:11:11] <pj> # f(){ i=3; echo "$3" "${@:i:1}";}; f 1 2 3 4 5
[07:11:12] <shbot8> pj: 3 3
[07:11:27] <e36freak> your main script args have a $0 as well
[07:11:29] <e36freak> they're the same
[07:11:59] <earendel> pj:
[07:12:06] <pj> oh, nm, I figured out my confusion
[07:12:09] <earendel> !shift @pj
[07:13:01] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 245 seconds)
[07:13:09] <pj> This confused me because for some reason I was thinking "f" was the first arg, not the function name: [2021-10-31 16:33:31] <emanuele6> # f(){ i=3; echo "${@:i:1}"; }; f "a x" b c d e f
[07:13:16] <e36freak> ah
[07:13:37] <pj> momentary brain fart, heh.
[07:14:07] <earendel> it basically is
[07:14:26] <pj> earendel: no, it's the first element of @, but not the first arg.
[07:14:34] <pj> I was thinking it was the first arg.
[07:15:34] <earendel> # args=(ls -l /); "${args[*]}"
[07:15:35] <shbot8> earendel: bash: ls -l /: No such file or directory
[07:15:46] <pj> ummmm, don't do that
[07:15:48] <pj> !ls
[07:15:48] <greybot> DO NOT USE ls' output for anything. ls is a tool for interactively looking at directory metadata. Any attempts at parsing ls' output with code are broken. Globs are much more simple AND correct: ''for file in *.txt''. Read http://mywiki.wooledge.org/ParsingLs
[07:15:48] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[07:15:51] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Client Quit)
[07:16:15] <earendel> ok. somebody must have completely dropped todays topic :p
[07:16:24] <pj> # args=(*); "${args[*]}"
[07:16:25] <shbot8> pj: bash: *: command not found
[07:16:29] <pj> bleh
[07:16:46] <pj> # args=(*); echo "${args[*]}"
[07:16:48] <shbot8> pj: *
[07:16:51] <pj> heh
[07:16:58] *** Joins: jos1 (~jos3@host-091-097-188-114.ewe-ip-backbone.de)
[07:17:07] <pj> # shopt -s dotglob; args=(*); echo "${args[*]}"
[07:17:09] <shbot8> pj: .bashrc .mkshrc
[07:17:16] <earendel> stop bleh and heh or fleh
[07:17:51] <emanuele6> earendel: @
[07:18:01] <emanuele6> # args=(ls -l /); "${args[@]}"
[07:18:09] <shbot8> emanuele6: total 4
[07:18:09] <shbot8> emanuele6: drwxrwxr-x  2 root root   0 May  4 20:30 bin
[07:18:09] <shbot8> emanuele6: etc... ( http://ix.io/3DqD )
[07:18:43] <earendel> * is like shifted @? or what exactly
[07:19:32] <pj> # cd /; args=(*); echo "${args[*]}"
[07:19:32] <emanuele6> "$*" creates a single string
[07:19:34] <shbot8> pj: bin dev etc init lib lib64 proc root tmp usr var
[07:20:17] <emanuele6> generated by joining all the positional arguments with the first character from IFS (or nothing if IFS is set to empty)
[07:20:55] <emanuele6> args=(ls -l /); printf '%s ' "${args[*]@Q}"
[07:20:58] <emanuele6> # args=(ls -l /); printf '%s ' "${args[*]@Q}"
[07:21:00] <shbot8> emanuele6: 'ls' '-l' '/'
[07:21:07] <emanuele6> i messed it up
[07:21:17] <emanuele6> # args=(ls -l /); printf '<%s> ' "${args[*]}"
[07:21:18] <shbot8> emanuele6: <ls -l />
[07:21:24] <emanuele6> # args=(ls -l /); printf '<%s> ' "${args[@]}"
[07:21:26] <shbot8> emanuele6: <ls> <-l> </>
[07:21:33] <emanuele6> # IFS=ba args=(ls -l /); printf '<%s> ' "${args[@]}"
[07:21:35] <shbot8> emanuele6: <ls> <-l> </>
[07:21:37] <emanuele6> # IFS=ba args=(ls -l /); printf '<%s> ' "${args[*]}"
[07:21:39] <shbot8> emanuele6: <lsb-lb/>
[07:21:50] <earendel> i think i need to read that man bash through. print it. it's one of the better man pages. tho it's a 10 in structure and precision, it still never provides an example. but ... good.
[07:22:22] *** Quits: pagetelegram (~pageteleg@2601:249:8301:4200:e33b:8607:f09c:154d) (Quit: Pave the good path with least resistence: bye)
[07:23:30] <emanuele6> i always forget that "${*@Q}" first applied @Q to all the positional arguments and only after joins them; not vice versa
[07:23:52] <emanuele6> s/applied/applies/
[07:24:23] *** Quits: wolfgang (~wolfgang@101.174.129.6) (Ping timeout: 264 seconds)
[07:31:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:33:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:33:59] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 264 seconds)
[07:34:40] *** Joins: pycurious (~Adium@user/pycurious)
[07:34:57] <emanuele6> chiselfuse: i said that bourne shells expand  echo hixhello   as   <echo> <hi> <hello>   if IFS=x, but maybe that confused you since POSIX shells don't do that and i forgot to mention why
[07:35:58] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:09] <emanuele6> wordsplitting only applies to the parts that were expanded by parameter/variable/arithmetic/command substitutions (not tilde and brace)
[07:36:30] <chiselfuse> Yes, don't worry, I read that in the wiki :)
[07:36:39] <emanuele6> ok
[07:36:55] *** Joins: wolfgang (~wolfgang@124.181.66.145)
[07:39:02] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:31] <earendel> welly well. what will do next lilith?
[07:41:34] <earendel> wir bauen einen schneemann! https://www.youtube.com/watch?v=IAD4swWzDUM
[07:45:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:45:54] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[07:46:42] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[07:47:57] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[07:49:49] *** Joins: vishal (~vishal@fedora/vishal)
[07:51:55] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[07:52:47] *** Joins: pycurious (~Adium@user/pycurious)
[07:57:32] *** Joins: ogis_ (~Android@neoau1-133-203-98-219.tky.mesh.ad.jp)
[07:58:14] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 260 seconds)
[08:01:17] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 264 seconds)
[08:07:51] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:08:07] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:09:58] *** Joins: polve (~polve@twcitalia/polve)
[08:13:16] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:18:06] *** Joins: rgrinberg (~textual@190.113.111.74)
[08:19:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Client Quit)
[08:20:17] *** Joins: euler (~euler@S0106244bfe7024c0.cg.shawcable.net)
[08:23:29] *** Parts: euler (~euler@S0106244bfe7024c0.cg.shawcable.net) (Leaving)
[08:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[08:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[08:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:33:23] *** Quits: luva6 (~luva@5.180.62.231) (Ping timeout: 264 seconds)
[08:34:06] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 260 seconds)
[08:38:18] *** Quits: edlou (uid413273@id-413273.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[08:46:19] *** Joins: luva6 (~luva@5.180.62.229)
[08:49:50] *** Quits: ponies_ (~ponies@61.69.203.88) (Remote host closed the connection)
[08:53:55] *** Quits: ogis_ (~Android@neoau1-133-203-98-219.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[08:57:16] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[08:57:33] *** Joins: ogis (~Android@240d:1c:3d:9500:18fd:8400:b622:9944)
[08:58:26] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[08:59:47] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:03:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[09:04:26] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[09:06:59] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 264 seconds)
[09:08:36] *** Joins: analoq (~yashi@user/dies)
[09:09:33] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:23:41] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:28:22] *** Quits: jle (~jle@user/jle) (Ping timeout: 252 seconds)
[09:29:31] *** Joins: pycurious (~Adium@user/pycurious)
[09:33:34] *** Joins: mei (~mei@user/mei)
[09:34:17] *** Quits: unixman_home (~unixman2@52-105-35-72.mtaonline.net) (Ping timeout: 264 seconds)
[09:35:25] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[09:36:00] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[09:36:23] *** Parts: akoana (~ah@user/akoana) ()
[09:43:35] *** Quits: luva6 (~luva@5.180.62.229) (Ping timeout: 264 seconds)
[09:54:41] *** Joins: n4dir (~user@mue-88-130-57-131.dsl.tropolys.de)
[09:57:11] *** Joins: luva6 (~luva@5.180.62.230)
[10:05:15] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:07:47] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:12:38] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[10:19:19] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 260 seconds)
[10:20:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[10:22:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:25:06] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[10:26:52] *** Joins: chomwitt (~chomwitt@ppp-2-85-245-90.home.otenet.gr)
[10:34:38] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:35:22] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[10:36:40] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:36:46] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[10:37:55] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[10:38:53] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:39:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[10:40:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[10:41:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:41:56] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:42:39] *** Joins: extern (~archer@80.246.137.246)
[10:42:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[10:43:15] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:48:30] *** Joins: lavaball (felix@31.204.155.215)
[10:53:42] *** Quits: luva6 (~luva@5.180.62.230) (Ping timeout: 260 seconds)
[10:58:27] *** Joins: pycurious (~Adium@user/pycurious)
[10:58:46] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[11:00:35] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[11:07:15] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:08:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[11:11:50] *** Quits: tobybl (~tobybl@213.31.135.91) (Ping timeout: 260 seconds)
[11:12:44] *** Joins: luva6 (~luva@5.180.62.231)
[11:14:38] *** Joins: furrymcgee (~devuan@cgn-213-196-210-222.nc.de)
[11:14:58] <emanuele6> !bh
[11:14:59] <greybot> Bash Hackers Wiki -- http://bash-hackers.org/wiki
[11:15:16] <emanuele6> !forget bh
[11:15:17] <greybot> OK, emanuele6
[11:15:27] <emanuele6> !learn bh Bash Hackers Wiki -- https://wiki.bash-hackers.org/
[11:15:27] <greybot> OK, emanuele6
[11:16:11] <emanuele6> !grammar
[11:16:11] <greybot> GRAMMAR THEORY: http://bash-hackers.org/wiki/doku.php/syntax/basicgrammar
[11:16:15] <emanuele6> !forget grammar
[11:16:15] <greybot> OK, emanuele6
[11:16:28] <emanuele6> !learn grammar GRAMMAR THEORY: https://wiki.bash-hackers.org/syntax/basicgrammar
[11:16:28] <greybot> OK, emanuele6
[11:17:41] <emanuele6> !pstree
[11:17:41] <greybot> Bash in the UNIX process tree (simple): http://bash-hackers.org/wiki/doku.php/scripting/processtree
[11:17:45] <emanuele6> !forget pstree
[11:17:45] <greybot> OK, emanuele6
[11:17:59] <emanuele6> !learn pstree Bash in the UNIX process tree (simple): https://wiki.bash-hackers.org/scripting/processtree
[11:17:59] <greybot> OK, emanuele6
[11:18:51] <emanuele6> !$n
[11:18:51] <greybot> http://bash-hackers.org/wiki/doku.php/scripting/posparams
[11:18:56] <emanuele6> !forget $n
[11:18:56] <greybot> OK, emanuele6
[11:19:11] <pj> You would think they could have put a decent redirect in so the old URLs would still work.
[11:19:14] <emanuele6> !learn $n Handling ositional arguments https://wiki.bash-hackers.org/scripting/posparams
[11:19:14] <greybot> OK, emanuele6
[11:19:30] <emanuele6> pj: yeah..
[11:19:40] <emanuele6> there still a bunch to fix http://paste.wooledge.org/9756
[11:20:51] <pj> oh wow.  ...and it's such a simple apache or nginx rule too
[11:23:38] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:24:04] <pj> server
[11:24:04] <pj> 	Apache/2.2.15 (Oracle)
[11:24:12] <pj> WTF, is that Oracle 6?
[11:24:58] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[11:26:06] <emanuele6> !forget $n
[11:26:06] <greybot> OK, emanuele6
[11:26:16] <emanuele6> !learn $n #redirect posparams
[11:26:16] <greybot> OK, emanuele6
[11:26:20] <emanuele6> !posparams
[11:26:20] <greybot> Handling positional parameters (arguments on commandline): http://bash-hackers.org/wiki/doku.php/scripting/posparams
[11:26:30] *** Joins: earnestly (~earnest@user/earnestly)
[11:26:30] <emanuele6> !forget posparams
[11:26:30] <greybot> OK, emanuele6
[11:26:52] *** Quits: chomwitt (~chomwitt@ppp-2-85-245-90.home.otenet.gr) (Read error: Connection reset by peer)
[11:26:56] <emanuele6> !learn posparams Handling positional parameters (arguments on commandline): https://wiki.bash-hackers.org/scripting/posparams
[11:26:57] <greybot> OK, emanuele6
[11:27:07] *** Joins: chomwitt (~chomwitt@2a02:587:dc02:9f00:12c3:7bff:fe6d:d374)
[11:29:17] <earnestly> emanuele6: Odd for bash-hackers to randomly use sh syntax without mentioning it
[11:30:38] <emanuele6> i haven't read that page to be honest; yesterday i noticed that a bunch of factoids had non-working urls and i was fixing some
[11:30:46] <emanuele6> http://paste.wooledge.org/9756
[11:30:52] *** Joins: igemnace (~ian@user/igemnace)
[11:31:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:35:05] <earnestly> Fair enough
[11:35:07] *** Joins: pa (~smuxi@86-95-132-61.fixed.kpn.net)
[11:35:55] <jirido> Hi
[11:36:07] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:36:21] <jirido> Are you all well?
[11:37:01] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[11:38:00] *** Joins: aliosablack (~chomwitt@2a02:587:dc02:9f00:12c3:7bff:fe6d:d374)
[11:38:29] *** Quits: chomwitt (~chomwitt@2a02:587:dc02:9f00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[11:42:23] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[11:44:16] *** Joins: han-solo (~han-solo@user/han-solo)
[11:45:09] *** Joins: Jong (~Jong@174.27.107.153)
[11:47:50] *** Quits: jirido (jirido@gateway/vpn/protonvpn/jirido) (Ping timeout: 260 seconds)
[11:49:26] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[11:53:38] *** Joins: vlm (~vlm@user/vlm)
[11:53:38] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[11:58:29] <extern> are you well emanuele ?
[11:59:24] *** Joins: rendar (~rendar@user/rendar)
[12:01:03] *** Joins: jirido_ (jirido@gateway/vpn/protonvpn/jirido)
[12:02:15] <extern> im shocked that youtube doesn't have the quote from "the family" if it's goduonov for you...
[12:03:10] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[12:04:16] <jirido_> Ups.. I had some lag problem here so I reconnected, if I got some answer to my question please repeet it kindly :P
[12:04:54] <jirido_> ok, thanks
[12:05:00] *** Joins: marw (4988ea31b1@knopi.disroot.org)
[12:09:29] *** shbot8 is now known as shbot
[12:09:39] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:10:54] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[12:13:30] *** Quits: luva6 (~luva@5.180.62.231) (Ping timeout: 260 seconds)
[12:14:29] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[12:19:42] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[12:20:00] *** Quits: e0 (ec@user/e0) (Remote host closed the connection)
[12:21:29] *** Joins: e0 (ec@user/e0)
[12:21:33] *** Joins: Inline (~Inline@2a02:908:1252:7a80:ba51:b2dc:656:c660)
[12:24:25] *** Joins: pycurious (~Adium@user/pycurious)
[12:26:29] *** Joins: luva6 (~luva@5.180.62.230)
[12:28:54] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[12:30:06] *** Quits: a_train[m] (~austintra@2001:470:69fc:105::da5e) (Quit: You have been kicked for being idle)
[12:32:34] *** Joins: pycurious (~Adium@user/pycurious)
[12:33:10] *** Quits: furrymcgee (~devuan@cgn-213-196-210-222.nc.de) (Quit: leaving)
[12:38:52] *** Quits: n4dir (~user@mue-88-130-57-131.dsl.tropolys.de) (Remote host closed the connection)
[12:42:59] *** Quits: jirido_ (jirido@gateway/vpn/protonvpn/jirido) (Quit: leaving)
[12:43:18] *** Joins: jirido (jirido@gateway/vpn/protonvpn/jirido)
[12:43:40] *** pa is now known as Guest1716
[13:07:09] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[13:08:49] *** Joins: knstn (~knstn@ppp-94-66-57-93.home.otenet.gr)
[13:10:44] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:11:00] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:11:09] *** Joins: sublim20 (~sublim20@user/sublim20)
[13:22:49] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[13:23:27] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Client Quit)
[13:23:45] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[13:25:25] <rendar> if i have this code https://bpa.st/RMZQ how can i actually add if-conditionals lines?
[13:25:53] <rendar> if there is a certain condition, i wish to add or not add some config line into that
[13:27:51] *** Quits: aliosablack (~chomwitt@2a02:587:dc02:9f00:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[13:28:10] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[13:28:22] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[13:29:11] *** Quits: luva6 (~luva@5.180.62.230) (Ping timeout: 264 seconds)
[13:29:25] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:35:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[13:41:57] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Changing server)
[13:42:03] *** Joins: norkle (~norkle@admin.nasa-g0v.com)
[13:43:19] *** norkle is now known as Norkle
[13:47:21] *** Joins: pycurious (~Adium@user/pycurious)
[13:49:21] *** Joins: furrymcgee (~devuan@cgn-213-196-210-222.nc.de)
[13:50:01] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[13:51:43] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:51:54] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[13:53:09] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:54:14] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[13:56:34] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[13:56:47] <chiselfuse> Dumb question, do globs get disabled by a " " or what?
[13:57:01] <chiselfuse> # touch 'test bab'; ls " *a*"
[13:57:03] <shbot> chiselfuse: /bin/ls: cannot access ' *a*': No such file or directory
[13:57:08] *** Quits: extern (~archer@80.246.137.246) (Quit: GL with getting graphics help in here)
[13:57:16] <chiselfuse> # touch 'test bab'; ls "*a*"
[13:57:17] <shbot> chiselfuse: /bin/ls: cannot access '*a*': No such file or directory
[13:57:20] <tirnanog> clearly.
[13:57:43] <lopid> not sure why you need to go onto irc to test that
[13:57:45] *** Joins: luva6 (~luva@5.180.62.229)
[13:58:27] <chiselfuse> Not test that, I was asking if it "disables" them or what exactly happens
[13:59:24] <chiselfuse> # touch 'test bab'; echo "*a*"
[13:59:26] <shbot> chiselfuse: *a*
[13:59:33] <tirnanog> what happens is that the resulting word consists of literal asterisks.
[13:59:52] <chiselfuse> # touch 'test bab'; echo *a*
[13:59:54] <shbot> chiselfuse: test bab
[14:00:00] <chiselfuse> # touch 'test bab'; echo " "*a*
[14:00:02] <shbot> chiselfuse:  *a*
[14:00:50] <lopid> !pe… ooh, no ;)  "Parameter Expansion" in the manual
[14:00:52] <tirnanog> why would you expect that to match? the name doesn't begin with a space.
[14:00:58] <lopid> ergh, PATHNAME Expansion
[14:01:44] <chiselfuse> Ah, right, I should have tested with *" "*a* then
[14:02:05] *** Quits: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net) (Ping timeout: 260 seconds)
[14:02:37] <tirnanog> rendar: you appear to know how if works already. if, itself, only contends with the outcome of other commands.
[14:03:01] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[14:03:28] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[14:03:33] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:03:41] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[14:03:41] <tirnanog> chiselfuse: in any case, a globbing character must not be escaped for pathname expansion to be attempted.
[14:04:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:04:27] *** Joins: vaio (~gary@user/ghost)
[14:05:09] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[14:05:29] <chiselfuse> Yeah, I don't know why I thought it would not get escaped between ""
[14:05:47] *** Joins: vaio (~gary@user/ghost)
[14:06:00] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:06:26] <chiselfuse> tirnanog: But how about with `echo *" "*a*`? It's not between "", so why doesn't it get expanded again?
[14:07:07] <tirnanog> it will be.
[14:07:22] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[14:07:29] <chiselfuse> # touch 'test bab'; echo *" "*a*
[14:07:29] <tirnanog> that is to say, it matches 'test bab'
[14:07:32] <shbot> chiselfuse: test bab
[14:07:36] <chiselfuse> :o
[14:07:38] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[14:07:41] <chiselfuse> OK
[14:07:44] <tirnanog> you have you own shell, by the way.
[14:07:52] <tirnanog> at least, I would assume so.
[14:07:59] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[14:08:03] <chiselfuse> Yeah dw :P
[14:08:10] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[14:10:47] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[14:11:47] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 264 seconds)
[14:12:15] *** Joins: han-solo (~han-solo@user/han-solo)
[14:13:22] *** Quits: Guest1716 (~smuxi@86-95-132-61.fixed.kpn.net) (Ping timeout: 260 seconds)
[14:13:37] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[14:14:11] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 264 seconds)
[14:15:34] *** Joins: pa_ (~smuxi@86-95-132-61.fixed.kpn.net)
[14:18:34] *** Joins: jochum (~quassel@user/jochum)
[14:19:09] *** Joins: pycurious (~Adium@user/pycurious)
[14:26:01] *** Quits: jochum (~quassel@user/jochum) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[14:26:17] *** Joins: jochum (~quassel@user/jochum)
[14:27:04] *** Quits: jochum (~quassel@user/jochum) (Client Quit)
[14:27:18] *** Joins: jochum (~quassel@user/jochum)
[14:27:29] *** Joins: earendel (uid498179@user/earendel)
[14:31:46] *** Quits: pa_ (~smuxi@86-95-132-61.fixed.kpn.net) (Ping timeout: 245 seconds)
[14:32:27] *** Quits: furrymcgee (~devuan@cgn-213-196-210-222.nc.de) (Quit: leaving)
[14:34:35] *** Joins: pa_ (~smuxi@86-95-132-61.fixed.kpn.net)
[14:34:36] *** Joins: arinov (~arinov@213.194.126.155)
[14:39:02] *** Joins: chomwitt (~chomwitt@ppp-2-85-245-90.home.otenet.gr)
[14:45:02] <chiselfuse> emanuele6: We said that    `ar1=(foo, bar, "b a z"); strace echo as df"${ar1[@]}"as df`   becomes    <strace> <echo> <as> <df"${ar1[@]}"as> <df>    and then becomes (by modern "$@")   <strace> <echo> <as> <df"foo,"> <"bar,"> <"b a z"as> <df>
[14:45:09] <chiselfuse> Now, could you tell me how     `ar1=(foo, bar, "b a z"); strace echo as "df${ar1[@]}as" df`    gets expanded by modern "$@", just the first step.
[14:47:09] <chiselfuse> I think it's a stupid question but I feel like I'm missing this final bit of information, or it's just something dumb obvious again :P
[14:49:46] *** Quits: luva6 (~luva@5.180.62.229) (Ping timeout: 260 seconds)
[14:49:55] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[14:51:34] <tirnanog> let's consult the manual, shall we?
[14:52:06] <chiselfuse> Could you tell me which section or line?
[14:52:34] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[14:52:57] <tirnanog> as concerns @, "if the double-quoted expansion occurs within a word, the expansion of the first parameter is joined with the beginning part of the original word, and the expansion of the last parameter is joined with the last part of the  original word". Special Parameters section.
[14:53:43] <tirnanog> the behaviour for the [@] array subscript is the same, only dealing with elements rather than parameters.
[14:54:11] <tirnanog> which is spelled out again in the section describing Arrays.
[14:54:14] <chiselfuse> It doesn't say what happens to the double quotes
[14:54:46] <tirnanog> it doesn't need to, because that's covered by the Quote Removal phase.
[14:54:54] *** Joins: luva6 (~luva@159.48.53.253)
[14:55:41] <tirnanog> the final expansion phase and also documented.
[14:56:13] *** luva6 is now known as luva
[14:56:23] <chiselfuse> I don't know where the double quotes go, like this?  <strace> <echo> <as> <"dffoo,"> <"bar,"> <"b a zas"> <df>
[14:56:31] <chiselfuse> I know they get removed later
[14:56:53] <chiselfuse> But when the @ expands I'm not sure how it deals with double quotes
[14:57:25] <chiselfuse> I don't know if you already answered my question, if you did, it wasn't clear to me
[14:59:11] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:59:57] <chiselfuse> I'm sorry, I have to go now, but my client will be open and I'll read anything you or anybody else sends about it when I come back.
[15:04:26] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[15:05:41] <jetchisel> Rigth, be sure to comeback when it is manual reading time again :-)
[15:05:51] <tirnanog> it can't possibly be as you depict. for argument's sake, let's assume that it were. double quotes are thus being introduced as a consequence of an expansion phase other than quote removal. yet, such quotes are ineligible for quote removal, by definition.
[15:08:53] <tirnanog> it's an internal detail but you can probably just assume that it works as was described above. later, given that the original quotes are not an artifact of array expansion, they are removed.
[15:09:16] <tirnanog> i.e. it's not adding quotes.
[15:09:48] <rendar> why this simple 'case' is wrong? https://bpa.st/VNCA
[15:11:05] <tirnanog> !check
[15:11:07] <checkbot> rendar: Line 11: Couldn't parse this case expression. Fix to allow more checks. Line 9: The mentioned syntax error was in this case item. Line 22: Expected 'esac' to close the case statement. Fix any mentioned problems and try again. See https://shellcheck.net/?id=cb80466
[15:11:23] *** Joins: horribleprogram (~user@2607:fea8:7040:830:dd82:3aa7:996e:fe13)
[15:11:30] *** Quits: horribleprogram (~user@2607:fea8:7040:830:dd82:3aa7:996e:fe13) (Changing host)
[15:11:30] *** Joins: horribleprogram (~user@user/horribleprogram)
[15:13:59] <tirnanog> chiselfuse: in summary, set -- foo bar followed by the expansion of 1"$@"2 might internally be composed as <"1foo> <bar2"> prior to the quote removal phase. the important point is that those quotes were never the product of the parameter/array expansion.
[15:14:24] <tirnanog> otherwise, they would stay.
[15:16:13] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[15:21:05] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[15:22:41] *** Joins: timj (~timj@user/timj)
[15:22:58] *** Quits: pa_ (~smuxi@86-95-132-61.fixed.kpn.net) (Ping timeout: 260 seconds)
[15:23:31] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[15:23:35] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[15:27:04] *** Joins: xx (~xx@user/xx)
[15:27:20] *** Joins: pa_ (~smuxi@86-95-132-61.fixed.kpn.net)
[15:28:19] *** Joins: tobybl (~tobybl@213.31.135.91)
[15:35:42] *** Quits: horribleprogram (~user@user/horribleprogram) (Remote host closed the connection)
[15:39:19] *** Joins: dasagreeva (~dasagreev@104.156.227.172)
[15:45:56] *** Quits: ogis (~Android@240d:1c:3d:9500:18fd:8400:b622:9944) (Ping timeout: 245 seconds)
[15:47:11] *** Joins: pycurious (~Adium@user/pycurious)
[15:47:33] *** Joins: tradar (~tradar@user/tradar)
[15:49:02] *** Quits: pa_ (~smuxi@86-95-132-61.fixed.kpn.net) (Read error: Connection reset by peer)
[15:49:58] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[15:51:21] *** Joins: pa_ (~smuxi@86-95-132-61.fixed.kpn.net)
[15:51:49] *** Joins: ogis_ (~Android@neoau1-133-202-122-62.tky.mesh.ad.jp)
[15:53:42] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[15:57:11] *** Joins: n4dir (~user@mue-88-130-57-131.dsl.tropolys.de)
[15:57:36] *** Quits: luva (~luva@159.48.53.253) (Ping timeout: 245 seconds)
[15:58:54] *** Quits: xayto_ (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (Ping timeout: 260 seconds)
[15:59:22] *** Quits: prifici (~patri@user/prifici) (Quit: Off to work or bed.)
[16:00:12] *** Joins: han-solo (~han-solo@103.104.47.31)
[16:00:16] *** Quits: han-solo (~han-solo@103.104.47.31) (Client Quit)
[16:00:31] *** Joins: han-solo (~han-solo@103.104.47.31)
[16:00:31] *** Quits: han-solo (~han-solo@103.104.47.31) (Changing host)
[16:00:31] *** Joins: han-solo (~han-solo@user/han-solo)
[16:01:54] *** gxt_ is now known as gxt
[16:04:18] *** Joins: seninha (~seninha@user/seninha)
[16:05:04] *** Joins: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[16:11:23] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:15:47] *** Joins: gabriele (~gabriele@user/gabriele)
[16:25:56] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[16:26:19] *** Joins: luva (~luva@159.48.53.249)
[16:28:25] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[16:33:16] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[16:34:04] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[16:38:56] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-122-74-190.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[16:41:43] *** Joins: zouhair (~zouhair@lnsm1-montreal02-142-122-74-190.internet.virginmobile.ca)
[16:42:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[16:46:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:50:58] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:52:28] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:53:30] *** Joins: Atque (~Atque@user/atque)
[16:56:05] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[16:58:34] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 260 seconds)
[16:58:55] *** Joins: igemnace (~ian@user/igemnace)
[17:01:13] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[17:01:26] *** Joins: superboot (~agentgasm@user/superboot)
[17:08:15] *** Joins: furrymcgee (~devuan@cgn-213-196-210-222.nc.de)
[17:09:59] *** Quits: luva (~luva@159.48.53.249) (Ping timeout: 264 seconds)
[17:11:42] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[17:12:37] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:13:42] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[17:16:53] *** Joins: luva (~luva@5.180.62.157)
[17:17:11] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:17:38] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:22:11] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:22:39] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:25:18] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[17:27:06] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[17:27:11] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:27:38] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:28:09] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[17:29:01] *** Joins: earnestly (~earnest@user/earnestly)
[17:29:23] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[17:32:10] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[17:32:22] *** Quits: Alternity (~Alternity@user/alternity) (Read error: Connection reset by peer)
[17:32:38] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:32:48] *** Joins: Alternity (~Alternity@user/alternity)
[17:35:14] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[17:36:13] *** Joins: seninha (~seninha@user/seninha)
[17:37:27] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[17:41:58] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[17:42:28] *** Quits: ogis_ (~Android@neoau1-133-202-122-62.tky.mesh.ad.jp) (Quit: -a- Connection Timed Out)
[17:43:27] *** Joins: humky (~humky@user/humky)
[17:44:13] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[17:46:28] <hejux> i have an array=(name-1 price-1 change-1 name-2 price-2 change-2  ... name-n price-n change-n) , i'd like to make it to output like "name-1 | price-1 | change-1" \n ...
[17:46:33] <hejux> how can i do it?
[17:46:45] *** Joins: ogis (~Android@neoau1-133-202-122-62.tky.mesh.ad.jp)
[17:49:06] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[17:50:26] <geirha> printf '%s | %s | %s\n' "${array[@]}"
[17:51:58] *** Quits: Alternity (~Alternity@user/alternity) (Read error: Connection reset by peer)
[17:52:25] *** Joins: Alternity (~Alternity@user/alternity)
[17:53:54] *** Quits: Alternity (~Alternity@user/alternity) (Client Quit)
[17:55:35] *** Joins: m4n_ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[17:56:54] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[17:57:15] *** Joins: Alternity (~Alternity@user/alternity)
[17:58:03] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[17:58:30] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[18:01:00] <hejux> geirha: you are the best
[18:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[18:01:54] <hejux> if price-n has trailing zero how can i remove it btw. and how can i add a '%' to change-n so it is "change-n%"
[18:06:46] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 260 seconds)
[18:08:18] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later)
[18:08:25] <earnestly> %%
[18:08:51] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 245 seconds)
[18:10:43] *** Joins: mithrin (~mithrin@bband-dyn73.95-103-249.t-com.sk)
[18:11:34] *** Joins: Alternity1 (~Alternity@user/alternity)
[18:11:45] *** Quits: Alternity (~Alternity@user/alternity) (Read error: Connection reset by peer)
[18:11:45] *** Alternity1 is now known as Alternity
[18:12:46] *** Quits: n4dir (~user@mue-88-130-57-131.dsl.tropolys.de) (Remote host closed the connection)
[18:16:54] *** Joins: roadie (~user@2a02:8108:ec0:1427:9cf1:6e09:164c:5785)
[18:18:06] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:18:06] *** Quits: haro (beau@saweet.net) (Read error: Connection reset by peer)
[18:19:32] <OMGOMG> trailing zeros are usually pretty informative
[18:20:47] *** Quits: luva (~luva@5.180.62.157) (Ping timeout: 264 seconds)
[18:21:18] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[18:21:43] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[18:21:47] <hejux> earnestly: "%0*" after printf?
[18:22:06] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[18:22:06] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[18:23:12] <hejux>  %s%%  can attach a '%'
[18:23:22] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[18:23:25] <hejux> but how to remove the trailing zeros
[18:23:38] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:24:32] <hejux> printf '%s | %s | %s%%\n' "${array[@]}" will add a '%' to the change-n, which is cool
[18:25:10] *** Quits: magla (~gelignite@55d47dc5.access.ecotel.net) (Quit: Stay safe!)
[18:25:43] *** Joins: nrl^ (~nrl@wsip-98-188-242-6.mc.at.cox.net)
[18:26:06] *** Joins: luva (~luva@159.48.53.253)
[18:27:07] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[18:30:53] *** Joins: defiant (~defiant@user/defiant)
[18:33:28] <geirha> are you ascing how to round the numbers?
[18:33:33] <geirha> *asking
[18:33:55] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 260 seconds)
[18:34:14] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[18:34:25] *** Joins: hendry (~hendry@210.23.22.2)
[18:35:14] *** Quits: luva (~luva@159.48.53.253) (Ping timeout: 260 seconds)
[18:35:18] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:36:03] *** Quits: roadie (~user@2a02:8108:ec0:1427:9cf1:6e09:164c:5785) (Remote host closed the connection)
[18:36:16] *** Joins: roadie (~user@2a02:8108:ec0:1427:9cf1:6e09:164c:5785)
[18:36:59] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 264 seconds)
[18:38:33] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:41:08] <emanuele6> chiselfuse: ar1=(foo, bar, "b a z") |   <"df${ar1[@]}as"> -> <"dffoo,"> <"bar,"> <"asb a z">
[18:42:13] *** Quits: jochum (~quassel@user/jochum) (Remote host closed the connection)
[18:42:28] *** Quits: ogis (~Android@neoau1-133-202-122-62.tky.mesh.ad.jp) (Quit: -a- Connection Timed Out)
[18:42:36] <earnestly> hejux: removing trailing zeros is a string operation, so as you normally would
[18:43:04] <earnestly> Especially as the number is part of a larger string of not-numbers
[18:44:17] *** Joins: jochum (~quassel@user/jochum)
[18:46:45] *** Joins: ogis (~Android@neoau1-133-202-122-62.tky.mesh.ad.jp)
[18:48:42] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[18:50:34] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 260 seconds)
[18:51:12] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:52:52] *** Joins: seninha_ (~seninha@user/seninha)
[18:53:20] *** Joins: ferdna (~ferdna@user/ferdna)
[18:54:46] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[18:55:14] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[18:56:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:6575:10df:b6d2:a414)
[18:56:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:6575:10df:b6d2:a414) (Changing host)
[18:56:13] *** Joins: skapata (~Skapata@user/skapata)
[18:58:09] *** Joins: elenril (~elenril@tutturu.red.khirnov.net)
[19:00:25] *** Quits: jochum (~quassel@user/jochum) (Remote host closed the connection)
[19:01:23] *** Quits: dermoth (~dermoth@dsl-216-221-59-214.mtl.aei.ca) (Read error: Connection reset by peer)
[19:01:44] *** Joins: dermoth (~dermoth@dsl-216-221-59-214.mtl.aei.ca)
[19:02:07] <elenril> when using vi keymap, how can I add custom bindings for the command mode vs insert mode?
[19:02:11] *** Joins: jochum (~quassel@user/jochum)
[19:02:59] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:03:09] *** Parts: Arnold (~hdhdjjhdh@160-92-174-82.ftth.glasoperator.nl) (I'm an albatraoz)
[19:03:23] *** Quits: ogis (~Android@neoau1-133-202-122-62.tky.mesh.ad.jp) (Quit: -a- IRC for Android 2.1.59)
[19:03:37] <earnestly> set the keymap, assign stuff, set another keymap, assign more
[19:03:41] <llua> bind -m vi-command bind
[19:03:50] <earnestly> (if inputrc)
[19:06:09] *** Quits: seninha_ (~seninha@user/seninha) (Quit: Leaving)
[19:06:25] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[19:06:36] *** Joins: seninha (~seninha@user/seninha)
[19:07:14] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[19:07:38] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:08:50] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[19:09:57] <elenril> oh...that's tricky
[19:09:59] <elenril> thank you
[19:10:14] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[19:10:34] <elenril> so just bind without parameters affects the current keymap? and 'set editing-mode vi' in my inputrc make vi-insert the current keymap?
[19:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:11:09] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: Ping timeout (120 seconds))
[19:11:23] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[19:12:44] *** Joins: n4dir (~user@mue-88-130-57-131.dsl.tropolys.de)
[19:13:04] *** Quits: hejux (~hejux@104.224.190.144.16clouds.com) (Quit: WeeChat 3.3)
[19:13:11] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 246 seconds)
[19:14:11] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[19:14:49] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[19:16:42] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[19:18:26] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 245 seconds)
[19:24:11] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[19:24:23] *** Quits: useretail (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[19:24:41] *** Joins: useretail (~useretail@185.132.19.151)
[19:27:28] *** Joins: Armanzor (~Armanzor@user/armanzor)
[19:32:11] *** Quits: roadie (~user@2a02:8108:ec0:1427:9cf1:6e09:164c:5785) (Ping timeout: 245 seconds)
[19:33:51] *** Quits: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Read error: Connection reset by peer)
[19:36:17] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[19:37:43] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:38:17] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[19:40:06] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 260 seconds)
[19:48:44] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[19:52:34] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:b3a8:c59a:e1f5:9b96)
[19:53:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ba51:b2dc:656:c660) (Ping timeout: 245 seconds)
[19:53:15] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:b3a8:c59a:e1f5:9b96) (Remote host closed the connection)
[19:54:05] *** Joins: Inline (~Inline@2a02:908:1252:7a80:b3a8:c59a:e1f5:9b96)
[19:58:22] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[19:58:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:9cf1:6e09:164c:5785)
[19:59:20] *** Joins: Fr0stBit (~theartist@ppp079166100005.access.hol.gr)
[19:59:28] <Fr0stBit> Hello!
[19:59:44] <Fr0stBit> Quick question, can I simplify this oneliner?:
[19:59:46] <Fr0stBit> for m in /sys/class/hwmon/*; do [[ -f $m/temp1_input ]] && paste <(cat $m/name) <(echo -n $m); done | awk '/k10temp/{print $2}'
[20:00:59] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[20:01:30] <yitz> [[ -f $m/temp1_input ]] && grep -q k10tmp "$m/name" && printf "%s\n" "$m"
[20:02:19] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:03:54] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 260 seconds)
[20:04:05] <Fr0stBit> I would love if I could replace the for loop with something like a piped call (xargs like?)
[20:05:17] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-122-74-190.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[20:05:22] *** Quits: voices- (uid524402@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:05:56] *** Joins: Betal (~Betal@user/betal)
[20:06:27] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[20:06:44] <furrymcgee> find -exec?
[20:07:17] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 264 seconds)
[20:07:31] <arooni> dumb question but how do i get bash to run the system command i want
[20:07:39] <arooni> for instance currentYears=/usr/bin/dateutils.ddiff -argumetnsetc
[20:08:18] <yitz> What's a "system command"?
[20:08:40] <arooni> well in this case its that dateutils.ddiff i want to run
[20:08:51] <arooni> with some arguments
[20:08:52] *** Quits: yac (~user@user/yac) (Ping timeout: 268 seconds)
[20:08:59] <yitz> Type it into the shell and hit enter and bash will run the command
[20:09:13] <arooni> i should say; id like to set this up as a bash script
[20:09:19] <arooni> so how do i invoke such a command from bash itself
[20:09:24] <arooni> err. from the bash script
[20:09:38] <yitz> Type it into a file and run `bash file`
[20:09:46] <yitz> Or use a shebang and make the file executable
[20:10:38] <arooni> i have the executable file but bash is complaining saying: "line 3: --from-zone=America/Chicago: No such file or directory"
[20:11:09] <yitz> Does line 3 contain an invalid command?
[20:11:30] <arooni> years=/usr/bin/dateutils.ddiff --from-zone=America/Chicago 2020-05-09T15:23:00 now -f "%y"
[20:11:50] <yitz> Oh... Are you trying to run a command and assign the output to a variable?
[20:12:03] <han-solo> !$(
[20:12:03] <greybot> Command Substitution: "$(cmd "foo bar")" causes the command 'cmd' to be executed with the argument 'foo bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
[20:12:21] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[20:12:27] <arooni> yes i'm trying to run the command; assign to a variable and use it later
[20:12:44] <arooni> ah so thats what i need!  awesome
[20:12:55] <yitz> Yeah. See above. Randomly making up syntax isn't going to work.
[20:13:00] <arooni> hahahhaha
[20:13:04] <arooni> it rarely does
[20:16:36] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[20:22:36] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[20:26:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:26:32] *** Quits: Fr0stBit (~theartist@ppp079166100005.access.hol.gr) (Quit: WeeChat 3.3)
[20:27:10] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[20:27:52] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[20:29:39] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[20:30:09] <chiselfuse> emanuele6: Thank you again...
[20:30:16] *** Joins: vaio (~gary@user/ghost)
[20:33:20] *** Joins: luva (~luva@159.48.53.254)
[20:42:47] *** Joins: CaCode (~CaCode@user/cacode)
[20:43:04] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:46:54] *** Joins: pelle (~pelle@213.237.83.43)
[20:51:54] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[20:59:50] *** Quits: roadie (~user@2a02:8108:ec0:1427:9cf1:6e09:164c:5785) (Ping timeout: 260 seconds)
[21:03:21] *** Quits: pelle (~pelle@213.237.83.43) (Remote host closed the connection)
[21:05:35] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[21:05:47] *** Quits: luva (~luva@159.48.53.254) (Ping timeout: 264 seconds)
[21:12:54] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[21:13:14] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[21:19:07] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Changing host)
[21:19:07] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[21:20:37] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later once again)
[21:23:32] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[21:23:55] *** Joins: luva (~luva@159.48.53.252)
[21:25:43] *** Joins: roadie (~user@2a02:8108:ec0:1427:9cf1:6e09:164c:5785)
[21:26:48] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[21:27:03] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[21:27:27] *** Joins: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0)
[21:28:06] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:28:22] *** Joins: Hackerpcs (~user@user/hackerpcs)
[21:28:49] *** Quits: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0) (Client Quit)
[21:30:00] *** Joins: m9hs (~m9hs@gateway/tor-sasl/m9hs)
[21:30:12] *** Joins: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0)
[21:34:26] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[21:36:39] *** Joins: ChmEarl (~chmearl@user/chmearl)
[21:36:42] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[21:37:29] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[21:40:22] *** Joins: han-solo (~hanish@103.104.47.31)
[21:40:39] *** Parts: han-solo (~hanish@103.104.47.31) ()
[21:41:06] *** Joins: han-solo (~hanish@user/han-solo)
[21:41:54] *** Quits: knstn (~knstn@ppp-94-66-57-93.home.otenet.gr) (Ping timeout: 260 seconds)
[21:43:24] *** Joins: knstn (~knstn@ppp-94-66-57-119.home.otenet.gr)
[21:46:49] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[21:49:18] *** Quits: m9hs (~m9hs@gateway/tor-sasl/m9hs) (Quit: Leaving)
[21:51:11] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[22:05:14] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[22:05:52] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:06:10] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[22:06:30] *** Quits: n4dir (~user@mue-88-130-57-131.dsl.tropolys.de) (Remote host closed the connection)
[22:08:27] *** Joins: Guest242 (~Guest24@ip-89-176-154-20.net.upcbroadband.cz)
[22:09:16] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:17:28] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:22:31] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Read error: Connection reset by peer)
[22:22:51] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[22:22:51] *** Joins: smlavine_ (~smlavine@sourcehut/user/smlavine)
[22:23:35] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 260 seconds)
[22:23:41] *** smlavine_ is now known as smlavine
[22:25:18] *** Quits: luva (~luva@159.48.53.252) (Ping timeout: 260 seconds)
[22:26:17] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[22:26:37] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[22:27:34] *** Quits: timj (~timj@user/timj) (Ping timeout: 260 seconds)
[22:27:45] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:28:17] *** Joins: arinov (~arinov@78.187.169.227)
[22:31:05] *** Joins: igemnace (~ian@user/igemnace)
[22:35:28] *** Joins: Betal (~Betal@user/betal)
[22:36:24] <chiselfuse> I have a file that was output by accident named '-'. I'd like to run programs on it but most of them take the argument "-" as a special for "read from STDIN". How do I go about processing this file?
[22:36:54] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[22:36:55] <smlavine> ./-
[22:37:06] <kurahaupo> chiselfuse: Use one of its other names
[22:37:39] <chiselfuse> smlavine: Worked, ty
[22:37:50] <chiselfuse> kurahaupo: Like what? Other than what smlavine said
[22:37:52] <kurahaupo> chiselfuse: Use any path to it that does not start with - eg $PWD/-
[22:38:01] <xiaomiao> a lot of commands take '--' to stop argument parsing
[22:38:11] <xiaomiao> so you might be able to do "rm -- - " or similar
[22:38:18] *** Joins: luva (~luva@159.48.53.252)
[22:38:43] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[22:39:01] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[22:39:08] <chiselfuse> xiaomiao: If they stop argument parsing, then what are the "args" following the "--" argument treated as?
[22:39:53] <kurahaupo> chiselfuse: If you're in /a/b/c and you have a file - then /a/b/c/- or ../../b/c/- or ../c/- or ./- or ../b/../b/../b/../b/../b/../b/../b/../b/-
[22:40:16] <smlavine> xiaomiao: I don't think that will work. - in this context doesn't signify an option, but basically means /dev/stdin
[22:40:21] <xiaomiao> chiselfuse: filenames or equivalent, depends on the program
[22:40:30] <xiaomiao> smlavine: but, '--'
[22:40:33] <kurahaupo> chiselfuse: I mean ../../b/../b/../b/../b/../b/../b/../b/../b/c/-
[22:40:57] <smlavine> xiaomiao: I understand. But trying it with cat at least, no, it still interprets - as meaning stdin with a --
[22:41:12] <xiaomiao> gnu coreutils rm manpage even says:
[22:41:15] <xiaomiao>        To remove a file whose name starts with a '-', for example '-foo', use one of these commands:
[22:41:15] <xiaomiao>               rm -- -foo
[22:41:39] <kurahaupo> xiaomiao: "Remove" wasn't the question. "Use" was the question
[22:42:02] <xiaomiao> kurahaupo: it's program-specific, just don't use non-ascii filenames ;)
[22:42:04] <smlavine> "-.+" !~ "-"
[22:42:20] <smlavine> We are talking about "-" in its entirety, not "-a" or "-b" or "-foo"
[22:42:23] <xiaomiao> mv -- - asdf # tadaah
[22:42:40] <kurahaupo> xiaomiao: There are 94 ascii characters that are valid in filenames
[22:42:43] *** Joins: timj (~timj@user/timj)
[22:43:03] <smlavine> xiaomiao: Yeah, and mv doesn't treat - specially anyway
[22:43:08] *** Joins: pelle (~pelle@213.237.83.43)
[22:44:21] <chiselfuse> I was trying to run "ls *" to have the glob expaned to all files in the dir but then I had a file who's name was "-3.png" and ls refused to run saying that "-3" was an invalid option. Now, that got me thinking, what if that would happen the same for `rm *`? Couldn't an uglily named file cause danger?
[22:44:22] *** Joins: haro (beau@saweet.net)
[22:44:46] <smlavine> Probably
[22:45:42] <phy1729> !--
[22:45:42] <greybot> The special option -- means "end of options" to every POSIX command except echo and test, and to many other commands. E.g. «mv -- *.png /somedir» (in case one of the filenames begins with "-"). See <http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02> and <http://wiki.bash-hackers.org/dict/terms/end_of_options>
[22:45:43] <kurahaupo> chiselfuse: Yes that's why we suggest using ./*
[22:45:46] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[22:46:10] <kurahaupo> s/who's/whose/
[22:50:33] *** Joins: akoana (~ah@user/akoana)
[22:52:35] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:53:42] *** Quits: ano (~ano@user/ano) (Quit: ano)
[22:54:10] *** Joins: ano (~ano@user/ano)
[22:54:31] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[22:54:54] *** Quits: furrymcgee (~devuan@cgn-213-196-210-222.nc.de) (Quit: leaving)
[22:55:48] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:56:23] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[22:56:42] *** Joins: p3hz (~p3hz@198.55.124.115.adsl.inet-telecom.org)
[22:57:26] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Client Quit)
[22:59:32] *** af is now known as as
[22:59:37] *** as is now known as af
[23:00:48] *** Quits: Armanzor (~Armanzor@user/armanzor) (Quit: Leaving)
[23:03:34] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[23:04:22] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:05:47] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[23:06:21] *** Joins: roadie` (~user@2a02:8108:ec0:1427:78de:314c:6652:d852)
[23:07:29] *** Quits: chasmo77 (~chas77@71.63.241.168) (Quit: It's just that easy)
[23:09:26] *** Joins: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[23:09:59] *** Quits: roadie (~user@2a02:8108:ec0:1427:9cf1:6e09:164c:5785) (Ping timeout: 264 seconds)
[23:10:20] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:10:33] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[23:13:37] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:16:19] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[23:17:30] *** Quits: Inline (~Inline@2a02:908:1252:7a80:b3a8:c59a:e1f5:9b96) (Ping timeout: 260 seconds)
[23:17:57] *** Quits: ntwk (~ntwk@user/ntwk) (Read error: Connection reset by peer)
[23:20:01] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Read error: No route to host)
[23:24:33] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[23:26:15] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[23:26:17] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:32:09] *** Joins: ntwk (~ntwk@user/ntwk)
[23:32:11] *** Joins: kj (~kj@64.15.64.3)
[23:35:11] *** Quits: luva (~luva@159.48.53.252) (Ping timeout: 264 seconds)
[23:36:04] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[23:36:15] *** Joins: Inline (~Inline@2a02:908:1252:7a80:e007:8711:e7b4:2641)
[23:36:16] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[23:36:36] *** Joins: pushqrdx (~pushqrdx@156.199.213.87)
[23:38:58] *** Quits: arinov (~arinov@78.187.169.227) (Ping timeout: 260 seconds)
[23:41:22] *** Quits: Guest242 (~Guest24@ip-89-176-154-20.net.upcbroadband.cz) (Quit: Client closed)
[23:43:07] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[23:44:48] *** Quits: kj (~kj@64.15.64.3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:45:50] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[23:46:02] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:46:46] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[23:47:09] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[23:47:54] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Read error: Connection reset by peer)
[23:51:27] *** Joins: jinsun__ (~quassel@user/jinsun)
[23:51:57] *** Quits: sublim20 (~sublim20@user/sublim20) (Remote host closed the connection)
[23:52:02] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[23:52:38] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:54:05] *** Joins: Guest21 (~Guest21@ip-89-176-154-20.net.upcbroadband.cz)
[23:54:14] *** Joins: luva (~luva@159.48.53.250)
[23:54:41] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 245 seconds)
[23:56:30] *** Quits: zeraphel (~daddy@2a00:a040:196:56d:96de:80ff:fefa:44a) (Quit: zeraphel)
[23:56:57] *** Joins: zeraphel (~daddy@2a00:a040:196:56d:96de:80ff:fefa:44a)
[23:57:10] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[23:57:40] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
