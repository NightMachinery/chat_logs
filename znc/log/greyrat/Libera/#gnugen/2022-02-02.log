[09:02:36] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[09:03:47] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:08:13] *** Quits: flor (~florian@191.97.193.178.dynamic.wline.res.cust.swisscom.ch) (*.net *.split)
[09:08:16] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[09:21:14] *** Joins: edk (edk@libera/staff/edk)
[09:23:34] *** Joins: flor (~florian@191.97.193.178.dynamic.wline.res.cust.swisscom.ch)
[16:08:20] *** Joins: artectrex[m] (~debeulegn@2001:470:69fc:105::9c7)
[16:08:20] <artectrex[m]> How do I make my server aware of its external IP? The router my server is behind now doesn't have hairpinning so requests to the external IP time out
[16:08:58] <artectrex[m]> I set the domains to resolve to 127.0.0.1 but some apps don't like that and drop requests (security stuff)
[16:09:31] <artectrex[m]> namely, tt-rss refuses to accept the DNS resolution to 127.0.0.1
[16:10:30] <artectrex[m]> which breaks its publish mechanism if you subscribe to a feed on the server
[16:16:43] <flor> I think you can have it resolve to any of the IPs assigned to an interface, instead of 127.0.0.1.
[16:16:56] *** Joins: nu[m] (~nusynapse@2001:470:69fc:105::f19)
[16:16:56] *** Joins: Howard42[m] (~howard42m@2001:470:69fc:105::1:517e)
[16:17:08] *** Joins: typedef[m] (~adminmat_@2001:470:69fc:105::ce75)
[16:17:23] *** Joins: sparrowhawk[m] (~sparrowha@2001:470:69fc:105::f1b)
[16:17:36] *** Joins: typedef[m]1 (~ddervishg@2001:470:69fc:105::1824)
[16:17:48] *** Joins: jonas[m]1 (~jonasviol@2001:470:69fc:105::98a)
[16:17:48] *** Joins: Orbstheorem (~orbstheor@2001:470:69fc:105::a56)
[16:18:20] <Orbstheorem> <artectrex[m]> "How do I make my server aware of..." <- `ip a add` ?
[16:18:23] <Orbstheorem> > <@debeule:gnugen.ch> How do I make my server aware of its external IP? The router my server is behind now doesn't have hairpinning so requests to the external IP time out
[16:18:23] <Orbstheorem>  * `ip a add`?
[16:22:13] <Orbstheorem> <artectrex[m]> "I set the domains to resolve to..." <- All applications on the system SHOULD use the libc hosts database: In the case of glibc, it usually uses nsswitch (/etc/nsswitch.conf) to configure the databases, which specifies the order of resolvers: If you're using systemd, `mymachines` refering to local containers will be queried first, then if you have systemd-resolved `resolve` and then `files` (/etc/hosts, ...) and finally `dns`
[16:22:13] <Orbstheorem> (/etc/resolv.conf`)...
[16:22:39] <Orbstheorem> I don't see what security requirements could drive your app to ignore the host resolution services and implement their own...
[16:23:05] <artectrex[m]> resolution works fine but then it refuses to actually use it because it's a loopback address
[16:23:08] <artectrex[m]> no clue why
[16:23:26] <Orbstheorem> artectrex[m]: What is it using instead?
[16:23:33] <artectrex[m]> failing with an error
[16:24:05] <artectrex[m]> `[12:53:43/42] unable to fetch: URL hostname failed to resolve or resolved to a loopback address (127.0.0.1) [-1]`
[16:24:36] <Orbstheorem> <artectrex[m]> "How do I make my server aware of..." <- I think I misread. So your machine does not have a public IP address, but you have port forwarding on your router and you want to use the public ip address (which belongs to the router, but delegates to your machine)?
[16:24:45] <artectrex[m]> yes
[16:25:03] <Orbstheorem> Why does your server need to be aware of its address? (breaks abstraction)
[16:25:26] <artectrex[m]> well, I guess to do nat hairpinning but in the server since I can't change how my router behaves
[16:26:33] <Orbstheorem> Your router should DNAT the packet (thus your server shouldn't know what its own address from the point of view of its peer, but transparently see a route matching a reachable source and a local target)
[16:27:23] <Orbstheorem> Hairpinning is simply your router being smart about how to route packets going to its own WAN interface coming from LAN. I don't see how it relates here.
[16:28:33] <artectrex[m]> I need to have my applications think they are using the external IP but it going to localhost without going through the router
[16:29:04] <artectrex[m]> which is the ugliest way of doing this I can think off but it's less annoying than patching tt-rss lol
[16:30:20] <artectrex[m]> * the router (because the router doesn't do hairpinning so talking to the external IP times out)
[16:37:18] <Orbstheorem> If you control the host, you can add an iptables rule on `POSTROUTING` to match the host ip and port and DNAT it to the right host (instead of the router)...
[16:37:28] <Orbstheorem> But that's extremely hacky.
[16:37:36] <Orbstheorem> I would really suggest fixing tt-rss...
[16:52:53] <artectrex[m]> <Orbstheorem> "I would really suggest fixing tt..." <- tt-rss dev seems toxic so I wouldn't want to upstream, which means carrying over a patch and maintaining docker images and.. I think I'll just leave it broken then ðŸ˜…
[16:53:16] <Orbstheorem> What network fabric are you using for docker?
[17:01:18] <artectrex[m]> bridge
[17:02:14] <artectrex[m]> connecting to the hostname of the container works but then ttrss doesn't want to give the feed because it's not on the same domain it expects..
[19:34:50] <afontain[m]> artectrex: what exactly doesn't like localhost ?
[19:35:26] <afontain[m]> is it broken when you ask the webpage to your server?
[19:35:45] <afontain[m]> (an nginx/apache config error)
[19:36:56] <artectrex[m]> Ttrss doesn't like that a domain of a feed resolves to a loopback address
[19:37:48] <artectrex[m]> Which is a thing that happens when the feed is a feed it creates itself (ie my mom's published articles that I subscribe to)
[19:41:25] <flor> Why are you're mom's published articles only accessible at localhost? Seems like they are not publish if it's only at localhostâ€¦
[19:43:08] *** Joins: zyuiop (~zyuiop@user/zyuiop)
[19:44:06] <flor> The machine publishing the articles should have at least one address that is not a private loopback address with which the articles are available.
[19:45:22] <flor> So then arrange for whatever name used to publish the articles to resolve to this address.
[20:30:10] <afontain[m]> You may have something in php's settings that disallow connections to a local area address
[20:30:25] <afontain[m]> artectrex ^
[20:54:25] <artectrex[m]> <flor> "Why are you're mom's published..." <- they're not, you can access them from internet if you have the feed and key, butt
[20:54:26] <artectrex[m]> s/butt/but/
[20:54:55] <artectrex[m]> not from the tt-rss client (which is also the server that hosts the feed)
[20:56:23] <artectrex[m]> <flor> "So then arrange for whatever..." <- since the server can't be reached by itself because the router doesn't do hairpinning, the server cannot reach itself by its public IP
[20:56:39] <artectrex[m]> wow very intelligible message lol
[21:42:15] <Orbstheorem> There's this in my report:
[21:42:18] * Orbstheorem uploaded an image: (174KiB) < https://libera.ems.host/_matrix/media/r0/download/orbstheorem.ch/GyIAZJenKyiiMFGDEcUMBAGn/image.png >
[21:42:33] <Orbstheorem> And I can't help but remember one of sunyibo 's messages long time ago.
[21:44:29] <Orbstheorem> About how GNU people would work in an _Apple genius_ bar; it was something like: fnux (rip) would chase people people banging their heads with their computers saying read the documentation, I don't recall what sparrowhawk would do but I would go around and tell people "Would you like to try _NixOS_, our lord and saviour on your apple watch?" xD
[22:07:26] * Orbstheorem uploaded an image: (24KiB) < https://libera.ems.host/_matrix/media/r0/download/orbstheorem.ch/nzVLnWihhPPYNwwjTeEMHxqT/image.png >
[22:07:30] <Orbstheorem> Does anybody know these people?
[22:21:00] <typedef[m]1> I don't
[22:48:48] <Notkea> <Orbstheorem> "image.png" <- do they also enforce valid certificate by the way? I'm not sure whether this is still the case with easily obtainable free TLS certificates, but I remember that a lot of email servers were exposing invalid certificates and/or weren't checking the certificates of other hosts
[22:55:46] *** Quits: zyuiop (~zyuiop@user/zyuiop) (Quit: leaving)
[23:57:57] <Orbstheorem> I'd expect so? I haven't checked to be fair...
[23:59:03] <Orbstheorem> Though I have reason to believe they do since I recall a discussion with a random Hungarian dude that tried to send me a message but he was using a self signed cert and the message got refused...
