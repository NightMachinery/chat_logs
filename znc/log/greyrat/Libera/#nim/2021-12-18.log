[00:22:27] *** Joins: nac (~nac@user/nac)
[00:23:05] *** Joins: SebastianM (~seba@user/sebastianm)
[00:24:55] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[00:32:47] <FromDiscord> <that_dude> sent a code paste, see https://play.nim-lang.org/#ix=3IHB
[00:37:59] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[00:48:30] <FromDiscord> <that_dude> Actually I think I got it
[00:48:30] <FromDiscord> <Elegantbeef> Why not do `x: proc`?
[00:48:46] <FromDiscord> <that_dude> First time I'm ever messing with macros
[00:49:25] <FromDiscord> <Elegantbeef> Sorry i guess you have to do `x: typed`
[00:49:25] <FromDiscord> <that_dude> Trying to get the typing right is hard for me lol
[00:49:51] <FromDiscord> <that_dude> Tbh there is so much I'm trying to keep track of that the idea of that was there once, and then slipped my mind
[00:50:19] <FromDiscord> <Elegantbeef> What are you trying to do anyway?
[01:03:33] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[01:04:31] *** Joins: xet7 (~xet7@user/xet7)
[01:09:30] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[01:13:40] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[01:27:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:40:09] <FromDiscord> <JSONBash> reading that HN thread has really opened my eyes. Gotta make sure I am less dismissive of stuff I don't 'like', or I could end up looking like a fool lol
[01:42:03] <FromDiscord> <JSONBash> Also just a lesson to not add negativity to something I have no part in, whats the use?
[01:43:18] <nrds> <06Prestige99> What HN thread?
[01:43:38] <FromDiscord> <JSONBash> There is one on Nim 1.6.x release
[01:44:11] <nrds> <06Prestige99> ah https://news.ycombinator.com/item?id=29589436
[01:52:24] <FromDiscord> <Sabena Sema> if you use a generic multiple times i. the same module but different uses imply different bindings for open symbols will the compiler pick the first like in c++ or actually emit (and mangle differently) each variation?
[01:53:13] <FromDiscord> <Elegantbeef> It should use the first since it adds to the generic cache
[01:56:45] *** Joins: lumo_e (~enrico@151.29.48.90)
[01:57:21] <FromDiscord> <Sabena Sema> even across modules or no?
[01:57:30] <FromDiscord> <Elegantbeef> Should also across modules
[01:57:45] <FromDiscord> <Elegantbeef> You can always try it with a compile time counter
[01:57:48] <FromDiscord> <Sabena Sema> if yes that seems like it could cause breakage, since non-dependent symbols can be open easily
[01:57:51] <FromDiscord> <Sabena Sema> hmm
[01:57:52] <FromDiscord> <Sabena Sema> yeah
[01:58:27] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3IHN
[01:58:39] <FromDiscord> <Sabena Sema> the more I think about this stuff the more I warm to Ada‚Äôs ‚Äúyou gotta explicitly instantiate and name generics‚Äù
[01:59:18] <FromDiscord> <Sabena Sema> could also have an open symbol in there that prints different things at each point of instantiation
[02:15:10] *** Joins: Pyautogui (~Pyautogui@104.225.186.17)
[02:24:56] <Pyautogui> About https://forum.nim-lang.org/t/8558, would it be easier to write a "skin" that removes curly braces around indented blocks as opposed to writing a full parser? Maybe a -d:curlyBraces flag. The syntax would be exactly the same otherwise (enforced whitespace, etc). Ignore this question if this question is dumb. Like
[02:24:56] <Pyautogui> https://play.nim-lang.org/#ix=3IHS excepted automated instead of commented.
[02:33:17] <FromDiscord> <Elegantbeef> Eh `{}` is used for sets, and table constructors so there can be ambiguity
[02:34:28] <FromDiscord> <Elegantbeef> `let a = if true: {someVal} else: {0}`  vs. `let a = if true: {{someVal}} else: {{0}}`
[02:34:42] *** Joins: krux02 (~krux02@p200300e8172499004cdf065c4ed80e7b.dip0.t-ipconnect.de)
[02:36:07] <Pyautogui> What about only allowing it for multi-line stuff? Might be inconsistant, but I really think that enough people like that sort of syntax (idc about it) that it would be worth it.
[02:38:23] <FromDiscord> <Elegantbeef> if whitespace significance is a spooky demon, just make your editor render scope
[02:38:24] <FromDiscord> <leorize> or make `end` an actual thing in nim \:p
[02:42:01] *** Quits: Pyautogui (~Pyautogui@104.225.186.17) (Quit: Connection closed)
[02:42:01] <FromDiscord> <Elegantbeef> Aw damn blockman doesnt work with nim
[03:15:29] *** Joins: pippin (~pippin@gegl.org)
[03:27:50] <FromDiscord> <spazzy> what causes this https://media.discordapp.net/attachments/371759389889003532/921551793249452032/unknown.png
[03:28:27] <FromDiscord> <spazzy> i have two different linux installs, one void one arch, and the void one gives an os error
[03:28:34] <FromDiscord> <spazzy> for some reason
[03:29:03] <FromDiscord> <Elegantbeef> Hard to say without the code
[03:29:17] <FromDiscord> <Elegantbeef> OSError means a multitude of things
[03:29:40] <FromDiscord> <spazzy> the error is coming from the compiler
[03:30:43] <FromDiscord> <Elegantbeef> Run the nim command yourself and see what the error is
[03:31:25] <FromDiscord> <spazzy> weird
[03:31:34] <FromDiscord> <spazzy> it compiels with nim c but not nimble rund
[03:31:45] <FromDiscord> <spazzy> (edit) "compiels" => "compile‚Üµs"
[03:31:47] <FromDiscord> <Elegantbeef> Ok so what does your `rund` task do
[03:32:31] <FromDiscord> <spazzy> wait it compiles but doesnt run
[03:32:35] <FromDiscord> <spazzy> with nim c
[03:32:59] <FromDiscord> <Elegantbeef> See it's a runtime error
[03:33:08] <FromDiscord> <Elegantbeef> So run it and it should give more info
[03:33:08] <FromDiscord> <spazzy> https://github.com/ftsf/nico
[03:33:19] <FromDiscord> <spazzy> im just running the example from that
[03:34:03] <FromDiscord> <Elegantbeef> I mean this will probably work for me, so what does it say when you run the binary?
[03:34:07] <FromDiscord> <Elegantbeef> Cause it should give more information
[03:34:46] <FromDiscord> <spazzy> its not loading sdl even though its installed
[03:35:16] <FromDiscord> <spazzy> nvm im dumb
[03:35:20] <FromDiscord> <spazzy> its not installed on the system
[03:35:23] <FromDiscord> <spazzy> lol
[03:35:32] <FromDiscord> <spazzy> its a fresh install and i forgot about it
[03:35:33] <FromDiscord> <Elegantbeef> We did it! üòÄ
[03:36:00] <FromDiscord> <spazzy> thats a really nice library btw
[03:36:05] <FromDiscord> <spazzy> its way more extensive than it looks
[03:36:30] <FromDiscord> <Elegantbeef> Hey i havent done much to it so i can only say pass the compliment to impbox
[03:37:26] <FromDiscord> <spazzy> btw what do you guys use as an ide
[03:37:35] <FromDiscord> <spazzy> this being a fresh install gives me an excuse to try new things
[03:41:18] <FromDiscord> <Elegantbeef> I use Vscode as an editor for serious things and nvim for one offs
[03:41:37] <FromDiscord> <leorize> i use nvim for everything
[03:44:03] <FromDiscord> <spazzy> i usually use vim for everything but ive had a lot of problems with the autocomplete
[03:44:37] <FromDiscord> <spazzy> at least with nim
[03:44:53] <FromDiscord> <spazzy> it doesnt always recognize imports
[03:44:57] <pippin> is there an easier way than 'write stdout, "string"' to get the effect of echo without the trailing newline?
[03:45:18] <FromDiscord> <Elegantbeef> Nope
[03:45:29] <FromDiscord> <Elegantbeef> Not that i know of atleast
[03:45:43] <FromDiscord> <Elegantbeef> You also have to remember that `echo` flushes the stdout
[03:46:12] <pippin> and hmm.. echo is available in nimscript while stdout isnt
[03:50:19] <FromDiscord> <Elegantbeef> Leorize do you know if there is a nvim plugin that renders the background of scopes different colours? Seems like a simple silly way to tell people that moan about whitespace significant to "sod off"?
[03:51:04] <FromDiscord> <leorize> nope
[03:51:31] <FromDiscord> <leorize> @spazzy\: you use vanilla vim or neovim?
[03:51:49] <FromDiscord> <spazzy> usually vanilla
[03:57:20] <FromDiscord> <spazzy> im switching now that i found out about nim.nvim lol
[03:57:30] <FromDiscord> <spazzy> it just werks
[04:07:00] *** Quits: krux02 (~krux02@p200300e8172499004cdf065c4ed80e7b.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:16:17] <FromDiscord> <leorize> neovim is just better
[04:18:08] <FromDiscord> <Rosen> kinda wish neovim had a graphical interface a la gvim when I'm on windows, but that's my only real "complaint"
[04:18:34] <FromDiscord> <Rosen> it's just one extra step to launch a term when I'm used to not using one on the windows box
[04:28:42] <FromDiscord> <leorize> there are a few attempts but they're not very popular
[04:37:39] <FromDiscord> <spazzy> just install gentoo
[04:41:41] <FromDiscord> <spazzy> sent a code paste, see https://play.nim-lang.org/#ix=3IIb
[04:42:08] <FromDiscord> <spazzy> thats not something from 1.2 by any chance is it
[04:43:17] <FromDiscord> <spazzy> (edit) "https://play.nim-lang.org/#ix=3IIb" => "https://play.nim-lang.org/#ix=3IIc"
[05:00:14] <FromDiscord> <demotomohiro> I'm using neovim-qt on windows‚Üµhttps://github.com/equalsraf/neovim-qt
[05:23:25] <FromDiscord> <Rosen> hey this doesn't look that bad
[05:45:57] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:11:49] *** Quits: lumo_e (~enrico@151.29.48.90) (Quit: Quit)
[06:30:32] <FromDiscord> <sharpcdf> this is how i check for git, correct?
[06:30:40] <FromDiscord> <sharpcdf> sent a code paste, see https://play.nim-lang.org/#ix=3IIz
[06:38:41] <FromDiscord> <Elegantbeef> It's a way
[06:38:54] <FromDiscord> <jfmonty2> won't `== 1` only evaluate to true if the command fails?
[06:39:33] <FromDiscord> <Elegantbeef> Yea 0 is success and non zero is an issue
[06:40:36] <FromDiscord> <Elegantbeef> Depending on the application you may want to use libgit instead, but it indeed depends
[06:42:28] <FromDiscord> <Rosen> I also feel like it's slightly evil to check for commands by running them, maybe using "command -v git" instead of git?
[06:43:11] <FromDiscord> <Rika> Isn‚Äôt command a shell function
[06:43:42] <FromDiscord> <Rosen> That's true I'm assuming posix
[06:43:50] <FromDiscord> <sharpcdf> In reply to @jfmonty2 "won't `== 1` only": yes
[06:44:15] <FromDiscord> <sharpcdf> In reply to @Rika "Isn‚Äôt command a shell": theres a seperate functions for shell commands
[06:44:25] <FromDiscord> <Rosen> Oh my bad then
[06:44:52] <FromDiscord> <sharpcdf> https://nim-lang.org/docs/os.html#execShellCmd%2Cstring
[06:45:57] <FromDiscord> <Elegantbeef> There is also `findExe`
[06:47:01] <FromDiscord> <Rosen> ooh findExe looks best
[06:49:08] <FromDiscord> <sharpcdf> In reply to @Elegantbeef "There is also `findExe`": yea ill use that
[06:50:09] <FromDiscord> <sharpcdf> do you know if you have to provide the extension?
[06:50:29] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:50:43] <FromDiscord> <Elegantbeef> `extensions: openArray[string] = ExeExts`
[06:50:59] <FromDiscord> <Elegantbeef> You can provide them if you want but it uses the const \`ExeExts
[06:51:19] <FromDiscord> <Elegantbeef> Which on posix is nothing
[06:51:32] <FromDiscord> <sharpcdf> alright
[06:51:46] <FromDiscord> <sharpcdf> for now my only target is windows
[06:55:17] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[07:16:16] <FromDiscord> <that_dude> sent a code paste, see https://play.nim-lang.org/#ix=3IIF
[07:20:38] <NimEventer> New thread by Xioren: Looking for some insight into HttpClient and proxy authorization, see https://forum.nim-lang.org/t/8721
[07:23:17] <FromDiscord> <Rika> `quote do:` returns a NimNode that you arent using
[07:24:52] *** Quits: src (~src@user/src) (Quit: Leaving)
[07:25:42] <FromDiscord> <that_dude> how would I discard that?
[07:25:59] <FromDiscord> <Elegantbeef> damn it
[07:26:02] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3IIH
[07:26:06] <FromDiscord> <that_dude> do I do something like `discard quote do:`?
[07:26:24] <FromDiscord> <Rika> no
[07:26:25] <FromDiscord> <Rika> that wont work
[07:26:29] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3III
[07:26:29] <FromDiscord> <Rika> beef moment
[07:26:30] <FromDiscord> <Elegantbeef> And there is a better way to do this
[07:26:44] <FromDiscord> <Rika> hes gonna say macrocache
[07:26:46] <FromDiscord> <Rika> im betting
[07:26:48] <FromDiscord> <Rika> a dollar
[07:26:51] <FromDiscord> <Elegantbeef> It's a better way
[07:26:54] <FromDiscord> <that_dude> lol
[07:27:26] <FromDiscord> <Rika> look into it i recommend
[07:27:29] <FromDiscord> <Rika> its a neat module
[07:28:28] <FromDiscord> <that_dude> I may use it, I think it's a bit more powerful than I think I need right now
[07:28:42] <FromDiscord> <that_dude> Well see if I reach any other snags that may need them
[07:30:56] <FromDiscord> <that_dude> I got a new error, but I gtg for now
[07:31:00] <FromDiscord> <that_dude> Will ask later
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:59:15] <FromDiscord> <sharpcdf> when you call a command with `execCmd()` is the wd the directory of the exe
[07:59:41] <FromDiscord> <Elegantbeef> Nope what ever your present working dir is
[07:59:54] <FromDiscord> <sharpcdf> oh ok so just home
[07:59:58] <FromDiscord> <Elegantbeef> you can do `getAppDir` and `setCurrentDir` if you need to
[08:00:13] <FromDiscord> <sharpcdf> yea i was just thinking that
[08:00:14] <FromDiscord> <Elegantbeef> Not "just home", but whatever your environment set the directory to
[08:00:30] <FromDiscord> <sharpcdf> does `getAppDir` return the app exe in the path
[08:00:33] <FromDiscord> <sharpcdf> or just the directory
[08:00:47] <FromDiscord> <Elegantbeef> What do you think `dir` means?
[08:00:59] <FromDiscord> <sharpcdf> lol
[08:01:03] <FromDiscord> <Elegantbeef> dirppalication?
[08:01:16] <FromDiscord> <sharpcdf> well im pretty sure i used it before and it including the exe in the directory
[08:01:20] <FromDiscord> <Elegantbeef> there is `getAppFilename` for the exe
[08:22:41] <FromDiscord> <Yardanico> apparently total compilation time with clang is 32% faster for me when compiling a nim hello world with `nim c -d:danger --gc:orc --cc:clang -f test.nim` rather than with gcc
[08:22:55] <FromDiscord> <Yardanico> 520ms
[08:26:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[08:27:41] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[08:30:15] <FromDiscord> <sharpcdf> i want to check if a repository is in either github, gitlab, or bitbucket, how would i go about doing that?
[08:30:32] <FromDiscord> <sharpcdf> right now i just have git clones for all of them but it doesnt work at all
[08:30:50] <FromDiscord> <Yardanico> In reply to @sharpcdf "i want to check": in what context?
[08:31:15] <FromDiscord> <Yardanico> by URL? from the cloned repo tree? or something else?
[08:31:21] <FromDiscord> <sharpcdf> by the url
[08:31:32] <FromDiscord> <Yardanico> just check the hostname?
[08:31:37] <FromDiscord> <sharpcdf> what i have right now is appending the base ur(github, bitbucket, etc.) to the suer/repo
[08:31:42] <FromDiscord> <sharpcdf> (edit) "suer/repo" => "user/repo"
[08:31:47] <FromDiscord> <Yardanico> where do you get user/repo from
[08:31:53] <FromDiscord> <sharpcdf> command line args
[08:31:57] <FromDiscord> <Yardanico> and why do you want to check if it's from github/gitlab/bitbucked
[08:31:58] <FromDiscord> <Yardanico> (edit) "github/gitlab/bitbucked" => "github/gitlab/bitbucket"
[08:32:03] <FromDiscord> <Yardanico> In reply to @sharpcdf "command line args": then let the user specify?
[08:32:14] <FromDiscord> <Yardanico> or set the default as `gh` and allow the user to specify if it's not github
[08:32:22] <FromDiscord> <Yardanico> or allow to also specify the full url if it's not github
[08:32:32] <FromDiscord> <sharpcdf> i want it to specifically infer the base url
[08:32:37] <FromDiscord> <Yardanico> but why
[08:32:41] <FromDiscord> <sharpcdf> of course unless theres no way to do so
[08:32:44] <FromDiscord> <sharpcdf> just because
[08:32:45] <FromDiscord> <Yardanico> i mean if you really want to, just do it
[08:32:47] <FromDiscord> <Yardanico> I don't see the issue
[08:32:55] <FromDiscord> <sharpcdf> well thats my question, how would i do it
[08:33:00] <FromDiscord> <Yardanico> std/httpclient
[08:33:14] <FromDiscord> <sharpcdf> and then just check if it returns a 404?
[08:33:39] <FromDiscord> <Yardanico> well, you'll have to check what the websites return on a wrong URL, but generally yeah
[08:33:46] <FromDiscord> <Yardanico> i just don't see how it's specifically a nim problem :)
[08:33:49] <FromDiscord> <sharpcdf> alright thanks
[08:34:01] <FromDiscord> <Yardanico> and what if the same repo exists in more than 1 website?
[08:34:14] <FromDiscord> <sharpcdf> ill probably default it to github like you said
[08:34:32] <FromDiscord> <sharpcdf> and then gitlab
[08:34:47] <FromDiscord> <sharpcdf> and then bitbucket because i never use it and it seems the least popular üëç
[08:35:03] <FromDiscord> <Yardanico> there's also sourcehut, gitea and more
[08:35:14] <FromDiscord> <Yardanico> https://sr.ht
[08:35:30] <FromDiscord> <sharpcdf> gitea is self-hosted which makes it a little trickier imo, and ive never heard of sourcehut
[08:35:32] <FromDiscord> <sharpcdf> ill check it out
[08:35:41] <FromDiscord> <sharpcdf> i just want the most popular/common ones
[08:35:41] <FromDiscord> <Yardanico> In reply to @sharpcdf "gitea is self-hosted which": not exactly
[08:35:48] <FromDiscord> <Yardanico> well yeah it is, sorry
[08:35:53] <FromDiscord> <Yardanico> i forgot, though they have a main instance
[08:35:57] <FromDiscord> <Yardanico> (edit) "though" => "thought"
[08:36:13] <FromDiscord> <sharpcdf> lol yeah no
[08:36:16] <FromDiscord> <sharpcdf> they have an example page
[08:36:18] <FromDiscord> <sharpcdf> but thats about it
[08:36:33] <FromDiscord> <sharpcdf> ill add source hut
[08:38:11] <FromDiscord> <Yardanico> also i've seen codeberg a few times
[08:38:19] <FromDiscord> <Yardanico> repo.or.cz too
[08:38:30] <FromDiscord> <sharpcdf> In reply to @Yardanico "also i've seen codeberg": only popular websites
[08:38:37] <FromDiscord> <Yardanico> eh
[08:38:47] <FromDiscord> <Yardanico> that's not how it works with open source software :))
[08:39:00] <FromDiscord> <Yardanico> it's about what people who use your tool use, not about what's generally popular
[08:39:54] <FromDiscord> <sharpcdf> true
[08:40:04] <FromDiscord> <sharpcdf> but for me the first priority is the more common ones
[08:40:12] <FromDiscord> <sharpcdf> i might get to them later
[09:45:04] <NimEventer> New thread by Xioren: Issues with proxy authentication, see https://forum.nim-lang.org/t/8722
[11:17:24] <FromDiscord> <joe733> Hi what's the equivalent of Python's `os.read(fd: int, n: int) -> bytes` in nim?
[11:20:36] <FromDiscord> <Elegantbeef> Does that read n number of bytes and return it?
[11:20:57] <FromDiscord> <Elegantbeef> If so https://nim-lang.org/docs/io.html#readBytes%2CFile%2CopenArray%5B%5D%2CNatural%2CNatural
[11:54:01] <NimEventer> New post on r/nim by miran1: Nim 1.6.2 is out!, see https://reddit.com/r/nim/comments/rj30uu/nim_162_is_out/
[12:10:58] <FromDiscord> <valerga> is gdb a proper debugger for nim code?
[12:11:05] <FromDiscord> <valerga> i want to ascend from echo debugging lol
[12:11:11] <FromDiscord> <Elegantbeef> You can use it yes
[12:11:15] <FromDiscord> <Elegantbeef> Do you use vscode?
[12:11:19] <FromDiscord> <valerga> yeah
[12:11:31] <FromDiscord> <valerga> i see it has breakpoints
[12:11:33] <FromDiscord> <valerga> but i never use them
[12:11:39] <FromDiscord> <Elegantbeef> https://github.com/saem/vscode-nim#debugging
[12:11:55] <FromDiscord> <Elegantbeef> There is a bit of preamble with Nim debugging in vscode, but this'll get you going
[12:12:02] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 240 seconds)
[12:12:10] <FromDiscord> <valerga> ok, thanks
[12:12:44] <FromDiscord> <Elegantbeef> I dont often use breakpoint debugging though
[12:12:55] <FromDiscord> <Elegantbeef> So if you need help i'm not the person to ask probably üòÄ
[12:25:14] *** Joins: xet7 (~xet7@user/xet7)
[13:18:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[13:19:14] *** Joins: Colt (~Colt@user/colt)
[13:58:03] <FromDiscord> <TryAngle> is the official youtube channel dead or halted? (no uploads for >5 months now)
[13:59:33] <FromDiscord> <Rika> We have an official YouTube channel?
[13:59:47] <FromDiscord> <Elegantbeef> It's where nimconf is posted
[13:59:49] <FromDiscord> <TryAngle> https://www.youtube.com/channel/UCDAYn_VFt0VisL5-1a5Dk7Q
[14:00:22] <FromDiscord> <Elegantbeef> The online meetups havent happened for whatever reason and there hasnt been any events
[14:00:46] <FromDiscord> <Elegantbeef> What's supposed to posted tiktok esque "how to"s? üòõ
[14:01:01] <FromDiscord> <TryAngle> imagine a Nim Tik Tok Account
[14:01:23] <FromDiscord> <Elegantbeef> I'm sure after FOSDEM there might be another video or two, though i dont know
[14:03:59] <FromDiscord> <valerga> animals
[14:51:14] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[14:52:24] *** Joins: xet7 (~xet7@user/xet7)
[14:57:34] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 260 seconds)
[15:09:53] *** Joins: xet7 (~xet7@user/xet7)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:56:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[15:57:24] <FromDiscord> <joe733> sent a code paste, see https://play.nim-lang.org/#ix=3IKk
[15:57:38] <FromDiscord> <joe733> (edit) "https://play.nim-lang.org/#ix=3IKk" => "https://play.nim-lang.org/#ix=3IKl"
[15:57:57] <FromDiscord> <joe733> (edit) "https://play.nim-lang.org/#ix=3IKl" => "https://play.nim-lang.org/#ix=3IKm"
[15:58:12] <FromDiscord> <Solitude> stop trying to write python
[15:58:13] <FromDiscord> <joe733> (edit) "https://play.nim-lang.org/#ix=3IKm" => "https://play.nim-lang.org/#ix=3IKn"
[15:59:16] <FromDiscord> <joe733> In reply to @Solitude "stop trying to write": Well, can't help much when I'm porting a script from python.
[16:01:32] <FromDiscord> <Rika> Use an object variant
[16:01:57] <FromDiscord> <Rika> If you do not know the types ahead of time then there is no trivial solution
[16:11:30] <FromDiscord> <fenrave> In reply to @TryAngle "imagine a Nim Tik": Nim seems like a great language for that sort of thing
[16:14:25] <FromDiscord> <fenrave> Not much point in typing a table if you don't know the types ahead of time, usually you type a table so it only contains on or two types
[16:14:38] <FromDiscord> <fenrave> Just don't type it unless you really need it
[16:18:37] <FromDiscord> <konsumlamm> you can't not type it though
[16:21:15] <FromDiscord> <garuse> @joe733 perhaps you can use a Table[string, string] instead and convert the  values to  int with parseInt() depending on what you need.
[16:21:52] <FromDiscord> <joe733> In reply to @garuse "<@656116929102086147> perhaps you can": Thanks, I did something similar.
[16:23:59] <FromDiscord> <konsumlamm> or you use `JsonNode` (from `std/json`)
[16:32:35] *** Joins: src (~src@user/src)
[16:32:36] <FromDiscord> <fenrave> In reply to @konsumlamm "you can't not type": haven't had the ability to play around with nim so I was speaking from experience with other languages
[16:32:51] <FromDiscord> <fenrave> good to know that you need to though
[16:36:24] <FromDiscord> <konsumlamm> you don't need to write down the type, but that doesn't mean that it doesn't have a type, it'll be inferred
[16:37:15] <FromDiscord> <fenrave> yeah
[17:14:43] <FromDiscord> <Rika> In reply to @konsumlamm "or you use `JsonNode`": there should be a better default "semi-any" type that isnt a ref so that we dont need to refer to JsonNode anymore for non-json purposes...
[17:14:55] <FromDiscord> <Rika> i guess one that doesnt store itself
[17:20:17] <FromDiscord> <Rad> Hi! I'm a bit of a noob when it comes to Nim, I've recently picked it up and just installed a package with nimble. How do I use that package? It is the Moe editor and I am using Debian. I might have missed a step or don't have something in my path.
[17:21:16] <FromDiscord> <Rika> ~/.nimble/bin/
[17:21:19] <FromDiscord> <Rika> in path
[17:21:55] <FromDiscord> <Rad> oh nice, thank you. I should have checked around there üòÖ
[17:22:14] <FromDiscord> <Rika> idk, its not obvious imo
[17:24:22] <FromDiscord> <Rad> I was checking in the tooling documentation and I couldn't see anything, so it might not have been obvious. Thank you again.
[17:26:15] <FromDiscord> <Rad> The debian package for nim isn't up to date either, is it an official source? I think it's on 1.4.x?
[17:27:15] <FromDiscord> <Solitude> is any debian package up to date?
[17:27:36] <FromDiscord> <Rad> This is true üòÇ
[17:29:53] <FromDiscord> <Rad> I try to use Arch, but I needed a 32-bit OS...I believe arch has one but idk if it's official or not. But it's not a daily driver, it's just for testing on (very) low-end specs.
[17:32:13] <FromDiscord> <konsumlamm> In reply to @Rika "there should be a": honestly, people just shouldn't try to store different types in the same table
[17:34:21] <FromDiscord> <ajusa> In reply to @konsumlamm "honestly, people just shouldn't": Sometimes you need to do this though
[17:39:28] <FromDiscord> <Rika> try not to do it as much as possible
[17:53:01] <FromDiscord> <konsumlamm> often you just think you need to do this
[17:55:44] *** Joins: arkurious (~arkurious@user/arkurious)
[18:14:43] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3IKR
[18:14:49] <FromDiscord> <Rika> thats something else
[18:15:00] <FromDiscord> <Rika> its the one with case of in the object declaration
[18:15:06] <FromDiscord> <TryAngle> ah I see
[18:15:16] <FromDiscord> <TryAngle> In reply to @TryAngle "what is that? is": what is this thing then?
[18:15:30] <FromDiscord> <Rika> generic union is what id call it but i dont know the real term
[18:15:44] <FromDiscord> <Rika> compile time only so its the same as auto essentially
[18:15:50] <FromDiscord> <Rika> except restricted to those types
[18:16:11] <FromDiscord> <TryAngle> ah I see and the normal usecase is to restrict generic procs?
[18:16:25] <FromDiscord> <Rika> implicit generics yes
[18:16:30] <FromDiscord> <Rika> or explicit too i guess
[18:17:46] <FromDiscord> <IsaacPaul> In reply to @konsumlamm "honestly, people just shouldn't": I do it all the time when displaying a list of items to a user. Like say you have a list of orders. One could be a special kind of gift card purchase, one could be a package, one could be physical product, one could be a digital product. They are all being displayed as one list. They are all _not_ the same. It makes sense that the list contains different types.
[18:18:10] <FromDiscord> <IsaacPaul> And they are all displayed differently
[18:18:14] <FromDiscord> <Rika> technically theyre the same type
[18:18:19] <FromDiscord> <Rika> just with variands
[18:18:20] <FromDiscord> <Rika> (edit) "variands" => "variants"
[18:18:29] <FromDiscord> <Rika> and thats an appropriate use case
[18:18:30] <FromDiscord> <IsaacPaul> They all have an id üôÇ
[18:18:44] <FromDiscord> <IsaacPaul> lol
[18:18:47] <FromDiscord> <Rika> wdym? variants can have outside fields
[18:19:06] <FromDiscord> <Rika> object; field: type; case field: type of kind: field: ...
[18:19:51] <FromDiscord> <IsaacPaul> package is a group of orders, a gift card purchase doesn't fall into the same category in our system and has its own table in the database..
[18:20:17] <FromDiscord> <Rika> still completely possible for that to be a variant
[18:20:46] <FromDiscord> <IsaacPaul> I also add items like Seperator and header. But for example purposes imagine a few of these items just being an Ad
[18:20:48] <FromDiscord> <Rika> if JSON can be represented with an object variant then im pretty sure your described system can too..
[18:21:14] <FromDiscord> <IsaacPaul> > if JSON can be represented with an object variant ‚ÜµOh that's what you mean
[18:21:15] <FromDiscord> <Rika> string representation is decoupled from internal data representation
[18:21:20] <FromDiscord> <Rika> same with database representation
[18:21:25] <FromDiscord> <Rika> wdym thats what i mean
[18:21:38] <FromDiscord> <Rika> lol what did we misunderstand each other with
[18:21:53] <FromDiscord> <IsaacPaul> Is a variant some kind of special nim thing or a pattern?
[18:23:09] <FromDiscord> <Rika> its a "tagged union" in more common terms
[18:25:25] <FromDiscord> <IsaacPaul> In reply to @Rika "and thats an appropriate": I missed this line lol, and thought you were arguing against it lol
[18:25:42] <FromDiscord> <IsaacPaul> I just woke up my bad lol
[18:26:02] <FromDiscord> <Rika> It‚Äôs whatever
[18:30:21] <FromDiscord> <TryAngle> what is more idiomatic?‚ÜµBig variadic types or OOP ?
[18:31:48] <FromDiscord> <TryAngle> for example building a graph that is made out of nodes that have different purposes (one stores int, another string and another one stores subnodes etc.)
[18:35:43] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3ILa
[18:37:31] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3ILc
[18:37:49] <FromDiscord> <Solitude> —Ç—â
[18:37:52] <FromDiscord> <Solitude> (edit) "—Ç—â" => "no"
[18:38:14] <FromDiscord> <IsaacPaul> It's kinda the same imo.. Essentially, you're just attaching type info to an obj.
[18:38:43] <FromDiscord> <TryAngle> ah I see so when it gets compiled they are partially different types anyways?
[18:38:55] <FromDiscord> <Solitude> its not the same
[18:39:18] <FromDiscord> <IsaacPaul> I meant in an abstract sense
[18:39:20] <FromDiscord> <Solitude> you can achieve similiar functionality but its not the same
[18:39:30] <FromDiscord> <Solitude> and its more idiomatic to use variants
[18:40:45] <FromDiscord> <TryAngle> but why is that? I have never really used OOP anyways so it's not a big deal for me... just curious
[18:41:15] <NimEventer> New thread by Konsumlamm: A rant about Nim bugs, see https://forum.nim-lang.org/t/8723
[18:41:44] <FromDiscord> <IsaacPaul> because OOP support isn't exactly first class with nim
[18:42:19] <FromDiscord> <IsaacPaul> OOP also implies more things (inheritence, etc)
[18:42:29] <FromDiscord> <konsumlamm> why is my name capitalized by NimEventer? ü§î
[18:43:20] <FromDiscord> <IsaacPaul> (edit) "OOP also implies more things (inheritence, ... etc)" 03added "dynamic dispatch table,"
[18:43:38] <FromDiscord> <Solitude> In reply to @konsumlamm "why is my name": @Yardanico explain yourself
[18:44:05] <FromDiscord> <Yardanico> In reply to @Solitude "<@!177365113899057152> explain yourself": idk it looked betger
[18:44:09] <FromDiscord> <Yardanico> (edit) "betger" => "better"
[18:44:37] <FromDiscord> <Yardanico> As some people say
[18:44:41] <FromDiscord> <Yardanico> PRs welcome
[18:44:43] <FromDiscord> <Yardanico> https://github.com/Yardanico/nimeventer/blob/master/src/nimeventer/nimforum.nim#L124
[18:45:07] <FromDiscord> <TryAngle> @Yardanico how did you implement the profile picture changes of the discord bot?
[18:46:05] <FromDiscord> <Yardanico> In reply to @TryAngle "<@!177365113899057152> how did you": https://github.com/Yardanico/ircord/blob/master/src/ircord.nim#L56
[18:46:09] <FromDiscord> <Yardanico> Hash of the username
[18:46:37] <FromDiscord> <TryAngle> oh no, I mean on the discord side
[18:47:02] <FromDiscord> <TryAngle> I've looked through the code but I couldn't find it ü§î ‚ÜµI think I'm overlooking idk
[18:48:05] <FromDiscord> <TryAngle> I mean where you tell the discord bot to use that picture
[18:49:30] <FromDiscord> <Yardanico> In reply to @TryAngle "I mean where you": Literally the line I sent you
[18:49:37] <FromDiscord> <Yardanico> I'm using webhooks to send messages
[18:49:44] <FromDiscord> <TryAngle> o_O
[18:49:46] <FromDiscord> <Yardanico> You can specify the avatar URL in a webhook
[18:50:10] <FromDiscord> <Yardanico> You can't send as different users with the normal bot API obviously
[18:50:14] <FromDiscord> <Yardanico> You need webhooks for that
[18:50:23] <FromDiscord> <TryAngle> ah now I understand
[18:50:57] <FromDiscord> <TryAngle> I do not know what webhooks are / they exist‚Üµthought this was just a name you gave that "operation"
[18:51:01] <FromDiscord> <TryAngle> thanks!
[18:52:56] <FromDiscord> <TryAngle> (edit) "they exist‚Üµthought" => "didn't know of their existance‚Üµthought"
[19:00:30] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[19:13:07] *** Joins: snow (~snow@177.79.38.218)
[19:13:31] *** snow is now known as Guest4484
[19:14:00] *** Quits: Guest4484 (~snow@177.79.38.218) (Client Quit)
[19:22:40] *** Joins: src_ (~src@user/src)
[19:22:40] *** Quits: src_ (~src@user/src) (Remote host closed the connection)
[19:25:32] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[19:30:59] <FromDiscord> <konsumlamm> In reply to @Yardanico "PRs welcome": https://github.com/Yardanico/nimeventer/pull/3 :P
[19:40:07] <FromDiscord> <haxscramper> In reply to @NimEventer "New thread by Konsumlamm:": @konsumlamm the solution is to have a proper specification
[19:40:25] <FromDiscord> <haxscramper> Proper executable specification that people can referer to
[19:40:28] <FromDiscord> <haxscramper> (edit) "referer" => "refer"
[19:40:56] <FromDiscord> <haxscramper> And that is not written in the current compile test suite style
[19:41:27] <FromDiscord> <konsumlamm> executable as in "says how to implement it"?
[19:41:42] <FromDiscord> <haxscramper> executable as in tests that you can execute
[19:41:55] <FromDiscord> <haxscramper> and test suite that covers all possible loopholes and details
[19:42:15] <FromDiscord> <haxscramper> like damn, we started writing it for nimskull, and I got like five different bugs from closed as fixed issue
[19:42:21] <FromDiscord> <haxscramper> Simply by digging around
[19:42:31] <FromDiscord> <haxscramper> codegen bugs, sem bugs, outright compiler crashes
[19:42:44] <FromDiscord> <ajusa> In reply to @NimEventer "New thread by Konsumlamm:": I've only ran into a couple bugs during 4 years of using Nim for hobby and side projects. Unfortunately, none of those bugs have been fixed and I was forced to rely on workarounds. The Nim tracker is overflowing with nearly 2000 open issues.
[19:42:45] <FromDiscord> <haxscramper> I just sat down to write a spec
[19:43:53] <FromDiscord> <haxscramper> https://github.com/nim-works/nimskull/pull/59
[19:45:32] <FromDiscord> <haxscramper> In reply to @ajusa "I've only ran into": - 2021: According to the votes, fixing compiler bugs should be our first priority: 55% of our users find it very important
[19:45:43] <FromDiscord> <konsumlamm> In reply to @haxscramper "<@!312654963694108674> the solution is": in general i'd agree
[19:46:05] <FromDiscord> <haxscramper> - 2019: fixing compiler bugs: According to the votes, this should be our first priority; 55% find it very
[19:46:28] <FromDiscord> <konsumlamm> In reply to @haxscramper "And that is not": what's the problem with the current style?
[19:46:59] <FromDiscord> <haxscramper> it is an assorted pile of random tests that is riddled with `echo` checks
[19:47:19] <FromDiscord> <haxscramper> it is not even possible to accurately accertain something is fixed correctly
[19:47:27] <FromDiscord> <haxscramper> tested correctly
[19:47:37] <FromDiscord> <ajusa> I don't know how to feel about Nimskull - on one hand I like the idea of the project and the spirit of modernizing some of the std library and compiler. On the other hand, the Nim community is too small to have a schism like this end well, and libraries published for Nimskull may not work for Nim, and vice versa.
[19:48:34] <FromDiscord> <haxscramper> https://github.com/nim-works/nimskull/issues/41
[19:49:45] <FromDiscord> <haxscramper> people just come in, throw a couple of tests here and there and call it a day
[19:50:23] <FromDiscord> <haxscramper> and oh now, this `t239048` checks for some RWC thing that status had five years ago, we can't remove it
[19:50:33] <FromDiscord> <haxscramper> (edit) "now," => "no,"
[19:51:50] <FromDiscord> <haxscramper> It is hardly possible to test for proper structured compiler diagnostics as well
[19:52:03] <FromDiscord> <haxscramper> Or rather, `nimout/errmsg` is an abysmal way of testing things like that
[19:54:48] <FromDiscord> <haxscramper> In reply to @ajusa "I don't know how": Sure, but I would prefer to work with even smaller set of people that value correctness and clear, laid out milestones that are necessary to achieve that
[19:55:30] <FromDiscord> <haxscramper> even if the correctness comes at a cost of incompatibilities
[19:56:25] <FromDiscord> <haxscramper> and by correctness I mean specifically - fully thought through suite of validations that describe interactions between different parts of the language
[20:01:45] <FromDiscord> <enthus1ast> can i set the gcsafe pragma also for stuff i call?
[20:01:57] <FromDiscord> <enthus1ast> i tried {.push gcsafe.}   but it still complains
[20:02:43] <FromDiscord> <enthus1ast> i want to make sure it is gcsafe by useing locks
[20:02:57] <FromDiscord> <hmmm> I fail to see why good testing can't be done in nim directly, form a workgroup make a paper, get carte blanche from araq and then improve it inside nim
[20:03:04] <FromDiscord> <Rika> Isn‚Äôt it cast(gcsafe) if you want to fool the compiler
[20:03:17] <FromDiscord> <Rika> In reply to @hmmm "I fail to see": Guess the bottleneck
[20:03:56] <FromDiscord> <hmmm> there isnt ü§®
[20:04:42] <FromDiscord> <enthus1ast> yes that works, thanks @Rika
[20:05:16] <FromDiscord> <konsumlamm> In reply to @hmmm "I fail to see": afaiu the problem is that the whole test suite would need to be revamped from the ground up
[20:06:16] <FromDiscord> <haxscramper> Current compiler codebase also drags down development
[20:07:01] <FromDiscord> <haxscramper> In reply to @hmmm "I fail to see": > , get carte blanche from araq ‚ÜµLike that would ever happen
[20:07:21] <FromDiscord> <haxscramper> And we either end up with mountains of `knownIssue` things
[20:07:39] <FromDiscord> <haxscramper> or we have that crooked spec a-la C++ where things are hacked in because of RWC
[20:08:13] <FromDiscord> <haxscramper> for example, correct spec does require (at least if you want to preserve  maintainer's sanity) a structured report refactor
[20:08:26] <FromDiscord> <haxscramper> This is a whole-compiler refactor, by definitino
[20:08:29] <FromDiscord> <haxscramper> (edit) "definitino" => "definitipm"
[20:08:31] <FromDiscord> <haxscramper> (edit) "definitipm" => "definition"
[20:09:18] <FromDiscord> <haxscramper> How many monts will it take before we agree that https://github.com/nim-lang/RFCs/issues/324 and "json is not suitable" need to be revived
[20:09:24] <FromDiscord> <haxscramper> (edit) "monts" => "months"
[20:09:55] <FromDiscord> <haxscramper> In reply to @haxscramper "This is a **whole-compiler**": https://github.com/nim-works/nimskull/pull/94
[20:11:01] <FromDiscord> <konsumlamm> what does RWC mean?
[20:11:11] <FromDiscord> <haxscramper> "Real World Code (TM)"
[20:11:16] <FromDiscord> <hmmm> well if it can be done without hurting or slowing araq work on features he will give you the keys of the empire, otherwise yea you can do it outside nim but is there even a way to bring home the good stuff back?
[20:11:29] <FromDiscord> <haxscramper> aka "it breaks important packages therefore it is incorrect nim"
[20:11:52] <FromDiscord> <haxscramper> or we have compiler devs PR fixes to external packages to fix them
[20:13:52] <FromDiscord> <haxscramper> In reply to @hmmm "well if it can": Specification is written explicitly to be abstracted from shortcomings of a particular implementation https://github.com/nim-works/nimskull/pull/125/files#diff-6af95d23509b3d3e819c6dd6d422298d829cfd94023e753b4c95f9bbf43f235bR152-R155
[20:14:35] <FromDiscord> <haxscramper> Of course, when I implement structured reports it would no longer be fully portable
[20:15:35] <FromDiscord> <Rika> In reply to @hmmm "well if it can": that is up to araq and co
[20:16:14] <FromDiscord> <haxscramper> There is a question of
[20:16:16] <FromDiscord> <Rika> changes can prolly be upstreamed if they want it to
[20:16:42] <FromDiscord> <haxscramper> why so many people decided it is better for them to do a hard fork instead of trying to reason with mainline
[20:16:50] <FromDiscord> <haxscramper> but I probably should leave this out of the discussion
[20:19:20] <FromDiscord> <Solitude> In reply to @haxscramper "why so many people": d word
[20:20:12] <FromDiscord> <Rika> 8 bytes?
[20:20:46] <FromDiscord> <konsumlamm> D lang?
[20:20:59] <FromDiscord> <Rika> sorry that was a bad joke and i think i got it wrong also
[20:21:07] <FromDiscord> <Rika> prolly shoulda said 16 bytes
[20:21:13] <FromDiscord> <Rika> i dont remember anymore really
[20:21:16] <FromDiscord> <haxscramper> According to the urban dictionary I should be offended
[20:21:16] <FromDiscord> <konsumlamm> you got it right for 32 bit architectures
[20:21:17] <FromDiscord> <haxscramper> I think
[20:21:24] <FromDiscord> <haxscramper> Not sure though
[20:21:26] <FromDiscord> <Rika> In reply to @konsumlamm "you got it right": good enough
[20:21:52] <FromDiscord> <konsumlamm> though i think intel also uses word to mean 32 bit regardless of the arch?
[20:22:00] <FromDiscord> <Rika> huh
[20:22:05] *** Joins: src (~src@user/src)
[20:22:13] <FromDiscord> <Rika> maybe thats what i remember
[20:22:32] <FromDiscord> <Solitude> discussion = derailed
[20:23:44] <FromDiscord> <enthus1ast> int32 is superior to dword, no questions left
[20:23:44] <FromDiscord> <Rika> thats two d words
[20:23:59] <FromDiscord> <konsumlamm> ah no, it's 16 bits
[20:24:21] <FromDiscord> <Rika> maybe its windows that dword = 32b
[20:24:44] <FromDiscord> <enthus1ast> i always have to google \:D
[20:43:50] <FromDiscord> <VVX7> can someone remind me how to get nimsuggest working in vscode on windows?  the update to 1.6.2 seems to have broken it
[20:49:31] <FromDiscord> <VVX7> using nim-saem.  saw this https://github.com/saem/vscode-nim#code-completion already
[20:50:09] <FromDiscord> <dom96> did something change with how procs that have a typed pragma macros applied are evaluated in 1.4.0 and 1.6.0?
[20:52:31] <ozzz> Hi! strange stuff here. I enabled libsanitizer - thread one (in linux), and found that it hangs if I use lock for digit increments, or printing to the std out 
[20:55:23] <ozzz> what it may be? or acquiring and releasing locks should be done differently? binary crashes with err ../nptl/pthread_mutex_lock.c:81: __pthread_mutex_lock: Assertion `mutex->__data.__owner == 0' failed.
[21:22:27] <NimEventer> New post on r/nim by Pcarbonn: Building a simple room-based chat application in Nim (using HTMX), see https://reddit.com/r/nim/comments/rjcn9s/building_a_simple_roombased_chat_application_in/
[21:37:32] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3IMk
[21:39:13] <FromDiscord> <TryAngle> I know nim is generally more open when it comes to conventions like this but what would be used if it was in the compiler?
[21:39:21] <FromDiscord> <TryAngle> (edit) "I know nim is generally more open when it comes to conventions like this ... but" 03added "by design"
[21:39:38] <FromDiscord> <TryAngle> or is this more context dependent?
[21:42:47] <FromDiscord> <IsaacPaul> > what would be used if it was in the compiler?‚Üµbtrees.nim makes use of the #1
[21:43:15] <FromDiscord> <IsaacPaul> ccgexprs uses #2
[21:43:21] <FromDiscord> <konsumlamm> In reply to @TryAngle "I know nim is": it really depends on who would write that compiler code
[21:43:40] <FromDiscord> <konsumlamm> there is no consent
[21:44:08] <FromDiscord> <IsaacPaul> (edit) "ccgexprs" => "ccgexprs.nim" | "#2" => "#2‚Üµand ropes.nim uses #3"
[21:44:11] <FromDiscord> <TryAngle> ok that is indeed very open by design then üòÇ ‚Üµthanks
[21:45:22] <FromDiscord> <IsaacPaul> I prefer #3 as I've never seen inc in any other language that I've worked in
[21:45:39] <FromDiscord> <IsaacPaul> but its not big deal either way
[21:45:45] <FromDiscord> <IsaacPaul> (edit) "not" => "no"
[21:47:04] <FromDiscord> <el__maco> inc is from Pascal isn't it
[21:53:55] <FromDiscord> <Rika> i use 1 and 3 depending on my mood xddddddd
[21:56:46] <FromDiscord> <Hamid_Bluri> i prefre `a.inc b`
[21:56:51] <FromDiscord> <Hamid_Bluri> (edit) "prefre" => "prefer"
[21:58:18] <FromDiscord> <Hamid_Bluri> i do whatever i can yo avoid parentheses
[21:59:23] <FromDiscord> <Recruit_main707> In reply to @hamidb80 "i prefer `a.inc b`": i also do a.inc b
[21:59:34] <FromDiscord> <TryAngle> In reply to @hamidb80 "i prefer `a.inc b`": ah true I forgot about that üò¨
[22:00:49] <FromDiscord> <Solitude> zamn, people use `inc` with >1 increments?
[22:02:02] <FromDiscord> <Hamid_Bluri> with what?
[22:02:30] <FromDiscord> <TryAngle> In reply to @Solitude "zamn, people use `inc`": that was what I was wondering XD‚ÜµI'm using inc only for += 1 ‚Üµbut I just "discovered" that it can also be used for any number and 1 is just the default lol
[22:02:52] <FromDiscord> <Hamid_Bluri> there is also `dec` for `-=`
[22:03:17] <FromDiscord> <hmmm> In reply to @hamidb80 "i prefer `a.inc b`": I think b doesn't feel respected when you do that so I don't do that ü§®
[22:42:17] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[22:44:24] *** Joins: yann-kaelig (~yann-kael@static.235.1.76.144.clients.your-server.de)
[22:45:06] <yann-kaelig> Hello
[22:51:52] <yann-kaelig> I got as a 200% programming beginner a great idea because I was hesitating in the langauge to learn between C++ and Nim. I'm going to learn both and compare them is all aspect, from their installation, through setting up a workflow, to their documentation, courses and writing the code from scratch.
[22:53:40] <FromDiscord> <sheerluck> In reply to @yann-kaelig "I got as a": also learn Python3 and compare all 3 of them
[22:55:04] <yann-kaelig> Thx for the proposal but I was not attracted by python
[23:04:10] <yann-kaelig> I have pedagogical skills that I acquired in school put into practice as a musical teacher which could be useful for Nim language beginners, I will see
[23:08:22] <yann-kaelig> I am going to have questions and to start with the 'nim-basics' documentation I already have a first question. Even before writing a 'Hello world' what is a valid Nim program that does nothing which match a C++ code like "int main() {  // Write your code here } ?
[23:09:33] <FromDiscord> <el__maco> empty document?
[23:11:04] <FromDiscord> <el__maco> Nim code doesn't have to exist inside a function like C does, so I think you don't need any boilerplate at all
[23:21:46] *** Joins: xet7 (~xet7@user/xet7)
[23:25:17] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[23:25:39] *** Joins: xet7 (~xet7@user/xet7)
[23:58:16] <yann-kaelig> Can I really said that a program does nothing if the code source is only a single-line comments ? In my point of view the program does something but print nothing. What happening behind the scene in this case ? Also I can not find the explanation of the compilation output https://dpaste.com/76R2FLS2Q starting from CC line to the end. 
[23:59:35] <yann-kaelig> The program runs, but print nothing, how can I debug this software and see what's going on in this case
