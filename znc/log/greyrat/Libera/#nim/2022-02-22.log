[00:03:53] <FromDiscord> <leorize> nim compiler is the last place you wanna look at
[00:10:39] <FromDiscord> <leorize> and yeah you kinda emit string
[00:11:37] <FromDiscord> <leorize> but the best way to do it would be to emit an IR that is close to the target language, that way you can do more transformation/optimizations if needed
[00:40:56] *** Joins: ltriant (~ltriant@118.102.122.246)
[00:44:03] <FromDiscord> <ynfle> In reply to @Isofruit "Curiosity question, anyone here": vim + nimlsp
[00:45:03] <FromDiscord> <theanxietybuster> I don‚Äôt nim much right now but I‚Äôve been coding with ED and some wrappers shoved on top :ferrisSweat:
[00:45:53] <FromDiscord> <Phil> In reply to @rakgew "<@180601887916163073>\: I use micro": Does "hints" include getting decent function suggestions, e.g. that it suggests "someproc" in an imported file for "someobj.somep" ?
[00:46:01] <FromDiscord> <theanxietybuster> But VS2019+ also now supports building with a Makefile, so it should theoretically work for nim on Windows
[00:46:53] <FromDiscord> <Phil> In reply to @ynfle "vim + nimlsp": Do suggestions for proc-autocompletion and variable names work to your satisfaction or is that also pretty slow/incomplete sometimes?
[00:47:00] <FromDiscord> <Phil> Same for you @theanxietybuster
[00:48:09] <FromDiscord> <theanxietybuster> I haven‚Äôt tried them at all. I usually use docs and wing it. If the compiler for a language throws an error, I‚Äôve gotten decent at figuring out where the issue was and fixing it
[00:48:39] <FromDiscord> <ynfle> In reply to @Isofruit "Do suggestions for proc-autocompletion": Definitely comlete. Randomly it stops working for a day. Not the fastest but could be my configuration, but for sure faster than VSCode. A new feature is that now it displays the documentation also once the routine (proc, func, iterator, template, macro) is chosen
[00:49:13] <FromDiscord> <theanxietybuster> I kind of want to try and see how Nim support is on OniVim2 though
[00:50:03] <FromDiscord> <theanxietybuster> Think VSCode built without Electron but with a full Vim framework as the base
[00:50:14] <FromDiscord> <Phil> In reply to @ynfle "Definitely comlete. Randomly it": Hmm I'm absolutely terrible with vim given I never even spent more than 5 consecutive minutes with it, but faster and more consistent autocomplete might just be worth it
[01:02:45] <FromDiscord> <tosh [uniware]> what compiler arguments should i use to optimize my nim code ü§î
[01:03:32] <FromDiscord> <demotomohiro> -d:release or -d:danger
[01:04:00] <FromDiscord> <tosh [uniware]> and how do i turn off the console window ü§î
[01:05:47] <FromDiscord> <demotomohiro> --app:gui
[01:06:07] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/nimc.html
[01:06:12] <FromDiscord> <tosh [uniware]> thanks
[01:07:32] <FromDiscord> <Goel> Is `writeFile(filename: string; content: openArray[byte])` more performant than `writeFile(filename, content: string)` since it doesn't need to convert all the data to string before? I mean if i have to do a lot of data writing on files and I/O, which is the more performant approach i should use?
[01:09:33] <FromDiscord> <ynfle> In reply to @Goel "Is `writeFile(filename: string; content:": You can always benchmark with `benchy` but IO Is always for complicated I think
[01:11:32] <FromDiscord> <demotomohiro> How about to read the source code of `writeFile`?
[01:16:37] *** Joins: PMunch (~PMunch@user/pmunch)
[01:18:22] <FromDiscord> <demotomohiro> It looks like `fwrite` vs `fputs`.
[01:21:17] <FromDiscord> <ynfle> In reply to @demotomohiro "It looks like `fwrite`": Which is faster?
[01:25:11] <FromDiscord> <Goel> What is `fputs`? never read about that in the IO Module
[01:28:56] <FromDiscord> <ynfle> In reply to @Goel "What is `fputs`? never": It's a C things
[01:28:58] <FromDiscord> <ynfle> (edit) "things" => "thing"
[01:30:04] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Qkm
[01:30:16] <FromDiscord> <demotomohiro> https://github.com/nim-lang/Nim/blob/version-1-6/lib/system/io.nim#L855‚ÜµHere is implemetation of `writeFile`.
[01:31:15] <FromDiscord> <ynfle> In reply to @Isofruit "Hmm I'm absolutely terrible": Here's a video. You can see the error messages on the bottom. Warnings and hints don't show up ü§∑‚Äç‚ôÇÔ∏è https://media.discordapp.net/attachments/371759389889003532/945440053583306813/Screen_Recording_2022-02-21_at_11.19.15_PM.mp4
[01:33:23] <FromDiscord> <demotomohiro> I don't know which one is faster but `fwrite` writes given length while `fputs` writes untils it   read `\0`.  I think their performance is almost same.
[01:34:14] <FromDiscord> <Elegantbeef> I mean doing IO is slow, so it hardly matters imo
[01:35:20] <PMunch> Hmm, am I missing something here? The pure pragma says that it can be applied to objects to make them not show type information. But I can't see any difference in the generated C.. https://nim-lang.org/docs/manual.html#pragmas-pure-pragma
[01:35:55] <PMunch> I found this https://forum.nim-lang.org/t/5125 and tried again with some objects inheriting and a procedure that needs type information. But still no difference
[01:35:56] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3Qkn
[01:35:57] <FromDiscord> <Elegantbeef> Pmunch i think it's for inheritance, i could be wrong
[01:36:20] <FromDiscord> <Elegantbeef> Perhaps try in a release build if you havent
[01:36:39] <FromDiscord> <demotomohiro> If you use `writeFile` with string parameter to write random binary data can contain 0, it might not write whole data.
[01:36:42] <FromDiscord> <Elegantbeef> Debug may leave type info to give more useful debugging?
[01:37:14] <PMunch> Still no difference..
[01:37:34] <FromDiscord> <Elegantbeef> Yea the way to write safely would be `fileName.write(myData.toOpenArrayByte(0, myData.len)`
[01:37:35] <PMunch> By the way, this is what I'm testing with: http://ix.io/3Qko
[01:37:38] <FromDiscord> <Elegantbeef> writeFile\
[01:37:47] <FromDiscord> <Elegantbeef> Perhaps pure got brokededed
[01:39:15] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:42:24] <FromDiscord> <jos> In reply to @leorize "but the best way": do you think haxe would be a reference?
[01:44:02] <PMunch> Aha, I see what it does now
[01:44:16] <PMunch> Wow, the docs on this feature is super vague and misleading!
[01:46:04] <FromDiscord> <ynfle> In reply to @PMunch "Aha, I see what": Enlighten us!
[01:46:24] <PMunch> Hold on, I'm compiling sources
[01:46:36] <PMunch> As in getting together links, not compiling source code..
[01:47:08] <FromDiscord> <ynfle> Lol
[01:49:22] <nrds> <04dowry/freenode99> <rasengan> Classic Freenode had a special part in my heart and everyone else's.  It's the saddest and hardest thing I've done, in a long time - but I am giving the directive to shut it down.  #MFGA
[01:49:26] <nrds> <04dowry/freenode99> After people abandoned Freenode in droves, Andrew went even more crazy and decided to purge everything. He deleted every single channel, every single user, everything got nuked. This convinced everybody that hasn't jumped ship yet to do so, and now Freenode is completely and utterly dead.
[01:49:31] <nrds> <04dowry/freenode99> <rasengan> Classic Freenode had a special part in my heart and everyone else's.  It's the saddest and hardest thing I've done, in a long time - but I am giving the directive to shut it down.  #MFGA
[01:49:35] <nrds> <04dowry/freenode99> After people abandoned Freenode in droves, Andrew went even more crazy and decided to purge everything. He deleted every single channel, every single user, everything got nuked. This convinced everybody that hasn't jumped ship yet to do so, and now Freenode is completely and utterly dead.
[01:49:40] <nrds> <04dowry/freenode99> <rasengan> Classic Freenode had a special part in my heart and everyone else's.  It's the saddest and hardest thing I've done, in a long time - but I am giving the directive to shut it down.  #MFGA
[01:49:44] <nrds> <04dowry/freenode99> After people abandoned Freenode in droves, Andrew went even more crazy and decided to purge everything. He deleted every single channel, every single user, everything got nuked. This convinced everybody that hasn't jumped ship yet to do so, and now Freenode is completely and utterly dead.
[01:50:04] <PMunch> Prestige, is there anything we can do to remove these messages?
[01:52:22] <PMunch> Okay, so Nim has a pragma called `{.inheritable.}` which is mentioned a couple of places in various documentation, but hasn't gotten a section of its own. The best description of what it does comes from the inheritance section in tutorial II: You can use the inheritable pragma to introduce new object roots apart from `system.RootObj`.
[01:52:48] <nrds> <06Prestige99> not really, people signing up new accounts with different IPs and spamming...
[01:53:20] <PMunch> It seems like they all use that #MFGA hashtag though, could we simply filter messages containing that out?
[01:53:25] <nrds> <06Prestige99> Maybe can instantly start kicking people quoting rasengan
[01:54:20] <PMunch> Yeah I mean that message is quoted verbatim, so it shouldn't be hard to just throw in a simple filter..
[01:54:27] <PMunch> Anyways, back to inheritable!
[01:54:56] <nrds> <06Prestige99> Yeah
[01:55:01] <nrds> <06Prestige99> asking some mods about it
[01:55:37] <PMunch> So with an object marked as `{.inheritable.}` it ends up creating an object with a type field, this holds the specific type of the object that is currently being created.
[01:59:47] <PMunch> This means that it can be used for normal inheritance checking stuff like you would expect with e.g. RootObj
[02:00:40] <PMunch> Attaching the `{.pure.}` pragma along with an `{.inheritable.}` pragma means that the object no longer creates this field
[02:02:13] <PMunch> This means that if you define one object with fields `x` and `y`, both ints, and one object with `x` which is `{.pure, inheritable.}` and then inherit that from another object which adds field `y` then the first object with both fields and the new inherited object would be the same object in memory.
[02:02:29] <FromDiscord> <Elegantbeef> It should be the same with `type MyType = object of RootObj`
[02:02:41] <FromDiscord> <Elegantbeef> Though i still dont see why these types need type information
[02:03:01] <PMunch> As far as I can tell from the few mentions it gets in the manual this is mostly used to interface with C/C++
[02:03:09] <PMunch> What do you mean?
[02:03:43] <PMunch> RootObj is {.inheritable.} but not {.pure.}
[02:03:51] <PMunch> So it has a type field in it
[02:03:57] <FromDiscord> <Elegantbeef> I dont see why value types using inheritance need type information
[02:04:40] <PMunch> To do things like `proc myProc(x: MyBaseType) = if x of MyInheritedType: echo "Hello world"`
[02:04:51] <FromDiscord> <Elegantbeef> that can be resolved statically
[02:04:52] <PMunch> If MyBaseType is {.inheritable.} that works fine
[02:05:01] <FromDiscord> <Elegantbeef> and it'd be `when x is MyInheritedType`
[02:05:29] <PMunch> But if it is {.pure, inheritable.} then it fails to compile with a message that you can't use `of` with pure types
[02:05:43] <FromDiscord> <Elegantbeef> Sure but you dont need `of` for value types
[02:05:55] <FromDiscord> <Elegantbeef> They can be statically dispatched
[02:06:08] <PMunch> `is` doesn't work though
[02:06:17] <FromDiscord> <Elegantbeef> It does too
[02:07:05] <PMunch> Nope: syntax error at or near ""
[02:07:08] <PMunch> Crap..
[02:07:11] <PMunch> My paste messed up
[02:07:27] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Qky
[02:07:33] <PMunch> https://play.nim-lang.org/#ix=3Qkz
[02:07:46] <FromDiscord> <Elegantbeef> I dont know i guess it's useful for manual allocated collections
[02:08:33] <PMunch> As you can see your code only outputs "Heh" once for the type where you manually cast to MyBase
[02:08:53] <FromDiscord> <Elegantbeef> No it outputs it once for the time i dont convert it
[02:09:25] <FromDiscord> <Elegantbeef> A generic constraint that is an inherited object uses a composite type class to dispatch
[02:09:34] <FromDiscord> <Elegantbeef> So you get the proper type and dont need runtime checks
[02:09:51] <PMunch> Ah right
[02:10:15] <FromDiscord> <Elegantbeef> I just dont see where you can use this type information easily since they're not the same size
[02:10:23] <PMunch> But just using it as a type doesn't?
[02:10:36] <FromDiscord> <Elegantbeef> Nope it upcasts it to that type
[02:10:47] <FromDiscord> <Elegantbeef> which makes sense for when it's a `var T`
[02:11:35] <FromDiscord> <Elegantbeef> It's just super odd that runtime type information exists for value types to me, there's just not a case i can see it being useful
[02:11:47] <PMunch> Dynamic dispatch?
[02:11:47] <FromDiscord> <Elegantbeef> Maybe methods?
[02:11:52] <PMunch> I mean that's probably why it's even there
[02:12:22] <FromDiscord> <Elegantbeef> But i mean it doesnt make much sense there either since methods dont make sense given you cannot store them heterogenously
[02:12:57] <PMunch> Hmm, I was able to create a method for a pure, inheritable object..
[02:13:18] <FromDiscord> <Elegantbeef> If you attempt to make a `@[Base(), Child(), Child()` you get a runtime error
[02:13:29] <FromDiscord> <Elegantbeef> Which makes sense as there is a loss of information for that conversion
[02:13:35] <FromDiscord> <Elegantbeef> It's just a big "why" to me
[02:14:55] <PMunch> Hmm, this works though: https://play.nim-lang.org/#ix=3QkC
[02:15:17] <PMunch> This as well: https://play.nim-lang.org/#ix=3QkE
[02:15:43] <FromDiscord> <Elegantbeef> Well yea cause you have no type information
[02:15:50] <FromDiscord> <Elegantbeef> remove `pure` it errors
[02:16:20] <FromDiscord> <Elegantbeef> And cause you have no type information you cannot get the types out
[02:16:43] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3QkF
[02:17:10] <PMunch> Ah of course
[02:17:18] <PMunch> Hmm
[02:17:30] <FromDiscord> <ynfle> @PMunch https://play.nim-lang.org/#ix=3QkG
[02:17:40] <FromDiscord> <Elegantbeef> I think the only reason it exists is for reference objects
[02:17:53] <FromDiscord> <Elegantbeef> ynfle you're slow
[02:17:59] <FromDiscord> <ynfle> In reply to @Elegantbeef "ynfle you're slow": You're fat
[02:18:04] <FromDiscord> <Elegantbeef> Nah i'm not
[02:18:16] <FromDiscord> <ynfle> That's what your mom said
[02:20:15] <PMunch> @Elegantbeef, make them ref types though and it works: https://play.nim-lang.org/#ix=3QkH
[02:20:27] <FromDiscord> <Elegantbeef> For value type inheritance i think it can be done 100% statically, just need a macro for `x.isChildOf(MyValueType)`
[02:20:35] <FromDiscord> <Elegantbeef> Of course it works
[02:20:49] <PMunch> The little snippet in Tutorial II says this "Ref objects should be used whenever inheritance is used."
[02:20:51] <FromDiscord> <Elegantbeef> They're now homogeneous size
[02:21:02] <PMunch> Yeah I know
[02:21:22] <FromDiscord> <Elegantbeef> my point was the type information is 100% for reference inheritance
[02:21:37] <FromDiscord> <Elegantbeef> If you have value inheritance you can do it all statically without it
[02:22:47] <FromDiscord> <Elegantbeef> I guess someone needs to add that `isChildOf` macro to oopsie üòõ
[02:24:30] <FromDiscord> <retkid> with python stuff
[02:24:49] <FromDiscord> <retkid> can nimpy do async?
[02:25:28] <FromDiscord> <retkid> i have an async function which i need to call
[02:27:31] <NimEventer> New thread by Cnerd: Catch exceptions without crashing app, see https://forum.nim-lang.org/t/8938
[02:45:02] <FromDiscord> <retkid> hey how do import a local module with nimpy
[02:45:05] <FromDiscord> <retkid> i cant quite figure it out
[02:45:23] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=
[02:45:25] <FromDiscord> <retkid> (edit) 
[02:45:42] <FromDiscord> <retkid> it only works with modules which are installed with pypy?
[02:55:43] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/945461310777335819/unknown.png
[03:01:14] <PMunch> If anyone is interested in Ratel and wants to give me some feedback for the build tool feature: https://github.com/PMunch/ratel/issues/10
[03:06:01] <FromDiscord> <qb> Playing and checking out `parallel`. What exactly is the reason that line 25/26 don't work and 28 does? I actually wan't to do something like `result.add(spawn bleh(i))`. https://play.nim-lang.org/#ix=3QkS
[03:07:35] <FromDiscord> <$$$> how can i convert a key of json into a string
[03:07:43] <FromDiscord> <$$$> JsonNode to string i mean
[03:08:31] <FromDiscord> <retkid> I guess somethings wrong with my distro or something thanks for the help guys ¬Ø\_(„ÉÑ)_/¬Ø
[03:08:58] <PMunch> $$$, have you tried $?
[03:13:11] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 256 seconds)
[03:14:42] <FromDiscord> <$$$> In reply to @PMunch "$$$, have you tried": thanks!
[03:15:12] <PMunch> In general if you want to turn something in Nim into a string, $ is the answer
[03:16:53] <FromDiscord> <retkid> to get around this nimpy thing I've system linked my python modules
[03:17:07] <FromDiscord> <retkid> Ive not seen anyone else do this for any reason but I guess thats just what the solution is
[03:17:30] <FromDiscord> <retkid> so much for portable installs
[03:19:29] <FromDiscord> <$$$> what is the nim equivelant of doing [i:] (or in my case [5:]) in python
[03:20:31] <FromDiscord> <retkid> [5:0]
[03:20:37] <FromDiscord> <retkid> try it out
[03:20:43] <FromDiscord> <retkid> its not exact but you'll get it
[03:20:59] <FromDiscord> <$$$> In reply to @retkid "its not exact but": wdym
[03:21:16] <FromDiscord> <retkid> its like 1 character off or something, dont remember
[03:23:43] <FromDiscord> <qb> Guess you're looking for `[5..^1]`
[03:28:06] *** Joins: xet7 (~xet7@user/xet7)
[03:33:53] <FromDiscord> <Rika> In reply to @qb "Guess you're looking for": This is the right answer here
[03:48:41] <FromDiscord> <$$$> sent a code paste, see https://play.nim-lang.org/#ix=3QkY
[03:53:23] <FromDiscord> <atlx> hi so im new
[03:53:34] <FromDiscord> <atlx> taken a look at the syntax, seems pretty awesome
[03:53:59] <FromDiscord> <atlx> im mostly interested currently in compiler design, working on one in Rust
[03:54:07] <FromDiscord> <atlx> what's your opinions on how Nim compares to Rust?
[03:54:32] <PMunch> Quite a big subject to cover
[03:54:50] <FromDiscord> <$$$> sent a code paste, see https://play.nim-lang.org/#ix=3QkZ
[03:54:54] <PMunch> I'd say Nim is way easier to learn and use, at least all the people coming here from Rust says that
[03:55:20] <PMunch> Nim targets C, which means that you can run Nim anywhere you can run C
[03:55:36] <PMunch> It also makes interoperability with C really easy
[03:58:28] <PMunch> Besides it has an amazing macro system which can make all the difference
[03:59:32] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[04:08:30] <FromDiscord> <creikey> Nims macros are just so much nicer than rusts
[04:21:17] <FromDiscord> <$$$> In reply to @qb "Guess you're looking for": what if 0 was sum else ? like [3:15]
[04:22:28] <FromDiscord> <qb> huh? Should be [3..15]
[04:22:33] <FromDiscord> <$$$> oh lmao alr
[04:28:42] <FromDiscord> <atlx> In reply to @PMunch "Nim targets C, which": that is great to know
[04:28:45] <FromDiscord> <atlx> wasn't aware thanks
[04:37:27] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:38:00] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[04:40:50] <FromDiscord> <huantian> In reply to @$$$ "what if 0 was": you can also do `[0..^2]`, which would be the same as `[0:-1]`
[04:53:48] <FromDiscord> <$$$> is my vscode bugging or am i doing something very wrong https://media.discordapp.net/attachments/371759389889003532/945491026582315109/unknown.png
[04:56:10] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[04:57:42] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 272 seconds)
[04:59:11] <FromDiscord> <Elegantbeef> What's the compiler say
[05:01:23] <FromDiscord> <$$$> yea i fixed it the documentation was ahead of the actual version for some reason
[05:18:56] <NimEventer> New question by itil memek cantik: Nim have to convert string to int the simplest, see https://stackoverflow.com/questions/71215018/nim-have-to-convert-string-to-int-the-simplest
[05:22:39] <FromDiscord> <qb> sent a code paste, see https://play.nim-lang.org/#ix=3Qlg
[05:22:50] <FromDiscord> <qb> (edit) "https://play.nim-lang.org/#ix=3Qlg" => "https://play.nim-lang.org/#ix=3Qlh"
[05:22:57] <FromDiscord> <qb> (edit) 
[05:24:11] <FromDiscord> <qb> (edit) "https://play.nim-lang.org/#ix=3Qlh" => "https://play.nim-lang.org/#ix=3Qlj"
[05:27:19] <FromDiscord> <huantian> @abdu is there a reason you don't want to use the standard library? It would just be easier and less error prone to use parseutils.parseInt
[05:27:36] <FromDiscord> <huantian> I would reply on SO but I don't have enough rep grrrr
[05:45:46] <FromDiscord> <abdu> How to convert string to int the simplest native way without module import ..
[05:53:13] <FromDiscord> <Elegantbeef> Dead simple
[05:53:15] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Qlo
[05:53:16] <FromDiscord> <Elegantbeef> Also dead dumb
[05:53:57] <FromDiscord> <huantian> what if my int is negative tho beef üòõ
[05:56:03] <FromDiscord> <Elegantbeef> You check it then use `toOpenArray` üòõ
[05:58:07] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Qlr
[05:58:57] <FromDiscord> <Elegantbeef> guess we could just do `-parseInt(str.toOpenArray(1, str.len - 1))` instead of being fucking weird
[06:03:26] <FromDiscord> <chancy> So it seems like one of the ways to get the correct SDK on OSX is to do something like `$(xcrun --sdk macosx --find clang) -isysroot $(xcrun --sdk macosx --show-sdk-path) -arch arm64`. What the appropriate way to feed this to Nim? `--cc` seems to just expect simple input like gcc, clang, etc.
[06:17:08] <FromDiscord> <retkid> In reply to @qb "On the examples nimpy": very intuitive syntax here
[06:18:10] <FromDiscord> <concatime> Quick question folks. I'm on Linux, and I use `clang`. When building Nim from source, I get `Error: execution of an external compiler program 'gcc -c  -w  -I/build/Nim-1.2.18/lib -I/build/Nim-1.2.18 -o /tmp/cache/nim/koch_d/stdlib_assertions.nim.c.o /tmp/cache/nim/koch_d/stdlib_assertions.nim.c' failed with exit code: 127`. I already set the env. var`CC` to `clang`.
[06:18:35] <FromDiscord> <concatime> Now, how do I tell nim to use clang?
[06:18:40] <FromDiscord> <demotomohiro> --cc option just specify kind of compiler. If you want to do cross compile, you need to set `arm64.osx.clang.exe = <clang-exe-name>` in nim.cfg.
[06:25:40] <FromDiscord> <demotomohiro> Building Nim from source with other than gcc might require editing `build_all.sh`
[06:28:37] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:30:42] <FromDiscord> <demotomohiro> If you have working Nim compiler that is same version to source code, build koch with existig nim with --cc:clang and `./koch boot -d:release --cc:clang` might work.
[06:39:27] <FromDiscord> <demotomohiro> Or just changing `cc = gcc` to `cc = clang` in `compile/nim.cfg` might work.
[06:43:28] <FromDiscord> <concatime> Yep, that's what I did after you pointed my to `--cc`. I just want to say that Nim a bless to bootstrap. Have you tried to bootstrap `F#`?
[06:45:10] <FromDiscord> <huantian> I want to try F# at some point... seems pretty functional
[06:48:16] <FromDiscord> <$$$> can someone explain pragmas
[06:48:34] <FromDiscord> <Elegantbeef> They can be annotations and macros
[06:49:36] <FromDiscord> <$$$> can u use multiple
[06:49:55] <FromDiscord> <huantian> yes
[06:49:55] <FromDiscord> <Elegantbeef> Yes
[06:50:02] <FromDiscord> <$$$> also what does `"template/generic instantiation of await from here"`
[06:50:03] <FromDiscord> <$$$> mean
[06:50:11] <FromDiscord> <$$$> i get it when calling an await procedure
[06:51:03] <FromDiscord> <Elegantbeef> an "await procedure"?
[06:51:39] <FromDiscord> <$$$>  https://media.discordapp.net/attachments/371759389889003532/945520686556925952/unknown.png
[06:51:44] <FromDiscord> <$$$> async 
[06:51:46] <FromDiscord> <$$$> my bad
[06:52:22] <FromDiscord> <huantian> that means you used the await macro to do something, but the stuff that the macro made made an error
[06:52:35] <FromDiscord> <huantian> I think?
[06:52:52] <FromDiscord> <$$$> when i call it
[06:52:53] <FromDiscord> <$$$> `Error: 'yield' only allowed in an iterator`
[06:52:59] <FromDiscord> <$$$> `nim-1.6.4\lib\pure\asyncmacro.nim(130, 3) Error: 'yield' only allowed in an iterator`
[06:54:27] <FromDiscord> <$$$> idek what that means
[06:55:17] <FromDiscord> <Elegantbeef> do you have `import std/asyncdispatch`?
[06:55:57] <FromDiscord> <Elegantbeef> you're attempting to await a async procedure in a non async procedure
[06:56:07] <FromDiscord> <Elegantbeef> do `waitfor thingy()`
[06:58:03] <FromDiscord> <Elegantbeef> Dont get why it doesnt do anything helpful
[06:58:22] <FromDiscord> <Elegantbeef> Like maybe a "attempting to await async inside non async procedure"
[06:58:41] <FromDiscord> <huantian> yeah wonder why await doesn't give an error like that
[06:59:29] <FromDiscord> <Elegantbeef> Well it involves getting the owner of the present symbol so it's somewhat difficult
[06:59:36] <FromDiscord> <$$$> In reply to @huantian "yeah wonder why await": ye i had no idea what "Error: 'yield' only allowed in an iterator" meant
[07:00:00] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:00:16] <FromDiscord> <Elegantbeef> Well i say somewhat difficult but it's more tedious than difficult
[07:00:20] <FromDiscord> <huantian> In reply to @Elegantbeef "Well it involves getting": ~~what if you just check if yield compiles~~
[07:00:41] <FromDiscord> <Elegantbeef> that'd work
[07:00:55] <FromDiscord> <Elegantbeef> go PR it
[07:06:58] <FromDiscord> <$$$> final question, how do i zip a file (create a new zip) ü§î \
[07:07:23] <FromDiscord> <huantian> you'll want a package like zippy for that
[07:07:24] <FromDiscord> <huantian> <https://github.com/guzba/zippy>
[07:10:58] <FromDiscord> <$$$> In reply to @huantian "you'll want a package": i tried but im trying to create a .zip file and it just didnt create a file
[07:16:06] <FromDiscord> <Elegantbeef> Did you save the file?
[07:27:12] <FromDiscord> <huantian> In reply to @Elegantbeef "that'd work": hm is `compiles()` the right way to do this?
[07:28:25] <FromDiscord> <huantian> `when not compiles(yield internalTmpFuture):` makes nim complain about "expression expected, but found 'keyword yield'"
[07:29:21] <FromDiscord> <Elegantbeef> Ah parser issues i think
[07:30:50] <FromDiscord> <Elegantbeef> Ideal might be the symbol thing i mentioned
[07:31:13] <FromDiscord> <Elegantbeef> emit a const, get it's symbol and ensure it's inside a `async` proc
[07:34:28] <FromDiscord> <huantian> can I do that in a template though?
[07:34:39] <FromDiscord> <Elegantbeef> Yea
[07:34:56] <FromDiscord> <huantian> cool cool
[07:35:27] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3QlH
[07:35:44] <FromDiscord> <huantian> ah that makes sense
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:02:36] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[08:03:01] *** Joins: rockcavera (~rc@192.12.112.205)
[08:03:02] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[08:03:02] *** Joins: rockcavera (~rc@user/rockcavera)
[08:21:38] <FromDiscord> <huantian> sent a code paste, see https://play.nim-lang.org/#ix=3QlU
[08:22:32] <FromDiscord> <huantian> I guess I should just check if the return type of the iterator is `owned(FutureBase)`, but maybe is there a way to check if the proc was annotated with {.async.} before async is expanded?
[08:24:15] <FromDiscord> <Elegantbeef> There is not
[08:31:23] <FromDiscord> <huantian> is something like this the right way to check for return type?‚Üµ`owner.getImpl.params[0] == newCall(bindSym"owned", bindSym"FutureBase")`
[08:31:38] <FromDiscord> <Elegantbeef> yep
[08:31:46] <FromDiscord> <huantian> nice
[08:31:47] <FromDiscord> <Elegantbeef> well i'd say sorta
[08:31:53] <FromDiscord> <Elegantbeef> it's not going to be a `newCall`
[08:33:42] <FromDiscord> <Elegantbeef> it can also be a command no?
[08:33:57] <FromDiscord> <Elegantbeef> Dont know what `owned` even is/does
[08:35:18] <FromDiscord> <Elegantbeef> eitherway it can be a call or command
[08:35:32] <NimEventer> New question by pooooky: How to hide all Nimble and Nim outputs including errors?, see https://stackoverflow.com/questions/71216157/how-to-hide-all-nimble-and-nim-outputs-including-errors
[08:35:45] <FromDiscord> <huantian> I'd think {.async.} would only expand it to a call tho right?
[08:36:33] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3QlZ
[08:36:34] <FromDiscord> <Elegantbeef> Damn it accidently sent it
[08:37:05] <FromDiscord> <Elegantbeef> Oh yea today is not my day
[08:37:06] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Qm0
[08:38:05] <FromDiscord> <Elegantbeef> The command is easy to do an ensure nothing ever goes astray, but i could be being dumb
[08:39:36] <FromDiscord> <huantian> I'm probably gonna look at this tomorrow some more, gonna go sleep now tho ‚Üµgn beef
[08:39:46] <FromDiscord> <Elegantbeef> Buh bye
[08:43:21] <FromDiscord> <huantian> Oh yeah just before I dip, youd probably want a length check too right
[08:43:36] <FromDiscord> <Elegantbeef> Yea
[08:47:07] <FromDiscord> <sheldon> Is there any blockchain written in Nim?
[08:47:50] <FromDiscord> <Elegantbeef> https://github.com/status-im/nimbus-eth2/
[09:01:18] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:12:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[09:36:32] <FromDiscord> <Nick.> sent a code paste, see https://play.nim-lang.org/#ix=3Qmc
[09:43:16] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:48:53] <FromDiscord> <Elegantbeef> I could be wrong but isnt the issue you're trying to rotate left `x.byte`  which is just `1000000`
[09:52:44] <FromDiscord> <Elegantbeef> i assume there is a reason you're avoiding `shr 5`?
[09:53:05] <FromDiscord> <Nick.> Right, I just figured that 0x32 has a lenght of 6 which I would like to have it to be 8. I would add 0 + i.byte to it but that isnt working.
[09:53:49] <FromDiscord> <Elegantbeef> 0x32 is an `int` which is 64 bit generally
[09:54:08] <FromDiscord> <Nick.> the end result i'm at is 0100_0110
[09:54:28] <FromDiscord> <Elegantbeef> if you want `0x32` to be a `uint8` you'd do `0x32u8`
[09:57:30] <FromDiscord> <Elegantbeef> I've never used rotateBits before so i cannot help using it, so i guess i'll shush üòÄ
[09:57:39] <FromDiscord> <Nick.> xD
[09:59:13] <FromDiscord> <Nick.> so the idea is add 00 to 110010 = 00110010. Has a len of 8. Then grab the last 3 which is 010 and add 00110 behind it.
[09:59:23] <FromDiscord> <Nick.> which is dec 70
[09:59:37] <FromDiscord> <Nick.> (edit) "70" => "70. Which is char F"
[10:00:25] <FromDiscord> <Nick.> But I'm clearly doing something wrong
[10:02:57] <FromDiscord> <Elegantbeef> Yep no clue, cannot grok how rotate works at the moment
[10:14:02] <FromDiscord> <$$$> how do i run a powershell command in nim
[10:14:29] <FromDiscord> <Elegantbeef> Do you mean run a shell command or do you want to use the windows powershell API?
[10:14:35] <FromDiscord> <$$$> run a shell cmd
[10:14:55] <FromDiscord> <Elegantbeef> `import std/os; discard execCmd("echo 'hello'")`
[10:15:24] <FromDiscord> <Elegantbeef> Shit it's not execCmd i'm a liar!
[10:15:31] <FromDiscord> <$$$> shii what is it
[10:15:34] <FromDiscord> <$$$> ü§î
[10:15:34] <FromDiscord> <Elegantbeef> It's `execShellCmd`
[10:15:42] <FromDiscord> <$$$> oh alr, thanks!
[10:16:28] <FromDiscord> <Elegantbeef> There is also osproc for more features
[10:33:43] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[10:36:32] <FromDiscord> <$$$> the -d:ssl argument was breaking my code to upload a file to a server, so im trying to use libcurl `<https://github.com/Araq/libcurl>` to upload the file to a server, cuz it doesnt need the argument to work over ssl. can sum1 help me with this?
[10:37:15] <FromDiscord> <Elegantbeef> I mean what was the issue with `-d:ssl`?
[10:37:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4)
[10:38:06] <FromDiscord> <$$$> In reply to @Elegantbeef "I mean what was": i got my friend to test my code out (.exe) on his machine and it was throwing errors about how it doesnt have the dlls, but i dont wana include the .dlls in my folder, so i have to switch to something else
[10:38:33] <FromDiscord> <Elegantbeef> I feel like "just ship the dll"s is a easy solution
[10:38:45] <FromDiscord> <Elegantbeef> You're still going to need libcurl
[10:39:09] <FromDiscord> <$$$> In reply to @Elegantbeef "I feel like "just": nawwww
[10:39:11] <FromDiscord> <Elegantbeef> You could use https://github.com/treeform/puppy
[10:39:14] <FromDiscord> <$$$> whats dat
[10:39:43] <FromDiscord> <$$$> can u post with dat ?
[10:41:14] <FromDiscord> <Elegantbeef> Dont know
[10:41:27] <FromDiscord> <$$$> i checked it and m pretty sure u cant
[10:41:34] <FromDiscord> <$$$> do yk how to use curl? like the cmd
[10:41:41] <FromDiscord> <Elegantbeef> Nope
[10:41:49] <FromDiscord> <$$$> dam üòî
[10:42:55] <FromDiscord> <morgan> is there any way to have proc overloading where the only difference is in the return type?
[10:43:20] <FromDiscord> <morgan> if not it's not really an issue
[10:43:38] <FromDiscord> <Elegantbeef> Nope overloading only works on parameters, you could use generics for overloading return
[10:43:56] <FromDiscord> <morgan> just would save a proc call that does a very simple conversion
[10:44:09] <FromDiscord> <Elegantbeef> A converter?
[10:44:23] <FromDiscord> <morgan> basically i have a set of color objects with and without opacity
[10:44:52] <FromDiscord> <Elegantbeef> A code example might be in order
[10:45:32] <FromDiscord> <morgan> so it could convert to not having opacity when it converts from cartesian to cylindrical space without another proc to change the type to a form without opacity
[10:46:26] <FromDiscord> <morgan> if that makes sense
[10:46:37] <FromDiscord> <Elegantbeef> It does not
[10:46:57] <FromDiscord> <morgan> one sec
[10:49:53] <FromDiscord> <morgan> sent a code paste, see https://play.nim-lang.org/#ix=3Qmp
[10:50:25] <FromDiscord> <morgan> there's also addOpacity but i left it out because it's almost the same thing
[10:50:38] <FromDiscord> <Elegantbeef> Could use a generic
[10:51:08] <FromDiscord> <morgan> hm ok
[10:51:29] <FromDiscord> <morgan> i think i'll just leave them as no opacity to no opacity and opacity to opacity
[10:52:13] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Qmq
[10:52:44] <FromDiscord> <morgan> ooh
[10:53:46] <FromDiscord> <Elegantbeef> Though dont see how htat's any better
[10:54:15] <FromDiscord> <morgan> yeah
[10:54:32] <FromDiscord> <morgan> slightly smaller but also less clear
[10:55:06] <FromDiscord> <Elegantbeef> Where was the return type inference wanted?
[10:55:21] <FromDiscord> <morgan> in the cyl functions
[10:55:55] <FromDiscord> <morgan> so that it could take in an OLAB and return an OLCH or an LCH depending on what the variable or next function wants
[10:56:05] <FromDiscord> <morgan> tho i suppose that's kinda unclear
[10:56:44] <FromDiscord> <Elegantbeef> Could define converters
[10:58:42] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#converters if you dont know what i mean
[10:59:27] <FromDiscord> <morgan> will check that out
[11:02:23] <FromDiscord> <$$$> sent a code paste, see https://play.nim-lang.org/#ix=3Qmu
[11:03:23] <FromDiscord> <Elegantbeef> and now you need curl
[11:07:54] <FromDiscord> <$$$> wdym
[11:07:57] <FromDiscord> <$$$> its preinstalled
[11:15:56] <FromDiscord> <Rika> Is it now
[11:19:05] *** Joins: ltriant (~ltriant@118.102.122.246)
[11:24:02] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[11:29:48] <FromDiscord> <$$$> ran in to one more issue, https://media.discordapp.net/attachments/371759389889003532/945590683031449670/unknown.png
[11:29:57] <FromDiscord> <$$$> is there a way i can just use the source of the dll and put it in the code
[11:29:58] <FromDiscord> <$$$> instead of
[11:30:02] <FromDiscord> <$$$> including the dll
[11:30:11] <FromDiscord> <Elegantbeef> you can statically link it
[11:30:13] <FromDiscord> <$$$> how
[11:30:18] <FromDiscord> <$$$> & what does that mea
[11:30:20] <FromDiscord> <$$$> mean
[11:30:54] <FromDiscord> <enthus1ast> youu cannot statically link a dll
[11:31:05] <FromDiscord> <Elegantbeef> i meant hte library
[11:31:30] <FromDiscord> <$$$> idek what that means, can u help me do it with this <`https://github.com/GULPF/tiny_sqlite`>
[11:31:30] <FromDiscord> <enthus1ast> you must recompile the source code to a static library, then you can link it
[11:31:50] <FromDiscord> <$$$> (edit) "<`https://github.com/GULPF/tiny_sqlite`>" => "`<https://github.com/GULPF/tiny_sqlite>`"
[11:32:11] <FromDiscord> <$$$> In reply to @enthus1ast "you must recompile the": what do these words mean give me a tutorial bro üò≠
[11:32:32] <FromDiscord> <Elegantbeef> Shipping a dll is the easiest thing to do
[11:33:08] <FromDiscord> <$$$> naww just tell me how to statically link it
[11:33:37] <FromDiscord> <Elegantbeef> It's not just a flag
[11:33:42] <FromDiscord> <Elegantbeef> You need the static library and to link that
[11:34:00] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[11:34:13] <FromDiscord> <$$$> In reply to @Elegantbeef "You need the static": how do i link it + what is a static library i come from python idk what these funky words mean
[11:34:38] <FromDiscord> <Elegantbeef> I cant give a good explanation for the first and for the second use your search engine
[11:34:51] <FromDiscord> <enthus1ast> @$$$\: why not put your files into a folder, then zip it?
[11:35:20] <FromDiscord> <enthus1ast> or use an installer creator like nsis
[11:35:52] <FromDiscord> <Rika> In reply to @$$$ "how do i link": You will do so much more work trying to statically link than to just packages the DLLs.
[11:36:48] <FromDiscord> <$$$> In reply to @Rika "You will do so": how do i statically link it tho
[11:37:17] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[11:38:08] <FromDiscord> <Rika> First you need the source code of the libraries, or their static objects
[11:38:17] <FromDiscord> <$$$> https://github.com/GULPF/tiny_sqlite
[11:38:20] <FromDiscord> <$$$> this is the librarty
[11:38:33] <FromDiscord> <Rika> That‚Äôs the wrapper
[11:38:41] <FromDiscord> <Rika> You need the SQLite source code
[11:38:48] <FromDiscord> <$$$> ok let me fid
[11:39:47] <FromDiscord> <Rika> https://stackoverflow.com/a/13452121
[11:40:20] <FromDiscord> <$$$> https://github.com/nim-lang/Nim/blob/devel/lib/impure/db_sqlite.nim this is the library (i think?)
[11:40:31] <FromDiscord> <Rika> https://gist.github.com/payalord/c87cbd1d12ea7712449657d1c6583e12
[11:40:34] <FromDiscord> <Rika> In reply to @$$$ "https://github.com/nim-lang/Nim/blob/devel/lib/impu": No
[11:40:52] <FromDiscord> <Rika> https://github.com/sqlite/sqlite
[11:41:25] <FromDiscord> <$$$> how can i make that with nim
[11:41:33] <FromDiscord> <Rika> You don‚Äôt. You need to use a c compiler here
[11:41:48] <FromDiscord> <Rika> Compile it into a static library (no I do not know how)
[11:42:04] <FromDiscord> <Rika> You‚Äôre really making it extremely hard on yourself by static linking; why do you want this anyway?
[11:43:25] <FromDiscord> <$$$> i just simply do not like the dll in the directory üôè
[11:43:43] <FromDiscord> <Elegantbeef> Then dont use a library üòõ
[11:43:53] <FromDiscord> <$$$> how do i do sqlite without a library
[11:43:55] <FromDiscord> <$$$> ü§î
[11:43:59] <FromDiscord> <enthus1ast> @$$$\:  this always depends on the library you want to compile, you must google how this particular library is build statically‚Üµ(@Rika)
[11:44:13] <FromDiscord> <Rika> In reply to @enthus1ast "<@944438185755295744>\:  this always": That‚Äôs why I don‚Äôt know how üòõ
[11:45:08] <FromDiscord> <enthus1ast> thats the reason we cant tell you what to type in, since we would have to google like you \:)
[11:45:54] <FromDiscord> <Rika> ESPECIALLY when it‚Äôs for Windows
[11:46:07] <FromDiscord> <Rika> Windows is a whole different fucker
[11:46:31] <FromDiscord> <enthus1ast> also my feeling is that sqlite is not that often staticlly linked
[11:46:41] <FromDiscord> <enthus1ast> normally applications just ship the dlls
[11:47:27] <FromDiscord> <Rika> The dynamic library system is still kinda broken though tbh
[11:47:38] <FromDiscord> <enthus1ast> on my machine  i have 72 times the sqlite3.dll \:)
[11:48:41] <FromDiscord> <Rika> Almost completely defeats the point of dynamic libraries lol
[11:49:38] <FromDiscord> <enthus1ast> "laughing in docker, kubernetes, flatpack, snap, ....."
[11:50:07] <FromDiscord> <Elegantbeef> Ponders if i have even one sql lib
[11:50:35] <FromDiscord> <Rika> I don‚Äôt know I just thought of a library name for some SQL library in Nim
[11:50:45] <FromDiscord> <Rika> ‚ÄúSequin‚Äù or something
[11:57:08] <FromDiscord> <$$$>  https://media.discordapp.net/attachments/371759389889003532/945597564542132294/unknown.png
[11:57:11] <FromDiscord> <$$$> my brain
[11:57:28] <FromDiscord> <Elegantbeef> `import std/strutils`
[11:57:36] <FromDiscord> <Elegantbeef> Read the compiler error
[11:57:42] <FromDiscord> <$$$> type mismatch
[11:58:04] <FromDiscord> <Elegantbeef> I'm guessing it cannot find a `contains(string, string)`
[12:00:40] <FromDiscord> <$$$> is there a way i can discard the unused things in the tuple? cuz it keeps reminding me its not suee https://media.discordapp.net/attachments/371759389889003532/945598451129929758/unknown.png
[12:00:40] <FromDiscord> <$$$> used
[12:00:49] <FromDiscord> <Elegantbeef> `_`
[12:00:58] <FromDiscord> <$$$> ?
[12:01:05] <FromDiscord> <Elegantbeef> use an underscore
[12:01:17] <FromDiscord> <$$$>  https://media.discordapp.net/attachments/371759389889003532/945598607560699904/unknown.png
[12:01:19] <FromDiscord> <Elegantbeef> That's nim's "dont care" identifier
[12:01:30] <FromDiscord> <Rika> A single underscore
[12:01:31] <FromDiscord> <Elegantbeef> `var (_, directoryName _)`
[12:01:33] <FromDiscord> <$$$> oh alr
[12:04:10] *** Joins: ltriant (~ltriant@118.102.122.246)
[12:06:25] <FromDiscord> <$$$> bro
[12:08:50] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 250 seconds)
[12:24:49] <FromDiscord> <$$$> can i get output from execshellcmd
[12:24:50] <FromDiscord> <$$$> ü§î
[12:25:45] <FromDiscord> <Elegantbeef> `osProc` has `execCmdEx`
[12:26:08] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/osproc.html#execCmdEx%2Cstring%2Cset%5BProcessOption%5D%2CStringTableRef%2Cstring%2Cstring
[12:28:26] <FromDiscord> <$$$> thanks
[12:28:28] <FromDiscord> <$$$> sent a code paste, see https://paste.rs/O6X
[12:28:31] <FromDiscord> <$$$> i was trying to get a string from a url
[12:28:35] <FromDiscord> <$$$> it worked üòÅ
[12:28:35] <FromDiscord> <enthus1ast> waut
[12:28:36] <FromDiscord> <enthus1ast> wait
[12:28:42] <FromDiscord> <$$$> what
[12:28:43] <FromDiscord> <enthus1ast> why you do call curl.exe?
[12:28:47] <FromDiscord> <$$$> string from url
[12:28:55] <FromDiscord> <$$$> cant use httpclient
[12:28:59] <FromDiscord> <enthus1ast> why?
[12:29:13] <FromDiscord> <$$$> httpclient breaks with ssl and i cant use -d:ssl
[12:29:17] <FromDiscord> <$$$> cuz -d:ssl breaks
[12:29:27] <FromDiscord> <enthus1ast> please show the error
[12:29:29] <FromDiscord> <Elegantbeef> no dont lie
[12:29:35] <FromDiscord> <$$$> In reply to @Elegantbeef "no dont lie": what
[12:29:41] <FromDiscord> <Elegantbeef> ssl requires libraries and you're being a contrarian
[12:30:06] *** Quits: xiamx (~xiamx@2001:470:69fc:105::1:5692) (Quit: You have been kicked for being idle)
[12:30:07] <FromDiscord> <enthus1ast> you do not want do distribute a dll, but then call curl.exe \:D
[12:30:14] <FromDiscord> <$$$> curl.exe preinstalled
[12:30:15] <FromDiscord> <$$$> on windows
[12:30:23] <FromDiscord> <$$$>  https://media.discordapp.net/attachments/371759389889003532/945605930744168498/unknown.png
[12:30:26] *** Joins: xiamx (~xiamx@2001:470:69fc:105::1:5692)
[12:30:32] *** Parts: xiamx (~xiamx@2001:470:69fc:105::1:5692) ()
[12:30:35] <FromDiscord> <$$$> installed by default in system32
[12:30:36] <FromDiscord> <$$$> wym
[12:30:38] <FromDiscord> <enthus1ast> this is because your friend has git for windows installed
[12:30:42] <FromDiscord> <$$$> nope
[12:30:49] <FromDiscord> <Elegantbeef> Nah it seems MS ships it for 10/11
[12:30:53] <FromDiscord> <$$$> ye
[12:30:55] <FromDiscord> <Elegantbeef> It's still comically dumb
[12:31:04] <FromDiscord> <Elegantbeef> Just use the library and proper code and quit being weird
[12:31:11] <FromDiscord> <$$$> i refuse to ship a dll
[12:31:15] <FromDiscord> <enthus1ast> "If your Windows 10 build is 17063, or later, cUrl is included by default. " crazy
[12:31:22] <FromDiscord> <enthus1ast> nice to know actually
[12:31:47] <FromDiscord> <Rika> Your loss
[12:31:56] <FromDiscord> <$$$> In reply to @Rika "Your loss": how curl works fine
[12:32:13] <FromDiscord> <$$$>  https://media.discordapp.net/attachments/371759389889003532/945606391358435358/unknown.png
[12:32:14] <FromDiscord> <$$$> btw
[12:32:26] <FromDiscord> <$$$> In reply to @$$$ "": ^^ httpclient ssl error
[12:32:36] <FromDiscord> <enthus1ast> yes you must also distribute these
[12:32:37] <FromDiscord> <enthus1ast> OR
[12:32:56] <FromDiscord> <$$$> In reply to @enthus1ast "yes you must also": but im using curl so i dont have 2 wym
[12:32:56] <FromDiscord> <enthus1ast> you can try to use treeform/puppy  https://github.com/treeform/puppy
[12:33:05] <FromDiscord> <$$$> In reply to @enthus1ast "you can try to": my code worked dawg üò≠
[12:33:49] <FromDiscord> <$$$> sent a code paste, see https://paste.rs/k4q
[12:34:00] <FromDiscord> <enthus1ast> yeah, if it works, then call it a day. ‚ÜµIt's just, calling out to external applications is always a little fishy
[12:34:35] <FromDiscord> <Rika> Well if he‚Äôs happy with it what are we to object no?
[12:35:19] <FromDiscord> <$$$> In reply to @enthus1ast "yeah, if it works,": fishy as in bad or like malware fishy
[12:35:23] <FromDiscord> <Rika> Both
[12:35:26] <FromDiscord> <$$$> fair
[12:35:45] <FromDiscord> <Rika> We can‚Äôt help you here if you do get malware issues by the way
[12:36:03] <FromDiscord> <$$$> yea thats fair, this isnt malware tho üôè
[12:38:42] <FromDiscord> <Elegantbeef> That's what they all say
[12:39:17] <FromDiscord> <$$$> In reply to @Elegantbeef "That's what they all": üò≠
[12:39:26] <FromDiscord> <Rika> In reply to @$$$ "yea thats fair, this": The antivirus can‚Äôt tell lol
[12:39:42] <FromDiscord> <$$$> In reply to @Rika "The antivirus can‚Äôt tell": wym
[12:40:00] <FromDiscord> <Rika> If the antivirus flags your program as a virus
[12:40:10] <FromDiscord> <Rika> Maybe since it does a call to curl
[12:41:39] <FromDiscord> <$$$> naww it doesnt flag it
[12:42:08] <FromDiscord> <Rika> Well good for you
[12:42:12] <FromDiscord> <Rika> Anyway yeah
[12:56:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[13:01:59] <FromDiscord> <$$$> In reply to @Rika "Compile it into a": now to get back to figuring this out üòî
[13:37:03] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 272 seconds)
[13:38:17] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:06:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[14:11:04] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4)
[14:15:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4) (Client Quit)
[14:23:17] *** Joins: fowl0 (~fowlmouth@user/fowl)
[14:23:30] *** Quits: fowl (~fowlmouth@user/fowl) (Ping timeout: 256 seconds)
[14:23:30] *** fowl0 is now known as fowl
[14:26:26] <FromDiscord> <$$$> naw sum1 gotta help me
[14:30:15] <FromDiscord> <demotomohiro> I think you need to read `Readme` or `INSTALL` file in the C library you want to use to build it as static lib.
[14:31:45] <FromDiscord> <$$$> is there any alternative to using a static lib or a dll
[14:33:23] <FromDiscord> <demotomohiro> Implement it yourself? Or
[14:34:07] <FromDiscord> <$$$> In reply to @demotomohiro "Implement it yourself? Or": shii might be easier than doin this static lib shii üò≠
[14:34:58] <FromDiscord> <demotomohiro> Why do you avoid dll?  That is used by many windows projects  for long time.
[14:35:13] <FromDiscord> <$$$> In reply to @demotomohiro "Why do you avoid": it look ugly in ma project directory i cant stand it üôè
[14:37:43] <FromDiscord> <demotomohiro> How about to create a new directory and put dlls there and add the path to the directory to `PATH` enviroment variable?
[14:38:33] <FromDiscord> <$$$> In reply to @demotomohiro "How about to create": i mean yah but if i redistribute the file they wont have the path variale
[14:38:36] <FromDiscord> <$$$> variable 
[14:39:03] <FromDiscord> <$$$> could i make a file that downloads the dll and then runs the main file ü§î
[14:43:37] <FromDiscord> <demotomohiro> You can run `curl` or `wget` using `executeProcess` or `startProcess` in osproc module to download dlls.
[14:43:52] <FromDiscord> <$$$> In reply to @demotomohiro "You can run `curl`": can i do that in the same file ?
[14:44:29] <FromDiscord> <$$$> like can that code be in the same file as the code that imports the library that needs the dll
[14:45:11] <FromDiscord> <$$$> sent a code paste, see https://play.nim-lang.org/#ix=3Qnh
[14:47:03] <FromDiscord> <demotomohiro> I think you can do it but you would need to load functions in dlls using `dynlib` module.
[14:47:04] *** Joins: PMunch (~PMunch@user/pmunch)
[14:47:47] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/dynlib.html
[14:47:50] <FromDiscord> <fail> In reply to @demotomohiro "I think you can": just loadLib(dll) ?
[14:50:31] <FromDiscord> <demotomohiro> I think you need to call `symAddr` to load each functions after `loadLib(dll)`.
[14:51:43] <FromDiscord> <fail> let procedure = cast[procedureName](lib.symAddr(procedureName))
[14:51:44] <FromDiscord> <fail> ig
[14:52:33] <FromDiscord> <fail> oh wait it says function
[14:52:37] <FromDiscord> <fail> arent functions called procedures
[14:52:38] <FromDiscord> <fail> ü§î
[14:54:06] <FromDiscord> <demotomohiro> I think Doc calls function that is implemented by C or other than Nim.
[14:57:33] <FromDiscord> <fail> sent a long message, see http://ix.io/3Qnk
[14:59:44] <FromDiscord> <demotomohiro> Then, you need separate programs. One download dlls another one use dlls.
[15:00:14] <FromDiscord> <fail> In reply to @demotomohiro "Then, you need separate": alr but what would be the difference from downloading the dll in the same file im just kinda confused ü§î
[15:00:29] <FromDiscord> <demotomohiro> Or wrap sqlite yourself using `dynlib`.
[15:00:51] <FromDiscord> <fail> In reply to @fail "alr but what would": &
[15:00:52] <FromDiscord> <fail> ^
[15:02:12] <FromDiscord> <demotomohiro> Program that use dll don't need to use `dynlib`,  just can use existing wrapper.
[15:03:40] <FromDiscord> <fail> In reply to @demotomohiro "Program that use dll": cant i just download it and then import the wrapper
[15:05:47] <FromDiscord> <demotomohiro> How about to ask the question to wrapper developer?
[15:10:57] <FromDiscord> <demotomohiro> I found an article about dll. https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/dynamic-link-library
[15:12:15] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:12:43] <FromDiscord> <demotomohiro> So there are Load-time dynamic linking and Run-time dynamic linking.
[15:26:03] <PMunch> @ElegantBeef, any idea why this doesn't work? http://ix.io/3Qnt
[15:26:23] <PMunch> I'm trying to implement yglukhov's proposal here: https://github.com/PMunch/ratel/issues/10#issuecomment-1047515881
[15:27:11] <PMunch> Which means I need to read in config.nims files, but I don't really want to set any of the switches, so I thought I create a shim library which just stored them in a table or something
[15:27:27] <PMunch> The error I get is this: Script Error: /home/peter/.nimble/pkgs/ratel-0.1.0/private/boards/helpers/avrBoardConf.nim:1:1 undeclared identifier: '--'
[15:28:14] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:49] <NimEventer> New question by congusbongus: How to pass custom arguments to a task?, see https://stackoverflow.com/questions/71221025/how-to-pass-custom-arguments-to-a-task
[15:40:33] *** Quits: rb (~augh@209.141.39.190) (Ping timeout: 272 seconds)
[16:45:01] *** Joins: jjido (~Denis@94.4.149.217)
[16:47:21] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:30:42] <FromDiscord> <qb> sent a code paste, see https://paste.rs/WsE
[17:30:50] <FromDiscord> <qb> (edit) "https://play.nim-lang.org/#ix=3Qop" => "https://play.nim-lang.org/#ix=3Qoq"
[17:31:29] <FromDiscord> <qb> (edit) "https://play.nim-lang.org/#ix=3Qoq" => "https://play.nim-lang.org/#ix=3Qor"
[17:31:40] <FromDiscord> <qb> (edit) "https://play.nim-lang.org/#ix=3Qor" => "https://play.nim-lang.org/#ix=3Qos"
[17:31:47] <FromDiscord> <qb> (edit) 
[17:33:25] <FromDiscord> <Rika> you do not
[17:33:31] <FromDiscord> <Rika> unless you're fine with static strings
[17:34:34] <FromDiscord> <Rika> sent a code paste, see https://paste.rs/zWb
[17:36:39] <FromDiscord> <qb> mh :/
[17:36:41] <PMunch> It's too bad we don't have something like `whenCase`..
[17:38:14] <FromDiscord> <vindaar> @qb\: what do you need this for?
[17:38:30] <FromDiscord> <vindaar> usually knowing that makes it easier to give you a better alternative
[17:41:42] <FromDiscord> <qb> sent a code paste, see https://play.nim-lang.org/#ix=3QoA
[17:42:38] <FromDiscord> <qb> (edit) "https://play.nim-lang.org/#ix=3QoA" => "https://play.nim-lang.org/#ix=3QoC"
[17:42:48] <FromDiscord> <Rika> ts must be a static string
[17:42:58] <FromDiscord> <Rika> aka a string determinable at compile time
[17:43:08] <FromDiscord> <Rika> theres no way around it
[17:43:09] *** Joins: arkurious (~arkurious@user/arkurious)
[17:43:11] <FromDiscord> <qb> Alright
[17:43:14] <FromDiscord> <Rika> in that way i mean
[17:43:19] <FromDiscord> <Rika> there are ways around it like boxing
[17:43:47] <FromDiscord> <Rika> which is wrapping every possible type in another box type using obj variants
[17:44:12] <FromDiscord> <Rika> but otherwise like that you must use static string
[18:16:38] <FromDiscord> <demotomohiro> How about to use generics? Like `proc read[T](a: Process): T`.
[18:20:21] <FromDiscord> <demotomohiro> Or `proc read[T](a: Process; ty: typedesc[T]): T`
[18:41:00] <FromDiscord> <Schelz> Any idea if winim is able to create Windows like CreateWindowEx ?
[18:41:09] <FromDiscord> <Schelz> or is there any module that can done that >
[18:41:13] <FromDiscord> <Schelz> (edit) ">" => "?"
[18:42:29] <FromDiscord> <qb> Isn't there a whole gui library built on top of winim?
[18:42:49] <FromDiscord> <qb> https://github.com/khchen/wNim
[18:43:47] <FromDiscord> <Schelz> That ain't help, I try to wrap d3d9 and I need the stock windows api to create window
[18:44:20] <FromDiscord> <qb> i see
[19:10:45] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[19:12:06] <FromDiscord> <Hamid_Bluri> hey, what kind of error it is üòï‚Üµ‚Üµ> cannot prove that it's safe to initialize 'content' with the runtime value for the discriminator 'kind'‚Üµ> https://media.discordapp.net/attachments/371759389889003532/945707026519044146/unknown.png
[19:14:34] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://paste.rs/dtK
[19:16:20] <FromDiscord> <Hamid_Bluri> ah I think `kind` is not exported üòÑ
[19:19:45] *** Joins: ltriant (~ltriant@118.102.122.246)
[19:20:12] <ehmry> if i'm compiling foo.nim that imports and external bar.nim, can I get the compiler to load both foo.nim.cfg and bar.nim.cfg, or do I have to use pragmas in bar.nim to do thing like set cincludes?
[19:24:46] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 250 seconds)
[19:34:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:35:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[19:36:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:55:21] <FromDiscord> <Waldecir Santos> In reply to @hamidb80 "hey, what kind of": Love the theme, what is the name ? üòÑ
[20:12:16] <FromDiscord> <Deceptive> how do i parse info about user's sysem in nim?
[20:20:38] *** Joins: rwb (~augh@209.141.39.190)
[20:23:02] <NimEventer> New thread by Reversem3: New programming for beginners/intermediate , see https://forum.nim-lang.org/t/8939
[20:26:56] <FromDiscord> <Deceptive> sent a code paste, see https://play.nim-lang.org/#ix=3Qq9
[20:27:09] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4)
[20:33:13] <FromDiscord> <huantian> Add () to your function call prob
[20:35:56] *** Joins: rockcavera (~rc@192.12.112.205)
[20:35:56] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[20:35:56] *** Joins: rockcavera (~rc@user/rockcavera)
[20:53:46] <FromDiscord> <chancy> should `--cpu:arm64` be inherently passing `-arch arm64` to the C compiler?
[20:59:03] <FromDiscord> <demotomohiro> You can see how Nim call gcc with `--listcmd` option
[21:00:07] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[21:08:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602f:2025:c843:6cf4)
[21:17:03] *** Joins: pro (~pro@user/pro)
[21:44:48] *** Joins: shadow0133 (~shadow013@194.146.248.72)
[21:51:08] <shadow0133> I'm trying to compile (custom fork of) nitter, which uses nimble, to raspberry pi 1 b+. If I try crosscompiling locally, resulting executable crashes with illegal hardware instruction. I want to compile project to c, and compile c files on raspberry, but I can't get nimble to output them.
[21:58:55] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[22:02:32] <nexeq> guys what is the best http library for nim?
[22:17:40] <FromDiscord> <ynfle> In reply to @shadow0133 "I'm trying to compile": What is the command that you are using?
[22:20:21] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[22:23:15] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Client Quit)
[22:24:14] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> how to solve `dumpNumberOfInstances` undeclared identifier? i compile the source by `nim c -d:nimTypeNames`, nim was installed via `choosenim stable` and it's 1.6.4
[22:26:01] <FromDiscord> <ynfle> In reply to @haolian9 (È´òÊµ©‰∫Æ) "how to solve `dumpNumberOfInstances`": Which gc are you using?
[22:26:22] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> i just wanna say it‚Üµ(@ynfle)
[22:26:33] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> actually i use --mm\:orc
[22:27:02] <FromDiscord> <ynfle> In reply to @haolian9 (È´òÊµ©‰∫Æ) "actually i use --mm\:orc": Try with out that, I'm not sure if it's supposed to work with the other GCs other than refc
[22:27:26] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> i changed it to refc, it worked‚Üµ(@ynfle)
[22:27:56] <FromDiscord> <ynfle> In reply to @haolian9 (È´òÊµ©‰∫Æ) "i changed it to": It talks about it at the bottom of the refc doc https://github.com/nim-lang/Nim/blob/a0073d2d4c18f030eccef98a130f7f1f2ad9d67a/doc/refc.rst
[22:30:09] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> oh, thank you! the link's title `Tweaking the refc GC`, i was blind‚Üµ(@ynfle)
[22:31:21] <FromDiscord> <Phil> ... are y'all keeping your codebases tidy through sheer force of will and dilligence, are you not keeping it tidy or are there formatters out there that I'm just not aware of?
[22:36:51] <shadow0133> @ynfle nimble build -d:release --compileOnly --genScript
[22:39:15] *** Quits: pro (~pro@user/pro) (Quit: pro)
[22:42:24] <FromDiscord> <qb> Someone should contribute to https://github.com/curlconverter/curlconverter
[22:42:38] <FromDiscord> <qb> rust is there but not nim. What a shame
[22:44:25] <FromDiscord> <Phil> educate me, isn't the main purpose of curl to be an HTTP client and we have an http client lib? Or is that too limited (I haven't used it so no idea on my end)
[22:44:32] <FromDiscord> <Phil> (edit) "educate me, isn't the main purpose of curl to be an HTTP client and we have an http client lib? Or is that too limited (I haven't used it so no idea on my end) ... " 03added "?"
[22:46:35] <FromDiscord> <qb> That converter converts your curl command to code. So you can use the requests on the http client lib on nim without typing everything manually
[22:47:25] <FromDiscord> <Phil> Ah, so more a convenience thing to not have to use the client lib?
[22:47:30] *** Joins: vicfred (~vicfred@user/vicfred)
[22:47:46] <FromDiscord> <Phil> Or simplify using the client lib I guess
[22:47:53] <FromDiscord> <qb> https://curlconverter.com/
[22:47:58] <FromDiscord> <Phil> (edit) "Or simplify using the client lib I guess ... " 03added "would be more accurate"
[22:48:30] <FromDiscord> <Phil> Ohhh as in you literally get that command written in nim code, in which case it'd be implemented to use the client lib
[22:48:59] <FromDiscord> <Phil> Thanks for the patience with me there ^^
[22:52:04] <FromDiscord> <ynfle> In reply to @shadow0133 "<@757977788056600719> nimble build -d:release": That won't cross compile. What os/arch are you on? Check out https://nim-lang.org/docs/nimc.html
[22:54:41] <shadow0133> @ynfle x86_64, debian. I'm trying to compile to C (not executable), then copy C files to target (Rpi, arm6l, raspian which is debian derivative) and compile C files there
[22:59:37] <FromDiscord> <ynfle> In reply to @shadow0133 "<@757977788056600719> x86_64, debian. I'm": The c that is generated is different depending on the target os, arch.
[23:00:04] *** Quits: rockcavera (~rc@user/rockcavera) (Ping timeout: 272 seconds)
[23:02:24] <shadow0133> @ynfle I'm not getting any C files either way
[23:03:12] <FromDiscord> <ynfle> In reply to @shadow0133 "<@757977788056600719> I'm not getting": You are, they're probably in the `nimcache` folder (probably `.cache/nim`)
[23:03:38] <FromDiscord> <ynfle> Try `--nimcache:nimcache`
[23:03:55] <FromDiscord> <ynfle> Which will output them in the `nimcache` folder in the current directory
[23:04:11] <FromDiscord> <ynfle> @shadow0133 ‚òùÔ∏è
[23:10:20] <FromDiscord> <b4mbus> can I somehow
[23:10:36] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3QqU
[23:10:39] <FromDiscord> <b4mbus> fold by size?
[23:11:31] <FromDiscord> <b4mbus> (edit) "https://play.nim-lang.org/#ix=3QqU" => "https://play.nim-lang.org/#ix=3QqV"
[23:13:56] <FromDiscord> <b4mbus> I have no idea how to do it
[23:13:58] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3QqW
[23:14:31] <FromDiscord> <ynfle> Why do you mean fold by size?
[23:14:32] <FromDiscord> <b4mbus> sent a code paste, see https://paste.rs/l5S
[23:15:31] <FromDiscord> <ynfle> In reply to @b4mbus "fold by size?": Fold is to combine an array/seq into a single value, do you want to add all of the lengths of the strings together?
[23:15:45] <FromDiscord> <b4mbus> In reply to @ynfle "Fold is to combine": > This version of foldl gets a starting parameter. This makes it possible to accumulate the sequence into a different type than the sequence elements.
[23:15:47] <FromDiscord> <b4mbus> well apparently not only
[23:15:55] <FromDiscord> <b4mbus> In reply to @ynfle "Fold is to combine": Yers
[23:15:57] <FromDiscord> <b4mbus> (edit) "Yers" => "Yes"
[23:16:38] <FromDiscord> <b4mbus> and fold does not necessarily need to combine a whole collection into a single value
[23:17:18] <FromDiscord> <b4mbus> Nims syntax gets kinda weird sometimes hmm
[23:21:19] *** Joins: ltriant (~ltriant@118.102.122.246)
[23:21:39] <shadow0133> @ynfle I've got the c code, but compiler complains about missing nimbase.h, am I supposed to get it from https://github.com/nim-lang/csources_v1 ?
[23:22:38] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3Qr2
[23:22:51] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[23:22:54] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3Qr3
[23:23:34] <FromDiscord> <ynfle> In reply to @shadow0133 "<@757977788056600719> I've got the": It should be installed on your system, but you can get it from the repo https://github.com/nim-lang/Nim/blob/devel/lib/nimbase.h
[23:26:22] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[23:28:20] <FromDiscord> <ynfle> In reply to @shadow0133 "<@757977788056600719> I've got the": csources is for boostrapping the compiler, you don't need a compiler as you have already done the nim compilation stage
[23:29:05] <FromDiscord> <ynfle> In reply to @ynfle "It should be installed": Someone wrote a blog post on using the c processors to not need nimbase.h
[23:30:58] <FromDiscord> <Hamid_Bluri> In reply to @Waldecir Santos "Love the theme, what":  https://media.discordapp.net/attachments/371759389889003532/945772171458936882/unknown.png
[23:31:13] <FromDiscord> <Hamid_Bluri> https://marketplace.visualstudio.com/items?itemName=ceciljacob.code-plus-theme&ssr=false#review-details
[23:31:36] <FromDiscord> <Waldecir Santos> Thank you
[23:31:56] <FromDiscord> <Hamid_Bluri> you're welcome
[23:34:34] <FromDiscord> <ynfle> In reply to @ynfle "Someone wrote a blog": @shadow0133 https://zen.su/posts/amalgamating-nim-programs/
[23:47:41] <FromDiscord> <lpha3ch0> sent a long message, see http://ix.io/3Qrc
[23:49:32] *** Joins: kenran (~kenran@200116b82b49e8006646f20137f4ed5b.dip.versatel-1u1.de)
[23:49:36] <FromDiscord> <ynfle> In reply to @lpha3ch0 "I need to add": You can try threadpool, but async would work too
[23:53:12] <FromDiscord> <lpha3ch0> In reply to @ynfle "You can try threadpool,": Thanks, I'm looking into threadpool now.
[23:57:24] <FromDiscord> <mratsim> In reply to @lpha3ch0 "I need to add": you have an example wikipedia scrapper in Nim in action. For that use case, async is sufficient and no need to go multithreaded.
