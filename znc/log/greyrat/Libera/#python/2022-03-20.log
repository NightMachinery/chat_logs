[00:00:04] <solrize> but, that just seems like more layers of cruft to deal with stuff being too slow at the bottom
[00:00:09] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[00:00:28] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Quit: Leaving)
[00:01:22] <solrize> pdumper is emacs specific but things like it have been done for many other languages.  erlang and ocaml can boot in something like 20 msec from a bare hypervisor, without even an OS kernel
[00:01:29] *** Joins: TheCat (~TheCat@user/z-cat)
[00:01:36] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[00:01:46] <solrize> https://dancol.org/pdumperpres.pdf  is a good presentation about pdumper
[00:01:54] <solrize> explains what it does and why it helps
[00:02:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:02:16] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[00:02:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[00:02:18] *** Joins: fling (~fling@user/fling)
[00:02:25] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[00:02:39] *** Joins: TheCat (~TheCat@user/z-cat)
[00:02:56] <solrize> http://archy.org.uk/wp/?p=448  here is another unexec article with a pointer to a different implementation, on github.  i just found that and have not tried that.  but the pdumper slides indicate that emacs unexec had become a huge mess over the years
[00:03:13] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[00:03:14] <solrize> i remember studying the original one and it was very simple in those days
[00:03:22] <bolnav[m]> restore from a initialized state file, if it is present
[00:03:25] <solrize> i feel like this type of feature deservs OS support
[00:03:29] <solrize> bolnav[m], yeah that's the idea
[00:04:39] <KirkMcDonald> What's this do about file descriptors?
[00:04:45] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:04:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:05:11] <carlio> presumably you'd have closed fds properly at the end of a request
[00:05:20] <carlio> so they'd not need to be stored
[00:05:54] <carlio> would therefore require establishing new ones for DB connections etc though so it's not a panacea
[00:05:54] <KirkMcDonald> In other words the scope of what can be done during initialization is limited.
[00:05:57] <solrize> the application would make a certain amount of preparation before dumping state
[00:06:26] <solrize> yeah but emacs starts up in about 10 milliseconds compared to what seems like minutes for calibre ;)
[00:06:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[00:06:46] <solrize> emacs has as many preloads as a good sized python app
[00:06:58] *** Quits: Rikem (~mike@user/rikem) (Quit: WeeChat 3.4)
[00:07:11] <bolnav[m]> Linux has criu "checkpoint/restore in userspace" which can handle file descriptors IIRC
[00:07:28] <solrize> it is even possible to transfer open files between processes using SCM_RIGHTS in linux
[00:07:28] <bolnav[m]> Python could borrow some idea from it
[00:07:32] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 240 seconds)
[00:07:39] <KirkMcDonald> bolnav[m]: I imagine that only works to a point.
[00:07:40] <solrize> oh i didn't know criu was in linux
[00:07:57] <KirkMcDonald> bolnav[m]: You're not going to throw a socket in there, e.g.
[00:08:51] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[00:10:21] <bolnav[m]> KirkMcDonald, it claims to support sockets at least partially, but my point is that python could at least try to look into the general approach of dumping/restoring https://criu.org/Sockets
[00:10:34] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[00:11:19] <KirkMcDonald> There are an enormous number of practical problems.
[00:11:47] <KirkMcDonald> This emacs presentation makes the key point that all the pointers change, and CPython is basically just a huge pile of pointers.
[00:11:51] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[00:12:20] <Xano> Is there a way to declare a type as the intersection of two classes? I was hoping protocols, but they cannot extend classes.
[00:12:33] <solrize> lisp is also huge pile of pointers ;).  there is a heap scan at reload time and it takes some milliseconds to do the relocation but it is not bad
[00:12:36] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[00:13:33] <solrize> i just timed an emacs startup on a low end vps and it is around 10 msec
[00:13:44] *** Rust is now known as ShitbirdGrimshaw
[00:14:05] <KirkMcDonald> A bigger problem is that nontrivial CPython programs tend to use a lot of C extension modules.
[00:14:24] <KirkMcDonald> So you've got a huge pile of state there which isn't actually part of Python.
[00:15:48] <jinsun__> Xano: not yet https://github.com/python/typing/issues/213
[00:15:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[00:16:37] <jinsun__> you can do intersections of Protocols by subclassing more than one, but that doesn't work for normal classes
[00:17:02] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[00:17:17] <solrize> hmm, i guess in the (until recently at least) emacs situation all those modules were linked into temacs
[00:17:26] <Xano> jinsun__, Yeah I've got one or two of those after somebody recommended protocols earlier this week, but now I find myself in need for an intersection involving a concrete class. Oh well! THanks :)
[00:17:34] <solrize> python's c modules are normal dynloads?  do they do a lot of initialization?
[00:18:06] *** Joins: TheCat (~TheCat@user/z-cat)
[00:18:12] <KirkMcDonald> solrize: They are and they can run any code they like on initialization.
[00:18:32] <solrize> KirkMcDonald, that is ok in principle, the question is how much time they spend doing that
[00:18:41] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:19:30] <KirkMcDonald> solrize: If you're proposing deferring the loading of C extensions until the actual startup time, that's a whole can of worms, now.
[00:20:04] <KirkMcDonald> solrize: What if they were needed during the rest of the initialization phase?
[00:21:21] *** Joins: hexed (~k@xolan.net)
[00:21:33] <KirkMcDonald> solrize: In principle, I can see gaining some advantage from this idea, but the scope of what can be pre-initialized like this is limited.
[00:21:51] *** gentooclimax is now known as climax
[00:21:57] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[00:22:30] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[00:22:33] <KirkMcDonald> solrize: And I am pretty sure it would mean a substantial rewrite of CPython.
[00:22:41] <KirkMcDonald> Or at least of major parts of it.
[00:23:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[00:23:19] <KirkMcDonald> solrize: And all so you can use CGI instead of the several other approaches which already exist for more-or-less this *exact* reason?
[00:23:21] <solrize> they would get loaded in the same order as before, is that so bad?
[00:23:32] *** Quits: justm3 (~Username@84.84.41.7) (Ping timeout: 240 seconds)
[00:23:39] <solrize> cgi is venerable and works, breaking it is python 3 all over again
[00:23:40] *** justm33 is now known as justm3
[00:23:55] <solrize> apache supports cgi
[00:24:03] <KirkMcDonald> Apache supports FastCGI, too.
[00:24:03] <solrize> idk what alternatives it supports
[00:24:17] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (Read error: Connection reset by peer)
[00:24:21] <solrize> fastcgi keeps the script loaded across requests, that's the point
[00:24:30] <solrize> or does it fork in the case where the script is not already running
[00:24:45] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[00:24:48] <KirkMcDonald> FastCGI is a wire protocol. The thing it's talking to can do whatever.
[00:25:08] <solrize> then something else has to be listening to the other end of the wire.  so you need another daemon besides the httpd
[00:25:11] <KirkMcDonald> Though as I recall the Apache approach confuses the wire protocol with the actual process management.
[00:25:13] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:25:15] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Ping timeout: 252 seconds)
[00:25:32] <solrize> cgi is like socketserver(forkingserver) or whatever it is called
[00:25:36] *** Quits: Celeo (~znc-admin@user/celeo) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:25:54] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[00:25:59] <KirkMcDonald> Well, no, because that bit of SocketServer forks but doesn't exec.
[00:26:01] <solrize> does cpython dynload the modules for its basic types?  hmm
[00:26:10] <KirkMcDonald> solrize: No, those are part of the interpreter.
[00:26:19] *** Joins: clarkk (~clarkk@2a00:23c7:d106:2600:6003:148f:6e69:1d87)
[00:26:23] <solrize> socketserver forks and then cgihttpserver execs
[00:26:36] <KirkMcDonald> Sure.
[00:26:36] <solrize> or cgirequesthandler
[00:27:03] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 256 seconds)
[00:27:39] <solrize> i will ask the emacs guys how emacs deals with dynloading jit compiled lisp stuff
[00:27:40] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (Quit: ~ Server made a boo boo.)
[00:27:47] <KirkMcDonald> In any case I would less describe CGI as "venerable" than "heinously obsolete."
[00:28:01] <solrize> not worse than C :)
[00:28:07] <KirkMcDonald> C is also bad, yes.
[00:28:08] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:29:14] <solrize> CGI does the obvious right thing and all the alternatives amount to multiple layers of cruft to deal with python startup being too slow.  didn't the whole web run on perl cgi's for years?  on much slower hardware than we have now
[00:30:03] <KirkMcDonald> Yeah, and technology has advanced.
[00:30:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:30:12] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[00:30:15] <KirkMcDonald> What you're calling "cruft" I would call "much more efficient."
[00:30:27] *** Joins: roottenxou (~root@ppp005054075172.access.hol.gr)
[00:30:39] *** Joins: Celeo (~znc-admin@user/celeo)
[00:30:57] <KirkMcDonald> Startup time is slow, yes. This is not a thing that is limited to Python. So don't gate your request handling on startup times.
[00:30:58] <solrize> if it was fast enough before the cruft got added, then the cruft is to compensate for slowdowns that have happened since then.  so the slowdowns are the heinous part
[00:31:19] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[00:31:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:31:30] <roottenxou> https://github.com/GiorgosXou/TUIFIManager | A cross-platform terminal-based file manager (and component), meant to be used with a Uni-Curses project or as is.| supports touch in TERMUX
[00:31:42] <KirkMcDonald> ... Well, no. These things were invented to address the inefficiencies of the older ways of doing things.
[00:31:43] <solrize> ok let me do an exec benchmark.  i did a fork test and got 10k forks per second
[00:31:50] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[00:32:07] <KirkMcDonald> There's a reason FastCGI is called "Fast"CGI.
[00:32:09] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[00:32:28] <KirkMcDonald> It's because CGI is dogshit slow. Because it has to do everything on every request all the time.
[00:32:38] *** Joins: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr)
[00:32:51] <solrize> what inefficiencies?  if the stuff worked on 1980s hardware it was efficient enough.  fastcgi was invented to handle 1000s of requests per second, a regular low traffic page doesn't need that any more than it needs hadoop
[00:32:54] <KirkMcDonald> Unless you jump through hoops to reinvent, like... preforking.
[00:33:41] <KirkMcDonald> solrize: Just because it worked on slower hardware doesn't mean it wasn't also more resource-intensive than it needed to be.
[00:34:38] <solrize> if it worked on slower hardware then it was as resource-conserving as it needed to be.  i mean we're talking about python aren't we?  it's already 50x slower than C
[00:34:45] <KirkMcDonald> But also: Sure, it's not the 1980s any more. Programs do more things on startup.
[00:34:50] <solrize> why?
[00:34:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:35:03] <solrize> they don't have to do those things.  or at least simple programs don't
[00:35:33] <KirkMcDonald> It's really, really easy for "simple program" to conceal "imports a substantial dependency."
[00:35:39] <solrize> i get there are huge application stacks out there, maybe they need fastcgi, maybe they are also cruft
[00:35:55] *** Quits: roottenxou (~root@ppp005054075172.access.hol.gr) (Quit: WeeChat 2.8)
[00:36:14] *** Parts: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr) ()
[00:36:14] *** Joins: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr)
[00:36:25] <solrize> i see, importing bs4 took maybe 120 msec
[00:36:35] <solrize> i have a cgi that uses bs4 and i don't really notice the delay
[00:37:01] *** Quits: aslicedbanjo (~aslicedba@host86-178-157-138.range86-178.btcentralplus.com) (Quit: Leaving.)
[00:37:02] <solrize> but, a snapshot mechanism would take care of that
[00:38:02] <KirkMcDonald> Well, we don't have it.
[00:38:03] <solrize> looking at criu.org
[00:38:31] <KirkMcDonald> And if you really need CGI, you'll be able to nab the legacy module as a third-party package.
[00:40:06] <solrize> yeah i'll do that and live with it, i fully intend to keep using cgi, but istm that python has at least 2 problems here (slow startup, and willingness to break working code).  every time someone suggests something like that in linux, linus torvalds goes on a rant about not breaking userspace, and it has been the right thing
[00:40:06] *** Joins: sobkas (~sobkas@95.175.17.217)
[00:40:52] <purplex> why does df.sort_values doesn't sort by '0'? when i sort it comes as 1, 2, 3, 0 should be 0, 1, 2, 3 .. i have been googling for too long, maybe not looking at the right place
[00:40:55] <KirkMcDonald> Linux has it easy, in comparison.
[00:41:24] <solrize> purplex, what module?
[00:41:33] <KirkMcDonald> Linux can actually have some idea what the interface between userspace and kernelspace looks like.
[00:41:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:41:39] <purplex> pandas dataframe
[00:41:47] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[00:41:49] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Ping timeout: 240 seconds)
[00:41:52] <solrize> oh idk then purplex
[00:42:29] *** Parts: bolnav[m] (~bolnavm]@2001:470:69fc:105::1683) ()
[00:42:48] <KirkMcDonald> But: cgi is dead. It is wholly reasonable for the CPython dev team to want to get out of the CGI business.
[00:43:36] *** Quits: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net) (Remote host closed the connection)
[00:43:37] <solrize> KirkMcDonald, i don't see what python has harder.  i mean if there is stuff that relied on undocumented interfaces (as a lot of linux user code apparently does), that is bad, but if something is documented then breaking it is a big event.  last time i know of that in the C world was use-after-free being invalidated and that's now a recurring source of bugs
[00:44:14] <solrize> i didn't realize until seeing in the pdumper slides that old OS's had snapshot support and unix didn't
[00:44:20] <solrize> wonder if that is fixable
[00:44:42] <jinsun__> purplex: I don't see the behavior you describe, it sorts correctly when I try, https://bpa.st/KVDA
[00:44:58] <KirkMcDonald> solrize: The interface between "the Python programming language" and "every piece of Python code ever written" is rather larger and more nebulous.
[00:45:07] <SnoopJ> 3.11 should hopefully get a nice boost to startup speed, there are a lot of modules being added to the "frozen" set
[00:45:35] <solrize> SnoopJ, the issue here is modules loaded by the user app, including big stuff like bs4, numpy or whatever
[00:45:50] <SnoopJ> solrize, those are not part of runtime startup unless you are working with a custom runtime.
[00:46:06] <solrize> SnoopJ, yeah but the idea is to make the user app start fast
[00:46:11] <SnoopJ> (it's possible to freeze those, too, if you have cause for it, but at that point you're customizing the runtime)
[00:46:18] <KirkMcDonald> solrize: Is it a breaking change to *add* a function to a module? In principle, Python code could introspect on the content of that module, and adding the function would alter its behavior.
[00:46:53] <SnoopJ> re: stdlib freezing: https://bugs.python.org/issue45661
[00:47:17] <purplex> jinsun_: opps, your right, i was sorting on an unwanted column later in code.. thanks for confirming.
[00:47:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:47:32] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1c54:444a:a40b:a91e) (Ping timeout: 240 seconds)
[00:47:33] <solrize> KirkMcDonald, if the python reference manual documents that function X is absent from standard module Y, and then someone goes and adds function X, that is a breaking change
[00:47:44] <SnoopJ> maybe a better ticket, since it includes an observation of startup enhancement (Eric Snow says he sees 15%!) https://bugs.python.org/issue45020
[00:47:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:48:18] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:48:26] <SnoopJ> solrize, does the reference manual do this anywhere?
[00:48:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:48:31] <KirkMcDonald> solrize: Documenting that something is absent being distinct from the thing merely being absent.
[00:48:36] <SnoopJ> (document a not-feature, that is)
[00:49:06] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 245 seconds)
[00:49:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:49:19] <solrize> KirkMcDonald, exactly so.  if the absence is undocumented and a user app relies on it, that's just like relying on any other undocumented internal details of a library, i.e. not guaranteed.  in that way, python has it better than linux
[00:50:44] <solrize> relying on reference counting to close files before the "with" statement was added was a classic example
[00:50:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:51:49] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[00:52:14] <solrize> SnoopJ, nice, i wonder what happens with a much bigger module collection like in a big app
[00:52:23] *** Joins: shuck (~shuck@user/shuck)
[00:52:50] <SnoopJ> as I said above, they are not part of runtime startup. Those changes won't affect what happens after runtime startup
[00:52:58] <solrize> https://bugs.python.org/issue45020#msg400373   interesting
[00:53:16] <SnoopJ> so if the after-startup imports dominate the startup (and usually they will) it probably won't be noticeable
[00:53:16] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[00:53:16] <solrize> SnoopJ, yeah i am wondering what happens if someone experimentally loads them all into the runtime
[00:53:35] <solrize> hmm i guess those frozen modules have to be written in C
[00:53:38] <SnoopJ> solrize, depends on the particular modules. Some have a lot of work to do across the FFI boundary.
[00:53:47] <SnoopJ> solrize, no
[00:53:53] <solrize> oh interesting
[00:53:55] <SnoopJ> (*most* modules so frozen are *not* written in C)
[00:54:00] *** Joins: arcaile (~arcaile@154.21.23.8)
[00:54:13] <SnoopJ> freezing is just jargon for "we compiled it and stuffed the bytecode into the runtime" basically
[00:54:40] <solrize> the discussion in that ticket is interesting, thanks for pointing me to it.  yeah emacs tried that approach (stuffing all the .elc's into the runtime) and that was still too slow
[00:55:00] <evidlo> What datatype should I use for a custom dictionary? I have 3 blackbox functions for listing, getting, and setting from some backend
[00:55:06] <evidlo> UserDict doesn't seem to be what I need here
[00:55:25] <SnoopJ> evidlo, can you explain why?
[00:55:28] <solrize> define your own class with __getitem__ etc?
[00:55:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:55:34] <solrize> evidlo, ^^
[00:55:36] <KirkMcDonald> evidlo: Can't you just define a class?
[00:55:37] <KirkMcDonald> Yeah.
[00:55:39] <solrize> i mean look t something like shelve
[00:55:47] <solrize> s/t/at/
[00:56:07] <evidlo> I can do a completely custom class, but I'd prefer not to have to implement e.g. repr and just fall back on the default dict behavior
[00:56:38] <solrize> maybe you can subclass dict   or is that what userdict is
[00:56:41] <KirkMcDonald> evidlo: If the data is in some backend store, then the default dict behavior isn't going to help you.
[00:57:01] <KirkMcDonald> evidlo: That stuff is going to want, you know, a dict, with the whole set of data in memory.
[00:57:02] <solrize> you probably don't want to reproduce the exact dict interface though
[00:57:12] <solrize> i mean you don't want __items__ for a billion row database
[00:57:26] <evidlo> aren't get/set/list functions enough to implement a dictionary interface?
[00:57:45] <evidlo> the number of elements is almost always going to be very small.  I just want a simple implementation
[00:57:46] <KirkMcDonald> evidlo: Sure. Well, also delete.
[00:57:55] <solrize> yeah more or less, look at shelve or dbm, you can do those operations but they can be expensive
[00:58:13] <evidlo> what choice do i have with the stdlib only?
[00:58:46] <KirkMcDonald> You could write the __repr__ to copy the thing into a dict and take its repr.
[00:58:48] <SnoopJ> solrize, UserDict isn't a subclass proper (it wraps around a dict instance), but it's the preferred way to do that for reasons I forget
[00:59:04] * SnoopJ hasn't really ever had cause to do this
[00:59:17] <solrize> probably best to use the default repr that prints an address rather than slurping the whole contents of a remote db
[00:59:18] <KirkMcDonald> I believe it relates to the methods of the dict type not making virtual calls among themselves.
[00:59:50] <solrize> this is a big thread and i should probably read the whole thing
[01:01:02] <evidlo> do I really have to implement all 13 functions for my own dictionary interface? https://stackoverflow.com/questions/4014621/a-python-class-that-acts-like-dict
[01:01:44] <solrize> well only if you want to use them all, or if you have a user base that might expect them...
[01:02:07] <solrize> i used to use dbm all the time and was always satisfied with it in practice
[01:03:00] <evidlo> the database is just some XML that I need to interface with
[01:03:07] *** Quits: m1n10n2 (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Quit: GoodBye)
[01:03:10] <solrize> read it into a dict?
[01:03:15] <solrize> if it is not too big
[01:04:03] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[01:04:58] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[01:05:10] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[01:05:11] *** Quits: MasterK (~MK@86.120.251.240) (Remote host closed the connection)
[01:05:15] *** Joins: blei (~blei@user/blei)
[01:05:35] *** Quits: csm3105 (~csm3105@static-214-56-230-77.ipcom.comunitel.net) (Read error: Connection reset by peer)
[01:05:37] <aclark>  /msg NickServ VERIFY REGISTER aclark4life XXbCoMS6wJA7ndoq
[01:05:44] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[01:05:49] <src> fail
[01:05:53] <aclark> Hah
[01:05:57] <evidlo> I could, but I need to update the XML as soon as properties are added
[01:06:03] <aclark> Oooook :-)
[01:06:03] *** Joins: fling (~fling@user/fling)
[01:06:37] <KirkMcDonald> An example of what I'm talking about re: virtual calls: https://bpa.st/RY3Q
[01:07:16] *** Joins: csm3105 (~csm3105@static-214-56-230-77.ipcom.comunitel.net)
[01:09:05] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ecc7:fdb2:bf0e:3249)
[01:09:55] *** Joins: Enitin (~Enitin@82.102.22.86)
[01:09:59] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:10:31] *** Joins: vats (~vats@103.216.143.232)
[01:11:08] *** Joins: white2 (~mahengrui@user/mahengrui1)
[01:12:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[01:12:23] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 256 seconds)
[01:12:33] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:f05f:4a77:ef97:de86)
[01:12:38] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[01:12:48] *** Quits: rsx (~dummy@ppp-188-174-156-215.dynamic.mnet-online.de) (Quit: rsx)
[01:12:52] <jinsun__> evidlo: you don't have to implement all 13, most of them have default non-abstract implementation provided by collections.abc.Mapping already
[01:13:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:13:45] *** Joins: __xor (~xor@dsl-50-5-233-169.fuse.net)
[01:13:53] <jinsun__> just subclass Mapping and try to instantiate it, the python will tell you what is mandatory
[01:14:07] <jinsun__> s/the/then
[01:14:12] *** Quits: jay-m1261 (~jay-m@154.72.150.151) (Ping timeout: 252 seconds)
[01:14:12] *** Quits: jay-m126_ (~jay-m@154.72.150.151) (Ping timeout: 252 seconds)
[01:14:12] *** Quits: jay-m126 (~jay-m@154.72.150.151) (Ping timeout: 252 seconds)
[01:14:21] *** Joins: asa22 (~asa22@77.211.7.126)
[01:15:00] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Ping timeout: 240 seconds)
[01:15:32] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[01:15:41] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[01:15:42] <asa22> why does this print 0 https://bpa.st/M3TQ
[01:16:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cb4:ef3c:d7cc:ad77) (Ping timeout: 240 seconds)
[01:16:40] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Client Quit)
[01:16:56] <jinsun__> because you are filtering any non-int and your list has no int, so sum gets a empty list
[01:17:13] <asa22> true
[01:17:14] <SnoopJ> i.e. your numbers are strings
[01:17:18] *** Quits: Buliarous (~gypsydang@46.232.210.139) (Quit: leaving)
[01:17:19] <asa22> I just realized that too
[01:17:22] <asa22> they are strings not ints
[01:17:32] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[01:17:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:18:42] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[01:19:24] *** Quits: shuck (~shuck@user/shuck) (Remote host closed the connection)
[01:19:51] <asa22> its always the little things that one wastes time in lol
[01:20:02] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[01:20:54] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[01:21:03] <SnoopJ> "Most bugs are a result of the execution state not being exactly what you think it is."
[01:21:17] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[01:21:18] <solrize> asa22, start using mypy ;)
[01:21:56] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:22:06] <asa22> solrize just installed the vscode extension, lets see..
[01:22:07] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[01:22:29] <solrize> didn't know vscode was related to mypy?
[01:22:39] <SnoopJ> it's not, that's why it's called an extension
[01:23:00] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[01:23:06] *** climax is now known as gentooclimax
[01:23:30] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[01:23:37] <SnoopJ> I don't think mypy will issue any error for this program unless you add an `int` annotation to the function though
[01:24:29] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[01:24:50] *** Joins: nomic (~nomic@185.217.117.111)
[01:24:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[01:25:46] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Quit: padraigd)
[01:25:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:26:11] *** Quits: dreamon (~dreamon@pd9503763.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[01:26:15] <jinsun__> yeah mypy default mode tries to support gradual typing by ttreating unannotated function as Any
[01:27:16] <SnoopJ> and strict mode just complains that there isn't an annotation :)
[01:27:18] *** Quits: Msandoy_ (~Msandoy@telia-59089f-40.connect.netcom.no) (Read error: Connection reset by peer)
[01:27:41] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[01:27:58] <jinsun__> and unfortunately in strict mode instead of trying to do something better like type inference, it just forces annotating all functions, and keeps treating them as Any if you # type : ignore
[01:28:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:30:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[01:30:37] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[01:30:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:31:09] *** Joins: Enitin (~Enitin@82.180.145.225)
[01:31:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:32:31] *** Quits: NeoCore_ (~neocore@89.40.183.136) (Quit: Leaving)
[01:32:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[01:33:32] <solrize> SnoopJ, yes annotate all the things ;)
[01:35:02] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[01:35:07] *** Joins: jpn (~jpn@user/jpn)
[01:35:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[01:37:23] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Quit: Lost terminal)
[01:38:02] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 240 seconds)
[01:39:43] *** Quits: martums59 (~martums@user/martums) (Read error: Connection reset by peer)
[01:39:51] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[01:39:51] <asa22> Can someone look at my code and tell me how to improve it? this is what I came up with but im sure there is more elegant ways of going about it https://bpa.st/62RQ
[01:41:11] *** Joins: zmotaj_ (~zmotaj@86.61.80.191)
[01:41:51] <phy1729> asa22: can the input format be changed?
[01:42:08] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 272 seconds)
[01:42:44] <asa22> phy1729 the input is stdin and like this https://bpa.st/LSKA
[01:42:48] <asa22> and I cannot change that
[01:43:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:43:24] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[01:43:33] *** Quits: Staunch (~Staunch@137.83.204.221) (Ping timeout: 256 seconds)
[01:44:26] <KirkMcDonald> Don't use for loops...
[01:44:33] <phy1729> The type check on L17 isn't needed and the list calls on L24 aren't needed
[01:45:10] <phy1729> The restrictions mean the code can't be pythonic so it feels like a misguided homework problem
[01:45:22] <KirkMcDonald> Yes, this is obviously homework.
[01:45:23] <phy1729> misguided is being charitable
[01:45:43] <asa22> point is to learn in the process
[01:45:56] <asa22> ofc in reality you would just use loops and list comprehensions
[01:46:12] <phy1729> If they want to have you learn recursion, they should give a problem that naturally lends itself to recursion
[01:46:29] <phy1729> like traversing a tree or file system
[01:46:51] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:47:11] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[01:47:27] <KirkMcDonald> I will say that a recursive function that doesn't return anything is sort of a red flag.
[01:47:33] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[01:47:54] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[01:48:44] <asa22> ok removed type check and list calls
[01:48:47] <asa22> thanks
[01:49:22] <asa22> KirkMcDonald should I make it return something?
[01:50:04] <asa22> also the variables "count" and "i", I wanted to have only 1 but I didnt found the way
[01:50:08] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1006)
[01:50:15] <asa22> didnt find*
[01:50:21] *** Quits: foul_owl (~kerry@23.82.193.87) (Ping timeout: 256 seconds)
[01:51:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[01:51:24] <KirkMcDonald> That would just be some arithmetic, I imagine.
[01:51:28] <asa22> output has to be stdout which I assume is normal print
[01:51:34] <KirkMcDonald> Yes, print() goes to stdout.
[01:51:42] <KirkMcDonald> (Unless you tell it to go somewhere else.)
[01:51:43] <phy1729> It would arguably be more conventional to return [<expression in L24 append>] + separate_...   and print in main
[01:51:54] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[01:52:09] <phy1729> er and drop results_list
[01:52:12] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[01:52:21] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:6003:148f:6e69:1d87) (Quit: Leaving)
[01:52:22] *** Joins: _0x00 (~0x00@user/0x00/x-6246543)
[01:52:42] <phy1729> but I've done the pass the return data structure in way for hot loops
[01:52:55] <KirkMcDonald> asa22: At a certain point it's difficult for me to give advice without just saying "do it like this."
[01:52:56] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a) (Remote host closed the connection)
[01:53:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:53:13] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[01:53:23] <asa22> KirkMcDonald as long as "do it like this" stays within the rules of the assignment lol
[01:54:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:55:06] <phy1729> it'd be more helpful to email your professor to get the assignment fixed
[01:55:13] <asa22> hahaha
[01:55:19] <phy1729> wouldn't be the first time I've done so
[01:55:40] <asa22> phy1729 if I return the expression instead of appending to results_list wouldnt the function exit and recursion not work?
[01:56:03] <asa22> oh you mean to also return the recursive call to the function
[01:56:11] <phy1729> it has to do the recursion to compute the return value
[01:56:15] *** Joins: Enitin (~Enitin@82.180.145.228)
[01:56:22] *** Quits: greentree (~greentree@user/greentree) (Quit: greentree)
[01:56:24] <KirkMcDonald> asa22: I will say that I don't think there's any part of this that I'd do recursively. With the right finagling, you could use map/reduce for all of it.
[01:56:40] *** Quits: __xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[01:56:42] <phy1729> means it's not tail recursive, but I don't think python optimizes that anyway
[01:56:47] <KirkMcDonald> It doesn't.
[01:56:48] <asa22> KirkMcDonald Its python3 and external libraries are not allowed so no reduce
[01:56:59] <KirkMcDonald> reduce is part of the standard library.
[01:57:09] <asa22> oh thats new for me
[01:57:23] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:57:28] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[01:57:33] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[01:57:37] <asa22> lemme look into reduce
[01:57:46] *** Joins: nomic (~nomic@185.217.117.111)
[01:57:47] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[01:57:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:57:49] <KirkMcDonald> But, it's also not structly necessary. sum/map does just fine, as you are already doing.
[01:57:54] <KirkMcDonald> strictly*
[01:58:16] <jinsun__> also not allowing list comprehensions but allowing map seems like an oversight
[01:58:32] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[01:58:35] <KirkMcDonald> I have to imagine it's out of some misguided desire to be more functional.
[01:58:39] <jinsun__> try doing it without map :D
[01:58:53] <asa22> I wanted to show I can use multiple things
[01:58:56] <phy1729> Should have assigned Haskell then
[01:58:57] <asa22> so I used map and recursion
[01:59:24] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[01:59:59] <KirkMcDonald> I also find it a *little* weird that the input specifies the lengths of things so explicitly.
[02:00:27] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:00:36] <KirkMcDonald> You could excise all of those lengths from the problem and it's still a simple problem. Simpler, even.
[02:00:48] <asa22> KirkMcDonald yeah I was gonna use that at first but then I realized I dont need to know the length of the line with testcases
[02:00:55] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[02:01:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:01:30] *** Joins: __xor (~xor@dsl-50-5-233-169.fuse.net)
[02:01:39] <asa22> KirkMcDonald is the teacher hinting at something by providing the lenghts or just incompetent
[02:01:40] <asa22> lol
[02:01:53] <KirkMcDonald> The only way it's interesting to provide those lengths is if the input doesn't match the specified lengths in some way.
[02:02:00] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:02:09] <asa22> hmmm
[02:02:09] <KirkMcDonald> But the problem doesn't say anything about what it should do if they don't match.
[02:02:10] <Repiphany> Maybe you don't get a file end to tell you when stdin is closed
[02:02:12] <phy1729> Feels like old school C where you need to know how much memory to allocate
[02:02:13] <jinsun__> I think that is normally done in coding tests where multiple languages are allowed, so that people choosing C have it slightly easier
[02:02:24] <KirkMcDonald> Yeah, that makes sense.
[02:02:39] <asa22> the problem can be solved in python or go
[02:02:41] *** Joins: Barones (~Barones@user/Barones)
[02:02:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:02:57] <KirkMcDonald> Well, Go doesn't have a problem with this any more than Python does.
[02:03:16] <asa22> rules for Go are: Do not use any for and goto statement
[02:03:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:03:27] <KirkMcDonald> Ugh.
[02:03:31] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[02:03:45] *** Joins: jpn_ (~jpn@user/jpn)
[02:04:01] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[02:04:02] <asa22> Repiphany thats interesting how should I handle that
[02:04:17] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[02:04:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:04:43] *** Joins: muniv[m] (~uztojemat@2001:470:69fc:105::20fb)
[02:05:03] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ebcd:6dcb:975e:c88d)
[02:05:03] *** Quits: medecau (~medecau@2a02:1210:78da:cc00:8990:e4db:942c:e1) (Quit: medecau)
[02:05:23] <KirkMcDonald> Now you have me contemplating how to use Go's bufio.Scanner recursively, and *ugh*.
[02:05:30] <Repiphany> Hide the for/while loop in a recursion stack with an exit condition
[02:05:38] *** Joins: foul_owl (~kerry@174-21-69-110.tukw.qwest.net)
[02:05:38] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[02:05:56] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:06:10] *** Joins: Guest8h (~Guest8h@193.108.20.103)
[02:06:47] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[02:07:19] <celphi> asa22: https://bpa.st/OVKQ
[02:08:34] <KirkMcDonald> celphi: That doesn't seem quite right.
[02:08:49] <celphi> meaning?
[02:08:51] <KirkMcDonald> It only does one test case.
[02:09:02] <celphi> it's to show the idea
[02:09:37] *** Quits: jpn_ (~jpn@user/jpn) (Ping timeout: 240 seconds)
[02:10:01] <celphi> if you need more than one case you just use recurrision with that to call sos
[02:10:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[02:11:02] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[02:11:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:11:14] *** Joins: fling (~fling@user/fling)
[02:13:01] *** Joins: thelounge59 (~thelounge@2001:1af8:4700:b0e0:2600::)
[02:13:03] *** Joins: kantlive- (~kantlivel@octoprint/kantlivelong)
[02:13:37] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 240 seconds)
[02:14:40] <asa22> celphi thanks let me check it out
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:42] *** Joins: wakeup (~wakeup@user/wakeup)
[02:15:42] *** Quits: kantlivelong (~kantlivel@octoprint/kantlivelong) (Ping timeout: 272 seconds)
[02:15:43] *** kantlive- is now known as kantlivelong
[02:16:19] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:58] <asa22> input() doesnt work if I feed it a textfile like this python myprogram.py < inputfile.txt
[02:18:05] *** Joins: matsaman (~matsaman@user/matsaman)
[02:18:14] *** Quits: julia__ (~quassel@user/julia) (Ping timeout: 272 seconds)
[02:18:41] <jinsun__> it should work
[02:19:05] <jinsun__> but it reads one line at a time, not till EOF
[02:20:36] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:21:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:22:34] *** Joins: greedom (~greedom@p200300de673c2b007e0212c45615e581.dip0.t-ipconnect.de)
[02:22:53] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[02:24:40] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1006) (Quit: Leaving)
[02:24:43] <asa22> gives me list index out of range for some reason
[02:24:51] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:25:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[02:25:43] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[02:25:58] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[02:26:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:27:01] *** Joins: julia (~quassel@user/julia)
[02:27:14] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:28:03] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[02:28:31] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[02:29:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:30:23] *** Joins: Leftmost (sid232534@id-232534.helmsley.irccloud.com)
[02:30:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:30:35] *** Quits: parv (~quass@user/parv) (Ping timeout: 256 seconds)
[02:30:58] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:31:04] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[02:31:09] <anddam> walrus operator is just an assignment right? i.e. it is not meant for shorthing    while (counter := 0) < max:   by avoiding an additional counter = 0 init, right?
[02:31:20] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[02:31:26] <anddam> (that's an example I wouldn't make a for loop like that)
[02:31:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:31:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:32:06] *** Quits: hexed (~k@xolan.net) (Quit: Lost terminal)
[02:32:07] <jinsun__> asa22: sounds like the one line at a time vs reading till EOF problem to me that I mentioned, in your original code you were doing sys.stdin.read(), input() doesn't do the same thing
[02:32:14] *** Quits: gitly (~gitly@85.255.234.17) (Quit: WeeChat 3.4)
[02:32:22] <SnoopJ> anddam, it shortens things like: `val = read(); while val: do_something(val); val = read();`
[02:32:25] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[02:32:25] *** Joins: nolan_ (~nolan_@user/nolan/x-2434303)
[02:32:32] <Repiphany> anddam: You'd reset counter to 0 for every loop with that
[02:32:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[02:32:56] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[02:33:22] <SnoopJ> a counter is a fairly miserable example because itertools.count() exists
[02:33:26] *** __xor is now known as _xor
[02:33:27] <Leftmost> I'm using `asyncio` low-level functions to run a multi-function bot as several of the functions of the bot require gracefully closing a connection when the bot is killed. However, I'm now getting the "There is no current event loop" deprecation warning. Should I just be creating and setting a new loop at the start of the script, or is there a good way to use `asyncio.run()` and gracefully handle SIGTERM/SIGINT?
[02:33:51] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:34:04] <SnoopJ> the `re` API's tendency to return None or a Match is another good example of what it's useful for, though: `if (m := re.match(...)): do_something(m)`
[02:35:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:35:12] <anddam> Repiphany: yep, I noticed, hence my question
[02:35:46] *** Quits: DangerWabbit (~DangerWab@109.70.150.165) (Remote host closed the connection)
[02:36:10] <anddam> I was doing a prime number generator so I wanted something like   while True: if is_prime(number): yield number
[02:36:15] <anddam> but ofc I need to increment number
[02:36:29] <anddam> even if IIRC there's an indefinite generator in itertools
[02:36:49] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[02:37:16] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:37:38] <anddam> count()
[02:37:41] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[02:38:16] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[02:38:27] <SnoopJ> right, you'd probably want `for number in count():` instead there
[02:38:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[02:38:46] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:39:16] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[02:39:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:39:42] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[02:40:17] <anddam> SnoopJ: done already :)
[02:40:21] <anddam> this is actually fun
[02:40:32] <anddam> next goal is to rewrite these solutions in hylang
[02:40:42] <anddam> well, trying to at leas
[02:40:46] <anddam> I am not lispy at all
[02:40:46] *** Joins: PJBoy (~PJBoy@user/pjboy)
[02:40:52] <SnoopJ> anddam, anyway, yes, it's "just" assignment, but in expression form rather than statement form
[02:41:15] <SnoopJ> I generally think of it as a normal expression with binding a name as a side effect
[02:41:21] <anddam> ah assignment, the solution and cause of all problems
[02:41:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:42:04] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[02:42:07] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[02:43:47] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[02:44:11] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[02:44:38] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[02:44:38] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 250 seconds)
[02:44:45] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[02:45:12] *** Quits: waxfire6 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[02:45:41] *** Joins: jpn (~jpn@user/jpn)
[02:45:58] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[02:46:33] *** Joins: aphysically (~aphysical@user/aphysically)
[02:47:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:47:21] *** waxfire6 is now known as waxfire
[02:48:21] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:49:13] <ldericher> How can I check if the parameter to a bound method is an instance of that same class?
[02:49:19] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:50:12] <SnoopJ> ldericher, `isinstance(param, type(self))`
[02:50:25] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[02:50:28] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[02:50:41] <ldericher> SnoopJ, ohh, that's clever
[02:50:59] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Ping timeout: 256 seconds)
[02:51:27] <SnoopJ> it looks more clever than it is, I think, most of the magic is in instance methods receiving the instance :)
[02:52:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:53:44] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[02:54:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:56:20] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[02:56:33] *** Joins: martums59 (~martums@user/martums)
[02:56:36] <ldericher> Well, the method made more sense as a @classmethod anyway, so I could even drop the `type`
[02:57:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[02:57:05] <nedbat> ldericher: why does it have to be an instance of the same class?
[02:57:10] *** Quits: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl) (Ping timeout: 260 seconds)
[02:58:14] <ldericher> nedbat, It doesn't, but I can't really stop it from trying to process instances of itself otherwise
[02:58:38] <ldericher> it's in an ORM context
[02:59:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:00:31] *** Joins: Guest42 (~b332b756@servidor.wikimedia.es)
[03:01:11] *** Quits: foul_owl (~kerry@174-21-69-110.tukw.qwest.net) (Ping timeout: 256 seconds)
[03:01:23] *** Quits: Guest42 (~b332b756@servidor.wikimedia.es) (Client Quit)
[03:01:25] <nedbat> ldericher: you want to ensure the object is an instance of the class? Or that it's not?
[03:01:37] <anddam> does this look reasonable? https://termbin.com/za7u
[03:02:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:02:34] *** Joins: x_kuru (~xkuru@user/xkuru)
[03:03:47] *** Joins: pythonoob (~thelounge@om126166154220.28.openmobile.ne.jp)
[03:04:05] <ldericher> nedbat, neither, I just need it to know where to look for certain values, depending on the type
[03:05:32] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[03:06:18] <jinsun__> anddam: you can use itertools.islice instead of your ticker function
[03:06:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:06:32] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[03:07:03] <anddam> jinsun__: mmm right, I wonder if one should avoid using stdlib at all while doing these kind of exercise or not
[03:07:06] <anddam> feels a bit like cheating
[03:07:34] <SnoopJ> anddam, it depends on what the point of the exercise is, in general
[03:07:44] <jinsun__> anddam: and the is_prime can be more efficient, you are looping over all numbers anyway, so you can maintain a list of primes already visited and only divide by those
[03:07:50] * SnoopJ has never been sure what the point of "don't use the standard library" exercises is
[03:07:55] <anddam> and, different topic, I tried ipython's %time magic line with my ticker(prime_numbers(), 10001), it gave a loop time of ~10ms
[03:08:42] <anddam> but I clearly saw the execution taking many seconds, system's time says 12.634s of which 12.610 in user mode
[03:08:56] <anddam> what is %timeit actually measuring?
[03:09:08] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:09:23] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:09:41] <SnoopJ> %time and %timeit are two different magics, which one are you asking about?
[03:09:42] <Repiphany> %timeit repeats the measurement to get a statistical average
[03:10:20] <anddam> but the difference from 10ms to 12s seems a bit too much for just overhead
[03:10:32] <Repiphany> 12s is 12000ms
[03:10:38] <anddam> hehe yes, thanks
[03:10:59] <anddam> or three order of magnitudo
[03:11:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:11:20] <anddam> SnoopJ: %timeit, I mistakenly wrote %time without noticing. Going to check %time now
[03:11:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[03:11:55] <SnoopJ> anddam, the %timeit magic will run the cell it's in and report an average as Repiphany says
[03:12:23] <SnoopJ> oops, I lied, %timeit is a single statement
[03:12:29] <SnoopJ> %%timeit is a whole cell
[03:12:30] <SnoopJ> https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-timeit
[03:12:33] <jinsun__> it reports how many loops it ran also by default
[03:13:03] *** Joins: NealRame (~a@114.129.191.165)
[03:13:22] <jinsun__> so overall time would be per loop time times the number of loops
[03:13:50] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cb4:ef3c:d7cc:ad77)
[03:14:02] <jinsun__> but since you are using @cache averages would be lying a bit, the first run would be slower
[03:14:07] *** Joins: theprophet (~theprophe@2a0b:6204:42b1:2d00:f89c:cd1e:f794:ab18)
[03:14:13] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:14:32] *** Quits: src (~src@user/src) (Ping timeout: 250 seconds)
[03:14:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[03:14:36] *** Joins: fling_ (~fling@user/fling)
[03:15:14] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[03:16:07] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[03:16:15] <anddam> jinsun__: I am chewing on the hint about making is_prime more efficient
[03:16:20] *** Joins: foul_owl (~kerry@23.82.193.89)
[03:16:35] <anddam> will think about tomorrow
[03:16:38] <anddam> thanks for the info
[03:16:57] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[03:16:59] *** Quits: greedom (~greedom@p200300de673c2b007e0212c45615e581.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:17:32] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[03:18:06] *** Joins: Roey (~Roey@user/Roey)
[03:18:12] <anddam> ah right, subsequent %time invocations shows a runtime of ~10ms so the first, empty-cached run is heavily averaged
[03:18:37] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:19:35] *** fling_ is now known as fling
[03:20:11] <jinsun__> anddam: I would do something like this https://bpa.st/NHQA
[03:20:42] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 252 seconds)
[03:21:30] <Repiphany> You only need to check primes <= math.isqrt(n)
[03:21:41] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[03:22:05] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:22:18] *** Joins: naranja (~orange@user/orangeboxcutter)
[03:22:23] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:23:24] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[03:23:28] <jinsun__> oh yeah that any() should have a if x < sqrt(i) for that
[03:23:36] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:23:55] <jinsun__> though for most composite numbers the any() would return way before reaching sqrt(i) anyway
[03:24:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:24:59] *** Quits: nolan_ (~nolan_@user/nolan/x-2434303) (Ping timeout: 256 seconds)
[03:25:27] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[03:25:45] *** Quits: routingsparks (~routingsp@ip72-218-52-185.hr.hr.cox.net) (Quit: WeeChat 3.4)
[03:25:47] *** Joins: nomic (~nomic@185.217.117.111)
[03:27:02] *** Joins: noarb (~noarb@user/noarb)
[03:27:10] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:28:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:28:17] *** Quits: rtkng (~rtkng@024-176-075-241.res.spectrum.com) (Ping timeout: 240 seconds)
[03:29:03] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:29:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:29:55] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:30:05] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:30:17] *** Joins: waxfire (~waxfire@65.119.2.240)
[03:30:37] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[03:31:18] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[03:31:47] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[03:32:55] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:32:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:33:51] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:34:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:36:27] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:37:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:38:49] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[03:39:38] *** Joins: jpn (~jpn@user/jpn)
[03:41:28] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:43:29] <theprophet> python -- is -- looks at variables -- and  == looks at value .. can this be put this way? or i am wrong?
[03:43:49] <BtbN> what?
[03:43:59] <theprophet> differences between is and ==
[03:44:21] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[03:44:27] <BtbN> equality vs. identity
[03:44:52] <theprophet> since .. l1 = [] and l2 = [] == True, but  Is false.
[03:44:59] *** Joins: kosh_ (~kosh@user/kosh)
[03:45:05] *** Joins: tijuco (~tijuco@user/tijuco)
[03:45:06] <BtbN> two distinct things can still be equal
[03:45:09] <BtbN> but are not the same
[03:46:13] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[03:48:20] *** Joins: wattux (~wattux@2a02:238:f014:472:d499:6d9d:4483:b58c)
[03:49:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:49:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:50:29] <nedbat> theprophet: they both deal with the value itself, not the variable.  "is" checks if two values are literally the same value in memory. == checks if they are considered equal.
[03:51:09] <theprophet> ahh ok nedbat thanks
[03:52:14] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 250 seconds)
[03:54:18] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:54:20] *** Joins: Origin (~Origin@d-69-161-70-214.nh.cpe.atlanticbb.net)
[03:54:34] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[03:58:10] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[03:58:53] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[03:58:59] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:59:04] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[04:00:02] *** Quits: kosh_ (~kosh@user/kosh) (Ping timeout: 240 seconds)
[04:01:20] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[04:02:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:02:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:06:05] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[04:06:05] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[04:06:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:07:10] *** Quits: csm3105 (~csm3105@static-214-56-230-77.ipcom.comunitel.net) (Quit: Leaving)
[04:08:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[04:09:41] *** Joins: hanzo (uid532183@user/hanzo)
[04:10:02] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 240 seconds)
[04:10:05] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[04:11:55] *** Quits: theprophet (~theprophe@2a0b:6204:42b1:2d00:f89c:cd1e:f794:ab18) (Quit: Client closed)
[04:13:01] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[04:14:17] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[04:17:00] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ebcd:6dcb:975e:c88d) (Quit: Leaving)
[04:18:02] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:18:16] *** Quits: Guest8h (~Guest8h@193.108.20.103) (Quit: Client closed)
[04:18:23] *** Joins: fling (~fling@user/fling)
[04:19:58] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:20:02] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:21:24] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[04:24:03] *** Joins: znullptr[m] (~znullptrm@2001:470:69fc:105::1:d698)
[04:24:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:27:06] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:29:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:29:57] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:30:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:31:36] *** Joins: thais (~thais@cpe-75-82-64-80.socal.res.rr.com)
[04:31:48] *** Joins: Wulf (~Wulf@user/wulf)
[04:33:11] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[04:33:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:33:39] *** Joins: jpn (~jpn@user/jpn)
[04:34:38] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[04:34:56] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4.1)
[04:35:15] *** Quits: domicron9 (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 240 seconds)
[04:37:05] *** Joins: jtj90 (~jtj90@2607:fb90:b2d7:95fb:90c5:53c2:c4af:c922)
[04:39:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:39:32] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[04:39:50] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:39:55] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[04:40:56] *** byzafk is now known as byzandula
[04:44:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[04:45:00] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[04:45:56] *** Quits: Xano (~Xano@2a00:23c4:4204:700:8453:a5e6:ccb9:60c5) (Ping timeout: 252 seconds)
[04:45:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:47:04] *** Quits: Origin (~Origin@d-69-161-70-214.nh.cpe.atlanticbb.net) (Quit: Leaving)
[04:47:19] *** Joins: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1016:855e:cb90:5d1c)
[04:49:41] *** Joins: jpn (~jpn@user/jpn)
[04:50:23] <cowsay-moo> hey all. I'm making a desktop application that is driven largely by a sqlite database. I'm starting to think a bit about how I will handle software updates (new columns, tables, foreign keys, etc) .. got any tips for safely upgrading users' databases during software updates? Would like to plan for this before I get too deep into the project
[04:50:41] *** Joins: Mat1010 (~Mat1010@168.181.209.34)
[04:51:22] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[04:52:46] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[04:53:09] *** Quits: wattux (~wattux@2a02:238:f014:472:d499:6d9d:4483:b58c) (Quit: Client closed)
[04:53:20] *** Joins: Xano (~Xano@2a00:23c4:4204:700:6e4f:895e:2b9e:c094)
[04:53:26] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:53:50] <cowsay-moo> I was thinking about maybe doing this during the update process: deploy new (empty) database to newdatabase.db.tmp with the latest updates, migrating all records from the old DB to the new one, and if there is a failure, I can handle it then, and there is no change to the existing DB.
[04:54:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:54:25] <SnoopJ> cowsay-moo, that sounds reasonable, my question was going to be "can you make a copy first" which I think amounts to the same thing.
[04:54:51] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: Leaving)
[04:54:58] <grym> cowsay-moo: i hear `alembic` a lot in this space, if you're using sqla already especially https://alembic.sqlalchemy.org/en/latest/
[04:55:04] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[04:55:49] *** Joins: llh (~UPP@user/llh)
[04:56:05] <Mat1010> Hello. I am looking to create a new .txt file where each word is separated by a line break. What is missing in this code?
[04:56:12] <Mat1010> https://bpa.st/Q6DQ
[04:56:12] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:56:57] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[04:57:05] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[04:57:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:57:25] <cowsay-moo> I'm not using sqlalchemy but maybe I need to look into it more. sounds like something that may benefit me.  I've heard of it, but I just went with plain sqlite3
[04:58:33] <nedbat> Mat1010: .write() only writes what you give it. If you want newlines, you have to do it explicitly. it's not like print()
[04:59:59] <Mat1010> that all words are separated by a line break in a new txt file.
[05:00:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:01:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[05:01:46] *** Joins: jinsun (~jinsun@user/jinsun)
[05:02:10] *** Quits: thelounge59 (~thelounge@2001:1af8:4700:b0e0:2600::) (Remote host closed the connection)
[05:03:49] <Mat1010> how to place each element (str) of a list with a line break each, in a txt file?
[05:04:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[05:04:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[05:05:02] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 250 seconds)
[05:05:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:06:35] *** Quits: oriba (~oriba@dynamic-089-014-158-213.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:07:10] <Mat1010> I have a list with 10 elements of type string. How to create a .txt file where each element of the list is separated by a line break?
[05:07:46] *** zmotaj_ is now known as zmotaj
[05:07:46] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[05:07:46] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[05:08:59] <SnoopJ> Mat1010, as nedbat said, if you use write(), you need to write your own newlines, i.e. change line 7 to `arch.write(i + "\n")`. Or you can use print() which puts the newline there for you, i.e. replace line 7 with `print(i, file=arch)`
[05:12:11] <Mat1010> Very nice thanks.
[05:14:22] <Xano> Where can I read more about the workings of multiple inheritance, and specifically the limitations of diamond inheritance?
[05:14:49] <Xano> I'm not entirely sure what to look for. Not even searching for the error message yields any results
[05:14:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:14:59] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[05:15:17] *** Quits: irf21k (~irf21k@2401:4900:16e4:c476:1:1:4cb:be38) (Remote host closed the connection)
[05:15:30] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:15:48] *** Joins: jpn (~jpn@user/jpn)
[05:17:18] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cb4:ef3c:d7cc:ad77) (Ping timeout: 252 seconds)
[05:17:22] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[05:17:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[05:17:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[05:17:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[05:17:52] <hodapp> are you talking about with respect to Python in specific?
[05:18:12] <SnoopJ> Xano, if you want to know how MRO works, this read is helpful: https://www.python.org/download/releases/2.3/mro/
[05:18:29] <SnoopJ> (I don't really know if there's a reason it's not part of the larger body of documentation)
[05:18:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[05:18:49] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:19:07] *** byzandula is now known as byzafk
[05:19:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:19:31] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:19:37] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 240 seconds)
[05:19:53] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:20:02] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[05:20:02] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[05:21:20] <Xano> SnoopJ, Reading, thanks!
[05:22:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[05:23:17] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:23:52] *** Joins: fling (~fling@user/fling)
[05:25:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[05:25:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:26:08] <ldericher> in my app I use oauth2 with bearer token scheme and jwt tokens signed with HS256 and a random symmetric key from `secrets.token_hex(32)`. should i bother with periodically re-creating jwt secrets or would that just be overkill?
[05:28:41] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[05:29:10] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:29:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:29:29] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:547f:8d60:880f:1224) (Ping timeout: 250 seconds)
[05:29:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:30:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:30:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:30:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:30:54] *** Joins: parv (~quass@user/parv)
[05:31:00] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:33:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:34:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[05:34:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:35:54] *** Quits: Mat1010 (~Mat1010@168.181.209.34) (Quit: Client closed)
[05:37:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:38:02] <solrize> oh man i read through https://bugs.python.org/issue45020 which is closed now, so adding comments doesn't seem worthwhile
[05:38:15] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[05:38:28] <solrize> ldericher, if you feel like you have to regenerate secrets because they might have leaked, they maybe the weren't so good in the first place?
[05:38:59] <solrize> we're down to 3 month tls certificate expirations now but it was a pain
[05:40:33] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[05:41:03] <SnoopJ> solrize, what remarks would you add to the discussion?
[05:42:03] <ldericher> solrize, no no, I don't suspect a leak, my lizard brain just feels weird handing out these tokens, like wouldn't you eventually be able to reconstruct the secret key if you request enough tokens?
[05:42:20] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Read error: Connection reset by peer)
[05:42:33] *** Joins: Guest57 (~Guest57@2601:647:5b00:34f0:25b2:d135:4a12:4f98)
[05:42:42] <ldericher> … just 'cause this is a symmetric scheme?
[05:44:07] <solrize> ldericher, no that would be a horrible protocol failure if you could do that.  the reason to renew is so that a short term compromise doesn't become a long term one
[05:44:35] <solrize> but, secrets management is a big topic and depending on the application you might have to get a little fancy
[05:44:52] <solrize> SnoopJ, if stuff was still in flux i might have added some comments from an emacs perspective
[05:46:00] *** Joins: wyclif (~wyclif@user/wyclif)
[05:47:32] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[05:48:32] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:48:42] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[05:48:44] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[05:49:41] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[05:49:54] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[05:51:45] *** Quits: jtj90 (~jtj90@2607:fb90:b2d7:95fb:90c5:53c2:c4af:c922) (Ping timeout: 256 seconds)
[05:53:57] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[05:54:16] <ldericher> what do you prefer? `pathlib.Path("foo") / "bar"` or `pathlib.Path("foo").joinpath("bar")`?
[05:54:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:54:53] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:55:15] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 252 seconds)
[06:00:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:01:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:01:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:01:53] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:02:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:03:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:04:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:04:40] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:06:04] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Max SendQ exceeded)
[06:06:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:06:44] *** Joins: Lionyx (~Lionyx@179.232.62.41)
[06:07:35] *** Parts: Lionyx (~Lionyx@179.232.62.41) ()
[06:07:38] *** Joins: Lionyx (~Lionyx@179.232.62.41)
[06:07:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[06:09:50] *** Joins: jpn (~jpn@user/jpn)
[06:11:02] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[06:14:05] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:14:17] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[06:16:22] *** Joins: geli (~gelignite@55d44736.access.ecotel.net)
[06:16:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[06:16:59] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[06:17:50] *** Quits: moog__ (~moog@98.97.82.161) (Ping timeout: 250 seconds)
[06:18:09] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:19:09] *** Joins: sobkas (~sobkas@95.175.17.217)
[06:19:14] *** Quits: magla (~gelignite@d536146e.access.ecotel.net) (Ping timeout: 260 seconds)
[06:19:37] *** Joins: jazzy (~jaziz@user/jaziz)
[06:19:53] <jinsun> I like / but many times I want to access an attribute of the result and then it requires adding parens around it, so I like .joinpath more
[06:26:15] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:26:33] *** Joins: fling (~fling@user/fling)
[06:28:20] *** Joins: medecau (~medecau@2a02:1210:78da:cc00:8990:e4db:942c:e1)
[06:30:25] <SnoopJ> ldericher, I prefer the latter, but pathlib.Path("foo", "bar") is also an option (and those arguments can themselves be Path objects)
[06:30:43] <SnoopJ> I've found myself writing Path(a, b) more often recently for no particular reason
[06:31:27] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:34:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:36:39] *** Joins: matsaman (~matsaman@user/matsaman)
[06:36:39] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:36:45] <jinsun> can't do Path(__file__).parent.joinpath(a, b) that way though
[06:39:36] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:40:31] <SnoopJ> jinsun, what's wrong with Path(__file__, "..", "a", "b") ?
[06:41:00] <SnoopJ> (I usually do `HERE = Path(__file__).parent` at the top of files that need it, so I don't use that, but..)
[06:41:06] *** Quits: rje (~textual@65.141.156.170) (Quit: Textual IRC Client: www.textualapp.com)
[06:41:45] <jinsun_> ah yes we can use ..
[06:42:56] <jinsun_> nothing wrong except that it didn't come to my mind (also doesnt feel as nice :D)
[06:44:03] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:8221:3e3b:fc5d:6929) (Remote host closed the connection)
[06:44:16] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[06:44:31] <SnoopJ> I would agree, it's a little on the magical side
[06:44:39] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[06:45:57] *** Quits: geli (~gelignite@55d44736.access.ecotel.net) (Quit: Stay safe!)
[06:48:06] *** Joins: rje (~textual@50.35.241.164)
[06:48:06] *** Quits: widp (~widp@124.123.106.87) (Read error: Connection reset by peer)
[06:48:18] *** Joins: widp (~widp@124.123.106.87)
[06:48:27] *** Quits: widp (~widp@124.123.106.87) (Read error: Connection reset by peer)
[06:48:40] *** Joins: widp (~widp@124.123.106.87)
[06:48:44] *** Quits: _0x00 (~0x00@user/0x00/x-6246543) (Quit: Leaving)
[06:50:15] *** Quits: Guest57 (~Guest57@2601:647:5b00:34f0:25b2:d135:4a12:4f98) (Quit: Client closed)
[06:50:19] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[06:52:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:53:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:54:14] *** Quits: vlado (~vlado@181.50.79.237) (Quit: WeeChat 3.4)
[06:55:15] *** Joins: white2 (~mahengrui@user/mahengrui1)
[06:55:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:55:53] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[06:57:32] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[06:57:46] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[06:58:23] *** hexa- is now known as h
[07:00:09] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[07:00:12] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[07:01:01] *** Joins: jonk (~jonk@90.244.190.0)
[07:01:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:02:08] *** Joins: Wh0 (~V@103.250.137.107)
[07:02:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:02:26] *** h is now known as hexa-
[07:03:21] *** Joins: llanhod (~developer@user/domhnall/x-2887755)
[07:03:59] *** Joins: jpn (~jpn@user/jpn)
[07:04:45] *** Joins: Korra (~textual@216.15.105.161)
[07:05:14] <ldericher> can I type hint `list[Any]` as just `list` in 3.10?
[07:08:13] *** Joins: adeliktas4 (~adeliktas@i59F5F671.versanet.de)
[07:08:41] *** Quits: Lionyx (~Lionyx@179.232.62.41) (Quit: leaving)
[07:09:37] *** Quits: adeliktas (~adeliktas@i59F4D808.versanet.de) (Ping timeout: 240 seconds)
[07:09:37] *** adeliktas4 is now known as adeliktas
[07:11:01] *** Joins: Lionyx (~Lionyx@179.232.62.41)
[07:11:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:11:47] *** Joins: ravan (~ravan@user/ravan)
[07:12:09] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1d6b:afda:ac54:cccf)
[07:13:55] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[07:14:21] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[07:14:28] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cb4:ef3c:d7cc:ad77)
[07:15:02] *** Quits: vats (~vats@103.216.143.232) (Ping timeout: 240 seconds)
[07:15:03] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Ping timeout: 256 seconds)
[07:16:35] *** Quits: asa22 (~asa22@77.211.7.126) (Quit: Client closed)
[07:16:44] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[07:17:12] *** Quits: Pi-sistance (~Pi-sistan@82.39.161.29) (Quit: Client closed)
[07:18:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:18:46] *** Quits: Lionyx (~Lionyx@179.232.62.41) (Quit: leaving)
[07:19:24] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[07:22:29] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[07:23:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:25:23] <jinsun> ldericher: it depends on your type cheker settings, mypy and pyright both won't let you do that in strict mode but in basic mode they treat list as lisy[Any]
[07:25:25] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[07:26:03] <jinsun> s/lisy[Any]/list[Any]
[07:26:27] <ldericher> jinsun, so basically … better use list[Any]
[07:26:48] <jinsun> yes best to be explicit
[07:27:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:27:06] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[07:27:27] <jinsun> also better to not use Any unless any other ype doesn't work out for you
[07:27:42] <thais> hey guys, not sure if this is the place to ask, I want to deploy a python script that contains some imports for external libraries on aws lambda using serverless. If anyone is familiar with the process can please share a link for an example?
[07:30:13] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[07:30:13] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:27] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[07:30:33] *** Joins: derelict_ (~derelict@user/derelict)
[07:30:57] *** Quits: derelict (derelict@user/derelict) (Ping timeout: 240 seconds)
[07:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:31:09] *** Joins: fling (~fling@user/fling)
[07:31:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:31:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:32:00] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[07:32:16] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:27] *** Parts: jonk (~jonk@90.244.190.0) (Good Bye)
[07:34:02] *** derelict_ is now known as derelict
[07:35:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[07:35:57] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 240 seconds)
[07:36:02] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[07:36:57] <KnowledgeShark> cheers to all the good people in here! you all are appreciated by me :) Thanks Libera.chat #python
[07:37:32] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[07:38:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:39:13] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:42:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:44:04] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 250 seconds)
[07:44:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[07:44:32] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 240 seconds)
[07:45:12] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[07:45:24] *** Joins: wyclif (~wyclif@user/wyclif)
[07:46:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:47:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:47:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:47:27] *** Quits: Wh0 (~V@103.250.137.107) (Quit: Leaving)
[07:47:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:49:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:50:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[07:50:34] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:50:53] *** Joins: wyclif (~wyclif@user/wyclif)
[07:53:05] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:54:03] *** Quits: arcaile (~arcaile@154.21.23.8) (Ping timeout: 252 seconds)
[07:54:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[07:54:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:55:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[07:56:00] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:56:21] *** Joins: wyclif (~wyclif@user/wyclif)
[07:56:35] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[07:59:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[07:59:54] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[08:00:49] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:00:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:03:25] *** Joins: jpn (~jpn@user/jpn)
[08:04:44] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[08:05:04] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:08:19] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[08:08:26] *** Joins: hams (~hams@user/hams)
[08:08:58] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:dd74:c552:afd5:85a5) (Remote host closed the connection)
[08:11:01] *** Quits: nomic (~nomic@185.217.117.111) (Remote host closed the connection)
[08:11:02] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[08:15:07] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[08:15:19] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:16:03] *** Joins: arcaile (~arcaile@143.244.54.137)
[08:16:15] *** Quits: widp (~widp@124.123.106.87) (Ping timeout: 256 seconds)
[08:17:18] *** Joins: jazzy (~jaziz@user/jaziz)
[08:17:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:17:51] *** Joins: funhouse (~funhouse@user/funhouse)
[08:19:56] *** thais is now known as palindrome
[08:21:15] *** Joins: tWqaq (~tWqaq@240e:389:5d41:5900:9a62:24a5:64c2:9cd2)
[08:21:56] *** Joins: widp (~widp@124.123.105.142)
[08:22:12] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:a05b:7d1e:88ff:af3b) (Read error: Connection reset by peer)
[08:24:45] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[08:24:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:26:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:27:02] *** Quits: sreve (~quassel@p54a717a3.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:27:47] *** Joins: sreve (~quassel@p54a71b7a.dip0.t-ipconnect.de)
[08:27:53] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:29:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:29:51] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:29:58] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:30:59] *** Quits: llanhod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[08:31:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:32:10] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[08:32:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:32:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:33:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:34:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[08:35:05] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[08:35:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:35:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:36:32] *** Joins: fling (~fling@user/fling)
[08:38:50] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:39:47] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:39:58] *** Quits: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1016:855e:cb90:5d1c) (Ping timeout: 250 seconds)
[08:40:29] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[08:47:06] *** Joins: han-solo (~han-solo@user/han-solo)
[08:54:32] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:55:00] *** Quits: palindrome (~thais@cpe-75-82-64-80.socal.res.rr.com) (Ping timeout: 240 seconds)
[08:57:10] *** Joins: jpn (~jpn@user/jpn)
[08:57:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[08:58:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:58:45] *** Joins: wyclif (~wyclif@user/wyclif)
[09:00:13] <klu> thais: either using requirements.txt: https://pip.pypa.io/en/stable/user_guide/#requirements-files
[09:01:14] <klu> or maybe try pyinstaller
[09:02:09] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[09:02:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:02:42] *** Joins: jpn (~jpn@user/jpn)
[09:03:20] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[09:03:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[09:04:15] *** Joins: wyclif (~wyclif@user/wyclif)
[09:07:17] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[09:07:42] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[09:09:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[09:09:17] *** Quits: rodstewart1 (~dmartins@188.ip-149-56-97.net) (Quit: WeeChat 3.1)
[09:09:42] *** Joins: wyclif (~wyclif@user/wyclif)
[09:11:47] *** Quits: icy_hot (~icy_hot@1.214.31.43) (Ping timeout: 256 seconds)
[09:14:27] *** Quits: widp (~widp@124.123.105.142) (Remote host closed the connection)
[09:16:39] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[09:17:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cb4:ef3c:d7cc:ad77) (Ping timeout: 240 seconds)
[09:18:09] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[09:18:15] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[09:18:29] *** phaise is now known as phaisedArray
[09:26:09] *** Joins: widp (~widp@2406:7400:73:ddf7:1d0d:e674:16d8:901b)
[09:26:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:26:40] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[09:26:58] *** Joins: frost (~frost@user/frost)
[09:27:39] *** Joins: tapeworm (~tapeworm@188.168.50.119)
[09:29:36] <ColdKeyboard> If I load monochrome image that is read bit by bit left-to-right and then top-to-bottom. Is there an easy way to convert that to an array that would be stored as top-to-bottom first and then left to right?
[09:32:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:32:34] *** Joins: jpn (~jpn@user/jpn)
[09:32:49] <Repiphany> ColdKeyboard: arr.T
[09:32:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:32:55] *** Joins: ravan_ (~ravan@user/ravan)
[09:33:32] *** Quits: icy_hot (~icy_hot@1.214.31.43) (Ping timeout: 240 seconds)
[09:34:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:35:17] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[09:35:31] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[09:35:54] <ColdKeyboard> And is there an easy way to convert that array to hex (bytes) instead of bits/pixels?
[09:36:02] *** Quits: NealRame (~a@114.129.191.165) (Quit: Konversation terminated!)
[09:36:21] <Repiphany> arr.T.tobytes()
[09:36:39] <ColdKeyboard> Awesome, I'll give that a try now
[09:36:43] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:36:51] <ColdKeyboard> I'm not sure if I explained the problem correctly but this sounds like it should work
[09:36:57] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[09:37:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:37:29] <ColdKeyboard> Essentially I have a .bmp that I want to display. But the LCD expects pixels/bytes top-down then left-right, whereas read .bmp is left-right then top-down
[09:38:25] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[09:38:44] *** Joins: fling (~fling@user/fling)
[09:38:52] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:40:11] *** Joins: rtkng (~rtkng@024-176-075-241.res.spectrum.com)
[09:42:14] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4.1)
[09:42:32] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[09:43:38] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[09:44:23] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[09:44:27] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:44:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:44:36] *** Quits: widp (~widp@2406:7400:73:ddf7:1d0d:e674:16d8:901b) (Ping timeout: 240 seconds)
[09:44:55] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:44:57] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[09:46:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[09:47:11] *** Joins: widp (~widp@124.123.105.142)
[09:47:15] *** Joins: redgloboli (~redglobol@user/redgloboli)
[09:47:27] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[09:48:07] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[09:49:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:50:37] *** Quits: rtkng (~rtkng@024-176-075-241.res.spectrum.com) (Ping timeout: 240 seconds)
[09:51:31] *** Joins: bindu (~bindu@user/bindu)
[09:52:35] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:53:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:53:51] *** Joins: jpn (~jpn@user/jpn)
[09:54:22] <WhiteKarura> https://github.com/Jinay98/Housing-Society-Management-App
[09:54:23] <WhiteKarura> I wanted to replicate this project on my own. However, I'm not being able to run this properly. I keep getting a squiggly line beneath 'Housing_Society_App' in this snippet...
[09:54:23] <WhiteKarura> https://bpa.st/5D7Q
[09:54:24] <WhiteKarura> Could anyone please guide me on how to fix this
[09:55:25] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[09:56:45] <jinsun> WhiteKarura: make sure that your working directory is the parent folder of Housing_Society_App
[09:57:10] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:57:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1d6b:afda:ac54:cccf) (Ping timeout: 240 seconds)
[09:58:15] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[09:59:18] *** Joins: wyclif (~wyclif@user/wyclif)
[09:59:34] <WhiteKarura> jinsun Yes, I've been doing that from the very beginning...I go to the parent folder, type 'cmd', get into the command prompt, and launch it from there.
[09:59:34] <WhiteKarura> using the plain old 'python manage.py runserver'
[10:00:20] <jinsun> okay, so it is running fine?
[10:00:24] *** Quits: icy_hot (~icy_hot@1.214.31.43) (Quit: WeeChat 3.4.1)
[10:00:44] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[10:01:06] <jinsun> if it is just your IDE showing red squiggles then you need to figure out how to change the working directory in your IDE too
[10:01:31] <jinsun> in vscode you just go to File -> Open folder...
[10:01:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:02:30] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:02:51] <WhiteKarura> https://bpa.st/IFFQ
[10:02:52] <WhiteKarura> No, unfortunately, it's not running...This is what I keep getting on the command prompt
[10:02:55] *** Joins: Pickchea (~private@user/pickchea)
[10:03:17] *** Joins: manti7 (~manti7@176.10.104.94)
[10:03:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:04:51] <WhiteKarura> https://github.com/Jinay98/Housing-Society-Management-App/blob/master/Housing_Society_App all the critical files are here, and I haven't changed a thing. I was just tying to clone and run it first to see if it was working or not
[10:05:16] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[10:05:39] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:06:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:07:18] <ColdKeyboard> Repiphany Thanks! Transposing the image and converting to image worked!
[10:08:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:10:20] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:10:22] *** Joins: junebug (~junebug@2600:1700:3db0:2540:86fd:617e:8713:a94f)
[10:11:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:12:26] <jinsun> WhiteKarura: hmm, so from the error it is looking for accounts.urls module, but there is no urls.py here https://github.com/Jinay98/Housing-Society-Management-App/tree/master/accounts
[10:12:59] <WhiteKarura> https://github.com/Jinay98/Housing-Society-Management-App/tree/master/Housing_Society_App
[10:13:11] <jinsun> dunno enough about django to say if that is normal or if this is just some incomplete code that you are supposed to "fill in"
[10:13:17] <WhiteKarura> sorry, wrong link
[10:13:34] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[10:14:29] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[10:16:13] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[10:17:32] *** Quits: daedw (~daedw@cpe-172-113-121-232.socal.res.rr.com) (Ping timeout: 240 seconds)
[10:20:20] *** Joins: djapo (~archangel@user/djapo)
[10:20:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:86fd:617e:8713:a94f) (Ping timeout: 240 seconds)
[10:20:54] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[10:20:55] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:21:01] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:21:19] *** Joins: upsala (~zcb@185.209.196.134)
[10:21:33] *** Quits: spiderman (spiderman@spiderman.shelltalk.net) (Ping timeout: 268 seconds)
[10:22:24] *** Quits: medecau (~medecau@2a02:1210:78da:cc00:8990:e4db:942c:e1) (Quit: medecau)
[10:25:48] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[10:26:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:26:47] *** Joins: jmd (~user@de.cellform.com)
[10:26:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[10:27:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[10:28:51] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[10:30:33] *** Quits: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[10:30:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[10:30:58] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:31:17] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[10:31:19] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[10:31:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[10:31:43] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[10:32:08] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[10:32:27] *** Joins: jay-m126 (~jay-m@129.0.99.217)
[10:32:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:32:31] *** Joins: jay-m126_ (~jay-m@129.0.99.217)
[10:32:32] *** Joins: jay-m1261 (~jay-m@129.0.99.217)
[10:32:41] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[10:33:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:34:15] <jmd> I'm a relative newcomer to python.  What is the differences are there between putting "x=5" on the first line of a class definition and putting "self.x=5" in the __init__ function ?
[10:35:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:36:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:36:33] <BrenBarn> one creates a class attribute shared among all instances of the class, the other creates a separate instance attribute for each class
[10:36:51] <BrenBarn> when the value is an integer it can be a little harder to see the effect, but it will be noticeable if instead of 5 the value is something like `[]`
[10:36:58] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:37:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:37:10] <BrenBarn> (i.e., a mutable object)
[10:37:27] *** Parts: WhiteKarura (~WhiteKaru@user/whitekarura) ()
[10:37:32] *** Quits: emerent (~quassel@p200300cd5743c3f5ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:37:43] <deniska> jmd: imagine `x = 5` inside a class body being a bit like `static` in java or c# if you are familiar with these
[10:37:56] *** Joins: emerent (~quassel@p200300cd5743c31fba27ebfffed28a59.dip0.t-ipconnect.de)
[10:38:09] <jmd> deniska: I'm familiar with c++
[10:38:21] <BrenBarn> er, sorry, I said "separate instance attribute for each class" but I meant "separate instance attribute for each instance"
[10:38:55] <jmd> BrenBarn: Ahh Thanks for the clarification.  I was wondering.
[10:40:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:40:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:41:31] <jmd> The reason I was asking, is that I had self.lock = threading.Lock () in my init function, and the lock seems to be failing in some cases.  Moving it to the class body seems to fix the problem, but I'm unsure why.
[10:41:32] <jmd>  
[10:42:07] *** Quits: widp (~widp@124.123.105.142) (Read error: Connection reset by peer)
[10:42:20] *** Joins: widp (~widp@124.123.105.142)
[10:42:29] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:42:45] *** Joins: fling (~fling@user/fling)
[10:44:35] <BrenBarn> well, using `self.lock = ...` will create a separate lock for each object
[10:44:53] <BrenBarn> whereas putting in the class body will create one lock shared by all instances
[10:44:59] *** Joins: zmt01 (~zmt00@user/zmt00)
[10:45:10] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:45:35] *** Joins: jpn (~jpn@user/jpn)
[10:45:39] *** Quits: widp (~widp@124.123.105.142) (Remote host closed the connection)
[10:45:52] <BrenBarn> so you could run into a situation where some code is locking one instance but still able to mess with another instance, and if there is some shared state or dependency among multiple instances, that could cause a problem, I suppose
[10:46:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:46:04] <jmd> okay.  If I have "x=5" in the body AND "self.x=6" in __init__ do they refer to two different variables or what?
[10:47:05] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.137)
[10:47:09] *** Joins: wyclif (~wyclif@user/wyclif)
[10:47:18] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[10:47:48] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:48:09] <Repiphany> your_instance.x looks up if there is an instance attribute first, then tries for a class attribute and throws an error if neither are defined
[10:48:41] *** Quits: jay-m126_ (~jay-m@129.0.99.217) (Ping timeout: 256 seconds)
[10:48:41] *** Quits: jay-m126 (~jay-m@129.0.99.217) (Ping timeout: 256 seconds)
[10:48:48] <Repiphany> `self.x = blah` always assigns an instance attribute
[10:49:15] *** Quits: jay-m1261 (~jay-m@129.0.99.217) (Ping timeout: 256 seconds)
[10:49:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:49:34] <jmd> Repiphany: And what does blah=self.x do ?
[10:49:39] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[10:49:50] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[10:49:54] <Repiphany> Where are you doing it
[10:50:00] <jmd> in a function
[10:50:11] <Repiphany> Inside an instance method, it's just assigning a local variable
[10:50:21] <jmd> Yes, but from what?
[10:50:31] <Repiphany> <Repiphany> your_instance.x looks up if there is an instance attribute first, then tries for a class attribute and throws an error if neither are defined
[10:50:46] <Repiphany> self == your_instance
[10:51:33] <jmd> Okay.  Thanks for your help l+g.  You've given me some hints what to read up on.
[10:51:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:52:37] *** Joins: wyclif (~wyclif@user/wyclif)
[10:53:59] *** Joins: rje (~textual@65.141.156.170)
[10:55:33] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[10:55:48] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[10:56:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:56:08] *** Joins: fluter (~fluter@user/fluter)
[10:56:13] *** Joins: velix (~velix@user/velix)
[10:56:17] <velix> Yipee, I broke it! python3[27438] general protection fault ip:7fd29ad2f81c sp:7fd25c752cf8 error:0 in libc-2.28.so
[10:57:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:57:29] *** Joins: widp (~widp@2406:7400:73:ddf7:40e6:5e40:52a3:8b25)
[10:57:57] *** Quits: widp (~widp@2406:7400:73:ddf7:40e6:5e40:52a3:8b25) (Read error: Connection reset by peer)
[10:58:05] *** Joins: widp (~widp@124.123.105.142)
[10:58:23] *** Joins: wyclif (~wyclif@user/wyclif)
[10:59:25] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:00:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:03:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[11:03:52] *** Joins: wyclif (~wyclif@user/wyclif)
[11:04:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[11:05:40] *** Joins: dreamon (~dreamon@pd9503763.dip0.t-ipconnect.de)
[11:08:02] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:10:13] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[11:11:08] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:14:45] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cb4:ef3c:d7cc:ad77)
[11:14:56] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: Lost terminal)
[11:16:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:20:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[11:21:32] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[11:24:01] *** Joins: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net)
[11:25:19] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[11:26:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:27:17] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.137) (Ping timeout: 240 seconds)
[11:27:25] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[11:27:49] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[11:28:26] *** Joins: jpn_ (~jpn@user/jpn)
[11:29:33] *** Joins: dudek (~dudek@185.150.236.127)
[11:30:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[11:31:02] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[11:31:24] *** Quits: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[11:32:41] *** Joins: grooverman_ (~grooverma@189.110.77.226)
[11:32:58] *** Joins: ntfls^ (~ntfls@50-243-220-243-static.hfc.comcastbusiness.net)
[11:33:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:34:21] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[11:34:36] *** Quits: grooverman (~grooverma@152.250.149.217) (Ping timeout: 252 seconds)
[11:34:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:34:57] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[11:35:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[11:35:49] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[11:36:47] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 268 seconds)
[11:37:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:37:21] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:37:28] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:37:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:37:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:38:19] *** Joins: spiderman (spiderman@spiderman.shelltalk.net)
[11:38:21] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:39:07] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:39:15] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:39:26] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[11:41:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:41:17] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:43:33] *** Joins: kosh_ (~kosh@user/kosh)
[11:43:40] <sumi80m> help me! the hand finishes me!
[11:44:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:44:54] <madprops> how can we help?
[11:45:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:45:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:46:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:47:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:49:05] *** Quits: jpn_ (~jpn@user/jpn) (Ping timeout: 256 seconds)
[11:51:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[11:55:02] <velix> sumi80m: the grabbing hands...
[11:55:18] <velix> Anyone into PIL/Pillow? Are there different algorithms for grayscale?
[11:55:22] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[11:56:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:56:36] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 240 seconds)
[11:56:41] *** Joins: bahamas (~lucian@84.232.140.158)
[11:57:46] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:59:13] *** Joins: greedom (~greedom@p200300de674e4000732a5aa4c48760a6.dip0.t-ipconnect.de)
[11:59:14] <Repiphany> What do you mean "algorithm for grayscale"
[11:59:31] <Repiphany> There are lots of ways to turn RGB into monochrome, sure
[12:00:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:01:02] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:02:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:04:12] *** Joins: sep870[m] (~sep870mat@2001:470:69fc:105::1:3115)
[12:04:33] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[12:05:00] *** Quits: BillyZane (~BillyZane@152.89.204.151) (Ping timeout: 240 seconds)
[12:05:41] *** Joins: nishant (~Nishant@49.37.242.151)
[12:05:54] <sumi80m> https://www.youtube.com/watch?v=fbGkxcY7YFU
[12:06:10] <sumi80m> velix: are you the real "whatwhat inthebutt?"
[12:06:45] <sumi80m> madprops:  hi
[12:06:50] <velix> Repiphany: In Imagemagick, you have 3 different presets to convert an RGB image to grayscale, e.g. by luminosity or brightness.
[12:07:09] <velix> Repiphany: Could you please add "velix" in your reponseß I'm in the code and I won't get noticed otherwise :D
[12:07:44] <jmd> I thouth "luminosity" and "brightness" were synonyms.  What's the distinction?
[12:07:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:08:32] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[12:10:23] <sumi80m> r u pregnant?
[12:10:45] <velix> jmd: https://imagemagick.org/script/command-line-options.php#intensity
[12:10:53] <velix> jmd: Could you please add "velix" in your reponse? I'm in the code and I won't get noticed otherwise :D
[12:12:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[12:12:42] *** Joins: palasso (~palasso@user/palasso)
[12:13:07] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[12:13:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:18:45] *** Joins: j0be (~j0be@user/j0be)
[12:22:08] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:22:16] *** Joins: eem (~eem@user/eem)
[12:24:45] *** Joins: Midjak (~Midjak@82.66.147.146)
[12:25:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:25:42] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:26:30] *** Joins: MajorBiscuit (~MajorBisc@c-001-023-015.client.tudelft.eduvpn.nl)
[12:28:46] *** Joins: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt)
[12:29:27] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Client Quit)
[12:29:47] *** Joins: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt)
[12:30:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[12:31:26] *** Joins: ravan__ (~ravan@user/ravan)
[12:32:38] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[12:32:41] *** Joins: jpn (~jpn@user/jpn)
[12:33:32] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[12:33:37] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 240 seconds)
[12:33:59] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[12:34:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:34:50] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 250 seconds)
[12:36:03] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[12:37:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:37:48] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:39:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:39:55] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[12:40:37] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[12:41:38] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[12:42:26] *** Joins: LWAI (~lwai@168.70.90.61)
[12:42:34] *** Joins: jim (~jim@about/linux/staff/jim)
[12:43:30] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Killed (NickServ (GHOST command used by xavie!~xavie@2a01:cb19:8f35:ed00:b1b2:ce3a:c5ff:cbad)))
[12:43:53] *** Joins: xcombelle1 (~xavie@176-139-252-198.abo.bbox.fr)
[12:44:09] *** Joins: zaquest (~notzaques@5.130.79.72)
[12:45:32] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[12:46:36] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[12:46:55] *** Joins: fling (~fling@user/fling)
[12:48:44] *** Joins: namkeleser (~namkelese@101.175.155.55)
[12:48:59] *** Quits: greedom (~greedom@p200300de674e4000732a5aa4c48760a6.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:49:52] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[12:50:06] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[12:51:23] *** Joins: EGH (~EGH@185.25.195.104)
[12:51:37] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:51:52] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[12:52:09] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:54:26] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[12:54:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:55:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:55:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:55:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:56:19] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:58:32] *** Quits: ntfls^ (~ntfls@50-243-220-243-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[12:58:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:58:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[12:59:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[13:00:44] *** Joins: rendar (~rendar@user/rendar)
[13:01:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:01:22] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:01:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 240 seconds)
[13:01:41] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[13:03:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:04:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:05:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:05:56] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:07:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[13:11:21] *** Joins: parv (~quass@user/parv)
[13:12:25] *** Joins: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net)
[13:13:56] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:15:11] *** LuvsBigBootyMilf is now known as jiggawatt
[13:15:20] *** Joins: aslicedbanjo (~aslicedba@host31-48-147-31.range31-48.btcentralplus.com)
[13:19:39] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:19:57] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[13:20:50] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[13:21:06] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.137)
[13:21:37] *** Quits: mixfix41 (~sdenynine@user/mixfix41) (Ping timeout: 240 seconds)
[13:22:28] <stdInOut> hello, I cant install urllib to my venv. this error appears;
[13:22:29] <stdInOut> ERROR: Could not find a version that satisfies the requirement urllib
[13:22:29] <stdInOut> ERROR: No matching distribution found for urllib
[13:23:24] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[13:26:50] *** Joins: jpn (~jpn@user/jpn)
[13:28:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:28:08] *** con3_ is now known as con3
[13:28:43] *** Joins: cypostres (~cypostres@user/cypostres)
[13:31:45] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[13:32:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:33:01] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[13:33:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:33:34] *** Quits: dcaro (~dcaro@user/dcaro) (Quit: ZNC 1.8.2 - https://znc.in)
[13:34:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:34:44] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:37:21] *** Joins: routingsparks (~dperrone@ip72-218-52-185.hr.hr.cox.net)
[13:37:25] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 240 seconds)
[13:37:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:37:55] *** Joins: fef (~thedawn@user/thedawn)
[13:38:37] *** Joins: Zer000 (~phil@64.137.132.26)
[13:38:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[13:39:17] *** Joins: magla (~gelignite@55d44736.access.ecotel.net)
[13:39:43] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[13:40:13] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[13:40:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:40:33] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[13:40:43] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 256 seconds)
[13:40:52] <Zer000> "python setup.py test -s integration_tests.TestBlockSpam.testOneThousand" doesn't find the module TestBlockSpam. Without the -s flag that class runs, how do I run a specific test?
[13:41:12] *** Joins: slav0nic (slav0nic@python.su)
[13:41:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:41:52] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[13:41:53] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[13:44:23] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[13:45:04] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:45:30] *** Joins: kcrk (~kcrk@user/kcrk)
[13:49:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:51:02] *** Joins: jim (~jim@about/linux/staff/jim)
[13:51:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:54:36] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:54:36] *** Quits: widp (~widp@124.123.105.142) (Ping timeout: 240 seconds)
[13:55:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:55:56] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[13:55:58] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[13:57:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[13:57:55] *** Joins: dcaro (~dcaro@user/dcaro)
[13:58:25] *** Joins: widp (~widp@157.45.170.177)
[13:58:44] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:59:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:59:40] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:00:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:00:09] *** Quits: widp (~widp@157.45.170.177) (Read error: Connection reset by peer)
[14:00:22] *** Joins: widp (~widp@124.123.106.12)
[14:02:08] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:d7f9:1057:a86e:de25)
[14:02:19] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[14:02:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:03:32] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:04:10] *** Quits: aslicedbanjo (~aslicedba@host31-48-147-31.range31-48.btcentralplus.com) (Quit: Leaving.)
[14:04:25] *** Joins: ice9 (~ice9@user/ice9)
[14:05:35] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[14:06:44] *** Joins: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31)
[14:06:57] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[14:07:26] *** Joins: plastico (~plastico@neomutt/plastico)
[14:09:48] *** Joins: PaterTemporalis (~woooopsie@dsl-79-30.bl27.telepac.pt)
[14:10:04] *** Quits: phaisedArray (~phaise@gateway/tor-sasl/phaise) (Quit: phaisedArray)
[14:10:49] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[14:10:53] *** phaise is now known as phaisedArray
[14:16:20] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[14:17:23] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 252 seconds)
[14:17:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:18:33] *** Quits: m1dnight (~christoph@78-22-9-5.access.telenet.be) (Quit: WeeChat 3.4.1)
[14:20:59] *** Joins: jpn (~jpn@user/jpn)
[14:22:21] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:23:46] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[14:24:57] *** Joins: ice99 (~ice9@user/ice9)
[14:25:05] *** Quits: sawk (~quassel@151.61.121.68) (Remote host closed the connection)
[14:25:43] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[14:26:32] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[14:26:45] *** Joins: wakeup (~wakeup@user/wakeup)
[14:26:59] *** Joins: Atque (~Atque@user/atque)
[14:27:18] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[14:27:49] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[14:30:12] *** Joins: m1dnight (~christoph@78-22-9-5.access.telenet.be)
[14:30:17] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[14:30:29] <gloomy> Hey :-) say in module moduleA I define a class ClassA, and two functions `pickle_A(path)` and `load_from_pickle_A(path)`. if from module moduleB I do `import moduleA` and then `foo = moduleA.load_from_pickleA("somepath")`, I get an attribute error because ClassA is not in the namespace (it's moduleA.classA)
[14:30:36] <gloomy> Is there an elegant/robust way around this?
[14:32:24] <bjs> gloomy: but why do you get the attribute error?
[14:32:27] <gloomy> I can do `from moduleA import *` or `from moduleA import classA` but the first is terrible and the second requires making sure that every name is imported whenever load_from_pickle is necessary and is error-prone
[14:33:30] <gloomy> bjs: I assume it's because pickle_A(path) was called from a different module, and so the pickle file represents the objects
[14:33:46] *** Quits: Jong (~Jong@2620:10d:c090:400::5:74b3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:33:49] <gloomy> *as classA, not moduleA.classA (? not really sure exactly how pickling works)
[14:33:55] *** Joins: ymwm (~yingmanwu@240e:37a:40c9:3700:11e1:e123:e29:2f69)
[14:33:59] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[14:34:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:34:16] *** Joins: weedmic (~weedmic@77.124.92.157)
[14:34:56] <bjs> gloomy: did you save the pickle earlier and change the code since then?
[14:35:00] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 252 seconds)
[14:35:13] <bjs> like refactor the code into modules since pickling?
[14:35:16] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:35:24] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:35:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:36:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:37:15] *** Joins: gzd (~gzd@83-215-123-219.lhau.dyn.salzburg-online.at)
[14:37:33] <gloomy> hmmm, no, but I created the pickle by running moduleA directly, while now I'm trying to load it from a separate module
[14:37:53] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[14:38:05] <bjs> gloomy: pickles are incredibly (incredibly!) fragile
[14:38:21] <bjs> any change in how you run the program,  how it's structured, how things are named will break the pickle
[14:38:33] <gloomy> hmm :(
[14:39:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:40:08] <wakeup> anyone here familiar with flask? and please don't tell me to ask my question
[14:40:13] <wakeup> because last time I did and no answer
[14:40:15] <wakeup> i mena
[14:40:17] <wakeup> i mean
[14:40:23] <wakeup> I just want to know if someone is familiar with flask
[14:40:24] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:40:26] <bjs> wakeup: well that's a good way to make sure nobody answers this time either
[14:40:27] <wakeup> then ask my question
[14:40:50] <wakeup> ok, anyway, I will ask my qeustion
[14:40:51] <wakeup> hahah
[14:41:02] *** Quits: cheater (~Username@user/cheater) (Quit: (BitchX) We drink more beers than Norm on Cheers!)
[14:41:08] <bjs> like if you don't ask your question, definitely nobody will answer
[14:41:09] <bjs> ok sure :)
[14:41:32] <wakeup> basically, I'm getting this error "RuntimeError: Working outside of application context." even though I am executing the code inside the application context, i.e. with "with current_app.app_context()"
[14:41:51] <wakeup> but this code is not executed when a request is made
[14:41:52] *** Joins: cheater (~Username@user/cheater)
[14:42:07] <wakeup> but when creating the flask app in the factory function
[14:42:28] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[14:42:47] <bjs> wakeup: what is "this code"
[14:43:12] <wakeup> it's some code that writes to an sqlite db
[14:43:24] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[14:43:35] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:43:38] <bjs> wakeup: code inside that `with` shouldn't give that error
[14:44:02] *** Joins: fef (~thedawn@user/thedawn)
[14:44:41] <wakeup> but is the application context available in the factory function that creates the flask app
[14:44:48] <wakeup> or is it available only in the views
[14:44:55] <wakeup> that was my question
[14:44:59] <bjs> wakeup: what is "the factory function"?  You mean *your* function?
[14:44:59] <wakeup> one of my questions
[14:45:40] *** Quits: gzd (~gzd@83-215-123-219.lhau.dyn.salzburg-online.at) (Quit: Leaving)
[14:45:50] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[14:46:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:46:09] <bjs> wakeup: I mean using that `with` inside the function that creates the app to do some database stuff is literally *the example* in the docs https://flask.palletsprojects.com/en/2.0.x/appcontext/#manually-push-a-context  so yes i'd hope it would work
[14:47:20] <wakeup> that's exactly the example I was also looking at
[14:47:40] <wakeup> anyway, I solved the problem but it's weird
[14:47:42] <wakeup> because
[14:47:44] <wakeup> let me explain
[14:48:01] <wakeup> using "with app.app_context(): do_some_db_stuff()" works
[14:48:23] <wakeup> but putting "with current_app.app_context()" inside "do_some_db_stuff()" does not work
[14:48:28] <wakeup> and throws the error I said
[14:48:48] <velix> In "styles.py", I've assigned `STYLES={...}`. In main.py, I'm importing `import styles`. But I cannot access STYLES. Did I miss something? I'm on Python 3.7.3
[14:48:49] <bjs> well that's not surprising, there is no current_app if you don't use the with block
[14:48:55] <bjs> wakeup: that's what the with block does, sets current_app
[14:49:00] <wakeup> I used the with block
[14:49:06] <wakeup> but inside do_some_db_stuff()
[14:49:17] <bjs> wakeup: but you said you used current_app
[14:49:36] <wakeup> Imported "from flask import current_app" and used with current_app.app_context(): make_db_commit()
[14:49:44] <bjs> wakeup: yeah that won't work
[14:49:46] <wakeup> that throws an error
[14:49:48] <wakeup> why?
[14:49:49] <bjs> yes
[14:49:53] <wakeup> that's my question
[14:49:58] <han-solo> `current_app` is just a proxy, so until you create the `app = Flask(...)` it will be None, it won't be ready i guess https://github.com/pallets/flask/blob/main/src/flask/globals.py#L44
[14:50:00] *** Quits: ubert (~Thunderbi@p548c8d44.dip0.t-ipconnect.de) (Quit: ubert)
[14:50:10] *** Joins: Atque (~Atque@user/atque)
[14:50:16] <bjs> wakeup: because setting current_app is what the `with` statement does,  it only exists inside the with body
[14:50:20] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[14:50:23] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[14:50:25] <wakeup> but I was calling do_some_db_stuff() after I created app = Fask() in the factory function
[14:50:35] <bjs> wakeup: yes but you did `with app.app_context()` there
[14:50:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:50:39] <velix> from styles import STYLES <-- worked. Thanks!
[14:50:43] <wakeup> yes, and?
[14:50:48] <wakeup> I mean
[14:50:50] <bjs> wakeup: app != current_app
[14:50:50] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[14:50:57] <wakeup> I used current_app after I created the Flask() object
[14:51:09] *** Joins: fling (~fling@user/fling)
[14:51:12] <wakeup> yes, but you just said that current_app is available once you create the Flask() object
[14:51:13] <bjs> But current_app isn't set until you're in a context,  which is what the `with` does
[14:51:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:51:24] <wakeup> but I already said that I used with
[14:51:29] <wakeup> with current_app.app_context()
[14:51:32] <bjs> Yes
[14:51:33] <bjs> no
[14:51:38] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[14:51:40] <wakeup> and this was after I created Flask()
[14:51:49] *** Quits: routingsparks (~dperrone@ip72-218-52-185.hr.hr.cox.net) (Quit: WeeChat 3.4)
[14:51:53] <bjs> wakeup: that can't work, because `current_app` doesn't exist except *inside* the context.
[14:52:09] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[14:52:11] <bjs> You can't go `with current_app.app_context()` because there is no current_app to get the context of, until you're inside a context
[14:53:04] <wakeup> but then why current_app has a field app_context?
[14:53:10] <wakeup> a method
[14:53:42] *** Quits: PaterTemporalis (~woooopsie@dsl-79-30.bl27.telepac.pt) (Ping timeout: 252 seconds)
[14:53:47] <bjs> wakeup: current_app is just a reference/proxy to the current app, and it has an app_context
[14:53:52] <wakeup> if current_app can only be accessed inside a context of an app, then current_app is like a reference to the app, but then why do you care about referring app_context() with current_app
[14:54:00] <bjs> you don't
[14:54:10] <han-solo> after the initialization, you can later use that in other modules, to get a reference to your app using `current_app`
[14:54:25] <bjs> that's why your second `with` fails,  your first goes `with app.app_context()` and that will work,  your other line goes `with current_app.app_context()` but this will fail
[14:54:52] <bjs> and that's not weird at all,  since the whole point of the `with` is to make `current_app` work for the code inside the with
[14:56:58] <wakeup> so are you saying that if I does "from flask import current_app; app = Flask(); with app.app_context(): current_app.do_something()", then this will work
[14:57:11] <bjs> wakeup: yes
[14:57:11] <wakeup> but I am not sure why I would need the current_app object
[14:57:18] <wakeup> can't I just pass around "app"?
[14:57:38] <bjs> wakeup: yeah you can pass around `app` manually if you want
[14:59:26] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[14:59:36] <bjs> but there's lots of things that implicitly read the current_app,  including things like `g`
[15:00:13] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Max SendQ exceeded)
[15:00:41] <wakeup> by the way, I have another piece of code where a command is created with the decorator "@with_appcontext", i.e.  "@with_appcontext def init_db_command(): ..." and this command "init_db_command" is added inside another function init_app, i.e. "app.cli.add_command(init_db_command)". I guess this doesn't throw the error because we're using
[15:00:41] <wakeup> @with_appcontext or because we have access to the original "app." object?
[15:01:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:04:16] *** Joins: kelalaka (~fatih@159.146.74.36)
[15:04:43] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[15:04:58] *** Joins: jancoow (~jancoow@user/jancoow)
[15:06:07] *** Quits: kelalaka (~fatih@159.146.74.36) (Client Quit)
[15:06:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[15:06:54] *** Joins: millido (~millido@84.210.150.128)
[15:07:03] *** Joins: greedom (~greedom@p200300de674e4000732a5aa4c48760a6.dip0.t-ipconnect.de)
[15:10:36] *** Joins: csm3105 (~csm3105@static-214-56-230-77.ipcom.comunitel.net)
[15:11:09] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:12:26] *** Joins: namkeleser (~namkelese@101.175.155.55)
[15:13:45] *** Quits: Coinflipper (~Coinflipp@user/Coinflipper) (Quit: ​)
[15:13:53] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:15:04] *** Joins: jpn (~jpn@user/jpn)
[15:15:06] *** Joins: Coinflipper (~Coinflipp@user/Coinflipper)
[15:16:09] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:16:36] <rendar> result = subprocess.run(["cd", "cottonmouth"]) -- tells me: FileNotFoundError: [Errno 2] No such file or directory: 'cd'
[15:16:38] <rendar> why?
[15:17:06] *** Joins: filename (~kilitary@188.242.105.134)
[15:19:06] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:19:23] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[15:22:02] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[15:23:14] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[15:23:45] *** Joins: src (~src@user/src)
[15:24:29] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[15:25:23] *** Joins: wakeup (~wakeup@user/wakeup)
[15:25:49] *** Joins: jpn (~jpn@user/jpn)
[15:25:49] <ChrisWarrick> rendar: cd is a shell built-in
[15:26:03] <ChrisWarrick> rendar: to change the current working directory, use os.chdir
[15:26:16] *** Joins: Atque (~Atque@user/atque)
[15:26:21] <wakeup> I want to create an admin user when launching the flask app... what's the usual way of doing that? I can e.g. create this admin user when I initialize the db with a command... the problem that I have with this approach is that, whoever has access to the source code, can see the password of the admin
[15:26:44] *** Joins: dextercd (~dexter@2a02:a450:f25d:1:76d4:35ff:fefe:34c)
[15:26:53] <wakeup> I don't know if this can be avoided
[15:26:56] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[15:26:59] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:d7f9:1057:a86e:de25) (Quit: pvergain)
[15:27:20] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[15:27:20] <ChrisWarrick> wakeup: not really, set some simple default password, and then force the user to change it on first login.
[15:28:03] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[15:28:07] <ChrisWarrick> wakeup: you might allow the user to change the default admin password via environment variables, but that’s too much work and still could potentially leak it
[15:28:44] <wakeup> if the admin is the first user that logins to the app, that approach should work
[15:28:47] <wakeup> but what if that's not the case
[15:28:49] *** Joins: cyphase (~cyphase@user/cyphase)
[15:29:02] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:29:28] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[15:29:33] *** Joins: cyphase_ (~cyphase@2600:1700:7800:4680::48)
[15:29:37] <ChrisWarrick> tough luck then
[15:29:45] <ChrisWarrick> reset the database in that case
[15:29:50] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:29:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:29:58] <ChrisWarrick> don’t expose the app to the public internet when you first launch it
[15:30:25] <ChrisWarrick> or you could use the django approach, in which the admin user is created via an interactive command
[15:30:45] <ChrisWarrick> (you might want to use django instead of flask + pile of plugins, btw)
[15:31:08] <wakeup> well, for now, I am exploring flask
[15:31:14] <wakeup> later maybe I will explore django
[15:31:32] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[15:32:02] * ChrisWarrick sees no point in exploring flask these days
[15:32:12] <wakeup> why
[15:32:28] <ChrisWarrick> if you’re building something serious with users and databases and stuff, django does the heavy lifting for you
[15:32:45] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[15:32:51] <ChrisWarrick> if you’re building a light-weight thing, then fastapi will do things more intelligently, and asynchronously
[15:33:08] *** Joins: aod (~a@190-205-148-143.dyn.dsl.cantv.net)
[15:33:09] *** Quits: cyphase_ (~cyphase@2600:1700:7800:4680::48) (Client Quit)
[15:33:19] <wakeup> well, once you know a framework and how to do things in web development, then I guess it's just a matter of knowing the details of each framework
[15:33:35] <wakeup> I started with flask because I was collaborating with a start-up that suggested me to use flask
[15:33:41] <wakeup> in reality, I wanted to start with django
[15:33:45] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[15:33:49] <wakeup> anyway, as I said, later I will also explore django
[15:33:53] <wakeup> for now I explore flask
[15:34:29] <wakeup> I like frameworks that already provide features that work, are robust, etc
[15:34:36] <wakeup> django seemed to be that framework
[15:34:39] <ChrisWarrick> it is
[15:34:53] <wakeup> flask is indeed a bit primitive and you need to use extensions or write your code
[15:34:57] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[15:35:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:35:17] <wakeup> but it's fine to get started or, better, in my case, to review the principles of web development that I didn't looked into for a few years
[15:35:37] <ChrisWarrick> django can also teach you the principles of web development pretty well
[15:35:45] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:35:52] <ChrisWarrick> you do need to write your own code to handle interaction
[15:36:03] <ChrisWarrick> flask is just too easy to make an incompatible mess in
[15:36:40] <aod> Hi guys
[15:37:02] <NoImNotNineVolt> i have the opposite opinion on the matter.
[15:37:11] <wakeup> why?
[15:37:21] <wakeup> u thinks that flask is not a mess?
[15:37:30] <NoImNotNineVolt> django pushes you into some often inappropriate design patterns in many cases, and flask is less likely to do that.
[15:37:44] <ChrisWarrick> NoImNotNineVolt: what inappropriate design patterns do you have in mind?
[15:38:08] <NoImNotNineVolt> mvc?
[15:38:19] <NoImNotNineVolt> or mvt, if you prefer.
[15:38:52] <ChrisWarrick> what makes MVC/MTV inappropriate?
[15:38:53] <aod> why is this code so wrong, https://bpa.st/ZRPA?
[15:38:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:38:58] <NoImNotNineVolt> ChrisWarrick: context, often.
[15:39:18] <ChrisWarrick> aod: it’s written in dead python, for one
[15:39:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[15:39:28] <wakeup> in flask, you also have views and models (I guess you mean data models, like with SQLAlchemy)?  what would be the controller?
[15:39:34] <aod> i know should be `from io import StreamIO`, but what about the rest?
[15:39:40] <wakeup> I remember this term MVC from my previous web dev experience
[15:39:42] <wakeup> with symphony
[15:39:43] <aod> ChrisWarrick lol
[15:39:44] *** Joins: not_not (~root@5.2.79.79)
[15:39:47] *** Quits: tusko (~yeurt@user/tusko) (Remote host closed the connection)
[15:39:48] <nedbat> aod: "print x" is Python 2. you want "print(x)"
[15:40:02] <not_not> ye
[15:40:08] <aod> ChrisWarrick why did he dies?
[15:40:08] *** Joins: tusko (~yeurt@user/tusko)
[15:40:11] <wakeup> *symfony
[15:40:22] <ChrisWarrick> aod: python 2 is eol since 2020
[15:40:28] <not_not> XD
[15:40:42] <ChrisWarrick> aod: this code is python 2-only, which means it’s super ancient
[15:41:02] <aod> ChrisWarrick do you know how can i change to 3?
[15:41:19] <ChrisWarrick> aod: as nedbat said, you’d need print(x, y, z)
[15:41:32] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cb4:ef3c:d7cc:ad77) (Ping timeout: 240 seconds)
[15:41:42] <not_not> aod: just run it in python3 and change the errors to python3 equivilant modules functions etc
[15:41:57] <not_not> had to do it with a sorta big project no big deal boring tho
[15:42:15] <not_not> maybe there are programs that will transcribe it to python3 maybe
[15:42:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:42:54] <wakeup> ChrisWarrick I understood that you like django. So my a little bit provocative question to u is: what doesn't u like about django? is there anything? I think this question can be more insightful to people that want to get started with it
[15:43:06] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:43:12] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:43:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:43:37] <aod> AttributeError: type object '_io.StringIO' has no attribute 'StringIO'
[15:44:26] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[15:44:31] <aod> also i posted the wrong code, https://bpa.st/NPBQ
[15:44:32] <not_not> aod: ye google python3 StringIO replacement
[15:44:47] *** Joins: bindu (~bindu@user/bindu)
[15:44:54] <cyphase> aod, you did `from io import StringIO; StringIO.StringIO`
[15:45:02] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[15:45:13] *** Quits: jim (~jim@about/linux/staff/jim) (Read error: Connection reset by peer)
[15:45:19] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[15:45:38] <cyphase> if you want to do `from io import StringIO` then you just use `StringIO`
[15:45:56] <aod> ok    wav = wave.open(StringIO(wavs))
[15:45:57] <aod> TypeError: initial_value must be str or None, not bytes
[15:45:59] *** Joins: dez (uid92154@user/dez)
[15:46:09] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:46:14] <not_not> aod: str(whateverbyteobjectuwantasstring)
[15:46:25] <cyphase> there's BytesIO as well if you need that
[15:46:32] <ChrisWarrick> wakeup: the thing I dislike the most would be the forms system, which isn’t always as flexible as one would like
[15:46:35] <aod> ok
[15:46:57] <aod> i dint try BytesIO
[15:47:29] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[15:47:35] *** Joins: goldfish (~goldfish@user/goldfish)
[15:48:26] *** Joins: raym (~raym@user/raym)
[15:49:13] <wakeup> u means that tools like that handle the validation of forms and so on?
[15:49:30] <wakeup> in flask there's wtfforms... I've actually used it today and yesterday for that
[15:50:57] <aod> lol
[15:51:06] <aod> no good
[15:51:27] <aod> some offline tts, pls?
[15:51:30] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[15:51:33] *** Quits: weedmic (~weedmic@77.124.92.157) (Quit: Konversation terminated!)
[15:51:54] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[15:52:16] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[15:52:17] <aod> forget it i think i try all
[15:52:45] *** Quits: Strom (strom@fedora/strom) ()
[15:53:59] <not_not> guys what shoud i write my UI's with? anyone have any preferences?
[15:54:05] *** Quits: death916 (~death916@user/death916) (Remote host closed the connection)
[15:54:18] *** Joins: Strom (strom@fedora/strom)
[15:54:27] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[15:55:02] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[15:55:21] *** Joins: fling (~fling@user/fling)
[15:55:30] <betuxy> Hey guys i am working on webscraping and want to get all animals of a local animal shelter for a new project website. With regex and requests i was able to skim through the "all animals" pages to get the individual sites. Right now however I'm trying to locate and download the pictures via xpath with lxml as the html code is not very useful for
[15:55:30] <betuxy> text recognition and I feel like selenium might be way slower and overkill?. I get the following error though: OSError: Error reading file '<!DOCTYPE html>
[15:55:31] <betuxy>  this is the script, any help is appreciated https://termbin.com/9kgi
[15:58:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:58:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:59:51] *** Joins: widp (~widp@2406:7400:73:b5f5:8d39:7da2:ef6b:8887)
[16:00:20] *** Joins: jim (~jim@about/linux/staff/jim)
[16:00:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:00:54] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[16:00:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:01:14] <BtbN> html is neither xml nor can it be sensibly parsed with regexp
[16:01:31] <BtbN> Have you heard of beautifulsoup?
[16:02:24] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 250 seconds)
[16:03:11] <betuxy> no
[16:03:28] <not_not> yes i have
[16:03:37] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[16:04:34] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:05:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:05:41] <supakeen> not_not: on this line: `    tree = etree.parse(response.text, parser)`, `etree.parse` expects a string (which it will interpret as a file path) or a file-like object that it will `.read()` from, use `etree.fromstring(response.text)` or throw StringIO in between with `etree.parse(io.StringIO(response.text), parser)`.
[16:05:48] <supakeen> You'll need to import `io`.
[16:05:53] <braxas> Should typing.Tuple not be a subclass of typing.Collection?
[16:06:03] <The-Compiler> supakeen: you mean betuxy
[16:06:10] <supakeen> Oh, yes betuxy.
[16:06:16] <supakeen> I am not yet used to this weird client.
[16:06:22] <not_not> ahh
[16:06:27] <The-Compiler> braxas: obligatory https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454 ;)
[16:06:35] <The-Compiler> wow now I'm highlighting the wrong person too, great
[16:06:41] <The-Compiler> betuxy: ^
[16:07:00] <supakeen> 😀
[16:07:03] *** Joins: Blankspace (~Blankspac@user/blankspace)
[16:07:12] <not_not> The-Compiler: lol
[16:07:20] <The-Compiler> not_not: depends, what kind of GUI? For more complex stuff, Qt/PySide6 is quite nice, but certainly has a learning curve
[16:07:39] <not_not> ye ye, but i've learned some of it tho
[16:07:46] <betuxy> thanks guys, I'll look into beautiful soup first and look into the suggestions :)
[16:07:57] *** Joins: ubert (~Thunderbi@p200300ecdf158818c4a19710929e5265.dip0.t-ipconnect.de)
[16:08:07] <not_not> i like qt, it adheres to my core philosophy about computers
[16:08:43] <not_not> https://www.youtube.com/watch?v=rTzO-_Yl4d0
[16:08:50] <The-Compiler> betuxy: lxml.etree is fine as well, beautifulsoup might be a bit easier to use
[16:08:58] <not_not> diffrence is a computer is something that does actual work
[16:09:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:09:47] <The-Compiler> not_not: please keep this channel on-topic :)
[16:11:12] <not_not> ait
[16:11:46] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[16:11:50] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[16:12:04] *** Joins: Guest14 (~Guest14@2001:d08:d5:6db7:b1fc:ac6f:77dd:7120)
[16:13:24] *** Quits: widp (~widp@2406:7400:73:b5f5:8d39:7da2:ef6b:8887) (Ping timeout: 240 seconds)
[16:13:43] *** Joins: widp (~widp@124.123.106.12)
[16:14:01] <Guest14> hello
[16:14:15] *** Quits: jim (~jim@about/linux/staff/jim) (Read error: Connection reset by peer)
[16:14:22] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[16:14:33] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[16:15:32] <Guest14> can i ask a question ?
[16:15:49] <phaisedArray> Yes
[16:15:51] <nedbat> Guest14: Welcome. If you have a question, it's always best to jump right in and ask it.
[16:16:27] *** Joins: revolve_ (~u0_a227@82-132-238-85.dab.02.net)
[16:17:08] <Guest14> i am used older version windows7, which version python could i install
[16:17:36] <Guest14> just want to learn python
[16:17:56] <not_not> Guest14: python3
[16:18:01] <bparker> Windows 7 is EOL and no longer supported
[16:18:14] <not_not> either 9 or 10
[16:18:34] <nedbat> Guest14: it looks like you can run Python 3.8
[16:18:40] <not_not> Guest14: install linux on a flashdrive maybe, im doing this as we speak since windows 11 has ads
[16:20:02] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[16:20:29] <Guest14> ok trying 3.8
[16:20:51] *** Joins: jim (~jim@about/linux/staff/jim)
[16:20:52] *** Joins: p-i- (~Ohmu@183.89.28.57)
[16:21:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[16:22:16] *** Joins: rsx (~dummy@ppp-188-174-148-87.dynamic.mnet-online.de)
[16:22:49] *** Joins: kts (~kts@103.73.237.62)
[16:23:47] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[16:25:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:26:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:27:29] *** Quits: Zer000 (~phil@64.137.132.26) (Quit: Leaving)
[16:30:23] *** Quits: dudek (~dudek@185.150.236.127) (Quit: Leaving)
[16:31:28] <anddam> Repiphany, jinsun: why the isqrt(n) constraint?
[16:32:33] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[16:32:44] <anddam> jinsun: wow I am very new to type hinting in py
[16:32:57] <anddam> that looks nice and horrible at the same time
[16:33:23] <jinsun> anddam: if nothing smaller than the square root divided it, then nothing larger than the square root can divide it (because the quotient will be a smaller number that you would have hit already)
[16:33:26] *** Joins: cassepipe (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr)
[16:33:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[16:33:59] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[16:34:07] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:34:09] <anddam> jinsun: yes, was reasoning just about that in geometrical terms
[16:34:35] <anddam> jinsun: also my attempt was failing because I couldn't see how the prime number list would have been bootstrapped
[16:34:43] <anddam> turns out I skipped visited.append(i)
[16:34:45] * anddam oopses
[16:35:05] <jinsun> but actually checking whether the prime is smaller than sqrt(i) is not needed most of the time, because you find out it is not a prime much before that
[16:35:07] *** Joins: Msandoy_ (~Msandoy@telia-590849-163.connect.netcom.no)
[16:35:47] <anddam> the ratio of looking for primes is that we do not need non-prime factors, since those are composed by prime factors themselves
[16:35:58] <anddam> i.e. a multiple of 4
[16:36:05] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:36:16] <anddam> I mean rather than brute-ranging 1..n//2
[16:36:22] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[16:37:19] <not_not> jinsun: u seen that quake fast version of approximating a sqrt() they use on normals to save speed?
[16:37:38] <jinsun> and yeah type hinting is nice, even if it looks weird sometimes, I do it because I set up vscode to complain if I don't do it
[16:38:33] <jinsun> not_not: you mean the inverse square root thing? https://en.wikipedia.org/wiki/Fast_inverse_square_root#Overview_of_the_code
[16:38:51] <not_not> ye ye ye
[16:39:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:39:39] <jinsun> that's a famous one, though I try to avoid C as much as possible :D
[16:40:04] <not_not> jinsun: well same atleast for production shit
[16:40:15] <not_not> anywhere i can get away with using python i use python
[16:40:36] <not_not> i've seen governments collapse over bad C
[16:42:16] *** Joins: filthypunk (filthypunk@gateway/vpn/protonvpn/filthypunk)
[16:42:57] *** Parts: zfnmxt (~zfnmxtzfn@user/zfnmxt) ()
[16:43:09] *** Joins: sobkas (~sobkas@95.175.17.217)
[16:43:17] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:43:42] *** Quits: kts (~kts@103.73.237.62) (Ping timeout: 252 seconds)
[16:43:42] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[16:44:10] *** Quits: ubert (~Thunderbi@p200300ecdf158818c4a19710929e5265.dip0.t-ipconnect.de) (Quit: ubert)
[16:45:01] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7023:87ef:b4e8:5e17)
[16:46:00] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[16:46:56] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[16:47:32] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:47:36] *** Quits: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31) (Quit: Konversation terminated!)
[16:47:47] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:47:49] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[16:47:54] *** Joins: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31)
[16:48:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:49:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:50:28] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[16:50:33] *** Joins: Pickchea (~private@user/pickchea)
[16:52:27] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[16:52:31] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:54:57] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:55:21] *** Joins: ano (~ano@user/ano)
[16:58:34] *** Joins: jpn (~jpn@user/jpn)
[16:59:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[16:59:48] *** Joins: fling (~fling@user/fling)
[17:00:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:00:35] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[17:00:40] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:00:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:01:22] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[17:01:27] *** Quits: filthypunk (filthypunk@gateway/vpn/protonvpn/filthypunk) (Quit: Leaving)
[17:02:32] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.137) (Ping timeout: 240 seconds)
[17:02:57] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:03:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:03:32] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[17:04:28] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-11bd-19ea-20a3-8390.res6.spectrum.com)
[17:05:31] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:06:44] *** Quits: aod (~a@190-205-148-143.dyn.dsl.cantv.net) (Quit: leaving)
[17:07:03] *** Quits: uhu (~uhu@static.101.168.216.95.clients.your-server.de) (Excess Flood)
[17:07:23] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[17:07:29] *** Quits: magla (~gelignite@55d44736.access.ecotel.net) (Quit: Stay safe!)
[17:09:16] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:10:04] *** gentooclimax is now known as climax
[17:10:13] *** climax is now known as gentooclimax
[17:10:57] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[17:12:33] *** Quits: not_not (~root@5.2.79.79) (Quit: Lost terminal)
[17:12:49] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[17:13:44] *** Quits: icy_hot (~icy_hot@1.214.31.43) (Quit: WeeChat 3.4.1)
[17:14:37] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 240 seconds)
[17:15:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:16:23] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[17:16:38] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[17:17:02] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[17:17:32] *** Joins: zeden (~zeden@user/zeden)
[17:17:41] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[17:17:59] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[17:18:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:19:24] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[17:20:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:20:59] *** Joins: MrBenC (Ben@mrbenc.net)
[17:20:59] *** Quits: MrC (Ben@mrbenc.net) (Killed (lithium.libera.chat (Nickname regained by services)))
[17:20:59] *** MrBenC is now known as MrC
[17:21:30] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 268 seconds)
[17:21:41] *** Joins: FluffyMask (~masque@user/fluffymask)
[17:21:48] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:23:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[17:23:33] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:24:37] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.4)
[17:25:23] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:27:17] *** Quits: ymwm (~yingmanwu@240e:37a:40c9:3700:11e1:e123:e29:2f69) (Ping timeout: 240 seconds)
[17:27:20] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[17:28:43] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:28:44] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:29:25] *** Joins: Iolo (~iolo@user/Iolo)
[17:30:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:31:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:31:28] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[17:32:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:33:54] *** Quits: pr3d4t0r (~pr3d4t0r@user/pr3d4t0r) (Quit: WeeChat 3.4.1)
[17:35:56] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[17:36:07] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[17:36:26] *** Joins: kts (~kts@103.73.237.62)
[17:36:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:36:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:36:59] <nvz> heh
[17:37:15] *** Joins: rond_ (~rond_@90.254.208.190)
[17:37:38] *** Joins: nomic (~nomic@185.217.117.111)
[17:37:50] *** Joins: pr3d4t0r (~pr3d4t0r@user/pr3d4t0r)
[17:38:04] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cb4:ef3c:d7cc:ad77)
[17:38:58] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Client Quit)
[17:39:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:40:00] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:40:17] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[17:40:46] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 250 seconds)
[17:41:57] *** Quits: sentriz (~sentriz@109.255.139.98) (Remote host closed the connection)
[17:42:06] *** Joins: sentriz (~sentriz@109.255.139.98)
[17:45:25] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[17:45:25] *** gentooclimax is now known as climax
[17:45:37] *** Quits: cypostres (~cypostres@user/cypostres) (Quit: Leaving)
[17:46:34] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:46:45] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:46:52] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[17:48:27] *** Joins: KeiraT (~k@lulzsec.co.uk)
[17:48:44] *** Quits: Msandoy_ (~Msandoy@telia-590849-163.connect.netcom.no) (Remote host closed the connection)
[17:49:38] *** Joins: uzl[m] (~uzluisfma@2001:470:69fc:105::a1e6)
[17:49:45] *** Quits: greedom (~greedom@p200300de674e4000732a5aa4c48760a6.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:50:10] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:6892:45fe:1125:a250)
[17:50:20] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[17:51:21] *** Joins: moog (~moog@107.126.53.83)
[17:51:34] *** Joins: Msandoy (~Msandoy@telia-590832-38.connect.netcom.no)
[17:51:54] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[17:51:57] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[17:52:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:53:08] <spawnmc> what is the best, 2022 way to run shell commands and store output? I see a lot of different answers to this question on stack overflow
[17:53:21] *** Joins: junebug (~junebug@2600:1700:3db0:2540:fe4b:7880:dfb4:9865)
[17:54:21] *** Quits: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[17:54:47] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:54:56] <nvz> you would need to be more specific, best is not a qualifier that means anything to anyone else.
[17:55:03] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[17:55:11] <nvz> the best to me, is the one I know how to use :P
[17:55:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[17:55:27] <phaisedArray> Redirect output to a file.
[17:55:28] *** Joins: white2 (~mahengrui@user/mahengrui1)
[17:55:47] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[17:56:01] <nvz> phaisedArray: you're in #python.. I think they're asking for which of the plethora of libraries and calls to use to do such a thing
[17:56:03] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[17:56:03] *** Quits: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31) (Read error: Connection reset by peer)
[17:56:11] <nvz> if this were #bash, that would probably be the answer :P
[17:56:48] <nvz> and I suspect they don't literally mean /save/ as in to disk, but just to be able to process the output later
[17:56:51] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[17:56:55] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 240 seconds)
[17:57:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[17:58:19] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[17:58:26] *** Quits: jim (~jim@about/linux/staff/jim) (Read error: Connection reset by peer)
[17:58:35] <spawnmc> ok, if I wanted to run some shell program like uhh "ls -l" or netstat, is it better to use something like os.system or a subprocess.call ?
[17:58:54] <spawnmc> and if i wanted to store the output, popen?
[17:59:37] <Andrew> I'd use sp.call and sp.Popen
[17:59:41] <grym> spawnmc: subprocess.check_output(['ls','-l'])
[18:00:11] *** Joins: jim (~jim@about/linux/staff/jim)
[18:01:19] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[18:02:25] <Peng> Of course, often the best choice is not to use an external program for something at all
[18:03:31] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[18:03:36] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[18:03:56] *** Joins: fling (~fling@user/fling)
[18:04:01] *** Joins: wakeup (~wakeup@user/wakeup)
[18:04:10] *** Quits: csm3105 (~csm3105@static-214-56-230-77.ipcom.comunitel.net) (Ping timeout: 250 seconds)
[18:04:12] *** Joins: jpn (~jpn@user/jpn)
[18:04:34] <nvz> yeah a more pythonic way to do things like ls would be to use python libraries
[18:04:41] <spawnmc> Peng I agree, I'm trying to refactor these bash scripts I used to write into python and some of them make use of specific programs(not stuff like ls and grep)
[18:04:51] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[18:05:21] *** Joins: dimbag (axlrose@shell.xshellz.com)
[18:05:31] <spawnmc> such as integrating puppet specific CLI commands(puppet-show task)
[18:05:38] <spawnmc> or puppet login
[18:06:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:08:10] <spawnmc> so i'm not sure how to do what these specific programs do without just running them
[18:09:03] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[18:09:19] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[18:09:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:fe4b:7880:dfb4:9865) (Remote host closed the connection)
[18:10:00] *** Joins: junebug (~junebug@2600:1700:3db0:2540:83a2:22ec:77ed:37b5)
[18:10:17] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[18:10:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:11:49] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 256 seconds)
[18:12:01] <velix> I don't like f-strings. They're often hard to read in complex constructs.
[18:12:17] <velix> f'{a}_{b}k.png' <-- urgs
[18:12:56] <velix> '%s_%sk.png' % (a, b) <-- aah!
[18:13:20] <nvz> heh
[18:13:48] *** Quits: MajorBiscuit (~MajorBisc@c-001-023-015.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[18:13:57] *** climax is now known as gentooclimax
[18:14:08] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 250 seconds)
[18:14:37] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[18:14:59] *** Quits: junebug (~junebug@2600:1700:3db0:2540:83a2:22ec:77ed:37b5) (Ping timeout: 256 seconds)
[18:15:40] <grym> "now i have to look in four places, not two" >.>
[18:17:03] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[18:17:05] <velix> grym: I often just wantto have a quick look at the variables used.
[18:17:16] <velix> I don't want to play interpretor and read the whole fstring
[18:17:20] *** Joins: nomic (~nomic@185.217.117.111)
[18:17:22] <velix> interpreter*?
[18:17:25] <grym> velix: right, they're between the {}, nicely highlighted in a friendly color...
[18:17:37] <velix> grym: vscodie? ;)
[18:17:44] <grym> velix: not usually, no
[18:17:49] <grym> sometimes
[18:17:59] <grym> (mostly pycharm and emacs)
[18:19:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:20:32] *** Quits: kts (~kts@103.73.237.62) (Ping timeout: 240 seconds)
[18:21:22] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[18:21:58] *** Joins: aslicedbanjo (~aslicedba@host31-48-144-107.range31-48.btcentralplus.com)
[18:22:49] *** Joins: paul424 (~tom@ip-5-172-235-251.multi.internet.cyfrowypolsat.pl)
[18:22:58] *** Quits: tapeworm (~tapeworm@188.168.50.119) (Quit: Leaving)
[18:22:59] *** Joins: korg815 (~korg815@user/korg815)
[18:24:07] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:24:30] *** Joins: mossman93 (~quassel@user/mossman93)
[18:25:33] *** Joins: junebug (~junebug@2600:1700:3db0:2540:558e:7e8e:77c9:2078)
[18:26:02] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[18:26:09] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[18:26:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:29:06] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:29:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:30:04] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[18:30:08] *** Joins: Auron (Auron956@user/auron)
[18:30:15] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[18:30:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[18:30:43] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[18:30:57] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:31:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:31:21] *** Joins: Giovanni (~Giovanni@45.128.199.65)
[18:31:30] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[18:32:40] *** Quits: Giovanni (~Giovanni@45.128.199.65) (Client Quit)
[18:32:52] *** Joins: Giovanni (~Giovanni@45.128.199.65)
[18:32:53] <gloomy> Hey, an issue is driving me nuts and I don't know in which channel to ask. I have a python script that grabs the user clipboard by doing subprocess.check_output("/usr/bin/xsel"). If I run it with python in a terminal it works, but when I put it as a script that is triggered by a i3 keybinding it hands on the subprocess call. Any idea what might be causing that?
[18:33:35] <gloomy> hangs*
[18:34:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:34:43] *** Joins: bloody (~bloody@user/bloody)
[18:34:56] *** Joins: martums597 (~martums@user/martums)
[18:34:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:35:16] *** Joins: Gerula_ (~Gerula@user/gerula)
[18:35:16] *** Quits: Gerula (~Gerula@user/gerula) (Killed (lead.libera.chat (Nickname regained by services)))
[18:35:16] *** Gerula_ is now known as Gerula
[18:35:41] *** Joins: alex_ (~alex11@user/alex11)
[18:35:48] *** Joins: tnahsin (~Nishant@49.37.242.151)
[18:36:06] *** Joins: Iolo_ (~iolo@user/Iolo)
[18:36:18] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[18:36:19] *** Quits: tnahsin (~Nishant@49.37.242.151) (Read error: Connection reset by peer)
[18:36:20] *** Joins: nawcom_ (~nawcom@bulldadachat.com)
[18:36:24] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[18:36:35] *** Joins: merist_ (~merist@87.249.134.29)
[18:36:40] *** Joins: minto (~mintograd@47.201.5.61)
[18:36:44] *** Joins: piscvau (~odile@lfbn-gre-1-323-48.w90-112.abo.wanadoo.fr)
[18:36:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-855f-50e7-28b4-6a40.res6.spectrum.com)
[18:36:53] *** Joins: SirScott3 (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[18:37:00] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:37:07] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[18:37:10] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:37:15] <InPhase> gloomy: I don't know what your i3 keybinding does, but you should examine the value of os.getenv('DISPLAY') in your script.  xsel will depend upon that environment variable existing and being passed along.
[18:37:18] *** Joins: aileran_ (~ubuntu@ec2-18-219-39-125.us-east-2.compute.amazonaws.com)
[18:37:20] *** Joins: dademurphy_ (~dademurph@45.63.16.83)
[18:37:24] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.30)
[18:37:27] *** Joins: cs (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[18:37:28] *** Joins: pankid (~quassel@pankid.club)
[18:37:32] *** Joins: llua` (~llua@zsh/developer/llua)
[18:37:34] *** Quits: nishant (~Nishant@49.37.242.151) (Read error: Connection reset by peer)
[18:37:34] *** Quits: nawcom (~nawcom@bulldadachat.com) (Ping timeout: 240 seconds)
[18:37:34] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[18:37:34] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 240 seconds)
[18:37:34] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 240 seconds)
[18:37:34] *** Quits: MootPoot (uid444585@id-444585.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[18:37:39] *** Joins: [RiFo] (~RiFo@user/rifo)
[18:37:42] *** Joins: gaken_ (~gaken@user/galen)
[18:37:49] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[18:37:57] *** Joins: kosh_000__ (~kosh@user/kosh)
[18:38:01] *** Joins: bryce_ (~bryce@ool-457dd6ac.dyn.optonline.net)
[18:38:13] *** Joins: Antibody_ (~Antibody@107.170.145.30)
[18:38:21] *** Joins: ThatOtherGuy (~LogicAsid@user/logicaside)
[18:38:32] <gloomy> Had a suspicion about that again but I tried explicitly setting the display (check_output("xsel", env = dict(os.environ, DISPLAY=":0")) and it still fails
[18:38:35] <gloomy> *as well, not again.
[18:38:49] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 250 seconds)
[18:38:55] *** Joins: blddk7 (~blddk@user/blddk)
[18:38:58] *** Joins: someone235_ (uid419897@id-419897.ilkley.irccloud.com)
[18:38:59] *** Joins: weechat1 (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[18:39:06] *** Joins: MootPoot (uid444585@id-444585.ilkley.irccloud.com)
[18:39:10] *** Joins: pythonoob3 (~thelounge@om126166154220.28.openmobile.ne.jp)
[18:39:35] *** Joins: sus6 (zero@user/zeromomentum)
[18:39:39] <InPhase> gloomy: Have you verified that is the value of DISPLAY in the successful run?
[18:39:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[18:39:53] *** Joins: slav0nic_ (slav0nic@python.su)
[18:39:53] *** Joins: acidsys_ (~LSD@2a03:4000:55:d20::3)
[18:39:55] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 256 seconds)
[18:40:05] *** Joins: MrAureliusR_ (~MrAureliu@user/mraureliusr)
[18:40:09] <gloomy> yeah, added a check and it's ":0" in both cases
[18:40:12] *** Joins: Dreamwea- (~Dreamweav@37.48.111.199)
[18:40:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:40:13] *** Joins: anshupatia_ (uid29854@id-29854.helmsley.irccloud.com)
[18:40:16] *** Joins: henco0 (~henco@lon11.dustyservers.com)
[18:40:16] *** Joins: rvgate4 (~rvgate@user/rvgate)
[18:40:17] *** Joins: farn_ (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[18:40:18] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[18:40:24] *** Joins: twice6 (~twice@173.82.153.50)
[18:40:27] *** Joins: dextercd1 (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:40:36] *** Quits: Giovanni (~Giovanni@45.128.199.65) (Quit: Quit)
[18:40:36] *** Joins: Foxyloxy_ (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[18:40:37] *** Joins: Dantalion (~Dantali0n@45-138-228-251.connected.by.freedominter.net)
[18:40:40] *** Joins: ens_ (~ens@yoke.ch0wn.org)
[18:40:48] *** Joins: Giovanni (~Giovanni@45.128.199.65)
[18:40:52] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[18:40:58] *** Joins: Milos_ (~Milos@user/milos)
[18:41:04] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[18:41:08] *** Joins: sharpertool_ (sid80151@id-80151.hampstead.irccloud.com)
[18:41:18] *** Joins: EGH (~EGH@185.25.195.104)
[18:41:19] *** Joins: AlpineLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[18:41:24] *** Joins: noteness (~noteness@user/noteness)
[18:41:25] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[18:41:51] <InPhase> gloomy: I suppose next I would make a bash script that calls xsel, but redirects stderr and stdout to a file for logging, and then run that indirectly instead of xsel directly, to see if you're missing some diagnostic.  Perhaps with paranoid extras like echo "about to run" and echo "done running" before and after to the same file.
[18:41:54] *** Joins: sentriz_ (~sentriz@109.255.139.98)
[18:41:55] *** Joins: dhill_ (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[18:42:03] *** Joins: redj_ (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[18:42:03] *** Quits: junebug (~junebug@2600:1700:3db0:2540:558e:7e8e:77c9:2078) (Ping timeout: 250 seconds)
[18:42:04] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: someone235 (uid419897@id-419897.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: aileran (~ubuntu@ec2-18-219-39-125.us-east-2.compute.amazonaws.com) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: mintograde (~mintograd@47.201.5.61) (Remote host closed the connection)
[18:42:05] *** Quits: rvgate (~rvgate@user/rvgate) (Read error: Connection reset by peer)
[18:42:05] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cb4:ef3c:d7cc:ad77) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: gaken (~gaken@user/galen) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: dademurphy (~dademurph@45.63.16.83) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: Antibody (~Antibody@107.170.145.30) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: pythonoob (~thelounge@om126166154220.28.openmobile.ne.jp) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: martums59 (~martums@user/martums) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: Iolo (~iolo@user/Iolo) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: kosh_ (~kosh@user/kosh) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: blddk (~blddk@user/blddk) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: MercilessDeth (~brad@136.49.59.177) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: EdFletcher (~PKD@user/edfletcher) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: llua (~llua@zsh/developer/llua) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: ens (~ens@yoke.ch0wn.org) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: waxfire (~waxfire@65.119.2.240) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: sus (zero@user/zeromomentum) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: daddy (3645@hashbang/bdfl) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: merist (~merist@87.249.134.29) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: sentriz (~sentriz@109.255.139.98) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: odinsbane (~mbs@pat-pool-138.crick.ac.uk) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: nadio (ice@starlight.iextreme.org) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: andi_ (~andi@user/andi/x-3467420) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: henco (~henco@lon11.dustyservers.com) (Quit: Ping timeout (120 seconds))
[18:42:05] *** Quits: dextercd (~dexter@2a02:a450:f25d:1:76d4:35ff:fefe:34c) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: novns (~novns@user/novns) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: jamie9898 (~jamie9898@173.199.70.206) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: Milos (~Milos@user/milos) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: MacGyver (~macgyver@user/macgyver) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: bluss (~bluss@user/bluss) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: Dantali0n (~Dantali0n@2a10:3781:15ed::2003) (Quit: Bye)
[18:42:05] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: uuair (~quassel@user/uuair) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: sharpertool (sid80151@id-80151.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: DreamweaverN (~Dreamweav@2001:1af8:4700:b0d0:a800::) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: sabx_ (~sabbas@user/sabbas) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: widp (~widp@124.123.106.12) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: twice (~twice@173.82.153.50) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: carbolymer (~carbolyme@dropacid.net) (Ping timeout: 240 seconds)
[18:42:06] *** Quits: eagleflo (~aku@163.172.137.34) (Ping timeout: 240 seconds)
[18:42:06] *** rvgate4 is now known as rvgate
[18:42:06] *** someone235_ is now known as someone235
[18:42:06] *** SirScott3 is now known as SirScott
[18:42:06] *** pythonoob3 is now known as pythonoob
[18:42:06] *** sus6 is now known as sus
[18:42:06] *** martums597 is now known as martums59
[18:42:06] *** blddk7 is now known as blddk
[18:42:06] *** henco0 is now known as henco
[18:42:06] *** ThatOtherGuy is now known as LogicAside
[18:42:06] *** twice6 is now known as twice
[18:42:07] *** sharpertool_ is now known as sharpertool
[18:42:07] *** Joins: novns (~novns@user/novns)
[18:42:12] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:42:13] *** Joins: carbolymer_ (~carbolyme@dropacid.net)
[18:42:15] *** Joins: MercilessDeth (~brad@136.49.59.177)
[18:42:15] *** scoobydoob is now known as scoobydoo
[18:42:16] *** Joins: widp (~widp@124.123.106.12)
[18:42:17] <InPhase> gloomy: Thanks for the flood, libera network.  :)
[18:42:17] *** Quits: dkr13 (~dkr13@dkr13.de) (Quit: Ping timeout (120 seconds))
[18:42:18] *** Joins: andi_ (~andi@2a01:4f8:c0c:a014::2)
[18:42:18] *** Quits: andi_ (~andi@2a01:4f8:c0c:a014::2) (Changing host)
[18:42:18] *** Joins: andi_ (~andi@user/andi/x-3467420)
[18:42:25] *** Quits: Giovanni (~Giovanni@45.128.199.65) (Client Quit)
[18:42:25] *** Quits: mud (~mud@user/kadoban) (Remote host closed the connection)
[18:42:29] *** sentriz_ is now known as sentriz
[18:42:31] <InPhase> Oops, not to gloomy.
[18:42:32] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[18:42:32] *** Quits: led_belly (~led_belly@159.48.53.216) (Ping timeout: 240 seconds)
[18:42:33] *** Joins: sabx (~sabbas@user/sabbas)
[18:42:37] *** Joins: Giovanni (~Giovanni@45.128.199.65)
[18:42:37] *** Joins: dkr13 (~dkr13@dkr13.de)
[18:42:46] *** Joins: uuair (~quassel@user/uuair)
[18:42:51] <gloomy> InPhase: flood? :)
[18:42:52] *** Joins: mud (~mud@user/kadoban)
[18:42:52] <gloomy> ah
[18:43:03] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[18:43:10] *** Joins: MacGyver (~macgyver@user/macgyver)
[18:43:13] *** Joins: eagleflo (~aku@163.172.137.34)
[18:43:15] *** Joins: src (~src@user/src)
[18:43:30] <gloomy> InPhase: Thing is the call to check_output never terminates... I'll try what you say with a timeout
[18:43:34] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:43:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[18:43:53] *** Joins: epony (epony@user/epony)
[18:44:22] *** Joins: jamie9898 (~jamie9898@173.199.70.206)
[18:44:48] <piscvau> Bonjour existe-t-il un moyen de connaître les attributs d'un objet qui ont été crée dans la classe parent. explication ici : https://bpa.st/VDUA
[18:45:04] *** Joins: odinsbane (~mbs@pat-pool-138.crick.ac.uk)
[18:45:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[18:45:30] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[18:45:39] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:45:44] <gloomy> InPhase: ah no you meant something different, got it now
[18:46:23] *** Joins: bluss (~bluss@user/bluss)
[18:46:23] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:46:32] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Ping timeout: 240 seconds)
[18:46:32] *** Quits: epony (epony@user/epony) (Excess Flood)
[18:46:43] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:46:53] *** Joins: nadio (~ice@95.216.90.23)
[18:47:14] *** Joins: led_belly (~led_belly@159.48.53.216)
[18:47:30] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 250 seconds)
[18:47:33] *** Joins: epony (epony@user/epony)
[18:48:11] <gloomy> piscvau: mauvaise langue ;-) you can instantiate two objects a=A() and superA=SuperA() and compare dir(a) and dir(superA)
[18:48:24] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[18:48:32] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 240 seconds)
[18:49:00] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[18:49:12] *** Joins: wakeup (~wakeup@user/wakeup)
[18:49:26] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:49:38] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[18:49:48] <piscvau> Thanks gloomy but I have no handy way to create any instance of A.
[18:49:49] *** Quits: epony (epony@user/epony) (Excess Flood)
[18:50:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:50:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:51:19] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[18:51:27] <InPhase> gloomy: There are cases where xsel will wait indefinitely pending stdin input, like if you pass -i and nothing else.  So it is possible you are doing something unintended at the call site.  Hence there is some value trying to separate out what you are intending to do from the code that you think is correct (but might not be).
[18:51:40] *** Joins: epony (epony@user/epony)
[18:51:40] *** Joins: naranja (~orange@user/orangeboxcutter)
[18:51:43] *** Joins: jim (~jim@about/linux/staff/jim)
[18:52:06] *** Joins: daddy (3645@hashbang/bdfl)
[18:53:16] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[18:53:32] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[18:53:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:53:46] *** Joins: saribro (~swinnenb@user/swinnenb)
[18:53:49] *** Joins: muffin_storm_ (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net)
[18:53:57] *** Joins: paprika (~pepper@user/pepper)
[18:53:59] *** Joins: cassepipe_ (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr)
[18:54:03] *** Joins: kostkon_ (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea)
[18:54:07] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[18:54:14] *** Joins: tomg_ (~tomg@user/tomg)
[18:54:27] *** Joins: mncheckm (~mncheck@193.224.205.254)
[18:54:31] *** Joins: moog_ (~moog@107.126.53.83)
[18:54:31] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[18:54:32] *** Quits: moog (~moog@107.126.53.83) (Read error: Connection reset by peer)
[18:54:34] *** Quits: mncheck (~mncheck@193.224.205.254) (Read error: Connection reset by peer)
[18:54:36] *** Quits: niv (~niv@limbo.cypherpunks.io) (Read error: Connection reset by peer)
[18:54:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:54:36] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[18:54:36] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[18:54:36] *** Joins: cybniv (~niv@limbo.cypherpunks.io)
[18:54:40] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[18:54:45] *** Joins: j0be_ (~j0be@user/j0be)
[18:54:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection reset by peer)
[18:54:49] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-11bd-19ea-20a3-8390.res6.spectrum.com) (Read error: Connection reset by peer)
[18:54:50] *** scoobydoob is now known as scoobydoo
[18:54:52] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[18:54:52] *** Quits: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com) (Ping timeout: 250 seconds)
[18:54:52] *** Quits: Researcher (ceo@blockchainore.com) (Ping timeout: 250 seconds)
[18:54:52] *** Quits: hifi (hifi@heisenbridge/hifi) (Ping timeout: 250 seconds)
[18:55:00] *** Quits: {HD} (~{HD}@2603-6010-c208-c820-9e9c-6f0a-66ef-f982.res6.spectrum.com) (Excess Flood)
[18:55:02] *** Quits: Babar (~Babar@171.226.225.22) (Read error: Connection reset by peer)
[18:55:02] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[18:55:08] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-f0f2-5be8-40b8-72bd.res6.spectrum.com)
[18:55:21] *** Joins: Babar (~Babar@171.226.225.22)
[18:55:21] *** Joins: {HD} (~{HD}@gateway/vpn/pia/hd/x-06969157)
[18:55:22] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[18:55:28] *** Joins: someone235_ (uid419897@id-419897.ilkley.irccloud.com)
[18:55:31] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[18:56:03] *** Joins: DK31 (~DK3@rs000042.fastrootserver.de)
[18:56:13] *** Joins: elastic_dog (~elastic_d@ary77.neoplus.adsl.tpnet.pl)
[18:56:19] *** Joins: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com)
[18:56:20] *** Joins: rud01f (rangifer@user/rud0lf)
[18:56:24] *** Joins: alxndr_ (~alexander@ybti.net)
[18:56:24] *** Joins: luva8 (~luva@45.141.152.54)
[18:56:28] *** Joins: NovaXrine_ (~NovaXrine@zen.novaxrine.com)
[18:56:32] *** Joins: jinsun__ (~jinsun@user/jinsun)
[18:56:34] *** Joins: tetravus1 (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[18:56:35] *** Joins: cyberjunkie_ (~cyberjunk@wireguard/tunneler/cyberjunkie)
[18:56:40] *** Quits: jamie9898 (~jamie9898@173.199.70.206) (Ping timeout: 250 seconds)
[18:56:40] *** Quits: someone235 (uid419897@id-419897.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[18:56:40] *** Quits: kurfen (~kurfen@176.119.195.8) (Ping timeout: 250 seconds)
[18:56:40] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Ping timeout: 250 seconds)
[18:56:41] *** someone235_ is now known as someone235
[18:56:41] *** Quits: j0be (~j0be@user/j0be) (Ping timeout: 250 seconds)
[18:56:41] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (Ping timeout: 250 seconds)
[18:56:41] *** Quits: src (~src@user/src) (Ping timeout: 250 seconds)
[18:56:42] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: alxndr (~alexander@ybti.net) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: rud0lf (rangifer@user/rud0lf) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: kaste (~kaste@user/kaste) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: phryk (~totallyno@user/phryk) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: odinsbane (~mbs@pat-pool-138.crick.ac.uk) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: sabx (~sabbas@user/sabbas) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: cassepipe (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[18:56:43] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[18:56:49] *** Joins: odinsbane (~mbs@pat-pool-138.crick.ac.uk)
[18:56:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:56:57] *** Joins: jamie9898 (~jamie9898@173.199.70.206)
[18:56:57] *** Joins: cheater (~Username@user/cheater)
[18:57:06] *** Joins: zeudap_ (~zeudap@45.91.23.27)
[18:57:09] *** Joins: kurfen (~kurfen@176.119.195.8)
[18:57:15] *** Joins: phryk (~totallyno@user/phryk)
[18:57:15] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:57:15] *** Joins: merist__ (~merist@87.249.134.29)
[18:57:22] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:6892:45fe:1125:a250)
[18:57:32] *** Joins: harleypig5 (thelounge@2600:3c00::f03c:91ff:fe96:a339)
[18:57:34] *** Joins: sus7 (zero@user/zeromomentum)
[18:57:37] *** Quits: kostkon (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: luva (~luva@45.141.152.54) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: jbeimler (~quassel@75.183.82.166) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: Luke (~ldm@hacksoc/alumni/ldm) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: bss (bss@rie.incorporeal.org) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: jessicant (~jessica@static.172.234.251.148.clients.your-server.de) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: be3uykpy (~ubuntu@141.144.233.89) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[18:57:37] *** luva8 is now known as luva
[18:57:38] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: ska (~ska@user/ska) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: harleypig (thelounge@harleypig.com) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: muffin_storm (~muffin_st@user/muffin-storm/x-3740471) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: TechSmurf (~tech@user/techsmurf) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: solrize (~solrize@user/solrize) (Ping timeout: 250 seconds)
[18:57:39] *** harleypig5 is now known as harleypig
[18:57:41] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[18:57:43] *** Joins: cdleonard2 (~cdleonard@ec2-52-70-55-94.compute-1.amazonaws.com)
[18:57:43] *** Joins: trashbird4 (~trashbird@user/trashbird)
[18:57:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:57:48] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[18:57:51] *** Joins: solrize (~solrize@ac33-368a-df92-34b1-0e8b-74ed-a420-2062.6rd.ip6.sonic.net)
[18:57:54] *** Joins: src (~src@user/src)
[18:57:54] *** Quits: llh (~UPP@user/llh) (Ping timeout: 250 seconds)
[18:57:54] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) (Ping timeout: 250 seconds)
[18:57:54] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 250 seconds)
[18:58:00] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:58:00] *** Joins: wolfdale88 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[18:58:03] *** Joins: TechSmurf (~tech@user/techsmurf)
[18:58:03] *** Joins: Malin6 (lounge@pirate.pt)
[18:58:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:58:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:58:07] *** Joins: Alan15 (~alan@user/alan)
[18:58:20] *** Quits: ryan-c (ryan-c@znc.rya.nc) (Ping timeout: 250 seconds)
[18:58:20] *** Quits: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (Ping timeout: 250 seconds)
[18:58:20] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Ping timeout: 250 seconds)
[18:58:20] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[18:58:20] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 250 seconds)
[18:58:23] *** Joins: yitz_ (~yitz@exercism/yitz)
[18:58:24] *** Joins: BtbN_ (btbn@ffmpeg/developer/btbn)
[18:58:32] *** Joins: be3uykpy (~ubuntu@141.144.233.89)
[18:58:33] *** Joins: ryan-c` (ryan-c@znc.rya.nc)
[18:58:33] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[18:58:34] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[18:58:37] *** Joins: llh (~UPP@user/llh)
[18:58:39] *** Joins: dademurphy (~dademurph@45.63.16.83)
[18:58:40] *** Joins: sabx (~sabbas@user/sabbas)
[18:58:40] *** Joins: jpn (~jpn@user/jpn)
[18:58:51] *** Quits: Guest14 (~Guest14@2001:d08:d5:6db7:b1fc:ac6f:77dd:7120) (Ping timeout: 256 seconds)
[18:59:06] *** Joins: t2mkn_ (~t2mkn@user/t2mkn)
[18:59:10] *** Joins: DangerWabbit (~DangerWab@217.146.83.146)
[18:59:14] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[18:59:17] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[18:59:17] *** Joins: duoi (~duoi@user/duoi)
[18:59:21] *** Joins: nochi_ (~nochi@static.216.66.130.94.clients.your-server.de)
[18:59:21] *** Joins: Juhaz_ (juhaz@hilla.kapsi.fi)
[18:59:24] *** Joins: Luke (~ldm@hacksoc/alumni/ldm)
[18:59:25] *** Joins: Noisytoot_ (~noisytoot@sourcehut/user/noisytoot)
[18:59:26] *** Joins: sale_ (~sale@ypocit.initech.link)
[18:59:27] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[18:59:28] *** ryan-c` is now known as ryan-c
[18:59:28] *** Joins: Bobathan_ (~admin@cpe-65-29-248-157.wi.res.rr.com)
[18:59:36] *** Joins: r3m_ (~launch@user/r3m)
[18:59:39] *** Joins: kaste (~kaste@user/kaste)
[18:59:41] *** Joins: JavaGeek (~codegeek@about/java/CodeGeek)
[18:59:44] *** Joins: mwichmann_ (~mats@209-188-119-117.taosnet.com)
[18:59:45] *** Joins: hifi (hifi@heisenbridge/hifi)
[18:59:48] *** Joins: jbeimler (~quassel@75.183.82.166)
[18:59:49] *** Joins: ska (~ska@user/ska)
[18:59:50] *** Joins: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com)
[18:59:52] *** Joins: simplici1y (~yti@user/simplicity)
[18:59:53] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[18:59:54] *** Joins: bss (bss@rie.incorporeal.org)
[18:59:56] *** Joins: josh_h_ (sid301834@id-301834.helmsley.irccloud.com)
[18:59:57] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[18:59:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:00:00] *** Joins: mattmcc_ (matt@2600:3c00::f03c:91ff:fe89:c2e8)
[19:00:01] *** Joins: uuair_ (~quassel@user/uuair)
[19:00:05] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:00:10] *** Joins: beencubed_ (~beencubed@209.131.238.248)
[19:00:13] *** Joins: julia__ (~quassel@user/julia)
[19:00:13] *** Joins: jessicant (~jessica@static.172.234.251.148.clients.your-server.de)
[19:00:17] *** Joins: enyc_ (~enyc@user/enyc)
[19:00:18] *** Joins: SoniEx2 (~quassel@autistic.space)
[19:00:19] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Read error: Connection reset by peer)
[19:00:19] *** Quits: Malin (lounge@pirate.pt) (Read error: Connection reset by peer)
[19:00:19] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: r3m (~launch@user/r3m) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: edr (~edr@user/edr) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: yitz (~yitz@exercism/yitz) (Read error: Connection reset by peer)
[19:00:19] *** Quits: Soni (~quassel@autistic.space) (Remote host closed the connection)
[19:00:19] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Remote host closed the connection)
[19:00:19] *** Quits: gildarts (16abab341f@user/gildarts) (Read error: Connection reset by peer)
[19:00:19] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[19:00:19] *** Quits: nochi (~nochi@2a01:4f8:10b:3074::4) (Quit: bye)
[19:00:19] *** Quits: uuair (~quassel@user/uuair) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: sus (zero@user/zeromomentum) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.30) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: dademurphy_ (~dademurph@45.63.16.83) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: d3sync|2 (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: sandb0y (~pirate@user/sandb0y) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: raczka3 (~raczka@dedicated-aid6.rev.nazwa.pl) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: ivanf (~ivan@user/ivanf) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: nicoz (nicoz@ubuntu/member/nicoz) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: Throgkt (~Throgkt@user/throgkt) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: trashbird (~trashbird@user/trashbird) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: sunyour (~sunyour@129.226.182.99) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: Juhaz (juhaz@hilla.kapsi.fi) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: matrixise (~matrixise@python/psf/matrixise) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: sale (~sale@ypocit.initech.link) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: josh_h (sid301834@id-301834.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: laerling (~laerling@static.235.77.203.116.clients.your-server.de) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: bidouille (~user_name@trois.potager.org) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: grym (~grym@user/grym) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: julia (~quassel@user/julia) (Read error: Connection reset by peer)
[19:00:19] *** Quits: vegii (~quassel@2001:470:1f18:3aa:30f::5439) (Read error: Connection reset by peer)
[19:00:19] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: squarecircle (~root@merkur.platinengarten.hg.tu-darmstadt.de) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: t2mkn (~t2mkn@user/t2mkn) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: zeudap (~zeudap@45.91.23.27) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 250 seconds)
[19:00:20] *** Quits: cdleonard (~cdleonard@ec2-52-70-55-94.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[19:00:20] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:00:20] *** Quits: merist_ (~merist@87.249.134.29) (Ping timeout: 250 seconds)
[19:00:20] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 250 seconds)
[19:00:20] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Ping timeout: 250 seconds)
[19:00:20] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[19:00:20] *** Quits: Alan (~alan@user/alan) (Ping timeout: 250 seconds)
[19:00:20] *** trashbird4 is now known as trashbird
[19:00:20] *** cdleonard2 is now known as cdleonard
[19:00:20] *** josh_h_ is now known as josh_h
[19:00:21] *** BtbN_ is now known as BtbN
[19:00:21] *** Malin6 is now known as Malin
[19:00:21] *** sus7 is now known as sus
[19:00:21] *** Alan15 is now known as Alan
[19:00:21] *** wolfdale88 is now known as wolfdale8
[19:00:24] *** Joins: edro (~edr@enlo.co)
[19:00:24] *** Quits: edro (~edr@enlo.co) (Changing host)
[19:00:24] *** Joins: edro (~edr@user/edr)
[19:00:29] *** Joins: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[19:00:29] *** Joins: sandb0y (~pirate@user/sandb0y)
[19:00:30] *** Joins: manti7 (~manti7@176.10.104.94)
[19:00:30] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:6892:45fe:1125:a250) (Ping timeout: 250 seconds)
[19:00:32] *** Joins: vegii (~quassel@2001:470:1f18:3aa:30f::5439)
[19:00:32] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[19:00:36] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[19:00:40] *** Joins: matrixise (~matrixise@python/psf/matrixise)
[19:00:42] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[19:00:42] *** Joins: laerling (~laerling@static.235.77.203.116.clients.your-server.de)
[19:00:44] *** Joins: Throgkt (~Throgkt@user/throgkt)
[19:00:47] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[19:00:50] *** Joins: bidouille (~user_name@trois.potager.org)
[19:00:55] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[19:00:58] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[19:01:01] *** Joins: squarecircle (~root@merkur.platinengarten.hg.tu-darmstadt.de)
[19:01:03] *** Joins: raczka3 (~raczka@dedicated-aid6.rev.nazwa.pl)
[19:01:03] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[19:01:12] *** Joins: kst (~krjst@2604:a880:800:c1::16b:8001)
[19:01:17] *** Joins: gildarts (16abab341f@user/gildarts)
[19:01:18] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[19:01:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:01:56] *** Joins: nicoz (nicoz@nicoz.letz.dev)
[19:01:56] *** Joins: Researcher (ceo@2a04:dd00:14:11::6667:6668)
[19:02:34] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[19:02:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:02:57] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[19:02:58] *** Joins: zmotaj (~zmotaj@86.61.80.191)
[19:02:58] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[19:02:58] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[19:03:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[19:03:41] *** Joins: kts (~kts@103.73.237.62)
[19:04:35] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[19:04:42] *** Joins: grym (~grym@user/grym)
[19:04:43] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[19:06:17] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[19:06:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:07:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[19:07:37] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[19:08:09] *** Joins: Guest14 (~Guest14@2001:d08:d5:6db7:b1fc:ac6f:77dd:7120)
[19:08:26] *** Joins: fling (~fling@user/fling)
[19:08:29] *** Quits: arcaile (~arcaile@143.244.54.137) (Ping timeout: 256 seconds)
[19:09:25] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 268 seconds)
[19:10:06] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[19:10:09] *** Joins: kts_ (~kts@103.73.237.62)
[19:10:12] *** Quits: kts_ (~kts@103.73.237.62) (Client Quit)
[19:10:12] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-855f-50e7-28b4-6a40.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:10:52] *** Quits: flea_ (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[19:11:01] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[19:11:17] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[19:11:39] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[19:11:39] *** Leonarbro_ is now known as Leonarbro
[19:12:12] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-855f-50e7-28b4-6a40.res6.spectrum.com)
[19:13:00] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[19:13:08] *** redj_ is now known as redj
[19:14:09] *** Quits: Guest14 (~Guest14@2001:d08:d5:6db7:b1fc:ac6f:77dd:7120) (Ping timeout: 256 seconds)
[19:15:28] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:15:29] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[19:15:32] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[19:16:22] *** Quits: solrize (~solrize@ac33-368a-df92-34b1-0e8b-74ed-a420-2062.6rd.ip6.sonic.net) (Changing host)
[19:16:22] *** Joins: solrize (~solrize@user/solrize)
[19:17:04] *** Joins: jpn (~jpn@user/jpn)
[19:19:20] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:20:29] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[19:21:50] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[19:22:22] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[19:23:52] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:23:57] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 240 seconds)
[19:25:42] *** Joins: Enitin (~Enitin@82.180.145.226)
[19:25:57] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:6892:45fe:1125:a250) (Ping timeout: 240 seconds)
[19:26:34] *** Joins: kts (~kts@103.73.237.62)
[19:27:14] *** Joins: frmlof (~frmlof@70.243.238.191)
[19:28:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[19:29:26] *** Joins: Barones (~Barones@user/Barones)
[19:29:27] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[19:30:04] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:30:09] *** Quits: Fuchs[m] (~fuchsmatr@2001:470:69fc:105::1:a7b1) (Quit: You have been kicked for being idle)
[19:30:11] *** yitz_ is now known as yitz
[19:30:18] <gloomy> InPhase: was afk, tried what you suggested (test.sh: echo testing >> /tmp/test; xsel 2>&1 >> /tmp/test; echo done >> /tmp/test. and i put test.sh in the subprocess.check_output call). It seems that when i run the script from i3, the last echo is never reached...?
[19:31:11] <gloomy>  /tmp/test shows `testing <selection>` (unlike when I run the script from my terminal, in which case I have `testing <selection> done`
[19:31:28] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:32:00] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[19:33:05] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[19:33:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:33:21] *** Joins: oriba (~oriba@dynamic-077-183-072-090.77.183.pool.telefonica.de)
[19:33:28] *** Joins: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com)
[19:33:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:33:43] <InPhase> gloomy: Well, if running the bash script directly from i3 also freezes, then i3 is doing something wonky.  Maybe dump the output of "env" to the log as well, and try looking for a fixable issue.
[19:33:58] <InPhase> gloomy: At least you know the problem is not in the Python code.
[19:34:26] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[19:34:38] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[19:35:24] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[19:35:38] <gloomy> hmmm, even if I skip python entirely and just run test.sh directly from the i3 keybinding it still hangs, so obviously no a python issue. I'll try asking on #linux or #bash :-)
[19:35:43] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:35:53] <InPhase> gloomy: Yep.  Good luck.  :)
[19:36:12] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 240 seconds)
[19:37:11] *** Joins: csm3105 (~csm3105@static-214-56-230-77.ipcom.comunitel.net)
[19:37:19] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[19:37:51] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[19:38:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[19:38:03] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:38:28] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[19:38:36] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[19:38:59] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[19:40:26] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-855f-50e7-28b4-6a40.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:40:56] *** Joins: nomic (~nomic@185.198.243.249)
[19:41:07] *** llua` is now known as llua
[19:41:53] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[19:43:10] *** Quits: csm3105 (~csm3105@static-214-56-230-77.ipcom.comunitel.net) (Quit: Leaving)
[19:43:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:43:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:43:50] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[19:44:52] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[19:45:14] *** rud01f is now known as rud0lf
[19:45:23] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[19:45:25] *** Joins: wakeup (~wakeup@user/wakeup)
[19:46:27] <wakeup> do you guys use sqlalchemy?
[19:46:52] <SnoopJ> wakeup, a fair number of users in this channel use it, yes. If you have a follow-up question, you should just ask that
[19:47:01] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[19:47:17] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 250 seconds)
[19:47:31] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[19:47:35] <gloomy> bit off-topic now but since you've been helping so far :-) here's the diff between the environments, do you see anything obvious that might be causing problems? https://www.diffchecker.com/ptRPfL3P
[19:48:17] <gloomy> (left is i3, right is terminal)
[19:48:43] <wakeup> right now, I'm just using sqlite, so I create an sqlite3 instance with sqlite3.connect, then I have a db object, which I can use to commit sql queries... I mean, this is fine for this small project, but I was wondering if it makes sense to just use SQLAlchemy and/or if there's something better
[19:48:55] <wakeup> I will switch to another db, btw
[19:48:58] <wakeup> like postgre
[19:49:15] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 240 seconds)
[19:49:26] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[19:49:27] *** Joins: gdd (~gdd@129.199.146.230)
[19:49:41] *** Joins: arcaile (~arcaile@188.126.94.49)
[19:49:52] <wakeup> sqlalchemy allows us to define tables as classes in python and then do the DB job with python
[19:50:06] *** Joins: wattux (~wattux@2a02:238:f014:472:254a:a07f:d097:49ec)
[19:52:10] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[19:52:27] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[19:53:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:54:42] *** Joins: Enitin (~Enitin@82.180.145.228)
[19:54:44] *** Joins: jpn (~jpn@user/jpn)
[19:55:16] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:56:23] <Swayze> yeah thats called orm
[19:59:10] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 260 seconds)
[19:59:59] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 268 seconds)
[20:00:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 256 seconds)
[20:00:51] *** Joins: fluiD (~fluiD@161.97.236.182)
[20:01:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:01:04] *** Noisytoot_ is now known as Noisytoot
[20:02:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:02:11] *** Joins: Enitin (~Enitin@82.180.145.228)
[20:03:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:03:37] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[20:03:49] *** Joins: junebug (~junebug@2600:1700:3db0:2540:52e7:e27f:3557:7b41)
[20:05:55] *** Joins: Guest77 (~Guest77@122.167.49.41)
[20:06:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[20:06:53] *** Quits: Guest77 (~Guest77@122.167.49.41) (Client Quit)
[20:07:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[20:08:10] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[20:09:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:10:01] *** Joins: BillyZane (~BillyZane@91.196.220.78)
[20:10:26] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[20:10:41] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:10:55] *** Joins: foobaz212 (~foobaz212@109.249.187.65)
[20:11:05] *** Quits: foobaz212 (~foobaz212@109.249.187.65) (Write error: Broken pipe)
[20:11:32] *** Joins: foobaz212 (~foobaz212@109.249.187.65)
[20:11:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[20:12:00] *** Quits: foobaz212 (~foobaz212@109.249.187.65) (Client Quit)
[20:12:13] *** Quits: paul424 (~tom@ip-5-172-235-251.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[20:12:51] *** Joins: fling (~fling@user/fling)
[20:13:52] *** Quits: luvings (~nortoh@user/nortoh) (Quit: this is not importent)
[20:14:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[20:14:52] *** Joins: widp (~widp@2406:7400:73:b5f5:6888:c96:67ad:6ad8)
[20:14:56] *** Joins: ubert (~Thunderbi@p200300ecdf158818b8e18cff0ef2784d.dip0.t-ipconnect.de)
[20:15:15] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 240 seconds)
[20:15:33] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[20:15:33] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[20:15:34] *** Joins: nortoh (~nortoh@user/nortoh)
[20:15:34] *** Parts: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr) ()
[20:15:34] *** Joins: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr)
[20:16:57] *** Joins: bahamas (~lucian@84.232.140.158)
[20:17:39] *** Joins: Guest92 (~Guest92@170.80.235.60)
[20:18:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:18:21] *** Parts: Guest92 (~Guest92@170.80.235.60) ()
[20:18:21] *** Quits: jim (~jim@about/linux/staff/jim) (Read error: Connection reset by peer)
[20:18:52] *** Joins: magla (~gelignite@55d44736.access.ecotel.net)
[20:19:21] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[20:19:38] *** Joins: crashrep (~crashrep@user/crashrep)
[20:19:48] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[20:19:52] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:2cf7)
[20:20:13] *** Quits: junebug (~junebug@2600:1700:3db0:2540:52e7:e27f:3557:7b41) (Ping timeout: 256 seconds)
[20:20:48] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-855f-50e7-28b4-6a40.res6.spectrum.com)
[20:20:48] <Guest54> hey given a unix timestamp, t, is it guaranteed that t + <positive_value> will always represent a time period greater than the one from `t`?
[20:20:56] *** Parts: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr) ()
[20:20:56] *** Joins: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr)
[20:21:12] <Guest54> where can I read more about this? asking because I need to mock timestamps, and i want to understand the semantics
[20:21:25] *** Quits: alex_ (~alex11@user/alex11) (Quit: Leaving)
[20:21:29] *** Quits: widp (~widp@2406:7400:73:b5f5:6888:c96:67ad:6ad8) (Ping timeout: 252 seconds)
[20:21:53] <Guest54> I'm using the datetime module specifically to convert timestamps to an actual time period (y-m-d)
[20:22:29] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[20:23:08] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[20:23:10] <pragmaticenigma> Guest54: timestamps are an unsigned 32bit or 64bit integer values, representing the number of seconds since the Unix Epoch. Increasing the integer value represents a time more recent than the starting point.
[20:23:50] *** Joins: not_not (~ircuz@5.2.79.79)
[20:24:19] *** Quits: revolve_ (~u0_a227@82-132-238-85.dab.02.net) (Read error: Connection reset by peer)
[20:24:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:24:37] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:25:30] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:25:31] *** Quits: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr) (K-Lined)
[20:25:42] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:25:44] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[20:26:12] *** Joins: jim (~jim@about/linux/staff/jim)
[20:27:34] *** Joins: widp (~widp@124.123.106.12)
[20:28:43] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 256 seconds)
[20:29:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[20:29:31] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[20:29:59] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[20:30:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:31:12] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[20:31:49] <zen_coder> how can I add to an instance of a class add a property?
[20:32:16] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9fe:a838:de14:eab)
[20:32:30] *** Joins: plastico (~plastico@neomutt/plastico)
[20:35:17] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:ddcf:4aad:3c6:b791)
[20:35:21] <Swayze> assign it
[20:35:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[20:40:13] *** Joins: NeoCore (~neocore@89.40.183.136)
[20:40:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:41:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:42:24] <bjs> zen_coder: I'm not sure what you mean,  you can add new attributes to an object with `obj.attr = foo`
[20:42:44] <bjs> if the object allows it that is, but most classes and instances do
[20:42:45] *** Joins: greedom (~greedom@p200300de674e4000732a5aa4c48760a6.dip0.t-ipconnect.de)
[20:43:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:45:43] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[20:46:28] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:46:49] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:46:57] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[20:46:58] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:a5a2:71c4:6a24:11d0)
[20:46:58] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:a5a2:71c4:6a24:11d0) (Changing host)
[20:46:58] *** Joins: skapata (~Skapata@user/skapata)
[20:47:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[20:48:05] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:48:29] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:9a62:24a5:64c2:9cd2) (Remote host closed the connection)
[20:48:47] *** Joins: jpn (~jpn@user/jpn)
[20:49:48] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[20:49:54] *** Joins: korg815 (~korg815@user/korg815)
[20:50:40] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[20:51:10] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (Quit: The Lounge - https://thelounge.chat)
[20:51:50] *** tomg_ is now known as tomg
[20:52:01] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[20:52:07] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[20:52:25] *** Joins: epony (epony@user/epony)
[20:53:17] *** Joins: crashrep (~crashrep@user/crashrep)
[20:53:46] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[20:53:46] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 260 seconds)
[20:54:29] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[20:55:04] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[20:55:28] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[20:55:34] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:55:45] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:56:33] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:57:59] *** Joins: antranigv (~antranigv@37.252.78.252)
[20:58:56] *** weechat1 is now known as Spawns_Carpeting
[20:59:12] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:59:52] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:00:13] *** Joins: widp (~widp@2406:7400:73:b5f5:1d90:99c0:549e:19b4)
[21:01:24] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7023:87ef:b4e8:5e17) (Ping timeout: 240 seconds)
[21:02:52] *** Joins: Pickchea (~private@user/pickchea)
[21:03:45] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[21:04:01] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:04:23] *** Joins: Wh0 (~V@103.250.137.107)
[21:05:47] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:06:34] *** Joins: wakeup (~wakeup@user/wakeup)
[21:06:59] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[21:07:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[21:09:10] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 260 seconds)
[21:09:39] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[21:10:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:11:55] *** Joins: EdFletcher (~PKD@user/edfletcher)
[21:12:31] *** Quits: ornxka (~ornxka@user/ornxka) (Quit: WeeChat 3.4)
[21:13:03] *** Joins: minto_ (~mintograd@47.201.5.61)
[21:13:53] *** Joins: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0)
[21:13:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:14:09] *** Joins: foobaz212 (~foobaz212@109.249.187.65)
[21:14:50] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Changing host)
[21:14:50] *** Joins: death916 (~death916@user/death916)
[21:15:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[21:15:23] *** Joins: wakeup (~wakeup@user/wakeup)
[21:16:07] *** Quits: minto (~mintograd@47.201.5.61) (Ping timeout: 250 seconds)
[21:17:07] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:2cf7) (Ping timeout: 256 seconds)
[21:17:29] *** Joins: fling (~fling@user/fling)
[21:17:43] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[21:18:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:18:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[21:19:18] *** Joins: masta`` (oyster@user/masta/x-2645138)
[21:20:53] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[21:21:55] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[21:21:58] *** Joins: hexed (~k@2604:a880:1:20::321f:b001)
[21:22:09] *** Quits: foobaz212 (~foobaz212@109.249.187.65) (Quit: Client closed)
[21:22:22] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[21:23:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:24:16] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:25:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:25:51] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[21:26:14] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Client Quit)
[21:26:25] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[21:28:43] *** Quits: slav0nic_ (slav0nic@python.su) (Remote host closed the connection)
[21:29:02] *** Joins: slav0nic_ (slav0nic@python.su)
[21:29:29] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[21:30:23] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[21:30:27] *** Quits: not_not (~ircuz@5.2.79.79) (Quit: Lost terminal)
[21:30:41] *** Joins: kevr (~kevr@user/kevr)
[21:31:51] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[21:32:45] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[21:32:47] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[21:33:05] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[21:33:54] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[21:34:45] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[21:34:52] *** Joins: antineutrino (~antineutr@user/eru)
[21:35:01] *** Joins: file_ (~Username@p54966810.dip0.t-ipconnect.de)
[21:35:08] *** Quits: bfortified (~bfortifie@user/bfortified) (Quit: ZNC 1.8.2 - https://znc.in)
[21:37:21] *** Joins: MasterK (~MK@86.126.51.228)
[21:37:28] *** Joins: bfortified (~bfortifie@user/bfortified)
[21:37:53] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[21:39:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:39:33] *** Joins: zebrag (~chris@user/zebrag)
[21:39:49] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[21:41:53] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:2241:6d94:7716:4be7)
[21:42:55] *** Joins: jpn (~jpn@user/jpn)
[21:43:11] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 256 seconds)
[21:43:25] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[21:43:57] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[21:43:59] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[21:44:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:44:57] *** Quits: antineutrino (~antineutr@user/eru) (Quit: Client closed)
[21:46:59] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[21:47:09] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[21:47:25] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[21:48:51] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[21:49:39] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[21:49:59] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[21:50:16] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[21:52:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:52:15] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:7b0d:2ec5:6e99:1987)
[21:52:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:52:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:53:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:53:48] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:54:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:54:45] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:55:57] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[21:57:02] *** Quits: led_belly (~led_belly@159.48.53.216) (Ping timeout: 240 seconds)
[21:57:20] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[21:57:49] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:57:54] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[21:59:38] *** farn_ is now known as farn
[21:59:51] *** Joins: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de)
[21:59:59] *** Quits: flea_ (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[22:00:21] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[22:00:58] *** zmt01 is now known as zmt00
[22:01:23] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[22:03:16] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[22:03:28] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[22:04:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:04:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:05:13] *** Joins: led_belly (~led_belly@159.48.53.213)
[22:05:47] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Ping timeout: 268 seconds)
[22:05:47] *** Quits: aandrew (foobar@gromit.mixdown.ca) (Ping timeout: 268 seconds)
[22:05:59] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 252 seconds)
[22:06:02] *** Joins: rje (~textual@50.35.241.164)
[22:06:33] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[22:08:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[22:08:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:10:06] *** Quits: masta`` (oyster@user/masta/x-2645138) (Ping timeout: 268 seconds)
[22:11:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[22:11:59] *** Quits: nomic (~nomic@185.198.243.249) (Quit: Leaving)
[22:12:17] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[22:12:19] *** Joins: p|q (~plq@94.54.154.86)
[22:12:30] *** Quits: Wh0 (~V@103.250.137.107) (Read error: Connection reset by peer)
[22:13:48] *** Joins: amo (~amogorkon@user/amogorkon)
[22:14:08] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[22:16:23] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[22:16:30] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.28-57.dynamic.3bb.co.th)
[22:17:31] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9fe:a838:de14:eab) (Ping timeout: 256 seconds)
[22:17:45] *** Joins: aandrew (foobar@gromit.mixdown.ca)
[22:18:12] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:19:00] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[22:19:22] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[22:19:27] *** Quits: p-i- (~Ohmu@183.89.28.57) (Ping timeout: 256 seconds)
[22:19:27] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[22:19:40] *** Joins: fling (~fling@user/fling)
[22:20:20] *** Joins: justAstache (~justache@user/justache)
[22:20:41] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:21:03] <blei> i have received a message that setup.py install is deprecated; yet pip requires that you add git+ to git repos, and does not recognize the .git extension in URIs
[22:21:30] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 260 seconds)
[22:22:55] <blei> i dare say, pip could go so far as to accept plain repository URIs on github that don't have a .git extension
[22:23:01] <BtbN> "the .git extension" is meaningless though
[22:23:13] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[22:23:20] <BtbN> It has no idea if you want it to download the url and install it as an archive/package, or clone a git repo
[22:23:30] <blei> pip clones git repos for no other purpose?
[22:23:38] <BtbN> what?
[22:23:48] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:f05f:4a77:ef97:de86) (Quit: Textual IRC Client: www.textualapp.com)
[22:24:08] <blei> pip: "looks like the user must be trying to file an enhancement ticket on github with pip; what a noob!"
[22:24:21] *** Joins: Enitin (~Enitin@5.180.62.230)
[22:24:33] <dman777> I am trying to understand my works project. In the directory the __init__.py is empty. Shouldn't it have the .py files listed in it that live in that directory?
[22:24:40] <BtbN> You want to code special case logic for github into pip? That'd be extremely poor style and a horrible rabbit hole.
[22:24:50] <blei> TAM
[22:24:54] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[22:24:54] <BtbN> pip only sees http(s) URLs, which means "download that file and install it"
[22:24:57] <blei> Total Addressable Market. its on github.
[22:25:10] <BtbN> if you want it to mean "point git clone at it", there is git+http(s)
[22:25:10] <han-solo> dman777: usually yes
[22:25:18] <dba> what tools or libraries used to make animated graph like these https://www.reddit.com/r/dataisbeautiful/comments/tihh5v/oc_biggest_european_wheat_producers/ ?
[22:25:21] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:25:24] <han-solo> dman777: listed in it means ?
[22:25:30] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:25:32] <han-solo> inside the `__init__.py` ? no
[22:25:42] <blei> git+https is non-standard, even if standards compliant.
[22:25:53] <blei> you're arguing down a rabbit hole
[22:25:56] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:26:00] <dman777> han-solo: yes, I mean shouldn't the modules be referenced in the __init__.py?
[22:26:06] <han-solo> `__init__.py` doesn't necessarily have to have any code
[22:26:08] <blei> dba you can do that with matplotlib
[22:26:24] <BtbN> lol what
[22:26:28] <han-solo> `__init__.py` is there to let python know that it is package(subpackage)
[22:26:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:26:55] <BtbN> Do you really want to hardcode a shitton of known git repos into pip, so you don't have to explicitly tell it that you want it to clone via git? Come on.
[22:27:20] <blei> dba i might recommend though, in consideration of your time, that you do the data-driven parts with matplotlib and the rest with pixlr.com
[22:27:32] <blei> BtbN considering that it could take as little as one hour, yes.
[22:27:46] <BtbN> I'm glad you don't have commit access then, cause that's horrible.
[22:27:53] <blei> no its user friendly.
[22:28:09] <dba> blei, Thank you, I was not aware matplotlib do animated graph. I was checking it ou
[22:28:09] <BtbN> No, it's an infinite and unmaintainable rabbit hole, with countless possible unforseen breakages
[22:28:10] <blei> its folks like you doing horrible things like popularizing bad memes such as git+https, which nobody previously knew about
[22:28:19] *** Joins: Klinda (~superleag@user/klinda)
[22:28:25] <han-solo> dman777: "In the simplest case, __init__.py can just be an empty file, but it can also execute initialization code for the package"
[22:29:22] <blei> dba ok i did not see the animation; you might want to investigate plotly; i don't know the answer off-hand
[22:29:24] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[22:29:28] <BtbN> Like, you're suggesting to hardcode a list of potentially hundreds or thousands of special cases, which could also change over time. That's a huge no.
[22:29:50] <blei> dba javascript is a good target for something like that
[22:29:55] <blei> BtbN TAM
[22:29:58] <BtbN> What?
[22:30:02] <blei> Total Addressable Market
[22:30:08] <BtbN> Market of what?
[22:30:11] <blei> users.
[22:30:14] <BtbN> ...?
[22:30:26] <BtbN> Even something like "if it ends with .git, clone it" has a lot of potential to cause a lot of unexpected breakage.
[22:30:27] <blei> you focus your products on where the vast majority of users are.
[22:30:34] <BtbN> pip is not a product.
[22:30:37] <blei> yes it is.
[22:30:42] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:31:10] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:31:23] <BtbN> The goal of pip is not to appease to people who throw a fit because they have to be explicit. It's to be a robust and well designed reliable tool.
[22:31:32] <BtbN> What you're suggesting goes into the opposite direction
[22:31:32] <blei> btw can you find URIs that might be pasted into git that end in .git or are on github.com that pip should not try to treat with respect.
[22:31:37] <blei> false.
[22:32:06] *** Quits: someone235 (uid419897@id-419897.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:32:18] <BtbN> There is countless archived released on github which you absolutely would want to just plain download
[22:32:20] <purplex> forgot syntax a bit, is it "if 4 not in l" or, "if not 4 in l" where l is list? or both
[22:32:35] <han-solo> both works, i guess
[22:32:44] <han-solo> er, wait
[22:32:45] <jinsun__> both work but not in is better
[22:32:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[22:33:18] <han-solo> mm, both works
[22:33:24] *** Joins: wakeup (~wakeup@user/wakeup)
[22:33:30] <jinsun__> it reads like english, and only one operator instead of two and PEP8 complaint
[22:33:49] * han-solo nods
[22:34:02] <purplex> i see, thanks
[22:34:15] *** Joins: jazzy (~jaziz@user/jaziz)
[22:34:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:35:08] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[22:35:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:35:47] <blei> i believe pip would normally prefer to grab an archived release in priority over doing a build
[22:36:13] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[22:36:48] *** Joins: jpn (~jpn@user/jpn)
[22:36:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:37:09] *** Joins: parv (~quass@user/parv)
[22:38:18] *** Quits: Enitin (~Enitin@5.180.62.230) (Ping timeout: 260 seconds)
[22:38:58] <blei> since pip now tries entire contingency matrices it can try archived releases and then try a build and that would be consistent behavior
[22:38:59] *** Quits: widp (~widp@2406:7400:73:b5f5:1d90:99c0:549e:19b4) (Ping timeout: 252 seconds)
[22:39:18] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[22:40:06] *** Joins: widp (~widp@124.123.106.12)
[22:40:27] *** Joins: Enitin (~Enitin@5.180.62.230)
[22:40:47] <dman777> han-solo: https://dpaste.org/g0Ro would a empty __init__.py cause this issue?
[22:40:49] *** Quits: piscvau (~odile@lfbn-gre-1-323-48.w90-112.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[22:40:52] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[22:41:45] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[22:42:22] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[22:42:50] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 252 seconds)
[22:43:52] <han-solo> dman777: is that dir listing of `core/` ?
[22:44:35] *** Joins: theprophet (~theprophe@212.58.102.155)
[22:45:03] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:07] <han-solo> well, it seems so. no, empty `__init__.py` is not the issue here
[22:45:07] <dman777> han-solo: https://dpaste.org/g0Ro#L3 this is the directory of core/
[22:45:21] <han-solo> you can't run it like that
[22:45:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:45:35] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 252 seconds)
[22:46:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:46:23] *** Joins: tijuco (~tijuco@user/tijuco)
[22:46:55] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[22:47:10] <han-solo> is `core` your package ? if yes, be in the parent dir as core and then `python3 -m core.utils` # if it has a proper entry point, you can likely run it, but from the name `utils.py` i don't think it is meant to be run like that
[22:47:12] *** Joins: holgersson (~quassel@user/holgersson)
[22:47:18] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:47:53] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:e514:4282:7ac7:5ad8)
[22:49:10] <han-solo> also does `custom_logging.py` exist ? i can only see a `custom-logging.py` and that is not importable
[22:49:27] *** Joins: junebug (~junebug@2600:1700:3db0:2540:a5e0:24ee:5559:64fc)
[22:49:43] <han-solo> maybe it is something else, never mind
[22:50:01] *** Joins: bahamas (~lucian@84.232.140.158)
[22:51:40] <dman777> han-solo: oh! good catch.... I need to rename that
[22:53:31] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[22:54:00] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[22:55:24] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:59:11] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[22:59:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[23:00:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:01:19] *** Joins: paul424 (~tom@ip-5-172-237-23.multi.internet.cyfrowypolsat.pl)
[23:01:23] *** kosh_000__ is now known as kosh
[23:03:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:03:54] <dman777> han-solo: thank you for the help
[23:04:38] <blei> https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-pypy3-Linux-x86_64.sh
[23:04:49] <blei> mamba install -y jupyterlab
[23:05:00] <blei> don't try anything too crazy; ie Intel MKL Random won't work
[23:05:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:05:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[23:06:06] *** Joins: sirsky (~sirsky@206-124-21-110.static.forethought.net)
[23:06:09] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (Quit: Lost terminal)
[23:07:02] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[23:07:13] *** Quits: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Quit: Lost terminal)
[23:07:27] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:07:41] *** Quits: junebug (~junebug@2600:1700:3db0:2540:a5e0:24ee:5559:64fc) (Quit: Leaving)
[23:09:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[23:09:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[23:12:15] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:12:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[23:14:12] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[23:14:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:15:15] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[23:18:21] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[23:18:34] *** Quits: rsx (~dummy@ppp-188-174-148-87.dynamic.mnet-online.de) (Quit: rsx)
[23:19:49] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[23:20:46] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 245 seconds)
[23:20:57] *** r3m_ is now known as r3m
[23:22:21] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[23:22:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:23:27] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[23:23:48] *** Joins: fling (~fling@user/fling)
[23:26:02] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[23:26:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:26:47] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[23:27:46] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:27:47] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-887b-6e2d-8199-f3a8.res6.spectrum.com)
[23:27:57] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[23:28:46] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:29:07] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:29:12] *** Joins: tup (~tup@cpc84029-pool15-2-0-cust183.15-1.cable.virginm.net)
[23:29:49] *** Joins: Guest76 (~Guest76@2604:2d80:6305:5a00:d479:deac:daec:248e)
[23:30:56] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[23:31:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:31:24] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:31:42] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:33:15] *** Quits: ubert (~Thunderbi@p200300ecdf158818b8e18cff0ef2784d.dip0.t-ipconnect.de) (Quit: ubert)
[23:33:39] *** herme5 is now known as el_kevino
[23:35:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:35:15] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[23:35:38] *** Joins: nomic (~nomic@185.198.243.249)
[23:36:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[23:36:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:37:07] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:37:31] *** Lord_of_Life_ is now known as Lord_of_Life
[23:37:32] *** Joins: tapeworm (~tapeworm@188.168.50.119)
[23:37:40] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[23:37:48] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[23:37:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:38:16] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 245 seconds)
[23:38:24] *** Quits: Guest76 (~Guest76@2604:2d80:6305:5a00:d479:deac:daec:248e) (Quit: Client closed)
[23:38:44] *** Joins: nolan_ (~nolan_@user/nolan/x-2434303)
[23:39:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[23:40:08] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (Ping timeout: 268 seconds)
[23:40:59] *** Joins: crashrep (~crashrep@user/crashrep)
[23:43:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:43:40] *** Joins: RafaelSar (~RafaelSar@191-214-26-24.user.veloxzone.com.br)
[23:43:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:44:15] *** Parts: RafaelSar (~RafaelSar@191-214-26-24.user.veloxzone.com.br) ()
[23:44:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:45:04] *** Joins: ivii (~ivan@user/ivii)
[23:45:17] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[23:47:32] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:50:22] *** Joins: Vision-_- (~Vision@023-084-128-214.res.spectrum.com)
[23:50:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[23:51:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[23:51:41] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:51:56] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:52:36] *** Quits: dextercd1 (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4.1)
[23:53:17] *** Quits: p|q (~plq@94.54.154.86) (Ping timeout: 256 seconds)
[23:53:25] *** Joins: jpn (~jpn@user/jpn)
[23:53:47] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 252 seconds)
[23:53:48] *** Quits: parv (~quass@user/parv) (Ping timeout: 252 seconds)
[23:56:17] <SnoopJ> blei, what is "Intel MKL Random?"
[23:56:35] <blei> intel implementation of random number generators from a variety of distributions
[23:56:46] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[23:56:59] <blei> hardware-based rng if you have a supported chip
[23:57:19] <SnoopJ> blei, okay, and those backends are usually behind abstraction in e.g. numpy, so why would the user be sensitive to that?
[23:57:37] <blei> it doesn't work in pypy
[23:57:39] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[23:57:52] <blei> well, i couldn't get it working, ymmv
[23:58:07] <SnoopJ> I will remain curious I suppose
[23:58:16] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 245 seconds)
[23:58:19] *** Joins: ice9 (~ice9@user/ice9)
[23:59:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:59:45] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
