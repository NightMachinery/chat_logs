[00:00:15] *** Quits: nahtnam (~nahtnam@104-180-254-7.lightspeed.sntcca.sbcglobal.net) (Quit: Client closed)
[00:00:25] <tomsmeding> What's currently the most reliable way to get GHC working on apple M1, with either stack or cabal (don't care)? I don't have such hardware but a student is asking. Sorry for being the 1e6'th person asking for this, perhaps maerwald knows?
[00:02:17] <geekosaur> 8.10.7
[00:02:59] <geekosaur> it should just work, with either stack or cabal. beware of x86_64 binaries or dylibs lying around somewhere
[00:03:15] <g> ghcup will install it just fine, but it doesn't appear to be a seamless experience however you install it
[00:03:48] <geekosaur> make sure your stack or cabal is built for the m1, as an x86_64 one will force the build to be under rosetta
[00:03:59] *** Joins: evocatus (~evocatus@62.182.78.42)
[00:08:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:08:20] <tomsmeding> g, geekosaur: thanks! So I should be able to recommend the standard ghcup install procedure, and tell them to take care to get ghc 8.10.7?
[00:08:38] <geekosaur> yes
[00:08:44] <tomsmeding> In other words, will ghcup automatically get the m1 version
[00:08:47] <tomsmeding> Awesome, thanks!
[00:09:11] <geekosaur> in particular, 9.2.1 has native support for the m1, but that support was found to be buggy (builds but the result crashes) after release, so avoid it
[00:09:38] <geekosaur> sign extension bugs
[00:10:42] *** Joins: pavonia (~user@user/siracusa)
[00:11:34] <tomsmeding> The student tried something else before (cabal and ghc 8.10.7, not sure how they got those things) and got errors that transformers-compat needs llvm [9,13); does that sound familiar?
[00:11:56] <geekosaur> iirc you have to point it to /opt/llvm to get a full llvm
[00:12:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[00:13:16] <tomsmeding> s/transformers-compat/colour/
[00:13:43] <tomsmeding> geekosaur: is there already a full llvm there on a standard macos install, or do you need to point something else there?
[00:14:37] <sm> tomsmeding: echoing geekosaur's warning, if they already installed another way they likely have intel binaries lurking in path, best to clean those out carefully to avoid breakages
[00:14:55] <tomsmeding> Right
[00:15:35] <sm> standard macos comes with llvm 13 I think (or maybe after doing xcode-select --install) but I seemed to need to install it again from brew
[00:16:33] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:16:53] <tomsmeding> Oh I read some comment from angerman on reddit saying that you need to install a full llvm separately anyway?
[00:17:16] <sm> (ps not just binaries but also cached artifacts in .cabal, .stack, .cache/hie-bios..)
[00:17:19] <geekosaur> not sure. at one point someone said there were two versions of llvm under /opt
[00:17:30] <geekosaur> but installing it via brew might be easiest anyway
[00:18:17] <geekosaur> (sorry, had to go downstairs and pick up a package)
[00:18:25] <tomsmeding> geekosaur: as in, `brew install llvm`?
[00:18:59] <geekosaur> I don't know details, I haven't used Macs for years and when I did I used MacPorts
[00:19:03] <sm> yes
[00:19:35] <tomsmeding> sm: thanks, I'll go back and forth with them and come back if we can't figure it out!
[00:19:39] <tomsmeding> Thanks all
[00:20:01] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Remote host closed the connection)
[00:20:08] <sm> np, cf recent m1 thread on /r/haskell
[00:20:37] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[00:20:54] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[00:23:28] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:23:32] <tomsmeding> sm: the one with xeltius as OP?
[00:23:33] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[00:23:40] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[00:25:15] *** Parts: kadir (~kadir@88.251.54.120) (goodnight)
[00:28:32] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:30:06] *** Joins: vicfred (~vicfred@user/vicfred)
[00:30:23] <jollygood2> I have {-# Language OverloadedLists #-} on the of the .hs file, but when I load that file in ghci [1,2,3] is to Num a => [a]. how come?
[00:30:34] <jollygood2> s/to//
[00:30:40] <sm> https://www.reddit.com/r/haskell/comments/rjm0x8/help_wanted_for_llvm_config_for_haskell_on_mac/, tomsmeding
[00:30:57] <dsal> % :set -XOverloadedLists
[00:30:57] <yahb> dsal: 
[00:31:01] <dsal> % :t [1,2,3]
[00:31:01] <yahb> dsal: (IsList l, Num (Item l)) => l
[00:31:17] <dsal> jollygood2: Oh.  That's within the file, not within ghci
[00:31:26] <dsal> That stuff is all pretty well self-contained.
[00:31:31] <jollygood2> that worked, but why isn't ghci autoloading that extension
[00:31:38] <dsal> Because it definitely shouldn't.
[00:31:48] <jollygood2> I disagree
[00:31:57] <dsal> ghci can pull the symbols out of your file, but it doesn't change the language it interprets based on the file.
[00:32:03] <dsal> What if you read two files that have conflicting extensions enabled?
[00:32:54] <geekosaur> :seti -XOverloadedLists ?
[00:33:10] <dsal> I think it'll also honor anything you put in your project config.
[00:33:17] <dsal> But file specific should always be file specific.
[00:33:18] <geekosaur> the language parsed interactively is not that of any source file, as dsal said
[00:33:29] <jollygood2> dsal, doesn't loading a new file lose all the information about the previously loaded file
[00:33:37] <tomsmeding> sm: yay thanks, that looks highly relevant! (Spotted your top comment.) Passing on!
[00:33:39] <geekosaur> you can have multiple files loaded
[00:33:52] <geekosaur> which one wins?
[00:35:36] <jollygood2> I just loaded two files one after another. I can't call any functions from the first file, after loading a second one
[00:37:23] <geekosaur> you can't use :l, but you can use :m *
[00:37:39] <geekosaur> now you have two or more files loaded as source. again: which one wins?
[00:38:00] <geekosaur> also, if you load them as binary instead of source, it can't know which extension(s) were enabled during compile
[00:38:57] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[00:39:06] <jollygood2> since I never load more than one file, or even knew I could do that, I don't particularly care. but having to manually enable extensions is inconvenient. maybe this should be ghci option
[00:39:35] <geekosaur> https://downloads.haskell.org/ghc/latest/docs/html/users_guide/ghci.html#setting-options-for-interactive-evaluation-only
[00:39:55] <hololeap> it would be a nice feature if cabal repl could "zoom into" a module and the interpreter behaves with the scope of that module, e.g. all imports/extensions/functions for that module are enabled/in scope
[00:40:57] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[00:41:03] <dsal> jollygood2: You can specify the extensions you want to use in your package.yaml or .cabal file and then you have them in ghci and don't have to specify them in each file.  But I wouldn't want OverloadedLists without being super aware of it.
[00:41:17] <sm> +1. (:m +*  supporting extensions)
[00:41:32] <hololeap> yeah overloadedlists bites you more often than not
[00:41:52] <sm> (uh, unless geekosaur just explained why that can't work. But I still want it)
[00:42:53] <geekosaur> modules loaded with * and therefore compiled a ssource ought to be able to do it. but I'd want to be told what extensions have been automatically enabled/disabled when I switch scopes, rather than spooky action at a distance
[00:43:12] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[00:43:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:43:29] *** Quits: kaph_ (~kaph@net-2-47-236-216.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[00:43:35] <geekosaur> *especially* if it's something like OverloadedLists. or worse, RebindableSyntax which OverloadedLists is a subset of
[00:43:39] *** Joins: regr (~regr@user/regr)
[00:45:45] <geekosaur> also there's at least one current exception that would need to be thought about: NoMonomorphismRestriction is default interactively but not in files
[00:45:48] <sm> geekosaur: agreed, that would be great. I've regroupd and typed :set -X[No]LongCaseSensitiveName more than enough 
[00:49:09] <monochrom> You can load multiple files by using :add
[00:50:47] <monochrom> Also the design of ghci is such that the notion of loading is somewhat detached from the notion of in-scope.  :module is about in-scope.
[00:51:04] <monochrom> This means there are times you have to say both :add and :module
[00:51:15] <geekosaur> also I'm not sure "all imports" is currently possible. I tried to access xmonad imports with my cabalized setup and failed, no amount of --package etc. seemed to help. (packages were of course visible in cabal file)
[00:52:18] <EvanR> I've got a cabal script .hs file I want to load into ghci...
[00:52:29] *** nitrix is now known as nitrix-mas
[00:52:40] <EvanR> rather than execute as is
[00:52:41] <monochrom> The said design may be bad, but it has the merit of acknowledging the following issue: :module is valid for modules from installed packages, :load isn't.
[00:52:54] <geekosaur> hm, I don't think either cabal or stack will do that with scripts currently
[00:53:06] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:53:08] *** Joins: toastloopex (toastloop@user/toastloop)
[00:53:09] <monochrom> And generally acknowledging the invalidity of DWIM.
[00:53:30] <sm> with stack, it's stack --package A --package B ghci script.hs, I think
[00:53:30] <EvanR> can I run ghci and load package vector... even if it's "hidden"
[00:53:47] <monochrom> I think I heard that stack scripts can be "stack repl"ed.
[00:53:56] <geekosaur> ghci -package vector-x.y.z
[00:56:26] *** Quits: toastloop (toastloop@user/toastloop) (Ping timeout: 268 seconds)
[00:57:08] <EvanR> There is no package.cache... There are no .conf files... cannot satisfy -package vector
[00:57:23] <EvanR> or vector-0.12.3.1
[00:57:40] <EvanR> yes, I don't understand cabal
[00:57:56] <sm> what was your command line ?
[00:58:00] <monochrom> Yeah "-package vector-..." requires either having done "cabal install --lib vector-..." or manually playing with -package-db flags.
[00:58:02] <ProfSimm> When I make a record, Haskell generates field accessors automatically as functions. Where are those functions defined actually, who has access to them?
[00:58:06] <geekosaur> if you are using cabal repl, it should be --package vector
[00:58:07] <EvanR> ghci -v -package vector-0.12.3.1
[00:58:19] <Raito_Bezarius> Many thanks dminuoso
[00:58:53] <monochrom> "cabal install --lib" is not very harmful. Perhaps it's the least resistant option.
[00:59:15] <geekosaur> ProfSimm, they are ordinary functions with the same scope as anything you define at top level in your file, and will for example be exported if you have no (== default) export list
[00:59:20] <nitrix-mas> ProfSimm, Same module the record type is defined in. Import/exports of those functions works in the same way the type does as well.
[00:59:20] <geekosaur> Or you can export them explicitly
[00:59:30] <EvanR> cabal repl --package vector, them import Data.Vector or :load MyFile.hs results in Could not load Data.Vector something something hidden package
[00:59:37] <sm> when the cabal script runs, which package db is it using ? the user package db for the ghc in PATH, I would have though
[00:59:38] <ProfSimm> Thanks.
[00:59:39] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[00:59:59] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[01:00:11] <monochrom> You won't have a filename-and-line-number answer for "where", if that's what you mean.
[01:00:12] <EvanR> well, doing cabal repl I don't expect it to treat the file as a cabal script
[01:00:33] <geekosaur> that's pretty much the only thing I would expect *to* treat it as one
[01:00:35] <monochrom> Compiler auto-gen'ed code that exists only in *.o files.
[01:00:41] <geekosaur> nothing else would know it was a cabal script
[01:00:42] <EvanR> cabal v2-run ?
[01:01:05] <monochrom> Similarly "data X = X deriving (Ord, Eq, Show, Read)" where is the instance code?
[01:01:06] <geekosaur> in particular bare ghci will think it's an ordinary Haskell source file and ignore the cabal-script stuff entirely
[01:01:19] <EvanR> makes sense
[01:01:22] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[01:02:27] <monochrom> OK, who has access. A better question is: What is its scoping rules.
[01:02:29] <EvanR> monochrom suggested something like, install vector globally
[01:02:46] <monochrom> It is firstly in scope in the module that defines that record type.
[01:03:07] <monochrom> And then that module can choose to export or not export it.  Default is export.
[01:03:20] <sm> EvanR: isn't vector already installed globally , since the script runs by itself ?
[01:03:47] <monochrom> Yeah but ghci consults the "environment" file.
[01:04:10] <monochrom> In which case "cabal install --lib vector" has a job of updating that environment file.
[01:04:13] <EvanR> I guess it's installed due to my previous cabal scripts?
[01:04:18] <sm> right.. so maybe you're in a project directory EvanR ?
[01:04:19] <monochrom> Yeah.
[01:04:35] <EvanR> no project files in sight
[01:04:41] <monochrom> Well if someone uses ghci directly, maybe they don't want a "project".
[01:04:42] <EvanR> just .hs file
[01:04:52] <sm> ghc-pkg list <- includes vector ?
[01:05:06] <EvanR> no vector
[01:05:23] <monochrom> "cabal run script.hs" causes building vector but not entering it into the "environment file".
[01:05:23] <EvanR> I've only installed it in projects and used it from scripts
[01:05:26] <sm> it seems you have multiple package dbs in play, one way or other
[01:05:34] <geekosaur> ghc-pkg list doesn't include environment files, that's an open ghc ticket
[01:05:45] <EvanR> environment file...
[01:05:55] <EvanR> why didn't I think of that... 
[01:06:03] * sm laments the overwhelming cunning of haskell tools, humans do not have much chance
[01:06:25] <monochrom> Isn't this like common knowledge for 5 years already?
[01:06:42] <sm> ha, easy to say
[01:06:55] <EvanR> Can I have a listing of all common knowledge
[01:06:59] <sm> I've never used an environment file
[01:07:08] <monochrom> I am saying this as someone who wanted to have nothing to do with cabal v2 until like a year ago.
[01:07:21] <sm> and even if I had I would still forget about them at times like this
[01:08:05] <EvanR> before we delve into a metatoolingrant, what does the potential existence of this "environment file" mean to me right now
[01:08:45] <EvanR> is vector installed? xD
[01:08:58] <EvanR> I mean i've been using it for a few months
[01:09:00] <monochrom> It helps you use ghci directly and still enjoy a cabal-v1-like experience of "install a lib, then ghci sees it".
[01:09:40] *** Quits: jgeerds_ (~jgeerds@55d4ac73.access.ecotel.net) (Quit: Leaving)
[01:09:47] <monochrom> OK, maybe the following helps.
[01:09:48] <EvanR> that's handy I guess
[01:09:48] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[01:10:01] <monochrom> Take a look at $HOME/.cabal/store/ghc-<version>
[01:10:24] <monochrom> You will find a lot of library packages there.  And a package database too to go with them.
[01:10:27] <EvanR> I have 3 vectors two with the same version
[01:10:44] <monochrom> Clearly, ghci by default doesn't even know that this place exists.
[01:11:16] <sm> EvanR: if you're not in a project, why/where do you have an environment file ? just curious
[01:11:33] <monochrom> Now you have 2 options. For "--lib", turn to page 13.  For "cabal 'project'", turn to page 7.
[01:11:47] <EvanR> sm, I only just heard of an environment file
[01:11:59] <EvanR> I don't see any file called environment anywhere
[01:12:10] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:12:14] <sm> oh. I thought you had discovered one causing the problem
[01:12:18] <EvanR> no
[01:12:24] <monochrom> Page 13: "cabal install --lib" updates a file under $HOME/.ghc to point ghci to the existence of some of those packages, very selectively.  You can do very fine-grained control.
[01:12:39] <EvanR> well I know how to make a cabal project
[01:12:47] <monochrom> Page 7: "cabal build" calls ghc with enough -package-db flags to tell ghc the existence of that place.
[01:13:15] <EvanR> -package-db flags, got it
[01:13:37] <monochrom> -package-db flags are not normally meant for human use. :)
[01:14:01] <monochrom> Then again, I still do it once in a while. Even wrote a few bash aliases to help.
[01:15:04] *** Quits: tomku (~tomku@user/tomku) (Quit: leaving)
[01:15:12] <EvanR> interesting there's nothing really under ~/.ghc
[01:15:35] *** Joins: tomku (~tomku@user/tomku)
[01:15:37] <EvanR> an empty package.cache.lock file
[01:16:03] <monochrom> You have multiple vectors of the "same" "version" because if its build dependencies changes by just a little bit, a rebuild is called for.  Each build is crytpo-hashed with the exact backgrounds of the build.  This is to solve cabal hell.
[01:16:18] <EvanR> cool
[01:16:52] <EvanR> but it sounds like that spells trouble for "just load a haskell file that uses vector"
[01:17:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[01:18:14] <EvanR> and a .cabal file is cool but still non-non-existent part of a small workflow
[01:18:18] <monochrom> The environment file will refer to just one of the builds.
[01:18:19] <sm> my approach to that is `cd; stack ghci FILE --package vector`. This is pretty reliable, it must be possible to do something similar with cabal
[01:18:41] <monochrom> At worst it refers to an old build you don't want to use any more.
[01:18:57] <EvanR> is The environment file unique?
[01:18:58] <monochrom> But you can always edit the env file and delete that line.
[01:19:01] <monochrom> Yes.
[01:19:13] <sclv> `cabal repl -b` is the equiv to `stack ghci --package`
[01:19:46] <sm> there ^
[01:19:57] <EvanR> cabal repl doesn't take any extra arguments when outside a project
[01:20:39] <sclv> right, don't pass in the file for ghci to load
[01:20:41] <sm> waaaah
[01:20:46] <sclv> it'll open a clean ghci with all the packages in scope
[01:20:55] <sclv> and from within ghci, hit `:load path/to/File.hs`
[01:21:09] <monochrom> Oh, cool trick, haha, didn't think of that.
[01:21:43] <EvanR> that actually worked
[01:21:56] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[01:21:57] <EvanR> what the hell does -b stand for
[01:22:06] <sclv> --build-depends
[01:22:14] <EvanR> wow
[01:22:25] <sclv> so you can give it `containers > 2` etc
[01:22:40] <sm> victory \o/
[01:22:54] <sclv> and note it runs the solver under the hood so you can depend on some beefy collection of packages and it'll solve and build the deps for you
[01:23:04] <EvanR> yeah ok... final question, have we been talking about "the .ghci file" this whole time
[01:23:05] <monochrom> The other cool trick I learned today is from the Giry monad file int-e pointed me to.  Under Dirac measure, say "unit x", a predicate is true a.e. iff it is true at x.  Because the whole point of a Dirac measure is to ignore everything else haha.
[01:23:22] <tomsmeding> You can also 'cabal repl -b vector --repl-options yourfile.hs' iirc
[01:23:57] <tomsmeding> monochrom: what does a.e. stand for?
[01:23:57] <sm> confirmed, tomsmeding 
[01:24:52] <tomsmeding> Ah, almost everywhere
[01:24:57] <monochrom> "almost everywhere".  The technical definition is: A predicate holds "a.e." iff the set of where it doesn't hold has zero measure.
[01:25:04] <tomsmeding> Right
[01:25:25] <monochrom> So, the complement of {x} has zero measure!
[01:25:46] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[01:25:56] <monochrom> More like "ignore almost everywhere except x". :)
[01:26:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:26:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:26:00] *** Joins: wroathe (~wroathe@user/wroathe)
[01:26:01] <tomsmeding> The fact that "almost everywhere" has a rigorous definition can be used as a lousy party trick among amateur mathematicians
[01:26:35] <sm> EvanR: I didn't notice anyone talking about "the .ghci file" ?
[01:26:40] <EvanR> ok then I'm wrong
[01:26:48] <monochrom> Well, not sure we should blame it on "a.e." or we should blame it on the very degenerate Dirac measure. :)
[01:27:11] <EvanR> if I carry on right now, I still won't know wtf an environment file is
[01:27:23] <EvanR> is it called "environment" or where would it go
[01:27:34] <EvanR> no duckduckgo results about it
[01:27:38] <sm> good, best avoid it if you can
[01:27:44] <EvanR> alright then it's bad
[01:27:52] <sclv> its a different approach thats slick when it works
[01:27:54] <EvanR> stricken from the record
[01:28:07] <monochrom> So, the sifting property "f x = integrate f using (unit x) as the measure" has a lousy party trick proof: f = const (f x) a.e.
[01:28:08] <sm> https://cabal.readthedocs.io/en/3.6/cabal-project.html?highlight=environment#cfg-field-write-ghc-environment-files
[01:28:08] <sclv> but its not so easy to use still, so the other options presented are easier
[01:28:09] <geekosaur> but bites your butt hard when it doesn't
[01:28:27] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:28:51] <sclv> its a sad case where "do what i mean" can cause the XX% of cases when that isn't what you meant to be confusing
[01:29:49] <monochrom> EvanR: If you have an environment file, then when you start ghci, it has the message "Loaded package environment from ..." and it spells out the exact pathname.
[01:30:17] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[01:30:27] <EvanR> Ok, it looks gnarly
[01:30:31] <EvanR> will do -b
[01:35:47] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[01:35:48] <EvanR> interesting, Vector's show instance looks like List's?
[01:37:09] *** Joins: toastlooply (toastloop@user/toastloop)
[01:37:23] <monochrom> It adds a "fromList" but yeah.
[01:37:44] <monochrom> No one wants to invent a really innovative notation!
[01:38:04] <monochrom> And under the spell of "it should look like Haskell code".
[01:38:15] <geekosaur> they'd have to get ghc{,i} to recognize it :)
[01:38:30] <geekosaur> or someone would inevitably try to type it in
[01:39:07] <EvanR> I'm not seeing the "fromList " part...
[01:39:53] <EvanR> so I thought I messed up and made a list
[01:40:23] *** Quits: toastloopex (toastloop@user/toastloop) (Ping timeout: 256 seconds)
[01:40:49] <monochrom> Hrm, you're right, I misremembered.
[01:42:02] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[01:42:04] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[01:46:36] *** Quits: coolnickname (uid531864@user/coolnickname) (Quit: Connection closed for inactivity)
[01:46:57] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[01:48:00] <EvanR> it's fun to see how other languages decided to 'show' their data structures
[01:48:09] *** Joins: toastloopex (~toastloop@user/toastloop)
[01:48:17] <EvanR> they're all special snowflakes
[01:49:04] <EvanR> deep down we all use the same heap objects and pointers, just in different ways
[01:49:21] <EvanR> and the pretty printers don't agree
[01:50:57] *** Quits: toastlooply (toastloop@user/toastloop) (Ping timeout: 240 seconds)
[01:52:56] *** Joins: acidjnk (~acidjnk@p200300d0c7271e5539f4c4c5e28366d0.dip0.t-ipconnect.de)
[01:53:46] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.3)
[01:54:49] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:56:18] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[01:56:28] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[02:01:22] <[itchyjunk]> Hi, I am curious about "higher order function" vs "first order function". Higher order functions take function as parameter or return one. a `+` can return a partial function, wouldn't that make + a higher order function?
[02:02:06] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[02:02:20] *** YehoshuaPesachWa is now known as yehoshuapw
[02:02:32] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:02:33] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:02:50] <hpc> only in haskell
[02:03:07] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[02:03:09] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:03:14] <hpc> (+) :: Num a => (a, a) -> a -- wouldn't be particularly higher-order at all
[02:03:24] *** Joins: otherwise (~otherwise@c-73-181-170-174.hsd1.wa.comcast.net)
[02:03:24] <hpc> and that's how other languages behave
[02:03:25] *** Joins: lragyrlmtdwnbo^ (~lragyrlmt@64.253.22.77)
[02:03:27] <[itchyjunk]> Ah, + in haskell is higher order function since it can return partial function?
[02:03:34] <Rembane> [itchyjunk]: I would say that +4 evaluates to a function, it's not the function itself that returns a new function.
[02:03:45] <[itchyjunk]> hmmm
[02:04:11] <[itchyjunk]> Ah, i kinda see the distinction you're making there
[02:04:19] <Rembane> If (+) is a higher order function then all functions in Haskell are higher order functions, except for the one hpc mentioned. 
[02:06:24] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:07:38] <hpc> not all functions, but certainly all functions of "more than one" parameter
[02:07:51] <hpc> here's another fun question for you
[02:07:52] <hpc> :t id
[02:07:53] <lambdabot> a -> a
[02:08:01] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[02:08:02] <hpc> is that a higher-order function?
[02:08:32] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:09:25] <[itchyjunk]> well it takes a function and maps it to a function (itself)
[02:09:28] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[02:09:31] <[itchyjunk]> so i should be a higher order function, no?
[02:09:44] <hpc> maybe
[02:09:50] <hpc> > id True -- or maybe it's not?
[02:09:51] <lambdabot>  True
[02:10:11] <[itchyjunk]> oh
[02:10:15] *** Quits: toastloopex (~toastloop@user/toastloop) (Remote host closed the connection)
[02:10:20] <[itchyjunk]> there, it didn't take a function but a value?
[02:10:27] <hpc> yeah
[02:10:31] <[itchyjunk]> ahhh
[02:10:36] *** Joins: toastloopex (~toastloop@user/toastloop)
[02:10:46] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[02:11:07] <hpc> instead of getting too deep into defining these things exactly, perhaps look at it as "what is this language able to express?"
[02:11:09] <[itchyjunk]> So it's a very context sensitive concept. great, makes sense!
[02:11:17] <[itchyjunk]> hmmm
[02:11:21] *** Joins: OscarZ (~oscarz@95.175.104.235)
[02:11:45] <hpc> higher order functions make sense as a term when you're not able to have them, and think "what if you could?"
[02:11:49] <[itchyjunk]> I don't think i understand the question. What are the types of things i can express? like turing completness?
[02:12:13] <hpc> then once you get them, they're ultimately just yet more functions
[02:12:37] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 240 seconds)
[02:12:44] <hpc> fuzzier than turing-completeness
[02:12:58] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[02:13:22] <hpc> for example, bash version 3 is turing-complete, but you can't express arrays properly in it
[02:13:30] <hpc> (that was added in bash version 4)
[02:13:41] <hpc> perl 4 didn't have pointers
[02:13:43] *** nitrix-mas is now known as nitrix
[02:13:50] <hpc> java 1.4 didn't have parametric polymorphism
[02:13:57] <hpc> haskell 1.4 didn't have the IO type
[02:14:06] <hpc> but all are turing complete
[02:14:23] *** Quits: deadmarshal (~deadmarsh@95.38.231.102) (Ping timeout: 256 seconds)
[02:14:31] <[itchyjunk]> huh, interesting. so you could still do the same thing in each language, you just didn't have an inbuilt tool for it?
[02:14:37] <hpc> yeah
[02:14:56] <hpc> it's also why if you stick around here long enough, people talk about what you "can do" in theorem proving languages
[02:14:58] <[itchyjunk]> does this mean i could implement higher order functions externally to any equivalently expressive language?
[02:15:08] <hpc> when they aren't even turing-complete, so in a computational sense they are strictly lesser
[02:15:10] <[itchyjunk]> oh interesting!
[02:15:31] <hpc> you can emulate them in various ways, sure
[02:15:34] <[itchyjunk]> i heard something about Coq not being turing complete. I would like to learn about theorem proving languages too!
[02:15:43] <hpc> in C you might use function pointers for function parameters
[02:16:03] <hpc> but then you'd have a yucky time trying to write a version of (+) that lets you partially apply it
[02:17:01] *** Quits: cosimone (~user@93-34-133-112.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:18:30] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:18:30] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:18:59] <regr> yep, (safe) agda isn't turing complete either
[02:19:02] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[02:19:06] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:19:08] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[02:22:15] *** Joins: falafel (~falafel@2603-8000-d800-688c-502d-7280-71cc-20e7.res6.spectrum.com)
[02:22:53] <hololeap> this might be a stupid way of thinking of it, but I think of a higher order function as one that does not simply associate to the right. so I would consider `(a -> b) -> c` a higher-order function, but I would not consider `a -> (b -> c)` one since it simplifies to `a -> b -> c`
[02:23:06] <regr> :t let {x :: Void; x = x} in x -- in haskell, you can 'make' an element of any type, even one without a constructor
[02:23:07] <lambdabot> Void
[02:24:10] <regr> and theorem prover people don't like it when you can do that, because it's basically like proving a falsehood (for example 4 = 5) which completely ruins their logic
[02:24:19] <sm> off topic except discussion in here sent me on this tangent.. but isn't the first example at https://en.wikipedia.org/wiki/Chomsky_hierarchy#Formal_grammars wrong ? I don't see it producing "n copies of a followed by n copies of b"
[02:24:32] *** Joins: philg (~philg@220.240.104.208)
[02:25:00] <regr> so agda (and probably coq) check that every definition you make actually produces an answer (and many more things) to make sure you can't do that
[02:25:19] <regr> which is why agda and coq aren't turing complete
[02:25:25] <hpc> sm: it looks right to me
[02:25:41] <sm> (phew, I do. n must be the same for both letters. carry on..)
[02:26:00] <hpc> heh
[02:26:08] <sm> thanks :)
[02:26:35] *** Quits: philg (~philg@220.240.104.208) (Client Quit)
[02:26:51] *** Joins: philg (~philg@220.240.104.208)
[02:26:57] *** philg is now known as FirstAsTragedy
[02:27:12] <EvanR> [itchyjunk], you may have learned that a higher order function is one that takes a function as input. Now it's up to you do make of that what you will
[02:27:25] *** Quits: ridcully_ (~ridcully@pd951f824.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:27:30] *** Joins: ridcully (~ridcully@pd951fb88.dip0.t-ipconnect.de)
[02:27:37] <hpc> (for the audience, if you expand the rules for A and B into the expansion for S, you get the second code block in that section which is obviously correct)
[02:28:54] <EvanR> it seems normal in haskell, but see all the crazy terminology for this concept in e.g. math... where they call it a "functional"
[02:29:39] <[itchyjunk]> ah, ill check out functionals
[02:29:42] <EvanR> which sounds more like a word crashed on the part of speech highway
[02:30:16] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4)
[02:30:18] <hpc> it's like whoever was naming it forgot that verbs have conjugations
[02:30:51] <hpc> "ah crap, we can't just name this after euler again"
[02:31:31] <EvanR> hpc might be on the right track, what if aliens on venus invented functions (without regard to what they operate on), then a cool committee invented venusian C where functions could only operate on primitive types and pointers
[02:31:39] <EvanR> they might call them "limited functions"
[02:32:08] <EvanR> nothing higher order about the original functions
[02:32:22] <hpc> heh
[02:32:42] <hpc> or maybe it's the same person who decided to call it "maths"
[02:33:03] <hpc> when the world inevitably ends in nuclear war, they'll have to learn to survive the "aftermaths" :D
[02:33:35] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[02:34:33] <Rembane> That implies some kind of non determinism which I find comforting. :)
[02:34:48] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[02:35:12] *** Quits: FirstAsTragedy (~philg@220.240.104.208) (Quit: Konversation terminated!)
[02:35:12] <EvanR> ah yeah, american Math is something you can't argue with
[02:35:29] <EvanR> if you study maths... you have options
[02:35:42] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:35:45] <hpc> i prefer computer sciences
[02:35:51] <hpc> or if you read smbc, computers science
[02:36:11] <EvanR> accounts receivable
[02:37:33] <hpc> somewhere in super-america, they study physic instead of physics
[02:38:22] <Rembane> The one true physic. 
[02:39:06] <otherwise> '=D
[02:40:00] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:41:55] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:44:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[02:44:35] *** Joins: tomku (~tomku@user/tomku)
[02:45:17] *** Quits: jeetelongname (~jeet@88-111-159-26.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[02:48:49] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:49:51] <mjrosenb> after we figure out the GUT, then we will finally have physic.
[02:53:40] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[02:55:10] *** Joins: kaph (~kaph@net-2-45-51-147.cust.vodafonedsl.it)
[02:55:23] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:57:28] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:58:13] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[02:58:32] *** Quits: evocatus (~evocatus@62.182.78.42) (Quit: Leaving)
[03:00:04] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Quit: Leaving)
[03:00:08] *** Joins: AlexNoo_ (~AlexNoo@178.34.160.99)
[03:01:17] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[03:02:14] *** Quits: Alex_test (~al_test@178.34.150.63) (Ping timeout: 268 seconds)
[03:02:51] *** Quits: AlexZenon (~alzenon@178.34.150.63) (Ping timeout: 268 seconds)
[03:03:29] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[03:04:05] *** Quits: AlexNoo (~AlexNoo@178.34.150.63) (Ping timeout: 268 seconds)
[03:04:54] <carbolymer> the physic of the gut
[03:05:44] *** Quits: falafel (~falafel@2603-8000-d800-688c-502d-7280-71cc-20e7.res6.spectrum.com) (Remote host closed the connection)
[03:05:45] <geekosaur> isn't a physic what you take when your gut hurts?
[03:06:05] *** Joins: falafel (~falafel@2603-8000-d800-688c-502d-7280-71cc-20e7.res6.spectrum.com)
[03:06:56] *** Joins: AlexZenon (~alzenon@178.34.160.99)
[03:06:56] *** Joins: Alex_test (~al_test@178.34.160.99)
[03:10:05] <hpc> my gut only hurts if i try to eat a monad too fast
[03:10:16] <hpc> i mean, burrito
[03:12:53] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:13:21] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:13:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:16:25] *** Quits: aliosablack (~chomwitt@ppp-2-85-245-134.home.otenet.gr) (Ping timeout: 268 seconds)
[03:17:01] *** Quits: Jing (~hedgehog@2604:a840:3::1061) (Remote host closed the connection)
[03:17:02] *** Quits: chomwitt (~chomwitt@ppp-2-85-245-134.home.otenet.gr) (Ping timeout: 268 seconds)
[03:17:49] <otherwise> I'm stuck on this "learn you a haskell..." sentence:
[03:17:49] <otherwise> "We could have done this pattern matching directly in the function's parameters (it would have been shorter and clearer actually) but this just goes to show that it's possible to do it in where bindings as well."
[03:17:50] <otherwise> here is my attempt to do just that (pattern match directly in the functions parameters: https://paste.tomsmeding.com/uIZZTTF8
[03:18:04] *** Joins: Jing (~hedgehog@2604:a840:3::1061)
[03:18:13] <otherwise> Any hints on how I can better approach this?
[03:19:47] <monochrom> initials (f:_) (l:_)  = [f] ++ ". " ++ [l] ++ "."
[03:20:17] *** Quits: falafel (~falafel@2603-8000-d800-688c-502d-7280-71cc-20e7.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:20:31] <monochrom> This is what's wrong with writing paragraphs after paragraphs of prose.
[03:20:42] <hololeap> initials' firstname lastname = let (f:_) = firstname ; (l:_) = lastname in f ++ "." ++ l ++ "."
[03:21:57] <otherwise> well I got it but it kinda felt like a guess...
[03:22:22] <otherwise> oh sorry I didnt see your responses till after my second comment
[03:23:13] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 250 seconds)
[03:23:30] <otherwise> initials' :: String -> String -> String
[03:23:31] <otherwise> initials' (f:firstname) (l:lastname) = [f] ++ "." ++ [l] ++ "." --((f:_) = firstname) ++ "." ++ ((l:_) = lastname) ++ "."
[03:24:01] <otherwise> just this actually:
[03:24:01] <otherwise> initials' (f:firstname) (l:lastname) = [f] ++ "." ++ [l] ++ "."
[03:24:16] * hololeap forgot to put f and l inside lists
[03:25:09] <monochrom> copy-paste-edit is more reliable than writing from scratch :)
[03:25:11] <hololeap> since you're not using the firstname or lastname variables there, you can just replacethem with an underscore _
[03:25:33] <jollygood2> I'm implementing my own list for fun and practice. should I define any other instance? https://paste.tomsmeding.com/pDJi5AZm
[03:25:37] *** Quits: n3rdy1 (~n3rdy1@2601:281:c780:a510:31c5:bd6a:19eb:499b) (Ping timeout: 240 seconds)
[03:26:14] <monochrom> Traversable, Alternative, MonadPlus
[03:26:14] <hololeap> jollygood2: now it's time to implement Traversable
[03:26:17] <geekosaur> ^
[03:26:25] <monochrom> IsList >:)
[03:27:08] <jollygood2> I did IsList :P. those other 3 sound good
[03:27:18] <monochrom> Semigroup. Are you using a relative old GHC? Semigroup is a requirement for Monoid these days.
[03:27:19] *** Quits: max22- (~maxime@2a01cb0883359800ba08fcf16942d473.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:27:29] <monochrom> Ah I see.
[03:27:49] <jollygood2> I'm usin golder version, waiting for bug-free version of 9.2 to upgrade
[03:28:03] <geekosaur> how much older isolder?
[03:28:33] <jollygood2> 8.8.3 :P
[03:28:48] <monochrom> MonadFail :)
[03:28:57] <monochrom> Not sure if it's in 8.8
[03:29:30] <jollygood2> I did just instance Semigroup (List a) where and it compiled without warnings. there's no need to define anything in newer versions as well?
[03:29:55] *** Quits: Bartol (~Bartol@user/Bartol) (Remote host closed the connection)
[03:29:55] <monochrom> In newer version, if you don't have Semigroup, you aren't allowed Monoid.
[03:30:07] <geekosaur> in newer versions mappend is constructed from Semigroup's sappend and you only want mempty
[03:30:16] <jollygood2> ah
[03:31:03] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[03:32:27] <hololeap> upgrade to 8.10.7
[03:32:29] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[03:35:25] *** Quits: toastloopex (~toastloop@user/toastloop) (Remote host closed the connection)
[03:36:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[03:37:51] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:37:51] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:37:51] *** Joins: wroathe (~wroathe@user/wroathe)
[03:42:28] *** Quits: regr (~regr@user/regr) (Quit: "")
[03:44:48] *** Quits: L29Ah (~L29Ah@wikipedia/L29Ah) (Ping timeout: 268 seconds)
[03:45:01] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Ping timeout: 240 seconds)
[03:45:39] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[03:45:39] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[03:45:39] *** finn_elija is now known as FinnElija
[03:45:44] *** Joins: kaph_ (~kaph@net-2-45-51-147.cust.vodafonedsl.it)
[03:46:58] *** Joins: falafel (~falafel@2603-8000-d800-688c-502d-7280-71cc-20e7.res6.spectrum.com)
[03:47:33] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[03:47:57] *** Quits: kaph (~kaph@net-2-45-51-147.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[03:48:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[03:50:24] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:50:34] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[03:50:57] *** Quits: falafel (~falafel@2603-8000-d800-688c-502d-7280-71cc-20e7.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:51:14] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[03:52:49] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[03:53:19] <otherwise> https://paste.tomsmeding.com/CIFcRs9L
[03:53:50] <otherwise> trying to make this work:
[03:53:51] <otherwise> initials'2 :: String -> String -> String
[03:53:51] <otherwise> initials'2 ([f]:_) ([l]:_) = [f] ++ "." ++ [l] "."
[03:54:07] <geekosaur> that's not how list patterns work
[03:54:26] <geekosaur> [f] matches a list of exactly one item, and the following : means you have a list of lists
[03:54:41] <otherwise> I got the same thing to work with (f:firstname), but I figure I can just replace firstname with _ because I'm not using firstname.
[03:54:44] <geekosaur> (f:_) is how you match the first element of a list
[03:55:37] <geekosaur> > (2:3:5:[])
[03:55:38] <lambdabot>  [2,3,5]
[03:55:45] <otherwise> I tried that as well, same error
[03:56:44] <geekosaur> you are also missing a ++
[03:57:06] <geekosaur> at the end of line 7
[03:57:40] <geekosaur> [l] "." does not concatenate [l] with "."
[03:57:40] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:57:53] <otherwise> oh that myst be it
[03:58:19] <jollygood2> am I missing something, or have things changed since my ancient ghc, because MonadPlus and Alternative didn't give me any new functionality.  I did not need to define any methods for MonadPlus, and for Alternative I just did  (<|>) = (<>)     empty = Nil
[03:59:43] <dsal> > let initialize = (<>".") . intersperse '.' . fmap head  in  initialize ["Other", "Wise"]
[03:59:45] <lambdabot>  "O.W."
[04:00:02] *** Quits: acidjnk (~acidjnk@p200300d0c7271e5539f4c4c5e28366d0.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:02:54] <jollygood2> > [1,2] <|> [4,5]
[04:02:55] <lambdabot>  [1,2,4,5]
[04:02:58] <jollygood2> I kind of expected [1,2]
[04:03:05] <dsal> Yeah.  I always expect that, too.
[04:03:57] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:05:58] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:06:46] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[04:08:52] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:11:18] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:12:13] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[04:13:50] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:14:48] <otherwise> initials'2 :: String -> String -> String
[04:14:48] <otherwise> initials'2 (f:_) (l:_) = [f] ++ "." ++ [l] ++ "." -- very concise version of initials.
[04:14:49] <otherwise> HOWEVER, if I try to switch to (_:f) (_:l) it does not take the tail of each string input like I would expect...
[04:15:22] <dsal> It does take the tail.  Perhaps you expect tail to mean something else?
[04:15:26] <monochrom> It does. Your problem is elsewhere.
[04:15:46] <otherwise> hmm okay
[04:15:47] <monochrom> > let f (_:s) = s in f "abc"
[04:15:49] <lambdabot>  "bc"
[04:15:54] <monochrom> worksfome
[04:16:26] <EvanR> whoa that was almost an infinite loop
[04:17:15] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[04:18:04] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[04:18:12] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[04:20:19] <otherwise> Oh I just had my outputs as [f] ++ [l], which was [[Char]] instead of my defined type [Char]
[04:21:46] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[04:22:13] *** Quits: Erutuon (~Erutuon@user/erutuon) (Quit: WeeChat 2.8)
[04:22:37] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[04:25:55] *** Joins: Erutuon (~Erutuon@user/erutuon)
[04:26:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[04:27:02] <jollygood2> uh, actually I'm using ghc 8.0.2! wow that's old
[04:28:06] <jollygood2> since I waited that long though, I can wait a couple of more months to jump straight to 9.x
[04:30:05] <shapr> Is there a tool to convert a stack.yaml to a cabal.project?
[04:30:19] <shapr> I have cabal generating arm64 native packages, but stack just won't
[04:30:21] *** Quits: otherwise (~otherwise@c-73-181-170-174.hsd1.wa.comcast.net) (Quit: Connection closed)
[04:30:35] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[04:30:36] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[04:30:51] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[04:31:00] <sm> shapr, seen https://www.reddit.com/r/haskell/comments/rjm0x8/help_wanted_for_llvm_config_for_haskell_on_mac/ ?
[04:31:28] <shapr> nope
[04:32:58] <shapr> I downgraded to llvm 12 on m1 mac, that seemed to help
[04:33:54] * shapr reads faster
[04:34:19] <shapr> ah, they also went to llvm 12
[04:34:41] <shapr> I just don't want to build a cabal.project by hand for ~150 packages
[04:34:45] <shapr> so was hoping to convert this magically
[04:35:25] <sm> shapr: if it's not clear from that discussion, I'm using brew-installed llvm 13 and stack building arm binaries happily
[04:35:50] <shapr> how'd you get an arm64 stack?
[04:36:12] <geekosaur> doesn't ghcup install one?
[04:36:13] <sm> I fixed multiple issues by finding and replacing all intel versions of stack/cabal/ghc/hls with ghcup-installed arm binaries (ghcup FTW!). Also beware, tools don't expect this change so many cached files will be out of date and will cause problems until you manually remove them - watch out for this with things under ~/.cabal, ~/.stack and ~/.cache (eg hie-bios).
[04:37:17] <shapr> oh huh, ghcup does give me an arm64 native stack
[04:37:23] <sm> brew also installs one, but ghcup provides more (hls, ghc versions..)
[04:37:25] <shapr> geekosaur: yes, thanks
[04:37:46] <shapr> I'll try this one more time, but previous builds were saying it couldn't link x86 to arm64 for postgresql-simple
[04:38:05] <shapr> jävla frustrerad
[04:38:32] <geekosaur> make sure you don't have x86 postgres libs around
[04:38:35] <shapr> now I get segfaults
[04:38:46] <shapr> geekosaur: pretty sure I only have arm64 native stuff
[04:38:55] <shapr> as far as I know, I haven't installed rosetta 
[04:38:57] <sm> I'm pretty sure you don't :)
[04:39:20] <sm> doesn't my comment above give some ideas ? build artifacts left over ?
[04:39:34] <shapr> yeh, I'd believe that
[04:39:47] <shapr> I'll just check out the repo again, no manual steps here
[04:39:52] <sm> and have you checked all haskell tools in PATH with file ?
[04:39:57] <jollygood2> what is up with this?
[04:40:05] <jollygood2> File path contains a name which is not a valid package name: ghc-882-test.cabal
[04:40:11] <EvanR> I just combined a Tree, State, and Traversable to put a new number at each place in the tree. Cool. Am I missing a way (using Traversable) to instead label each node with its depth
[04:40:29] <shapr> sm: everything in ~/.ghcup/bin is arm64 only, so that's good
[04:40:37] <jollygood2> why is it invalid? numbers?
[04:40:57] <sm> that's a start, but not at all the same thing. I had binaries all over the place
[04:41:36] <EvanR> or would that require a different kind of traversable
[04:41:39] <dsal> EvanR: I did a thing that sounds exactly like that.
[04:41:43] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:41:50] <dsal> number = flip evalState 0 . traverse (\x -> (,x) <$> (id <+= 1))
[04:42:00] <shapr> sm: pretty sure I have only the binaries from ghcup, but I'll dig around
[04:42:32] <dsal> That's a custom type, and not Tree, but it's Treeish
[04:42:39] <EvanR> sure
[04:42:43] *** Quits: Guest2110 (~random@46.254.129.95) (Remote host closed the connection)
[04:42:47] <shapr> I wish I could figure out why the ghcup installed stack gives me a segfault
[04:43:06] <sm> good luck. I had binaries in at least the 5 places mentioned in that thread
[04:43:19] <shapr> I will check the locations you listed, thanks
[04:43:24] <dsal> shapr: I've seen that a few ways…  I'm using nix right now.  Things seem a little fragile lately.
[04:44:43] <shapr> yeah, I've had different problems with haskell.nix
[04:45:02] <shapr> on first run it says "cannot bootstrap GHC on this architecture" then it only segfaults
[04:45:27] <dsal> Gotta start at lts-18.18 or so.
[04:46:43] <shapr> I'll try that, we're using 18.10
[04:47:34] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[04:47:36] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[04:47:50] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:48:04] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[04:48:11] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[04:49:46] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:51:48] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[05:01:14] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[05:01:33] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 256 seconds)
[05:02:47] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[05:02:48] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[05:03:47] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[05:03:50] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[05:08:21] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 256 seconds)
[05:08:39] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[05:12:14] <jollygood2> hmm, I just stack installed ghc-8.10.7, and I lost 4GB on my SSD drive, despite the fact that ghc-8.10.7 + ghc-8.10.7.tar.xz  only take 3GB. what happened to 1GB? base is the only package I use
[05:13:32] <maerwald[m]> stack has multiple sqlite databases and basically puts hackage into one
[05:13:52] *** Joins: otherwise (~otherwise@c-73-221-44-172.hsd1.wa.comcast.net)
[05:14:45] <jollygood2> where is that database located? in stack root directory?
[05:15:02] <maerwald[m]> Yeah
[05:15:18] <maerwald[m]> pantry
[05:15:43] <jollygood2> is it ok to just delete entire sr directory? :). I've experimented with various ghc versions over the years, and it accumulated a lot of crap I don't need
[05:16:07] <jollygood2> I'm guessing stack install will pull in everything in needs again
[05:16:16] <jollygood2> s/in/it
[05:16:44] <maerwald[m]> stack doesn't care about your disk space yeah, like nix and docker
[05:23:52] * shapr installs more drives in his laptop
[05:24:13] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[05:28:17] *** Joins: vicfred (~vicfred@user/vicfred)
[05:28:50] <otherwise> calcBmis' xs = [bmi w h | (w, h) <- xs]
[05:28:50] <otherwise>     where bmi foo bar = foo + bar
[05:28:51] <otherwise> so is foo and bar taking the place of w and h here?
[05:29:01] *** Quits: tito (tito@tilde.team) (Ping timeout: 240 seconds)
[05:29:33] <otherwise> and bmi must be bmi in the where binding, I dont get to rename that like I can rename w and h?
[05:30:27] *** Quits: sim590 (~simon@modemcable090.207-203-24.mc.videotron.ca) (Ping timeout: 256 seconds)
[05:30:30] *** Joins: tito (tito@tilde.team)
[05:30:37] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-214.elisa-laajakaista.fi) (Quit: Leaving.)
[05:30:52] <geekosaur> bmi is a locally defined function, whose parameters are foo and bar. in the call to bmi, you pass w and h as foo and bar
[05:36:21] *** Quits: yaroot (~yaroot@60.149.13.160.dy.iij4u.or.jp) (Remote host closed the connection)
[05:36:30] *** Joins: yaroot (~yaroot@60.149.13.160.dy.iij4u.or.jp)
[05:42:57] <jollygood2> weird argument names are probably the reason for confusion. also, that doesn't actually calculate bmi :P
[05:43:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:43:46] *** Joins: sim590 (~simon@modemcable090.207-203-24.mc.videotron.ca)
[05:44:41] <jollygood2> let bmi w h = w / h^2 in map (uncurry bmi) [(90, 1.80), (120, 1.80)]
[05:44:45] <jollygood2> > let bmi w h = w / h^2 in map (uncurry bmi) [(90, 1.80), (120, 1.80)]
[05:44:47] <lambdabot>  [27.777777777777775,37.03703703703704]
[05:46:17] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[05:49:50] *** Joins: slack1256 (~slack1256@181.42.53.226)
[05:50:05] *** Quits: tito (tito@tilde.team) (Ping timeout: 252 seconds)
[05:51:31] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[05:53:41] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[05:53:49] <slack1256> Is there any advice on how to organize the module structure for an executable instead of a libraries? I want to avoid import cycles between subsystems, but it is not clear on the current code who can import on who. This is on stack so no access to internal libraries.
[05:54:24] *** Joins: tito (tito@tilde.team)
[05:56:41] *** Quits: lragyrlmtdwnbo^ (~lragyrlmt@64.253.22.77) (Ping timeout: 252 seconds)
[05:56:58] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[05:57:24] *** Joins: lragyrlmtdwnbo^ (~lragyrlmt@64.253.22.77)
[05:58:31] <otherwise> good catch. thanks :)
[06:03:52] <otherwise> >fib 0 = [0];fib 1 = (fib 0) ++ [1]
[06:04:08] *** Quits: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk) (Remote host closed the connection)
[06:04:18] <otherwise> Prelude> fib 1
[06:04:19] <otherwise> *** Exception: <interactive>:6:1-22: Non-exhaustive patterns in function fib
[06:04:42] <otherwise> >[0]++[1]
[06:04:49] <otherwise> > [0]++[1]
[06:04:50] <lambdabot>  [0,1]
[06:05:12] <otherwise> > fib 0 = [0];fib 1 = (fib 0) ++ [1]
[06:05:13] <lambdabot>  <hint>:1:7: error: parse error on input ‘=’
[06:07:07] <otherwise> trying to generate list of fibonacci sequence, but haskell is not having it... doesn't like defining fib 0 to be list [0] then concatenating it with [1]. but it works fine when I do it with numbers instead of variables
[06:11:07] <g> otherwise: if you wrote those two definitions on separate lines in ghci , the second one *replaced* the first
[06:11:19] *** Joins: L29Ah (~L29Ah@wikipedia/L29Ah)
[06:14:20] *** Quits: bitmapper (uid464869@id-464869.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:14:58] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:18:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[06:23:16] *** Quits: xff0x (~xff0x@2001:1a81:52d0:e400:f16b:c82a:3197:1eaa) (Ping timeout: 268 seconds)
[06:24:35] *** Joins: xff0x (~xff0x@2001:1a81:5311:2b00:1f91:2f58:522f:165b)
[06:24:36] <otherwise> > let fibs = 1 : 1 : zipWith (*) fibs (tail fibs) in take 4 fibs
[06:24:37] <lambdabot>  [1,1,1,1]
[06:24:57] <otherwise> why all ones? why not [1,1,2,3]
[06:25:14] <int-e> > 1*1
[06:25:15] <lambdabot>  1
[06:25:29] <otherwise> haha
[06:25:30] <otherwise> oops
[06:25:59] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:26:12] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:26:18] <otherwise> yes that was all, thanks int-e
[06:28:02] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[06:28:02] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:28:03] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:28:47] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:28:48] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:29:24] <dsal> There should be a name for the sequence that's like fibonacci but all multiplied instead of added.
[06:29:53] <int-e> dsal: you basically just take the logarithm of each element
[06:30:33] <int-e> > let fibs' = 0 : 0 : zipWith (+) fibs' (tail fibs') in fibs'
[06:30:34] <lambdabot>  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0...
[06:30:35] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:30:36] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:30:45] <dsal> ziponacci numbers
[06:31:02] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:31:02] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:31:31] <int-e> dsal: (with a tiny twist if you have negative numbers, though that twist disappears when you switch to complex numbers)
[06:31:32] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[06:31:45] <int-e> > let fibs = 1 : 1 : zipWith (*) fibs (tail fibs) in take 
[06:31:47] <lambdabot>  error:
[06:31:47] <lambdabot>      • No instance for (Typeable a0)
[06:31:47] <lambdabot>          arising from a use of ‘show_M32698731503050283268’
[06:31:50] <int-e> arg
[06:32:03] <int-e> > let fibs = -1 : -1 : zipWith (*) fibs (tail fibs) in fibs 
[06:32:04] <lambdabot>  [-1,-1,1,-1,-1,1,-1,-1,1,-1,-1,1,-1,-1,1,-1,-1,1,-1,-1,1,-1,-1,1,-1,-1,1,-1,...
[06:32:17] <dsal> That one's neat.
[06:32:29] <dsal> > let fibs = -1 : -1 : zipWith (*) fibs (tail fibs) in sum fibs
[06:32:36] * dsal waits
[06:32:38] <lambdabot>  mueval.real: ExitFailure 1
[06:32:56] <jackdk> @botsnack poor lambdabot
[06:32:56] <lambdabot> :)
[06:33:08] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:33:09] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:33:31] <int-e> . o O ( Out of memory: Killed process 25666 )
[06:34:01] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:34:01] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:36:16] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[06:36:30] <otherwise> > let fibs = -1 : -1 : zipWith (*) fibs (tail fibs) in sum (take 5 fibs)
[06:36:31] <lambdabot>  -3
[06:37:10] <otherwise> > let fibs = -1 : -1 : zipWith (*) fibs (tail fibs) in sum (take 6 fibs)
[06:37:12] <lambdabot>  -2
[06:38:11] <int-e> > scanl (+) 0 (cycle [-1,-1,1])
[06:38:12] <lambdabot>  [0,-1,-2,-1,-2,-3,-2,-3,-4,-3,-4,-5,-4,-5,-6,-5,-6,-7,-6,-7,-8,-7,-8,-9,-8,-...
[06:38:35] <shapr> ha, I was just wishing for cabal to have a --keep-going flag, and it already DOES!
[06:39:24] <otherwise> merry christmas
[06:40:34] <shapr> yay
[06:40:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[06:42:21] <dsal> I need that for nix-shell.  It's failing to get me a shell with niv because something's broken.
[06:43:53] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:43:54] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:44:40] <jackdk> nix-shell -p niv just to get niv going? also nix-shell does have --keep-going
[06:45:01] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:45:02] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:45:07] <dsal> I wanted to update something that uses niv, but I can't make niv go.
[06:45:22] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:45:22] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:45:35] <jackdk> yeah I do this all the time. drop into a `nix-shell -p niv` with some niv from nixpkgs to get unstuck
[06:45:45] <jackdk> then you can `niv update` or whatever
[06:45:54] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:45:54] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[06:46:28] <dsal> I was trying to do it *before* I got the error this time.
[06:47:32] *** Quits: td_ (~td@94.134.91.61) (Ping timeout: 240 seconds)
[06:48:08] <jackdk> trying to do what?
[06:49:24] *** Joins: td_ (~td@muedsl-82-207-238-144.citykom.de)
[06:54:47] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[06:56:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:56:34] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:56:34] *** finn_elija is now known as FinnElija
[06:59:44] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[06:59:45] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[07:00:24] <dsal> Trying to do a niv update before I updated LTS stuff and pushed a repo and and had it fail in CI
[07:01:55] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[07:02:55] *** Quits: jespada (~jespada@87.74.33.157) (Ping timeout: 250 seconds)
[07:03:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:05:00] *** Joins: jespada (~jespada@87.74.33.157)
[07:05:26] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[07:05:27] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[07:06:14] *** Quits: hololeap (~hololeap@user/hololeap) (Quit: Bye)
[07:06:51] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[07:06:51] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[07:07:57] *** Quits: sim590 (~simon@modemcable090.207-203-24.mc.videotron.ca) (Ping timeout: 240 seconds)
[07:09:05] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:10:15] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[07:12:21] *** Joins: Guest|93 (~Guest|93@104.28.91.78)
[07:14:51] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[07:14:52] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[07:15:26] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 260 seconds)
[07:17:30] *** Quits: Guest|93 (~Guest|93@104.28.91.78) (Quit: Connection closed)
[07:18:51] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[07:19:07] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[07:20:55] *** Joins: sim590 (~simon@modemcable090.207-203-24.mc.videotron.ca)
[07:26:56] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[07:29:05] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 252 seconds)
[07:29:57] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[07:31:44] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[07:35:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[07:44:31] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[07:44:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:45:28] <otherwise> >1:1:zipWith (+) [1,1] [1]
[07:45:39] <otherwise> > 1:1:zipWith (+) [1,1] [1]
[07:45:40] <lambdabot>  [1,1,2]
[07:45:45] <otherwise> > 1:1:zipWith (+) [1,1,2] [1,2]
[07:45:46] <lambdabot>  [1,1,2,3]
[07:46:04] <otherwise> > 1:1:zipWith (+) [1,1,2,3] [1,2,3]
[07:46:05] <lambdabot>  [1,1,2,3,5]
[07:46:56] <otherwise> Is that basically the steps taken by the fib' function:
[07:46:56] <otherwise> fib = 1: 1: zipWith (+) fib (tail fib)
[07:47:24] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:47:24] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:47:24] *** Joins: wroathe (~wroathe@user/wroathe)
[07:47:37] <otherwise> what I don't get is why 1:1 works at all...
[07:47:38] *** Joins: vicfred (~vicfred@user/vicfred)
[07:47:39] <int-e> kind of; instead of [] for end-of-list you'll have a pending zipWith
[07:47:44] <otherwise> > 1: 1
[07:47:45] <lambdabot>  error:
[07:47:46] <lambdabot>      • No instance for (Num [Integer]) arising from a use of ‘e_111’
[07:47:48] <lambdabot>      • In the expression: e_111
[07:47:55] <otherwise> 1 : [1]
[07:47:58] <otherwise> > 1 : [1]
[07:48:02] <lambdabot>  [1,1]
[07:48:24] *** Joins: img (~img@user/img)
[07:48:52] <otherwise> oh I see, as you said int-e
[07:48:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[07:49:00] <dsal> > let fibby =  1 : 1 : zipWith f fibby (tail fibby) in fibby :: [Expr]
[07:49:01] <lambdabot>  [1,1,f 1 1,f 1 (f 1 1),f (f 1 1) (f 1 (f 1 1)),f (f 1 (f 1 1)) (f (f 1 1) (f...
[07:49:29] <int-e> let xs = 1:1:zipWith xs (tail xs) in xs = 1:1:let zs = zipWith (1:1:zs) (1:zs) in zs = 1:1:let zs = 2:zipWith (1:zs) zs = 1:1:2:let zs' = zipWith (1:2:zs') (2:zs') = ...
[07:49:33] *** Joins: slac52407 (~slack1256@181.42.47.208)
[07:50:03] <otherwise> > 1:1:[]
[07:50:05] <lambdabot>  [1,1]
[07:50:36] <int-e> otherwise: ^^that's a common way to express what happens as text, using `let` to give names to yet-to-be-evaluated parts.
[07:51:26] <int-e> one can also draw fancy diagrams with boxes for such thunks... there must be a blog post out there that does it for this example but I don't know how to search for one.
[07:52:07] *** Quits: slack1256 (~slack1256@181.42.53.226) (Ping timeout: 256 seconds)
[07:53:01] <int-e> > 1:1:undefined
[07:53:02] <lambdabot>  [1,1*Exception: Prelude.undefined
[07:53:29] *** Joins: mbuf (~Shakthi@122.174.194.123)
[07:53:36] <int-e> laziness at work: note that even though evaluating `undefined` is an error, the first two elements of the list can be accessed.
[07:57:49] <monochrom> The Gentle Introduction to Haskell has such a diagram.
[07:57:57] <monochrom> I think it helped no one.
[07:58:38] <int-e> . o O ( The "Gentle" Introduction to Haskell )
[07:58:43] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[07:59:11] <monochrom> The rest of the Gentle Introduction is actually fine.
[07:59:55] <monochrom> I believe that what works is the idea of successive approximation start from bottom.
[08:00:08] <int-e> > let fibby = 1 : 1 : zipWith (+) fibby (tail fibby) in fibby :: [Expr]
[08:00:09] <lambdabot>  [1,1,1 + 1,1 + (1 + 1),1 + 1 + (1 + (1 + 1)),1 + (1 + 1) + (1 + 1 + (1 + (1 ...
[08:00:19] <otherwise> > "Gentle" == "Easy"
[08:00:20] <lambdabot>  False
[08:00:21] <int-e> > let fibby = a : b : zipWith (+) fibby (tail fibby) in fibby
[08:00:23] <lambdabot>  [a,b,a + b,b + (a + b),a + b + (b + (a + b)),b + (a + b) + (a + b + (b + (a ...
[08:02:17] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[08:02:30] <int-e> monochrom: aka Boehmian Forests.
[08:02:32] <otherwise> int-e I see what you mean about haskell allowing for the undefined quality to the appending list
[08:04:35] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 256 seconds)
[08:04:50] <otherwise> int-e what is this [Expr] at the end of your fibby zipWith's? it does not evaluate in ghci
[08:04:58] <dsal> :t Expr
[08:04:59] <lambdabot> error:
[08:04:59] <lambdabot>     • Data constructor not in scope: Expr
[08:05:00] <lambdabot>     • Perhaps you meant variable ‘expr’ (imported from Debug.SimpleReflect)
[08:05:17] <dsal> It means a list of Expr values.
[08:05:36] <dsal> If you don't have that type, you can't reference it.
[08:06:29] <int-e> otherwise: it's a type with weird implementations for arithmetic operations (and some others) that capture a full expression rather than evaluating to a value
[08:06:53] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[08:07:05] <int-e> so 1 + 1, rather than evaluating to 2, becomes something like Op "+" (Lit 1) (Lit 1), and that will be shown as 1 + 1 later on:
[08:07:09] <int-e> > 1 + 1 :: Expr
[08:07:10] <lambdabot>  1 + 1
[08:07:33] <dsal> (It's not special -- you could write that yourself)
[08:07:52] <int-e> the code is in https://hackage.haskell.org/package/simple-reflect
[08:08:17] <int-e> but yeah, it's not *really* special, though it may feel that way if you're new to Haskell (and that's okay)
[08:09:19] <dsal> haskell has a lot of things that feel like magic if you're coming from... lesser languages.  as you learn, the magic fades.
[08:09:25] <int-e> :t reduced
[08:09:26] <lambdabot> error:
[08:09:26] <lambdabot>     • Variable not in scope: reduced
[08:09:27] <lambdabot>     • Perhaps you meant ‘reduce’ (imported from Debug.SimpleReflect)
[08:09:50] <int-e> :t Data.SimpleReflect.Expr.reduced
[08:09:51] <lambdabot> error:
[08:09:51] <lambdabot>     Not in scope: ‘Data.SimpleReflect.Expr.reduced’
[08:09:51] <lambdabot>     No module named ‘Data.SimpleReflect.Expr’ is imported.
[08:10:12] <int-e> @let import Data.SimpleReflect.Expr (reduced)
[08:10:12] <lambdabot>  /sandbox/tmp/.L.hs:120:1: error:
[08:10:12] <lambdabot>      Could not find module ‘Data.SimpleReflect.Expr’
[08:10:12] <lambdabot>      Perhaps you meant
[08:10:23] <int-e> @let import Debug.SimpleReflect.Expr (reduced)
[08:10:24] <lambdabot>  /sandbox/tmp/.L.hs:133:34: error:
[08:10:24] <lambdabot>      Module ‘Debug.SimpleReflect.Expr’ does not export ‘reduced’
[08:10:24] <lambdabot>      |
[08:10:30] <int-e> sigh.
[08:10:37] <int-e> @let import Debug.SimpleReflect.Expr (Expr (reduced))
[08:10:37] <lambdabot>  /sandbox/tmp/.L.hs:133:34: error:
[08:10:37] <lambdabot>      Module ‘Debug.SimpleReflect.Expr’ does not export ‘Expr(reduced)’
[08:10:37] <lambdabot>      |
[08:10:42] <int-e> I give up.
[08:11:15] <int-e> :t reduce
[08:11:16] <lambdabot> Expr -> Expr
[08:11:24] <int-e> pfft.
[08:11:46] <int-e> > iterate reduce (1 + 1 + 2 + 3 + 5)
[08:11:47] <lambdabot>  [1 + 1 + 2 + 3 + 5,2 + 2 + 3 + 5,4 + 3 + 5,7 + 5,12,12,12,12,12,12,12,12,12,...
[08:12:59] <int-e> > reduction (1 + 1 + 2 + 3 + 5)
[08:13:00] <lambdabot>  [1 + 1 + 2 + 3 + 5,2 + 2 + 3 + 5,4 + 3 + 5,7 + 5,12]
[08:13:05] <int-e> yay.
[08:13:54] <xerox> beautiful
[08:14:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:14:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[08:14:34] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[08:14:34] *** finn_elija is now known as FinnElija
[08:14:48] <int-e> I didn't know (or, at least, remember) that the package can do that.
[08:18:25] <xerox> I didn't either
[08:19:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:20:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[08:23:51] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[08:25:26] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 260 seconds)
[08:26:21] *** Quits: jollygood2 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC)
[08:30:10] <dsal> What is the largest model number accepted by MONAD?
[08:33:56] <bitmapper> i cannot figure out Arrows
[08:39:20] *** slac52407 is now known as slack1256
[08:45:10] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[08:45:10] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[08:45:10] *** finn_elija is now known as FinnElija
[08:46:10] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[08:48:12] *** Joins: KvL (~KvL@37.120.213.109)
[08:48:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[08:50:06] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:54:04] *** Quits: Sobhan (~Sobhan@modemcable039.128-131-66.mc.videotron.ca) (Quit: Client closed)
[09:00:42] *** Quits: KvL (~KvL@37.120.213.109) (Quit: KvL)
[09:02:21] *** Joins: alfonsox (~quassel@103.92.42.192)
[09:06:29] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[09:06:49] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[09:14:37] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::917a) (Ping timeout: 240 seconds)
[09:14:52] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[09:14:52] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[09:14:52] *** finn_elija is now known as FinnElija
[09:16:24] <Axman6> cccccckvtilvklniclblevinjtkdengurbfnuvhgugrh
[09:16:39] <Axman6> uh, please only use that code once, it is single use
[09:20:55] *** Joins: KvL (~KvL@37.120.213.109)
[09:25:03] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:28:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:30:44] <geekosaur> is that a code or keyboard vomit?
[09:31:49] <otherwise> it was for a couple bit coins, I already used it.
[09:31:51] <otherwise> ...
[09:33:20] <otherwise> j/k (probably goes without saying)
[09:35:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:35:51] <alfonsox> Is "stack build" command usage max core & max RAM ? I am trying to set up Yesod first time, it is trying to build x/178 (145/178 right now) for last15/20 minutes.
[09:37:05] <alfonsox> Or my machine is just slow in 2021, 10 year old desktop with i3 540 with 4GB 1333 hz RAM ?
[09:37:43] <geekosaur> 4gb and yesod gonna be slow
[09:40:33] <alfonsox> but RAM usage hovering around 1.3 GB of 4GB.
[09:41:38] <alfonsox> however all the 4 cores fluctuating between 20-80% usage range. 
[09:41:40] <geekosaur> I think most of the slowness in building yesod is *lots* of template haskell, actually
[09:42:07] *** Parts: elcaro (~anonymous@45.32.191.75) ()
[09:42:07] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:46:19] <alfonsox> hmm. Is there a way to configure it to not to do that ? Assuming as a newbie I am not going to use Template Haskell ?
[09:46:51] <geekosaur> it's not you that uses it. TH is generating code at compile time
[09:47:31] <geekosaur> and it needs that code
[09:49:06] <alfonsox> okay. Build completed but took good 20-30 minutes.
[09:50:00] <alfonsox> I hope it does not do that everytime I need to build the project.
[09:51:24] *** Joins: jinsun__ (~quassel@user/jinsun)
[09:53:07] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::917a)
[09:53:17] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[09:59:57] *** Quits: KvL (~KvL@37.120.213.109) (Ping timeout: 240 seconds)
[10:01:43] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:01:43] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[10:01:43] *** Joins: wroathe (~wroathe@user/wroathe)
[10:04:15] *** Joins: notzmv (~zmv@user/notzmv)
[10:06:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:08:57] *** Quits: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com) (Ping timeout: 240 seconds)
[10:12:26] *** Joins: KvL (~KvL@37.120.213.108)
[10:12:41] *** Quits: retro_ (~retro@05412d78.skybroadband.com) (Read error: Connection reset by peer)
[10:13:10] *** Quits: KvL (~KvL@37.120.213.108) (Client Quit)
[10:21:07] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[10:21:08] *** Joins: retroid_ (~retro@05412d78.skybroadband.com)
[10:22:38] *** Joins: sagax (~sagax_nb@user/sagax)
[10:23:48] *** Quits: arahael (~arahael@203.158.51.1) (Quit: WeeChat 3.1)
[10:33:20] *** Quits: mbuf (~Shakthi@122.174.194.123) (Quit: Leaving)
[10:33:54] *** Quits: goepsilongo (~goepsilon@2806:263:c404:8000:f42f:2a6e:3c81:2519) (Quit: Textual IRC Client: www.textualapp.com)
[10:35:31] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[10:44:21] *** Quits: lragyrlmtdwnbo^ (~lragyrlmt@64.253.22.77) (Remote host closed the connection)
[10:44:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:46:57] *** Quits: chozorho (~chozorho@2601:146:300:c30::9401) (Quit: WeeChat 3.0)
[10:47:36] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[10:54:52] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[10:57:24] *** Quits: benin (~benin@183.82.27.57) (Ping timeout: 240 seconds)
[10:58:33] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[10:58:33] *** Quits: gentauro (~gentauro@user/gentauro) (Read error: Connection reset by peer)
[10:59:07] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 256 seconds)
[10:59:58] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:02:02] *** Quits: kaph_ (~kaph@net-2-45-51-147.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[11:04:10] *** Joins: gentauro (~gentauro@user/gentauro)
[11:04:37] *** Joins: benin (~benin@183.82.27.57)
[11:05:21] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[11:05:40] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[11:06:13] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[11:06:41] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:09:03] *** Joins: coolnickname (uid531864@user/coolnickname)
[11:10:27] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:17:01] *** Joins: jonathanx (~jonathan@c-5eea3459-74736162.cust.telenor.se)
[11:19:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[11:25:20] *** Quits: phma (phma@2001:5b0:211b:ad08:e5d3:c318:2701:f71f) (Read error: Connection reset by peer)
[11:25:23] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:26:40] *** Joins: phma (phma@2001:5b0:211c:1148:9e4d:7400:733a:b6f1)
[11:27:27] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Ping timeout: 256 seconds)
[11:28:04] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:30:20] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[11:32:10] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Read error: Connection reset by peer)
[11:32:28] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[11:45:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:46:00] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[11:50:55] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[11:50:56] *** Joins: aliosablack (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[11:54:11] *** Joins: toastloop (toastloop@user/toastloop)
[12:03:31] <otherwise> Is Kotlin much different than haskell?
[12:07:11] <dsal> I can't imagine how they're related.
[12:09:53] *** Joins: KvL (~KvL@178.239.165.192)
[12:12:55] *** Quits: toastloop (toastloop@user/toastloop) (Ping timeout: 268 seconds)
[12:13:39] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4) (Remote host closed the connection)
[12:16:23] *** Joins: gensyst (gensyst@user/gensyst)
[12:16:57] *** Quits: jonathanx (~jonathan@c-5eea3459-74736162.cust.telenor.se) (Ping timeout: 240 seconds)
[12:17:06] <gensyst> I run GHCi for my project with "cabal repl exe:project-exe". This compiles the library and gets me into a repl where I can experiment with changes to Main.hs.
[12:17:38] <gensyst> However how do I recompile the *library* from GHCi, if I make changes to the library? The only way I know is of quitting GHCi and relaunching it.
[12:17:46] <gensyst> Any other ways from within GHCi itself?
[12:19:09] *** Joins: acidjnk (~acidjnk@p200300d0c7271e5539f4c4c5e28366d0.dip0.t-ipconnect.de)
[12:20:29] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[12:21:21] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:25:24] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[12:26:52] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[12:28:04] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[12:28:04] *** Quits: aliosablack (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[12:28:35] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[12:30:06] *** Quits: meatfeather[m] (~meatfeath@2001:470:69fc:105::1:3311) (Quit: You have been kicked for being idle)
[12:31:22] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[12:32:11] *** Quits: slack1256 (~slack1256@181.42.47.208) (Remote host closed the connection)
[12:32:31] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-52.elisa-laajakaista.fi)
[12:32:34] <otherwise> I thought Kotlin is a functional programing language, but i'm not sure the diversity among functional languages. hence wondering how similar they are.
[12:33:34] *** Quits: KvL (~KvL@178.239.165.192) (Quit: KvL)
[12:33:56] *** Joins: KvL (~KvL@178.239.165.192)
[12:34:12] *** Quits: KvL (~KvL@178.239.165.192) (Client Quit)
[12:35:47] <merijn> gensyst: The library your executable depends on, you mean?
[12:36:15] <merijn> otherwise: I don't think Kotlin is remotely functional in the sense that anyone *here* would interpret that term, tbh
[12:36:21] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 268 seconds)
[12:36:40] <merijn> AFAIK the "functional part" of Kotlin is just "hey guys, we made lambdas and first class functions slightly less sucky than in Java!"
[12:37:09] *** Joins: KvL (~KvL@178.239.165.192)
[12:40:05] <otherwise> I see. Just because you write "tesla" on the side of your electric golf cart, doesnt make it a tesla. Something like that.
[12:40:32] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[12:43:18] <gensyst> merijn, yeah
[12:43:32] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[12:43:34] <merijn> gensyst: The short answer is (for now): You can't
[12:44:19] <merijn> gensyst: ghci can only load 1 "component" at a time (library, exe, etc.) it's a fundamental ghci limitation. I recall there was someone working on lifting it, but that's Work-in-Progress afaik
[12:44:43] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[12:44:52] <gensyst> merijn, ok thanks for the info!
[12:45:42] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[12:45:43] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[12:46:24] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[12:46:24] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[12:46:25] *** Quits: KvL (~KvL@178.239.165.192) (Quit: KvL)
[12:46:45] *** Joins: KvL (~KvL@178.239.165.192)
[12:47:01] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[12:47:24] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[12:47:49] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[12:48:07] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[12:48:17] <int-e> glguy: Thanks for demystifying today's circuits :)
[12:48:56] *** AlexNoo_ is now known as AlexNoo
[12:55:57] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[13:02:08] *** Quits: darchitect (~darchitec@2a00:23c6:3584:df00:7dec:bf13:8fa:748c) (Quit: WeeChat 3.3)
[13:03:49] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[13:06:36] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[13:07:50] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[13:08:37] *** Quits: deech` (~user@024-217-244-075.res.spectrum.com) (Ping timeout: 240 seconds)
[13:10:55] *** Quits: KvL (~KvL@178.239.165.192) (Quit: KvL)
[13:11:40] *** Joins: deech` (~user@024-217-244-075.res.spectrum.com)
[13:14:03] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363)
[13:14:33] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 256 seconds)
[13:16:01] *** Quits: Axman6 (~Axman6@user/axman6) (Remote host closed the connection)
[13:16:18] *** Joins: Axman6 (~Axman6@user/axman6)
[13:20:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363) (Ping timeout: 240 seconds)
[13:22:39] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[13:31:21] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[13:32:44] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[13:33:15] *** Quits: foul_owl (~kerry@94.140.8.107) (Ping timeout: 256 seconds)
[13:35:28] *** Joins: cosimone (~user@93-47-231-248.ip115.fastwebnet.it)
[13:35:40] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:37:57] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 240 seconds)
[13:38:38] *** Joins: foul_owl (~kerry@97-126-11-68.tukw.qwest.net)
[13:38:59] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[13:50:40] *** Joins: jinsun (~quassel@user/jinsun)
[13:52:05] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:52:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:52:37] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[13:52:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[13:54:52] *** Lord_of_Life_ is now known as Lord_of_Life
[13:58:23] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[13:59:41] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:00:20] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[14:03:45] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:05:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:06:02] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[14:07:56] *** Joins: Bartol (~Bartol@user/Bartol)
[14:09:31] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[14:10:02] *** Quits: acidjnk (~acidjnk@p200300d0c7271e5539f4c4c5e28366d0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:13:38] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[14:17:25] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[14:17:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[14:17:25] *** finn_elija is now known as FinnElija
[14:18:03] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[14:24:21] *** Quits: Axman6 (~Axman6@user/axman6) (Remote host closed the connection)
[14:26:08] *** Joins: __monty__ (~toonn@user/toonn)
[14:36:54] *** Joins: Axman6 (~Axman6@user/axman6)
[14:38:47] *** Joins: neceve (~quassel@2.26.93.228)
[14:38:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:39:22] *** Joins: xkuru (~xkuru@user/xkuru)
[14:39:39] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[14:45:06] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:47:01] *** Quits: gensyst (gensyst@user/gensyst) (Quit: Leaving)
[14:48:54] *** Joins: kadir (~kadir@88.251.54.120)
[14:49:57] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[14:52:32] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[15:01:37] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::917a) (Ping timeout: 240 seconds)
[15:09:36] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[15:09:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:30] *** Joins: arahael (~arahael@203.158.51.1)
[15:11:51] *** Quits: foul_owl (~kerry@97-126-11-68.tukw.qwest.net) (Ping timeout: 256 seconds)
[15:14:14] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 260 seconds)
[15:14:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:15:33] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[15:15:35] *** Joins: jakalx (~jakalx@base.jakalx.net)
[15:18:07] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[15:19:25] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[15:19:49] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[15:22:37] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[15:25:28] *** Joins: syrkis (~syrkis@109.59.170.168.mobile.3.dk)
[15:25:46] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[15:27:07] *** Joins: Guest24 (~Guest24@81.106.113.17)
[15:27:16] *** Joins: foul_owl (~kerry@94.140.8.107)
[15:28:00] *** Quits: Guest24 (~Guest24@81.106.113.17) (Client Quit)
[15:28:24] *** Quits: sim590 (~simon@modemcable090.207-203-24.mc.videotron.ca) (Ping timeout: 268 seconds)
[15:31:17] *** Quits: otherwise (~otherwise@c-73-221-44-172.hsd1.wa.comcast.net) (Quit: Connection closed)
[15:33:04] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:e182:9e47:91db:c531)
[15:33:37] *** Quits: xff0x (~xff0x@2001:1a81:5311:2b00:1f91:2f58:522f:165b) (Ping timeout: 240 seconds)
[15:34:25] *** Joins: KvL (~KvL@178.239.165.194)
[15:34:47] *** Joins: xff0x (~xff0x@2001:1a81:5311:2b00:585:576e:a672:6acd)
[15:35:12] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 268 seconds)
[15:41:26] *** Quits: jespada (~jespada@87.74.33.157) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:41:57] *** Joins: jespada (~jespada@87.74.33.157)
[15:45:35] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Quit: Leaving)
[15:46:22] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[15:46:56] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[15:47:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:48:38] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[15:50:35] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[15:51:17] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Ping timeout: 240 seconds)
[15:51:17] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[15:52:52] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:2421:137f:dee3:7f7d)
[15:53:50] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:54:59] *** Joins: cheater (~Username@user/cheater)
[15:55:01] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:e182:9e47:91db:c531) (Ping timeout: 240 seconds)
[15:55:41] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[16:00:16] *** Quits: Digit (~user@user/digit) (Remote host closed the connection)
[16:02:14] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[16:03:57] *** Quits: xff0x (~xff0x@2001:1a81:5311:2b00:585:576e:a672:6acd) (Ping timeout: 240 seconds)
[16:04:59] *** Joins: xff0x (~xff0x@2001:1a81:5311:2b00:3477:5c7:6546:864b)
[16:05:59] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[16:14:29] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:17:47] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[16:19:42] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[16:20:08] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[16:20:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[16:23:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[16:23:44] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[16:27:36] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 268 seconds)
[16:27:47] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Ping timeout: 256 seconds)
[16:29:34] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[16:31:25] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[16:32:24] *** Quits: KvL (~KvL@178.239.165.194) (Quit: KvL)
[16:32:37] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Ping timeout: 240 seconds)
[16:35:38] *** Quits: syrkis (~syrkis@109.59.170.168.mobile.3.dk) (Quit: Ping timeout (120 seconds))
[16:38:34] *** Joins: Vajb (~Vajb@2001:999:62:e042:be01:afcc:85c5:1e46)
[16:42:26] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:45:29] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[16:46:11] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:2421:137f:dee3:7f7d) (Ping timeout: 245 seconds)
[16:47:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:47:58] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[16:48:11] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:2421:137f:dee3:7f7d)
[16:52:32] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[16:53:17] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 256 seconds)
[16:57:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[16:58:12] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[16:59:37] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[17:02:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[17:05:20] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[17:06:51] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[17:07:28] *** Quits: jespada (~jespada@87.74.33.157) (Quit: Textual IRC Client: www.textualapp.com)
[17:12:57] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363)
[17:15:13] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:22:46] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[17:23:19] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[17:23:41] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[17:26:12] *** Quits: OscarZ (~oscarz@95.175.104.235) (Read error: Connection reset by peer)
[17:30:24] *** Joins: timCF (~timCF@m91-129-100-224.cust.tele2.ee)
[17:31:30] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[17:31:51] <timCF> Hello! Did anybody experienced error "We cannot know what roles the parameters to 'a' have" when trying to implement some generic function? In my example all type parameters are phantom, but I don't know how to say it to GHC https://gist.github.com/21it/c6b510261c34a36b6329c11c17ce3833
[17:39:34] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[17:44:21] *** Joins: sim590 (~simon@modemcable157.243-56-74.mc.videotron.ca)
[17:44:59] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363) (Remote host closed the connection)
[17:46:12] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[17:47:21] *** Joins: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[17:48:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:53:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[17:53:22] *** Joins: kaph (~kaph@net-2-45-51-147.cust.vodafonedsl.it)
[18:00:22] *** Joins: syrkis (~syrkis@109.59.170.168.mobile.3.dk)
[18:03:20] <juri_> grr. hspec has changed it's presentation form for floats... to display them in rational form.
[18:03:50] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363)
[18:04:12] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:04:14] <int-e> > toRational 0.1
[18:04:15] <lambdabot>  3602879701896397 % 36028797018963968
[18:04:25] <int-e> fun :-/
[18:04:30] <timCF> whuut
[18:04:41] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[18:04:59] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[18:05:17] <juri_> that's double painful when you're dealing in projective geometry, and writing unit tests based on the output of Hspec.
[18:06:26] <geekosaur> timCF, I'm no expert on what you're doing, but I think ghc's error message is exact: there is no way to specify that you know the roles will always be phantom, which is why ghc is forced to assume nominal for safety
[18:06:31] <juri_> tl;dr: each value of mine is effectively in something that looks like three radians. representing that in three rational bases makes reading values and converting into "i think that's the right direction" nigh impossible.
[18:06:35] <geekosaur> you may be forced to use unsafeCoerce
[18:07:42] <geekosaur> and add a comment as to why, ideally
[18:08:20] *** Joins: jonathanx (~jonathan@c-5eea3459-74736162.cust.telenor.se)
[18:09:05] <int-e> -- I fasted for three days, sacrificed a goat, and consulted the oracle, and all omens were in favor of this use of `unsafeCoerce`
[18:09:47] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[18:10:20] <juri_> oracle consulting fees are a big deal.
[18:11:04] <timCF> geekosaur: seems like I was able to brute force it and solved with `Coercible (a 'UnRounded) (a 'Rounded)` additional constraint
[18:11:35] <geekosaur> interesting
[18:15:11] *** Quits: syrkis (~syrkis@109.59.170.168.mobile.3.dk) (Quit: Client closed)
[18:17:01] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[18:20:06] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[18:21:32] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 240 seconds)
[18:22:19] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[18:23:47] *** Joins: cheater (~Username@user/cheater)
[18:28:44] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[18:29:37] *** Quits: jonathanx (~jonathan@c-5eea3459-74736162.cust.telenor.se) (Ping timeout: 256 seconds)
[18:29:44] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[18:32:06] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Remote host closed the connection)
[18:32:22] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[18:33:40] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:33:41] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[18:34:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:34:28] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:34:28] *** Joins: wroathe (~wroathe@user/wroathe)
[18:36:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[18:36:56] *** Joins: cheater (~Username@user/cheater)
[18:38:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[18:38:41] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[18:39:21] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[18:49:50] *** Joins: Achylles (~Achylles_@2804:431:d725:86fc:abf6:fa73:2a9e:707b)
[18:49:52] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[18:51:27] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:52:18] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[18:52:32] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 268 seconds)
[18:54:23] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 252 seconds)
[18:57:03] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[19:01:20] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:01:21] *** Joins: benin4 (~benin@183.82.27.57)
[19:02:13] *** Quits: benin (~benin@183.82.27.57) (Ping timeout: 240 seconds)
[19:02:13] *** benin4 is now known as benin
[19:06:05] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[19:08:47] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[19:09:23] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[19:10:46] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 245 seconds)
[19:17:45] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:22:46] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[19:23:04] *** Joins: Everything (~Everythin@37.115.210.35)
[19:27:23] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 250 seconds)
[19:27:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:29:53] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363) (Remote host closed the connection)
[19:30:38] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[19:32:57] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[19:36:37] *** Joins: goepsilongo (~goepsilon@2806:263:c404:8000:1841:9986:6b2b:10e6)
[19:37:17] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363)
[19:40:25] *** Joins: jeetelongname (~jeet@88.111.159.26)
[19:40:47] *** Quits: cosimone (~user@93-47-231-248.ip115.fastwebnet.it) (Remote host closed the connection)
[19:41:01] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 256 seconds)
[19:43:05] *** Joins: cosimone (~user@93-47-231-248.ip115.fastwebnet.it)
[19:44:23] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:45:13] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:45:46] *** Quits: cosimone (~user@93-47-231-248.ip115.fastwebnet.it) (Remote host closed the connection)
[19:46:11] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[19:48:01] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[19:55:04] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[19:55:29] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:03:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:04:30] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[20:05:46] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[20:05:55] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[20:09:00] *** Quits: sus (zero@user/zeromomentum) (Quit: Ping timeout (120 seconds))
[20:09:43] *** Joins: sus (~zeromomen@user/zeromomentum)
[20:11:31] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:12:17] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[20:16:57] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[20:21:33] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Remote host closed the connection)
[20:24:37] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[20:29:16] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[20:29:37] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 240 seconds)
[20:29:56] *** Quits: puke (~puke@user/puke) (Quit: puke)
[20:31:10] *** Joins: max22- (~maxime@2a01cb08833598008b3c03f8a6bde97c.ipv6.abo.wanadoo.fr)
[20:32:25] *** Quits: wrengr (~wrengr@150.12.83.34.bc.googleusercontent.com) (Ping timeout: 268 seconds)
[20:36:07] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[20:36:11] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[20:36:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:36:48] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[20:37:10] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[20:37:45] *** Joins: econo (uid147250@user/econo)
[20:37:55] *** Joins: wrengr (~wrengr@150.12.83.34.bc.googleusercontent.com)
[20:38:20] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[20:40:32] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::917a)
[20:41:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:42:54] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 268 seconds)
[20:47:03] *** Quits: turlando (~turlando@user/turlando) (Quit: No Ping reply in 180 seconds.)
[20:48:26] *** Joins: turlando (~turlando@user/turlando)
[20:48:31] *** Quits: bitmapper (uid464869@id-464869.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:52:26] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[20:55:12] *** Quits: alfonsox (~quassel@103.92.42.192) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:56:21] <[itchyjunk]> Is there a place where there are just problem sets? possibly sorted by topics?
[20:57:51] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[20:59:29] *** Quits: Achylles (~Achylles_@2804:431:d725:86fc:abf6:fa73:2a9e:707b) (Remote host closed the connection)
[21:00:24] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:00:40] *** Joins: puke (~puke@user/puke)
[21:01:08] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[21:03:08] *** Quits: deech` (~user@024-217-244-075.res.spectrum.com) (Read error: Connection reset by peer)
[21:03:21] *** Joins: deech` (~user@024-217-244-075.res.spectrum.com)
[21:03:40] *** Joins: vysn (~vysn@user/vysn)
[21:06:27] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[21:08:59] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[21:09:19] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[21:09:25] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 268 seconds)
[21:10:19] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[21:11:17] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[21:12:37] *** Joins: rito_ (~rito_gh@45.112.243.69)
[21:15:29] *** Joins: lechner (~lechner@debian/lechner)
[21:19:39] <monochrom> I don't know how seriously I should take "just". Consider the https://wiki.haskell.org/H-99:_Ninety-Nine_Haskell_Problems and open.kattis.com
[21:20:23] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[21:21:25] *** Joins: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk)
[21:22:19] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Quit: Leaving)
[21:22:42] *** Joins: zaquest (~notzaques@5.130.79.72)
[21:26:30] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[21:28:57] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[21:35:27] *** Joins: Sgeo (~Sgeo@user/sgeo)
[21:35:56] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 268 seconds)
[21:39:07] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:43:33] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:47:45] *** Joins: xkuru (~xkuru@user/xkuru)
[21:48:38] *** Joins: otherwise (~otherwise@c-73-221-44-172.hsd1.wa.comcast.net)
[21:50:04] *** Joins: Akiva (~Akiva@user/Akiva)
[21:50:10] *** Joins: otherwis_ (~otherwise@c-73-221-44-172.hsd1.wa.comcast.net)
[21:53:19] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[21:54:58] <otherwis_> > reverse "amanap lanac a nalp a nam a"
[21:55:00] <lambdabot>  "a man a plan a canal panama"
[21:55:13] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:00:03] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363) (Remote host closed the connection)
[22:00:35] *** Joins: shapr (~user@pool-108-28-144-11.washdc.fios.verizon.net)
[22:02:26] *** Joins: n3rdy1 (~n3rdy1@2601:281:c780:a510:c82b:6078:8c93:1082)
[22:07:45] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:08:22] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[22:08:25] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:11:02] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:11:49] *** Quits: coolnickname (uid531864@user/coolnickname) (Quit: Connection closed for inactivity)
[22:15:15] *** Quits: otherwise (~otherwise@c-73-221-44-172.hsd1.wa.comcast.net) (Quit: Connection closed)
[22:18:03] *** Joins: deech`` (~user@024-217-244-075.res.spectrum.com)
[22:18:29] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 268 seconds)
[22:19:32] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:20:20] *** Quits: deech` (~user@024-217-244-075.res.spectrum.com) (Ping timeout: 268 seconds)
[22:20:28] *** Joins: dsrt^ (~dsrt@207.5.54.6)
[22:31:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:34:29] *** Parts: kadir (~kadir@88.251.54.120) (goodnight)
[22:36:18] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[22:37:04] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[22:37:35] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[22:38:37] *** Joins: coolnickname (uid531864@user/coolnickname)
[22:39:29] *** otherwis_ is now known as rumpled_pigeon
[22:42:21] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Ping timeout: 256 seconds)
[22:42:58] <rumpled_pigeon> any hints on how to set prompt via a command in .hs file? so that when loading the file in ghci the prompt updates to the chosen text?
[22:45:26] <g> [itchyjunk]: adventofcode.com has a bunch of problems (not sorted by topic) starting easy each year and getting more involved
[22:46:14] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[22:47:16] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:49:46] *** Quits: rito_ (~rito_gh@45.112.243.69) (Quit: Leaving)
[22:52:05] <lyxia> https://www.spoj.com/problems/classical/
[22:52:05] <sm> rumpled_pigeon: interesting puzzle
[22:52:34] <sm> rumpled_pigeon: you could use a shebang line that runs ghci
[22:52:59] <sm> I think that's the only way
[22:57:15] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363)
[22:58:37] *** Quits: yaroot (~yaroot@60.149.13.160.dy.iij4u.or.jp) (Ping timeout: 240 seconds)
[22:58:46] *** Joins: yaroot (~yaroot@60.149.13.160.dy.iij4u.or.jp)
[22:58:57] * geekosaur wonders if %call would work here
[22:59:02] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[22:59:56] <geekosaur> kinda doing it backwards
[23:01:54] *** Quits: Vajb (~Vajb@2001:999:62:e042:be01:afcc:85c5:1e46) (Read error: Connection reset by peer)
[23:02:21] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[23:06:33] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 276 seconds)
[23:08:09] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8415:925f:506a:a363) (Remote host closed the connection)
[23:08:13] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[23:10:33] *** Quits: sus (~zeromomen@user/zeromomentum) (Quit: Ping timeout (120 seconds))
[23:11:46] *** Joins: sus (zero@user/zeromomentum)
[23:17:21] *** Joins: IgnatInsarov[m] (~kindaroma@2001:470:69fc:105::f5d9)
[23:18:40] <geekosaur> mm, actually I think neither will work. shelling out to ghci would affect that ghci and not the running one; there's no way to pass something like the current file name to %call
[23:21:38] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:24:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[23:25:02] *** Joins: zmt00 (~zmt00@user/zmt00)
[23:25:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Remote host closed the connection)
[23:25:57] *** Joins: zmt00 (~zmt00@user/zmt00)
[23:26:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[23:27:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[23:27:33] *** Quits: xff0x (~xff0x@2001:1a81:5311:2b00:3477:5c7:6546:864b) (Ping timeout: 268 seconds)
[23:28:14] *** Joins: xff0x (~xff0x@2001:1a81:5311:2b00:3f8f:ed06:c623:ab7c)
[23:29:23] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 252 seconds)
[23:34:52] *** Joins: machinedgod (~machinedg@24.105.81.50)
[23:35:03] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:35:46] *** Quits: johnw (~johnw@2607:f6f0:3004:1:c8b4:50ff:fef8:6bf0) (Quit: ZNC - http://znc.in)
[23:36:03] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:5c9e:b916:30fd:4234)
[23:37:22] *** Joins: juhp (~juhp@128.106.188.82)
[23:37:53] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 256 seconds)
[23:38:40] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[23:43:15] <rumpled_pigeon> sm LimeChat isn't notifying me, didnt see your response till just now
[23:43:57] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:44:11] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[23:46:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[23:50:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[23:51:00] *** Quits: max22- (~maxime@2a01cb08833598008b3c03f8a6bde97c.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[23:51:10] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[23:52:15] *** Joins: zmt00 (~zmt00@user/zmt00)
[23:52:17] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[23:52:44] *** Quits: benin (~benin@183.82.27.57) (Quit: The Lounge - https://thelounge.chat)
[23:54:07] *** Joins: pavonia (~user@user/siracusa)
[23:54:39] *** Joins: deadmarshal (~deadmarsh@95.38.117.158)
[23:55:27] *** Joins: lagash (lagash@lagash.shelltalk.net)
[23:56:02] <energizer> "`list int` is a subtype of `list numberlike`" is called covariance, yes? is there a name for "`list int` is a subtype of `containerlike int`"?
[23:56:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[23:57:07] <sm> geekosaur: won't a shebang line, eg as in a stack script, load the current file in ghci; and as options to the command you can run ghci commands ?
[23:57:36] <energizer> really i'm just looking for some search terms for reading
[23:57:53] <geekosaur> hm. I guess, but then you can't load a different file in the same session, you have to exit the session
[23:58:53] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[23:58:53] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[23:59:25] *** Quits: deadmarshal (~deadmarsh@95.38.117.158) (Ping timeout: 256 seconds)
