[00:02:30] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[00:21:20] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[00:31:26] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[00:58:41] *** Quits: TheAthlete (~TheAthlet@176.96.230.74) (Quit: Connection closed)
[01:03:39] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[01:08:09] *** Joins: monkey_ (~user@181.114.17.106)
[01:18:47] *** Joins: lichtkind__ (~lichtkind@p200300d0a722726b5403a1a5fbea63c0.dip0.t-ipconnect.de)
[01:21:17] *** Quits: lichtkind_ (~lichtkind@p200300d0a72272f95403a1a5fbea63c0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[01:35:36] *** Quits: sftp (~sftp@79.174.36.182) (Quit: leaving)
[01:35:51] *** Joins: sftp (~sftp@79.174.36.182)
[01:48:15] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[01:58:58] *** Quits: sftp (~sftp@79.174.36.182) (Quit: leaving)
[02:00:11] *** Joins: sftp (~sftp@79.174.36.182)
[02:07:07] *** Quits: sftp (~sftp@79.174.36.182) (Ping timeout: 256 seconds)
[02:27:01] *** Joins: sftp (~sftp@79.174.36.182)
[02:37:43] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[02:37:53] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:39:57] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[02:40:41] *** Quits: monkey_ (~user@181.114.17.106) (Remote host closed the connection)
[02:48:31] <[Coke]> wish there was a way to say "I never want a Seq"
[02:49:08] <[Coke]> I find it painful to get caught by the "Iterator already consumed" when I never wanted iterators in the first place.
[02:54:36] <[Coke]> (found it, had an array of arrays that turned into an array of Seq after I used a map. 
[02:56:04] <moon-child> I definitely feel tha5t
[02:56:07] <moon-child> maybe a dynamic variable?
[02:56:20] <moon-child> $*MONKEY-HIDE-NO-SEQ
[03:13:07] <lizmat> [Coke]: the alternative would be that all Seq would be hidden (and cached) in a List
[03:13:32] <lizmat> which would be a serious performance issue
[03:13:35] <lizmat> afk&
[03:15:24] <moon-child> yeah for performance-sensitive code you wouldn't want it, but for quick scripts it could be convenient
[03:16:49] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[03:19:00] *** Quits: lichtkind__ (~lichtkind@p200300d0a722726b5403a1a5fbea63c0.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:19:01] <discord-raku-bot> <Nemokosch#9980> I feel you, although I think there are good practices to help
[03:20:28] <discord-raku-bot> <Nemokosch#9980> and I'm not 100% sure but I think the @ sigil does give you an array
[03:37:31] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:37:47] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 256 seconds)
[03:47:08] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[03:55:16] *** Quits: getimiskon (~getimisko@athedsl-4406825.home.otenet.gr) (Quit: Lost terminal)
[04:55:16] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:55:16] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:16] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:16] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:17] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:17] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:17] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:17] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:17] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:17] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:17] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:17] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:55:17] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[04:55:17] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[04:55:17] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[04:55:17] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[04:55:17] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[04:55:17] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[04:55:47] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[04:56:20] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[04:56:29] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[04:56:30] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[04:56:48] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[04:56:49] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[04:57:14] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[04:57:14] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[04:57:19] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[04:57:29] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[04:57:40] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[04:57:48] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[05:16:59] *** Quits: bdju (~bard@user/bdju) (Ping timeout: 250 seconds)
[05:34:14] *** Joins: bdju (~bard@user/bdju)
[05:38:55] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[05:56:13] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[05:56:19] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[05:56:28] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[06:20:15] *** Quits: ecocode__ (sid500572@id-500572.lymington.irccloud.com) (Ping timeout: 264 seconds)
[06:21:06] *** Joins: ecocode__ (sid500572@id-500572.lymington.irccloud.com)
[06:27:01] *** Quits: mjgardner (sid182628@id-182628.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[06:28:01] *** Joins: mjgardner (sid182628@id-182628.ilkley.irccloud.com)
[06:57:13] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[06:58:00] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[07:16:02] *** Joins: frost (~frost@user/frost)
[07:49:02] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[07:56:22] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[08:56:23] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:56:23] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:56:23] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:56:23] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:56:23] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:56:23] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:56:23] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:56:23] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:56:23] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:56:23] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:56:23] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:56:23] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:56:23] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:56:23] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:56:23] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:56:23] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:56:23] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:56:23] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:56:23] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:57:19] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[08:57:36] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[08:58:29] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[08:58:37] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[09:39:11] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:56:59] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[09:57:11] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[09:57:28] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[09:57:55] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:58:02] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:59:25] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:59:29] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[09:59:33] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[10:57:43] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:57:55] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[10:58:01] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[10:58:10] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[10:58:15] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[10:58:37] *** Joins: seednode (~seednode@user/seednode)
[10:59:40] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[11:57:45] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[12:26:05] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:26:06] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[13:26:06] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[13:26:06] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[13:26:06] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[13:26:06] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[13:26:06] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[13:26:06] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:26:06] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[13:26:19] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[13:26:38] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[13:26:39] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[13:27:03] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[13:27:08] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[13:27:12] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[13:27:55] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[13:28:04] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[13:28:09] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[13:29:00] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[14:27:02] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[14:27:52] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[14:28:25] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[14:40:05] *** Joins: lichtkind__ (~lichtkind@p200300d0a722726b5403a1a5fbea63c0.dip0.t-ipconnect.de)
[14:56:42] *** Joins: MoC (~moc@user/moc)
[15:02:13] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Ping timeout: 256 seconds)
[15:02:51] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[15:07:41] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[15:16:09] *** Joins: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[15:27:02] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:27:39] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[15:28:35] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[15:33:51] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[15:37:33] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:39:12] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:26:26] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[16:27:22] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[16:27:23] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[17:03:57] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 240 seconds)
[17:07:17] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[17:11:30] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[17:11:41] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[17:15:53] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[17:16:00] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[17:27:26] *** Quits: frost (~frost@user/frost) (Ping timeout: 245 seconds)
[17:39:40] *** Joins: monkey_ (~user@190.104.116.153)
[18:30:37] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 240 seconds)
[18:30:51] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 256 seconds)
[18:41:51] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[18:52:50] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[18:53:51] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[19:03:42] <tbrowder> hi, anyone know Kamil Kutaga (teodozjan on github), author of Raku module PerlStore?
[19:03:44] <tellable6> 2021-12-16T16:34:29Z #raku <melezhik> tbrowder I decided to keep https://mybf.io a little bit longer ( for some reasons ). No promise to keep it forever though ))) You may also merge some recent changes from my branch to yours ... thanks
[19:04:22] <tbrowder> .tell melezhik thanks
[19:04:23] <tellable6> tbrowder, I'll pass your message to melezhik
[19:05:46] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:05:51] <tbrowder> PerlStore need rakuizing, and it hasn't been touched in 5 years. no email, i'll file issue.
[19:06:08] *** Joins: patrickb (~quassel@55d46680.access.ecotel.net)
[19:08:58] *** Quits: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8) (Ping timeout: 260 seconds)
[19:16:43] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[19:34:49] *** Joins: p6steve (~p6steve@2a00:23c8:2c00:4d00:f4f0:69f4:8f0c:d703)
[19:39:43] *** Joins: vrurg_ (~vrurg@45.74.95.181)
[19:42:06] *** Quits: vrurg (~vrurg@45.74.95.181) (Ping timeout: 260 seconds)
[19:46:57] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[19:51:59] *** Joins: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8)
[19:53:55] *** Joins: MoC (~moc@user/moc)
[20:08:32] *** Quits: lichtkind__ (~lichtkind@p200300d0a722726b5403a1a5fbea63c0.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:13:46] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[20:16:12] *** Quits: p6steve (~p6steve@2a00:23c8:2c00:4d00:f4f0:69f4:8f0c:d703) (Quit: Ping timeout (120 seconds))
[20:26:59] *** merryprog is now known as perryprog
[20:27:04] *** perryprog is now known as merryprog
[20:52:53] *** Joins: p6steve (~p6steve@2a00:23c8:2c00:4d00:f4f0:69f4:8f0c:d703)
[20:55:46] <tbrowder> *needs
[20:58:56] *** Quits: p6steve (~p6steve@2a00:23c8:2c00:4d00:f4f0:69f4:8f0c:d703) (Quit: Ping timeout (120 seconds))
[21:37:51] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:37:53] *** Joins: HrBollermann (~HrBollerm@dslb-178-010-216-003.178.010.pools.vodafone-ip.de)
[21:38:10] <HrBollermann> i think i found a bug
[21:38:18] <lizmat> Oh dear
[21:38:40] <HrBollermann> my $dx=10;  dd ( [0], { [ @$_ Z+ ( $dx -= 1 ) ] } ... * )[^3]
[21:38:40] <evalable6> HrBollermann, rakudo-moar 5873a8c50: OUTPUT: «([0], [9], [17])␤»
[21:39:03] <HrBollermann> my $dx=10;  dd ( [0], { ( @$_ Z+ ( $dx -= 1 ) ) } ... * )[^3]
[21:39:04] <evalable6> HrBollermann, rakudo-moar 5873a8c50: OUTPUT: «([0], (8,).Seq, (16,).Seq)␤»
[21:39:32] <HrBollermann> See? the only difference is that the latter uses a list instead of an array, yet the values are different
[21:40:23] <HrBollermann> doesn't happen without the Z
[21:40:28] <HrBollermann> m: my $dx=10; dd ( [0], { ( $_[0] + ( $dx -= 1 ), ) } ... * )[^3]
[21:40:28] <camelia> rakudo-moar ca4f003bc: OUTPUT: «([0], (9,), (17,))␤»
[21:41:06] <HrBollermann> I got bitten by this badly today trying to solve the advent puzzle
[21:52:07] *** Quits: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[21:56:37] *** Joins: getimiskon (~getimisko@athedsl-4406825.home.otenet.gr)
[22:03:10] *** Joins: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net)
[22:03:55] * guifa is alive
[22:06:07] <lizmat> guifa !!
[22:06:34] <guifa> I'm currently updating everything on my machine and getting ready to fix timezones for you ^_^
[22:07:05] <guifa> (first time in three months I'm opening up Comma =\ )
[22:18:32] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[22:25:08] * lizmat hopes for a speedy recovery :-)
[22:28:22] <guifa> it's been a rough semester.  I'm never taking on that much work again
[22:28:46] <lizmat> and there you are starting up Comma again  :-)
[22:28:58] <guifa> haha programming is relaxing for m
[22:29:31] <guifa> and now I get to play with all the new dispatch stuff that should make so much stuff Just Work™
[22:34:59] <guifa> lizmat: tbh btw, I didn't realize I could *do* `class DateTime is DateTime { … }`.  That is much cleaner than mucking with MOP to keep the name stable. Still going to wrap CORE::DateTime's stuff though.  I know I also need to fix some of the timezone calculation code, there was a bug or two in there causing some big issues and I think I only pushed a quick fix that would still bomb on some dates, especially ones beyond a zone's fi
[22:34:59] <guifa> transition date (which may be what hit you). Basically gotta go through the C code again line by painful line
[22:35:33] <lizmat> meh....  but am looking forward to the result
[22:35:48] <lizmat> you'll have at least IRC::Log::Textual as a client  :-)
[22:36:29] <lizmat> (stupid Textual used to log just [HH:MM:SS] on log files divided by midnight local time)
[22:36:46] <lizmat> and I wants log files divided by midnight UTC
[22:40:16] <guifa> that kinda makes me think I should also have a way to access when the next timezone offset transition will occur.   I'd have to think how to code it though and how I'd want it accessed
[22:40:59] <lizmat> but why would you need that ?
[22:41:26] <lizmat> DateTime objects are ValueTypes... so once created, they never change ?
[22:46:48] <guifa> it might be in a different module entirely
[22:49:21] <guifa> But basically, sub when-is-next-dst(DateTime.now) would pop back 2022-03-27 at 01:00:00  for Europe timezones and 2022-03-13 at 02:00:00 for us in the states
[22:50:35] <lizmat> that's a nice feature to have, independent of DateTime::Timezones, is what you're saying ?
[22:53:49] <guifa> Yeah.  Kind of going along codesections' post, I've been (okay, had been, ignoring the past three months) a lot of thought as to just how much to cram into each module and how much to keep them separate
[22:55:32] <guifa> so I have User::Timezone to be one-stop shop to determine the time zone.  At the moment, timezone calculations are included inside of DateTime::Timezones, but I think I could reasonably down the road pull out all of the data/calculations into a separate module, and leave DateTime::Timezone to just handle adding the extra attributes and calling the calculation routines
[22:56:39] <lizmat> yeah, I was thinking along similar lines
[22:57:36] <guifa> doing that for CLDR made life sooo much easier
[22:58:23] <guifa> also, sidenote, how is the RakuAST branch?  do you think it's stable / complete enough I could start working from it to prep the formatter modules?
[22:59:00] <lizmat> my feeling is that it would be stable enough for that: I did the printf formatter logic already
[22:59:57] <lizmat> but I also think it will be well into the next year before it's merged, as jnthn will be focussing more on performance using newdisp and reviving a lot of pea work
[23:00:44] * guifa nods
[23:01:05] <guifa> I've got plenty of other stuff to work on in the meantime 
[23:02:03] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[23:09:18] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 260 seconds)
[23:10:08] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[23:27:18] *** Joins: hsiao (~hsiao@net-93-148-170-7.cust.vodafonedsl.it)
[23:27:41] <hsiao> hi
[23:28:55] <hsiao> I try to compile a file with rakudo --target=moar file, but it says: Cannot dump this object, no dump method
[23:29:52] <hsiao> rakudo --help doesn't seem to mention anything about dump methods
[23:29:58] *** hsiao is now known as hsiao2
[23:30:20] <lizmat> hsiao: 1st: what is the code you're trying to compile, and 2nd: why would you do that?  It's more  core debugging aid than anything else ?
[23:30:22] <tellable6> lizmat, I'll pass your message to hsiao
[23:31:16] <hsiao2> lizmat: the code is just `print "hello";`
[23:31:18] <tellable6> 2021-12-17T20:00:22Z #raku <lizmat> hsiao: 1st: what is the code you're trying to compile, and 2nd: why would you do that?  It's more  core debugging aid than anything else ?
[23:32:17] <hsiao2> since running with raku is so slow I was wondering if compiling could help
[23:32:42] <hsiao2> I takes 700ms to run the hello program on my computer
[23:32:50] <MasterDuke> if you do in fact need/want to do that, you have to use `--output=file.name` with the --dump command
[23:33:04] <MasterDuke> oop, i mean with the --target=moar option
[23:33:47] <lizmat> hsiao2: your program is just: print "hello"   ??
[23:34:02] <hsiao2> yes
[23:34:12] <lizmat> are you by any chance using -I ?
[23:34:18] <hsiao2> no
[23:34:36] *** Quits: hsiao2 (~hsiao@net-93-148-170-7.cust.vodafonedsl.it) (Quit: Connection closed)
[23:34:47] <lizmat> time raku -e 'print "hello"'
[23:35:11] <tonyo> <forever>
[23:35:26] *** Joins: hsiao2 (~hsiao2@net-93-148-170-7.cust.vodafonedsl.it)
[23:35:37] <hsiao2> sorry I might have missed some messages
[23:35:38] <tonyo> hsiao2: what version of raku?
[23:35:48] <lizmat> for me:
[23:35:50] <lizmat> $ time raku -e 'print "hello"'
[23:35:50] <lizmat> hello
[23:35:50] <lizmat> real	0m0.175s
[23:35:50] <lizmat> user	0m0.212s
[23:35:50] <lizmat> sys	0m0.028s
[23:35:50] <hsiao2> v2021.10
[23:36:24] <hsiao2> time raku -e 'print "hello";'
[23:36:25] <hsiao2> hello
[23:36:26] <hsiao2> real    0m0.804s
[23:36:26] <hsiao2> user    0m0.834s
[23:36:27] <hsiao2> sys     0m0.234s
[23:36:35] <lizmat> what hardware are you running on ?
[23:36:36] <tonyo> uname ?
[23:36:52] <hsiao2> raspberry pi 4
[23:37:30] *** Joins: stoned75 (~seb@78.203.129.116)
[23:37:37] <hsiao2> aarch64 linux
[23:39:45] <hsiao2> how do I compile again? Sorry I missed the message
[23:40:27] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[23:40:52] <MasterDuke> the way you were trying isn't really meant for end users (though you can successfully do it if you use `--output=file.name` with the `--target=moar` option)
[23:41:13] <MasterDuke> to compile something you would put it in a module and then just `use` the module
[23:41:38] <lizmat> hsiao2: also, sadly, there's no JIT for ARM architectures, so it will probably run slower than on an Intel of comparable performance
[23:41:58] <hsiao2> ok, I guess raku is not for me at the moment
[23:42:00] <tonyo> the m1 runs raku way faster
[23:42:58] <tonyo> wonder if jit could get raspi runtimes significantly faster
[23:43:12] <hsiao2> I can do everything with rpi4, browsing just fine, perl5 hello world takes only 7ms
[23:43:46] <MasterDuke> it's not as big a difference as it used to be a couple years ago now that spesh does much more, which does work on all architectures
[23:44:36] <hsiao2> what's spesh?
[23:45:00] *** Quits: HrBollermann (~HrBollerm@dslb-178-010-216-003.178.010.pools.vodafone-ip.de) (Remote host closed the connection)
[23:46:20] <MasterDuke> the dynamic optimizer in moarvm. "spesh" is sort of a pun on "specialize", since one of the things it does it create specialized version of code seen at runtime based on the types it actually sees being used in the code
[23:47:14] <MasterDuke> it's similar to a jit, but doesn't actually produce native code, it just sends better optimized bytecode for the jit to then turn into native code
[23:47:59] <hsiao2> thank you MasterDuke. Anyway I'm going now, I'll give raku another chance christmas 2022, happy holidays
[23:48:09] <MasterDuke> np
[23:48:21] *** Quits: hsiao2 (~hsiao2@net-93-148-170-7.cust.vodafonedsl.it) (Quit: Connection closed)
[23:56:40] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
