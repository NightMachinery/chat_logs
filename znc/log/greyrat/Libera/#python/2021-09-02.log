[00:00:18] *** Joins: Shanzem_ (~Shanzem@86.31.109.147)
[00:00:24] *** Quits: keir (~keir@user/keir) (Quit: keir)
[00:00:57] *** Quits: Shanzem_ (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[00:01:46] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[00:02:30] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:03:17] *** Joins: Jefren1 (~Jefren@208.104.190.20)
[00:03:19] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 252 seconds)
[00:03:23] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[00:03:31] *** Joins: larry23 (~Guest65@97.75.172.26)
[00:04:25] *** Quits: user_ (~user@bzq-11-168-31-138.red.bezeqint.net) (Ping timeout: 244 seconds)
[00:06:01] *** Quits: Jefren (~Jefren@70.35.66.54) (Ping timeout: 248 seconds)
[00:08:14] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[00:08:33] *** Quits: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com) (Ping timeout: 244 seconds)
[00:08:43] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[00:10:46] *** Joins: Liblx (~Alex@2a02:810c:280:59c:3857:86d3:45aa:2f3e)
[00:11:22] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[00:12:13] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:12:47] *** Joins: Naan` (~Naan@user/naan)
[00:13:26] *** Joins: djapo (~archangel@user/djapo)
[00:15:00] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[00:15:12] *** Quits: Darkfoe1 (~chuck@drunk.serverfail.party) (Ping timeout: 276 seconds)
[00:15:27] *** Quits: MaximB (~MaximB@87.68.164.81) (Quit: Client closed)
[00:16:17] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 245 seconds)
[00:17:17] <larry23> I am working with the Requests library, and am trying to pass a "sort" parameter to sort the data retrieved by a field that I pass. When I try to do this, it seems like nothing happens. I'm passing this as a dictionary with the key being "sort" and value being the field that I want to sort by. Am I passing the right key to requests.get to
[00:17:17] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[00:17:18] <larry23> accomplish this?
[00:17:39] *** Joins: sumagnadas (~sumagnada@223.223.132.250)
[00:17:51] *** Quits: aead (~aead@user/aead) (Ping timeout: 244 seconds)
[00:18:35] <deniska> larry23: I don't remember requests taking any kind of sort parameter
[00:18:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[00:18:54] *** Joins: fanis30 (~anon@adsl-180.37.6.1.tellas.gr)
[00:19:09] <deniska> larry23: or you mean the server you are getting data from supports a sort query param?
[00:19:18] <jaggz> larry23, sort what where who?
[00:20:04] *** Quits: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526) (Remote host closed the connection)
[00:20:28] *** Joins: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526)
[00:22:06] <larry23> deniska It must be something that the server can take, which might be why it's so confusing. All I can find on documentation on the library side of things is essentially that you can pass parameters and it does not go into detail. This is the link to the documentation
[00:22:07] <larry23> https://docs.python-requests.org/en/master/user/quickstart/#passing-parameters-in-urls
[00:23:27] <deniska> larry23: well, because which params you can pass depend on which server you're interacting with
[00:23:37] <salparadise> I was looking for a python equivalent of -Djavax.net.ssl.trustStoreType=KeychainStore, and found there is no such thing (can't read mac os system truststore), then I found this SO post https://stackoverflow.com/questions/33790315/python-equivalent-of-javas-keystore that mentions "Since Python standard library doesn't contain any manual encryption (only hashing). There is no real standard
[00:23:39] <salparadise> mechanism." What does it mean by "manual encryption" ?
[00:24:02] *** Joins: niku (~nick@2603-8000-7f03-1ab6-82ee-73ff-fea2-5bcd.res6.spectrum.com)
[00:24:10] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[00:24:51] *** Joins: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net)
[00:25:54] <niku> filter add irc_smart * irc_smart_filter *
[00:26:12] <niku> whoops :)
[00:26:42] *** Joins: tsapien (~tsapien@user/tsapien)
[00:27:57] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:91dd:369e:8b04:c6be) (Ping timeout: 245 seconds)
[00:28:01] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 252 seconds)
[00:30:10] *** Joins: nomic (~nomic@185.217.117.169)
[00:30:52] *** Joins: keir (~keir@user/keir)
[00:31:27] *** Quits: Left_Turn (~Matthew@31.124.100.167) (Ping timeout: 240 seconds)
[00:33:01] *** Quits: Xano (~Xano@2a00:23c4:4200:a00:7e3c:7672:42c3:cbec) (Ping timeout: 252 seconds)
[00:34:19] *** Quits: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net) (Quit: Bye now!)
[00:34:31] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[00:34:44] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:91dd:369e:8b04:c6be)
[00:34:46] *** Joins: pacbard (~pacbard@user/pacbard)
[00:36:16] *** Joins: jazzy (~jaziz@172.58.35.41)
[00:37:11] *** Quits: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526) (Quit: Konversation terminated!)
[00:37:47] *** Joins: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526)
[00:38:27] *** Joins: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net)
[00:38:56] *** Quits: shangxiao (~davids@124.182.71.141) (Quit: WeeChat 3.2)
[00:39:01] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:39:33] *** Quits: larry23 (~Guest65@97.75.172.26) (Quit: Client closed)
[00:40:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[00:40:51] *** Joins: Enitin (~Enitin@82.102.22.86)
[00:41:12] *** Parts: tsapien (~tsapien@user/tsapien) (Konversation terminated!)
[00:41:16] *** Joins: szymon (~ugh@staticline-31-183-186-12.toya.net.pl)
[00:41:59] <sumagnadas> so i am making an application for myself which will pull my supermix playlist from yt music and play it using libvlc module but it seems like i dont have control over it from the notification area of ubuntu or using media keys on my laptop....so how do i get it to show up on the notification area as well as control it using media keys?
[00:42:53] *** Quits: szymon (~ugh@staticline-31-183-186-12.toya.net.pl) (Client Quit)
[00:44:57] *** Quits: ioistired (~ioistired@signald/ioistired) (Remote host closed the connection)
[00:45:00] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[00:45:07] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:46:10] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[00:46:20] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:46:47] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 244 seconds)
[00:47:18] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 244 seconds)
[00:47:57] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:48:12] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:48:46] <phy1729> Is there a mock for IO steams so I can test all the writes together rather than each individual call?
[00:53:25] *** Quits: lastshell (~lastshell@user/lastshell) (Read error: Connection reset by peer)
[00:53:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[00:55:44] *** Joins: fikran (~fikran@user/fikran)
[00:56:31] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:99ce:79ef:4cbc:5e88)
[00:57:30] *** Quits: fanis30 (~anon@adsl-180.37.6.1.tellas.gr) (Quit: WeeChat 3.2)
[00:59:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[00:59:27] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[00:59:38] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[00:59:51] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:01:36] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:02:12] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[01:02:24] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[01:03:16] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:99c3:d365:425:4e9d) (Ping timeout: 252 seconds)
[01:05:30] *** Joins: sysopch (~sysopch@2001:b07:6469:cc5f:d5ef:3fdd:b7f7:945a)
[01:05:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:06:08] <phy1729> I should just use io.StringIO
[01:07:44] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[01:07:50] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Client Quit)
[01:08:09] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:08:15] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[01:08:17] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[01:08:31] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[01:08:44] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Client Quit)
[01:08:45] *** Quits: mago (~mago@93.176.175.73) (Quit: Client closed)
[01:09:09] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[01:09:29] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Remote host closed the connection)
[01:10:25] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Client Quit)
[01:10:39] *** Joins: wilk (~wilk@user/wilk)
[01:10:40] *** Quits: sumagnadas (~sumagnada@223.223.132.250) (Quit: WeeChat 3.2)
[01:10:51] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[01:11:32] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[01:13:11] *** Quits: raxor2k (~raxor2k@78.158.252.74) ()
[01:14:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[01:14:19] *** Quits: sazawal (~sazawal@122.162.80.16) (Quit: Leaving)
[01:14:23] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[01:15:41] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:17:56] *** Joins: oriba (~oriba@dynamic-089-014-102-014.89.14.pool.telefonica.de)
[01:18:49] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[01:19:37] *** Joins: Enitin (~Enitin@82.102.22.86)
[01:19:55] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:20:02] *** Joins: nick__ (~compufrea@cpe-174-103-101-19.columbus.res.rr.com)
[01:20:09] *** Quits: compufreak (~compufrea@cpe-174-103-101-19.columbus.res.rr.com) (Ping timeout: 248 seconds)
[01:21:00] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:1084:3dd6:ee9c:22f5) (Quit: Leaving)
[01:21:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[01:21:17] *** Lord_of_Life_ is now known as Lord_of_Life
[01:23:12] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[01:23:40] *** Parts: ska (~ska@user/ska) (Leaving)
[01:24:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:26:15] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[01:26:17] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: Connection reset by peer)
[01:27:03] *** Quits: sysopch (~sysopch@2001:b07:6469:cc5f:d5ef:3fdd:b7f7:945a) (Quit: Leaving)
[01:27:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:27:21] *** Quits: SystemFFan (~SystemFFa@188.70.6.7) (Remote host closed the connection)
[01:27:23] *** Parts: dba (uid502594@id-502594.stonehaven.irccloud.com) ()
[01:27:27] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[01:27:28] *** Quits: emika (~emika@212.102.44.59) (Ping timeout: 252 seconds)
[01:27:29] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[01:27:40] *** Joins: Naan (~naan@user/naan)
[01:27:46] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:27:58] *** Joins: emika (~emika@83.136.182.236)
[01:28:10] *** Joins: SystemFFan (~SystemFFa@188.70.6.7)
[01:28:59] *** Quits: magla (~gelignite@55d4b5be.access.ecotel.net) (Quit: Stay safe!)
[01:29:27] *** Quits: keir (~keir@user/keir) (Quit: keir)
[01:29:31] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[01:29:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[01:29:56] *** Joins: portalrat (~portalrat@user/portalrat)
[01:32:15] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[01:32:15] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 244 seconds)
[01:32:48] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:32:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[01:33:07] <jaggz> i forgot how you pip install from a cloned git repo
[01:33:14] <jaggz> local clone
[01:33:22] *** Quits: travaldo (~travaldo@159.203.88.148) (Ping timeout: 245 seconds)
[01:34:07] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:34:30] <zware> jaggz: `pip install path/to/checkout`?
[01:34:32] <jinsun> pip install path/to/folder/that/contains/setup_file ?
[01:35:07] *** Joins: Shanzem__ (~Shanzem@86.31.109.147)
[01:35:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:35:52] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:35:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:35:57] <meejah> jaggz: "pip install -e ."
[01:36:08] <jaggz> and then, can I edit it there, live?
[01:36:21] <meejah> -e / --editable means any edits you make locally will be "seen" by the install
[01:36:23] <jinsun> you need the `-e` for that
[01:36:23] <meejah> yes
[01:36:23] <jaggz> or do I need to go edit it in the installed python directory, then copy m.. oh
[01:36:40] <jaggz> done!
[01:36:42] <jaggz> <3
[01:36:49] *** Joins: Shanzem_ (~Shanzem@86.31.109.147)
[01:37:25] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[01:37:59] *** Quits: zisu8 (~textual@p200300eab73b6c0034fa57a2fb0b7021.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[01:38:20] <jaggz> (google colab is a really nice service)
[01:39:12] *** Quits: Shanzem__ (~Shanzem@86.31.109.147) (Ping timeout: 245 seconds)
[01:39:26] *** Joins: Shanzem__ (~Shanzem@86.31.109.147)
[01:40:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[01:41:17] *** Quits: Shanzem_ (~Shanzem@86.31.109.147) (Ping timeout: 245 seconds)
[01:42:51] <jaggz> I wonder why this is still playing the audio at the same volume and.. everything sounds the same:  data = data/10000;  IPython.display.Audio(data=data, rate=rate)
[01:43:13] <jaggz> I added in the /10000 thing
[01:43:25] *** Quits: jdwidari (~jdwidari@2001:420:c0c4:1006::35f) (Ping timeout: 252 seconds)
[01:43:58] *** Quits: mxp (~mxp@37.19.217.34) (Ping timeout: 252 seconds)
[01:44:08] *** Quits: Shanzem__ (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[01:45:21] *** Joins: matsaman (~matsaman@user/matsaman)
[01:45:49] <jaggz> it's from this colab: https://camo.githubusercontent.com/84f0493939e0c4de4e6dbe113251b4bfb5353e57134ffd9fcab6b8714514d4d1/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667
[01:45:52] <jaggz> oh, nice url.
[01:46:17] <jaggz> and that's from this python module repo (colab link down in Usage section) https://github.com/timsainb/noisereduce
[01:48:55] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[01:49:20] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:91dd:369e:8b04:c6be) (Quit: Leaving)
[01:49:28] <jaggz> yeah. weird. it's not reloading that audio.  If I set the data to None it errors, yet no changes I make to data have any effect otherwise
[01:50:11] <jaggz> changing the variable  (audata = data) then proceeding does work
[01:50:16] <jaggz> weird
[01:50:43] *** Joins: jdwidari (~jdwidari@2001:420:c0c4:1006::35f)
[01:50:51] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 244 seconds)
[01:51:06] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:51:18] *** Joins: Enitin (~Enitin@82.102.22.85)
[01:51:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:52:21] *** Joins: jazzy2 (~jaziz@172.58.35.41)
[01:52:34] *** jazzy is now known as Guest9803
[01:52:48] *** jazzy2 is now known as jazzy
[01:53:43] *** Quits: jazzy (~jaziz@172.58.35.41) (Read error: Connection reset by peer)
[01:54:02] *** Joins: jazzy (~jaziz@172.58.35.41)
[01:54:43] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:55:30] *** Quits: Guest9803 (~jaziz@172.58.35.41) (Ping timeout: 256 seconds)
[01:56:56] *** Quits: sarayourfriend (~sarayourf@174-21-144-133.tukw.qwest.net) (Ping timeout: 256 seconds)
[01:57:15] <ross> in a method of my class, I want to be able to do something like `with self.context_manager:` or `with self.context_manager():`. how can I make that? creating a `class context_manager` inside my outer class doesn't give the context_manager access to the outer class' `self`, and while I totally could define an separate class instantiated with `with context_manager(self)`, it doesn't feel semantic
[01:58:58] *** Quits: Akuli (~Akuli@82-203-162-232.bb.dnainternet.fi) (Quit: Leaving)
[02:00:58] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 250 seconds)
[02:01:01] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:01:29] *** Joins: sirn (~sirn@user/sirn)
[02:01:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:01:35] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:01:48] *** Joins: LiftLeft (~LiftLeft@172.83.47.138)
[02:02:01] *** Quits: Barones (~Barones@2804:7f3:8987:bc1e:2fa4:b907:6e4c:8567) (Remote host closed the connection)
[02:02:10] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:03:39] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:06:12] <pyevery__> do you know how this error can be resolved? return _VF.norm(input, p, _dim, keepdim=keepdim)  # type: ignore[attr-defined] IndexError: Dimension out of range (expected to be in range of [-2, 1], but got 2)
[02:06:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:06:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[02:06:52] *** Quits: Jefren1 (~Jefren@208.104.190.20) (Ping timeout: 244 seconds)
[02:07:31] *** Quits: newpy (~newpy@2601:280:4381:1390:fc7d:b965:6587:3eef) (Quit: Leaving)
[02:08:44] *** Joins: Jefren1 (~Jefren@70.35.67.187)
[02:09:03] *** Joins: Cypris (uid511277@user/cypris)
[02:09:25] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[02:10:50] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:11:00] *** Quits: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526) (Quit: Konversation terminated!)
[02:11:13] *** Joins: sarayourfriend (~sarayourf@174-21-144-133.tukw.qwest.net)
[02:11:17] *** Joins: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526)
[02:11:27] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[02:11:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:12:01] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:12:02] *** Quits: junktext (~junktext@77.247.181.216) (Ping timeout: 244 seconds)
[02:13:16] *** Gustavo6046_ is now known as Gustavo6046
[02:14:02] *** Quits: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526) (Client Quit)
[02:14:03] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[02:14:05] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[02:14:16] *** Joins: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526)
[02:14:23] *** Joins: mjsir911 (~bnc@user/mjsir911)
[02:14:24] *** Quits: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526) (Client Quit)
[02:14:42] *** Joins: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526)
[02:15:19] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[02:16:54] *** Quits: oriba (~oriba@dynamic-089-014-102-014.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:18:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:20:34] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[02:20:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:21:08] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:21:24] *** Joins: Ivyy (~Ivyy@2001:a62:483:bf01:821d:56f7:c854:10af)
[02:21:52] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[02:22:55] *** Joins: dakotakae (~dakotakae@2601:680:cb80:a6d0:562:3756:421a:75e2)
[02:24:23] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[02:24:26] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 244 seconds)
[02:25:18] *** Quits: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526) ()
[02:25:42] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[02:26:30] *** Joins: arinov (~arinov@213.194.126.155)
[02:27:02] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[02:27:27] <dakotakae> Hey all! Anyone have experience with SQLAlchemy in here? I tried #sqlalchemy but it seems a bit quiet.
[02:28:14] *** Joins: cliluw (~cliluw@47.147.80.149)
[02:28:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:28:23] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[02:28:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:30:11] <meejah> dakotakae: always best to just ask the real question
[02:30:54] <dakotakae> Well, I'm using an automapped base with reflected metadata, and I'm getting an error about a column conflicting with a property.
[02:31:13] <dakotakae> The code I've got is here: https://pastebin.com/n6CC75Gb
[02:31:36] <dakotakae> The exact error is: sqlalchemy.exc.ArgumentError: WARNING: when configuring property 'rx' on mapped class visit_note->visit_note, column 'rx' conflicts with property '<RelationshipProperty at 0x7fc0588f9640; rx>'. To resolve this, map the column to the class under a different name in the 'properties' dictionary.  Or, to remove all awareness of the column entirely (including its availability as a foreign key), use the
[02:31:36] <dakotakae> 'include_properties' or 'exclude_properties' mapper arguments to control specifically which table columns get mapped.
[02:31:57] <dakotakae> I'm just wondering how I can exclude that relationship property from the metadata reflection to get rid of this error.
[02:32:31] <dakotakae> I was not given access to the entire database structure, just a list of tables that I need to access and the columns I need to be modifying/inserting into.
[02:32:47] <meejah> (I do not know sqlalchemy that well .. but hopefully someone else does ;0
[02:33:36] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[02:33:41] <dakotakae> Yep. I've found ways to exclude properties in the documentation, but only if you're building out the classes yourself. Nothing on if you're using automapped base classes.
[02:34:27] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[02:36:33] *** Quits: cedric (~cedric@2a01:cb11:867:c200:74fc:70ff:77d9:f09d) (Quit: Konversation terminated!)
[02:38:12] *** Joins: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il)
[02:38:48] *** Joins: nomic (~nomic@185.217.117.169)
[02:38:49] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[02:39:06] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:99ce:79ef:4cbc:5e88) (Quit: Client closed)
[02:39:23] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[02:39:36] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[02:39:37] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[02:39:47] *** Quits: nomic (~nomic@185.217.117.169) (Client Quit)
[02:42:02] *** Quits: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il) (Client Quit)
[02:43:10] *** Quits: hudo (~hudo@62.68.27.70) (Ping timeout: 240 seconds)
[02:43:17] *** Joins: r3m (~launch@user/r3m)
[02:43:40] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:45:43] *** Joins: Atque (~Atque@user/atque)
[02:47:19] *** Quits: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net) (Quit: Bye now!)
[02:48:43] *** Joins: parsnip (~parsnip@user/parsnip0)
[02:50:40] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 240 seconds)
[02:51:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 244 seconds)
[02:51:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:51:56] *** Joins: c10l (~c10l@89.34.167.207)
[02:52:30] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[02:53:26] *** Quits: rmm (~rmm@user/rmm) (Remote host closed the connection)
[02:53:35] *** Joins: jasper_ (~user@styria.daemonized.org)
[02:54:11] *** Quits: jasper_ (~user@styria.daemonized.org) (Client Quit)
[02:55:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[02:55:14] *** Quits: jdwidari (~jdwidari@2001:420:c0c4:1006::35f) (Remote host closed the connection)
[02:55:53] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:56:14] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Quit: Leaving)
[02:56:29] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[02:56:57] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[02:57:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[02:59:00] *** Joins: nomic (~nomic@185.217.117.169)
[02:59:25] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Quit: Leaving)
[03:02:43] *** Quits: Narrat (~omnius@p200300df5f00d3ea06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:03:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[03:05:06] *** Joins: fikran (~fikran@user/fikran)
[03:07:11] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:08:02] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:07] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[03:08:50] *** Joins: jdwidari (~jdwidari@2001:420:c0c4:1006::35f)
[03:10:37] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:12:37] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:13:00] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[03:14:30] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[03:15:48] <salparadise> ross: look at contextlib.contextmanager decorator, https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
[03:16:27] *** Quits: Liblx (~Alex@2a02:810c:280:59c:3857:86d3:45aa:2f3e) (Quit: WeeChat 3.2)
[03:16:46] <parsnip> would like help installing panctl on macos
[03:17:25] <parsnip> CFLAGS=-I../olm/include LDFLAGS=-L../olm/build/ python3 setup.py install
[03:17:29] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[03:17:41] <parsnip> pip3 install PyGObject pydbus
[03:17:51] <parsnip> > panctl
[03:17:57] <parsnip> Error, g-dbus-error-quark: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.pantalaimon1 was not provided by any .service files (2)
[03:18:38] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: ZNC 1.8.2 - https://znc.in)
[03:18:39] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 250 seconds)
[03:20:25] *** Joins: BlessJah (~BlessJah@user/blessjah)
[03:20:33] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:21:32] <ross> salparadise: oo! thank you
[03:22:04] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[03:22:47] *** Quits: sarayourfriend (~sarayourf@174-21-144-133.tukw.qwest.net) (Quit: Client closed)
[03:24:07] *** Joins: pacbard (~pacbard@user/pacbard)
[03:29:34] *** Joins: joeb3_ (~jbeasley@2603-8080-ea08-5101-74e2-4a06-acb7-3988.res6.spectrum.com)
[03:29:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:30:38] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:30:56] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:31:00] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[03:31:06] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 250 seconds)
[03:33:40] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 244 seconds)
[03:34:56] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:36:28] *** Joins: jiffe (~jiffe@mail.nsab.us)
[03:37:06] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:37:08] *** Joins: m4v (~znc@ubuntu/member/m4v)
[03:40:36] *** Quits: asd (~noname@user/asd) (Ping timeout: 276 seconds)
[03:42:54] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[03:43:07] *** Joins: gloin (~gloin@user/gloin)
[03:43:58] *** Joins: Fieldy (~no@user/fieldy)
[03:44:21] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:47:06] *** Quits: pacbard (~pacbard@user/pacbard) (Ping timeout: 244 seconds)
[03:49:54] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[03:50:10] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[03:50:33] *** Joins: jazzy2 (~jaziz@172.58.35.41)
[03:50:41] *** Joins: c10l (~c10l@89.34.167.207)
[03:50:41] *** Quits: jazzy (~jaziz@172.58.35.41) (Read error: Connection reset by peer)
[03:51:30] *** Joins: et_ (~et@user/et)
[03:51:45] *** Joins: asd (~noname@user/asd)
[03:52:01] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[03:52:01] *** et_ is now known as et
[03:52:16] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 244 seconds)
[03:52:44] *** Joins: pacbard (~pacbard@user/pacbard)
[03:54:36] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[03:54:57] *** Joins: montxero (~user@149.167.149.74)
[03:55:48] *** jazzy2 is now known as jazzy
[03:57:47] *** Joins: nomic (~nomic@185.217.117.169)
[03:57:51] *** Joins: Barones (~Barones@177.133.54.55)
[04:00:25] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:00:44] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[04:02:32] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 245 seconds)
[04:02:50] <Fieldy> hello! i'm a python newb and trying to figure out how to read a file into a variable and then pass that variable on for gpt-neo to use. I've placed all the details here. note: the site has converted \n into actual newlines which is annoying. https://dpaste.com/AGJXJM7WB.txt
[04:04:25] *** Joins: et_ (~et@user/et)
[04:05:19] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[04:05:19] *** et_ is now known as et
[04:05:52] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 252 seconds)
[04:06:03] <jinsun> Fieldy: input_text.read() will seek to the end of file, and when you .read again it will give you a blank string
[04:06:10] *** Joins: Praise (~Fat@user/praise)
[04:07:34] <jinsun> Fieldy: if you're just doing open() and then read(), it is better to use pathlib.Path.read_text, https://docs.python.org/3/library/pathlib.html#pathlib.Path.read_text
[04:07:44] *** Joins: Slimgin (~quassel@2603-9001-0207-a100-410a-b8ce-de8d-55ad.inf6.spectrum.com)
[04:08:01] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:08:48] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 244 seconds)
[04:08:58] <Fieldy> jinsun: okay! i'll read up. thanks a lot for your time!
[04:09:19] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[04:09:41] *** Joins: Wulf (~Wulf@user/wulf)
[04:10:16] <u4t> ok now
[04:10:27] <u4t> building cpython from source here
[04:10:40] <u4t> "failed to build _decimal"
[04:10:49] <u4t> 1) do i need to worry about this?
[04:10:59] <u4t> 2) what library do i need to install to fix it? (:
[04:12:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:99ce:79ef:4cbc:5e88)
[04:12:25] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Ping timeout: 244 seconds)
[04:12:43] <stewie925> hello guys, what does the python operator `^=` do?
[04:12:59] <ammar2> its xor equals, kinda like plus equals
[04:13:01] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[04:13:01] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[04:13:16] <ammar2> `a ^= b` is usually the same as `a = a ^ b`
[04:13:18] *** Quits: Barones (~Barones@177.133.54.55) (Remote host closed the connection)
[04:13:22] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[04:13:36] <stewie925> XOR equals  .. hmm
[04:13:51] <stewie925> thank you ammar2 - let me check it out
[04:14:10] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[04:15:46] <jinsun> u4t: there will be a python version of decimal that python will fall back to if the C version could not be built, so if you use decimal and care about performance then it would be bad
[04:16:46] <nedbat> u4t: if you don't mind me asking, why are you building from source?
[04:17:09] *** Joins: srhm (~srhm@user/srhm)
[04:17:42] <u4t> because the weirdos who compile and package obs decided that the windows version only needs python 3.6
[04:18:15] *** Joins: dob1 (~dob1@user/dob1)
[04:18:29] <nedbat> u4t: oh, and why do you want newer than that?
[04:18:35] <u4t> other way around
[04:18:41] <u4t> i'm compiling 3.6.14
[04:18:58] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[04:19:02] <nedbat> u4t: what's wrong with the version OBS comes with?
[04:19:36] <u4t> well i want to do testing on *nix with the same version as what windows has
[04:20:29] <u4t> mainly so i don't accidentally use syntax that was added in later versions
[04:21:05] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:98e7:c5c1:9a99:bc3a)
[04:21:19] *** Joins: ice9 (~ice9@user/ice9)
[04:22:07] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 245 seconds)
[04:22:11] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[04:22:34] <u4t> hmm looks like the _decimal module is unhappy about the UNUSED macro
[04:23:45] *** Quits: pyevery__ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[04:24:10] <u4t> https://bpa.st/TVMQ  << is this normal? (:
[04:24:21] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[04:24:31] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[04:25:03] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:25:39] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:25:44] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[04:26:09] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[04:26:40] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[04:27:10] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:28:16] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[04:28:28] *** Joins: nomic (~nomic@185.217.117.169)
[04:28:58] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[04:30:11] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[04:30:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:31:10] *** Quits: SystemFFan (~SystemFFa@188.70.6.7) (Ping timeout: 240 seconds)
[04:31:31] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:31:37] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[04:32:56] *** Joins: ivan_ (~Ivyy@ppp-46-244-227-30.dynamic.mnet-online.de)
[04:33:07] <nedbat> u4t: that seems like a simple thing to get right, so something seems really amiss
[04:33:12] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[04:33:28] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:33:54] <u4t> trying without --with-system-libmpdec
[04:34:00] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:98e7:c5c1:9a99:bc3a) (Read error: Connection reset by peer)
[04:34:24] <nedbat> u4t: maybe just using pyenv would be easier?
[04:34:34] <u4t> UNUSED macro is defined in _json.c
[04:34:58] <u4t> ok, thanks debian. --with-system-libmpdec was the problem
[04:35:01] *** Quits: Ivyy (~Ivyy@2001:a62:483:bf01:821d:56f7:c854:10af) (Ping timeout: 252 seconds)
[04:35:09] *** Quits: czuk_cza (~mist@188.147.99.19.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 244 seconds)
[04:35:30] *** Parts: seanicus (sean@triton.blinkenshell.org) ()
[04:35:41] <u4t> nedbat: where does pyenv source its interpreter binaries from though?
[04:35:52] <nedbat> u4t: it builds them from source
[04:36:05] <u4t> oh ok
[04:36:27] <nedbat> u4t: though, why wouldn't a regular 3.6 binary be fine?
[04:36:44] <u4t> i can't find a debian package for 3.6
[04:36:49] <u4t> 3.5 and 3.7
[04:36:55] <u4t> no 3.6
[04:37:46] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 252 seconds)
[04:38:13] <nedbat> doesn't that seem odd that a version is missing from the middle?
[04:38:27] <u4t> yes well blame obs
[04:38:42] <u4t> cos that's the reason i'm doing this at all (:
[04:39:03] <nedbat> u4t: have you looked at the deadsnakes repo?
[04:41:12] *** Joins: r3m (~launch@user/r3m)
[04:42:05] <u4t> did not find that before, no (:
[04:45:26] *** Joins: georgios (~georgios@user/georgios)
[04:45:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[04:47:40] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:53:09] *** Quits: bonestormii_ (~branr@c-71-57-43-158.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[04:53:18] <u4t> thanks for your help and suggestions. got it going the way i want now :)
[04:53:22] *** Joins: djangoaddict (~djangoadd@2601:8c:c100:6820:6981:ff88:fe4b:fcf1)
[04:54:52] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:7102:ec92:2168:943d)
[04:56:35] <gloin> https://bpa.st/WEQA seems like this should return "None" but I guess numpy does it different. How do I test that prune_inters doesn't have any elements?
[04:59:04] <grym> gloin: that function "Return the unique values in ar1 that are not in ar2."
[04:59:09] <grym> why would you think it returns None
[04:59:37] <grym> it's an empty ndarray, you could check .numel
[05:00:00] <gloin> grym: because most often this will return no unique values.
[05:00:17] *** Joins: lethu (~lethu@user/lethu)
[05:00:25] <gloin> basically looking for "if prune_inters: do stuff"
[05:01:09] <gloin> so "if prune_inters.numel > 0: do stuff" then?
[05:01:17] <grym> gloin: `if prune_inters.size>0`
[05:01:26] <gloin> cool
[05:01:36] <grym> if you try to bool() an array, the deprecation warning tells you what you should've done, instead
[05:01:39] <grym> :)
[05:01:43] <Fieldy> jinsun: thanks so much for your help! your advice got me to the solution.
[05:01:46] <grym> very handy, that one
[05:01:57] <gloin> Yeah, I just tried to bool None and got yelled at
[05:02:02] <grym> "the truth value of an array is ambiguous" has gotta be a pretty well-googled string
[05:02:13] <grym> hm? bool(None) is just False
[05:02:22] <grym> nothing contentious about that
[05:02:25] <gloin> FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.
[05:02:42] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[05:03:08] <grym> yeah that sounds naughty
[05:03:29] *** Joins: y1n (~y1n@84-115-64-203.wifi.dynamic.surfer.at)
[05:03:58] <gloin> think I was attempting something hackish like "if prune_inters not NONE" but it's out of the buffer now
[05:04:07] <gloin> oh wait
[05:04:21] <gloin> lol worse maybe: "if prune_inters == None:"
[05:04:31] <gloin> anyhow, .size works great, thanks
[05:04:57] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[05:05:02] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[05:05:09] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[05:05:22] <grym> graingert: how sane are the suggestions here? https://github.com/tiangolo/fastapi/issues/2387
[05:05:24] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[05:05:55] <cloudbender> what will be faster ?     x / 60 / 60 / 24   or   X * 0.000015740740
[05:06:28] <cloudbender> I don't know enugh about how these newfangled processors do maths
[05:06:34] <cloudbender> ... enough
[05:06:38] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[05:08:32] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-0258-933a-d6c3-bfc1.res6.spectrum.com)
[05:08:44] *** Quits: Madda (~Madda@208.249.9.51.dyn.plus.net) (Ping timeout: 256 seconds)
[05:08:58] <cloudbender> 'use case' === 'case'
[05:09:02] <FunkyBob> cloudbender: it's entirely possible the python compiler will optimise it away anyway... at least, the constant "60 / 60 / 24"
[05:09:18] <cloudbender> thanks
[05:09:41] <cloudbender> FunkyBob thanks
[05:11:07] *** Joins: OPK (~OPK@user/opk)
[05:11:38] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[05:12:09] *** Quits: cation (cation@user/cation) (Ping timeout: 248 seconds)
[05:12:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:13:11] *** Joins: Madda (~Madda@150.249.9.51.dyn.plus.net)
[05:13:43] <cloudbender> maybe I'll set a constant daysFromLocalTime = 1/60/20/24
[05:14:09] *** Quits: ivan_ (~Ivyy@ppp-46-244-227-30.dynamic.mnet-online.de) (Remote host closed the connection)
[05:14:24] *** Joins: Barones (~Barones@177.133.54.55)
[05:14:28] *** Joins: fikran (~fikran@user/fikran)
[05:14:46] <cloudbender> maybe I'll set a constant daysFromLocalTime = 1/60/60/24
[05:15:49] <cloudbender> yeah.  Let the platform create the actual float
[05:16:11] *** Joins: cation (cation@user/cation)
[05:18:05] <FunkyBob> or stop worrying about micro-optimisations, and write legible, maintainable code first?
[05:18:16] <FunkyBob> [which, admittedly, that solution does]
[05:18:31] <parsnip> "faptimizing"
[05:18:44] * parsnip flees
[05:19:49] <cloudbender> I've noticed that Label and Entry (tkinter) have differing font sets, and Label ignores the justification
[05:20:08] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[05:20:38] <cloudbender> I should say diffrent rendering for a given font
[05:21:17] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[05:21:44] <nedbat> cloudbender: don't worry about the speed of things unless those things are the slow part of your program.
[05:22:38] <cloudbender> right.  It's for clocking, and I'm hoping to be able to update reliably at 1/100 sec
[05:23:00] <nedbat> cloudbender: that might be difficult in python
[05:23:26] <nedbat> cloudbender: but even so, you won't get reliable 1/100 by micro-optimizing arithmetic
[05:23:50] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:24:14] <cloudbender> As long as I can read the clock 100 times / sec and compute a string, I'm happy.
[05:24:52] <cloudbender> seems to be working
[05:24:52] <nedbat> cloudbender: ok. write the clearest code you can, and change it if it is too slow.
[05:25:45] <cloudbender> The clock reads and emits every 1/100th, but the display is updated only once per second
[05:26:39] *** Joins: nomic2 (~nomic@185.217.117.169)
[05:27:19] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:28:03] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:29:10] *** Quits: nomic (~nomic@185.217.117.169) (Ping timeout: 240 seconds)
[05:30:34] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:30] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 244 seconds)
[05:33:45] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[05:34:01] <cloudbender> BTW I havent seen any screen flickering problems in python, always a problem in win32
[05:34:03] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 244 seconds)
[05:34:13] <cloudbender> er, in tkinter I mean
[05:34:23] *** Joins: spithash (~spithash@user/spithash)
[05:34:25] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[05:35:22] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[05:35:26] *** Joins: jasper_ (~user@styria.daemonized.org)
[05:35:38] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[05:36:41] *** nomic2 is now known as nomic
[05:40:07] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 245 seconds)
[05:41:16] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[05:42:02] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[05:42:44] *** Joins: dalan623 (~dalan@14-201-241-42.tpgi.com.au)
[05:43:13] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Ping timeout: 252 seconds)
[05:46:04] *** Joins: sharperguy__ (~sharpergu@2001:16b8:5c7c:a700:ec59:28bf:cd2:9112)
[05:48:43] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c38:4f00:8d27:e7b:d16b:14f9) (Ping timeout: 252 seconds)
[05:50:08] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:50:10] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:51:26] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:99ce:79ef:4cbc:5e88) (Quit: Client closed)
[05:51:37] *** Quits: y1n (~y1n@84-115-64-203.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[05:51:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:52:54] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[05:54:09] *** Joins: emika9 (~emika@185.207.249.188)
[05:54:46] *** Quits: emika (~emika@83.136.182.236) (Ping timeout: 252 seconds)
[05:54:46] *** emika9 is now known as emika
[05:54:58] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 250 seconds)
[05:55:51] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[05:56:47] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[05:59:14] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[05:59:58] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:00:37] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:01:55] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[06:02:28] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 244 seconds)
[06:03:14] *** Joins: heco (~redrum@user/redrum88)
[06:03:34] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[06:04:02] *** Joins: y1n (~y1n@84-115-64-203.wifi.dynamic.surfer.at)
[06:05:36] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[06:06:00] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:14:15] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:15:30] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[06:15:50] *** Joins: montxero (~user@149.167.149.74)
[06:17:13] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:17:28] *** Joins: muscularduckling (~musculard@2001:470:69fc:105::e896)
[06:17:28] *** Joins: orion (~orion@user/orion)
[06:18:01] *** Joins: srhm (~srhm@user/srhm)
[06:18:06] <orion> Hello. Why is the "foo" field of this structure not always 4 bytes long? https://gist.github.com/centromere/7d2908ec2df0364385a70c3aba28c284
[06:19:05] *** Parts: joeb3_ (~jbeasley@2603-8080-ea08-5101-74e2-4a06-acb7-3988.res6.spectrum.com) (Ex-Chat)
[06:19:10] *** Quits: srhm (~srhm@user/srhm) (Client Quit)
[06:19:40] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[06:20:17] *** Joins: gggp (~textual@60.10.194.45)
[06:20:37] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[06:21:04] *** Quits: gitly (~gitly@148.252.132.125) (Ping timeout: 244 seconds)
[06:21:10] *** Quits: hajo (~hajo@2a01:c23:8c1d:6900:821f:2ff:feef:dabf) (Ping timeout: 252 seconds)
[06:21:41] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[06:21:53] *** Joins: Fiji (~Fiji@user/fiji)
[06:22:02] <orion> Ah, c_char vs. c_byte.
[06:22:07] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 245 seconds)
[06:22:32] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:23:11] *** Joins: brabrax (~brabrax@user/brabrax)
[06:23:12] *** Joins: gitly (~gitly@148.252.129.136)
[06:23:45] *** Joins: qpdb (~qpdb@user/qpdb)
[06:24:44] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[06:26:46] <stealth_> orion, are you using this to wrap C or something?
[06:27:03] <orion> Yes.
[06:27:21] <stealth_> orion, CFFI probably is a better option at this point.
[06:29:31] <aphysically> when I get platformdirs up I guess I can use a cache for these normalization values with sqlite or something with a reasonable max value
[06:29:46] <aphysically> I'll have to learn a bit of SQL...........I've only used such basic sql in the past
[06:29:57] *** Joins: aswsd (~helpme8@user/hlpme)
[06:30:06] <aswsd> anyone using mamba here? is it more buggy than conda? i encountered error with boto3 with mamba just now and cannot proceed anymore. Not sure if it's related with mamba or should I switch back to conda in future
[06:30:38] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:31:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:33:16] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[06:34:25] <BrenBarn> I've used mamba in the past with no problems but I never did anything with boto3
[06:34:28] <BrenBarn> what exactly is the error?
[06:34:43] *** Joins: srhm (~srhm@user/srhm)
[06:37:46] *** Joins: vicfred (~vicfred@user/vicfred)
[06:38:09] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:40:16] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[06:40:33] <tusko> I have a very annoying problem where I cannot run pip except as sudo
[06:40:54] <tusko> pip install <whatever. always gives ModuleNotFoundError: No module named 'pip._internal.cli'
[06:41:22] *** Quits: jdwidari (~jdwidari@2001:420:c0c4:1006::35f) (Remote host closed the connection)
[06:41:42] <grym> tusko: running pip as sudo will cause such problems, yes
[06:41:50] *** Joins: jdwidari (~jdwidari@2001:420:c0c4:1006::35f)
[06:41:56] <tusko> how do I fix this shit
[06:42:05] <grym> tusko: i suspect that at one point one of the commands you ran was `sudo pip install --upgrade pip`
[06:42:12] <grym> which is an extraordinarily bad idea
[06:42:13] <tusko> probably
[06:42:15] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 244 seconds)
[06:42:38] <tusko> perhaps I can uninstall python and reinstall it?
[06:42:39] <grym> what OS/distro?
[06:42:42] <tusko> arch
[06:42:52] <grym> probably!  i don't know anything about arch
[06:43:12] <grym> in the future i recommend `export PIP_REQUIRE_VIRTUALENV=1` in your shell config
[06:43:21] <tusko> I have that believe it or not
[06:43:28] <grym> and probably leave system python to do its own thing and use pyenv
[06:43:38] <grym> (for dev)
[06:44:18] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:44:49] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[06:44:49] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:a42a:d885:f714:cef7) (Ping timeout: 252 seconds)
[06:45:10] *** Quits: Slimgin (~quassel@2603-9001-0207-a100-410a-b8ce-de8d-55ad.inf6.spectrum.com) (Ping timeout: 240 seconds)
[06:45:20] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[06:45:26] *** Quits: supbo (~kenan@li227-215.members.linode.com) (Quit: Lost terminal)
[06:50:11] *** Joins: srhm (~srhm@user/srhm)
[06:50:16] *** Joins: Superstars111 (~jared@li227-215.members.linode.com)
[06:51:33] *** Quits: y1n (~y1n@84-115-64-203.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[06:51:46] <aswsd> BrenBarn: ModuleNotFoundError error. I rewind to old anaconda version to fix problem and used conda. No more problem
[06:52:04] <aswsd> i'm using windows 10
[06:53:20] *** Joins: supbo (~kenan@li227-215.members.linode.com)
[06:53:31] *** Joins: frost (~frost@59.71.240.119)
[06:54:16] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:56:53] *** Joins: twb (~twb@2403-5800-3400-ef00--add.ip6.aussiebb.net)
[06:57:30] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:57:47] *** Joins: srhm (~srhm@user/srhm)
[06:58:13] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:58:22] <twb> Is there something like lru_cache but for time rather than values?  My use case is something like "how_old_am_I() -> 25" getting queried at 100Hz, but it's expensive and the answer only changes occasionally, and I don't care if there's a delay.
[06:58:48] <twb> I can roll my own from scratch using time.time, but if there's a "batteries included" already I'd rather just use that
[06:59:40] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:00:05] *** Joins: srhm (~srhm@user/srhm)
[07:00:52] <stealth_> tusko, it might be better for you to custom install python as user and use that for your development you can use "pyenv" for that https://github.com/pyenv/pyenv this way you are not messing with OS python
[07:01:47] *** Quits: orion (~orion@user/orion) (Read error: Connection reset by peer)
[07:02:13] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[07:02:21] <stealth_> twb, do you have code to show? its not very clear, if you do it wrong you will get wrong results
[07:02:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[07:02:58] <twb> stealth_: yeah so like I don't care if how_old_am_I() returns wrong results for the first week of January
[07:03:05] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[07:03:44] <stealth_> twb, why is that even a function then? just make it a variable `how_old_am_I = 25`
[07:04:11] <twb> stealth_: the ACTUAL code is asking LDAP for a list of valid usernames, like [p.pw_nam for p in pwd.getpwall()]
[07:09:27] <stealth_> twb, `lru_cache` return value depending on the input `function(input=123)` so, if the default is `function(input=0)` it will return that value.
[07:09:41] <twb> stealth_: exactly
[07:10:33] <stealth_> twb, so give it a default value that you don't care what it returns, then for other give it a value then it does something and that value is then cached!
[07:12:27] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[07:12:32] *** Quits: mmalter (~mmalter@88.171.43.194) (Remote host closed the connection)
[07:13:57] <stealth_> twb, https://bpa.st/6LCQ
[07:14:15] *** Joins: portalrat (~portalrat@user/portalrat)
[07:17:15] <Repiphany> Have a thread that clears the lru_cache every so often or something?
[07:17:31] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[07:18:29] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:118e:c9c6:5d52:3b82) (Read error: Connection reset by peer)
[07:18:59] <stealth_> Repiphany, not sure what you are asking but `@lru_cache(maxsize=32)` it had default `maxsize` set so it doesn't cache over that
[07:19:04] <Repiphany> Or yeah, passing (time.time()//refresh_interval) or something
[07:19:25] <Repiphany> I mean for twb
[07:19:50] <cloudbender> ok, so, it was painful, but I can now subclass matplotlib
[07:19:52] <cloudbender> https://imgur.com/a/syqVQ1J
[07:20:01] <cloudbender> it were VERY painful
[07:20:33] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[07:21:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[07:22:29] <twb> I mean more like this: http://ix.io/3xHj
[07:23:00] <twb> It seems like something that should already just exist as a standard decorator
[07:23:42] <twb> Repiphany: hrm odd way of expressing it, but yeah that sort of makes sense
[07:23:50] *** Joins: fikran (~fikran@user/fikran)
[07:24:16] <twb> I thought stealth_ was just confused
[07:24:28] <twb> (because I didn't understand what they were getting at)
[07:24:43] <nedbat> twb: it's not in the stdlib. Here's how we did it: https://github.com/edx/openedx-webhooks/blob/master/openedx_webhooks/utils.py#L225-L252
[07:26:20] <twb> nedbat: yeah that looks about right.  Whence cachetools?
[07:26:21] <stealth_> twb, you might want to set `globals last_update, last_value`
[07:26:28] <nedbat> twb: it's in pypi
[07:26:31] <twb> Ah that's a standard third-party package
[07:26:42] <Repiphany> https://bpa.st/25AA
[07:27:15] <cloudbender> @nedbat is that commenting style considered a defacto standard ?
[07:27:43] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 244 seconds)
[07:27:52] <twb> So yeah I could essentially write @cachetool.func.ttl_cache(ttl=600, timer=time.time) or so
[07:28:16] <twb> cloudbender: you mean writing docstrings as # instead of "" ?
[07:28:49] *** Joins: cdown_ (~cdown@163.114.131.1)
[07:29:28] <stealth_> # comments is for developer """ """ is for help(), ...
[07:29:29] <nedbat> cloudbender: which commenting style?
[07:29:49] <twb> stealth_: good summary
[07:29:51] <cloudbender> the blocking style used in each function
[07:29:58] *** Joins: [mao] (~null@c-67-160-158-224.hsd1.or.comcast.net)
[07:30:04] <cloudbender> it's actually nicely readable
[07:30:16] <twb> stealth_: though help() actually extracts # comments if the source is available and there's no "" :-)
[07:30:28] <nedbat> cloudbender: yes, that's typical style
[07:31:14] <stealth_> twb, hmm i don't see that being true
[07:31:22] <nedbat> twb: i didn;t think help did that.
[07:31:26] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[07:31:30] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:31:32] <twb> I've definitely seen it
[07:31:34] * twb tests
[07:31:54] *** Joins: djapo (~archangel@user/djapo)
[07:32:04] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[07:32:10] *** cdown_ is now known as cdown
[07:32:17] <twb> http://ix.io/3xHn
[07:32:19] <cloudbender> nice.
[07:32:45] <twb> It probably won't happen if you ship only .pyo files
[07:32:53] <twb> But you have to be super mean to do that
[07:33:38] <twb> I abuse that style all the time simply because I don't like 100-line apologia docstrings in between the 1-line function parameter and 5-line function body.
[07:33:40] *** Joins: Fiji (~Fiji@user/fiji)
[07:33:46] *** kevr is now known as scumbag
[07:33:54] *** Quits: jazzy (~jaziz@172.58.35.41) (Read error: Connection reset by peer)
[07:34:05] <stealth_> stdlib way to handling timer would be use `signal` or something
[07:34:19] *** Joins: jazzy (~jaziz@172.58.35.41)
[07:34:26] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 244 seconds)
[07:34:51] <stealth_> twb, o.O so # above the function, eh... that i didn't know help() picked up on thanks, you learn something new :)
[07:35:39] <stealth_> its looks like C style
[07:35:45] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:35:47] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:37:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b495-e64a-b23b-4c53.res6.spectrum.com) (Ping timeout: 252 seconds)
[07:39:58] *** Quits: Barones (~Barones@177.133.54.55) (Remote host closed the connection)
[07:40:25] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com)
[07:43:45] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:f4f9:eac6:15a3:9902)
[07:44:07] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Remote host closed the connection)
[07:44:25] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[07:46:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:46:54] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[07:48:32] <cloudbender> nice.  code stands out from comments
[07:48:33] <cloudbender> https://bpa.st/QWUA
[07:50:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[07:51:13] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (Ping timeout: 250 seconds)
[07:52:14] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[07:52:16] <cloudbender> but yellow comments, um, no
[07:52:18] <twb> O yeah that too.  My editor only lexes, not parses, so it can't tell what is a docstring
[07:54:38] *** Parts: aswsd (~helpme8@user/hlpme) (Once you know what it is you want to be true, instinct is a very useful device for enabling you to know that it is)
[07:54:41] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:57:08] <cloudbender> Go ahead a fess up $79.99 for SublimeText 3, totally worth it.
[07:57:12] <cloudbender> https://imgur.com/a/Lt1kn1R
[08:00:33] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[08:03:05] <cloudbender> It saved my but in the winter, very good for inspecting flakey PS3 print streams.
[08:03:15] <cloudbender> but==>butt
[08:04:52] <stealth_> cloudbender, the price has gone up to $99, still sublimetext is pretty good, been using it for years...
[08:05:06] <cloudbender> worth it
[08:05:26] <cloudbender> I'd buy a few licenses if I could afford it.  I use it everywhere
[08:05:37] <cloudbender> I do have one licensed copy
[08:06:16] <stealth_> they should change it to $5/month this way they make more $ at the same time give users a chance to pay in small chunks.
[08:06:28] <cloudbender> no.
[08:06:28] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[08:06:40] <cloudbender> subscription fatique each month
[08:06:49] <cloudbender> I'd rather pay for a year at a time
[08:07:36] <stealth_> its not per year, its till next release, so that like once every 3years or so?
[08:08:19] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: winds coming)
[08:09:08] <cloudbender> Not sure.  But the (guy ?) definitly earned (his ?) biskits with that product.  Very well done.
[08:09:13] <stealth_> $99 or $3/month sounds like a good way to go, you pay $108 over 3years
[08:10:45] *** Joins: hudo (~hudo@62.68.27.70)
[08:10:54] <stealth_> paying $99 upfront could discourage a lot of ppl from getting it.
[08:11:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:11:37] <twb> Not really interested in an editor I can't fix
[08:12:26] <stealth_> twb, see if you can open a 1MB+ file in your editor without it dying
[08:12:47] <twb> stealth_: sure I was editing 50MB save games the other day
[08:13:04] <stealth_> twb, what you using?
[08:13:13] <twb> It doesn't handle very well 500MB on one line unless you disable color
[08:13:16] <twb> stealth_: emacs
[08:13:47] <twb> If I was routinely editing 500MB files I'd probably use teco
[08:14:08] <twb> Since that can edit one disk block at a time
[08:15:29] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[08:15:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[08:18:17] <stealth_> twb, looks like this emacs is not bad
[08:18:18] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Remote host closed the connection)
[08:18:19] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[08:18:34] <twb> it's awful
[08:18:50] <twb> like two of its bundled IRC clients don't even support SASL
[08:19:23] <twb> And it took over 30 years to support Farsi properly
[08:19:23] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 244 seconds)
[08:19:42] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:19:53] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Remote host closed the connection)
[08:20:24] <stealth_> twb, so what you are saying it, you use it but you hate it? and you never bothered to "fix" that feature it didn't have/supported cause you wanted someone else to do it?
[08:21:40] <twb> I can fix little things like the SSH client
[08:22:03] <twb> opentype complex script support is a bit out of my league
[08:22:55] <stealth_> i get you. back to using sublime :)
[08:24:00] <twb> stealth_: /msg fsbot salespitch
[08:24:21] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[08:25:55] <stealth_> :/
[08:26:33] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[08:26:38] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[08:28:41] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:28:46] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 252 seconds)
[08:29:10] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[08:29:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:31:23] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[08:31:27] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[08:32:51] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:34:10] *** Joins: minip (minip@user/minip)
[08:34:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[08:34:18] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:35:45] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:10] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[08:40:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 244 seconds)
[08:40:56] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:44:06] *** Joins: Skyfire (~pyon@user/pyon)
[08:47:29] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[08:48:51] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Read error: Connection reset by peer)
[08:49:06] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[08:54:34] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:ca9f:b701:42e9:47c0)
[08:56:39] *** Joins: aswsd (~helpme8@user/hlpme)
[08:58:48] *** Parts: aswsd (~helpme8@user/hlpme) (Once you know what it is you want to be true, instinct is a very useful device for enabling you to know that it is)
[09:01:46] *** Quits: jazzy (~jaziz@172.58.35.41) (Ping timeout: 252 seconds)
[09:04:14] *** Joins: homura (root@2605:6400:c847:1486::6841)
[09:06:07] <ksynwa> Is there a way to check that every if-elif instance has an else statement at the end of it? Maybe through something like flake8?
[09:06:41] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:07:19] <twb> ksynwa: good question
[09:07:25] <twb> ksynwa: I don't have an answer
[09:07:40] <twb> flake8 is extensible, at least in theory
[09:08:05] <twb> flake8's basic rules come from https://pycodestyle.pycqa.org/en/latest/
[09:08:35] <twb> I don't see a "half branch" check there
[09:09:40] <twb> It's a pity python isn't haskell, where half-branches aren't meaningful
[09:10:39] <ksynwa> twb: Thanks.
[09:10:41] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com) (Quit: jarthur)
[09:11:29] <stealth_> ksynwa, why do you need to have an `else` statement?
[09:12:30] <twb> To show that you've considered the base case.
[09:12:37] <stealth_> ksynwa, `a = None: if condition == 1: a = 1 elif condition == 2: a = 2`
[09:12:58] <stealth_> `a = None;`
[09:13:06] <twb> It's an FP thing; it's how if/then/else worked ever since Lisp invented it in the 1970s
[09:13:11] *** Quits: Falcon| (~falcon@user/falcon/x-0540249) (Quit: Falcon|)
[09:14:24] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[09:14:26] <ksynwa> There's this project at work for which it could be useful if a warning could be emitted if a closing else statement is not provided
[09:14:43] <ksynwa> I personally don't think it's necessary but the employed asked me to check if it was possible.
[09:15:01] <ksynwa> I tried looking online but couldn't find anything so I thought I should ask here.
[09:15:12] <ksynwa> Hope that makes sense.
[09:15:16] <stealth_> that is silly
[09:15:32] <InPhase> ksynwa: grep " if " | wc -l; grep "else" | wc -l
[09:15:48] <twb> InPhase: grep -c
[09:15:55] <InPhase> twb: Or that.
[09:15:56] <twb> InPhase: except you need -o as well and -w
[09:16:02] *** Joins: MercilessDeth (~brad@136.49.61.2)
[09:16:05] <ksynwa> Lol
[09:16:13] <ksynwa> That might work. I'll try that out.
[09:16:19] <twb> It will break due to comments
[09:16:42] <twb> "# I told Fred if I have to write one more of these bloody factory factories, I'll cut his balls off"
[09:16:54] <ksynwa> Yeah you are right
[09:16:57] <InPhase> Comment issues can be fixed with regex.
[09:17:15] *** Quits: hudo (~hudo@62.68.27.70) (Ping timeout: 244 seconds)
[09:17:20] <ksynwa> It can be for # comments but what about """ comments
[09:17:29] <ksynwa> That would be a bit more difficult
[09:17:32] <InPhase> It'll still be faster as a check than figuring out any fancy system, if the goal is just a once-over.
[09:17:33] <twb> InPhase: at that point just use the bloody parser
[09:17:47] <twb> InPhase: ah "just a once over" is the key
[09:17:50] <InPhase> twb: For a once-over you can tolerate a few false positives.
[09:18:01] <twb> I was expecting this was for CI
[09:18:15] <InPhase> grep CI testing is not ideal.  ;)
[09:18:16] <twb> "auto-reject merges that have half-branches"
[09:18:26] <stealth_> ksynwa, does the company now have tests?
[09:18:36] <ksynwa> Yes we have a cicd pipeline
[09:18:57] <twb> ksynwa: you can write a flake8 plugin but I don't know how
[09:19:16] <twb> the built-in mccabe component might be a good reference
[09:19:16] <ksynwa> Yeah sure I can look into that.
[09:21:46] <ksynwa> Thanks twb
[09:21:48] <ksynwa> and everyone else
[09:22:19] *** Quits: Forty-Bot (~kvirc@pool-108-45-127-224.washdc.fios.verizon.net) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[09:24:56] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com)
[09:30:40] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Ping timeout: 240 seconds)
[09:30:49] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[09:32:39] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[09:32:39] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[09:32:50] <stealth_> ksynwa, you know... you could create a PR with flake8 see what they say? They might want to implement such a check
[09:33:12] *** Joins: fikran (~fikran@user/fikran)
[09:36:20] <ksynwa> stealth_: I feel if they wanted this they would have already implemented this
[09:36:29] <ksynwa> It's not something groundbreaking
[09:37:17] <ksynwa> I am in flake8 maintainer's discord channels so I could ask there
[09:38:04] *** Quits: emerent (~quassel@p200300cd5701a16dba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:38:14] <stealth_> ksynwa, at first i was skeptic myself, now i think its actually a good feature to have
[09:38:23] *** Joins: emerent (~quassel@p200300cd5701a15dba27ebfffed28a59.dip0.t-ipconnect.de)
[09:38:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:40:38] <stealth_> i actually did a simple `elif` search across the project and found couple of places where i should have added `else: raise NotImplementedError` even though it was have raised error anyways, now its a bit cleaner.
[09:43:09] *** Joins: mei (~mei@user/mei)
[09:43:11] *** Joins: Celeo (~Celeo@user/celeo)
[09:43:30] *** Quits: mei (~mei@user/mei) (Client Quit)
[09:44:12] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[09:45:02] <twb> stealth_: +1
[09:46:52] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:7102:ec92:2168:943d) (Read error: Connection reset by peer)
[09:47:20] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[09:47:38] *** Quits: homura (root@2605:6400:c847:1486::6841) (Changing host)
[09:47:38] *** Joins: homura (root@user/homura)
[09:48:51] *** Parts: shla (~root@user/shla) (The Lounge - https://thelounge.chat)
[09:50:22] *** Joins: mei (~mei@user/mei)
[09:52:10] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[09:53:34] *** Joins: upsala (~zcb@185.213.155.160)
[09:55:59] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[09:56:56] *** Joins: ice9 (~ice9@user/ice9)
[09:58:47] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:00:17] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[10:00:50] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[10:02:50] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[10:05:07] *** Joins: stoneware (~stoneware@user/stoneware)
[10:06:16] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[10:07:30] *** Joins: Forty-Bot (~kvirc@pool-108-45-127-224.washdc.fios.verizon.net)
[10:07:35] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[10:09:01] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:09:06] *** Joins: zaquest (~notzaques@5.128.210.178)
[10:11:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:19:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[10:19:50] *** Quits: emika (~emika@185.207.249.188) (Ping timeout: 256 seconds)
[10:20:01] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[10:20:19] *** Joins: emika (~emika@83.136.182.91)
[10:21:00] *** Joins: Samian (~Sami@2620:10d:c091:480::1:86be)
[10:22:04] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[10:22:13] <ksynwa> For an ast Node, is there a way to get the parent?
[10:22:13] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com) (Quit: jarthur)
[10:22:14] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:23:36] <twb> ksynwa: it's not just a property somewhere?
[10:23:51] <ksynwa> I have to verify first. Let me check.
[10:23:58] <twb> That seems like most useful feature #2 right after "line number"
[10:24:13] <twb> ksynwa: get a node and try help() and dir() on it or so
[10:24:27] *** Joins: fortuno51_ (~fortuno51@78.10.204.186)
[10:26:28] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Read error: Connection reset by peer)
[10:27:20] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[10:27:56] <ksynwa> twb: No I don't see it there
[10:29:13] *** Quits: fortuno51_ (~fortuno51@78.10.204.186) (Ping timeout: 252 seconds)
[10:30:14] <ksynwa> https://termbin.com/g6pd
[10:30:37] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:33:34] *** Quits: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com) (Ping timeout: 252 seconds)
[10:34:20] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Remote host closed the connection)
[10:34:33] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[10:34:43] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[10:36:18] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[10:38:22] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 244 seconds)
[10:39:09] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[10:39:48] *** Joins: carl-- (~carl-@185.103.188.130)
[10:42:25] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:42:32] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 245 seconds)
[10:44:13] <stealth_> ksynwa, what you trying to do?
[10:45:10] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 252 seconds)
[10:46:02] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Quit: Lost terminal)
[10:46:17] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:42] <ksynwa> stealth_: Basically if I find an offending If node, I want to check whether a parent is a function definition or not
[10:46:48] *** Joins: seednode (~seednode@user/seednode)
[10:48:14] <ksynwa> I mean
[10:48:41] <ksynwa> Whether the if block is inside a function definition or not. The depth doesn't matter.
[10:48:52] <ksynwa> Does that make sense?
[10:48:55] *** Joins: manti7 (~manti7@176.10.104.94)
[10:50:57] <stealth_> ya, its going to be a pain to write..
[10:52:10] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:f4f9:eac6:15a3:9902) (Ping timeout: 240 seconds)
[10:52:35] <stealth_> ksynwa, rather then trying to figure out parent, maybe you would find the function first, then see `if` exists inside it
[10:52:58] <hexnewbie> Wouldn't any recursive walk through a node tree, whether through ast.walk() or ast.NodeVisitor allow you to record where you are, and then use that to determine if you're under a function or not?
[10:53:50] *** Joins: zepolen (~zepolen@37.6.200.207)
[10:53:55] <hexnewbie> I've only used ast.NodeVisitor once to strip docstrings and annotations from source code for diffing purposes, but it's what I do with recursive XML parsers.
[10:54:12] <stealth_> ksynwa, fyi, one of gotcha might be what if the variable missing is in nonlocal/globals?
[10:54:22] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[10:55:09] <hexnewbie> I do apologize though, I may have missed the original problem being solved.
[10:57:27] <jinsun> pylint will complain about no else, but only if the branches are returning a value, https://pycodequ.al/docs/pylint-messages/r1710-inconsistent-return-statements.html
[10:59:09] <PanamaCity3003> ksynwa: just use the `ast` library and write your own linter, it's really easy--it sounds like you/coworker got burned recently lolllllllll
[10:59:12] <jinsun> (and also a return after the if-elif block counts as a else: return to it doesn't complain there too)
[11:01:28] <PanamaCity3003> ksynwa: oh, it sounds like you found your way there.  "For an ast Node, is there a way to get the parent?" if you haven't written this type of algorithm before, it can be tricky, you need to write a recursive algorthm, where you pass the parent object as an argument when recursing into a child node
[11:02:34] *** Joins: gusto (~Augustus@109.255.100.54)
[11:02:50] <PanamaCity3003> only annoyance is the `ast` library has a terrible __repr__ implementation, it makes it so hard to "see" what's going on
[11:03:19] *** Joins: mrwick (~mrwick@user/mrwick)
[11:04:50] <PanamaCity3003> you can call it pylinsun lol
[11:05:43] <PanamaCity3003> jinsun: what was the bug caused by this thing you want to lint?  I have to know lol
[11:07:37] *** Joins: Pickchea (~private@user/pickchea)
[11:08:54] <jinsun> PanamaCity3003: I was just telling what pylint already offers to ksynwa, I don;t think I had any bug that requires mandatory else feature to fix, maybe you wanted to ask ksynwa
[11:09:15] <ksynwa> PanamaCity3003: Thanks. That helped. I got it to work.
[11:09:22] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:09:35] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[11:10:15] <ksynwa> The code if anyone wants to give suggestions: https://termbin.com/vo6z
[11:11:01] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[11:11:45] *** Joins: gtristan (~tristan@223.38.29.207)
[11:12:04] <PanamaCity3003> ahh mixed up your names
[11:12:36] <ksynwa> PanamaCity3003: To answer your question: > what was the bug caused by this thing you want to lint?
[11:12:40] <gtristan> Anyone know of a python script which can validate that markdown links are not broken ?
[11:12:56] <gtristan> https://pypi.org/project/linkcheckmd/ <-- this one doesn't appear to work for relative links
[11:13:13] <gtristan> (to adjacent markdown files)
[11:13:36] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:13:42] <ksynwa> There isn't any bug. It's just that my employer just wants random stuff for some reason. I could go on a tirade about it but I think it's best not to.
[11:14:36] <ksynwa> gtristan: Maybe you could modify the code to make it work for relative links.
[11:14:57] <gtristan> yeah I'm looking for an easy fix ;-)
[11:15:05] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[11:15:18] *** Joins: gloin (~gloin@user/gloin)
[11:15:19] <gtristan> seems they have an issue open on that https://github.com/scivision/linkchecker-markdown/issues
[11:15:22] <gtristan> with no movement
[11:15:53] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Ping timeout: 256 seconds)
[11:16:12] *** Joins: gusto (~Augustus@109.255.100.54)
[11:16:57] <gtristan> a markdown linter does seem to be a thing many people would want to use, though... maybe it's the plethora of markdown flavors which makes this a daunting task
[11:16:59] <PanamaCity3003> ksynwa: haha that's even better, the code looks really great.  only thing it won't visit multiple nested ifs?  not sure how the NodeVistor works tho, so that'd be the only thing I can see
[11:18:12] <gtristan> sorry: https://github.com/scivision/linkchecker-markdown/issues/21 (incomplete link)
[11:18:37] <jinsun> ksynwa: the way pylint forces else is good enough I think, forcing else in other places will just make the code ugly I think, like I have some loops with if condition: continue, the else part is the rest of the loop that I don't want to indent, so to obey your rule I will add else: pass which is just ugly
[11:20:14] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:20:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[11:20:26] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[11:20:42] <ksynwa> PanamaCity3003: If there is an if-elif statement, then in the AST it is shown as an If node where If.orelse is a list with one element, the one element being another If node.
[11:20:45] *** Joins: arinov (~arinov@213.194.126.155)
[11:20:54] <ksynwa> Oh wait you are right
[11:21:00] <ksynwa> It won't work with nested ifs
[11:21:02] *** Joins: rtur (~weechat@mail.rtur.org)
[11:21:12] <ksynwa> jinsun: I think you are right too. I will keep that in mind.
[11:22:36] *** Joins: ravan (~ravan@user/ravan)
[11:23:10] <jinsun> but it is a nice challenge to implement I guess, I just won't force it on my code
[11:23:24] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[11:26:06] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[11:28:54] *** Quits: gggp (~textual@60.10.194.45) (Remote host closed the connection)
[11:29:00] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 244 seconds)
[11:29:32] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:30:33] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 244 seconds)
[11:31:07] *** Parts: parsnip (~parsnip@user/parsnip0) ()
[11:32:06] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[11:32:22] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[11:32:41] <PanamaCity3003> jinsun: word to that
[11:33:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:34:15] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:34:56] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:f4f9:eac6:15a3:9902)
[11:35:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:36:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:40:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[11:40:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[11:42:34] *** Joins: fikran (~fikran@user/fikran)
[11:42:40] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:ca9f:b701:42e9:47c0) (Ping timeout: 240 seconds)
[11:42:55] *** Joins: gggp (~textual@60.10.194.45)
[11:42:57] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 244 seconds)
[11:43:53] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:dfbf:13f2:6647:8cf6)
[11:44:24] *** Joins: kosh (~kosh@user/kosh)
[11:44:53] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[11:46:07] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:47:30] *** Quits: djangoaddict (~djangoadd@2601:8c:c100:6820:6981:ff88:fe4b:fcf1) (Quit: Client closed)
[11:47:37] *** Joins: kpiyushlucky (~kpiyushlu@106.223.44.32)
[11:50:44] *** Joins: damoreno (~damoreno@redhat/damoreno)
[11:51:06] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:52:10] *** Joins: brabrax (~brabrax@user/brabrax)
[11:55:34] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 252 seconds)
[11:56:15] *** Joins: tspng (~tspng@2a02:168:a1a1:1:65a4:74ea:ad27:364f)
[11:59:39] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[11:59:53] <damoreno> Hello. I need to define a base dataclass with a function that gets a map of values and create a class assigning those values to the class fields. I have some example code here: https://bpa.st/ZINQ. This seems to work, but the ide complains heavily about two things: Type mismatch in get_A and get_B return type and about cls getting an unexpected argument (as Base doesn't have any fields). How could a fix
[11:59:59] <damoreno> those warnings?
[12:00:08] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[12:02:58] <jinsun> use TypeVar for the get_A and get_B problem, instead of taking Base and returning Base, take T and return T
[12:04:14] <lericson> T with milk
[12:04:27] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[12:04:29] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[12:04:44] <jinsun> for the from_dict thing I thought there is already a function, so best solution would be to not implement (though maybe attrs has it not dataclass)
[12:05:27] *** Quits: doko (~doko@2a02:8106:1a:7600:7474:87ee:4196:59d9) (Ping timeout: 240 seconds)
[12:06:23] <PanamaCity3003> lericson: lmao
[12:06:50] <u4t> what's all this about BaseT?
[12:07:10] *** Joins: Pixi (~Pixi@user/pixi)
[12:07:22] <u4t> 100BASE-T
[12:07:37] <lericson> the Boston T Party
[12:08:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[12:08:25] *** Joins: theprophet (~theprophe@85.114.228.184)
[12:08:54] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:09:31] <jinsun> damoreno: actually expected class should be type[T], not T
[12:09:41] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[12:10:11] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[12:10:25] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[12:10:28] *** Joins: lucad111 (~lucad111@2a02:2e02:9991:900:e96a:7f6b:edd7:c4b7)
[12:11:55] *** Quits: nergar (~Nergar@177.225.152.16) (Read error: Connection reset by peer)
[12:12:26] *** Joins: Elzington (~Elzington@68.235.43.174)
[12:14:03] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[12:14:35] *** Joins: dreadedfrog (~user@193.160.129.69)
[12:15:11] <damoreno> jinsun: Type[T] you mean, right? And for the return tipes... I'm actually not sure how to do it. Would you mind to show me an example?
[12:15:22] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[12:15:58] <jinsun> Type[T] before 3.9 yes, with 3.9 you can do type[T] as well
[12:16:51] <damoreno> jinsun: I'm on 3.8
[12:18:16] <lericson> from __future__ import annotations
[12:18:17] <lericson> damoreno:
[12:18:39] <lericson> at least somebody told me this yesterday, enables the 3.9 style annotations in 3.7 and 3.8
[12:18:58] *** Joins: Mija (~Mija@user/mija)
[12:19:19] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[12:19:47] *** Joins: rendar (~rendar@user/rendar)
[12:20:44] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[12:20:56] *** Quits: kpiyushlucky (~kpiyushlu@106.223.44.32) (Quit: Client closed)
[12:21:43] <jinsun> even 3.10 style
[12:22:21] <lericson> what's new about annotations in 3.10?
[12:23:15] <jinsun> main one is that you can use bitwise or instead of Union
[12:23:32] <jinsun> `str |  int` instead of Union[str, int]
[12:24:14] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[12:24:18] *** Joins: Norore (~weechat@balder.ens.fr)
[12:24:56] <lericson> ah
[12:25:30] <lericson> what about typevars
[12:25:38] <lericson> you still need to define T = TypeVar('T')?
[12:27:10] *** Joins: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il)
[12:28:27] <jinsun> yes TypeVar is same as before
[12:29:27] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[12:29:49] *** Quits: tspng (~tspng@2a02:168:a1a1:1:65a4:74ea:ad27:364f) (Quit: Leaving, bye!)
[12:31:03] <jinsun> damoreno: the bet I could do is this https://mypy-play.net/?mypy=latest&python=3.10&flags=show-error-codes%2Cstrict&gist=0c76ce59533665e2dd9ae03fd585e61c
[12:31:38] <jinsun> that one error is mypy bug in my opinion, it is just stupid, and pyright doesn't complain
[12:32:59] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[12:33:32] <jinsun> so I would just add a `# type: ignore[call-arg]` comment on that line
[12:34:56] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:35:14] <lericson> why does it do that
[12:35:22] <jinsun> damoreno: so here is your version without errors https://mypy-play.net/?mypy=latest&python=3.10&flags=show-error-codes%2Cstrict&gist=ae26ad9c787de3b9b85b592e928b5b2a
[12:37:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:37:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:37:29] *** Joins: shad (~shad@user/shad)
[12:37:51] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:38:41] <jinsun> lericson: no idea, the only related bug reports I could find on github were typeshed problems and were closed, but nothing specific to dataclass and inheritance
[12:39:33] <damoreno> jinsun: oh, I get it now! Thank you man.
[12:39:47] <lericson> it's funny, this type of bug is exactly what people opposed to IDEs over the years have been complaining about
[12:40:03] *** dcaro_away is now known as dcaro
[12:40:08] <lericson> where dynamism gets in the way of code analysis
[12:40:19] <lericson> and it fails, and nobody can explain why
[12:41:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[12:43:50] <lericson> can you mypy a jupyter notebook?
[12:44:16] <lericson> and is mypy the google effort or what was that called?
[12:45:52] *** Joins: amoe (~amoe@visarend.solasistim.net)
[12:47:22] <jinsun> jupyer has mypy plugin I think, I never used because I just use vscode
[12:47:35] <jinsun> the google thing is pytype
[12:47:55] <jinsun> mypy is independent
[12:48:20] *** Parts: amoe (~amoe@visarend.solasistim.net) ()
[12:50:15] *** Joins: diamondbond (~diamondbo@175.157.234.192)
[12:50:42] *** Joins: nomic (~nomic@185.192.69.188)
[12:51:13] *** Joins: amoe (~amoe@visarend.solasistim.net)
[12:52:11] *** Quits: zepolen (~zepolen@37.6.200.207) (Ping timeout: 244 seconds)
[12:53:06] <amoe> In the Flask test client, I want to set a cookie using the server name, but I don't want to hardcode 'localhost' into the test.  Is there any way to ask the Flask test client which server it is set to make requests to?
[12:54:07] *** Parts: dreadedfrog (~user@193.160.129.69) (ERC (IRC client for Emacs 26.3))
[12:54:23] *** Joins: zepolen (~zepolen@athedsl-4550038.home.otenet.gr)
[12:54:45] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:55:17] *** Joins: ns123 (~Thunderbi@119.160.168.54)
[12:57:33] *** Joins: dvx (~dvx@185.63.97.64)
[12:57:42] *** Quits: ns123 (~Thunderbi@119.160.168.54) (Quit: ns123)
[12:58:25] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[12:58:52] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:58:59] *** Joins: ns123 (~Thunderbi@119.160.168.54)
[12:59:14] *** Joins: cheater (~Username@user/cheater)
[13:02:06] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[13:02:56] *** Joins: zln (~golluq@c80-217-230-193.bredband.tele2.se)
[13:03:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:03:58] *** Joins: plastico (~plastico@neomutt/plastico)
[13:04:07] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Ping timeout: 256 seconds)
[13:04:53] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:05:44] <zln> https://bpa.st/U5AQ <- trying to do something with list comprehension. Anyone care to look at it? want to add elements in a list to another in turn but cycle from beginning to end as long as there is "space"
[13:06:22] *** Joins: legola (~legola@46.235.100.27)
[13:07:39] *** Joins: retrosenator (~retrosena@91.sub-174-247-27.myvzw.com)
[13:07:47] <retrosenator> how do I get version from package from egg?
[13:07:58] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[13:08:10] *** Quits: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:08:31] *** Quits: Spydar007 (~spydar007@user/spydar007) (Remote host closed the connection)
[13:08:32] <retrosenator> it is in EGG-INFO/PKG-INFO
[13:08:34] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[13:08:53] *** Joins: Spydar007 (~spydar007@user/spydar007)
[13:09:36] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:11:20] <jinsun> retrosenator: just use https://docs.python.org/3/library/importlib.metadata.html#distribution-versions
[13:11:25] <bjs> zln: I don’t know what “space” means, you even put it in quotes without explaining ;)
[13:12:22] <retrosenator> didn't work
[13:12:36] <retrosenator> oh wait
[13:12:49] <retrosenator> it works, the name is different than the import
[13:12:53] <retrosenator> ok thanks!
[13:13:18] *** Joins: Tuju (~tuju@214-204-50-195.sta.estpak.ee)
[13:13:37] *** Joins: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de)
[13:14:01] <Tuju> does anyone know is there a way to get psycopg2 conn.mogrify() to return utf-8 instead of bytes object?
[13:14:13] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:14:24] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 244 seconds)
[13:14:35] <zln> bjs: sorry, if user enter 9, I want to add from list to another element for element, but if the first list is 5 elements then I want to start adding from beginning of the first list until 9
[13:14:39] <zln> if it makes sense?
[13:15:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:16:28] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 244 seconds)
[13:17:43] *** Quits: ns123 (~Thunderbi@119.160.168.54) (Quit: ns123)
[13:19:26] *** Joins: doko (~doko@2a02:8106:1a:7600:e98d:a0e:1892:1c)
[13:19:45] <bjs> zln: why a list comprehension?
[13:20:02] <zln> just wondered if it was possible in a convenient way
[13:20:29] <bjs> zln: well it sounds like slicing: `my_basket = fruits[:space]`
[13:21:33] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:22:11] <zln> bjs: but in the case of slicing, when fruits is exhausted, it stops, I want it to start over as long as space
[13:22:22] *** Quits: Samian (~Sami@2620:10d:c091:480::1:86be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:22:39] <bjs> zln: itertools has some stuff to do that for you nicely
[13:23:00] <bjs> (specifically cycle and islice)
[13:23:01] *** Joins: Dev0n (~Dev0n@user/dev0n)
[13:23:16] <zln> bjs yes there is a cycle I know of. Just tried to do it more manually :D
[13:23:46] <bjs> but it's probably just as easy to do manually,  you can always work out an index : `fruits[10]` might fail but `fruits[10 % 9]` wraps around at 9
[13:24:14] <Tuju> looks like someone else feels the pain too https://psycopg.lighthouseapp.com/projects/62710/tickets/197-python-3-cursorquery-returns-bytes-instead-of-str
[13:24:37] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[13:25:16] <zln> bjs, sound interesting, what should I google to learn more about that?
[13:25:22] <bjs> zln: about what
[13:25:29] <zln> wraping around with that syntax
[13:26:05] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:26:15] <bjs> zln: % is just one of the division operators, the remainder (also called "modulo")
[13:27:17] <zln> ah, never thought of using modulo in this context
[13:30:56] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:31:07] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:9086:3bc5:d10c:cbaa)
[13:31:36] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[13:31:58] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:37:12] *** Quits: gtristan (~tristan@223.38.29.207) (Remote host closed the connection)
[13:37:52] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[13:43:26] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:47:36] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[13:48:19] *** Joins: raxor2k (~raxor2k@46.230.130.144)
[13:48:22] <raxor2k> bjs: are you here
[13:48:35] <bjs> raxor2k: hi
[13:48:42] <bjs> you don't have to ping me every time, you can just ask your questions
[13:49:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[13:49:56] <raxor2k> bjs: now regarding the stuff from yesterday, can you help ? https://bpa.st/DWLQ
[13:50:59] <bjs> raxor2k: I really suggest that you make like, a dict for each ID you see.  Take a look at something like https://bpa.st/TTHQ
[13:51:04] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[13:51:40] *** Joins: fanis30 (~anon@adsl-180.37.6.1.tellas.gr)
[13:51:56] *** Joins: fikran (~fikran@user/fikran)
[13:52:48] <raxor2k> bjs: so i need to add the dicts to function parameters or is that just something you suggest ?
[13:53:08] <jinsun> hehe and lol as variable names :D, I thought it was only one of my weird coworkers who did that
[13:53:17] <bjs> raxor2k: no the function is totally irrelevant,  try understand what it's actually doing
[13:54:11] *** Joins: Naan (~Naan@user/naan)
[13:54:33] <bjs> raxor2k: look how it's making a brand new dictionary, and then it's going over a list of dictionaries and for each ID that it hasn't seen before it's creating a new dictionary just for that ID...
[13:55:53] <bjs> raxor2k: iirc I've already shown you an example of doing something similar a while ago,  you really should take some time to try understand what my function is doing and try out different ideas and play around in a little blank file trying things out before trying to copy/paste it into your own code
[13:57:09] *** Joins: daoudr (~daoudr@178.197.197.112)
[13:57:18] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[13:58:10] <raxor2k> bjs: i really shouldnt need to do it like that ..
[13:58:13] *** Joins: NeoCore (~neocore@195.200.221.233)
[13:58:17] <bjs> raxor2k: do what like what
[13:58:19] <raxor2k> or maybe i can do that at the end of the code
[13:58:30] <raxor2k> the way i did it worked perfectly somewhere else
[13:58:41] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Quit: Client closed)
[13:59:10] <bjs> raxor2k: the "ways" you have shown me have all been very broken and confused and are showing your lack of understanding of programming.  You still need to practice and get experience and to try understand and learn.
[13:59:11] <zln> what would the right syntax be for my invalid syntax: my_basket = [fruits[i] for i % space in range(space)]
[13:59:34] <bjs> zln: uh you probably meant `fruits[i % space] for i in ...`
[13:59:52] <bjs> zln: also noet that `% space` is probably wrong, you want to wrap around at the end of the list of fruits not at the end of the space
[13:59:52] <zln> bjs thanks >D
[13:59:54] <raxor2k> yes sure, and everything is my fault as usual
[14:00:02] <zln> ah
[14:00:06] <zln> >(
[14:00:38] <bjs> raxor2k: it's not your "fault" it's just that you're inexperienced, e.g. here where you say that you shouldn't have to do this when all of your own examples have a dict-per-ID it seems obvious you'll need to make a dict for each ID ...
[14:01:03] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 276 seconds)
[14:01:36] <zln> bjs: thanks! worked like a charm: my_basket = [fruits[i % len(fruits)] for i in range(space)]
[14:02:02] <bjs> raxor2k: when it comes to copy/pasting code from one place to another you really need to understand how the code works and importantly *how to modify it* to work in the new scenario
[14:02:05] <bjs> zln: looks good!
[14:02:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[14:02:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:02:49] <raxor2k> bjs: who said im copy pasting ?
[14:02:58] <raxor2k> im writing everything down from scratch several times
[14:03:01] <raxor2k> doesnt work = start again
[14:03:05] <raxor2k> keeps working = continue
[14:03:19] <bjs> raxor2k: I did.
[14:03:22] *** Joins: y1n (~y1n@84-115-64-31.wifi.dynamic.surfer.at)
[14:03:41] <bjs> raxor2k: anyway, my approach here is exactly the _kind of_ thing you want to do the merging you described.
[14:03:52] <raxor2k> bjs: no its not
[14:03:53] <raxor2k> but ok
[14:03:55] <bjs> Where dicts with the same ID get 'merged' together into a new dict for that ID
[14:03:57] <raxor2k> ill take  look at that later
[14:04:00] <bjs> raxor2k: okay... well, why is it not?
[14:04:01] <raxor2k> im trying something different now
[14:04:10] <bjs> raxor2k: well don't just say "no its not" without explaining
[14:07:36] *** Quits: dcaro (~dcaro@user/dcaro) (Quit: ZNC 1.8.2 - https://znc.in)
[14:07:58] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[14:07:59] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:08:20] *** Joins: dcaro (~dcaro@user/dcaro)
[14:08:35] <audiocat> whats the diff between class MyClass():, class MyClass:, class MyClass(object):, and class MyClass(SomeSuperClass):, and are there any other ways to define a class?
[14:08:51] <raxor2k> bjs: you say its my lack of experience? well, than i start writing it all over again and learn :)
[14:09:06] <raxor2k> so i dont need to "copy paste" ur code
[14:09:24] <bjs> audiocat: the first three are the same,  the last makes MyClass inherit from SomeSuperClass
[14:09:36] <bjs> raxor2k: okay but why does my code not do what you want?
[14:10:02] <audiocat> bjs, ok thanks
[14:10:28] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:10:52] <raxor2k> bjs: because it does not do what i want it to do
[14:10:59] <bjs> raxor2k: why not?  what does it do wrong?
[14:11:48] <bjs> raxor2k: what about something that does this https://bpa.st/UCSA ?
[14:13:02] *** Joins: gggp (~textual@60.10.194.45)
[14:14:43] *** Joins: __that__ (~Guest57@195.59.68.214)
[14:14:48] <__that__> Hi all
[14:15:36] <__that__> does anyone has the slightest idea of how to update one depedency - and its secondary dependencies- only using pipenv please? it does update all!
[14:16:22] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 252 seconds)
[14:16:30] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:17:17] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:17:36] <raxor2k> i just hate the person who made dicts
[14:17:39] <raxor2k> really really
[14:17:49] *** Joins: shad (~shad@user/shad)
[14:17:54] <bjs> raxor2k: there's nothing wrong with dicts
[14:18:17] <raxor2k> im gonna get cancer one day because of this
[14:18:20] <__that__> or alternatively how to instruct pipenv to install psycopg2 on Windows and psycopg2-binary on linux?
[14:18:50] <bjs> raxor2k: you just need more experience, e.g. look at my https://bpa.st/UCSA bpaste.  This is the kind of thing you wanted to do yeah?
[14:20:27] <raxor2k> yes
[14:20:29] <raxor2k> but not in that way
[14:20:35] <raxor2k> because i know there is a simpler way
[14:20:37] <bjs> raxor2k: in what way?
[14:20:56] <bjs> raxor2k: just stop,  look at the output. there are 4 dicts in the output one for each ID,  there's no way around making a dict for each ID
[14:24:09] *** Quits: diamondbond (~diamondbo@175.157.234.192) (Ping timeout: 244 seconds)
[14:24:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:24:56] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:27:13] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:27:15] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 244 seconds)
[14:27:21] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[14:27:44] <__that__> Actually out of curiosity, would pip install understand that provided it is running on Linux the package to install is  psycopg2-binary while on Windows should be  psycopg2? What could I look at the setup.py psycopg2's source code in order to know if they are handling this?
[14:29:12] *** Quits: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il) (Quit: Konversation terminated!)
[14:29:26] <__that__> I am talking about pip just to understand what has to happen for the windows/linux scenario described above to occur
[14:29:32] *** Joins: Ivyy (~Ivyy@2001:a61:13eb:f801:5a89:d3a4:4615:df21)
[14:29:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[14:30:50] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:32:57] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[14:34:26] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:34:40] <The-Compiler> __that__: I don't think there's anything in psycopg2 which would make it fall back to psycopg2-binary automatically
[14:35:04] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-0258-933a-d6c3-bfc1.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:35:11] *** Joins: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com)
[14:35:16] <The-Compiler> __that__: pip has environment markers for the OS, similarly on how you'd have a dependency only for a certain Python version: https://www.python.org/dev/peps/pep-0508/#environment-markers - I don't use pipenv, but I suppose it should have something similar
[14:35:32] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:36:16] <The-Compiler> __that__: https://pipenv-fork.readthedocs.io/en/latest/advanced.html#specifying-basically-anything
[14:36:42] *** Joins: p-i- (~Ohmu@2403:6200:8870:da61:85fe:6e1c:4ca0:1396)
[14:37:13] <__that__> The-Compiler, thanks. Yeah, I know that. However it is a bit more complicated than that. there will be a clash of dependencies if I do that
[14:37:41] *** Quits: flyback (~flyback@2601:540:8201:1e60:149e:edea:ab35:5e06) (Ping timeout: 250 seconds)
[14:38:44] <p-i-> I'm trying to fast-download a file using `raw = session.get(url, stream=True).raw`. As there's a 2-3x variance in download time I split it into 4 threads and try 4 simul. downloads. But the result is slower.
[14:39:15] <p-i-> I doubt it's maxxing my connection, as it's a 150k download and I have 25GB bandwoth.
[14:39:33] <p-i-> What could be the cause?
[14:40:01] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[14:40:24] <supakeen> What is the range of variance in an absolute unit (seconds)?
[14:40:41] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Ping timeout: 244 seconds)
[14:40:55] <p-i-> supakeen: 15ms to 40ms
[14:41:17] *** Quits: damoreno (~damoreno@redhat/damoreno) (Quit: leaving)
[14:41:23] <supakeen> What that absolute time it could be anything from general network variance to scheduling, etc.
[14:41:57] <raxor2k> bjs: and your first paste(code) and second paste(output) doesnt make sense at all
[14:42:04] <bjs> raxor2k: why?
[14:42:35] <raxor2k> because your function is about dicts
[14:42:37] *** Quits: daoudr (~daoudr@178.197.197.112) (Quit: Leaving)
[14:42:42] <raxor2k> and the output is a list containing dicts
[14:42:44] <p-i-> Actually variance is 10ms to 150ms, which is huge
[14:43:12] <bjs> raxor2k: well sure my function wasn't finished
[14:43:20] <bjs> you can just return list(merged.values()) or something if you want a list
[14:43:26] <supakeen> I don't feel with those numbers it's actually huge, you're still well within the range of anything can affect it.
[14:43:34] <supakeen> A few retransmissions and you're there.
[14:44:14] <supakeen> Another process on the machine getting priority, etc.
[14:44:40] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[14:45:08] *** Joins: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl)
[14:45:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[14:46:20] *** Joins: emika5 (~emika@185.207.249.231)
[14:47:27] <KirkMcDonald> Yeah, the boss on its own isn't that huge a deal.
[14:47:43] *** Quits: emika (~emika@83.136.182.91) (Ping timeout: 252 seconds)
[14:47:43] *** emika5 is now known as emika
[14:47:48] <raxor2k> bjs: what am i doing wrong here ? https://bpa.st/KFUA
[14:47:54] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:48:12] <bjs> raxor2k: why are you trying to smush everything into one loop?
[14:48:26] <raxor2k> bjs: is that not allowed?
[14:48:33] <KirkMcDonald> Ack, typed that in the wrong window.
[14:48:40] *** Lysergsaeure is now known as acidsys
[14:48:47] <bjs> raxor2k: if you do it correctly but why not just loop over p_muscle_group_list, do all the work and then a second loop over s_muscle_group_list
[14:50:09] <raxor2k> bjs: im 100 percent sure i did this yesterday
[14:50:11] <raxor2k> but im gonna try again
[14:50:21] <bjs> raxor2k: well then,  you did it wrong?  i don't know what to say
[14:50:29] *** Joins: flyback (~flyback@2601:540:8201:1e60:404a:1b0c:a28:6844)
[14:51:47] *** Quits: zepolen (~zepolen@athedsl-4550038.home.otenet.gr) (Ping timeout: 245 seconds)
[14:52:03] *** Quits: NeoCore (~neocore@195.200.221.233) (Ping timeout: 244 seconds)
[14:52:27] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[14:52:52] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[14:53:32] *** Quits: y1n (~y1n@84-115-64-31.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[14:53:46] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 252 seconds)
[14:53:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:54:46] *** Joins: DerpGusta (~quassel@user/derpgusta)
[14:55:32] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[14:57:23] *** Joins: reset (~reset@user/reset)
[14:59:16] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 252 seconds)
[15:00:18] <raxor2k> bjs: and still im getting the same error when trying to add them together: https://bpa.st/MDIA
[15:00:24] <theprophet> guys does multithreading means more then one process being run in program serving 1 goal?
[15:00:26] <raxor2k> ...
[15:00:57] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Ping timeout: 245 seconds)
[15:01:06] <bjs> raxor2k: why does muscle_group_ID not have a secondary_muscle_points and what should happen in that case?
[15:01:51] <raxor2k> bjs: your talking about ID 2 right?
[15:01:52] <bjs> theprophet: well processes and thread aren't the same thing.  But that's the idea yes,  multiple threads that are running "at the same time" (concurrently) doing perhaps different things (i.e. each reading a different file or website or something)
[15:01:55] <raxor2k> nothing in that case
[15:01:56] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:02:28] <theprophet> @bjs thanks
[15:02:44] <bjs> raxor2k: yeah sorry, ID 2.  Nothing?  Well your loop on line27 *always* tries to add the secondary_muscle_points  to the primary_muscle_points no matter what.  Maybe you should *check* if the dict even has a secondary_muscle_points  before trying to do that?
[15:03:12] <raxor2k> bjs: like i did earlier? ok :)
[15:03:15] <bjs> theprophet: processes are like starting separate programs on your computer,  like if you opened two copies of `python` at the same time.  Threads are inside the same program
[15:03:15] <raxor2k> just a second
[15:03:25] <bjs> raxor2k: possibly, I don't know what you did earlier
[15:03:44] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[15:04:13] <raxor2k> bjs: i will get pissed if this work
[15:04:18] <theprophet> bjs gotcha. so in other words its multitasking
[15:04:18] <bjs> raxor2k: why?
[15:04:40] <bjs> theprophet: yes,  a "task" is a generic term for threads and processes (and other things).
[15:04:56] <theprophet> bjs thanks
[15:05:33] <raxor2k> bjs: this didnt work, thank god: https://bpa.st/MFSQ
[15:05:37] <raxor2k> otherwise i would have been pissed
[15:06:20] <theprophet> raxor2k are learning,or writing a program?
[15:06:26] <theprophet> you*
[15:06:43] <raxor2k> both
[15:06:44] *** Joins: y1n (~y1n@84-115-64-31.wifi.dynamic.surfer.at)
[15:07:05] <theprophet> when did you first start to learn python?
[15:07:11] <bjs> raxor2k: that's not how you check if a key exists in a dict.  `if "secondary_muscle_points" not in merged:`  see https://docs.python.org/3/tutorial/datastructures.html#dictionaries
[15:07:36] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[15:08:04] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[15:09:20] <bjs> raxor2k: uh except `merged` is the wrong dict to check, you want `if "secondary_muscle_points" not in i` probably. again, see the tutorial (and think about what the code is doing)
[15:09:53] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[15:10:51] <theprophet> bjs for how long you have been coding?
[15:11:25] <bjs> theprophet: hmm,  i'm not really sure.  More than one decade but less than two
[15:12:10] <theprophet> bjs wow , how old are you?
[15:12:20] <bjs> theprophet: more than two decades but less than three :)
[15:12:24] *** Joins: besnn (~besnn@user/besnn)
[15:12:34] <theprophet> i am impressed
[15:12:36] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[15:12:57] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[15:12:59] * nedbat listens
[15:13:01] <theprophet> to code more then 10 years, holy moly nice man
[15:13:02] <The-Compiler> :D
[15:13:07] <raxor2k> bjs: i didnt get the last thing u said
[15:13:25] <raxor2k> i should not check the merged dict ?
[15:13:27] *** Parts: Tuju (~tuju@214-204-50-195.sta.estpak.ee) (tralla laa)
[15:13:35] <The-Compiler> Same, I think :) 28, started programming with 12, switched to Python with 18
[15:13:37] <bjs> raxor2k: probably not, you already have `i`
[15:13:39] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Remote host closed the connection)
[15:14:16] <The-Compiler> but yeah, I suppose nedbat has been programming for longer than 10 years :)
[15:14:21] <theprophet> well, i am little bit late, i am 33 and started to learn python about 1 month ago
[15:14:38] <KirkMcDonald> I have been programming for... about 28 years.
[15:14:48] <nedbat> The-Compiler: I've been *blogging* about programing for 19 years :)
[15:14:56] <theprophet> KirkMcDonald your name says all tbh.
[15:15:07] <supakeen> and i thought i was old
[15:15:17] <The-Compiler> nedbat: I once wanted to look at all your blog posts because everything seemed quite interesting, I gave up pretty quickly
[15:15:25] <KirkMcDonald> If you count screwing around with BASIC when I was a kid.
[15:15:31] <The-Compiler> theprophet: it's never too late to start!
[15:15:46] <nedbat> The-Compiler: 2532 posts is a lot to read :)
[15:15:55] <theprophet> The-Compiler in normal country i guess.
[15:16:59] <theprophet> The-Compiler my country has 7 mill pop and only 1 guy teaches the python.
[15:17:29] <theprophet> litteraly
[15:18:10] <theprophet> but i guess its never to learn anything in the world.
[15:18:20] <theprophet> late*
[15:19:48] <bjs> theprophet: probably the people who invented programming were older than you are when they did
[15:19:48] <bjs> :)
[15:20:33] <theprophet> bjs lmao good point hands down
[15:20:36] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[15:20:40] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Max SendQ exceeded)
[15:20:48] <raxor2k> bjs: i mean come on.. surely on of these must be working.. https://bpa.st/47GA
[15:20:51] <raxor2k> its just getting boring now
[15:21:05] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[15:21:15] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Remote host closed the connection)
[15:21:20] <bjs> it's like people who do music,  often people worry if they didn't start learning instruments when they were young children then they learn jimi hendrix didn't get his first guitar until he was well into his teenage years
[15:21:40] <bjs> raxor2k: again you *dont* want to check merged
[15:21:56] <bjs> `i` is the dict with the things in it, you need to think about how the code is working
[15:22:10] <The-Compiler> nedbat: wow
[15:22:13] <raxor2k> bjs: i need to add do list(once again...) and then check?
[15:22:22] <bjs> raxor2k: no you need to *not check merged* but check i
[15:22:35] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[15:22:39] <bjs> raxor2k:   `if "secondary_muscle_points" in i: ...`
[15:22:55] <theprophet> bjs i guess ur right
[15:24:20] *** Joins: spuz (~spuz@213.129.88.97)
[15:25:04] *** Joins: Matheo_bis (~matheo@user/matheo-bis/x-4309430)
[15:25:56] <bjs> theprophet: just keep at it, there's a lot to learn and it takes a while but it eventually fits together
[15:26:20] *** Quits: Matheo_bis (~matheo@user/matheo-bis/x-4309430) (Client Quit)
[15:26:20] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:26:23] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[15:26:51] <theprophet> bjs i am learning everyday for atleast 12 hours, how long you think ill need to start coding?
[15:27:15] <raxor2k> bjs: thank you, its working
[15:27:18] <raxor2k> finally
[15:27:39] <theprophet> @bjs i am currently unemployed and i gotta lot of time on my hands. and ive been learning for past month everyday minimum 8 hours.
[15:28:20] <bjs> theprophet: no idea, it's like asking "if i pick up a guitar now how long before I can play",  the answer obviously would depend on how long you spent practicing, how well it "clicks" with you, what kind of things you want to do and at what point you will consider yourself able to "Play"
[15:29:20] <theprophet> bjs well, i wanna work with AI, light games, software to sell, or android apps. that kinda stuff
[15:30:10] <ksynwa> theprophet: That's very varied
[15:30:18] <theprophet> bjs well i wanna create something that will bring money everyday you know? maybe in small amouts but still.
[15:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:30:57] <theprophet> ksynwa well, it is what it is .
[15:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:31:10] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 252 seconds)
[15:31:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[15:31:31] *** Joins: DerpGusta (~quassel@user/derpgusta)
[15:33:05] <raxor2k> theprophet: my biggest advice is: DONT follow tutorials, make your own small programs
[15:33:47] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 245 seconds)
[15:34:00] <theprophet> raxor2k , i was talking with my friend yesterday and thats exactly what i was saying, it is good to hear that frome somebody else to, i will keep that in mind ., thanks
[15:34:15] <theprophet> too*
[15:34:23] <raxor2k> theprophet: that was one of my biggest mistakes i did
[15:34:43] <theprophet> raxor2k can you be more specific,?
[15:35:44] <theprophet> raxor2k i mean, i have my own views on that, but how is that turned badly for you?
[15:36:07] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[15:36:36] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:36:38] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:877e:1920:40b6:7524)
[15:38:23] *** Joins: goldfish (~goldfish@user/goldfish)
[15:38:44] <raxor2k> theprophet: you follow a tutorial, or a youtube video, and you code towards that, and then automatically you think youre good
[15:38:47] <raxor2k> thats what happened to me
[15:38:56] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:39:22] <theprophet> raxor2k gotcha , thanks for the advice. one in a million bro. gorgeous advice.
[15:40:09] <raxor2k> just start with a small program, think of yourself : "what do i need? a calculator, a small script to collect words?" etc
[15:40:17] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[15:40:18] <raxor2k> dont pust yourself too much
[15:40:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[15:40:43] <theprophet> raxor2k got it , thanks
[15:41:47] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[15:42:59] *** Quits: __that__ (~Guest57@195.59.68.214) (Quit: Client closed)
[15:43:20] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:44:26] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:47:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 244 seconds)
[15:48:50] *** Quits: raxor2k (~raxor2k@46.230.130.144) ()
[15:49:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[15:52:04] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[15:52:37] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:52:39] *** Joins: gggp (~textual@60.10.194.45)
[15:53:21] *** Parts: domhnall (~developer@user/domhnall/x-2887755) ()
[15:53:43] *** Quits: y1n (~y1n@84-115-64-31.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[15:55:44] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:57:13] *** Joins: keir (~keir@user/keir)
[15:57:57] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[15:59:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[15:59:17] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[16:01:17] *** Joins: fikran (~fikran@user/fikran)
[16:02:44] *** Joins: ravan (~ravan@user/ravan)
[16:03:46] <gitesh> what does interact mean in computer science?
[16:04:08] <Helle> gitesh: depends on the context
[16:05:02] <gitesh> Helle: "Usually, each object definition corresponds to some object or concept in the real world and the functions that operate on that object correspond to the ways real-world objects interact."
[16:05:32] *** Joins: y1n (~y1n@84-115-65-240.wifi.dynamic.surfer.at)
[16:05:35] <gitesh> are dictionries, tuples, lists are world objects in python?
[16:05:36] <jeho2> the use of "interact" isn't specialized
[16:05:42] *** jeho2 is now known as jeho
[16:06:34] <jeho> kind of.. you don't see tuples laying around on your desk, but conceptually if you understand what one is.. it kind of sticks in your mind as a "thing"
[16:06:40] <gitesh> that is amazing that functions of object can their states
[16:07:41] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:11:04] *** Joins: shad (~shad@user/shad)
[16:11:41] *** Joins: zepolen (~zepolen@37.6.200.207)
[16:12:14] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:12:25] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 252 seconds)
[16:12:47] *** Joins: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg)
[16:13:52] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[16:15:18] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[16:20:45] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:877e:1920:40b6:7524) (Ping timeout: 256 seconds)
[16:20:59] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Quit: Leaving)
[16:23:52] *** Quits: y1n (~y1n@84-115-65-240.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[16:24:46] *** sharperguy__ is now known as sharperguy
[16:25:24] *** Joins: Slimgin (~quassel@097-071-159-002.biz.spectrum.com)
[16:25:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:26:01] <raek> gitesh: who said that quote? :-)
[16:26:41] <raek> it is a bold claim and it doesn't match my own experience
[16:27:19] *** Joins: qk1z (~qk1z@193-82-233-119.tpgi.com.au)
[16:28:20] <raek> I mean, it is a valid way to get started with object oriented programming, and could possibly even be a good fit for some simulation software or simpler computer games.
[16:29:20] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:30:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[16:34:07] *** Quits: mindlesstux (sid18072@tooting.irccloud.com) ()
[16:34:21] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Ping timeout: 256 seconds)
[16:34:41] *** Joins: mindlesstux (sid18072@id-18072.lymington.irccloud.com)
[16:34:54] <hexnewbie> I'm sure a real-life simulator using objects and methods would fall apart really quick, whenever it comes into superficial contact with the non-discrete non-exact nature of reality
[16:35:49] <raek> i fully agree
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:24] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:26] *** Joins: y1n (~y1n@84-115-64-112.wifi.dynamic.surfer.at)
[16:38:05] <theprophet> is there a book about python, where every detail about python is explained?
[16:38:17] <hexnewbie> Dog.feed = lambda self, food: 1.2 * self._eat() if _rule181714(self, food, time.time(), random.random()) else 0.8 * self._do_mouth(_rule1747191(self, food, time.time(), random.random()))
[16:39:00] *** Quits: zln (~golluq@c80-217-230-193.bredband.tele2.se) (Ping timeout: 244 seconds)
[16:39:29] <Moult> hexnewbie: naturally the dog may not self identify as a dog. some dogs may proclaim themselves as cats.
[16:39:52] <wib_jonas> theprophet: https://docs.python.org/3/
[16:40:33] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 244 seconds)
[16:40:38] <theprophet> wib_jonas thats not what i mean but still thanks.
[16:40:42] <hexnewbie> Moult: No issue, we use abc.ABCMeta as metaclass.
[16:40:58] <Moult> hehehehe
[16:41:10] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[16:42:09] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[16:42:20] *** Joins: meridion (~meridion@punt.hetgrotebos.org)
[16:42:40] *** Quits: qk1z (~qk1z@193-82-233-119.tpgi.com.au) (Ping timeout: 252 seconds)
[16:42:47] *** Quits: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg) (Remote host closed the connection)
[16:42:55] *** Quits: fanis30 (~anon@adsl-180.37.6.1.tellas.gr) (Quit: WeeChat 3.2)
[16:43:14] *** Joins: AsenMx (~AsenMx@212-39-89-182.ip.btc-net.bg)
[16:44:20] *** Joins: gggp (~textual@60.10.194.45)
[16:44:27] *** Quits: AsenMx (~AsenMx@212-39-89-182.ip.btc-net.bg) (Max SendQ exceeded)
[16:44:30] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[16:44:55] *** Joins: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg)
[16:44:57] *** Joins: P1ro_ (~quassel@user/p1ro)
[16:46:14] *** Joins: gerty (~gerty@user/gerty)
[16:46:55] <raek> theprophet: what kind of details are you looking for? do you have an example of something that books or other docs leaves out, but you want to know?
[16:46:57] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:47:04] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[16:47:04] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 252 seconds)
[16:47:48] *** Joins: P1ro (~quassel@user/p1ro)
[16:48:16] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:48:18] <theprophet> raek  nothing particular that i am lookin for at this moment, but i was thinking to read book that literally explains what python is and how to achieve familarity with it.
[16:48:44] *** Joins: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no)
[16:49:20] *** Quits: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg) (Ping timeout: 244 seconds)
[16:49:34] <raxor2k> bjs: come an man.. when is this torture gonna end, everytime something strange occurs: https://bpa.st/KTVQ
[16:49:36] *** Quits: ferz (~ferz@146-241-136-173.dyn.eolo.it) (Quit: Leaving.)
[16:50:55] *** Quits: P1ro_ (~quassel@user/p1ro) (Ping timeout: 252 seconds)
[16:51:35] *** Quits: _Mocramis (~mocramis@dalaran.sceen.net) (Quit: WeeChat 2.3)
[16:52:10] <Repiphany> raxor2k: What is line 15 supposed to do
[16:52:21] <Naan> theprophet, the problem with looking for a _comprehensive_ source that explains what Python is (and it not being the docs) is that programming languages are constantly changing what was true when a book was written might not be true today. And the second problem with that approach is even if you read it back to back your understanding will be brittle until you get your hands dirty
[16:52:31] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[16:53:15] <Payam> I dont know what I am doing wrong but everytime I set variables and want to store them in the database it keeps the old values and inserts new rows with same values. Does anyone know what I am doing wrong: https://bpa.st/YS7Q
[16:53:50] <theprophet> Naan no problem with getting my hands dirty. but the rest of the stuff you said makes sense. thanks
[16:53:50] <Naan> That said, there are resources that people can vouch for here to get started! I think the channel used to recommend "think python" ?
[16:53:54] <Repiphany> Payam: That's a lot of code to dump without context, what lines are having problems
[16:54:22] <Payam> Repiphany, look at the __name__= '__main__'
[16:54:27] *** Joins: ppang (~ppang@user/ppang)
[16:54:56] <Repiphany> If you want people to help you, you have to help them be able to help you
[16:55:33] <Repiphany> It's a bit much to ask people to just read 250 lines of code and pinpoint where the error is
[16:56:14] <Payam> Repiphany, thanks. I dont know where the error is. because I dont get any. what I trying to do is between 233-242
[16:56:25] <gitesh> look at this code it is giving false ===>  https://bpa.st/LMOA
[16:56:49] <gitesh> I'm not doing point1 is point2 I'm doing point1 == point2 still it's saying it's false
[16:56:49] <Repiphany> Maybe start by pinpointing which functions are acting as expected and which ones aren't
[16:57:02] <Payam> Repiphany, Are you new here?
[16:57:34] <Repiphany> No, I'm just giving general advice about how to be helpful with asking pertinent questions that people will want to answer
[16:57:34] <raxor2k> repiphany: if ID is same: plus the points from them together
[16:57:51] <Repiphany> raxor2k: You're checking if the values from a single dict are the same
[16:57:56] <Payam> gitesh, They kinda should be the same but the id should differe. what does point1 is point2 give?
[16:57:56] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:58:20] *** Joins: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com)
[16:58:24] <Payam> ID shoudlnt be the same at all.
[16:58:24] <gitesh> Payam: `point1 is point2`
[16:58:43] <Payam> no they aren't
[16:58:50] <Payam> they have different id
[16:59:09] <Repiphany> gitesh: https://docs.python.org/3/reference/datamodel.html#object.__eq__
[16:59:16] <Payam> `id(point1) ==id(point2)` should give false
[16:59:16] *** Quits: python (~python@user/demon) (Ping timeout: 250 seconds)
[16:59:30] <Repiphany> Your class doesn't have __eq__ defined so it defaults to `x is y`
[16:59:42] <raxor2k> repihany, yes ?
[17:00:11] <Repiphany> It's a tautology
[17:00:33] <raxor2k> so, any suggestion ?
[17:01:12] <Repiphany> Presumably you want to check if your id is already in merged
[17:01:12] <Payam> Repiphany, so point1 is point2? doubt it
[17:01:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 245 seconds)
[17:01:55] <Repiphany> ?
[17:02:12] <Repiphany> He's making two instances, they won't return true on `x is y`
[17:02:19] <jinsun> Naan: there is a link to think python in the /topic even now
[17:02:27] <Payam> yeah you are right. sorry I was thinking about somthing else.
[17:02:29] <Repiphany> They're
[17:02:48] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:03:44] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:03:53] <Naan> ah thanks jinsun. theprophet link from the topic: https://j.mp/23X7emF
[17:04:05] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[17:05:42] <jinsun> but that doesn't cover "everything about python in detail", it is just for basics for beginners, but after reading that you should be able to dive into projects
[17:06:57] <theprophet> Naan thanks bud.
[17:07:07] <jinsun> and you don't really want to know everything in detail, only the basics and details related to specific projects that you
[17:07:14] <jinsun> are interested in
[17:11:13] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:11:21] *** Joins: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com)
[17:11:27] <horribleprogram> hey guys
[17:11:40] <horribleprogram> I haven't used Python since 0.9, what's this new "enum" type
[17:11:58] <horribleprogram> I see it as status codes
[17:12:03] <horribleprogram> like http.HTTPStatus.OK
[17:12:43] <horribleprogram> just a nested class that overloads __eq__() pretty much?
[17:12:51] *** Joins: chha (~chhs@wikipedia/Bjelleklang)
[17:12:56] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:13:15] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[17:14:10] <horribleprogram> oh it also has a .value property
[17:15:02] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:9086:3bc5:d10c:cbaa) (Ping timeout: 245 seconds)
[17:15:12] *** Quits: gitly (~gitly@148.252.129.136) (Quit: WeeChat 3.2)
[17:15:37] <ppang> python 0.9 released in 1991
[17:16:07] <horribleprogram> ppang: yes, I was -5 years old
[17:16:11] * leduyquang753 thonks.
[17:16:57] <horribleprogram> just a little cute cell
[17:17:02] <horribleprogram> swimming around in...
[17:17:05] <horribleprogram> oh god no
[17:17:11] <ppang> swimming where?
[17:17:15] <horribleprogram> ppang: uhh
[17:17:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:17:24] <horribleprogram> off topic
[17:17:37] <kosh> if you last used python 0.9 you should probably learn from scratch
[17:18:13] <horribleprogram> meh, not much changed bro
[17:18:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:18:30] <horribleprogram> https://github.com/smontanaro/python-0.9.1
[17:18:39] *** Joins: georgios (~georgios@user/georgios)
[17:18:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:18:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:19:44] <wib_jonas> import numpy as np; print((np.float32(3)/10).dtype) # why does this give float64 instead of float32?
[17:20:10] <wib_jonas> I can work it around by using np.float32(3)/np.float32(10) instead, but it's surprising
[17:20:37] <Repiphany> Python floats are 64 bit
[17:20:37] <horribleprogram> wib_jonas: there's ur answer
[17:20:38] <deniska> horribleprogram: enum is a class for conviniently declaring groups of constants which can be compared for equality
[17:20:58] <raxor2k> repiphany?
[17:21:01] <wib_jonas> Repiphany: there's no python float involved.
[17:21:35] <wib_jonas> heck, even np.float32(3)+1 gives a float64 typed array
[17:21:35] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:21:35] <horribleprogram> wib_jonas: the answer would be in the... np.float32.__div__
[17:21:37] <Repiphany> division is for floats
[17:21:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:22:03] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:22:23] <horribleprogram> wib_jonas: or __truediv__ for u non Python 0.9 users
[17:22:50] <wib_jonas> are you suggesting that I should ask in #numpy instead?
[17:23:07] <horribleprogram> wib_jonas: dude... open up the source code, look at the overload for /
[17:23:55] *** Quits: y1n (~y1n@84-115-64-112.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[17:24:00] <horribleprogram> deniska: I didn't know that
[17:24:28] <horribleprogram> deniska: why would such a construct be required when we have scoped static constants
[17:25:03] <horribleprogram> class Blah: foo = 3
[17:25:21] <Payam> Can anyone help me why I can access the global variable on line 134? Debugger says local variable referenced before assignment. https://bpa.st/RXOA
[17:25:45] <hodapp> horribleprogram: it's for similar reasons as to why C has had enums for decades
[17:25:59] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:26:07] *** Quits: jdwidari (~jdwidari@2001:420:c0c4:1006::35f) (Ping timeout: 252 seconds)
[17:26:12] *** Joins: jazzy2 (~jaziz@172.58.36.54)
[17:26:26] <horribleprogram> Payam: u didn't declare it as global
[17:26:36] <Repiphany> Payam: You have `download_dir` in an assignment in line 113 so it's locally scoped to the function even if that line isn't reached
[17:26:46] <horribleprogram> Payam: LEGB lookup doesn't make sense
[17:26:47] <hodapp> sometimes all you need is a unique value and you don't care much what it is, and having to manually define it is error-prone around things like changes and merges
[17:26:52] <Payam> horribleprogram, but on line 20
[17:27:01] <Payam> what is LEGB_
[17:27:03] <Payam> ?
[17:27:08] <horribleprogram> local enclosing global builtin
[17:27:15] <horribleprogram> when u do something like print(x)
[17:27:21] <horribleprogram> it looks for x somehow
[17:27:37] <Payam> yes. but download_dir is defined on line 20
[17:27:46] *** Quits: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 252 seconds)
[17:27:47] *** Joins: gggp (~textual@60.10.194.45)
[17:27:58] <horribleprogram> try block doesn't use LEGB
[17:28:07] <Payam> what is LEGB?
[17:28:07] <kosh> wib_jonas, when doing operations on mixed types I think it converts it to the type most likely to preserve accuracy so float, int, complex etc as appropriate, since float32/int is mixed it should convert
[17:28:20] <Payam> so I have to have nolocal keyword?
[17:28:23] <nedbat> horribleprogram: try blocks are not special in this way
[17:28:41] <horribleprogram> nedbat: then why can't he access download_dir when it's set to None on line 20
[17:28:47] <kosh> better to just not use global
[17:28:48] <Payam> horribleprogram, ah you just wrote what legb is sorry
[17:28:52] <nedbat> Payam: why do you say you can't access download_dir? What is happening?
[17:28:54] <gitesh> So instead of list compression it's generator right?
[17:29:12] <gitesh> Generator gives you tuple instead of list
[17:29:17] <Repiphany> Payam: https://bpa.st/T4RQ
[17:29:30] <kosh> gitesh, generator gives items one by one, a list gives you a list
[17:29:35] <Payam> nedbat, https://bpa.st/RUWA
[17:29:55] *** Quits: hwrd (sid64402@tooting.irccloud.com) ()
[17:29:59] <wib_jonas> kosh: yeah, the question is just what to convert. or how it even upgrades a non-numpy scalar. I'm looking at https://numpy.org/doc/stable/reference/ufuncs.html#casting-rules now.
[17:30:02] <nedbat> Payam: that's because at line 113 you assign to that name, so it's a local.
[17:30:02] <kosh> gitesh, imagine if you are working with something larger than memory but you only ever need a few in memory at a time, with the generator you can just process the data as you go without buildingup a larger list
[17:30:16] *** Joins: hwrd (sid64402@id-64402.lymington.irccloud.com)
[17:30:22] <Payam> Repiphany, is that file you sent you have to have the global keyword because you are changing var. but var is still defined.
[17:30:43] <gitesh> kosh: yeah right
[17:30:43] <Repiphany> f() can't run because of the assignment in line 5
[17:30:51] <deniska> horribleprogram: enum provides iteration over its members, nicer repr for its members, check members for uniqueness and other nice stuff listed in the docs
[17:31:16] <Payam> ah
[17:31:17] <Repiphany> The lookup for `var` in line 4 looks locally, not globally *because* of the later assignment in the function
[17:31:27] <Payam> nedbat, awesome. Thanks
[17:31:40] <horribleprogram> nedbat: it's in a separate try block tho
[17:31:48] <deniska> horribleprogram: and more type correctness, enum item with value 1 is not equal to int 1, unless you specifically use IntEnum
[17:31:48] <horribleprogram> nedbat: oh same function
[17:32:04] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:9086:3bc5:d10c:cbaa)
[17:32:53] <Payam> Repiphany, wait. so first the var is printed out and then a local variable with the same name is declared and next time the next function doesn know which one you mean, the global one or the local one. right?
[17:32:55] <horribleprogram> deniska: yeah that's a good addition
[17:33:03] <wib_jonas> as far as I understand the docs, it upgrades the python int to a numpy.int32, and then decide that it can't safely cast an int32 to a float32, only to a float64, and then upgrades the other float32 to match
[17:33:18] <kosh> gitesh, so mostly it is just a question of which one you use depends on what you need
[17:33:26] <wib_jonas> odd, but at least now I know I'll have to be careful with this if I want to do calculations with np.float32 arrays
[17:33:44] <Repiphany> g() is able to print(var) because it first looks locally and then globally
[17:33:55] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[17:33:59] <Repiphany> f() will always fail no matter what
[17:34:35] <horribleprogram> nedbat: dude this is actually complicated, cuz it's an if/else and both have try blocks
[17:34:47] <nedbat> horribleprogram: yes, it's complicated.
[17:34:59] <nedbat> horribleprogram: why did you say "it's in a separate try block tho"?
[17:35:20] <horribleprogram> nedbat: cuz it is... if ...: try { } ... else try { }
[17:35:21] <Payam> Repiphany, why ? I mean if it looks locally and cant find anything then it goes for the global one.
[17:35:30] <horribleprogram> one has the download_dir assignment, the else has the print(download_dir)
[17:35:39] <horribleprogram> and he has a global download_dir = None anyways
[17:35:45] <nedbat> horribleprogram: it doesn't matter, variables are scoped to the entire function
[17:35:48] <horribleprogram> nedbat: ahh
[17:35:53] <Repiphany> Because if there's an assignment anywhere in the function (without the global keyword), it doesn't look globally and throws the error
[17:36:02] <horribleprogram> nedbat: this would be the interpreter that does this then
[17:36:17] <wib_jonas> oh great! so https://numpy.org/doc/stable/reference/ufuncs.html#casting-rules also says "Mixed scalar-array operations use a different set of casting rules that ensure that a scalar cannot “upcast” an array unless the scalar is of a fundamentally different kind of data (i.e., under a different hierarchy in the data-type hierarchy) than the
[17:36:18] <wib_jonas> array. This rule enables you to use scalar constants in your code (which, as Python types, are interpreted accordingly in ufuncs) without worrying about whether the precision of the scalar constant will cause upcasting on your large (small precision) array.",
[17:36:22] <nedbat> horribleprogram: it's the semantics of Python, yes, implemented by the interpreter.
[17:36:36] <Payam> horribleprogram, I think it is because I miss a global keyword there to set the global one. but I am still wondering why the global variable is not accessed
[17:36:39] <wib_jonas> and indeed (np.float32([3])+1).dtype is float32
[17:36:40] *** Joins: y1n (~y1n@84-115-64-42.wifi.dynamic.surfer.at)
[17:36:47] <horribleprogram> nedbat: like when it "parses" the function and creates the function object, the f.__code__.co_varnames thing is set
[17:36:52] <horribleprogram> Payam: can u do me a favor
[17:36:56] <wib_jonas> so this weird situation only happens if the float32 happens to be a scalar...
[17:36:59] <Payam> horribleprogram, yeah sure
[17:37:02] <nedbat> Payam: the global isn't accessed because you made that name a local by assigning to it.
[17:37:06] <Repiphany> Because of the assignment
[17:37:37] <horribleprogram> Payam: can u add this to the top of that function print(create_application_setting_dir.__code__.co_varnames)
[17:37:39] <Payam> nedbat, yes but that variable is in `if` but you won't enter that.
[17:37:46] *** Joins: jdwidari (~jdwidari@2001:420:c0c4:1003::19a)
[17:37:49] <Repiphany> <Repiphany> Payam: You have `download_dir` in an assignment in line 113 so it's locally scoped to the function even if that line isn't reached
[17:37:57] <Repiphany> 10 minutes ago
[17:38:09] <Payam> Repiphany, yes. sorry. I read alot
[17:38:13] <Payam> horribleprogram, a sec
[17:38:15] <horribleprogram> ty
[17:38:48] <horribleprogram> any "good interpreter" would see that there's only way for a block to be executed
[17:38:53] <horribleprogram> the else is part of the if
[17:38:55] <horribleprogram> not part of the try
[17:39:10] <Payam> horribleprogram, ('conn', 'download_settings', 'max_download_settings', 'min_download_quality')
[17:39:10] <horribleprogram> it's called finally anyways in Python no?
[17:39:15] <horribleprogram> Payam: ahh kk
[17:39:57] <horribleprogram> Payam: so basically, when the Python interpreter creates the function object, it makes every variable assignment within that function "available" in a sense of LEGB during execution
[17:40:12] <horribleprogram> Payam: not every variable assignment, but every variable assignment that wasn't declared as nonlocal or global
[17:40:21] <horribleprogram> Payam: so like every variable assignment lol
[17:41:32] <Payam> yes. I didnt know that. I tough that as long as the interperter doesnt go inside a scope of a if statement it won't declare anything in that scope
[17:41:36] <horribleprogram> Payam: does that explain what Repiphany meant by "the assignemnt is locally scoped"
[17:41:40] *** Quits: dez (uid92154@user/dez) ()
[17:41:44] <horribleprogram> Payam: me too lol
[17:41:47] <nedbat> Payam: blocks are not scopes. functions are scopes
[17:41:52] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[17:42:00] *** Joins: dez (uid92154@user/dez)
[17:42:13] <Payam> sorry english is not my native language. I meant blocks
[17:42:44] <horribleprogram> nedbat: no he means like since either the "if" or "else" would be executed, in any function invocation, the execution would never see both the print() and the assignment
[17:43:06] *** Joins: Barones (~Barones@189.114.62.31)
[17:43:22] <horribleprogram> Payam: interpreter internals are pretty cool
[17:43:34] <horribleprogram> Payam: look at f.__code__ and all the attributes it has
[17:43:39] <horribleprogram> Payam: f being a function
[17:44:15] <horribleprogram> nedbat: in what language are you referring to?
[17:44:29] <horribleprogram> nedbat: cuz block scope exists in damn near every language
[17:44:37] *** Quits: keir (~keir@user/keir) (Ping timeout: 244 seconds)
[17:44:46] <nedbat> horribleprogram, Payam: it's the compiler that compiles the entire function, so it doesn't matter what lines are executed. if there's an assignment in the function, the name is local.
[17:44:52] <nedbat> horribleprogram: i am talking about Python
[17:44:56] <horribleprogram> oh
[17:45:15] <horribleprogram> yeah it's pretty interesting
[17:45:22] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Remote host closed the connection)
[17:45:42] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:45:56] *** Quits: DerpGusta (~quassel@user/derpgusta) (Quit: No Ping reply in 180 seconds.)
[17:46:02] *** Joins: BlackBishop (dexter@user/blackbishop)
[17:46:07] <horribleprogram> nedbat: bro uk I've known u for more than 10 years now right?
[17:46:07] *** Joins: jpic_ (~jpic@82-64-233-31.subs.proxad.net)
[17:46:11] *** Joins: DerpGusta (~quassel@user/derpgusta)
[17:46:16] <horribleprogram> nedbat: crazy how time flies ffs
[17:46:18] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:46:24] <nedbat> horribleprogram: true dat
[17:46:28] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:dfbf:13f2:6647:8cf6) (Ping timeout: 252 seconds)
[17:46:32] <horribleprogram> :P
[17:48:15] *** Joins: keir (~keir@user/keir)
[17:49:10] *** Quits: jpic (~jpic@82.142.28.254) (Ping timeout: 240 seconds)
[17:49:53] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[17:50:49] *** Quits: jpic_ (~jpic@82-64-233-31.subs.proxad.net) (Ping timeout: 244 seconds)
[17:51:12] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:52:48] *** Joins: jpic (~jpic@82.142.10.190)
[17:52:53] *** Quits: jazzy2 (~jaziz@172.58.36.54) (Ping timeout: 244 seconds)
[17:55:27] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: Ping timeout (120 seconds))
[17:55:34] *** Joins: gitly (~gitly@148.252.129.136)
[17:55:59] *** Quits: y1n (~y1n@84-115-64-42.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[17:57:01] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[17:57:16] <horribleprogram> nedbat: nerd
[17:57:18] *** Parts: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com) ()
[17:57:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:58:16] *** Joins: y1n (~y1n@84-115-64-42.wifi.dynamic.surfer.at)
[17:59:04] *** Joins: leahey (~leahey@static.36.0.217.95.clients.your-server.de)
[18:01:51] *** Joins: computeiro (~Wender@189.37.65.197)
[18:01:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:02:54] *** Joins: keir (~keir@user/keir)
[18:03:16] <gitesh> Why classes are used to represent data?
[18:03:16] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[18:03:21] <gitesh> And what is data?
[18:03:37] <jean-luc> 1's and 0's
[18:04:00] <leduyquang753> You can learn about OOP.
[18:04:04] <jean-luc> OOps
[18:04:14] <jean-luc> python is a multi-paradigm language
[18:04:17] <jean-luc> why waste it on OOP
[18:04:27] <gitesh> For web programming
[18:04:34] <jean-luc> try django
[18:04:39] <jean-luc> the best
[18:04:50] <gitesh> I answered your why question
[18:05:06] *** Joins: thiras (~thiras@user/thiras)
[18:05:10] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:05:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:06:05] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[18:06:45] *** Quits: TallonRain (sid214799@user/tallonrain) ()
[18:07:00] *** Joins: TallonRain (sid214799@user/tallonrain)
[18:07:24] *** Joins: Pickchea (~private@user/pickchea)
[18:08:22] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[18:08:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[18:08:58] *** Parts: amoe (~amoe@visarend.solasistim.net) ()
[18:09:25] *** Joins: besnn (~besnn@user/besnn)
[18:09:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Remote host closed the connection)
[18:10:08] *** Quits: hsiktas (sid224847@tooting.irccloud.com) ()
[18:10:10] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[18:10:27] *** Joins: hsiktas (sid224847@id-224847.lymington.irccloud.com)
[18:10:33] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:10:39] *** Joins: fikran (~fikran@user/fikran)
[18:11:00] <ApostleInTriumph> Hello. How do I speedup this code using multiprocessing? https://bpa.st/PUQQ
[18:11:27] <gitesh> Can I create methods for instance after it is created?
[18:11:37] <gitesh> As I can create variables
[18:11:47] <gitesh> Or whatever it's called
[18:12:07] <jean-luc> property
[18:13:06] <ApostleInTriumph> I'm essentially trying to take a mesh save its points and normals as mat files. It takes approx an hour for 100 files. I'd like to do this for 4000 files but can't afford 40hrs
[18:13:43] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[18:14:28] <raek> gitesh: methods of a class can set new attributes on an object. this is true for any method and not just __init__
[18:15:01] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 252 seconds)
[18:15:41] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:9086:3bc5:d10c:cbaa) (Ping timeout: 252 seconds)
[18:16:07] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[18:16:54] <pragmaticenigma> ApostleInTriumph: There is no speed up the code using multiprocessing/multithreading.... instead you create a manager that spins up a thread for each of the actions in the list of actions.
[18:17:44] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:17:47] <jean-luc> woah just discovered lazy loading of object properties and methods (for performance)
[18:17:47] <pragmaticenigma> The thread manager effectively manages the list of things to do. It will launch a new thread up to a defined limit to process the work. And when one work unit completes, it starts a new thread.
[18:17:55] <ApostleInTriumph> pragmaticenigma maybe I'll rephrase my question. I've 100 files that i want to rewrite. linearly it takes an hour. but if i'm to spread it across k(=64) processes, I can have a significant speedup rewriting all the 100 files, no?
[18:18:46] <raek> gitesh: you can also add new attributes or methods onto an object "from outside" after it has been created
[18:18:49] <Repiphany> If your code is single-threaded, sure, but you're using numpy so that's not necessarily the case
[18:18:53] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:19:38] <jinsun> reading and writing files is IO, if that part is slow, it can be sped up by threads/async also
[18:20:16] <gitesh> raek: yes that's what I wanted to know
[18:22:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:23:05] *** Joins: keir (~keir@user/keir)
[18:23:16] <ApostleInTriumph> Repiphany probably what I'm looking for is to process k files per process, does that make sense?
[18:23:23] <ApostleInTriumph> I think that's what jinsun suggests?
[18:23:40] *** Quits: y1n (~y1n@84-115-64-42.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[18:23:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:23:58] <Repiphany> Is reading/writing files the bottleneck of your code or is it whatever computation you're doing in get_surface_point_cloud
[18:24:25] *** Joins: NeoCore (~neocore@138.199.47.170)
[18:24:28] *** Joins: thiras_ (~thiras@user/thiras)
[18:24:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:24:42] <ApostleInTriumph> `get_surface_point_cloud` is the costliest part
[18:25:02] <Repiphany> What's your cpu usage like when running your code
[18:25:12] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[18:25:12] <jinsun> ApostleInTriumph: okay then threads or async won't help
[18:25:42] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:26:32] <ApostleInTriumph> Repiphany Load average: 1.55 1.61 1.30
[18:26:49] <ApostleInTriumph> jinsun why do you think so? in my mind it's the opposite of what you suggest
[18:27:35] <ApostleInTriumph> in the sense, since my system is using just 1/64 of available process to do everything inside that method, can I not use 64 different process for different files? I'll show an example
[18:28:41] <deniska> ApostleInTriumph: sounds like a thing to try
[18:28:43] <jinsun> ApostleInTriumph: you were thinking of multiprocessing right? that can help. I was thinking just use threads or async if reading/writing part is slow (threads and async don't use multiple cores parallely, but can do IO at the same time)
[18:29:21] *** Quits: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no) ()
[18:29:33] <deniska> ApostleInTriumph: multiprocessing module is its own strange thing, I'd just try running multiple python processes at once via opening multiple terminals and specifying which files to work on. If it proves successful, you can automate starting up multiple python processes
[18:29:40] *** Joins: dudek (~dudek@185.150.236.103)
[18:29:48] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:30:00] <deniska> ApostleInTriumph: via subprocess module, or maybe via a tool like gnu parallel or xargs
[18:30:46] *** Quits: ppang (~ppang@user/ppang) (Quit: Leaving)
[18:30:56] <ApostleInTriumph> deniska jinsun https://bpa.st/DUYQ here can i not run the portion 1 and 2 in parallel?
[18:31:37] *** Joins: dhill (~dhill@204.48.76.187)
[18:31:46] <ApostleInTriumph> deniska what you suggest is to run those portions as different python process itself?
[18:32:07] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Quit: raek)
[18:32:18] *** Joins: gnit (~gnit@60-57-112-123f1.osk2.eonet.ne.jp)
[18:32:20] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[18:33:03] <deniska> ApostleInTriumph: sure, just run the program twice, perhaps accepting which portion to work on via sys.argv
[18:33:27] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:33:34] <ApostleInTriumph> probably a bash question, but can you suggest how I can automate across 64 processes while the last one takes the remainder?
[18:33:40] <deniska> ApostleInTriumph: if two programs work on two portions of data significantly faster than a single one, then we'll think about automating it further
[18:33:41] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[18:34:11] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Client Quit)
[18:34:16] <deniska> ApostleInTriumph: on my system xargs accepts --max-procs parameter, seems to be useful for that task
[18:35:16] <dudek> Hi. How can I use pandas to merge two dataset on closest time. Note that I only have time (HH:MM:SS.f) without the date. Here is a snippet with what I have tried https://bpa.st/I7FQ
[18:35:47] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[18:36:20] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Client Quit)
[18:37:22] *** Joins: y1n (~y1n@84-115-64-42.wifi.dynamic.surfer.at)
[18:37:54] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[18:38:05] *** Quits: dhill (~dhill@204.48.76.187) (Read error: Connection reset by peer)
[18:38:28] *** Joins: shad (~shad@user/shad)
[18:38:33] <ApostleInTriumph> 37.59s/it for two runs
[18:38:36] <ApostleInTriumph> deniska
[18:38:51] <ApostleInTriumph> So i guess shouldn't be a problem for many files?
[18:39:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:40:25] *** Joins: keir (~keir@user/keir)
[18:40:44] <deniska> ApostleInTriumph: I haven't seen the baseline, but if it's at least 1.5x times faster, seems worth to go further
[18:40:52] *** Quits: keir (~keir@user/keir) (Client Quit)
[18:41:00] *** Joins: exarkun (~exarkun@user/exarkun)
[18:41:02] *** Joins: wender (~Wender@179.104.244.105)
[18:41:17] *** Joins: keir (~keir@user/keir)
[18:41:40] <ApostleInTriumph> oh yes, it's the same sec/iter if i run the script with different file index as two different python program
[18:41:51] <exarkun> I tried to load libpython.py into gdb to use the python stack trace dumping command on a running process.  It won't load, though.  How do you load this tool?
[18:41:52] <ApostleInTriumph> this program accepts start and end index of list
[18:41:58] *** Quits: zepolen (~zepolen@37.6.200.207) (Ping timeout: 244 seconds)
[18:42:49] *** Joins: nomic (~nomic@185.192.69.188)
[18:43:13] *** Joins: theprophet (~theprophe@85.114.228.184)
[18:43:40] *** Quits: computeiro (~Wender@189.37.65.197) (Ping timeout: 252 seconds)
[18:44:18] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[18:44:49] <jinsun> dudek: probably converting those string columns to pd.Timestamp objects with pd.to_datetime(column) will help
[18:45:20] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[18:46:22] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:47:32] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:47:40] <jinsun> dudek: https://bpa.st/YX7Q, had to fix your strings for 20:00.02 to 20:00:02 and use direction="nearest" in merge_asof
[18:47:49] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:47:51] *** Joins: keir (~keir@user/keir)
[18:48:36] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[18:48:57] *** Joins: BillyZane2 (~BillyZane@91.196.220.173)
[18:49:01] <dudek> how to convert existing column to datetime?
[18:49:29] <dudek> like left['left_time'] = pd.to_datetime(left['left_time'])?
[18:50:20] <jinsun> yup
[18:51:07] *** Quits: riz (~BillyZane@91.196.220.174) (Ping timeout: 240 seconds)
[18:52:39] *** Parts: dakotakae (~dakotakae@2601:680:cb80:a6d0:562:3756:421a:75e2) (Leaving)
[18:52:44] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:53:56] *** Joins: CoolerX (~CoolerX@user/coolerx)
[18:54:03] *** Quits: lericson (~lericson@user/lericson) (Remote host closed the connection)
[18:54:23] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[18:54:30] *** Quits: mteo (francis@user/francis) (Remote host closed the connection)
[18:55:41] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[18:55:42] *** Joins: dhill (dhill@modemcable103.217-80-70.mc.videotron.ca)
[18:56:38] *** Quits: mastardet_ (~mastardet@user/mastardet) (Quit: g0t m1lk?)
[18:57:50] *** Joins: theprophet (~theprophe@85.114.228.184)
[18:57:52] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[18:58:17] *** Quits: gnit (~gnit@60-57-112-123f1.osk2.eonet.ne.jp) (Ping timeout: 256 seconds)
[19:02:28] <grym> graingert or other fastAPI gang: i'm trying to write an endpoint that supports multipart form uploads with files AND json that will become a pydantic model instance.  The files come through fine, the json is completely ignored, and i don't know why.  MWE here https://bpa.st/3PTA
[19:02:50] *** Parts: exarkun (~exarkun@user/exarkun) (WeeChat 2.4)
[19:04:13] <grym> specifying -F 'req={}; type=application/json' does update the mimetype, but does not help
[19:04:18] <graingert[m]> grym: can you make a version that doesn't use as_form ?
[19:04:23] <graingert[m]> also you might want to try the discord
[19:04:27] <grym> graingert: i don't discord
[19:04:37] <graingert[m]> sadly fastapi does
[19:04:46] <grym> how nice for them, but you're right here!
[19:04:48] <grym> >:)
[19:05:40] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[19:05:59] <grym> graingert[m]: when i omit the decorator hack, and try to specify the parameter as either a Form or an InferenceRequest, i get errors of the form `{"detail":[{"loc":["body","req"],"msg":"value is not a valid dict","type":"type_error.dict"}]}`
[19:06:41] <grym> and that error appears to be correct: when fastAPI sees it, req is not a dict, it's a string.
[19:06:44] <grym> (i think)
[19:07:06] <graingert[m]> Can you repeat the error just in Starlette?
[19:07:20] <grym> i don't know how
[19:07:42] <grym> also i'm very much not interested in doing the horrible thing and having n parameters of :str = Form(...)
[19:07:54] <grym> (since i'll have to do all that validation by hand, grr, arr)
[19:08:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[19:08:12] <grym> (and it's hard to document in /docs, grr, double arr)
[19:08:18] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[19:08:47] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:12:23] *** Joins: emika4 (~emika@185.207.249.97)
[19:13:22] *** Quits: emika (~emika@185.207.249.231) (Ping timeout: 252 seconds)
[19:13:22] *** emika4 is now known as emika
[19:14:05] <az> hi, I would like to use with inside a class and I don't want to put it in every method. when I put it in it's own method and call it inside another one I find it's closed. what do suggest for this?
[19:14:29] *** A_Dragon is now known as A_D
[19:14:32] *** A_D is now known as A_Dragon
[19:16:28] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[19:19:16] <ens> i have a bot that uses a socket connection. i came back to it this morning and saw that it had crashed due to a broken pipe error when using sock.sendall(var). is there a way to tell python to ignore these errors? (the disconnected socket is detected at the start of the iteration)
[19:20:09] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[19:21:31] *** Joins: mteo (francis@user/francis)
[19:21:45] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 244 seconds)
[19:22:18] <BtbN> catch them
[19:22:57] *** Quits: lithammer (~lithammer@46.19.36.119) (Quit: ZNC - http://znc.in)
[19:23:54] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[19:24:22] *** Quits: y1n (~y1n@84-115-64-42.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[19:24:56] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Quit: Client closed)
[19:26:53] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[19:29:03] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[19:29:31] *** Quits: keir (~keir@user/keir) (Quit: keir)
[19:29:46] <jinsun_> <az> "hi, I would like to use with..." <- put the with in your main function?
[19:30:55] <az> __init__?
[19:31:10] *** Quits: Pent (sid313808@tooting.irccloud.com) ()
[19:31:15] <az> wouldn't it get closed directly after first call? or something
[19:31:22] *** Joins: ackatz (~ackatz@69-230-153-205.lightspeed.irvnca.sbcglobal.net)
[19:31:34] *** Quits: ormiret (sid314108@id-314108.tooting.irccloud.com) ()
[19:31:36] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[19:31:48] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[19:32:41] *** Joins: junktext (~junktext@109.201.152.173)
[19:33:07] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:33:10] <jinsun_> no just move it outside the class, and use with in the function you are calling the method from
[19:33:52] <az> hmmm, will check how I can do that
[19:34:24] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:34:36] <az> I was just trying the __enter__ __close__ thingy  https://stackoverflow.com/a/3774396/7346913
[19:34:57] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:35:21] *** Joins: magla (~gelignite@55d4a93f.access.ecotel.net)
[19:35:27] *** Joins: nomic (~nomic@185.192.69.188)
[19:35:33] <az> seems away off what I need, talking about something much different
[19:36:42] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[19:37:07] *** Joins: shad (~shad@user/shad)
[19:37:20] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:37:52] *** Joins: arinov (~arinov@5.24.96.241)
[19:37:56] *** Joins: y1n (~y1n@84-115-65-13.wifi.dynamic.surfer.at)
[19:38:40] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[19:41:32] <az> wth, it worked I put it inside the __name__ __main__ thingy before main()
[19:41:36] *** Quits: cyberpear (uid364019@fedora/cyberpear) ()
[19:42:09] <aphysically> whoa configparser taking an iterable of files is convenient (:
[19:42:09] *** Quits: thiras_ (~thiras@user/thiras) (Quit: Leaving)
[19:42:26] *** Joins: thiras (~thiras@user/thiras)
[19:42:27] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[19:43:51] <az> if __name__ == "__main__":
[19:43:51] <az>     with grpc.secure_channel('bchd.greyh.at:8335', grpc.ssl_channel_credentials()) as channel:
[19:43:51] <az>         stub = bchrpc.bchrpcStub(channel)
[19:43:51] <az>         main()
[19:44:15] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:74ce:2b07:aeff:fbe2)
[19:44:20] <az> sorry for posting, thought it was only three lines. is that correct?
[19:45:28] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:46:40] *** Quits: ackatz (~ackatz@69-230-153-205.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[19:51:07] <gcbirzan> it was 4 lines
[19:51:35] <jinsun> seems okay, but probably would be better to not have that stub thing global and create it inside main(), then pass it around to the functions that need it
[19:52:00] *** Joins: Xano (~Xano@2a00:23c4:4200:a00:edd6:e3c3:7d82:29e4)
[19:53:17] <Xano> I'm using PyQt's QThread to perform a blocking operation, but the thread does not appear to finish. This is my code, with the irrelevant bits stripped: https://pastebin.com/yiJf27yV. The test times out because QThread's `finished` signal is never emitted, while I would expect it to. What could I have done wrong?
[19:53:25] *** Joins: segfaultbanana (~segfaultb@pool-72-88-140-122.nwrknj.east.verizon.net)
[19:53:58] <Xano> Both `started` slots are called in response to the `started` signal being emitted.
[20:00:40] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[20:01:06] <aphysically> argumentparsererrors look like they smartly quote strings, even changing the quote type if the string in question that had the error has the usual quote style in it
[20:01:33] *** Joins: neltraus_ (~neltraus@supernova.neltraus.de)
[20:02:19] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[20:02:22] *** Quits: Xano (~Xano@2a00:23c4:4200:a00:edd6:e3c3:7d82:29e4) (Ping timeout: 256 seconds)
[20:02:45] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:02:47] *** Quits: neltraus (~neltraus@supernova.neltraus.de) (Ping timeout: 240 seconds)
[20:02:57] *** Joins: jinsun (~quassel@user/jinsun)
[20:03:53] *** Quits: push-f (~martin@push-f.com) (Ping timeout: 248 seconds)
[20:04:25] *** Quits: streety (~streety@li761-24.members.linode.com) (Ping timeout: 248 seconds)
[20:04:25] *** Joins: waynew (~wayne@user/waynew)
[20:04:37] *** Joins: push-f (~martin@push-f.com)
[20:05:20] <aphysically> ah it's just repr
[20:05:31] *** Parts: segfaultbanana (~segfaultb@pool-72-88-140-122.nwrknj.east.verizon.net) ()
[20:05:33] *** Joins: segfaultbanana (~segfaultb@pool-72-88-140-122.nwrknj.east.verizon.net)
[20:05:45] *** Joins: Xano_ (~Xano@2a00:23c4:4200:a00:2a14:da05:900:a58c)
[20:06:07] <Xano_> I'm using PyQt's QThread to perform a blocking operation, but the thread does not appear to finish. This is my code, with the irrelevant bits stripped: https://pastebin.com/yiJf27yV. The test times out because QThread's `finished` signal is never emitted, while I would expect it to. What could I have done wrong? Both `started` slots are called in response to the `started` signal being emitted
[20:06:18] <Xano_> Sorry if that's a repost. Went from buggy wireless to ethernet.
[20:06:30] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[20:06:40] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:07:08] *** Quits: segfaultbanana (~segfaultb@pool-72-88-140-122.nwrknj.east.verizon.net) (Changing host)
[20:07:08] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[20:07:47] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) ()
[20:08:03] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[20:08:32] *** Joins: streety (~streety@li761-24.members.linode.com)
[20:09:37] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:11:08] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[20:12:46] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 252 seconds)
[20:13:19] *** Joins: lericson (~lericson@user/lericson)
[20:15:36] *** Quits: retrosenator (~retrosena@91.sub-174-247-27.myvzw.com) (Read error: Connection reset by peer)
[20:16:15] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:18:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[20:18:35] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Ping timeout: 244 seconds)
[20:19:10] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[20:20:01] *** Joins: fikran (~fikran@user/fikran)
[20:20:03] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[20:20:59] *** Joins: mastardet (~mastardet@user/mastardet)
[20:23:10] <arseru> What's the best way to join multiple dataframes in pandas, by their indexes?
[20:23:29] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:24:19] *** Quits: y1n (~y1n@84-115-65-13.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[20:24:21] *** Joins: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy)
[20:24:52] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[20:25:16] *** Joins: ckdCreations (~ckdCreati@147.55.133.139)
[20:25:19] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:25:25] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[20:26:14] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[20:28:28] <Celelibi> Hey guys. I was wondering what are the actual reasons for not implementing some mandatory visibility mechanism? Like public / protected / private members of a class, or of a module.
[20:29:09] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[20:30:28] *** Joins: aead (~aead@user/aead)
[20:30:39] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[20:31:31] <grym> there is one! everything's visible.
[20:31:32] <grym> :)
[20:31:38] <waynew> it's abused because people thing private means secure
[20:31:42] <waynew> that's not what it means at all
[20:31:50] <waynew> so... we're all consenting adults here
[20:32:47] <bjs> Celelibi: I guess the real question is what is the actual reason *to* implement them?  If you can come up with a good enough reason and motivate it then propose it maybe it'd get accepted
[20:32:59] <bjs> it's just nobody can think of a good reason and nobody has made a proposal that's been accepted
[20:34:10] <The-Compiler> Meanwhile in C++: "#define private public"
[20:35:19] *** Joins: retrosenator (~retrosena@91.sub-174-247-27.myvzw.com)
[20:35:38] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 244 seconds)
[20:36:09] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 244 seconds)
[20:36:28] *** Joins: matsaman (~matsaman@user/matsaman)
[20:36:44] *** Joins: y1n (~y1n@84-115-65-13.wifi.dynamic.surfer.at)
[20:37:33] <Celelibi> Well... explicit is better than implicit. I think having an explicit support is better than a convention.
[20:38:01] <grym> how about an explicit lack of support? which is the state of affairs now
[20:38:20] <bjs> Celelibi: well right now there is no support at all, it's not implicit or explicit
[20:38:25] <bjs> there just isn't a way to make a private variable
[20:38:39] *** Joins: djapo (~archangel@user/djapo)
[20:39:03] <Celelibi> There's a convention of having an underscore prefix.
[20:39:23] <bjs> Celelibi: that's a convention,  it doesn't actually make the thing private or protected
[20:39:24] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:39:32] <bjs> and really "internal" is the best way to describe what the convention is trying to convey
[20:39:35] *** Joins: ackatz (~ackatz@69-230-153-205.lightspeed.irvnca.sbcglobal.net)
[20:39:51] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[20:39:59] *** Joins: Samian (~Sami@163.114.130.5)
[20:40:17] *** Joins: waynew (~wayne@user/waynew)
[20:40:49] *** dcaro is now known as dcaro_away
[20:41:01] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Quit: Leaving)
[20:41:30] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[20:41:41] *** Joins: iomari891 (~iomari891@197.210.77.85)
[20:41:48] <jean-luc> Celelibi:  if u want to use an explicit language than use one
[20:42:02] <jean-luc> the spirit of python is to be implicit as far as possible
[20:42:09] <jean-luc> to make coding easy and lean
[20:42:12] *** Quits: Barones (~Barones@189.114.62.31) (Remote host closed the connection)
[20:42:24] <Celelibi> No. the spirit is to make most things explicit.
[20:42:43] <jean-luc> by removing keywords like explicit, private etc?
[20:42:50] <jean-luc> ...
[20:42:56] <jean-luc> ok i think you've had a bump to your head
[20:42:59] <Celelibi> That's in the pep 20.
[20:43:14] <waynew> Celelibi: what would private as a keyword gain you?
[20:43:18] *** Quits: ackatz (~ackatz@69-230-153-205.lightspeed.irvnca.sbcglobal.net) (Client Quit)
[20:43:23] <Celelibi> Second line. "Explicit is better than implicit."
[20:43:26] <waynew> To be explicit ;)
[20:43:34] <jean-luc> that an objects attribute cant be set or accessed outisde the class
[20:43:47] <jean-luc> (or method)
[20:43:50] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:43:54] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 244 seconds)
[20:44:14] <bjs> this isn't really a question of implicit vs explicit, it's a question of "does not exist" vs "exists"
[20:44:40] <bjs> at the moment there is no such concept,  implicit or otherwise.  There's conventions for "this is internal" but nothing in the language actually stops you accessing the attributes.
[20:44:40] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 240 seconds)
[20:45:17] <Celelibi> Personnally, I'm perfectly happy with the way python is. But I'm having this very conversation with a friend that hate python for its lack of explicit support of visibility.
[20:45:23] <Celelibi> I'm just trying to understand both sides.
[20:45:49] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[20:45:52] *** Quits: magla (~gelignite@55d4a93f.access.ecotel.net) (Quit: Stay safe!)
[20:46:01] <The-Compiler> jean-luc: it's okay to disagree with people, but could you please do so in a more respectful way than "ok i think you've had a bump to your head"?
[20:46:04] <bjs> Celelibi: the side Python has chosen is,  Python never had these things and there's nothing lacking.  Other languages have these features and don't gain anything, except a bunch of extra stuff for when you need to work around them (e.g. testing)
[20:46:10] *** Quits: iomari891 (~iomari891@197.210.77.85) (Ping timeout: 240 seconds)
[20:46:12] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[20:47:08] <jean-luc> Sure thing
[20:47:38] <bjs> Celelibi: the problem is that a `private` thing is never really private and if you're doing it for security reasons (e.g. hiding a private key by making it `private`) then you've not actually achieved anything, and so its only purpose really is encapsulation and "hiding" and a simple convention without language support achieves the same thing without extra machinery in the language to do it, and without fancy tools to escape it when you need to
[20:47:58] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 252 seconds)
[20:48:01] <waynew> Celelibi: you should ask them why they think they need visibility.
[20:48:12] <waynew> 100% of the time when I've seen visibility used it's been used for "security"
[20:48:31] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[20:48:34] <The-Compiler> Celelibi: usually the argument is that it's still being possible to access obj._private, so that's bad, because the language doesn't enforce it being private. But in the same vein, should a language enforce, say, variables to have descriptive names? Usually, you'd have a separate linter for those kinds of things which point you to those issues (but still let you silence the warning if really
[20:48:34] <waynew> which is dumb. I have physical access to the computer there's no such thing as security
[20:48:36] <The-Compiler> needed). I don't really see why visibility should be different.
[20:48:45] *** Joins: iomari891 (~iomari891@197.210.76.203)
[20:50:20] <The-Compiler> Celelibi: And as others said as well, in other languages people then come up with creative workarounds around the enforced visibility if they need something for testing (say, the "#define private public" hack, or a "get_private_thing_ONLY_FOR_TESTING" method). I'm not convinced that's really better in any way.
[20:50:47] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:64af:bfcd:937a:b017)
[20:50:58] <Celelibi> I trust this guy to know about security. I guess it's more about making it harder for the user of the code to get things wrong.
[20:51:03] <bjs> waynew: well I think people are more worried about remote access :)
[20:51:37] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Ping timeout: 256 seconds)
[20:51:46] <bjs> Celelibi: well that's what the convention is for,  you have to *deliberately* go out of your way to use the _names usually as they won't appear in documentation and tools will generally hide them
[20:51:56] <waynew> sure, but if I'm running code that you wrote I'm either running it on my machine, in which case I have full access, or I'm running it remotely, in which case I have zero access so what does public/private even matter?
[20:52:22] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 252 seconds)
[20:52:48] *** Joins: menace (~someone@user/menace)
[20:52:58] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[20:53:01] <jean-luc> a book on the philosophy of OO would probably cover the reasons more in depth
[20:53:12] <jean-luc> for the existence of various scoping modifiers
[20:53:26] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[20:53:32] <jean-luc> (in other languages)
[20:54:10] <waynew> The problem is that OO philosophy calls it "security" instead of... something completely different (:
[20:54:29] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[20:54:38] *** Parts: kr0nk (~kr0nk@user/kr0nk) ()
[20:54:44] <jean-luc> probably more along the lines of 'data integrity'
[20:54:45] <grym> in other languages, i have found private attributes to primarily provide friction that drives refactoring
[20:54:45] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[20:54:45] *** Quits: Dotz0cat (~Dotz0cat@h168.196.117.75.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[20:55:01] <waynew> Same
[20:55:09] <grym> "i keep wanting to touch the "private" thing; is this designed well?!"
[20:55:17] <grym> "is there a nicer way to do this so i don't want to break the rules all the time?"
[20:55:22] <waynew> or, the author was either too naive to think that someone would want access to a certain attribute
[20:55:29] <jean-luc> its okay to touch the privates just not in a public space
[20:55:41] *** launchd is now known as l
[20:55:56] <waynew> or, the author (mistakenly) thought that they were providing security
[20:56:08] <waynew> like... oh here's a password in this private thing that you can't access
[20:56:13] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[20:56:25] <jean-luc> no they were thinkinbg more along the lines off ' this method/property is only used internally so it should not be declared as public'
[20:56:28] <waynew> bruh. Your class is serializable which means I can dump it to a text file and read it just fine.
[20:56:42] <jean-luc> as OO devs do, everything is pvt by default
[20:56:50] <waynew> I've actually *never* encountered that philosophy in the wild
[20:57:09] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[20:57:18] <jean-luc> as i've mentioneed, probably more about data integrity* not security (im guessing)
[20:57:29] <waynew> Though I've actually seen that used more correctly in Python
[20:57:39] <waynew> because there is no fully private anything
[20:57:40] *** Joins: Aknip (~Aknip@user/aknip)
[20:57:45] <Celelibi> <grym> "i keep wanting to touch the "private" thing; is this designed well?!"
[20:57:53] <Celelibi> I always knew humans were poorly designed. :p
[20:57:57] <jean-luc> youre conflating security with programming practise
[20:57:59] <Aknip> i love that you can make literally anything using python
[20:58:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[20:58:16] <jean-luc> to declare pvt is to mean that it should not be able to be modified outside the scope of the class code
[20:58:20] <Aknip> you can even make a web broxy
[20:58:28] *** Quits: spuz (~spuz@213.129.88.97) (Quit: Client closed)
[20:58:35] <jean-luc> thats about all and to ensure that someone doesnt 'accidentally' do that
[20:58:37] <jean-luc> including yourself
[20:58:47] <waynew> so the only times I've seen it used in Python are specifically for thatreason: "Hey, this is not part of my public API, you shouldn't bother messing around here, but it's not like I can stop you"
[20:59:08] *** l is now known as launchd
[20:59:31] *** Parts: tusko (~yeurt@copyfree/advocate/tusko) (Byeee)
[20:59:31] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:01:01] *** Aknip is now known as iBoot
[21:01:47] *** Joins: mharig (~mharig@2800:cd0:d919:1900:c2cb:38ff:fe18:3c4a)
[21:01:53] *** iBoot is now known as Aknip
[21:01:58] *** Joins: bdeferme1 (~bdeferme@i.ctrl86.com)
[21:02:26] *** Joins: lastshell (~lastshell@user/lastshell)
[21:03:02] <p-i-> How to take 'AB?D' where ? is a single-char wildcard, and match it against 'ABCD' returning True?
[21:03:05] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Ping timeout: 248 seconds)
[21:03:21] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Ping timeout: 250 seconds)
[21:03:26] *** Quits: Aknip (~Aknip@user/aknip) (Quit: Client closed)
[21:03:45] <waynew> easy option: `.startswith('AB') and .endswith('D')`
[21:03:54] <bjs> p-i-: ? isn't a standard syntax for these things, if the match really is that simple then it's probably simple enough just to do manually.  Otherwise it looks similar enough to a regex
[21:04:26] <waynew> almost as easy option: `re.match('AB.D', thing)` (if I have my argument order correct)
[21:04:32] <p-i-> But I might have 'AB?DE?G?I' to match with 'ABCDEFGHI'
[21:05:13] <bjs> p-i-: I mean like I said a simple approach is just to loop over the two strings comparing the i'th character of each, and if they match (or if the left one is a ?) then keep going
[21:05:15] <p-i-> YES! I had that, but I had my args in the wrong order
[21:05:16] <waynew> that's literally a different problem
[21:05:22] <p-i-> you goet it
[21:05:52] *** Joins: cyphase (~cyphase@user/cyphase)
[21:06:00] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:794:8415:afb:7a2f)
[21:06:25] *** Quits: Norore (~weechat@balder.ens.fr) (Quit: WeeChat 1.9.1)
[21:06:54] <waynew> If you're trying to match different patterns, bjs' approach is a good one
[21:07:36] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[21:08:04] <waynew> all(a == b for a,b in zip(pattern, str) if a != '?') is a fairly naive approach
[21:08:17] <waynew> doesn't ensure that they're the same length
[21:08:34] <waynew> so 'AB?DE?G?I' would match 'A'
[21:08:49] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[21:10:41] <Celelibi> On the topic of attributes visibility. I was wondering if a method can know its caller. So that someone could maybe implement an @private decorator. (Just hypothetically, that's a random thought.)
[21:10:53] <Celelibi> Maybe with the traceback module?
[21:10:57] <bjs> Celelibi: you can inspect the stack (with inspect.stack())
[21:11:12] <InPhase> p-i-: glob.fnmatch.fnmatch('ABCD', 'AB?D')
[21:11:17] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[21:12:10] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 252 seconds)
[21:12:13] <jinsun> or just fnmatch.fnmatch
[21:12:41] <InPhase> Oh, didn't realize that was separately packed up.
[21:13:08] <InPhase> But yes, then that.
[21:13:12] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Client Quit)
[21:13:28] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[21:17:49] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2cdd:4636:d703:2ebd)
[21:18:31] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[21:19:27] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[21:22:06] *** Quits: mharig (~mharig@2800:cd0:d919:1900:c2cb:38ff:fe18:3c4a) (Quit: WeeChat 3.2)
[21:22:33] *** Joins: famubu (~famubu@user/famubu)
[21:24:12] *** Quits: y1n (~y1n@84-115-65-13.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[21:25:41] <famubu> How can we give '{' as the fill character while making a padded string via fstrings? I tried `f"{3:{{<3}"` but didn't work. `f"{3:a<3}"` gave `3aa` though.
[21:25:57] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 245 seconds)
[21:26:22] *** Joins: Guddu (~Guddu@190.84.88.92)
[21:27:09] <aphysically> >:l
[21:27:11] <aphysically> src/pyffstream/cli.py:609: error: Incompatible types in assignment (expression has type "Type[str]", variable has type "Callable[[str], str]")
[21:27:21] <nedbat> famubu: it's not pretty, but this works:  f"{3:{'{'}<3}"
[21:27:28] <aphysically> it does not like passing str as the callable :P
[21:27:58] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[21:27:59] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: leaving)
[21:28:01] <stewie925> hello I have this python codility exercise (looks very simple) https://app.codility.com/programmers/lessons/4-counting_elements/perm_check.   I try to avoid doing the for-loops.  Would this code be considered efficient?
[21:28:14] <stewie925> https://bpa.st/LSGQ
[21:28:20] <famubu> nedbat: Thanks. Better to have a solution than to have no solution. :-)
[21:28:58] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:16] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[21:31:33] <aphysically> https://github.com/python/mypy/issues/2427
[21:32:02] *** Joins: goldfish (~goldfish@user/goldfish)
[21:32:24] <stewie925> so to check for permutation, I basically sort an array / list first then check if  (a[0] - 0 ==  a[-1] - [len(a) - ]) without having the need to iterate
[21:32:26] <aphysically> options are type: ignore or setattr apparently
[21:33:20] <zware> stewie925: What about `[1, 2, 4, 4]`?
[21:33:44] <stewie925> the elements are supposed to be unique
[21:34:09] <stewie925> but yeah, that's a trick question, zware :D
[21:34:27] <zware> stewie925: Are you guaranteed unique values?
[21:35:04] *** Joins: Samian (~Sami@163.114.130.5)
[21:35:30] <stewie925> Yes - the lesson says "a  permutation is a sequence containing each element from 1 to N once, and only once."
[21:35:50] <stewie925> https://app.codility.com/programmers/lessons/4-counting_elements/perm_check/
[21:36:10] <zware> stewie925: That says to me that a permutation has unique values, but doesn't say that your input array is guaranteed to have unique values :)
[21:36:49] <stewie925> it  says "and only once" at the end of the sentence.
[21:37:02] <zware> stewie925: As part of the definition of "permutation", yes
[21:37:04] *** Joins: y1n (~y1n@84-115-64-43.wifi.dynamic.surfer.at)
[21:37:07] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 245 seconds)
[21:37:40] <stewie925> but to check repeating values, definitely needs to iterate, OR convert to a set
[21:37:49] <Celelibi> Oh, first argument that kinda make sens for a syntactic support of visibility: For beginners that don't know yet the convention that an attribute starting with an underscore is internal.
[21:37:51] <Celelibi> The interpreter would catch it instead of delegating it to an optional linter.
[21:38:03] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[21:38:50] <Henry151> howdy y'all. trying to figure this out and i put together this little paste to frame my question most clearly: https://bpa.st/raw/5DNA -- it's a little full of "foo bar spam ham eggs" stuff because i can't show the actual code but i think it's pretty clear. Any ideas, tips, guidance, etc much appreciated as always.
[21:39:10] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:39:37] <stewie925> btw, thank you zware - going through the tests to get a python job interview here...
[21:39:49] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[21:40:29] *** Joins: Betal (~Betal@user/betal)
[21:40:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:42:14] <jinsun> Celelibi: and why should beginners be banned from accessing internal stuff?
[21:44:25] <Celelibi> jinsun, not "be banned from accessing" as much as be forbidden to not know it is internal stuff.
[21:46:50] <Henry151> if my first paste there is way too huge to look through, maybe someone could glance at this: https://bpa.st/HAUA to more quickly and easily point me in the right direction? just to get me a start on it
[21:46:56] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 244 seconds)
[21:48:11] <jinsun> Celelibi: nothing really bad happens even if they unknowingly use internal stuff, maybe their code breaks later and they find out about the convention
[21:48:26] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[21:48:50] *** Joins: digilink (~digilink@user/digilink)
[21:49:12] <jinsun> and also that they should use a linter to warn about these things
[21:49:45] <Celelibi> Yeah, it doesn't help learning.
[21:49:57] <Celelibi> If you have to find out later when things break.
[21:50:02] <Henry151> if i could wrap my head around "how does this raw SQL query look when expressed as a DBSession().execute('EXPLAIN ' + query, {'param_1': 'value1', 'param_2': 'value2'}) type of expression, that would help me to see exactly what it is that i'm trying to do; then i could try to figure out how to do it in a more automated way so that i can do it to the much larger raw SQL block i'm working with
[21:50:04] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:50:09] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 250 seconds)
[21:50:26] *** Quits: Strom (strom@fedora/strom) ()
[21:51:04] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 244 seconds)
[21:51:24] <Henry151> also open to more general advice about the overall problem of course. First paste https://bpa.st/raw/5DNA here shows the overall situation.
[21:51:30] <zware> Henry151: Best advice I can give is to simplify the query down to the minimum you need to be able to figure out how do do what you want with the bigger query
[21:51:49] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[21:52:00] *** Joins: Strom (strom@fedora/strom)
[21:52:01] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[21:52:19] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[21:53:08] <zware> Henry151: Trying to work it out with the big query in the first place just sounds like a recipe for a headache to me :)
[21:53:23] *** Joins: nickodd (~nickodd@user/nickodd)
[21:53:50] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:54:11] <Henry151> zware: ah. Yeah. That is the direction i'm trying to go -- here's a step further that way, i think -- this is maybe the simplest way i can ask what i'm asking: https://bpa.st/raw/3JIQ
[21:55:26] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-d4cb-19ad-9d54-b5c3.res6.spectrum.com)
[21:55:32] <Henry151> getting it down to where i might be able to answer myself soon if i keep simplifying :) so headed in the right direction
[21:56:10] *** Quits: arinov (~arinov@5.24.96.241) (Ping timeout: 252 seconds)
[21:56:41] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[21:57:16] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 244 seconds)
[21:57:30] <zware> Henry151: As best I can tell from that paste, you're looking for `DBSession().execute('EXPLAIN ' + 'SELECT toaster... WHERE ...meal_type = %(meal_type_1)s', {'meal_type_1': 'your_value'})`?  But I feel like I don't actually understand your question
[21:58:40] *** Joins: MaximB (~MaximB@87.68.164.81)
[22:00:13] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[22:00:26] <Henry151> zware: i think that "meal_type_1" would be "value1" and that param_1 would be "toaster_meal_type" .. but that's just what i'm trying to get straight
[22:00:34] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 252 seconds)
[22:00:59] *** Quits: lucad111 (~lucad111@2a02:2e02:9991:900:e96a:7f6b:edd7:c4b7) (Quit: Leaving)
[22:01:06] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[22:01:15] *** Joins: darksun (~darksun@user/darksun)
[22:01:29] *** Joins: sysopch (~sysopch@2001:b07:6469:cc5f:716c:1cf5:8c98:a930)
[22:01:40] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[22:02:01] <aphysically> :(
[22:02:32] <Henry151> also i was not anticipating seeing the % symbol in the DBSession().execute() as i thought that was just the way that the bind params are shown in the raw SQL; i was under the impression that each of the %(var_name_X) things in the raw SQL were bind params, and that they need to get fed into the execute/explain line at the end as the dict
[22:02:50] <zware> Henry151: No; this is just regular string formatting, basically (though I'm sure SQLAlchemy does some meddling that you don't need to worry about), so it's just like `"some string with %(sub_type)s substitution" % dict(sub_type='%')`
[22:02:57] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[22:03:09] <Henry151> i'm just trying to see "if it looks like this in raw SQL, how does it look in python?" basically
[22:04:11] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[22:04:25] *** Quits: y1n (~y1n@84-115-64-43.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[22:05:46] *** Joins: y1n (~y1n@84-115-64-43.wifi.dynamic.surfer.at)
[22:05:51] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:06:11] <Henry151> i was under the impression specifically that "
[22:06:12] <Henry151> each of the %(var_name_X)  are bind params that need to get fed into the execute/explain line at the end as the dict. it looks like alchemy does string formatting substitutions for all these vars. this is the result of all the hybrid expressions getting "flattened out" in a massive query."
[22:06:25] <zware> Henry151: I'm not well-versed in SQLAlchemy, so I don't have much more to offer here :)
[22:06:32] <Henry151> thanks zware
[22:06:49] <Henry151> were still helpful because you helped me clarify what it is that i'm trying to figure out :)
[22:06:59] <zware> :+1:
[22:07:02] *** Joins: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no)
[22:07:02] *** Quits: Cypris (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[22:09:55] *** Joins: Naan (~Naan@user/naan)
[22:10:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:12:36] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[22:12:49] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Read error: Connection reset by peer)
[22:12:52] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[22:13:14] *** Joins: Naan` (~Naan@user/naan)
[22:13:21] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:13:37] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[22:13:57] <Henry151> also helpful would be any further links to information or guidance on this https://stackoverflow.com/questions/17261551/how-can-i-use-sqlalchemy-to-do-mysql-explain
[22:14:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:14:13] *** Parts: famubu (~famubu@user/famubu) ()
[22:14:28] <Henry151> or even just an example or two of the method described in the first answer to that question
[22:15:16] <Henry151> anyway i'll be continuing to try and figure it out myself but if anybody has any input just ping me :)
[22:15:18] <remexre> how is adding keywords to a test in pytest supposed to work? I'm setting .extra_keyword_matches on a test (which has decorators around the function) but it seems not to be picking them up
[22:16:40] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[22:16:52] *** Joins: superherointj (~superhero@189-113-69-2.static.sumicity.net.br)
[22:17:01] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[22:17:04] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Ping timeout: 252 seconds)
[22:17:10] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 240 seconds)
[22:17:14] <superherointj> Hello. Is it possible to use setuptools 54.2.0 with zc_buildout package?
[22:17:31] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:18:04] *** Joins: Akuli (~Akuli@82-203-165-163.bb.dnainternet.fi)
[22:18:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[22:18:54] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[22:18:57] *** Joins: heco_ (~redrum@user/redrum88)
[22:19:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:20:17] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:21:43] *** Naan` is now known as Naan
[22:22:54] *** Quits: heco (~redrum@user/redrum88) (Ping timeout: 256 seconds)
[22:22:54] *** heco_ is now known as heco
[22:23:07] *** Joins: aselman4 (~aselman4@136.2.33.161)
[22:24:13] *** Quits: y1n (~y1n@84-115-64-43.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[22:24:23] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[22:25:55] <raxor2k> bjs: my last question for today: https://bpa.st/ILYQ
[22:26:47] *** Joins: gilnims (~quassel@097-071-159-126.biz.spectrum.com)
[22:27:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:27:47] *** Joins: koolazer (~koo@user/koolazer)
[22:29:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:29:23] *** Joins: fikran (~fikran@user/fikran)
[22:29:44] *** Joins: pro_z (~pro_z@37.214.79.197)
[22:29:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:30:16] *** Quits: Slimgin (~quassel@097-071-159-002.biz.spectrum.com) (Ping timeout: 252 seconds)
[22:31:26] <bjs> raxor2k: hi
[22:31:35] <jinsun_> that line 13 if condition is always True, so no point in having that line
[22:31:40] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Quit: Leaving)
[22:31:43] <bjs> raxor2k: `if name_dict["muscle_group_ID"] == name_dict["muscle_group_ID"]:` this looks very strange, isn't this just always True?
[22:32:28] <bjs> raxor2k: what is the actual question anyway? there's just comments of random lists but it's not even obvious what the lists are of
[22:33:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:33:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:33:44] *** Joins: besnn (~besnn@user/besnn)
[22:33:54] <aselman4> Hello all, i need help figuring out why this sometimes causes python to terminate: https://bpa.st/UWYA
[22:34:05] *** Quits: Hanii (~textual@host86-171-71-229.range86-171.btcentralplus.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:34:44] <habnabit_> aselman4, considering you're mucking around with ctypes.pythonapi, are you surprised?
[22:34:50] <habnabit_> aselman4, i suggest not doing that
[22:34:59] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 244 seconds)
[22:35:09] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[22:35:10] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Ping timeout: 240 seconds)
[22:35:34] <habnabit_> aselman4, synchronous timeouts are nothing but a headache. do async timeouts with trio instead
[22:36:20] *** Quits: superherointj (~superhero@189-113-69-2.static.sumicity.net.br) (Quit: Leaving)
[22:36:40] <habnabit_> aselman4, it could also be caused by the typos in this code, but i still recommend "don't do that"
[22:36:48] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[22:37:09] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[22:37:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[22:37:39] *** Joins: hudo (~hudo@62.68.27.70)
[22:37:39] *** Joins: y1n (~y1n@84-115-64-43.wifi.dynamic.surfer.at)
[22:38:40] <aselman4> habnabit_: yes ok, but why? if i put the with in a for loop and run it 100 times, it will work as expected. but there are times (i have not been able to reproduce it locally) when it doesnt work and cause the whole process to end
[22:39:34] <aselman4> habnabit_: why does it work work "most of the time" and only sometimes it doesnt work?
[22:39:36] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:41:15] <Guddu> Can pip accept proxy user and password?
[22:42:20] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[22:43:12] *** Joins: netsan (~netsan@user/netsan)
[22:43:46] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 244 seconds)
[22:45:04] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[22:46:03] *** Joins: Pickchea (~private@user/pickchea)
[22:46:21] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[22:47:28] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:50:02] *** Quits: jpic (~jpic@82.142.10.190) (Ping timeout: 245 seconds)
[22:50:26] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[22:50:37] *** Quits: y1n (~y1n@84-115-64-43.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[22:51:24] *** Joins: Gudddu (~Guddu@190.84.88.92)
[22:52:22] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[22:53:31] *** Joins: txtsd (~txtsd@user/txtsd)
[22:53:50] *** Joins: magla (~gelignite@55d4a93f.access.ecotel.net)
[22:54:09] *** Joins: Auron (Auron956@user/auron)
[22:54:17] <raxor2k> bjs: you see that there are 2 dicts with ID=1, i want to take the points from them two and add together
[22:54:28] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[22:54:37] <raxor2k> in other words: I want to iterate and check whether there are similar dicts and add them together ..
[22:54:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:55:08] <habnabit_> aselman4, this reads to me like "hey so i cut a hole in my abdomen and when i press on my internal organs through the hole _sometimes_ i pass out from the intense pain but other times not. why?"
[22:55:27] <habnabit_> aselman4, you weren't supposed to cut the hole in the first place; you have voided your warranty
[22:55:45] <Gudddu> Why do i get this error https://dpaste.com/GVRCLY7ZP#wrap despite having Version: 56.0.0 of setuptools installed?
[22:55:47] *** Joins: audiophile_ (~audiophil@user/audiophile)
[22:55:59] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[22:56:11] <audiophile_> hi, what formatstring should i use for "12:31:17.09" timestamp to grab the millisecond too?
[22:56:13] <aselman4> habnabit_: im not asking for analogies, im asking for an explanation. that will give me a better understanding of the problem and how to improve the solution
[22:56:29] <bjs> raxor2k: ah okay, well that `if` isn't quite right,  you want to change that `merged[id].update(name_dict)` line. That line is the one that's actually doing the "merging"
[22:56:41] <zware> aselman4: Your best bet is to avoid ctypes :)
[22:56:52] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[22:57:11] *** Joins: jpic (~jpic@82.142.28.254)
[22:57:12] <bjs> raxor2k: and dict.update is just a dumb way to merge, "copy everything over and overwrite anything that was already there". Maybe you want something clever, "copy over X and Y, but combine Z"
[22:57:13] <raxor2k> bjs: hmm okei
[22:57:17] <habnabit_> aselman4, the explanation is: you are manipulating python's internals in a way that you are normally forbidden from doing. so.. unless you want to do a lot of reading on _deep_ VM internals, i suggest instead: stop doing that
[22:57:51] <raxor2k> bjs: this is you`re example from earlier today
[22:58:29] <habnabit_> aselman4, think of it this way: any time someone tells you that a problem can be solved by using ctypes.pythonapi, it's actually just a prank they're pulling on you
[22:58:48] <habnabit_> aselman4, really, truly, it will not solve any problems
[22:59:51] <bjs> raxor2k: yeah I know,  I didn't say my merge procedure would work for all cases for all different kinds of "merge", obviously you were going to have to understand how the code works and modify it to do the thing you need
[23:00:38] <aselman4> habnabit_: ok, is there another way to interrupt a single threaded script? you mentioned trio, is that able to interrupt the main thread. maybe interupt is not the right word but im looking for a way to a way to limit how much time a method in the main thread takes to execute
[23:01:06] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:01:09] <raxor2k> jesus ..
[23:01:20] <habnabit_> aselman4, what do you want to happen if the timeout is reached?
[23:02:29] *** Joins: regreg_ (~regreg@2a02:2f09:531a:c700:7157:a3c1:3d54:3f04)
[23:02:41] <bjs> raxor2k: what?
[23:02:44] *** Joins: Samian (~Sami@163.114.130.5)
[23:03:19] <raxor2k> nvm
[23:03:24] <raxor2k> i find another solutino
[23:03:40] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:f4f9:eac6:15a3:9902) (Ping timeout: 240 seconds)
[23:03:50] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:04:43] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[23:04:56] <aselman4> habnabit_: stop executing the method and continue executing the next line
[23:05:36] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[23:05:43] <habnabit_> aselman4, ok. and what is the method doing that you want to time out? a lot of things do have a builtin timeout option
[23:06:01] *** Joins: thiras (~thiras@user/thiras)
[23:06:31] <raxor2k> bjs: i mean, im using this command: "      duplicates = any(self.p_muscle_group_list.count(x) > 1 for x in self.p_muscle_group_list)"  and it gives me false ???
[23:06:36] <raxor2k> hows that possible
[23:06:57] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[23:08:57] <aselman4> habnabit_: yes that option was considered but the ideal option is we use a timeout mechanism that is independent of the method. if there is no reliable way to do that, we will have to modify the method (which was want to avoid)
[23:10:00] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:dde8:210d:8bb2:f9ad)
[23:10:04] <habnabit_> aselman4, sure; trio gives you that
[23:10:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:10:31] <habnabit_> aselman4, but you need to be using trio's async. i prefer writing code using trio anyway, so
[23:10:38] *** Joins: fofoni (~fofoni@user/fofoni)
[23:10:57] <bjs> raxor2k: it means there's no duplicates probably
[23:11:04] <homura> i am learning to code
[23:11:47] <aselman4> habnabit_: will look into using trio. thank you.
[23:12:14] <raxor2k> bjs: and thats wrong
[23:12:22] <habnabit_> aselman4, if you _must_ write it with blocking IO (first, sorry..), depending on your OS, you might have better luck using signal.alarm
[23:12:26] <raxor2k> there is 2 dicts of ID=1
[23:12:28] <raxor2k> are
[23:12:52] <bjs> raxor2k: well your line doesn't ask "are there two dicts with the same ID" it asks "are there two dicts that are exactly the same"
[23:14:05] <foo> I snagged this library in the interest of building something quickly: https://pypi.org/project/treillage/
[23:14:18] <foo> It's async. Is there a way to use it sync so I can walk through the code in python shell?
[23:14:31] <habnabit_> foo, ipython lets you run async code inline
[23:14:37] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 245 seconds)
[23:14:42] *** Joins: DerpGusta_ (~quassel@user/derpgusta)
[23:14:48] <zware> foo: See also `python -m asyncio`
[23:14:49] *** Joins: upsala (~zcb@185.213.155.160)
[23:14:55] <habnabit_> aselman4, but, to be clear, there's no general mechanism to put a deadline/timeout on an arbitrary line of python code. aside from solutions that straight up don't work (like the one you originally shared), there's a number of situation-dependent options, like trio
[23:14:59] *** Joins: nickodd (~nickodd@user/nickodd)
[23:15:26] <habnabit_> zware, but that locks you in to asyncio
[23:15:44] <aselman4> habnabit_: i got the idea from here: https://stackoverflow.com/a/325528/506185
[23:15:45] <foo> habnabit_ / zware - thanks, is it reasonably safe to assume the python shell by itself doesn't let me run async code? I'm pretty sure it doesn't, I know things get funny in pdb.
[23:15:59] <habnabit_> aselman4, yes, stack overflow is full of incorrect answers
[23:16:22] <raxor2k> bjs: why? just why ? https://bpa.st/ULJQ
[23:16:25] <habnabit_> foo, the standard >>> REPL will let you run async code but not in a way that's amenable to interactive use
[23:16:51] <habnabit_> foo, i.e. it's not forbidden; it's just extremely inconvenient
[23:17:05] <zware> foo: `-m asyncio` (or maybe `-m trio`?  Haven't used it) will let you directly `await` async defs.  pdb works fairly OK, but has some quirks
[23:17:06] <bjs> raxor2k: Python is doing exactly what you ask, it's counting up how many times that ID appears in that list, but presumably it never does.  The list is full of dicts
[23:17:16] <bjs> raxor2k: [{"x": "y"}].count("x")  is 0
[23:17:33] <raxor2k> bjs: ok any suggestion pls ?
[23:17:36] <raxor2k> my head is gone
[23:17:47] <bjs> raxor2k: do what I said,  don't just update()
[23:18:04] <raxor2k> i am not updating here ?
[23:18:07] <raxor2k> in this functin
[23:18:12] <raxor2k> im just checking
[23:18:36] <bjs> raxor2k: okay but I assumed this function was just a weird check,  you had the function earlier that was basically copy/paste from what I Wrote with update()
[23:18:59] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:74ce:2b07:aeff:fbe2) (Remote host closed the connection)
[23:19:08] <bjs> raxor2k: but you want to instead of going `merged[id].update(elem)` you want to "merge" elem into merged[id] more manually,  copy over some keys directly, add up others etc
[23:19:17] <raxor2k> omg ..
[23:19:18] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:74ce:2b07:aeff:fbe2)
[23:19:21] <raxor2k> why are you doing this to me
[23:19:35] <bjs> raxor2k: like `merged[id]["foo"] = elem["foo"]; merged[id]["count"] += elem["count"]; ...` etc
[23:19:37] <bjs> raxor2k: doing what?
[23:19:51] <bjs> + maybe some checks for keys that may not exist in `elem` I guess
[23:20:10] <raxor2k> nahh man
[23:20:13] <raxor2k> im done for today
[23:20:15] <raxor2k> have a good night
[23:20:25] <raxor2k> i might try again tomorrow :)
[23:21:25] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:21:26] *** Joins: Hax0r (~Hax0r@128.127.222.236)
[23:22:47] <bjs> raxor2k: well make a note of what I say or something
[23:22:54] <bjs> so you remember and can try again
[23:27:28] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 252 seconds)
[23:27:51] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[23:28:31] <foo> habnabit_ / zware - thanks. I might give ipython a try, never tried this. *looks at it
[23:30:40] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:30:40] <foo> habnabit_: out of curiosity, do you default to ipython over the regular python3 shell or such?
[23:30:40] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[23:30:56] <habnabit_> foo, sometimes, but not always
[23:32:08] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[23:32:25] *** Joins: anddam (~anddam@user/anddam)
[23:32:34] *** Joins: heco (~redrum@user/redrum88)
[23:32:59] <foo> habnabit_: if not ipython, do you use the regular python shell or something else?
[23:33:22] <habnabit_> foo, it's convenient, but if it's not already installed in the venv, i won't bother. python doesn't have great support for having, like, an overlay venv
[23:33:53] <habnabit_> foo, i'll use the stock REPL or ipython. jupyter notebook for graphical stuff, but that's a whole 'nother ball of wax
[23:33:58] <foo> habnabit_: I did pip install ipython and seemed to get right in. Although, I don't know if I want all of this in my requirements.txt ha
[23:34:07] <grym> foo: that's why there are dev deps
[23:34:07] <anddam> howdy, can I have an optional named arg without a default value? should I just parse **kwargs?   e.g.   def my_function(a=1, b="foo", c, *args, **kwargs)    and then call   my_function(a=3, c=10)
[23:34:14] <foo> grym: oh, great point, thank you.
[23:34:29] <grym> anddam: as written that's a syntax error
[23:34:38] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[23:34:38] <grym> you can't have arguments with no defaults that follow ones that have
[23:34:44] <habnabit_> anddam, def my_function(a=1, b="foo", *, c):
[23:34:45] <foo> ipython seems much nicer thus far, I like how easily I can paste a function in
[23:34:56] <grym> i use ipython a *lot*
[23:35:03] <habnabit_> anddam, unless you wanted to collect *args/**kwargs for some reason
[23:35:19] <grym> so much so that i've bound it to a keyboard shortcut
[23:35:20] <foo> grym: good to know, it's so easy to edit a block. I might start using this. Do you generally install in dev deps or do you have a global install of ipython?
[23:35:42] <habnabit_> foo, a global install is pretty useless, since it can't use local libraries
[23:35:45] <grym> foo: both.  one per project as a dev dep, and then i persist a pipx-managed ipython that's crammed full of random packages in a heap
[23:35:52] <grym> which i use for answering #python questions, mostly
[23:36:21] <habnabit_> foo, but yes, having ipython as a dev dependency is fine. as a 'dev' extra or with something that has more first-class support like poetry
[23:36:24] <anddam> habnabit_: mmm, this is a __init__ method, accepting a, b and c parameters, I initially accepted default values there, now I moved the assignment of instance vars to a dedicated functions and am just passing values from __init__ to this setup_function
[23:36:25] <grym> so it's a global install, but it is installed in its own venv
[23:36:31] <foo> habnabit_: oh, great point. Well, this is awesome, I'll start using this a bit more - my manual async tests seem to be running flawlessly thus far.
[23:36:46] <foo> grym: right, I'm following - thanks!
[23:37:03] <anddam> habnabit_: I'd avoid having default but the code as it was had several point where I init without one or the other value (relying on default values)
[23:37:07] <habnabit_> anddam, i don't bother writing __init__ methods ever anymore. attrs takes care of it way better
[23:37:43] *** Parts: homura (root@user/homura) ()
[23:37:55] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[23:38:24] *** Joins: emika2 (~emika@83.136.182.173)
[23:38:28] <anddam> habnabit_: so, tell me about LOOM
[23:38:37] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[23:38:38] <habnabit_> anddam, i have no idea what that is
[23:38:38] *** Joins: Enitin (~Enitin@82.102.22.84)
[23:39:06] <anddam> habnabit_: it's a reference to the first Monkey Island
[23:39:14] <habnabit_> anddam, ok?
[23:39:37] *** Quits: emika (~emika@185.207.249.97) (Ping timeout: 245 seconds)
[23:39:37] *** emika2 is now known as emika
[23:39:43] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[23:39:52] <grym> anddam: i'm selling these fine leather jackets
[23:40:13] <yitz> Arch ftw!
[23:41:00] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[23:42:40] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[23:42:49] <anddam> grym: ha, I am missing that one
[23:43:00] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:fce0:ddee:4345:8568)
[23:43:09] <anddam> habnabit_: I see that's a third party package
[23:43:16] <habnabit_> anddam, astute
[23:43:44] <anddam> habnabit_: …have you been practicing with the Sword Master?
[23:43:58] <grym> anddam: same game :)
[23:43:58] <anddam> anyway, you meant https://www.attrs.org/ right?
[23:44:01] <habnabit_> anddam, i'm lost in all these references
[23:44:10] <habnabit_> anddam, yes, that attrs
[23:44:14] <anddam> habnabit_: I am done with those
[23:44:19] <anddam> (references)
[23:46:43] <anddam> habnabit_: I am sticking with init for now, but I'll keep those in mind
[23:46:46] *** Quits: netsan (~netsan@user/netsan) (Remote host closed the connection)
[23:46:47] *** Joins: Enitin (~Enitin@82.102.22.85)
[23:46:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[23:46:58] <anddam> I see data classes are described as "more elegant"
[23:47:42] <habnabit_> anddam, there's dataclass in the stdlib if you want to get a taste for it, but i strongly recommend using attrs anyway. either one is vastly superior to hand-written classes
[23:48:07] *** Joins: blingrang (~blingrang@user/blingrang)
[23:48:25] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[23:49:15] *** Quits: blingrang (~blingrang@user/blingrang) (Client Quit)
[23:50:28] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[23:51:22] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[23:52:30] *** Joins: sliwkr (~kks@193.32.127.216)
[23:53:22] *** Joins: Dotz0cat (~Dotz0cat@h210.68.213.151.dynamic.ip.windstream.net)
[23:54:26] *** Joins: nergar (~Nergar@177.225.152.16)
[23:55:27] *** Quits: ironfroggy (sid495156@tooting.irccloud.com) ()
[23:55:41] *** Joins: ironfroggy (sid495156@id-495156.lymington.irccloud.com)
[23:56:33] *** Quits: amblina (uid514860@id-514860.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:57:22] *** Joins: Dotz0cat_ (~Dotz0cat@h176.117.90.75.dynamic.ip.windstream.net)
[23:57:39] *** Quits: Dotz0cat (~Dotz0cat@h210.68.213.151.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[23:58:02] *** Joins: d00gy (~d00gy@user/d00gy)
[23:58:10] *** Dotz0cat_ is now known as Dotz0cat
[23:59:01] <matsaman> can you not type out multiple lines of code in pdb?
