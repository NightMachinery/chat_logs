[00:01:09] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[00:02:34] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:05:47] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[00:11:45] <d_bot> <zakkor> array languages are great!
[00:11:46] <d_bot> <zakkor> https://www.youtube.com/watch?v=Nw8HunLC19Q
[00:17:24] *** Quits: grobe0ba (~grobe0ba@2001:19f0:5c01:e36:6417:c1c1:77e9:19ed) (Quit: ZNC 1.8.2 - https://znc.in)
[00:19:58] * qwr thinks you could use unicode math symbols in ocaml or haskell, whether the readers love it would probably be a matter of taste...
[00:22:18] *** Joins: grobe0ba (~grobe0ba@2001:19f0:5c01:e36:ebb9:bc05:a655:5788)
[00:24:05] <d_bot> <NULL> Talk about jargon and unfamiliar reasoning
[00:24:16] * Anarchos enjoys to see unicode symbols in source code : no reason to get stuck to ascii in 2021...
[00:24:44] <d_bot> <NULL> Yes there is: keyboard make typing ASCII much easier
[00:25:10] <Armael> not having a unicode keyboard in 2021 :/
[00:26:35] <d_bot> <NULL> Wait what's that
[00:29:53] <Anarchos> d_bot with vim, it is really easy to access unicode chars
[00:30:33] <d_bot> <NULL> The pseudo is NULL; what does it do ?
[00:35:33] <companion_cube> qwr: not valid syntax actually
[00:39:44] * qwr is surprised, äs i've seen french ocaml code but now it seems not work and haskell seems to allow only some subset of utf-8?
[00:39:56] <d_bot> <NULL> Latin-1 IIRC
[00:41:09] <Anarchos> qwr back to camllight, you could use "éè" in ident, but not anymore in OCaml
[00:41:31] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[00:41:54] * qwr . o O ( at least it works in yeti, ∑ = sum was valid there ;) )
[00:42:38] <d_bot> <NULL> I recalled wrong
[00:46:25] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:51:56] <qwr> unicode combining characters would make real fun operators, if it were allowed
[01:16:26] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[01:19:20] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:25:46] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 268 seconds)
[01:32:11] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:40:50] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[01:56:55] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:09:08] *** Quits: bartholin (~bartholin@158.110.70.215) (Quit: Leaving)
[02:31:33] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[02:33:02] *** Joins: rgrinberg (~textual@187.223.250.159)
[02:52:59] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[02:58:36] *** Quits: mro (~mro@2002:5cc3:f2d8:0:a8a0:4cd3:b0f8:ee8f) (Quit: Leaving...)
[03:02:43] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[03:04:44] *** Joins: rgrinberg (~textual@187.223.248.37)
[03:06:19] *** Joins: zebrag (~chris@user/zebrag)
[03:07:40] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[03:23:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:24:51] *** Joins: namkeleser (~namkelese@101.175.128.51)
[03:27:13] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[03:28:33] <companion_cube> It used to allow Latin 1 yes
[03:28:42] <companion_cube> All deprecated thankfully
[03:30:23] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[03:31:11] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[03:32:40] <d_bot> <NULL> How recently if you remember ?
[03:38:16] *** Joins: chrisz (stvq5qip4i@55d46d37.access.ecotel.net)
[03:38:26] <companion_cube> Hmm I'm probably wrong but I think around 4.03
[03:51:48] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Quit: leaving)
[03:52:08] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[03:52:13] *** Joins: xd1le (~xd1le@user/xd1le)
[03:57:00] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[04:12:53] *** Quits: Corbin (~Corbin@c-73-67-140-116.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[04:50:16] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Quit: leaving)
[05:02:45] *** Joins: rgrinberg (~textual@187.223.250.159)
[05:05:47] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 252 seconds)
[05:16:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[05:55:49] *** Joins: rgrinberg (~textual@187.223.248.37)
[06:22:22] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:26:04] *** Quits: namkeleser (~namkelese@101.175.128.51) (Ping timeout: 256 seconds)
[06:27:21] *** Parts: abraham (~abraham@143.244.185.86) (The Lounge - https://thelounge.chat)
[06:28:53] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[06:31:23] *** Joins: rgrinberg (~textual@187.223.250.159)
[06:35:00] *** Joins: namkeleser (~namkelese@101.175.128.51)
[06:44:30] *** Joins: zebrag (~chris@user/zebrag)
[06:49:30] *** Joins: dstein64- (~dstein64@dannyadam.com)
[06:50:16] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 260 seconds)
[06:50:41] *** dstein64- is now known as dstein64
[06:55:47] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[07:14:21] *** Joins: rgrinberg (~textual@187.223.144.204)
[07:52:59] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 252 seconds)
[07:54:21] *** Joins: xiongxin (~Thunderbi@119.123.103.170)
[07:55:30] *** Joins: rgrinberg (~textual@187.223.248.37)
[08:19:57] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[08:24:20] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[08:36:04] *** Joins: rgrinberg (~textual@187.223.250.159)
[08:39:59] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:50:38] *** Quits: namkeleser (~namkelese@101.175.128.51) (Quit: Client closed)
[08:59:32] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[09:07:11] *** Joins: rgrinberg (~textual@187.223.250.159)
[09:07:43] *** Joins: mbuf (~Shakthi@122.174.197.155)
[09:20:42] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[09:21:08] *** Joins: rgrinberg (~textual@187.223.144.204)
[09:31:26] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 252 seconds)
[09:35:33] *** Joins: namkeleser (~namkelese@101.175.128.51)
[09:58:17] *** Joins: xiongxin1 (~Thunderbi@113.116.33.239)
[10:00:15] *** Quits: xiongxin (~Thunderbi@119.123.103.170) (Ping timeout: 256 seconds)
[10:00:15] *** xiongxin1 is now known as xiongxin
[10:07:54] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[10:20:39] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[10:27:52] *** Joins: rgrinberg (~textual@187.223.250.159)
[10:37:39] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[10:42:24] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Remote host closed the connection)
[10:42:43] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[10:52:19] *** Joins: rgrinberg (~textual@187.223.250.159)
[11:20:25] *** Joins: shawnw (~shawn_w@152.44.212.188)
[11:21:55] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[11:25:49] *** Joins: rgrinberg (~textual@187.223.250.159)
[12:04:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[12:05:38] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:07:15] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:08:04] *** Joins: rgrinberg (~textual@187.223.248.37)
[12:08:40] *** Quits: chrisz (stvq5qip4i@55d46d37.access.ecotel.net) (Quit: leaving)
[12:12:57] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[12:18:04] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[12:28:56] *** Joins: Techcable (~Techcable@168.235.93.147)
[12:35:32] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[12:43:01] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[12:46:45] *** Joins: bartholin (~bartholin@109.53.6.144)
[13:15:11] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[13:27:01] *** Quits: bronsen (~bronsen@2a04:d480:0:1::3) (Quit: WeeChat 3.3)
[13:27:16] *** Joins: bronsen (~bronsen@2a04:d480:0:1::3)
[13:31:00] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[13:48:15] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[13:59:39] *** Joins: olle_ (~olle@i5E866D88.versanet.de)
[14:22:29] *** Joins: mro (~mro@port-92-195-160-189.dynamic.as20676.net)
[14:29:29] *** Quits: bartholin (~bartholin@109.53.6.144) (Ping timeout: 256 seconds)
[14:42:04] *** Joins: bartholin (~bartholin@109.53.0.135)
[15:02:56] *** Quits: mro (~mro@port-92-195-160-189.dynamic.as20676.net) (Remote host closed the connection)
[15:05:05] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:10:52] *** Joins: mro (~mro@port-92-195-160-189.dynamic.as20676.net)
[15:12:35] *** Quits: mro (~mro@port-92-195-160-189.dynamic.as20676.net) (Remote host closed the connection)
[15:14:19] *** Joins: spip (~bobo@2a01:e0a:8d3:a300:ca60:ff:fe98:ce57)
[15:14:31] *** spip is now known as Guest9898
[15:21:47] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[16:02:55] *** Joins: Goldstein (~Goldstein@2a02:2168:aeac:2100:1144:4d27:84df:f718)
[16:02:56] *** Quits: namkeleser (~namkelese@101.175.128.51) (Ping timeout: 256 seconds)
[16:04:45] <Goldstein> Hi! I'm trying to learn some OCaml by solving Advent of Code puzzle. I've written a working solution of Python, but after rewriting it to OCaml it started giving wrong answers. I can't find the difference between two solutions (except language, of course): https://gist.github.com/GoldsteinE/d0a324844871f7d70687bf932aaf2662
[16:05:29] <Goldstein> Somehow OCaml version gives higher answer than Python version
[16:12:14] *** Joins: gravicappa (~gravicapp@178.214.248.43)
[16:16:04] <d_bot> <antron> Goldstein: im not able to eyeball it. can only suggest finding a small example where there is a difference
[16:16:47] <Goldstein> Yeah, I'm trying to craft a minimal input that breaks the solution, but no luck so far
[16:17:12] <d_bot> <antron> but i do recommend using `Hashtbl.replace` (<https://ocaml.org/api/Hashtbl.html#VALreplace>) rather than `Hashtbl.add`, `add` masks the previous binding but does not replace it
[16:17:34] <d_bot> <andreypopp> was just about to point about `Hashtbl.add`!
[16:17:55] <Armael> that might be it! because then the fold will iterate over the several bindings
[16:18:01] <Goldstein> Thanks! Hashtbl.replace solves the problem. I'm going to re-read Hashtbl documentation
[16:18:17] <d_bot> <antron> Armael, wow, i didn't realize it would do that
[16:18:37] <d_bot> <antron> i do use Hashtbl.replace consistently these days, but now im horrified about my usage of Hashtbl.add back in the day
[16:18:41] <d_bot> <andreypopp> I remember I was stumbled upon that when was learning OCaml
[16:19:44] <d_bot> <andreypopp> the good thing `Base.Hashtbl.add` returns `Ok | Duplicate` and I use `Base` now mostly
[16:29:15] *** Quits: bartholin (~bartholin@109.53.0.135) (Ping timeout: 252 seconds)
[16:43:21] *** Joins: bartholin (~bartholin@109.53.2.103)
[17:45:51] <d_bot> <VPhantom> Yeah it's odd that `add` effectively stacks. I was bitten by that one too.
[17:46:05] <d_bot> <leviroth> I'm a tad horrified that `Hashtbl.add` does that.
[17:56:04] <qwr> there is Hashtbl.replace
[17:58:44] <qwr> the add is actually useful somethimes and is probably done to use/expose internal separate chaining, though might have been clearer with 'a list Hashtbl.t
[17:59:55] <d_bot> <leviroth> yeah, exactly, I'm sure a hashtable where the values are stacks is useful sometimes, but you can just do that explicitly
[18:01:14] <d_bot> <leviroth> Is there any other language where, immediately after removing a key from the default hashtable data structure, the key can still be present?
[18:01:22] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[18:01:31] *** Joins: rgrinberg (~textual@187.223.144.204)
[18:01:39] *** Joins: zebrag (~chris@user/zebrag)
[18:09:35] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Quit: leaving)
[18:09:54] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[18:18:59] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[18:29:41] *** Quits: bartholin (~bartholin@109.53.2.103) (Ping timeout: 256 seconds)
[18:33:22] *** Joins: Corbin (~Corbin@c-73-67-140-116.hsd1.or.comcast.net)
[18:33:23] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.3)
[18:34:35] *** Joins: unyu (~pyon@user/pyon)
[18:35:21] *** Quits: olle_ (~olle@i5E866D88.versanet.de) (Ping timeout: 256 seconds)
[18:35:35] *** Joins: rgrinberg (~textual@187.223.144.204)
[18:35:44] *** Quits: xiongxin (~Thunderbi@113.116.33.239) (Quit: xiongxin)
[18:35:59] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Remote host closed the connection)
[18:36:39] <d_bot> <VPhantom> I guess that's why it's called `remove` and not `delete` or `unset`.
[18:37:08] <d_bot> <VPhantom> But yeah it probably should be made clearer from very early on in the documentation that it's a hash of stacks.
[18:42:09] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[18:42:13] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Ping timeout: 256 seconds)
[18:42:50] *** Joins: bartholin (~bartholin@109.53.0.177)
[18:44:41] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[18:51:23] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[18:52:09] <d_bot> <antron> https://github.com/ocaml/ocaml/edit/trunk/stdlib/hashtbl.mli 🙂
[19:01:18] *** Joins: gzj (~GZJ0X@216.24.178.99.16clouds.com)
[19:02:20] <d_bot> <VPhantom> A pull request in OCaml itself? 😱 I am just a rookie. 😛
[19:06:34] <d_bot> <Et7f3> > Previous bindings for [key] are not removed, but simply
[19:06:35] <d_bot> <Et7f3> >    hidden
[19:07:10] <d_bot> <VPhantom> Yes. Actually `add` describes the stack behavior very clearly (which is how I knew to search for something else, and found `replace`). That said, I don't see an equivalent for `remove` which would remove everything at the key. 🤔
[19:07:42] *** Quits: gzj (~GZJ0X@216.24.178.99.16clouds.com) (Remote host closed the connection)
[19:08:27] *** Joins: rgrinberg (~textual@187.223.144.204)
[19:08:54] *** Joins: mro (~mro@port-92-195-160-189.dynamic.as20676.net)
[19:08:58] <d_bot> <Et7f3> useful for a compiler: When you see a variable just add it to env and when you go out of scope you have a list of variable added at that scope you can remove
[19:10:13] <d_bot> <VPhantom> Instead of managing a hash table per scope and search through each one from closest to furthest. Clever.
[19:10:41] <d_bot> <NULL> Or you use an immutable structure
[19:11:03] <d_bot> <VPhantom> I was thinking about `Map` or something for that, yeah.
[19:11:47] <d_bot> <Et7f3> it become log(depth)*log(mean var per level)
[19:11:59] <d_bot> <Et7f3> so a bit slower
[19:12:03] <d_bot> <VPhantom> (The more I use OCaml, the more I realize it's the language I always wanted but never knew existed until just a couple years ago.)
[19:12:22] <d_bot> <NULL> "mean var per level" ?
[19:12:35] <d_bot> <Et7f3> moyenne de variable par niveau 🤷
[19:12:52] <d_bot> <NULL> Doesn't help
[19:13:16] <d_bot> <VPhantom> Still, I'm surprised there's no `Hashtbl.remove_all` which would remove a key (vs `remove` which just pops).
[19:13:48] <d_bot> <Et7f3> number of variables/depth
[19:13:53] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[19:13:53] <d_bot> <VPhantom> Average number of symbols per scope, I think? Yeah.
[19:13:59] <d_bot> <Et7f3> Yes thanks
[19:14:39] <d_bot> <NULL> Why would it not be `log(nb_vars)` total ?
[19:15:44] <d_bot> <Et7f3> You repeat the lookup in many small maps so it has *
[19:15:47] <d_bot> <VPhantom> Hm, yeah there would always be just one `Map` to search, the inner scope's.
[19:16:00] <d_bot> <NULL> ^ single map
[19:16:19] <d_bot> <NULL> That's also why it's comfortable, you only have a single environment
[19:16:21] <d_bot> <Et7f3> let global = 4
[19:16:21] <d_bot> <Et7f3> let fx x = x + global
[19:16:57] <d_bot> <VPhantom> Maps are immutable, so you'd have a local copy with local variables, if you will, as you create inner scopes.
[19:17:00] <d_bot> <NULL> That's a closure, you completely swap out your environment
[19:17:06] <d_bot> <Et7f3> one map with global one with x and when you goes out of fx you need to recover your old env
[19:17:21] <d_bot> <VPhantom> Oh, closures. 🤔
[19:17:56] <d_bot> <VPhantom> The scope of `fx` would simply be kept. If `global` changed after its creation, it would still be `4` in that scope.
[19:18:24] *** Joins: rgrinberg (~textual@187.223.248.37)
[19:18:25] <d_bot> <Et7f3> well depend of implementation: You either copy all bindings or you have a tree structure and lookup is slower
[19:18:27] <d_bot> <NULL> (`global` can't change)
[19:18:48] <d_bot> <leviroth> Simply call `remove` and `mem` in a loop. Or for an O(1) solution, use `Hashtbl.replace table key (Obj.magic ())` and pray to the runtime gods.
[19:18:51] <d_bot> <NULL> Well it's immutable, you "copy" at 0 cost
[19:19:49] <d_bot> <Et7f3> but then how you handle: ```
[19:19:50] <d_bot> <Et7f3> let global = 4
[19:19:52] <d_bot> <Et7f3> let fx x =
[19:19:53] <d_bot> <Et7f3>   let global = 3 in
[19:19:54] <d_bot> <Et7f3>   global + x
[19:19:56] <d_bot> <Et7f3> ```
[19:20:05] <d_bot> <NULL> Not the same var
[19:20:20] <d_bot> <VPhantom> Yeah I was thinking of `replace ; remove` (didn't know about the magic trick). Depending on the implementation of `replace`, it could be more efficient than a loop of `remove`.
[19:20:21] <d_bot> <NULL> You shadow the outer `global` with your inner one
[19:21:07] <d_bot> <Et7f3> Yes but for a compiler how do you differentiate both (you need two "global" stored)
[19:21:31] <d_bot> <VPhantom> Your `fx` would have to carry with it the scope as it was when it was declared.
[19:21:42] <d_bot> <leviroth> To be clear, I'm not sure it's actually safe to use `Obj.magic` here; it might cause segfaults or worse problems depending on implementation details of the compiler.
[19:22:02] <d_bot> <VPhantom> Yeah my take-away as a rookie was "know it exists, but never touch it". 😛
[19:22:09] <d_bot> <NULL> You can do some name disambiguation by adding info in the name (or use more than the name as index to your env)
[19:22:31] <d_bot> <leviroth> I'd be surprised if `replace` were not O(1), but I guess it's not the first time I'd be surprised today.
[19:23:11] <d_bot> <VPhantom> I'm mostly surprised to be chatting about OCaml on my first day off in several weeks. I should go for a walk, or something. 😉
[19:23:56] *** Quits: rgrinberg (~textual@187.223.248.37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:24:21] <d_bot> <Et7f3> Wait but we have a #compilers channel
[19:24:32] <d_bot> <NULL> We do
[19:25:05] <d_bot> <Et7f3> I propose we move here
[19:34:46] *** Joins: olle_ (~olle@i5E866D88.versanet.de)
[19:44:15] <Franciman> which garbage collection strategy does ocaml use?
[19:46:56] *** Joins: rgrinberg (~textual@187.223.248.37)
[19:56:36] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 245 seconds)
[20:04:23] *** Joins: rgrinberg (~textual@187.223.250.159)
[20:13:20] *** Joins: oriba (~oriba@dynamic-078-054-209-177.78.54.pool.telefonica.de)
[20:24:29] *** Quits: mro (~mro@port-92-195-160-189.dynamic.as20676.net) (Remote host closed the connection)
[20:29:25] *** Quits: bartholin (~bartholin@109.53.0.177) (Ping timeout: 252 seconds)
[20:36:07] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:41:36] *** Joins: bartholin (~bartholin@109.53.3.39)
[20:55:29] <d_bot> <hcarty> https://dev.realworldocaml.org/garbage-collector.html has a decent description. Generational mark and sweep with big changes to enable parallel collection coming in OCaml 5.x. Someone with GC expertise could give a more precise answer!
[21:01:10] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:08:50] <Franciman> thanks a lot @hcarty
[21:09:40] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:20:33] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:35:37] *** Quits: olle_ (~olle@i5E866D88.versanet.de) (Ping timeout: 256 seconds)
[21:41:35] *** Joins: mro (~mro@port-92-195-160-189.dynamic.as20676.net)
[21:59:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[22:00:21] *** Quits: mro (~mro@port-92-195-160-189.dynamic.as20676.net) (Remote host closed the connection)
[22:02:44] *** Joins: rgrinberg (~textual@187.223.248.37)
[22:08:14] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[22:12:41] *** Joins: gareppa (~gareppa@user/gareppa)
[22:13:42] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:16:13] *** Joins: mro (~mro@2002:5cc3:a0bd:0:515c:7a2c:21c0:8c54)
[22:19:19] *** Quits: mbuf (~Shakthi@122.174.197.155) (Quit: Leaving)
[22:28:47] *** Quits: mro (~mro@2002:5cc3:a0bd:0:515c:7a2c:21c0:8c54) (Remote host closed the connection)
[22:29:23] *** Quits: bartholin (~bartholin@109.53.3.39) (Ping timeout: 256 seconds)
[22:35:54] *** Joins: rgrinberg (~textual@187.223.250.159)
[22:40:42] *** Joins: wwilly_ (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[22:41:17] *** Quits: gravicappa (~gravicapp@178.214.248.43) (Ping timeout: 256 seconds)
[22:41:18] *** Joins: shawn (~shawn_w@152.44.212.188)
[22:42:09] *** Joins: gahr_ (~gahr@user/gahr)
[22:42:15] *** Quits: gahr (~gahr@user/gahr) (Read error: Connection reset by peer)
[22:42:25] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Ping timeout: 256 seconds)
[22:42:43] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[22:42:56] *** Joins: Techcable_ (~Techcable@168.235.93.147)
[22:43:21] *** Joins: bartholin (~bartholin@109.53.4.168)
[22:43:57] <d_bot> <VPhantom> Wasn't there already a significant change this past year? A new algorithm which performed mostly better, was optional at first… I don't remember exactly what. 🤔
[22:44:03] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[22:44:40] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:44:40] *** Quits: shawnw (~shawn_w@152.44.212.188) (Ping timeout: 256 seconds)
[23:00:29] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[23:01:36] *** Joins: mro (~mro@port-92-195-160-189.dynamic.as20676.net)
[23:01:41] <d_bot> <quernd> Next-fit allocation policy is now default since 4.13
[23:01:52] *** Joins: olle_ (~olle@i5E866D88.versanet.de)
[23:02:10] <d_bot> <quernd> Best-fit, I mean. Next-fit was default before
[23:05:31] <d_bot> <JulesHastings200> merci !
[23:11:04] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[23:12:31] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[23:30:46] *** Joins: gravicappa (~gravicapp@178.214.248.43)
[23:31:20] *** Joins: rgrinberg (~textual@187.223.248.37)
[23:35:11] *** Quits: gravicappa (~gravicapp@178.214.248.43) (Ping timeout: 256 seconds)
[23:44:31] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 245 seconds)
