[00:04:38] *** Quits: rgrinberg (~textual@187.223.75.25) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:07:46] *** Joins: nvrhome (~Bop@user/nvrhome)
[00:08:47] *** Joins: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it)
[00:09:07] *** Quits: aLeSD_ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[00:11:48] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[00:13:07] *** Quits: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it) (Read error: Connection reset by peer)
[00:14:21] *** Joins: Pook (~Pook@2001:8a0:f996:1400:f909:4c0c:aa04:14f6)
[00:15:47] *** Joins: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it)
[00:15:55] *** Quits: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) (Ping timeout: 256 seconds)
[00:18:32] *** Quits: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it) (Read error: Connection reset by peer)
[00:19:55] *** Joins: shailangsa_ (~shailangs@host86-186-142-101.range86-186.btcentralplus.com)
[00:21:16] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[00:21:23] *** Joins: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it)
[00:22:21] *** Quits: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it) (Read error: Connection reset by peer)
[00:26:02] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[00:27:28] *** Joins: u0_a3912 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com)
[00:27:38] *** Joins: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it)
[00:29:06] *** Quits: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it) (Remote host closed the connection)
[00:30:06] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:31:02] *** Quits: u0_a3911 (~u0_a391@2600:380:a469:f561:b41b:9e23:5684:1845) (Ping timeout: 240 seconds)
[00:31:35] *** Joins: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it)
[00:31:49] *** Quits: aLeSD__ (~aLeSD@host-95-239-36-79.retail.telecomitalia.it) (Remote host closed the connection)
[00:37:31] *** Joins: jackk (~jackk@93-44-188-36.ip98.fastwebnet.it)
[00:38:33] *** Quits: feldim2425 (~feldim242@dynamic-2jh5bzqmg2iqw4cj0o-pd01.res.v6.highway.a1.net) (Quit: ZNC 1.8.x-git-91-b00cc309 - https://znc.in)
[00:38:42] *** Joins: feldim2425 (~feldim242@178-191-253-102.adsl.highway.telekom.at)
[00:42:36] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:45:12] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[00:47:32] <jackk> ...
[00:50:07] <jackk> can anybody tell me why this app works ? https://bpa.st/OOXQ
[00:54:22] <PJBoy> it may appear to work
[00:54:40] <PJBoy> it's undefined behaviour by the book
[00:55:52] <jackk> undefined behaviour ? i think it should not work
[00:56:04] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:56:31] <PJBoy> !evilub
[00:56:32] <nolyc> What makes undefined behavior particularly evil is not that it might fail; it's that it might succeed. ~ http://toomuchcode.blogspot.com/2007/02/part-4-killer-app.html
[00:56:49] *** Quits: rito_ (~rito_gh@45.112.243.151) (Quit: Leaving)
[00:56:53] <jackk> lol yeah
[00:57:27] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[00:57:38] <jackk> its a nightmare, cos i had a similar case yesterday with char*
[00:59:12] <jackk> its a memory leak
[00:59:42] <PJBoy> it's a possible use-after-free bug
[00:59:47] <PJBoy> but not a memory leak
[01:00:44] <notevil> static string str = "hello";   behaviour would be defined then, right?
[01:01:01] <PJBoy> yeah
[01:01:14] <PJBoy> also `return "hello";`
[01:01:30] <Alipha> jackk: for dev/debug builds, to help catch as many programming errors as possible, I'd suggest compiling with: -W -Wall -pedantic -std=c++17 -fsanitize=address,leak,undefined -D_GLIBCXX_DEBUG
[01:02:10] <jackk> i dont want it to work
[01:02:28] <jackk> notevil
[01:03:04] <jackk> however the docs says: "The pointer returned may be invalidated by further calls to other member functions that modify the object."
[01:03:22] <jackk> not sure if related
[01:04:52] <jackk> same result alipha
[01:05:27] <notevil> clang warnings: warning: address of stack memory associated with local variable 'str' returned [-Wreturn-stack-address].   I don't think there's a way to have it fail on UB.
[01:06:14] <jackk> how can i compile it with clang ?
[01:06:22] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:06:45] <jackk> what is ub ?
[01:07:13] <notevil> jackk: https://godbolt.org/z/oax88q6os  I added to your example.  UB undefined behaviour
[01:07:22] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[01:07:40] <PJBoy> !ub
[01:07:41] <nolyc> http://eel.is/c++draft/defns.undefined
[01:07:48] <PJBoy> erm
[01:07:51] <PJBoy> !nd
[01:07:52] <nolyc> Undefined behavior results when programs attempt to do things for which the standard defines no semantics, and requires no diagnostic either. Examples include dereferencing invalid pointers and dividing by zero. Such a program allows the compiler and the resulting program to do anything, including going on as if nothing happened, formatting your hard drive, or making little demons fly out of your nose.
[01:10:10] <PJBoy> additional example --> https://godbolt.org/z/1xn5YrzPr
[01:11:44] <jackk> what is the command to compile with clang ?
[01:11:49] <Alipha> jackk: unfortunately (and fortunately, for performance) c and c++ are not safe languages. if you want a safe language, look somewhere else :-)
[01:12:17] <jackk> ok but these are the basics
[01:12:36] <PJBoy> clang takes the same arguments as gcc
[01:12:49] <PJBoy> resp. clang++ and g++
[01:13:51] <jackk> also in clang works !
[01:14:16] *** Quits: Forsaken87_ (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:14:29] <Alipha> jackk: but clang gives the above warning notevil showed, if you compile with -W -Wall
[01:14:51] <Alipha> and you can turn all errors into warnings if you add -Werror
[01:15:01] <PJBoy> :<
[01:16:30] <Alipha> ... and you have to use at least clang 10.0
[01:17:30] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[01:18:27] <anyone> When you have unsafe factors like the "human", you need not worry about the language.
[01:19:53] <jackk> its not a my error
[01:20:11] <jackk> the string should not be in memory anymore
[01:20:24] <jackk> if its my error tell me how to fix
[01:21:14] *** Quits: shailangsa_ (~shailangs@host86-186-142-101.range86-186.btcentralplus.com) (Ping timeout: 268 seconds)
[01:23:18] <jackk> i was about to use strdup but then i'd have 2 copies of the string in memory
[01:23:31] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:24:26] <Alipha> jackk: why do you need to return a const char* from forg? return a std::string instead
[01:24:55] *** Joins: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com)
[01:25:20] <jackk> can anybody report the bug
[01:25:28] <jackk> ?
[01:27:02] <Alipha> jackk: clang already reports a warning for your code
[01:27:32] <Alipha> jackk: turn on warnings (-W -Wall -pedantic at the minimum) and heed the warnings.
[01:27:33] <anyone> jackk: I could, but it's not my task to do
[01:28:11] <jackk> alipha its a warning for the compiler itself
[01:28:19] <jackk> not for me
[01:28:51] <jackk> if the warning was for me , there should be a way to fix it
[01:29:09] <Alipha> jackk: what does "fix it" mean?
[01:30:35] <jackk> means auto free the memory after the end of the function
[01:32:31] <Alipha> jackk: no. the program you wrote is invalid. to "fix it" would be to write your program in a different way that doesn't invoke Undefined Behavior.
[01:33:16] <jackk> i could use strdup
[01:33:35] <jackk> but then I'd have 2 copies of the string in memory
[01:33:47] *** Quits: magla (~gelignite@55d4b9f8.access.ecotel.net) (Quit: Stay safe!)
[01:34:50] <jackk> However I think its related to this similar c case https://bpa.st/NAHA
[01:35:31] <Alipha> jackk: notevil already suggested using `static` so that your string will live long enough: https://wandbox.org/permlink/JDCMXfkzD3YKRYaR
[01:35:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:36:24] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:36:52] <Alipha> jackk: i think a better solution would be to return the std::string and delay the use of c_str: https://wandbox.org/permlink/jKtptStaBD3G9G1o
[01:37:38] <jackk> how could i free it using static ?
[01:39:55] *** Joins: rgrinberg (~textual@2806:265:5401:9431:d03e:a2ca:3d77:ef5f)
[01:40:13] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:40:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:40:23] *** ChanServ sets mode: +v npaperbot
[01:40:58] <jackk> ...i cant use string cos i need to use gtk g_signal_connect...
[01:41:56] <Alipha> jackk: you'd have to call forg again with some parameter telling it to clear the std::string or something. it's fairly awkward. it would be easier to make str a global variable. or make a class and have str and forg be a member variable and member function or something
[01:46:20] *** Joins: nostar (~nostar@45.14.195.111)
[01:54:38] *** Joins: masterbuilder (~user@user/masterbuilder)
[01:57:42] *** Quits: jokoon (~eio@2a01:e0a:542:e160:f1f7:4741:3efd:9e56) (Quit: Leaving)
[02:00:46] *** Joins: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net)
[02:04:15] *** Quits: jackk (~jackk@93-44-188-36.ip98.fastwebnet.it) (Quit: Connection closed)
[02:06:11] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:09:02] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:13:13] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[02:13:57] *** Joins: jackkk (~jackiii@93-44-188-36.ip98.fastwebnet.it)
[02:14:09] <jackkk> however
[02:15:42] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[02:15:49] <jackkk> its good to see that here https://bpa.st/KICA a similar error happend but the memory used doesnt increase ! why ?
[02:15:57] <jackkk> (sorry its c)
[02:16:17] *** Quits: zer0bitz (~zer0bitz@196.244.192.57) (Ping timeout: 250 seconds)
[02:18:11] *** Joins: masterbuilder (~user@user/masterbuilder)
[02:18:47] <kalven> because there's no allocation
[02:19:29] <jackkk> if the string is printed...
[02:19:54] <jackkk> its allocated and not deallocated
[02:20:20] <jackkk> then its overwriten ?
[02:20:25] <kalven> no, ctime just returns a pointer to some static array somewhere. it doesn't allocate per call
[02:20:25] *** Quits: rgrinberg (~textual@2806:265:5401:9431:d03e:a2ca:3d77:ef5f) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:22:01] <jackkk> and nobody asked him to allocate staticly
[02:23:09] <kalven> who's he?
[02:23:47] <jackkk> lol
[02:24:07] <jackkk> the app / gcc
[02:24:29] *** Quits: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net) (Quit: WeeChat 3.0)
[02:25:19] <kalven> I mean, you "asked" for it when you decided to call ctime.
[02:25:25] <kalven> it's how that function is defined to work
[02:26:16] <jackkk> also = "something" behave the same
[02:26:40] <kalven> what
[02:27:31] <jackkk> omg
[02:29:06] *** Joins: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338)
[02:29:33] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[02:30:27] *** Quits: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338) (Client Quit)
[02:31:34] *** Quits: T`alZHeimeR (~TaZ@user/taz/x-9470768) (Ping timeout: 260 seconds)
[02:32:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:33:17] *** Quits: pizdets (~pizdets@183.182.111.240) (Ping timeout: 240 seconds)
[02:33:22] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.111.125)
[02:37:00] *** Joins: ferdna (~ferdna@user/ferdna)
[02:44:49] *** Joins: masterbuilder (~user@user/masterbuilder)
[02:46:30] *** Joins: T`alZHeimeR (~TaZ@user/taz/x-9470768)
[02:48:56] <Alipha> `const char *s = "somethign"
[02:49:12] <jackkk> thanks
[02:49:15] *** Joins: seninha (~seninha@user/seninha)
[02:49:26] <Alipha> jackkk: is a pointer to a character array that is embedded in your executable and exists for the lifetime of the program's execution
[02:51:11] <jackkk> i used ctime to not have a constant string
[02:51:11] <Alipha> whereas `char s[] = "something";` would be an array that is initialized "on the stack" (assuming you wrote that inside a function) and the char array ceases to exist after the function ends.
[02:51:25] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[02:52:06] <jackkk> yeah
[02:52:11] <jackkk> this should be
[02:52:28] <jackkk> but its not
[02:52:55] <jackkk> https://bpa.st/NAHA
[02:55:19] <Alipha> jackkk: str and st are both pointers to a string that exists for the lifetime of the program's executation
[02:55:32] *** Joins: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs)
[02:55:44] <Alipha> `char *str` and `char str[]` are different
[02:56:02] <Alipha> the first is a pointer and the latter is an array
[02:58:54] <jackkk> i think that c_str have the same bug for work for the same reason
[02:59:03] *** Joins: poprocks (~logan@user/poprocks)
[02:59:14] <jackkk> i know, with char[] it works correctly
[03:01:09] <Alipha> jackkk: there is no "works correctly". if you write an invalid program (a program that contains undefined behavior), YOU are breaking the rules of the programming language, and so the outcome can be anything.
[03:01:12] <Alipha> !ub
[03:01:13] <nolyc> http://eel.is/c++draft/defns.undefined
[03:01:52] <Alipha> !give jackkk nd
[03:01:53] <nolyc> jackkk: Undefined behavior results when programs attempt to do things for which the standard defines no semantics, and requires no diagnostic either. Examples include dereferencing invalid pointers and dividing by zero. Such a program allows the compiler and the resulting program to do anything, including going on as if nothing happened, formatting your hard drive, or making little demons fly out of your nose.
[03:04:13] <jackkk> a solution could be malloc
[03:07:14] *** Joins: jehelset (~jeh@130.51-175-95.customer.lyse.net)
[03:10:52] <Alipha> i still don't know if jackkk still thinks that the output of https://bpa.st/OOXQ is supposed to be `String is::`
[03:12:20] <poprocks> I wrote some C++ today - is this good? https://paste.gnome.org/pt1u8fzwn
[03:14:23] <Alipha> poprocks: i would recommend using the following single-header library so that you can do pimpl without having to use new/delete yourself:
[03:14:28] <Alipha> !give poprocks spimpl
[03:14:29] <nolyc> poprocks: spimpl is a utility class to slightly simplify writing a PIMPL pattern: https://github.com/oliora/samples For further explanation, see: http://oliora.github.io/2015/12/29/pimpl-and-rule-of-zero.html
[03:14:43] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Reconnecting)
[03:14:54] <poprocks> thanks :D
[03:14:58] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[03:15:29] <Alipha> poprocks: get_name should be a const member function, e.g., `const char* get_name () const;`
[03:16:04] <Alipha> poprocks: also, we generally prefer using std::cout instead of std::printf
[03:16:35] <jackkk> <Alipha> "i still don't know if jackkk still thinks that the output of https://bpa.st/OOXQ is supposed to be `String is::`"
[03:16:46] <jackkk> yes of course
[03:18:05] <Alipha> jackkk: it's Undefined Behavior. `String is::` is a possible outcome. `String is:Hello:` is a possible outcome. `I like ponies` is a possible outcome. the program crashing is a possible outcome. formatting your harddrive is a possible outcome
[03:18:39] *** Joins: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338)
[03:20:03] <Alipha> poprocks: constructor initialization lists are preferred over assignment in constructors. that is, your Person constructor should be `Person::Person() : priv(new PersonPrivate) { prev->name = "Fred"; }`
[03:20:48] *** Quits: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338) (Client Quit)
[03:21:26] <Alipha> jackkk: if i have an elevator that says it has a max capacity of 2500 pounds, and i put 3000 pounds in the elevator, what happens?
[03:23:20] <poprocks> interesting, I now see constant member functions in Stroustroup, 3rd ed. I guess I thought making the ret type `const char *` made that obvious, but if I'm understanding correctly, sticking the const at the *end* indicates that the method won't modify the state of the *class*
[03:25:00] <Alipha> poprocks: correct. with your code as it is, if you did `const Person; printf("%s\n", pers.get_name());` then you would get a compile error because pers is const but get_name is not const
[03:25:23] <poprocks> ahh, okay.
[03:26:00] <Alipha> poprocks: which, that's another thing you could change about your code: you have no reason to use unique_ptr. just `Person pers;` would be fine
[03:26:55] <jackkk> okok
[03:28:03] <Alipha> poprocks: also, you should either define or delete your copy constructor and copy assignment operator. if you did `Person pers; Person pers2(pers);` then pers.priv and pers2.priv would both point to the same PersonPrivate object, which then you'll end up deleting the same object twice in your destructor.
[03:29:05] <Alipha> jackkk: what's your answer to my elevator question?
[03:29:47] *** Joins: u0_a3913 (~u0_a391@2600:380:a469:f561:5b42:302b:aad1:8b9b)
[03:31:59] <anyone> depends on the kind of elevator :D
[03:32:37] <anyone> the new ones would measure and detect the overload, emit a diagnostic and hopefully refuse to operate
[03:32:41] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:33:02] *** Quits: u0_a3912 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:34:34] <poprocks> Alipha: ach, would that result in a double free SIGABRT?
[03:35:37] <Alipha> poprocks: probably. of course, it's Undefined Behavior, so anything can happen :-)
[03:35:40] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[03:35:41] *** Joins: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338)
[03:35:49] <poprocks> haha, right
[03:35:54] <Alipha> !give poprocks ruleof3
[03:35:55] <nolyc> poprocks: If you have one of 1) non-empty destructor 2) copy constructor 3) copy assignment operator then you almost certainly need _all_ three. In C++11, this is optionally extended to the Rule Of Five (by including the move constructor and move assignment operator).
[03:36:26] <Alipha> poprocks: you have a non-empty destructor, so you should have a copy constructor and copy assignment operator (or =delete them)
[03:37:22] <Alipha> it's really too bad that defining a destructor doesn't automatically =delete the copy constructor and copy operator=
[03:38:00] <Alipha> i assume that's backwards-compatibility hold over from c++98, sighs
[03:40:03] <Alipha> anyone: "depends on the kind of elevator"... so you're saying the behavior is... Undefined?
[03:40:21] *** Joins: chozorho (~chozorho@2601:146:300:c30::31b5)
[03:40:26] <Alipha> ... i was really hoping to go through a "real world" example of Undefined Behavior with jackkk though
[03:42:20] *** Quits: Yruama (~Yruama@alyon-654-1-317-98.w109-212.abo.wanadoo.fr) (Quit: Leaving)
[03:43:21] <poprocks> LOL, took me a second to realize there was a person with the nick "anyone" in here
[03:44:17] *** Quits: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338) (Ping timeout: 268 seconds)
[03:45:06] <Alipha> now we just need someone named "everyone"
[03:51:13] *** Joins: Omen (~Omen@2600:1702:2e30:1a40:8511:a2a3:f354:5a5e)
[03:52:41] *** Joins: chenqisu12 (~bhca7d@183.217.200.22)
[03:52:58] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:00:37] <jackkk> ali i got what UB is
[04:01:01] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[04:01:07] <jackkk> but
[04:01:26] *** Joins: Enitin (~Enitin@82.102.22.84)
[04:03:12] <jackkk> that UB fills my ram
[04:03:35] <jackkk> (not all my ram :) )
[04:03:49] <jackkk> i consider it a bug
[04:05:01] <jackkk> and where exactly is the "wrong" code ? "return str.c_str();" ?
[04:06:03] <jackkk> anyway, is there a easy way to know the exact ram used ?
[04:13:38] *** Quits: beagles (~beagles@142.162.188.116) (Remote host closed the connection)
[04:15:52] <kalven> your os probably has some tool that lets you view memory usage by processes
[04:17:18] *** ormaaj is now known as jaamro
[04:21:01] <jackkk> htop
[04:29:48] <poprocks> I do find this initializer list syntax a bit quirky - the parens make it look like you're calling a function. But I guess it just takes some getting used to
[04:29:53] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[04:31:06] *** Joins: u0_a3914 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com)
[04:33:40] *** Joins: rgrinberg (~textual@2806:101e:7:def:f99c:f095:57cb:e173)
[04:34:51] *** Quits: u0_a3913 (~u0_a391@2600:380:a469:f561:5b42:302b:aad1:8b9b) (Ping timeout: 268 seconds)
[04:42:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[04:50:11] *** Quits: rgrinberg (~textual@2806:101e:7:def:f99c:f095:57cb:e173) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:51:35] *** Joins: Enitin (~Enitin@82.102.22.85)
[05:03:13] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[05:04:49] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[05:06:35] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:06:42] *** Joins: Lazenca (~lazenca@user/lazenca)
[05:06:45] *** Quits: AmR (~AmREiSa@156.199.202.96) (Quit: Konversation terminated!)
[05:07:11] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[05:09:27] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[05:11:04] *** Quits: Pook (~Pook@2001:8a0:f996:1400:f909:4c0c:aa04:14f6) (Quit: Leaving)
[05:15:32] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[05:17:23] *** Joins: malloy (~jimery@116.30.221.255)
[05:22:41] <jackkk> tnx bye
[05:22:46] *** Quits: jackkk (~jackiii@93-44-188-36.ip98.fastwebnet.it) (Quit: Leaving)
[05:24:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:24:59] *** Joins: seninha (~seninha@user/seninha)
[05:29:00] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:bd21:ec47:c1ea:4c9e) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:34:03] *** Quits: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[05:40:13] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:40:14] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:40:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:40:23] *** ChanServ sets mode: +v npaperbot
[05:43:43] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:43:59] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[05:45:01] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Ping timeout: 256 seconds)
[05:50:32] *** Quits: andreasbuhr (~quassel@p549dbe1a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:50:59] *** Joins: andreasbuhr (~quassel@p549dbe5a.dip0.t-ipconnect.de)
[05:51:21] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:55:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[05:57:17] *** Quits: ckdCreations (~ckdCreati@2607:fb90:8352:571e:7d74:3f4f:88b1:32fb) (Ping timeout: 240 seconds)
[05:58:55] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[06:00:43] *** Joins: Enitin (~Enitin@82.102.22.84)
[06:05:32] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:06:12] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:06:56] <xisop> hello, is it possible to conditionally add a padding variable to a struct based on the size of the rest of the members in the struct? i only have two
[06:07:29] <xisop> struct foo { my_enum type; uint8_t chance; /** optionally add another uint8_t to align correctly */}
[06:07:51] <xisop> i'm storing an array of these in a vector if that makes a difference
[06:08:12] <xisop> chance doesn't need to be uint16_t as i only need values 1-100
[06:08:32] *** u0_a3914 is now known as Kit
[06:09:07] <Kit> i dont believe so, but im pretty sure that the compiler may automatically pad if needed
[06:09:31] <xisop> ok, i'll check my compiler's documentation
[06:10:25] <Kit> which compiler are you using?
[06:10:31] <xisop> g++-8
[06:10:35] <xisop> on debian basically
[06:11:30] <xisop> apparently, gcc has an "aligned" __attribute__ feature
[06:11:34] <Alipha> xisop: why do you want to add padding?
[06:11:59] <xisop> I just thought you're supposed to align structs correctly otherwise you get unpredictable values
[06:12:16] <Alipha> xisop: the compiler takes care of that
[06:12:23] <xisop> interesting
[06:13:21] <Kit> i like how youre thinking tho
[06:19:43] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[06:21:59] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[06:25:05] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:27:52] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[06:28:37] *** Joins: Enitin (~Enitin@82.102.22.84)
[06:33:10] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:37:28] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[06:38:43] *** Joins: millido (~millido@84.210.150.128)
[06:48:10] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[06:48:27] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[06:51:38] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:55:18] *** Joins: u0_a391 (~u0_a391@2600:380:a469:f561:e979:e566:1328:9dd8)
[06:55:58] *** Quits: LunarJetman (~LunarJetm@user/zogatribe) (Read error: Connection reset by peer)
[06:56:20] *** Joins: u0_a3911 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com)
[06:56:23] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com) (Read error: No route to host)
[07:00:23] *** Quits: u0_a391 (~u0_a391@2600:380:a469:f561:e979:e566:1328:9dd8) (Ping timeout: 268 seconds)
[07:00:29] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:02:33] *** u0_a3911 is now known as Kit
[07:07:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:13:01] *** Joins: rgrinberg (~textual@2806:265:5401:9431:e42d:e292:4d35:3f96)
[07:15:34] *** Quits: nostar (~nostar@45.14.195.111) (Quit: Leaving)
[07:18:39] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:26:40] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[07:29:59] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[07:30:19] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:36:49] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[07:37:13] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[07:37:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:42:57] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[07:48:19] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:50:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:56:08] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[08:00:17] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[08:00:25] *** Joins: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f)
[08:01:35] *** Joins: llh (~llh@user/llh)
[08:03:45] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:07:39] *** Quits: dsrt^ (~dsrt@207.5.54.6) (Remote host closed the connection)
[08:08:17] *** jaamro is now known as ormaaj
[08:10:58] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:11:41] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[08:12:04] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:14:27] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[08:23:52] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[08:29:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:33:35] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:34:06] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:35:53] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[08:38:46] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[08:39:14] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Client Quit)
[08:40:49] *** Joins: malloy (~jimery@116.30.221.255)
[08:41:00] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[08:51:40] *** Joins: supernova (~quassel@2405:9800:ba11:6207:3941:3f07:b095:cd62)
[08:57:09] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:01:17] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:02:37] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 240 seconds)
[09:02:54] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[09:14:17] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:14:34] *** Quits: supernova (~quassel@2405:9800:ba11:6207:3941:3f07:b095:cd62) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:15:40] *** Joins: supernova (~quassel@2405:9800:ba11:6207:f49a:d1f2:ae76:3e6)
[09:15:59] *** Joins: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[09:33:22] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[09:35:14] *** Joins: malloy (~jimery@116.30.221.255)
[09:38:03] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[09:40:14] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:40:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:40:23] *** ChanServ sets mode: +v npaperbot
[09:41:28] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[09:42:32] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[09:42:32] *** Joins: aakashi2001 (~aakashi20@103.61.255.19)
[09:42:32] *** Quits: aakashi2001 (~aakashi20@103.61.255.19) (Changing host)
[09:42:32] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[09:43:32] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[09:43:58] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[09:45:34] *** Joins: traxex (~traxex@user/traxex)
[09:46:17] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[09:50:41] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[09:58:27] *** Parts: Omen (~Omen@2600:1702:2e30:1a40:8511:a2a3:f354:5a5e) (Leaving)
[10:02:37] *** Quits: supernova (~quassel@2405:9800:ba11:6207:f49a:d1f2:ae76:3e6) (Ping timeout: 240 seconds)
[10:04:51] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[10:05:55] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[10:07:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[10:09:06] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:09:27] *** Joins: analognoise (~analognoi@185.216.74.46)
[10:09:55] *** Quits: rgrinberg (~textual@2806:265:5401:9431:e42d:e292:4d35:3f96) (Read error: Connection reset by peer)
[10:11:40] *** Quits: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297) (Remote host closed the connection)
[10:11:41] *** Joins: rgrinberg (~textual@2806:265:5401:9431:e42d:e292:4d35:3f96)
[10:28:15] <testasty[m]> Hello,  How to pass an array of variable size as function parameter ?
[10:28:56] <traxex> you can make the array size a template parameter, pass a pointer to the first element, or use std::vector
[10:35:00] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:37:04] <InPhase> testasty[m]: std::vector was built for this.  Generally speaking, go out of your way to use it unless you can robustly prove that you shouldn't.
[10:38:16] <InPhase> testasty[m]: And if how I spoke wasn't clear, that means:  Almost always use std::vector whenever you can.
[10:38:33] <RandomReader> I'd also suggest avoiding language bare arrays in general -- they don't behave the same way as any other types, which is generally inconvenient for reasoning about your code
[10:38:49] <RandomReader> we've got std::array, std::vector, etc to cover the majority of use cases
[10:38:52] *** Joins: unicky (~unickyllt@46.211.147.203)
[10:39:30] <RandomReader> there are cases where a bare array is still a good option, I just wouldn't make it a go-to
[10:41:01] *** Joins: supernova (~quassel@2405:9800:ba11:6207:bc15:46eb:2a3c:e102)
[10:47:10] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[10:47:33] <RandomReader> if you have C++20, std::span may be useful as a function param
[10:48:45] *** Quits: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f) (Remote host closed the connection)
[10:49:07] *** Joins: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f)
[10:49:29] <ville> also probably should recomment the pmr versions
[10:50:38] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: kernel)
[10:51:30] <RandomReader> why?
[10:51:47] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[11:14:47] <supernova> Folks, how can i solve this error with constructor overloading?
[11:14:48] <supernova> https://wandbox.org/permlink/52ZBlzrLWQfezntm
[11:15:08] <supernova> noname-5 file, line 8
[11:16:03] <kalven> get rid of the defaults
[11:17:37] <RandomReader> compiling form: https://wandbox.org/permlink/oeqfHId7WXAKWHE0
[11:18:12] *** Joins: rendar (~rendar@user/rendar)
[11:18:17] <supernova> Works
[11:18:19] <supernova> thanks
[11:19:57] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Ping timeout: 240 seconds)
[11:20:20] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[11:21:18] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[11:22:24] <supernova> Date object constructor for date 2924339144/32714/2233571856
[11:23:11] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[11:24:32] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[11:24:47] <supernova> solved
[11:24:51] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[11:26:48] *** Joins: nuh^ (~nuh@207.5.54.6)
[11:31:37] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 240 seconds)
[11:32:38] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[11:33:57] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Ping timeout: 240 seconds)
[11:44:44] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[11:46:50] *** Joins: evangeline (~Eleanor@178.79.105.181)
[11:50:22] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:51:23] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[11:51:56] *** Quits: foul_owl (~kerry@212.102.47.57) (Ping timeout: 252 seconds)
[11:56:11] *** Quits: nvrhome (~Bop@user/nvrhome) (Ping timeout: 245 seconds)
[11:56:20] *** Joins: foul_owl (~kerry@212.102.47.57)
[12:00:49] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[12:01:55] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[12:02:33] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:05:07] *** Quits: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f) (Quit: Leaving)
[12:07:41] *** Quits: chozorho (~chozorho@2601:146:300:c30::31b5) (Quit: WeeChat 3.0)
[12:09:28] <supernova> Guys, can be double static?
[12:09:35] <supernova> https://wandbox.org/permlink/NlXHJ72cWYOtx4GP
[12:09:48] <supernova> In my case it tells it can not :D
[12:10:02] *** Quits: analognoise (~analognoi@185.216.74.46) (Read error: Connection reset by peer)
[12:16:42] *** Joins: bauripalash (~bauripala@2401:4900:3822:6207:1:2:1473:e2e2)
[12:18:16] *** Quits: bauripalash (~bauripala@2401:4900:3822:6207:1:2:1473:e2e2) (Client Quit)
[12:18:24] <ville> yes it can be. when you use static member it depends on the type whether you can stick an initializer on the declaration or not
[12:18:36] <kalven> supernova: make it 'inline static'
[12:18:46] *** Quits: nuh^ (~nuh@207.5.54.6) (Remote host closed the connection)
[12:19:32] <supernova> uh
[12:19:38] <supernova> is there a way without static?
[12:19:46] <supernova> i will forget inline :D
[12:20:36] <ville> with a recent-enough, 17, c++ version you may add the inline keyword
[12:21:37] <ville> umm, you need static keyword if you need a static member variable. not sure what you're asking
[12:21:54] <supernova> sorry! i mean can i avoid inline
[12:21:57] <supernova> and use static in my case
[12:23:12] <ville> 10:48:23        ville | yes it can be. when you use static member it depends on the type whether you can stick an initializer on the declaration or not
[12:26:04] *** Joins: netpipe (~netpipe@user/netpipe)
[12:28:20] <supernova> is not clear for me
[12:28:26] <supernova> elaborate please
[12:30:19] <ville> i've no clue what you don't understand specifically. you need to specify what isn't clear. i am not going to just randomly start explaining things
[12:32:21] <supernova> well I have static double data member, and private double data member, constructor is also contrains double
[12:32:37] <supernova> why does it need inline
[12:33:46] <ville> it being the static variable?
[12:35:12] <ville> a static member does not _require_ the inline keyword. it's a convenience feature that saves you from having the separate definition for the variable. note definition not declaration.
[12:35:41] <ville> struct aa { int x; }; this _defines_ the variable x
[12:36:04] <ville> struct aa { static int x; }; this does _not_ define the variable x. it is only a _declaration_
[12:37:58] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.216)
[12:38:53] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[12:39:19] *** Joins: ckdCreations (~ckdCreati@2607:fb90:8346:bdfd:400d:4e86:1eca:ba46)
[12:40:47] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.255) (Ping timeout: 268 seconds)
[12:43:23] <supernova> im not into 17 C++ version
[12:43:35] <supernova> how shoud i ammend the code to get rid of mistake?
[12:44:01] <ville> 17 or newer will allow use of inline the keyword for static variables
[12:44:26] <ville> so you don't have to be using 17 exactly
[12:45:14] <ville> if you're pre-17, then like i said, only certain types may have static members with initializers. double is not such type in the general case
[12:45:33] <ville> err initializers in the declaration
[12:45:34] *** Joins: troller (~p@80.240.216.69)
[12:49:42] <supernova> oh, clear now
[12:50:21] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[12:51:23] <supernova> so is there a way to make double static in pre 17?
[12:52:20] <ville> do you understand what i mean by: "initializer in the declaration"?
[12:53:25] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[12:54:01] <ville> also your book about c++ should tell you how to do static member variables
[12:54:45] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[12:59:35] <supernova> yes, understand
[13:02:20] *** Joins: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f)
[13:02:30] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[13:02:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:03:34] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[13:03:44] <ville> so what you're still left is to add a definition for your static variable, and that's where you can also give it an initializer for the cases where you can't have the initializer on the declaration
[13:03:54] *** Joins: eck (~root@user/eck)
[13:11:44] <lockywolf> I am trying to call a static method, like my_ns::MyClass::Init(); , but g++ keeps thinking that this is a declaration, not a method call. What am I doing wrong?
[13:13:04] <ville> !give lockywolf testcase
[13:13:05] <nolyc> lockywolf: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[13:14:23] <lockywolf> http://paste.debian.net/1225224/
[13:14:55] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[13:15:50] <ville> lockywolf: wrong website
[13:16:18] <lockywolf> ville, I have pasted it _before_ reading your bot call
[13:16:33] <ville> doesn't matter
[13:16:37] <lockywolf> https://wandbox.org/permlink/qZP4GUpuQ7hidxYQ
[13:17:19] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:17:34] <anyone> debian just can't do it
[13:17:41] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:18:24] <lockywolf> Anyway, the last link is to the website you prefer.
[13:18:59] <ville> you can't have function call out-in-the-middle of namespace scope
[13:19:19] <ville> nothing to do with static member functions in particular
[13:20:23] <lockywolf> but variable assignments out-in-the-middle of namespace scope are fine?
[13:20:34] <ville> sure
[13:21:03] <ville> well.. initializations i should say. assignments not so much
[13:22:07] <lockywolf> https://wandbox.org/permlink/zcc0yrguxAgho2n6
[13:22:10] <lockywolf> ^^^ is fine?
[13:22:40] <TinoDidriksen> No
[13:22:55] *** Joins: seninha (~seninha@user/seninha)
[13:22:56] <TinoDidriksen> Well yes, but in practice no.
[13:23:25] <TinoDidriksen> Since you would normally have that in a header, you'd cause double definitions.
[13:23:42] <ville> TinoDidriksen: static class member
[13:23:48] <TinoDidriksen> Yes
[13:24:02] <TinoDidriksen> Still need to define those static members in 1 .cpp file.
[13:24:11] <anyone> line 14
[13:24:42] <ville> nevermind
[13:26:28] <lockywolf> looks counter-intuitive as hell
[13:26:57] <ville> lockywolf: what TinoDidriksen is getting at if you stick your line 14 in a header it will result in multiple definitions of that variable if the header is included in more than one source file
[13:26:57] <TinoDidriksen> Statics are pretty awful.
[13:27:02] <RandomReader> in general, logic/execution belongs inside functions, and every program starts by running main()
[13:27:13] <RandomReader> trying to go around that model is what leads to counter-intuitive behavior
[13:27:29] <ville> lockywolf: if you stick your line 14 in source file then your solution works. for some definition of works.
[13:28:23] <RandomReader> statics are just "globals" inside a particular scope, but yes they are a bit awkward in general
[13:29:13] <lockywolf> The header only has the declaration. The definition and the "fake initialization" are in a separate cpp file
[13:29:47] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:29:48] <anyone> but why would you put line 14 in a header anyway
[13:29:57] <anyone> yeah
[13:32:03] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:32:19] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[13:37:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[13:40:14] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:40:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:40:23] *** ChanServ sets mode: +v npaperbot
[13:43:40] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:47:05] *** Joins: aakashi2001 (~aakashi20@103.61.255.19)
[13:47:05] *** Quits: aakashi2001 (~aakashi20@103.61.255.19) (Changing host)
[13:47:05] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[13:50:16] <ville> anyone: when you're blindly trying to get things to build
[13:50:32] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 240 seconds)
[13:52:03] *** Joins: rvalue (~rvalue@user/rvalue)
[13:54:32] *** Quits: rgrinberg (~textual@2806:265:5401:9431:e42d:e292:4d35:3f96) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:55:16] *** Quits: haise01 (~haise01@user/haise01) (Quit: ZNC 1.8.2 - https://znc.in)
[13:56:13] *** Joins: haise01 (~haise01@user/haise01)
[13:59:25] *** Quits: haise01 (~haise01@user/haise01) (Remote host closed the connection)
[13:59:28] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[14:00:12] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[14:00:47] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61)
[14:02:41] *** Quits: jehelset (~jeh@130.51-175-95.customer.lyse.net) (Ping timeout: 256 seconds)
[14:06:05] *** Joins: ko (~i.am@user/marlboro)
[14:06:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[14:09:48] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[14:11:14] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[14:11:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:28:57] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[14:29:51] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[14:33:20] *** Joins: pulse (~pulse@user/pulse)
[14:36:29] *** Quits: supernova (~quassel@2405:9800:ba11:6207:bc15:46eb:2a3c:e102) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:36:50] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6dd5:67d6:1710:24ab)
[14:37:19] <zen_coder> how do I replace all whitespaces with "," in a std::string?
[14:37:34] <zen_coder> is there something easy to use in c++20?
[14:42:48] <Learath2> I think std::replace has been there since c++17
[14:43:02] <RandomReader> for (auto&& c : string) { if (std::isspace(static_cast<unsigned char>(c))) c = ','; }
[14:45:00] <Learath2> std::replace(s.begin(), s.end(), ' ', ',')
[14:47:16] <Learath2> std::replace_if(s.begin(), s.end(), [](auto c){ return std::isspace(c); }, ',')
[14:47:25] <Learath2> Not sure if that's prettier than the loop even :D
[14:48:54] <zen_coder> Learath2: is there nothing with ranges? so I can avoid specifying s.begin, s.end() ?
[14:49:49] <Learath2> there is also ranges::replace_if
[14:50:30] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[14:53:03] <RandomReader> that lambda would need to be "unsigned char c", not "auto c"
[14:53:35] <RandomReader> (isspace() and the rest of the ctype functions are subtle, but you did say "whitespace", so I assume locale specific behavior...)
[14:54:51] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[14:56:24] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:02:14] *** Joins: gjvc (~gjvc@29.68.246.35.bc.googleusercontent.com)
[15:03:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[15:04:53] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:07:32] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6dd5:67d6:1710:24ab) (Quit: Konversation terminated!)
[15:09:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[15:11:21] *** Joins: pulse (~pulse@user/pulse)
[15:11:21] *** Quits: pulse (~pulse@user/pulse) (Client Quit)
[15:17:25] *** Quits: foul_owl (~kerry@212.102.47.57) (Ping timeout: 240 seconds)
[15:29:02] *** Joins: frost (~frost@user/frost)
[15:30:18] *** Joins: foul_owl (~kerry@94.140.8.106)
[15:36:13] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:42:59] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 256 seconds)
[15:45:03] *** Joins: caramel (~caramel@user/caramel)
[15:48:32] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[15:49:56] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[15:55:00] *** Parts: poprocks (~logan@user/poprocks) ()
[15:59:06] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[16:01:18] *** Joins: mli (~mli@user/mli)
[16:02:57] *** Joins: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[16:04:01] *** Parts: mli (~mli@user/mli) ()
[16:05:24] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:06:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:14:37] *** Quits: chenqisu12 (~bhca7d@183.217.200.22) (Ping timeout: 240 seconds)
[16:24:32] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[16:24:55] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:26:43] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[16:29:14] *** Joins: sweetsymphony (~bitterswe@2405:6e00:291:ea7f:9917:e1c1:982e:5c69)
[16:36:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 250 seconds)
[16:39:09] <montpol> When creating a class object, how does this object go out of scope within the class? Not seeing how a destructor is purposeful
[16:39:50] <cbreak> montpol: ?
[16:40:07] <cbreak> objects can cease to exist, and their members die with them
[16:40:46] <montpol> but why inside a class? if i make an object that means using that object will then cease to exist even before im done using it
[16:40:50] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[16:40:58] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[16:41:15] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:41:23] <montpol> or is it only called when the programmer specifically calls the destructor?
[16:41:36] <montpol> i.e. ~Destruct
[16:41:38] <montpol> or something
[16:42:32] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[16:43:12] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:43:41] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:43:54] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:47:36] <montpol> ah i get it, out of scope means of the scope of e.g. int main(){}. So the point is to delete it so that memory isn't continued to be used for example.
[16:48:38] <TinoDidriksen> Indeed
[16:54:54] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[16:55:05] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:55:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[16:55:38] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[16:56:16] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[16:56:33] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[16:57:43] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:03:38] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:85b6:2c43:f2cd:529c)
[17:04:11] *** Quits: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f) (Quit: Leaving)
[17:05:41] *** Joins: unickyll (~unickyllt@46.211.153.184)
[17:07:11] *** Quits: unicky (~unickyllt@46.211.147.203) (Ping timeout: 268 seconds)
[17:07:54] *** Joins: arch-angel (~arch-ange@2001:d08:1830:cfe4:b4f:740a:8d11:a72b)
[17:19:31] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[17:20:16] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:20:48] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[17:20:58] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:25:14] *** Quits: arch-angel (~arch-ange@2001:d08:1830:cfe4:b4f:740a:8d11:a72b) (Ping timeout: 252 seconds)
[17:32:16] *** Joins: supernova (~quassel@2405:9800:ba11:6207:7dab:f480:fe82:1601)
[17:39:49] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[17:40:15] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:40:23] *** Joins: plastico (~plastico@neomutt/plastico)
[17:40:24] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:40:24] *** ChanServ sets mode: +v npaperbot
[17:44:39] *** Quits: Speakz (speakz@rfc1459.evilnet.org) (Changing host)
[17:44:39] *** Joins: Speakz (speakz@user/gadreel)
[17:48:53] *** Joins: unicky (~unickyllt@46.211.247.213)
[17:50:49] *** Joins: nostar (~nostar@68.51.221.108)
[17:51:03] *** Quits: unickyll (~unickyllt@46.211.153.184) (Ping timeout: 256 seconds)
[18:00:05] *** Quits: sweetsymphony (~bitterswe@2405:6e00:291:ea7f:9917:e1c1:982e:5c69) (Quit: sweetsymphony)
[18:10:16] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081)
[18:10:16] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081) (Changing host)
[18:10:16] *** Joins: skapata (~Skapata@user/skapata)
[18:18:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:24:50] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[18:24:54] *** Quits: tafa (~tafa@user/tafa) (Quit: ZNC - https://znc.in)
[18:26:10] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[18:26:35] *** Joins: tafa (~tafa@user/tafa)
[18:28:23] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:31:33] *** Joins: hellstabber (~hellstabb@178.233.16.12)
[18:35:57] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 240 seconds)
[18:36:36] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[18:38:26] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[18:39:34] *** Joins: rvalue (~rvalue@user/rvalue)
[18:43:44] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:44:48] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:51:55] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Quit: Textual IRC Client: www.textualapp.com)
[19:05:50] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[19:10:28] *** Joins: Crassus (~Crassus@user/crassus)
[19:10:35] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:11:43] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:14:01] *** Joins: bebyx (~Thunderbi@user/bebyx)
[19:21:54] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[19:22:17] *** Joins: troller (~p@2a02:6b8:b081:9::1:1b)
[19:24:25] *** Joins: magla (~gelignite@55d48631.access.ecotel.net)
[19:28:43] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[19:29:27] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[19:31:38] *** Joins: AmR (~AmREiSa@156.199.202.96)
[19:32:47] *** Joins: karakedi (~eAC53C340@user/karakedi)
[19:39:08] *** Joins: pulse (~pulse@user/pulse)
[19:39:41] *** Quits: andreasbuhr (~quassel@p549dbe5a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:46:37] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[19:49:29] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:51:29] *** Quits: magla (~gelignite@55d48631.access.ecotel.net) (Quit: Stay safe!)
[19:51:33] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:59:37] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[20:00:01] *** Joins: Burgundy (~yomon@79.115.213.171)
[20:00:05] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:05:27] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:05:57] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:06:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:07:34] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:10:06] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:10:15] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:26bf:6614:202d:474a)
[20:10:15] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:26bf:6614:202d:474a) (Changing host)
[20:10:15] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:19:08] *** Joins: masterbuilder (~user@user/masterbuilder)
[20:23:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:25:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:25:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:26:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:26:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:27:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:28:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:30:11] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:31:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Excess Flood)
[20:33:25] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:34:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:36:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:36:44] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:37:23] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:41:51] *** Joins: Guest1191 (~Inline@2a02:908:1252:7a80::47)
[20:42:09] *** Quits: Guest1191 (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:43:54] *** Joins: Inline__ (~Inline@aftr-37-201-240-204.unity-media.net)
[20:47:14] *** Joins: magla (~gelignite@55d48631.access.ecotel.net)
[20:47:23] *** Joins: jehelset (~jeh@130.51-175-95.customer.lyse.net)
[20:47:29] *** Inline__ is now known as Inline
[20:58:37] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 240 seconds)
[20:59:29] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[21:01:25] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[21:02:17] *** Quits: T`alZHeimeR (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[21:05:26] *** Joins: T`alZHeimeR (~TaZ@user/taz/x-9470768)
[21:05:43] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:06:44] *** Quits: Leone (~Leo@157.52.18.77) (Read error: Connection reset by peer)
[21:08:05] *** Joins: peeps (~peepsalot@openscad/peepsalot)
[21:09:57] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 256 seconds)
[21:10:42] *** Joins: rgrinberg (~textual@187.223.75.25)
[21:15:55] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[21:22:15] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 250 seconds)
[21:22:27] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[21:24:15] *** Joins: jsbach (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55)
[21:24:57] *** Quits: DrMax (~DrMax@node-1w7jra94757g05r4hkl32blfy.ipv6.telus.net) (Ping timeout: 268 seconds)
[21:34:11] *** Joins: Betal (~Betal@user/betal)
[21:36:31] *** Joins: DrMax (~DrMax@node-1w7jra94757fzqkincqfc6jpy.ipv6.telus.net)
[21:39:23] *** Joins: Yruama (~Yruama@alyon-654-1-389-172.w109-213.abo.wanadoo.fr)
[21:40:15] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:40:24] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:40:24] *** ChanServ sets mode: +v npaperbot
[21:40:59] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 268 seconds)
[21:41:55] *** Joins: zmt01 (~zmt00@user/zmt00)
[21:41:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[21:43:02] *** Quits: supernova (~quassel@2405:9800:ba11:6207:7dab:f480:fe82:1601) (Ping timeout: 240 seconds)
[21:46:53] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:50:54] *** Quits: jsbach (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55) (Quit: Leaving)
[21:52:59] *** Joins: jsbach (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55)
[21:54:54] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:55:13] *** Joins: jsbach_ (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55)
[21:55:17] *** Quits: jsbach_ (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55) (Remote host closed the connection)
[21:55:38] *** Quits: unicky (~unickyllt@46.211.247.213) (Read error: Connection reset by peer)
[21:55:44] *** Joins: unickyll (~unickyllt@46.211.247.213)
[21:56:17] *** Quits: AmR (~AmREiSa@156.199.202.96) (Quit: Konversation terminated!)
[21:56:35] *** Quits: jsbach (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55) (Client Quit)
[21:58:11] *** Joins: supernova (~quassel@2405:9800:ba11:6207:878:a9f2:d95a:2c43)
[21:58:54] *** Joins: jsbach (~jsbach@2a01:c23:64ce:1100:d610:3a7c:f6e8:4372)
[22:00:02] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:02:24] *** Joins: jsbach_ (~jsbach@2a01:c23:64ce:1100:46f5:c826:22db:de85)
[22:04:26] *** Quits: jsbach (~jsbach@2a01:c23:64ce:1100:d610:3a7c:f6e8:4372) (Ping timeout: 268 seconds)
[22:10:21] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[22:10:37] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[22:11:50] *** Joins: test (~WDAGUtili@78.156.235.93)
[22:12:35] *** Joins: unickyllpp (~unickyllt@46.211.247.213)
[22:13:00] *** Joins: Enitin (~Enitin@82.102.22.85)
[22:13:00] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[22:13:19] *** Parts: test (~WDAGUtili@78.156.235.93) ()
[22:14:16] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[22:15:17] *** Quits: unickyll (~unickyllt@46.211.247.213) (Ping timeout: 240 seconds)
[22:15:22] *** Quits: unickyllpp (~unickyllt@46.211.247.213) (Max SendQ exceeded)
[22:15:50] *** Joins: unickyllpp (~unickyllt@46.211.247.213)
[22:15:51] *** Joins: jsbach (~jsbach@2a01:c23:64ce:1100:46f5:c826:22db:de85)
[22:18:05] *** Joins: AmR (~AmREiSa@156.199.202.96)
[22:24:06] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[22:25:37] *** Joins: chozorho (~chozorho@2601:146:300:c30::8360)
[22:26:19] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:26:42] *** Joins: sixpiece (~brainz3sl@4.182.132.164.lunanode-rdns.com)
[22:27:17] <sixpiece> I am trying to learn c++ windows programming
[22:27:24] <sixpiece> how do I create a button
[22:31:34] <Alipha> !give sixpiece windows
[22:31:35] <nolyc> sixpiece: You should ask your Windows programming questions in #C++-general, #winapi, #windows-coding or irc://irc.efnet.org/winprog
[22:32:38] <Alipha> nolyc: no, windows is You should ask your Windows programming questions in #C++-general, #winapi, or irc://irc.efnet.org/winprog
[22:32:39] <nolyc> Alipha: The operation succeeded.
[22:32:48] <Alipha> !give Alipha windows
[22:32:49] <nolyc> Alipha: windows is You should ask your Windows programming questions in #C++-general, #winapi, or irc://irc.efnet.org/winprog
[22:33:08] <Alipha> nolyc: no, windows is <reply>You should ask your Windows programming questions in #C++-general, #winapi, or irc://irc.efnet.org/winprog
[22:33:09] <nolyc> Alipha: Error: "reply" is not a valid command.
[22:33:25] <Alipha> sigh
[22:34:28] <Alipha> !give alipha inline
[22:34:29] <nolyc> alipha: inline is The inline specifier was historically intended to be a code inlining hint. However, it has a semantic effect; functions marked inline can be defined in every TU in which they are used (as long as the definitions are identical), making headers the appropriate place to define them if they are used in multiple TUs
[22:34:56] <Alipha> apparently PJBoy broke the factoid when he changed it too ;-) (it now says "inline is ...")
[22:35:13] <PJBoy> !give Alipha inline
[22:35:14] <nolyc> Alipha: The inline specifier was historically intended to be a code inlining hint. However, it has a semantic effect; functions marked inline can be defined in every TU in which they are used (as long as the definitions are identical), making headers the appropriate place to define them if they are used in multiple TUs
[22:35:19] <PJBoy> liar
[22:35:24] <Alipha> that's weird
[22:35:35] <Alipha> !give PJBoy windows
[22:35:36] <nolyc> PJBoy: You should ask your Windows programming questions in #C++-general, #winapi, or irc://irc.efnet.org/winprog
[22:36:16] <Alipha> why would giving it to yourself be different than giving it to others?
[22:36:21] *** Quits: T`alZHeimeR (~TaZ@user/taz/x-9470768) (Ping timeout: 250 seconds)
[22:36:22] <PJBoy> it's not
[22:36:28] <PJBoy> I'm just screwing with you https://puu.sh/IzsO5/04d0d67b10.png
[22:36:48] <PJBoy> the quotes are needed nowadays
[22:36:52] <Alipha> lmao, nice
[22:38:19] *** Joins: T`alZHeimeR (~TaZ@user/taz/x-9470768)
[22:42:50] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[22:43:11] *** Joins: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com)
[22:51:41] *** Quits: unickyllpp (~unickyllt@46.211.247.213) (Remote host closed the connection)
[22:52:04] *** Joins: unickyllpp (~unickyllt@46.211.247.213)
[22:54:12] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:54:37] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[22:56:20] *** Quits: rgrinberg (~textual@187.223.75.25) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:58:56] *** Quits: supernova (~quassel@2405:9800:ba11:6207:878:a9f2:d95a:2c43) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:00:46] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 260 seconds)
[23:01:32] *** Joins: zer0bitz (~zer0bitz@194.34.133.91)
[23:13:30] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[23:16:23] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[23:17:12] *** Joins: unicky (~unickyllt@46.211.75.112)
[23:19:17] *** Quits: unickyllpp (~unickyllt@46.211.247.213) (Ping timeout: 240 seconds)
[23:26:39] *** Joins: Pook (~Pook@2001:8a0:f996:1400:45ad:bf72:5834:8a59)
[23:27:00] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:33:59] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 250 seconds)
[23:47:26] *** Joins: bobb_ (~bobb_@dslb-088-066-156-033.088.066.pools.vodafone-ip.de)
[23:48:40] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:49:53] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Remote host closed the connection)
