[00:06:05] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[00:08:21] *** Joins: rpthms (~rpthms@user/rpthms)
[00:11:47] <AsenMx> slaughter, rawtaz thanks for the answers I will try to figure it out
[00:12:58] <kwilczynski> AsenMx: To add to what rawtaz said - doing proper DRY with Terraform is not as nice as one would think. It got better, though, as these days you can default (set empty) attributes and sections of resource, which previously wasn't always working.
[00:13:20] <rawtaz> thats a good point, that theres hardly any way to do it all that great :D
[00:13:57] <kwilczynski> AsenMx: Depends on how you approach development... some people keep modules in separate repositories and version them correctly, so that you can pin versions of modules you use here and there.
[00:14:14] <AsenMx> yeah the problem is I have clients A B C and so on and most of them use same amazon services (ecs, rds,vpc, so on). I don't want to have those terraform modules in a separate repo (client repo) and maintaining them all 
[00:15:13] <kwilczynski> AsenMx: You might find out, that eventually some clients would want something different, or slightly different.
[00:15:14] <AsenMx> what i do right now is i crate module in a separete repo lets say for EC2 that takes variables as size vpc id and so  on. So in the client repo i  just call that module and pass the variables is this a good approach?
[00:15:16] <kwilczynski> AsenMx: And then it's a pain.
[00:15:33] <kwilczynski> AsenMx: This is how some companies do.
[00:16:10] <kwilczynski> AsenMx: With Terraform, think how you want to compose something... something that comprises a service?
[00:17:25] <kwilczynski> I usually do - my personal way of doing it: module / module wrapper -> service (multiple modules) -> stack (multiple services) -> platform (multiple stacks; rarely used).
[00:17:50] <kwilczynski> I often also keep "core" things somewhat separate, so that their state is separate too.
[00:18:16] <kwilczynski> So I can do work on VPCs, network, firewalls, etc., without affecting applications.
[00:18:53] <AsenMx> in client repo i have folders grouped by how they are coupled for example networking folder that contains files that call vpc,vpn,security modules that way if i want to do terraform plan/apply i don't have to wait 1 hour just to change a single firewall rule
[00:18:54] <kwilczynski> So a "stack" in such case would be a "network stack" that has VPC, firewalls, network ACL, NAT Gateways, etc, etc.
[00:19:23] <kwilczynski> AsenMx: Indeed :)
[00:19:24] <slaughter> AsenMx that's the Gruntworks recommended way to do it (infra-live, infra-modules) - personally I think if Gruntwork says to do something a way, that's probably the best bet
[00:19:46] <kwilczynski> Phhrhm. Gruntwork.
[00:19:47] <AsenMx> so im doing it right way?
[00:19:50] <slaughter> And if you're not using Terragrunt you might look into it
[00:20:01] <slaughter> IMO yes, though others might not exactly agre
[00:20:08] <slaughter> kwilczynski oh? you don't like?
[00:20:15] <kwilczynski> I can't stand them.
[00:20:17] <AsenMx> slaughter, what terragrunt will give me? 
[00:20:30] <AsenMx> other than executing in multiple folders ? 
[00:20:31] <kwilczynski> Terragrunt is also such a crap codebase.
[00:21:11] <kwilczynski> AsenMx: It will give you a headache. :)
[00:21:33] <slaughter> I mean that's kinda their big thing, keeping things DRY and moving to smaller chunks
[00:21:38] <kwilczynski> AsenMx: But in fairness, it tries to address some issues that Terraform lacks. Mainly around codebase organisation and DRY.
[00:21:39] <AsenMx> Is there any style guide i can use by the way? 
[00:21:54] <slaughter>   <kwilczynski> I can't stand them. > really curious why
[00:22:10] <kwilczynski> slaughter: I worked with their paid modules.
[00:22:15] <kwilczynski> I wasn't impressed.
[00:22:48] <kwilczynski> I also can't fathom Terragrunt. It's cobbled together badly.
[00:23:16] <slaughter> That's fair. They're expensive af and if you've got the time to work with more open source/custom options it's not worth it
[00:23:28] <kwilczynski> No!
[00:23:33] <kwilczynski> This is where it's interesting.
[00:23:40] <kwilczynski> Gruntwork's modules were almost always out of date.
[00:23:45] <kwilczynski> Compared to what community does.
[00:24:00] <kwilczynski> Weeks waiting for new releases... because reasons (they are short stuffed or something).
[00:24:25] <kwilczynski> So you end up diverging... and then once they finally do something... it's a pain to get the code base to meet again.
[00:24:39] <kwilczynski> And then eventually you end up just using your own.
[00:25:15] <kwilczynski> I mean, it's crazy that you have an entire company business model based on selling Terraform modules.
[00:25:44] <kwilczynski> Go use community ones, or pick the ones from CloudPosse or something.
[00:26:03] <kwilczynski> There are about a metric tonne of these DevOps consultancies these days.
[00:26:07] <slaughter> We haven't had any issues with them
[00:26:31] <kwilczynski> slaughter: That's good. :)
[00:27:11] <slaughter> But we picked them up to get us going fast and minimize the amount of time we spent working in TF because we've got a lot of ground to cover. It'd suck if we ever bailed on paying them since legally we'd have to convert everything to other modules but so far it's been worth the $
[00:27:37] <slaughter> And IMO their big picture approach to managing TF (repos/docs/accounts/etc) works fantastically
[00:28:16] <slaughter> I wouldn't recommend anyone paying Gruntwork unless they _know_ they need it
[00:29:08] <slaughter> IE devops did not exist at your company and now you're trying to cover a lot of ground to get things in IaC and don't have the time/people to do it piecemeal
[00:29:37] <slaughter> And you're using a multi-account architecture*
[00:29:53] <slaughter> Without that last part I probably wouldn't even use terragrunt for anything, personally
[00:55:47] <AsenMx> so can you guys recommend some terraform style guides i can copy/paste for our documentation?
[00:56:45] <slaughter> terraform fmt
[00:57:36] <slaughter> https://www.gruntwork.io/guides/style%20guides/terraform-style-guide/#general
[01:03:55] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:07:30] <slaughter> AsenMx if you don't already use pre-commit hooks OR you already use the pre-commit lib for them, you might find this nice: https://gist.github.com/slaughtr/92d1d48addccd3fff77a0b5ddb811a2f
[01:08:05] <slaughter> TLDR it automates formatting and documentation generation for TF, as well as a few other sane normal things
[01:09:54] <AsenMx> slaughter, how to implement that for gitlab :D 
[01:10:00] <slaughter> That runs on your local
[01:10:24] <slaughter> https://pre-commit.com/ - this is the lib
[01:11:56] <slaughter> It's pretty straightforward to setup. Check the docs for the terraform_docs plugin, you drop a pre-generated text in a .md file and it spits docs out there 
[01:12:19] <AsenMx> i actually want it post commit :DD
[01:13:13] <slaughter> Why's that?
[01:13:53] <AsenMx> pre-commits have to be local to each user. This is hard to follow with retarded team 
[01:15:06] <slaughter> lmfao
[01:15:36] <slaughter> Yeah this actually doesn't use git pre-commit, so that file I posted would be saved in your repo. But if people don't install the lib then there's not a lot you can do about it
[01:16:26] <slaughter> I think you could probably get away with installing this in Gitlab CI and run it that way: https://github.com/terraform-docs/terraform-docs
[01:16:37] <slaughter> And then install terraform in the CI server and run terraform fmt
[01:17:12] <AsenMx> exactly i will have to do terraform fmt and terraform docs in a pipeline :D
[01:17:34] <rawtaz> pipe the lines, sir
[01:17:56] * rawtaz just came back from dinner and is wondering what shenanigans you tricked AsenMx into this time
[01:18:23] <slaughter> Automating some documentation, because markdown tables are too hard to do any other way :)
[01:18:37] <slaughter> And formatting, ofc, since that was the original subject
[01:18:41] <AsenMx> let me show you the readme we have right now :D 
[01:19:01] * slaughter is very curious
[01:19:28] <AsenMx> for example we have aws-cognito repo and inside we have readme.md in it we have aws-cognito :D
[01:20:02] <rawtaz> hm. how do you do some automatic documentation?
[01:20:08] <AsenMx> so i think we are doing pretty good job :D 
[01:20:25] <rawtaz> im trying to locate that part of the discussion in the scrollback but not finding it easily
[01:20:38] <rawtaz> oh wait
[01:20:54] <AsenMx> terraform_docs is the way to go
[01:21:21] <rawtaz> oh i see
[01:21:46] <slaughter> It's pretty nifty. Outputs a nice markdown table of inputs/outputs with descriptions/defaults/required/etc
[01:22:26] <rawtaz> guys i haave a question. where the heck and how do you store and share your credentials, e.g. as a simple example when a service needs to use a mail server and authenticate with it, that credential shouldnt be stored in some infra code or similar. so where do you keep it?
[01:24:24] <AsenMx> dashlane/vault/ansible_vault/aws secrets manager  :D
[01:26:14] <slaughter> rawtaz we use Doppler, it's pretty good and free. chamber is a great choice if you're not planning on having non-ops people use it (it's CLI only and confuses people). 
[01:27:20] <AsenMx> why not vault? :P
[01:27:26] <rawtaz> those two are entirely new to me, ill check them out!
[01:29:16] <rawtaz> ill revisit vault too. im not sure how to make actual use of it though when using e.g. docker-compose and neeing secrets for .env files for compose as well as for various places in various services own config files (e.g. a database password used by whatever service that keeps that in a config plain text file)
[01:29:32] <rawtaz> i understand using vault etc is "easy" when you use kubernetes and so on and inject stuff
[01:30:11] <AsenMx> oh we don't use docker-compose for anything 
[01:30:21] <slaughter> Vault requires infra, doppler and chamber do not (well, chamber needs 1 tiny resource)
[01:33:41] <rawtaz> what a name for a secret thing. it's not like you get any other hits when you google/duck for "doppler" :>
[01:34:01] <rawtaz> but it's doppler.com
[01:34:20] <Dus10> it depends on what you're doing on how much infrastructure Vault requires
[01:34:21] <slaughter> Lol that's true, I guess I haven't searched for it before
[01:34:45] <Dus10> you could potentially just run vault in your CI/CD runner while it is executing
[01:34:50] <Dus10> spin it up, use it, spin it down
[01:35:02] <Dus10> if you're only dealing with dynamic credentials
[01:36:11] <rawtaz> im thinking of even smaller stuff than that, when you dont have CI/CD but rather just have servers where you set up some docker-compose solutions fronted by traefik, and the various services need credentials in some config files and stuff, besides of course some .env files in the cases where we CAN put them in environment variables
[01:36:19] <Dus10> I myself am biased away from operating infrastructure for my automation tooling wherever possible
[01:36:27] <Dus10> you can also run it as a container, easily enough
[01:37:22] <rawtaz> sure. running it isnt an issue, the issue is how to get secrets out from it and into various config files. i guess some automation is needed for this
[01:39:24] <AsenMx> any idea if i can set up pre-receive hooks for gitlab group instead of signle repo or all repos?
[01:58:00] <rawtaz> slaughter: doppler looks really nice :) but it doesnt seem to be something that is open source and you can self-host :/
[01:58:10] <slaughter> It is not/you can't
[01:59:36] <slaughter> If you don't need the UI and are on AWS, chamber is a great choice
[01:59:47] <rawtaz> it actually looks super slick :D
[02:00:08] <rawtaz> he got me in the video with that "oh hey you havent populated your production variables yet!"
[02:00:32] <rawtaz> im not on aws, it's all self-hosted :o do you possibly know something similar?
[02:00:45] <rawtaz> perhaps vault is the closest
[02:01:50] <rawtaz> hahaha, chamber is even sorse to google on! "doppler secret" got it on the first hit, but "chamber secrets" just brings up a ton of harry potter links :D
[02:02:06] <rawtaz> this must be it i suppose: https://github.com/segmentio/chamber
[02:10:56] <slaughter> Yes that's it
[03:09:35] <rawtaz> it would be cool if there was a way to grab secrets out of padloc
[03:11:12] <slaughter> Hmm wouldn't that be like...doppler? :)
[03:13:07] <rawtaz> well, not really. padloc is more like a regular password manager for users or teams, its not as focused on developers e.g. with doppler's dev/stg/prd thing there. but its extremely nice and all theres lackng is a CLI client etc
[03:13:43] <rawtaz> maybe it would be similar, indeed. but padloc is fully open source and they encourage self-hosting, thats where doppler isnt an option for me unfortunately. but i knew padloc and it seems great, thats why im trying to see if theres a way to use that instead
[03:13:51] <rawtaz> not finding a cli or similar for it though.
[03:17:48] <slaughter> Ah I didn't realize it was OS, a quick glance made it look like any ol' SaaS
[03:18:09] <rawtaz> :D
[03:18:33] <slaughter> If you're looking that route, self-hosting bitwarden would do the trick too
[03:18:48] <rawtaz> apparently NCC audited it, and their security whitepaper is understandable even for idiots like me. i think there's a lot of good signs around padloc. i am yet to use it for real though
[03:18:55] <rawtaz> yeah, but bitwarden i puke over :(
[03:19:05] <rawtaz> it's a dotnet app and uses mssql. is if i may say so fucking horrible
[03:19:19] <rawtaz> i tried it. it's also very very unflexible with the data you enter into it. 
[03:19:34] <rawtaz> i really really tried it, and didnt like it at all. sorry about the rant
[03:19:57] <rawtaz> just running it used a ton of resources, it was nothing but silly
[03:20:15] <rawtaz> but thanks for hte suggestion :)
[03:20:30] <slaughter> bitwarden-rshttps://github.com/liuchenx/bitwarden_rs
[03:20:43] <rawtaz> now, padloc naturally has an API that its mobile app and browser extensions work against. i guess nooone made e.g. a cli client yet but perhaps thats doable with time..
[03:21:04] <slaughter> Rust, and sqlite. I don't think most people use the official server since -rs came out
[03:21:33] <slaughter> Though if you don't like bitwarden that doesn't much matter :p
[03:21:50] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[03:21:53] <rawtaz> that might be better. i never tried the rust version :)
[03:21:54] <slaughter> I think you're wrong, personally, but as long as you're not shilling for Lastpass it's all good :)
[03:22:38] <rawtaz> well the biggest annoyance i had was how heavy it was. this might be better and with sqlite its a different story. the lack of flexibility in the usage is something i might be able to live with :)
[03:22:45] <rawtaz> it does have a vault API thats nice
[03:23:15] <rawtaz> i wonder about security though. how can one trust this fork of it, it's written in a different language by a different author. it's not like any audit of bitwarden holds for this fork im afraid :o
[03:23:23] <rawtaz> (not trying to be negative, just speculating a bit :)
[03:23:44] <rawtaz> by the way, can you elaborate on what you think i was wrong on? you might have a point
[03:26:13] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[03:26:30] <slaughter> AFAIK they implemented the APIs for the service but not the encryption, but now that you mention it I wonder why there isn't a big block describing all that in the readme
[03:26:50] *** Quits: X-Scale (~ARM@46.50.2.72) (Ping timeout: 268 seconds)
[03:27:01] <slaughter> Mostly this;   <rawtaz> i tried it. it's also very very unflexible with the data you enter into it. 
[03:27:09] <slaughter> You can add any custom data/fields/attachments/whatever you want
[03:27:38] <slaughter> The clients are great too IMO. I've never had an issue with macOS or iOS or Android clients
[03:27:54] <rawtaz> i see, thanks
[03:28:14] *** X-Scale` is now known as X-Scale
[03:28:45] <rawtaz> i tried bitwarden when it was fairly new, it's *possible* that it has improved since then. i dont remember exact details, but what i didnt like was that you could pretty much only choose from a few types of "cards" with data in them, and each card (or call it type of entry) had predefined field that you couldnt change.
[03:29:17] <rawtaz> what i call flexible is when you can start a new entry, and then just add "line" after "line" with e.g. a "type of data" and the data. so you can create an entry with whichever fields you want
[03:29:36] <rawtaz> and depending on the types of those fields, some of them are obfuscated, some are not, some are e.g. generating TOTP codes, etc.
[03:29:51] <rawtaz> when i tried bitwarden, it was pretty much the opposite - rigid, set fields.
[03:30:05] <rawtaz> but its very possible its changed since then :)
[03:30:16] <rawtaz> given what you said
[03:30:41] <rawtaz> i should try it again, given how easy it is with docker <3
[03:30:52] <rawtaz> thanks for the encouragement on that part!
[03:31:32] <slaughter> Yeah IIRC I hit the same issue many years ago, but they definitely have a ton of flexibility now. You can add whatever you want to an entry. 
[03:32:44] <slaughter> No problem, hopefully something I said was helpful :)
[03:37:00] <rawtaz> that sounds relaly good. then the only thing i'd be worried about is the security since it's not audited at all afaik (which padloc is). that said, im definitely gonna check it out nonetheless :)
[03:37:06] <rawtaz> i wonder if Vault is audited.. hm
[03:38:47] <rawtaz> i might be overplaying the audited part. it's not like we're a rocket facility. but then again, we dont have resources to audit it ourselves so knowing that it has been at some point just feels better.
[03:39:18] <slaughter> https://github.com/dani-garcia/vaultwarden
[03:39:24] <slaughter> Use that, I guess I pointed you at a fork whoops
[03:40:49] <slaughter> I think they maybe just re-implemented bitwarden's method
[03:41:58] <slaughter> Ahhhh it's all encrypted client-side, and you'd be using the official client, so bitwarden's audit stand
[03:42:02] <slaughter> stands*
[03:42:08] <slaughter> https://github.com/dani-garcia/vaultwarden/issues/376#issuecomment-459019709
[03:44:59] <rawtaz> right
[03:45:27] <rawtaz> hm so one can connect the official bitwaden client to a self-hosted vaultwarden you say
[03:53:53] <slaughter> Yes that's correct
[03:54:27] <slaughter> Vaultwarden is just a re-write of the APIs. 
[03:54:39] <rawtaz> mm
[03:55:28] *** Quits: zacts (~zacts@user/zacts) (Quit: leaving)
[03:55:44] *** Joins: zacts (~zacts@user/zacts)
[04:09:36] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[04:11:15] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 268 seconds)
[04:17:19] <rawtaz> looking at bitwarden, it seems like you're still stuck with having to select one of the four types of items when you create one, and only below the standard fields you have the custom fields option. so if you want to store something taht isnt really applicable to either of those types, you still have to keep thos unused fields around above the custom ones that really matter
[04:17:48] <rawtaz> so still rather unflexible i think. they should simply have a fifth type thats named Custom in which you ONLY add custom fields.
[04:19:34] <rawtaz> i dont understand why they're so adamant to have only those four fields.. it's like they cannot imagine that people might store other types of entries in there, LOL
[04:31:10] <slaughter> Use a secure note rawtaz 
[04:31:35] <slaughter> It only has name enforced, then you can add what you want
[04:31:46] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[04:33:57] *** Joins: ArchLayperson (~ArchLaype@lopsa/board/ArchLayperson)
[04:39:20] <rawtaz> yeah but yuo still have that "large" textarea above the custom fields
[04:39:49] <rawtaz> so sure its better than the others and a workaround but not ideal. they should just introduce a custom type instead :)
[04:45:50] <slaughter> If you don't put anything in the note it doesn't appear in the entry after you save
[04:46:00] <rawtaz> RLY :O
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:04] <slaughter> Ya just tested
[04:46:05] <slaughter> :)
[04:46:08] <rawtaz> ok cool
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[05:11:29] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[05:14:50] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[05:35:44] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 268 seconds)
[05:36:15] *** Joins: X-Scale` (~ARM@46.50.0.1)
[05:37:55] *** X-Scale` is now known as X-Scale
[06:14:31] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[06:18:18] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[06:18:40] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[06:21:34] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[06:57:38] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[06:57:52] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[07:55:06] *** Quits: ArchLayperson (~ArchLaype@lopsa/board/ArchLayperson) (Ping timeout: 268 seconds)
[08:18:38] *** Joins: versa_gone (~versageek@32.215.132.28)
[08:21:05] *** Quits: versageek (~versageek@wikimedia/Versageek) (Ping timeout: 268 seconds)
[11:24:32] *** Joins: Armanzor (~Armanzor@user/armanzor)
[11:35:28] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:15] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:56:30] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[12:00:11] *** Quits: rpthms (~rpthms@user/rpthms) (Read error: Connection reset by peer)
[12:06:15] *** Joins: rpthms (~rpthms@user/rpthms)
[12:12:03] *** Quits: CapitalistPunk (~Capitalis@liledevil.xs4all.nl) (Remote host closed the connection)
[12:12:21] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[13:30:00] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[13:33:20] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[13:33:38] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 268 seconds)
[13:37:26] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[13:37:27] *** Joins: shnekel (~user@46-116-168-250.bb.netvision.net.il)
[14:21:40] *** Quits: shnekel (~user@46-116-168-250.bb.netvision.net.il) (Remote host closed the connection)
[14:22:33] *** Joins: shnekel (~user@46-116-168-250.bb.netvision.net.il)
[15:04:39] *** Parts: shnekel (~user@46-116-168-250.bb.netvision.net.il) (ERC (IRC client for Emacs 28.0.50))
[16:06:15] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[16:07:02] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[16:36:13] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:17:06] *** Joins: vovs03 (~En3rgy.UM@80.71.242.7)
[17:48:46] *** Joins: ArchLayperson (~ArchLaype@lopsa/board/ArchLayperson)
[17:54:46] *** Quits: lofiguy_ (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[17:55:30] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[18:28:06] *** Joins: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net)
[19:52:16] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:53:05] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:31:04] *** Quits: Armanzor (~Armanzor@user/armanzor) (Read error: Connection reset by peer)
[21:35:18] *** Quits: vovs03 (~En3rgy.UM@80.71.242.7) (Ping timeout: 260 seconds)
[23:23:31] *** Quits: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net) (Remote host closed the connection)
[23:33:06] *** Joins: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks)
[23:33:42] *** Quits: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks) (Client Quit)
[23:41:48] <Dus10> just when I thought I could focus... my mind keeps getting pulled towards all of these shiny objects
[23:42:10] <Dus10> I am trying to buckle down and study for AZ-400... but even then there are too many things going on
[23:42:48] <Dus10> I have caught myself watching Hashiconf videos today and then this video that I thought my minions would find useful for their Linux studies
[23:52:05] <rawtaz> whats AZ-400 ?
[23:52:25] <rawtaz> Dus10: if it helps your mental health, i can tell you that i just spend 1.5 hours debugging a php web application from 2011
[23:52:29] <rawtaz> suck on that, and be happy
[23:59:40] <slaughter> Trade ya rawtaz 
