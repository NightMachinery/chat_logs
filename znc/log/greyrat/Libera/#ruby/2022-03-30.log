[00:00:59] <jhass[m]> https://github.com/crystal-lang/crystal/blob/master/src/json/lexer.cr#L32 json parser done this way
[00:09:18] <adam12> jhass[m]: Interesting that it can be done so simple.
[00:09:26] <adam12> I've been slightly obsessed with parsers lately.
[00:09:41] <adam12> Tho that API seems kinda similar to StringScanner.
[00:09:51] <adam12> @scanner.scan(/./) style.
[00:10:27] <jhass[m]> Crystal's entire lexer basically looks the same, just... bigger :D
[00:10:27] <jhass[m]> and it's even fast too!
[00:10:59] <jhass[m]> Yes, it's called a pull parser
[00:12:02] <jhass[m]> https://github.com/crystal-lang/crystal/blob/master/src/json/pull_parser.cr that's the intermediate interface. 
[00:12:23] <jhass[m]> https://github.com/crystal-lang/crystal/blob/master/src/json/any.cr that's the turn it into a bag of objects thingy (you wouldn't use this much in crystal though)
[00:18:28] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[00:19:10] *** Quits: taupiqueur_ (~taupiqueu@129.106.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[00:23:24] *** Quits: reset (~reset@user/reset) (Quit: reset)
[00:25:16] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[00:30:00] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[00:33:02] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:33:53] *** Quits: heumeu (~doop@d5153017c.static.telenet.be) (Remote host closed the connection)
[00:36:56] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[00:41:36] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[00:46:13] *** Quits: TomyWork (~TomyLobo@p200300e80f1582000c576e44a1f70bbd.dip0.t-ipconnect.de) (Quit: Leaving)
[00:50:38] *** Quits: dviola (~diego@user/dviola) (Quit: WeeChat 3.4)
[00:55:34] *** Quits: d-s (~Michal@89-73-9-29.dynamic.chello.pl) (Ping timeout: 260 seconds)
[00:56:00] *** Joins: d-s (~Michal@89-73-9-29.dynamic.chello.pl)
[01:03:06] *** Joins: seydar (~seydar@154-27-113-252.starry-inc.net)
[01:03:14] *** Quits: seydar (~seydar@154-27-113-252.starry-inc.net) (Client Quit)
[01:03:27] *** Joins: seydar (~seydar@154-27-113-252.starry-inc.net)
[01:04:35] <seydar> What's the preferred audio library for us? I'm looking to play wav files
[01:11:50] <weaksauce> not sure there is one
[01:13:58] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:14:47] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[01:23:14] <mooff> it might not be a bad idea to use Gosu
[01:23:21] <mooff> (got the idea from https://stackoverflow.com/a/14993521)
[01:24:30] *** Quits: SobiX (~SobiX@109-236-83-63.hosted-by-worldstream.net) (Ping timeout: 250 seconds)
[01:29:13] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[01:30:25] <weaksauce> big dependency but probably worth it 
[01:30:38] <mooff> audio playback is very OS specific
[01:31:30] <seydar> i guess i just got jealous looking at rust's "audio" library
[01:33:35] <mooff> it looks nice
[01:33:42] <mooff> someone should make Ruby bindings for it :)
[01:35:57] <seydar> grumble grumble grumble
[01:36:48] <seydar> that would be a good project to do
[01:37:04] <mooff> it's enough of an ordeal that the go-to libraries are usually portaudio or SDL2
[01:37:21] <mooff> there are Ruby wrappers for both fwiw
[01:37:24] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:37:57] <mooff> on Linux alone there are 3 or 4 sound servers to support
[01:38:13] <seydar> man it's odd that googling "ruby audio library" turned up like no results from the past 10 years
[01:38:34] <seydar> ffi-portaudio is a library that was last updated 5 months ago, so thank you for specifically mentioning it, else i never would've found it
[01:40:34] *** Joins: SobiX (~SobiX@83.120.26.14)
[01:42:17] <weaksauce> damn that's a really tiny library wrapper
[01:46:30] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[01:47:15] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[01:48:17] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.5)
[01:48:53] <seydar> yeah, it's also super thin
[01:49:19] *** Joins: emcb58 (~emcb@152.0.149.131)
[01:49:25] *** Joins: markong (~kvirc@213.146.188.203)
[01:51:52] *** Quits: emcb5 (~emcb@186.6.124.237) (Ping timeout: 260 seconds)
[01:51:53] *** emcb58 is now known as emcb5
[01:54:25] *** Joins: emcb54 (~emcb@186.6.184.25)
[01:55:27] <seydar> ruby2d is another alternative
[01:57:16] *** Quits: emcb5 (~emcb@152.0.149.131) (Ping timeout: 272 seconds)
[01:57:17] *** emcb54 is now known as emcb5
[02:00:09] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Remote host closed the connection)
[02:00:32] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[02:07:32] *** Quits: seydar (~seydar@154-27-113-252.starry-inc.net) (Quit: leaving)
[02:14:47] *** Quits: d-s (~Michal@89-73-9-29.dynamic.chello.pl) (Remote host closed the connection)
[02:16:56] *** Quits: SobiX (~SobiX@83.120.26.14) (Ping timeout: 250 seconds)
[02:36:17] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:44:25] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[02:47:48] *** Joins: SobiX (~SobiX@83.120.26.14)
[02:52:22] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 272 seconds)
[02:57:14] *** Quits: SobiX (~SobiX@83.120.26.14) (Ping timeout: 250 seconds)
[03:10:42] *** Joins: SobiX (~SobiX@109-236-83-63.hosted-by-worldstream.net)
[03:48:03] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:49:17] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[03:49:52] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[03:51:13] *** Joins: hololeap (~hololeap@user/hololeap)
[03:52:00] *** Joins: reset (~reset@user/reset)
[04:07:01] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:08:46] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[04:09:33] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 260 seconds)
[04:10:29] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[04:31:40] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[04:32:18] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Client Quit)
[05:01:57] *** Quits: SobiX (~SobiX@109-236-83-63.hosted-by-worldstream.net) (Quit: Client closed)
[05:20:25] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[05:23:53] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[05:34:31] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[05:43:09] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[05:43:25] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Client Quit)
[05:55:56] *** Joins: nirvdrum_ (~nirvdrum@pool-100-0-31-176.bstnma.fios.verizon.net)
[05:59:45] *** Quits: nirvdrum (~nirvdrum@pool-100-0-31-176.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[06:02:31] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Ping timeout: 250 seconds)
[06:16:06] *** Joins: hanzo (uid532183@user/hanzo)
[06:26:52] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5)
[06:40:31] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[06:43:06] *** Quits: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c) (Client Quit)
[06:52:57] *** Quits: jhawthorn_ (~jhawthorn@user/jhawthorn) (Quit: ZNC 1.8.2 - https://znc.in)
[06:53:29] *** Joins: jhawthorn (~jhawthorn@user/jhawthorn)
[07:43:24] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[07:57:36] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[08:22:41] *** Quits: nirvdrum_ (~nirvdrum@pool-100-0-31-176.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[08:24:45] *** Joins: gproto23 (~gproto23@user/gproto23)
[08:32:51] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[08:42:35] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 260 seconds)
[08:43:25] *** Quits: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net) (Ping timeout: 240 seconds)
[08:45:53] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[08:58:30] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: cya pals)
[09:03:32] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[09:05:18] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[09:09:34] *** Joins: fowl (~fowlmouth@user/fowl)
[09:23:08] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[09:24:53] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[09:38:20] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[09:38:43] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[09:41:40] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:44:02] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 272 seconds)
[09:50:02] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:a8ec:646c:1d0c:a2da)
[09:50:59] *** Joins: Aylat (~Aylat@146.pool95-22-69.dynamic.orange.es)
[09:50:59] *** Quits: Aylat (~Aylat@146.pool95-22-69.dynamic.orange.es) (Changing host)
[09:50:59] *** Joins: Aylat (~Aylat@user/Aylat)
[09:51:15] *** Quits: reset (~reset@user/reset) (Quit: reset)
[09:51:28] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[09:51:58] *** Quits: Aylat (~Aylat@user/Aylat) (Client Quit)
[09:53:28] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[10:08:02] *** Quits: seabre (~seabre@user/seabre) (Remote host closed the connection)
[10:09:26] *** Joins: seabre (~seabre@user/seabre)
[10:20:35] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[10:28:06] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[10:38:39] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:46:24] *** Quits: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:46:48] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:a8ec:646c:1d0c:a2da) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:48:10] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:2455:a2f0:99fd:7a91)
[10:49:31] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2)
[10:49:53] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:59:03] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[11:47:03] *** Joins: Furai (~Furai@furai.pl)
[11:51:19] *** Joins: d-s (~Michal@89-73-9-29.dynamic.chello.pl)
[12:02:04] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[12:21:39] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:39:19] *** Joins: infinityfye (~infinityf@156.212.34.1)
[12:40:17] *** Quits: Thanzex (~Thanzex@37.103.241.128) (Read error: Connection reset by peer)
[12:40:43] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[12:40:43] *** Joins: Thanzex (~Thanzex@37.103.241.128)
[12:49:18] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[12:50:53] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[13:00:01] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[13:32:16] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-5552-c541-2a06-6581.res6.spectrum.com)
[13:34:06] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0dd9-0564-5ee4-7b35.res6.spectrum.com) (Ping timeout: 245 seconds)
[13:45:55] *** Joins: nemesit (~nemesit@ip-92-205-58-192.ip.secureserver.net)
[14:14:58] *** Joins: SobiX (~SobiX@109-236-83-102.hosted-by-worldstream.net)
[14:21:25] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[14:28:24] *** Quits: d-s (~Michal@89-73-9-29.dynamic.chello.pl) (Read error: Connection reset by peer)
[14:28:44] *** Joins: d-s (~Michal@89-73-9-29.dynamic.chello.pl)
[14:56:57] *** Quits: d-s (~Michal@89-73-9-29.dynamic.chello.pl) (Read error: Connection reset by peer)
[14:57:31] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:57:38] *** Joins: gproto23_ (~gproto23@user/gproto23)
[14:57:49] *** Joins: d-s (~Michal@89-73-9-29.dynamic.chello.pl)
[14:59:09] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[14:59:37] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:2455:a2f0:99fd:7a91) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:05:48] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[15:05:57] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5)
[15:08:25] *** Joins: taupiqueur (~taupiqueu@238.144.204.77.rev.sfr.net)
[15:14:13] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:16:19] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:16:53] *** Quits: taupiqueur (~taupiqueu@238.144.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[15:20:39] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 260 seconds)
[15:21:19] *** Joins: markong (~kvirc@213.146.188.203)
[15:22:26] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[15:22:56] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:c562:b79c:738d:725f)
[15:25:20] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:c562:b79c:738d:725f) (Client Quit)
[15:29:05] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur_)
[15:29:30] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:34:51] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[16:00:14] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 272 seconds)
[16:07:00] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:7d1d:2886:5f23:5d20)
[16:07:07] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:7d1d:2886:5f23:5d20) (Client Quit)
[16:20:23] *** Quits: rhe (~rhe@labyrinth.rhe.jp) (Quit: Ping timeout (120 seconds))
[16:20:31] *** Quits: SobiX (~SobiX@109-236-83-102.hosted-by-worldstream.net) (Quit: Client closed)
[16:20:43] *** Joins: rhe (~rhe@labyrinth.rhe.jp)
[16:24:18] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 272 seconds)
[16:25:56] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:32:08] *** Quits: roadie (~user@2a02:8108:5a40:1d87:bc7a:bbe4:d21a:4cbd) (Ping timeout: 260 seconds)
[16:33:16] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[16:33:55] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[16:37:31] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[16:37:52] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[16:40:09] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[16:43:23] *** Joins: SobiX (~SobiX@83.120.26.14)
[16:58:18] *** Joins: roadie (~user@2a02:8108:5a40:1d87:bc7a:bbe4:d21a:4cbd)
[17:05:11] *** Quits: roadie (~user@2a02:8108:5a40:1d87:bc7a:bbe4:d21a:4cbd) (Ping timeout: 260 seconds)
[17:08:28] <mooff> ello
[17:12:03] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[17:12:17] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:17:31] <adam12> mooff: morning!
[17:17:34] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Read error: Connection reset by peer)
[17:17:45] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[17:19:12] <mooff> morning adam12 :)
[17:19:21] <adam12> mooff: how goes
[17:19:57] *** Quits: infinityfye (~infinityf@156.212.34.1) (Ping timeout: 260 seconds)
[17:22:27] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 260 seconds)
[17:23:26] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 252 seconds)
[17:26:42] *** Joins: reset (~reset@user/reset)
[17:27:45] <mooff> not bad adam12. hope you're well
[17:27:57] <mooff> writing documentation. why is it so hard to do?!
[17:27:58] <adam12> mooff: I am thanks. You as well.
[17:28:05] <adam12> No kidding!
[17:31:41] *** Joins: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed)
[17:32:43] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[17:34:34] *** Joins: markong (~kvirc@213.146.188.203)
[17:37:51] *** Quits: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed) (Ping timeout: 245 seconds)
[17:43:27] *** Joins: dionysus69 (~Thunderbi@185.115.4.181)
[17:47:15] *** Joins: nirvdrum (~nirvdrum@pool-100-0-31-176.bstnma.fios.verizon.net)
[17:47:44] *** Quits: SobiX (~SobiX@83.120.26.14) (Ping timeout: 250 seconds)
[17:48:28] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:49:06] *** Joins: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net)
[17:52:16] *** Joins: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed)
[17:57:06] *** Quits: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed) (Ping timeout: 260 seconds)
[18:00:28] *** Joins: SobiX (~SobiX@109-236-83-102.hosted-by-worldstream.net)
[18:08:20] *** Joins: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed)
[18:10:14] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[18:10:46] *** Joins: oxfuxxx (~oxfuxxx@45.152.181.206)
[18:12:56] *** Quits: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed) (Ping timeout: 252 seconds)
[18:14:24] *** Quits: entropie (~mit@ip5f599513.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[18:16:16] *** Joins: entropie (~mit@ip5f599513.dynamic.kabel-deutschland.de)
[18:17:00] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:42:47] *** Quits: splud (~noneya.bi@user/splud) (Ping timeout: 260 seconds)
[18:46:47] *** Joins: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed)
[18:56:18] *** Quits: oxfuxxx (~oxfuxxx@45.152.181.206) (Ping timeout: 272 seconds)
[19:01:28] *** Quits: emcb5 (~emcb@186.6.184.25) (Ping timeout: 260 seconds)
[19:02:54] *** Joins: splud (~noneya.bi@user/splud)
[19:04:17] *** Quits: Tempesta (~Tempesta@user/tempesta) (Read error: Connection reset by peer)
[19:09:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[19:09:25] *** Joins: royo25 (~supergeek@user/royo25)
[19:10:27] *** Joins: rhe5 (~rhe@labyrinth.rhe.jp)
[19:11:06] *** Quits: rhe (~rhe@labyrinth.rhe.jp) (Read error: Connection reset by peer)
[19:11:06] *** rhe5 is now known as rhe
[19:11:08] <mooff> getting there :-) https://www.gemdocs.org/gems/iirc/0.6.0/
[19:13:42] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:14:07] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:16:41] <adam12> Neat.
[19:16:59] *** Quits: eldritch (~eldritch@user/eldritch) (Quit: bye)
[19:16:59] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[19:17:19] <adam12> include IIRC::Batteries Heh. https://rubygems.org/gems/batteries
[19:19:28] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:19:52] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:22:38] <mooff> hehe
[19:23:48] <adam12> It's hard coming up with good gem names lately.
[19:27:19] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:27:27] <wnd> I may have a different definition for good names
[19:27:59] *** Joins: eldritch (~eldritch@user/eldritch)
[19:29:04] *** Joins: glider (~glider@user/glider)
[19:29:09] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr)
[19:30:18] *** Quits: nirvdrum (~nirvdrum@pool-100-0-31-176.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:31:18] <adam12> wnd: What's the definition?
[19:33:45] <wnd> In this context, descriptive and searchable (read: unique). I know it's boring and not funny.
[19:35:06] <adam12> wnd: I figure the gem summary / description would be sufficient to match any expected searches?
[19:35:14] <adam12> I get where you're coming from tho.
[19:43:15] *** Quits: royo25 (~supergeek@user/royo25) (Quit: Bye)
[19:49:16] <mooff> the IIRC name was 'giving up' just to get it released ;)
[19:50:21] <mooff> many that i liked were already taken
[19:51:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 260 seconds)
[19:51:54] <John_Ivan> is there a particular method or approach to iterating a string from a given position? e.g suppose I want to start printing out the chars of "this_string" but from position 6.
[19:52:19] <mooff> :: "this string"[6..]
[19:52:19] <ruby-eval> => "tring"
[19:52:45] <adam12> You can use String#slice if it reads better to you.
[19:53:22] <John_Ivan> hmm. hold on, trying to figure out if that will work. thank you by the way.
[19:54:37] <John_Ivan> mooff, no, it won't I'm afraid. because I need to be in control of the iterator to apply conditions to it
[19:54:49] <John_Ivan> so basically I need
[19:55:20] <John_Ivan> string.each_char_with_index_at(char, index, at) {}
[19:55:35] <John_Ivan> so that I can continue my iteration from a given "at" position
[19:55:57] <jhass[m]> string.each_char.drop(6).each
[19:56:11] <jhass[m]> string[6..].each_char
[19:56:24] <mooff> \o/ ^
[19:56:32] <John_Ivan> I guess that works. cheers.
[19:57:08] <jhass[m]> first might be slightly more performant for very big strings
[19:57:45] <John_Ivan> it works well for my usecase. thanks mate. it won't work well if you want to go backwards though :)
[19:58:32] <John_Ivan> because once you dropped the 6 chars, what if you want to iterate now in reverse? you have to reconstruct the string again rather than just using some pointer arithmetic
[19:58:49] <adam12> You want StringScanner then, likely.
[19:58:57] <jhass[m]> Maybe you want to write C not Ruby xD
[19:59:07] <John_Ivan> I want to write Ruby with C :>
[19:59:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:59:17] <jhass[m]> Check Crystal then
[19:59:18] *** Joins: emcb5 (~emcb@186.6.156.235)
[20:00:14] <adam12> Or StringIO..
[20:00:35] <adam12> Not really sure what you're building tho.
[20:00:40] <jhass[m]> More seriously though you might also consider just computing your indicies, a.upto(s.size) do |i| s[i] end; s.size.downto(b) etc
[20:01:17] * mooff wishes that StringIO.new.is_a?(IO) was true :)
[20:01:20] <John_Ivan> adam12, just making my own string lib, the one I mentioned yesterday.
[20:01:47] <adam12> John_Ivan: Right. Did you have an example in another language? Just curious.
[20:02:05] <John_Ivan> an example? of what
[20:02:14] <adam12> John_Ivan: A library that you are modelling this from.
[20:02:49] <John_Ivan> not really. I just made my own function called "GetStringBetween(char1, char2, occurence)"
[20:03:05] <John_Ivan> and I figured that for the occurence, I'd have to scan back and forth keeping memory in mind (of occurences)
[20:03:09] <jhass[m]> mooff:  class StringIO; def is_a?(class); class == IO ? true :  super; end; end; xD
[20:03:18] <mooff> hehe jhass[m] 
[20:03:18] <John_Ivan> I normally do this with array indices in C
[20:03:22] <adam12> John_Ivan: Gotcha. What's occurence?
[20:03:43] <adam12> The string being worked on?
[20:03:51] <mooff> jhass[m]: fwiw it's really IO === StringIO.new that i was interested in, for case statements
[20:03:52] <John_Ivan> adam12, "this-occure-more-than-once" calling the function over this string would yield "more" rather than "occur"
[20:04:16] <John_Ivan> 3rd occurence would yield "than"
[20:04:25] <jhass[m]> mooff: aww, yeah, the one thing you can't really hack up in Ruby :( 
[20:05:45] <jhass[m]> My little secret forever pending spec https://github.com/jhass/configurate/blob/main/spec/configurate/proxy_spec.rb#L11
[20:06:02] <adam12> John_Ivan: Sorry, I still don't follow. But if you get something working I'd be curious to see.
[20:06:18] <adam12> jhass[m]: LOL.
[20:08:00] <mooff> lol
[20:08:21] <mooff> using Insanity
[20:21:27] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[20:25:51] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[20:26:11] *** Quits: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed) (Ping timeout: 245 seconds)
[20:26:48] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[20:29:27] *** Joins: Guest48_ (~textual@2001:ee0:4081:6914:adb5:7f11:b4c7:5e8f)
[20:30:09] *** Quits: dionysus69 (~Thunderbi@185.115.4.181) (Ping timeout: 256 seconds)
[20:32:21] *** Quits: Guest48_ (~textual@2001:ee0:4081:6914:adb5:7f11:b4c7:5e8f) (Client Quit)
[20:43:01] *** Joins: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed)
[20:46:03] <John_Ivan> adam12, no worries. yeah. I'll get it working. once I figure out how to iterate back and forth in the same string. but basically
[20:47:15] <John_Ivan> GetStringBetween("-", "-", 1, string_to_scan); //where string_to_scan is "this-is-a-string-to-scan", the return value should be "is". if the occurence is 2, the return value is "a". if it's 3, it's "string"
[20:47:25] <John_Ivan> at least that's how I plan to design it
[20:49:02] <John_Ivan> the params of the function are GetStringBetween(char1, char2, occurence, stringToScan);
[20:56:31] *** Joins: TCZ (~tcz@ip-91.246.66.101.skyware.pl)
[20:59:17] *** Quits: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed) (Ping timeout: 250 seconds)
[21:02:44] *** Quits: SobiX (~SobiX@109-236-83-102.hosted-by-worldstream.net) (Ping timeout: 250 seconds)
[21:11:20] *** Quits: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:12:19] <mooff> John_Ivan: have you written that as a test case? :)
[21:12:55] <John_Ivan> mooff, I use the exact format I mentioned above for testing, yes.
[21:13:05] <John_Ivan> though I think I'm going to give up on it.
[21:16:24] *** Joins: SobiX (~SobiX@185-2-82-40.hosted-by-worldstream.net)
[21:18:07] *** Joins: eddof13 (~textual@189.178.17.205)
[21:24:29] <mooff> give up? how come?
[21:28:04] <adam12> John_Ivan: I made an example using StringScanner for the lulz. https://gist.github.com/adam12/68491a792a7e28f1e8c69197cd475caa if you're curious.
[21:29:00] <John_Ivan> adam12, I appreciate the interest :), I'll read it in a moment.
[21:29:27] <John_Ivan> mooff, well, originally the string lib I'm making is meant to just ease my future work but
[21:29:44] <John_Ivan> let's say that I'm slightly lost. I'm in between a stage where I am asking myself
[21:30:51] <John_Ivan> "I can automate some of my data. but I could also just go and do it by hand. doing it by hand will be quicker if done in stages. but the automation will do it in a few seconds. I'll have to spend writing a few days. in which in those few days I'll probably have the stuff done. is there a point in this lib now? might be in the future. but automation will crop up again. I guess at that time, I'll just use the basic string operations and hope 
[21:30:52] <John_Ivan> to be good enough...
[21:31:48] <John_Ivan> mooff, so "priorities" and "choosing what suits best", taking my state of mind in consideration
[21:32:08] <John_Ivan> is the reason I figured I am probably wasting my time making that string library.
[21:32:32] <adam12> I'd say YAGNI and rule of 3. Start doing what you're doing, and you dup it 3 times, extract it. And don't build anything you haven't needed yet (YAGNI).
[21:32:40] <adam12> Unless it's for fun, in that case, there's no harm in throwing away code.
[21:34:28] *** Quits: TCZ (~tcz@ip-91.246.66.101.skyware.pl) (Quit: Leaving)
[21:36:36] <John_Ivan> :)
[21:41:24] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[21:41:35] *** Quits: skandal (~skandal@user/szahid) (Quit: ZNC 1.8.2 - https://znc.in)
[21:51:38] *** Joins: lunarkitty (uid501895@user/pyra)
[21:52:43] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 246 seconds)
[21:56:47] *** Quits: SobiX (~SobiX@185-2-82-40.hosted-by-worldstream.net) (Quit: Client closed)
[21:59:38] *** Joins: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed)
[22:13:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:21:14] *** Quits: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed) (Ping timeout: 260 seconds)
[22:22:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[22:31:25] *** Joins: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed)
[22:32:56] *** Joins: scottg489 (~scottg489@ec2-35-166-103-119.us-west-2.compute.amazonaws.com)
[22:34:19] *** Joins: hololeap_ (~hololeap@user/hololeap)
[22:34:55] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[22:35:32] *** Quits: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed) (Read error: Connection reset by peer)
[22:35:56] *** Joins: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed)
[22:39:21] *** Joins: hololeap (~hololeap@user/hololeap)
[22:40:55] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[22:41:21] *** Quits: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed) (Read error: Connection reset by peer)
[22:41:40] *** Joins: roadie (~user@2a02:8108:5a40:1d87:445f:c015:94d4:87ed)
[22:43:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:44:54] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:45:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:47:13] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:48:15] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[22:56:37] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:15:47] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-5552-c541-2a06-6581.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:29:09] *** Quits: eddof13 (~textual@189.178.17.205) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:34:16] *** Joins: eddof13 (~textual@189.178.17.205)
[23:54:47] *** Joins: nirvdrum (~nirvdrum@pool-100-0-31-176.bstnma.fios.verizon.net)
[23:55:19] <havenwood> adam12: Almost tempting to: val = check_until(right_pattern).delete_suffix(right)
[23:55:50] <havenwood> There should be a #check_until that doesn't include the end. ¯\_(ツ)_/¯ 
[23:56:06] <adam12> havenwood:  Yeah. :\ I wish it didn't include the end and ran into this when I was parsing something else just recently.
[23:56:30] <adam12> The something else I ended up using a look-ahead IIRC.
[23:56:33] <havenwood> adam12: I guess you know you can safely: check_until(right).sub(right, '')
[23:56:41] <havenwood> Since can't be a right in there.
[23:56:47] <havenwood> Another one, I mean.
[23:57:08] <havenwood> adam12: Yeah, makes sense.
[23:57:27] <adam12> StringScanner is definitely one of my favs tho.
[23:57:42] <havenwood> Beats Shell any day. ;)
[23:57:57] <havenwood> Shell always has me scratching my head.
[23:58:12] <havenwood> adam12: What's your least favorite?
[23:58:44] <havenwood> They've removed so many of the obvious choices from stdlib!
[23:58:45] <havenwood> https://stdgems.org/
[23:58:52] <havenwood> WEBrick
[23:59:15] <adam12> havenwood: Probably net/http :(
[23:59:17] <havenwood> I guess we still have Net::HTTP ;)
[23:59:19] <havenwood> Haha, yup
[23:59:45] <adam12> I'm trying to use net/http more and more, but I usually want to wrap it
[23:59:53] <adam12> so I'm back at Faraday, just without the dependency.
[23:59:54] <adam12> Oh well.
[23:59:58] <havenwood> The stdlib is for sure getting more crisp and maintained. That's nice.
