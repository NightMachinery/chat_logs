[00:03:52] <FromDiscord> <haxscramper> I think any statically compiled, "3E" language seems like a better C nowdays
[00:10:06] <FromDiscord> <willyboar> ...or a faster python/ruby etc
[00:21:07] *** Joins: Guest54 (~Guest54@181.29.133.33)
[00:22:41] *** Quits: Guest54 (~Guest54@181.29.133.33) (Client Quit)
[01:39:54] <FromDiscord> <@bracketmaster-5a708063d73408ce4> zig principles remind me somewhat of V
[01:40:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> has anyone here used nim for serious embedded programming?
[01:43:29] <FromDiscord> <InventorMatt> PMunch made firmware for his keyboard in nim
[01:44:23] <FromDiscord> <InventorMatt> he gave a talk at nimconf about it
[01:54:33] <FromDiscord> <willyboar> iirc federico3
[01:55:37] <FromDiscord> <dom96> I'm using Nim for quite a big embedded project
[01:55:42] <FromDiscord> <dom96> works well
[02:00:24] *** Quits: max22- (~maxime@2a01cb0883359800a5abe7ad3ddc4599.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:00:28] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[02:12:22] <FromDiscord> <exelotl> same :D
[02:14:51] <FromDiscord> <Jakraes> How do I turn a string into an int?
[02:15:11] <FromDiscord> <exelotl> parseInt from the strutils module
[02:15:18] <FromDiscord> <Jakraes> Thank you
[02:19:05] <FromDiscord> <ElegantBeef> And as it can raise an exception you probably should throw it in a try except for program stabillity üòõ
[02:20:03] <FromDiscord> <@bracketmaster-5a708063d73408ce4> has nimconf been in person before?
[02:23:28] <FromDiscord> <exelotl> nope, first one was in 2020 a few months into the pandemic
[02:44:01] <FromDiscord> <zetashift> FOSDEM nim room is basically a mini in person nimconf tho
[02:45:33] <FromDiscord> <@bracketmaster-5a708063d73408ce4> ah OK
[03:08:36] <FromDiscord> <Valor> In reply to @haxscramper "I think any statically": whats "3E"
[03:16:13] <FromDiscord> <Alea> on windows, how does nim c --run go about hiding the terminal that pops when running the executable by itself?
[03:23:19] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[03:23:44] *** Joins: supakeen (~user@python/site-packages/supakeen)
[03:31:52] <FromDiscord> <Hi02Hi> In reply to @„Éê„É≠„Ç∂„Éº„Éâ "whats "3E"": I think its the "Efficient, expressive, elegant" thats on the nim homepage
[03:32:05] <FromDiscord> <Valor> ah
[03:58:10] *** Joins: max22- (~maxime@2a01cb0883359800e3aef8451fe2b79a.ipv6.abo.wanadoo.fr)
[03:59:25] *** Quits: max22- (~maxime@2a01cb0883359800e3aef8451fe2b79a.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[04:14:14] <FromDiscord> <carmysilna> What's the most idiomatic way to define a set of tags for one `when defined(x)` predicate and another set otherwise
[04:32:03] <FromDiscord> <@bracketmaster-5a708063d73408ce4> has anyone tried nimedit?
[04:32:05] <FromDiscord> <@bracketmaster-5a708063d73408ce4> thoughts so far?
[04:38:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'm thinking I'll try it
[04:48:36] *** Joins: vicfred (~vicfred@user/vicfred)
[04:57:29] <FromDiscord> <carmysilna> When I looked at it, it looked like development has stalled
[05:34:03] *** Joins: bkay (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[05:34:21] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 258 seconds)
[06:06:58] <FromDiscord> <creonico> How can I do conditional compilation when defining -d:debug?
[06:08:04] <FromDiscord> <leorize> `when defined(debug): <code here>`
[06:08:21] <FromDiscord> <creonico> Thank you üòÖ
[06:28:33] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:28:41] <FromDiscord> <Jakraes> Does anyone know if there's a way to temporarily open a port with nim?
[07:29:32] <FromDiscord> <Jakraes> I tried using netty to connect with a friend and apparently, even if specify a port in netty and he uses my ip and we're connected through hamachi, he can't connect with the server
[08:04:01] *** Joins: ecs (ecs@user/ecs)
[08:15:40] *** Joins: TakinOver (~quassel@47.150.206.35)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:52:09] *** Joins: TejasAgarwal (~tejasagar@103.94.113.192)
[09:57:31] *** Quits: fputs_ (~fputs@137.220.33.212) (Remote host closed the connection)
[09:57:49] *** Joins: fputs (~fputs@137.220.33.212)
[09:58:04] *** Quits: fputs (~fputs@137.220.33.212) (Remote host closed the connection)
[09:58:52] *** Joins: fputs (~fputs@137.220.33.212)
[10:04:39] *** Quits: TejasAgarwal (~tejasagar@103.94.113.192) (Quit: The Lounge - https://thelounge.chat)
[10:46:18] *** Joins: max22- (~maxime@2a01cb08833598001a3c23fef2f69cad.ipv6.abo.wanadoo.fr)
[10:59:32] *** Quits: max22- (~maxime@2a01cb08833598001a3c23fef2f69cad.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[11:00:26] *** Joins: max22- (~maxime@2a01cb08833598006c2b03ada832aebe.ipv6.abo.wanadoo.fr)
[11:04:05] *** Quits: aeverr (~deodex@ai126162184205.56.access-internet.ne.jp) (Ping timeout: 255 seconds)
[11:06:38] <FromDiscord> <j-james> Are there best practices for wrapping C libraries?
[11:32:15] <FromDiscord> <Rika> Example?
[12:14:02] <FromDiscord> <ynfle (ynfle)> @\_discord\_572634810917322773\:t2bot.io try c2nim or nimterop
[12:27:11] <mst> j-james, my (limited) experience is that nim talks to C libraries nicely enough that you kinda just do it and it works
[12:31:07] <FromDiscord> <generic linux user> guys can i know how much is uint64 range?
[12:31:22] <FromDiscord> <generic linux user> its taking a long time than int64, concern
[12:32:26] <fn> <06Prestige99> you mean the highest number for uint64?
[12:32:38] <FromDiscord> <generic linux user> yes
[12:32:51] <fn> <06Prestige99> !eval echo uint64.high
[12:32:54] <fn> <12R2D299> 18446744073709551615
[12:32:55] <NimBot> 18446744073709551615
[12:33:09] <FromDiscord> <generic linux user> i wrote a smol bin for checking on if n(n+1) returns even for all naturals
[12:33:28] <FromDiscord> <generic linux user> i first used int64 , it lasted 1.20mins until i got overflow
[12:33:37] <FromDiscord> <generic linux user> i changed it to uint64 and its been 20 mins
[12:33:44] <FromDiscord> <generic linux user> thanks for the number tho
[12:33:54] <FromDiscord> <zidsal> All naturals is an infinite set
[12:34:06] <FromDiscord> <generic linux user> but my phone is 64bit
[12:34:09] <FromDiscord> <ElegantBeef> Also did you build `-d:release` üòÑ
[12:34:13] <FromDiscord> <generic linux user> yes
[12:34:22] <FromDiscord> <ElegantBeef> still going to take forever, but have fun
[12:34:38] <FromDiscord> <generic linux user> i think by that numver it takes 1.28hours
[12:34:44] <FromDiscord> <zidsal> But generic how do you know that, it works for any naturals larger then uint64.max
[12:34:49] <FromDiscord> <generic linux user> (edit) "numver" => "number"
[12:35:07] <FromDiscord> <generic linux user> me?
[12:35:08] <FromDiscord> <generic linux user> lol
[12:35:30] <FromDiscord> <generic linux user> In reply to @zidsal "But generic how do": just checking on if law is true, have nothing seroius to do tho
[12:36:01] <FromDiscord> <zidsal> My point is generally you would use a mathematical proof for such a thing rather then write a program for it :P
[12:36:31] <FromDiscord> <generic linux user> yes, principal of mathematical induction, i got this from there
[12:37:51] <FromDiscord> <generic linux user> how?
[12:37:52] <FromDiscord> <generic linux user> sent a code paste, see https://play.nim-lang.org/#ix=2tJ9
[12:38:17] <FromDiscord> <Rika> Unsigned numbers do not have overflow errors
[12:38:28] <FromDiscord> <Rika> You will never terminate if you do not manually check for overflow
[12:38:38] <FromDiscord> <generic linux user> waaat
[12:38:56] <FromDiscord> <generic linux user> In reply to @Rika "You will never terminate": so it will keep on running?
[12:39:21] <FromDiscord> <Rika> Unless you check for last number < current number
[12:39:27] <FromDiscord> <generic linux user> but then isnt there a limit that causes overflow
[12:39:39] <FromDiscord> <Rika> Not for unsigned numbers
[12:39:50] <FromDiscord> <generic linux user> that is possible?
[12:40:08] <FromDiscord> <ElegantBeef> Unsigned doesnt overflow
[12:40:11] <FromDiscord> <ElegantBeef> (edit) "Unsigned doesnt overflow ... " 03added "error"
[12:40:13] <FromDiscord> <Rika> Because it is a common idiom to use unsigned numbers for modulo math or something I forgot what it‚Äôs called
[12:40:37] <FromDiscord> <ElegantBeef> !eval echo 255u8 + 1u8
[12:40:40] <NimBot> 0
[12:40:42] <FromDiscord> <generic linux user> but still there is a max on any data type right?
[12:40:55] <FromDiscord> <Rika> Yes
[12:41:04] <FromDiscord> <generic linux user> so we should get a overflow
[12:41:18] <FromDiscord> <Rika> Yes, but not an error
[12:41:25] <FromDiscord> <Rika> It overflows silently
[12:41:28] <FromDiscord> <generic linux user> atleast will it exit?, or will it keep doing smg after it runs out of max
[12:41:40] <FromDiscord> <generic linux user> In reply to @Rika "It overflows silently": and then what will it do?
[12:41:45] <FromDiscord> <Rika> No it just rolls back to 0
[12:41:48] <FromDiscord> <ElegantBeef> No unsigned integers will silently overflow and continue
[12:41:49] <FromDiscord> <Rika> And continues again up to max
[12:41:53] <FromDiscord> <Rika> Then back to 0
[12:41:55] <FromDiscord> <ElegantBeef> Look what i showed with the eval
[12:42:01] <FromDiscord> <generic linux user> if it rolls back to zero , it will exitüôÇ
[12:42:12] <FromDiscord> <ElegantBeef> !eval echo 255u8 + 127u8
[12:42:15] <NimBot> 126
[12:42:23] <FromDiscord> <generic linux user> In reply to @ElegantBeef "Look what i showed": okkke
[12:42:44] <FromDiscord> <Rika> sent a code paste, see https://paste.rs/DrF
[12:42:56] <FromDiscord> <generic linux user> it n is 0 , then the law gets false
[12:43:03] <FromDiscord> <Rika> Why
[12:43:08] <FromDiscord> <generic linux user> 0 is even?
[12:43:15] <FromDiscord> <Rika> Yes
[12:43:17] <FromDiscord> <Rika> What
[12:43:26] <FromDiscord> <generic linux user> it will retrun 0
[12:43:28] <FromDiscord> <generic linux user> :|
[12:43:30] <FromDiscord> <Rika> 0 is even
[12:43:36] <FromDiscord> <ElegantBeef> the remainder of 0 / 2 is 0
[12:43:40] <FromDiscord> <generic linux user> yes
[12:43:47] <FromDiscord> <generic linux user> so it will loop infinite
[12:43:53] <FromDiscord> <Rika> Yes as we said indeed
[12:44:12] <FromDiscord> <generic linux user> thank you guys
[12:44:18] <FromDiscord> <generic linux user> i am mad:)
[12:44:35] <FromDiscord> <Rika> Lol blame C I guess
[12:44:48] <FromDiscord> <generic linux user> else it wouldnt have happend?
[12:44:58] <FromDiscord> <generic linux user> there is cpp tho
[12:45:54] <FromDiscord> <Rika> No it‚Äôs complicated to explain
[12:46:15] <FromDiscord> <generic linux user> okei
[12:48:32] <FromDiscord> <generic linux user> sent a code paste, see https://paste.rs/vO7
[12:51:05] <FromDiscord> <generic linux user> then it will echo 0,0 after 2 hours
[12:51:09] <FromDiscord> <generic linux user> which is pointless
[12:51:11] <FromDiscord> <ElegantBeef> Could just check `if n != uint64.high` before `loop`
[12:51:49] <FromDiscord> <generic linux user> else it would put it to 0 and that doesnt make sense
[13:03:17] *** Quits: max22- (~maxime@2a01cb08833598006c2b03ada832aebe.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[13:06:12] <FromDiscord> <j-james> In reply to @Rika "Example?": Wrapping wlroots, which has functions split across multiple header files - is it standard to merge these all into one Nim file?
[13:07:48] <FromDiscord> <haxscramper> just do what seems suitable for you, there is no set standard
[13:08:11] <FromDiscord> <haxscramper> can merge everything into one huge file
[13:10:02] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[13:11:26] <FromDiscord> <j-james> Good to know, thanks
[13:54:52] <fn> <06Prestige99> Is there a way to do this properly? https://play.nim-lang.org/#ix=2S8a
[14:00:40] <FromDiscord> <ElegantBeef> I dont think there is any nice way around not having a closure here
[14:01:41] <FromDiscord> <ElegantBeef> I assume the cdecl is to interact with xlib?
[14:02:00] <fn> <06Prestige99> actually staticglfw this time
[14:02:40] <fn> <06Prestige99> So this could be done somehow with a closure you think?
[14:02:50] <FromDiscord> <ElegantBeef> Well that's what the error is talking about
[14:03:00] <FromDiscord> <ElegantBeef> Cdecl and closure are incompatible
[14:03:29] <FromDiscord> <ElegantBeef> It's explictly stating that it cannot capture `this` due to using the cdecl calling convention
[14:04:05] <fn> <06Prestige99> Right - I don't know how I could ever use this callback to manipulate data in my program, then
[14:04:29] <FromDiscord> <ElegantBeef> Welcome to glfw fun! üòÑ
[14:04:34] <fn> <06Prestige99> unless it were just global, maybe
[14:04:44] <FromDiscord> <ElegantBeef> Yea if it was global you could
[14:05:15] <FromDiscord> <ElegantBeef> SDL2 doesnt do this callback based stuff if you care about that at all
[14:05:36] <FromDiscord> <ElegantBeef> also i hate your mouse state
[14:05:55] <FromDiscord> <ElegantBeef> How hard is it to use a button state man! clear, pressed, held, released üòõ
[14:06:58] <fn> <06Prestige99> mocking godot's system atm
[14:07:30] <fn> <06Prestige99> well it doesn't compile yet lol so I've yet to test out what I'd like
[14:07:41] <FromDiscord> <ElegantBeef> Working on a 2D or 3D project?
[14:07:53] <fn> <06Prestige99> a 2d engine
[14:08:32] <FromDiscord> <ElegantBeef> Ah i recently started on a 3D "engine" that i'll probably soon throw in a dumpster
[14:08:56] <fn> <06Prestige99> that sounds like fun tbh, but a lot of work
[14:09:16] <fn> <06Prestige99> how in hell can these callbacks be used..
[14:09:19] <FromDiscord> <ElegantBeef> Well i have the important shader/model loading so i can actually toy with it
[14:09:23] <FromDiscord> <ElegantBeef> Global variables
[14:09:36] <fn> <06Prestige99> hmm maybe a singleton?
[14:09:36] <FromDiscord> <ElegantBeef> You basically get to do stuff like https://github.com/beef331/truss3d/blob/master/src/truss3D/inputs.nim#L46
[14:09:53] <FromDiscord> <ElegantBeef> Well do you really need a singleton in Nim?
[14:10:08] <FromDiscord> <ElegantBeef> It's just a global variable here
[14:10:24] <fn> <06Prestige99> for my inputhandler, would be nice
[14:11:03] <FromDiscord> <ElegantBeef> I guess if you must you could have an instantiated object for it, seems quite simple to just import inputs if you need them if you ask me üòÑ
[14:12:08] <fn> <06Prestige99> yeah a singleton works out quite well actually
[14:12:27] <fn> <06Prestige99> I'm avoiding allowing the user to change the state of the inputhandler
[14:13:25] <FromDiscord> <ElegantBeef> Sure but if the input procedures exist in the inputs module you just expose the inputs with getters and you've got a singleton like system with the user not being able to modify them
[14:13:48] <fn> <06Prestige99> yep that's what I'm doing currently
[14:14:11] <FromDiscord> <ElegantBeef> Does it need to capture the global variable?
[14:15:50] <fn> <06Prestige99> well it seems to work, idk
[14:16:07] <fn> <06Prestige99> dont know what goes on under the hood
[14:32:44] *** Joins: Arrrrrrrrr (~Arrrrrrrr@user/arrrrrrrrr)
[14:43:54] <Arrrrrrrrr> What is Araq working on nowadays? I've been out of the loop for a while
[14:46:08] <Arrrrrrrrr> THe overloadable enums looks promising, this was a (minor) pain for me
[14:47:16] <FromDiscord> <fajjida> Is there a way to use globbing in pure Nimsript or at least iterate over them? walkFiles and walkPattern from "os" do not work on Nimscript. I can probably find a workaround but this seems weird.
[14:50:09] <FromDiscord> <haxscramper> https://github.com/treeform/globby
[14:50:11] <fn> <12R2D299> 4GitHub: 7"Glob pattern matching for Nim."
[14:50:32] <FromDiscord> <haxscramper> Most likely it works with nimscript
[15:28:53] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[15:29:11] <arkanoid> is nim compatible with the intel C compiler? I'm curious about trying the auto-parallelization tool and https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/advisor.html
[15:34:20] *** Joins: luis_ (~luis@2804:d47:aaf:d500:8c10:90c0:6b9c:26a1)
[15:52:13] <arkanoid> where is a "const x = @[1,2,3,4,5]" allocated? is it still on the heap no matter of const?
[16:07:03] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[16:07:40] *** Joins: xet7 (~xet7@user/xet7)
[16:09:31] *** Quits: luis_ (~luis@2804:d47:aaf:d500:8c10:90c0:6b9c:26a1) (Quit: luis_)
[16:10:10] *** Joins: luis_ (~luis@2804:d47:aaf:d500:8c10:90c0:6b9c:26a1)
[16:13:27] <FromDiscord> <haxscramper> Yes, IIRC `const` values are directly inlined when they are used
[16:14:23] <FromDiscord> <haxscramper> There might be an optimization for that, so I think the best way to figure that out would be to look at generated C code
[16:20:37] *** Quits: Arrrrrrrrr (~Arrrrrrrr@user/arrrrrrrrr) (Quit: Arrrrrrrrr)
[16:25:50] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:42:25] <FromDiscord> <generic linux user>  https://media.discordapp.net/attachments/371759389889003532/868828030271901696/Screenshot_2021-07-25-17-42-06.jpeg
[17:09:48] *** Quits: luis_ (~luis@2804:d47:aaf:d500:8c10:90c0:6b9c:26a1) (Quit: luis_)
[17:10:09] *** Joins: luis_ (~luis@2804:d47:aaf:d500:8c10:90c0:6b9c:26a1)
[17:16:10] *** Joins: aeverr (~deodex@ai126197048203.18.access-internet.ne.jp)
[17:30:02] *** Joins: arkurious (~arkurious@user/arkurious)
[17:31:50] <FromDiscord> <shampee (Hampus O)> !help
[17:36:30] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[17:36:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[17:55:28] *** Joins: max22- (~maxime@2a01cb08833598009274c4ed683f1453.ipv6.abo.wanadoo.fr)
[17:58:53] <FromDiscord> <generic linux user> eh?
[18:06:28] <FromDiscord> <generic linux user> sent a code paste, see https://paste.rs/JhV
[18:06:30] <FromDiscord> <generic linux user> it was 9 afaik
[18:07:04] <fn> <06Prestige99> What do you mean?
[18:09:12] *** Joins: ming (~ming@2601:547:a00:7720::88e8)
[18:09:53] *** Quits: luis_ (~luis@2804:d47:aaf:d500:8c10:90c0:6b9c:26a1) (Quit: luis_)
[18:12:49] <FromDiscord> <generic linux user> sent a code paste, see https://play.nim-lang.org/#ix=3u2R
[18:13:03] <FromDiscord> <generic linux user> you roll until 7 then the error comes
[18:14:02] <FromDiscord> <generic linux user> i wrote that into a file and readed it, now i call it csv :|
[18:15:44] <FromDiscord> <Rika> ??
[18:15:52] <FromDiscord> <Rika> Roll???
[18:16:00] <FromDiscord> <generic linux user> go on until
[18:16:15] <FromDiscord> <Rika> Go on where
[18:16:23] <FromDiscord> <generic linux user> upto 7th index
[18:17:12] <FromDiscord> <Rika> The code only has two indices though what do you mean
[18:19:06] <FromDiscord> <generic linux user> sent a code paste, see https://play.nim-lang.org/#ix=3u2U
[18:19:16] <FromDiscord> <Rika> It should error by 3
[18:19:24] *** Quits: max22- (~maxime@2a01cb08833598009274c4ed683f1453.ipv6.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[18:19:53] <FromDiscord> <generic linux user> it doesnt
[18:19:56] <FromDiscord> <generic linux user> it returns nil
[18:20:05] <FromDiscord> <generic linux user> ok
[18:20:18] <fn> <06Prestige99> Can you paste a full example?
[18:20:36] <FromDiscord> <generic linux user> sent a code paste, see https://paste.rs/XZA
[18:20:49] <FromDiscord> <generic linux user> i was trying out this method , i dont have any example
[18:22:34] <FromDiscord> <Rika> That should error by index 10
[18:24:52] <FromDiscord> <generic linux user> sorry , it somehow worked now
[18:34:12] <FromDiscord> <generic linux user> it was tje problem of the csv file that i wrote
[18:34:18] <FromDiscord> <generic linux user> i didnt put 11 commas
[18:34:24] <FromDiscord> <generic linux user> also why only 10?
[18:41:30] <FromDiscord> <Rika> index starts with 0?
[18:41:36] <FromDiscord> <generic linux user> yes
[18:41:44] <FromDiscord> <Rika> yeah so it errors on index 10
[18:41:51] <FromDiscord> <Rika> 0 to 9 is 10 strings
[18:41:56] <FromDiscord> <generic linux user> but why only till 10 tho
[18:42:26] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3u2X
[18:42:26] <FromDiscord> <Rika> therefore on index 10 it will error
[18:42:37] <FromDiscord> <generic linux user> no , like if i add more
[18:42:53] <FromDiscord> <Rika> then the index where it errors will change too
[18:44:12] <FromDiscord> <generic linux user> yep , it works
[18:53:21] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[18:54:12] *** Joins: xet7 (~xet7@user/xet7)
[19:00:20] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[20:05:07] <FromDiscord> <carmysilna> Can I, at compile-time, read a file and do computation on its contents, and then have the result of the computation available at runtime?
[20:07:13] <FromDiscord> <no name fits> Yes
[20:09:59] <fn> <11ForumUpdaterBot99> New thread by Arnetheduck: What makes the nim compiler slow, see https://forum.nim-lang.org/t/8267
[20:13:17] <FromDiscord> <carmysilna> In reply to @no name fits "Yes": Can you elaborate? I've tried doing the computation in a `static` block, but then I can't access the results at runtime, outside of the `static` block
[20:13:55] <FromDiscord> <no name fits> Wait, then I misunderstand you
[20:14:17] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Remote host closed the connection)
[20:14:42] <FromDiscord> <no name fits> If you do any computations at compile time, what is it you then want to access at runtime?
[20:14:56] <FromDiscord> <carmysilna> sent a code paste, see https://play.nim-lang.org/#ix=3u3z
[20:15:09] <FromDiscord> <carmysilna> But I get an error that `prelude` isn't in scope, and I can't export from within the `static` block
[20:17:02] <FromDiscord> <carmysilna> In reply to @no name fits "If you do any": the result of the computation, which won't change during runtime, hence the desire to run just once at compile-time
[20:17:09] <FromDiscord> <no name fits> right
[20:18:09] <FromDiscord> <carmysilna> so is `static` not the right way to do this?
[20:18:26] <FromDiscord> <carmysilna> or can I declare a `const` that's the result of a static block?
[20:18:43] <FromDiscord> <no name fits> You need the variable to be outside of the static scope
[20:20:54] <FromDiscord> <no name fits> I'm not sure how you would lift a variable out of a scope otherwise
[20:21:03] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[20:23:32] <FromDiscord> <carmysilna> sent a code paste, see https://play.nim-lang.org/#ix=3u3D
[20:24:05] <FromDiscord> <SolitudeSF> yes
[20:24:40] <FromDiscord> <SolitudeSF> you just need to change readFile to staticRead
[20:29:14] <FromDiscord> <carmysilna> thanks
[20:32:22] <FromDiscord> <zetashift> Did IC land yet? I saw the an issue closed a few weeks ago and presumed it's already in?
[20:53:58] <FromDiscord> <haxscramper> I tried to compile my project with latest devel&IC, and it immediately led to internal compiler crash
[20:53:58] <FromDiscord> <haxscramper> Like 1.6
[20:53:59] <FromDiscord> <haxscramper> And IIRC it was planned for some release version
[20:54:31] <FromDiscord> <haxscramper> And there was no mention of it being ready & fully usable for everyday code
[21:18:42] *** Quits: ming (~ming@2601:547:a00:7720::88e8) (Ping timeout: 240 seconds)
[21:19:11] *** Joins: ming (~ming@2601:547:a00:7720::88e8)
[21:30:24] <FromDiscord> <leorize> I think IC is lifted from 1.6 roadmap
[21:30:34] <FromDiscord> <leorize> gotta ask @Araq  to be sure though
[21:53:59] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:55:05] *** Joins: flynn (~mcbloch@user/flynn)
[22:06:56] *** Quits: ming (~ming@2601:547:a00:7720::88e8) (Remote host closed the connection)
[22:10:48] <FromDiscord> <zetashift> Ah I see, I was just curious, so I'm in no pressing hurry to know üòõ
[22:50:59] <FromDiscord> <haxscramper> So 1.6 roadmap is switching to ARC/ORC as default GC?
[22:51:00] <FromDiscord> <haxscramper> I've seen discussion about orc being 2.0 feature https://forum.nim-lang.org/t/7983
[22:51:00] <FromDiscord> <haxscramper> > ‚Üµ> Once Nim can bootstrap via --gc\:orc we should make this the default GC as it works best with destructor based custom memory management. Since this is all based on the "new runtime" which isn't ABI compatible this deserves the 2.0 version. This should also be our next LTS version.‚Üµ>
[22:59:54] <FromDiscord> <timotheecour> @carmysilna did you see the update for osenv?
[23:00:38] <FromDiscord> <carmysilna> yeah, my preference would be for option 1 but I want to hear what Araq thinks
[23:01:25] <FromDiscord> <timotheecour> ya, that'd be the simplest to do it in 1 shot
[23:03:46] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:04:53] *** Joins: flynn (~mcbloch@user/flynn)
[23:20:02] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[23:21:08] *** Joins: flynn (~mcbloch@user/flynn)
[23:37:48] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:38:12] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:43:55] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Read error: Connection reset by peer)
[23:46:23] <FromDiscord> <lamersc.com üêß> What‚Äôs the difference between arc and orc?
[23:50:36] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[23:59:21] *** Quits: bkay (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Quit: Leaving)
[23:59:35] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[23:59:35] *** Quits: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Changing host)
[23:59:35] *** Joins: beshr (~beshr@user/beshr)
