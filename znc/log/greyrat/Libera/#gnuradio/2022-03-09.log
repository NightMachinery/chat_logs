[00:00:27] <funkylab[m]> <patchvonbraun[m]> "Sure, but I'll let you take..." <- I honestly don't think that sounds bad ;)
[00:01:13] <funkylab[m]> bpadalino: If I'd have to take a guess, the whole USRP-user /-dev internalia chatter that might have been a bit overboarding for this specific channel
[00:01:27] <bpadalino> ah
[00:01:32] <funkylab[m]> LordKalma: both patchvonbraun and I have been supporting Ettus customers for... a while.
[00:01:53] <funkylab[m]> he's still got a few dB on me in that
[00:02:08] <patchvonbraun[m]> dbYear
[00:03:39] <funkylab[m]> patchvonbraun, the wiser.
[00:05:14] <LordKalma> you could have used "decade" as the joke
[00:05:15] <LordKalma> but sure
[00:06:22] <LordKalma> but yeah, I can't compete with that... gimme like 20 years or something
[00:06:29] <LordKalma> when all we do is irrelevant I'll know it 
[00:06:43] <funkylab[m]> lol
[00:07:31] <funkylab[m]> I mean, objectively speaking, knowing some interna of a previous-previous-gen device... that's not really knowledge for eternity. Knowing what dispersion does, that is.
[00:08:21] <patchvonbraun[m]> funkylab: Well, sure.  Excep that N2xx (which is USRP2++) is still current and still sold.
[00:09:38] <patchvonbraun[m]> The N2xx exists because a critcal part in the USRP2 design went EOL, and they opted to make a few more changes--like firmware reload over the network connection, etc.  But inside every N2xx, there's a USRP2 screaming to get out...
[00:10:35] <funkylab[m]> I mean, sure. Still, it's not like the N2xx (or any usrp2(p)) is under active development; customers pretty much want exactly the device as is
[00:14:22] <muaddib[m]> <patchvonbraun[m]> ""Patchvonbraun for Dummies"" <- I smell a GRCON2022 lightning talk coming on….
[00:15:16] <LordKalma> I should eventually go to some conference in europe and meet like Alex Csete 
[00:15:21] <funkylab[m]> seriously, "@patchvonbraun gives a talk on common SDR usage pitfalls" would probably draw a few people
[00:15:29] <LordKalma> well, I should be going to ICSO 2022, you can join me
[00:16:16] *** Joins: toulene (~toulene@user/toulene)
[00:16:22] <patchvonbraun[m]> "It turns out that the 'S' in SDR does *not* stand for INTERPRETIVE DANCE...."
[00:19:16] <muaddib[m]> Hahaha
[00:21:20] <patchvonbraun[m]> 20 years later, and people *STILL* arrive at Gnu Radio expecting there to be a friendly "Do That Thing I want to do" button.
[00:22:26] <patchvonbraun[m]> Like arriving at the feet of your local C++ compiler expecting something similar "why doesn't it already do the thing I would want to write in C++?"
[00:23:34] <LordKalma> yes, that's exactly how it works
[00:23:42] <LordKalma> I just think what I want and code happens
[00:23:53] <patchvonbraun[m]> Although I guess Boost:: to some extent tries to "implement all the things".
[00:23:58] <LordKalma> I don't have 3 weaks of painfully writing every single little thing for it not to work in the end
[00:24:13] <LordKalma> bah
[00:24:22] <patchvonbraun[m]> LordKalma: Just wave the outline of your masters thesis in front of the screen.  It'll take care of the rest.
[00:24:25] <LordKalma> Qt is really the only "do all" kit
[00:25:06] <patchvonbraun[m]> LordKalma: FOr a highly restricted interpretation of "ALL".
[00:25:12] <LordKalma> of course
[00:25:41] <LordKalma> but the things Qt have apart from the GUI are the msot like any other language's std library that actually serves for something
[00:25:49] <LordKalma> C++ is MOAR CONTAINERS
[00:26:49] <patchvonbraun[m]> Dev spends 3 weeks finding the perfect version of Boost::arithmetic::integers::add_a_couple rather than simple banging out the line c = a + b
[00:27:05] <LordKalma> hahaah
[00:27:13] <LordKalma> honestly, half of boost, I look at that and I'm like
[00:27:23] <LordKalma> all of them are computer science theorist toys
[00:27:26] <LordKalma> Qt is practical stuff
[00:27:44] <LordKalma> (all*`of course)
[00:28:07] <LordKalma> you have ASIO, boost::python, and some other actually useful stuff, but a lot of just random weird stuff
[00:29:10] <LordKalma> I0ve been ranting with Vinnie to get a modern website going for Boost, which it has a dire need of
[00:31:12] <wavewalkerdsp[m]> <muaddib[m]> "Yeah, a docs page as a response..." <- Is there a wiki page for this? I'm writing another tutorial and I'd like to link against it
[00:34:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:52] *** Quits: pcero (~pcero@187.135.224.43) (Quit: Konversation terminated!)
[00:53:47] <patchvonbraun[m]> So, back to the HackRF--a HackRF with nearly all the RF gorp stripped out and replaced with an ADL5380 and some selectable baseband filters in front of the AFE would likely work OK as well, with perhaps some tweaking of the CPLD to support triggered sampling.
[00:54:12] <LordKalma> isn't the CPLD pretty much at it's limit? maybe removing the Tx code would make for some room?
[00:54:40] <patchvonbraun[m]> It doesn't have a DDC, but instead programs the baseband filters in the mixer/synth chip
[00:55:01] <patchvonbraun[m]> LordKalma: Could be.
[00:59:29] <patchvonbraun[m]> I'd be OK with supporting sample rates at some kind of fixed raster like: 2.5, 5.0, 10.0 and 20Msps.
[01:00:44] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:03:32] *** Quits: Thorn (~Thorn@user/thorn) (Ping timeout: 240 seconds)
[01:05:58] *** Joins: Thorn (~Thorn@user/thorn)
[01:11:27] <bpadalino> so something like this but with a different adc - https://www.analog.com/media/en/reference-design-documentation/reference-designs/CN0374.pdf
[01:15:11] <bpadalino> AD9059 for the ADC?
[01:19:21] <patchvonbraun[m]> The HackRF uses a MAXIM ADC part--I assume it's reasonably cheap
[01:20:06] <patchvonbraun[m]> The ADL5380 is a quadrature mixer that is used in a number of Ettus designs, and I haven't found anything "out there" that's both equivalent and cheaper.   
[01:23:11] <bpadalino> i agree with tnt that someone making one of these things and supporting it at $200 would be impossible .. but something that's just out there and open wouldn't be too bad i bet .. 
[01:34:18] <muaddib[m]> So sort of like how the kraken was marketed but with external LO’s and better A/D’s
[01:34:53] <patchvonbraun[m]> Better a bunch of things
[01:35:33] <patchvonbraun[m]> The RTL2832 has no way to do sample synchronization, even if it's getting common clocks.  So, they use a software-based correlator and a switchable noise source.
[01:36:02] <patchvonbraun[m]> The Kraken is a bit of a toy that brings with it a whole lotta PITA.
[01:39:03] <LordKalma> You can always get actual oscilloscopes 
[01:39:11] <LordKalma> Only a shame the poor recording length 
[01:46:40] <bpadalino> patchvonbraun[m]: what if the synthesizer used was a LMX2572 and SYSREF/SYNC was generated externally and fed to your N systems ..
[01:47:06] <bpadalino> 2 RF outputs as well .. so possibly driving 2 chains per radio .. but would add to cost
[01:50:50] <patchvonbraun[m]> Yeah I think simpler is better.
[01:52:05] <bpadalino> what stability does the radio need when it isn't driven by an external reference ?
[01:52:08] <bpadalino> 20 ppm ?
[01:57:51] <patchvonbraun[m]> bpadalino: Not sure that's a meaningful question, since in my "vision" it always has an external reference of some kind to go along with the external LO--because you want your ADCs to be coherent with each other.
[01:58:13] <patchvonbraun[m]> But that reference doesn't need to be all that spectactular.  
[01:58:42] <bpadalino> in your vision, you'd be OK with buying something that doesn't work without an external reference ?
[01:58:49] <patchvonbraun[m]> For interferometry, it's not really the absolute phase noise that matters so much as the mutual phase noise among channels.
[01:59:25] <patchvonbraun[m]> bpadalino: Maybe.  But an on-board cheap XO with perhaps a suitcase jumper would be fine :)
[02:00:28] <patchvonbraun[m]> And absolute phase offsets that are in the equipment rather than external.
[02:01:42] <bpadalino> and any signal conditioning/filtering/gain is external as well .. this is really just mixer + digitizer
[02:03:01] <patchvonbraun[m]> Not quite, because you probably want selectable IF filterting of the IF side of the mixer, to match your sample rates (which, again, could be selected from a fairly small set).      Get 5MHz-wide filters at 21cm is more expensive than getting them at 12MHz :)
[02:03:46] <patchvonbraun[m]> You want triggered sampling
[02:04:34] <bpadalino> so trigger is different than 1pps input
[02:04:44] <patchvonbraun[m]> YOu probably want a little bit of gain ahead of the mixers as well--but something like the SPF-5189Z would probably be fine.  
[02:05:49] <patchvonbraun[m]> bpadalino: 1PPS or trigger are both ways of doing sample synchronization.  One of them implies "please start sampling at a given device time", the other is "please start sampling when the trigger is asserted".  One requires that you maintain some notion of a clock register.  The other is just some flops n stuff.
[02:07:46] <bpadalino> the different sample rates would make the design harder versus just picking a LPF and sticking with it i'd imagine .. even if the LPF were of a relatively high order for a steep rejection/anti-aliasing
[02:09:09] <patchvonbraun[m]> bpadalino: Indeed.  Although the switchable IF filters in these integrated synth+mixer chips are not, I think all that wonderful .   
[02:16:05] <patchvonbraun[m]> USRP daughtercards like WBX and friends use a fixed balanced elliptical filter made from discretes.  Basically that multiplied by "a few" and add some N-pole switches at either end.
[02:16:56] <patchvonbraun[m]> Hell, even, again, some suitcase jumpers to select the analog bandwidth.  
[02:17:59] <patchvonbraun[m]> Not very "high tech" but possibly cheaper than N-pole switches at either end of the filterbank.
[02:20:19] <patchvonbraun[m]> Our (CCERA) mandate is (among other things) overall system designs that allow smaller institutions and individuals to "play" at the same radio astronomy techniques as the big guys but more accessible--supporting undergraduate observing programs, etc, without breaking the bank.  For a benchmark, our many-years partner University had an undergraduate physics LAB budget of $25K/year for *everything* that was a lab-based or lab-augmented
[02:20:19] <patchvonbraun[m]> program in undergrad physics.  That doesn't support too many USRP purchases :)  
[02:22:04] <bpadalino> right .. understandable .. i like this idea of a design that's vetted by professionals as a 10x RTL-SDR (10x BW, 10x price) .. still 8-bit ..
[02:23:01] <bpadalino> and a way to gang them together via sysref for ultra coherent reception is good as well
[02:23:17] <patchvonbraun[m]> 8-bit is what radio astronomers generally call "plenty" :)  I absolutely admit that it's not good enough for many many telecom and commercial applications.   
[02:24:48] <bpadalino> i mean, it's plenty to get started at least .. like i said, 10x RTL-SDR ..
[02:25:00] <patchvonbraun[m]> The abilty to relatively-cheaply "stack" receivers means that you can build relatively-cheap synthesis arrays of considerable N without breaking the bank--probably also without doing much in the way of "new" science, but having accessible *observing* programs for astrophysics is really challenging at the undergrad level.
[02:26:33] <bpadalino> right .. right ..
[03:11:00] *** Quits: benreynwar (sid299523@id-299523.lymington.irccloud.com) (Read error: No route to host)
[03:11:23] *** Joins: benreynwar (sid299523@id-299523.lymington.irccloud.com)
[03:11:52] *** Quits: zesty (sid505265@id-505265.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:12:13] <muaddib[m]> Anecdotally speaking, This discussion reminds me a lot of the way the music recording tech industry  Evolved in the late 90s early 2000s. There became less need for massive recording consoles and more need for single or dual input yet high-quality recording chains. High-quality A/D, high-quality preamp/EQ/compressor, high-quality microphone.
[03:12:21] *** Joins: Guest5270 (sid505265@id-505265.ilkley.irccloud.com)
[03:13:02] *** Quits: vekay (~vekay@user/vekay) (Quit: Leaving)
[03:13:33] *** Quits: wavewalkerdsp[m] (~wavewalke@2001:470:69fc:105::1:5127) (Ping timeout: 252 seconds)
[03:13:33] *** Quits: Yamakaja[m] (~yamakajag@2001:470:69fc:105::e1b5) (Ping timeout: 252 seconds)
[03:13:33] *** Quits: brian[m] (~brian27me@2001:470:69fc:105::1:8560) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: peter[m]1 (~petergnur@2001:470:69fc:105::1:c525) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: SEhrhard[m] (~typeregnu@2001:470:69fc:105::ec5d) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: tcarls[m] (~tcarlsgnu@2001:470:69fc:105::1:88bf) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: xloem[m] (~xloemmatr@2001:470:69fc:105::460d) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: cleverca22[m] (~cleverca2@2001:470:69fc:105::9a0) (Ping timeout: 252 seconds)
[03:14:26] <muaddib[m]> A lot of the companies that made consoles pivoted to modular, desktop “lunch boxes” so you could drop in their modules.
[03:14:51] <muaddib[m]> <wavewalkerdsp[m]> "Is there a wiki page for this? I..." <- Just now seeing this, no I posted in Docs.
[03:25:53] *** Joins: Yamakaja[m] (~yamakajag@2001:470:69fc:105::e1b5)
[03:26:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:26:41] *** Joins: wavewalkerdsp[m] (~wavewalke@2001:470:69fc:105::1:5127)
[03:26:42] *** Joins: brian[m] (~brian27me@2001:470:69fc:105::1:8560)
[03:27:16] *** Joins: cleverca22[m] (~cleverca2@2001:470:69fc:105::9a0)
[03:27:40] *** Joins: peter[m]1 (~petergnur@2001:470:69fc:105::1:c525)
[03:29:03] *** Joins: SEhrhard[m] (~typeregnu@2001:470:69fc:105::ec5d)
[03:29:50] *** Joins: tcarls[m] (~tcarlsgnu@2001:470:69fc:105::1:88bf)
[03:30:21] *** Joins: xloem[m] (~xloemmatr@2001:470:69fc:105::460d)
[03:37:27] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[03:49:56] *** Quits: ssbm (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 245 seconds)
[04:18:16] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:20:10] *** Guest5270 is now known as zesty
[04:27:32] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Read error: Connection reset by peer)
[04:31:26] *** Joins: arcaile (~arcaile@185.191.205.57)
[04:34:30] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:316d:ca7e:9bbb:5f36)
[04:45:05] *** cuoops is now known as ElvisKnievel
[04:52:33] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[04:52:58] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[05:08:18] *** Quits: harish (~harish@158.140.144.42) (Ping timeout: 272 seconds)
[05:18:02] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:19:43] *** Quits: Mortajas-MX (~MX-MTJS@2806:108e:f:bac6:4eac:990:2183:c68) (Remote host closed the connection)
[05:23:10] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 250 seconds)
[05:29:10] *** ElvisKnievel is now known as cuoops
[05:45:29] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:09:12] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:316d:ca7e:9bbb:5f36) (Read error: Connection reset by peer)
[06:23:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:35:25] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Quit: Leaving)
[06:42:22] *** Joins: harish (~harish@27.125.135.173)
[06:54:33] *** Joins: monkwitdafunk (uid238811@fsf/member/monkwitdafunk)
[06:56:05] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[07:03:01] *** Joins: Alexer (~alexer@alexer.net)
[07:40:47] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[07:41:53] *** Quits: analognoise (~analognoi@185.229.59.233) (Read error: Connection reset by peer)
[07:59:34] *** Quits: thunndar (~mike@172.58.56.226) (Quit: WeeChat 3.4)
[08:17:50] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:37:30] *** Quits: indigaz (~Indigaz@user/indigaz) (Ping timeout: 256 seconds)
[09:01:58] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[09:03:09] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[09:39:02] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[09:44:11] *** Quits: monkwitdafunk (uid238811@fsf/member/monkwitdafunk) (Quit: Connection closed for inactivity)
[10:40:39] *** Quits: arch3r (~ben@185.66.194.78) (Read error: Connection reset by peer)
[10:42:09] *** Joins: arch3r (~ben@185.66.194.79)
[10:52:07] *** Joins: arch3r- (~ben@185.66.194.78)
[10:52:37] *** Quits: arch3r (~ben@185.66.194.79) (Ping timeout: 240 seconds)
[10:53:40] *** arch3r- is now known as arch3r
[11:00:03] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[11:02:35] *** Joins: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz)
[11:16:58] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[11:47:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 245 seconds)
[11:49:36] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[12:10:47] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:3585:b741:9cbb:e8dc)
[12:30:15] *** Quits: broadcrap[m] (~broadcrap@2001:470:69fc:105::e756) (Quit: You have been kicked for being idle)
[12:36:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:44:10] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[12:46:58] *** Parts: drmpeg (~drmpeg@2601:647:4700:284:9297:9b23:d5d9:689a) ()
[12:52:48] *** Joins: drmpeg (~drmpeg@2601:647:4700:284:10ad:43a7:75b4:e32a)
[13:17:47] *** Quits: yesno (~yesno@109.98.151.62) (Remote host closed the connection)
[13:22:47] *** Parts: drmpeg (~drmpeg@2601:647:4700:284:10ad:43a7:75b4:e32a) ()
[13:26:58] *** Joins: drmpeg (~drmpeg@2601:647:4700:284:d777:ddd8:46d3:47f8)
[13:36:38] *** Joins: MajorBiscuit (~MajorBisc@c-001-015-055.client.tudelft.eduvpn.nl)
[14:05:09] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:3585:b741:9cbb:e8dc) (Quit: uros)
[14:06:42] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:560:ccc:5fb5:e52f)
[14:23:37] <l4rrybr3nt[m]> > <@muaddib:gnuradio.org> hey, you can use a python snippet to print the vector. beware though that you'll blow up your terminal if you try and print a gazillion values.
[14:23:37] <l4rrybr3nt[m]> > putting ```print(self.vec_probe.level()[0])``` in a python snippet block will print the first element
[14:23:37] <l4rrybr3nt[m]> Can I hook this into a main loop somehow? The snippet executes and prints out once. I could use this executed every n cycles or maybe triggered by a signal source or something? To give the signal level continous
[14:26:35] <Myon> it will run periodically if it's in the work() function
[14:27:12] <Myon> ah only if the python snippet is processing the stream
[14:29:56] <l4rrybr3nt[m]> ah ok, I try just to print out values from a probe periodically. muaddib pointed me to the snippet idea which works - but only once :D 
[14:31:03] <Myon> you need a Python block with input (and possibly output)
[14:32:11] <Myon> there's probably some Qt instrumentation widget to show the signal level, though (I wanted to check for that myself)
[14:44:52] <l4rrybr3nt[m]> @myon maybe I could "missuse" a python block, feed some trigger into it and process my probe from there? I don't wan't any Qt involved since this is running headless later on
[14:46:25] <Myon> the easiest would be to print every Nth sample
[14:46:40] <Myon> or the first sample each time the work() method is invoked
[14:49:50] <l4rrybr3nt[m]> how can I hook into the work() method?
[14:50:00] <Myon> you write it
[14:50:23] <Myon> create a Python block, there's already a work function in the template that you can edit
[14:52:04] <l4rrybr3nt[m]> ok. sorry, now I got it :) so I remove the probe I am now using, put my block there and let it "probe" the stream for me
[14:52:26] <Myon> yes
[15:38:41] *** Quits: arch3r (~ben@185.66.194.78) (Quit: bye)
[15:38:54] *** Joins: arch3r (~ben@185.66.194.78)
[15:40:54] *** Joins: LOWWer (~LOWWer@128-245-53.fonira.net)
[16:06:58] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 272 seconds)
[16:18:13] *** Quits: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1f20.res6.spectrum.com) (Remote host closed the connection)
[16:18:27] *** Joins: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1cc3.res6.spectrum.com)
[16:21:21] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:35:35] *** Joins: baracurda (~baracurda@user/parserblabla)
[16:36:37] *** Quits: baracurda (~baracurda@user/parserblabla) (Remote host closed the connection)
[16:37:13] *** Joins: baracurda (~baracurda@user/parserblabla)
[16:48:36] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[17:02:51] *** Joins: pcero (~pcero@187.135.224.43)
[17:09:00] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[17:25:11] *** Quits: pcero (~pcero@187.135.224.43) (Quit: Konversation terminated!)
[17:26:00] *** Joins: Alexer (~alexer@alexer.net)
[17:26:19] *** Joins: pcero (~pcero@187.135.224.43)
[17:26:50] *** Quits: baracurda (~baracurda@user/parserblabla) (Remote host closed the connection)
[17:27:22] *** Joins: baracurda (~baracurda@user/parserblabla)
[17:39:20] *** Quits: pcero (~pcero@187.135.224.43) (Read error: Connection reset by peer)
[17:40:25] *** Joins: pcero (~pcero@187.135.224.43)
[17:43:24] <n1ai[m]> Q: With polyphase clock sync, what do the four different outputs represent?  https://wiki.gnuradio.org/index.php/Polyphase_Clock_Sync doesn't describe the outputs at all as far as I can tell.
[17:43:54] *** Quits: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1cc3.res6.spectrum.com) (Quit: Leaving)
[18:06:41] <BarryDuggan[m]> n1ai: if you look at the Properties -> Documentation tab there is a rather extensive explanation
[18:07:35] <BarryDuggan[m]> that block is deprecated in 3.9
[18:09:31] <superkuh> Maintaining flowgraphs in GR is like nailing jello to a tree.
[18:09:36] *** Joins: epony (epony@user/epony)
[18:09:57] <n1ai[m]> I'm not sure the block's documentation or the wiki documentation addressed my question, what do the four outputs represent?
[18:10:29] <n1ai[m]> It does describe what the block is doing but I could not find where it said what the four outputs were representing.
[18:27:42] <BarryDuggan[m]> (I just realized I had copied that text in the Documentation tab into the block doc.)
[18:27:42] <BarryDuggan[m]> The outputs are the stream data and then the error, rate, and phase variables as described in the text.
[18:41:42] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1d38:5b60:5f85:2b44) (Read error: Connection reset by peer)
[18:52:32] <BarryDuggan[m]> <superkuh> "Maintaining flowgraphs in GR..." <- So is maintaining the documentation! For most users, picking one version, such as 3.9, and sticking with it minimizes the impact of  changes. Chasing the "latest and greatest" is more dynamic 😉
[18:52:48] <muaddib[m]> <l4rrybr3nt[m]> "> <@muaddib:gnuradio.org> hey..." <- I figure I owe you a real answer. This was mostly just a way to show you how to access values. Not a final solution. Using a custom python block like myon suggested it certainly another way to do it.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/1080d225bbb7eb2b55477275babac8a9eeb6d10e)
[18:54:26] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:a051:b6fa:133d:dd69)
[19:00:26] <muaddib[m]> * > <@l4rrybr3nt:gnuradio.org> Can I hook this into a main loop somehow? The snippet executes and prints out once. I could use this executed every n cycles or maybe triggered by a signal source or something? To give the signal level continous... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/e1d9fc209e5a27e9dbc3b3e44a31125a5ee3ca65)
[19:04:49] *** Quits: Thorn (~Thorn@user/thorn) (Ping timeout: 256 seconds)
[19:08:06] *** Joins: Thorn (~Thorn@user/thorn)
[19:18:40] *** Joins: Elzington (~Elzington@static-68-235-44-43.cust.tzulo.com)
[19:22:02] <n1ai[m]> > <@kv4fv:gnuradio.org> (I just realized I had copied that text in the Documentation tab into the block doc.)
[19:22:03] <n1ai[m]> > The outputs are the stream data and then the error, rate, and phase variables as described in the text.
[19:22:03] <n1ai[m]> TYVM, Barry!  I am trying to understand a flowgraph from a github repo that has not been touched since 2020.  I am putting my usual number of comments in it as I find out what each block does!
[19:22:12] * n1ai[m] uploaded an image: (70KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/eAJeGzThjfUhhozNrugsTDVS/image.png >
[19:22:52] <n1ai[m]> Virtual sinks go to time sink so I can visualize what is going on.
[19:30:06] *** Quits: r4d10n[m] (~r4d10nmat@2001:470:69fc:105::1:6255) (Quit: You have been kicked for being idle)
[19:47:14] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:48:07] *** Quits: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 256 seconds)
[19:52:10] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:52:27] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[19:57:45] *** Quits: spithash (~spithash@user/spithash) (Read error: Connection reset by peer)
[19:57:45] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Remote host closed the connection)
[19:58:10] *** Joins: spithash (~spithash@user/spithash)
[19:58:17] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[20:16:30] <tristero> superkuh: I'm only a GRC tourist, but is there a textual language that can describe flowgraphs, like Unix "dot"?
[20:17:15] <Yamakaja[m]> tristero: What's your goal here? Do you want to build flowgraphs from code?
[20:17:22] <Yamakaja[m]> Or do you just want to assemble visuals?
[20:18:02] <tristero> just pointing out that there could be an editable, maintainable source language that compiles easily into a flowgraph
[20:18:21] <tristero> (in response to their comment about maintainability)
[20:19:08] <tristero> something less than full Python, obvs
[20:19:15] <Yamakaja[m]> Ahh i see. Another "meta-format" ontop of the existing "meta-format"? 🤔
[20:23:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 240 seconds)
[20:31:20] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[20:38:39] <patchvonbraun[m]> tristero: GRC-origin flow-graphs are currently expressed in YAML.
[20:39:03] <patchvonbraun[m]> But GRC simply generates code in Python that uses all the underlying Gnu Radio library functionality, etc.
[20:40:38] <patchvonbraun[m]> But having a "universal meta language for Gnu Radio" that provides both forwards and backwards compatibility is probably not really possible.  Because that would require that any such interpreter of said description understand the *deep semantics*, and provide seamless translation into whatever is currently under several layers of "hood".   
[20:40:49] <wavewalkerdsp[m]> <muaddib[m]> "Just now seeing this, no I..." <- Just a heads up that $ sudo apt-get install clang-format is needed when creating c++ OOT's on ubuntu 21.04 & GR v3.10.1.1
[20:41:10] <patchvonbraun[m]> You don't NEED GRC to build a Gnu Radio flow-graph--it's just really convenient to do so.
[20:47:54] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[20:49:57] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:51:50] *** Quits: pcero (~pcero@187.135.224.43) (Ping timeout: 260 seconds)
[20:52:24] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:a051:b6fa:133d:dd69) (Read error: Connection reset by peer)
[21:14:13] *** Quits: beenao (~beenao@user/beenao) (Quit: quit)
[21:16:16] <n1ai[m]> Am working with a very cool updated M17 flowgraph: https://github.com/M17-Project/gr-m17/blob/master/examples/m17_channel.grc
[21:17:14] *** Joins: beenao (~beenao@user/beenao)
[21:17:30] <n1ai[m]> Output:
[21:17:34] * n1ai[m] uploaded an image: (100KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/xHhndtmhwKxSWRPgqiIjMvTs/image.png >
[21:18:23] <n1ai[m]> Q: What is a good way to turn the +3, +1, -1, -3 amplitudes in the top plot into binary numbers that can be processed further?
[21:20:41] *** Quits: MrCircuitMatt (~max@toxik.info) (Quit: ZNC 1.6.1 - http://znc.in)
[21:25:53] *** Joins: MrCircuitMatt (~max@toxik.info)
[21:30:00] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[21:30:38] <flash[m]> is there an GNU Radio block or library function (or maybe VOLK) for efficiently computing a moving average over a series of values?
[21:30:57] <Yamakaja[m]> Do you need a "real" moving average, or would a one-pole IIR do?
[21:30:58] *** Joins: ns12 (~ns12@user/ns12)
[21:31:11] <Yamakaja[m]> s/pole/tap/
[21:31:50] <Yamakaja[m]> For the "real" one there is https://wiki.gnuradio.org/index.php/Moving_Average
[21:34:50] <flash[m]> I think I need a real one. I'm not the DSP guy, I'm the programmer guy. The algorithm calls for the average of [N-8,N+8] samples for arbitrary N
[21:35:32] <Yamakaja[m]> What kind of algorithm is that if i may ask? But yes, that block should serve you well then
[21:35:42] <Yamakaja[m]> `Output[i] = scale * sum(input[i-length: i])`
[21:35:44] <flash[m]> in a different application, I have this cool CUDA implementation based on a prefix-scan. Totally unintuitive, but very efficient
[21:36:41] <flash[m]> I have a GPS spoofing detection block, based on jmfriedt work, but it is false alarming in the presence of jamming signals
[21:37:17] <flash[m]> the moving average is to differentiate between different satellite peaks and CW/LFM peaks
[21:37:23] <flash[m]> (and now I'm over my head)
[21:37:26] <Yamakaja[m]> flash[m]: You mean like this? https://github.com/gnuradio/gnuradio/blob/main/gr-blocks/lib/moving_average_impl.cc#L184-L188
[21:38:17] <flash[m]> https://on-demand.gputechconf.com/gtc/2016/presentation/s6201-maleki-sepideh-prefix-scan-algorithm.pdf
[21:39:40] <flash[m]> in that code, I get a blob of IQ data, copy it to GPU, and FFT/whatever all in GPU. I can dump out different moving averages (basically smoothing the frequency response) very efficiently
[21:42:48] <bpadalino> window in the time domain will be convolution in the frequency domain .. if you're looking for frequency smoothing between bins
[21:44:13] <flash[m]> wouldn't you need to use different windowing before FFT to get different smoothing fidelity?
[21:49:57] <bpadalino> i guess, i don't know what you're trying to accomplish with your moving average other than just filtering the frequency output i guess
[21:52:49] <flash[m]> (see above about me not being the DSP guy) In that case there are multiple algorithms that are processing over the frequency-domain data. Some want less smoothed data; some want more. But you raise a good point about the windowing; every other place I've done FFT, a window was applied first. I'll have to check on that
[21:54:01] <Yamakaja[m]> flash: Also keep in mind that a moving average isn't a terribly great filter either if you look at it in the spectral domain
[21:54:05] <Yamakaja[m]> s/spectral/frequency/
[22:04:37] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:04:38] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[22:06:56] *** Quits: MajorBiscuit (~MajorBisc@c-001-015-055.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[22:07:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:35:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:35:37] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[22:49:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:52:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:58:06] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[23:28:59] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:37:08] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[23:37:47] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:47:20] *** Joins: hololeap (~hololeap@user/hololeap)
[23:48:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:50:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
