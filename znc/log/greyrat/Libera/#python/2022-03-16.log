[00:00:16] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:00:24] <MrMobius> can i repeat the body of a for loop without incrementing the index?
[00:00:50] <Croves> Thanks SnoopJ - I'm trying to impress some people at work lol
[00:01:08] <Repiphany> MrMobius: Put the body of the for loop in a function and call it multiple times
[00:01:37] <MrMobius> Repiphany, right but lets say im setting a large number of local variables so i dont want to pass and return them all
[00:01:55] <Repiphany> nonlocal
[00:01:57] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:02:12] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[00:02:12] <MrMobius> doesnt seem to warrant globals
[00:02:23] <SnoopJ> MrMobius, what index?
[00:02:31] <Repiphany> nonlocal isn't global for inner functions
[00:02:33] <MrMobius> i know i can use a whie loop and manage the index myself but wanted to double check there isnt a better way
[00:02:38] <nedbat> MrMobius: i'm also curious what you are iterating over: perhaps you want a different loop?
[00:03:06] <nedbat> MrMobius: or maybe you want a while loop in inside the for loop? why do you want to repeat the body without incrementing?
[00:03:08] <MrMobius> Repiphany, ah, so function in function then?
[00:03:46] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be) (Read error: Connection reset by peer)
[00:04:49] <MrMobius> nedbat, parsing characters of course code. if just finished processing a symbol, handle starting to parse a new symbol. if already parsing a symbol and reach beginning of next symbol, finish parsing symbol and start parsing new symbol
[00:05:08] <nedbat> MrMobius: can you pastebin the code you have?
[00:05:39] *** Joins: captainchris (~captainch@i19-les01-t2-31-37-211-84.sfr.lns.abo.bbox.fr)
[00:06:24] <captainchris> Hi everybody, I have trouble to use matplotlib with tkinter. I'm under alpine linux, but python doesn't have tkinter module installed.
[00:06:53] <captainchris> I saw on pypi the module tk but it is not tkinter. and matplotlib need tkinter
[00:06:58] <grym> captainchris: https://pkgs.alpinelinux.org/package/v3.5/main/x86_64/python3-tkinter
[00:07:15] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[00:07:30] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 252 seconds)
[00:07:34] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[00:07:50] <grym> you need to install python3-tkinter with alpine's package manager; you can't get it from pip
[00:08:12] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be)
[00:08:18] *** Joins: Enitin (~Enitin@82.180.145.226)
[00:08:19] *** Quits: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu) (Remote host closed the connection)
[00:08:20] <captainchris> Yes I installed but when i made import tkinter in python, No module named tkinter
[00:08:30] *** Joins: Iry-Hor (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net)
[00:09:20] <grym> did you also `apk add tk` ?
[00:09:35] <captainchris> nope
[00:09:45] <grym> try that too; it should've gotten dragged in though
[00:09:49] <captainchris> ok
[00:09:59] <Iry-Hor> query about Pandas/SQLite3.  I have a file of data which I've read via pandas, and I wrote it to a database file with table.to_sql("table", dbconn) ... however, later with a new dbconn how do I get that "table" variable back again to read/write ?  is there a .from_sql() or such??
[00:10:37] <Iry-Hor> so that I can update with table.to_sql() with more data?
[00:11:04] <captainchris> grym I have tkinter but not site-package
[00:11:10] <captainchris> directory
[00:11:47] *** Quits: Croves (~Croves@192.34.198.20) (Quit: Client closed)
[00:12:40] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 250 seconds)
[00:12:51] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:13:55] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:7d91:e2c0:1e69:5eb6) (Quit: Client closed)
[00:14:22] *** Joins: wac (~wac@user/wac)
[00:14:35] <grym> captainchris: https://bpa.st/YE6A
[00:14:40] *** Joins: Enitin (~Enitin@82.180.145.228)
[00:14:46] <grym> captainchris: apk update && apk add python3-tkinter tk worked for me
[00:15:54] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:16:08] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:16:08] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:16:10] *** Joins: sobkas (~sobkas@95.175.17.217)
[00:16:23] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[00:16:23] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[00:16:28] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[00:16:37] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[00:17:31] <captainchris> with python3.10 ??
[00:17:36] *** Joins: zeudap_ (~zeudap@45.91.23.35)
[00:17:49] <grym> yeah, i just grabbed a random alpine python tag from dockerhub
[00:17:51] *** Joins: Nact (~l@2a02:2788:11c8:31d:aacb:a105:f6fd:377a)
[00:18:01] <LuxuryMode> I have a scheduled Celery task. If I set the schedule to just `crontab()`, I can see that it runs every minute as expected. But if I run in with something like `crontab(minute=48, hour=16)` to run at 4:48pm local time, it doesn't seem to run. I have CELERY_TIMEZONE set to "America/New_York". Any ideas?
[00:18:25] *** Quits: Iry-Hor (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net) (Quit: leaving)
[00:18:57] *** Joins: kts (~kts@103.73.237.12)
[00:19:16] * hodapp stabs Pytorch in the face
[00:19:42] *** Joins: rickybob2 (~rickybob@35.143.255.39)
[00:20:02] *** Quits: zeudap (~zeudap@45.91.23.141) (Ping timeout: 250 seconds)
[00:20:29] <grym> with torch.no_grad(): stab()
[00:20:48] <grym> whoops, stab().cuda()
[00:20:52] <hodapp> this is a lovely concurrency issue. If I even *initialize* a certain class on two worker processes (even if I don't keep the object around), then the worker processes later stall in Dask for no apparent reason
[00:20:58] <SnoopJ> stab(device="cuda")
[00:21:04] <SnoopJ> (why go slow if you don't have to?)
[00:21:17] <hodapp> and only one worker process actually runs anything, while the other just... sits there?
[00:22:09] <SnoopJ> hodapp, does creating an instance lock resources of any sort?
[00:22:28] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:22:58] <captainchris> grym: for me tkinter is installed only in python3.9 version instead python3.10
[00:23:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[00:23:17] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[00:23:25] <hodapp> SnoopJ: it might do this on a GPU, but... the initialization proceeds just fine, and then after this I don't even attempt to use that instance (I am purposely using a dummy class to bypass it)
[00:24:15] <hodapp> if the only change I make is that I don't initialize the object in the first place (the one that is being thrown away), everything runs to plan.
[00:24:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:24:25] <SnoopJ> hodapp, if you're on Linux, perhaps strace or ltrace can tell you what the blocked worker is waiting on
[00:24:40] <hodapp> noooooooooooooooooooOOOOOOOOOOOOOOOOOOOO
[00:24:43] *** Joins: borisrunak (~borisruna@188.73.245.31)
[00:24:54] <hodapp> I'm trying to avoid doing the backstroke in that tar-pit o_O
[00:25:06] <SnoopJ> guessing is more fun, I'll admit
[00:25:12] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[00:25:45] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:25:45] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:25:59] *** Joins: filename (~kilitary@188.242.105.134)
[00:26:58] *** Quits: Xano (~Xano@2a00:23c4:4204:700:16b6:faf8:d4ec:df0d) (Ping timeout: 250 seconds)
[00:27:11] <hodapp> strace is going to involve a lot more guesswork; it is somewhere deep in the innards of things that anything is blocked on and it's not going to be any of *my* code
[00:27:30] <hodapp> and I've not had much luck in the past deciphering things once they get into the innards of Dask's scheduler
[00:27:33] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:27:39] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[00:27:57] *** Joins: crashrep (~crashrep@user/crashrep)
[00:28:10] <dob1> it's correct or i can be written in a better way:  return a if a else b ?
[00:28:14] <SnoopJ> I can't imagine it would involve *any* guesswork if the worker is properly blocked, it will be...waiting.
[00:28:18] <dob1> *it
[00:28:30] <SnoopJ> unless it's stuck in an event loop of some sort
[00:28:58] <hodapp> SnoopJ: it very likely will be, and it will likely be one in Dask's innards
[00:29:05] * SnoopJ shrugs
[00:29:11] <SnoopJ> strike that option I guess
[00:29:48] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[00:30:11] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[00:30:34] *** Joins: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com)
[00:31:17] *** Joins: ano (~ano@user/ano)
[00:31:49] <hodapp> this is why I opted for the stabby option
[00:32:06] *** Joins: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[00:32:08] *** Spitfire_ is now known as Spitfire
[00:32:15] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 252 seconds)
[00:32:37] <grym> captainchris: did you install 3.10 some way that wasn't apk
[00:33:53] *** Quits: magla (~gelignite@d536591f.access.ecotel.net) (Quit: Stay safe!)
[00:34:18] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:34:25] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[00:35:08] *** Joins: rje (~textual@65.141.156.170)
[00:35:28] <captainchris> python 3.10 ?? yes of coure
[00:35:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:35:33] <captainchris> course
[00:35:33] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[00:35:42] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[00:36:30] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[00:36:30] *** Joins: summersault (~summersau@179.221.251.36)
[00:36:58] *** Joins: kevr (~kevr@user/kevr)
[00:37:41] *** Quits: greedom (~greedom@p200300de6716ce0004bc69690c6fe986.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:38:21] *** Joins: Everything (~Everythin@37.115.210.35)
[00:39:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[00:39:16] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[00:39:35] *** Joins: Pickchea (~private@user/pickchea)
[00:40:29] <MrMobius> nedbat, https://pastebin.com/wh5GG1gU
[00:41:14] <MrMobius> for example. it works but im just wondering if there's a more elegant way to do it with a for loop
[00:42:19] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Ping timeout: 250 seconds)
[00:42:34] *** Joins: Giovanni (~Giovanni@176.54.32.122)
[00:43:37] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[00:44:42] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[00:44:45] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[00:46:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[00:46:12] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[00:46:40] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[00:46:57] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[00:47:06] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (Quit: WeeChat 3.0)
[00:48:35] <montpol> parsers are just additional arguments one can add to the command line right?
[00:49:32] *** hirgen is now known as hirogen
[00:49:39] *** Quits: hirogen (~hirgen@cpc120260-heme13-2-0-cust3.9-1.cable.virginm.net) (Changing host)
[00:49:39] *** Joins: hirogen (~hirgen@user/hirogen)
[00:49:39] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:49:50] <grym> captainchris: oh. well, that would explain why installing python3-tkinter didn't help ...
[00:50:02] <grym> captainchris: you'll have to reinstall 3.10 properly however you did it
[00:50:07] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 250 seconds)
[00:50:36] <SnoopJ> montpol, a "parser" in general is a thing that eats a string (or maybe bytes) and spits out an abstract representation of the document. Python's parser eats source code and spits out a tree that describes the input program, for instance.
[00:50:38] *** Joins: tijuco (~tijuco@user/tijuco)
[00:50:50] <lesault>  /cu
[00:50:59] *** Joins: noobaroo (~solas@user/noobaroo)
[00:51:09] *** Quits: sr71919 (~sr71919@183.82.29.150) (Remote host closed the connection)
[00:51:10] *** Joins: hams (~hams@73.232.205.0)
[00:51:10] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[00:51:10] *** Joins: hams (~hams@user/hams)
[00:51:23] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Read error: Connection reset by peer)
[00:51:30] *** Joins: sr71919 (~sr71919@183.82.29.150)
[00:51:37] <montpol> source code is what? just a string as well on the command line?
[00:51:37] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[00:51:47] *** Joins: adeliktas (~adeliktas@i59F5FD1E.versanet.de)
[00:51:49] <SnoopJ> montpol, can you tell us what you're trying to do/understand?
[00:51:53] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:755a)
[00:52:08] <montpol> argparser
[00:52:22] <nedbat> MrMobius: this looks to me like you could set an "unhandled so far" flag, and move all the common parts to an "if not handled yet" clause at the end of the loops
[00:52:31] <montpol> argparse* :D
[00:52:50] <montpol> specifically https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.set_defaults
[00:53:01] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[00:53:02] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[00:53:14] <montpol> but before i try to udnerstand that ^ i wanted to make sure i have a good idea of what argparse does
[00:53:30] <SnoopJ> montpol, an ArgumentParser eats whatever you feed to the `args` argument of parse_args(). If you don't pass anything, it reads `sys.argv`
[00:53:41] <SnoopJ> (and it spits out a Namespace)
[00:54:08] *** Quits: alexyov (~alexyov@79.124.0.2) (Quit: Ping timeout (120 seconds))
[00:54:18] <montpol> ah ok so i load up args then and those arguments will be arguments that i can add to the command line?
[00:54:20] *** Joins: alexyov (~alexyov@79.124.0.2)
[00:54:22] *** Quits: tasty (~mew@user/tasty) (Quit: Ping timeout (120 seconds))
[00:54:33] *** Joins: tasty (~mew@user/tasty)
[00:54:34] *** Quits: FLHerne (flh@flherne.uk) (Excess Flood)
[00:54:44] <SnoopJ> montpol, have you read the argparse tutorial? https://docs.python.org/3/howto/argparse.html#id1
[00:54:44] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Quit: Leaving)
[00:54:49] *** Joins: FLHerne (flh@flherne.uk)
[00:54:55] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[00:55:05] *** Joins: mags_ (~mags@096-042-013-246.res.spectrum.com)
[00:55:21] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[00:55:21] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:55:36] <montpol> no i havent... i did some other tutorials though. I will go through the tutorial now. Didn't know python had a tutorial on this thanks"
[00:55:37] <montpol> !
[00:55:41] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:55:47] *** Quits: sr71919 (~sr71919@183.82.29.150) (Ping timeout: 256 seconds)
[00:56:05] *** Quits: mags_ (~mags@096-042-013-246.res.spectrum.com) (Client Quit)
[00:56:08] *** Quits: qlixed (~qlixed@152.170.36.244) (Quit: That's all folks!!)
[00:58:41] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:58:53] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[00:59:28] <grym> captainchris: (or install 3.10 through alpine)
[01:00:19] *** Quits: borisrunak (~borisruna@188.73.245.31) (Ping timeout: 256 seconds)
[01:00:33] *** Joins: qlixed (~qlixed@152.170.36.244)
[01:01:57] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[01:02:03] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[01:02:28] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[01:02:50] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[01:03:05] *** aoei is now known as Rust
[01:03:22] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:03:24] *** Quits: captainchris (~captainch@i19-les01-t2-31-37-211-84.sfr.lns.abo.bbox.fr) (Quit: Lost terminal)
[01:03:41] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 245 seconds)
[01:03:48] *** Quits: jamea (~jamea@200.68.140.28) (Ping timeout: 250 seconds)
[01:04:37] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 256 seconds)
[01:04:40] *** Yugi is now known as Hunterkll
[01:04:53] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[01:05:55] *** Joins: thedude (~thedude@096-042-013-246.res.spectrum.com)
[01:05:57] *** Quits: thedude (~thedude@096-042-013-246.res.spectrum.com) (Client Quit)
[01:06:53] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[01:06:53] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[01:06:54] *** Joins: jamea (~jamea@200.68.140.28)
[01:07:34] <MrMobius> nedbat, right but then you have the not handled part repeated at the top of the loop. i suppose you could rearrange it but the original question was if i can repeat a for loop body twice without incrementing the variable. this is just an example of why i would want to
[01:07:47] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[01:08:04] *** Joins: sn_fk_n (~snufkin@94.15.173.91)
[01:08:18] *** Joins: thedude (~thedude@096-042-013-246.res.spectrum.com)
[01:10:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:11:05] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 256 seconds)
[01:11:12] <MrMobius> i suspect not but i just try to make sure im using whatever python has built in instead of the hard way and not overlooking anything
[01:11:30] *** Quits: thedude (~thedude@096-042-013-246.res.spectrum.com) (Client Quit)
[01:12:09] *** Quits: tofran5 (~tofran@bl15-47-228.dsl.telepac.pt) (Read error: Connection reset by peer)
[01:12:13] *** Quits: MasterK (~MQ@86.123.41.138) (Remote host closed the connection)
[01:12:29] *** Joins: guest283 (~guest283@096-042-013-246.res.spectrum.com)
[01:12:38] <phy1729> for i in ...: while repeat condition: ...
[01:12:39] *** Joins: summersault (~summersau@179.221.251.36)
[01:13:07] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[01:13:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:13:35] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[01:14:02] *** Joins: funhouse (~funhouse@user/funhouse)
[01:14:06] *** Quits: jamea (~jamea@200.68.140.28) (Ping timeout: 245 seconds)
[01:14:14] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4d5:1441:6595:2578) (Quit: Konversation terminated!)
[01:14:14] *** Quits: guest283 (~guest283@096-042-013-246.res.spectrum.com) (Client Quit)
[01:14:43] *** Joins: guest283 (~guest283@096-042-013-246.res.spectrum.com)
[01:15:22] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[01:15:43] *** Quits: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu) (Remote host closed the connection)
[01:16:15] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:16:44] *** Joins: tofran55 (~tofran@bl15-47-228.dsl.telepac.pt)
[01:19:20] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:19:39] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[01:19:49] <SnoopJ> I want an object that behaves like a file, but lets me mutate the data before it's written to disk. Is this a good way to do that/any suggestions? https://bpa.st/22EA
[01:20:06] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1) (Ping timeout: 252 seconds)
[01:20:39] *** Joins: The_Loko (~The_Loko@79.116.29.13)
[01:21:40] <SnoopJ> (the context management parts aren't strictly necessary, I may not use them in situ)
[01:21:41] *** Quits: guest283 (~guest283@096-042-013-246.res.spectrum.com) (Quit: leaving)
[01:21:55] *** Joins: guest2583 (~guest2583@096-042-013-246.res.spectrum.com)
[01:22:11] *** Joins: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz)
[01:22:59] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:cdfb:9efd:c69e:cc61)
[01:23:55] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:24:18] <deniska> SnoopJ: if you don't care much about some sort of atomicity, I'd just wrap `open()` to do open(), write() and to return a file object
[01:24:31] <deniska> file is its own context manager, so you may put it in `with`
[01:25:06] <SnoopJ> yea, I'd forgotten that BytesIO could be used that way
[01:25:32] <SnoopJ> deniska, when you say "wrap open()", you're talking about mutating the builtin?
[01:25:54] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-a0f7-4a6c-9396-dfff.res6.spectrum.com) (Ping timeout: 250 seconds)
[01:25:57] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[01:26:03] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[01:26:12] *** Seirdy0 is now known as Seirdy
[01:26:14] <deniska> SnoopJ: oh, no, I'm talking `def myopen(`
[01:26:22] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[01:26:22] *** Quits: quhar (~quhar@staticline-31-182-241-146.toya.net.pl) (Quit: WeeChat 3.4)
[01:26:31] <deniska> with more or less 3 lines inside
[01:27:06] <SnoopJ> deniska, the real application won't be writing a header, it will be encrypting the buffer before writing to disk, so it does have to wait until all the data is in the buffer
[01:27:58] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[01:28:37] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[01:28:58] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:7942:f2a1:5c20:cf68) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[01:29:13] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[01:29:56] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:30:06] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[01:30:26] <phy1729> SnoopJ: will have weird effects if the file is moved while "open"
[01:30:49] <SnoopJ> phy1729, what file?
[01:30:55] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:30:55] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:31:05] *** Joins: rud0lf (rangifer@user/rud0lf)
[01:31:06] *** Quits: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com) (Ping timeout: 250 seconds)
[01:31:48] <phy1729> if outfile exists and is moved in the context, the write will go to the old file name
[01:32:04] <SnoopJ> it will not exist and this won't be used concurrently anyway
[01:32:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:32:58] *** Joins: akinode (~akinode@2a02:908:1394:cce0:5dbd:be58:4d21:e38e)
[01:33:26] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[01:33:30] <akinode> hello, is anyone here who is experienced with pygame and knows how to solve this problem? https://stackoverflow.com/questions/71488643/pygame-mixer-pygame-error-unable-to-open-file-file-location-mp3
[01:34:10] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[01:35:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:36:08] *** Quits: rud0lf (rangifer@user/rud0lf) (Quit: bye!)
[01:36:17] *** Joins: rud0lf (rangifer@user/rud0lf)
[01:36:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[01:37:02] *** Joins: Xano (~Xano@2a00:23c4:4204:700:607b:ce7:16ac:43b1)
[01:37:10] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 250 seconds)
[01:37:44] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[01:37:44] *** Joins: Enitin (~Enitin@82.180.145.223)
[01:38:10] *** Quits: guest2583 (~guest2583@096-042-013-246.res.spectrum.com) (Quit: leaving)
[01:38:25] *** Joins: guest2583 (~guest2583@096-042-013-246.res.spectrum.com)
[01:38:36] *** Joins: Throgkt (~Throgkt@user/throgkt)
[01:38:43] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-a0f7-4a6c-9396-dfff.res6.spectrum.com)
[01:39:00] *** Quits: guntbert (~yesitsme@user/guntbert) (Quit: leaving)
[01:39:01] *** Joins: ocramoi (~ocramoi@2804:431:cffa:a36e:f376:b174:bfd5:acb)
[01:39:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:39:21] *** Quits: ocramoi (~ocramoi@2804:431:cffa:a36e:f376:b174:bfd5:acb) (Client Quit)
[01:39:42] *** Quits: akinode (~akinode@2a02:908:1394:cce0:5dbd:be58:4d21:e38e) (Quit: Client closed)
[01:39:56] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[01:40:25] *** Joins: oriba (~oriba@dynamic-077-013-166-175.77.13.pool.telefonica.de)
[01:40:33] *** Quits: guest2583 (~guest2583@096-042-013-246.res.spectrum.com) (Client Quit)
[01:40:52] *** Joins: guest2583 (~guest2583@096-042-013-246.res.spectrum.com)
[01:41:14] *** Quits: guest2583 (~guest2583@096-042-013-246.res.spectrum.com) (Client Quit)
[01:41:33] *** Joins: guntbert (~yesitsme@user/guntbert)
[01:41:38] *** Quits: aslicedbanjo (~aslicedba@host86-134-28-120.range86-134.btcentralplus.com) (Quit: Leaving.)
[01:42:32] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[01:42:47] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-9533-c9bc-6bff-610c.res6.spectrum.com) (Quit: Client closed)
[01:42:48] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[01:43:06] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[01:43:11] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[01:43:53] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:44:18] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 252 seconds)
[01:44:51] *** Joins: qlixed (~qlixed@152.170.36.244)
[01:45:29] *** Joins: stewie925 (~stewie925@2001:420:c0c8:1003::432)
[01:46:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:46:22] *** Joins: Roey (~Roey@user/Roey)
[01:46:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[01:47:07] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[01:47:39] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[01:48:39] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[01:48:40] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[01:48:40] *** finn_elija is now known as FinnElija
[01:49:03] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[01:49:17] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:49:42] *** Joins: uxemacs (~timothy@user/uxemacs)
[01:49:54] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[01:50:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[01:50:54] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:51:15] *** Quits: noobaroo (~solas@user/noobaroo) (Remote host closed the connection)
[01:52:31] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[01:52:33] <stewie925> hey pandas pythonistas - I have a question - https://bpa.st/OGSA
[01:53:38] <SnoopJ> stewie925, .str is only defined on the columns, not the DataFrame itself
[01:54:06] <SnoopJ> oh hm, but you're using it on an object, I misread. probably the issue is that the dtype is object
[01:54:07] <stewie925> its funny cause when I run it in the python interactive window, i didnt get an error
[01:54:21] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:54:40] <stewie925> hi SnoopJ :)
[01:54:41] <SnoopJ> hmm, and with a quick check, it's not the dtype.
[01:54:54] *** Joins: nolan_ (~nolan_@user/nolan/x-2434303)
[01:55:28] <SnoopJ> stewie925, the error itself looks like you've done `df.str` somewhere, can you share the complete error report?
[01:56:14] * SnoopJ suspects the code in the paste is not what actually caused the error
[01:56:32] <stewie925> ok
[01:58:01] <stewie925> https://bpa.st/ZRHQ
[01:59:50] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:00:29] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Quit: Leaving)
[02:00:40] <stewie925> I should have gotten the same error when I run it in interactive window, but I did not
[02:01:09] <stewie925> oh wait...
[02:01:39] <SnoopJ> stewie925, that's a very strange error, I'm out of guesses without the actual DataFrame to look at
[02:02:05] <SnoopJ> It looks almost like you're storing one DataFrame inside of another, but I can't reproduce this error when doing that in pandas 1.4.1
[02:02:21] <stewie925> SnoopJ I just realized something - the csv file is being read THRICE (3X) within the same code in different places
[02:02:30] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[02:02:43] <SnoopJ> stewie925, I'm not sure how that's related (I can't see your screen)
[02:02:44] <stewie925> so it had three "pd.read_from_excel()"
[02:03:37] *** Quits: DaDarkWizard (~DaDarkWiz@2600:6c47:a200:350a:5e6b:db95:ae49:966c) (Quit: Client closed)
[02:03:38] <stewie925> and I changed the code to save the first read into a variable  "df_save", and I used that same df_save in place of read_excel() on the other two -
[02:04:22] *** Joins: jamea (~jamea@189.237.6.139)
[02:04:36] <stewie925> anyway, thank you - I have to revert to read_excel()
[02:04:44] *** Quits: marenz (~marenz@dynamic-077-191-160-055.77.191.pool.telefonica.de) (Read error: Connection reset by peer)
[02:05:07] *** Joins: bancroft_ (~bancroft@user/bancroft)
[02:05:12] *** Quits: Xano (~Xano@2a00:23c4:4204:700:607b:ce7:16ac:43b1) (Ping timeout: 252 seconds)
[02:07:36] *** Joins: hexenbane (~hexenbane@fixed-187-190-159-31.totalplay.net)
[02:07:44] *** Joins: jamea22 (~jamea@189.237.6.139)
[02:08:37] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 240 seconds)
[02:08:47] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Remote host closed the connection)
[02:10:24] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[02:10:38] *** Joins: jamea (~jamea@189.237.6.139)
[02:10:58] *** Joins: zzbot (~zzbot@user/zzbot)
[02:11:41] *** Joins: sydbarret (~anton@static-186-121-195-111.acelerate.net)
[02:12:16] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 250 seconds)
[02:13:25] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[02:13:30] *** Joins: jamea22 (~jamea@189.237.6.139)
[02:13:54] <sydbarret> select * from tbl where email in ('ro'brien@x.com',.....) gives pyodbc error  Invalid bracketing of name '[ro'brien@visix.com]'. (-1002) (SQLExecDirectW)
[02:14:03] <sydbarret> how can I scape the apostrophe
[02:14:22] <sydbarret> im querying a ms access table
[02:14:31] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[02:14:40] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[02:14:58] *** Joins: KevinX (~KevinX@user/KevinX)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:06] *** Quits: Guest7375 (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[02:15:27] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 256 seconds)
[02:15:36] *** Joins: Betal (~Betal@user/betal)
[02:16:15] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 256 seconds)
[02:16:17] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:39] *** Joins: jamea (~jamea@189.237.6.139)
[02:16:45] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[02:17:57] *** Joins: Xano (~Xano@2a00:23c4:4204:700:8cd9:ca87:1515:f44e)
[02:18:25] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 268 seconds)
[02:19:09] *** Quits: KevinX (~KevinX@user/KevinX) (Client Quit)
[02:19:42] *** Joins: jamea22 (~jamea@189.237.6.139)
[02:20:23] <ChrisWarrick> that’s not a python question
[02:20:32] <ChrisWarrick> try '' or \' though
[02:21:20] *** Quits: zzbot (~zzbot@user/zzbot) (Remote host closed the connection)
[02:21:21] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 256 seconds)
[02:21:22] *** Joins: blei (~blei@user/blei)
[02:22:03] *** Joins: KevinX (~KevinX@user/KevinX)
[02:22:41] *** Joins: jamea (~jamea@189.237.6.139)
[02:23:53] *** Joins: zzbot (~zzbot@user/zzbot)
[02:24:35] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 268 seconds)
[02:25:16] *** Joins: jamea22 (~jamea@189.237.6.139)
[02:25:29] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:25:48] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[02:26:26] *** Quits: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de) (Quit: Leaving)
[02:26:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:27:01] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 256 seconds)
[02:27:09] *** Quits: sydbarret (~anton@static-186-121-195-111.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:29:24] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 240 seconds)
[02:29:27] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[02:29:36] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 250 seconds)
[02:30:22] *** Joins: tusko (~yeurt@user/tusko)
[02:30:41] <tusko> is there not a couple lines of python that can spin up a webserver and serve a single file to the internet?
[02:30:53] *** Joins: jamea (~jamea@189.237.6.139)
[02:30:59] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[02:31:02] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[02:31:06] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[02:31:20] *** Quits: Nact (~l@2a02:2788:11c8:31d:aacb:a105:f6fd:377a) (Quit: Konversation terminated!)
[02:31:35] <nedbat> tusko: https://docs.python.org/3/library/http.server.html
[02:31:40] <SnoopJ> tusko, you can do it with zero lines of Python if you are okay with it being a pretty terrible server
[02:31:43] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[02:31:58] <SnoopJ> (see `python3 -m http.server --help`)
[02:32:09] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 252 seconds)
[02:32:36] <tusko> I'm familiar with http.server but how can I have it just send the file when a user visits the link?
[02:32:36] *** Joins: murdoc_x01 (~nitestryk@98.42.49.72)
[02:32:38] <SnoopJ> s/pretty terrible/excessively simple/
[02:32:59] <SnoopJ> tusko, is this for one-off sending of a file between two users?
[02:33:11] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:33:22] <tusko> I want to send the same file to multiple users via a qr code
[02:33:29] *** Joins: jamea22 (~jamea@189.237.6.139)
[02:34:04] <vlt> tusko: http.server does exactly that. Just run it in the directory the file is located.
[02:34:11] <SnoopJ> I think you would have to write an index.html with a redirect to the target file if you wanted what you're describing
[02:34:57] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 240 seconds)
[02:36:07] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:36:10] *** Quits: stewie925 (~stewie925@2001:420:c0c8:1003::432) (Quit: Client closed)
[02:36:13] <nedbat> tusko: if you are making the qr code, just put the actual URL of the file, it doesn't have to be /
[02:36:16] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:36:28] *** Joins: jamea (~jamea@189.237.6.139)
[02:36:30] *** Quits: codificat (~pep@52.red-79-159-232.dynamicip.rima-tde.net) (Quit: leaving)
[02:37:34] <tusko> yeah, idk, I couldn't figure this out in 2 hours now
[02:37:46] <tusko> I setup nginx lighttpd and now http.server
[02:37:48] <SnoopJ> pointing directly at the file is certainly simpler
[02:37:48] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 240 seconds)
[02:37:52] <tusko> I miust just be a moron
[02:38:07] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[02:38:11] *** Joins: parv (~quass@user/parv)
[02:38:48] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:a089:7447:f357:14d8)
[02:39:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:39:32] <jfb4> nedbat:thank you for the reference.
[02:39:45] <tusko> sudo python3 -m http.server -d /srv/http/www/file.pdf --bind 175.132.124.27 80
[02:39:57] <tusko> gave me a 404 HTTPStatus.NOT_FOUND - Nothing matches the given URI.
[02:39:57] <nedbat> tusko: does that work? -d is for a directory
[02:40:07] <nedbat> tusko: you are making the qr code, yes?
[02:40:12] *** Quits: ybonatakis (~iob@nat1.prg.suse.com) (Ping timeout: 240 seconds)
[02:40:25] <tusko> trying to get the link to work
[02:40:37] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 240 seconds)
[02:40:40] <tusko> but I'm self-hosting the file
[02:40:41] <nedbat> tusko: why not just use a link that does work?
[02:40:46] <tusko> true story
[02:40:51] <strk> one line, at least 3 python3 compatibility issues: md5password = '{md5}'+base64.encodestring( hashlib.md5(password).digest() )
[02:41:14] *** Quits: Xano (~Xano@2a00:23c4:4204:700:8cd9:ca87:1515:f44e) (Ping timeout: 268 seconds)
[02:41:45] <nedbat> strk: bytes/str definitely gets tricky
[02:41:47] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:755a) (Quit: Client closed)
[02:41:55] <strk> base64.encodestring doesn't exist anymore, base64.encodebytes seems to fix that one, hashlib.md5(password) Unicode-objects must be encoded before hashing, hashlib.md5(password.encode('utf-8')  fixes that
[02:42:09] <strk> next: TypeError: can only concatenate str (not "bytes") to str
[02:42:15] *** Joins: ybonatakis (~iob@nat1.prg.suse.com)
[02:42:37] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:42:40] <strk> how the hell do I make an "{md5}<base64_encoded_version_of_string_password_here>" ?
[02:42:44] *** Quits: qlixed (~qlixed@152.170.36.244) (Quit: That's all folks!!)
[02:43:19] <Repiphany> Encode the bytes to ascii
[02:43:22] <SnoopJ> strk, '{md5}' is a str and you're trying to join it to a bytes object, hence the TypeError. did you maybe mean b'{md5}' or to decode the bytes?
[02:43:24] *** Joins: jbox (~jbox@user/jbox)
[02:43:41] <Repiphany> Er, decode as ascii
[02:44:47] <strk> it's all ascii
[02:45:21] <strk> '{md5}' + ( base64.encodebytes('ciao').decode('ascii') ) # TypeError: expected bytes-like object, not str
[02:45:39] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:45:53] *** Joins: jamea (~jamea@189.237.6.139)
[02:46:31] <SnoopJ> that's because the argument to encodebytes() is a str, but it expects bytes
[02:46:35] *** Joins: blei (~blei@user/blei)
[02:46:39] <SnoopJ> `'{md5}' + base64.encodebytes(b'ciao').decode('ascii')` probably does what you expected
[02:48:16] *** Quits: zln (~zln@c83-249-48-11.bredband.tele2.se) (Ping timeout: 245 seconds)
[02:48:23] <strk> great, then it turns out LDAP actually wanted bytes ?
[02:48:27] <strk> TypeError: ('Tuple_to_LDAPMod(): expected a byte string in the list', 's')
[02:48:34] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:48:43] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[02:48:57] * strk wants to cry
[02:48:58] <SnoopJ> then you can re-encode the result, or make the prefix a bytes object to begin with (which is certainly simpler)
[02:49:01] *** Joins: hams (~hams@107-196-49-143.lightspeed.hstntx.sbcglobal.net)
[02:49:01] *** Quits: hams (~hams@107-196-49-143.lightspeed.hstntx.sbcglobal.net) (Changing host)
[02:49:01] *** Joins: hams (~hams@user/hams)
[02:49:18] <strk> l.add_s( dn, [ ('uid',uid), ('cn',cn), ('sn',sn), ('mail',mail), ('userPassword',md5password), ('objectClass','inetOrgPerson')] )
[02:49:18] <SnoopJ> i.e. `b'{md5}' + base64.encodebytes(b'ciao')`
[02:49:23] *** Quits: The_Loko (~The_Loko@79.116.29.13) (Quit: Leaving)
[02:49:25] <strk> shall I change those all into b'...' ?
[02:49:31] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[02:49:37] * SnoopJ cannot make any sense of the line in the complete absence of context
[02:50:02] <strk> and hoping the varaibles are already bytes ?
[02:50:21] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 245 seconds)
[02:50:30] <strk> it's the ldap module: l = ldap.initialize( server ); l.add_s(...)
[02:50:37] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:a089:7447:f357:14d8) (Ping timeout: 240 seconds)
[02:50:56] *** Quits: hams (~hams@user/hams) (Client Quit)
[02:50:58] <strk> Tuple_to_LDAPMod() argument 1 must be str, not bytes
[02:51:09] <strk> Tuple_to_LDAPMod error contraddicting the previous one
[02:51:09] <phy1729> have you taken a look at ldap3?
[02:51:11] <strk> wonderful
[02:51:19] *** Joins: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net)
[02:51:24] <strk> didn't change the ldap import, nope
[02:51:31] <strk> I guess it's time to give it a try
[02:51:57] <strk> is it intended to be a transparent replacement for ldap ?
[02:51:58] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[02:52:02] *** Joins: zeden (~zeden@user/zeden)
[02:52:27] <phy1729> no, but ime it's nicer to deal with and faster
[02:53:17] *** Joins: hams (~hams@107-196-49-143.lightspeed.hstntx.sbcglobal.net)
[02:53:17] *** Quits: hams (~hams@107-196-49-143.lightspeed.hstntx.sbcglobal.net) (Changing host)
[02:53:17] *** Joins: hams (~hams@user/hams)
[02:53:32] <strk> ModuleNotFoundError: No module named 'ldap3' -- looked, :
[02:54:08] *** Quits: favreje (~jeff@170.249.173.67) (Ping timeout: 252 seconds)
[02:56:15] *** Quits: oriba (~oriba@dynamic-077-013-166-175.77.13.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:56:17] *** Joins: Xano (~Xano@2a00:23c4:4204:700:a089:7447:f357:14d8)
[02:57:35] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:59:11] *** Quits: andreasbuhr (~quassel@p549db53a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:59:38] *** Joins: Alleria (~textual@user/alleria)
[02:59:39] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[03:00:02] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:00:16] *** Joins: jamea (~jamea@189.237.6.139)
[03:02:47] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:02:55] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[03:04:42] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 250 seconds)
[03:05:08] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 252 seconds)
[03:05:23] *** Joins: funhouse (~funhouse@user/funhouse)
[03:05:33] *** Joins: jamea (~jamea@189.237.6.139)
[03:05:42] *** Quits: Xano (~Xano@2a00:23c4:4204:700:a089:7447:f357:14d8) (Ping timeout: 252 seconds)
[03:08:31] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:08:38] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[03:08:48] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[03:10:05] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 256 seconds)
[03:10:57] *** Joins: moog (~moog@107.126.53.19)
[03:11:15] *** Joins: jamea (~jamea@189.237.6.139)
[03:11:18] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[03:11:45] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[03:12:00] *** Quits: agumonkey (~user@88.163.231.79) (Read error: Connection reset by peer)
[03:12:31] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[03:12:36] *** Joins: davor_ (~davor@user/davor)
[03:12:55] *** Joins: agumonkey (~user@88.163.231.79)
[03:13:02] *** Quits: davor (~davor@user/davor) (Ping timeout: 240 seconds)
[03:14:23] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:15:00] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[03:15:36] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 252 seconds)
[03:16:25] *** Quits: gossie (~gossie@2001:1c02:11e:c700:32f5:9458:805a:6409) (Quit: = "bye bye")
[03:17:01] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[03:17:03] *** Joins: blei86 (~blei@user/blei)
[03:17:36] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1)
[03:17:47] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[03:18:19] *** Joins: Xano (~Xano@2a00:23c4:4204:700:4151:b283:91be:a735)
[03:20:22] *** Joins: hackers (~self@user/hackers)
[03:20:27] *** hackers is now known as emote
[03:20:32] *** emote is now known as remote
[03:21:22] *** Joins: ymwm (~yingmanwu@110.85.123.64)
[03:22:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:59] *** Joins: jamea (~jamea@189.237.6.139)
[03:24:25] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[03:25:12] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 272 seconds)
[03:26:06] *** Joins: jamea22 (~jamea@189.237.6.139)
[03:26:38] *** Joins: Xano_ (~Xano@host86-157-207-90.range86-157.btcentralplus.com)
[03:27:13] *** Quits: Xano (~Xano@2a00:23c4:4204:700:4151:b283:91be:a735) (Remote host closed the connection)
[03:27:24] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[03:27:33] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:27:42] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 252 seconds)
[03:29:28] *** Joins: namkeleser (~namkelese@125.7.37.86)
[03:30:17] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 240 seconds)
[03:30:35] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[03:31:05] *** Joins: r3m (~launch@user/r3m)
[03:33:17] *** Quits: nolan_ (~nolan_@user/nolan/x-2434303) (Quit: Going offline, see ya! (www.adiirc.com))
[03:33:24] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[03:33:41] *** Joins: jamea (~jamea@189.237.6.139)
[03:35:01] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:36:26] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[03:36:30] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:36:35] *** Joins: jamea22 (~jamea@189.237.6.139)
[03:36:39] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:36:48] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[03:38:12] *** Joins: Wulf (~Wulf@user/wulf)
[03:38:25] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 256 seconds)
[03:39:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:40:27] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 256 seconds)
[03:40:54] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 252 seconds)
[03:40:56] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4)
[03:42:17] <c4017w_> Can someone with pycharm verify that it fails to warn on this example? https://bpa.st/NVFQ
[03:42:22] <c4017w_> mypy catches it
[03:42:57] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 256 seconds)
[03:43:31] *** Quits: Xano_ (~Xano@host86-157-207-90.range86-157.btcentralplus.com) (Ping timeout: 256 seconds)
[03:44:02] *** Joins: noobaroo (~solas@user/noobaroo)
[03:45:07] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:45:24] *** Joins: rje (~textual@50.35.241.164)
[03:45:32] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:46:21] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 256 seconds)
[03:46:25] *** Joins: Xano (~Xano@2a00:23c4:4204:700:4151:b283:91be:a735)
[03:47:10] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[03:47:37] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:49:43] *** Joins: jamea (~jamea@189.237.6.139)
[03:52:34] *** Joins: jamea22 (~jamea@189.237.6.139)
[03:52:50] *** Joins: tusko_ (~yeurt@user/tusko)
[03:53:33] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[03:54:17] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 256 seconds)
[03:54:47] *** Quits: Socra (~Socra@206.217.216.21) (Read error: Connection reset by peer)
[03:54:55] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[03:54:56] *** tusko_ is now known as tusko
[03:55:16] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:55:16] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:55:27] *** Joins: jamea (~jamea@189.237.6.139)
[03:55:29] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[03:55:30] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[03:55:30] <strk> how can I tell if a variable is a string or a bytes ?
[03:55:39] <strk> ie :how to print info about a variable type ?
[03:56:06] <strk> and how do I convert between one and the other ?
[03:56:44] <nedbat> strk: print(type(the_variable)) ?
[03:57:00] <blei86> not for his use case though, he wants to know if its a byte string
[03:57:07] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 256 seconds)
[03:57:07] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[03:57:17] <InPhase> strk: Then .encode() and .decode() to convert.
[03:57:29] <blei86> he wants to know before then
[03:57:30] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[03:57:59] <nedbat> blei86: sorry, who are you talking about?
[03:58:00] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:58:01] *** Quits: l4yer (~l4yer@user/l4yer) (Ping timeout: 256 seconds)
[03:58:17] *** Joins: stewie925 (~stewie925@2001:420:c0c8:1003::432)
[03:58:20] <blei86> a bat would be useful
[03:58:27] <blei86> was the string instantiated with '' or b''
[03:58:30] <strk> knowing before would be useful for me, to at least know
[03:58:33] *** Joins: jamea22 (~jamea@189.237.6.139)
[03:58:42] <strk> the string was fetched from the return from json.load
[03:58:48] <nedbat> strk: you can tell by reading the documentation for the function.
[03:58:50] <strk> well, some of them
[03:58:51] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:59:01] <nedbat> strk: json.load gives you data structures with strings in it, not bytes
[03:59:03] <strk> as I'm not sure which variable ldap add_s is complaining about
[03:59:07] *** Joins: Socra (~Socra@206.217.216.21)
[03:59:11] <strk> ok, so those variables are likely all strings
[03:59:27] <strk> and Tuple_to_LDAPMod wants byte strings instead, I suppose
[03:59:43] <nedbat> strk: not likely. they *are* strings
[03:59:44] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 250 seconds)
[04:00:47] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[04:01:02] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[04:01:02] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:01:54] <blei86> strk i couldn't answer your question sorry
[04:01:54] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:02:47] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:02:47] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:02:48] *** Joins: akaWolf (~akaWolf@akawolf.org)
[04:03:31] *** Joins: jamea (~jamea@189.237.6.139)
[04:03:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:04:57] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 240 seconds)
[04:05:51] *** Quits: tijuco (~tijuco@user/tijuco) (Remote host closed the connection)
[04:06:19] *** Joins: jamea22 (~jamea@189.237.6.139)
[04:06:47] *** Joins: xkuru (~xkuru@user/xkuru)
[04:07:42] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:08:11] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 268 seconds)
[04:08:25] *** Joins: x_kuru (~xkuru@user/xkuru)
[04:09:31] *** Quits: hams (~hams@user/hams) (Ping timeout: 245 seconds)
[04:10:09] *** Quits: InPhase (~InPhase@openscad/inphase) (Quit: rebooting)
[04:11:17] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[04:11:25] *** Joins: InPhase (~InPhase@openscad/inphase)
[04:12:17] <stewie925> I got another pandas related error, and its very strange - basically I am getting a KeyError problem but my logger shows the field name though - https://bpa.st/LHAA
[04:12:29] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:13:32] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:14:54] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 250 seconds)
[04:15:48] *** Quits: remote (~self@user/hackers) (Remote host closed the connection)
[04:16:32] <stewie925> the error log is complete
[04:17:03] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[04:17:35] *** Joins: et_ (~et@user/et)
[04:17:45] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[04:17:47] <SnoopJ> stewie925, "Fiscal Period ID" and "FISCAL PERIOD ID" are not the same string. The column you want is apparently named the latter.
[04:18:02] *** et_ is now known as et
[04:18:03] <stewie925> oh crap
[04:18:18] <SnoopJ> oh, it might actually be "'FISCAL PERIOD ID'" which is slightly weirder
[04:18:21] <stewie925> SnoopJ - thank you
[04:18:25] <SnoopJ> but anyway, yea, the column name isn't what you expected
[04:18:56] <InPhase> stewie925: Are you using Python 2.7?
[04:19:01] <stewie925> no, 3.7
[04:19:08] <InPhase> Ok.  Then it's weird.
[04:19:14] <stewie925> thank you Snoop
[04:19:18] <stewie925> how so, InPhase?
[04:19:50] <InPhase> Well there seems to have been a 2.7 bug in the old sqlite3 that did that.
[04:20:14] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[04:20:57] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[04:21:16] <stewie925> oh which line is it, InPhase?
[04:26:17] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Killed (zirconium.libera.chat (Nickname regained by services)))
[04:26:29] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[04:26:33] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[04:28:07] *** Joins: jamea (~jamea@189.237.6.139)
[04:28:18] *** Joins: uxemacs (~timothy@user/uxemacs)
[04:28:32] *** Quits: jamea22 (~jamea@189.237.6.139) (Ping timeout: 268 seconds)
[04:28:46] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[04:28:59] *** Joins: jazzy (~jaziz@user/jaziz)
[04:29:22] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[04:30:57] <KnowledgeShark> I using BS4/lxmle etree to scrape XPATH values and 3 of my XPATH's have a "whitespace" tag in them and I am importing them with whitespace. One of them is here in my dpaste: https://dpaste.com/CFB4HTM6C ; if anyone knows how to remedy this and re-assign it to another python variable without the whitespace; that would be awesome! Thanks in advance!
[04:31:01] *** Quits: Xano (~Xano@2a00:23c4:4204:700:4151:b283:91be:a735) (Ping timeout: 240 seconds)
[04:31:42] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[04:32:39] *** Joins: tejr (~tejr@user/tejr)
[04:34:11] *** Quits: dubs (~user@user/sbudnik) (Remote host closed the connection)
[04:34:16] <blei86> i couldn't parse that sorry, i don't see the prob
[04:35:03] *** Quits: noobaroo (~solas@user/noobaroo) (Quit: Konversation terminated!)
[04:35:18] *** Joins: dubs (~user@user/sbudnik)
[04:35:23] *** Joins: jamea22 (~jamea@189.237.47.249)
[04:37:01] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:37:07] *** Quits: jamea (~jamea@189.237.6.139) (Ping timeout: 256 seconds)
[04:37:55] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[04:40:16] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[04:40:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[04:40:36] *** Joins: jamea (~jamea@189.237.47.249)
[04:40:39] *** Quits: FaV1r3s (~localhost@user/fav1r3s) (Quit: ZNC - https://znc.in)
[04:41:04] <Vornotron> huh.  I didn't know you could use expressions - and the equals sign thing - in f strings
[04:41:56] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 252 seconds)
[04:41:57] *** Quits: jamea22 (~jamea@189.237.47.249) (Ping timeout: 252 seconds)
[04:42:09] *** Joins: Xano (~Xano@2a00:23c4:4204:700:d00d:8184:4404:71a1)
[04:42:17] *** Joins: noobaroo (~solas@user/noobaroo)
[04:42:32] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[04:42:33] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:42:49] *** Joins: FaV1r3s (~localhost@2001:41d0:8:99ea::1)
[04:42:49] *** Quits: FaV1r3s (~localhost@2001:41d0:8:99ea::1) (Changing host)
[04:42:49] *** Joins: FaV1r3s (~localhost@user/fav1r3s)
[04:43:39] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[04:44:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[04:44:50] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[04:45:47] *** Quits: hirogen (~hirgen@user/hirogen) (Remote host closed the connection)
[04:48:07] *** Quits: stewie925 (~stewie925@2001:420:c0c8:1003::432) (Ping timeout: 256 seconds)
[04:51:16] <SnoopJ> Vornotron, the {something=} trick is 3.8+, but it's awfully handy
[04:52:06] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[04:54:03] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[04:54:49] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[04:55:03] <Vornotron> I didn't even know you could add in it
[04:56:37] *** Quits: jamea (~jamea@189.237.47.249) (Ping timeout: 240 seconds)
[04:56:42] *** Joins: frost (~frost@user/frost)
[04:57:19] *** Joins: src (~src@user/src)
[04:57:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:57:40] *** Quits: syrius_ (syrius@titan.stormtek.net) (Ping timeout: 272 seconds)
[04:57:54] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:57:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:58:14] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[04:58:22] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:59:27] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:59:35] *** Joins: steve2[m] (~steve2e3f@2001:470:69fc:105::1:dbe7)
[05:00:23] *** Quits: rb (~augh@alogs.space) (Remote host closed the connection)
[05:00:30] *** Joins: KevinX (~KevinX@user/KevinX)
[05:00:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:01:20] <SnoopJ> it's even better than that, you can use any expression :D
[05:01:27] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[05:01:37] *** Joins: rwb (~augh@alogs.space)
[05:02:00] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[05:02:25] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[05:03:33] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:d00d:8184:4404:71a1)
[05:03:40] *** Joins: syrius (syrius@titan.stormtek.net)
[05:03:57] *** Quits: Xano (~Xano@2a00:23c4:4204:700:d00d:8184:4404:71a1) (Ping timeout: 252 seconds)
[05:04:18] *** Joins: cypostres (~cypostres@user/cypostres)
[05:05:42] *** Joins: CormacAttack (~mac@144.62.85.200)
[05:06:15] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[05:06:37] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:06:37] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:08:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:08:34] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:7d91:e2c0:1e69:5eb6)
[05:09:52] *** Joins: KevinX (~KevinX@user/KevinX)
[05:10:13] *** Quits: PaterTemporalis (~woooopsie@bl21-200-69.dsl.telepac.pt) (Ping timeout: 256 seconds)
[05:11:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:11:29] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:11:29] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:11:42] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[05:11:44] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[05:13:09] *** Joins: Barones (~Barones@user/Barones)
[05:14:04] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:15:50] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[05:16:11] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[05:17:00] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:d00d:8184:4404:71a1) (Ping timeout: 240 seconds)
[05:18:09] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:18:09] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:18:39] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[05:18:50] *** Joins: jazzy2 (~jaziz@user/jaziz)
[05:18:52] *** Quits: noobaroo (~solas@user/noobaroo) (Remote host closed the connection)
[05:19:00] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[05:20:25] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 256 seconds)
[05:20:35] *** Joins: uxemacs (~timothy@user/uxemacs)
[05:21:12] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1) (Ping timeout: 250 seconds)
[05:21:16] *** Joins: zumba_addict73 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[05:21:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[05:22:37] *** Joins: Xano (~Xano@2a00:23c4:4204:700:d00d:8184:4404:71a1)
[05:22:48] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:23:01] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[05:26:42] *** Quits: zzbot (~zzbot@user/zzbot) (Remote host closed the connection)
[05:26:57] *** Quits: kts (~kts@103.73.237.12) (Ping timeout: 240 seconds)
[05:27:04] *** Joins: zzbot (~zzbot@user/zzbot)
[05:27:22] *** Joins: humberto1 (~humbertow@189.236.30.245)
[05:28:46] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[05:30:12] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[05:30:18] *** Quits: llh (~UPP@user/llh) (Ping timeout: 250 seconds)
[05:32:02] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:33:24] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[05:33:38] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[05:33:57] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:c516:12d5:2be4:7323) (Ping timeout: 240 seconds)
[05:34:17] *** Quits: humberto1 (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[05:35:07] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[05:35:15] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[05:35:23] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[05:35:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:36:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:37:44] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:37:49] *** jazzy2 is now known as jazzy
[05:38:13] *** Joins: humberto1 (~humbertow@189.236.30.245)
[05:39:58] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[05:40:49] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:41:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[05:41:33] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:43:44] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[05:44:03] *** Parts: llanhmod_ (~personnel@user/domhnall/x-2887755) ()
[05:44:10] *** Quits: zzbot (~zzbot@user/zzbot) (Ping timeout: 260 seconds)
[05:44:12] *** llanhmod is now known as Guest1472
[05:45:52] *** Joins: tarel2 (~tarel2@2600:8801:1881:7300::a288)
[05:46:48] *** Quits: dubs (~user@user/sbudnik) (Quit: ERC 5.4 (IRC client for GNU Emacs 28.0.91))
[05:47:54] *** Quits: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com) (Quit: JohnDoe1)
[05:48:12] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[05:48:28] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ab61:3516:97a5:fda1)
[05:49:37] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 240 seconds)
[05:49:49] *** Joins: jpn (~jpn@user/jpn)
[05:52:04] *** Joins: dubs (~user@user/sbudnik)
[05:52:12] *** Quits: KevinX (~KevinX@user/KevinX) (Read error: Connection reset by peer)
[05:52:50] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[05:53:36] *** Joins: KevinX (~KevinX@user/KevinX)
[05:54:25] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[05:56:11] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 245 seconds)
[05:56:30] *** Joins: syrius (syrius@titan.stormtek.net)
[05:57:13] *** Joins: cosmo (~user@65.78.142.57)
[05:57:19] *** Joins: hams (~hams@73.232.205.0)
[05:57:19] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[05:57:19] *** Joins: hams (~hams@user/hams)
[06:01:17] *** Quits: humberto1 (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[06:02:01] *** Quits: Xano (~Xano@2a00:23c4:4204:700:d00d:8184:4404:71a1) (Ping timeout: 245 seconds)
[06:02:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[06:04:49] *** Joins: uxemacs (~timothy@user/uxemacs)
[06:04:56] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:06:06] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 252 seconds)
[06:06:26] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[06:06:47] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:06:57] *** Joins: syrius (syrius@titan.stormtek.net)
[06:08:19] *** Joins: Xano (~Xano@2a00:23c4:4204:700:d26c:4411:a98c:bf02)
[06:08:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[06:08:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[06:09:23] *** jazzy is now known as chouxshiner
[06:09:28] *** chouxshiner is now known as jazzy
[06:10:51] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[06:11:15] *** Joins: esther (~esther@136.62.7.216)
[06:11:54] *** Joins: programmar (~whatever@118.69.128.37)
[06:13:31] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[06:14:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:14:15] *** Quits: ubert (~Thunderbi@p200300ecdf19b70a55005d108b4dd460.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:14:33] *** Joins: ubert (~Thunderbi@p200300ecdf19b79d7171724430720c97.dip0.t-ipconnect.de)
[06:14:42] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[06:14:55] *** Joins: jamea (~jamea@200.68.140.48)
[06:14:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[06:15:09] *** Joins: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705)
[06:15:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:16:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:16:35] *** Joins: jamea22 (~jamea@177.239.81.39)
[06:17:04] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 268 seconds)
[06:17:59] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:18:24] *** Quits: rickybob2 (~rickybob@35.143.255.39) (Ping timeout: 250 seconds)
[06:18:33] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[06:18:58] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[06:19:08] *** Quits: dubs (~user@user/sbudnik) (Quit: y)
[06:19:18] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:cdfb:9efd:c69e:cc61) (Ping timeout: 252 seconds)
[06:19:38] *** Joins: dubs (~user@user/sbudnik)
[06:19:41] *** Quits: jamea (~jamea@200.68.140.48) (Ping timeout: 256 seconds)
[06:20:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[06:20:21] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[06:21:01] *** Joins: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com)
[06:21:03] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[06:24:19] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[06:24:50] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:7d91:e2c0:1e69:5eb6) (Quit: Client closed)
[06:25:12] *** Quits: dubs (~user@user/sbudnik) (Quit: ERC 5.4 (IRC client for GNU Emacs 28.0.91))
[06:25:43] *** Joins: dubs (~user@user/sbudnik)
[06:25:48] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[06:25:56] *** Parts: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Leaving)
[06:26:15] *** Joins: icy_hot (~icy_hot@211.32.147.101)
[06:26:22] *** Joins: humberto1 (~humbertow@189.236.30.245)
[06:27:17] *** Quits: jbox (~jbox@user/jbox) (Read error: Connection reset by peer)
[06:29:06] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:30:30] *** [itchyjunk] is now known as Guest1869
[06:30:30] *** [_] is now known as [itchyjunk]
[06:30:41] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:30:58] *** Quits: humberto1 (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[06:31:26] *** Joins: humberto1 (~humbertow@189.236.30.245)
[06:32:37] *** Quits: Guest1869 (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:32:45] *** Joins: georgios (~georgios@user/georgios)
[06:33:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:33:49] *** Quits: icy_hot (~icy_hot@211.32.147.101) (Ping timeout: 240 seconds)
[06:33:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:34:39] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[06:35:44] *** Quits: humberto1 (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[06:35:50] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-9533-c9bc-6bff-610c.res6.spectrum.com)
[06:35:57] *** Joins: icy_hot (~icy_hot@211.32.147.101)
[06:36:17] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d)
[06:38:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:39:50] *** Joins: Blackpajamas (~Blackpaja@gateway/vpn/pia/blackpajamas)
[06:40:17] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[06:40:17] *** Quits: esther (~esther@136.62.7.216) (Ping timeout: 240 seconds)
[06:40:54] *** Quits: icy_hot (~icy_hot@211.32.147.101) (Quit: WeeChat 3.4)
[06:41:04] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[06:41:25] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:7d91:e2c0:1e69:5eb6)
[06:41:53] *** Quits: CormacAttack (~mac@144.62.85.200) (Quit: WeeChat 3.4)
[06:42:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[06:43:53] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[06:45:59] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:46:39] *** Quits: Blackpajamas (~Blackpaja@gateway/vpn/pia/blackpajamas) (Quit: Leaving)
[06:46:43] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:7d91:e2c0:1e69:5eb6) (Quit: Client closed)
[06:46:46] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[06:47:04] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Client Quit)
[06:49:00] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[06:49:19] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::c) (Quit: Konversation terminated!)
[06:49:23] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 256 seconds)
[06:51:46] *** Quits: emerent (~quassel@p200300cd5743c35fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:51:52] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[06:52:05] *** Joins: emerent (~quassel@p200300cd5743c36fba27ebfffed28a59.dip0.t-ipconnect.de)
[06:53:29] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[06:53:33] *** Joins: test_me (~Thunderbi@softbank126025216254.bbtec.net)
[06:54:28] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[06:56:04] *** Joins: wyclif (~wyclif@user/wyclif)
[06:57:38] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[06:58:36] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:58:46] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:58:51] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[06:59:19] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:59:19] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:59:19] *** finn_elija is now known as FinnElija
[07:00:46] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:00:56] <programmar> is there anything similar to Queue but for two different processes ? like for example two completely isolated python scripts instead of multiprocessing processes
[07:00:58] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[07:02:13] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[07:03:35] *** Quits: Vornotron (~Vornicus@2603-8000-5d07-7ef0-44bf-6e8e-94ff-564e.res6.spectrum.com) (Read error: Connection reset by peer)
[07:04:45] *** Parts: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Leaving)
[07:05:38] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:05:45] <blei86> what for out of curiousity
[07:06:45] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[07:07:35] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[07:07:36] *** Quits: hexenbane (~hexenbane@fixed-187-190-159-31.totalplay.net) (Quit: The Lounge - https://thelounge.chat)
[07:10:13] *** Joins: otty (~u0_a123@49.15.202.159)
[07:11:39] *** Quits: otty (~u0_a123@49.15.202.159) (Client Quit)
[07:12:17] *** Joins: otty (~u0_a123@106.200.72.50)
[07:12:23] *** Joins: adeliktas1 (~adeliktas@i59F52712.versanet.de)
[07:12:54] <KnowledgeShark> Got it! Using libxml etree to scrape xpath's with whitespace & strip the whitespace - Working - My dpaste: https://dpaste.com/CY6MXZAT2
[07:13:49] *** Quits: adeliktas (~adeliktas@i59F5FD1E.versanet.de) (Ping timeout: 240 seconds)
[07:13:49] *** adeliktas1 is now known as adeliktas
[07:14:36] *** Quits: test_me (~Thunderbi@softbank126025216254.bbtec.net) (Quit: test_me)
[07:15:00] *** Quits: cosmo (~user@65.78.142.57) (Read error: Connection reset by peer)
[07:15:23] *** Joins: cosmo (~user@65.78.142.57)
[07:16:36] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[07:16:51] *** Joins: smoke (~smoke@user/smoke)
[07:17:32] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:17:52] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1)
[07:18:16] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:19:19] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[07:19:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:19:46] *** Joins: killadi (~u0_a123@49.15.202.159)
[07:19:46] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:20:10] *** Joins: noarb (~noarb@user/noarb)
[07:20:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[07:20:22] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:21:06] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[07:21:36] *** Quits: otty (~u0_a123@106.200.72.50) (Read error: No route to host)
[07:22:07] *** Joins: esther (~esther@136.62.7.216)
[07:23:44] *** Joins: djapo (~archangel@user/djapo)
[07:24:12] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 240 seconds)
[07:24:16] *** Joins: noarb (~noarb@user/noarb)
[07:24:30] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Read error: Connection reset by peer)
[07:24:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[07:25:52] *** Joins: saroy (~Sandipan@45.249.73.234)
[07:26:03] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[07:27:08] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[07:28:43] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:30:06] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:46] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[07:31:02] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[07:31:26] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[07:31:54] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[07:32:14] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:33:17] *** Quits: esther (~esther@136.62.7.216) (Ping timeout: 240 seconds)
[07:34:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:38:39] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[07:38:45] *** Quits: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705) (Quit: Leaving)
[07:39:08] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:39:10] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Ping timeout: 272 seconds)
[07:39:43] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[07:39:43] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[07:39:58] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[07:42:54] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[07:44:17] *** Joins: l4yer (~l4yer@user/l4yer)
[07:44:31] *** Joins: vats (~vats@103.216.143.225)
[07:44:47] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:47:24] *** Joins: zebrag (~chris@user/zebrag)
[07:48:08] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[07:48:26] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[07:48:31] *** Joins: strugee (~strugee@steevie.strugee.net)
[07:48:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:48:56] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[07:49:36] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[07:50:02] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[07:50:28] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-9533-c9bc-6bff-610c.res6.spectrum.com) (Quit: Client closed)
[07:50:44] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Killed (NickServ (GHOST command used by jeho2)))
[07:50:47] *** jeho2 is now known as jeho
[07:51:50] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[07:52:26] *** Quits: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net) (Ping timeout: 245 seconds)
[07:52:43] *** Quits: killadi (~u0_a123@49.15.202.159) (Read error: Connection reset by peer)
[07:52:51] *** Quits: jeho1 (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[07:53:07] *** Joins: killadi (~u0_a123@49.15.203.132)
[07:53:07] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[07:53:33] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:53:45] *** Quits: zln (~zln@c83-249-48-11.bredband.tele2.se) (Ping timeout: 256 seconds)
[07:54:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:54:48] <KnowledgeShark> Does anyone know how to remedy what I am up against? My URL is : https://www.courtlistener.com/opinion/4340668/state-of-washington-v-jose-jesus-mancilla/ | using libxml etree for xpath scraping and trying to get "State of Washington v. Jose Jesus Mancilla, 31187-2 (Wash. Ct. App. 2017)"  ... Using this: pvar_dom_xpath_courtlistener_case_name = dom.xpath('/html/body/div[1]/div[1]/article/h2')[0].text (Pulls the PETITIONER) "State of
[07:54:48] <KnowledgeShark> Washington"... then there is /html/body/div[1]/div[1]/article/h2/span (which I haven't tested yet; I believe it will extract "v." and then I have no idea how to copy the xpath of the otherside of "span class="alt">v.</span> (The respondent). Any idea how I can pull the Respondent in also?
[07:55:28] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[07:56:17] <BrenBarn> isn't there some kind of text_content or something that gets all the text content of subnodes?
[07:56:55] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:56:59] <BrenBarn> yeah `text_content`: https://lxml.de/lxmlhtml.html#html-element-methods
[07:58:11] <KnowledgeShark> BrenBarn: I am uncertain what you mean. https://dpaste.com/BKGAALPK6 (Sample block)
[07:58:18] <KnowledgeShark> I will read that. Thank you!
[07:58:29] <KnowledgeShark> BrenBarn: Appreciate it. This is the solve?
[07:58:39] *** Joins: alxndr (~alexander@ybti.net)
[08:00:52] <foo> Our system processes PDFs. OOM is killing it off. We're probably not deleting the PDFs in memory when we process them. *reviews code
[08:02:58] *** Joins: white2 (~mahengrui@user/mahengrui1)
[08:02:59] *** Quits: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl) (Quit: leaving)
[08:04:31] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (Quit: Leaving)
[08:05:37] <foo> Are there any tools to see what process is eating up the most memory?
[08:06:31] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[08:06:38] *** Joins: kdc (~kdc@196.211.197.133)
[08:08:28] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[08:08:55] <foo> I wonder if cv2 needs to clear up memory after it's done processing
[08:09:18] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[08:09:51] *** Quits: jamea22 (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[08:11:00] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:12:22] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 250 seconds)
[08:14:41] <foo> https://bpa.st/Q6GA -> anyone see anything in here that might cause a memory leak with dealing with PDFs? We use from PyPDF2 import PdfFileReader, PdfFileWriter as well which might be causing this
[08:14:55] *** Joins: zebrag (~chris@user/zebrag)
[08:18:23] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[08:19:12] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[08:19:58] *** Joins: uxemacs (~timothy@user/uxemacs)
[08:26:43] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:26:44] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[08:27:00] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[08:27:57] <foo> Hmm, I wonder if I can pdb step through the code and see it get killed haha
[08:28:08] *** Joins: jamea (~jamea@177.239.81.39)
[08:28:17] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[08:29:34] *** Quits: subopt (~subopt@2603-8081-2302-459a-d594-da84-617b-7c5f.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:29:41] *** Quits: killadi (~u0_a123@49.15.203.132) (Ping timeout: 256 seconds)
[08:30:57] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:31:23] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:32:31] *** Quits: sreve (~quassel@p4ff44c9d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:32:34] *** Joins: sreve_ (~quassel@p549d70f6.dip0.t-ipconnect.de)
[08:33:02] *** Joins: subopt (~subopt@2603-8081-2302-459a-90d2-5164-ea6a-59bf.res6.spectrum.com)
[08:33:35] *** Quits: Giovanni (~Giovanni@176.54.32.122) (Remote host closed the connection)
[08:34:15] *** Joins: Giovanni (~Giovanni@176.54.32.122)
[08:35:07] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[08:35:07] *** Quits: cypostres (~cypostres@user/cypostres) (Read error: Connection reset by peer)
[08:35:26] *** Joins: cypostres (~cypostres@user/cypostres)
[08:38:22] *** Quits: Giovanni (~Giovanni@176.54.32.122) (Remote host closed the connection)
[08:39:32] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[08:39:47] *** Quits: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:39:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:40:14] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:5d57:9cfb:8fe1:7e42)
[08:40:27] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[08:42:32] *** Quits: holsta (~holsta@user/holsta) (Ping timeout: 240 seconds)
[08:43:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:43:24] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[08:43:51] *** Quits: jeho1 (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[08:44:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[08:44:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:44:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:45:01] *** Joins: codebam1 (~codebam@user/codebam)
[08:45:01] *** Quits: codebam (~codebam@user/codebam) (Killed (tantalum.libera.chat (Nickname regained by services)))
[08:45:01] *** codebam1 is now known as codebam
[08:45:01] *** Quits: zrsm (~mrrobot@173.171.254.123) (Quit: BitchX-1.2.1-419-geaf6456 -- just do it.)
[08:46:40] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[08:47:25] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[08:47:33] <KnowledgeShark> BrenBarn: Thanks again. My computer glitched and I had to reboot. I am using etree xpath; so I will need to learn straight lxml to utilize the "text_content" . Appreciate it!
[08:49:36] <SnoopJ> foo, scalene might be a relatively simple way to see what's going on if it doesn't slam into the OOM problem right away. tracemalloc can also be handy if Python is responsible for the offending allocation(s).
[08:49:48] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[08:51:50] *** Joins: holsta (~holsta@user/holsta)
[08:52:09] <foo> SnoopJ: thanks, investigating now. Haven't used either of those. I thought going into pdb could let me see when it was actually killed... but it seems not and I can see the process was killed again
[08:53:27] *** Joins: humberto1 (~humbertow@187.202.220.176)
[08:53:44] <SnoopJ> foo, also a handy trick if it applies to your situation: use the `resource` module to `setrlimit(RLIMIT_AS, (some_size, -1))` and allocation problems will (usually) turn into a MemoryError when the address space tries to grow past that size with an alloc
[08:54:01] <foo> SnoopJ: that is *really* helpful. thank you.
[08:54:42] <foo> SnoopJ: I was wondering how we can get that error thrown. Good to know.
[08:54:48] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[08:54:49] <foo> We're on 1GB memory, going to see about upgrading to 2GB right now.
[08:55:06] <foo> (just to get past this production-high-priority issue)
[08:56:13] <SnoopJ> sure thing, I spent some time bumping into what sounds like a similar memory ceiling, and the oom-killer's aggressiveness was a real pain. In the end, we didn't use that trick, but it was handy to learn about
[08:56:55] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[08:57:01] <SnoopJ> especially for future work where we can design from the word 'go' for being able to recover from insufficient memory without a service restart
[08:57:07] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[08:57:22] <foo> SnoopJ: Can I reasonably assume that when the OOM kills the process, I cannot correlate when OOM killed the process relative to the "last log" in the file? eg. if logging is verbose, I can see where this might be happening... but I doubt OOM is that precise.
[08:57:31] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[08:57:32] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:58:53] <InPhase> foo: OOM killing will happen immediately upon the offending process attempting to acquire too much memory.  It results in the allocation request never returning.
[08:59:55] <SnoopJ> foo, you can check the kernel ring buffer (dmesg) to get a timestamp you might be able to correlate to your application if you have good logging, but that's less useful than it seems like: if you have the logging to begin with, you can probably just see where it cuts out
[09:00:05] <InPhase> foo: Well, let me clarify that.  It will be immediate upon a memory request, but the actual request might not come from the offending process if the timing is just right.
[09:00:18] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[09:01:06] <InPhase> foo: An offending process can acquire 99% of the available RAM, and another one can request 2% a brief moment later, and it kills the one that successfully requested the 99%.
[09:01:14] <SnoopJ> at any rate, it is very much not designed to play nice with user space, it brings the process down quite hard and mostly that means you work *around* it
[09:01:29] *** Quits: nemexis_ (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[09:01:44] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[09:02:16] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[09:02:33] <InPhase> foo: But if the process is trying to use more than is available, at that moment it will end.  There always has to be a valid resolution to the event.
[09:03:27] <InPhase> foo: It just by design is not the last one to request, because that could be anything well behaved.
[09:04:17] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[09:04:35] <InPhase> foo: Not sure if that explanation attempt made it clearer or worse.  :)
[09:05:33] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[09:05:52] *** Quits: zln (~zln@c83-249-48-11.bredband.tele2.se) (Quit: WeeChat 3.2)
[09:05:57] <foo> InPhase / SnoopJ - really appreciate this, thanks. My relationship with OOM is "complicated" (we have an off-and-on-again open relationship)
[09:06:30] <foo> Upgrading server to 2GB RAM now, may double the swap to be 4GB, then look into better ways of handling this in the future
[09:06:55] *** Quits: zumba_addict73 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[09:07:14] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[09:07:42] <SnoopJ> I'd forgotten that processes with CAP_SYS_RAWIO also get a SIGTERM before they get a SIGKILL, which gives you a chance to clean up. I've never been entirely clear on why that is (or rather, why this behavior is specific to this capability)
[09:07:52] *** Joins: acresearch (~acresearc@user/acresearch)
[09:08:00] <SnoopJ> probably because of the "there must be a valid resolution" thing that InPhase mentioned
[09:08:31] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[09:08:58] <programmar> blei86: i was trying to exchage a dict between two ssripts
[09:09:27] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[09:10:05] <blei86> use the dbm module with the berkeley db addon
[09:10:21] <programmar> erh me ?
[09:10:34] <blei86> well, i presume you're asking because you want an excellent way to do it
[09:11:06] <programmar> yea, the way that i don't have to wotrry about spaghetti codes afterward
[09:11:18] <blei86> that would be a database.
[09:11:20] <blei86> https://docs.python.org/3/library/dbm.html
[09:11:40] <programmar> database is fine but i am trying something in-mem to retrieve thigs faster
[09:11:49] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:11:55] <blei86> thats what the berkeley db addon is for
[09:12:43] <programmar> hm ok, but is this lightweight ?
[09:12:48] <programmar> or it requires huge RAM to do
[09:13:07] <programmar> usually db requires lots of memory tho
[09:13:08] <blei86> i don't know your workload but it should suffice
[09:13:17] <programmar> well my rasp is below 1GB
[09:13:32] *** Joins: codebam1 (~codebam@user/codebam)
[09:13:44] *** Quits: codebam (~codebam@user/codebam) (Killed (NickServ (GHOST command used by codebam1)))
[09:13:48] *** codebam1 is now known as codebam
[09:13:57] *** Quits: humberto1 (~humbertow@187.202.220.176) (Ping timeout: 240 seconds)
[09:14:01] <blei86> https://www.jcea.es/programacion/pybsddb.htm
[09:14:52] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[09:17:42] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[09:17:48] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[09:19:03] *** Joins: Atque (~Atque@user/atque)
[09:19:41] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 252 seconds)
[09:20:13] *** Quits: Sora (~Guest@user/sora) (Ping timeout: 240 seconds)
[09:21:19] *** Quits: noyb (~noyb@user/noyb) (Remote host closed the connection)
[09:21:46] *** Joins: savolla (~quassel@84.44.28.28)
[09:22:23] *** Quits: strugee (~strugee@steevie.strugee.net) (Ping timeout: 256 seconds)
[09:22:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:22:58] *** Joins: marduk5 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[09:23:07] *** Quits: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com) (K-Lined)
[09:24:05] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 256 seconds)
[09:24:05] *** Quits: redkrieg (~redkrieg@user/redkrieg) (Ping timeout: 256 seconds)
[09:24:22] *** Joins: redkrieg (~redkrieg@user/redkrieg)
[09:24:39] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[09:24:39] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 256 seconds)
[09:24:39] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 256 seconds)
[09:24:39] *** Quits: shodan45 (~quassel@107.161.22.155) (Ping timeout: 256 seconds)
[09:24:39] *** marduk5 is now known as marduk
[09:24:53] *** Joins: shodan45 (~quassel@107.161.22.155)
[09:24:56] *** Joins: strugee_ (~strugee@steevie.strugee.net)
[09:25:47] *** Joins: finsternis (~X@23.226.237.192)
[09:26:00] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[09:26:06] *** Joins: digilink (~digilink@user/digilink)
[09:26:17] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[09:26:20] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[09:26:35] *** Joins: han-solo (~hanish@user/han-solo)
[09:27:37] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:5d57:9cfb:8fe1:7e42) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:27:53] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[09:28:03] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:5d57:9cfb:8fe1:7e42)
[09:29:20] <programmar> cool, python has a standard nosql db
[09:29:30] <programmar> blei86: yea that doesn't seem like it wastes much memory
[09:29:31] *** Quits: savolla (~quassel@84.44.28.28) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:29:32] <programmar> only 0.1MB
[09:32:06] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[09:32:15] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:32:20] <programmar> ok not exactly nosql, it only stores string, not dict
[09:33:24] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:33:24] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[09:33:51] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[09:34:15] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[09:34:16] *** Quits: l4yer (~l4yer@user/l4yer) (Ping timeout: 250 seconds)
[09:34:26] <KirkMcDonald> programmar: Are you talking about dbm? I wouldn't really recommend it.
[09:34:50] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[09:34:53] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[09:34:54] <programmar> well yea i was recommended that above but idk
[09:35:07] <programmar> i only want to pass a dict between two separate scripts
[09:35:08] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[09:35:13] *** Joins: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138)
[09:35:32] <programmar> that sounds simple to do but not really simple in term of clean codes
[09:35:44] <KirkMcDonald> Depending on the specifics, I would probably use json.
[09:36:10] <programmar> yea json is good but the point is it's possible to pass between scripts ? say that i know their pid
[09:36:16] <programmar> i want it to be in-mem to be fastr
[09:37:13] *** Joins: upsala (~zcb@185.209.196.134)
[09:37:22] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[09:38:26] <blei86> use a socket
[09:38:40] <programmar> i did but i kinda said it, it's not easy to make a clean code
[09:38:54] <programmar> socket would mean = multithreading and some more codes to monitor later on
[09:38:56] <blei86> a socket is the standard way of doing it
[09:39:15] <blei86> or a database
[09:39:17] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[09:39:19] <blei86> you can make a ramdisk if you want
[09:39:40] <programmar> ramdisk ?
[09:39:56] <blei86> yeah pretty much what it sounds like
[09:40:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:40:29] <programmar> well if it is what it sounds like then idk how tho, it sounds physical rather than software-like
[09:41:02] <programmar> let's me see
[09:41:05] *** Joins: jpn (~jpn@user/jpn)
[09:41:41] <blei86> you could display the data with one program and take a screenshot another
[09:41:59] <programmar> awh "RAMDisk is a program that takes a portion of your system memory and uses it as a disk drive" ok, so is there any standard way to do this in python ?
[09:42:09] <programmar> my program has had too many dependencies already
[09:42:28] <blei86> you need to use a system utility to create the disk afaik
[09:42:30] <blei86> its a one liner
[09:42:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:42:55] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[09:42:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:43:48] *** Quits: faceface (~faceface@user/faceface) (Quit: Lost terminal)
[09:43:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:43:55] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:44:19] <programmar> yea i think mount can do that
[09:45:12] <blei86> now that you have a ramdisk you'll need a protocol for communicating the information via disk
[09:45:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:45:17] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[09:45:24] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:45:27] *** Joins: dthpulse (~quassel@podciarou.sk)
[09:45:57] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 256 seconds)
[09:46:08] <blei86> you can use fasteners https://github.com/harlowja/fasteners
[09:46:29] <programmar> er why not ? since i already made a ramdisk with mount, i can just treat it like a normal filesystem ?
[09:46:39] <programmar> not why not, i mean why a protocol
[09:46:52] <blei86> its polite
[09:46:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:47:39] <programmar> nya i guess it's fine, i already have too many dependencies
[09:47:42] <blei86> if you use a fastener you can use a pickle object on your ramdisk
[09:47:48] <blei86> and write to it from multiple processes
[09:47:59] <programmar> oh
[09:48:01] <programmar> ok
[09:48:38] <blei86> i think it might be more efficient though to memory map a file on your ramdisk
[09:49:43] *** Quits: dthpulse (~quassel@podciarou.sk) (Client Quit)
[09:49:45] <blei86> you'll need to coordinate between your processes to make sure you don't clobber
[09:50:14] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[09:50:23] <programmar> yea for file i usually get one script to monitor the change in the file through its mtime
[09:50:30] <programmar> if it changes then i will pick up new data
[09:50:59] <blei86> if you memory map a file i don't know if that will work
[09:51:12] <programmar> yea for memory mapping, i am not sure
[09:51:20] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:51:38] <blei86> but you can use the memory map to create a protocol
[09:52:08] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Ping timeout: 252 seconds)
[09:52:20] *** Joins: dthpulse (~quassel@podciarou.sk)
[09:52:36] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 240 seconds)
[09:52:50] <blei86> a way for processes to signal to eachother that there is data available from process X for process Y to read
[09:53:22] <programmar> well in that case, the socket sounds more ok
[09:53:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:53:26] *** Quits: AlanMD_ (~AlanMD@86.124.30.89) (Remote host closed the connection)
[09:53:44] <blei86> for example, if the PID of process X is 123, and the PID of process Y is 456, then the bit at position 579 is set to 1
[09:54:21] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[09:54:24] <blei86> Y checks for the bit periodically. if its set, Y reads the information and unsets it
[09:55:06] <blei86> the socket will require an equivalent amount of logic
[09:55:29] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:55:47] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[09:56:02] <programmar> actually detecting change in the socket is simple, all i need is just sock.recv(2000) or something like that, and if no data has change or no data is sent yet, it will keep pending like that
[09:56:16] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:57:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:58:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:59:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:01:43] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[10:02:16] *** Quits: lack (~lack@user/lack) (Read error: Connection reset by peer)
[10:02:22] *** Joins: danny_ (~danny@2600:8801:d102:1000:274f:c6dc:6120:b4ad)
[10:03:39] *** Quits: danny_ (~danny@2600:8801:d102:1000:274f:c6dc:6120:b4ad) (Client Quit)
[10:03:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[10:03:56] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:03:57] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[10:04:52] *** Joins: koo5_ (~quassel@51.140.155.227)
[10:05:08] *** Joins: lack (~lack@user/lack)
[10:06:20] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 250 seconds)
[10:06:42] *** Joins: Enitin (~Enitin@82.180.145.230)
[10:07:02] *** Joins: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl)
[10:07:04] *** Joins: noyb (~noyb@user/noyb)
[10:11:32] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[10:11:46] *** Joins: velix (~velix@user/velix)
[10:12:24] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[10:12:26] *** Joins: audiobirb (~audio@user/audio)
[10:12:57] <audiobirb> can someone tell me what's wrong with my code? https://bpa.st/GBQQ -- it stops after only a bit of processing, and in the middle gives this message: https://bpa.st/B5GQ
[10:13:32] <velix> A "PIL" question: I've got two images with alpha channels. I want to blend one image over the other by 60%. alpha_composite() works perfectly, but doesn't blend the image. I guess I need to recalculate the alpha channel. Anyone into this?
[10:14:04] *** Quits: JC5 (~X@user/jc5) (Quit: Bye)
[10:15:57] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[10:16:44] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[10:16:44] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[10:16:45] *** finn_elija is now known as FinnElija
[10:17:57] *** Joins: mmdbalkhi (~Thunderbi@185.108.96.51)
[10:18:28] *** Quits: _mantra (~mantra@216.73.163.121) (Ping timeout: 250 seconds)
[10:18:48] *** Joins: mantra (~mantra@216.73.163.81)
[10:19:39] <velix> seems like this worked: out = Image.alpha_composite(background, frontImage)
[10:19:44] <velix> sorry, frontImage.putalpha(frontImage.getchannel('A').point(lambda x: x * 0.6))
[10:19:52] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d) (Quit: Leaving)
[10:21:04] <Repiphany> There isn't just one way of blending transparent images together
[10:21:18] <velix> Repiphany: Yeah. The problem is keeping the alpha stuff :D
[10:21:25] <audiobirb> can someone tell me what's wrong with my code? https://bpa.st/GBQQ -- it stops after only a bit of processing, and in the middle gives this message: https://bpa.st/B5GQ
[10:21:51] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 252 seconds)
[10:21:59] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[10:22:12] *** Quits: mmdbalkhi (~Thunderbi@185.108.96.51) (Ping timeout: 240 seconds)
[10:22:17] <Repiphany> I mean if you go to any image processing software and look at the options for blending layers
[10:22:39] *** Joins: Enitin (~Enitin@82.180.145.227)
[10:23:15] <velix> Repiphany: Ah okay ;)
[10:23:22] <velix> Repiphany: That's why I asked for PIL ;)
[10:23:29] <velix> But problem is solved.
[10:23:48] <Repiphany> I'm just saying "blending one image over the other by 60%" is an ill-defined problem
[10:23:52] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[10:23:56] <Repiphany> But whatever works for you
[10:24:53] <velix> Repiphany: Ahh, I guess you mean something like this: https://pythonhosted.org/blend_modes/
[10:25:12] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[10:25:18] <velix> Repiphany: I just mean the basic Image.blend() way, where you mix two images.
[10:25:22] <velix> Repiphany: You're right, sorry for this.
[10:26:00] *** Joins: JC5 (~X@user/jc5)
[10:26:01] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[10:26:48] <velix> "make less opaque" or "make more transparent" would have been the right term ;)
[10:26:57] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Ping timeout: 240 seconds)
[10:27:10] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:27:17] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[10:27:19] <velix> So setting my alpha channel to 0.6 makes the image "less opaque" ;)
[10:27:24] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[10:27:45] *** Joins: Guest7375 (~vit@chello085216193138.chello.sk)
[10:28:31] *** Joins: novns (~novns@user/novns)
[10:28:56] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[10:29:21] *** Joins: raym (~raym@user/raym)
[10:29:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[10:30:18] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:30:43] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1) (Ping timeout: 256 seconds)
[10:31:06] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[10:32:21] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Client Quit)
[10:32:39] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:32:42] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[10:32:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:33:14] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[10:33:24] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[10:33:47] *** Quits: namkeleser (~namkelese@125.7.37.86) (Ping timeout: 256 seconds)
[10:35:08] *** Quits: nullroute (~nullroute@209.141.45.45) (Changing host)
[10:35:08] *** Joins: nullroute (~nullroute@user/nullroute)
[10:35:18] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:e2e4:66e2:9960:8ee5)
[10:36:48] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[10:37:15] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 252 seconds)
[10:37:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[10:38:05] *** Joins: Enitin (~Enitin@82.180.145.226)
[10:40:45] *** Joins: vanessa (~farawayas@103.160.128.7)
[10:40:54] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[10:41:02] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:41:06] *** Joins: iflema (~ian@user/iflema)
[10:41:10] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[10:41:31] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:41:51] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:bc5f:f062:c3f6:6c29)
[10:44:11] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[10:44:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:44:24] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 252 seconds)
[10:44:32] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-187.poda.cz)
[10:47:03] *** Joins: ymwm_ (~yingmanwu@110.85.123.64)
[10:48:17] *** Quits: jeho2 (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[10:49:54] *** Quits: ymwm (~yingmanwu@110.85.123.64) (Ping timeout: 252 seconds)
[10:50:01] *** Joins: Pickchea (~private@user/pickchea)
[10:52:36] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:54:45] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (Ping timeout: 256 seconds)
[10:55:44] *** Joins: ravan_ (~ravan@42.201.198.151)
[10:55:44] *** Quits: ravan_ (~ravan@42.201.198.151) (Changing host)
[10:55:44] *** Joins: ravan_ (~ravan@user/ravan)
[10:55:44] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 250 seconds)
[10:55:48] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 240 seconds)
[10:56:50] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[10:57:46] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[10:58:31] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:59:56] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[11:00:10] *** Joins: rvalue (~rvalue@user/rvalue)
[11:00:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:00:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:01:22] *** Joins: mrwick (~mrwick@user/mrwick)
[11:01:34] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:bc5f:f062:c3f6:6c29) (Quit: Client closed)
[11:02:33] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[11:03:12] *** Joins: luigibu (~luigi@93.176.153.88)
[11:03:48] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[11:04:26] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:d1c9:5252:a900:ddd8)
[11:06:10] *** Joins: manti7 (~manti7@176.10.104.94)
[11:08:51] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[11:09:00] *** Joins: Enitin (~Enitin@82.180.145.225)
[11:11:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:12:21] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:bc5f:f062:c3f6:6c29)
[11:13:04] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.143)
[11:13:44] <Zweimer> If I am using notepad++ and try to start another instance of notepad++, nothing happens since the first one is already open. I wonder how this works and how I could implement this in a python application.
[11:13:44] *** Joins: gusto (~Augustus@109.255.100.54)
[11:14:06] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 252 seconds)
[11:14:22] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.143) (Max SendQ exceeded)
[11:14:51] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.23)
[11:15:33] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[11:16:03] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.23) (Max SendQ exceeded)
[11:16:09] <han-solo> Zweimer: there seems to be `-multiInst`
[11:16:27] <han-solo> i guess you could try passing that option
[11:16:34] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.143)
[11:16:40] <tk> Zweimer: applications do a few different things to implement this. For example applications like firefox (and presumably notepad ++) need to communicate to the main application that it needs to load a new page/file and so they use some form of IPC mechanism (on linux that's usually some kind of unix domain socket) where the application first tries to talk over IPC to any pre-existing application
[11:16:42] <tk> and if this fails, it opens as normal.
[11:17:32] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[11:17:55] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[11:18:02] <tk> Zweimer: for applications which don't need this and JUST need to open once, some form of lockfile or lock is useful, on linux you can do this by opening a file and using advisory locking, this means that when the second instance tries to advisory lock the same region of the same file, it fails and it knows another instance is still running.
[11:18:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[11:18:30] <tk> Zweimer: on windows there's trick using an API I forgot, 1 sec, let me try to remember
[11:18:46] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[11:18:51] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[11:18:52] *** Joins: jay-m1261 (~jay-m@154.126.169.74)
[11:19:39] <tk> Zweimer: in any case, if you wanted to know what to look up using search engines "single instance application" would be the thing to search for. But beware, it will usually be quite OS specific.
[11:20:25] <Zweimer> tk, right but this lock-file would be still existing if there the application closed unexpectedly? Right. I will try to google a bit about this topic
[11:20:49] <tk> Zweimer: so the way advisory locking works, it doesn't matter if the file exists, the advisory lock gets dropped if the program crashes
[11:23:18] *** Quits: han-solo (~hanish@user/han-solo) (Read error: Connection reset by peer)
[11:24:38] <tk> I think on windows you can also use lock files actually, windows has some form of file locking feature too, and that will also unlock the file if the process crashes
[11:24:43] *** Joins: palasso (~palasso@user/palasso)
[11:25:05] <tk> okay, so I found out what I saw in some code I was working on years ago, on windows people use named mutexes to implement single instance applications too
[11:25:15] <tk> (that's instead of lockfiles for example)
[11:25:30] *** Joins: han-solo (~hanish@user/han-solo)
[11:27:48] *** Quits: vats (~vats@103.216.143.225) (Ping timeout: 250 seconds)
[11:28:08] *** Joins: killadi (~u0_a123@49.15.136.136)
[11:28:25] <tk> not actually sure if you can create a named mutex from python, but it's entirely likely there's some library which handles cross-platform single instancing for python which may implement this in C or something
[11:29:18] <tk> https://code.activestate.com/recipes/474070-creating-a-single-instance-application/ - okay, looks like there's a win32 library for python which you can use to do the thing I described on windows
[11:29:30] <tk> not sure about the quality of that example, just take it as a demonstration
[11:29:41] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[11:30:26] <tk> for one, I would have made a context manager instead of what's going on there
[11:30:45] *** Joins: jancoow (~jancoow@user/jancoow)
[11:30:58] *** Joins: Guest42 (~Guest42@2a01:598:8890:e938:85cd:ed75:9b2e:814)
[11:31:01] <Guest42> hi al :)
[11:31:09] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 252 seconds)
[11:31:55] <Zweimer> tk, thanks for all these tips. I will need some time to go through them :)
[11:32:25] *** Joins: user14 (~daniel@77-166-59-29.fixed.kpn.net)
[11:32:46] *** Joins: grooverman_ (~grooverma@152.250.149.49)
[11:33:52] *** Joins: NealRame (~a@89.187.163.193)
[11:34:11] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:34:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:34:38] *** Quits: grooverman (~grooverma@152.250.149.217) (Ping timeout: 260 seconds)
[11:35:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:37:13] *** Quits: killadi (~u0_a123@49.15.136.136) (Read error: Connection reset by peer)
[11:38:09] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:38:10] *** Joins: elink (~elink@user/elink)
[11:39:43] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[11:39:44] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:41:09] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:41:12] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:bc5f:f062:c3f6:6c29) (Quit: Client closed)
[11:41:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:43:03] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:43:26] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[11:43:43] *** Joins: programmar (~whatever@118.69.128.37)
[11:44:00] *** Joins: arinov (~arinov@213.194.126.155)
[11:44:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[11:44:26] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:44:35] <Guest42> I'm using py3, and i have the following function: def to_bytes(x): return x.to_bytes(2,'little')
[11:45:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[11:45:27] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[11:45:30] <Guest42> it takes 2-bytes, cast as an int by some module that shouldn't be doing that, and returns it back to bytes in the right order
[11:45:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:45:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:46:24] *** Joins: nerdbasher (~nerdbashe@rrcs-24-43-84-163.west.biz.rr.com)
[11:47:10] *** Joins: TheCat (~TheCat@user/z-cat)
[11:47:12] <Guest42> I then map() that function to the array of ints this bad module produces like with map(to_bytes,module_response), and it gives me back a tuple of bytes
[11:47:39] *** Joins: shuck (~shuck@user/shuck)
[11:47:43] <Guest42> The final step is to concatenate all these bytes, but that's where i get stuck
[11:47:58] *** Joins: andreasbuhr (~quassel@p549db9c0.dip0.t-ipconnect.de)
[11:49:04] *** Joins: ice9 (~ice9@user/ice9)
[11:50:00] <Guest42> basically b'\xd7F' + b'\x1aE' produces b'\xd7F\x1aE' which is correct, but sum( b'\xd7F' + b'\x1aE' ) gives an error
[11:50:21] <Repiphany> Guest42: `b''.join(map(....))`
[11:50:46] *** Joins: kosh (~kosh@user/kosh)
[11:50:48] <Guest42> oooh, the bytes primitve
[11:50:50] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[11:52:05] <Guest42> Thanks thats blown the whole thing open for me, i was trying int.to_bytes and bytes() and array.array, but that .join is what i needed, thanks so much :)
[11:54:15] *** Quits: _moep_ (~moep@gateway.moep.name) (Changing host)
[11:54:15] *** Joins: _moep_ (~moep@user/moep/x-3358975)
[11:54:19] *** Joins: TSDXIII (~TSDXIII@188.168.50.119)
[11:56:02] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[11:57:46] *** Joins: kosh_ (~kosh@user/kosh)
[11:58:45] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[11:59:26] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[12:00:36] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:00:49] *** Quits: upsala (~zcb@185.209.196.134) (Read error: Connection reset by peer)
[12:01:10] *** Joins: upsala (~zcb@185.209.196.134)
[12:01:20] *** gentooclimax is now known as climax
[12:02:06] *** climax is now known as gentooclimax
[12:04:12] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[12:04:56] *** Joins: ivii (~ivan@user/ivii)
[12:05:24] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[12:06:46] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[12:06:51] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:08:37] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:09:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:09:56] *** Quits: shuck (~shuck@user/shuck) (Remote host closed the connection)
[12:10:10] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[12:10:21] *** Joins: shuck (~shuck@user/shuck)
[12:10:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[12:11:30] *** Joins: xkuru (~xkuru@user/xkuru)
[12:11:37] *** Joins: vladoski (~vladoski@217.147.130.65)
[12:12:51] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[12:13:42] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[12:13:48] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[12:14:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:15:53] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[12:16:22] *** Joins: noobaroo (~solas@user/noobaroo)
[12:17:20] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[12:17:55] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[12:18:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:18:57] *** Joins: chele (~chele@user/chele)
[12:20:55] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[12:21:10] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[12:21:15] *** Joins: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl)
[12:21:25] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[12:21:36] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[12:22:48] *** Joins: lispy (~lispy@user/lispy)
[12:22:59] *** Quits: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl) (Client Quit)
[12:23:06] *** Quits: Jong (~Jong@2620:10d:c090:400::5:74b3) (Quit: Textual IRC Client: www.textualapp.com)
[12:23:16] *** Joins: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl)
[12:23:54] *** Quits: Guest42 (~Guest42@2a01:598:8890:e938:85cd:ed75:9b2e:814) (Quit: Ping timeout (120 seconds))
[12:25:00] *** Joins: killadi (~u0_a123@49.15.136.15)
[12:25:56] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:26:08] *** Quits: kostkon_ (~androirc@athedsl-393845.home.otenet.gr) (Ping timeout: 252 seconds)
[12:26:49] *** Joins: sawk (~quassel@78.6.80.66)
[12:27:03] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1)
[12:27:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:28:36] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:28:49] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:29:00] *** Joins: schumaml (~schumaml@dslb-178-002-190-022.178.002.pools.vodafone-ip.de)
[12:29:11] *** Joins: quhar (~quhar@192.162.148.48)
[12:29:20] *** Quits: killadi (~u0_a123@49.15.136.15) (Ping timeout: 250 seconds)
[12:29:56] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[12:31:43] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[12:32:34] *** Joins: slav0nic (slav0nic@python.su)
[12:33:20] *** Joins: rkta (~rkta@2001:4ba0:cafe:eaf::1)
[12:34:12] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:34:27] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:34:30] *** dcaro_away is now known as dcaro
[12:36:00] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:36:08] *** Joins: Guest42 (~Guest42@2a01:598:8890:e938:9211:2548:9a6b:cafa)
[12:36:13] <Guest42> is there a preferred pastebin?
[12:36:32] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:36:48] <Peng> https://bpa.st/+python
[12:36:54] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[12:37:30] <Guest42> Ah, i see it in topic now sorry. Here is the code i made thanks to Repiphany :)
[12:37:34] <Guest42> https://bpa.st/LKCA
[12:37:52] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[12:40:04] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[12:40:11] <rkta> Hi! When building a package with 'python3 -m build', how can I disable all asserts (like 'python3 -O' does)?
[12:40:19] *** Joins: x_kuru (xkuru@user/xkuru)
[12:40:24] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[12:40:27] *** Joins: oliver1 (~oliver@thunix.net)
[12:41:51] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[12:42:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:42:44] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4.1)
[12:43:30] <Guest42> It works great btw, i only show it to show this was really helpful, and how silly industrial dataformats/protocols are - returning two ints instead of a float hehe
[12:44:07] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[12:44:15] *** Quits: TSDXIII (~TSDXIII@188.168.50.119) (Quit: Leaving)
[12:44:40] *** Quits: noobaroo (~solas@user/noobaroo) (Remote host closed the connection)
[12:44:41] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[12:45:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:45:29] *** Joins: tapeworm (~tapeworm@188.168.50.119)
[12:45:56] <mav`rik> Guest42: Given situations like this, it might also be worth considering something like the struct module, if there's more like this in your code/protocol?
[12:46:46] <Guest42> mav`rik i make use of struct.unpack in that code, it's how i went from 2x 2byte ints, to a float
[12:46:59] <Guest42> oh but you mean, thre might be functionality in struct that dos even more than that
[12:47:06] *** Joins: Furai (~Furai@furai.pl)
[12:47:37] *** Seto_Kaiba is now known as hunterkll
[12:48:00] <mav`rik> Guest42: just because I'm curious, what's the protocol?
[12:48:02] <Guest42> yeah i should look more into struct. When i was a datascientist 5 years ago i used it all the time, in python 2.7 hehe. it was super fast, particularly in pypy
[12:48:14] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[12:48:57] <mav`rik> Guest42: it's not something awful like SAS transport or similar is it?
[12:49:14] *** Quits: ngp (~ngp@199.180.249.183) (Ping timeout: 252 seconds)
[12:49:57] <Guest42> Hahah well it basically is, except rather than point-to-point it has multiple slaves and one master
[12:50:12] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:50:34] <Guest42> it's called MODBUS, which was developed by a bunch of industries together as a sort of open standard, uses 2 wires (usually i use ethrnet twisted pair)
[12:51:16] <Guest42> and you daisy chain a bunch of MODBUS things along those two wires, and you can address them individually, read and write small amounts of data. here i'm talking to energy meters
[12:51:23] <mav`rik> Guest42: Although I appreciate you may be enjoying the work, you know that there's already a complete modbus protocol implementation on pypi?
[12:52:03] <Guest42> Haha, yes yes:)  I'm not reinventing any wheels here with struct, this is how its suppoed to be done xD
[12:52:33] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[12:52:34] <Guest42> The MODBUS protocol is so old, its specification differentiates reading "registers" of several bytes, and "coils" of 1 bit
[12:52:40] <Guest42> idk if you can even still buy coils
[12:52:47] <Guest42> 1 bit of memory lol
[12:52:50] *** Joins: tejr (~tejr@user/tejr)
[12:52:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[12:53:01] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 240 seconds)
[12:53:04] <Guest42> So there's no real standard for how to store floats, since floats came later
[12:53:58] <Helle> oooof modbus is painful
[12:54:06] <mav`rik> Guest42: Just in case (supports network, register, and binary transfer methods - like the coils) - https://pymodbus.readthedocs.io/en/latest/readme.html - also has support for 16 and 32 bit floats
[12:54:15] *** gentooclimax is now known as climax
[12:54:16] <Helle> but yes, pymodbus works
[12:54:25] <Helle> I've used it to talk to some electrical meters
[12:54:32] <Guest42> Thanks both i'll take a look :)
[12:54:57] <Guest42> Helle that's exactly what im doing :D
[12:55:07] <Helle> Guest42: well, you may be in luck then
[12:55:12] *** climax is now known as gentooclimax
[12:55:58] <Guest42> I'm hoping to see if i can write an AI that learns my house electricity usage patterns and can see from how the enrgy is used what it thinks is currently on
[12:56:38] *** Joins: Enitin (~Enitin@82.180.145.226)
[12:56:54] <Helle> well, there are commercial products that do just that
[12:57:16] <merijn> TIL: the interpreter will just crash if you import a sufficiently large source file :)
[12:58:07] <mav`rik> As with my question from yesterday, I'm looking for opinions on profiling tools. In particular I was hoping for something that exports HTML or similar so I can move the output from a remote machine to anything else and not need to install something like kcachegrind or whatever for exploration before modification
[12:58:26] <mav`rik> merijn: :D How large are we talking?
[12:58:48] <merijn> mav`rik: tbh, I've spend several weeks investigating various profiling tools and I'm not impressed with any of them :\
[12:58:53] <merijn> mav`rik: 700ish MB
[12:59:01] *** Joins: dsrt^ (~dsrt@65.240.140.18)
[12:59:28] <mav`rik> merijn: I've kinda been hoping for something like nytprofhtml (flame graphs, multiple pages per module involved - interlinked, etc.)
[13:00:32] *** Joins: leighbb (~leighbb@user/leighbb)
[13:00:32] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[13:00:33] *** Quits: Guest42 (~Guest42@2a01:598:8890:e938:9211:2548:9a6b:cafa) (Ping timeout: 256 seconds)
[13:00:40] <merijn> I've been playing around with scalene, which claims to generate by-line profiling information, but in reality mostly generates output that list 5 lines, nothing else, and doesn't report memory usage
[13:00:58] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[13:01:26] <kosh_> well you did better than me, I have not gotten scalene to work and generate any useful output for me
[13:01:30] *** kosh_ is now known as kosh
[13:01:36] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[13:02:03] <kosh> profiling is one of areas of weakness for python
[13:02:10] <merijn> kosh: To be fair, my output wasn't useful either, so I only got to "work"
[13:02:33] <merijn> kosh: CPU profiling seems reasonably doable still, but memory profiling is turning out to be a nightmare
[13:02:39] <Repiphany> I've used snakeviz with cProfile but that's not exactly exporting an html
[13:02:48] <kosh> profiling with multiprocessing and subprocesses is a problem
[13:02:55] <merijn> kosh: Oh, yeah, that too
[13:03:11] <kosh> that is what all my software is
[13:03:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:04:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:05:16] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:d1c9:5252:a900:ddd8) (Remote host closed the connection)
[13:05:23] *** Quits: death916 (~death916@user/death916) (Read error: Connection reset by peer)
[13:05:45] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[13:07:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[13:09:35] *** Joins: Amadiro_ (~Amadiro@45.154.138.41)
[13:09:46] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:10:09] *** Joins: bahamas (~lucian@86.120.77.115)
[13:10:58] *** Joins: _vanessa_ (~farawayas@103.160.128.7)
[13:11:36] *** Quits: Amadiro (~Amadiro@45.154.138.41) (Ping timeout: 245 seconds)
[13:12:46] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Remote host closed the connection)
[13:13:32] *** Quits: vanessa (~farawayas@103.160.128.7) (Ping timeout: 250 seconds)
[13:14:09] *** Quits: botfathe1 (~botfather@shell2.dds.nl) (Remote host closed the connection)
[13:16:30] *** Joins: ^vanessa^ (~farawayas@103.160.128.7)
[13:16:31] *** Quits: Speed2u (~Speed2u@bnc.speed2u.nu) (Quit: ZNC - https://znc.in)
[13:17:33] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:17:33] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:19:10] *** Quits: _vanessa_ (~farawayas@103.160.128.7) (Ping timeout: 250 seconds)
[13:19:35] *** Joins: Speed2u (Speed2u@bnc.speed2u.nu)
[13:20:17] <tarel2> Does  python have frameworks for dealing with touch screens , gps and stuff like 4g radios?
[13:20:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[13:20:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:21:13] <mav`rik> tarel2: what's the goal you're trying to achieve? Python would normally sit "above" a lot of that lower level tooling (and use libraries and drivers written at lower levels).
[13:21:24] *** Joins: ice9 (~ice9@user/ice9)
[13:21:44] <tarel2>  I'm new to Python , and I have a Linux phone. so was wondering could I do mobile apps for it?
[13:22:40] *** Joins: alt (~alt@89.105.120.180)
[13:22:53] <mav`rik> tarel2: Sure, I suspect if it's capable of having a python runtime on it then you'd use whatever graphics toolkit was on the phone and have access to touch points/multi-touch, gps from a library, and plain-old kernel-based networking like every other application
[13:22:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:24:01] <tarel2> Wow, it nice to know that could be in the future
[13:24:15] <tarel2> I love mobile , so much
[13:24:18] <merijn> kosh: Incidentally, any other profiling tools besides scalene that you liked?
[13:24:52] <kosh> merijn, not so far, I am doing a test with vtune to see how well that works for parallel processing python
[13:25:17] <merijn> I like VTune, but I don't think you'd get any useful python output for it
[13:25:23] <merijn> At least, I haven't tried so far :p
[13:25:34] <kosh> it is theoretically supposed to support it
[13:25:55] *** Quits: alt (~alt@89.105.120.180) (Client Quit)
[13:26:24] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[13:26:42] <merijn> Sure, in theory :)
[13:26:47] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[13:27:11] <kosh> it is working on processing some results I just had it do, it is taking quite a while
[13:27:17] <kosh> so if you hang around I will let you know
[13:27:34] <tarel2> so kosh what are you doing?
[13:27:47] <kosh> profiling a multiprocess python program
[13:28:02] <mav`rik> kosh: for 7 years or so now :)
[13:28:51] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 252 seconds)
[13:29:35] *** Joins: bahamas (~lucian@86.120.77.115)
[13:29:49] <mav`rik> More seriously though, are the authors of profiling tools expecting us to simply be on the same box the process is running, and interacting with it, or to pull out a pstats file then massage that into some otherwise-acceptable format?
[13:30:13] <mav`rik> Maybe I should be looking at pstats-specific tooling rather than the profiling libraries themselves
[13:30:23] <kosh> I don't think any of these systems require you to be on the same machine
[13:30:32] *** Joins: wattux (~wattux@2a02:238:f014:472:9d25:74c8:7973:4cf3)
[13:30:34] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[13:30:45] <kosh> cProfile, scalene, vtune etc. can all be run on the remote machine with the code and you can then transfer the results
[13:30:50] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:31:16] <kosh> the profiler itself does have to run on the same systems the code is running on but there is no way around that
[13:31:31] *** Quits: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e) (Read error: Connection reset by peer)
[13:31:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:31:35] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 252 seconds)
[13:31:47] <mav`rik> kosh: Right, the options are either taking the stats dump and massaging it, or using something akin to a repl. Unlike (say) Java where you often have a network connection to the profiler hook or similar, and a family of tools that are used to that mechanism
[13:31:51] *** Quits: src (~src@user/src) (Quit: leaving)
[13:32:10] *** Joins: onichomp (~onichomp@2806:264:4408:1e2:4808:483a:1d4d:5a15)
[13:32:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:32:30] <kosh> I mean if you want to have accurate profiling information the profiler has to run on the system you are profiling, if you do it over the network you would have network latency in there
[13:32:37] <mav`rik> kosh: the frustrating part is that the "take that stats dump" bit seems to have very few tools available for it. If you know of some good ones I'd love to hear about them
[13:32:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:32:47] <kosh> for all the stuff I am profiling at least the network overhead would completely swamp anything I am trying to profile
[13:32:54] *** Joins: marcello42 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de)
[13:33:29] <kosh> cProfile can write to a file and snakeviz and other tools can visualize it, vtune has a cli collector and then use the gui to view it
[13:33:42] <mav`rik> kosh: Sorry, perhaps I've added some confusion here. Yes, the profiling has to happen on the machine itself, but the mechanism for communicating with the profiler is basically self-managed. Either spool it to a filehandle, or...
[13:34:30] <mav`rik> kosh: there's nothing like network-accessible "breakpoints" for profiling for example, that I'm aware of
[13:35:12] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[13:35:15] <kosh> I think that vtune and visual studio can profile over a network connection if the appropriate software is installed on the other end but I am not 100% sure about that
[13:35:27] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[13:36:56] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[13:37:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[13:37:07] *** Joins: ubert1 (~Thunderbi@2a02:8109:9880:303c:31df:b3e1:641b:a10f)
[13:37:51] *** Joins: onichomp666 (~onichomp@177.231.44.9)
[13:37:59] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[13:38:43] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[13:39:18] *** Quits: onichomp (~onichomp@2806:264:4408:1e2:4808:483a:1d4d:5a15) (Ping timeout: 252 seconds)
[13:39:36] *** Joins: marenz (~marenz@dynamic-089-014-118-113.89.14.pool.telefonica.de)
[13:41:22] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[13:41:41] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[13:41:42] *** Joins: tomg (~tomg@user/tomg)
[13:42:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:42:28] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:42:47] *** Quits: errst (~errst@user/errst) (Quit: leaving)
[13:43:02] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:44:53] <kosh> merijn, vtune is still at only 25% progress on analyzing the profile data, so it is taking far longer than it took to run the program
[13:45:22] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[13:45:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[13:46:14] <mav`rik> kosh: Do you do statistical, or full, profiling?
[13:46:28] <merijn> mav`rik: vtune has a simple wrapper executable that generates stats and then a separate GUI program for exploring them
[13:47:15] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[13:49:16] <kosh> mav`rik, I don't remember what I set it to do
[13:50:02] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:52:16] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[13:52:37] *** Joins: quhar (~quhar@192.162.148.48)
[13:52:45] *** Joins: vats (~vats@103.216.143.225)
[13:53:20] *** Quits: quhar (~quhar@192.162.148.48) (Client Quit)
[13:53:41] *** Joins: quhar (~quhar@192.162.148.48)
[13:55:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[13:56:29] *** Joins: darksun (~darksun@user/darksun)
[13:56:39] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 256 seconds)
[13:57:01] *** gentooclimax is now known as climax
[13:58:14] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[13:59:31] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[14:00:28] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:00:37] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[14:03:23] *** Quits: rigid- (~rigid@user/rigid) (Quit: +++ ATH)
[14:03:48] *** Joins: killadi (~u0_a123@49.15.136.49)
[14:03:55] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:04:01] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:04:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[14:05:22] *** Joins: rigid (~rigid@user/rigid)
[14:05:33] *** Quits: wattux (~wattux@2a02:238:f014:472:9d25:74c8:7973:4cf3) (Quit: Client closed)
[14:06:32] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 240 seconds)
[14:07:02] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[14:09:17] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 240 seconds)
[14:10:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[14:10:24] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[14:11:15] *** Joins: wyclif (~wyclif@user/wyclif)
[14:11:17] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:11:28] <tarel2> astring = "Hello world!"
[14:11:28] <tarel2> print (astring[3:7:2]) , why does output l
[14:12:03] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[14:13:41] <zamba> anyone developed with soap here? i want to "reverse engineer" a protocol that i have captured over packet capture.. so i see the data going back and forth.. but from what i understand soap is kind of like xmlrpc, that there is a declaration which then in turn will create "functions" and definititions? is there a way i can figure out this using the packet capture?
[14:13:52] <zamba> i'd rather not be implementing soap manually over http
[14:14:02] <zamba> i see there's a header "SOAPAction" here
[14:14:08] *** Joins: iffy (~iffy@autodiscover.gastops.com)
[14:14:11] <zamba> and i see there's a module called zeep for python
[14:14:26] *** Joins: botfather (~botfather@shell1.dds.nl)
[14:14:38] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[14:15:02] <zamba> and also references to: http://schemas.datacontract.org/2004/07/KeyReaderTypes
[14:15:15] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[14:15:24] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:15:42] *** Joins: mickey (~user@user/mickey)
[14:15:49] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[14:15:49] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[14:16:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:16:36] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[14:16:43] *** Joins: wyclif (~wyclif@user/wyclif)
[14:18:00] *** Joins: drogas (~drogas@jump2.jet.uk)
[14:18:32] *** Quits: killadi (~u0_a123@49.15.136.49) (Read error: Connection reset by peer)
[14:20:46] <jinsun> tarel2: it outputs l and a space after that, 3:7:2 would give you the 3rd and 5th item, because the step size is 2 and it stops when it reaches 7, and the end point is excluded
[14:21:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:22:12] *** Joins: wyclif (~wyclif@user/wyclif)
[14:22:29] *** Joins: _vanessa_ (~farawayas@103.160.128.7)
[14:22:43] *** Quits: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se) (Ping timeout: 256 seconds)
[14:24:56] *** Quits: ^vanessa^ (~farawayas@103.160.128.7) (Ping timeout: 252 seconds)
[14:29:59] <kosh> okay so vtune for python kind of sucked
[14:30:10] *** Joins: shad (~shad@user/shad)
[14:31:34] *** Joins: cdown (~cdown@163.114.131.1)
[14:32:18] <iffy> I may ask for help once I give up debugging this issue,
[14:33:00] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[14:33:45] *** Joins: han-solo (~hanish@user/han-solo)
[14:34:00] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[14:34:28] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[14:34:34] *** Joins: cebor (~cebor@user/cebor)
[14:34:39] <strk> is there an easy way to *check* for indentation consistency w/out executing the whole script ?
[14:34:59] <strk> as python3 became less tolerant about indentation (python2 did run the script just fine)
[14:36:44] <strk> if password is not None: # <-- invalid syntax, how to make it valid in python3 ? (was valid in python2)
[14:37:05] <jinsun> there is a compile built-in function https://docs.python.org/3/library/functions.html#compile but you have to give it code as string
[14:37:36] *** Quits: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138) (Ping timeout: 252 seconds)
[14:38:01] *** Quits: vats (~vats@103.216.143.225) (Ping timeout: 256 seconds)
[14:38:15] <jinsun> you can just run flake8 on your code I think, it complains about SyntaxErrors too, not sure if it catches all of them though
[14:38:25] <fakenullie> strk: as you pasted it it's still valid in python 3
[14:38:34] <fakenullie> strk: something else must be wrong
[14:39:02] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:39:19] <fakenullie> strk: as a guess, you may have print call without parens somewhere
[14:40:53] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[14:41:13] <strk> yeah, it was indentation...
[14:41:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:42:11] <kosh> hmm I did not notice a difference between python 2 and python 3 for indentation
[14:42:49] <kosh> should be 4 spaces for indentation and any IDE should auto convert tabs to spaces
[14:43:12] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:43:18] <jinsun> in python 2 I think tabs are treated automatically like 4 (or 8) spaces, python3 doesn't let you mix tabs and spaces
[14:43:24] <kosh> and python should have never allowed tabs in the first place because he python defined tabs is not what tabs are
[14:43:55] <kosh> yeah don't mix tabs and spaces, use spaces only and the default for an IDE should be to convert
[14:44:50] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:379:fde4:2cd5:b47f)
[14:45:32] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:45:33] <jinsun> but it doesn't just give a unhelpful SyntaxError in 3.10 at least, I get "TabError: inconsistent use of tabs and spaces in indentation"
[14:46:04] <jinsun> so it would be very obvious from the error message that the rest of the code is not the problem
[14:46:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[14:47:14] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[14:47:22] <mrwick> is there a difference between using string.ascii_letters and typing the letters out for a string when randomising for a password?
[14:47:35] *** Quits: Xano (~Xano@2a00:23c4:4204:700:d26c:4411:a98c:bf02) (Remote host closed the connection)
[14:47:41] *** Joins: Xano_ (~Xano@host86-157-207-90.range86-157.btcentralplus.com)
[14:48:11] *** Joins: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt)
[14:48:13] <mrwick> looking make some code more readable that does a ''.join(random.sample(<all the letters and numbers>, 16))
[14:48:29] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[14:48:49] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[14:49:09] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[14:49:10] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[14:49:52] <jinsun> if you type all the letters out correctly and in the same order there won't be any difference
[14:49:56] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 245 seconds)
[14:50:28] <jinsun> string module just types it out for you, not doing anything fancy, https://github.com/python/cpython/blob/main/Lib/string.py#L25-L27
[14:50:30] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[14:50:39] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[14:51:31] *** Quits: user14 (~daniel@77-166-59-29.fixed.kpn.net) (Quit: Leaving)
[14:51:44] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4.1)
[14:51:51] <han-solo> also there's `secrets`
[14:51:54] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:52:38] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[14:52:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[14:53:12] <mrwick> actually, their string includes an extra 0: 'abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'
[14:53:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[14:53:32] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:53:51] <stdInOut> hello! :) I can't figure where the xpath goes wrong here; https://bpa.st/7VJQ   can you help me please?
[14:54:19] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[14:54:26] *** Quits: Xano_ (~Xano@host86-157-207-90.range86-157.btcentralplus.com) (Remote host closed the connection)
[14:54:36] <fakenullie> mrwick: who's string?
[14:54:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:54:44] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:5ae4:c47f:a4f1:7f31)
[14:55:19] <mav`rik> kosh: what about vtune sucked for you?
[14:55:31] <fakenullie> mrwick: I'd argue that the result would be the same as string.ascii_letters + string.digits, except probability of 0 being chosen
[14:55:32] <stdInOut> sorry, correction; https://bpa.st/TU5Q
[14:55:46] <kosh> mav`rik, it mostly just gave me profiling information on the underlying c libraries and didn't show much on the python side
[14:57:01] <fakenullie> even with enable python code analisys?
[14:57:08] *** Joins: luigibu (~luigi@93.176.153.88)
[14:57:32] <stdInOut> and an addition ; https://bpa.st/VBJQ
[14:57:38] <kosh> fakenullie, I followed the instructions here https://www.intel.com/content/www/us/en/develop/documentation/vtune-help/top/analyze-performance/code-profiling-scenarios/python-code-analysis.html
[14:57:52] <fakenullie> yeah, that's strange
[14:58:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:58:45] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 256 seconds)
[14:58:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:59:18] *** Joins: Enitin (~Enitin@82.180.145.223)
[14:59:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:00:02] <mav`rik> stdInOut: does the `get` actually return content? Is there a reason you're escaping the quotes in your call to find_element_by_xpath?
[15:01:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[15:02:43] <fakenullie> stdInOut: it's more related to selenium than python actually
[15:03:36] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[15:03:39] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[15:04:15] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[15:04:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[15:06:56] *** climax is now known as gentooclimax
[15:07:15] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 250 seconds)
[15:07:59] <iffy> Hey so given this code, https://bpa.st/2THA I create some tech objects in input.py and I can access the values directly from the object in main and make sure that they have a name set, and there are days in the schedule, however when I try to access these values in the method scheduleJob() it prints none and len() ==0.
[15:08:12] <iffy> Can you give me an idea of why this is?
[15:08:17] <stdInOut> mav`rik, it was just a trial. I also typed it without escapes
[15:08:28] <stdInOut> but same result
[15:10:01] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Quit: Quit)
[15:10:11] *** Joins: roped (~lonely_@user/roped)
[15:10:49] <stdInOut> fakenullie, yes, a lot of different things make up python's text search
[15:10:54] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[15:11:15] <fakenullie> stdInOut: the error is coming from javascript driver code
[15:11:52] <fakenullie> at browser side
[15:12:53] <roped> is it a bad idea to do pip install --user as root?
[15:13:26] <Yhg1s> roped: yes.
[15:13:45] <fakenullie> doing pip install as root is a bad idea
[15:13:52] <fakenullie> maybe acceptable in a container
[15:13:55] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[15:13:59] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[15:14:26] *** Joins: Guest5497 (~Guest54@2620:10d:c092:400::4:3a1c)
[15:14:33] <iffy> I'm only asking because I thought referred to the value contained in the instance
[15:14:43] <mav`rik> iffy: where do the schedule entries get added?
[15:14:56] <roped> is there a general alternative to this? I need to run a python script as root, it requires a third party package that's not packaged into vanilla repo of my Linux distro. how should I get that package if not through pip install?
[15:16:00] *** Quits: _vanessa_ (~farawayas@103.160.128.7) (Quit: Leaving)
[15:16:09] <mav`rik> roped: python -m venv some/directory/name ; some/directory/name/bin/python -m pip install the_package  - after that you can use the installed package from within the virtualenv
[15:16:26] <bookworm> or write a proper OS level package
[15:16:41] <roped> mav`rik, what about pyenv? would that work?
[15:16:43] <Yhg1s> roped: you should use pip install, just not as root and not outside a virtualenv. Create a virtualenv as an unpriviliged user, install the packages you need as that user, verify that they are the package you expected and that you trust it not to do weird things, and then run it from the virtualenv as root.
[15:16:44] <mav`rik> bookworm: I've found that way lies madness
[15:16:53] *** Joins: iffy77 (~iffy@autodiscover.gastops.com)
[15:16:57] *** gentooclimax is now known as climax
[15:17:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[15:17:04] <Yhg1s> roped: pyenv is a wholy separate thing.
[15:17:14] <iffy77> sorry mav`rik they get added before the function is called
[15:17:28] <iffy77> *method
[15:17:32] *** Joins: ocramoi (~ocramoi@143.107.231.30)
[15:17:33] <roped> bookworm, there is an OS level package in a third party repo, my problem is that I need to run my python script on a totally clean system before the third party repo gets hooked
[15:17:45] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Ping timeout: 252 seconds)
[15:17:46] *** Joins: PaterTemporalis (~woooopsie@bl21-200-69.dsl.telepac.pt)
[15:17:54] <iffy77> So these tech objects get initialized, the schedule gets added, then I call that method mav`rik
[15:18:02] <mav`rik> roped: pyenv is a mechanism for having multiple separate python installs, it's not the same as a virtualenv. Consider a virtualenv a bit like an npm package tree, each one separate from others so you don't have conflicting installs in one place
[15:18:17] <fakenullie> roped: install it in a user venv, then run as root
[15:18:36] <mav`rik> iffy: could you include some part of that in the example sufficient to demonstrate the problem (that is, if I ran your code, I'd see the same issue)?
[15:18:49] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:18:49] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:19:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:19:16] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[15:19:23] *** Quits: iffy (~iffy@autodiscover.gastops.com) (Ping timeout: 256 seconds)
[15:19:35] *** Joins: f1se4 (~f1se4@213.195.113.45)
[15:20:28] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:20:29] <Yhg1s> iffy77: you'll really have to show us the code that does all that.
[15:20:48] <roped> fakenullie, how's root going to pick up the environment from the regular user, so python run as root sees the third party things intalled into user's venv?
[15:21:28] <fakenullie> roped: by sourcing activate of user's venv
[15:21:49] <fakenullie> roped: or running python from user's venv
[15:22:49] <roped> all of this is more complex than it should be :D
[15:23:24] <fakenullie> thinking about it I see no extra security over just running pip install --user as root
[15:23:25] *** Joins: bloody (~bloody@user/bloody)
[15:23:37] <mav`rik> roped: package-management _is_ complex by its nature. You're hoping for an easy solution to a complex problem. You _could_ "just" pip install as root, but that has nasty follow-on effects.
[15:23:41] <fakenullie> same code will be downloaded and then run as root
[15:23:48] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:5ae4:c47f:a4f1:7f31) (Ping timeout: 252 seconds)
[15:23:59] *** Joins: zeden (~zeden@user/zeden)
[15:24:07] <mav`rik> fakenullie: that still has issues if you've installed other packages by the same mechanism which have conflicting dependencies, and it's hard to clean up after
[15:24:21] <fakenullie> mav`rik: --user shouldn't affect the system
[15:24:42] <roped> mav`rik, hence I asked about pip install --user as root rather than pip install as root (which would interfere with system wide python packages that will be installed later via the OS package manager rather than pip)
[15:24:44] <mav`rik> fakenullie: no, but it affects other --user - installed packages, they're all in root's user namespace
[15:24:45] <fakenullie> but it could be messy on its own, I agree
[15:24:54] *** Quits: nerdbasher (~nerdbashe@rrcs-24-43-84-163.west.biz.rr.com) (Ping timeout: 252 seconds)
[15:25:01] <roped> fakenullie, correct, --user should not affect the system, but root is kinda special user
[15:25:03] <fakenullie> roped: still better to use venv
[15:25:14] <jinsun> roped: pip install --user is trouble without even root, make a venv
[15:25:15] <fakenullie> that way you don't have anything else to cleanup after
[15:25:27] <mav`rik> The beauty of a venv is you can just throw it away when you're done with it.
[15:26:29] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[15:26:36] <fakenullie> or forget it and pick it up when you need it again
[15:26:44] <mav`rik> You (generally) only want this stuff to be apparent to the code which needs it, hence the importance of a venv, it allows you to encapsulate an individual program's dependencies.
[15:27:36] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:28:54] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1) (Ping timeout: 260 seconds)
[15:30:05] <roped> mav`rik, fine, is it safe to do python -m venv as root then?
[15:30:19] <roped> or do I still need a regular user?
[15:30:43] *** Quits: iffy77 (~iffy@autodiscover.gastops.com) (Ping timeout: 256 seconds)
[15:30:54] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:31:38] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[15:31:48] <mav`rik> roped: "it depends" is the short answer. If you trust the package-build and installation mechanism of the library and its dependencies, sure. Otherwise it might be safer to use a user-venv. Is there a reason this needs to be run by root?
[15:31:48] *** Quits: ubert1 (~Thunderbi@2a02:8109:9880:303c:31df:b3e1:641b:a10f) (Remote host closed the connection)
[15:32:19] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:32:20] <mav`rik> roped: This is less a python-specific issue than a Unix privilege and security one though
[15:32:45] <roped> mav`rik, well, because my script has to be run as root
[15:32:55] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[15:32:59] <mav`rik> roped: If this is the kind of box you'd happily do curl https://some.url | bash, then go for it :)
[15:33:43] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:33:53] <roped> got it, thank you
[15:34:31] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[15:35:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:35:48] *** Quits: ocramoi (~ocramoi@143.107.231.30) (Ping timeout: 240 seconds)
[15:36:06] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:37:45] *** Joins: lakrass (~lakrass@user/lakrass)
[15:40:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[15:41:02] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:379:fde4:2cd5:b47f) (Quit: Konversation terminated!)
[15:41:02] *** Quits: schumaml (~schumaml@dslb-178-002-190-022.178.002.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[15:43:03] *** Parts: velix (~velix@user/velix) (Leaving)
[15:43:28] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:44:05] *** Joins: jmd (~user@de.cellform.com)
[15:45:49] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[15:46:04] *** Rust is now known as stella
[15:46:19] *** Joins: schumaml (~schumaml@dslb-088-067-050-250.088.067.pools.vodafone-ip.de)
[15:46:26] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:46:56] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[15:48:14] *** Quits: jeho1 (~jehoshaph@user/jehoshaphat) (Ping timeout: 250 seconds)
[15:49:11] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[15:49:52] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[15:49:58] *** Joins: chl (~chl@195.249.211.252)
[15:50:09] *** Quits: chl (~chl@195.249.211.252) (Changing host)
[15:50:09] *** Joins: chl (~chl@user/chl)
[15:50:52] <chl> Has anyone struggled with sftp speed using the pysftp module?
[15:51:41] *** Quits: schumaml (~schumaml@dslb-088-067-050-250.088.067.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:52:05] <strk> the str vs. bytes thing, in python3... is there any way to suffer less ? Like strict typing in function signatures ?
[15:52:29] <strk> or do I basically need to document each function now to express what type I want as input ?
[15:52:33] *** Joins: schumaml (~schumaml@dslb-178-007-206-164.178.007.pools.vodafone-ip.de)
[15:52:34] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[15:53:16] *** Quits: cypostres (~cypostres@user/cypostres) (Read error: Connection reset by peer)
[15:53:18] <mav`rik> strk: do you have an example of a problem you're having? Use of something like mypy might help indicate the problem before runtime, but most people I'm aware of haven't had an issue with this in quite a while since migration from 2.x
[15:53:29] *** Joins: callq (~callq@157.41.137.81)
[15:53:29] <strk> so, for example, I have code doing hashlib.md5(something)
[15:53:31] *** Joins: Bardon (~Bardon@user/Bardon)
[15:53:51] <strk> now, looking up the usage (search engine) I found this: https://docs.python.org/3/library/hashlib.html
[15:53:56] <strk> sounds pretty "official" to me
[15:53:58] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[15:54:04] *** Joins: pvergain1 (~Thunderbi@2a01:e0a:223:690:fc03:7c2:5168:2188)
[15:54:11] <callq> Sounds good
[15:54:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:54:37] <strk> in that page I don't see clearly defined WHAT md5() function wants as an argument
[15:54:37] <callq> So, I have this thing here that filters a list of dicts. `for o in [o for o in orders if (o['symbol'] == symbol)]:`
[15:54:54] <callq> Can I get a count of the items in that filtered list?
[15:54:58] *** Joins: cypostres (~cypostres@user/cypostres)
[15:54:59] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[15:55:04] <strk> mav`rik: I'll look at mypy
[15:55:05] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:55:09] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:e2e4:66e2:9960:8ee5) (Ping timeout: 252 seconds)
[15:55:09] *** pvergain1 is now known as pvergain
[15:55:27] *** Joins: georgios (~georgios@user/georgios)
[15:55:43] <strk> I'm having an hell in porting from python 2 to 3
[15:55:50] <strk> getting lots of issues about str vs bytes
[15:55:58] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:56:03] <strk> and doggy-patching w/out understanding anything about this
[15:56:08] <mav`rik> strk: hashlib expects a bytes-like object (see https://docs.python.org/3/library/hashlib.html#hashlib.hash.update for example), using a `str` as an argument would be confusing because the algorithm depends on bytes, so which encoding should be used to avoid said confusion?
[15:56:44] <strk> ok but I'm calling that function from a function of mine, which is NOT documented as to what to take in input
[15:56:47] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 256 seconds)
[15:56:52] <strk> so I'm thinking... HOW should I document what I want ?
[15:57:06] <strk> does python3 supports static typing natively ?
[15:57:10] <bpalmer> strk: one of the simplest awys is to add type annotations.
[15:57:13] <strk> or do I just have to document it above the function ?
[15:57:14] <mav`rik> strk: then it's up to your function to determine which encoding you're going to be feeding to your hashing algorithm if given a str as input
[15:57:18] <bpalmer> strk: but meaningful parameter names also help.
[15:57:18] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[15:57:45] *** climax is now known as gentooclimax
[15:57:57] <bpalmer> strk: python3 supports type annotations , which are *not* static typing, but can be used with type checkers. For example, 'def foo(s: str, b: bytes) -> int: return len(s) + len(b) + 1'
[15:58:01] <strk> ok, will use type hints for a start: https://docs.python.org/3/library/hashlib.html
[15:58:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:58:20] <strk> how do I know what hashlib.md5() returns ?
[15:58:22] <strk> what type
[15:58:31] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[15:58:34] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[15:58:49] *** Joins: codebam (~codebam@user/codebam)
[15:58:54] <fakenullie> strk: only by checking documentation
[15:59:11] <strk> sorry, hexdigest()
[15:59:17] <bpalmer> strk: help(hashlib) after you've imported, and you'll see an example.
[15:59:30] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:59:30] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 272 seconds)
[15:59:37] <fakenullie> "string object of double length"
[15:59:38] <Masklin__Gurder> Is there a neater way to replace file extensions than       ''.join(filename.split(.)[:-1])+'.ext'       ?
[15:59:44] <strk> this documentation ? https://docs.python.org/3/library/hashlib.html#hashlib.shake.hexdigest
[15:59:47] <bpalmer> strk: you can also just run it on some sample inputs and you'll see what type it returns on those (since python is dynamic, you can't rely on it alays returning the same type of things, but most functions aren't *that* dynamic)
[15:59:47] <fakenullie> strk: but you can document with type annotation
[15:59:48] <mav`rik> strk: hexdigest should always be str, as described in the docs - https://docs.python.org/3/library/hashlib.html#hashlib.hash.hexdigest
[16:00:31] *** Joins: p|q (~plq@94.54.154.86)
[16:00:34] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[16:00:55] <strk> do core lilbraries like hashlib NOT use type annotations ?
[16:01:30] <strk> because passing a str type to hashlib.md5 just tells me "Unicode-objects must be encoded before hashing", is that the effect of type hinting ?
[16:01:32] *** Quits: schumaml (~schumaml@dslb-178-007-206-164.178.007.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[16:01:45] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[16:01:46] <fakenullie> strk: it's an effect of runtime type check
[16:02:07] <mav`rik> strk: type annotations do not get checked at runtime, they've literally done something akin to if isinstance( in the code
[16:02:31] <strk> btw, if I pass encode() to the variable passed to hashlib.md5 I get: AttributeError: 'bytes' object has no attribute 'encode'
[16:03:02] <mav`rik> strk: bytes get _decoded_ to a str, bytes are created by _encoding_, it's easy to mix up
[16:03:03] <bpalmer> decode goes from bytes -> unicode ,  encode goes from unicode -> bytes
[16:03:47] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[16:03:49] *** Joins: schumaml (~schumaml@dslb-088-067-051-155.088.067.pools.vodafone-ip.de)
[16:03:54] *** Joins: audiobirb (~audio@user/audio)
[16:03:57] <mav`rik> strk: imagine it like a cipher from some sequence of symbols to English, you encode to hide your understandable text, and decode to convert back to something readable
[16:03:58] *** Joins: Xano (~Xano@2a00:23c4:4204:700:4de0:eed9:aeb0:ec02)
[16:04:42] <strk> I'm supposedly (by type hinting) taking bytes
[16:04:50] <strk> vars a, b, c
[16:04:58] <strk> then I'm building s = a + b + c
[16:05:02] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:05:04] <strk> supposedly s is also a bytes now, right ?
[16:05:25] <strk> passing s to hashlib.md5() gives me the "Unicode-objects must be encoded before hashing" message
[16:05:30] <strk> doesn't make sense, does it ?
[16:05:58] <mav`rik> strk: which would imply that a, b, c are not bytes, by inference. Is your code available somewhere, perhaps on a paste site?
[16:06:00] <strk> unless supposing that I"m *really* taking bytes in input is wrong
[16:06:00] <bpalmer> strk: you have the tools to look at this. you can print out the type(s), type(a), type(b), type(c).
[16:06:25] <strk> mav`rik: nope, unfortunately this is closed-source (for no good reason probably)
[16:06:26] <bpalmer> or print out their repr(), or step into it with a debugger.
[16:06:32] <strk> just sysadmin stuff
[16:06:44] <strk> anyway, this tells me that type hint is of not much use
[16:06:57] <strk> ie: doesn't give me an error stating that what I'm expecting is NOT being passed
[16:07:07] <bpalmer> the type annotation is of use if (and only if) you use a type checker on your code, such as mypy
[16:07:11] <mav`rik> strk: type hints are only checked with tools like mypy, the interpreter itself does not. They're simply annotations
[16:07:15] <bpalmer> there are several type checkers out there
[16:07:31] <strk> mypy will need to check at runtime I guess ?
[16:07:33] <bpalmer> you just need to set one up to run alongside your unit tests, say.
[16:07:45] <bpalmer> No, mypy will never check at runtime; it runs separately over the code.
[16:07:52] <bpalmer> its runtime is not your program's runtime.
[16:08:13] <strk> but it will need to be able to load all the imported libraries, right ?
[16:08:19] <strk> so needs to be able to actually run the code
[16:08:20] <jinsun> strk: no mypy checks your code without running it, it just looks at the annotations and infers types and decides whether they are right based on that
[16:08:42] <strk> ok will give it a try
[16:09:03] <mav`rik> strk: Unless you code is soing something odd with importlib or similar then having mypy build an ast of your code permits it to check the imports without running the code
[16:09:03] <bpalmer> strk: it will typically look at all the code without running it; for things like C modules, it can use a separate hint file that specifies what the module's types should be
[16:09:08] <strk> still needs to at least find the libraries though, I see
[16:09:12] <strk> which makes sense
[16:09:14] <strk> like: error: Cannot find implementation or library stub for module named 'ldap'
[16:09:29] *** Joins: x_kuru (xkuru@user/xkuru)
[16:09:40] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:10:02] <jinsun> yeah but it has its own logic for finding stubs and implementations
[16:10:05] <strk> and there: error: Skipping analyzing 'ldap': found module but no type hints or library stubs
[16:10:08] <strk> excellent
[16:10:10] <jinsun> it doesn't run python to fin them
[16:10:15] <jinsun> s/fin/find
[16:10:27] <strk> and ldap3 I guess is not going to be a seamless replacement
[16:10:48] <Masklin__Gurder> Is there a neater way to replace file extensions than       ''.join(filename.split(.)[:-1])+'.ext'       ?
[16:10:51] <jinsun> strk: you could see the annotation for stdlib in typeshed btw, here's hashlib https://github.com/python/typeshed/blob/master/stdlib/hashlib.pyi
[16:11:09] <strk> that that it would help: error: Skipping analyzing 'ldap3': found module but no type hints or library stubs
[16:11:31] * strk evaluates to rewrite these scripts in go :(
[16:11:50] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 260 seconds)
[16:11:53] <jinsun> strk: install https://pypi.org/project/types-ldap3/
[16:12:44] *** Joins: shuck (~shuck@user/shuck)
[16:13:02] <jinsun> normally when you see that error you should search for stubs for the library, and if you are lucky like you are right now, you will find the stubs as a separate package to install
[16:13:13] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[16:13:15] <bpalmer> Masklin__Gurder: os.path.splitext(filename)[0] + '.ext'  ?
[16:13:45] <Masklin__Gurder> bpalmer: Wouldn't that fail if there were more than one period in the filename?
[16:13:48] <strk> and those type stubs are not packaged in distributions ? just via pip ?
[16:13:56] <bpalmer> Masklin__Gurder: it doesn't fail, but it may not do what you want.
[16:14:10] <bpalmer> Masklin__Gurder: the entire notion of 'extension' gets complicated and badly defined at that point.
[16:14:10] <strk> stubs for ldap are not available either
[16:14:40] <jinsun> strk: yes annotations are optional, so some librariies don't do it in the actual package, and then another package can provide the stubs
[16:15:13] <bpalmer> Masklin__Gurder: os.path.splitext('file.ps.gz')[0] => 'file.ps'
[16:15:36] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[16:15:47] <Masklin__Gurder> Mmm, indeed. Thank you bpalmer
[16:16:10] <jinsun> Masklin__Gurder: you can use pathlib.Path(filename).with_suffix(".ext")
[16:17:39] <strk> ok, stubs installed, mypy finds no problem
[16:17:44] *** Joins: blackout69 (~blackout6@37.183.198.248)
[16:18:02] <strk> I'm still left with "AttributeError: 'bytes' object has no attribute 'encode' "
[16:18:13] <strk> for code: `return hashlib.md5(csrf_base.decode()).hexdigest()`
[16:18:53] <bpalmer> oh, with_suffix mandates the . -- that explains the weird error message I got.
[16:18:58] * hodapp removes knife from Pytorch's face
[16:19:00] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 240 seconds)
[16:19:01] <strk> sorry, for code: `return hashlib.md5(csrf_base).hexdigest()`
[16:19:26] <strk> and csrf_base.encode() turns that to `AttributeError: 'bytes' object has no attribute 'encode' `
[16:19:46] <strk> so, one error tells me that `csrf_base` is a `Unicode object`
[16:20:07] <jinsun> strk: paste the full traceback somewhere? hard to tell what's wrong from that one line, https://bpa.st
[16:20:08] <strk> as per:
[16:20:09] *** Parts: blackout69 (~blackout6@37.183.198.248) ()
[16:20:11] <strk> return hashlib.md5(csrf_base).hexdigest()
[16:20:13] <strk> TypeError: Unicode-objects must be encoded before hashing
[16:21:08] *** Quits: chl (~chl@user/chl) (Quit: Client closed)
[16:21:26] <strk> https://bpa.st/KONQ
[16:21:51] <strk> in the pasted form, I get: `Unicode-objects must be encoded before hashing`
[16:21:54] <bpalmer> strk: and did you examine the types of a and b?
[16:22:01] <jinsun> well at least that explains why mypy didn't find anything wrong
[16:22:03] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:22:03] <strk> bpalmer: nope, I didn't
[16:22:14] <Xano> I want to define a type for a callable that has one or more arguments, and of which the first argument's type is known. After reading the docs I came up with `Callable[[Reactive, ...], Any]`, but MyPy seems to interpret the ellipsis as the callable requiring a second arg... How to I indicate that any subsequent arguments may or may not exist and are irrelevant for the type?
[16:22:15] <strk> what was the syntax to print the types ?
[16:22:16] <jinsun> it ignores un-annotated functions and treats them as Any
[16:22:25] *** Joins: atharv_ (~athar@2409:4042:4c04:87e6:e52b:46d3:e3c7:8673)
[16:22:37] <jinsun> strk: type(thing)
[16:22:49] <jinsun> I mean print(type(thing))
[16:23:02] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:23:05] <Xano> (I am using protocols, but pasted the resulting type here as that's what MyPy seems to work with)
[16:23:07] <strk> ah, ok, I'll add type hinting
[16:23:08] <audiobirb> is there a way i can make raw mp3 files accessible only from certain whitelisted domains? the goal is to try to make it so that people can't download raw mp3s that i serve from my site
[16:23:38] <strk> ok adding type hinting makes mypy tell me that "b" is a str instead of a bytes
[16:23:41] <Xano> audiobirb, Nope. What is on the internet, stays on the internet. The only mitigation is to add strong authentication to your site/API
[16:23:44] <bjs> Xano: what is your actual prtocol?
[16:23:52] <jinsun> Xano: you can't do that, you can either specify all the types, or None of them
[16:24:00] <strk> but I'm surprised that a + b doesn't trigger an error, as I did see other errors around when trying to concatenate a bytes and a str
[16:24:03] *** Joins: timkofu (~timkofu@105.161.32.18)
[16:24:03] *** Quits: timkofu (~timkofu@105.161.32.18) (Changing host)
[16:24:03] *** Joins: timkofu (~timkofu@user/timkofu)
[16:24:04] <bjs> Xano: You can make a callable Protocol (i.e. one that has __call__) with types
[16:24:05] <audiobirb> Xano, let me rephrase
[16:24:11] <Xano> bjs, jinsun THe protocol: https://pastebin.com/A2VXfJni
[16:24:15] <audiobirb> Xano, make it __harder__ for people to download raw mp3s
[16:24:25] <audiobirb> like, the average user, who isn't a programer
[16:24:30] <audiobirb> wouldn't know how to download
[16:24:36] <Xano> audiobirb, Authentication
[16:24:50] <timkofu> Howdy 👋🏾
[16:24:51] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:25:02] *** Joins: han-solo (~hanish@user/han-solo)
[16:25:04] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[16:25:06] <Xano> audiobirb, If your clients are all programmatic, using HTTP Authorization headers is probably easiest
[16:25:07] <audiobirb> Xano, let me rephrase again, they'd be able to listen to the mp3s, but not download
[16:25:16] <audiobirb> the raw file
[16:25:21] <Xano> audiobirb, Listening == downloading. But that leaves DRM, perhaps
[16:25:36] <audiobirb> Xano, i'm talking about the raw file
[16:25:50] <audiobirb> spotify doesn't allow downloading of raw files (that can be played outside of spotify)
[16:26:03] <jinsun> Xano: so what's wrong with using the Protocol instead of Callable?
[16:26:03] <Xano> audiobirb, That's DRM again
[16:26:35] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[16:26:46] <Xano> jinsun, When using the protocol MyPy complains "incompatible type "Callable[[ReactiveList], Any]"; expected "ReactiveMethod""
[16:26:49] *** Joins: TheCat (~TheCat@user/z-cat)
[16:26:55] <bjs> Xano: using the protocol how?
[16:27:13] <Xano> bjs, As a type hint? Not sure I understand the question if that's not the answer :)
[16:27:26] <bjs> Xano: as a type hint where?  can you share the code that fails to typecheck
[16:27:28] <bjs> or a little example
[16:27:38] <Xano> bjs, `def register_self(decorated_function: ReactiveMethod) -> Callable: pass`
[16:27:55] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[16:27:58] *** gentooclimax is now known as climax
[16:28:13] <bjs> Xano: pass?
[16:28:15] <Xano> It's a decorator for methods on instances that are instances of the Reactive protocol
[16:28:16] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[16:28:38] <bjs> Xano: a small standalone example that fails to typecheck might be easier to follow
[16:28:42] <jinsun> Xano: https://mypy-play.net/
[16:28:50] <Xano> bjs, https://pastebin.com/qtvuB601
[16:29:00] <strk> and there's the error: TypeError: can't concat str to bytes
[16:29:58] <bjs> Xano: which line does mypy point to with the error?
[16:30:05] *** climax is now known as gentooclimax
[16:30:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:30:10] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[16:30:12] <jinsun> Xano: make a gist on mypy-play that shows the error and share that, it would be easier for us
[16:31:24] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:31:39] <Xano> bjs, it fails on line 7 https://pastebin.com/L8cCRPaa
[16:31:44] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[16:31:50] <Xano> jinsun, Let me tinker for a bit :)
[16:31:57] *** Joins: rvalue (~rvalue@user/rvalue)
[16:31:59] *** Joins: Klinda (~superleag@user/klinda)
[16:32:00] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:32:23] *** Joins: revolve_ (~u0_a227@82-132-237-67.dab.02.net)
[16:32:26] <bjs> Xano: what is `scope` ? I feel like I'm not even getting closer
[16:32:30] *** Joins: bahamas (~lucian@84.232.140.158)
[16:32:41] *** Joins: Midjak (~Midjak@82.66.147.146)
[16:33:55] <strk> ldap.search_s : does it return bytes or str ? another amletic question
[16:34:45] <strk> returns "list" (of what?!)
[16:34:59] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[16:34:59] *** Quits: wyclif (~wyclif@user/wyclif) (Read error: Connection reset by peer)
[16:35:17] <Xano> bjs, jinsun https://mypy-play.net/?mypy=latest&python=3.10&gist=3097884b5cac25db64315891795f616f
[16:35:45] <Xano> bjs, jinsun I'm getting the impression the ReactiveMethod protocol simply cannot be checked statically
[16:35:48] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[16:36:08] *** Joins: x_kuru (xkuru@user/xkuru)
[16:36:15] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Read error: Connection reset by peer)
[16:36:59] <strk> is there a way to tell python to NEVER give me str and always work with bytes ?
[16:37:05] *** Joins: ymwm__ (~yingmanwu@27.153.166.146)
[16:37:15] <strk> I just don't want to know, until I stumble upon an issue deriving from that
[16:37:31] <strk> want to get full python2 compatibility :'(
[16:37:47] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[16:38:35] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 252 seconds)
[16:39:04] *** Joins: jamea (~jamea@177.239.81.39)
[16:39:23] *** Joins: charizard (~charizard@65.113.71.138)
[16:39:24] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[16:39:25] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:39:42] *** Quits: ymwm_ (~yingmanwu@110.85.123.64) (Ping timeout: 252 seconds)
[16:40:24] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[16:40:34] *** Quits: atharv_ (~athar@2409:4042:4c04:87e6:e52b:46d3:e3c7:8673) (Quit: Leaving)
[16:41:35] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Read error: Connection reset by peer)
[16:42:12] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[16:42:12] *** Joins: cation21 (cation@user/cation)
[16:43:52] *** Joins: daoudr_ (~daoudr@gateway/vpn/pia/daoudr)
[16:44:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:45:08] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:45:39] *** cation21 is now known as cation
[16:46:17] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Ping timeout: 240 seconds)
[16:47:06] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[16:47:47] *** Quits: summonner (~summonner@188.24.40.180) (Ping timeout: 256 seconds)
[16:47:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[16:48:53] *** Joins: Guest84333 (~Guest8433@2409:891e:ca27:7dd8:f085:7485:22b2:c70b)
[16:48:59] *** Joins: daoudr__ (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[16:49:49] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 256 seconds)
[16:49:53] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[16:50:06] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[16:50:34] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[16:51:12] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:51:32] *** Quits: daoudr_ (~daoudr@gateway/vpn/pia/daoudr) (Ping timeout: 240 seconds)
[16:52:38] *** Joins: gasbag (~gasbag@024-216-149-125.res.spectrum.com)
[16:52:42] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[16:53:37] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ab61:3516:97a5:fda1) (Remote host closed the connection)
[16:53:56] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[16:55:04] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Read error: Connection reset by peer)
[16:55:42] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 260 seconds)
[16:55:47] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[16:56:02] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[16:56:20] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[16:56:26] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[16:57:02] *** Quits: Guest84333 (~Guest8433@2409:891e:ca27:7dd8:f085:7485:22b2:c70b) (Quit: Client closed)
[16:57:06] *** Quits: timkofu (~timkofu@user/timkofu) (Ping timeout: 260 seconds)
[16:57:36] *** Quits: gasbag (~gasbag@024-216-149-125.res.spectrum.com) (Quit: Leaving)
[16:57:43] <nedbat> strk: there isn't a way to do that.
[16:58:06] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1c54:444a:a40b:a91e)
[16:58:20] *** Quits: grooverman_ (~grooverma@152.250.149.49) (Read error: Connection reset by peer)
[16:58:33] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:59:44] *** Joins: summonner (~summonner@188.24.18.149)
[16:59:53] *** Joins: grooverman (~grooverma@152.250.149.49)
[17:01:36] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Quit: Quit)
[17:03:01] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[17:03:15] <mav`rik> strk: from python-ldap's documentation - Each result tuple is of the form (dn, attrs), where dn is a string containing the DN (distinguished name) of the entry, and attrs is a dictionary containing the attributes associated with the entry. The keys of attrs are strings, and the associated values are lists of strings.
[17:03:37] <charizard> Hello, i'm trying to build cpython statically and as small as possible. anybody have ideas on what can be ripped out? currently i'm just building with musl without _bz2, _curses, _curses_panel, _dbm, _gdbm, _hashlib, _lzma, _sqlite3, _ssl, _tkinter, _uuid, nis, readline, and zlib.
[17:04:43] <jinsun> Xano: hmm it is a tough one, it could be a mypy bug also that it can't tell that the function matches the protocol
[17:05:29] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[17:05:38] <SnoopJ> strk, if you're trying to write polyglot code, the `six` library has some tools that can help you. But it requires intentional use on the author's part, it isn't a silver bullet
[17:05:48] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[17:06:21] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:07:32] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:07:35] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[17:09:16] *** Quits: epicout (~epicout@user/epicout) (Quit: ZNC - https://znc.in)
[17:09:30] *** Quits: jeho1 (~jehoshaph@user/jehoshaphat) (Ping timeout: 268 seconds)
[17:09:57] *** Joins: nickodd (~nickodd@user/nickodd)
[17:10:22] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[17:11:26] *** Joins: mmdbalkhi (~Thunderbi@185.108.96.16)
[17:11:26] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 250 seconds)
[17:13:02] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[17:13:15] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 252 seconds)
[17:13:43] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:13:57] *** Joins: han-solo (~hanish@user/han-solo)
[17:14:26] *** Quits: jeho2 (~jehoshaph@user/jehoshaphat) (Ping timeout: 268 seconds)
[17:14:57] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[17:15:04] *** Joins: epicout (~epicout@user/epicout)
[17:15:26] <supakeen> I’m looking for a sort of live debugger that can show me the values in objects in real time, but does not halt execution.
[17:15:28] <dminuoso> Hi. I want to build a simplistic CLI tool that has a simple config wizard, a bunch of questions with some user input. The library Im looking for must accept predicates to validate (and potentially re-ask) the user input.
[17:15:35] <dminuoso> What options do I have?
[17:16:29] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[17:19:09] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[17:19:15] <mav`rik> supakeen: you want to be able to watch particular values as the code executes?
[17:19:32] <grym> dminuoso: `inquirer` is pretty neat
[17:19:43] <grym> and well suited to that purpose
[17:20:07] <grym> dminuoso: https://magmax.org/python-inquirer/
[17:20:09] <mav`rik> supakeen: are you using PyCharm?
[17:20:37] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[17:20:44] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[17:21:10] *** Joins: drbeco (~beco@user/beco)
[17:22:22] <supakeen> I want to watch, and it’s for non-programmers.
[17:23:02] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[17:23:10] *** Joins: Siecje (~Siecje@97.111.200.190)
[17:23:26] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[17:23:44] <mav`rik> supakeen: for non-programmers? This feels like you should be writing your code to support them, rather than trying to use functionality for debugging as a mechanism for user-visibility. Could you explain a little more about what you're trying to achieve here please?
[17:23:48] *** Joins: iffy (~iffy@gtlvpn.gastops.com)
[17:23:55] <SnoopJ> supakeen, do you want to see *all* values in a frame, or just some enumerated names?
[17:24:02] <charizard> "real time" is not likely to be useful, there are debuggers that will let you step through, showing stacks and context and variable assignments and whatnot
[17:24:29] <supakeen> Either or and I agree mav`rik it’s a weird requirement that is not mine 🙂
[17:24:33] <SnoopJ> charizard, I can see how this would be useful, and I imagine supakeen can as well
[17:24:39] <iffy> hey mav`rik I'm sorry I had to leave and my laptop died... what did you say about my code sometime about 2 - 3 hours ago?
[17:24:43] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[17:25:09] *** Joins: wakeup (~wakeup@user/wakeup)
[17:25:16] <wakeup> which channel for git?
[17:25:33] <charizard> SnoopJ maybe i'm missing something then, but seeing individual assignments change at execution speed on even the slowest modern computer would just be a blur of hundreds of changes per frame
[17:25:34] <sco1> #git is a good guess
[17:25:52] <mav`rik> iffy: I was asking if you could share some code which can be run that shows the problem your having, rather than a smaller segment which is only part of the issue.
[17:26:02] <SnoopJ> charizard, if what you're saying is "I'm not interested in this problem," fair enough.
[17:26:17] <supakeen> It’s for validation of simulation in a game loop
[17:26:19] *** Joins: iffy50 (~iffy@autodiscover.gastops.com)
[17:26:26] <charizard> I'm interested in why someone would find it useful
[17:26:31] <supakeen> Ive told them to instrument which is a fancy word for print it to console
[17:26:46] <SnoopJ> charizard, perhaps I misread "not likely to be useful" then
[17:26:59] *** Quits: Xano (~Xano@2a00:23c4:4204:700:4de0:eed9:aeb0:ec02) (Remote host closed the connection)
[17:27:02] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1)
[17:27:06] *** Joins: bahamas (~lucian@84.232.140.158)
[17:27:11] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[17:27:36] <SnoopJ> supakeen, my first thought is sys.settrace() and yank whatever you want out of the frame, but this will be a mess if you get *everything*, hence my question.
[17:27:43] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:27:51] <supakeen> Yea, that’d be messy
[17:27:56] *** Joins: nathanjell (~Nathan@64.141.52.164)
[17:27:58] <mav`rik> supakeen: One way to do this kind of thing is a _bit_ awful (and any solution you add here which makes use of debug hooks will slow your code's execution) would be to use sys.settrace with a function which prints out the content of values when a `store` opcode is executed. Not sure if that would also cover things like list inserts etc. though
[17:28:17] <supakeen> Oof, yea
[17:28:28] <SnoopJ> supakeen, but if you're looking only for certain values, I can see how it'd work like that. It would still be a perf overhead, but maybe that's something you could massage in the right direction
[17:28:28] <supakeen> But I also kind of like it
[17:28:31] <yates> if i have a series of functions a(), b(), and c(), how do i define a list, tuple, or dict of those functions that i can call? (python 3.6.9)
[17:28:38] <ldericher> If I `await` a coroutine inside another coroutine, does that block?
[17:28:46] <flower_> I'm looking to distribute my software on Linux. I see other packages using zipapp, but it has performance drawbacks if I read a doc well. What are other options? User software
[17:28:46] <bpalmer> yates: [a, b, c]  ?
[17:28:47] *** Joins: gori (~gori@revspace/participant/gori)
[17:29:06] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:29:13] <dminuoso> grym: Seems to fit my bill, thanks.
[17:29:15] <supakeen> So, it was goris question
[17:29:16] <yates> bpalmer: so fn = [a, b, c], then e.g., fn[0]()?
[17:29:23] *** Quits: mmdbalkhi (~Thunderbi@185.108.96.16) (Quit: mmdbalkhi)
[17:29:26] <bpalmer> yates: sure.
[17:29:26] <charizard> yep
[17:29:35] <gori> hello folks
[17:29:37] <supakeen> In case there are more questions about the live object view
[17:29:43] *** Quits: iffy (~iffy@gtlvpn.gastops.com) (Ping timeout: 256 seconds)
[17:29:52] *** Joins: killadi (~u0_a123@49.15.137.89)
[17:30:04] <supakeen> So we were talking about how it might be possible to trace things happening to the object.
[17:30:37] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[17:30:38] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:30:49] *** Joins: Xano (~Xano@2a00:23c4:4204:700:c9b8:3d25:86ed:5d18)
[17:31:04] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[17:31:14] <grym> yates: functions are just objects, right; you can add objects to a list.  (or a dict!)
[17:31:18] <Xano> jinsun, I was fearing that. Wouldn't be the first MyPy limitation I've run into
[17:31:29] <Xano> jinsun, bjs Thanks for taking the time to look at my problem though :)
[17:31:47] <iffy50> Referring to this code: https://bpa.st/RQZQ I create some tech objs, assign values in a main.py, then later in main.py I can access the values stored in the object by calling them directly, but calling the method I get None types and an empty schedule
[17:31:52] <supakeen> gori: It's about values in a single object right, or the entire object 'tree'?
[17:32:05] <iffy50> Do you know what could be causing this?
[17:32:11] <SnoopJ> supakeen, do you know what names you're interested in going into the live display?
[17:32:20] <bjs> Xano: jinsun: it seems the issue was the Protocol whose argument type was another Protocol which had a protocol member
[17:32:31] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[17:32:33] <supakeen> SnoopJ: It's gori's project 🙂
[17:32:48] <bjs> Xano: jinsun: the *args/**kwargs didn't seem to cause the issue from local testing, but I couldn't quite nail down (yet) exactly what happened
[17:32:49] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[17:33:04] <mav`rik> iffy50: right, and my question here is whether you could include enough of the `main.py` bit to ensure we're seeing enough to understand the problem
[17:33:12] <bjs> ldericher: depends what you mean by "block",  block what?
[17:33:18] <gori> let me restate the question, if I may. I have a energy system simulation / game, and elements of thet energy system are bing added /removed. Want to make debugging the simulation logic as easy as posible, by enabling the user to chech the inbetween state of a whole bunch of objects (~150). in a while true loop user input is taken, and the simulation elemetns modified. one option I have is that a object
[17:33:20] <gori> inspector is triggered when the user wonders of things are goign well.  I am currently using https://pypi.org/project/objbrowser/
[17:33:30] *** Quits: revolve_ (~u0_a227@82-132-237-67.dab.02.net) (Ping timeout: 260 seconds)
[17:33:38] <ldericher> bjs, does that block the main executor loop?
[17:33:39] <yates> bpalmer, grym: i just found out the functions have to be defined before you create the list
[17:33:40] <bjs> ldericher: any "await" will block that coroutine until the thing you're awaiting is done
[17:33:44] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:33:45] <gori> I wanted to keep that GUI live while the loop is runniong so tha the user can check the relevant states.
[17:33:49] <grym> yates: yes, this isn't js
[17:33:59] <yates> i guess cause python is interpreted?
[17:34:03] <bjs> ldericher: do you mean, does it break asyncio/whatever and cause everything to stop? No
[17:34:10] <grym> yates: python doesn't like "maybe this is a name"
[17:34:11] <yates> grym: or c++
[17:34:23] <iffy50> mav`rik there are many files
[17:34:25] *** Joins: shuck (~shuck@user/shuck)
[17:34:42] <iffy50> Give me a min
[17:34:53] *** Joins: purple_cthulhu (~rax@188.214.96.29)
[17:34:55] <gori> SnoopJ: there are about 20-30 properties of the objects that we migt be interested in, many are lists/sets with varyign content, and we might want o chech any of the list elements
[17:35:03] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-44bf-6e8e-94ff-564e.res6.spectrum.com)
[17:35:07] <supakeen> gori: Since I like explicitness, you likely have some sort of 'registry' of these objects, you could create a single function that on keypress (or signal or such), gets executed that loops through all the objects and outputs them.
[17:35:08] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[17:35:23] <ldericher> bjs, yeah, pretty much that. basically, "is it correct to `await` an async call inside an async function, or am I doing it wrong?"#
[17:35:25] <bjs> ldericher: `async def coro1(): await coro2()` then as coro1 is running, it'll pause and coro2 will run, and once coro2 is finished coro1 will continue.  Basically just like normal function calls do,  except there may be other coroutines getting switched to
[17:35:27] <bpalmer> yates: you could certainly do ['a', 'b', 'c'] and then look up those strings at runtime to see if they're bound to a function and then call that.
[17:35:31] <iffy50> mav`rik would running an import to execute the code inside the file that generates the data be the issue
[17:35:32] <bjs> ldericher: yes it's correct (and very common)
[17:35:37] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[17:35:41] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[17:35:52] <gori> supakeen: since we are using this for debugging, I do not know what object property I care about in advance.
[17:35:57] *** saroy is now known as bytehackr
[17:36:00] <bpalmer> yates: but at its core, you have to work with objects. 'def a():' is almost the same thing as 'a = lambda: ...'
[17:36:04] <han-solo> a dict would be nicer, `{'a': a, 'b': b, ..}`
[17:36:14] <gori> supakeen: so, my thoygh is, since I al also a python noob, lets use a gui object tree browser to make my life easy
[17:36:15] <bpalmer> yates: it just associates a function with a name.
[17:36:21] <ldericher> bjs, thanks. It wouldn't even matter in my current use case, but it's nice to know for when it will :)
[17:36:25] <mav`rik> iffy50: I suspect the problem is that you're modifying the wrong instance, or creating a new one and then later printing from an older one or something, hence the request to see the code where this object is being manipulated and called
[17:36:38] <jinsun> yates: the functions are not defined when the code is compiled, def statements are also code that runs at runtime, and the code is run from top to bottom and when a def statement is encountered it defines a new name with the function as the value
[17:36:48] <SnoopJ> gori, many such GUIs exist that let you drill down into the state of a program under execution, but I'm not aware of any that do so without stopping the execution of the program.
[17:37:02] *** Quits: ymwm__ (~yingmanwu@27.153.166.146) (Ping timeout: 240 seconds)
[17:37:05] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:37:05] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:37:10] <iffy50> mav`rik yeah... I get that.Give me a couple minutes please
[17:37:11] <SnoopJ> (updating the GUI alone is probably expensive relative to how quickly the program might be changing its state)
[17:37:21] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[17:37:23] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[17:37:26] <SnoopJ> but if you want to watch particular names that are changing relatively slowly I can see how this could work
[17:37:27] *** Quits: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[17:37:36] <gori> SnoopJ: right! thanks, that is most helful. I have naively assumed that I can wrap that viewer in a multiprocessing Process and just get on with my simulatiion.
[17:38:24] <grym> yates: as han-solo points out, a 'dispatch dict' is often a nice pattern. {"identifier":function_object,...}
[17:38:27] <gori> SnoopJ: speed is not relevant, this is part of a "cyber-pysical" game, for lack of abetter word, where the actuall changes are done by people physically conncting cables and such.
[17:38:54] <SnoopJ> gori, possibly you could, but the synchronization problem doesn't go away, if anything it gets worse because now you have "travel time" between the processes.
[17:39:40] <SnoopJ> gori, so I know I'm starting to sound like a broken record here, but is there a set of names you are interested in watching?
[17:39:44] <han-solo> you could write a simple decorator to do it for you `registry = {};def register(func):..registry[f.__name__]=func;return func` or something
[17:40:01] <gori> SnoopJ: right. so my current solution which displays the introspection GUI and halts the execution untill closed is probbably the most likely the easy one.
[17:40:03] <charizard> how much can i rip out of cpython before it breaks. I'm trying to make a very small cpython executable
[17:40:03] <flower_> any good alternatives for zipapp, packaging for linux?
[17:40:08] *** Joins: Guest48 (~Guest48@2601:408:8100:8270:ed89:7cb5:4c52:8e1)
[17:40:20] <flower_> or is zipapp recommended?
[17:40:41] *** Joins: favreje (~jeff@170.249.173.67)
[17:40:49] <gori> SnoopJ: my other approach was to just print the relevant states/names using the __dict__
[17:40:53] *** Joins: wyclif (~wyclif@user/wyclif)
[17:40:54] *** Quits: callq (~callq@157.41.137.81) (Ping timeout: 250 seconds)
[17:41:00] <SnoopJ> flower_, zipapp is fine if it meets your needs. shiv is good if you want a zipapp that carries its own dependencies with it. PyInstaller is also good
[17:41:02] *** Joins: stewie925 (~stewie925@2001:420:c0c8:1007::4cc)
[17:41:13] <SnoopJ> gori, does that mean "yes" to my question?
[17:41:48] <flower_> SnoopJ: thx, what is the advantage of shiv, having it's own dependencies? Better performance?
[17:42:11] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:42:11] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:42:12] <SnoopJ> flower_, the advantage is that you can use libraries that the user may not have installed and not worry about forcing them to install them to use your application.
[17:42:12] <gori> SnoopJ: :) ehm. probbably. there is a few variables that matter, and some of the are lists withother objects in them. e.g. hub.connections and connections is a list of Infrastructure objects
[17:42:14] <strk> so, type(x) returns a bytes
[17:42:29] <strk> so can't be concatenated in print('XXX ' + type(v))
[17:42:37] <strk> is this sadism ?
[17:42:45] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[17:42:53] * strk is sorry for frustration-derived anger
[17:42:55] <Guest48> print("XXX{}".format(type(v))
[17:43:02] <bjs> strk: you want to concatenate a type to a string?  maybe you want to format a string to print.
[17:43:16] <bpalmer> print('hello', b'world')
[17:43:26] <flower_> SnoopJ: and if you don't care if the user needs to install those dependecies himself? What is then the best?
[17:43:30] <bjs> strk: or are you generally struggling with bytes-vs-str?
[17:43:47] <strk> so, ldap.search_s is actually returning bytes, not strings
[17:43:56] <strk> bjs: yes, I'm generally struggling with bytes-vs-str
[17:43:58] <strk> a lot
[17:43:59] <Guest48> print("xxx", type(var))
[17:44:03] <flower_> SnoopJ: I'm also interested in best performance
[17:44:05] <strk> format() worked, thanks
[17:44:09] <Xano> bjs, I'll play a bit more (running around doing tons of other things at the same time today) but that's the impression I got as well
[17:44:20] <ldericher> bjs, btw: is `async def coro1(): await coro2()` completely equivalent to `async def coro1(): sync_routine()`?
[17:44:36] <bjs> ldericher: no,  because `coro2` isn't (or might not be) synchronous
[17:44:37] <iffy50> mav`rik https://bpa.st/QQJA
[17:44:38] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:44:43] <mav`rik> strk: which version of python-ldap are you using? It could be that when they say `string` they don't mean `str`, but instead a "string" type provided by the underlying openldap library :(
[17:44:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:44:50] <gori> SnoopJ: but thak you, your questions have been most helpful!
[17:44:52] <SnoopJ> flower_, the best performance would be for the user to install the application itself, because then there's no zip file to unpack
[17:45:41] <flower_> SnoopJ: ok and which package system I should use for that?
[17:45:46] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[17:45:51] <ldericher> bjs, can other coroutines be running while either of the sub-calls run?
[17:45:56] <bjs> strk: maybe you're looking to decode the bytes,  some_bytes.decode("utf-8") returns a str object (which is Python's text type).  Lots of libraries (especially those that interface with low level things) return bytes (like how C thinks about strings)
[17:46:00] <strk> mav`rik: "ldap" (not ldap3)
[17:46:02] *** Joins: runelind (~runelind@user/runelind)
[17:46:28] <SnoopJ> flower_, whichever one you'd like. I usually just use pip + setuptools, but there are other choices available.
[17:46:33] <strk> I still didn't make my mind around knowing whether I want to work with str or bytes
[17:46:56] <strk> but "how C thingks about strings" sounds simpler
[17:47:05] <bjs> ldericher: well, in the usual way yeah. The way something like asyncio works is that it has a bag of "runnable" coroutines,  and periodically when there's an `await` asyncio will switch which is actually currently running.
[17:47:08] <SnoopJ> strk, it is simpler, because C doesn't have them at all
[17:47:18] <flower_> SnoopJ: I see, but the user of your app, does it use pip to install your package?
[17:47:33] <bjs> strk: generally i find if you're working with text you want strings not bytes,  but low level things (e.g. networks, files etc) give you bytes so you decode()/encode() at the boundaries
[17:47:40] <flower_> SnoopJ: or just for it's dependencies
[17:47:54] <ldericher> bjs, that makes a lot of sense, actually
[17:48:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:48:48] <bjs> ldericher: so you can think of `await coro2()` as adding the coroutine to the bag, and then coro1 waits for that coro to finish.  In reality Python is a little more efficient and just starts running coro2 immediately
[17:48:52] <bjs> but it's the same idea
[17:49:05] <SnoopJ> flower_, pip can install packages and their dependencies, but it isn't the only tool that can do this.
[17:49:06] *** Joins: white2 (~mahengrui@user/mahengrui1)
[17:49:19] <SnoopJ> (it's a very common one, though)
[17:49:53] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:50:34] <mav`rik> iffy50: I don't see anything in your paste which modifies a tech instance's `schedule` (nothing appears to append to it).
[17:51:15] <SnoopJ> gori, my starting place for your problem would be writing a handler for sys.settrace() that can be configured with the names you're interested in, and updating the values tied to those names in each frame as the trace hook is called. This is generally how a debugger will approach the same task, although they usually stop execution
[17:51:29] <iffy50> mav`rik oh forgot to include that part in the paste, but it;s there
[17:51:30] <hodapp> hrmph. tried using Pyrasite to see WTF my Dask worker processes are even doing, but all it seems to tell me is that the 'bad' worker process is deadlocked somewhere in threading.py
[17:51:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:52:00] <iffy50> mav`rik I can confirm it after scheduleGen runs in main.py
[17:52:00] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:52:02] <mav`rik> iffy50: if you add prints to those loops, do they occur?
[17:52:37] <strk> bjs: some ldap values are deep in dict-like objects, encoding them all would require a loop
[17:52:41] <SnoopJ> hodapp, pyrasite can't tell you more specifically than "somewhere in threading.py?"
[17:52:46] <flower_> SnoopJ: I've seen this, but then it seems you need to upload. Or is it possible to run such *.whl file as executable or to install it in /usr/bin? https://packaging.python.org/en/latest/tutorials/packaging-projects/
[17:52:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:53:01] <strk> os.environ['something'] returns 'str'
[17:53:34] <mav`rik> strk: os.getenvb will give bytes, if that's important to you
[17:54:17] <SnoopJ> flower_, a .whl doesn't necessarily need to be uploaded anywhere, and it can be installed in a Python site using pip. If you want to put something on the user's PATH, setuptools provides entry points for that reason: https://setuptools.pypa.io/en/latest/userguide/entry_point.html
[17:54:24] <strk> as I said, I'm not sure what's important and what not, as I don't know what I can and cannot control
[17:54:30] <strk> ldap surely looks like something I can't control though
[17:54:35] <iffy50> mav`rik they run, and add stuff to the schedule list. This I confirmed to work in main.py, minimum and more.
[17:54:51] <iffy50> However very specifically running it from class turns it into a turd lol
[17:54:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[17:55:02] <SnoopJ> strk, is writing that loop prohibitively expensive or something?
[17:55:10] <mav`rik> iffy50: "running it from class"?
[17:55:46] *** Quits: purple_cthulhu (~rax@188.214.96.29) (Quit: Leaving.)
[17:55:58] <strk> SnoopJ: probably not, but highly inconvenient
[17:56:06] <SnoopJ> running theme, it seems
[17:56:16] <strk> when you're just porting from python2 to python3...
[17:56:33] <mav`rik> strk: I/O is kinda the most important part where conversion from/to a given encoding is important. For example, if someone provides a CSV file in Windows-1252 format rather than UTF-8, the outcome will be significantly different. If you receive data in a variety of encodings it can be even worse
[17:56:39] <iffy50> mav`rik sorry, I meant that when I try accessing these variables from the class, they return as empty
[17:56:43] <SnoopJ> strk, ...then you probably want the `six` library as well.
[17:56:46] <hodapp> SnoopJ: it is more specific, but what I mean is that it all things like "gotit = waiter.acquire(True, timeout)" in threading.py and it is near identical to when looking at the threads on the "good" worker
[17:56:55] *** Quits: favreje (~jeff@170.249.173.67) (Ping timeout: 256 seconds)
[17:57:02] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:fc03:7c2:5168:2188) (Ping timeout: 240 seconds)
[17:57:03] <SnoopJ> hodapp, so it's a deadlock?
[17:57:08] <hodapp> SnoopJ: looks like it
[17:57:19] <SnoopJ> :(
[17:57:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[17:58:04] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[17:58:24] <hodapp> which is still confusing the hell out of me; I narrowed it down, but barely: if the workers execute .load_from_checkpoint() from Pytorch Lightning (or init the model with its other calls), then the issue happens later
[17:58:25] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[17:59:43] <hodapp> but I can't make sense of how this could have such effects unless it's somehow setting some state that is interacting with threading
[17:59:47] <SnoopJ> I can sorta see the silhouette of how a deadlock could occur when rehydrating a model from something in storage
[18:00:05] <mav`rik> iffy50: does the `minimum` function end up printing out any names?
[18:00:30] <hodapp> the checkpoint part seems not to matter though. if I init the model with its normal call (that just allocates everything but uses random weights, not stored weights) the issue is still there.
[18:00:45] <iffy50> mav`rik yep it prints names
[18:01:28] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[18:01:40] <hodapp> I guess one simple check is to see if just putting something tiny (e.g. a tensor) on the GPU creates the same issue
[18:01:41] <mav`rik> strk: A long time back when I was porting from Python 2 to 3 I used to use a library which at the time was called unicode-nazi https://pypi.org/project/unicode-nazi/ - it was a big help.
[18:01:43] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[18:01:47] *** Joins: cebor (~cebor@user/cebor)
[18:02:09] <SnoopJ> yikes
[18:02:53] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[18:03:52] <iffy50> mav`rik Figured it out, passed self as a value however self returns None in python
[18:04:09] <Xano> bjs jinsun So https://mypy-play.net/?mypy=latest&python=3.10&gist=aefc38837c9500f63d10fa64e84f034d works without the double protocol and *args and **kwargs
[18:04:11] <iffy50> Sorry for wasting your time, but thanks for the help
[18:04:26] <mav`rik> iffy50: Only if it's been set to None somewhere, otherwise you should get a NameError or AttributeError
[18:04:27] *** gentooclimax is now known as climax
[18:04:36] <hodapp> alright, just sticking a tensor on the GPU doesn't matter
[18:04:42] <mav`rik> iffy50: Glad you found a solution though.
[18:04:42] <Xano> bjs, jinsun It fails as soon as I add *args and **kwargs: https://mypy-play.net/?mypy=latest&python=3.10&gist=ae17e0684e077ef19b305b9a3f049f4a
[18:05:00] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: need to reboot)
[18:05:27] <SnoopJ> hodapp, I guess you could break out gdb and see what the stack is like, if your runtime has (or can have) debug symbols?
[18:05:36] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[18:05:50] <iffy50> mav`rik well I call a function as functionFile.runFunction(job, self)
[18:05:58] <bjs> Xano: okay so `values` is the method and you want it to match the ReactiveMethod protocol?
[18:05:58] <SnoopJ> since it sounds like you don't know really anything about the provenance of this (apparent) deadlock
[18:05:59] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[18:06:03] <iffy50> Would that be the issue?
[18:06:23] <Xano> bjs, yes
[18:06:31] <bjs> Xano: the issue is that the Protocol says a ReactiveMethod function can accept any keyword or positional arguments but `values` doesn't fit that description
[18:06:41] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:fc03:7c2:5168:2188)
[18:06:47] *** Joins: jinsun__ (~jinsun@user/jinsun)
[18:06:48] <Xano> bjs, to reiterate: ReactiveMethod must describe any method on a Reactive instance
[18:07:19] <Xano> bjs, Which practically means I really only want to type the `self` parameter, and *args and **kwargs should be ignored if they're there (which they may not be)
[18:07:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:07:48] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[18:08:22] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[18:08:32] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[18:08:39] <Xano> bjs, Is that so? Adding *args and **kwargs to .values() (to match ReactiveMethod) still errors: https://mypy-play.net/?mypy=latest&python=3.10&gist=3ed798c759f9e82235b29a9e0d682b4e
[18:08:39] <ens> is there any recommendations for a training course online that i could do in order to get certified as a python developer?
[18:08:42] <hodapp> yeah, I might have to just give up on this for now because - as far as I can tell from Pyrasite - none of this is ever even touching my own code
[18:09:03] *** Joins: shad (~shad@user/shad)
[18:09:03] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[18:09:26] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[18:09:27] <hodapp> I make a .compute() call into Dask's client, and from there it is Dask's problem - I cannot really see into its scheduler's state or that if its worker threads
[18:09:39] <hodapp> s/if/of/
[18:09:51] <SnoopJ> not impossible that you've found a bug, or perhaps some "don't do that" sharp edge
[18:10:02] <mav`rik> iffy50: I guess I'd have to see the code. Sending self to another function might be acceptable, but it would have to be something you're doing intentionally rather than by accident
[18:10:13] <bjs> Xano: well,  it is *an* issue,  the double Protocol version from earlier looked like there was a bug hiding somewhere
[18:10:17] <Xano> ens, Hi and welcome! There are no 'official' certifications as far as I know. There's plenty of good free content and there are plenty of paid trainings or bootcamps too. Have you programmed before?
[18:10:20] <SnoopJ> although it doesn't sound like you have to do anything convoluted to reproduce, so if it's the latter I guess torch would probably be at fault
[18:10:21] <hodapp> well, I'm sort of already doing something atypical for Dask - you're not supposed to do this much 'stateful' stuff in Dask workers
[18:10:27] <Xano> bjs, hah fair
[18:10:32] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[18:11:00] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[18:11:07] <iffy50> Let me try something and I'll get back to you mav`rik
[18:11:08] <bjs> Xano: but if I e.g. `def f(m: ReactiveMethod) -> None: m(reactive, 1, 2, 3, 4)`  then should this typecheck or not?
[18:11:32] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[18:11:37] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[18:11:39] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Ping timeout: 256 seconds)
[18:11:39] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 256 seconds)
[18:11:50] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:fc03:7c2:5168:2188) (Quit: pvergain)
[18:12:00] *** Quits: schumaml (~schumaml@dslb-088-067-051-155.088.067.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[18:12:16] *** Quits: charizard (~charizard@65.113.71.138) (Quit: Client closed)
[18:12:43] *** Joins: iffy (~iffy@gtlvpn.gastops.com)
[18:12:51] <jinsun__> Xano: adding args kwargs to the version without the double protocol doesn't give error
[18:12:54] <bjs> it seems weird because whether that line succeeds or fails depends on *which* method you have, as ReactiveMethod doesn't seem to contain enough information just on its own
[18:13:01] <Xano> bjs, If I understand your example, then yes. Any args and kwargs other than self should be ignored and allowed
[18:13:20] <bjs> Xano: okay but if that is allowed,  then you shouldn't be allowed to pass `values` as a ReactiveMethod
[18:13:23] <bjs> as it would explode at runtime
[18:13:33] <Xano> bjs, How so?
[18:13:41] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[18:13:45] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[18:13:56] <bjs> Xano: well f(ReactiveClass.values) would explode because it only has self
[18:14:31] *** Joins: orbisvicis_ (~orbisvici@user/orbisvicis)
[18:14:38] <bjs> so your ReactiveMethod protocol is really saying only methods which will accept *args **kwargs themselves.
[18:14:58] <Xano> bjs, You mean exploding in a typechecking way? That makes sense
[18:15:01] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[18:15:17] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[18:15:32] <bjs> Xano: well I mean your `def values(self):` with my `def f(` then `f(values)` will be a runtime TypeError
[18:15:50] <bjs> so the typechecker *should* say values is not a ReactiveMethod;  that is correct and safe
[18:16:11] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:16:11] *** Quits: iffy50 (~iffy@autodiscover.gastops.com) (Ping timeout: 256 seconds)
[18:17:02] *** Quits: cypostres (~cypostres@user/cypostres) (Quit: Leaving)
[18:17:09] *** Joins: schumaml (~schumaml@dslb-178-007-203-033.178.007.pools.vodafone-ip.de)
[18:17:49] <Xano> bjs, That sort of makes sense in my head.
[18:18:02] *** Joins: jpn (~jpn@user/jpn)
[18:18:16] *** Joins: jinsun (~jinsun@user/jinsun)
[18:18:26] <bjs> Xano: so that half seems fine to me,  the other side seems a little less clear.  If you make it `def values(self, *args, **kwargs)` then in theory it should match
[18:18:27] *** Joins: xa0s (~xa0s@mab.sdf.org)
[18:19:16] *** Quits: andreasbuhr (~quassel@p549db9c0.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:19:17] <flower_> SnoopJ: how about pyoxidizer or nuitka?
[18:19:41] <SnoopJ> flower_, what about them?
[18:19:50] <bjs> Xano: but the double protocol thing is still not obvious to me,  maybe it's a bug or maybe there's something else going on
[18:20:09] *** Quits: Guest7375 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[18:20:30] <flower_> SnoopJ: I'm looking at pyinstaller and pyoxidizer and nuitka now, can you recommend one or tell a bit about the difference?
[18:20:37] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 240 seconds)
[18:22:32] *** Joins: qlixed (~qlixed@8.243.49.226)
[18:22:59] *** Quits: iffy (~iffy@gtlvpn.gastops.com) (Ping timeout: 256 seconds)
[18:23:17] <SnoopJ> flower_, PyInstaller packages a Python interpreter along with some packages for it. If you use the --onefile mode, it has to unpack that to a temporary directory before running. I don't know as much about nuitka/pyoxidizer, but they don't take this approach, they bind directly to libpython in the comparable usage.
[18:24:08] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:25:06] <bjs> Xano: i think I see why mypy complains about your program,  when you say `: Reactive` in your Protocol __call__ you're saying that a ReactiveMethod is one that can accept *Any* Reactive thing as self
[18:25:18] <Xano> bjs, correct
[18:25:24] <bjs> Xano: but `values`' self is ReactiveClass only
[18:25:40] <bjs> since it's a method
[18:25:49] *** Quits: schumaml (~schumaml@dslb-178-007-203-033.178.007.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[18:26:14] <flower_> SnoopJ: ok, hm pyoxidizer looks interesting, maybe I'll give it a shot.
[18:26:25] *** Joins: fr_sleepy (~fr_sleepy@209.94.138.128)
[18:26:34] <bjs> If you had another Reactive type and tried to go `ReactiveClass.values(some_unrelated_reactive_obj)` the typechecker (should) complain because inside `values` you're supposed to be able to use `ReactiveClass` attributes and methods and stuff
[18:27:03] <bjs> (including that super() call, which depends on the actual type of self ...)
[18:27:24] *** Joins: schumaml (~schumaml@dslb-188-104-183-144.188.104.pools.vodafone-ip.de)
[18:27:28] <bjs> Xano: if you say `self: Reactive` and only do things which are valid for *all* Reactive instances (e.g. delete the super() call) then it should work
[18:27:45] <jinsun> mypy complains even if you do self: Reactive though, I was able to shut up pyright by doing that but not mypy
[18:27:57] <Xano> bjs, Ah yeah I understand now. This is where my lack of practical experience with stricter typed languages shows up again :D
[18:27:58] <SnoopJ> flower_, ah sorry I'm apparently mistaken: nuitka does something similar to pyinstaller re: unpacking in --onefile mode, at least on some platforms.
[18:28:09] <bjs> jinsun: mypy complains because it doesn't like self's which are annotated weaker than the class itself?
[18:28:15] <bjs> in general, or in this specific case?
[18:28:59] <jinsun> so this passes pyright strict mode https://mypy-play.net/?mypy=latest&python=3.10&gist=d6265e333ee8e20b2dc85ab88c71a6e8
[18:29:04] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[18:29:22] <jinsun> but not even mypy regular mode
[18:29:22] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[18:29:24] <Xano> bjs, Is there a way to express a type as "whatever the type was based on your inference, but it must also be X as well"?
[18:29:35] <ens> Xano: thanks for the response. i have coded. i'm a refugee perl coder so i have a good few years of experience
[18:29:53] <ens> Xano: i thought i saw the python foundation did a cert. but i'll have to check again
[18:29:55] <bjs> Xano: Any :)
[18:30:07] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[18:30:11] <Xano> ens, Ah good! I asked because that means you'll be familiar with a lot of basic concepts already. Did you try installing and running Python on your system yet?
[18:30:12] <bjs> which is generally not what you want
[18:30:22] <Xano> bjs, you're right, but damn :D
[18:30:50] <ens> Xano: i've done a few basic projects. it's quite straightforward but i haven't done much stuff with designing my own objects yet... just doing imports of other people's stuff and coding kinda procedurally
[18:31:47] <jinsun> bjs: I think it is this specific case only, with the double protocol, I had made it work in other cases with a different annotation for self
[18:31:57] <strk> so ldap whants str for query string and returns bytes for query results :/
[18:32:00] <strk> lovely
[18:32:07] <ens> i like coding python with vscode because the editor gives a lot of hints
[18:32:11] <Xano> ens, Gotcha. Sounds like a place many devs find themselves in at some point (I know I did).
[18:32:24] <Xano> ens, VSCode is good, I'm a longtime PyCharm user. Can't go wrong with either of these
[18:33:18] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[18:33:25] <ens> the main reason i want to get a certification is because i haven't got any industry experience with python other than doing small projects in my spare time and i think it would be decent to have a bit of paper to show i can do at least a junior job.
[18:33:39] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4.1)
[18:33:43] *** Joins: nunggu (~q@user/nunggu)
[18:33:46] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 250 seconds)
[18:34:16] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:34:35] <Xano> ens, Yeah I can't find anything from the Python Software Foundation other than discussions about this a decade ago.
[18:34:37] *** Joins: Masterphi (~Masterphi@user/masterphi)
[18:35:04] <Xano> ens, One option is to look for sponsored bootcamps in your area, especially if funding is tight
[18:35:17] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[18:35:49] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f011:5c41:91d3:3525)
[18:35:49] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f011:5c41:91d3:3525) (Changing host)
[18:35:49] *** Joins: skapata (~Skapata@user/skapata)
[18:35:56] <Xano> ens, Another possibility would be to join a high-profile Open-Source Python project as contributor. Lots of businesses are happy to accept proof of such contributions as part of applications
[18:37:31] *** Joins: pro_z_ (~pro_z@37.214.80.204)
[18:37:36] <Xano> ens, Most projects have tagged issues/tasks that are good for newcomers, so they can focus on learning the ropes rather than getting lost in difficult problems immediately
[18:38:09] <ens> yeah i was looking at the django project for open issues. seems like a place i could dig in.
[18:38:20] <ens> re: certs. the one that i was looking at was this one: https://pythoninstitute.org/certification/
[18:38:35] <Xano> ens, If you're in an area with local Python meetups and pandemic restrictions allow people to meet up, then that's a good way to get ideas and advice from people too
[18:38:52] <Xano> ens, Django would be an excellent project. Proven and active :)
[18:38:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:40:21] <Xano> ens, I don't know how well-known that business is. Do double-check that before you pay any money for any certificate.
[18:40:32] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[18:40:36] *** Joins: exarkun (~exarkun@user/exarkun)
[18:40:40] <causa_sui> I get an `attr-defined` error from mypy when iterating over a list of imported modules and calling a function in the module. Naming the module explicitly silences the mypy error. Why? https://github.com/rpdelaney/extinfo/commit/625f19c087bf5d560de21d31ef6746541c712681 sub-question: is this a bad pattern and should I be doing it some other way?
[18:40:46] *** Quits: Guest1472 (~personnel@user/domhnall/x-2887755) (Ping timeout: 268 seconds)
[18:40:51] <Xano> They may still be really good teachers, but if it's the piece of paper you want...
[18:40:58] *** Quits: nathanjell (~Nathan@64.141.52.164) (Quit: Leaving)
[18:41:05] *** Joins: gevreeen (~gevreeen@2001:470:67:326:7c6b:19ca:beb4:741f)
[18:41:20] <gevreeen> how does one get http request headers from wsgi?
[18:41:21] <exarkun> Anyone else have the problem that Python/gdb integration (libpython.py) produces wrong line numbers in py-bt output?  Like, extremely obviously wrong, off by a thousand lines or more (with respect to the function name it is also reporting)?
[18:41:35] <exarkun> gevreeen: They're in the "env", "environ", or "environment".
[18:41:43] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[18:41:44] <ens> thanks xano. i guess i'll shop around a bit. have you heard of codewithmosh.com ? it has a lot of courses on django and python and looks like it's a good one.
[18:41:52] <gevreeen> exarkun: so the first parameter for the callable application?
[18:42:13] <ens> i'm considering taking that along with acloudguru.com to bring up my AWS skills.
[18:42:19] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:42:20] <exarkun> gevreeen: Probably that, yes.  I don't remember exactly where it is in the API but that sounds right.
[18:42:39] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[18:42:57] <strk> cgi.FieldStorage() returns str instead :/
[18:42:59] <strk> gah
[18:43:07] <exarkun> gevreeen: They'll probably be named with an `HTTP_` prefix.
[18:43:22] <Xano> ens, Good luck! I'm going to have to do a few things away from the computer :)
[18:43:33] <ens> thanks for the advice
[18:43:49] <exarkun> ugh yes, it's broken ... https://bugs.python.org/issue45838
[18:44:00] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Ping timeout: 252 seconds)
[18:44:08] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4.1)
[18:45:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:45:52] <gevreeen> yeah, HTTP_<headername>
[18:45:59] <SnoopJ> huh, I didn't realize 3.8 was outside of the bugfix window now. Time flies, I guess.
[18:46:25] *** Parts: exarkun (~exarkun@user/exarkun) (WeeChat 3.3)
[18:46:25] <gevreeen> this is cumbersome. why can't is just be environ['headers'] which gives a dictionary
[18:46:46] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[18:47:20] <strk> how do I encode all values of a lits of strings ?
[18:47:30] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:47:52] <SnoopJ> [s.encode() for s in list_of_str]
[18:48:05] <SnoopJ> or specify a particular encoding if you don't want the default
[18:48:15] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:48:23] *** Joins: gopar (~gopar@2600:8804:670d:2f00:9994:4c4:7a60:b26d)
[18:48:36] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:48:49] *** climax is now known as gentooclimax
[18:49:15] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[18:51:30] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[18:52:08] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[18:52:14] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[18:53:17] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Ping timeout: 240 seconds)
[18:53:30] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[18:56:25] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:56:34] <causa_sui> I get an `attr-defined` error from mypy when iterating over a list of imported modules and calling a function in the module. Naming the module explicitly silences the mypy error. Why? https://github.com/rpdelaney/extinfo/commit/625f19c087bf5d560de21d31ef6746541c712681 sub-question: is this a bad pattern?
[18:56:46] *** Joins: tungki (~tungki@subs20-114-142-172-16.three.co.id)
[18:56:59] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:58:10] *** Joins: Masterphi (~Masterphi@user/masterphi)
[18:58:39] <strk> TypeError: ('Tuple_to_LDAPMod(): expected a byte string in the list', 'l')
[18:58:49] <strk> I'm just guessing: "a byte string" is different from "bytes" ?
[18:59:17] <bjs> strk: who knows,  library authors can put whatever they want in that string
[18:59:21] <bjs> I assume they mean bytes
[18:59:46] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 250 seconds)
[19:01:25] <jinsun> causa_sui: you can reveal_type(__EXTRACTORS__) to find out, it infers the type as liist of ModuleType
[19:01:41] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:02:03] <mav`rik> causa_sui: I guess it _could_ be that `result` doesn't have a defined type, if you declare the type of result ahead of time does this fix the issue?
[19:02:34] <jinsun> causa_sui: so the operations you do on it have to work on any arbitrary module, and any arbitrrary module might not have .extract or .SITE
[19:02:45] *** Quits: onichomp666 (~onichomp@177.231.44.9) (Quit: onichomp666)
[19:03:14] <causa_sui> jinsun: right, but they do :) I guess this is just a code smell and I shouldn't be using this pattern to try all the extractors
[19:04:04] <jinsun> it is just a limitation of mypy and static typing, you can't treat modules like any other object
[19:04:09] <causa_sui> I guess the point is that those Modules do have those attributes, but the Module type does not
[19:04:11] <causa_sui> yeah
[19:04:46] <causa_sui> so either I use a different way or silence the error I suppose
[19:05:01] <jinsun> pyright does it slightly better, instead of inferring list[ModuleType] it infers list of Union of all individual modules
[19:05:07] <bjs> It's probably because each module doesn't have its own type,  it's the same if you make lots of individual objects with different attributes
[19:05:26] <jinsun> and it allows any operation that can work on all modules in that list
[19:05:27] <bjs> (of the same type)
[19:05:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:05:43] <strk> sshPublicKey = filter(None, sshPublicKey) # wrong in python3 I guess ?
[19:05:51] <strk> sshPublicKey is a list of strings I belive
[19:06:31] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[19:06:34] <strk> XXX sshPublicKey[0] is <class 'str'>
[19:06:43] <strk> and it's valued 'uno'
[19:06:53] <strk> after the filter(None, sshPublicKey) it becomes an empty list ?!
[19:07:09] <causa_sui> bjs: can you (or anyone else) suggest a better approach for iterating over modules?
[19:07:11] <SnoopJ> strk, `filter(None, some_iterable)` is a valid invocation in Python 3. It will yield the truthy values of the iterable.
[19:07:21] <bjs> causa_sui: in a way that mypy will like? nope
[19:07:32] <SnoopJ> (if the result is empty, nothing in your input is truthy)
[19:08:09] <bjs> causa_sui: unless you want to go the really ugly way of having a bit case split, `if extractor is fileinfo_com: ..., elif extractor is ...: ...`
[19:08:22] <bpalmer> does mypy support if hasattr(m, 'foo'): m.foo()   to silence the error?
[19:08:22] <causa_sui> bjs: alright, so either I pack everything into one module, or I do some other abstraction layer like an Extractor class that imports handlers from the module, something like that
[19:08:26] <strk> SnoopJ: not as a list ?
[19:08:31] <causa_sui> bjs: might as well just hard code everything at that point
[19:08:35] <strk> nope, as a <class 'filter'>
[19:08:37] <SnoopJ> strk, filter() returns a filter object (an iterable) in Python 3
[19:08:42] <SnoopJ> wrap it in list() if you want a list.
[19:09:05] <bjs> causa_sui: well without me knowing anything at all about your code,  but a list of modules sounds weird but an 'Extractor' class and a list of those instances sounds totally normal
[19:09:18] <causa_sui> bjs: yup, that's good enough for me, thanks
[19:09:24] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[19:09:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[19:10:14] <strk> ok, little steps I'm moving on
[19:10:28] <bjs> strk: `for x in filter(None, [0,1,2,3]): print(x)` will print 1 2 and 3
[19:10:30] <strk> now I'm left with the "expected a byte string in the lits" message from ldap
[19:10:31] <mav`rik> causa_sui: You could declare __EXTRACTORS__ to have a type which fits the protocol providing the callable `extract` and the string (?) `SITE`
[19:10:32] *** Quits: jeho1 (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[19:10:35] *** Quits: brokenpip3 (~brokenpip@gateway/tor-sasl/brokenpip3) (Ping timeout: 240 seconds)
[19:10:46] *** Quits: nullheroes (~nullheroe@168.235.66.22) (Quit: WeeChat 2.8)
[19:11:01] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[19:11:03] <bjs> mav`rik: will that work?  it sounds like the same problem I described earlier of types vs instances
[19:11:49] <strk> TypeError: ('Tuple_to_LDAPMod(): expected a byte string in the list', 'uno') # the ldap library gets 'uno' but wants "a byte string" instead
[19:11:53] <mav`rik> bjs: I guess you could _also_ insist that it's a types.ModuleType, but I'm not sure that's necessary? It might be that the protocol is nothing but static methods though :D
[19:12:10] <bjs> mav`rik: but how do you actually do the "declare" part?
[19:12:31] <bjs> strk: I think it wants bytes,  "byte string" is a common informal name for bytes objects
[19:12:39] <strk> passing all those strings to encode() turns the lits into a list of bytes
[19:12:44] <strk> but the module is still unhappy
[19:12:50] <strk> XXX encoded keys to add are: [b'uno', b'due']
[19:12:55] <strk> TypeError: ('Tuple_to_LDAPMod(): expected a byte string in the list', 'l')
[19:13:01] <strk> I've no idea where the 'l' comes from :/
[19:13:02] <bjs> what is that 'l' thing?
[19:13:04] <bjs> oh
[19:13:23] <bjs> strk: can you share the code you're doing the encode() and pass to the module?
[19:13:52] *** Joins: Enitin (~Enitin@82.180.145.223)
[19:14:06] <jinsun> I'm guessing you are passing a string ("list"?) to it and it is looping over each character
[19:14:33] <klotzhauer> is it a good practice to extend a simple list by subclassing it?
[19:14:42] <jinsun> no
[19:15:09] <jinsun> there is UserList made for subclassing https://docs.python.org/3/library/collections.html#collections.UserList
[19:15:13] <grym> klotzhauer: https://treyhunner.com/2019/04/why-you-shouldnt-inherit-from-list-and-dict-in-python/  has some interesting reading
[19:15:16] <hodapp> okay, finally made some progress (maybe): Pytorch stuff was being initialized on one thread, then Dask attempted to execute on another
[19:15:16] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[19:15:30] <hodapp> if I deferred initialization until the first execution, then magically it doesn't block
[19:15:31] *** Joins: alex11 (~alex11@user/alex11)
[19:15:35] <bjs> klotzhauer: you can make a class that pretends to be a list by implementing all of the list operations (append, clear, __add__, etc) e.g. by inheriting something like https://docs.python.org/3/library/collections.abc.html instead
[19:15:39] <hodapp> (as that forces init to be in the same thread)
[19:15:49] <bjs> klotzhauer: (MutableSequence https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableSequence that is)
[19:15:51] *** Joins: Guest60 (~Guest60@97.65.218.94)
[19:16:09] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:16:55] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[19:17:05] <stewie925> hey guys I am having an issue with pandas read_sql_query() returning the wrong column names to a dataframe - https://bpa.st/PEOA
[19:17:09] *** Quits: grooverman (~grooverma@152.250.149.49) (Ping timeout: 268 seconds)
[19:17:20] <klotzhauer> thx! @ grym, bjs
[19:17:34] <strk> figured, 'l' was just the first character of a string I was not encoding
[19:18:35] <Guest60> Hello, can someone help answer my quick question. Python 3: How to get backslash from input(). For example asking user to provide their username. User will input something like, ".\username1".
[19:19:22] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[19:19:25] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:19:39] <bpalmer> Guest60: it should just work. What issues are you facing?
[19:19:53] <klotzhauer> and not forget to thank jinsun
[19:20:04] <mav`rik> bjs: Sadly it seems that mypy doesn't fully support PEP 544 yet - https://peps.python.org/pep-0544/#modules-as-implementations-of-protocols - it _should_ work, but it's not yet capable
[19:20:41] *** Joins: bahamas (~lucian@86.120.77.115)
[19:21:10] <bjs> mav`rik: ah
[19:21:11] <mav`rik> bjs: the bug's been open now for almost 2 years - https://github.com/python/mypy/issues/5018
[19:21:29] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--419.oracle-ocna.com)
[19:22:09] *** Joins: SnakesAndStuff (~bob@2600:1700:f9d0:57ef::409)
[19:22:45] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[19:24:28] *** Joins: Guest3321 (~Guest33@221.166.228.135)
[19:24:37] <Guest3321> hello
[19:24:39] <Guest60> bpalmer: thanks for the reply...I was thinking that it will escaped the backslash...got to do more debugging
[19:24:40] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--419.oracle-ocna.com) (Client Quit)
[19:25:02] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:25:13] <SnakesAndStuff> Help with python3.... I'm trying to subtract a float from an unknown... while this worked in python2, python 3 doesn't like it....
[19:25:14] <mav`rik> I realise this is a bit of an aside, but if there's anyone out there using gitlab CI/CD and coverage, have you managed to get it showing the changeset coverage visualisation (line-by-line showing which code is covered in an MR)?
[19:25:20] <SnakesAndStuff> TypeError: unsupported operand type(s) for -: 'decimal.Decimal' and 'float' args = ("unsupported operand type(s) for -: 'decimal.Decimal' and 'float'",) with_traceback = <built-in method with_traceback of TypeError object>
[19:25:28] <Klinda> einsum
[19:25:37] *** Parts: Guest3321 (~Guest33@221.166.228.135) ()
[19:25:40] <Klinda> one of the hardest thing to understand
[19:25:53] <SnakesAndStuff> offending line is:  balance = old_balance - (charge_amount / 100)
[19:25:57] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[19:26:08] <bjs> SnakesAndStuff: where did the Decimal come from?
[19:26:34] <KirkMcDonald> SnakesAndStuff: In Python 2, / did floor division when used between two integers.
[19:26:40] <bpalmer> Guest60: if you print it, the backslash will be escaped; if you get confuesd, check the length of the string. For example, s = input()  with the user typing a single backslash , printing s will show "\\" but len(s) is 1
[19:26:40] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:26:47] <SnakesAndStuff> the first value is being pulled from a sql database.
[19:26:55] <KirkMcDonald> SnakesAndStuff: But in Python 3, it gives you a float.
[19:26:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[19:27:07] <KirkMcDonald> SnakesAndStuff: If you explicitly want floor division, use the // operator.
[19:27:24] <han-solo> stewie925: postgres ?
[19:27:57] <bjs> SnakesAndStuff: in Python 2 some of the arithmetic was a little less strict,  you could add/subtract floats from Decimals (even though it was probably a mistake). and as KirkMcDonald points out, the meaning of the / operator changed
[19:28:06] <bjs> (if charge_amount is an int)
[19:28:09] <stewie925> han-solo: let me check... am new to my job :)
[19:28:11] *** Quits: fr_sleepy (~fr_sleepy@209.94.138.128) (Quit: WeeChat 3.4)
[19:28:30] <bjs> SnakesAndStuff: oh no I'm wrong, Python 2 Decimal didn't allow operations with floats either;  so it's the division that went wrong. sorry
[19:28:32] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[19:28:41] <KirkMcDonald> You couldn't subtract Decimal and float in Python 2, I'm pretty sure.
[19:28:58] <SnakesAndStuff> What KirkMcDonald suggested fixed it.
[19:29:07] <SnakesAndStuff> Now I just need to go back and figure out why and make sure everything is kosher :D
[19:29:21] <KirkMcDonald> SnakesAndStuff: charge_amount is an integer.
[19:29:21] *** Quits: kdc (~kdc@196.211.197.133) (Remote host closed the connection)
[19:30:12] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1) (Ping timeout: 252 seconds)
[19:30:20] <stewie925> han-solo:  I am reading the table from Snowflake data cloud platform
[19:31:30] <han-solo> stewie925: did you try using double quotes for columns ?
[19:31:43] <bjs> KirkMcDonald: yeah I just am wrong,  I don't know what I was recalling
[19:31:57] <han-solo> "Snowflake stores these object names in uppercase unless you quote ("") the names when you create the objects."
[19:32:17] <stewie925> han-solo: oh
[19:32:44] <han-solo> https://community.snowflake.com/s/article/faq-when-i-retrieve-database-schema-table-or-column-names-why-does-snowflake-display-them-in-uppercase
[19:33:07] <orbisvicis_> if I want a preallocated pandas dataframe with given index and columns, is my only option creating from numpy structured arrays?
[19:33:07] <stewie925> han-solo - thank you so much, let me look at it
[19:34:05] <orbisvicis_> ie from np.empty or np.zeros
[19:34:57] *** Joins: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net)
[19:34:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:35:01] <jinsun> you can simply do pd.DataFrame(index=[1,2,3], columns=["A", "B", "C"])
[19:35:20] <jinsun> without giving any values, pandas will fill will nans
[19:35:31] <jinsun> s/fill will/fill with
[19:35:35] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[19:35:46] *** Quits: Guest48 (~Guest48@2601:408:8100:8270:ed89:7cb5:4c52:8e1) (Quit: Client closed)
[19:35:59] *** Quits: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net) (Client Quit)
[19:36:34] <orbisvicis_> jinsun: but then the dtypes are all object
[19:36:47] *** Parts: SnakesAndStuff (~bob@2600:1700:f9d0:57ef::409) ()
[19:36:50] <SnoopJ> orbisvicis_, if you want to specify them, you should specify them
[19:36:50] <orbisvicis_> right, forgot to mention that
[19:37:42] <flower_> hm Nuitka looks interesting
[19:37:47] <orbisvicis_> SnoopJ: what do you mean? pd.DataFrame(index=[...], columns=[...], dtype=[...]) with dtype as a collection is not supported
[19:38:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[19:39:02] <SnoopJ> hm, and so it isn't. I guess you'd have to make each of the Series objects for the columns and then roll those up into a DataFrame
[19:39:02] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[19:39:27] *** Joins: sertsa (~sertsa@209.140.9.178)
[19:39:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[19:39:46] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[19:40:03] *** Quits: tungki (~tungki@subs20-114-142-172-16.three.co.id) (Ping timeout: 256 seconds)
[19:40:11] <orbisvicis_> SnoopJ, I assume that's more efficient that creating the numpy structured array first?
[19:40:14] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--419.oracle-ocna.com)
[19:40:29] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:40:35] <SnoopJ> orbisvicis_, if you're worried about efficiency, don't guess, measure.
[19:40:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:40:44] *** Joins: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net)
[19:40:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:41:02] <SnoopJ> a structured array can probably be a little smarter and do its allocation all at once, though
[19:42:07] *** Joins: humberto1 (~humbertow@187.202.220.176)
[19:42:33] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[19:42:40] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[19:42:45] <orbisvicis_> can pandas reuse that allocation?
[19:42:51] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[19:43:12] *** Joins: grooverman (~grooverma@187.11.220.159)
[19:43:18] *** Joins: puzzled (~puzzled@83-85-202-120.cable.dynamic.v4.ziggo.nl)
[19:43:38] *** mcleuder_ is now known as mcleuder
[19:43:45] <orbisvicis_> probably not, I think the columns have to be contiguous
[19:44:24] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[19:44:28] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[19:44:32] <SnoopJ> Dunno, actually. I can see how it would be possible, the array underlying each Series object could be a view, but to know what it will actually do, you will apparently have to just try it.
[19:44:45] <SnoopJ> the docs don't seem to say one way or the other
[19:45:23] <orbisvicis_> hmm ok
[19:45:37] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[19:46:04] <SnoopJ> the underlying array certainly doesn't have to be contiguous, though, that I know for sure
[19:46:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:47:56] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[19:48:10] *** Joins: Guest7375 (~vit@chello085216193138.chello.sk)
[19:48:10] *** Quits: killadi (~u0_a123@49.15.137.89) (Remote host closed the connection)
[19:48:28] <orbisvicis_> SnoopJ: just to double check, I can't create a structured array where the structure is a dimension, ie a 3d array where the structure is the 3rd dimension, right?
[19:48:48] <SnoopJ> I don't understand what you mean
[19:49:04] *** Quits: rje (~textual@50.35.241.164) (Remote host closed the connection)
[19:49:15] *** Joins: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:49:17] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[19:49:32] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[19:49:36] <orbisvicis_> for example, np.zeros((4,4), dtype=np.dtype(...)).ndims == 2 (not 3)
[19:49:41] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:50:28] <SnoopJ> I understand the distinction between two dimensions and three dimensions. I have absolutely no idea what "the structure is a dimension" means.
[19:50:51] <orbisvicis_> heh
[19:50:54] *** Quits: agumonkey (~user@88.163.231.79) (Ping timeout: 250 seconds)
[19:51:49] <orbisvicis_> if the structure has 4 fields, then I was hoping for a 4x4x4 array, but I get a 4x4 array of structures (with 4 fields)
[19:52:30] <SnoopJ> a structured array is an ndarray where each datum is the structure
[19:52:40] <SnoopJ> (which numpy will unpack for you)
[19:54:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:54:47] <orbisvicis_> yes of course, but since that shape makes certain and indexing selection operations difficult I was wondering if numpy could be made to present a 4x4x4 array
[19:54:52] <orbisvicis_> so I don't have to use pandas
[19:54:54] <SnoopJ> no
[19:55:03] <orbisvicis_> ah well
[19:55:26] <orbisvicis_> thanks
[19:55:29] <SnoopJ> xarray might be able to do something like that if you want an alternative to pandas
[19:55:47] <orbisvicis_> no that's fine, I was just wondering if I could stay with numpy
[19:56:04] *** Joins: Barones (~Barones@user/Barones)
[19:56:13] <SnoopJ> I iamgine the way it would solve the problem is the same way pandas does: having a separate ndarray for each thing and doing a shell game for the user
[19:57:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:57:14] *** Joins: meissa (~meissa@pool-108-5-60-161.nwrknj.fios.verizon.net)
[19:57:41] <SnoopJ> DataFrame seems to take a copy, but Series doesn't, interesting
[19:58:29] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[19:58:32] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 240 seconds)
[19:59:13] <SnoopJ> ahh, that's the default behavior, setting copy=False behaves more like what I had in mind
[19:59:28] <anddam> howdy, I installed 3.9.11 32b on windows 10, I created a venv and tried to install PySide only to be greeted by      ERROR: Could not find a version that satisfies the requirement PySide6 (from versions: none)  ERROR: No matching distribution found for PySide6
[19:59:33] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Read error: Connection reset by peer)
[19:59:40] *** Joins: dez (uid92154@user/dez)
[19:59:49] <anddam> ohhhhh, 32b
[19:59:52] <anddam> https://pypi.org/project/PySide6/#files only has amd64
[20:00:01] <grym> quack quack :)
[20:00:02] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:00:07] *** Joins: Staunch (~Staunch@134.238.165.172)
[20:00:50] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[20:01:13] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[20:02:07] <meissa> SnoopJ: copy of what?
[20:02:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[20:02:20] <SnoopJ> meissa, the data backing an ndarray
[20:02:37] *** Quits: bytehackr (~Sandipan@45.249.73.234) (Read error: Connection reset by peer)
[20:03:29] *** Joins: wyclif (~wyclif@user/wyclif)
[20:03:44] <meissa> SnoopJ: how can you tell if a copy has been made?
[20:03:47] *** Joins: wattux (~wattux@2a02:238:f014:472:907e:3160:8460:cd7a)
[20:04:03] <SnoopJ> meissa, by mutating the DataFrame and seeing if the original ndarray is modified
[20:04:15] <meissa> Rught
[20:04:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:04:39] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:04:40] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:05:02] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 240 seconds)
[20:06:46] <SnoopJ> from_records() doesn't seem to take the `copy` argument though, so I guess you always get one
[20:07:43] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:08:37] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:08:45] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[20:09:13] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[20:09:14] *** Quits: sawk (~quassel@78.6.80.66) (Ping timeout: 252 seconds)
[20:10:06] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[20:10:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:10:35] <SnoopJ> you might be able to get a view over each structure field first, though, then call DataFrame(..., copy=False)
[20:10:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:11:06] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[20:11:36] <Guest60> bpalmer: I figured it out. Getting user input using input() is working fine. It was a different thing (permission error). Thanks!
[20:11:43] *** Joins: wyclif (~wyclif@user/wyclif)
[20:12:23] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Quit: WeeChat 3.4)
[20:12:41] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[20:12:45] <SnoopJ> yea, that seems to work: https://bpa.st/G2KQ cc orbisvicis_
[20:13:06] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[20:13:52] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:14:17] *** Joins: pr3d4t0r (~pr3d4t0r@user/pr3d4t0r)
[20:14:31] *** Joins: zebrag (~chris@user/zebrag)
[20:14:36] <SnoopJ> and you could generalize it for any structured array: `df = pd.DataFrame({name: arr[name] for name in arr.dtype.names}, copy=False)`
[20:15:14] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[20:15:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[20:15:57] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[20:16:48] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[20:16:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[20:17:10] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[20:17:11] *** Quits: Guest5497 (~Guest54@2620:10d:c092:400::4:3a1c) (Quit: Client closed)
[20:17:12] *** Joins: wyclif (~wyclif@user/wyclif)
[20:17:16] *** Joins: rje (~textual@65.141.156.170)
[20:17:37] *** Quits: loofy (~loofy@user/loofy) (Ping timeout: 240 seconds)
[20:18:05] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[20:18:31] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[20:18:36] <HiccupJul> if i wanted to run a python script on a website, is there some way i can use modules like requests etc, or would i need to swap those for something else?
[20:19:08] <BtbN> define "run python script on a website"
[20:19:09] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[20:19:10] <phy1729> Depends on what that website supports.
[20:19:28] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[20:19:58] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[20:20:07] <han-solo> run it online ?
[20:20:16] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:20:25] <han-solo> like as in https://replit.com/ ?
[20:21:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:21:31] *** Joins: loofy (~loofy@user/loofy)
[20:21:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:22:36] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[20:22:42] *** Joins: wyclif (~wyclif@user/wyclif)
[20:22:59] *** Joins: pingpwn (~pingpwn@86.106.74.68)
[20:23:06] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[20:23:50] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 250 seconds)
[20:23:50] <HiccupJul> brython, for example
[20:23:57] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[20:24:22] *** Quits: grooverman (~grooverma@187.11.220.159) (Ping timeout: 268 seconds)
[20:24:32] <HiccupJul> i.e. a python environment in javascript or wasm
[20:25:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:27:53] *** Joins: Barones (~Barones@user/Barones)
[20:27:54] <phy1729> perhaps you can make a package and then import that  https://brython.info/static_doc/en/brython-packages.html
[20:28:32] *** Joins: grooverman (~grooverma@189.110.77.226)
[20:29:07] *** Joins: ice9 (~ice9@user/ice9)
[20:29:37] <HiccupJul> thanks i'll try that
[20:29:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:33:00] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[20:33:27] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 252 seconds)
[20:34:37] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[20:35:37] <jinsun> SnoopJ: weird, doing df.loc[:, "a"] = -1 instead of df["a"][:] = -1 gets rid of the warning but doesn't change the original array
[20:35:58] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 250 seconds)
[20:36:02] <SnoopJ> jinsun, oh dear
[20:36:04] <jinsun> it is like the opposite of what the warning says
[20:36:21] *** Joins: rsx (~dummy@ppp-188-174-152-127.dynamic.mnet-online.de)
[20:36:24] *** Quits: marcello42 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:36:26] *** dcaro is now known as dcaro_away
[20:36:29] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[20:37:38] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[20:37:49] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[20:38:02] *** llanhmod is now known as Guest824
[20:38:02] *** Quits: Guest824 (~personnel@user/domhnall/x-2887755) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[20:38:13] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[20:38:55] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[20:39:27] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: leaving)
[20:39:45] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:39:47] *** Joins: ljkimz (~ljkimz@97.119.167.32)
[20:40:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[20:40:52] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:41:06] *** Joins: src (~src@user/src)
[20:41:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:42:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:43:05] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 250 seconds)
[20:43:32] *** Quits: stewie925 (~stewie925@2001:420:c0c8:1007::4cc) (Quit: Client closed)
[20:43:56] *** Quits: fuz (~fuz@user/fuz) (Quit: ZNC 1.6.5 - http://znc.in)
[20:44:49] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:45:13] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[20:45:47] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 256 seconds)
[20:46:06] *** Quits: pingpwn (~pingpwn@86.106.74.68) (Ping timeout: 252 seconds)
[20:46:39] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:47:39] *** Quits: dfrey (~dfrey@172.103.152.101) (Quit: WeeChat 3.4)
[20:48:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[20:49:57] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:4d61:1c9e:48b5:af15)
[20:50:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:50:17] *** Quits: grooverman (~grooverma@189.110.77.226) (Read error: Connection reset by peer)
[20:50:34] *** Joins: wyclif (~wyclif@user/wyclif)
[20:51:06] *** Joins: agumonkey (~user@88.163.231.79)
[20:51:42] *** Joins: grooverman (~grooverma@152.250.149.217)
[20:52:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:53:21] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[20:54:21] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[20:55:12] *** Quits: elink (~elink@user/elink) (Ping timeout: 268 seconds)
[20:55:12] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 268 seconds)
[20:55:35] *** Joins: bahamas (~lucian@84.232.140.158)
[20:55:38] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[20:55:48] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 240 seconds)
[20:55:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:56:04] *** Joins: wyclif (~wyclif@user/wyclif)
[20:56:49] *** Joins: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de)
[20:57:13] *** Joins: tungki (~tungki@subs30-116-206-14-34.three.co.id)
[20:57:28] <HiccupJul> even the builtin urllib doesn't work in brython
[20:57:38] <HiccupJul> i think i'll need to use the brython specific http stuff
[20:58:15] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[20:58:26] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:58:52] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[20:59:22] <han-solo> HiccupJul: there is `ajax`
[21:00:31] *** Quits: vladoski (~vladoski@217.147.130.65) (Ping timeout: 256 seconds)
[21:00:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:00:46] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[21:01:06] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:01:08] *** Joins: kostkon_ (~androirc@athedsl-393845.home.otenet.gr)
[21:01:19] *** Joins: Everything (~Everythin@37.115.210.35)
[21:01:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:01:49] *** Joins: wyclif (~wyclif@user/wyclif)
[21:02:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:03:38] *** Joins: runelind (~runelind@user/runelind)
[21:03:42] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--419.oracle-ocna.com) (Ping timeout: 252 seconds)
[21:03:55] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Ping timeout: 240 seconds)
[21:04:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:05:14] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:05:35] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:06:15] *** Quits: gopar (~gopar@2600:8804:670d:2f00:9994:4c4:7a60:b26d) (Remote host closed the connection)
[21:06:38] *** Joins: Iolo (~iolo@user/Iolo)
[21:06:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[21:07:19] *** Joins: wyclif (~wyclif@user/wyclif)
[21:07:25] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[21:07:33] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[21:07:44] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:4d61:1c9e:48b5:af15) (Quit: No Ping reply in 180 seconds.)
[21:08:37] *** Joins: wakeup (~wakeup@user/wakeup)
[21:08:58] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:285:c627:ddf:58da)
[21:09:12] <orbisvicis_> SnoopJ: interesting, so creating the dataframe from a structured array or separate arrays is roughly equivalent, aside from the internal layout of the memory
[21:09:37] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[21:10:23] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:10:23] *** Joins: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com)
[21:10:27] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[21:11:25] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Quit: Quit)
[21:11:57] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[21:13:07] *** Joins: pingpwn (~pingpwn@217.138.222.100)
[21:13:12] *** Quits: puzzled (~puzzled@83-85-202-120.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[21:13:36] *** Joins: crashrep (~crashrep@user/crashrep)
[21:13:58] *** Quits: meissa (~meissa@pool-108-5-60-161.nwrknj.fios.verizon.net) (Quit: Quit)
[21:14:18] *** Quits: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001) (Quit: WeeChat 3.2)
[21:15:20] *** Quits: pr3d4t0r (~pr3d4t0r@user/pr3d4t0r) (Quit: WeeChat 3.4.1)
[21:15:45] *** Joins: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001)
[21:16:56] *** Joins: pr3d4t0r (~pr3d4t0r@user/pr3d4t0r)
[21:17:00] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[21:18:11] *** Quits: rsx (~dummy@ppp-188-174-152-127.dynamic.mnet-online.de) (Quit: rsx)
[21:18:12] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:18:12] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:18:25] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[21:18:28] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[21:19:13] <HiccupJul> han-solo: yeah, saw that. apparently i can detect if the script is running in brython using platform.python_implementation(), so i guess i change the behaviour based on that
[21:19:20] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[21:21:24] *** BrokenCog is now known as Iry-Hor
[21:21:46] *** Joins: zen_coder (~zen_coder@141.113.64.102)
[21:22:14] *** Joins: irf21k (~irf21k@2401:4900:336e:1da1:1:0:4fb8:9ff0)
[21:23:11] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:23:11] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:23:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[21:24:03] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[21:24:56] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 250 seconds)
[21:25:07] *** Joins: zeudap__ (~zeudap@modemcable121.54-202-24.mc.videotron.ca)
[21:25:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:25:28] *** Joins: smoke (~smoke@user/smoke)
[21:26:52] *** Quits: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:27:15] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[21:27:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[21:27:25] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc)
[21:27:42] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[21:27:43] *** Quits: zeudap_ (~zeudap@45.91.23.35) (Ping timeout: 256 seconds)
[21:27:54] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[21:28:02] *** Joins: crashrep (~crashrep@user/crashrep)
[21:28:22] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[21:28:33] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[21:28:39] *** Joins: zeudap (~zeudap@45.91.23.27)
[21:28:51] *** Joins: crashrep (~crashrep@user/crashrep)
[21:30:34] *** Quits: zeudap__ (~zeudap@modemcable121.54-202-24.mc.videotron.ca) (Ping timeout: 250 seconds)
[21:31:07] *** Quits: tungki (~tungki@subs30-116-206-14-34.three.co.id) (Ping timeout: 256 seconds)
[21:31:32] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[21:31:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:31:46] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[21:32:03] *** Joins: crashrep (~crashrep@user/crashrep)
[21:33:33] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[21:33:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:35:22] *** Joins: Wh0 (~V@43.250.158.12)
[21:35:40] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[21:35:46] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 250 seconds)
[21:35:53] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[21:36:10] *** Joins: crashrep (~crashrep@user/crashrep)
[21:36:20] *** Joins: nomic (~nomic@185.217.117.111)
[21:37:31] *** Quits: ljkimz (~ljkimz@97.119.167.32) (Quit: Client closed)
[21:38:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:39:12] *** Joins: noobaroo (~noobaroo@user/noobaroo)
[21:40:26] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[21:40:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:41:59] *** Joins: mdemo (~mdemo@user/mdemo22)
[21:42:37] *** Quits: daoudr__ (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[21:43:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.143) (Ping timeout: 240 seconds)
[21:47:00] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:49:00] *** Joins: uxemacs (~timothy@user/uxemacs)
[21:49:28] *** Joins: jazzy (~jaziz@user/jaziz)
[21:50:17] *** Joins: gopar (~gopar@2600:8804:670d:2f00:69f0:2d62:edef:623b)
[21:50:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[21:50:59] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[21:51:17] *** Quits: zen_coder (~zen_coder@141.113.64.102) (Quit: Konversation terminated!)
[21:52:01] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[21:52:03] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:52:47] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:54:00] *** Joins: Roey (~Roey@user/Roey)
[21:54:12] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 240 seconds)
[21:54:26] *** Joins: cdown (~cdown@188.214.11.14)
[21:54:42] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:7324:313a:3b30:860b)
[21:55:49] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[21:56:23] *** Joins: unyu (~pyon@user/pyon)
[21:57:08] *** Quits: pr3d4t0r (~pr3d4t0r@user/pr3d4t0r) (Quit: WeeChat 3.4.1)
[21:57:11] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:57:28] *** Quits: Staunch (~Staunch@134.238.165.172) (Remote host closed the connection)
[21:57:29] *** Quits: marenz (~marenz@dynamic-089-014-118-113.89.14.pool.telefonica.de) (Read error: Connection reset by peer)
[21:58:34] *** Joins: pr3d4t0r (~pr3d4t0r@user/pr3d4t0r)
[21:58:53] *** Joins: learning_2_learn (~uhanif@cpe-70-122-17-187.austin.res.rr.com)
[21:59:12] <learning_2_learn> how to pass variable to getpass so it doesn't prompt for pass
[21:59:49] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[22:00:08] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[22:00:35] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 256 seconds)
[22:01:46] *** Joins: bahamas (~lucian@84.232.140.158)
[22:03:08] *** Joins: subho (~subho@2405:201:9001:a0fc:7c63:6bdf:7cea:527a)
[22:03:29] <jinsun> just don't use getpass if you don't want to prompt? like x = "hunter2" instead of x= getpass()
[22:03:45] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 256 seconds)
[22:05:02] *** Quits: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[22:05:22] *** Joins: l4yer (~l4yer@user/l4yer)
[22:06:02] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[22:06:24] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[22:06:31] *** Joins: hyiltiz (~quassel@31.220.5.250)
[22:07:09] *** Iry-Hor is now known as BrokenCog
[22:07:17] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 240 seconds)
[22:08:00] *** Quits: Wh0 (~V@43.250.158.12) (Quit: Leaving)
[22:08:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:08:20] *** Quits: cdown (~cdown@188.214.11.14) (Remote host closed the connection)
[22:10:13] *** Joins: cdown (~cdown@188.214.11.14)
[22:10:20] <dminuoso> Does python have an eloquent way to find an element in a list by a predicate?
[22:10:21] *** Joins: jinsun__ (~jinsun@user/jinsun)
[22:10:59] <grym> dminuoso: [elem for elem in thelist if predicate(elem)] will find all of them
[22:11:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:11:03] <tusko> what do you mean by predicate? Something like 'is there an element in the list such that P(x) is true'?
[22:11:04] <bpalmer> list comprehensions are eloquent, for /else loops are also nice
[22:11:21] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[22:11:35] <grym> where predicate() is some function you write whose return value can be understood properly in a boolean context
[22:11:55] *** Quits: jay-m1261 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[22:11:55] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[22:12:06] <tusko> oh yeah, I think you can def do that even if you have to use a lambda
[22:12:18] *** Joins: wyclif (~wyclif@user/wyclif)
[22:12:24] <dminuoso> grym: Mm alright that will work.
[22:12:24] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[22:12:25] <dminuoso> Thanks
[22:12:59] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:13:04] <grym> dminuoso: and if you want the first (or some default); next(elem for elem in thelist if predicate(elem), default=some_default)
[22:13:09] <grym> if not specified, default is None
[22:13:12] <bpalmer> you can also do a generator object to save from collecting all the elements
[22:13:19] <bpalmer> as grym's new example shows
[22:13:26] *** Joins: KevinX (~KevinX@user/KevinX)
[22:13:59] <grym> right; you could write that as `lazy_query = (elem for elem in thelist if predicate(elem)); first=next(lazy_query, default=... q
[22:14:01] <bpalmer> but for/else loops do it in straightforward, easy to step through python.
[22:14:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[22:14:32] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 240 seconds)
[22:15:19] *** Quits: gopar (~gopar@2600:8804:670d:2f00:69f0:2d62:edef:623b) ()
[22:15:20] <dminuoso> Well, I already know there is only one element anyway.
[22:15:39] <dminuoso> In fact, in almost all cases this will search through a 1-element list anyway. :)
[22:15:44] <grym> next(...) is what i'd use then
[22:15:55] <grym> is what i use in this situation*
[22:15:59] *** Joins: crashrep (~crashrep@user/crashrep)
[22:16:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:16:49] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[22:16:58] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:17:10] *** Joins: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[22:18:10] *** Joins: justAstache (~justache@user/justache)
[22:20:58] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[22:21:28] <SnoopJ> next() doesn't use None as a default, it raises StopIteration if you didn't give it one
[22:22:08] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Remote host closed the connection)
[22:22:13] <grym> ah, right
[22:23:14] *** Joins: brownan (~brownan@2001:470:69fc:105::e01b)
[22:23:31] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[22:24:02] *** jeho2 is now known as jeho
[22:27:05] *** Stench is now known as Staunch
[22:27:19] *** Joins: CaptZapp (~captzapp@c-24-125-155-237.hsd1.ga.comcast.net)
[22:27:21] <bpalmer> if it's always going to be just one element, and most of the time the lists being iterated over are just one element, a list comprehension is likely to save overhead
[22:27:47] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[22:27:51] *** Quits: qlixed (~qlixed@8.243.49.226) (Ping timeout: 252 seconds)
[22:27:57] *** Quits: noobaroo (~noobaroo@user/noobaroo) (Quit: Leaving)
[22:28:46] <SnoopJ> bpalmer, versus what?
[22:28:50] *** Joins: Auron (Auron956@user/auron)
[22:28:58] *** Joins: Masterphi (~Masterphi@user/masterphi)
[22:29:07] <bpalmer> over a generator
[22:29:13] <SnoopJ> how do you figure
[22:30:04] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:30:35] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[22:30:39] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[22:30:43] <bpalmer> a generator has to set up a mechanism for tracking progress, for evaluating code in an isolated environment. a list comprehension doesn't.
[22:31:08] *** Joins: uxemacs (~timothy@user/uxemacs)
[22:31:29] *** Joins: qlixed (~qlixed@8.243.49.226)
[22:31:52] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[22:31:52] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[22:31:53] <bpalmer> I haven't benchmarked the overhead since python2 days, so I wouldn't swear to anything about performance, but it was true then and strikes me as probably true now.
[22:32:26] *** Joins: wakeup (~wakeup@user/wakeup)
[22:32:31] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[22:32:38] *** Quits: Babar (~Babar@171.233.210.64) (Read error: Connection reset by peer)
[22:32:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:32:51] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:34:12] *** Joins: goner (~tw@user/goner)
[22:34:26] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[22:34:42] <SnoopJ> they generate pretty similar code (which you'd expect, they both have to iterate) but the list comprehension has a bit of extra work to do (BUILD_LIST and LIST_APPEND)
[22:34:57] *** Joins: bahamas (~lucian@84.232.140.158)
[22:35:12] <SnoopJ> https://bpa.st/NYJA
[22:35:36] *** Joins: jpn (~jpn@user/jpn)
[22:36:12] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[22:36:37] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: mcleuder)
[22:37:30] *** Quits: Guest60 (~Guest60@97.65.218.94) (Quit: Client closed)
[22:40:10] *** Quits: pingpwn (~pingpwn@217.138.222.100) (Quit: Textual IRC Client: www.textualapp.com)
[22:40:30] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[22:42:03] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[22:42:51] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[22:43:29] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:44:14] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[22:44:41] *** Quits: sertsa (~sertsa@209.140.9.178) (Quit: Konversation terminated!)
[22:45:05] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:05] *** Quits: irf21k (~irf21k@2401:4900:336e:1da1:1:0:4fb8:9ff0) (Read error: Connection reset by peer)
[22:45:13] *** Quits: kiran (~kiranostr@78.40.148.178) (Read error: Connection reset by peer)
[22:45:17] *** Quits: goner (~tw@user/goner) (Quit: WeeChat 3.4.1)
[22:45:30] *** Joins: kiran (~kiranostr@78.40.148.178)
[22:45:55] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[22:46:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:47:27] *** Joins: weedmic (~weedmic@93-173-109-49.bb.netvision.net.il)
[22:47:32] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:47:56] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:48:11] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[22:48:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:49:00] *** Quits: pro_z_ (~pro_z@37.214.80.204) (Ping timeout: 250 seconds)
[22:49:31] *** Joins: jamea (~jamea@200.68.164.78)
[22:50:13] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[22:50:35] *** Joins: Pickchea (~private@user/pickchea)
[22:50:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:51:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:52:34] *** Joins: cozmo (~user@65.78.142.57)
[22:53:09] <orbisvicis_> ugh when I create a dataframe with a non-empty index and empty series, *some* of the series dtypes are converted, mainly int*->float
[22:53:21] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:7324:313a:3b30:860b) (Quit: pvergain)
[22:53:27] *** Quits: cosmo (~user@65.78.142.57) (Read error: Connection reset by peer)
[22:53:38] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[22:54:47] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:55:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[22:55:51] *** Joins: magla (~gelignite@d5362120.access.ecotel.net)
[22:56:13] *** Quits: subho (~subho@2405:201:9001:a0fc:7c63:6bdf:7cea:527a) (Remote host closed the connection)
[22:56:51] *** Joins: BrokenCo1 (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net)
[22:57:33] *** Quits: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[22:57:52] *** BrokenCo1 is now known as BrokenCog
[22:59:21] <Xano> Are protocols still the only way to define any kind of intersection type?
[23:00:46] *** Joins: fef (~thedawn@user/thedawn)
[23:01:03] <orbisvicis_> you mean like set intersection but with class object attribute lookup?
[23:01:33] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[23:02:04] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[23:02:35] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:02:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:03:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[23:03:49] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Ping timeout: 256 seconds)
[23:04:26] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[23:05:17] <jinsun__> yeah there are no intersection types https://github.com/python/typing/issues/213
[23:05:47] <jinsun__> but you can subclass multiple protocols to make a bigger protocol
[23:05:52] * SnoopJ blinks slowly at `os.path.join(save_path)`
[23:06:06] <dminuoso> Im not convinced protocols are really an example of intersection types in the theoretical sense.
[23:06:19] *** Quits: wakeup (~wakeup@user/wakeup) (Ping timeout: 256 seconds)
[23:06:56] <dminuoso> Or at least Im really not sure about their relationship
[23:07:01] *** Joins: wakeup (~wakeup@user/wakeup)
[23:07:28] *** Joins: Goblins (~mz@12.231.191.170)
[23:08:16] *** Joins: funhouse (~funhouse@user/funhouse)
[23:08:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[23:08:53] <jinsun__> Protocols themselves are not intersection types, but if you subclass two protocols you made a new Protocol that is intersection of the other two
[23:09:07] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[23:09:55] <phy1729> If you never isinstance, Union is similar to a type intersection
[23:10:33] <jinsun__> the problem with python type system is that you can't intersect nominal types or even one nominal type with another  structural type
[23:11:20] <Xano> jinsun__, I solved another issue by doing that, but that would be a bit much work for frequent and unique type casts for me. Maybe I'll just need to subclass this time instead
[23:11:25] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 240 seconds)
[23:11:45] *** Joins: subho (~subho@2405:201:9001:a0fc:c510:2ae0:a12:216f)
[23:11:53] <jinsun__> Union is the opposite of intersection, with unions you can only do operations that are valid for each type in the union, with intersection you would be allowed to do any operation that is valid for at least one of the types in the intersection
[23:12:03] <dminuoso> jinsun__: Well yeah, you can use protocols to emulate them. But they are *definitely* not the same.
[23:12:12] *** Quits: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[23:12:19] *** Joins: Enitin (~Enitin@82.180.145.230)
[23:12:40] *** Joins: parv (~quass@user/parv)
[23:13:01] <dminuoso> Im not aware of many really flexible type systems that admit both inference and intersectino types. :(
[23:13:49] <dminuoso> In most cases however coproduct types will get you most of the way.
[23:14:03] <dminuoso> (or protocols if you need something that is open)
[23:15:56] *** Joins: wakeup (~wakeup@user/wakeup)
[23:16:16] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[23:17:19] *** Quits: subho (~subho@2405:201:9001:a0fc:c510:2ae0:a12:216f) (Quit: subho)
[23:17:21] <dminuoso> jinsun__: Also, union is not quite the opposite. coproducts are.
[23:18:05] <dminuoso> or rather, coproducts and product types are dual to each other, intersection types are more specialized versions of coproduct types
[23:18:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:18:43] *** jeho1 is now known as jeho
[23:19:11] *** Joins: wyclif (~wyclif@user/wyclif)
[23:20:22] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[23:21:05] <jinsun__> well it sounds like the opposite from what people are asking in that typing issue, not idea the theoretical stuff
[23:21:39] *** Quits: kostkon_ (~androirc@athedsl-393845.home.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[23:22:18] *** Joins: bahamas (~lucian@84.232.140.158)
[23:23:18] <dminuoso> jinsun__: This is not really theorical, its of practical nature as well.
[23:23:53] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 256 seconds)
[23:23:54] <dminuoso> So in an intersection of say `Int and Unsigned` (of some size), the value `1` fits in there. But we cannot distinguish where it came from.
[23:23:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:24:05] <dminuoso> In a sum/coproduct type we can.
[23:24:11] <jinsun__> I know, I just don't know about what you mean by "intersection types in the theoretical sense"
[23:24:29] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: Leaving)
[23:24:41] *** Joins: wyclif (~wyclif@user/wyclif)
[23:25:35] *** Quits: wakeup (~wakeup@user/wakeup) (Ping timeout: 256 seconds)
[23:26:43] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[23:26:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[23:27:19] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:27:57] <jinsun__> I mean I know that it is practical, I don't know what coproduct type is either :D
[23:28:51] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:29:43] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[23:30:27] <dminuoso> a coproduct/sum type is sometimes also described as a tagged union
[23:30:37] <dminuoso> (or you can think of the latter as an implementation of the former)
[23:31:02] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc) (Ping timeout: 250 seconds)
[23:31:28] *** Quits: weedmic (~weedmic@93-173-109-49.bb.netvision.net.il) (Quit: Konversation terminated!)
[23:31:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[23:32:00] <dminuoso> In a set theoretical sense you can think of it as a disjoint/discriminated union
[23:32:01] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:32:40] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:32:47] <jinsun__> okay like rust enums?
[23:33:02] <dminuoso> Yeah
[23:33:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[23:33:25] <dminuoso> They are proper opposite of a sum type (like structs)
[23:33:36] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:34:10] <jinsun__> I don't think that's what people were asking for in the intersection types issue https://github.com/python/typing/issues/213 they wanted more like typescript's intersection type
[23:34:47] <jinsun__> though typescript only has protocols and no proper classes so that we kinda have already
[23:34:48] *** Lord_of_Life_ is now known as Lord_of_Life
[23:35:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[23:35:13] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:35:55] <dminuoso> jinsun__: No, typescript supports proper intersection types
[23:36:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:36:30] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[23:36:32] <dminuoso> You can simply write `type Foo = A & B`
[23:37:05] <dminuoso> Ah hold on
[23:37:11] <dminuoso> You are right, these are intersections of interfaces
[23:37:19] *** Joins: wakeup (~wakeup@user/wakeup)
[23:37:31] <jinsun__> so you can do that in python too by subclassing A and B if both are protocols, & is just syntactic sugar
[23:37:52] *** Joins: mike18_ (~geri@216.200.232.252)
[23:39:07] <mike18_> hi i run python in a docker - and have jenkins which triggers the run - in jenkins there is a Build timed out setting to kark the build as aborted - shouldnt that send SIGTERM to python?
[23:40:34] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[23:40:46] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 260 seconds)
[23:41:21] *** Joins: plastico (~plastico@neomutt/plastico)
[23:42:57] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (Ping timeout: 240 seconds)
[23:43:13] *** Joins: jpn (~jpn@user/jpn)
[23:43:45] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 252 seconds)
[23:45:00] *** Joins: smoke (~smoke@user/smoke)
[23:45:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:45:17] *** Joins: Midjak (~Midjak@82.66.147.146)
[23:45:51] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4.1)
[23:46:08] *** Quits: Goblins (~mz@12.231.191.170) (Remote host closed the connection)
[23:46:30] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[23:47:07] *** Joins: yamchah2_ (~yamchah2@user/yamchah2)
[23:47:50] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[23:48:15] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:50:04] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 272 seconds)
[23:50:05] *** yamchah2_ is now known as yamchah2
[23:50:28] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Killed (NickServ (GHOST command used by jeho1)))
[23:50:34] *** jeho1 is now known as jeho
[23:51:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:51:36] *** Quits: CaptZapp (~captzapp@c-24-125-155-237.hsd1.ga.comcast.net) (Quit: Leaving)
[23:52:06] *** Joins: DPA- (~DPA@2a05:41c0:0:8104::a3c:10d)
[23:52:26] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 245 seconds)
[23:52:40] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[23:53:18] <BrokenCog> anyone handy with pandas, I'm trying to figure out how to loop over a range of days (start, end) in blocks of weekdays.   I'm looking at pd.interval_range and date_range, but, they don't seem to align the dates by day.  anyone have any suggestions?
[23:53:27] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[23:54:01] *** Quits: blei86 (~blei@user/blei) (Quit: Client closed)
[23:58:02] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[23:58:06] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[23:59:35] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
