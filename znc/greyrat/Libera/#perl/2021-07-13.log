[00:00:35] *** Joins: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it)
[00:03:18] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:06:27] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Ping timeout: 255 seconds)
[00:08:27] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[00:09:37] *** Quits: MichaelOF (~michael@p200300eb8f097301ed32edad0de92a4c.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[00:12:56] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 256 seconds)
[00:13:00] *** Joins: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[00:13:53] <simcop2387> neat didn't know there was proof that the libera.net thing was freenode and not just a 3rd party trolling, https://crt.sh/?id=4844214523 same tls cert
[00:13:54] <Paperbot> Link title(s): [ crt.sh | 4844214523 ]
[00:14:44] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[00:14:56] <Grinnz> classic
[00:16:32] *** Joins: MichaelOF (~michael@p200300eb8f097301ed32edad0de92a4c.dip0.t-ipconnect.de)
[00:18:22] *** Parts: dvl (~dvl@user/dvl) (Textual IRC Client: www.textualapp.com)
[00:21:54] *** Quits: pflanze (~pflanze@2001:1a88:19e:4500:6c12:7dd4:d7d2:8072) (Remote host closed the connection)
[00:22:08] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:5ced:b8ce:c0e6:6441)
[00:22:45] *** Quits: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it) (Changing host)
[00:22:45] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[00:24:21] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[00:27:06] *** Quits: sverzel (~sverzel@2001:9b1:26ff:6100:6d9:f5ff:fe82:7f8f) (Read error: Connection reset by peer)
[00:27:18] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 276 seconds)
[00:27:26] *** Joins: sverzel (~sverzel@2001:9b1:26ff:6100:6d9:f5ff:fe82:7f8f)
[00:28:03] *** Joins: yzhernand (~yzhernand@2607:fb90:ab85:57cc:8cd9:4cff:fe6c:b70a)
[00:28:48] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 256 seconds)
[00:33:16] <gordonfish> simcop2387: What libera.net thing?
[00:33:56] <Grinnz> andrew lee bought libera.net and pointed irc.libera.net at freenode to try to steal people
[00:34:05] <gordonfish> I don't see any A records for libera.net
[00:34:16] <gordonfish> oh
[00:34:18] <gordonfish> wtf
[00:34:19] <Grinnz> Paperbot: dns irc.libera.net
[00:34:19] <Paperbot> Grinnz: DNS results for irc.libera.net: 139.162.201.178, 149.28.246.185, 136.244.117.110, 45.79.108.91, 95.179.154.126, 172.104.147.42, 172.104.27.105, 207.148.28.126, 2001:19f0:6401:1697:5400:3ff:fe75:91f2, 2600:3c01::f03c:92ff:fe63:2c83, 2a05:f480:1400:dfe:5400:3ff:fe75:96e4, 2001:41d0:601:1100::24a3, 2600:3c03::f03c:92ff:fe63:2c5b, 2607:5300:61:d9:66::, 2001:19f0:5:6b0d:5400:3ff:fe75:9226, 2a05:f480:1c00:16b:5400:3ff:fe75:96e7, 2a01:7e0...
[00:34:28] <Grinnz> Paperbot: dns irc.libera.chat
[00:34:29] <Paperbot> Grinnz: DNS results for irc.libera.chat: 130.239.18.120, 51.161.82.214, 188.240.145.102, 2001:6b0:e:2a18::120, 2607:5300:205:300::ae0
[00:34:45] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[00:34:55] <gordonfish> Ah irc.libera.net, not libera.net
[00:35:01] <gordonfish> That has all the records
[00:35:02] *** Quits: yzhernand (~yzhernand@2607:fb90:ab85:57cc:8cd9:4cff:fe6c:b70a) (Ping timeout: 256 seconds)
[00:35:33] <simcop2387> yes why need a site for a typo squatter
[00:35:41] <fizzie> (Well, one record, a CNAME.)
[00:35:53] <gordonfish> Isn't that grounds for filing an ICANN or whatever complaint, when someone is intentionally registering domains for the reason to hurt another
[00:36:01] *** Joins: yzhernand (~yzhernand@2607:fb90:ab85:57cc:2836:77ff:feb2:abed)
[00:36:26] * GumbyPAN CPAN Upload: Math-BigInt-1.999823 by PJACKLAM https://metacpan.org/release/PJACKLAM/Math-BigInt-1.999823
[00:36:26] * GumbyPAN CPAN Upload: Math-BigRat-0.2616 by PJACKLAM https://metacpan.org/release/PJACKLAM/Math-BigRat-0.2616
[00:36:29] * GumbyPAN CPAN Upload: bignum-0.53 by PJACKLAM https://metacpan.org/release/PJACKLAM/bignum-0.53
[00:36:30] <Grinnz> yes, that requires lawyers which andrew lee has
[00:36:32] <gordonfish> Or with the registrar he is using, as that is likely against their terms of service
[00:37:13] <gordonfish> I would contact the registrars abuse email or perhaps phone hotline
[00:38:06] <gordonfish> Registrar Abuse Contact Email: abuse@101domain.com
[00:38:11] <gordonfish> Registrar Abuse Contact Phone: +17604448674
[00:38:27] <gordonfish> Registrar: 101domain GRS Limited
[00:38:36] <gordonfish> Registrar IANA ID: 1011
[00:39:06] <gordonfish> We should all file a complaint via their abuse contact, as this is a clear case of abuse
[00:40:12] *** Quits: yzhernand (~yzhernand@2607:fb90:ab85:57cc:2836:77ff:feb2:abed) (Ping timeout: 255 seconds)
[00:40:25] *** Joins: yzhernand (~yzhernand@2607:fb90:ab85:57cc:c437:45ff:fe68:3292)
[00:40:52] <Grinnz> https://www.icann.org/resources/pages/policy-2012-02-25-en
[00:40:53] <Paperbot> Link title(s): [ Uniform Domain Name Dispute Resolution Policy - ICANN ]
[00:41:15] <Grinnz> complicating factor is that these aren't businesses
[00:41:26] * GumbyPAN CPAN Upload: App-ReportPrereqs-0.006 by SKIRMESS https://metacpan.org/release/SKIRMESS/App-ReportPrereqs-0.006
[00:41:27] <Grinnz> there's no commercial gain
[00:41:37] <gordonfish> No lawyer required, just clear documentation that registree (is that the right term?), someone who runs an IRC network, registered a domain exceedingly similar to a rival network and directs traffic from the 'irc' subdomain to his network, in a clear effort to mislead and decieve people.
[00:42:10] <gordonfish> I'm fairly certain any reputable registrar would take that seriously.
[00:42:52] <choroba> Isn't 101domain the one that basically registers anyone?
[00:43:17] <gordonfish> Isn't that what most registrars do?
[00:43:45] <choroba> well, I mean, when I look at my access log with invalid requests, most of them come from addresses registered at them
[00:43:49] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[00:43:55] <choroba> but maybe they're just huge
[00:44:06] <Grinnz> anyway i think it's really up to libera staff to report this properly
[00:44:16] <choroba> true
[00:44:18] <Grinnz> but we do have a vested interest in people not going to the wrong #perl
[00:45:30] <gordonfish> I am composing a straight forward email to get abuse address, as a concerned user. I'll see what they say. Grinnz: I agree libera staff should do a proper report, though it can help the case if more people report it to them, as that's what the abuse contact is for.
[00:46:05] <Grinnz> sure
[00:46:09] <Grinnz> you can also use https://www.101domain.com/report_abuse.htm
[00:46:10] <Paperbot> Link title(s): [ Report Abuse ]
[00:46:37] <gordonfish> Thanks
[00:51:46] *** Quits: nperez (~nperez@86-93-223-59.fixed.kpn.net) (Ping timeout: 272 seconds)
[00:52:31] <Harzilein> i still find the dot in the 005 NETWORK field silly
[00:52:48] <Harzilein> and the various postings were inconsistent about that too
[00:55:47] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[00:56:38] <gordonfish> What are you referring to?
[00:56:57] <rewt> i don't think spaces are allowed there
[00:57:27] <rewt> gordonfish, when you sign onto irc, the 005 line includes NETWORK=Libera.Chat
[00:58:12] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:ddde:7281:8e88:676d) (Ping timeout: 255 seconds)
[01:00:13] <gordonfish> ah
[01:00:27] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 276 seconds)
[01:00:27] *** Quits: yzhernand (~yzhernand@2607:fb90:ab85:57cc:c437:45ff:fe68:3292) (Ping timeout: 255 seconds)
[01:00:38] *** Joins: yzhernand (~yzhernand@2607:fb90:ab85:57cc:6015:c6ff:fe2b:7acf)
[01:00:56] <gordonfish> Abuse report sent.
[01:03:55] *** Quits: magla (~gelignite@55d4ea1a.access.ecotel.net) (Quit: Stay safe!)
[01:04:09] <Harzilein> then they should have chosen a network name that unambiguosly contains neither dot nor space.
[01:04:32] <Harzilein> and where preferably the NETWORK name reflects the actual spoken name
[01:04:57] *** Quits: yzhernand (~yzhernand@2607:fb90:ab85:57cc:6015:c6ff:fe2b:7acf) (Ping timeout: 255 seconds)
[01:05:10] <Harzilein> when i think of speaking out Libera.Chat loud i have to think of knuth's iTeX mock video with the bell as its sound logo
[01:05:26] <gordonfish> The network name could simply be 'Libera', as libera.chat is the domain name, no?
[01:06:03] *** Joins: yzhernand (~yzhernand@2607:fb90:e8a8:78cc:85c:f9ff:feb5:8f09)
[01:06:30] <gordonfish> (like, e.g., OFTC and oftc.net)
[01:07:27] <Grinnz> Libera.Chat is the name
[01:07:39] <Grinnz> as you can see in all of the trademarks
[01:08:14] <Grinnz> which ironically probably weakens the argument trademark-wise against libera.net
[01:08:53] <gordonfish> Grinnz: Yeah I see that, though those things tend to get normalized into something like 'Libera Chat' or 'LiberaChat' or so, but it really seems they want to use the dot.
[01:10:21] *** Quits: yzhernand (~yzhernand@2607:fb90:e8a8:78cc:85c:f9ff:feb5:8f09) (Ping timeout: 255 seconds)
[01:11:13] *** Joins: whynot (~whynot@37.73.62.17)
[01:11:40] <mjgardner> Sayre's law: "Academic politics is the most vicious and bitter form of politics, because the stakes are so low." IRC is next-level.
[01:16:22] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[01:25:10] *** jfoutais1 is now known as jfoutaise
[01:31:38] *** Quits: MichaelOF (~michael@p200300eb8f097301ed32edad0de92a4c.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[01:34:07] *** Joins: seekr (~seekr@130.44.163.10)
[01:37:07] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Read error: Connection reset by peer)
[01:37:08] *** Quits: perldoc (~perldoc@71.76.76.1) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[01:37:36] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[01:38:06] *** Joins: perldoc (~perldoc@71.76.76.1)
[01:55:06] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:10:03] *** Joins: nperez (~nperez@86-93-223-59.fixed.kpn.net)
[02:14:46] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[02:23:39] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Ping timeout: 276 seconds)
[02:24:22] *** Quits: xenu (~xenu@carychium-tridentatum.xenu.pl) (Read error: Connection reset by peer)
[02:24:52] *** Joins: xenu (~xenu@carychium-tridentatum.xenu.pl)
[02:27:15] *** Joins: xenu_ (~xenu@carychium-tridentatum.xenu.pl)
[02:29:00] *** Quits: xenu_ (~xenu@carychium-tridentatum.xenu.pl) (Client Quit)
[02:37:32] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[02:37:57] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 276 seconds)
[02:39:40] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[02:41:09] <gordonfish> Ok I could have sworn that Taco Bell had one the franchise wars of San Angeles, but some how history has been rewritten to that being Pizza Hut, wtf?
[02:43:41] <gordonfish> I was at a client where someone was watching the film and it happened to be the seen where they go to fine dining and now every resturant is a Pizza Hut (complete with modern logo.) 
[02:44:30] <mst> what
[02:44:43] <gordonfish> First it changes to Greedo shooting first, now this. Why can't they (film makers, directors, etc) just leave films alone
[02:44:49] <mst> "now all restaurants are Taco Bell"
[02:44:51] <gordonfish> mst: Demoliction Man from 1993
[02:45:00] <mst> gordonfish: no, no, I know, see my last line
[02:45:06] <gordonfish> Yes
[02:45:12] <gordonfish> That is the original version
[02:45:38] <mst> my "what" was not confusion, it was "what the actual fuck" :)
[02:45:44] <gordonfish> But whatever streaming service they were using had Pizza Hut
[02:46:25] <mst> also I love pizza ... which is exactly -why- I think Taco Bell deserved to win over Pizza Hut ;)
[02:47:03] <gordonfish> Yes, and it's complete rubbish that PH would ever beat TB in that scenario
[02:47:13] <mst> Taco Bell was at least an edible ersatz version of its source cuisine
[02:47:28] *** Joins: whynot_ (~whynot@88.155.66.79)
[02:47:42] *** Quits: whynot (~whynot@37.73.62.17) (Killed (NickServ (GHOST command used by whynot_!~whynot@88.155.66.79)))
[02:47:55] * mst cackles
[02:48:01] <gordonfish> s/had \Kone/won/ # ug
[02:48:07] <mst> sorry, back on freenode back when it existed
[02:48:24] <mst> while stuff like REGAIN was the correct way to get your nick back
[02:48:35] <mst> there was an idiot who'd squat 'mst' when I wasn't online
[02:48:51] <mst> I politely asked him to move
[02:49:01] <mst> he basically told me to fuck off
[02:49:25] <Adura> Must've been from Colorado.
[02:49:26] <mst> so I GHOSTed him, waited for him to reconnect, GHOSTed him again, repeat for an hour or so of me laughing my ass off
[02:49:49] <mst> never had that problem again
[02:50:38] <mst> I'm aware that using nickserv that was is officially disapproved of by the staff, but it solved the problem nicely permanently ;)
[02:51:08] <gordonfish> haha
[02:51:28] <gordonfish> Though to be fair that could be plenty of people who have those initials
[02:51:36] <gordonfish> *their could
[02:51:45] <mst> oh, yes, entirely fair, that's why I /msg'ed him first and asked nicely
[02:52:10] <gordonfish> Yes, no reason to respect that someone else registered it first
[02:52:16] <gordonfish> no reason not to
[02:52:36] <gordonfish> gah, too hot here, 104F
[02:52:52] <mst> and my message was basically "I already own this, I'm telling you so you can sort things out yourself rather than me using nickserv to force you"
[02:53:11] <mst> I was trying to be nice ... his response wasn't
[02:53:13] <mst> so, welp
[02:53:32] <gordonfish> Either a troll or some entitled plank
[02:53:57] <mst> and therefore either way I have no regrets about my subsequent actions
[02:54:30] <mst> I am totally aware that sometimes I fail at nice, though I've got better at avoiding that happening accidentally year on year
[02:54:52] <mst> but when I make an active point of holding out an olive branch and the other person sets it on fire, well, you get what you get
[02:55:41] <gordonfish> That sucks, olive oil has a low smoking point
[02:56:00] <mst> oh well done :D
[02:56:09] *** Joins: GEttR (~GEttR@user/gettr)
[02:59:02] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[02:59:04] *** whynot_ is now known as whynot
[03:01:05] *** Joins: seand (~seand@69.54.136.33)
[03:06:16] <ether> Pizza Hut was great if you like sponges and oil
[03:06:48] <ether> and I have nostalgia over all-you-can-eat at their dine-in locations. and dessert pizza.
[03:07:58] <gordonfish> ether: Funny you say that, their last mail ads that I saw showed a pizza who end crust looked really sponge like
[03:11:04] <simcop2387> You can get more oil by buying the stuffed crust
[03:12:05] <mst> my favourite local pizza place will do cheese stuffed crusr
[03:12:12] <mst> also their pizza is actually good
[03:16:37] <xenu> hot dog stuffed crust > cheese stuffed crust
[03:18:14] <xenu> although i'm not sure if they're comparable, cheese stuffed crust is an attempt to improve pizza
[03:18:21] <xenu> while hot dog stuffed crust is two dishes in one
[03:18:22] <gordonfish> Never heard of hotdog stuffed crust
[03:18:53] <xenu> domino's does that in some countries
[03:19:18] <xenu> apparently pizza hut too
[03:20:34] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[03:20:57] <mst> xenu: depends on the cheese
[03:21:35] <mst> xenu: also, btw, I'm sure they're a pale imitation of the real thing but I've recently developed a fondness for one of my local shops' version of pierogis
[03:22:34] *** Quits: waltman (waltman@2601:4a:701:4451:ef9b:623:4240:f21d) (Ping timeout: 246 seconds)
[03:23:35] *** Joins: waltman (waltman@2601:4a:701:4451:7ea:8d77:1f56:9f2c)
[03:27:20] *** Joins: semeion (~semeion@user/semeion)
[03:27:20] *** mnemonic is now known as Guest7668
[03:29:10] <gordonfish> mmm pierogis
[03:30:18] *** Quits: Guest7668 (~semeion@user/semeion) (Ping timeout: 255 seconds)
[03:31:40] <xenu> there's no one true version of pierogi, it's like with hamburgers, pretty much anything goes and most of them suck
[03:34:16] *** Quits: whynot (~whynot@88.155.66.79) (Quit: leaving)
[03:34:42] <mjgardner> My Polish-Russian mom-mom made the best pierogis.
[03:35:04] <mjgardner> And I will hear no different.
[03:35:13] <mst> xenu: whatever I have, I can get meat filled and potato+cheese filled and two minutes in boiling water and they're fucking excellent munchable
[03:36:41] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:ddde:7281:8e88:676d)
[03:37:39] <xenu> if by 'cheese' you mean cottage cheese we call that kind ruthenian pierogis (pierogi ruskie)
[03:40:58] <mst> xenu: aha, fair enough, and yes - I've been buying a pack of each and throwing half of a pack of each into a pan as a meal
[03:41:45] * GumbyPAN CPAN Upload: FFI-Platypus-1.54_01 by PLICEASE https://metacpan.org/release/PLICEASE/FFI-Platypus-1.54_01
[03:43:14] <gordonfish> ether: This is the ad I was referring to: https://gfish.info/ph-sponge-crust.jpg
[03:43:31] <gordonfish> Tell me those end crusts don't look like sponges..
[03:46:19] <xenu> i believe the three most common kinds are 1. ruthenian pierogis 2. with minced meat 3. with sauerkraut & mushrooms
[03:46:26] <mst> xenu: I get quite a bit of filled pasta as a thing - pierogis are ace
[03:46:34] <xenu> at home at christmas we usually had with mushrooms and eggs, but that's not common at all
[03:46:55] <mst> damnit, I can buy 1 and 2 but 3 sounds amazing and I've not seen that for sale yet
[03:47:01] <mst> shall have a look though, sounds ace
[03:47:09] <ology> pierogis++
[03:47:37] <xenu> also various fruit-filled pierogis are common but i don't like them
[03:47:43] <ology> -ies even
[03:47:54] <mst> xenu: other people can enjoy that
[03:48:02] * mst wants carbs and/or protein
[03:48:36] *** Quits: nirnam (~nirnam@1.47.30.117) (Read error: Connection reset by peer)
[03:50:40] *** Joins: mnemonic (~semeion@user/semeion)
[03:52:13] *** Quits: orange97 (~quassel@ppp079166076079.access.hol.gr) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:53:15] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Read error: Connection reset by peer)
[03:54:09] *** Joins: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it)
[03:54:24] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[03:56:53] *** Quits: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it) (Changing host)
[03:56:53] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[03:58:08] *** Joins: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d)
[04:01:31] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:02:42] *** Quits: Pali (~pali@user/pali) (Ping timeout: 255 seconds)
[04:02:48] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[04:05:54] *** Joins: xvx (~s@185.48.63.111)
[04:21:49] * GumbyPAN CPAN Upload: Net-FullAuto-1.0000617 by REEDFISH https://metacpan.org/release/REEDFISH/Net-FullAuto-1.0000617
[04:22:17] *** Quits: e1f (~user@141.117.1.143) (Quit: goodnight...)
[04:23:45] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[04:24:50] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Client Quit)
[04:25:34] <mst> xenu: heh, yep, the packages I have are PL first then EN description wise and the PL description of the potato ones says 'pierogi ruskie'
[04:34:10] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 256 seconds)
[04:43:33] *** Quits: gryphn (~gryphon@102.129.145.174) (Quit: kthxbye)
[04:46:38] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[04:47:05] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[04:49:20] *** Quits: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net) (Quit: Leaving)
[04:51:44] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 256 seconds)
[05:14:23] *** Joins: Figworm (FiggyWitIt@user/figworm)
[05:18:49] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[05:19:12] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 255 seconds)
[05:26:32] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[05:33:09] *** Joins: jgaz (~jgaz@2600:8805:d800:b3e::2a2)
[05:41:21] *** Quits: jgaz (~jgaz@2600:8805:d800:b3e::2a2) (Quit: Leaving)
[05:41:48] *** Joins: pizdets_ (~pizdets@183.182.110.194)
[05:42:10] *** Quits: pizdets (~pizdets@183.182.115.100) (Ping timeout: 245 seconds)
[05:50:08] *** Quits: Jonno_FT1 (~come@api.carswap.me) (Quit: Reconnecting)
[05:50:15] *** Joins: Jonno_FTW (~come@api.carswap.me)
[05:51:21] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.2)
[05:52:04] *** Quits: Jonno_FTW (~come@api.carswap.me) (Changing host)
[05:52:04] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[05:54:08] <pragma-> tm604: I was just going over the log from earlier. I meant to respond to this but I got distracted: <tm604> with all those people giving away code for free, I feel it'd be rude /not/ to use as much of CPAN as possible!
[05:54:48] <pragma-> tm604: That was my stance at first. That is why I have sooooo many CPAN dependencies for my IRC bot now. Over the years, I'd look to CPAN first. 
[05:55:11] <mst> pragma-: this is what plx + carton are for :D
[05:55:28] <pragma-> tm604: But recently when I tried to install my bot from scratch on a new machine that had a bare-bones Perl, doing the CPAN installs took hours because of all the downloading and all the compiling and all the testing -- especially the testing.
[05:55:38] <pragma-> tm604: so lately I've been trying to AVOID more CPAN modules...
[05:55:44] <mst> oh, no, it took time to run tests
[05:55:47] <mst> so use 'cpanm -n'
[05:56:00] <pragma-> Hours is a lot of time.
[05:56:06] <mst> the testing is IMO good but it's a trade-off
[05:56:09] <Adura> Time is money, and CPU cycles, and watts.
[05:56:12] <pragma-> People don't want to sit there for hours to install an IRC bot :(
[05:56:15] <mst> so turn it off if you don't want to make that trade-off
[05:57:09] <Adura> On Windows, there are tests that take infinite time.
[05:57:32] <mst> pragma-: so if there was a cpan client that was a plain 'untar' for pure perl things and for XS stuff compiled and then just installed that would work for you?
[05:57:57] <pragma-> Oh, I'm happy enough with cpanm with tests off and force enabled
[05:58:16] <mst> just wondering, I'm going to write that anyway
[05:59:59] <pragma-> It was just that I'd started getting complaints that my IRC bot was way too heavy and it took forever to install CPAN modules -- complaints from non-Perl people who just wanted an IRC bot. At the time, I wasn't aware of cpanm.
[06:00:05] <pragma-> This was a few years back.
[06:00:11] <mst> oh, fair
[06:00:12] <pragma-> When I decided to stop going to CPAN for new modules
[06:00:29] <mst> I've dealt with that by bundling pure perl stuff
[06:00:49] <mst> then doing normal installation for the XS bits because it's nice to be sure those bits actually fucking work
[06:00:50] <Grinnz> i deal with that by providing a cpanfile
[06:00:56] <Grinnz> with a comment for how to use it
[06:01:12] <mst> Grinnz: pre-cpanm the install times were totally a thing as a complaint
[06:01:24] <mst> I still hate --notest but I understand why it's useful
[06:01:26] <Grinnz> yeah well, pre-cpanm i didn't have anything with dependencies
[06:01:40] <mst> d'awwww
[06:02:03] * mst forgets you came to town after I helped miyagawa write it
[06:04:48] <pragma-> https://github.com/Grinnz/maverick/blob/master/cpanfile is EXACTLY what i've been googling everyhwere for the last couple of days!
[06:04:48] <Paperbot> Link title(s): [ maverick/cpanfile at master · Grinnz/maverick · GitHub ]
[06:05:11] <pragma-> I have a really shitty MODULES file with one CPAN entry per line and I've been wanting to get rid of that and make it more liek cpanfile
[06:05:12] <pragma-> excellent!
[06:05:30] <mst> plx --init; plx --cpanm -llocal --installdeps .;
[06:05:33] <mst> works really nicely
[06:05:53] <Grinnz> yes, i make heavy use of the optional features ability since different maverick plugins and different perldoc.pl backends have heavy deps
[06:06:12] <pragma-> right! this is great! i have some optional features that are heavy too!
[06:07:27] <Grinnz> doesn't really work for cpan dists though, for that the translation is "put the plugins with heavy deps in their own dist
[06:07:29] <Grinnz> "
[06:08:17] <pragma-> I know very little about the CPAN ecosystem.
[06:08:20] <Grinnz> or just document the optional feature deps
[06:08:51] <mst> pragma-: that's fine, we know more about it than anybody should ever want to
[06:16:06] <pragma-> mst: does plx expect the Perl app to use the /lib, /script, directory structure? I currently have my main script in the / root directory and then a /PBot directory for my core bot modules and then a /Plugins directory for plugins
[06:16:18] *** Quits: adherzog (uid387168@id-387168.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[06:16:19] <pragma-> to use plx, would I need to move /PBot and /Plugins to a /lib directory?
[06:16:27] <pragma-> I'd been considering doing that anyway, tbf.
[06:16:51] <mst> pragma-: it -defaults- to those directories but everything is configurable
[06:17:00] <pragma-> Back when I started PBot ~15 years ago, I was ignorant of CPAN and proper Perl directory structure. I went with what was familiar to me.
[06:17:08] <Grinnz> (but you should use them because there's no reason not to)
[06:17:12] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:17:42] <Grinnz> anyway, you're going to want to namespace your plugins better if you want to install them
[06:17:45] <pragma-> Yeah, I'll just convert my directories to be more Perlish
[06:17:55] <Grinnz> this is why all my modules for maverick are under Maverick::
[06:18:02] <mst> pragma-: http://paste.scsys.co.uk/595548
[06:18:02] <Paperbot> Link title(s): [ magnet_web paste from Someone at 217.168.150.38... ]
[06:18:22] <pragma-> How can I do that without putting the plugins under /PBot/Plugins because I'd rather they be outside of the /PBot source because they aren't core plugins
[06:18:41] <pragma-> I'd liek the namespace to be PBot::Plugins::Whatever, that's nice ... but then they'd have to live under /PBot, right?
[06:18:41] <Grinnz> you'd have to make separate dist structures then
[06:18:46] <mst> pragma-: so you can put things wherever you like
[06:19:14] <mst> pragma-: I use the libspec system regularly to e.g. let me develop in one git repo and have it depend on another git repo checked out nearby
[06:19:39] <mst> pragma-: note, plx is built for -me- first, it may not work well for you, if it doesn't just fucking ignore it
[06:20:08] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d) (Ping timeout: 256 seconds)
[06:20:17] <Grinnz> separate dist structures == separate lib dirs, separate cpanfiles, etc
[06:20:36] <mst> pragma-: or, "it should be possible to cinfigure it to do everything you wanted, but if you don't think it's worth the effort, fair game"
[06:20:53] <Grinnz> i.e. in your main directory you have a subdirectory for the core dist and for a plugins dist etc
[06:21:29] <Grinnz> the main requirement for the layout everything tends to expect is to have a single lib/ dir per dist, and every module inside there map its filepath directly to its package name
[06:22:03] <pragma-> /lib/PBot/Core/ and /lib/PBot/Plugin/
[06:22:04] <pragma-> hmm
[06:22:25] <Grinnz> if splitting them up within one dist is sufficient for you that's certainly easier to work with
[06:22:37] <Grinnz> (meaning, splitting them up by namespace)
[06:24:44] *** Joins: Su-Shee (~Susanne@p4ff49fb5.dip0.t-ipconnect.de)
[06:26:31] <pragma-> My goal is to allow users of my IRC bot to get 3rd party plugins from external sources and use them without needing to copy them into /lib/PBot/Plugin/ but instead use ~/.pbot/plugin or ~/PBot/Plugins while having the namespace be, e.g., PBot::Plugin::Weather
[06:27:15] <pragma-> I don't want them to have to mess with the PBot source layout to install a PBot plugin
[06:27:32] <Grinnz> i mean, another word for "copying them into..." is "installing"
[06:27:49] <pragma-> I'd like them to be installable outside of /lib/PBot/... -- is that possible?
[06:28:07] *** Quits: Su-Shee_ (~Susanne@p4ffc7273.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[06:28:19] <Grinnz> your bot and the plugins would be installable to wherever the user decides, ideally
[06:28:51] <Grinnz> but without making the bot installable... you'd have to do things more manually
[06:29:16] <pragma-> Right, I'd like the Plugins directory to be anywhere the user wants it to be, but the PBot source itself would be in the appropriate /lib/PBot location, but the Plugin .pm files could live anywhere the users wanted
[06:29:49] <pragma-> e.g. ~/.pbot/plugins/Weather.pm or ~/PBot/Plugins/Weather.pm but the main core files of the bot would be /lib/PBot/
[06:30:16] <pragma-> 3rd party plugins outside of the /lib structure is what I'm looking for 
[06:30:19] *** Joins: gast0n (~g4570n@user/gast0n)
[06:30:34] <Grinnz> wherever they go would be their own lib structure
[06:30:41] <mst> pragma-: I would say it's easiest to require it to be ~/.pbot/PBot/Plugin/Weather.pm
[06:30:41] <Grinnz> that's how perl modules get loaded
[06:30:44] <pragma-> e.g., installable to the user's home directory
[06:31:17] <mst> pragma-: bitch please, 'installable to an arbitrary directory' I solved over 10 years ago with local::lib :P
[06:31:17] <pragma-> mst: how would I do that?
[06:32:16] <pragma-> ~/.pbot/PBot/Plugin/Weather.pm looks good to me. I'd like to first look for a plugin in /lib/PBot/Plugin/ and then failing to find it there, look in ~user/.pbot/PBot/Plugin -- this seems good
[06:32:36] <Grinnz> yeah, so if you `use lib "$ENV{HOME}/.pbot";` then they can be organized as mst mentioned, or "$ENV{HOME}/.pbot/lib/perl5" would find plugins installed by cpanm -l ~/.pbot
[06:32:47] <pragma-> excellent
[06:32:50] <pragma-> I will read up on this
[06:33:08] <mst> pragma-: er
[06:33:37] <mst> pragma-: 'cpanm -l$HOME/.pbot/ Module::Name'
[06:34:06] <mst> pragma-: then 'use lib "$ENV{HOME}/.pbot/lib/perl5";'
[06:34:14] <mst> pragma-: should be enough for a start
[06:34:29] <pragma-> I will play around with this, thanks.
[06:34:53] <mst> pragma-: cpanm's installing into ~/perl5 is local::lib
[06:35:01] <mst> pragma-: -l specifies a path for one
[06:35:25] <mst> pragma-: I wrote local::lib 10+ years ago cos I was annoyed about trying to explain why to stop avoiding cpan in f#perl
[06:35:38] <mst> pragma-: so asking questions about it is fine :D
[06:35:56] <pragma-> I won't be shy!
[06:36:59] <mst> pragma-: most of the regulars in here have solid ideas and understanding of how to use this shit
[06:37:26] <mst> pragma-: but I invented it because I was annoyed about specifically this sort of situation, so yeah :D
[06:37:44] <pragma-> thanks for that
[06:39:44] <pragma-> Hm, maybe it isn't really such a big deal for 3rd party external plugins to install into /lib/PBot/Plugin.
[06:40:14] <pragma-> I was thinking about separating 3rd party stuff from core PBot stuff
[06:40:21] <pragma-> but maybe I'm thinking about this wrong
[06:41:09] <mst> pragma-: I would tend to prefer them to end up in separate places
[06:41:16] * pragma- nods
[06:41:18] <pragma-> thats how I felt
[06:41:36] <mst> pragma-: key reason: if somebody else writes a plugin and then later you use the same name for a plugin
[06:41:53] <mst> *their* bot should stay using theirs, not cause git vconfusion or an overwrite
[06:41:58] <Grinnz> i tend to reference plugins by name so that would be a problem anyway
[06:42:47] <mst> this is something I've been figuring out for xcl apps
[06:43:05] <Grinnz> but yeah, dumping into the already-git-layout of the core isn't ideal
[06:43:17] <Grinnz> plenv solves it by having a specific directory for external things
[06:43:39] <mst> right, it's not totally awful but plx is still better ;)
[06:46:00] <pragma-> I'd never really thought about using cpan for my bot. My Perl knowledge isn't good enough yet.
[06:46:08] <pragma-> I had no intention of using CPAN for my plugins.
[06:46:34] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[06:46:59] <pragma-> I mean, look at it. https://github.com/pragma-/pbot  Is that really CPAN worthy?
[06:47:00] <Paperbot> Link title(s): [ GitHub - pragma-/pbot: A pragmatic Perl IRCv3 Bot ]
[06:47:16] <Grinnz> cpannable is still the long term goal for maverick, but... it's not approaching any time soon
[06:47:30] <mst> pragma-: I've seen some of the stupid shit on cpan, 'worthy' is the wrong question mate :D
[06:47:35] <pragma-> heh
[06:47:45] <Grinnz> but making it installable by cpanm doesn't necessarily require everything needed to put it on actual CPAN
[06:47:57] <pragma-> so it's easy to become a CPAN author? even I could do it? I wouldn't be making people upset by adding more garbage to CPAN? :p
[06:48:09] <Grinnz> yes and probably
[06:48:12] <pragma-> I don't feel right putting ito n CPAN
[06:48:20] <pragma-> I don't feel worthy.
[06:48:44] <Grinnz> as long as you don't squat on common namespaces, you get your own cpan dir for a reason
[06:49:42] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:49:42] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[06:49:42] *** finn_elija is now known as FinnElija
[06:49:48] <pragma-> I have much to improve. Maybe in a few years :)
[06:50:01] <pragma-> I'm not even using Moo yet or Object::Pad
[06:51:20] <Adura> You don't always need objects.
[06:52:33] <pragma-> I do like the "type-safety" object frameworks provide. There's been a time or two wehre I've typoed a hash key without noticing at all.
[06:53:10] <pragma-> perl happily autovivifies it and away we go off to nowhere!
[06:53:32] <Grinnz> that's more typo-safety, type safety is a whole other rabbit hole
[06:53:36] <Grinnz> but yes, it's good
[06:53:39] <mst> pragma-: p3rl.org/autovivification
[06:54:03] <mst> pragma-: also lol Moo is my fault too
[06:54:15] <mst> pragma-: for simpler stuff see LeoNerd's p3rl.org/Struct::Dumb
[06:54:37] <pragma-> LeoNerd's been strongly pushing Object::Pad
[06:55:11] <Grinnz> for objects yes - Struct::Dumb can't really be called an object system, the name is self-descriptive
[06:55:14] <mst> pragma-: not so much pushing as reminding everybody it's there and he'd be interested if he tried it
[06:55:16] <pragma-> oh ok
[06:55:21] <Grinnz> it only provides storage and accessors
[06:55:22] <pragma-> mst: right
[06:55:50] <mst> pragma-: I was much the same after I first wrote Moo
[06:56:02] <mst> pragma-: so it'd be hypocritical of me to complain :D
[06:56:24] <Grinnz> for other simpler options there's Class::Tiny::Chained or Class::Tiny::Immutable for mutable/non-mutable objects respectively
[06:56:42] <Grinnz> and it occurs to me there should probably be an lvalue version
[06:56:47] <Grinnz> but meh
[06:56:50] <Grinnz> just use Moo
[06:56:54] <mst> also p3rl.org/Mu for easy declaration and p3rl.org/Mu::Tiny as the pocket version thereof
[06:59:48] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 256 seconds)
[07:00:35] *** Quits: jabberwok (~wlindley@75.105.20.104) (Quit: Leaving.)
[07:04:32] <Adura> What does the Pad stand for in Object::Pad, anyway?
[07:09:19] <Grinnz> lexical variables are stored in a construct called the pad, which is how Object::Pad stores object properties
[07:09:42] <xenu> perlbot: acrofind pad
[07:09:46] <perlbot> xenu: Pain and Distress (scale)
[07:09:50] <xenu> the real answer
[07:09:51] <Grinnz> lol
[07:11:18] <Adura> Simpler than I thought, guess a Perl object system need not have too complicated a name.
[07:11:38] <Grinnz> in core, it will just be called 'class' most likely, so the current name doesn't matter too much
[07:15:14] <Adura> Not 'canonize"? heh
[07:15:39] <Grinnz> there are large swaths of things which could be canonized
[07:16:03] <Adura> Why'd I do that with quotes... bah.
[07:16:59] <Grinnz> better than simcop2387's code quoting
[07:18:31] <simcop2387> which code quoting?
[07:21:04] <genio> The Email::Abstract build problem on 5.34 for windows is weird.
[07:21:27] <genio> t/abstractions.t ....... 1/165 Don't know how to handle Email::Simple at t/abstractions.t line 66.
[07:22:29] <simcop2387> that doesn't sound so simple
[07:22:33] <simcop2387> genio++
[07:23:59] <genio> https://metacpan.org/dist/Email-Abstract/source/lib/Email/Abstract.pm#L45-65 isn't happy
[07:23:59] <Paperbot> Link title(s): [ lib/Email/Abstract.pm - metacpan.org ]
[07:28:32] <Grinnz> $method seems irrelevant to that sub
[07:28:40] <Grinnz> unless it's just for the error message
[07:30:05] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[07:30:53] *** Quits: seekr (~seekr@130.44.163.10) (Quit: Goodbye, cruel world.)
[07:34:22] <genio> https://github.com/genio/Perl-Dist-Strawberry/tree/p534 for anyone wanting to play along 
[07:34:23] <Paperbot> Link title(s): [ GitHub - genio/Perl-Dist-Strawberry at p534 ]
[07:35:04] <genio> This, in particular, controls the flow of the build: https://github.com/genio/Perl-Dist-Strawberry/blob/p534/share/64bit-5.34.0.1.pp
[07:35:05] <Paperbot> Link title(s): [ Perl-Dist-Strawberry/64bit-5.34.0.1.pp at p534 · genio/Perl-Dist-Strawberry · GitHub ]
[07:35:40] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[07:36:06] <genio> The InstallModules step is just plain error after error. I'm skipping so many failures already but now some of the things I've had to skip are biting me in the butt later
[07:40:12] *** Quits: xvx (~s@185.48.63.111) (Ping timeout: 276 seconds)
[07:42:06] *** Joins: Martchus (~martchus@dynamic-077-009-034-120.77.9.pool.telefonica.de)
[07:43:23] *** Quits: Martchus_ (~martchus@2a01:c23:bc7a:c000:d250:99ff:fe49:3cce) (Ping timeout: 255 seconds)
[07:59:24] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 255 seconds)
[08:00:16] *** Joins: krismatrix (~krismatri@38.80.149.51)
[08:04:02] <krismatrix> anyone here familiar with XML::RSS? How do you add XML tags that aren't defined?
[08:09:47] <genio> What have you tried and what happened when you did?
[08:10:37] <krismatrix> Well..for example...this works: my $rss = XML::RSS->new(version => '2.0'); 
[08:11:08] <krismatrix> But my $rss = XML::RSS->new(version => '2.0', "xmlns:googleplay" => "http://www.google.com/schemas/play-podcasts/1.0"); 
[08:11:09] <Paperbot> Link title(s): [ Play Podcasts Schema ]
[08:11:11] <krismatrix> doesnt appear to
[08:12:05] <krismatrix> as for what it does....hold on
[08:12:12] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[08:13:15] <krismatrix> I basically get the same output as though I never the xmlns:googleplay
[08:13:31] <krismatrix> i never did the xmlns:googleplay.
[08:15:51] <simcop2387> krismatrix, look at the add_module method
[08:19:22] <krismatrix> hmm..interesting..
[08:19:38] <simcop2387> ->add_module(prefix => 'googleplay', url => ...)
[08:20:54] <genio> That thing's docs need some organization and more =head2 
[08:21:40] <genio> Mojo has babied me and now everything should be neatly organized and alphabetized with examples first
[08:23:04] <krismatrix> just googleplay? I did get an error because I included xmlns. 
[08:24:08] <krismatrix> thank you...that trick solved on problem. And I assume it is possible to use add_module for adding prefixes under channel or item?
[08:28:35] <simcop2387> I don't know.  Probably though
[08:28:47] <simcop2387> rindolf is the author of he's around
[08:29:44] *** Quits: Michelle (~michelle@2407:8800:bc20:200a:4178:e7ee:713a:1592) (Ping timeout: 255 seconds)
[08:30:18] <rindolf> simcop2387: yo
[08:31:00] <krismatrix> hey rindolf.
[08:31:31] <rindolf> krismatrix: hey, XML-RSS issues?
[08:31:45] <krismatrix> yes. How do I add elements in channel or item that you haven't defined by default?
[08:32:57] <rindolf> krismatrix: read the source: https://blog.codinghorror.com/learn-to-read-the-source-luke/ 
[08:32:57] <Paperbot> Link title(s): [ Learn to Read the Source, Luke ]
[08:34:41] <krismatrix> lol
[08:41:48] *** Quits: tbcr (~tbcr@user/tbcr) (Ping timeout: 265 seconds)
[08:50:02] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[08:51:09] *** Quits: Dorward_ (~dorward@daviddorward.plus.com) (Ping timeout: 255 seconds)
[09:01:48] <rindolf> krismatrix: i'm serious
[09:02:11] <krismatrix> i know.
[09:08:16] <rindolf> krismatrix: i got a tpf grant to write tests and refactor xml-rss, but i havent used it a lot since
[09:10:08] <rindolf> krismatrix: i dislike web feeds now anyway :(
[09:10:36] <krismatrix> yeah..but I need to create RSS feeds to submit to google and apple for a podcast.
[09:11:05] <rindolf> krismatrix: subclass?
[09:11:15] <krismatrix> huh?
[09:11:32] <rindolf> perlbot: monkey patch
[09:11:33] <perlbot> rindolf: No factoid found. Did you mean one of these: [minicpan] [monkeys] [mongo] [mom, xml] [mooinglemur] [dh-make-perl] [mung] [markup] [metacpan] [mxyzptlk]
[09:11:41] <rindolf> perlbot: monkey patching
[09:11:41] <perlbot> rindolf: No factoid found. Did you mean one of these: [minicpan] [monkeys] [mongo] [mooinglemur] [mung] [mom, xml] [saying bit] [dh-make-perl] [markup] [metacpan]
[09:11:50] <rindolf> damn
[09:12:37] <rindolf> krismatrix: xml-rss uses classes and objects
[09:13:24] <krismatrix> ok
[09:17:51] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:18:02] *** Joins: Michelle (~michelle@2407:8800:bc20:200a:a478:8c61:c379:7b7b)
[09:18:03] <krismatrix> # make sure there aren't already 15 items
[09:18:14] <krismatrix> This is for attributes not items right?
[09:18:46] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:19:34] <rindolf> krismatrix: well, good luck
[09:20:38] <rindolf> krismatrix: you know modern Perl 5, right?
[09:20:47] <krismatrix> sort of.
[09:21:17] <krismatrix> or at least...I happen to follow it as far as i can tell.
[09:21:24] <krismatrix> I'm just not great with perl Objects.
[09:21:34] <rindolf> krismatrix: i see
[09:21:50] <Adura> Perl isn't either.
[09:22:37] <krismatrix> what ?
[09:22:40] <rindolf> "let's make perl objects great again"
[09:23:14] <krismatrix> oh..you mean perl isn't great with object either (is what you meant)
[09:23:32] <rindolf> Adura: what Perl isn't
[09:28:23] <krismatrix> as far as I am able to understand...i don't think XML::RSS allows you to add non-standard items.
[09:31:31] <Adura> Bang on it until it does.
[09:32:48] <krismatrix> well...i don't think it is even possible. So how does banging on it help.
[09:35:49] <krismatrix> alright...i give up for tonight. I'll check it out further later i guess.
[09:38:34] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[09:42:30] <rindolf> sigh... 
[09:42:48] <rindolf> ungrateful
[09:46:04] *** Joins: horsepatat (~horsepata@80.89.76.62)
[09:46:23] *** Joins: gast0n (~g4570n@user/gast0n)
[09:46:27] *** Quits: gast0n (~g4570n@user/gast0n) (Client Quit)
[09:47:19] <rindolf> i can charge him 1e6 dollars for doing this task. i don't get out of bed for less: https://www.shlomifish.org/humour/fortunes/show.cgi?id=shlomif-fact-emma-watson-19
[09:47:20] <Paperbot> Link title(s): [ Shlomi Fish’s Emma Watson Fact #19 - Fortune ]
[09:56:28] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[10:05:25] *** Joins: ufobat_ (~martin@dynamic-077-002-069-014.77.2.pool.telefonica.de)
[10:16:45] *** Quits: randir (~randir@95-25-235-134.broadband.corbina.ru) (Remote host closed the connection)
[10:31:17] *** Joins: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com)
[10:31:43] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[10:32:19] *** Joins: randir (~randir@93.159.239.42)
[10:33:26] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 256 seconds)
[10:35:40] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Remote host closed the connection)
[10:39:17] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[10:40:45] *** Joins: diskin (~diskin@46.41.108.147)
[10:49:00] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 272 seconds)
[10:49:21] *** Joins: gce108__ (~gce@64-250-5-223.gvec.net)
[10:52:39] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:ddde:7281:8e88:676d) (Ping timeout: 255 seconds)
[10:53:31] *** Joins: yzhernand (~yzhernand@2607:fb90:e8a3:51ac:e849:30ff:fe82:db55)
[10:57:48] *** Quits: yzhernand (~yzhernand@2607:fb90:e8a3:51ac:e849:30ff:fe82:db55) (Ping timeout: 256 seconds)
[10:58:11] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[11:00:36] *** Joins: emanuele61 (~emanuele6@93-35-160-28.ip55.fastwebnet.it)
[11:00:38] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 272 seconds)
[11:06:30] * GumbyPAN CPAN Upload: Data-Properties-1.04 by JV https://metacpan.org/release/JV/Data-Properties-1.04
[11:22:00] *** Joins: habamax (~habamax@user/habamax)
[11:26:50] *** Quits: gce108__ (~gce@64-250-5-223.gvec.net) (Read error: Connection reset by peer)
[11:27:13] *** Joins: art1 (~romeyke@p200300ccdf04f700808ab3e648887521.dip0.t-ipconnect.de)
[11:27:47] *** Joins: gce108__ (~gce@64-250-5-223.gvec.net)
[11:36:33] * GumbyPAN CPAN Upload: CryptX-0.072_002 by MIK https://metacpan.org/release/MIK/CryptX-0.072_002
[11:52:29] *** Joins: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d)
[12:08:15] *** Quits: gce108__ (~gce@64-250-5-223.gvec.net) (Remote host closed the connection)
[12:09:37] *** Joins: gce108 (~gce@user/gce108)
[12:19:41] *** Quits: ignarps (~iggy@user/ignarps) (Ping timeout: 255 seconds)
[12:20:19] *** Joins: shorne_ (~shorne@g142.61-125-55.ppp.wakwak.ne.jp)
[12:21:10] *** Quits: shorne (~shorne@g164.115-65-218.ppp.wakwak.ne.jp) (Ping timeout: 258 seconds)
[12:26:36] *** Joins: Pali (~pali@user/pali)
[12:32:21] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[12:34:39] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 276 seconds)
[12:41:40] * GumbyPAN CPAN Upload: QRCode-Base45-0.02 by YENYA https://metacpan.org/release/YENYA/QRCode-Base45-0.02
[12:42:48] *** Joins: gamo1 (~Thunderbi@cm-93-156-61-102.telecable.es)
[12:43:05] *** Joins: FozzWorth__ (~FozzWorth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[12:43:08] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Remote host closed the connection)
[12:43:08] *** gamo1 is now known as gamo
[12:43:12] *** Joins: v^ (~v@user/ctrl)
[12:44:54] *** Quits: v` (~v@user/ctrl) (Ping timeout: 272 seconds)
[12:46:48] *** Quits: FozzWorth_ (~FozzWorth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[12:46:51] *** emanuele61 is now known as emanuele6
[12:47:11] *** Quits: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it) (Changing host)
[12:47:11] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[12:56:07] *** Joins: Lynx_ (~x@fuchshai.geomar.de)
[12:56:55] *** Joins: ignarps (~iggy@user/ignarps)
[12:58:53] *** Quits: Juerd (juerd@computervrede.nl) (Remote host closed the connection)
[13:00:39] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 276 seconds)
[13:01:14] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 252 seconds)
[13:05:12] *** Quits: Pali (~pali@user/pali) (Ping timeout: 276 seconds)
[13:08:08] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[13:13:51] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[13:14:10] <art1> Hi, exists an async-IO compatible variant of File::Find? Background: need a scan of large and deep mounted NFS which will benefit from async-IO…
[13:15:26] <lopid> would it benefit?
[13:16:50] <Botje-> art1: I don't see how you could benefit from that. scanning the filesystem is not really async-friendly
[13:17:34] <Botje-> art1: my first reaction was "shell out to find/fzf/rg --files and read the results as they come in"
[13:18:02] <Botje-> actually, just rg --files.
[13:18:10] <Botje-> fzf is an interactive tool
[13:19:53] <art1> Because the NFSD allows parallel access, it will benefit. This could be measured if you have multiple find-tasks
[13:20:23] <Botje-> rg is multithreaded, so just use that ;)
[13:20:46] <art1> @Botje: I want a perl-only solution ;)
[13:21:05] <lopid> even if it's inferior?
[13:21:44] <Botje-> art1: fair enough. start writing code to manage a few parallel Perl processes and a shared queue between them.
[13:22:06] *** Joins: Juerd (juerd@computervrede.nl)
[13:22:47] <art1> Jep. Parallel::Iterator would match... Thought, there are IO::Async compatible modules…
[13:23:29] *** Joins: tbcr (~tbcr@75.183.195.9)
[13:25:09] <Adura> How much faster do you expect it to be?
[13:27:59] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:36:37] <Altreus> Yeah IO::Async can use fork and hides everything behind futures
[13:37:04] <Altreus> fairly nice interface but maybe you don't need more than just a Parallel:: module
[13:37:07] <Botje-> If the remote server can handle it, I would expect near-perfect scaleup
[13:37:14] <rindolf> art1: https://metacpan.org/pod/File::Find::Object
[13:37:15] <Paperbot> Link title(s): [ File::Find::Object - An object oriented File::Find replacement - metacpan.org ]
[13:37:17] <Altreus> I tend to reach out to Parallel::ForkManager
[13:37:53] *** Joins: choroba (~E.Choroba@88.146.255.106)
[13:37:57] <Altreus> rindolf++ # already found and solved a problem
[13:38:03] <rindolf> art1: note that i maintain it
[13:40:00] <curdlesnoot> rindolf: hmm. the advent calendar has gone. still available at https://web.archive.org/web/20200120144049/https://perladvent.pm.org/2006/2/ though.
[13:40:00] <Paperbot> Link title(s): [ 2006 Perl Advent Calendar: Peeking under the tree ]
[13:41:05] <art1> rindolf: Thx
[13:41:10] <lopid> where's the async bit?
[13:41:55] <rindolf> art1: you're welcome 
[13:44:30] <rindolf> Altreus: "Ariana Grande has one less problem with Chuck Norris."
[13:46:51] <Altreus> lopid: the async bit is where it says "Now you can have more than one find in the same program"
[13:47:17] <Altreus> Actually doing that in parallel is a job for other modules :)
[13:47:23] <lopid> must be on the advent page
[13:47:48] <Altreus> hey I've read this article before!
[13:47:53] <Altreus> I wonder why it was taken down
[13:48:09] <Altreus> I guess maybe it just lapsed and wasn't maintained
[13:49:04] <rindolf> this is awful and great at the same ttime: https://www.youtube.com/watch?v=DLkbRJ96b7s
[13:49:04] <Paperbot> YouTube video linked by rindolf: "Problem" by Ariana Grande feat. Iggy Azalea (cover) - published by Trinity And Dalena
[14:01:11] <choroba> curdlesnoot: I can still see it at https://www.perladvent.org/2006/2/
[14:01:11] <Paperbot> Link title(s): [ 2006 Perl Advent Calendar: Peeking under the tree ]
[14:02:34] <rindolf> Altreus: https://metacpan.org/pod/Parallel::Map::Segmented#SEE-ALSO
[14:02:35] <Paperbot> Link title(s): [ Parallel::Map::Segmented - use Parallel::Map on batches / segments of items. - metacpan.org ]
[14:02:46] <curdlesnoot> choroba: oh, huh. so it is. my connection must have been playing up at that exact moment.
[14:03:58] <rindolf> note the "#SEE-ALSO"
[14:15:53] <art1> rindolf: File::Find::Object is ten times slower than File::Find, the reason is the recursive calls to _calc_current_item_obj(). But it has a much cleaner interface. I will play with it…
[14:16:54] <rindolf> art1: i'm aware it is slower
[14:21:16] *** Quits: ethoxy (~exit-host@slave.sapi01.de) (Quit: brb)
[14:21:18] <rindolf> art1: https://shlomif-tech.livejournal.com/20200.html
[14:21:20] <Paperbot> Link title(s): [ Shavin' Another Second - Shlomif's Technical Posts Community — LiveJournal ]
[14:21:58] <Adura> Execution speed is the only objective measure of code.
[14:24:19] <rindolf> Adura: ram consumption
[14:25:16] <rindolf> Adura: number of lines w trailing whitespace
[14:25:28] <Adura> Well, sure... There's an assumption you'd have enough RAM to run it. ;p
[14:26:04] <rindolf> tab/spaces mix
[14:26:08] <art1> rindolf: Thx, it was a very good explanatory article…
[14:26:22] <rindolf> art1: you're welcome 
[14:27:01] <rindolf> Adura: https://www.wired.com/2016/04/average-webpage-now-size-original-doom/
[14:27:02] <Paperbot> Link title(s): [ The Average Webpage Is Now the Size of the Original Doom | WIRED ]
[14:27:22] <Adura> It's probably slower than DOOM, at that. ;p
[14:27:43] <art1> That Perl is not so good for recusions, I have already noticed in other own projects. 
[14:28:15] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:48] <art1> The problem with 'stat' is that due to the context switch you always have to wait for the operating system to respond (see io-wait-time). I'll experiment with parallel access and multiple File::Find::Object objects, see if it helps in my special case.
[14:31:01] *** Joins: csrf (~csrf@user/csrf)
[14:36:07] *** Joins: KnoP (~KnoP@ip-109-43-112-175.web.vodafone.de)
[14:37:52] <LeoNerd> Multiple objects won't help you at all
[14:37:57] *** Quits: KnoP (~KnoP@ip-109-43-112-175.web.vodafone.de) (Client Quit)
[14:38:00] *** Joins: xvx (~s@185.48.63.111)
[14:38:18] <LeoNerd> You'll have to fork or thread it. Which practically means one of the parallel solutions - e.g. Parallel::Map
[14:38:36] <LeoNerd> You might be able to use the async libuv filesystem wrappers, only I haven't written that yet
[14:38:41] <LeoNerd> because I haven't made any of it work on Windows
[14:38:47] <LeoNerd> becuse I can't find anyone whop knows Windows. :(
[14:42:18] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: No Ping reply in 180 seconds.)
[14:43:44] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[14:43:52] <rindolf> Adura: i mean - speed is not the only objective measure
[14:47:16] <Adura> Yes, I get your RAM point. Resource usage is a consideration.
[14:58:53] *** Joins: yzhernand (~yzhernand@2607:fb90:e8a6:6407:e053:41ff:fe42:45df)
[14:59:57] <aquanight> LeoNerd: what's the issue you're having for Windows?
[15:02:45] <LeoNerd> tests fail
[15:02:48] <LeoNerd> UDP and TCP ones
[15:03:34] <LeoNerd> http://www.cpantesters.org/cpan/report/404b59b7-6d0d-1014-83ef-0b5676a13fd6  -- specifically these two
[15:03:50] *** Quits: yzhernand (~yzhernand@2607:fb90:e8a6:6407:e053:41ff:fe42:45df) (Ping timeout: 272 seconds)
[15:04:04] <rindolf> Adura: yes, 
[15:04:11] <LeoNerd> https://metacpan.org/release/PEVANS/UV-1.909/source/t/11-tcp-open.t  -- this script just outright exits before running -anything-
[15:04:11] <Paperbot> Link title(s): [ t/11-tcp-open.t - metacpan.org ]
[15:04:17] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[15:04:49] <LeoNerd> https://metacpan.org/release/PEVANS/UV-1.909/source/t/12-udp-open.t -- this one runs a single test then exits
[15:04:50] <Paperbot> Link title(s): [ t/12-udp-open.t - metacpan.org ]
[15:05:09] <LeoNerd> I don't have a Windows box and I know nothing about Windows anyway, so.. I'm developing double-blind on it
[15:07:15] <LeoNerd> I don't even know if it's supposed to work or not. Maybe it isn't and I should just "skip" those two files and call it done
[15:08:10] *** Joins: cousteau (~cousteau@user/cousteau)
[15:08:13] <cousteau> Hi 
[15:09:00] <cousteau> Should I *always* use `readline $fh` rather than `<$fh>`? 
[15:09:12] <LeoNerd> There's no reason not to
[15:09:31] <LeoNerd> They literally compile to the same thing, except that the former is about a billion times more newbie-friendly and.. possibly more futureproof
[15:09:49] <cousteau> Well, the <> version is shorter and looks cooler 
[15:10:05] <LeoNerd> If you wanted shorter and "cooler" programs you'd be writing in APL
[15:10:16] <rindolf> LeoNerd: i hate the windows desktop ui/ux :(
[15:10:38] <rindolf> so i use appveyor
[15:11:09] <cousteau> Also if I do `readline $fh;` that'll read 1 line; if I do `<$fh>;` that'll... what?  Read the whole file unless in scalar context? 
[15:11:18] <LeoNerd> It'll behave -identically-
[15:11:24] <LeoNerd> They compile to the same optree
[15:11:32] <LeoNerd> The compiler literally forgets which was which
[15:12:22] <LeoNerd> perlbot: deparse2 [ <$fh>, readline $fh ]
[15:12:26] <Altreus> Assuming it knew what you meant with the <> version in the first place
[15:12:27] <perlbot> LeoNerd: Output at: http://perl.bot/p/5o5ek1
[15:12:51] <LeoNerd> And yes, in fact when deparseing it prefers the readline() syntax
[15:12:54] <cousteau> Altreus: right.  I had problems with sub and <> before. 
[15:13:29] * cousteau can't click that link 
[15:14:12] <cousteau> I guess my stupid irc client doesn't know what .bot is
[15:14:55] <rindolf> diophantoz: "it doesn't take a witch to fix this computer. all it takes is a philips screwdriver -- an old ibm pc clones commercial i imagined starring https://en.wikipedia.org/wiki/Melissa_Joan_Hart as a child who was just taught fixing PC computers
[15:14:55] <Paperbot> Link title(s): [ Melissa Joan Hart - Wikipedia ]
[15:15:30] <cousteau> Will <$fh> and readline($fh) both read a single line when called on their own?  I don't know what the default context is 
[15:15:46] <LeoNerd> THEY BEHAVE IDENTICALLY
[15:15:50] <LeoNerd> I am not sure how many more times I have to say it
[15:16:00] <LeoNerd> They are as identical as  my $x = 0x10;  vs  my $x = 16;
[15:16:06] <LeoNerd> They are two different spellings for _the same idea_
[15:16:20] <cousteau> LeoNerd: I got it, they behave identically 
[15:16:30] <ilmari> cousteau: what do you mean by "on their own". void context is not list context, so they read one line
[15:16:41] <cousteau> Now, HOW THE HECK DO THEY (BOTH) BEHAVE? 
[15:16:49] <ilmari> cousteau: TRY IT AND SEE!
[15:16:57] <LeoNerd> One "line" in scalar context, all the content in list context
[15:17:03] <LeoNerd> See $/ for the definition of "line"
[15:17:15] <ilmari> "on their own" might mean void context?
[15:17:50] <rindolf> LeoNerd: "binary integers are the bestest". a number is a platonic ideal, dude.
[15:17:55] <LeoNerd> Context comes from outside. That is why it is called "context"
[15:17:58] <cousteau> I meant if I have a Perl line consisting only of `readline($fh);` which doesn't assign the return value anywhere. 
[15:18:09] <ilmari> cousteau: what happened when you tried?
[15:18:09] <LeoNerd> Then that is entirely pointless
[15:18:12] <aquanight> void context is in most cases the same as scalar context
[15:18:20] <aquanight> LeoNerd: not exactly: it would skip a line
[15:18:30] <LeoNerd> Hmm.. Fair point in this case
[15:18:51] <cousteau> ilmari: bit hand-tied right now because I'm on a phone, but yeah I'm gonna try it 
[15:19:06] <cousteau> LeoNerd: right, I intend to discard the first line of a file 
[15:19:26] <aquanight> perlbot: sweval my $x = join "\n", 1..5; open my $fd, "<", \$x; readline $fd; my $z = readline $fd; say $z; close $fd;
[15:19:26] <cousteau> aquanight: thanks! 
[15:19:27] <ilmari> basheval: (echo "one"; echo "two"; echo "three") | perl -E 'my $first = <>; <>; my $second = <>; say for $first, $second'
[15:19:27] <perlbot> aquanight: 2  
[15:19:29] <perlbot> ilmari: one␤␤three␤␤
[15:19:48] <cousteau> I'll test it just to humor ilmari though 
[15:19:55] <ilmari> cousteau: if it's an android phone, termux is your friend
[15:20:18] *** v^ is now known as v`
[15:20:38] * ilmari has git, perl, python, rust and postgres on his phone, to name a few
[15:21:25] <cousteau> OK I realized I didn't actually need to create an input file (using stdin) nor Perl script (using -e) 
[15:21:57] * GumbyPAN CPAN Upload: Future-AsyncAwait-0.52 by PEVANS https://metacpan.org/release/PEVANS/Future-AsyncAwait-0.52
[15:22:00] <cousteau> So yeah, <>; discards a single line 
[15:22:30] <cousteau> Sorry for the confusion everyone (specially LeoNerd), and thanks! 
[15:23:55] <Adura> LeoNerd, trying to install UV with Cygwin does this: /usr/lib/perl5/5.32/x86_64-cygwin-threads/CORE/perl.h:1003:13: fatal error: sys/wait.h: No such file or directory
[15:24:15] <Adura> Yet, it seems to exist... spooky
[15:24:22] <LeoNerd> That looks far away from anything I've written
[15:25:05] <ilmari> Adura: where is your sys/wait.h, and what was the command that emitted that error?
[15:25:36] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 276 seconds)
[15:25:38] <Adura> Just install UV from cpan, and wait.h is in /usr/include/sys and /usr/include
[15:26:04] <ilmari> Adura: please show the entire output using the paste URL in the topic
[15:26:35] <Adura> It's not that I must get this working, I just found it odd.
[15:32:00] <ilmari> well, we want it to work too, but we can't do that if you won't tell us exactly what failed
[15:32:09] <Adura> I'm on it.
[15:33:05] <Adura> Think it'd announce, oh well. https://l.perl.bot/p/fovlvs
[15:33:06] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[15:36:04] <cousteau> Can I open a file with CRLF line endings in any platform?  Some googling suggests <:crlf but I don't see it documented in open 
[15:36:42] <cousteau> Ugh, this is the Perl 5.8.9 documentation, what the heck Google 
[15:36:59] * GumbyPAN CPAN Upload: Date-5.2.8 by SYBER https://metacpan.org/release/SYBER/Date-5.2.8
[15:36:59] * GumbyPAN CPAN Upload: Protocol-HTTP-1.1.4 by SYBER https://metacpan.org/release/SYBER/Protocol-HTTP-1.1.4
[15:37:01] * GumbyPAN CPAN Upload: Protocol-WebSocket-Fast-1.2.3 by SYBER https://metacpan.org/release/SYBER/Protocol-WebSocket-Fast-1.2.3
[15:37:06] <ilmari> perlbot: tell cousteau about perldoc -f open
[15:37:07] <perlbot> cousteau: https://perldoc.perl.org/functions/open
[15:37:08] * GumbyPAN CPAN Upload: UniEvent-1.2.5 by SYBER https://metacpan.org/release/SYBER/UniEvent-1.2.5
[15:37:13] * GumbyPAN CPAN Upload: UniEvent-HTTP-1.0.3 by SYBER https://metacpan.org/release/SYBER/UniEvent-HTTP-1.0.3
[15:37:19] * GumbyPAN CPAN Upload: UniEvent-HTTP-Manager-1.0.3 by SYBER https://metacpan.org/release/SYBER/UniEvent-HTTP-Manager-1.0.3
[15:37:26] * GumbyPAN CPAN Upload: XLog-1.1.2 by SYBER https://metacpan.org/release/SYBER/XLog-1.1.2
[15:37:31] * GumbyPAN CPAN Upload: XLog-File-1.0.5 by SYBER https://metacpan.org/release/SYBER/XLog-File-1.0.5
[15:37:36] <ilmari> specifically https://perldoc.perl.org/functions/open#Specifying-I/O-layers-in-MODE
[15:37:37] <Paperbot> Link title(s): [ open - Perldoc Browser ]
[15:37:37] * GumbyPAN CPAN Upload: XS-Framework-1.5.0 by SYBER https://metacpan.org/release/SYBER/XS-Framework-1.5.0
[15:37:43] * GumbyPAN CPAN Upload: XS-libpanda-1.5.4 by SYBER https://metacpan.org/release/SYBER/XS-libpanda-1.5.4
[15:37:54] <ilmari> aaa, a SYBERflood!
[15:37:57] <LeoNerd> Someone's been busy
[15:37:57] <cousteau> ilmari: Google was kind enough to insert 5.8.9/ after the .org/ in that link of yours for some reason 
[15:38:51] <cousteau> So Ctrl-F crlf turned out empty 
[15:39:03] <Botje-> googling for perldocs tends to do that.
[15:39:10] <ehuelsmann[m]> Extremely fast, but also secure? And fast in comparison to what?
[15:39:12] <Botje-> it doesn't do versions well.
[15:39:29] <ilmari> why the hell would google do that? it even has     <link rel="canonical" href="https://perldoc.perl.org/functions/open">
[15:39:30] <Paperbot> Link title(s): [ open - Perldoc Browser ]
[15:40:09] <ehuelsmann[m]> Can it be exposed on a network boundary like nginx? Or should it be shielded from the bad outside world?
[15:40:29] <ilmari> cousteau: either way, don't use google to search for perl documentation. use perldoc (the site or the commandline tool) or metacpan
[15:42:50] <LeoNerd> Oh, yeah google is terrible at things
[15:42:52] <cousteau> ilmari: I'd say "lesson learned" but history proves otherwise 
[15:44:03] <Adura> Seems it's a problem with all XS module building on this Cygwin install, hm.
[15:44:26] <cousteau> Actually it showed the canonical link as the 2nd result and the 5.8.9 link as the 3rd.  Why did I click the 3rd link and not the 2nd?
[15:44:41] <cousteau> Google AND my brain are terrible at things. 
[15:47:00] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Model-DB-1.04 by LTM https://metacpan.org/release/LTM/Mojolicious-Plugin-Model-DB-1.04
[15:47:11] <fizzie> It's all grouped together for me, with the canonical link up top, and various versions below it. https://zem.fi/tmp/open.png -- well, maybe with a different search term.
[15:56:18] <LeoNerd> I guess if we lack any Windows people to help me I might have to as the libuv folks instead
[16:00:00] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[16:01:29] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:02:56] *** Joins: ufobat__ (~martin@dynamic-095-115-027-137.95.115.pool.telefonica.de)
[16:05:25] *** Joins: KnoP (~KnoP@ip-109-43-112-175.web.vodafone.de)
[16:05:38] *** Quits: KnoP (~KnoP@ip-109-43-112-175.web.vodafone.de) (Client Quit)
[16:07:10] *** Quits: ufobat_ (~martin@dynamic-077-002-069-014.77.2.pool.telefonica.de) (Ping timeout: 272 seconds)
[16:09:59] *** Joins: nirnam (~nirnam@1.47.30.117)
[16:20:48] <cousteau> Is "" 0 from an arithmetic point of view, or is it an error to use "" when a number is expected? 
[16:21:41] <Altreus> sort of both
[16:21:52] <Altreus> it's a warning and also you get 0
[16:22:00] <Altreus> Fatal warnings would make it an error
[16:22:19] <Altreus> sweval: 0 + ""
[16:22:21] <perlbot> Altreus: Argument "" isn't numeric in addition (+) at (IRC) line 1. 0
[16:22:28] <Altreus> sweval: 0 + "anything"
[16:22:29] <perlbot> Altreus: Argument "anything" isn't numeric in addition (+) at (IRC) line 1. 0
[16:22:44] <Altreus> sweval: 0 + "15" # anything except numbers
[16:22:46] <perlbot> Altreus: 15
[16:23:06] <Altreus> sweval: 0 + "15 stuff" # careful, though
[16:23:08] <perlbot> Altreus: Argument "15 stuff" isn't numeric in addition (+) at (IRC) line 1. 15
[16:23:31] <Altreus> it isn't numeric, but it's numeric enough to have a value
[16:24:27] <LeoNerd> It isn't _purely_ numeric, perhaps the message should say
[16:25:37] <xq> sweval: 2 + "inf"
[16:25:38] <perlbot> xq: Inf
[16:26:14] <xq> sweval: 2 + "nan"
[16:26:16] <perlbot> xq: NaN
[16:27:27] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 255 seconds)
[16:27:44] *** Joins: deadmarshal (~deadmarsh@95.38.112.166)
[16:28:00] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[16:28:04] <xq> sweval: 2 << "inf"
[16:28:06] <perlbot> xq: 2
[16:28:18] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[16:28:20] <xq> sweval: 2 | "nan"
[16:28:21] <perlbot> xq: 2
[16:29:15] *** Joins: VAZYLA (~vazyla@185-146-220-26.box.freepro.com)
[16:31:48] <Altreus> nyan
[16:35:53] * LeoNerd ponders a parody of Nyan Cat, called Cyan Cat
[16:37:05] * GumbyPAN CPAN Upload: XS-Parse-Keyword-0.10 by PEVANS https://metacpan.org/release/PEVANS/XS-Parse-Keyword-0.10
[16:38:55] <Altreus> nan cat
[16:40:04] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[16:40:44] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[16:41:41] <Altreus> missingno cat
[16:42:05] * GumbyPAN CPAN Upload: Wikibase-Datatype-0.09 by SKIM https://metacpan.org/release/SKIM/Wikibase-Datatype-0.09
[16:54:53] *** Joins: jabberwok (~wlindley@75.105.20.104)
[17:05:26] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:06:33] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: Bye)
[17:08:03] *** Joins: kensanata (~user@user/kensanata)
[17:09:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:10:06] <kensanata> I use perlbrew and recently I decided to give the fish shell a try. Perlbrew comes with a perlbrew.fish script which I use, so 'which perl' gives my the right now. Nevertheless, when I run the tests for one of my applications, these fail. If I run them in bash, they work. Any ideas of what I might me be looking for, or what to doublecheck?
[17:11:49] <kensanata> Hm. Trying $ENV{PATH} = join(':', split(/ /, $ENV{PERLBREW_PATH}), $ENV{PATH}) …
[17:13:22] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:13:42] <kensanata> I wonder why there was a space in there.
[17:17:09] * GumbyPAN CPAN Upload: Date-ManipX-Almanac-0.001 by WYANT https://metacpan.org/release/WYANT/Date-ManipX-Almanac-0.001
[17:19:39] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 255 seconds)
[17:22:05] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[17:22:36] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 276 seconds)
[17:23:19] *** Joins: yzhernand (~yzhernand@2607:fb90:54d8:8eb2:4851:1fff:fe5d:2534)
[17:25:25] *** Joins: krismatrix (~krismatri@38.80.149.51)
[17:25:55] *** Quits: horsepatat (~horsepata@80.89.76.62) (Read error: Connection reset by peer)
[17:28:52] <lopid> should be using "type" instead of "which"…
[17:35:26] <krismatrix> I'd like some help walking through an idea in XML::RSS. Can I add a new required field in my code? For example my writing $_REQ_v2_0{item}{googleplay:description} = "abcd"; 
[17:37:11] * GumbyPAN CPAN Upload: Dist-Zilla-BeLike-CSJEWELL-0.994-TRIAL by CSJEWELL https://metacpan.org/release/CSJEWELL/Dist-Zilla-BeLike-CSJEWELL-0.994-TRIAL
[17:37:21] <krismatrix> i guess not. i get errors.
[17:37:51] <Botje-> krismatrix: show code on a pastebin
[17:38:20] <krismatrix> there isn't any code other than XML:RSS source.
[17:39:25] <Botje-> you said "in my code"
[17:39:27] *** Quits: yzhernand (~yzhernand@2607:fb90:54d8:8eb2:4851:1fff:fe5d:2534) (Ping timeout: 255 seconds)
[17:39:30] <krismatrix> I think there isn't a way in XML::RSS to add new item elements or channel elements.
[17:39:37] <Adura> You can put quotes around those hash keys.
[17:39:50] <Adura> That : one is the problem.
[17:39:59] *** Joins: yzhernand (~yzhernand@2607:fb90:54d8:8eb2:2868:22ff:fe51:d5dc)
[17:40:15] <krismatrix> I meant I want to add it in my code file. My code file contents have no bearing to the question in this case.
[17:40:43] <krismatrix> Adura, yes...i did add it. messed up in typing here.
[17:40:46] <krismatrix> thank u
[17:43:47] <Botje-> krismatrix: that googleplay:description should be a child of <item>? or an attribute?
[17:44:02] <krismatrix> child
[17:50:47] <Botje-> you could monkeypatch XML::RSS::PRivate::Output::Base::_out_item_desc
[17:51:35] <krismatrix> what is a monkeypatch?
[17:51:36] <Botje-> depending on which version of RSS you're outputting, that might be sufficient.
[17:51:45] <Botje-> override the function definition after importing it.
[17:53:17] <krismatrix> right...i guess that was why i was tring to do $_REQ_v2.0{item}{google:play}...but i guess i don't understand how to modify it correctly.
[18:00:13] <Botje-> you need to add the field to each item and then hack the code so that it renders the tag.
[18:00:32] <Botje-> (for some inexplicable reason that module relies on string concatenation to write XML *hisss*)
[18:03:04] *** Quits: yzhernand (~yzhernand@2607:fb90:54d8:8eb2:2868:22ff:fe51:d5dc) (Ping timeout: 272 seconds)
[18:03:52] *** Joins: yzhernand (~yzhernand@129.85.8.233)
[18:05:06] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Remote host closed the connection)
[18:08:29] <Botje-> krismatrix: what should the content of <googleplay:description> be relative to <description> ?
[18:08:36] <Botje-> the Google spec says it will read from both.
[18:08:39] <krismatrix> same level
[18:08:47] <Botje-> no, the content.
[18:09:06] <Botje-> do you want both tags? just one of them? with the same content?
[18:09:20] <krismatrix> I was planning on adding both tags with the same content..yes.
[18:09:27] <krismatrix> And also I needed to add the itunes stuff.
[18:09:54] <Botje-> you can do that by monkeypatching the function I highlighted.
[18:10:03] <Botje-> but it's probably easier to shop around for a new module.
[18:10:26] *** Quits: zeus (~user@user/kamyl) (Ping timeout: 250 seconds)
[18:11:12] <krismatrix> yeah
[18:11:29] *** Joins: zeus (~user@user/kamyl)
[18:11:40] <krismatrix> it almost feels like it would be better for me to just use a base XML module...and then manually add everything that I want to add.
[18:11:50] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[18:12:45] *** Quits: Juerd (juerd@computervrede.nl) (Ping timeout: 255 seconds)
[18:12:46] <Botje-> or even just a templating module that does XML escapes.
[18:14:39] <krismatrix> right.
[18:21:00] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[18:22:15] * GumbyPAN CPAN Upload: Astro-App-Satpass2-0.047_01 by WYANT https://metacpan.org/release/WYANT/Astro-App-Satpass2-0.047_01
[18:25:23] <gordonfish> Man I love how resilient Linux is. Motherboard goes bad, just pop the drives into a spare unused system, a little modprobe here and there, and away you go. Trying doing that with any vintage of Windows. Seriously.
[18:25:44] *** Joins: Juerd (juerd@computervrede.nl)
[18:28:16] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[18:29:02] <gordonfish> (Technically it /can/ be done with windows, if you know what registry entries to wipe, and can even get it to boot - hard drive controller needs to recognized and loaded for starters. Generally not worth it.)
[18:29:40] <rindolf> gordonfish: "it doesn't take a witch to fix this computer. all it takes is a philips screwdriver -- an old ibm pc clones commercial i imagined starring https://en.wikipedia.org/wiki/Melissa_Joan_Hart as a child who was just taught fixing PC computers
[18:29:41] <Paperbot> Link title(s): [ Melissa Joan Hart - Wikipedia ]
[18:32:32] <rindolf> RandalSchwartz: hi
[18:34:38] <leitz> Accepting the risk of being shunned, I've posted why I prefer to use pure Perl core modules instead of depending on lots of CPAN code.   https://perlmonks.org/?node_id=11134957
[18:34:40] <Paperbot> Link title(s): [ Prefer Pure Perl Core Modules ]
[18:35:06] <leitz> rindolf, this is the thought process I mentioned to you a few days ago.
[18:35:40] <Botje-> leitz: you are (presumably) a grown person, so you are free to do what you want
[18:35:45] <jdv> leitz: i don't think its as shunnable an offense as you might think 
[18:36:08] <Botje-> leitz: just don't impose your constraints on people trying to help :)
[18:36:49] <leitz> Botje-, thanks. My hope is to avoid the frequent negative comments. I am not trying to change anyone's religion.
[18:37:34] <RandalSchwartz> G'morning.
[18:37:37] <leitz> However, I think that the security risks may impede Perl's growth. That's my opinion, though.
[18:38:20] <leitz> RandalSchwartz, since you're here, I'll say "Thank you!" I enjoy the humor in the O'Reilly Perl books.
[18:38:56] <jdv> wait, yaml::tiny has a lot of deps?
[18:40:00] <Botje-> perlbot: corelist Scalar::Util
[18:40:00] <perlbot> Botje-: Scalar::Util Added to perl core as of 5.007003
[18:40:04] <Botje-> all of them are core.
[18:40:10] <leitz> jdv, 107 or so.
[18:41:21] <leitz> jdv, I'm using Void Linux, and it's providing perl 5.32.1. When I did "cpan YAML::Tiny", it went for the dependencies.
[18:42:01] <mjgardner> New blog post:  When should you use the Moose override keyword in your Perl subclasses, and when should you use a plain sub? https://phoenixtrap.com/2021/07/13/taming-the-moose-picking-the-best-way-to-subclass-perl-methods/
[18:42:04] <Paperbot> Link title(s): [ Taming the Moose: Picking the best way to subclass Perl methods - The Phoenix Trap ]
[18:42:24] <jdv> its not "tiny" then i guess - https://www.perlmonks.org/?node_id=11122599
[18:42:27] <Paperbot> Link title(s): [ *::Tiny modules namespace origins ]
[18:42:39] <Botje-> oh wait, the metacpan page is lying to me
[18:43:35] <jdv> when i did a lot more Perl, Capture::Tiny was probably the coolest tiny module i used
[18:45:32] *** Joins: Kimmono (~Kimmono@195-159-198-100.customer.powertech.no)
[18:49:02] *** Parts: art1 (~romeyke@p200300ccdf04f700808ab3e648887521.dip0.t-ipconnect.de) ()
[18:49:34] <Grinnz> kensanata: PATH is space separated in fish shell
[18:49:39] <rindolf> leitz: in building my sites i use preprocessors and postprocessors
[18:50:10] <Grinnz> (more specifically, it's a list in fish shell)
[18:50:36] <kensanata> Grinnz: Ah, so this is expected. Thanks!
[18:51:47] <Grinnz> leitz: YAML::Tiny has no dependencies so i'm not sure what you did
[18:52:25] *** Joins: magla (~gelignite@55d4dbb8.access.ecotel.net)
[18:52:38] <leitz> Grinnz, "cpan YAML::Tiny". 
[18:53:02] <Grinnz> leitz: would like to see that log. all of these are core modules https://metacpan.org/release/ETHER/YAML-Tiny-1.73/source/Makefile.PL
[18:53:02] <Paperbot> Link title(s): [ Makefile.PL - metacpan.org ]
[18:53:55] <rindolf> Grinnz: someone once told me he thought i wrote it (the joys of being a mr. fish)
[18:54:24] <leitz> Grinnz, I've been meaning to replicate that data, just haven't gotten to it. Void doesn't have a kickstart equivalent, and I've gotten rid of a lot of my old hardware.
[18:54:59] <LeoNerd> Opinion poll: Right now, if you want to use sub signatures with `method` in Object::Pad, you need perl 5.26+ because that's when core perl added a bunch of core support. I -could- emulate this back as far as 5.20 by writing a lot more code, but that's a lot of effort. Does anyone actually care, for those perl versions (5.20, 5.22, 5.24)?
[18:55:31] <perlbot> Anonymous pasted a new file at https://l.perl.bot/p/1pnqz6 - 
[18:55:50] <Botje-> I just did `cpanm YAML::Tiny` in a fresh perl Docker container. no dependencies
[18:55:55] <Grinnz> leitz: carton solves the points 2 and 3 for production deployments - you should always be using carton for such projects
[18:56:19] <leitz> LeoNerd, if I'm not trying to match a customer's old Perl version then I try to stay as current as possible. I would not be concerned with 5.20/22/24.
[18:56:48] <Grinnz> leitz: i recommend removing the YAML::Tiny point until you figure out what you actually installed. it does not have dependencies
[18:57:26] <leitz> Grinnz, YAML::Tiny lists dependencies on the CPAN page, and I stand by my experience in the install. 
[18:57:34] <Grinnz> you are wrong.
[18:57:39] <Grinnz> they are core modules
[18:57:51] <leitz> Grinnz, that said, when I do replication it, I will happily admit to being wrong. If the data says so.
[18:57:58] <rewt> maybe it was on a rhel/centos install, that doesn't include core modules
[18:58:04] <leitz> replication/replicate
[18:58:10] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (*.net *.split)
[18:58:10] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[18:58:10] *** Quits: plicease (quassel@2600:3c00::f03c:91ff:feea:c7bb) (*.net *.split)
[18:58:10] *** Quits: rewt (~default@user/rewt) (*.net *.split)
[18:58:10] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (*.net *.split)
[18:58:10] *** Quits: brunoramoslu (~brunoramo@94.252.121.113) (*.net *.split)
[18:58:10] *** Quits: splatt990 (4b25e29db1@198.108.79.250) (*.net *.split)
[18:58:10] *** Quits: castawaycloud (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[18:58:10] *** Quits: castaway (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[18:58:10] *** Quits: revhippie (~jdavis@047-013-092-010.res.spectrum.com) (*.net *.split)
[18:58:10] *** Quits: haarg (haarg@haarg.org) (*.net *.split)
[18:58:10] *** Quits: rndusr (~rndusr@user/rndusr) (*.net *.split)
[18:58:10] *** Quits: bastelfreak (~bastelfre@basteles-bastelknecht.bastelfreak.org) (*.net *.split)
[18:58:10] *** Quits: odc (sid197788@id-197788.brockwell.irccloud.com) (*.net *.split)
[18:58:14] *** Joins: plicease_ (quassel@2600:3c00::f03c:91ff:feea:c7bb)
[18:58:19] *** Joins: revhippie (~jdavis@047-013-092-010.res.spectrum.com)
[18:58:20] *** Joins: odc (sid197788@id-197788.brockwell.irccloud.com)
[18:58:21] <Botje-> leitz: see my paste above
[18:58:28] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[18:58:29] *** Joins: castawaycloud (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[18:58:32] <leitz> rewt, on Void Linux. 
[18:58:32] *** Joins: castaway (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[18:58:39] *** Joins: haaarg (haarg@haarg.org)
[18:58:53] *** Joins: rewt (~default@user/rewt)
[18:58:56] *** Joins: bastelfreak (~bastelfre@basteles-bastelknecht.bastelfreak.org)
[18:59:03] <Grinnz> i'm not saying your experience is invalid, i'm saying it's impossible for what you say to be true
[18:59:04] *** haaarg is now known as haarg
[18:59:11] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[18:59:18] <Grinnz> so something happened that you do not remember
[18:59:21] <leitz> Botje-, thanks for the pointer! I missed it.
[18:59:22] *** Joins: brunoramoslu (~brunoramo@94.252.121.113)
[18:59:29] <kensanata> LeoNerd: my Makefile.PL says MIN_PERL_VERSION => '5.26.0'
[18:59:55] <leitz> Grinnz, that would be most of my 20's, and large portions of my teens and 30's. And 40's. And, um, 50's...
[18:59:56] *** Joins: splatt990 (4b25e29db1@198.108.79.250)
[19:00:16] <Grinnz> your point would be better served with an example of a module that actually has lots of dependencies, like Moose
[19:00:20] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:ddde:7281:8e88:676d)
[19:00:36] <jdv> iirc datetime has a lot
[19:00:41] <leitz> Grinnz, it may be similar to what rewt said, where the OS doesn't install core modules.
[19:00:57] <Grinnz> that would not explain it, no
[19:01:04] <Grinnz> also, that would be your problem
[19:01:06] <leitz> Grinnz, good point. You to, jdv.
[19:01:24] <Grinnz> using a cpan installer is not guaranteed to even work without the whole core present
[19:01:34] <leitz> Grinnz, understood.
[19:04:39] *** Quits: xvx (~s@185.48.63.111) (Ping timeout: 276 seconds)
[19:05:55] <leitz> Grinnz, based on your comments I've added an addendum to the page.
[19:10:49] *** Joins: gast0n (~g4570n@user/gast0n)
[19:16:21] * GumbyPAN CPAN Upload: QRCode-Base45-0.03 by YENYA https://metacpan.org/release/YENYA/QRCode-Base45-0.03
[19:19:33] <Grinnz> leitz: also i'm not sure if this is just misunderstanding your phrasing, but there are core XS modules, like Time::Piece
[19:21:46] <leitz> Grinnz, IIUC (no promises!) when core Perl is installed by the OS then it is pre-compiled for the architecture, etc. So a yum or xbps install wouldn't need a compiler for a core module that was XS based. Correct?
[19:22:00] <Grinnz> yes
[19:22:14] <Grinnz> or a non-core module, either
[19:22:16] <leitz> On the flip side, if you're compiling Perl then you likely have a complier, and XS isn't an issue.  :)
[19:22:47] <leitz> Ah, true. 
[19:23:17] <Grinnz> package managers solve a few of your points, regardless of XS or core status
[19:23:28] <Grinnz> then you're at the whim of the packagers of course
[19:23:36] <Grinnz> until you make your own packaging
[19:23:41] <leitz> Hehe...as a long time CentOS 6 user...
[19:23:43] <Grinnz> (or just use carton, like i said)
[19:24:11] <leitz> I didn't use Bundler when I was doing Ruby, either. Don't really care for that much magic.
[19:24:36] <Grinnz> there isn't really much magic involved
[19:25:13] <Grinnz> it's equivalent to cpanm -L local/ and PERL5LIB=/path/to/local/lib/perl5, but with a version pinning feature so nothing in your dependency chain gets upgraded until you ask it to be
[19:26:02] *** Quits: Juerd (juerd@computervrede.nl) (Ping timeout: 272 seconds)
[19:28:01] *** Joins: xvx (~s@185.48.63.111)
[19:28:47] <Grinnz> i haven't used any other bundlers, but i use exactly the parts of carton i need (and have added to the docs the ways to use it without carton exec for that reason)
[19:29:03] <rewt> if you're using system perl, it's better to use the system package manager to install modules anyways
[19:29:51] <rewt> using cpan to install modules for system perl can lead to more issues
[19:30:53] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:31:07] <Grinnz> mostly if you do it as root - if you do it to your homedir, the main issue is just that those modules become unusable when the package manager upgrades that perl in place
[19:32:40] <rewt> which I would also file under "more issues" ;)
[19:34:50] *** Joins: Martchus_ (~martchus@2a01:c22:6ff6:8000:d250:99ff:fe49:3cce)
[19:35:01] <leitz> It seems as if carton/*brew are trying to work around CPAN issues.
[19:35:40] <Grinnz> literally all software development is trying to work around issues
[19:36:52] *** Quits: Martchus (~martchus@dynamic-077-009-034-120.77.9.pool.telefonica.de) (Ping timeout: 256 seconds)
[19:37:35] <Grinnz> the more successful ones get called solutions :P
[19:39:03] *** Joins: thrig (~thrig@65.113.153.50)
[19:43:31] <LeoNerd> I wish RT let you "reply" to an issue while keeping all the current message history visible. I have to do it with two tabs currently
[19:43:40] <leitz> At the point of having to bundle an entire Perl with an application, compiled languages start to look a lot better.
[19:47:05] <mjgardner> Go does something similar, it just hides it: https://dr-knz.net/go-executable-size-visualization-with-d3.html
[19:47:06] <Paperbot> Link title(s): [ Why are my Go executable files so large?  - Size visualization of Go executables using D3  · dr k... ]
[19:47:29] *** Joins: randir (~randir@95-25-235-134.broadband.corbina.ru)
[19:49:22] *** Joins: Juerd (juerd@computervrede.nl)
[19:58:25] <Grinnz> leitz: but then i have to write in that compiled language :P
[19:58:54] <Grinnz> also, PAR packer ftw when you actually want to bundle the perl executable
[19:59:30] <Grinnz> carton bundle is different, it bundles the tarballs for all of the CPAN dependencies
[19:59:42] <Grinnz> so it works for XS modules across different systems, because you install it on the target
[20:00:40] <Grinnz> (and of course, it doesn't bundle the perl)
[20:01:14] <Grinnz> tradeoff with any compiled code: if you prebuild it, it only works on that architecture and with those shared libs
[20:01:20] <Grinnz> if you don't, then it has to get built
[20:02:34] <leitz> Grinnz, if you bundle XS based code you have the same issue, right? You have to build and bundle for that OS/arch/whatever mix.
[20:02:46] <Grinnz> leitz: ah, someone in that perlmonks thread discovered what you may have done - maybe you configured cpan to install suggestions? which is not really a good idea
[20:02:59] <Grinnz> leitz: yes, XS code is just C code
[20:03:23] <thrig> if MACRO_MADNESS is C
[20:03:32] <Grinnz> fsvo "just" :)
[20:04:43] <leitz> Grinnz, this in .cpan/CPAN/MyConfig.pm?    'suggests_policy' => q[1]
[20:04:47] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[20:04:47] *** Quits: diskin (~diskin@46.41.108.147) (Killed (NickServ (GHOST command used by diskin_!~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)))
[20:04:49] <Grinnz> yep, that would do it
[20:05:18] <Grinnz> that option is basically, "yes, I would like to install all of CPAN thanks"
[20:05:37] * leitz goes to edit MyConfig.pm and his PerlMonks post...
[20:05:44] <Grinnz> default-installing recommends is sensible, but suggests you probably only want to do in specific cases
[20:06:02] <Grinnz> recommends are also optional, though
[20:06:29] <leitz> I assume changing the 1 to a 0 is the right recommendation?
[20:06:47] <Grinnz> i don't really know cpan config - but probably
[20:08:20] <Altreus> LeoNerd: RT has no remaining features I value
[20:08:30] <Altreus> If a project is using RT I probably just won't report an issue
[20:08:37] <LeoNerd> Well, besides the automatic CPAN integrations
[20:08:39] <LeoNerd> :)
[20:08:59] <Altreus> I don't even know what that is :P
[20:09:19] <LeoNerd> The fact that every CPAN dist gets its own queue automatically, and knows about released versions, and permissions, ..
[20:09:27] *** Parts: krismatrix (~krismatri@38.80.149.51) (Leaving)
[20:09:30] <LeoNerd> and metacpan.org knows where it is, and offers the count of currently-open issues
[20:09:33] *** Quits: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Client Quit)
[20:09:42] <LeoNerd> and automatically links there based on putting  RT12345  in the Changelog
[20:09:48] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[20:09:49] <LeoNerd> and various other bits and pieces
[20:10:37] <Grinnz> well the last two things are done for github issue trackers too
[20:10:48] *** Joins: krismatrix (~krismatri@38.80.149.51)
[20:11:13] <Altreus> yeah, it's trivial to get it to do that for github, and github issues doesn't have a user experience that I would rather had stayed in the 90s
[20:11:26] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Mongodbv2-0.07 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-Mongodbv2-0.07
[20:11:26] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Mongodbv2-1.00 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-Mongodbv2-1.00
[20:11:30] <Altreus> the former things, I'm not really sure I need in an issue tracker
[20:11:46] <Grinnz> *you* don't, *CPAN* does
[20:11:49] <LeoNerd> Those first bits are largely author-side conveniences, but I do find them very convenient
[20:12:00] <LeoNerd> They're perhaps less visible to end-users who are just reporting the bugs
[20:12:45] <Grinnz> any auto-created trackers necessarily need to use CPAN permissions and authentication to allow administration of that queue
[20:12:55] <Grinnz> this is something only RT can do atm
[20:14:56] *** Quits: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[20:16:06] <Altreus> Wait I'm confused
[20:16:34] <Altreus> What's the difference between an auto-created tracker on RT, and the fact that a github repository comes with an issues tracker?
[20:17:51] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 255 seconds)
[20:18:53] <LeoNerd> The difference is that the former exists without needing to be on github
[20:18:56] <Grinnz> the former doesn't require you to have created teh github repo
[20:19:21] <Grinnz> it doesn't require any action aside from uploading the cpan distribution
[20:19:25] <LeoNerd> Which means you definitely know that every CPAN dist definitely has an RT queue
[20:20:01] <Grinnz> creating the github repo gives you administration of that github tracker; RT can't rely on the same thing, since no action was taken to create the queue
[20:20:59] *** Quits: VAZYLA (~vazyla@185-146-220-26.box.freepro.com) (Quit: WeeChat 3.2)
[20:21:22] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[20:23:08] <rindolf> it is https://en.wikipedia.org/wiki/July_14 tommorrow. bastille day
[20:23:08] <Paperbot> Link title(s): [ July 14 - Wikipedia ]
[20:23:18] <Altreus> Ah right
[20:23:59] <Altreus> Good thing there's a metadata saying where issues should go
[20:24:14] <thrig> let them eat cmake?
[20:24:58] <tm604> we _could_ have github/PAUSE integration - a "cpan" organisation, for example, with each distribution as a separate repository there, permissions granted according to CPAN ID (e.g. ALTREUS@cpan.org)
[20:25:47] <tm604> ... of course I don't think anyone's seriously suggested that, because it's very important that every Perl distribution be a special snowflake =)
[20:25:51] <Altreus> I expect we could also have RT aware of the metadata and posting to github issues on behalf of people being helpful in the wrong place
[20:26:27] <Grinnz> automated posting to github is sticky
[20:26:27] * GumbyPAN CPAN Upload: Mojolicious-Plugin-AutoRoutePm-0.16 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-AutoRoutePm-0.16
[20:26:38] <Altreus> a sticky wicket
[20:26:46] <Grinnz> the migration of rt.perl.org was a whole thing that had to be done with github's internal tooling
[20:28:05] <Altreus> There was a migration?
[20:28:08] <tm604> fortunately rt.cpan.org was easier, I think the only tooling involved was `rm`
[20:28:30] <Grinnz> tm604: that was the alternate timeline
[20:28:48] <Grinnz> Altreus: perl core bugs are now tracked at https://github.com/perl/perl5/issues
[20:28:49] <Paperbot> Link title(s): [ Issues · Perl/perl5 · GitHub ]
[20:29:03] *** Quits: Juerd (juerd@computervrede.nl) (Remote host closed the connection)
[20:30:01] <tm604> ah nuts, does that mean I didn't need to grow that beard :/
[20:30:32] <Altreus> aha
[20:30:33] <rindolf> the country that brought us https://en.wikipedia.org/wiki/Alexandre_Dumas ; https://en.wikipedia.org/wiki/Jules_Verne ; https://en.wikipedia.org/wiki/Cardinal_Richelieu ; and - https://en.wikipedia.org/wiki/Jean-Luc_Picard
[20:30:35] <Paperbot> Link title(s): [ Alexandre Dumas - Wikipedia ] [ Jules Verne - Wikipedia ] [ Cardinal Richelieu - Wikipedia ] [ Jean-Luc Picard - Wikipedia ]
[20:31:08] <rindolf> ;)
[20:33:20] <rindolf> and - https://www.youtube.com/watch?v=DGXx56WqqJw
[20:33:20] <Paperbot> YouTube video linked by rindolf: The Monty Python and Holy Grail, The English meet the French castle - French subtitles - published by dyhetue
[20:35:36] *** Joins: Juerd (juerd@computervrede.nl)
[20:36:33] *** Joins: Martchus (~martchus@dynamic-095-114-161-244.95.114.pool.telefonica.de)
[20:37:57] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:38:15] *** Quits: Martchus_ (~martchus@2a01:c22:6ff6:8000:d250:99ff:fe49:3cce) (Ping timeout: 276 seconds)
[20:41:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:42:06] *** Joins: MichaelOF (~michael@p200300eb8f097301b42425b32a3844cb.dip0.t-ipconnect.de)
[20:45:12] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 272 seconds)
[20:49:51] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:51:59] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:54:18] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Ping timeout: 255 seconds)
[20:54:32] * rindolf listens to https://www.youtube.com/watch?v=pTEmpZ79jeo
[20:55:00] <rindolf> Paperbot: 
[20:56:54] <rindolf> damn newfangled web APIs
[20:57:34] <rindolf> just make them 100% open
[20:57:58] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[21:00:54] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[21:01:11] *** Joins: cousteau (~cousteau@user/cousteau)
[21:02:14] <cousteau> Regex to match numbers?  I was happily using /([\d.]+)/ until I realized the number may contain e
[21:03:05] <cousteau> Now I'm considering /([\d.e+-]+)/ but I don't know if there is an easier way 
[21:03:09] <thrig> perldoc -q determine
[21:03:10] <perlbot> thrig: Your documentation is available at: https://perldoc.perl.org/search?no_redirect=1&q=determine#FAQ
[21:03:41] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[21:04:08] <rindolf> cousteau: [0-9\.]
[21:04:12] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[21:04:15] <cousteau> (granted, this will also match "e..-+08" but that's not going to happen in the string of interest) 
[21:04:50] <cousteau> rindolf: that won't match 1.0e-5
[21:05:07] *** Joins: krismatrix (~krismatri@38.80.149.51)
[21:05:55] <cousteau> thrig: the number is part of a string though.  In fact I could just "read everything before a comma" since I know the number will end in a comma 
[21:07:43] <Grinnz> cousteau: first you have to define number
[21:07:52] <Grinnz> numbers can contain commas in certain locales :P
[21:08:01] <Grinnz> 'inf' and 'nan' are also numbers according to perl
[21:08:21] <rindolf> cousteau: did u try https://metacpan.org/search?q=Regexp%3A%3Acommon
[21:08:22] <Paperbot> Link title(s): [ Search for "Regexp::common" - metacpan.org ]
[21:09:27] *** Quits: yzhernand (~yzhernand@129.85.8.233) (Ping timeout: 276 seconds)
[21:10:08] <cousteau> Grinnz: no it... Oh... Oh god, you're right, I remember now.  The horror.  Having to set LC_NUMERIC=C everywhere for things to work. 
[21:10:17] *** Joins: yzhernand (~yzhernand@2607:fb90:54d3:13c8:fc11:8bff:fe37:e7a8)
[21:10:27] <Grinnz> [^,]+ sounds like a good option for your case
[21:10:38] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[21:10:40] <cousteau> Anyway, Perl generated these numbers, so I hope it didn't get creative with the format 
[21:11:27] <Grinnz> unless you did "use locale;" while doing so, probably not
[21:11:56] <cousteau> I didn't 
[21:12:26] *** Joins: krismatrix (~krismatri@38.80.149.51)
[21:12:41] <cousteau> I remember there was a program that would crash in Germany or Spain because of that reason 
[21:13:13] <cousteau> And a friend of mine once wrote a program that didn't work on Wednesdays, but that was for a different reason 
[21:13:48] *** Joins: krismatrix_ (~krismatri@38.80.149.51)
[21:13:52] *** Quits: krismatrix (~krismatri@38.80.149.51) (Client Quit)
[21:14:01] *** Quits: krismatrix_ (~krismatri@38.80.149.51) (Client Quit)
[21:14:15] *** Joins: krismatrix (~krismatri@38.80.149.51)
[21:14:20] *** Joins: krismatrix_ (~krismatri@38.80.149.51)
[21:14:25] *** Quits: krismatrix_ (~krismatri@38.80.149.51) (Client Quit)
[21:16:36] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 256 seconds)
[21:19:03] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 255 seconds)
[21:20:58] *** Joins: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it)
[21:25:16] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Remote host closed the connection)
[21:27:14] <Altreus> what about Scalar::Util::looks_like_number
[21:27:16] <Altreus> what does that cover?
[21:27:31] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[21:27:48] <thrig> you first need to get whatever into something to feed to that
[21:27:53] *** Quits: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it) (Changing host)
[21:27:53] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[21:28:48] <Altreus> cousteau: I only work on half of Wednesdays so that seems fair
[21:29:06] * perigrin considers nan a dual var ... both a number and a delicious bread product.
[21:29:33] <curdlesnoot> Altreus: https://metacpan.org/pod/String::Numeric#looks_like_number-ABNF (I wouldn't tend to use it)
[21:29:34] <Paperbot> Link title(s): [ String::Numeric - Determine whether a string represents a numeric value - metacpan.org ]
[21:30:16] <Altreus> looks_like_bread
[21:31:21] <perigrin> taste_like_bread() is IMO more important 
[21:31:28] <thrig> is_naan
[21:31:35] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[21:31:43] <Altreus> quacks_like_bread
[21:31:45] <perigrin> Pastry::Util
[21:31:57] <perigrin> basically writes itself
[21:32:16] <cousteau> Lol @ is_naan
[21:32:57] <leitz> Back in a bit, I have to shut down power for the workers.
[21:33:11] <thrig> they'll revolt?
[21:33:20] <thrig> Marx wrote about this
[21:33:29] <leitz> When I get back I'll start building a CentOS 7 box to test the YAML::Tiny issue.
[21:33:34] <leitz> thrig, they're revolting.
[21:34:28] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[21:36:44] <Grinnz> Altreus: looks_like_number will tell you whether Perl would use it in a numeric operation without complaining. doesn't help you extract it from a string
[21:37:03] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 255 seconds)
[21:37:11] <thrig> speaking of revolving, https://github.com/thrig/ministry-of-silly-vaults/tree/master/orbit
[21:37:11] <Paperbot> Link title(s): [ ministry-of-silly-vaults/orbit at master · thrig/ministry-of-silly-vaults · GitHub <https://github.com/thrig/ministry-of-silly-vaults/blob/master/orbit> ]
[21:42:59] *** Quits: jess (~jess@libera/staff/jess) ()
[21:44:19] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[21:45:01] *** Joins: adherzog (uid387168@id-387168.tooting.irccloud.com)
[21:47:29] *** Joins: Pali (~pali@user/pali)
[21:47:51] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[21:52:21] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 276 seconds)
[22:03:48] *** Joins: sverzel_ (~sverzel@h-155-4-128-159.NA.cust.bahnhof.se)
[22:04:56] *** Quits: xvx (~s@185.48.63.111) (Quit: Konversation terminated!)
[22:05:54] *** Quits: sverzel (~sverzel@2001:9b1:26ff:6100:6d9:f5ff:fe82:7f8f) (Ping timeout: 256 seconds)
[22:08:14] *** Joins: sverzel__ (~sverzel@2001:9b1:26fc:8d00:6d9:f5ff:fe82:7f8f)
[22:10:57] *** Quits: sverzel_ (~sverzel@h-155-4-128-159.NA.cust.bahnhof.se) (Ping timeout: 245 seconds)
[22:11:34] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[22:13:06] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:14:56] *** Joins: Guest9 (~Guest9@103.250.139.121)
[22:19:29] *** Joins: Guest997 (~Guest9@103.250.139.121)
[22:21:57] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[22:22:54] *** Quits: Guest9 (~Guest9@103.250.139.121) (Ping timeout: 276 seconds)
[22:27:10] <v`> https://twitter.com/i/events/1414628283136753668
[22:27:20] <v`> i'm not sure what's going on down there...
[22:27:50] <v`> texas republicans (in office) voted to have texas democrats (in office) arrested (for some kind of vote delay thing)
[22:28:00] <v`> texas democrats (in office) flew to washington d.c. because texas police have no jurisdiction there (apparently)
[22:29:12] <Grinnz> they're denying the republicans a quorum to pass their partisan bills, since filibusters aren't a thing in state legislature
[22:30:10] <thrig> on an unrelated note, the Roman Republic had issues with gridlock
[22:32:31] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Remote host closed the connection)
[22:33:00] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[22:33:09] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Client Quit)
[22:33:55] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[22:34:14] *** Quits: yzhernand (~yzhernand@2607:fb90:54d3:13c8:fc11:8bff:fe37:e7a8) (Ping timeout: 256 seconds)
[22:34:21] *** Joins: bambams (~bambams@user/bambams)
[22:34:33] <gordonfish> That's what happens when everyone in the empire is trying to get to the circus maximus on free posca night
[22:34:56] *** Joins: yzhernand (~yzhernand@129.85.8.233)
[22:35:27] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d) (Quit: = "")
[22:35:55] <cousteau> v`: huh?  Well let me make some popcorn and read that... 
[22:36:37] <bambams> I've associated .PL with perl.exe in Windows and added .PL to PATHEXT, but when I execute a program by executing the script name, arguments are not being seen by the script. If I prefix the command with the perl executable then it's fine.
[22:36:41] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[22:36:58] <bambams> My perl is Rusty, but I can't recall what causes this...
[22:38:54] <cousteau> Windows. 
[22:38:57] *** Quits: MichaelOF (~michael@p200300eb8f097301b42425b32a3844cb.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[22:38:59] <gordonfish> bambams: Sounds like you didn't include %1 or %* in the association. I'll check exactly what it should look like, 1 sec
[22:39:16] <cousteau> %* sounds nice 
[22:39:52] <cousteau> I don't know if %* has problems with spaces though; cmd does some weird things in this regard 
[22:40:36] *** sverzel__ is now known as svrzel
[22:40:39] *** svrzel is now known as sverzel
[22:40:47] <thrig> Mozilla is a bigger cause of rust
[22:42:08] *** Joins: finsternis (~X@23.226.237.192)
[22:42:18] <mmlj4> and seamonkey is the rustiest
[22:42:37] <cornett> Grinnz: thanks for the review of my pr. Is there anywhere else in the docs where you think it would be good to add some text?
[22:43:09] *** Joins: bambams_ (~bambams@user/bambams)
[22:45:23] <gordonfish> bambams: ftype Perl="C:\path\to\bin\perl.exe" "%1" %*
[22:45:39] <gordonfish> That is what I see on a windows machine where it works correctly
[22:47:12] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 272 seconds)
[22:48:04] *** Quits: bambams_ (~bambams@user/bambams) (Ping timeout: 272 seconds)
[22:51:12] <Grinnz> cornett: nothing i can think of so far
[22:51:42] * GumbyPAN CPAN Upload: Net-SFTP-Foreign-Tempdir-Extract-0.18 by MRDVT https://metacpan.org/release/MRDVT/Net-SFTP-Foreign-Tempdir-Extract-0.18
[22:52:11] <LeoNerd> If I'm running a Test::Builder::Tester script, how do I temporarily step back out of that and run some -real- like() tests?
[22:52:22] *** Quits: Juerd (juerd@computervrede.nl) (Ping timeout: 256 seconds)
[22:52:25] <LeoNerd> If just call like() then it gets diverted via the usual TBT mechanism
[22:52:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 276 seconds)
[22:54:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:56:14] *** Joins: fb61 (~Frank@ip-109-40-130-86.web.vodafone.de)
[22:59:23] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[23:13:11] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[23:13:21] <DK3>  http://paste.c-net.org/ComplyMarisa  why would i use the (shift,shift) there to get the arguments which started the script?
[23:14:47] <gordonfish> DK3: Outside of a sub routine, shift, without args, shifts @ARGV
[23:15:46] <DK3> it gives me argh[1] and [2] and puts them as 0,1 correct?  because 0 is default the name of the script
[23:16:25] <xenu> no it isn't, perl isn't C
[23:16:34] <xenu> $argv[0] contains the first argument
[23:17:46] <Grinnz> lol'd @ argh[1]
[23:17:48] <DK3> but why would i need to shift @ARGV then there?
[23:17:50] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[23:18:10] <xenu> who said you need to?
[23:18:15] <Grinnz> DK3: two shifts gets the first two args
[23:18:25] <Grinnz> $scriptname gets the same argument that the first shift will
[23:18:34] <Grinnz> (probably should be using $0 instead)
[23:18:35] <DK3> just trying to understand that script which i've inherited. im not a perl guy
[23:18:36] <xenu> my @arguments = @ARGV would've worked just as well
[23:18:55] <xenu> actually it would be better, implicit shift() on @ARGV is considered bad style
[23:20:04] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[23:22:32] <DK3> thanks for explaining. the script is started with two arguments ,argv[0] is the scriptname itself correct?
[23:24:04] <Grinnz> no.
[23:24:25] <Grinnz> $ARGV[0] is the first argument, $0 is the script name
[23:24:44] *** Joins: akaWolf (~akaWolf@akawolf.org)
[23:24:48] *** Quits: yzhernand (~yzhernand@129.85.8.233) (Ping timeout: 272 seconds)
[23:25:00] *** Joins: yzhernand (~yzhernand@2607:fb90:54d3:13c8:b860:f9ff:fe22:ef18)
[23:25:14] <talexb> DK3 You can also just Try It And See.
[23:27:01] <gordonfish> talexb++ # That is one of the best ways to learn, just experiment.
[23:28:17] <v`> innocent bystanders be damned
[23:28:39] *** Quits: deadmarshal (~deadmarsh@95.38.112.166) (Ping timeout: 255 seconds)
[23:32:41] *** Joins: gast0n (~g4570n@user/gast0n)
[23:32:42] <talexb> Thanks .. it's really easy to just try stuff out. "Hmm, what happens if I .." is a terrific way to learn.
[23:33:28] * talexb remembers trying out the HP-9810 graphing calculator and plotting cos x against sin x. Of course, the plotter drew a unit circle. Duh.
[23:38:45] *** Joins: jess (~jess@libera/staff/jess)
[23:43:43] * ology misses using his HP-48GX
[23:44:06] <ology> Those tactile buttons are cool.
[23:45:57] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 245 seconds)
[23:51:29] <gordonfish> Tried y=cos(x)/sin(x) on his old TI-86, got this (in mode Degrees): https://gfish.info/ti86_cos-x_div_sin-x.png
[23:52:31] <gordonfish> (In mode Radians, I get what looks like a heart monitor)
[23:52:57] *** Quits: Guest997 (~Guest9@103.250.139.121) (Ping timeout: 255 seconds)
[23:55:41] *** Joins: akaWolf (~akaWolf@akawolf.org)
[23:58:16] <cousteau> ology: all I had was a 48S
[23:58:33] *** Parts: fb61 (~Frank@ip-109-40-130-86.web.vodafone.de) ()
[23:58:41] <cousteau> I programmed it to play the Popeye the Sailorman melody for some reason 
[23:59:08] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: Bye)
