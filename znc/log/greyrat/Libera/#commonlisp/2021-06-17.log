[00:00:08] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[00:12:21] *** Joins: akoana (~ah@user/akoana)
[00:31:09] *** Joins: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[00:31:23] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:33:44] *** Joins: Tomte (~th@p200300db9f1894006db8253d2b49d36e.dip0.t-ipconnect.de)
[00:34:26] *** Quits: silasfox (~sbv@2001-4dd5-301f-0-1241-18dd-bcfc-9676.ipv6dyn.netcologne.de) (Ping timeout: 252 seconds)
[00:39:31] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 268 seconds)
[00:42:14] <Josh_2> seems with Mito I can just use the :inflate :deflate keys
[00:45:30] *** Quits: Tomte (~th@p200300db9f1894006db8253d2b49d36e.dip0.t-ipconnect.de) (Quit: Leaving)
[00:46:09] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.1)
[00:47:17] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:48:25] *** Quits: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it) (Remote host closed the connection)
[00:50:19] <Josh_2> Think I'm just gonna convert my code over to Mito
[00:56:52] *** Quits: unyu (~pyon@user/pyon) (Remote host closed the connection)
[00:58:35] *** Joins: unyu (~pyon@user/pyon)
[01:04:41] *** Joins: karlosz (~karlosz@router.cloyne.org)
[01:05:47] *** Quits: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 252 seconds)
[01:06:37] <phoe> lists don't map well to the relational model
[01:07:16] <phoe> I guess that's the main issue
[01:09:09] <dim> when using Postgres you can use arrays there, but all array elements must be of the same datatype
[01:09:16] <rdrg109> [Q] Hello everyone, common lisp beginner here. Is there any way to get a list of all built-in functions? Is there any website, command or way that present that list? I know that "read" is a built-in function, because I can create a file containing a read statement and it will be executed. Sorry for using the term "built-in function" (if that's not the appropiate term), I have just started
[01:09:18] <rdrg109> today.
[01:09:18] <dim> basically SQL is strongly typed, and relational
[01:09:37] <dim> Josh_2: a list in lisp would be a relation (such as a table) in SQL
[01:09:39] <Josh_2> maybe I will try using an array
[01:10:19] <Josh_2> an array whose elements are all the same type isn't a problem
[01:10:29] <dim> rdrg109: that would be the Common Lisp Hyperspec, or the symbols exported by the COMMON-LISP package, I suppose
[01:11:41] <dim> Josh_2: also consider making it a relation mylist(listid bigserial, item ...) ; depending on how you want to process the list elements, having them available as rows will change your life in SQL query writting
[01:11:55] <rdrg109> dim: Thanks. I'm using GNU CLISP. I suppose, I will find what I'm searching in the official website.
[01:12:07] *** Quits: pve (~pve@178-55-11-176.bb.dnainternet.fi) (Quit: leaving)
[01:12:17] <Josh_2> dim: not really in the spirit of lisp
[01:12:46] <dim> rdrg109: see http://www.lispworks.com/documentation/HyperSpec/Front/X_AllSym.htm ; that might not be the best entry point to the standard's Hyperspec, but it seems to match your question well enough
[01:14:15] <dim> Josh_2: well you're now using a relational database, so you might as well have a relational model there
[01:14:33] <dim> (also I didn't know there was such as thing as the spirit of lisp) ;-)
[01:14:57] <Josh_2> Wish my lisp image could just be my database :(
[01:16:30] <phoe> grab a lisp object database
[01:16:34] <phoe> bknr.datastore for instance
[01:17:04] <phoe> using postgres as an object database won't work very well, even with ORMs like mito
[01:18:08] <dim> using an ORM will only make it worse, and postgres is a nice object oriented database when you look at it with the right angle, though it's not lisp at all, it's just something else
[01:19:07] <dim> I wrote a blog article about postgres being OO at https://tapoueh.org/blog/2018/03/object-relational-database-management-system/ ; it evens mentions Erik Naggum, generic functions and message passing ;-)
[01:19:11] <phoe> dim: it takes some time to look at objects from the relational point of view though
[01:19:46] <phoe> if one wants to just use it as if they were using Lisp* then a nosql database will be better for that use case
[01:19:49] <phoe> *and pay the price
[01:19:50] <mfiano> I hope you like JOIN
[01:20:17] <dim> I mean SELECT a + b FROM rel WHERE c > now() - 6 * interval '5 mins'; is pretty object oriented, with operator overloading depending on columns data types and all the jazz
[01:20:53] <Josh_2> phoe: is there a pdf of the docs anywhere? I cant build it
[01:21:07] <dim> mfiano: yeah I do, in list you compose lists, in SQL you compose relations, and JOINs are how you compose relations together to form new ones, I like that
[01:21:23] <phoe> Josh_2: (ql:quickload :bknr.datastore) works fine for me
[01:21:29] <Josh_2> no no I mean the docs
[01:21:43] <phoe> https://common-lisp.net/project/bknr/pdf/datastore-manual.pdf
[01:21:55] <dim> phoe: but yeah I see your point, it's not storage for in-memory lisp objects ; postgres solves concurrency, not storage
[01:22:30] <dim> (storage is part of the offer, it's the D of ACID, it's not the most interesting part though, as an application developer)
[01:23:07] <dim> anyway don't bother me and my Postgres ranting infinite ability, pick a lisp object data store that can serialize what's in-memory to and from disk if that's what you need ;-)
[01:23:11] *** Joins: selwyn (~selwyn@user/selwyn)
[01:23:38] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:35:09] *** Joins: aeth_ (~Michael@user/aeth)
[01:35:44] <Josh_2> this app is about 99% complete, basically just need to add one more column to my database and I'm done. But for the future I reckon I will try bknr.datastore 
[01:36:51] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 244 seconds)
[01:36:51] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[01:37:01] *** aeth_ is now known as aeth
[01:42:13] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Leaving)
[01:42:29] *** Joins: selwyn (~selwyn@user/selwyn)
[01:51:18] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:15:19] *** Quits: knusbaum (~kjn@2601:240:8480:9990:5d68:bc8c:7731:e216) (Remote host closed the connection)
[02:28:03] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Ping timeout: 268 seconds)
[02:29:11] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:4812:3940:14e1:1806) (Ping timeout: 272 seconds)
[02:35:27] <rdrg109> dim: Thanks! I think that is what I was searching for
[02:39:31] *** Joins: selwyn (~selwyn@user/selwyn)
[02:39:46] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 268 seconds)
[02:40:15] *** Joins: aeth (~Michael@user/aeth)
[02:43:06] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[02:49:14] *** Quits: igemnace (~ian@112.200.95.110) (Quit: WeeChat 3.1)
[02:51:36] *** Quits: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com) (Ping timeout: 268 seconds)
[02:53:59] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[03:27:50] *** Quits: random-nick (~random-ni@87.116.179.59) (Ping timeout: 272 seconds)
[03:44:47] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[03:51:13] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[03:55:07] *** Quits: mingus (~jan-magnu@ti0135a400-0748.bb.online.no) (Ping timeout: 272 seconds)
[03:57:51] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[04:07:13] *** Joins: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[04:21:40] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 244 seconds)
[04:25:58] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[04:41:30] *** Joins: igemnace (~ian@120.28.150.132)
[04:43:53] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 244 seconds)
[04:44:28] *** Joins: knusbaum (~kjn@2601:240:8480:9990:445:e8f:310e:4702)
[04:45:55] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[04:49:35] *** Quits: knusbaum (~kjn@2601:240:8480:9990:445:e8f:310e:4702) (Ping timeout: 272 seconds)
[04:57:08] *** Quits: fourier (~user@2001:1ba8:1608:3400::3c2) (Ping timeout: 272 seconds)
[05:18:09] *** Quits: leo_song (~leo_song@101.191.88.205) (Read error: Connection reset by peer)
[05:19:10] *** Joins: leo_song (~leo_song@101.191.88.205)
[05:21:56] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[05:33:31] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:35:56] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:36:35] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[05:37:22] *** Joins: sabra (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net)
[05:38:06] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 264 seconds)
[05:46:00] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[05:48:28] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 268 seconds)
[05:52:06] *** Joins: mingus (~jan-magnu@ti0135a400-2471.bb.online.no)
[05:55:52] *** Quits: dlowe (~dlowe@user/dlowe) (Remote host closed the connection)
[06:38:41] *** Joins: cjb (~cjb@user/cjb)
[06:41:03] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Remote host closed the connection)
[06:44:48] *** Joins: torbo (~user@72.15.63.17)
[06:45:14] *** Joins: knusbaum (~kjn@2601:240:8480:9990:ec21:f15b:11ad:e590)
[06:46:42] *** Parts: torbo (~user@72.15.63.17) (ERC (IRC client for Emacs 27.1))
[06:48:01] *** Joins: torbo (~user@72.15.63.17)
[06:48:26] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Ping timeout: 252 seconds)
[06:51:59] *** Quits: Josh_2 (~user@37.25.47.130) (Ping timeout: 268 seconds)
[06:52:51] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[06:53:34] *** Quits: torbo (~user@72.15.63.17) (Quit: ERC (IRC client for Emacs 27.1))
[06:55:08] *** Quits: knusbaum (~kjn@2601:240:8480:9990:ec21:f15b:11ad:e590) (Read error: Connection reset by peer)
[06:58:22] *** Joins: torbo (~user@72.15.63.17)
[06:59:02] *** Quits: torbo (~user@72.15.63.17) (Remote host closed the connection)
[06:59:34] *** Joins: torbo (~user@72.15.63.17)
[07:08:03] *** Quits: torbo (~user@72.15.63.17) (Remote host closed the connection)
[07:19:31] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[07:19:51] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Ping timeout: 268 seconds)
[07:21:29] *** Joins: hendursaga (~weechat@user/hendursaga)
[07:29:55] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:33:18] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[07:36:50] *** Quits: Bike (~Glossina@71.69.170.70) (Ping timeout: 252 seconds)
[07:36:55] <beach> Good morning everyone! 
[07:52:15] *** Joins: derelict (~derelict@user/derelict)
[07:56:54] *** Joins: dsk (~dsk@user/dsk)
[07:57:44] *** Joins: blihp (~blihp@c-68-43-233-92.hsd1.mi.comcast.net)
[07:59:24] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:00:56] <blihp> are any of the numerous testing frameworks widely used / preferred these days?  LIFT looks interesting given its historical ties to SUnit but figured I'd see what other people are using before digging in too deeply.
[08:02:10] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:02:17] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[08:04:07] *** Joins: Bike (4745aa46@ircip1.mibbit.com)
[08:04:07] *** ChanServ sets mode: +o Bike
[08:04:52] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[08:05:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[08:05:33] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:06:45] *** Lord_of_Life_ is now known as Lord_of_Life
[08:11:58] *** ryanbw1 is now known as ryanbw
[08:12:23] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:15:43] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[08:27:05] *** Quits: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 244 seconds)
[08:32:07] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 252 seconds)
[08:49:51] *** Quits: Bike (4745aa46@ircip1.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[08:52:51] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[08:56:18] *** Quits: X-Scale (~ARM@42.125.108.93.rev.vodafone.pt) (Ping timeout: 265 seconds)
[09:00:20] <kakuhen> I think I may have found a bug in UIOP but I first want a sanity check from some people here
[09:02:41] <kakuhen> so #'uiop:command-line-arguments is supposed to be a wrapper around the implementation-specific methods to obtain command line arguments; e.g. SBCL has sb-ext:*posix-argv* whereas CCL has ccl:*command-line-argument-list*
[09:03:09] <kakuhen> however, on CCL I ran into some strange case where (uiop:command-line-arguments) returns nil, despite appearing to invoke ccl:*command-line-argument-list*, which is non-null when evaluated directly in the REPL
[09:03:50] <kakuhen> here is a demonstration: https://a.uguu.se/UDfCEpEA.png
[09:05:00] <kakuhen> it appears that the relevant UIOP function is compiled and the compiled function is what gets ran in the REPL, so perhaps something went wrong during compilation?
[09:10:29] <kakuhen> OK never mind I'm an idiot; I should be invoking (uiop:raw-command-line-arguments)
[09:11:31] <moon-child> kakuhen: 'ccl -- a b c' => (uiop:command-line-arguments) -> '("a" "b" "c")
[09:30:14] *** Quits: igemnace (~ian@120.28.150.132) (Changing host)
[09:30:14] *** Joins: igemnace (~ian@user/igemnace)
[09:30:27] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.1)
[09:30:42] *** Joins: igemnace (~ian@user/igemnace)
[09:51:53] *** Quits: eddof13 (~textual@187.246.227.157) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:11:06] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Ping timeout: 264 seconds)
[10:16:58] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[10:32:58] *** Joins: shka (~herr@109.231.62.239)
[10:40:16] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 268 seconds)
[10:43:31] *** Joins: silasfox (~sbv@xdsl-87-78-190-244.nc.de)
[10:47:31] <ludston> Sometimes you want to wrap a macro around something complex like loop or defclass and when you use this macro you lose access to the underlying documentation of the wrapped macro/function.
[10:48:14] <ludston> Did anyone ever define a meta-macro for defining macro's like this without losing aforementioned documentation?
[10:48:18] *** Joins: pve (~pve@188-67-209-150.bb.dnainternet.fi)
[10:48:32] <phoe> wrapped macro/function, what do you mean?
[10:48:55] <mfiano> alexandria:parse-body saves the day
[10:49:32] <ludston> Like (defmacro my-custom-class (args) (if (test args) (foo)) `(defclass ,@args))
[10:50:01] <phoe> I don't think that I have this problem - I can check the documentation of all external symbols that the macro expands into
[10:50:10] <phoe> slime-macrostep saves the day
[10:52:16] <ludston> Short answer: no?
[10:52:40] <mfiano> Is your question is how do you expand into (defclass foo () (:documentation ...))?
[10:52:50] <beach> ludston: In that example, what documentation was lost?
[10:53:02] <beach> ludston: And how did you attempt to find it?
[10:53:38] <beach> I mean, the relevant section of the Common Lisp HyperSpec was not erased.
[10:54:09] <phoe> also, "without losing aforementioned documentation" - what do you mean by losing?
[10:54:41] <mfiano> I took it to mean an inability to specify docstrings, wherever they appear in the grammar
[10:54:51] <mfiano> But there is no such inability
[10:54:58] <phoe> oh, in that case parse-body as you already mentioned
[10:55:44] <ludston> No, but for example, slime will not present all of the &key or &optional arguments available in defclass when you are typing my-custom-class
[10:56:09] <moon-child> presumably they wanted to reuse the docstring of an existent function or macro, without having to type it out again
[10:57:05] *** Joins: knusbaum (~kjn@2601:240:8480:9990:5db1:c322:3d4f:7206)
[10:57:12] *** Joins: dsk (~dsk@user/dsk)
[10:57:23] <ludston> "Struggle" and "inability" are the wrong words. The right word is "inconvenience" 
[10:57:41] <mfiano> The only optionality of defclass is &rest options
[10:57:41] <phoe> oh, that's a swank thing
[10:58:14] <phoe> you can force swank to display a set of lambda list keywords for a given operator if that is what you want
[11:01:59] *** Quits: knusbaum (~kjn@2601:240:8480:9990:5db1:c322:3d4f:7206) (Ping timeout: 272 seconds)
[11:04:12] <ludston> Yes. Ideally I would use something like (def-meta-macro <new-macro-name> <old-macro-name> ((new-arg1 new-arg2) (old-args)) (if (eql new-arg1 :foo) (bar)) `(defclass ,@oldargs))
[11:04:30] <ludston> And then get that for free
[11:05:15] <ludston> (specific syntax irrelevant)
[11:06:46] <mfiano> I think you should take some time to fully formulate your question, perhaps in a pastebin with examples and proper terminology in comments, because I am getting more confused by the minute. Maybe it's just me though.
[11:08:15] <beach> Not just you.
[11:08:40] <ludston> The fact that it is a confusing question leads me to presume the answer is simply "No it does not exist yet" which is fine. I can just write it next time I need it
[11:09:45] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:4812:3940:14e1:1806)
[11:22:12] *** Quits: silasfox (~sbv@xdsl-87-78-190-244.nc.de) (Ping timeout: 268 seconds)
[11:23:32] *** Joins: Cymew (~ante@c-b985225c.023-1144-7570702.bbcust.telenor.se)
[11:45:41] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 272 seconds)
[11:53:05] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[12:36:53] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:40:10] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:40:40] *** Quits: blihp (~blihp@c-68-43-233-92.hsd1.mi.comcast.net) (Quit: Leaving)
[12:44:30] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[12:57:58] *** Joins: knusbaum (~kjn@2601:240:8480:9990:9861:5e13:ed64:36ed)
[13:02:18] *** Quits: knusbaum (~kjn@2601:240:8480:9990:9861:5e13:ed64:36ed) (Ping timeout: 240 seconds)
[13:09:04] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[13:09:42] *** Joins: selwyn (~selwyn@user/selwyn)
[13:10:18] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[13:14:57] *** Quits: cjb (~cjb@user/cjb) (Quit: end of day)
[13:34:58] *** Joins: Th30n (~Th30n@93-136-76-141.adsl.net.t-com.hr)
[13:42:16] *** Joins: tfb (~tfb@88.98.95.237)
[13:52:45] *** Joins: leeb (~leeb@KD111239152070.au-net.ne.jp)
[13:56:15] *** Joins: dsk (~dsk@user/dsk)
[14:03:37] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[14:22:46] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.1)
[14:29:46] *** Joins: dlowe (~dlowe@user/dlowe)
[14:46:19] *** Quits: Th30n (~Th30n@93-136-76-141.adsl.net.t-com.hr) (Ping timeout: 244 seconds)
[14:46:23] *** Joins: frgo (~frgo@p200300deef27d7006048e01a521e1d84.dip0.t-ipconnect.de)
[14:48:02] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:54:11] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:3dfa:5a42:41cd:a4f9)
[14:58:55] *** Joins: knusbaum (~kjn@2601:240:8480:9990:940c:84cf:e44c:fcfd)
[15:03:06] *** Quits: knusbaum (~kjn@2601:240:8480:9990:940c:84cf:e44c:fcfd) (Ping timeout: 240 seconds)
[15:05:40] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[15:08:07] *** Quits: frgo (~frgo@p200300deef27d7006048e01a521e1d84.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:08:35] *** Joins: frgo (~frgo@p200300deef27d7006048e01a521e1d84.dip0.t-ipconnect.de)
[15:11:07] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 244 seconds)
[15:11:13] *** Joins: Th30n (~Th30n@93-136-76-141.adsl.net.t-com.hr)
[15:15:02] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:35:07] *** Joins: dsk (~dsk@user/dsk)
[15:52:02] <_death> the code in swank-arglists has limited support for extension via gfs
[16:28:04] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[16:36:31] *** Joins: yitzi (~yitzi@172.98.105.250)
[16:43:34] *** Joins: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it)
[16:59:42] *** Joins: knusbaum (~kjn@2601:240:8480:9990:3d11:ff9e:4940:41d4)
[17:04:30] *** Quits: knusbaum (~kjn@2601:240:8480:9990:3d11:ff9e:4940:41d4) (Ping timeout: 264 seconds)
[17:10:56] *** Joins: Josh_2 (~user@37.25.47.130)
[17:14:05] *** Joins: makomo (~makomo@89.45.7.185)
[17:20:46] *** Quits: makomo (~makomo@89.45.7.185) (Quit: WeeChat 3.0.1)
[17:22:29] *** Joins: makomo (~makomo@89.45.7.185)
[17:27:01] *** Quits: makomo (~makomo@89.45.7.185) (Client Quit)
[17:27:27] *** Joins: makomo (~makomo@89.45.7.185)
[17:27:51] *** Quits: frgo (~frgo@p200300deef27d7006048e01a521e1d84.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:28:26] *** Joins: frgo (~frgo@dynamic-046-114-145-044.46.114.pool.telefonica.de)
[17:30:44] *** Quits: makomo (~makomo@89.45.7.185) (Changing host)
[17:30:44] *** Joins: makomo (~makomo@user/makomo)
[17:30:59] *** Quits: makomo (~makomo@user/makomo) (Client Quit)
[17:31:07] *** Joins: makomo (~makomo@user/makomo)
[17:34:58] *** Joins: Bike (~Glossina@71.69.170.70)
[17:34:58] *** ChanServ sets mode: +o Bike
[17:35:13] *** Joins: cranium (~cranium@user/cranium)
[17:52:44] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[17:59:06] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Ping timeout: 240 seconds)
[18:06:42] *** Joins: X-Scale (~ARM@83.223.233.159)
[18:13:39] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:17:29] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Client Quit)
[18:19:45] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:29:30] *** Joins: knusbaum (~kjn@2601:240:8480:9990:d3e:b604:e36b:abe0)
[18:33:20] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[18:35:37] *** Joins: john-a-carroll (~john-a-ca@host-78-148-21-101.as13285.net)
[18:43:43] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:47:43] *** Quits: yitzi (~yitzi@172.98.105.250) (Remote host closed the connection)
[18:49:04] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[18:53:23] *** Quits: john-a-carroll (~john-a-ca@host-78-148-21-101.as13285.net) (Quit: Ping timeout (120 seconds))
[19:14:27] *** Quits: Th30n (~Th30n@93-136-76-141.adsl.net.t-com.hr) (Ping timeout: 268 seconds)
[19:16:41] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[19:23:16] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
[19:24:08] *** Quits: AnimalClatter (~AnimalCla@208.66.176.26) (Quit: WeeChat 3.0.1)
[19:24:33] *** Joins: AnimalClatter (~AnimalCla@208.66.176.26)
[19:35:23] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[19:38:18] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[19:40:21] *** Joins: TonyDW (~TonyDW@184.20.67.35)
[19:43:55] *** Quits: TonyDW (~TonyDW@184.20.67.35) (Read error: Connection reset by peer)
[19:55:23] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (Remote host closed the connection)
[20:00:01] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[20:00:18] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 264 seconds)
[20:04:11] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[20:08:27] *** Quits: leeb (~leeb@KD111239152070.au-net.ne.jp) (Quit: WeeChat 3.1)
[20:09:55] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 264 seconds)
[20:12:34] *** Joins: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[20:12:42] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[20:15:53] *** Quits: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de) (Remote host closed the connection)
[20:20:05] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 244 seconds)
[20:22:53] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[20:25:29] *** Joins: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr)
[20:37:49] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 268 seconds)
[20:38:25] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[20:43:40] *** Joins: zacts (~zak@user/zacts)
[20:48:02] *** Quits: frgo (~frgo@dynamic-046-114-145-044.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[20:48:24] *** Joins: frgo (~frgo@p200300deef27d7006048e01a521e1d84.dip0.t-ipconnect.de)
[20:49:01] *** Joins: prxq (~quassel@x4dbe0bff.dyn.telefonica.de)
[20:49:22] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[20:52:38] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[20:57:45] *** Quits: knusbaum (~kjn@2601:240:8480:9990:d3e:b604:e36b:abe0) (Quit: Leaving...)
[21:03:42] *** Joins: knusbaum (~kjn@2601:240:8480:9990:d3e:b604:e36b:abe0)
[21:08:43] *** Quits: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 272 seconds)
[21:11:15] *** Quits: knusbaum (~kjn@2601:240:8480:9990:d3e:b604:e36b:abe0) (Quit: Leaving...)
[21:14:20] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 244 seconds)
[21:17:41] *** Joins: knusbaum (~kjn@2601:240:8480:9990:d3e:b604:e36b:abe0)
[21:17:48] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
[21:20:15] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 268 seconds)
[21:21:03] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[21:24:45] *** Joins: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de)
[21:33:42] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[21:36:33] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[21:40:02] *** Joins: ^[ (~user@user//x-8473491)
[21:47:36] *** Joins: zacts (~zak@user/zacts)
[21:52:28] *** Quits: frgo (~frgo@p200300deef27d7006048e01a521e1d84.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:53:03] *** Joins: frgo (~frgo@dynamic-046-114-145-044.46.114.pool.telefonica.de)
[21:58:07] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:11:23] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
[22:24:43] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 272 seconds)
[22:25:28] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:35:37] *** Joins: zacts (~zak@user/zacts)
[22:57:11] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 268 seconds)
[23:10:12] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[23:11:50] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.0.1)
[23:13:10] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[23:15:10] *** Joins: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[23:20:00] *** Joins: aeth_ (~Michael@user/aeth)
[23:20:36] *** aeth is now known as Guest5204
[23:20:36] *** aeth_ is now known as aeth
[23:22:13] *** Joins: aeth_ (~Michael@user/aeth)
[23:22:41] *** Quits: aeth (~Michael@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[23:22:47] *** aeth_ is now known as aeth
[23:22:58] *** Quits: Guest5204 (~Michael@user/aeth) (Ping timeout: 268 seconds)
[23:24:03] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[23:27:54] *** Quits: micro (~micro@user/micro) (Ping timeout: 268 seconds)
[23:28:16] *** Joins: micro (~micro@user/micro)
[23:31:15] *** Quits: Cymew (~ante@c-b985225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 244 seconds)
[23:32:42] *** Quits: robin (~terpri@user/terpri) (Ping timeout: 240 seconds)
[23:33:57] *** Joins: terpri (~terpri@user/terpri)
[23:37:09] *** Quits: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 268 seconds)
[23:43:11] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[23:44:15] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
