[00:04:08] *** Joins: Snetry (~snetry@ipservice-092-209-148-073.092.209.pools.vodafone-ip.de)
[00:05:40] *** Joins: barath (~barath@2001:470:69fc:105::21a)
[00:05:52] *** Quits: Piraty_ (~irc@user/piraty) (Quit: -)
[00:06:19] *** Joins: blackcatter[m] (~blackcatt@2001:470:69fc:105::e10c)
[00:07:08] *** Joins: Piraty_ (~irc@user/piraty)
[00:11:03] *** Joins: Snektron[m] (~snektron@2001:470:69fc:105::f0a3)
[00:11:04] *** Joins: CrystalGamma[m] (~crystalga@2001:470:69fc:105::1011)
[00:11:05] *** Joins: devast8a (~devast8a@2001:470:69fc:105::3f46)
[00:13:58] *** Quits: leah2 (~leah@vuxu.org) (Quit: trotz alledem!)
[00:14:06] *** Joins: leah2 (~leah@vuxu.org)
[00:16:26] *** Piraty_ is now known as Piraty
[00:20:38] *** Quits: Piraty (~irc@user/piraty) (Quit: -)
[00:20:47] *** Joins: Piraty (~irc@user/piraty)
[00:21:12] *** Quits: rgrinberg (~textual@2806:101e:7:33a5:9825:bd3b:45be:5a0f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:33:33] <ofelas> 2088
[00:33:58] <ofelas> whoops, good it wasn't as password
[00:34:55] *** Joins: LevyElara[m] (~tauoverpi@2001:470:69fc:105::728)
[00:38:35] *** Joins: mikolajw (~mikolajtc@2001:470:69fc:105::3b02)
[00:40:01] *** Joins: polykernel (~polykerne@user/polykernel)
[00:41:55] <freshcoffee1> I believe you :P
[00:45:00] *** Joins: slact[m] (~slactslac@2001:470:69fc:105::1:5ee3)
[00:48:32] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:48:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[00:49:20] *** Joins: tiehuis (~tiehuis@user/tiehuis)
[00:50:06] *** Parts: slact[m] (~slactslac@2001:470:69fc:105::1:5ee3) ()
[00:58:57] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[00:59:08] *** Joins: ugla (~ugla@2001:470:69fc:105::2b5)
[00:59:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:59:59] *** Joins: Daimanta (~Daimanta@86-85-205-212.fixed.kpn.net)
[00:59:59] *** Joins: moats (~oats@user/oats)
[01:01:10] <Daimanta> Hi, I have a question. For an application I am writing, I want to convert my utf-8 u8 slice into a slice (or iterator) of grapheme clusters. Is this already a possibility in Zig at the moment (with the std lib?)
[01:01:31] *** Joins: frmdstryr (~jrm@172.58.206.202)
[01:02:23] *** Joins: jokoon (~eio@2a01:e0a:542:e160:a036:c333:5055:e361)
[01:02:26] <ifreund> Daimanta: no, the std does support that as doing so would require taking a dependency on the unicode standard
[01:03:02] <ifreund> you probably want something like https://libs.suckless.org/libgrapheme/
[01:03:45] <ifreund> or https://github.com/jecolon/zigstr
[01:04:27] <Daimanta> Ok, good to know. I already read about ´Ziglyph´, which probably does what I need. I am not a big fan of including tons of external libraries, especially with the packaging siutation at the moment. Thanks for the answer.
[01:04:44] *** Joins: da_lorax (~daloraxye@2001:470:69fc:105::1:5e15)
[01:05:16] *** Joins: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b)
[01:06:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[01:07:04] *** Joins: josias (~mottmatri@2001:470:69fc:105::b6c)
[01:08:17] *** Joins: HenrikHenriksson (~hxctrl-cl@2001:470:69fc:105::e37b)
[01:08:23] *** Joins: midi[m] (~justmidim@2001:470:69fc:105::c739)
[01:09:01] *** Joins: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3)
[01:09:03] *** Joins: LorisCro[m] (~kristoff-@2001:470:69fc:105::1:2521)
[01:09:08] *** Joins: motiejus (~motiejus@2001:470:69fc:105::38fb)
[01:09:14] *** Joins: AtomToast (~atomtoast@2001:470:69fc:105::8a5)
[01:11:37] *** Joins: voroskoi[m] (~voroskoif@2001:470:69fc:105::e17)
[01:16:17] *** Quits: terminalpusher (~terminalp@2a01:586:8db1:1:5f76:20cc:55c7:b3a0) (Remote host closed the connection)
[01:18:54] *** Quits: midi[m] (~justmidim@2001:470:69fc:105::c739) (Remote host closed the connection)
[01:18:54] *** Quits: HenrikHenriksson (~hxctrl-cl@2001:470:69fc:105::e37b) (Remote host closed the connection)
[01:18:54] *** Quits: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b) (Remote host closed the connection)
[01:18:54] *** Quits: da_lorax (~daloraxye@2001:470:69fc:105::1:5e15) (Remote host closed the connection)
[01:18:54] *** Quits: LorisCro[m] (~kristoff-@2001:470:69fc:105::1:2521) (Remote host closed the connection)
[01:18:54] *** Quits: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3) (Remote host closed the connection)
[01:18:54] *** Quits: AtomToast (~atomtoast@2001:470:69fc:105::8a5) (Remote host closed the connection)
[01:18:54] *** Quits: voroskoi[m] (~voroskoif@2001:470:69fc:105::e17) (Write error: Connection reset by peer)
[01:18:55] *** Quits: LevyElara[m] (~tauoverpi@2001:470:69fc:105::728) (Read error: Connection reset by peer)
[01:18:55] *** Quits: moats (~oats@user/oats) (Write error: Connection reset by peer)
[01:18:55] *** Quits: motiejus (~motiejus@2001:470:69fc:105::38fb) (Remote host closed the connection)
[01:18:55] *** Quits: Snektron[m] (~snektron@2001:470:69fc:105::f0a3) (Remote host closed the connection)
[01:18:56] *** Quits: mikolajw (~mikolajtc@2001:470:69fc:105::3b02) (Write error: Connection reset by peer)
[01:18:56] *** Quits: ugla (~ugla@2001:470:69fc:105::2b5) (Remote host closed the connection)
[01:18:56] *** Quits: devast8a (~devast8a@2001:470:69fc:105::3f46) (Remote host closed the connection)
[01:18:57] *** Quits: blackcatter[m] (~blackcatt@2001:470:69fc:105::e10c) (Remote host closed the connection)
[01:18:57] *** Quits: barath (~barath@2001:470:69fc:105::21a) (Remote host closed the connection)
[01:18:57] *** Quits: CrystalGamma[m] (~crystalga@2001:470:69fc:105::1011) (Read error: Connection reset by peer)
[01:18:58] *** Quits: josias (~mottmatri@2001:470:69fc:105::b6c) (Remote host closed the connection)
[01:18:59] *** Quits: polykernel (~polykerne@user/polykernel) (Write error: Connection reset by peer)
[01:19:01] *** Quits: chgr (~ek@nat-91-137-16-17.net.encoline.de) (Quit: WeeChat 3.3)
[01:20:05] *** Joins: devast8a (~devast8a@2001:470:69fc:105::3f46)
[01:22:17] *** Joins: polykernel (~polykerne@user/polykernel)
[01:22:17] *** Joins: bfredl (~bfredl@2001:470:69fc:105::183)
[01:22:17] *** Joins: CrystalGamma[m] (~crystalga@2001:470:69fc:105::1011)
[01:22:17] *** Joins: ugla (~ugla@2001:470:69fc:105::2b5)
[01:22:17] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[01:22:17] *** Joins: xiamx (~xiamx@2001:470:69fc:105::1:5692)
[01:22:17] *** Joins: siraben (~siraben@user/siraben)
[01:22:17] *** Joins: motiejus (~motiejus@2001:470:69fc:105::38fb)
[01:22:17] *** Joins: Levytauoverpitch (~tauoverpi@2001:470:69fc:105::728)
[01:22:17] *** Joins: mikolajw (~mikolajtc@2001:470:69fc:105::3b02)
[01:22:29] *** Joins: voroskoi[m] (~voroskoif@2001:470:69fc:105::e17)
[01:22:29] *** Joins: HenrikHenriksson (~hxctrl-cl@2001:470:69fc:105::e37b)
[01:22:29] *** Joins: midi[m] (~justmidim@2001:470:69fc:105::c739)
[01:22:29] *** Joins: Snektron[m] (~snektron@2001:470:69fc:105::f0a3)
[01:22:29] *** Joins: josias (~mottmatri@2001:470:69fc:105::b6c)
[01:22:29] *** Joins: blackcatter[m] (~blackcatt@2001:470:69fc:105::e10c)
[01:22:29] *** Joins: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3)
[01:22:30] *** Joins: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b)
[01:22:30] *** Joins: da_lorax (~daloraxye@2001:470:69fc:105::1:5e15)
[01:22:30] *** Joins: moats (~oats@user/oats)
[01:22:31] *** Joins: LorisCro[m] (~kristoff-@2001:470:69fc:105::1:2521)
[01:22:31] *** Joins: asmwfi[m] (~repmovsb@2001:470:69fc:105::1:274e)
[01:22:31] *** Joins: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4)
[01:22:31] *** Joins: barath (~barath@2001:470:69fc:105::21a)
[01:22:31] *** Joins: _javyre (~javyre@2001:470:69fc:105::2162)
[01:22:31] *** Joins: gpanders (~gpanders@user/gpanders)
[01:22:32] *** Joins: AtomToast (~atomtoast@2001:470:69fc:105::8a5)
[01:22:32] *** Joins: rslabbert1 (~rslabbert@2001:470:69fc:105::1:457d)
[01:23:55] *** Joins: drewr (~drew@user/drewr)
[01:39:22] *** Joins: amosbird (~amosbird@13.75.119.182)
[01:41:46] <amosbird> Hello! The zig cc feature is amazing. Will it be in-sync with the upstream clang compiler? If no, how much will it lag behind?
[01:42:14] <ikskuh> amosbird: we usually release "in-sync" to LLVM
[01:42:22] <ikskuh> so roughly one to two months lag usually
[01:43:31] *** Quits: siraben (~siraben@user/siraben) (Quit: Client limit exceeded: 20000)
[01:43:39] *** Quits: motiejus (~motiejus@2001:470:69fc:105::38fb) (Quit: Client limit exceeded: 20000)
[01:43:43] *** Quits: devast8a (~devast8a@2001:470:69fc:105::3f46) (Quit: Client limit exceeded: 20000)
[01:44:09] *** Quits: bfredl (~bfredl@2001:470:69fc:105::183) (Quit: Client limit exceeded: 20000)
[01:44:45] *** Quits: jokoon (~eio@2a01:e0a:542:e160:a036:c333:5055:e361) (Quit: Leaving)
[01:46:30] *** Quits: mikolajw (~mikolajtc@2001:470:69fc:105::3b02) (Quit: Client limit exceeded: 20000)
[01:47:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:47:30] *** Quits: xiamx (~xiamx@2001:470:69fc:105::1:5692) (Quit: Client limit exceeded: 20000)
[01:47:32] *** Quits: CrystalGamma[m] (~crystalga@2001:470:69fc:105::1011) (Quit: Client limit exceeded: 20000)
[01:47:36] *** Quits: ugla (~ugla@2001:470:69fc:105::2b5) (Quit: Client limit exceeded: 20000)
[01:47:45] *** Quits: Levytauoverpitch (~tauoverpi@2001:470:69fc:105::728) (Quit: Client limit exceeded: 20000)
[01:47:46] *** Quits: polykernel (~polykerne@user/polykernel) (Quit: Client limit exceeded: 20000)
[01:48:18] *** Quits: da_lorax (~daloraxye@2001:470:69fc:105::1:5e15) (Quit: Client limit exceeded: 20000)
[01:48:18] *** Quits: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b) (Quit: Client limit exceeded: 20000)
[01:48:18] *** Quits: blackcatter[m] (~blackcatt@2001:470:69fc:105::e10c) (Quit: Client limit exceeded: 20000)
[01:48:19] *** Quits: HenrikHenriksson (~hxctrl-cl@2001:470:69fc:105::e37b) (Quit: Client limit exceeded: 20000)
[01:48:19] *** Quits: Snektron[m] (~snektron@2001:470:69fc:105::f0a3) (Quit: Client limit exceeded: 20000)
[01:48:19] *** Quits: voroskoi[m] (~voroskoif@2001:470:69fc:105::e17) (Quit: Client limit exceeded: 20000)
[01:48:19] *** Quits: josias (~mottmatri@2001:470:69fc:105::b6c) (Quit: Client limit exceeded: 20000)
[01:48:19] *** Quits: midi[m] (~justmidim@2001:470:69fc:105::c739) (Quit: Client limit exceeded: 20000)
[01:48:19] *** Quits: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3) (Quit: Client limit exceeded: 20000)
[01:48:20] *** Quits: LorisCro[m] (~kristoff-@2001:470:69fc:105::1:2521) (Quit: Client limit exceeded: 20000)
[01:48:21] *** Quits: moats (~oats@user/oats) (Quit: Client limit exceeded: 20000)
[01:48:23] *** Quits: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4) (Quit: Client limit exceeded: 20000)
[01:48:24] *** Quits: asmwfi[m] (~repmovsb@2001:470:69fc:105::1:274e) (Quit: Client limit exceeded: 20000)
[01:48:24] *** Quits: gpanders (~gpanders@user/gpanders) (Quit: Client limit exceeded: 20000)
[01:48:24] *** Quits: barath (~barath@2001:470:69fc:105::21a) (Quit: Client limit exceeded: 20000)
[01:48:24] *** Quits: _javyre (~javyre@2001:470:69fc:105::2162) (Quit: Client limit exceeded: 20000)
[01:48:25] *** Quits: rslabbert1 (~rslabbert@2001:470:69fc:105::1:457d) (Quit: Client limit exceeded: 20000)
[01:48:25] *** Quits: AtomToast (~atomtoast@2001:470:69fc:105::8a5) (Quit: Client limit exceeded: 20000)
[01:49:28] <amosbird> Thanks!
[01:49:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[01:49:44] *** Joins: devast8a (~devast8a@2001:470:69fc:105::3f46)
[01:49:57] *** Joins: AtomToast (~atomtoast@2001:470:69fc:105::8a5)
[01:50:12] *** Joins: Snektron[m] (~snektron@2001:470:69fc:105::f0a3)
[01:51:35] *** Joins: voroskoi[m] (~voroskoif@2001:470:69fc:105::e17)
[01:51:58] *** Joins: josias (~mottmatri@2001:470:69fc:105::b6c)
[01:52:11] *** Joins: midi[m] (~justmidim@2001:470:69fc:105::c739)
[01:52:27] *** Joins: polykernel (~polykerne@user/polykernel)
[01:52:39] *** Joins: da_lorax (~daloraxye@2001:470:69fc:105::1:5e15)
[01:52:52] *** Joins: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3)
[01:53:05] *** Joins: blackcatter[m] (~blackcatt@2001:470:69fc:105::e10c)
[01:53:19] *** Joins: barath (~barath@2001:470:69fc:105::21a)
[01:53:19] *** Joins: siraben (~siraben@user/siraben)
[01:53:19] *** Joins: bfredl (~bfredl@2001:470:69fc:105::183)
[01:53:33] *** Joins: CrystalGamma[m] (~crystalga@2001:470:69fc:105::1011)
[01:53:45] *** Joins: LorisCro[m] (~kristoff-@2001:470:69fc:105::1:2521)
[01:53:45] *** Joins: moats (~oats@user/oats)
[01:53:59] *** Joins: ugla (~ugla@2001:470:69fc:105::2b5)
[01:54:11] *** Joins: HenrikHenriksson (~hxctrl-cl@2001:470:69fc:105::e37b)
[01:54:25] *** Joins: _javyre (~javyre@2001:470:69fc:105::2162)
[01:54:25] *** Joins: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b)
[01:54:25] *** Joins: xiamx (~xiamx@2001:470:69fc:105::1:5692)
[01:54:39] *** Joins: gpanders (~gpanders@user/gpanders)
[01:54:41] *** Joins: asmwfi[m] (~repmovsb@2001:470:69fc:105::1:274e)
[01:54:41] *** Joins: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4)
[01:54:42] *** Joins: rslabbert1 (~rslabbert@2001:470:69fc:105::1:457d)
[01:54:42] *** Joins: motiejus (~motiejus@2001:470:69fc:105::38fb)
[01:54:42] *** Joins: mikolajw (~mikolajtc@2001:470:69fc:105::3b02)
[01:54:54] *** Joins: Levytauoverpitch (~tauoverpi@2001:470:69fc:105::728)
[02:14:37] *** Quits: frmdstryr (~jrm@172.58.206.202) (Ping timeout: 240 seconds)
[02:29:37] *** Quits: thickrocks (e46ff6ac16@2604:bf00:561:2000::13d) (Remote host closed the connection)
[02:30:14] *** Quits: yrlf (~yrlf@omnath.yrlf.at) (Quit: The Lounge - https://thelounge.chat)
[02:30:49] *** Joins: livoreno (~livoreno@user/notzmv)
[02:31:02] *** Joins: yrlf (~yrlf@omnath.yrlf.at)
[02:40:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:47:41] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[02:55:38] *** Joins: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de)
[03:07:56] *** Joins: frmdstryr (~jrm@172.58.206.202)
[03:11:08] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[03:12:36] *** mischief1 is now known as mischief
[03:16:34] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Closing Window)
[03:26:35] *** Quits: Daimanta (~Daimanta@86-85-205-212.fixed.kpn.net) (Quit: Leaving)
[03:33:37] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:34:28] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:38:57] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:39:41] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92)
[03:44:37] *** Quits: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de) (Ping timeout: 240 seconds)
[03:46:01] *** Joins: okCiel (~okCiel@softbank126051111074.bbtec.net)
[03:52:17] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[03:58:18] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92) (Read error: Connection reset by peer)
[03:59:51] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92)
[04:23:11] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[04:25:17] <andrewrk> amosbird, try executing `zig clang -v` :)
[04:42:57] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[04:44:24] *** cr1901_ is now known as cr1901
[04:59:01] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[05:08:18] *** Quits: drewr (~drew@user/drewr) (Quit: ERC (IRC client for Emacs 27.2))
[05:12:34] *** Joins: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com)
[05:18:57] *** Quits: nurbl (~jofo@c83-252-92-24.bredband.tele2.se) (Ping timeout: 240 seconds)
[05:19:37] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92) (Read error: Connection reset by peer)
[05:20:27] *** Joins: rgrinberg (~textual@177.246.216.2)
[05:26:09] *** Quits: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com) (Quit: WeeChat 3.4)
[05:35:03] *** Joins: edev0 (~edev0@p9820161-ipngn16301marunouchi.tokyo.ocn.ne.jp)
[05:35:14] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:40:48] *** Quits: edev0 (~edev0@p9820161-ipngn16301marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:45:12] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:1980:c918:3a83:b4fa) (Remote host closed the connection)
[05:45:31] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:1980:c918:3a83:b4fa)
[06:03:34] *** freshcoffee1 is now known as freshcoffee
[06:04:34] *** Joins: neurocyte6 (~neurocyte@user/neurocyte)
[06:04:52] *** Quits: okCiel (~okCiel@softbank126051111074.bbtec.net) (Quit: WeeChat 2.8)
[06:06:46] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[06:06:46] *** neurocyte6 is now known as neurocyte
[06:20:38] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:36:28] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:46:11] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:46:32] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:46:59] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:d903:d876:1354:7b4c) (Ping timeout: 250 seconds)
[06:48:04] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:df45:34e6:a5aa:758)
[06:59:42] *** Joins: livoreno (~livoreno@user/notzmv)
[07:03:20] *** Quits: rgrinberg (~textual@177.246.216.2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:07:44] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[07:13:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:13:45] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92)
[07:39:17] *** Quits: frmdstryr (~jrm@172.58.206.202) (Ping timeout: 240 seconds)
[07:45:19] *** Joins: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com)
[07:45:53] *** Joins: alexsq (~alexsq@2600:8801:18f:6300:dccc:218a:8857:e4ed)
[08:13:28] *** Quits: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001) (Quit: ZNC 1.8.2 - https://znc.in)
[08:14:05] *** Joins: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001)
[08:25:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[08:44:30] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[08:59:33] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9pliwyyxpy4s3y3dqctl.ipv6.telus.net)
[09:17:59] *** Joins: Guest64 (~Guest64@182.160.37.228)
[09:19:31] *** Quits: Guest64 (~Guest64@182.160.37.228) (Client Quit)
[09:32:44] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:34:13] *** Joins: aKriJcz (~jirka@mail.tcz.cz)
[09:35:25] <amosbird> andrewrk: Awesome! Can I use it to replace gcc/clang toolchain now? In ClickHouse [https://github.com/ClickHouse/ClickHouse] we're trying to make Hermetic Build (generating identical binary on different environment). In order to achieve this, we did a lot stuff.
[09:35:32] <amosbird> 1. We port some musl libc code to make sure no >= GLIBC 2.5 symbols are introduced. (glibc-compatibility) 2. We ship the source code of libc++ and use libc++ instead of libstdc++. 3. We ship tailored gcc binaries and libc headers from ubuntu-20.04 docker image as a sysroot. 4. We use the clang-13 compiler and lld linker from ubuntu-20.04. 5. We also ship some blobs to do cross compilation targeting
[09:35:34] <amosbird> arm and mips.
[09:35:54] <amosbird> Can we just ship the zig binary to achieve all of these?
[09:45:31] *** Quits: alexsq (~alexsq@2600:8801:18f:6300:dccc:218a:8857:e4ed) (Remote host closed the connection)
[09:48:59] *** Quits: aKriJcz (~jirka@mail.tcz.cz) (Ping timeout: 256 seconds)
[09:58:54] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:01:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[10:04:56] *** Joins: aKriJcz (~jirka@mail.tcz.cz)
[10:16:33] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92) (Read error: Connection reset by peer)
[10:17:44] *** Joins: rgrinberg (~textual@177.246.216.125)
[10:18:29] *** Quits: rgrinberg (~textual@177.246.216.125) (Read error: Connection reset by peer)
[10:19:12] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[10:20:00] *** Joins: rgrinberg (~textual@177.246.216.125)
[10:55:47] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[10:57:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:58:44] *** Joins: chgr (~ek@nat-91-137-16-17.net.encoline.de)
[10:59:23] <freshcoffee> amosbird: is libc++ shipped/used for developers of (c++) clients to ClickHouse?
[11:13:22] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:17:56] <amosbird> freshcoffee: ClickHouse doesn't officially support c/c++ clients. It provides HTTP protocol (newly gRPC) for that purpose. And for REPL usage, the ClickHouse binary has a decent client implementation based on replxx (https://github.com/AmokHuginnsson/replxx)
[11:18:42] <freshcoffee> why is libc++ source code shipped?
[11:19:21] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[11:23:21] <amosbird> We don't need ABI compatibility, everything dependency is compiled together. To answer your question, there are two benefits: 1. We did some modification to do informative stack unwinding (https://github.com/ClickHouse-Extras/libcxx/pull/1) . 2. use libc++'s unstable ABI to provide better performance  (https://github.com/ClickHouse/ClickHouse/pull/18914) . And we can extend stuff in std more freely
[11:23:23] <amosbird> like https://github.com/ClickHouse-Extras/libcxx/pull/2
[11:25:05] <freshcoffee> so I understand correct, the ClickHouse product has server and client executables, and from the website, several linux distros are quick-start featured,
[11:25:52] <freshcoffee> like ubuntu/debian, centos/redhat, and other. I assume x86_64 ?, and then arm on linux (aarch64?), macos intel/aarch64 and freebsd
[11:27:29] <freshcoffee> one of the neat things with zig is if you ship exe, on linux, you can target musl and statically link. iirc, you can also target a linux kernel version. And the resulting exe will run on any linux kernel that version and higher, no fancy docker needed. It just works.
[11:27:37] <amosbird> "the ClickHouse product has server and client executables" Yes. To be precise, there is mainly one binary which provides different entry point based on exec-name
[11:28:45] <freshcoffee> for the other OS, like macos, you _can_ be explicit with SDK selection, and command-line flags to target a minimum macos version. It works fairly decently in my experience, but if that ever becomes troublesome, the dirt simple but
[11:29:08] <freshcoffee> sometimes tiresome way is just build on an older version of macos to target that version and higher,
[11:29:28] <amosbird> We're planing to use musl. However, before that, we need to find a proper way of doing dlopen in static binaries. Something like https://github.com/pfalcon/foreign-dlopen
[11:29:51] <freshcoffee> for freebsd, I'm not familiar with their libc ABI backwards compat guarantees, if any, so it could be as simple as build on minimum verison to support that and higher,
[11:30:10] <freshcoffee> but it sounds like zig could really help with Hermetic builds on linux.
[11:30:41] <amosbird> freshcoffee: Yeah, that's what I had in mind after reading https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html
[11:31:06] <freshcoffee> also side note, some of the BSD really have diff policies re: libc compat. For example, openbsd, afaik, makes no guarantees. so 6.9 exe may just stop working on openbsd 7.0 
[11:32:03] <amosbird> We still need our libc++. If zig cc is used, can we drop the sysroot and glibc-compatibility? And can we make sure that compilation optimization and ThinLTO will be the same?
[11:33:34] <freshcoffee> I'm not sure what you mean by sysroot, but if you target musl, and use `zig c++` then zig will build (inside its cache) libc++ for you automatically, and the resulting exe will be static
[11:34:02] <ikskuh> amosbird: check out "zig libc"
[11:34:07] <ikskuh> you can define the sysroot yourself
[11:34:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[11:34:55] <ikskuh> and dlopen for static executables means that you have to create a dynamic linker yourself
[11:35:20] <amosbird> ikskuh: I see. I thought zig has embeded blobs instead of seeking external sysroot
[11:35:42] <ikskuh> no, zig compiles all libc/libc++ from source
[11:35:46] <ikskuh> no embedded blobs
[11:35:47] <ikskuh> at all
[11:36:29] <amosbird> "all libc/libc++ from source" Are these source files embedded?
[11:36:34] <ikskuh> for dynamic linking with hacks, chec out this: https://github.com/andrewrk/zig-window
[11:36:54] <ikskuh> the libc files are in ${zigroot}/lib
[11:36:56] <freshcoffee> libc (musl) and libc++ sources are bundled with zig
[11:38:18] *** af1 is now known as af
[11:40:03] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[11:44:06] <freshcoffee> so here's a little walkthru:
[11:44:25] <amosbird> I saw libc, libcxx, libcxxabi and libunwind in ${zigroot}/lib. Suppose I'm using target aarch64-linux-gnu to compile a c++ project. Can I select only bundled libc in zig, while the other three externally?
[11:44:50] <freshcoffee> `zig cc -c hello.c -target x86_64-linux-musl` compiles hello.o but the neat thing is, we don't yet need musl library compiled. it used the headers is all.
[11:45:17] <freshcoffee> but do this and you'll see zig build 1300+ files the first time. `zic cc -o hello hello.c -target x86_64-linux-musl`
[11:46:09] <freshcoffee> and the resulting executable: `ldd hello: not a dynamic executable`
[11:46:42] <freshcoffee> similarily, this would cause zig to build (and cache) both musl libc, and libc++:
[11:46:53] <freshcoffee> `zig c++ -o hello hello.cpp -target x86_64-linux-musl`
[11:47:39] <freshcoffee> and again, the exe is static
[11:49:39] <freshcoffee> zig itself is distributed as a static executable, and target is {ARCH}-linux-musl, and that's the reason why one binary tarball (per architecture) of zig works for many (all?) linux distros, as opposed to one for each distro
[11:50:27] <amosbird> freshcoffee: Yes. These are exactly what I understand) Although I do see zig as a dynamic executable on my ArchLinux
[11:50:43] <freshcoffee> installed from zig download or pacman?
[11:50:45] <amosbird> pacman
[11:51:10] <freshcoffee> sure, that's how the distro maintainers want it. But zig's download page. one tarball.
[11:51:20] <freshcoffee> and it's static exe
[11:51:33] <amosbird> yeah
[11:53:06] <amosbird> Heh, zig c++ -o hello hello.cpp -target x86_64-linux-gnu generates a binary that SEGFAULTs on start
[11:53:22] <amosbird> information: http://oracle.wentropy.com/cadee5c1ff4d4070
[11:54:25] <freshcoffee> distro?
[11:54:33] <amosbird> ArchLinux pacman zig
[11:54:39] <amosbird> I thought I already mentioned that)
[11:55:11] <freshcoffee> can you do `zig version`
[11:55:19] <amosbird> 0.9.0
[11:56:59] <freshcoffee> odd. I just downloaded 0.9.0 from ziglang.org, and works for me
[11:57:08] <freshcoffee> ie: NOT pacman version
[11:57:57] <amosbird> Lemme check it out
[11:58:42] <freshcoffee> I also use zig master, self built on archlinux, and -linux-gnu works and also -linux-musl too
[12:01:21] <amosbird> I'll try ./build -j4 native-linux-gnu native first
[12:01:23] <freshcoffee> can confirm: pacman installed "zig-0.9.0-1" and it segfaults for me too
[12:01:32] <freshcoffee> something up with distro version
[12:04:09] <amosbird> I just found that `file zig` says dynamically linked, while `ldd zig` statically linked ...
[12:08:04] <freshcoffee> it's curious as to what causes that. I've seen it before. But building hello.cpp with musl, and both file and ldd report to me as static
[12:12:28] <freshcoffee> ll
[12:26:03] *** Joins: jonas_ (~textual@55867b35.cust.multi.fi)
[12:45:29] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[12:57:45] <Seng> > ll
[12:57:49] <Seng> Wrong window, freshcoffee 
[12:57:51] <Seng> :D
[12:58:04] <ikskuh> i think that was meant to be a *lld
[12:58:42] <Seng> ohhh. I thought ldd was the correct command. nvm me! I'm just over here, making a fool of myself :)
[13:05:08] *** Quits: rgrinberg (~textual@177.246.216.125) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:09:35] <freshcoffee> yup wrong window... just a shell alias. ll='ls -alF'
[13:11:29] <ikskuh> argh /o\
[13:11:38] <ikskuh> ll, lld and ldd are all valid commands
[13:11:40] <ikskuh> WHY?=! :D
[13:16:47] <novakane> is there some kind of convention when naming a mem.Allocator in a function args? I see allocator, ally, gpa in zig/src/*, I'd like to follow it
[13:17:48] <ikskuh> i use allocator, temporary_allocator and result_allocator
[13:18:06] <ikskuh> it's sometimes useful to pass two allocators
[13:18:11] <ikskuh> but if i only pass one, i use allocator
[13:18:38] <luuk> I use 'gpa' when I want to notate that any allocator is fine. When I'm implying a specific allocator, I use its name, such as 'arena'. 
[13:19:29] <leon-p> as longs as you are consistent within your codebase, everyname should be fine. But generally I use gpa for allocators in my global context and alloc for passed allocators.
[13:20:12] <novakane> yeah I only use allocator currently, or arena, just was a bit curious after seeing this in the source code
[13:28:05] *** Joins: notzmv (~zmv@user/notzmv)
[13:51:23] *** Quits: Erutuon_ (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[14:05:48] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:05:56] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:13:14] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:13:22] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:15:20] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:15:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:18:12] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:18:20] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:18:40] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:18:49] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:30:20] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[14:32:37] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[14:33:33] <Seng> can I define a function inside a function?
[14:35:19] <ikskuh> not yet, but you can define a local struct that exports a function
[14:36:49] <Seng> that's a fancy hack :)
[14:45:33] *** Joins: cursey (~cursey@user/cursey)
[14:48:02] *** Quits: breavyn (~breavyn@user/breavyn) (Ping timeout: 260 seconds)
[14:48:50] *** Joins: breavyn (~breavyn@user/breavyn)
[14:55:41] *** Quits: squeek502_ (~squeek502@user/squeek502) (Remote host closed the connection)
[15:03:22] *** Joins: earnest (~earnest@user/earnestly)
[15:03:26] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9pliwyyxpy4s3y3dqctl.ipv6.telus.net) ()
[15:59:42] <Seng> yay, day 5 of AoC complete!!
[15:59:50] <Seng> Day 5 of 2015 B)
[16:00:33] *** Joins: frmdstryr (~jrm@172.58.206.202)
[16:35:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:47:46] *** Joins: squeek502 (~squeek502@user/squeek502)
[16:50:37] *** Joins: pkap (~pkap@185.209.196.174)
[16:51:17] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:df45:34e6:a5aa:758) (Ping timeout: 240 seconds)
[16:52:30] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:fd9c:24e7:5ea:6f47)
[16:52:41] *** Quits: af (~af@awalgarg.me) (Quit: WeeChat 3.2.1)
[16:53:53] <novakane> I'm trying to loop over the fields of a struct and when the good one is found I'd like to assign it a value
[16:53:59] <novakane> i have something like this https://zigbin.io/1b9b51
[16:54:18] <novakane> but I can't find a way to set the walue
[16:54:36] <novakane> anyone have an example or some tips please?
[17:03:25] *** Quits: tiehuis (~tiehuis@user/tiehuis) (Remote host closed the connection)
[17:09:04] *** Joins: af (~af@awalgarg.me)
[17:13:25] <ikskuh> you can use "variable: []const u8" instead of using anytype here :_)
[17:14:16] <ikskuh> this will not compile though when the fields aren't compatible
[17:14:24] <ikskuh> you have to set "variable" as comptime
[17:14:39] <ikskuh> and call the mem.eql with comptime to have a guaranteed comptime branch
[17:14:47] <ikskuh> this will then allow you to actually assign different types with that
[17:17:18] <leon-p> novakane: that is why I put that parse() in the pseudocode example I sent you. Pass it the comptime known type of the variable and let it do the conversion.
[17:18:14] <leon-p> `value` will always be a []const u8, since my ini.zig is a tokenizer, not a parser
[17:20:05] <novakane> leon-p: yeah but `@field(config, field.name)` is a u16, so how should I parse the []const u8 for this 
[17:21:59] <leon-p> novakane: std.fmt as functions to parse numbers from strings
[17:22:08] <Seng> std.fmt.parseInt :)
[17:22:54] <novakane> ah yeah, well let me retry this, I'm gonna make this works one day
[17:23:13] <Seng> <3
[17:24:22] <Seng> I spent a good amount of time today understading comptime types for a generic approach to assigning data to a field in a struct :) Eventually succeeded! You can do it!
[17:26:22] <novakane> haha yeah thanks, that's something I didn't look too much into it yet, all the @typeWhatever kinda lost me today lol
[17:27:31] <leon-p> novakane: it's work, but the pay-off is quite nice: You'll be able to add new entries to your Config struct, knowing that the parsing is already taken care of.
[17:28:25] <Seng> My usecases is still quite basic, but my impression so far is that the language is quite dynamic and doesn't limit you much in what you can do.
[17:30:12] <motiejus> amosbird:freshcoffee see https://github.com/ziglang/zig/issues/10386
[17:30:49] <novakane> leon-p: right, great pay-off, great learning experience, and I'll give it to you for nfm after :P
[17:30:49] <motiejus> I am using (and am an early tester of) zig c++; you can find a somewhat up to date list of upstream issues that I know in https://sr.ht/~motiejus/bazel-zig-cc/#known-issues-in-upstream
[17:30:52] *** Quits: pkap (~pkap@185.209.196.174) (Quit: Client closed)
[17:31:11] <motiejus> Currently that's the only one. I am therefore stuck with pre-0.9.0 for now
[17:31:34] <motiejus> You can use a version that "works" from bazel-zig-cc, or use musl (it does not have this issue)
[17:33:08] <motiejus> Too bad I didn't catch this before 0.9.0; I hit it immediately after I attempted the upgrade
[17:36:47] <motiejus> It's quite unfortunate for anyone trying `zig c++` on 0.9.0
[17:37:46] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[17:39:01] <novakane> is there a way to return something like anytype?
[17:40:09] *** Joins: arkurious (~arkurious@user/arkurious)
[17:40:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[17:41:15] <novakane> or multiple type maybe
[17:42:22] *** Parts: daviwil (~daviwil@systemcrafters/daviwil) (ERC 5.4 (IRC client for GNU Emacs 28.0.60))
[17:43:49] <leon-p> novakane: if you already know the type at the callside of the function, then you can do something like `fn (T: type, ...) T { ... }`
[17:44:24] <leon-p> (and add a `comptime` before the first T)
[17:45:10] <motiejus> (the bugfix is scheduled for 0.9.1, so wait for that, or use whatever bazel-zig-cc 0.4.0-pre2 uses)
[17:45:31] <motiejus> I.e. 0.4.0-rc2
[17:45:55] <novakane> leon-p: I tried that but I have `expected type 'type', found 'u16'`
[17:48:08] *** Joins: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de)
[17:49:52] <leon-p> novakane: can you share a code snippet?
[17:50:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:51:13] <Franciman> building my debug llvm & clang & lld
[17:51:17] <novakane> leon-p: https://zigbin.io/071021
[17:52:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:53:19] <novakane> not sure if I can use .u16, .u32 btw ^^
[17:53:35] <Seng> line 4, @field(config), field.name) returns a u16, which is a u16 but not a type. 
[17:53:52] <Seng> I think there's a @TypeOf compiler function or something similar
[17:54:33] <novakane> oh right I forgot @TyoeOf, damn thanks
[17:56:56] *** Joins: Guest92 (~Guest92@217.9.121.88)
[18:00:06] *** Joins: lumo_e (~enrico@151.29.48.90)
[18:07:15] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:07:52] <novakane> is there something for a []const u8 to a bool?
[18:09:16] <daurn> what values do you want to be truthy/falsy/error/null?
[18:12:53] *** Quits: aKriJcz (~jirka@mail.tcz.cz) (Remote host closed the connection)
[18:13:56] <novakane> "true" and "false"
[18:14:35] <leon-p> novakane: pretty sure mem.eql(u8, value, "true") is good enough here.
[18:15:22] *** Quits: Guest92 (~Guest92@217.9.121.88) (Quit: Client closed)
[18:16:33] <daurn> or could use `std.meta.stringToEnum`. or could parse as json
[18:17:08] <novakane> no wait that true and false
[18:17:21] <novakane> `tags_number_text = true;
[18:17:46] <novakane> whoops enter to quickly, but that what I would have in the config
[18:20:19] <novakane> https://zigbin.io/8b4929
[18:22:13] <leon-p> novakane: putting that error message into your else branch in parse() is not right, since  a bad value in your config will not cause it to be reached, btw
[18:22:45] <novakane> ah
[18:23:12] <leon-p> and your []const u8 branch is also not right. The slices returned by the tokenizer will be invalid as soon as you call .next() again.
[18:23:55] <novakane> damn I though it was starting to be good :/
[18:24:29] <leon-p> well, I can only see this one function of course, but I'd say you are getting close :)
[18:26:06] <novakane> I guess I could use `if (mem.eql(u8, value, "true")) return true else return false,` for bool no?
[18:26:24] *** Joins: phaleth (~phaleth@user/phaleth)
[18:27:26] <leon-p> novakane: you can return the return of mem.eql() without going through if.
[18:27:41] <leon-p> (note though that tis will match any string as false that is not "true")
[18:29:11] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[18:29:33] <novakane> right, fine for me
[18:30:39] <daurn> (std.meta.stringToEnum(enum(u1){@"false"=0,@"true"=1}, value) orelse return error.InvalidBoolean) == .@"true"
[18:31:16] <daurn> or `try std.json.parse(bool, value)`
[18:34:15] <novakane> daurn: is it worht to use this instead of mem.eql()?
[18:34:28] <daurn> stringToEnum is just mem.eql underneath
[18:34:51] <daurn> if you wanted lots of different custom values it might be a nice way
[18:35:00] <daurn> e.g. True/true/yes/y
[18:35:56] <novakane> allright, makes sense thanks!
[18:39:37] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[18:39:49] <daurn> actually stringToEnum got a hashmap makeover
[18:39:56] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[18:40:03] <daurn> so it's not "just" mem.eql any more
[18:40:56] <novakane> ah, and so for a noob, would it be "better" or not then
[18:41:29] <novakane> since I'll probably only use true and false for now at least
[18:41:31] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[18:41:34] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[18:53:31] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:58:39] *** Quits: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de) (Ping timeout: 256 seconds)
[19:04:12] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:1980:c918:3a83:b4fa) (Remote host closed the connection)
[19:04:30] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:c5a:2a16:2d89:cad9)
[19:09:49] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[19:11:51] <Franciman> sorry ifreund what was the cmake config flag you suggested me, to use a dynamic LLVM lib ?
[19:13:56] <luuk> Franciman: -DZIG_PREFER_CLANG_CPP_DYLIB=ON ?
[19:14:32] <Franciman> trying
[19:20:58] <Franciman> luuk: wait how do I point cmake to my custom built llvm?
[19:21:14] *** Joins: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de)
[19:21:17] *** Quits: lumo_e (~enrico@151.29.48.90) (Ping timeout: 240 seconds)
[19:22:09] *** Quits: jonas_ (~textual@55867b35.cust.multi.fi) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:22:46] <luuk> -DCMAKE_PREFIX_PATH=
[19:23:08] <luuk> The wiki has all this information btw
[19:25:10] <Franciman> i know
[19:25:13] <Franciman> but it doesn't work
[19:25:24] <Franciman> i thougt it may be out of date
[19:26:38] <Franciman> it's because i can't read ^^'
[19:26:41] <Franciman> sorry
[19:26:48] <Franciman> i wrote CMAKE_PREFIX, instead of CMAKE_PREFIX_PATH
[19:26:54] <Franciman> ty
[19:26:55] <luuk> Happens to the best of us :)
[19:26:57] <luuk> No problem
[19:28:01] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[19:29:18] <Franciman> and now! undefined reference to `llvm::EnableABIBreakingChecks`
[19:30:58] <luuk> Why not link statically, btw?
[19:31:10] <luuk> Considering you already have your own LLVM built anyway
[19:32:04] <Franciman> yes I am now
[19:32:10] <Franciman> i am buinding statically
[19:32:13] <Franciman> i ran
[19:32:22] <Franciman> cmake -DCMAKE_PREFIX_PATH=$HOME/zig-debug/build/llvm13-debug/ -DZIG_STATIC_LLVM=on ..
[19:32:29] <Franciman> AH
[19:33:18] <Franciman> i don't want to build clang T.T
[19:38:13] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[19:44:03] *** Joins: nurbl (~jofo@c83-252-92-24.bredband.tele2.se)
[20:02:23] *** Joins: aspe[m] (~dimitrisa@2001:470:69fc:105::d93e)
[20:15:46] <Franciman> uff I am still getting a ton of undefined references
[20:18:00] *** Quits: semarie (~semarie@user/semarie) (Quit: WeeChat 3.2.1)
[20:23:46] *** Joins: xackus (~xackus@185.15.0.3)
[20:33:26] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:37:37] *** Quits: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de) (Ping timeout: 240 seconds)
[20:40:00] *** Joins: lumo_e (~enrico@151.29.78.238)
[20:46:50] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[20:47:12] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:47:18] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[20:53:03] *** Joins: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de)
[20:59:59] <Franciman> sorry ppl, i try to ask here since nobody is speaking
[21:00:32] <Franciman> /home/francesco/zig-debug/llvm-project-13/lld/MachO/UnwindInfoSection.h:15:10: fatal error: mach-o/compact_unwind_encoding.h: File or directory does not exist
[21:00:41] <Franciman> do you have this error too while building lld?
[21:07:11] <ofelas> I see Fedora did a patch pulling the file from libunwind, https://src.fedoraproject.org/rpms/lld/tree/rawhide
[21:07:56] <Franciman> wuuut
[21:07:58] <Franciman> thanks
[21:08:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[21:12:49] <Franciman> maybe this time it works
[21:12:59] <Franciman> it's building the self hosted component zig1.o
[21:18:17] *** Quits: lumo_e (~enrico@151.29.78.238) (Ping timeout: 240 seconds)
[21:18:42] *** Joins: lumo_e (~enrico@151.29.77.175)
[21:23:18] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[21:28:33] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[21:35:16] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[21:35:37] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[21:45:49] *** Joins: rgrinberg (~textual@2806:101e:7:33a5:693b:2444:ee3f:bdac)
[21:46:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:54:03] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[21:56:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:59:15] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:01:59] *** Quits: rgrinberg (~textual@2806:101e:7:33a5:693b:2444:ee3f:bdac) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:03:33] *** Joins: rgrinberg (~textual@2806:101e:7:33a5:693b:2444:ee3f:bdac)
[22:03:57] *** Quits: lumo_e (~enrico@151.29.77.175) (Ping timeout: 240 seconds)
[22:16:10] <Franciman> i found the problem
[22:16:27] <Franciman> the bug is
[22:16:46] <Franciman> https://bpa.st/5KKQ
[22:16:51] <Franciman> i tried running the debugger
[22:17:05] <Franciman> but it doesn't stop where it should
[22:17:13] <Franciman> how do you usually debug these codegen bugs?
[22:19:10] *** Joins: livoreno (~livoreno@user/notzmv)
[22:19:59] <Franciman> ah I think I understand where the problem lies
[22:20:04] <Franciman> it's in the sentinel array
[22:22:07] <Franciman> no i don't think so :S
[22:27:09] *** Quits: rgrinberg (~textual@2806:101e:7:33a5:693b:2444:ee3f:bdac) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:30:39] *** Joins: lumo_e (~enrico@151.29.77.175)
[22:30:58] <Franciman> no i think it is a sentinel
[22:31:06] <Franciman> so this is a frontend problem, not codegen
[22:33:48] <Franciman> ok now i need to go to gym
[22:34:07] <Franciman> the frontend didn't allow me to put an invalid value as sentinel of my array
[22:34:32] <Franciman> https://github.com/Franciman/telescope/blob/main/src/machine/program.zig#L79
[22:34:44] <Franciman> https://github.com/Franciman/telescope/blob/main/src/machine/program.zig#L24 Instr is a union
[22:34:52] <Franciman> is zig expected to not tell me anything?
[22:34:57] <Franciman> or is this considered a bug?
[22:35:02] <Franciman> let me know. I'll read later
[22:35:11] <Franciman> and in case either close the issue or make it more detailed
[22:36:09] <luuk> I guess this happens because it's a sero-sized value
[22:36:43] <luuk> An issue (which may exist already) would be good, because we can make sure that we do catch this in the self-hosted compiler
[22:37:22] <luuk> s/sero-sized/zero-sized
[22:37:32] <luuk> I swear I make that typo all the time :(
[22:40:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[22:42:15] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:42:54] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:44:48] *** Joins: rgrinberg (~textual@187.223.75.25)
[22:45:05] *** Quits: rgrinberg (~textual@187.223.75.25) (Client Quit)
[23:08:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:11:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[23:25:12] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:35:29] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:37:27] *** Quits: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de) (Ping timeout: 256 seconds)
[23:39:37] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[23:47:34] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[23:51:52] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
