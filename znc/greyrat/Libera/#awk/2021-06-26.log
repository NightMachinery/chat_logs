[00:28:29] <mobius> awk-ward
[00:40:55] *** Quits: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com) (Ping timeout: 244 seconds)
[00:43:01] *** Joins: roarde (~roarde@user/roarde)
[00:43:55] *** Joins: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com)
[00:46:36] *** Quits: user51 (~user51@77.124.42.70) (Quit: leaving)
[01:05:10] *** Joins: vinipsmaker (~vinipsmak@2804:14c:f427:a9bc::1001)
[01:07:29] *** Joins: richbridger (~richbridg@213-225-12-210.nat.highway.a1.net)
[01:54:03] *** Quits: chasmo77 (~chas77@71.63.241.168) (Ping timeout: 268 seconds)
[02:06:38] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[03:11:54] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 272 seconds)
[04:19:06] *** Joins: downunder (~downunder@110.151.120.49)
[04:29:18] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[04:37:38] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 250 seconds)
[04:44:54] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:30] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[05:34:44] *** Joins: vlm (~vlm@user/vlm)
[05:34:50] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[05:39:14] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[05:46:22] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[06:08:12] *** Joins: phillbush (~phillbush@user/phillbush)
[06:21:43] *** Joins: aquijoule_ (~richbridg@213-225-5-235.nat.highway.a1.net)
[06:24:40] *** Quits: richbridger (~richbridg@213-225-12-210.nat.highway.a1.net) (Ping timeout: 265 seconds)
[06:42:04] *** Quits: phillbush (~phillbush@user/phillbush) (Ping timeout: 244 seconds)
[07:04:21] *** Joins: phillbush (~phillbush@user/phillbush)
[07:31:36] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[07:43:55] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[07:56:18] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[08:09:11] *** thunderfish is now known as mnrmnaugh
[08:43:56] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:53:21] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 258 seconds)
[09:47:49] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[10:24:27] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[10:34:22] *** Joins: simbioz_ (~simbioz@user/simbioz)
[10:37:40] *** Quits: simbioz (~simbioz@user/simbioz) (Ping timeout: 244 seconds)
[10:45:50] *** Joins: kensanata (~user@user/kensanata)
[10:52:59] *** Quits: downunder (~downunder@110.151.120.49) (Quit: WeeChat 3.2)
[10:55:16] *** Joins: downunder (~downunder@110.151.120.49)
[12:02:59] *** Joins: chasmo77 (~chas77@71.63.241.168)
[12:03:31] *** Joins: earnestly (~earnest@user/earnestly)
[12:08:49] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[12:44:08] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[12:52:46] *** Joins: lavaball (felix@31.204.155.215)
[13:38:45] *** Joins: kensanata (~user@user/kensanata)
[15:57:45] *** Quits: downunder (~downunder@110.151.120.49) (Quit: WeeChat 3.2)
[16:14:11] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[16:16:10] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 250 seconds)
[16:26:08] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:c1e6:8279:92e9:57ec) (Ping timeout: 250 seconds)
[16:34:22] *** Quits: vinipsmaker (~vinipsmak@2804:14c:f427:a9bc::1001) (Ping timeout: 250 seconds)
[17:30:28] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[17:32:37] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Client Quit)
[17:33:19] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[17:45:19] *** Joins: Torr (~Torr@user/torr)
[17:54:52] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[17:55:06] *** Joins: Torr (~Torr@user/torr)
[19:25:36] *** Joins: node1 (~node1@user/node1)
[19:25:43] <node1> Hello wonderful people.
[19:30:26] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[19:35:32] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[19:35:49] *** Joins: Helmholtz1 (Helmholtz@user/helmholtz)
[19:35:55] <Helmholtz1> I have a table. I want to select two numbers from specific rows and columns. How can I do it? https://termbin.com/v9mp
[19:36:03] <Helmholtz1> Here I want 5 and 6 by addressing z:B and z:C
[19:36:19] <Helmholtz1> http://ix.io/3rc5
[19:38:41] <node1> I have this data format `1624665720: -3.3602830000e-04 2.2051450000e+01 1.1742805000e-04 9.1370000000e-04 7.0000000000e+00` I guess it's in scientific notation. And i would like to convert it into `Saturday 26 June 2021 05:32:00 AM IST -- 59391 120.385 -0.000320308 22.051 0.000114202 0.000938 7`
[19:39:09] <nmz> a table in awk?
[19:39:43] <Helmholtz1> nmz, no, in a file
[19:40:47] <nmz> ok so the first row/line is a header right?
[19:41:07] <Helmholtz1> nmz, yes
[19:44:41] <nmz> awk 'BEGIN {getline; for (i=2;i<=NF;i++) a[$i] = i} $1==x { print $a["B"] } ' x="z" yourfile
[19:45:51] <nmz> change x= to point to the row you want, change "B" to the column you want
[19:48:17] <node1> nmz, all rows and all column.
[19:49:11] <Helmholtz1> nmz, thknas
[19:50:20] <node1> awk 'BEGIN {getline; for (i=2;i<=NF;i++) a[$i] = i} $1==$0 { print $a["$0"] } ' x="z" yourfile  will it works?
[19:50:41] <izabera> print $a["$0"] ???
[19:50:50] <nmz> node1: that answer was for Helmholtz1 
[19:50:51] <izabera> what is this
[19:50:59] <nmz> node1: and no, that is senseless
[19:51:00] <node1> oh.
[19:51:00] <izabera> r u guys drunk
[19:51:22] <Helmholtz1> nmz solution works
[19:51:33] <node1> So you know the solution for my problem?
[19:51:43] <izabera> i don't get it
[19:51:48] <Helmholtz1> so for two random values, I should execute this loop twice right?
[19:51:55] <izabera> what's    print $a["B"]
[19:51:59] <izabera> what language is this
[19:52:06] <izabera> ah
[19:52:06] <nmz> # curl -s https://termbin.com/v9mp | awk 'BEGIN {getline; for (i=2;i<=NF;i++) a[$i] = i} $1=="z" { print $a["B"], $a["C"] }'
[19:52:08] <shbot> nmz: bash: curl: command not found
[19:52:13] <nmz> damn you shbot 
[19:52:14] <izabera> it's like $(a["B"])
[19:52:16] <izabera> cool
[19:52:21] <nmz> lol izabera 
[19:52:25] <izabera> i'm slow
[19:52:33] <nmz> node1: no, I don't know anything about dates
[19:52:42] <izabera> i totally thought it was ($a)["B"]
[19:52:45] <node1> I would like to convert this scientific notation 1624665720: -3.3602830000e-04 2.2051450000e+01 1.1742805000e-04 9.1370000000e-04 7.0000000000e+00` into human redable format. For example into this `Saturday 26 June 2021 05:32:00 AM IST -- 59391 120.385 -0.000320308 22.051 0.000114202 0.000938 7`
[19:52:56] <izabera> https://termbin.com/4ina   i'd write it like this btw
[19:53:07] <Helmholtz1> nmz, your 2 vals also works. Just tested ðŸŒ¹
[19:53:32] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[19:53:35] <nmz> izabera: very nice, more direct
[19:54:03] <izabera> node1: i thought you asked this a few days ago and got an answer?
[19:54:06] <izabera> i could be wrong
[19:54:34] <izabera> like at least the part with the date looks familiar
[19:54:41] <Helmholtz1> nmz, that "a" has a meaning in awk?
[19:54:42] <izabera> the rest if just printf %g, no?
[19:54:49] <node1> izabera, Yes i got the answer but it's not matching with my data. I would like you to kindly re consider my problem again.
[19:54:59] <izabera> ok 
[19:55:13] <nmz> Helmholtz1: a is an array
[19:55:40] <nmz> izabera: NR==1 I think that expression will run on each record no?
[19:55:48] <izabera> yes but it instafails
[19:55:53] <izabera> so who cares
[19:56:00] <node1> This is the format of sample data `1624665720: -3.3602830000e-04 2.2051450000e+01 1.1742805000e-04 9.1370000000e-04 7.0000000000e+00` and i would like it to make in this format `Saturday 26 June 2021 05:32:00 AM IST -- 59391 120.385 -0.000320308 22.051 0.000114202 0.000938 7`
[19:56:01] <nmz> I do
[19:56:04] <izabera> well i don't
[19:56:05] * nmz OCD kicks in
[19:56:29] <nmz> ITS A WORTHLESS INSTRUCTION! ITS TAKING 1 CYCLE OUT OF MAH CPU
[19:59:14] <izabera> # echo 1624665720: -3.3602830000e-04 2.2051450000e+01 1.1742805000e-04 9.1370000000e-04 7.0000000000e+00 | awk -F'[: ]+' '{ "date -d @" $1 | getline date; printf "%s", date; for (i = 2; i <= NF; i++) printf " %g", $i; print "" }'
[19:59:16] <shbot> izabera: Sat Jun 26 00:02:00 UTC 2021 -0.000336028 22.0514 0.000117428 0.0009137 7
[19:59:24] <izabera> node1: ^ 
[20:00:15] <izabera> wait where did you get 59391 and 120.385
[20:00:17] <node1> izabera, Thank you :) 
[20:01:00] <izabera> -0.000320308 looks wrong, too
[20:01:13] <node1> izabera, These are julian date format
[20:01:15] <izabera> 0.000114202 also wrong
[20:01:29] <izabera> what the fuck
[20:01:41] <izabera> do you even float
[20:01:48] <node1> Yes there must be something wrong with my configuration.
[20:02:12] <node1> I need to start my RRD database on correct time. In order to reterive same data.
[20:02:26] <node1> Might be it's happening because of data sampling rate.
[20:03:56] <node1> izabera, Kindly ignore this two numbers  59391 120.385
[20:04:26] * izabera ignores
[20:04:49] <node1> `Saturday 26 June 2021 05:32:00 AM IST  -0.000320308 22.051 0.000114202 0.000938 7`
[20:05:01] <izabera> yeah that's what my code prints
[20:05:10] <node1> Yes thank you very much izabera 
[20:05:28] <izabera> (your floats are still wrong tho)
[20:06:30] <nmz> Helmholtz1: and no, you don't have to run the loop twice btw, as long as you're in the row, you can get whatever is in it
[20:06:55] <izabera> isn't it awful that you can't do something like    foo = "x", "y"
[20:07:00] <izabera> i hate this 
[20:07:08] <nmz> what would that do?
[20:07:47] <izabera> i just wanted to write this     ("z","B") in table { print table["z","B"] }          like        foo in table { print table[foo] }
[20:07:51] <izabera> and i can't
[20:08:02] <izabera> foo = ("x", "y")    doesn't work either
[20:08:37] <nmz> Helmholtz1: izabera's solution though, will allow you to go back, however, the entire file will go into memory, if the file is small, no problem, if the file is bigger than your ram, then you're f-ed.
[20:08:55] <izabera> wat
[20:09:01] <nmz> it doesnt?
[20:09:03] <izabera> no?
[20:09:12] <izabera> ah it does
[20:09:14] <izabera> right
[20:09:17] <izabera> well ok
[20:09:25] <nmz> omg
[20:09:30] <izabera> i need more brain
[20:09:34] <nmz> seriously dude you wrote it
[20:09:36] <nmz> XDD
[20:09:59] <nmz> I may have misunderstood, I never understand what other people's code does
[20:10:12] <izabera> i may have some serious short term memory problems
[20:10:51] <nmz> its better, write the code and forget about it
[20:11:38] <nmz> also, why can't you do foo = "x" SUBSEP "y"  ?
[20:11:59] <nmz> the thing is, {,} changes its meaning depending on the context
[20:12:13] <nmz> might be hard to parse what a a=b,c is supposed to do
[20:13:21] <izabera> ah i knew you could write the literal byte yourself but i didn't know there was a standard variable
[20:13:23] <izabera> cool
[20:18:55] *** Quits: Helmholtz1 (Helmholtz@user/helmholtz) (Remote host closed the connection)
[20:20:13] *** Joins: Helmholtz1 (~Helmholtz@user/helmholtz)
[20:23:24] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[20:51:06] *** Quits: node1 (~node1@user/node1) (Read error: Connection reset by peer)
[20:51:27] *** Joins: node1 (~node1@user/node1)
[20:55:33] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[20:57:20] *** Joins: lgc (~lgc@user/lgc)
[20:58:05] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:fe7c:a1fa:94dc:c42a)
[20:59:39] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:fe7c:a1fa:94dc:c42a) (Client Quit)
[20:59:59] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:fe7c:a1fa:94dc:c42a)
[21:00:28] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[21:08:49] *** Quits: Helmholtz1 (~Helmholtz@user/helmholtz) (Ping timeout: 272 seconds)
[21:09:10] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[21:55:22] <nmz> print foo=a,b  <- what would this do? because foo would return a SUBSEP b, but then we are in a statement, and print would set OFS, so this would be confusing both to read and parse
[21:56:36] <nmz> or maybe not, you can (a,b) if you want to force a subsep b instead of the default which would be a OFS b
[21:57:06] <nmz> this might be a good idea
[21:59:10] *** Joins: Helmholtz1 (~Helmholtz@user/helmholtz)
[22:06:59] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:37:27] <earnestly> nmz: foo=a,b would do foo = a OFS b
[22:37:50] <earnestly> Hm
[22:38:10] <earnestly> Where , is concatenation I always assumed it would be OFS
[22:38:35] <earnestly> # echo a b | awk '$1, $2 == "a b"'
[22:38:36] <shbot> earnestly: a b
[22:38:50] <earnestly> # echo a b | awk -v OFS=: '$1, $2 == "a b"'
[22:38:51] <shbot> earnestly: a b
[22:38:59] <earnestly> Hm
[22:39:18] *** Joins: lgc (~lgc@user/lgc)
[22:39:18] <earnestly> # echo a b | awk -v FS=: '$1, $2 == "a b"'
[22:39:19] <shbot> earnestly: a b
[22:39:27] <earnestly> hm...
[22:39:33] <earnestly> I don't understand it
[22:40:12] *** Joins: Helmholtz2 (Helmholtz@user/helmholtz)
[22:42:56] *** Quits: Helmholtz1 (~Helmholtz@user/helmholtz) (Ping timeout: 265 seconds)
[22:48:47] <enzotib> I think it is fomr pattern $1 (which is true) to pattern $2 == "a b"
[22:48:50] <enzotib> from*
[22:53:08] <enzotib> maybe not
[22:57:26] *** Quits: Helmholtz2 (Helmholtz@user/helmholtz) (Ping timeout: 265 seconds)
[22:58:18] <enzotib> # { echo ':bar'; echo 'foo:bar'; echo 'foo:a b'; echo ':bar'; } | awk -F':' '$1, $2 == "a b"'
[22:58:19] <shbot> enzotib: foo:bar
[22:58:19] <shbot> enzotib: foo:a b
[23:39:03] *** Joins: kensanata (~user@user/kensanata)
