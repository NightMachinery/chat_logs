[00:31:49] *** Joins: lisp123 (~lisp123@143.238.164.103)
[00:36:12] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 240 seconds)
[01:20:54] *** Joins: greaser|q (greaser@antihype.space)
[01:21:59] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[01:21:59] *** Joins: greaser|q (greaser@user/greasemonkey)
[01:22:03] *** greaser|q is now known as GreaseMonkey
[01:29:48] *** Joins: makomo (~makomo@user/makomo)
[01:44:43] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[01:53:11] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.4)
[02:12:50] *** Joins: lisp123 (~lisp123@143.238.164.103)
[02:50:25] *** Joins: dra (~dra@2a04:4540:6414:a700:6838:c833:a209:64c4)
[02:57:24] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 240 seconds)
[03:01:46] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[03:19:10] *** Joins: lisp123 (~lisp123@143.238.164.103)
[03:26:11] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[03:48:11] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[03:49:17] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[03:50:35] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:00:18] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[04:01:10] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:09:59] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[04:10:37] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:29:38] *** Joins: lisp123 (~lisp123@143.238.164.103)
[04:44:31] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[04:45:31] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:58:03] *** Quits: dra (~dra@2a04:4540:6414:a700:6838:c833:a209:64c4) (Ping timeout: 252 seconds)
[04:58:31] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[04:59:31] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[05:01:47] *** Joins: Bike (~Bike@71.69.170.70)
[05:04:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[05:05:50] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[05:17:17] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[05:18:40] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[05:20:43] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[05:32:23] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[05:43:24] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[05:44:39] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[05:52:26] *** Joins: lisp123 (~lisp123@143.238.164.103)
[05:57:19] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 256 seconds)
[06:12:43] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[06:13:34] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[06:24:27] *** Joins: lisp123 (~lisp123@143.238.164.103)
[06:59:22] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[07:05:02] *** Joins: lisp123 (~lisp123@143.238.164.103)
[07:16:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[07:17:51] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[07:22:16] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[07:46:31] *** Joins: lisp123 (~lisp123@143.238.164.103)
[07:51:46] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 272 seconds)
[08:02:54] *** Joins: lisp123 (~lisp123@143.238.164.103)
[08:11:15] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[08:12:13] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[08:40:51] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[08:41:54] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[08:58:39] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[09:06:29] *** Joins: occ (~occ@user/occ)
[09:10:53] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[09:11:57] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[09:16:49] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[09:50:19] *** Joins: poorlynamed (~poorlynam@73.127.152.21)
[09:53:32] *** Quits: poorlynamed (~poorlynam@73.127.152.21) (Remote host closed the connection)
[09:58:37] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[09:59:48] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[10:09:24] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[10:10:26] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[10:39:26] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[10:52:56] *** Joins: lisp123 (~lisp123@143.238.164.103)
[11:16:37] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[11:18:00] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[11:40:12] *** Joins: shka (~herr@109.231.3.55)
[12:23:12] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[12:50:04] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 272 seconds)
[12:52:37] *** Joins: lisp123 (~lisp123@143.238.164.103)
[13:07:18] *** Joins: Harag (~user@105.243.9.173)
[13:09:07] <Harag> its my first time trying out parenscript and I am missing something basic (chain foo (bar x y) 0 baz) gives me chain(foo, bar(x, y), 0, baz); instead of foo.bar(x, y)[0].baz;
[13:10:34] <rotateq> I would say cause it doesn't know right now what this chain means to be.
[13:11:32] <Harag> huh?
[13:11:40] <rotateq> hah
[13:12:12] <Harag> this is what I am running on the repl (parenscript:ps (chain foo (bar x y) 0 baz))
[13:12:19] <rotateq> yes
[13:12:26] <Harag> so how can it not know what chain is its in the manual?
[13:12:43] <rotateq> the macro takes symbolic expressions and produces the desired JS form as best as it can
[13:13:39] <Harag> if I use . it says I should use chain instead so under what surcomestances will it know what chain is?
[13:14:11] <rotateq> when you give it CUTTER instead of CHAIN it produces similar output
[13:14:43] <rotateq> ah okay
[13:15:05] <Harag> rotateq: I understand that but my question is how do I get chain to work, do I need to set the js version to something specific?
[13:15:27] <Harag> chain is something defined in ps so it should work out of the box?
[13:15:34] <rotateq> okay I don't know
[13:15:46] <Harag> var does the same crapf
[13:16:30] <Harag> and defvar puts an if statement around the var a = "a" which is even weirder
[13:17:51] <rotateq> hm isn't that how DEFVAR works for us?
[13:18:12] <rotateq> just binds data to a symbol if it's undefined yet
[13:18:43] <rotateq> or better uninterned in the current package
[13:21:05] <Harag> ok
[13:21:19] <Harag> so then devar works but why does var not
[13:21:20] <rotateq> in contrast to DEFPARAMETER
[13:22:25] <Harag> (parenscript:ps (var a "aa")) gives me var(a, 'aa');
[13:22:56] <rotateq> hm
[13:23:22] <rotateq> (and you can use also the ps nickname for the package, so ps:ps)
[13:23:35] <Harag> I am using parenscript from quicklisp
[13:32:29] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[13:35:42] *** Joins: lisp123 (~lisp123@143.238.164.103)
[13:43:10] *** Joins: st_iron (uid370243@id-370243.uxbridge.irccloud.com)
[13:45:50] <Harag> rebuild sbcl to the latest version and still (parenscript:ps (var a "aa")) gives me var(a, 'aa');
[13:52:05] <Harag> (parenscript:ps (defparameter a "aa")) gives me the right stuff var a = 'aa';
[14:17:58] <Harag> Has anybody got the time and inclination to just test (parenscript:ps (chain foo (bar x y) 0 baz)) and (parenscript:ps (var a "aa")) for on their systems to see if you also dont get what the manual states?
[14:19:12] <Harag> if its a general problem then I can at least move on and stop banging my head against a wall.
[14:20:52] <pjb> (parenscript:ps (chain foo (bar x y) 0 baz)) #| --> "chain(foo, bar(x, y), 0, baz);" |# 
[14:20:52] <pjb> (parenscript:ps (var a "aa")) #| --> "var(a, 'aa');" |# 
[14:21:12] <Harag> thanx pjb
[14:21:18] <pjb> (parenscript:ps (ps:chain foo (bar x y) 0 baz)) #| --> "foo.bar(x, y)[0].baz;" |# 
[14:21:18] <pjb> (parenscript:ps (ps:var a "aa")) #| --> "var a = 'aa';" |# 
[14:21:34] <Harag> aaaaah
[14:22:53] <Harag> I knew it was something stupid I was doing
[14:25:19] <rotateq> oh nice :D
[14:28:25] <rotateq> pjb for the rescue :)
[14:53:18] <Harag> pjb: do you know how to stop ps from changing the case of a an attribute? It murdering innerHTML
[15:09:11] <Harag> yeeeaha, my dom can now generate js to inject or produce html to inject
[15:10:36] <Harag> (with-js () (:div :witdh 10 (:p :class "b" "Hello"))) vs (with-abt () (:div :witdh 10 (:p :class "b" "Hello")))
[15:19:27] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[15:19:42] *** Joins: lisp123 (~lisp123@143.238.164.103)
[15:36:03] *** Quits: rain3 (~rain3___@2a02:2f09:d10e:8f00:b6a6:e366:58c5:59f1) (Ping timeout: 252 seconds)
[15:55:17] *** Joins: shka (~herr@109.231.3.55)
[16:11:09] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[16:34:13] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:39:00] *** Joins: random-nick (~random-ni@87.116.167.125)
[17:08:51] *** Joins: Bike (~Bike@71.69.170.70)
[17:10:58] <ns12> Hello, is "Lisp" by Winston and Horn suitable as introduction to Common Lisp? Is it ANSI Common Lisp?
[17:12:35] <tyson2> I have an earlier edition, based on an earlier version of Common Lisp.  I recently bought Practical Common Lisp, I definitely prefer that.
[17:12:51] <tyson2> not that I have been able to find the time to do much work on it
[17:15:48] <ns12> I gave already read Practical Common Lisp.
[17:15:52] <ns12> s/gave/have
[17:16:23] <tyson2> I found Winston and Horn to be rather austere and academic, not to my taste
[17:16:51] <tyson2> still, the code in it is mostly correct I believe, unlike Land of Lisp
[17:17:32] <tyson2> there are some interesting hacks in Land of Lisp, but the code is hard to follow and seems to have problems.
[17:18:05] <rotateq> or you go ahead with ANSI Common Lisp or On Lisp by Paul Graham
[17:18:29] <tyson2> haven't looked those yet
[17:18:34] <tyson2> looked at
[17:20:44] <rotateq> or if one wants to learn more about CLOS then Object-Oriented Programming in Common Lisp by Sonya Keene
[17:23:07] <ns12> tyson2: "unlike Land of Lisp" - What is wrong with the code in that book?
[17:23:14] <rotateq> or the recipes book by Edi Weitz
[17:23:37] <ns12> rotateq: Thank you for the suggestions. I forgot to mention that I have also read "ANSI Common Lisp" by Paul Graham.
[17:24:10] <rotateq> ns12: no problem, I would say it's important not to force reading too advanced stuff yet
[17:24:21] <ns12> I plan to finish PAIP by Norvig this year. I was wondering if there are other books I should consider.
[17:24:38] <rotateq> oh right, also wonderful and timeless book
[17:25:08] <ns12> The Keene CLOS book is on my wishlist.
[17:25:35] <tyson2> ns12: some of the code I tried didn't work.  I later found discussions about it online confirming the problems.  The code is rather hard to interpret in my opinion
[17:26:04] <tyson2> the author seems to have a rather unorthodox coding style
[17:26:46] <tyson2> still there are some interesting ideas in it, referring in particular to svg generation (that I have looked at)
[17:26:51] <ns12> rotateq: I actually started learning Common Lisp using PAIP. However, it was too difficult so I read Practical Common Lisp and ANSI Common Lisp instead. After having some experience with writing some personal Common Lisp programs, I think I am ready to completely understand PAIP.
[17:27:34] <ns12> Given my current knowledge level, will I gain much by reading "Lisp" by Winston and Horn?
[17:29:08] <tyson2> ns12: not sure, but Patrick Winston has some interesting lectures online on AI
[17:29:28] <tyson2> some of them deal with lisp I believe
[17:29:40] <ns12> tyson2: Which one? The MIT OCW AI lectures?
[17:30:04] <tyson2> I think those are the ones
[17:30:16] <tyson2> haven't watched them
[17:32:19] <ns12> tyson2: It appears to be 100% Python https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/assignments/
[17:33:08] <tyson2> In that case, there may be some earlier ones by him using Lisp, but not sure
[17:37:15] *** Joins: rain3 (~rain3___@2a02:2f09:d10e:8f00:b6a6:e366:58c5:59f1)
[17:38:02] *** Quits: Harag (~user@105.243.9.173) (Remote host closed the connection)
[17:52:26] <tyson2> I wasn't able to find any lectures on Lisp by Winston
[18:12:41] <ns12> tyson2: There's "The Elements of Artificial Intelligence Using Common Lisp" by Tanimoto, which I have on my wishlist. It appears to be mostly about classic AI.
[18:26:27] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[18:28:10] *** Joins: aeth (~aeth@user/aeth)
[18:36:23] <Riviera> is it similar to Norvig's book?
[18:36:50] <Riviera> oh, i should have read the backlog i guess :)
[18:54:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[19:02:59] *** Joins: thrig (~thrig@207.108.197.156)
[19:14:37] <tyson2> ns12: I've made a note of that book and will have a look
[19:18:56] *** Joins: lisp123 (~lisp123@143.238.164.103)
[19:23:43] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 260 seconds)
[19:32:59] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:40:46] <ns12> tyson2: Here's a list of Common Lisp AI books https://www.cliki.net/AI
[20:31:58] *** Joins: beach (~user@2a01:cb19:150:3400:d583:57ae:dbe8:6fe9)
[20:35:30] *** Quits: beach (~user@2a01:cb19:150:3400:d583:57ae:dbe8:6fe9) (Remote host closed the connection)
[20:40:51] *** Joins: beach (~user@2a01:cb19:150:3400:73a8:5148:ab1a:d8f7)
[20:49:45] *** Quits: thrig (~thrig@207.108.197.156) (Remote host closed the connection)
[21:05:17] *** Joins: notzmv (~zmv@user/notzmv)
[21:21:48] *** Quits: occ (~occ@user/occ) (Ping timeout: 272 seconds)
[21:24:58] *** Joins: st_iron (uid370243@id-370243.uxbridge.irccloud.com)
[21:27:18] *** Joins: occ (~occ@user/occ)
[21:50:18] *** Quits: occ (~occ@user/occ) (Ping timeout: 272 seconds)
[21:55:39] *** Joins: occ (~occ@user/occ)
[22:00:26] *** Quits: occ (~occ@user/occ) (Ping timeout: 272 seconds)
[22:05:36] *** Joins: occ (~occ@user/occ)
[22:22:48] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[23:20:52] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[23:22:09] *** Joins: aeth (~aeth@user/aeth)
[23:22:33] *** Joins: dra (~dra@2a04:4540:6422:4f00:6838:c833:a209:64c4)
[23:36:29] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[23:52:59] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:57:00] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
