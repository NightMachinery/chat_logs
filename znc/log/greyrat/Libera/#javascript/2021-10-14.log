[00:00:48] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[00:01:13] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[00:01:25] *** Quits: dsrt^ (~dsrt@wsip-70-165-23-55.mc.at.cox.net) (Remote host closed the connection)
[00:04:11] *** Joins: nomic (~nomic@185.217.117.233)
[00:05:34] <codebam> how do I stop rendering a component?
[00:05:46] <codebam> do I use a "?" and a state variable?
[00:06:05] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[00:06:29] <ljharb> codebam: you just… don't render it?
[00:06:37] <ljharb> codebam: so yeah, a ternary with state works fine for that
[00:06:50] <codebam> okay, thank you
[00:09:44] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[00:11:47] <codebam> how would I do this with requestIdleCallback? https://pb.sbehan.ca/f8MR.txt
[00:12:11] <codebam> oh also I should remove history from that, but ignore that I guess
[00:12:31] <twainwek> i'm trying to get the width of an svg.g element and no matter what i try, the return width does not match the width that is displayed when i manually select it in the browser via dom inspector. right now i'm using elem.getBBox().width which returns '6' but the element inspector shows '43'.... pretty large difference
[00:12:52] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[00:15:14] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[00:15:46] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 265 seconds)
[00:16:36] <codebam> in the mdn example they provide a fallback (not a polyfill) but I can't seem to get it to work
[00:16:48] *** Joins: jazzy (~jaziz@user/jaziz)
[00:17:20] <codebam> says: Property 'requestIdleCallback' does not exist on type 'Window & typeof globalThis'
[00:19:03] *** Joins: pluri (~pluri@user/pluri)
[00:21:14] <codebam> https://pb.sbehan.ca/jrde.txt my code
[00:21:31] *** pulse_ is now known as pulse
[00:21:43] <codebam> trying to use the requestIdleCallback polyfill from mdn
[00:23:57] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[00:24:29] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 245 seconds)
[00:27:04] <codebam> I don't understand where it's supposed to be imported from
[00:32:18] <codebam> I used a library with hooks, but does this look right? https://pb.sbehan.ca/PstF.txt
[00:34:13] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 252 seconds)
[00:35:53] *** Joins: nomic2 (~nomic@185.217.117.233)
[00:37:12] <pavonia> What is a safe way to create Date objects when you only want to deal with year/month/day, independent of times and timezones. I need to make sure I not accidentally get day before or after due to some local timezone weirdness
[00:37:39] *** Joins: MickOfRivia (~Thunderbi@94.252.38.56)
[00:39:14] *** Quits: nomic (~nomic@185.217.117.233) (Ping timeout: 268 seconds)
[00:40:52] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 252 seconds)
[00:41:00] <sheetjs> Date.UTC
[00:42:40] *** Quits: nomic2 (~nomic@185.217.117.233) (Quit: Leaving)
[00:44:01] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:44:01] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:44:01] *** Joins: wroathe (~wroathe@user/wroathe)
[00:46:13] *** Joins: nomic (~nomic@185.217.117.233)
[00:47:49] <pavonia> Nice, that also returns a number instead of a Date, which is exactly what I need
[00:49:30] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[00:50:45] *** Joins: han-solo (~hanish@user/han-solo)
[00:52:53] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:56:42] *** Quits: MickOfRivia (~Thunderbi@94.252.38.56) (Read error: Connection reset by peer)
[00:57:36] <ljharb> codebam: you don't import it from anywhere. you run it in your application, and it installs the global
[00:57:44] *** Joins: MickOfRivia (~Thunderbi@94.252.38.56)
[00:58:21] <codebam> ljharb: I copied and ran it but it didn't work. says requestIdleCallback doesn't exist on type 'Window & typeof globalThis`
[00:58:26] <ljharb> codebam: so yes that looks right at first glance
[00:58:30] <ljharb> codebam: that's just TS being stupid
[00:58:31] <codebam> that library worked though
[00:58:38] <codebam> oh okay
[00:58:42] <ljharb> codebam: you have to tell TS somehow that that type is being added
[00:58:51] *** Joins: hd1 (~hd1@cpe-172-91-170-129.socal.res.rr.com)
[00:58:58] *** Quits: Simplar (~Simplar@188.163.92.48) (Quit: Going offline, see ya! (www.adiirc.com))
[00:59:04] <codebam> do I put the call to useIdleCallback inside a setTimeout?
[00:59:09] <codebam> this is what I have now
[00:59:20] <codebam> https://pb.sbehan.ca/KFBH.txt
[00:59:45] <hd1> on heroku deploy, for a rails app, I get "webpack is not defined" -- using yarn, I've precompiled assets, there's a webpack entry in yarn.lock, what gives?
[00:59:59] <pavonia> n> Date.UTC(2021, 1, 29) == Date.UTC(2021, 2, 1)
[01:00:00] <jellobot> (okay) true
[01:00:13] <pavonia> How do you test if a date is a valid date?
[01:04:26] <ljharb> codebam: you shouldn't have to
[01:04:50] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[01:08:25] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[01:11:50] *** Quits: kogepan (~kogepan@188-177-18-45-dynamic.dk.customer.tdc.net) (Ping timeout: 265 seconds)
[01:15:25] *** Quits: MickOfRivia (~Thunderbi@94.252.38.56) (Changing host)
[01:15:25] *** Joins: MickOfRivia (~Thunderbi@user/mickofrivia)
[01:17:00] <pavonia> I guess I could create a new Date based on the parsed one and compare getUTCDate etc. with the original values, but this is somewhat clumsy
[01:19:21] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[01:21:05] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:24:28] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[01:24:37] <pavonia> n> const isValid = (y, m, d) => { const utc = new Date(Date.UTC(y, m-1, d)); return utc.getUTCFullYear() === y && utc.getMonth() + 1 === m && utc.getDate() === d; }; [isValid(2020, 2, 29), isValid(2021, 2, 29)]
[01:24:37] <jellobot> (okay) [ true, false ]
[01:26:08] <ljharb> pavonia: `!isNaN(date.getTime())`
[01:26:17] <ljharb> pavonia: if it's not a NaN time value, it's valid
[01:28:06] <pavonia> n> (new Date(Date.UTC(2021, 1, 29))).getTime()
[01:28:07] <jellobot> (okay) 1614556800000
[01:28:10] <pavonia> Like this?
[01:28:43] <pavonia> n> (new Date(Date.UTC(2021, 129, 40))).getTime()
[01:28:44] <jellobot> (okay) 1951948800000
[01:28:51] <pavonia> Doesn't work :p
[01:29:22] <since_> Why do javascript people nowadays use so much const f = () => instead of function f() ?
[01:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[01:30:19] <ljharb> pavonia: what do you mean it doesn't work
[01:30:25] <ljharb> pavonia: those are valid dates
[01:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[01:30:45] <sheetjs> the shift is due to the timezone
[01:30:47] <ljharb> since_: partially because function declarations hoist, and hoisting is bad; but mostly because people like shiny new syntax
[01:31:23] <pavonia> ljharb: No, they are not. There's no date 2021-130-40
[01:31:25] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[01:31:50] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[01:32:32] <sheetjs> don't tell IE that
[01:33:09] <sheetjs> n> new Date("28-05-2008")
[01:33:10] <jellobot> (okay) Invalid Date
[01:33:24] <sheetjs> IE interprets that as April 5 2010
[01:33:35] <sheetjs> n> new Date(2008, 28-1,5)
[01:33:36] <jellobot> (okay) 2010-04-05T00:00:00.000Z
[01:33:37] *** MickOfRivia is now known as mick
[01:35:44] <ljharb> pavonia: if new Date accepts it, it's valid
[01:35:57] <ljharb> pavonia: if you only want the final result as input, then yes, you have to manually validate it
[01:38:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[01:38:10] <pavonia> We seem to have different notions of valid then
[01:38:26] <ljharb> indeed
[01:38:35] <ljharb> if yours differs from the language, then you need to write your own validation function, ofc
[01:39:41] *** Parts: hd1 (~hd1@cpe-172-91-170-129.socal.res.rr.com) ()
[01:41:01] <Covrus> ljharb: what does hoisting mean?
[01:41:58] <ljharb> !hoisting @ Covrus
[01:41:58] <jellobot> Covrus, http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet https://snek.dev/blag/2019-07_js_hoisting
[01:45:10] <Covrus> so the const functionName = async (arg) => { something with arg } is preferred? Does that affect classes too?
[01:45:37] *** Quits: pycode (~pycode@2001:b07:5d28:551:c857:78db:bc04:4a38) (Ping timeout: 268 seconds)
[01:46:08] <ljharb> Covrus: no, it's not preferred
[01:46:26] *** Joins: jmft2 (~jmft2@213.31.248.255)
[01:46:47] <Covrus> but if hoisting is bad, what's the alternative?
[01:47:22] <pavonia> No hoisting
[01:47:32] <ljharb> Covrus: `const x = function x() {}`
[01:47:49] <ljharb> Covrus: iow, a function expression
[01:48:02] <Covrus> ah, okay, but why even name it in that context?
[01:48:06] <ljharb> Covrus: arrows are meant for inline callbacks
[01:48:16] *** Quits: trog (~trog@user/trog) (Quit: WeeChat 3.0.1)
[01:48:25] <ljharb> Covrus: because explicit function names aid debuggability, greppability, and also allow you to reliably reference the function from within
[01:49:22] *** Joins: wroathe (~wroathe@user/wroathe)
[01:53:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[01:55:20] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 265 seconds)
[01:55:26] *** Quits: aku (~aku@eagleflow.fi) (Remote host closed the connection)
[02:01:37] *** Quits: tex (~super@user/dix) (Ping timeout: 265 seconds)
[02:02:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:03:24] *** Joins: parv (~quass@user/parv)
[02:03:40] *** Quits: paule32 (~paule32@user/paule32) (Quit: Leaving)
[02:04:00] *** Joins: paule32 (~paule32@user/paule32)
[02:04:17] *** Quits: paule32 (~paule32@user/paule32) (Client Quit)
[02:05:19] *** Joins: paule32 (~paule32@user/paule32)
[02:05:35] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[02:05:58] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (calcium.libera.chat (Nickname regained by services)))
[02:05:58] *** vinleod is now known as vdamewood
[02:06:17] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[02:10:03] *** Joins: snakey_hiss (~scott@101.100.131.30)
[02:18:52] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[02:20:31] *** Joins: trog (~trog@user/trog)
[02:20:34] *** Joins: tryless (~tryless@213.128.163.221)
[02:20:35] *** Quits: tryless (~tryless@213.128.163.221) (Changing host)
[02:20:35] *** Joins: tryless (~tryless@user/tryless)
[02:23:22] *** Joins: pluri_ (~pluri@user/pluri)
[02:23:51] *** Quits: simius (~simius@user/simius) (Ping timeout: 245 seconds)
[02:25:04] *** Joins: simius (~simius@user/simius)
[02:25:31] *** Quits: CiaoSen (~Jura@p200300c9571101002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[02:25:56] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 245 seconds)
[02:33:00] *** Quits: pizdets_ (~pizdets@183.182.110.80) (Ping timeout: 250 seconds)
[02:34:09] *** Joins: pizdets (~pizdets@183.182.111.108)
[02:39:48] *** Quits: tryless (~tryless@user/tryless) (Ping timeout: 265 seconds)
[02:42:56] *** Joins: ferdna (~ferdna@user/ferdna)
[02:48:35] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[02:55:17] <pavonia> n> const date = new Date(0); [date.toString(), date.valueOf(), "" + date]
[02:55:18] <jellobot> (okay) [ 'Thu Jan 01 1970 00:00:00 GMT+0000 (Coordinated Universal Time)', 0, 'Thu Jan 01 1970 00:00:00 GMT+0000 (Coordinated Universal Time)' ]
[02:55:26] <pavonia> n> const obj = {}; obj.toString = () => "string"; obj.valueOf = () => 123; [obj.toString(), obj.valueOf(), "" + obj]
[02:55:27] <jellobot> (okay) [ 'string', 123, '123' ]
[02:56:05] <pavonia> Is there a way to configure obj in such a way that is behaves in the same way as Date and prefers toString in the "" + obj context?
[02:57:23] *** Joins: Lazenca (~lazenca@user/lazenca)
[03:01:14] *** Joins: tdaeayusr^ (~tdaeayusr@70.166.66.234)
[03:03:16] <cth> my wife still tries things like these: https://i.imgur.com/Dyh5U9D.png but at least she uses console to check her results and she's able to rewrite it all through a regex.test so cute :)
[03:03:18] <sheetjs> n> const obj = {}; obj[Symbol.toPrimitive] = () => "string"; obj.valueOf = () => 123; [obj.toString(), obj.valueOf(), "" + obj]
[03:03:19] <jellobot> (okay) [ '[object Object]', 123, 'string' ]
[03:03:29] <sheetjs> pavonia: ^^
[03:06:27] <pavonia> Would you obj[Symbol.toPrimitive] define like toString?
[03:07:11] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:07:42] <pavonia> const obj = {}; obj[Symbol.toPrimitive] = () => "string"; obj.valueOf = () => 123; [obj.toString(), obj.valueOf(), "" + obj, 1 + obj]
[03:07:47] <pavonia> n> const obj = {}; obj[Symbol.toPrimitive] = () => "string"; obj.valueOf = () => 123; [obj.toString(), obj.valueOf(), "" + obj, 1 + obj]
[03:07:48] <jellobot> (okay) [ '[object Object]', 123, 'string', '1string' ]
[03:08:26] *** Quits: mick (~Thunderbi@user/mickofrivia) (Quit: mick)
[03:08:33] *** Joins: N4buc0 (~N4buc0@2804:14c:8782:814c:415f:c9f:4a72:7c2e)
[03:08:43] *** Joins: MickOfRivia (~Thunderbi@user/mickofrivia)
[03:10:43] <pavonia> Ah no, it gets a string as input
[03:15:10] *** Quits: federico (~federico@176.206.87.127) (Quit: WeeChat 3.0)
[03:15:48] <pavonia> Is this something that couldn't be done in ES5 (as there was not Symbol)?
[03:17:00] <sheetjs> yeah this wasn't possible in ES5 since it defaults to the valueOf when both are present
[03:17:44] <pavonia> Interesting
[03:18:05] *** Quits: MickOfRivia (~Thunderbi@user/mickofrivia) (Quit: MickOfRivia)
[03:18:07] *** Quits: pmercado (~pmercado@186.107.62.213) (Ping timeout: 252 seconds)
[03:19:06] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 265 seconds)
[03:19:37] *** Joins: MickOfRivia (~Thunderbi@user/mickofrivia)
[03:21:49] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Ping timeout: 250 seconds)
[03:26:55] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[03:29:52] *** Quits: MickOfRivia (~Thunderbi@user/mickofrivia) (Quit: MickOfRivia)
[03:31:46] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[03:31:53] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[03:32:00] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 265 seconds)
[03:34:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[03:35:05] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[03:35:15] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[03:35:19] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:39:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:39:30] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:39:30] *** Joins: wroathe (~wroathe@user/wroathe)
[03:39:45] *** Quits: tdaeayusr^ (~tdaeayusr@70.166.66.234) (Ping timeout: 265 seconds)
[03:41:53] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[03:48:12] *** Joins: jazzy (~jaziz@user/jaziz)
[03:49:24] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 265 seconds)
[03:51:07] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[03:53:02] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:57:13] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[04:01:35] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[04:03:32] *** Joins: nomic (~nomic@185.217.117.233)
[04:05:41] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[04:06:13] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[04:08:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Read error: Connection reset by peer)
[04:10:25] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[04:12:36] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[04:15:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[04:15:33] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:18:51] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:26:01] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:d5a1:1b6b:17db:14b0) (Ping timeout: 256 seconds)
[04:27:03] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:27:03] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:27:03] *** Joins: wroathe (~wroathe@user/wroathe)
[04:27:05] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:bd9f:fed7:305d:80d9) (Read error: Connection reset by peer)
[04:27:41] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[04:31:52] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[04:32:25] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[04:37:07] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:38:42] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:38:43] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:38:43] *** Joins: wroathe (~wroathe@user/wroathe)
[04:47:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:50:01] *** Joins: mihael (~mihael@2001:4454:283:5d00:d41a:169d:9b3d:2f12)
[04:51:51] *** Parts: twainwek (~user@144.211.196.35.bc.googleusercontent.com) (ERC (IRC client for Emacs 25.3.1))
[04:57:19] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:05:24] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:06:47] *** Quits: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[05:14:51] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[05:15:19] *** Parts: theskillwithin_ (~theskillw@li1200-69.members.linode.com) ()
[05:16:07] *** Joins: theskillwithin (~theskillw@user/theskillwithin)
[05:28:18] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[05:34:41] *** Quits: hassoon (hassoon@user/hassoon) (Ping timeout: 245 seconds)
[05:35:33] *** Joins: hassoon (hassoon@grape.ircnow.org)
[05:37:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[05:37:11] *** Joins: tryless (~tryless@213.128.163.221)
[05:37:12] *** Quits: tryless (~tryless@213.128.163.221) (Changing host)
[05:37:12] *** Joins: tryless (~tryless@user/tryless)
[05:44:16] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[05:44:55] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 265 seconds)
[05:47:04] *** Joins: matsaman (~matsaman@user/matsaman)
[05:48:58] *** Joins: wroathe (~wroathe@user/wroathe)
[05:53:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[05:54:32] *** Joins: keypusher (keypusher@user/keypusher)
[05:56:31] *** Quits: tryless (~tryless@user/tryless) (Ping timeout: 265 seconds)
[05:58:52] *** Joins: paule32_ (~paule32@user/paule32)
[06:00:20] *** Joins: paule32__ (~paule32@user/paule32)
[06:02:01] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 252 seconds)
[06:03:46] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 265 seconds)
[06:04:16] *** Joins: paule32 (~paule32@user/paule32)
[06:05:36] *** Joins: aswr (~hlpme@user/hlpme)
[06:06:40] *** Quits: paule32__ (~paule32@user/paule32) (Ping timeout: 265 seconds)
[06:17:58] *** Quits: hassoon (hassoon@grape.ircnow.org) (Ping timeout: 252 seconds)
[06:19:29] *** Joins: hassoon (hassoon@grape.ircnow.org)
[06:21:42] *** Joins: CoolerX (~CoolerX@user/coolerx)
[06:25:32] <aswr> in vue.js, what's the pros and cons of using wrappers vs directly using the library? One example is using chart.js vs using vue-chart.js
[06:27:24] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:30:21] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (Quit: leaving)
[06:32:53] *** prime- is now known as prime
[06:36:20] *** Quits: aswr (~hlpme@user/hlpme) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[06:38:51] *** Quits: asd (~noname@user/asd) (Ping timeout: 245 seconds)
[06:39:14] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Bed is calling.)
[06:40:43] *** Joins: asd (~noname@user/asd)
[06:41:23] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[06:46:13] *** Joins: Sqaure (~a@178.62.91.8)
[06:49:19] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 252 seconds)
[06:49:19] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[06:51:22] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[06:54:49] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:d5a1:1b6b:17db:14b0)
[06:55:48] <matsaman> "vue-chartjs lets you use Chart.js without much hassle inside Vue"
[06:57:56] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[07:00:49] *** Quits: trog (~trog@user/trog) (Read error: Connection reset by peer)
[07:01:46] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 245 seconds)
[07:03:50] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[07:06:59] *** Joins: pmercado (~pmercado@186.107.62.14)
[07:07:03] *** Joins: trog (~trog@user/trog)
[07:14:30] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[07:15:34] *** Joins: jess (~jess@libera/staff/jess)
[07:22:15] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:25:40] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[07:34:35] *** Quits: N4buc0 (~N4buc0@2804:14c:8782:814c:415f:c9f:4a72:7c2e) (Ping timeout: 260 seconds)
[07:37:46] *** Quits: trog (~trog@user/trog) (Ping timeout: 252 seconds)
[07:39:53] *** Joins: trog (~trog@user/trog)
[07:40:29] *** Joins: N4buc0 (~N4buc0@2804:14c:8782:814c:4296:f592:bab8:59b5)
[07:41:11] *** Quits: trog (~trog@user/trog) (Remote host closed the connection)
[07:50:00] *** Joins: flameboi1 (dgw@user/flameboi)
[07:52:05] *** Quits: flameboi (dgw@user/flameboi) (Ping timeout: 260 seconds)
[07:52:05] *** flameboi1 is now known as flameboi
[07:53:36] <celphi> .
[07:56:28] <Rockwood> celphi, matsaman o/
[07:57:02] <celphi> hi. just poking in - but heading out
[07:57:21] <celphi> \o Rockwood
[07:58:19] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[07:58:23] <Rockwood> hows your PHP learning?
[08:04:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[08:04:21] *** Quits: snakey_hiss (~scott@101.100.131.30) (Quit: WeeChat 1.9.1)
[08:07:49] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[08:08:13] *** Joins: ckdCreations (~ckdCreati@147.55.133.139)
[08:10:11] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[08:12:43] *** Joins: nomic2 (~nomic@185.217.117.233)
[08:14:15] *** Quits: Sitedude (~Sitedude@cpe-98-24-54-100.carolina.res.rr.com) (Read error: Connection reset by peer)
[08:15:06] *** Quits: nomic (~nomic@185.217.117.233) (Ping timeout: 245 seconds)
[08:21:10] *** Joins: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com)
[08:23:48] *** Joins: spronkey (~spronkey@2406:e000:6897:7a01:6427:9e7f:c351:60b9)
[08:28:03] *** Quits: KDev (~KDev@cpe-98-10-64-75.rochester.res.rr.com) (Read error: Connection reset by peer)
[08:31:23] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:34:41] *** Quits: N4buc0 (~N4buc0@2804:14c:8782:814c:4296:f592:bab8:59b5) (Ping timeout: 245 seconds)
[08:35:06] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 245 seconds)
[08:39:24] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 265 seconds)
[08:45:32] *** nomic2 is now known as nomic
[08:48:40] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[08:49:41] *** Joins: salad (~cucumber@86.121.64.41)
[08:50:58] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-dd69-85b9-0d40-acaf.res6.spectrum.com)
[08:52:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[08:54:07] *** Joins: tryless (~tryless@user/tryless)
[08:54:16] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[08:54:25] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:9c18:e098:f9f1:913c:33b5) (Ping timeout: 268 seconds)
[08:55:21] *** Quits: spronkey (~spronkey@2406:e000:6897:7a01:6427:9e7f:c351:60b9) (Quit: you are feeeling very sleeeeeepyy......)
[08:56:07] *** Joins: spronkey (~spronkey@2406:e000:6897:7a01:6427:9e7f:c351:60b9)
[08:56:27] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[08:57:33] *** Joins: incognito (~relativit@user/incognito)
[09:01:09] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[09:01:15] *** Joins: tex (~super@user/dix)
[09:03:46] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[09:04:07] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[09:08:33] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[09:08:36] *** Joins: ryzendar (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[09:09:38] *** Quits: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com) (Remote host closed the connection)
[09:09:53] *** Joins: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com)
[09:13:25] *** Quits: tryless (~tryless@user/tryless) (Ping timeout: 252 seconds)
[09:14:39] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[09:16:02] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[09:31:04] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[09:31:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[09:35:57] *** Quits: swn (~sweeney@user/swn) (Ping timeout: 265 seconds)
[09:36:59] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[09:38:36] *** Joins: swn (~sweeney@user/swn)
[09:38:51] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 265 seconds)
[09:42:54] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:45:17] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-dd69-85b9-0d40-acaf.res6.spectrum.com) (Ping timeout: 265 seconds)
[09:46:25] *** Quits: henry40408 (~henry4040@112-104-97-56.adsl.dynamic.seed.net.tw) (Ping timeout: 252 seconds)
[09:46:47] *** Joins: eXistenZ (~biskit@2a02:14c:2a4:8000:e948:e184:d34a:a4eb)
[09:47:36] *** Quits: pmercado (~pmercado@186.107.62.14) (Ping timeout: 245 seconds)
[09:47:54] *** Quits: eXistenZ (~biskit@2a02:14c:2a4:8000:e948:e184:d34a:a4eb) (Read error: Connection reset by peer)
[09:48:31] *** Joins: eXistenZ (~biskit@2a02:14c:2a4:8000:e948:e184:d34a:a4eb)
[09:49:40] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Remote host closed the connection)
[09:49:58] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[09:55:16] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Quit: Leaving.)
[09:56:34] *** Joins: nr0q_radio1 (~Thunderbi@about/gridtracker/nr0q-radio)
[09:57:25] *** Quits: nr0q_radio (~Thunderbi@about/gridtracker/nr0q-radio) (Ping timeout: 252 seconds)
[09:57:25] *** nr0q_radio1 is now known as nr0q_radio
[09:57:28] *** Joins: kogepan (~kogepan@188-177-18-45-dynamic.dk.customer.tdc.net)
[09:58:16] *** Quits: kogepan (~kogepan@188-177-18-45-dynamic.dk.customer.tdc.net) (Changing host)
[09:58:16] *** Joins: kogepan (~kogepan@user/kogepan)
[10:01:18] *** Joins: klys (~mdasoh@show.op8.us)
[10:01:24] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[10:01:53] *** Joins: henry40408 (~henry4040@112-105-246-84.adsl.dynamic.seed.net.tw)
[10:03:55] *** Quits: spronkey (~spronkey@2406:e000:6897:7a01:6427:9e7f:c351:60b9) (Quit: you are feeeling very sleeeeeepyy......)
[10:05:27] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[10:07:11] *** Quits: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com) (Ping timeout: 245 seconds)
[10:11:25] *** Joins: queue- (~nerd@rektnet.com)
[10:13:55] *** Joins: Duikb00t (~wardkenne@d54c71612.static.telenet.be)
[10:14:19] *** Joins: queue[m] (~queue-@2001:470:69fc:105::1:1892)
[10:17:59] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[10:18:55] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[10:20:11] *** Quits: mihael (~mihael@2001:4454:283:5d00:d41a:169d:9b3d:2f12) (Ping timeout: 256 seconds)
[10:20:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Ping timeout: 265 seconds)
[10:23:58] *** Joins: EgonX (~EgonX@2001:558:6022:6d:88b9:23b2:d670:9ba9)
[10:24:28] *** Joins: pycode (~pycode@2001:b07:5d28:551:263b:5bb0:1e16:9c7a)
[10:25:16] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:d5a1:1b6b:17db:14b0) (Quit: Client closed)
[10:27:24] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:32:11] *** Quits: EgonX (~EgonX@2001:558:6022:6d:88b9:23b2:d670:9ba9) (Ping timeout: 245 seconds)
[10:35:13] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:40:52] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 252 seconds)
[10:41:21] *** Quits: asd (~noname@user/asd) (Ping timeout: 245 seconds)
[10:41:52] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[10:42:14] *** Joins: asd (~noname@user/asd)
[10:42:24] *** Joins: D4mned (~Dmnd@212.101.251.53)
[10:46:49] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[10:50:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[10:50:49] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[10:50:53] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:50:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[10:51:59] *** Quits: audiocat (~audio@2603-8081-1800-1546-9f5a-e373-8203-155a.res6.spectrum.com) (Ping timeout: 268 seconds)
[10:54:37] *** Quits: dayday (uid520582@id-520582.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:57:14] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:00:16] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:00:52] *** Quits: D4mned (~Dmnd@212.101.251.53) (Read error: Connection reset by peer)
[11:02:18] *** Joins: D4mned (~Dmnd@212.101.253.45)
[11:05:43] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[11:08:24] *** Joins: stenno (~stenno@user/stenno)
[11:10:03] *** Joins: sizeof_void34 (~Thunderbi@109.252.124.86)
[11:18:02] *** Joins: Crash1hd (~Crash1hd@64.56.153.179)
[11:19:19] <Crash1hd> anyone able to explain what is going on here data.filter((channel: any) => !!channel.oVal === converted) or better yet how to also allow for channel.oVal to equal 0 and still do whats needed here?
[11:19:49] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Client Quit)
[11:20:09] *** Joins: Crash1hd (~Crash1hd@64.56.153.179)
[11:20:52] <stenno> n> !!0 === false
[11:20:53] <jellobot> (okay) true
[11:21:17] <Crash1hd> what does the !! do?
[11:21:32] <stenno> explicitely cast to Boolean
[11:21:49] <stenno> its two unary !
[11:21:49] <since_> ugh.
[11:22:31] <Crash1hd> ok so because I am explicitly casting channel.oVal which is 0 to boolean then its automatically setting it to false and thus my issue.
[11:22:37] <stenno> yyep
[11:22:45] <Crash1hd> how can I still do the above but accept 0 as a valid response
[11:23:07] <stenno> what are other falsy values of channel.oVal?
[11:23:10] <stenno> undefined ? null?
[11:23:14] <Crash1hd> yes
[11:24:15] <stenno> (channel.oVal ?? true) === converted
[11:24:30] <stenno> hmm no
[11:24:35] <stenno> sorry i just woke up lmao
[11:24:41] <Crash1hd> :) no worries
[11:24:41] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[11:25:04] <Crash1hd> (channel.oVal !== undefined) === converted?
[11:25:08] <Crash1hd> maybe?
[11:27:20] <stenno> yeah that would work
[11:27:23] <stenno> but also for null
[11:27:30] <Crash1hd> yeah
[11:27:31] <Crash1hd> (channel.oVal !== undefined || channel.oVal !== null) === converted
[11:27:41] <stenno> i was thinking how you could use ?? here
[11:27:43] <Crash1hd> stenno, thank you :)
[11:27:59] <Crash1hd> ?? would set a default though not sure i want a default.
[11:28:12] *** Quits: D4mned (~Dmnd@212.101.253.45) (Read error: Connection reset by peer)
[11:28:13] *** Joins: D3mned (~Dmnd@212.101.253.45)
[11:30:24] *** Quits: salad (~cucumber@86.121.64.41) (Read error: Connection reset by peer)
[11:30:41] *** Joins: salad (~cucumber@86.121.64.41)
[11:32:15] *** Joins: dimi1947 (~dimi1947@2a02:1388:90:a87b:cd84:f35d:4af9:4c44)
[11:33:34] *** Quits: sizeof_void34 (~Thunderbi@109.252.124.86) (Quit: sizeof_void34)
[11:35:31] *** Joins: CoolerX (~CoolerX@user/coolerx)
[11:38:48] *** Joins: hlpme (~hlpme@user/hlpme)
[11:38:52] <hlpme> Am I right if vue code uses SFC (single file component), it cannot load js library through CDN?
[11:38:58] *** hlpme is now known as wwasd
[11:39:13] <dimi1947> is this valid callback syntax? https://jsfiddle.net/fiddlehunt/3nesj14t/8/
[11:39:48] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:40:02] <Decker> is not a callack
[11:40:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:42:01] <dimi1947> hmmmm....
[11:42:09] <Decker> a callback just uses the address of the function (the name of the function or variable assigned to the function) not calling that function
[11:43:28] <dimi1947> what kind of pattern this is...where one arg of the function is calling the outer functiion whiis is the same function(in this case create element)
[11:43:39] <Decker> ANY functino can be a callback, it's really just the usage of it whether its address is passed that cn later be called, or calling it directly which makes it not a callback
[11:43:59] <Decker> forwarding arguments is not a callback
[11:45:10] <dimi1947> ok the example is not a callback example...you said "forwarding arguments"...can you elaborate a little?
[11:45:41] <Decker> just passing forward whatever is passed without nesseciarly using the arguments itself
[11:46:37] <gitesh> Does Javascript Prototypes means classes in python?
[11:46:58] <Decker> roughly
[11:47:12] <Decker> JS has clsses now...
[11:47:18] <Decker> don't really have to mess with prototypes
[11:47:43] <dimi1947> I still try to understand what is the usage of it
[11:48:04] <Decker> 'it'?
[11:49:26] <dimi1947> when one argument function is a function call...
[11:50:53] <Decker> a function call is just a value
[11:51:02] <dimi1947> ok...
[11:51:23] <Decker> like "123" or "abc" ... whatever the return value was.. is the value of a function call
[11:51:38] <dimi1947> so the argument that is this function is what the function returned..correct?
[11:51:46] <Decker> while  passing a function element.addEventListener("click", f)  function f() {/* called on click*/}
[11:51:49] <parv> Avoid creating of temporary variables
[11:51:51] <Decker> that's passing the function
[11:52:00] <Decker> not calling the function to pass the value of the result
[11:52:35] * parv can't write no more ...
[11:52:58] <dimi1947> that is a callback example...correct?
[11:53:12] <Decker> ya
[11:53:32] <Decker> but notice what is passed is 'f' not 'f(...'
[11:53:54] <dimi1947> yes...and this is the crucial point i want to understand
[11:54:15] <dimi1947> what is the diff if f is passed between f()
[11:54:47] <Decker> in C... the name of a functino is it's address... that's really the same behavior JS is doing; (though techcnially there is no 'function pointer' there is as a thing that is 'function' I guess for a typeof)
[11:55:06] <Decker> typeof f === "function"  typeof f() === whhatever F returned
[11:55:35] <dimi1947> now I am starting to get it...
[11:55:36] <stenno> f is the function, f() is the result of calling the function
[11:56:53] <dimi1947> so when f is passed(callback) the function just gets called..we do not get any return values back...am i correct?
[11:57:27] *** Joins: asanto (~asanto@static-pool-105-109.flagman.zp.ua)
[11:57:43] <dimi1947> but when f() is used instead we get the return value
[11:57:46] <stenno> if you do bla(f()) then the return value of f gets passed to bla
[11:58:18] <stenno> if you do bla(f) then the function f gets passed, and bla will probably at some point call that function f
[11:59:17] <parv> dimi1947, Depends on the thing getting the callback function. That could or could not return the value of the callback-function
[11:59:35] <Decker> which could of course be another function
[11:59:41] <stenno> for example going back to event bindings, if you have el.addEventListener('click', (e) => ...)
[11:59:49] <stenno> here the second param is a callback function
[12:00:04] <pycode> hello
[12:00:10] <Decker> the whole expression (e)=>... in that is a 'function' value and isn't called until the functino it's passed to calls it
[12:00:11] <gitesh> dynamically means what?
[12:00:13] <stenno> so this function will be called at some point when 'click' is triggered, and the event object 'e' is passed
[12:00:58] <stenno> if you'd _call_ the callback function here, you'd never had a way to handle the event object 'e' by yourself
[12:01:18] <Decker> (well build, handling is still the same )
[12:01:39] <Decker> new MouseEvent()... no? :)
[12:02:48] *** Parts: wwasd (~hlpme@user/hlpme) (Once you know what it is you want to be true, instinct is a very useful device for enabling you to know that it is)
[12:03:49] <dimi1947> when bla(f)..which meand the function is passed...and if inside bla f is called...does that mean that the return value of f will be available inside bla
[12:04:03] <Decker> yes
[12:04:11] <Decker> (often)
[12:04:34] <dimi1947> having said that....
[12:05:38] <dimi1947> the return value is available in both cases-either way bla(f) OR bla(f())...then what is the difference after all
[12:06:13] <Decker> because bla() is probably doing something that will either optionally invoke it, or knows how to generate the parameters to pass to it
[12:06:20] <stenno> how do you pass something to the function if you call f() while passing?
[12:06:23] <stenno> its not possible
[12:06:28] <Decker> where the caller of blah(f(...)) wouldn't know what paramters to pass nessecarily
[12:07:14] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Ping timeout: 265 seconds)
[12:08:25] <dimi1947> I was preparing to say that in the case of bla(f) the return value is made available(after calling it insdie bla)only after some code execution...CALLBACK logic in other words
[12:09:25] <Decker> callback is a terrible name :)  blame windows
[12:10:02] <dimi1947> is my statement correct?
[12:10:10] <Decker> windows uses callbacks for things like enumSettins( f );  where the EnumSettings functino will call back to the function f with the results
[12:10:54] <Decker> and then the return from F is rarely used
[12:11:04] *** Joins: tryless (~tryless@user/tryless)
[12:11:28] <Decker> but - you can pass callbacks to like [1,2,3].find( (n)=>n===2 )  ... where that last part is a callback find calls with each result and uses the result to result
[12:11:58] <Decker> function f(n){return n===2} [1,2,3].find(f)
[12:13:43] *** Joins: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:15:18] <dimi1947> but I think I get it...bla(f) is a callback ...crystal clear and bla(f())...gets the return value of f() as an arg
[12:16:22] <Decker> sort of - I think you syntax is a little wrong...
[12:16:37] <gitesh> Is this code right -----> https://bpa.st/YFGA
[12:16:42] <Decker> bla(f) might demonstrate a callback, but it's just a function call, it's not itself a callback
[12:16:47] <gitesh> it's is not giving me right answer.
[12:17:05] <Decker> what's the 'right' answer?
[12:17:15] <Decker> this is probably 'window'
[12:17:19] <Decker> 'this'
[12:17:43] <Decker> evt.target is proably what you want
[12:17:49] <gitesh> Hello, I am Button 1 / Button 2 is the right answer
[12:17:55] <Decker> which hello=function(evt){ ...}
[12:18:06] <Decker> and you woulnd't call the function...
[12:18:18] <Decker> onclcik="hello()' calls hello and uses the return value
[12:18:45] <Decker> so basically on load you shold get two things, and then click does nothing (?)
[12:18:57] <gitesh> Decker: but I'm doint onclick="hello(this)"
[12:19:02] <gitesh> *doing
[12:19:11] <Decker> you're still calling it with '( )'
[12:19:22] <Decker> with 0 or more paramters it's still a call
[12:19:47] <Decker> onclick=hello
[12:19:49] <gitesh> I am calling it cause i want to call it to run when the button is clicked
[12:19:58] <OhTheCode> n> Boolean(5)
[12:19:58] <jellobot> (okay) true
[12:20:08] <Decker> then you pass the function reference - we've just been talking about the the last long while actually :)
[12:20:13] <OhTheCode> n> Boolean(-1)
[12:20:14] <jellobot> (okay) true
[12:20:18] <Decker> you pass the function, not the result of the function
[12:20:24] <OhTheCode> n> Boolean(0)
[12:20:25] <jellobot> (okay) false
[12:20:28] <Decker> OhTheCode anthing not 0 is true
[12:20:39] *** Quits: dimi1947 (~dimi1947@2a02:1388:90:a87b:cd84:f35d:4af9:4c44) (Quit: Leaving)
[12:20:48] <OhTheCode> n> !!5
[12:20:49] <jellobot> (okay) true
[12:21:00] <OhTheCode> n> !!null
[12:21:01] <jellobot> (okay) false
[12:21:13] <OhTheCode> n> !!-1
[12:21:14] <jellobot> (okay) true
[12:21:18] <Decker> null is just a 0 with a fancy type
[12:21:29] <gitesh> Decker: If i passed the function , not the call, it doesn't work mate
[12:21:38] <OhTheCode> is there any difference between Boolean(x) and !!x?
[12:21:38] *** Joins: dimi1947 (~dimi1947@2a02:1388:90:a87b:cd84:f35d:4af9:4c44)
[12:21:53] <gitesh> Decker: attributes take javascript code to run
[12:22:19] <Decker> gitesh I see; no wonder I continued to avoid that method
[12:22:32] <gitesh> I want to access this
[12:22:36] <gitesh> `this`
[12:22:42] <Decker> even so - 'this' isn't set - you get a 'event' object with .target that is what you seek
[12:23:00] <Decker> function hello(evt) { "I am:"+evt.target.innerText }
[12:23:06] <Decker> (sorta)
[12:23:25] <gitesh> can't I call evt this
[12:23:27] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:23:40] <Decker> you could do 'this=evt'
[12:23:54] <Decker> but this != evt unless you do something rude like that
[12:24:09] <Decker> and this != evt.target...
[12:24:18] <Decker> this is probably the global window/this object
[12:26:12] *** Quits: D3mned (~Dmnd@212.101.253.45) (Quit: Leaving)
[12:30:19] *** Quits: tryless (~tryless@user/tryless) (Ping timeout: 252 seconds)
[12:31:27] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Quit: Leaving)
[12:32:22] <gitesh> Decker: this works --> https://bpa.st/O5FQ
[12:32:34] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[12:33:44] <Decker> ya but that's not called with eval(onclick)
[12:33:51] <Decker> which doesn't get the right 'this'
[12:34:01] <Decker> it still gets the same evt object and evt.target is still the same too
[12:34:51] <Decker> haha ya no cause the other one you're calling with no param too and can't make that param
[12:34:58] <Decker> that's annoying - how did anything work :)
[12:35:01] <stenno> OhTheCode: don't think so, no
[12:35:02] *** Joins: CoolerX (~CoolerX@user/coolerx)
[12:35:05] <Decker> oh - spaghetti
[12:35:23] <stenno> OhTheCode: cool thing about Boolean is that you can pass it as, say, .filter callback
[12:35:38] <stenno> n> [true, false, 0, null, '', 23].filter(Boolean)
[12:35:39] <jellobot> (okay) [ true, 23 ]
[12:36:20] *** Joins: mat001 (~mat001@213.143.69.121)
[12:36:23] <OhTheCode> oh ok, that's cool
[12:39:58] <stenno> this is the same as (x) => !!x
[12:40:19] <stenno> same with Number('3') and +'3'
[12:40:29] <stenno> and String(3) and (''+3)
[12:40:53] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 264 seconds)
[12:41:54] <stenno> guess the difference is that you can use `new` with those functions (but you shouldn't)
[12:42:10] *** Joins: [R] (~rs@genoce.org)
[12:42:32] <stenno> thanks to autoboxing, you will never need calling those functions as constructors ever
[12:43:13] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:43:16] *** Joins: amcsi (~amcsi@4F7A7C97.catv.pool.telekom.hu)
[12:45:55] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[12:46:11] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[12:46:23] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[12:49:05] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Client Quit)
[12:54:45] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[12:59:03] *** Joins: voltage_ (voltage@user/voltage)
[13:04:28] *** Joins: mei6 (~mei@user/mei)
[13:14:25] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[13:16:44] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[13:19:09] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:19:24] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:19:51] *** Joins: Intelo (~Intelo@88.244.94.240)
[13:19:59] <Intelo> Hi
[13:20:18] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[13:21:02] <Intelo> I have some line limit on functions. React components have clickHandlers and some other kind of functions. I have to put that inside the main component function. So that increases the limit of that component a lot. Can I put the click hanlders etc outside the react component? or any other solution?
[13:21:51] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[13:22:53] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[13:23:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 265 seconds)
[13:25:12] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[13:25:30] *** Joins: voltage_ (voltage@user/voltage)
[13:25:56] <Maxdamantus> Intelo: you can basically always move some code out into a separate function, including a function that returns a function.
[13:26:30] <Maxdamantus> Intelo: though it's not clear that that would be better than just relaxing the line limit restriction.
[13:27:29] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Remote host closed the connection)
[13:27:32] <Maxdamantus> const onClick = ev => { doSomething(x, y); this.doSomethingElse(ev); };
[13:27:40] <Intelo> Maxdamantus but how will I use useState, setLoading,  params and other states if those handler functions are outside the main component function?
[13:27:48] <Maxdamantus> const onClick = makeOnClick(this, x, y);
[13:28:16] <Maxdamantus> function makeOnClick(o, x, y){ return ev => { doSomething(x, y); o.doSomethingElse(ev); }; }
[13:28:49] <Maxdamantus> Intelo: you can pass those in, though again, you might want to see if you can just remove the line limit restriction, if it doesn't make sense.
[13:29:12] <Intelo> one sec
[13:29:18] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:29:20] <pycode> does anyone use chart.js ?
[13:29:38] <pycode> i wonder how can i get the index of the tooltip using the "external" attribute of tooltip plugin
[13:29:42] <pycode> i receive the "context"
[13:29:47] <pycode> but i do not understand how to read the index
[13:30:25] <Maxdamantus> imo those limits are not useful, since if the limit is very small, it's going to trigger on false positives, and if the limit is very big, it's not going to be triggered until it's too late.
[13:31:00] <Maxdamantus> (and in general it's not clear what such a limit would actually be)
[13:31:11] <Intelo> Maxdamantus https://pastebin.mozilla.org/589rD0cx#L
[13:31:24] *** Joins: stenno (~stenno@user/stenno)
[13:32:32] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 268 seconds)
[13:34:48] <Intelo> How would I access ? do you mean I would pass 'this' as the parent react component and then use this.useState?
[13:35:43] <Maxdamantus> No. Your code doesn't use `this`.
[13:37:08] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[13:38:06] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:38:29] <Intelo> can you give me an example?   const MyComp {  const handler = { useState...}}   .  New version:  const handler = {}  ;  const MyComp = {}.. <- handler is outside MyComp but still wants to use useState and params etc
[13:38:29] <Maxdamantus> The only things used by your functions are `dataList` and `setDataList`, so you could define functions outside that take `dataList` and `setDataList` and the regular parameters, then call those functions from inside.
[13:38:35] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[13:39:23] <Maxdamantus> function handleItemClick(dataList, setDataList, event, dataset){ ... }
[13:39:52] <Maxdamantus> handleItemClick={(event, dataset) => handleItemClick(dataList, setDataList, event, dataset)}
[13:40:40] <Intelo> ok, how to use the `userEffect`?
[13:41:13] <Intelo> Maxdamantus lets say I just want to use the useEffect in the clickHandler function that is outside the main component
[13:41:42] <Maxdamantus> You can't use `useEffect` in the click handler function.
[13:41:53] <Maxdamantus> You can only use it during the render.
[13:42:40] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[13:42:48] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:42:53] *** Quits: dimi1947 (~dimi1947@2a02:1388:90:a87b:cd84:f35d:4af9:4c44) (Quit: Leaving)
[13:43:18] <Intelo> so I cannot use effects if I declare functions outside the component function?
[13:43:40] <Maxdamantus> It's not a matter of whether you put the functions outside. You can't use `useEffect` in a callback.
[13:43:52] <Intelo> can't I pass the instance or something to those handler functions so I don't have to forcefully declare them inside the main component function?
[13:43:53] <Maxdamantus> It has to be part of the call to your SFC.
[13:44:30] <Maxdamantus> The callback is already able to create effects directly. There shouldn't be a need for `useEffect`.
[13:48:30] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Ping timeout: 260 seconds)
[13:48:33] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[13:50:54] *** Joins: tccki (~tccki@box.webslate.co.nz)
[13:51:21] <Intelo> Maxdamantus  I see so this will suffice? unction handleItemClick(dataList, setDataList, event, dataset){ ... }
[13:51:21] <gitesh> javascript function use global document object too and `this` also / too . awesome
[13:51:21] <Intelo> handleItemClick={(event, dataset) => handleItemClick(dataList, setDataList, event, dataset)}
[13:51:49] <Intelo> Maxdamantus I will try
[13:52:58] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[13:53:01] *** Joins: cth (~Cthulchu@193.194.107.250)
[14:02:33] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[14:04:52] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[14:06:21] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[14:09:45] *** Quits: asanto (~asanto@static-pool-105-109.flagman.zp.ua) (Quit: Leaving)
[14:10:13] *** Joins: jmft2_ (~JMFT@82.3.54.26)
[14:10:24] *** Quits: jmft2 (~jmft2@213.31.248.255) (Killed (NickServ (GHOST command used by jmft2_!~JMFT@82.3.54.26)))
[14:10:46] *** Parts: jmft2_ (~JMFT@82.3.54.26) ()
[14:10:56] *** Joins: jmft2 (~jmft2@213.31.248.255)
[14:10:58] *** Quits: jmft2 (~jmft2@213.31.248.255) (Killed (NickServ (GHOST command used by jmft2_!~JMFT@82.3.54.26)))
[14:11:34] *** Quits: eXistenZ (~biskit@2a02:14c:2a4:8000:e948:e184:d34a:a4eb) (Ping timeout: 252 seconds)
[14:11:36] *** Joins: jmft2_ (~jmft2@213.31.248.255)
[14:12:22] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[14:14:44] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:14:50] *** Quits: hassoon (hassoon@grape.ircnow.org) (Changing host)
[14:14:50] *** Joins: hassoon (hassoon@user/hassoon)
[14:22:06] *** Joins: arthur_melo (~IRC@191-222-175-99.user3p.brasiltelecom.net.br)
[14:22:06] *** Quits: arthur_melo (~IRC@191-222-175-99.user3p.brasiltelecom.net.br) (Changing host)
[14:22:06] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[14:23:08] *** Quits: dmanto (~dmanto@host128.190-231-77.telecom.net.ar) (Read error: Connection timed out)
[14:23:47] *** Joins: dmanto (~dmanto@host128.190-231-77.telecom.net.ar)
[14:24:10] *** Quits: pluri_ (~pluri@user/pluri) (Ping timeout: 252 seconds)
[14:24:31] *** Joins: dayday (uid520582@id-520582.hampstead.irccloud.com)
[14:28:12] *** Joins: pluri (~pluri@user/pluri)
[14:28:50] *** Joins: WishBoy (~WishBoy@user/wishboy)
[14:28:59] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[14:30:51] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[14:32:40] *** Quits: Duikb00t (~wardkenne@d54c71612.static.telenet.be) (Quit: WeeChat 3.2)
[14:35:30] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:36:41] <Gurkenglas> In Chrome, how do I find the lines of javascript code that are executed when I do *this*? Ideally only the ones that aren't executed when I do *that*.
[14:39:31] <Alexendoo> Gurkenglas: Do it in the debugger and step through. If it corresponds to what happens on a page load you could use its coverage feature
[14:39:46] *** Joins: Nod0n[m] (~nod0nmatr@2001:470:69fc:105::211)
[14:41:09] <Gurkenglas> Alexendoo, how do I do it in the debugger? When I pause the debugger I can't do *this* (pressing a button)
[14:41:13] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 252 seconds)
[14:43:12] <Alexendoo> Gurkenglas: With the devtools open press F8, then click it
[14:44:59] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:d930:9504:2de9:4aac)
[14:46:09] <cth> folks, how do you refactor in VSC? It's annoying that I keep getting this when trying to refactor a variable: https://i.imgur.com/MO2G45w.png
[14:46:12] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:47:08] <Gurkenglas> Alexendoo, after making that call "debugger;" as per https://stackoverflow.com/a/60283510/5318306 that does, as in my last line, pop up a "Paused in debugger" and darkens the rest of the page including the button
[14:47:53] <Alexendoo> Gurkenglas: You wouldn't use both debugger and f8, just f8 in this case.
[14:48:28] <Gurkenglas> Just F8 does nothing, regardless of which of the two windows my browser is in
[14:48:54] <Alexendoo> You may need to have the sources panel open
[14:49:08] <Gurkenglas> But that doesn't matter, right? Because the DevTools -> Source -> Pause icon button does the same thing, darkens the page
[14:49:10] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[14:49:16] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:50:00] <Alexendoo> It does it on the next script execution, so if there's other stuff getting in the way before you press the button you can try a different way
[14:50:01] *** Joins: stenno (~stenno@user/stenno)
[14:50:11] <thykka> there's also a coverage tool in Chrome
[14:50:22] <thykka> it will mark any unused lines with red, after recording usage
[14:50:24] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[14:50:44] *** Joins: pulse (~pulse@user/pulse)
[14:50:52] <Alexendoo> Yeah as I mentioned it's tracked from the page load though, which may not be applicable
[14:51:46] <Gurkenglas> i suppose i can load the page and press the button, and load the page and dont press the button, and compare coverage
[14:52:04] *** Joins: audiocat (~audio@2603-8081-1800-1546-624d-8c32-b6eb-1f11.res6.spectrum.com)
[14:52:04] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[14:52:32] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[14:52:46] <Gurkenglas> It does it on the next script execution <- huh, perhaps the button doesn't call a script, then? is there another way for a "Save" button to do web stuff and display a popup?
[14:53:58] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Client Quit)
[14:54:00] <Alexendoo> Ah seems like you can start coverage without reloading there, just isn't a button for it. Ctrl + shift + p and type instrument coverage,
[14:54:10] <Alexendoo> ignore that comma placement
[14:54:49] <Alexendoo> Gurkenglas: If you see the page get paused right after you press the pause button/f8 it's because some other JS ran first
[14:55:22] <Gurkenglas> sure does, although the pause button does that and f8 doesn't.
[14:56:25] <Alexendoo> could be a focus event listener
[14:56:49] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[14:57:01] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[14:57:05] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Remote host closed the connection)
[14:57:25] *** Joins: CoolerX (~CoolerX@user/coolerx)
[14:57:28] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[14:58:54] <Gurkenglas> im guessing the background script just runs in a loop
[14:59:51] <Alexendoo> Could be, you do have options there like marking a script/point as never pause, but I would just move on to the next method personally
[15:00:06] *** Quits: pycode (~pycode@2001:b07:5d28:551:263b:5bb0:1e16:9c7a) (Ping timeout: 245 seconds)
[15:01:18] <Gurkenglas> what do you mean, next method? when i continue it just jumps back and forth between two points and the page stays darkened.
[15:01:29] <Gurkenglas> -continue+step out
[15:01:38] <Alexendoo> Not a debugger term, as in I'd try something else
[15:03:56] <Gurkenglas> When I instrument coverage clicking that button does add a JS file. It's quite big and only 1% is used, how do I find that 1%?
[15:04:22] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:a545:61cf:6fee:5b9f)
[15:04:26] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[15:05:56] <Gurkenglas> Found it by scrolling! So the function is called saveSheet() and I could successfully switch to the other tab where I had accidentally killed the Save button and save my character sheet :)
[15:08:19] <hassoon> the heck
[15:09:39] <hassoon> the interviewer asked me if the user clicks on a generate PDF button, and the backend starts generating the pdf file lasting at least 30 minutes, how can we make the process faster, knowing that we cannot make the backend generate the file faster
[15:10:13] <hassoon> i told him i'd simply generate the pdf file from the frontend since it's meant to be downloaded after all
[15:11:07] <hassoon> he refused my idea, so i told him i'd implement a progress bar indicating the file generation progression rate so the user gets an idea of the time the process will take
[15:11:12] <hassoon> yet he refused that
[15:11:34] <hassoon> so i gave up
[15:11:48] <stenno> how about, it gets generated on the backend and then the user gets a mail with a download link
[15:12:15] <hassoon> stenno: ya he told me about that in the end of the question :p
[15:12:16] <Gurkenglas> how about we generate the first half while the user is specifying the second half
[15:12:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[15:12:42] <Alexendoo> How is that 'faster'
[15:12:46] <hassoon> stenno: well d'oh.. it's a frontend position :|
[15:12:53] <hassoon> Alexendoo: ya no clue
[15:13:04] <Gurkenglas> Alexendoo, the UX session is over sooner
[15:13:06] <stenno> faster in the sense that we can just return early
[15:13:21] <hassoon> we can generate nice pdf files from the frontend's almighty javascript for god's sake :|
[15:13:48] <stenno> but doesn't that imply that it would also take 30 minutes to generate it in the frontend?
[15:13:49] <Gurkenglas> hassoon, presumably the slow step is the backend acquiring the data that goes in the pdf
[15:14:00] <stenno> i mean what would be the reason that the generation takes 30 minutes in the backend
[15:14:11] <Alexendoo> Gurkenglas: ain't nobody staring at a tab for 30 minutes, they'd move to a different one anyway
[15:14:27] <hassoon> stenno: i don't think DOM manipulation/access will be that heavy
[15:14:42] <hassoon> stenno: i mean the DOM to pdf thing
[15:14:42] <stenno> hassoon: again the question is, why does the backend take 30 minutes to generate a pdf
[15:15:01] <hassoon> stenno: even a mere print() operation with the right css code can give us nice pdf files
[15:15:17] <stenno> what does that have to do with my question
[15:15:26] <Alexendoo> You can craft a scenario where it can't be less than 30 minutes, e.g. a pdf containing the next 30 minutes of sensor readings or something
[15:15:28] <stenno> do you think the pdf generation takes so long because the server is a potato?
[15:15:30] <hassoon> stenno: ah, he told me that's not changeable , it's the least time the file generation will take, as a given.
[15:15:42] <stenno> ok, so it would be the same in the frontend then
[15:15:49] <stenno> so that wouldn't help in the slightest
[15:16:11] <stenno> so 'just build the PDF in the frontend' is indeed _not_ a valid solution here
[15:16:40] <Gurkenglas> hassoon, he should have given hint/context like "this is a covid test centre computer terminal, how do we make it so we don't have to provide a terminal for 30 minutes per person"
[15:17:40] <hassoon> Gurkenglas: i don't think that context is any helpful :p
[15:17:57] <hassoon> stenno: ya in the end it was just about sending the user a mail, as you stated
[15:18:00] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:18:05] <stenno> right
[15:18:12] <Gurkenglas> Huh. Good at him for rejecting you >:P
[15:18:14] <stenno> so do i get the job now
[15:18:40] <hassoon> stenno: ya congrats'
[15:18:42] <hassoon> lel
[15:19:22] <stenno> \o/
[15:19:50] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:21:21] <silly> did i miss irc interview questions?
[15:21:36] <stenno> TOO LATE I GOT THE JOB
[15:21:51] <silly> i'll glue my fingers to the keyboard
[15:22:00] <stenno> right now i am quitting my current job because of that guarantee
[15:22:03] <silly> then i can only type 10 characters
[15:22:15] <stenno> choose your characters wisely then
[15:22:52] <silly> yesnomabx and one of your choice
[15:22:55] <hassoon> stenno: what you seeking a new job ?
[15:23:01] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[15:23:04] <stenno> hassoon: no i am just joking, i have a job
[15:23:21] <hassoon> ever considering seeking a new one ?
[15:23:25] <silly> and i won't really glue my fingers to the keyboard
[15:23:27] <hassoon> * considered *
[15:23:45] <stenno> sure i always consider finding an even better job
[15:23:57] <hassoon> ic
[15:24:41] <stenno> not in an agency please
[15:25:01] <hassoon> stenno: you mean a smaller startup ?
[15:25:09] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[15:25:22] <stenno> if i'd look for one, i'd look in a bigger company
[15:26:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[15:26:51] *** Joins: eXistenZ (~biskit@2a02:14c:2a4:8000:116:5900:8aef:f983)
[15:28:01] *** Joins: tryless (~tryless@213.128.163.221)
[15:28:01] *** Quits: tryless (~tryless@213.128.163.221) (Changing host)
[15:28:01] *** Joins: tryless (~tryless@user/tryless)
[15:29:29] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:d930:9504:2de9:4aac) (Ping timeout: 268 seconds)
[15:29:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[15:37:04] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:37:38] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:39:40] *** Joins: pmercado (~pmercado@186.107.62.14)
[15:41:17] *** Joins: tccki_ (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[15:41:21] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[15:42:05] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[15:42:11] *** Quits: amcsi (~amcsi@4F7A7C97.catv.pool.telekom.hu) (Ping timeout: 245 seconds)
[15:43:45] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[15:44:35] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 260 seconds)
[15:44:35] *** tccki_ is now known as tccki
[15:46:04] <Deneb> I have a script that saves a file to disk. The user is prompted, selectes a save location and clicks Save and the file is saved. The scriptr creates a Blob object and a temporary file object, sets up the file object and then calls obj.click(). The question is, how can I detect when the file save has been completed?
[15:47:22] *** Quits: tryless (~tryless@user/tryless) (Ping timeout: 268 seconds)
[15:47:38] <Deneb> this is the function code: https://dpaste.com/A4YBD74SX
[15:48:11] <Deneb> the problem is if I call it multiple times within a loop, it always misses the last file.
[15:48:31] *** Joins: stenno (~stenno@user/stenno)
[15:49:50] <Deneb> I suspect that somewhere along the line the file object 'a' is getting deleted before the save is complete.
[15:54:35] *** Joins: pycode (~pycode@2001:b07:5d28:551:13e8:3fe9:ac27:8ae2)
[15:56:13] <Deneb> there seems to be no .saved() or .complete() event that I could base a promise on
[15:57:15] <Deneb> curiously, the log shows the exportFile function being called for the last file, but I never get prompted to save it
[15:57:31] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[16:00:03] *** Joins: ABCXYZ (~ABCXYZ@148.72.170.133)
[16:00:59] *** Parts: ABCXYZ (~ABCXYZ@148.72.170.133) ()
[16:02:17] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:05:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[16:08:40] *** Joins: woink (~woink@cpe-69-206-157-19.hvc.res.rr.com)
[16:11:18] *** Joins: han-solo (~han-solo@user/han-solo)
[16:13:11] *** Joins: federico (~federico@176.206.87.127)
[16:15:38] *** Joins: vinay (~vinay@2405:201:402c:a0a2:d667:a2a9:e560:3d64)
[16:16:00] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[16:17:07] *** Quits: vinay (~vinay@2405:201:402c:a0a2:d667:a2a9:e560:3d64) (Client Quit)
[16:17:31] *** Joins: voltage_ (voltage@user/voltage)
[16:17:32] *** Joins: vinay (~vinay@2405:201:402c:a0a2:d667:a2a9:e560:3d64)
[16:18:29] *** Quits: vinay (~vinay@2405:201:402c:a0a2:d667:a2a9:e560:3d64) (Client Quit)
[16:19:27] *** Joins: chao (~stenno@user/stenno)
[16:19:38] *** Quits: stenno (~stenno@user/stenno) (Read error: Connection reset by peer)
[16:20:41] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.3)
[16:22:31] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:23:51] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 245 seconds)
[16:23:55] *** Quits: eXistenZ (~biskit@2a02:14c:2a4:8000:116:5900:8aef:f983) (Read error: Connection reset by peer)
[16:31:49] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[16:32:22] *** Joins: amcsi (~amcsi@4F7A7C97.catv.pool.telekom.hu)
[16:32:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Quit: Leaving)
[16:34:22] *** Joins: eXistenZ (~biskit@2a02:14c:2a4:8000:1c80:eb65:17c8:aed0)
[16:34:51] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:d930:9504:2de9:4aac)
[16:38:07] *** Joins: linguist (~autistic@user/linguist)
[16:38:40] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[16:38:50] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[16:39:06] *** Quits: federico (~federico@176.206.87.127) (Quit: WeeChat 3.0)
[16:40:16] *** Joins: cth (~Cthulchu@193.194.107.250)
[16:40:39] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[16:44:58] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[16:46:17] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:d930:9504:2de9:4aac) (Ping timeout: 264 seconds)
[16:47:24] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[16:48:05] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:a545:61cf:6fee:5b9f) (Ping timeout: 264 seconds)
[16:48:15] *** Joins: stenno (~stenno@user/stenno)
[16:49:16] <fakuve> Hi guys , see if someone can give me a hand checking this. So I got this, this is a type of Custom Module for the program I'm using. https://hastebin.com/vapivegoje
[16:50:03] <fakuve> Basically you can add some code there modifying the incoming messages (thatone after the oscInFilter ...) or the outgoing ones
[16:50:16] <fakuve> What I want to know a bit , is the structure of this code
[16:51:14] <fakuve> mainly this `module.export` is an object (I know is a special object that can be recalled by any other document in the project by just `require('thatDocument.js')`
[16:53:30] <fakuve> I bet automatically the program is parsing this document. What I am curios is that . The `module.exports` define some methods as children of it . Those methods are not fully defined in here but they will be defined somewhere in the code of the program that executes this I guess
[16:54:55] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:55:46] <fakuve> Ok I just saw it
[16:56:05] <fakuve> quite complex to navigate in a projet without having coded it myself
[16:56:34] <stenno> its called CJS
[16:56:41] <stenno> CJS modules for node
[16:57:01] <stenno> https://nodejs.org/docs/latest/api/modules.html
[16:57:11] <stenno> CommonJS
[16:57:35] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[17:00:19] <fakuve> stenno: cheers
[17:02:15] *** Joins: Naan (~Naan@user/naan)
[17:06:06] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[17:06:43] *** Joins: nomic (~nomic@185.217.117.233)
[17:07:24] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:07:37] *** Quits: wovixo (~wovixo@128.104.205.49) (Client Quit)
[17:08:51] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:09:05] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[17:09:38] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:11:37] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[17:11:56] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[17:13:45] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:15:05] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[17:15:11] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[17:15:40] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:21:43] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[17:25:21] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:25:21] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:25:21] *** Joins: wroathe (~wroathe@user/wroathe)
[17:28:01] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Ping timeout: 245 seconds)
[17:29:05] *** Joins: src (~src@user/src)
[17:29:56] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[17:38:19] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[17:38:24] *** Joins: onosendi (~onosendi@user/onosendi)
[17:38:51] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[17:39:14] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Read error: Connection reset by peer)
[17:40:14] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[17:40:33] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:48:27] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:d930:9504:2de9:4aac)
[17:48:55] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[17:49:25] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[17:54:54] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:d930:9504:2de9:4aac) (Ping timeout: 265 seconds)
[17:55:12] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b53c:9f1b:c730:b25)
[17:56:53] *** Joins: KDev (~KDev@cpe-98-10-64-75.rochester.res.rr.com)
[17:57:36] *** Quits: stenno (~stenno@user/stenno) (Quit: WeeChat 3.2)
[18:00:34] *** Joins: stenno (~stenno@user/stenno)
[18:03:07] *** Joins: CoolerX (~CoolerX@user/coolerx)
[18:04:23] <KDev> Hey guys, what is a better way I can do this with ternary's? Often times I check the value as the condition, and if it's correct, I want to use that value, otherwise I want a new value..but then I end up typing it twice:
[18:05:24] <KDev> const ternary = (Math.floor(Math.random() * max) !== exclude) ? Math.floor(Math.random() * max : 0;
[18:06:30] <ThePendulum> intermediate variable
[18:06:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 245 seconds)
[18:08:49] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[18:15:36] *** Joins: pulse (~pulse@user/pulse)
[18:18:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[18:20:17] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[18:20:46] <KDev> for zero filled arrays, is array.fill a bad choice? I'm learning react and they are very against mutating, and this mutates the array instead of giving a new one.
[18:21:38] <stenno> yes, you'd map the array
[18:21:42] <stenno> what do you mean with 0-filled?
[18:22:04] <stenno> n> const array = Array.from({ length: 10 }, (_) => 0); array
[18:22:06] <jellobot> (okay) [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
[18:22:54] <stenno> you should avoid using the Array(n) function, as it leaves you with empty (not undefined) fields
[18:22:59] <stenno> is that what you mean with zero-filled?
[18:24:10] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[18:24:45] <stenno> another less idiomatic way of creating an array with length n is : [...Array(n)].map(...)
[18:24:56] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:26:10] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[18:26:24] <since_> and why not Array(n).fill(0) ?
[18:27:12] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[18:27:47] <stenno> n> const foo = Array(n).fill({ a: 23}); foo[0].a = 42; foo
[18:27:47] <jellobot> (fail) ReferenceError: n is not defined
[18:27:54] <stenno> n> const foo = Array(5).fill({ a: 23}); foo[0].a = 42; foo
[18:27:55] <jellobot> (okay) [ { a: 42 }, { a: 42 }, { a: 42 }, { a: 42 }, { a: 42 } ]
[18:27:58] <KDev> Honestly, I never really heard of zero-filled arrays until now. I'm doing a course for react and came across this bit in the exercise
[18:27:59] <stenno> since_: ^
[18:28:00] <KDev> "Using an array might be the simpler choice in this case. Searching the Internet will provide you with lots of hints on how to create a zero-filled array of a desired length."
[18:29:06] <since_> in other programming languages a new array may be filled with random garbage
[18:29:11] <KDev> I guess it's to keep all the values in the array a number type
[18:29:31] <stenno> i'd just use the Array.from({ length: n }, _ => 0)
[18:29:43] <stenno> or [...Array(n)].map(_ => 0)
[18:29:57] <KDev> Basically, they want me to have an array to keep track of voting scores, but these indexes of the array will go hand in hand with another array.
[18:30:35] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:30:35] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:30:35] *** Joins: wroathe (~wroathe@user/wroathe)
[18:30:39] <stenno> dunno your specific code, and this will also be relevant for react state
[18:30:43] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Client Quit)
[18:30:57] <KDev> yes, I like the map option
[18:31:06] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[18:31:07] <KDev> thanks
[18:31:14] <stenno> note that the second parameter for Array.from is a map callback
[18:32:09] <KDev> ahh, may as well use that then
[18:33:57] <onosendi>  KDev https://dpaste.org/uvLL
[18:35:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[18:36:00] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[18:36:31] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:36:37] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: sizeof_void34)
[18:36:51] *** Joins: wyre (~wyre@user/wyre)
[18:37:17] <notchris> o.
[18:37:19] <notchris> o/*
[18:37:31] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[18:37:47] *** Joins: sizeof_void34 (~Thunderbi@109.252.124.86)
[18:37:51] <onosendi> stenno: you like `Array.from` over `[...Array(n)]` ?
[18:37:51] *** Quits: sizeof_void34 (~Thunderbi@109.252.124.86) (Client Quit)
[18:38:00] <stenno> i think its more idiomatic
[18:38:43] <stenno> but i hardly need to use it ever anyway
[18:39:23] <onosendi> stenno: ah, I see you already explained above, sorry.
[18:39:28] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[18:39:39] *** Joins: chao (~stenno@user/stenno)
[18:39:48] *** stenno is now known as Guest1516
[18:39:48] *** Quits: Guest1516 (~stenno@user/stenno) (Killed (cadmium.libera.chat (Nickname regained by services)))
[18:39:48] *** chao is now known as stenno
[18:40:25] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Client Quit)
[18:40:45] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[18:40:49] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[18:41:03] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[18:41:20] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Client Quit)
[18:41:41] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[18:44:58] *** Joins: tryless (~tryless@213.128.163.221)
[18:44:58] *** Quits: tryless (~tryless@213.128.163.221) (Changing host)
[18:44:58] *** Joins: tryless (~tryless@user/tryless)
[18:48:29] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-c420-d162-78e2-1319.res6.spectrum.com)
[18:49:47] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[18:50:56] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[18:52:14] *** Joins: zebrag (~chris@user/zebrag)
[18:52:23] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:54:52] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:55:31] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:55:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:55:52] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[18:57:39] *** Joins: trog (~trog@user/trog)
[18:58:38] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[18:59:02] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 265 seconds)
[19:04:18] *** Quits: tryless (~tryless@user/tryless) (Ping timeout: 268 seconds)
[19:04:20] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[19:07:35] *** Joins: cadmio (~cadmio@151.25.149.251)
[19:07:37] <cadmio> Hello
[19:07:47] <cadmio> I need to produce a gif out of this image https://micro.magnet.fsu.edu/electromag/java/detector/index.html
[19:07:55] <cadmio> it seems js driven
[19:24:25] *** Joins: Rockwood (~Rocky@user/rocky)
[19:26:25] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[19:33:26] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: sizeof_void34)
[19:33:36] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:33:47] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[19:34:52] *** Quits: pycode (~pycode@2001:b07:5d28:551:13e8:3fe9:ac27:8ae2) (Remote host closed the connection)
[19:35:00] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 260 seconds)
[19:35:07] *** Joins: pycode (~pycode@2001:b07:5d28:551:13e8:3fe9:ac27:8ae2)
[19:38:50] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: Nod0n[m] (~nod0nmatr@2001:470:69fc:105::211) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: nicoty (~nicoty@user/nicoty) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: Deide (~deide@user/deide) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: christian[m]1 (~christian@2001:470:69fc:105::f6f1) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: jonnycat[m] (~jonnycatm@2001:470:69fc:105::f575) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: pixel[m] (~pixelspac@2001:470:69fc:105::fd73) (Quit: Bridge terminating on SIGTERM)
[19:38:53] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: Bridge terminating on SIGTERM)
[19:38:53] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: Bridge terminating on SIGTERM)
[19:38:56] *** Quits: cows[m] (~cowsmatri@2001:470:69fc:105::758c) (Quit: Bridge terminating on SIGTERM)
[19:38:56] *** Quits: tomjwatson[m] (~tomjwatso@2001:470:69fc:105::daf6) (Quit: Bridge terminating on SIGTERM)
[19:38:58] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[19:38:58] *** Quits: queue[m] (~queue-@2001:470:69fc:105::1:1892) (Quit: Bridge terminating on SIGTERM)
[19:40:05] *** Joins: sylario (uid115390@id-115390.tinside.irccloud.com)
[19:42:56] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[19:43:46] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 252 seconds)
[19:44:48] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[19:44:49] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[19:46:33] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[19:47:01] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[19:49:17] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Read error: Connection reset by peer)
[19:49:56] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[19:49:57] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:50:00] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Read error: Connection reset by peer)
[19:50:09] <banana_> morning
[19:50:10] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[19:50:10] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[19:50:10] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[19:50:10] *** Joins: nicoty (~nicoty@user/nicoty)
[19:50:10] *** Joins: jonnycat[m] (~jonnycatm@2001:470:69fc:105::f575)
[19:50:10] *** Joins: kadoban (~kadoban@user/kadoban)
[19:50:10] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[19:50:10] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[19:50:10] *** Joins: Deide (~deide@user/deide)
[19:50:10] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[19:50:10] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[19:50:10] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[19:50:22] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[19:50:34] *** Joins: cows[m] (~cowsmatri@2001:470:69fc:105::758c)
[19:50:46] *** Joins: tomjwatson[m] (~tomjwatso@2001:470:69fc:105::daf6)
[19:50:46] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[19:50:46] *** Joins: queue[m] (~queue-@2001:470:69fc:105::1:1892)
[19:50:46] *** Joins: christian[m]1 (~christian@2001:470:69fc:105::f6f1)
[19:50:46] *** Joins: Nod0n[m] (~nod0nmatr@2001:470:69fc:105::211)
[19:50:46] *** Joins: pixel[m] (~pixelspac@2001:470:69fc:105::fd73)
[19:51:11] *** Joins: brentaarnold (~brentaarn@24.112.61.90)
[19:52:37] *** Joins: Trieste (~T@user/pilgrim)
[19:54:12] *** Quits: Luminax (~Luminax@118.100.90.121) (Read error: Connection reset by peer)
[19:54:21] *** Quits: cadmio (~cadmio@151.25.149.251) (Quit: WeeChat 3.0)
[19:55:07] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:55:38] <codebam> morning banana_
[19:55:42] <codebam> :)
[19:57:31] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[19:58:14] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[19:58:20] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 260 seconds)
[19:58:42] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:00:56] *** Joins: Trieste (T@user/pilgrim)
[20:01:06] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:04:07] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[20:05:33] <ljharb> onosendi: yes, Array.from is better
[20:05:53] *** Parts: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) ()
[20:06:02] *** Joins: Trieste_ (~T@user/pilgrim)
[20:07:02] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 246 seconds)
[20:07:56] *** Quits: ckdCreations (~ckdCreati@147.55.133.139) (Read error: Connection reset by peer)
[20:08:21] *** Joins: ckdCreations (~ckdCreati@147.55.130.33)
[20:11:58] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[20:12:14] *** Joins: Trieste (T@user/pilgrim)
[20:12:30] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:12:36] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:12:38] *** Quits: Trieste_ (~T@user/pilgrim) (Ping timeout: 246 seconds)
[20:12:43] *** Joins: pulse (~pulse@user/pulse)
[20:13:51] *** Joins: jazzy (~jaziz@user/jaziz)
[20:13:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:18:09] *** Joins: tryless (~tryless@213.128.163.221)
[20:18:09] *** Quits: tryless (~tryless@213.128.163.221) (Changing host)
[20:18:09] *** Joins: tryless (~tryless@user/tryless)
[20:19:28] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[20:20:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[20:22:13] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:26:06] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[20:26:58] *** Joins: matsaman (~matsaman@user/matsaman)
[20:28:30] *** Joins: nomic (~nomic@185.217.117.233)
[20:29:23] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (Changing host)
[20:29:23] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[20:30:19] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[20:33:08] *** Joins: chlorine (~porphyry@223.235.196.22)
[20:33:30] <fakuve> Hi guys , I'm just trying to implement something quickly with javascript (an eventListener) , idk first of all if this is the right channel to do this question
[20:34:01] <fakuve> But can someone tell me why is not console.logging on line 52 ? https://hastebin.com/qihuyifura
[20:34:21] <fakuve> I know it may be horrible code , it is just to create something simple
[20:35:01] <matsaman> fakuve: what do you want it to put into the log, exactly?
[20:35:22] <matsaman> console.log(console.log(typeof myButton))?
[20:35:27] <fakuve> matsaman: I just want to troubleshoot the issue
[20:35:29] <fakuve> yeah
[20:35:35] <fakuve> I know I havent declared the variable
[20:35:36] *** Joins: han-solo (~han-solo@103.104.47.22)
[20:35:37] <matsaman> console.log(alert('monacos!!'))?
[20:35:49] <matsaman> none of that nesting makes much sense to me, offhand
[20:35:50] <fakuve> Thatone is not getting printed neither
[20:36:27] <fakuve> Is inside the event listener
[20:36:31] <matsaman> if you can do what you're trying at all, you'd probably want a simple return, and not another, nested console.log or alert
[20:36:53] <matsaman> but probably you should simply put the console.log within the function within the listener, instead of around it
[20:37:57] <fakuve> It is inside isnt it?
[20:38:08] <matsaman> also the doctype for HTML(5) is '<!doctype html>', and not '<!doctypehtml>'; validator.nu can help with such little mistakes
[20:38:17] <matsaman> it's inside ... of another console.log
[20:38:20] *** Quits: han-solo (~han-solo@103.104.47.22) (Client Quit)
[20:38:30] <fakuve> ohhh
[20:38:33] <fakuve> you are right
[20:38:38] <matsaman> you basically have console.log(console.log(typeof myButton))?
[20:38:40] <fakuve> I havent seen that yeah
[20:38:51] <matsaman> dunno what that's supposed to do, but I'd wager nothing useful
[20:39:01] *** Joins: han-solo (~han-solo@user/han-solo)
[20:39:04] *** Quits: tryless (~tryless@user/tryless) (Quit: global loop)
[20:39:46] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:40:05] <fakuve> :D
[20:40:16] <fakuve> I just wanted to place a simple switch
[20:40:29] <fakuve> But simple in my head is not something
[20:41:04] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[20:41:30] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[20:41:44] <matsaman> you'll get it
[20:41:51] <matsaman> usually less is more
[20:42:05] <matsaman> if you have two 'console.log' instances, that's probably more than the one you strictly require
[20:42:29] <matsaman> or "DRY" as some people like to chant; https://en.wikipedia.org/wiki/Don%27t_repeat_yourself
[20:42:50] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:43:30] <fakuve> Cheers
[20:43:47] <matsaman> anyway loading your code finally, it does produce an 'undefined' for at least one of your original console.log instances
[20:44:18] <fakuve> https://hastebin.com/ukahuxekiq
[20:44:34] <fakuve> I just can't see why if upon clicking
[20:44:50] <fakuve> (myButton is undefined at that time) , it does the alert
[20:45:10] <fakuve> (which is nested in an if (myButton ==1)
[20:46:19] <matsaman> it's not undefined, of course, you set it to 1
[20:46:36] <matsaman> you say if it's undefined, then var myButton = 1;
[20:46:46] <matsaman> so it's always defined by the time the later alert code runs
[20:46:58] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[20:47:13] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:47:45] <matsaman> now if you used 'let myButton = 1;' instead of 'var myButton = 1;', the 'let' would change the scope such that it would work perhaps as you had originally expected
[20:47:48] <matsaman> _but_
[20:48:03] *** Quits: Intelo (~Intelo@88.244.94.240) (Ping timeout: 256 seconds)
[20:48:04] <fakuve> matsaman: well but if I enter in the console (after rendering the page) `console.log(myButton) it says is not defined
[20:48:16] <matsaman> you need to understand how that works and not just assume let will solve all your problems
[20:48:32] <matsaman> yes, because that is before you assign it as 1 =)
[20:48:35] <matsaman> the code is run in order
[20:48:36] <fakuve> ok so I'm messing with the scpe
[20:48:51] <matsaman> so at the time you're logging its typeof, it is undefined, but by the time you alert, it is
[20:49:04] <matsaman> I think the first thing to understand is that you're assigning it to 1, so it's defined
[20:49:17] <matsaman> but _part_ of that is that you're assigning it to 1 in a certain scope, yes
[20:49:26] <samsch> `var` is function scoped, and `let` and `const` are block scoped. So your var defined inside your event handler function will never be available as a reference in your console.
[20:49:35] <samsch> *browser console
[20:49:37] <fakuve> okk
[20:49:49] *** Quits: mei6 (~mei@user/mei) (Quit: mei6)
[20:49:57] <fakuve> so I just need to `let it be`
[20:49:59] <fakuve> :D
[20:50:10] *** Joins: N4buc0 (~N4buc0@2804:14c:8782:814c:10c0:e623:aeca:c505)
[20:50:26] <matsaman> =P
[20:50:38] <matsaman> you could, but honestly I think that is only part of your misunderstanding
[20:50:58] <matsaman> it's possible that your default mental understanding of how assignment and scope works perfectly matches to 'let'
[20:51:06] <matsaman> but I think more likely you have misunderstood a number of things
[20:51:23] <fakuve> yeah I have been out from Javascript for quite a while
[20:51:32] <matsaman> primarly, that code is run in order, and that you _did_ assign it
[20:51:34] *** Parts: chlorine (~porphyry@223.235.196.22) ()
[20:51:51] *** Joins: thiras (~thiras@user/thiras)
[20:52:11] <fakuve> but with let is not even been assigned the variable
[20:52:14] <matsaman> and I'm going to say, again, that nested console.log is also weird =)
[20:52:26] <fakuve> Yep that was really bad
[20:52:27] <matsaman> fakuve: hrmm?
[20:52:45] <fakuve> https://hastebin.com/axaduyawid
[20:52:51] <fakuve> This is not workng neither
[20:53:23] <matsaman> fakuve: how isn't it working?
[20:53:29] <matsaman> you want it to do ... what?
[20:53:31] <fakuve> When I press the div , it just print out undefined , and an uncaught Reference Error
[20:53:45] <matsaman> what do you want it to print?
[20:53:50] <samsch> myButton is *always* undefined on your line 52+53. And it's still undeclared on 56,57,59,62
[20:53:59] <matsaman> at the time you're calling console.log, it is undefined, so that is accurate
[20:54:02] <fakuve> I want it to switch basically . myButton , to either get declared (if its not declared)
[20:54:10] <matsaman> declared?
[20:54:25] <samsch> The only way it could be declared beforehand is if you do it *outside* the function.
[20:54:45] <samsch> Subsequent runs of the function won't have the myButton var from previous runs.
[20:55:09] <fakuve> ok
[20:55:25] <matsaman> you want clicking the button to persistently change its value, till it's clicked again?
[20:55:42] <samsch> If lines 57 or 59 could run, then they would be assigning a value to `window.myButton`.
[20:55:50] <fakuve> Yeah I want to to switch from undefined to 1 , then 1 to 0 , then 0 to 1
[20:55:55] <samsch> (But they don't because the 53 condition is always true)
[20:56:05] <matsaman> fakuve: for each click, right?
[20:56:11] <fakuve> yep
[20:56:16] <matsaman> hrmm
[20:56:36] <matsaman> the most straightforward way to do this is probably using an <input type="checkbox">
[20:56:40] <matsaman> which you can hide visually if you want
[20:56:50] <matsaman> but obviously you can do it purely with JS and any random element like a div, too
[20:57:06] <fakuve> yeah I'm just messing
[20:57:26] <matsaman> maybe use a data attribute to store a value
[20:57:31] <samsch> If you want to store a state, you could define myButton outside the handler function, before line 49.
[20:57:40] <fakuve> So really? there is no way to create a pseudo-switch button?
[20:57:43] <samsch> In the script tag, that will make a global var
[20:57:57] <fakuve> ok
[20:59:08] <silly> it will be scoped to the script element if you use const/let
[20:59:13] <fakuve> Working https://hastebin.com/gujivuxino
[20:59:43] <fakuve> It may look horrible the code , but thanks for helping me
[21:01:00] <samsch> fakuve, https://jsfiddle.net/samsch/pa9fdLgq/
[21:01:12] <silly> generally it is weird to define the variable on a condition like this.
[21:02:22] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[21:03:12] <fakuve> samsch:thats nice thank you
[21:03:35] <silly> and you should get used to use === and !== instead of == and !=
[21:03:46] <samsch> With some actual UI functionality: https://jsfiddle.net/samsch/pa9fdLgq/1/
[21:04:05] <fakuve> cheers
[21:04:28] <silly> !eqeq @fakuve
[21:04:28] <jellobot> fakuve, Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. See also: http://zero.milosz.ca/ http://es5.github.io/#x11.9.3 https://eqeq.js.org/
[21:04:28] <samsch> (Note that in RL you would probably have an aria attribute to note that it's "active" when using a button. Otherwise it should probably be a checkbox input like mentioned before.)
[21:07:31] <fakuve> Cheees
[21:07:50] <fakuve> Thanks guys
[21:08:27] <fakuve> btw RIP GreenJello , didnt know the news, he helped me many times in here. He has probably a good place up there
[21:09:34] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 252 seconds)
[21:10:01] *** Quits: Jaran (~mail@user/jaran) (Ping timeout: 265 seconds)
[21:10:41] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38b0:198a:d9c3:ffae)
[21:11:48] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[21:12:36] *** Joins: stenno (~stenno@user/stenno)
[21:16:39] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[21:16:51] <bitonic> what does this syntax mean `(0, a.default)`?
[21:17:36] <samsch> bitonic, It's usually used in compiler output for the purpose of having the correct `this` context within a function call.
[21:18:06] <bitonic> samsch: right, that makes sense. but is it valid JS?
[21:18:13] <bitonic> and if yes, do you have a reference to what that concept is called?
[21:18:32] <samsch> The comma operator evaluates each expressions, and gives the result of the last. So `someObj.prop = (0, f(), 3);` assigns `3` to someObj.prop but also calls f().
[21:18:55] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[21:19:44] <samsch> Usually that form is seen like `(0, obj.property)(args)`, where the purpose is to do the equivalent of `obj.property.call(undefined, args)`, but with fewer characters.
[21:20:59] *** Quits: pycode (~pycode@2001:b07:5d28:551:13e8:3fe9:ac27:8ae2) (Ping timeout: 268 seconds)
[21:21:53] <bitonic> samsch: thank you -- the part i am missing is why evaluating `0` first has the consequence of having `this = undefined`, if i'm understanding correctly
[21:21:58] *** Joins: kill (~killown@user/killown)
[21:22:23] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:d0cb:3918:ffe3:7838) (Quit: Textual IRC Client: www.textualapp.com)
[21:22:40] <banana_> n> this = undefined;
[21:22:40] <jellobot> (fail) SyntaxError: Invalid left-hand side in assignment
[21:22:40] <Rockwood> o/
[21:23:01] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[21:23:08] <banana_> n> try { this = undefined; } catch { console.log(
[21:23:09] <jellobot> (fail) SyntaxError: Invalid left-hand side in assignment
[21:23:11] <samsch> bitonic, the `0` is unimportant, it's an expression that's thrown away. The `obj.property` then gets evaluated and the whole expression is replaced with it.
[21:23:12] <Rockwood> banana_, make sure you are using class for chaining
[21:23:18] <banana_> n> try { this = undefined; } catch { console.log('o/') }
[21:23:18] <jellobot> (fail) SyntaxError: Invalid left-hand side in assignment
[21:23:27] <banana_> n> try { this = undefined; } catch(e) { console.log('o/') }
[21:23:27] <jellobot> (fail) SyntaxError: Invalid left-hand side in assignment
[21:23:32] <banana_> what
[21:23:38] <Rockwood> lol
[21:23:41] <banana_> busy anyway
[21:23:46] <Rockwood> what are you trying
[21:23:50] <Rockwood> ?
[21:23:54] <banana_> silently fail an error
[21:23:57] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[21:24:06] <banana_> guess you cant for syntax errors
[21:24:08] *** Quits: dayday (uid520582@id-520582.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:24:17] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[21:25:00] <samsch> bitonic, So it's kinda like doing `const temp = obj.property; temp()`.
[21:25:09] <bitonic> samsch: but if `0` is unimportant, then why not `obj.property(args)`? is the difference that in one we call `property` "directly", and therefore `this = obj`, while in the other it's "indirect", and therefore no `this`?
[21:25:19] <samsch> Correct
[21:25:30] <samsch> That `this` context difference is the purpose
[21:25:41] <bitonic> samsch: great, thanks again.
[21:26:08] <ljharb> (`this` is a "receiver", not a context)
[21:26:17] <Rockwood> ljharb, o/
[21:28:08] *** Joins: Jaran (~mail@p2e5154b7.dip0.t-ipconnect.de)
[21:28:09] *** Quits: Jaran (~mail@p2e5154b7.dip0.t-ipconnect.de) (Changing host)
[21:28:09] *** Joins: Jaran (~mail@user/jaran)
[21:28:21] <bitonic> samsch: what's a common use for this? "static" methods?
[21:28:32] <bitonic> where `this` does not matter?
[21:29:46] <ljharb> functions where `this` does not matter could be static or instance; just like functions where `this` matters can be both.
[21:29:55] <ljharb> n> var a = Promise.all; a() @ bitonic
[21:29:55] <jellobot> bitonic, TypeError: Promise.all called on non-object
[21:30:12] <samsch> bitonic, Compiler output where it can't make the assumption. Often because named imports are compiled to something like `var import3 = require('package');` with usages like `import3.named`, and since that would give the wrong `this` value, they do `(0, import3.named)` for function calls
[21:31:19] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:31:29] <samsch> If you drop `import { foo } from 'bar'; foo()` into https://babeljs.io/repl you can see that in action
[21:31:53] <bitonic> samsch, ljharb : great, thank you!
[21:32:02] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[21:32:32] <samsch> wtf does Promise.all need Promise?
[21:32:40] <codebam> is this the right way to use an idle callback? https://pb.sbehan.ca/8BEP.txt
[21:33:41] <Rockwood> good night
[21:33:45] <banana_> o/
[21:33:50] <codebam> night Rockwood
[21:37:17] *** Joins: akk (~akk@75.161.146.115)
[21:40:24] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[21:41:25] <banana_> codebam: a react specific question?
[21:41:45] <banana_> https://ericlambrecht.github.io/react-timing-hooks/#useidlecallbackcallback-options
[21:42:19] <codebam> sort of yeah. I'm using a library called react-timing-hooks for the useIdleCallback method that uses window.requestIdleCallback
[21:43:00] *** Joins: federico (~federico@176.206.87.127)
[21:43:15] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:43:31] <codebam> I mean it seems to work
[21:43:48] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[21:44:15] *** Joins: ttys000 (~ttys000@user/ttys000)
[21:45:30] <banana_> not familiar with that library but sounds like useIdleCallback wraps a callback in a wrapper function, and if this wrapper function is invoked it won't invoke the callback until the browser triggers some idle event
[21:46:01] <banana_> or is that incorrect
[21:46:24] <codebam> no it triggers if the browser is active as well, just on the idle event loop
[21:48:35] <banana_> tbh not familiar with idle event loop you mentioned or "idle callback" mentioned in the docs but the docs states "as soon as the browser decides to run the idle callback"
[21:49:01] <banana_> so sounds like the browser triggers an idle event at some point
[21:49:28] <banana_> and useIdleCallback just registers on that event type
[21:49:28] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[21:50:25] <banana_> ... again sounds like if the return value of useIdleCallback is invoked
[21:50:32] <codebam> oh yeah it registers to be an idle event I guess, but in my usage it runs right away
[21:50:41] <codebam> at least when I tried using it
[21:50:50] <Alexendoo> codebam: If you're waiting 24 hours an extra idle callback seems a bit superfluous
[21:51:07] <Alexendoo> It'd be like 24hours and a millisecond
[21:51:08] <banana_> well when is the idle event triggered usually for implementations. youd think there's a standard
[21:51:44] <codebam> oh okay. should I remove it then and just use setTimeout?
[21:52:05] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[21:52:20] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:52:28] <banana_> umm idk sounds like Alexendo said your feature is a bit odd
[21:52:51] <banana_> so you want to do something 24 hours after a user action was done.
[21:53:09] <codebam> yeah I'm just stopping location tracking after 24 hours in case a user left it on by accident
[21:53:11] <banana_> like a user clicks a button and you want to make an ajax call 24 hours later
[21:54:00] <banana_> ah ok so you're like updating state or something if the user is idle
[21:54:20] <codebam> yeah exactly, when the component stops rendering the location tracking stops
[21:54:22] <banana_> however it works youre disabling a feature
[21:54:27] <codebam> so it's just a simple tertiary
[21:55:18] <banana_> to me that's not what useIdleCallback  is meant for. based on the example here: https://ericlambrecht.github.io/react-timing-hooks/#useidlecallbackcallback-options
[21:55:59] <Alexendoo> Yeah it's not that kind of idle, requestIdleCallback is for like the next moment there's some free time to run some JS. Not idle in the user sense
[21:56:03] <banana_> useIdleCallback's return function looks like it needs to be invoked first before the callback you wrap in it is called based on that idle event
[21:56:10] *** Joins: MickOfRivia (~Thunderbi@user/mickofrivia)
[21:56:20] <banana_> you could probably just register on that idle event yourself
[21:56:53] <banana_> ah thanks Alexendoo
[21:57:30] <banana_> sounds like you need to register to another event type but I don't know for sure or which one you should register on
[21:58:02] <codebam> oh I don't mind if it runs when the user isn't idle, at least I hadn't been trying to handle that
[21:58:32] <banana_> this might be closer what you want https://www.brcline.com/blog/detecting-inactivity-in-javascript
[21:58:43] <banana_> basically you decide what is considered "inactive"
[21:58:48] <codebam> going to check that out though, thanks
[21:59:26] <banana_> you dont mind if the tracking is disabled if the user isn't idle?
[21:59:51] <banana_> and no prob just wanted to ask that. sounded like you said before you only want to disable tracking when the user is inactive
[22:00:27] <banana_> I think we figured out by "idle" you meant "inactive" unless that's wrong
[22:00:32] <codebam> not really, it would be good to limit the length of sessions anyways and I don't think a session would ever be that long for my use case
[22:01:27] <banana_> you could do a simple setTimeout for that case as well but the inactive case is a separate use case even if they both do the same action
[22:03:41] <banana_> so for stop tracking https://hastebin.com/ikuzeyaxog.http
[22:04:29] *** Quits: amcsi (~amcsi@4F7A7C97.catv.pool.telekom.hu) (Remote host closed the connection)
[22:04:33] <banana_> that's your second case. and the other one you just need to follow that article and you'll figure it out. or find a third-party library that does this for you
[22:05:03] <banana_> or ask ljharb what library he uses for user inactivity
[22:05:46] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[22:06:13] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 268 seconds)
[22:06:19] <codebam> oh okay, that's basically what I have now. should I not use requestIdleCallback? I mean it doesn't make much difference I suppose
[22:06:43] <codebam> yeah I'd be interested in knowing if there's a good library for user inactivity actually
[22:07:38] <banana_> or check this out https://www.npmjs.com/package/react-idle-timer
[22:08:06] <banana_> yeah idle and inactive are used synonymously that's confusing af
[22:11:40] <codebam> oh yeah I was just reading the docs for that package. looks like it does exactly what I need
[22:11:46] <codebam> thanks
[22:13:02] <banana_> codebam: sounds like https://github.com/EricLambrecht/react-timing-hooks#why-bother is meant to help with using setTimeout in react projects
[22:13:32] <banana_> but doesn't look like the supports "user inactivity" it's not that big of a package
[22:13:39] <banana_> it supportss*
[22:14:05] <banana_> no prob
[22:24:10] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 260 seconds)
[22:24:40] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[22:28:08] *** Quits: src (~src@user/src) (Quit: Leaving)
[22:28:19] *** Joins: kogepan (~kogepan@188-177-18-45-dynamic.dk.customer.tdc.net)
[22:28:19] *** Quits: kogepan (~kogepan@188-177-18-45-dynamic.dk.customer.tdc.net) (Changing host)
[22:28:19] *** Joins: kogepan (~kogepan@user/kogepan)
[22:34:06] *** Joins: sembiance (~sembiance@108.170.16.18)
[22:34:57] *** Quits: Byteflux (~byte@byteflux.net) (Quit: ZNC - https://znc.in)
[22:46:07] <Decker> so... I have a site A, and it loads some stuff from A, and wants to load some stuff from B; I've figured out Access-Control-Allow-Origin; but one of the things things on B loads is a webservice from and for B, but the browser fails to run it, because it's not A origin;   Is forcing me to put this all in an iframe really so much better?
[22:46:32] <Decker> 2) re access-control-allow - why wouldn't I just copy origin to that always and just call it good - what's it matter who loads my script?
[22:47:30] *** Quits: eXistenZ (~biskit@2a02:14c:2a4:8000:1c80:eb65:17c8:aed0) (Ping timeout: 260 seconds)
[22:48:21] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:49:09] *** Joins: snedd (~snedd@86.14.114.137)
[22:49:46] *** Joins: teut (~teut@182.68.178.118)
[22:50:03] <teut> https://dpaste.org/scQO#L14,28  can someone tell what is happening in these two lines of code?
[22:50:27] <teut> I m working on a legacy shitbase
[22:51:04] *** night_wulfe_ is now known as night_wulfe
[22:51:05] <teut> in the axios call, it seems he replaced all the state variables
[22:51:45] <teut> and this kind of state assignment , did this work with clss components?
[22:53:12] <ljharb> samsch: for subclassing
[22:59:32] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[22:59:36] *** Joins: Byteflux (~byte@byteflux.net)
[23:02:19] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[23:04:00] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[23:06:10] *** Joins: conr (~conr@user/conr)
[23:08:52] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[23:09:37] <conr> has anybody got abbreviations to work with moment.tz? like `moment.tz("2021-01-01 00:00:00", "CST");`?
[23:09:50] <median> A pair of square brackets immediately after an expression, with another expression inside of them, will look up the element in the left-hand expression that corresponds to the index given by the expression in the brackets. - is this just a trick way of saying arr[expr] ?
[23:10:06] <conr> or do always have to use `America\Chicago`?
[23:10:10] <median> or expr = arr[expr] rather.
[23:10:26] *** Joins: tdaeayusr^^ (~tdaeayusr@70.166.66.234)
[23:12:56] <ljharb> median: yes, that's bracket notation
[23:15:57] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38b0:198a:d9c3:ffae) (Ping timeout: 256 seconds)
[23:23:40] *** Joins: pycode (~pycode@2001:b07:5d28:551:273:df77:e877:95dd)
[23:25:50] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 265 seconds)
[23:26:08] *** Joins: Ilyu (~quassel@212.102.57.87)
[23:26:19] <Alexendoo> conr: You use a named one like that yeah, because CST would be ambiguous
[23:26:19] *** Quits: MickOfRivia (~Thunderbi@user/mickofrivia) (Ping timeout: 265 seconds)
[23:27:59] <conr> Alexendoo: yeah i just read there's multiple CSTs so i need that level of specificity.
[23:30:14] *** Quits: nomic (~nomic@185.217.117.233) (Remote host closed the connection)
[23:32:54] *** Joins: pavonia (~user@user/siracusa)
[23:37:25] *** Joins: big_fat_zero (~big_fat_z@208.76.192.68)
[23:44:08] *** Joins: nomic (~nomic@185.217.117.233)
[23:46:12] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[23:46:13] *** Joins: MickOfRivia (~Thunderbi@user/mickofrivia)
[23:46:58] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: WeeChat 3.0)
[23:47:27] *** Joins: artuando (~user@optimatrade.xyz)
[23:47:32] *** Quits: MickOfRivia (~Thunderbi@user/mickofrivia) (Client Quit)
[23:49:50] *** Parts: artuando (~user@optimatrade.xyz) (ERC (IRC client for Emacs 26.3))
[23:53:29] *** Joins: Naan (~naan@user/naan)
