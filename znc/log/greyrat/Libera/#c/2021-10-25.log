[00:00:52] <Klinda> to check if the pointer is null just do if (!src) { do the stuff} ?
[00:00:58] <pragma-> Oh my god.
[00:01:01] <APic> Goddess.
[00:01:06] <APic> Hail Eris!
[00:01:14] <pragma-> This isn't #hold-your-hand-and-teach-you-C-while-you-do-no-effort
[00:01:19] <APic> Indeed.
[00:01:41] *** Joins: seninha (~seninha@user/seninha)
[00:01:54] <APic> But maybe you can make a very small script for candide that succeeds at just this.
[00:02:26] <APic> Even completely without artificial neuronal networks.
[00:02:29] <pert> but to answer your question, Klinda, yes, that's a good way to do the stuff only if the pointer is not NULL
[00:02:47] *** Joins: [R] (~rs@genoce.org)
[00:03:01] *** Joins: Lykaina (~Lykaina@cpe-67-255-96-229.stny.res.rr.com)
[00:03:46] <strajder> rather, if it is NULL, lol
[00:04:11] <strajder> if not NULL would be: if (src) { /* do stuff */ }
[00:04:24] <Lykaina> can the ternary operator be a condition in a switch block?
[00:04:40] <pragma-> It's called the conditional operator. 
[00:04:51] <pragma-> Being ternary is just a property of it, not its name.
[00:05:01] <Lykaina> i forgot...
[00:05:24] <pragma-> Granted it's currently the only operator that is ternary, but this could change one day.
[00:05:29] <APic> Good thing that C has no spaceship operator like the Perls.
[00:06:24] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[00:06:52] <ski> Lykaina : condition ?
[00:07:00] <Lykaina> switch(x){case ((x>=0)?0:1) y++;};
[00:07:11] <Lykaina> is that valid?
[00:07:19] <ski> i'm pretty sure not
[00:07:36] <Klinda> sorry guys to ask newbie questions
[00:07:58] <pragma-> The expression of a case label must be an integer constant expression.
[00:08:34] <Lykaina> i thought all constants were variables
[00:08:42] <ski> (i'm slightly curious about what you were hoping to express, there ..)
[00:08:58] <strajder> constant is the exact opposite of a variable :)
[00:09:04] <pragma-> "constant" and "variable" are polar opposites. 
[00:09:05] <strajder> it's in the name
[00:09:38] <Lykaina> constant is a variable with a don't-change-me flag
[00:09:47] <pragma-> That's a const.
[00:10:06] <Klinda> I have a background in java and python, for me C it's very hard to understand
[00:10:27] <Thedarkb-Desktop> I tend to have the opposite issue.
[00:10:29] <pragma-> In C, a "constant" is a literal, not to be confused with a const-modified object.
[00:10:36] <ski> `12' is a constant
[00:10:45] <Lykaina> ah
[00:11:10] <Lykaina> sorry for confusing constats and consts
[00:11:20] <pragma-> Kind of C's fault.
[00:11:31] <pragma-> C has a lot of weird historical naming conventions.
[00:11:36] * pragma- glares at "char" instead of "byte".
[00:11:45] <Thedarkb-Desktop> Makes total sense to me.
[00:11:58] * ski stares blankly
[00:12:02] <Thedarkb-Desktop> A char might not be a byte on a DSP.
[00:12:25] <Thedarkb-Desktop> Anyone in here have any experience with Libtcc, I'm having issues linking it.
[00:12:53] <gl> one octet you mean
[00:13:02] <Thedarkb-Desktop> https://dpaste.com/74FS5V254
[00:13:06] <Thedarkb-Desktop> Here's my Makefile.
[00:13:09] <Thedarkb-Desktop> Wait
[00:13:13] <Thedarkb-Desktop> That's for #workingset isn't it.
[00:13:28] <Thedarkb-Desktop> Abort question.
[00:13:41] <APic> Thedarkb-Desktop: CHAR_BIT is still set
[00:14:46] *** Quits: bogdomania (bogdomania@user/bogdomania) (Quit: Konversation terminated!)
[00:16:19] *** Quits: strajder (~strajder@user/strajder) (Quit: nn)
[00:17:41] *** Joins: haise01 (~haise01@user/haise01)
[00:20:00] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[00:22:17] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Ping timeout: 264 seconds)
[00:24:53] *** southey is now known as foxtrot
[00:26:23] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[00:27:49] <pragma-> Klinda: Sorry if I was a bit of a jerk. It's just that one would expect someone to know the basics of string representation if they're going to manipulate strings. If you don't know any C at all, there are plenty of free C books available online. We had a #c-basic channel for beginner/basic questions at one point, but it wasn't populated by #c regulars and so the answers there were usually given by
[00:27:49] <pragma-> other beginners like Thedarkb-Desktop.
[00:28:15] <Thedarkb-Desktop> I never idled in there.
[00:28:29] <pragma-> (I just wanted to call you a beginner.)
[00:28:51] <Thedarkb-Desktop> Why, am I missing something obvious or something with my Makefile?
[00:28:58] <pragma-> With `char`.
[00:29:08] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Quit: Leaving)
[00:31:24] *** Quits: Daemonick (~Daemonick@77.49.243.254.dsl.dyn.forthnet.gr) (Ping timeout: 244 seconds)
[00:31:55] <Thedarkb-Desktop> Oh fuck off, char having to be a byte is just a POSIC thing.
[00:32:03] <Thedarkb-Desktop> s/POSIC/POSIX
[00:32:06] <Klinda> thank you pragma- :)
[00:32:13] * pragma- stares at Thedarkb-Desktop
[00:32:27] <pragma-> char is always a byte.
[00:32:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[00:32:51] <pragma-> a byte might not always be an octet though.
[00:32:56] <pragma-> that's why CHAR_BIT exists
[00:33:06] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:34:30] <Thedarkb-Desktop> Ah, I was taking byte to mean eight bits, I should've said octet.
[00:34:34] <Thedarkb-Desktop> Nevermind.
[00:36:22] <earnestly> (fortunately stdint.h exists now)
[00:37:22] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[00:37:36] *** Quits: kadavul (~vazha@103.165.20.239) (Ping timeout: 244 seconds)
[00:37:52] <Thedarkb-Desktop> I always just use uint8_t
[00:38:14] <pragma-> But why?
[00:38:56] <pragma-> 9 times out of 10, someone using intN_t instead of int_leastN_t is just making their program less portable for no real reason.
[00:39:26] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[00:39:27] *** Quits: magla (~gelignite@55d4df94.access.ecotel.net) (Quit: Stay safe!)
[00:41:24] <Thedarkb-Desktop> I use it for the tilemaps in my project, my target only has 256KB of RAM with an additional 32KB scratchpad.
[00:42:04] <Lykaina> arduino?
[00:42:24] <Thedarkb-Desktop> GBA
[00:42:43] <Lykaina> that still exists?
[00:42:48] <Thedarkb-Desktop> No, it's a hobby project.
[00:42:55] *** Joins: kadavul (~vazha@103.165.20.239)
[00:42:55] <Thedarkb-Desktop> I use Go for stuff I get paid for.
[00:43:46] <pragma-> I uploaded a zip of 500 or so GBA ROMs to my phone and I use a GBA emulator to play GBA games on it instead of shitty mobile games.
[00:44:14] *** Quits: kucha (~kucha@188.163.84.183) (Quit: WeeChat 3.2)
[00:44:35] <Thedarkb-Desktop> It generates the tilemaps on the fly and they're 17k each.
[00:44:37] <pragma-> Many GBA games work well for this. Especially turn-based games like Advance Wars or Final Fantasy.
[00:45:53] <pragma-> Oh nice, they're "remastering" the Advance Wars games for the Switch.
[00:46:15] <pragma-> smh, 3d models instead of 2d sprites.
[00:46:21] *** Joins: codemin (~codemin@185.232.22.196)
[00:46:26] <pragma-> https://www.theverge.com/2021/10/22/22740195/nintendo-advance-wars-1-2-re-boot-camp-switch-switch-remaster-delay
[00:46:44] <Thedarkb-Desktop> The 17k is taken up by a 32x32 top layer, a 32x32 bottom layer, bit fields for collisions, and a pointer to an initialiser function.
[00:47:31] <Thedarkb-Desktop> I don't particularly care if using uint8_t makes things less portable because it won't be an issue, who plays Roguelikes on DSPs :P
[00:48:45] <pragma-> But if you used int_least8_t, it'd still pick int8_t on your system and something slightly bigger on systems that don't have an 8-bit type. So 99% of the time it'd be int8_t, and in the rare cases you want to build it on a weird system, it'll still build.
[00:49:25] * pragma- shrugs.
[00:49:38] <pragma-> Portability was always one of C's biggest and most primary goals.
[00:49:52] *** Joins: Darkcoal (~user@2001:16a2:7a46:cb00:d474:14ff:fe1f:8b12)
[00:50:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[00:50:40] <pragma-> These 3d models are terrible, in the Advances Wars reboot.
[00:51:37] <Thedarkb-Desktop> The GBA has a bitmap mode but it chugs.
[00:51:59] <Thedarkb-Desktop> Didn't stop someone porting SDL to it, which also chugs as a result of only dealing with bitmaps...
[00:53:23] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[00:54:49] *** Quits: chickfilla (~lastc@modemcable058.200-162-184.mc.videotron.ca) (Read error: Connection reset by peer)
[00:56:57] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:58:32] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[00:58:36] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[00:59:00] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[01:00:40] *** Quits: mahmutov (~mahmutov@37.155.35.85) (Ping timeout: 252 seconds)
[01:05:03] *** Quits: Darkcoal (~user@2001:16a2:7a46:cb00:d474:14ff:fe1f:8b12) (Quit: Darkcoal)
[01:05:45] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:08:33] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[01:14:38] <Klinda> another problem of strlen could be also if I have an input a string that is not terminated, so I think is safe to check if the string is terminated or not before computing it
[01:16:13] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:16:29] *** Quits: Crescendo (~Crescendo@user/crescendo) (Remote host closed the connection)
[01:17:22] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[01:19:11] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:19:20] *** Joins: satanist (~satanist@bureaucracy.bureaucracy.de)
[01:19:34] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:20:37] *** Quits: Narrat (~omnius@p200300df5f49119906ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:23:03] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:29:04] *** Quits: rgrinberg (~textual@ip11-246-50-179.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:29:09] <twkm> if it isn't terminated it isn't a string, by definition since string is formatting of data not a type.
[01:29:52] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[01:33:28] <BtbN> How do you even check if it's terminated, without doing practically exactly what strlen does? And at what point do you know "yeah, this isn't ending"? :D
[01:33:34] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 258 seconds)
[01:34:11] <pragma-> If you have an array, you can sizeof it for the maximum limit.
[01:34:33] <twkm> most mean using memchr, though how they choose the limit then becomes key.
[01:35:43] <BtbN> Well, after using memchr, you don't need to call strlen anymore.
[01:35:51] <twkm> indeed.
[01:35:56] *** Joins: johnjay (~pi@192.142.100.50)
[01:36:35] <twkm> strlen_s is an attempt to bounds limit the check, as an almost drop-in replacement for strlen.
[01:37:25] <BtbN> Isn't it strnlen_s?
[01:37:30] <Klinda> is not possibile to do a buffer overflow with strlen?
[01:37:31] <twkm> or that one.
[01:37:31] <BtbN> And not exactly portable either?
[01:37:32] <pert> POSIX and Windows also has strnlen
[01:38:01] <twkm> memchr requires pointer math to arrive at the length, and perhaps a check for no byte found.
[01:38:04] *** Quits: deavmi (~tbk@user/deavmi) (Ping timeout: 252 seconds)
[01:39:29] <Klinda> that the function returns zero if str is a null pointer and returns strsz if the null character was not found in the first strsz bytes of str.
[01:39:48] <twkm> of course the annex k functions are optional and potentially mean someone threw in a handler that means you potentially don't get control back after the call.
[01:40:43] *** Quits: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net) (Quit: b1101)
[01:40:43] <twkm> ... can be a pita.  or not.
[01:42:02] <Klinda> but with that function I don't know the length of the string 
[01:42:06] *** Quits: Akuli (~Akuli@213.216.211.158) (Quit: Leaving)
[01:42:07] <Klinda> xD
[01:42:54] <twkm> annex k tried to handle all the usual problem cases reasonably -- you are not allowed to pass strlen a null pointer so you have undefined behavior, where strnlen_s provides a definition even if it doesn't make sense to everyone.
[01:43:26] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:45:08] <Klinda> I mean what if I count each character, but I think that could be a problem (I read other locations)
[01:46:56] <twkm> annex k doesn't make c safe.  good code is still needed, ms just felt that some things could be safer than they are -- others have similar attempts at more (not absolute) safety such as strnlen.
[01:47:18] <Klinda> if you don't know the size of the string, what can you do?
[01:50:07] <twkm> better to ensure you don't produce such.  but, some would write code that handles no termination as if it were zero length, don't try touching any of the bytes.  others would use the potential length (e.g., array size) as the length.  others would force termination whether that truncates or not.
[01:51:27] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[01:51:48] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[01:51:50] <twkm> sometimes abort() is the right thing -- you do ensure you don't produce such but there's one anyway so something bad must be going on.  which is best if you failed to ensure it is a valid string depends on the remainder of the code.
[01:51:51] *** Joins: Thane (~Thane@host-216-158-109-204.junet.se)
[01:52:41] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[01:52:57] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[01:54:08] *** Parts: Lykaina (~Lykaina@cpe-67-255-96-229.stny.res.rr.com) (Leaving)
[01:54:37] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[01:57:10] *** Quits: lovelace (~Elspeth@2.24.23.175) (Quit: Konversation terminated!)
[01:57:20] <Klinda> an attacker can exploit these things?
[01:57:27] <Klinda> what is the best solution?
[01:57:48] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:00:30] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[02:00:30] <twkm> depends on the code.  abort, presume 0, presume max, force termination, try again, ...
[02:01:12] <Klinda> what if I give in input the 'possibile' size of the string?
[02:01:59] <Klinda> so then the user should be call it in a right way, but this is maybe bad
[02:03:40] <Klinda> C is a trip aahah 
[02:04:24] <twkm> fgets will (provided it doesn't return a null pointer) always produce a string and never writes more than you allow, but you still have to get the limit correct.
[02:06:31] *** Joins: wroathe (~wroathe@user/wroathe)
[02:07:26] <Klinda> 1) using strlen inside is risky 2) using strlen in external way is risky too, but the function is safe and depends on you, not on me to work well
[02:09:02] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 244 seconds)
[02:11:39] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:12:40] <Klinda> fgets I think is not my cause cause it reads from a file
[02:16:24] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[02:17:40] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 260 seconds)
[02:20:26] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:20:59] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[02:22:17] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[02:25:34] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 244 seconds)
[02:27:03] <Feuermagier> strncmp will only compare up to the first nullbyte, right?
[02:28:31] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:29:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[02:30:02] <twkm> yes Feuermagier.
[02:30:29] <twkm> it reads from a stream, which is what stdin is Klinda.
[02:30:49] <Feuermagier> twkm, someone here is comparing hashes with strncmp :)
[02:32:26] <twkm> provided Feuermagier doesn't use too small a limit that should be okay.
[02:32:36] <BtbN> Depends
[02:32:45] <BtbN> the raw binary form of the hash? Or a string representation?
[02:32:50] <Feuermagier> twkm, not if you compare the raw bytes of yor hash :)
[02:33:34] *** Quits: pizdets (~pizdets@183.182.110.93) (Ping timeout: 260 seconds)
[02:33:37] <Klinda> well I will do it tomorrow, now I have to go, goodnight all and thanks
[02:33:48] *** Joins: pizdets_ (~pizdets@183.182.111.255)
[02:33:54] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:35:48] <twkm> true -- it isn't a string making use of strncmp a mistake.
[02:35:54] <twkm> err, if it isn't ...
[02:37:13] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:37:46] *** Quits: random-nick (~random-ni@87.116.183.63) (Ping timeout: 260 seconds)
[02:39:00] *** Joins: lkor (~lionkor@i577BC4B4.versanet.de)
[02:39:16] *** Quits: lionkor (~lionkor@200116b80f0aa8007285c2fffea63d72.dip.versatel-1u1.de) (Ping timeout: 265 seconds)
[02:41:03] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 265 seconds)
[02:42:59] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[02:44:24] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:46:17] *** Joins: wootz (~wootz@2806:1000:8000:5352:4ce5:a901:c8e1:e422)
[02:50:43] *** Joins: ferdna (~ferdna@user/ferdna)
[02:52:26] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 244 seconds)
[02:54:04] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[02:54:25] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[02:54:27] *** Joins: Wulf (~Wulf@user/wulf)
[03:03:05] <alien_lappy> i have a uint32_t field in a structure (it's like a flags field) and i have a structure type with each flag element in it, but casting the uint32_t to a struct does not seem to work... do i need to get a reference, typecast then and then deref again, for this to work?
[03:03:18] <alien_lappy> it seems overkill just for casting
[03:03:34] *** Quits: Thane (~Thane@host-216-158-109-204.junet.se) (Quit: .)
[03:04:03] <pert> can you provide an example? I'm not sure I understand what you mean by having a structure type "with each flag element in it"
[03:04:11] <alien_lappy> ok
[03:05:33] *** night_wulfe_ is now known as night_wulfe
[03:08:39] <fizzie> If it's what I'm imagining, and if you want to do a lot of reinterpreting the uint32_t field as that other struct type, and don't mind the fact that it almost certainly involves some implementation-defined aspects, chances are you want to replace that uint32_t field with a (possibly anonymous) union of uint32_t and that other struct.
[03:09:02] *** Quits: alch (~alch@151.36.163.144) (Ping timeout: 260 seconds)
[03:10:40] *** Joins: alch (~alch@151.36.187.85)
[03:12:21] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:14:33] <alien_lappy> pert: fizzie: https://pastebin.com/VY3GHJum
[03:15:44] <alien_lappy> fizzie: yeah, trouble is the modular setup of this, i would need to make union of all possibilities of all the modules as a union type... :-(
[03:16:27] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:18:02] <fizzie> That's... slightly problematic anyway, because it's not like your `bar_status_data_t` type would be exactly 27 bits wide. And given those member types, I think it's quite unlikely all those bits are laid out exactly the way you'd want.
[03:18:32] <alien_lappy> it would be like the struct sockaddr_in* stuff i'd have to gather it all, and make a sockaddr_in_storage field that's as large as the largest...
[03:18:55] <alien_lappy> fizzie: how do you mean? why would those bits not work the way i'd want?
[03:19:21] <alien_lappy> i took care to set them all exactly right
[03:19:45] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[03:20:56] <fizzie> ,cc struct { uint8_t a:3; uint8_t b:5; uint8_t c:3; bool d:1; uint16_t e:15; } s; s.a = 0x7, s.b = 0x1f, s.c = 0x7, s.d = 1, s.e = 0x7fff; uint32_t u; memcpy(&u, &s, sizeof u); printf("%08"PRIx32, u); // they're not 27 consecutive bits, for one thing
[03:20:59] <candide> fizzie: 7fff0fff
[03:21:18] <alien_lappy> the bar type is 27bits, the resulting type would be 32bits, the setting would cut off the highest 5 bits
[03:21:54] <fizzie> There's a gap in the middle, as seen in the above example.
[03:22:00] <alien_lappy> ic, the bool?
[03:22:23] *** Joins: Jacki (~Jackiiii@93-44-189-228.ip98.fastwebnet.it)
[03:22:26] <fizzie> It's more because the `uint16_t`-typed member `e` can't be packed into the same byte-sized storage unit used for `c` and `d`.
[03:22:42] <fizzie> (To reiterate, it's all implementation-defined.)
[03:22:51] <alien_lappy> ic
[03:23:16] <fizzie> If you want to specify the layout of a 32-bit thing with bitfields, it's probably a good idea to make all the bit-field members have `uint32_t` as the base type.
[03:23:17] <katnis> is Big-O notation important?
[03:23:23] <alien_lappy> i guess back to macro's on uint32_t types then
[03:24:28] <fizzie> Well, FWIW, one thing you can do (if putting the union in the original struct isn't an option) is to write some conversion functions, along the lines of https://ideone.com/zg0sX0.
[03:24:29] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 244 seconds)
[03:26:05] <alien_lappy> ic, the union type with the base type on the module side... interesting
[03:26:16] *** Joins: rgrinberg (~textual@201.182.226.118)
[03:26:18] *** Joins: KillerWasp (KillerWasp@user/killerwasp)
[03:26:20] <KillerWasp> hello
[03:26:30] <KillerWasp> Does anyone here have the guts to wallow in the C code? :/
[03:27:03] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[03:27:57] <ski> katnis : it's good to have a basic idea of which is greater and less, and what linear, quadratic, logarithmic, exponential means, roughly, in practice
[03:28:26] <ski> katnis : knowing the exact definition of Landauer notation by hard is not as essential (though it might be nice to've grokked it, at some point)
[03:28:27] <lkor> anyone got an idea what a good http server benchmark is? I tried `siege` and `wrk 
[03:28:32] *** lkor is now known as lionkor
[03:29:07] <katnis> AHHH too hard for noob like me but thank you
[03:29:08] <ski> katnis : being able to analyze an algorithm, to determine its (time or space) complexity is obviously useful
[03:30:20] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:32] <katnis> time to study moreeeeeeeeeee
[03:30:44] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:09] <ski> e.g. if you have a loop, repeating something (that takes a fixed time), `n' times, then that's linear (in `n'). if you have an inner loop, also repeating `n' times (e.g. iterating over a `n'-by-`n' table/matrix/array), then that's quadratic. if the inner loop only walks over say the triangle under the diagonal of the table, that's still quadratic
[03:31:59] <katnis> sounds like table matters :D
[03:32:03] <ski> if you have a sorted list of stuff, and look for an item in it, jumping to the middle to determine whether it's left or right, and then seach either the left or the right half, dividing it into half in the same way .. then that's logarithmic
[03:32:41] <ski> (this is basically what people used to do, when looking up phone numbers, or addresses, of people, given name. or look up a word in a dictionary)
[03:32:59] <katnis> is it normal if i am feeling pressured
[03:33:02] <katnis> i am scared
[03:33:17] <ski> anyway .. as long as you keep an interest, these things will come naturally
[03:34:02] <katnis> i hope sooooooooooo ahrghsdaofh
[03:34:35] <ski> relax. you're not the first to start learning such stuff. it all seemed a bit strange to us, to begin with
[03:34:53] <katnis> means a lot. heh
[03:35:44] <ski> don't forget to feed your curiosity, and to have fun along the way
[03:35:58] <ski> (learning stuff is greatly helped by having fun)
[03:36:05] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:36:43] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:36:58] *** Quits: Jacki (~Jackiiii@93-44-189-228.ip98.fastwebnet.it) (Quit: Leaving)
[03:38:57] * ski meows lazily
[03:40:51] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:88b9:35fc:7cfe:4fea)
[03:41:44] <LTCD> Hello. I just finished a C project for Windows (yes, I still code C for Windows). I was wondering if someone could recommend a design pattern I could apply, such as COM? The program itself has no GUI, it runs in the background performing management tasks.
[03:42:57] <floatcomplex> does it already work, without any of that bs?
[03:43:13] <LTCD> I know I can split the code from main into several functions, perhaps put that code into several different .c files, and put any defines within their own .h file. I have been using Hungarian Notation, code comments, and it is properly formatted.
[03:43:17] <LTCD> floatcomplex Yes, perfectly.
[03:43:27] <tk> >hungarian notation
[03:43:32] <tk> are you trying to impress bill gates?
[03:43:40] <LTCD> haha 
[03:43:43] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:43:43] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:43:43] *** Joins: wroathe (~wroathe@user/wroathe)
[03:44:08] <LTCD> Anyway, so if COM is out, what would you lot recommend? It is for brownie points on my portfolio, shows I can do it.
[03:44:31] <tk> I know
[03:44:36] <tk> This one is going to be deadly
[03:44:47] <LTCD> ?
[03:44:52] <tk> Write a sensible C library on top of ODBC
[03:45:03] <tk> something which a normal human being might actually want to write code for
[03:45:24] <LTCD> tk But I have already wrote a project, now I just want a design pattern to follow.
[03:45:26] <tk> it has to do error handling correctly, distinguishing in a non-insane way between different types of errors
[03:45:26] <floatcomplex> ability to write maintainable code is more important than experience with any specific widget
[03:45:47] <tk> if you can do that I'll help you get a job anywhere you want
[03:45:56] *** Joins: imp (~imp@192-141-191-231.alternativaip.net.br)
[03:46:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:47:08] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:47:10] <tk> It's so weird, I can't imagine what kind of job you're applying for if the person interviewing you is going to care about what design pattern you used in your windows C program.
[03:47:57] <LTCD> So everyone on this IRC channel just writes code, without following where possible a design pattern?
[03:48:40] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[03:48:45] <tk> Just make sure it works, is readable (i.e. not hungarian notation) can be understood mostly without comments and is either small enough that you can throw it out and replace it when it inevitably is not the right fit for the task anymore or is designed in such a way that if the task changes slightly it's not impossible to modify it quickly even if you've forgotten you ever wrote it.
[03:50:24] <tk> And no, design patterns are not a term which is often heard in the realm of C. C may have boilerplate but C programmers are smart and know how to hide it. Design patterns seem to have come out of the world of java where the language is so verbose, has so many shortcomings and requires so much boilerplate that people quickly started getting lots in forests of boilerplate. So to make sense of it all some
[03:50:26] <tk> smart people abstracted out common boilerplate patterns, called them "design patterns" and wrote books about them.
[03:50:38] *** Joins: deavmi (~tbk@user/deavmi)
[03:50:39] <tk> s/lots/lost/
[03:51:10] *** Quits: subdelusional (~user@188.249.169.186) (Quit: ERC (IRC client for Emacs 27.2))
[03:51:22] <tk> In C we have idioms. Which are really a microscopic version of design patterns. Usually fitting within a line. They're usually to avoid certain shortcomings of the language.
[03:51:43] *** Quits: AmR (~AmREiSa@156.199.106.121) (Ping timeout: 252 seconds)
[03:52:01] <tk> They're still a form of planned boilerplate but there's a handful of them and they're not so colossally complex that people have invented new modelling languages to describe them.
[03:52:58] <floatcomplex> q^
[03:53:09] <floatcomplex> s/q//
[03:54:00] <floatcomplex> the "design pattern" i follow where applicable is structured concurrency. it's not always applicable at the per-process level though- most of the code i write is small standalone things
[03:55:39] <floatcomplex> and yeah, absolutely no code is sacrosanct
[03:55:39] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[03:55:58] <LTCD> tk: That is so funny because I know you are correct. What are idioms though?
[03:56:10] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[03:56:26] <tk> ,mallocidiom
[03:56:27] <candide> T *p = malloc(sizeof *p) is more robust than T *p = malloc(sizeof (T)) because sizeof *p will always be the correct size of T and it prevents unnecessarily repeating the T (DRY principle). If sizeof (T) is used and later one of the T's is changed there will be a mismatch. T *p = malloc(sizeof *p) is more concise and easier to read, especially when T is a compound type.
[03:56:34] <floatcomplex> what is most important, in institutional knowledge, is remembering what did NOT work well, and was factored out. ie the current codebase should not represent that very important knowledge
[03:56:35] <tk> An example^
[03:57:13] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[03:57:28] <floatcomplex> ugh i hate that idiom
[03:57:37] <tk> what's wrong with it?
[03:58:19] <floatcomplex> technically nothing but there are far more harmful ubiquitous things that people do, i hate elevating this to the same status
[03:59:07] <tk> Okay, but an example of something to avoid is not exactly the same thing
[04:00:54] <floatcomplex> i would say avoiding typedefs of pointer types to things that look like non pointer types is a far more important rule to follow than strict adherence to ,mallocidiom, for example
[04:01:29] <tk> ,typedef
[04:01:29] <candide> Blindly typedefing all structs "just because" is one of the greatest abuses of typedefs in C -- don't do this. Only typedef structs when they are supposed to be opaque types that are manipulated strictly via accessor/mutator functions. Never use typedef to create a pointer type.
[04:01:30] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[04:01:36] <tk> hmm
[04:01:39] <tk> where was the pointer one?
[04:01:42] <floatcomplex> typedefs in general ofc, but some are worse than others
[04:01:45] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[04:02:24] <floatcomplex> ,lsidiom
[04:02:43] <floatcomplex> ,idiom
[04:02:44] <candide> floatcomplex: (1 results) Advanced Logical Type Systems for Untyped Languages: <https://pnwamk.github.io/docs/dissertation.pdf>
[04:02:48] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[04:02:52] <floatcomplex> ugh
[04:03:09] <floatcomplex> mooom how do i work this stupid bot
[04:03:12] <tk> might be worth sorting these out one day
[04:03:25] <tk> ,help
[04:03:25] <candide> For general help, see <https://github.com/pragma-/pbot/tree/master/doc>. For help about a specific command or factoid, use `help <keyword> [channel]`.
[04:03:41] <tk> ,factfind idiom
[04:03:41] <candide> Found 5 factoids containing 'idiom': [#c] !! fgets.idiom initidiom nelemof [global channel] idiom
[04:03:53] <tk> ,initidiom
[04:03:54] <candide> A common idiom for zero initializing elements of arrays or members of structs (automatic storage duration) is: char arr[10] = { 0 }; struct { i​nt x; i​nt y;} s = { 0 };
[04:04:53] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[04:05:01] <tk> Maybe it's time to get whoever has permissions to give out wiki users to get some users and put some page proposals
[04:05:17] <tk> for idioms, pitfalls, things to avoid
[04:06:06] <tk> I mean, the most egregious thing people always do in C is assume they know how C is defined to behave in a particular situation
[04:06:23] <floatcomplex> avoid writing code in general
[04:06:28] <tk> well yes
[04:06:41] *** Joins: teepee (~teepee@openscad/teepee)
[04:07:19] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:08:01] <LTCD> What is wrong with initidiom?
[04:08:20] <floatcomplex> nothibg
[04:08:31] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[04:09:17] <LTCD> Night everyone!
[04:14:01] *** Quits: LTCD (~LTCD@2a02:c7f:dd1c:b600:88b9:35fc:7cfe:4fea) (Quit: Client closed)
[04:15:54] <katnis> korea is already monday morning... i m  so jealous :/ i wanna sleep more
[04:16:01] *** Joins: chenqisu1 (~xirndc@183.217.203.91)
[04:17:25] *** Quits: deck4rd (~deckard@ec2-3-129-211-221.us-east-2.compute.amazonaws.com) (Quit: see ya l8r)
[04:17:51] *** Joins: godkernel (~kennet@2804:431:e7d8:8763:cc5a:ad17:59cd:b71a)
[04:18:06] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:21:49] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[04:23:17] *** Joins: quartz (~quartz@user/quartz)
[04:28:44] *** Joins: seninha (~seninha@user/seninha)
[04:28:53] *** Quits: rgrinberg (~textual@201.182.226.118) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:29:22] *** Quits: marcello42 (~mp@p5dedb36a.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[04:30:06] *** Quits: kadavul (~vazha@103.165.20.239) (Ping timeout: 244 seconds)
[04:30:37] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 244 seconds)
[04:34:14] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[04:35:34] <owensjrw> I know this is more of a system question but why when I try to compile a C program with Gtk h files does it always error out. I have used find / -name gtk*.h and have files on the computer. And they look to be in the folders which are child to $PATH.
[04:35:43] *** Joins: kurahaupo (~kurahaupo@pa49-181-167-244.pa.nsw.optusnet.com.au)
[04:36:21] <owensjrw> **qtk **Gtk.h
[04:38:20] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:38:42] <fizzie> $PATH isn't usually relevant for where a compiler goes looking for include files in. You may be missing some `-I` flags for the compiler. And I wouldn't try to build GTK+ programs by hand; that's what things like pkg-config is for.
[04:39:59] <fizzie> (For example, on this system `pkg-config --cflags --libs gtk+-3.0` produces a preposterous amount of flags to use.)
[04:40:31] <owensjrw> Reading the man pkg-config right now.
[04:43:08] <owensjrw> so much to learn before I retire and need another job...
[04:43:21] <owensjrw> Thanks fizzie :-)..
[04:43:31] *** Joins: kadavul (~vazha@103.165.20.239)
[04:49:13] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 244 seconds)
[04:52:20] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:52:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[04:53:50] <katnis> `this is cool`
[04:55:13] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[04:58:59] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:00:15] *** Joins: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it)
[05:00:42] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[05:03:23] *** Quits: The_Jag_ (~The_Jag@host-87-15-17-212.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[05:08:33] *** Joins: wroathe (~wroathe@user/wroathe)
[05:08:47] *** Quits: moefh (~MoeFH@189-18-52-137.dsl.telesp.net.br) (Quit: Leaving)
[05:10:53] *** Quits: lionkor (~lionkor@i577BC4B4.versanet.de) (Ping timeout: 265 seconds)
[05:16:03] <floatcomplex> re: the sentinel thing, no, neither gcc nor clang are not smart enough to optimize an O(n) loop over pointer equality comparison into an O(1) absolute address range comparison
[05:16:20] <floatcomplex> s/are not smart enough/are smart enough/
[05:16:27] <floatcomplex> ...they don't do it
[05:16:35] *** Joins: Player001 (~Player001@user/player001)
[05:20:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:25:26] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[05:30:02] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[05:30:03] <SamuelMarks> hi
[05:30:17] <SamuelMarks> Is size_t guaranteed to take up the same amount of memory as ssize_t?
[05:31:19] <floatcomplex> probably. but ssize_t is a less useful type than you'd think
[05:32:01] *** Joins: v- (~gary@user/ghost)
[05:32:46] *** Quits: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[05:34:35] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 264 seconds)
[05:34:36] <fizzie> From just the other day: <fizzie> I think ssize_t isn't even strictly speaking required to be the corresponding signed type of size_t. (It'd be weird to make it anything else; but POSIX just describes it as a signed integer type used "for a count of bytes or an error indication".)
[05:34:41] *** Quits: deavmi (~tbk@user/deavmi) (Ping timeout: 258 seconds)
[05:34:57] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:35:33] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[05:35:47] *** Quits: kadavul (~vazha@103.165.20.239) (Ping timeout: 264 seconds)
[05:36:44] *** Joins: deavmi (~tbk@user/deavmi)
[05:38:32] <floatcomplex> size_t can be counted upon to represent [-1, some positive number]
[05:38:32] <SamuelMarks> fizzie / floatcomplex  - Yeah I'm getting annoyed at this TensorFlow guy for wanting me to use ssize_t rather than the type of the size index itself (size_t)
[05:38:34] <floatcomplex> not very useful
[05:39:08] <floatcomplex> SamuelMarks: does it have functions that return -1?
[05:39:44] *** Joins: malloy (~jimery@116.30.221.89)
[05:40:08] <floatcomplex> SamuelMarks: you could static_assert that ssize_t(-1) and (size_t)SIZE_MAX have the same bit pattern and then just unilaterally define your prototypes to their functions as returning size_t
[05:40:12] <floatcomplex> what could go wrong lol
[05:40:23] <katnis> m o n d a y
[05:40:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[05:40:34] <katnis> does anyone like monday?
[05:40:44] <floatcomplex> if they are returning values more negative than -1 they are using ssize_t incorrectly
[05:40:51] <SamuelMarks> floatcomplex - No it never goes below 0
[05:41:09] <floatcomplex> then what the frick frack cracker jack
[05:41:11] <SamuelMarks> katnis: Sunday still here
[05:41:16] <katnis> where are you
[05:41:20] <SamuelMarks> USA
[05:41:23] <katnis> i am booking my plane ticket right now
[05:41:31] <katnis> east ? west?
[05:41:35] <SamuelMarks> East
[05:41:40] <katnis> sounds good
[05:41:44] <SamuelMarks> Getting cold
[05:41:58] <katnis> here already hit negative
[05:42:21] <SamuelMarks> floatcomplex - Do you agree with my philosophy, to always match the iterator type with the size type being compared against?
[05:42:39] <SamuelMarks> (or the TensorFlow guy's… to use unsigned equivalent type)
[05:43:01] <SamuelMarks> katnis: negative kelvin? - Where are you, Russia?
[05:43:08] <katnis> south korea
[05:43:22] *** Joins: aportnoy1 (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[05:43:24] <SamuelMarks> Good to hear you're not IRCing from North Korea
[05:43:26] *** Joins: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com)
[05:43:26] <katnis> have you heard of korea?
[05:43:41] <katnis> its a third world country
[05:44:08] <floatcomplex> SamuelMarks: that's not a philosophy, that's a compiler warning if you don't
[05:44:25] *** Joins: kadavul (~vazha@103.165.20.239)
[05:44:50] <floatcomplex> SamuelMarks: if the number of elements is a size_t (which it should be) then the iterator should be a size_t
[05:45:21] <floatcomplex> if it's a small integer literal known at compiler time, int is fine
[05:45:22] <SamuelMarks> That's my argument
[05:45:31] <floatcomplex> no other unsigned types should be used besides size_t
[05:45:50] <SamuelMarks> floatcomplex: I'm hacking around a little tool to automatically fix these changes
[05:45:53] <SamuelMarks> *affect
[05:46:53] <floatcomplex> if you are looping over an array of structs, using a pointer to that struct type as the iterator is reasonable
[05:47:15] <floatcomplex> for (struct thing * thing = things; thing < things + thing_count; thing++) { /* ... */ }
[05:47:20] <katnis> void main()
[05:47:34] <floatcomplex> void main() should trigger asan or ubsan or both
[05:47:50] <floatcomplex> or just be a compiler warning idk
[05:47:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[05:48:28] <SamuelMarks> yep
[05:48:50] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[05:48:51] <SamuelMarks> /usr/local/opt/llvm/bin/llvm-config --ldflags --libs
[05:48:59] <SamuelMarks> Whoops this isn't my terminal window!
[05:49:25] <floatcomplex> make
[05:50:50] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:9179:e90c:ede4:6f85)
[05:52:44] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[05:52:44] <SamuelMarks> You guessed it! - I'm using LLVM to write this code refactorer
[05:52:56] <katnis> i think pointer is hard for me to learn
[05:52:56] *** Quits: ethrl (uid524335@user/doforlove33) (Read error: Connection reset by peer)
[05:53:01] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Read error: Connection reset by peer)
[05:53:02] <floatcomplex> don't say that
[05:53:24] <floatcomplex> katnis: saying it makes it true, and it's actually easy if you don't decide it's going to be hard
[05:53:47] <SamuelMarks> reference needed
[05:53:49] <floatcomplex> katnis: what are you struggling with, specifically
[05:54:19] *** Quits: kurahaupo (~kurahaupo@pa49-181-167-244.pa.nsw.optusnet.com.au) (Ping timeout: 244 seconds)
[05:54:31] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[05:54:46] *** Joins: ethrl (uid524335@user/doforlove33)
[05:56:58] <katnis> a n00bie like me
[05:56:58] <katnis> **fridge, *food container, &food?
[05:57:33] <SamuelMarks> maximum chomp
[05:58:03] *** ChanServ sets mode: +o candide
[05:58:03] *** candide sets mode: -b *!~codercat@*.virginm.net
[05:58:37] *** Joins: rgrinberg (~textual@ip11-246-50-179.ct.co.cr)
[05:59:05] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[06:01:52] <ski> presumably you've heard of the analogy with a (long) street with houses, labelled with addresses like `0',`1',`2',... ?
[06:03:32] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:04:05] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:04:32] <katnis> the whole language ;DDD
[06:04:54] <floatcomplex> come back in the morning
[06:04:55] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:04:58] <KillerWasp> i want programming something... I've lost all my spirits for days.... I feel sick... *SIGH*
[06:06:08] <floatcomplex> KillerWasp: if you just need an idea for something that will be hard but rewarding, port tcc to bash or awk or perl or some other interpreted language that is common enough to occasionally be present when a real c compiler is not
[06:06:17] <ski> getting some shut-eye might be a good idea, yea
[06:06:48] <KillerWasp> floatcomplex# It sounds like a problem you have and you need someone else's help.
[06:07:36] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:07:45] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[06:08:33] <SamuelMarks> floatcomplex - Oh and a shameless plug for the project I need to start - https://github.com/SamuelMarks/type-correct
[06:08:34] <candide> Title of SamuelMarks's link: GitHub - SamuelMarks/type-correct: Correct types: typed correctly
[06:08:43] * SamuelMarks is just filling out the boilerplate, hasn't started actual logic yet
[06:08:47] <KillerWasp> i never read about of tcc
[06:09:30] <floatcomplex> KillerWasp: it's not something i'm trying to do, i'm just annoyed nobody has
[06:09:41] <floatcomplex> and when smart people say they are bored that's what i tell them to do
[06:10:20] <SamuelMarks> I'm trying to get this bored guy on my project :P
[06:11:13] <katnis> breaking news: korea's internet is dead
[06:11:33] <SamuelMarks> katnis: Are you talking to us via satelite?
[06:11:39] <floatcomplex> katnis: go to bed
[06:11:44] <floatcomplex> come back tomorrow
[06:11:50] <KillerWasp> tcc is a replace of batch?
[06:11:59] <SamuelMarks> tcc can build gcc
[06:12:02] <floatcomplex> ^
[06:12:20] <floatcomplex> tcc could build linux, at one point
[06:12:22] <KillerWasp> https://jpsoft.com/help/scripting-language-basics.htm
[06:12:22] <floatcomplex> at boot time
[06:12:29] <katnis> 11:42am here lul 
[06:12:32] <SamuelMarks> yeah, tis pretty neat
[06:12:35] <katnis> free lunch inc
[06:12:39] <SamuelMarks> gimme
[06:13:00] <floatcomplex> katnis: if someone told me that my entire country was allowed to go home and go the fuck to sleep at 11:42 am i would not get on irc and bitch about it
[06:13:21] <SamuelMarks> floatcomplex: Move to Italy
[06:13:26] <KillerWasp> is this? https://bellard.org/tcc/tcc-doc.html
[06:13:28] <candide> Title of KillerWasp's link: Tiny C Compiler Reference Documentation
[06:13:32] <floatcomplex> KillerWasp: yes
[06:13:45] <SamuelMarks> https://en.wikipedia.org/wiki/Tiny_C_Compiler
[06:13:46] <floatcomplex> port it to an bash or awk or perl
[06:14:13] <KillerWasp> floatcomplex# why to bash, awk or perl, instead of reverse?
[06:14:21] <SamuelMarks> Oh and it's still being maintained, pay no mind to the release date on wikipedia
[06:14:31] <floatcomplex> KillerWasp: because there are lots of computers with bash/awk/perl on them and no c compiler
[06:14:36] <katnis> floatcomplex: where are u from ? :DDD
[06:14:54] <SamuelMarks> katnis: He is Tron. He lives on the intertubes
[06:15:02] <katnis> tron the movie?
[06:15:06] <katnis> i am a huge fan!
[06:15:23] <katnis> love the legacy 
[06:15:33] <KillerWasp> exist machines without gcc?? that horror!! DDD:
[06:15:43] <floatcomplex> KillerWasp: do you have a router
[06:16:00] <KillerWasp> oh...
[06:16:01] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 244 seconds)
[06:16:08] <floatcomplex> yeah
[06:16:19] <KillerWasp> well, only router with ssh access. :/
[06:16:31] <floatcomplex> right, which means it probably has bash, or ash
[06:16:43] *** Quits: aportnoy1 (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Remote host closed the connection)
[06:16:44] <floatcomplex> and awk, and possibly even perl
[06:16:59] *** Joins: aportnoy1 (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[06:18:14] <KillerWasp> floatcomplex# you can access to int 80h from bash, awk or perl? i don't remember. If you can't, it would be nearly impossible for most code conversion.
[06:18:33] <floatcomplex> KillerWasp: it doesn't matter because they don't run x86
[06:19:08] <KillerWasp> I mean by that access to most of the functions of the kernel or glib.
[06:19:33] <floatcomplex> i assume you mean glibc
[06:19:39] <KillerWasp> yes
[06:19:48] <floatcomplex> glib is a specific other thing, and you should not use it
[06:19:55] <SamuelMarks> tftp a new rom
[06:20:04] <floatcomplex> glibc is bad too but it has its uses in the development process
[06:20:05] <SamuelMarks> floatcomplex: musl the masses
[06:20:30] *** Quits: Player001 (~Player001@user/player001) (Quit: read Deleuze)
[06:20:33] <floatcomplex> musl is good
[06:21:16] <floatcomplex> but musl gcc based toolchains cannot run address sanitizer, and if you are writing new code and deploying it without address sanitizer having been involved, you're being criminally negligent
[06:21:19] *** Quits: aportnoy1 (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Ping timeout: 252 seconds)
[06:21:21] <KillerWasp> wow, a replace of glibc?
[06:21:32] <tk> lol
[06:21:40] <floatcomplex> KillerWasp: glibc is like fourth or fifth down the list of libc's i care about
[06:21:44] <KillerWasp> sounds like your community had a lot of fun.
[06:21:50] <tk> glibc wasn't the first libc and it won't be the last libc
[06:21:51] <SamuelMarks> floatcomplex - oh they're still not asans?
[06:21:57] <floatcomplex> KillerWasp: i literally only use it when debugging with address sanitizer
[06:22:05] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:22:24] <SamuelMarks> FYI - https://en.wikipedia.org/wiki/C_standard_library#Implementations
[06:22:30] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:22:43] <KillerWasp> tk# well, sure.
[06:24:50] <SamuelMarks> I wonder if someone will write a full libc in LLVM IR with prototypes only in C
[06:25:23] <KillerWasp> SamuelMarks# oooooh.... seem very more funny...
[06:26:08] <KillerWasp> The only thing that gets in the way is POSIX.
[06:26:18] *** Joins: aportnoy1 (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[06:28:42] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 265 seconds)
[06:30:17] *** Joins: mixfix41 (~homefame@user/mixfix41)
[06:31:52] <KillerWasp> complex.h is useful for make more fast fractals?
[06:32:16] <floatcomplex> lol
[06:33:42] <SamuelMarks> fractals are notoriously unpredictable
[06:33:45] <SamuelMarks> - Star Trek
[06:36:31] *** Joins: pucara (~i@181.95.207.85)
[06:37:44] <KillerWasp> Someday I'm going to hack NASA and explore the fractals I've always wanted. >:(
[06:37:58] <SamuelMarks> quite the frontier
[06:41:32] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:47:17] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:50:46] *** Quits: johnjay (~pi@192.142.100.50) (Read error: Connection reset by peer)
[06:53:08] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:55:15] *** Joins: johnjay (~pi@192.142.100.50)
[06:55:17] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 244 seconds)
[06:56:31] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[06:58:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:00:51] *** Quits: pucara (~i@181.95.207.85) (Quit: Lost terminal)
[07:02:36] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:09:22] *** Quits: alch (~alch@151.36.187.85) (Ping timeout: 258 seconds)
[07:09:43] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[07:10:11] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[07:11:05] *** Joins: alch (~alch@151.36.177.162)
[07:15:26] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[07:15:43] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:20:29] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 258 seconds)
[07:26:11] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:26:11] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:26:11] *** Joins: wroathe (~wroathe@user/wroathe)
[07:30:19] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:30:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:33:46] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[07:33:49] *** Quits: imp (~imp@192-141-191-231.alternativaip.net.br) (Quit: imp)
[07:35:24] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 265 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:35] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:36:51] *** Joins: Player001 (~Player001@user/player001)
[07:43:27] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:44:20] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[07:47:47] *** Quits: kadavul (~vazha@103.165.20.239) (Ping timeout: 264 seconds)
[07:48:23] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 264 seconds)
[07:53:09] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:53:27] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:55:12] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[07:55:43] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:57:47] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 244 seconds)
[07:58:05] *** candide sets mode: -o candide
[08:02:15] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[08:04:24] *** Quits: KevinX (~KevinX@94.140.8.81) (Ping timeout: 265 seconds)
[08:04:44] *** Joins: KevinX (~KevinX@212.102.47.75)
[08:07:05] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[08:07:06] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 244 seconds)
[08:07:55] *** Joins: tejr (~tejr@user/tejr)
[08:08:33] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[08:09:07] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:12:59] *** Joins: tejr (~tejr@user/tejr)
[08:14:47] *** Joins: lompik (~lompik@user/lompik)
[08:18:32] *** Joins: dmaroo (~dhruv@2409:4070:2e1b:c65d:acb5:3c04:828:2b94)
[08:20:56] *** Joins: FrankD (~frankd@69.206.2.53)
[08:21:52] <katnis> exam tomorrow i am so nervous
[08:21:59] <dave0> maw
[08:22:04] <katnis> its abou C and data structure
[08:22:09] <dave0> katnis: picture everyone naked
[08:22:10] <katnis> i am so nervousss
[08:22:23] <katnis> uhm there are things i can do and cant
[08:22:33] <katnis> that one is the  second one
[08:22:36] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:23:43] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Ping timeout (120 seconds))
[08:27:30] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:28:50] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[08:30:24] *** Quits: Daniel[m]1234516 (~danielbau@2001:470:69fc:105::1:1a5d) (*.net *.split)
[08:30:25] *** Quits: randy408[m] (~randy408m@2001:470:69fc:105::2f5e) (*.net *.split)
[08:30:25] *** Quits: securethemews (~securethe@2001:470:69fc:105::9b6d) (*.net *.split)
[08:30:25] *** Quits: Deewiant (~deewiant@2001:470:69fc:105::2fd3) (*.net *.split)
[08:30:25] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (*.net *.split)
[08:30:25] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (*.net *.split)
[08:30:25] *** Quits: Neui[m] (~neuimatri@2001:470:69fc:105::745) (*.net *.split)
[08:30:25] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (*.net *.split)
[08:30:25] *** Quits: cornett_ (~ben@149.28.239.26) (*.net *.split)
[08:30:25] *** Quits: prime (~prime@user/prime) (*.net *.split)
[08:30:25] *** Quits: sdfgsdfg (sdfgsdfg@user/sdfgsdfg) (*.net *.split)
[08:30:25] *** Quits: gl (~x@pwn.lu) (*.net *.split)
[08:30:25] *** Quits: gravndal (~weechat@user/ravndal) (*.net *.split)
[08:30:25] *** Quits: taru9 (~realTaru9@user/taru9) (*.net *.split)
[08:30:25] *** Quits: sirdidym1s (~sirdidymu@sorcsys.net) (*.net *.split)
[08:30:25] *** Quits: dac (~dcx@user/dac) (*.net *.split)
[08:30:25] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[08:30:25] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[08:30:25] *** Quits: csjp (~csjp@user/csjp) (*.net *.split)
[08:30:25] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[08:30:25] *** Quits: cehteh (~ct@git.pipapo.org) (*.net *.split)
[08:30:25] *** Quits: vinay_ (~Vinay@user/vinay-keshava) (*.net *.split)
[08:30:25] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[08:30:25] *** Quits: lenni (~lenni@user/lenni) (*.net *.split)
[08:30:25] *** Quits: WanderingGlitch (~Wandering@li555-207.members.linode.com) (*.net *.split)
[08:30:25] *** Quits: nikomo (~quassel@nikomo.fi) (*.net *.split)
[08:30:25] *** Quits: DrinkyBird (~drinkybir@sprawl.drinkybird.net) (*.net *.split)
[08:30:32] *** Joins: sirdidymus (~sirdidymu@sorcsys.net)
[08:30:32] *** Joins: gl (~x@pwn.lu)
[08:30:33] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[08:30:34] *** Joins: DrinkyBird (~drinkybir@sprawl.drinkybird.net)
[08:30:34] *** Joins: nikomo (~quassel@nikomo.fi)
[08:30:35] *** Joins: vinay (~Vinay@user/vinay-keshava)
[08:30:35] *** Joins: csjp (~csjp@user/csjp)
[08:30:37] <caze> Well you can't learn C in time.
[08:30:38] *** Joins: WanderingGlitch (~Wandering@li555-207.members.linode.com)
[08:30:41] *** Joins: cornett_ (~ben@149.28.239.26)
[08:30:49] <caze> That's also something you can't do.
[08:30:49] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[08:31:00] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[08:31:04] *** Joins: lenni (~lenni@15-224-145-85.ftth.glasoperator.nl)
[08:31:11] *** Quits: lenni (~lenni@15-224-145-85.ftth.glasoperator.nl) (Signing in (lenni))
[08:31:11] *** Joins: lenni (~lenni@user/lenni)
[08:31:13] *** Joins: cehteh (~ct@git.pipapo.org)
[08:31:18] *** Joins: taru9 (~realTaru9@user/taru9)
[08:31:30] *** Joins: prime (~prime@user/prime)
[08:31:49] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[08:31:51] *** Joins: dcx (~dcx@user/dac)
[08:32:33] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 258 seconds)
[08:32:44] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Client Quit)
[08:33:03] *** Joins: m4v (~znc@ubuntu/member/m4v)
[08:33:06] *** Joins: Daniel[m]1234516 (~danielbau@2001:470:69fc:105::1:1a5d)
[08:33:23] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 264 seconds)
[08:33:51] *** Joins: sss123 (~sss123@61.108.38.194)
[08:34:25] *** Joins: sss12370 (~sss123@61.108.38.194)
[08:34:31] *** Quits: sss12370 (~sss123@61.108.38.194) (Client Quit)
[08:34:41] *** Joins: sdfgsdfg (sdfgsdfg@user/sdfgsdfg)
[08:34:56] <dave0> you could write all the c keywords on your arm
[08:34:59] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[08:35:03] *** Joins: Neui[m] (~neuimatri@2001:470:69fc:105::745)
[08:35:12] *** Joins: Deewiant (~deewiant@2001:470:69fc:105::2fd3)
[08:35:22] *** Joins: securethemews (~securethe@2001:470:69fc:105::9b6d)
[08:36:12] *** Joins: randy408[m] (~randy408m@2001:470:69fc:105::2f5e)
[08:36:16] <katnis> can i drink 100 bottles of beer in 1 sec
[08:36:34] <katnis> dave0: thats a good idea! have you watched the movie memento?
[08:36:42] <katnis> i was about to try it actually :DDD
[08:37:01] <katnis> i should start writing down headers and fuctions 
[08:37:22] <dave0> yeah that was a weird movie, i didn't understand it
[08:37:38] <katnis> all u need to know is, he has a lot of tattoos all over his body
[08:37:41] <katnis> and that would be me
[08:37:52] <dave0> they'll probably ask about qsort
[08:37:57] <dave0> i would ask about qsort
[08:38:02] <katnis> qsort, noted
[08:38:53] <katnis> oh wow this one looks good
[08:39:17] *** Joins: Ekho (~Ekho@user/ekho)
[08:49:56] *** Joins: pedrini (~pedrini@189.215.211.133.cable.dyn.cableonline.com.mx)
[08:52:34] *** Quits: nitro__ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 252 seconds)
[08:53:37] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[08:55:22] *** Quits: pedrini (~pedrini@189.215.211.133.cable.dyn.cableonline.com.mx) (Quit: Leaving...)
[08:56:32] *** Joins: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[08:56:54] <floatcomplex> the idea of taking a test in an academic environment, about c, is as weird as the idea of taking a test about proper pencil usage
[08:58:15] *** Joins: nfip^ (~nfip@wsip-68-227-92-38.mc.at.cox.net)
[08:58:29] <floatcomplex> you can either use a pencil to do useful things now, or you will be able to later, or you cannot do useful things. in no case is pencil competence at any given point correlated with any actual indicator of success
[08:59:29] *** Quits: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net) (Quit: b1101)
[09:01:37] <dave0> i code with pencil and paper
[09:01:44] <katnis> pseudo?
[09:01:46] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[09:01:48] <floatcomplex> fine
[09:04:22] *** Joins: vitimiti (~Celtor@2a02:c7f:44ab:3100:be5b:3e8:d784:f95b)
[09:05:41] *** Quits: soapsudsxx (~soapsudsx@209.221.40.137) (Remote host closed the connection)
[09:14:25] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[09:19:06] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:19:47] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[09:23:30] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[09:24:10] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Client Quit)
[09:24:31] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[09:28:36] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[09:30:36] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:33:02] *** Quits: vitimiti (~Celtor@2a02:c7f:44ab:3100:be5b:3e8:d784:f95b) (Remote host closed the connection)
[09:34:14] *** Joins: vitimiti (~Celtor@2a02:c7f:44ab:3100:be5b:3e8:d784:f95b)
[09:39:02] *** Quits: SecretFire (~secret-fi@75-164-146-104.ptld.qwest.net) (Remote host closed the connection)
[09:39:47] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[09:42:02] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 265 seconds)
[09:42:22] *** Joins: SecretFire (~secret-fi@75-164-146-104.ptld.qwest.net)
[09:49:18] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[09:49:25] *** Quits: godkernel (~kennet@2804:431:e7d8:8763:cc5a:ad17:59cd:b71a) (Remote host closed the connection)
[09:49:30] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[09:49:37] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Client Quit)
[09:50:06] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[09:51:55] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[09:54:04] <razor[m]> is there any way to use bitwise operators to find out whether an int has pattern like  "33333" "333" "333333.."
[09:54:16] <razor[m]> repeatation of 3 only
[09:54:32] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:54:56] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[09:57:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 264 seconds)
[09:58:06] *** Quits: SecretFire (~secret-fi@75-164-146-104.ptld.qwest.net) (Remote host closed the connection)
[09:59:14] <supakeen> not easily, no
[09:59:29] <supakeen> i'm sure one could convolute something together
[10:00:16] <razor[m]> huh, im sure there was some algo
[10:01:12] <supakeen> i'd be surprised as '3', '33', and '333' have nothing in common in their bit patterns besides the lsb.
[10:01:39] <supakeen> those repeating numbers only happen in the decimal representation
[10:02:11] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0d00-af10-da91-027d.res6.spectrum.com) (Ping timeout: 245 seconds)
[10:02:39] *** Quits: vitimiti (~Celtor@2a02:c7f:44ab:3100:be5b:3e8:d784:f95b) (Quit: Leaving)
[10:03:00] *** Quits: jbauer (~jbauer@146.71.11.98) (Remote host closed the connection)
[10:03:14] *** Joins: vitimiti (~Celtor@2a02:c7f:44ab:3100:be5b:3e8:d784:f95b)
[10:04:30] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0d00-af10-da91-027d.res6.spectrum.com)
[10:05:46] *** Joins: derjanni (~textual@p508ee13e.dip0.t-ipconnect.de)
[10:06:19] <dave0> there's only 10 possible ways to have a repeated 3's like that in a 32 bit number
[10:06:30] <dave0> just check each number
[10:09:08] *** Joins: jbauer (~jbauer@146.71.11.98)
[10:11:14] <katnis> CTU
[10:11:48] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:16:37] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[10:16:50] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 265 seconds)
[10:17:44] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[10:18:18] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:22:21] <dave0> i've become so lazy lately.. instead of a clever algorithm, i just go for brute force
[10:23:25] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[10:23:26] *** Quits: jbauer (~jbauer@146.71.11.98) (Ping timeout: 245 seconds)
[10:25:38] *** Quits: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 258 seconds)
[10:25:46] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:28:12] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:34:51] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 260 seconds)
[10:38:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:39:49] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Ping timeout: 258 seconds)
[10:42:23] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:43:45] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[10:47:56] <Maxdamantus> razor[m]: fwiw, it's basically equivalent to checking if a number is a power of 10. I'm not sure there is a way to do it without a loop (or a lookup table).
[10:48:46] <Maxdamantus> since you can multiply such a number by 3 to get 99999..., then adding 1 will make a power of 10.
[10:48:53] *** Joins: chasmo77 (~chas77@71.63.241.168)
[10:49:07] *** Joins: aradesh (~aradesh@user/aradesh)
[10:49:35] <Maxdamantus> for digits other than 3, a division might also be needed.
[10:49:49] <Maxdamantus> (or 1)
[10:50:11] <dave0> c has a log10 doesnt it?
[10:50:27] <razor[m]> yeah thnks
[10:52:21] <Maxdamantus> dave0: for floating types, sure, but I suspect converting to floats would be missing whatever the point of the exercise is.
[10:53:23] <dave0> oh
[10:53:54] <dave0> i'd probably fail if i just wrote   if(n == 3 || n == 33 || n == 333 || n == 3333   ...
[10:55:32] <Maxdamantus> Personally, I'd just do it like this: for(; n > 0; n /= 10) if(n%10 != 3) return 0; return 1;
[10:56:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[10:57:07] *** Joins: random-nick (~random-ni@87.116.165.220)
[10:57:17] <FrankD> sprintf(buf, "%d", number); while (*buf) { if (*buf++ != '3') return(false) }
[10:57:23] <FrankD> cheaty
[10:57:38] <supakeen> I don't really consider that to be cheaty.
[10:58:23] <katnis> do you have to use () for *buf?
[10:58:36] <katnis> (*buf) 
[10:58:39] <katnis> like this
[10:59:04] <FrankD> no, least not as my 15 year old dated knowledge is aware
[10:59:42] <Maxdamantus> sprintf(buf, "echo %d | grep ^3\\\\*$", number); return system(buf) == 0;
[10:59:44] <katnis> they should make a new version of C programming language!
[10:59:48] <dave0> katnis: need more info.. if you're referring to FrankD's while, the ()'s are part of while syntax
[10:59:51] <katnis> if it is that old...
[10:59:54] <FrankD> i like the *3 +1 %10 answer, keeps it all int :D
[10:59:54] <katnis> 15 years lel
[11:00:03] <katnis> yes dave0
[11:00:08] <supakeen> They mean if *buf++ is ok vs (*buf)++.
[11:00:15] <supakeen> I think?
[11:00:18] <katnis> OH
[11:00:19] <FrankD> i haven't written shit in C in forever :D
[11:00:28] <FrankD> no (*buf)++ would give you 4 for a 3
[11:00:59] <katnis> what does buf mean
[11:01:02] <FrankD> since youd be incrementing the contents of *buf, not the buf pointer
[11:01:08] <FrankD> youd need a character buffer to sprintf too
[11:01:13] <katnis> buffer?
[11:01:16] <FrankD> yeah
[11:01:20] <katnis> :0
[11:01:31] <FrankD> or you could for loop it and buf[i++]
[11:01:45] <FrankD> if you didnt want to malloc buf
[11:02:17] <dave0> katnis: c programmers are lazy.. "buf" is easier to type than "buffer"
[11:02:20] *** Joins: mrig (~AdiIRC@user/mrig)
[11:02:36] <dave0> "cnt" vs "count" off the top of my head
[11:02:38] <FrankD> char buf[256]; sprintf(buf, "%d", number); for (unsigned int i = 0; i < strlen(buf); i++) { if (buf[i] != '3') return false; } return true
[11:02:40] <FrankD> lol yes
[11:02:44] <katnis> cnt sounds a bit...ahem
[11:02:57] <FrankD> tasty?
[11:03:03] <katnis> UwU
[11:03:12] <dave0> someone shortened stack to stck which raised some eyebrows
[11:04:19] <FrankD> lol
[11:04:36] <FrankD> https://github.com/fdimitri/ESPMQTTSensor first thing I've written in years, I made a few silly mistakes
[11:05:06] <katnis> FrankD reminds me of a special agent's name from the show i like
[11:05:55] <katnis> what does it do?
[11:06:22] <supakeen> Take the data from some sensors and stuff it into MQTT.
[11:06:30] <supakeen> Cheating because they're using the C++ library for it ;)
[11:06:37] *** Quits: alch (~alch@151.36.177.162) (Read error: Connection reset by peer)
[11:06:44] <FrankD> obviously, with ESP32/8266 devices!
[11:06:59] <katnis> how do i get better like you
[11:07:14] <supakeen> I can suggest you take a look at platformio for your devices, it's a much nicer flashing/testing workflow with a lot less weird stuff :)
[11:07:22] <supakeen> (just the command line suffices no need for the IDE stuff)
[11:07:38] <FrankD> i saw that the other day somewhere, I'll have to check it out
[11:08:05] <supakeen> I use that for near all my boards (aside from some direct-AVR stuff).
[11:08:12] <FrankD> the Arduino IDE is garbage, I used to write all of my stuff with Atmel's environment directly and none of that cruddy arduino crap
[11:08:20] <FrankD> woo direct AVR :)
[11:09:25] <supakeen> FrankD: Here's an 'example' project with platformio for a small epaper device I have in each room here: https://github.com/HuisHouden/PapierScherm
[11:09:26] <candide> Title of supakeen's link: GitHub - HuisHouden/PapierScherm: Epaper display for the HuisHouden ecosystem.
[11:09:29] <supakeen> (ESP32-based)
[11:09:34] <supakeen> Also C++ so not for this channel.
[11:09:59] <FrankD> i have some ePaper waveshare modules, the refresh time was an atrocity
[11:10:12] <FrankD> maybe I was doing something wrong
[11:10:28] <FrankD> like several seconds to refresh with blinky black and white screen inbetween
[11:10:45] <FrankD> maybe because I wasn't doing partial refreshes?
[11:11:03] <supakeen> It is, that project is using these: https://i.imgur.com/mm6u8GJ.jpeg
[11:11:07] <FrankD> what do you use for an MQTT server?
[11:11:15] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[11:11:18] <supakeen> Several seconds is a tad much though even if you blank the entire screen.
[11:11:21] <supakeen> I use mosquitto.
[11:11:27] *** Joins: alch (~alch@151.38.131.175)
[11:11:28] <FrankD> oh cool I haven't tried
[11:11:35] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[11:11:36] <FrankD> I use Solace because I used it at work for a while
[11:11:58] <supakeen> It works :)
[11:12:28] <FrankD> Solace is nice, free version available
[11:12:29] *** Joins: george (~george@147.95.122.184)
[11:12:33] <supakeen> Board on the right is a sensor board I have in each room with a PMS7003 (particulate matter), MHZ19B (CO2), and BME280 for temperature/pressure and stuff.
[11:12:45] <FrankD> I wrote a pretty nice web client for it at work, don't think I have a copy of it though :(
[11:12:53] <FrankD> it was way nicer than that shit HiveMQ client
[11:13:03] <FrankD> nice
[11:13:22] *** Joins: brelod (~me@90.244.150.142)
[11:13:25] <FrankD> I want to stop using the libraries for the sensors and write them from scratch, I just picked up a bunch.. a few BME280s
[11:14:01] <supakeen> I'm sadly a sucker for graphs and dashboards: https://i.imgur.com/MpyX9nV.png
[11:14:13] <supakeen> Yes, that's what I'm doing right now as well. Satisfying my not invented here needs.
[11:14:49] <FrankD> grafana woo
[11:15:08] <FrankD> well if you ever need a project buddy hit me up! :D
[11:15:45] <supakeen> Haha I will, but personal projects for me are nice without any commitments :)
[11:16:07] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:8:b68b:646f:f305) (Ping timeout: 252 seconds)
[11:16:27] <FrankD> ofc
[11:17:14] *** Joins: meator (~meator@user/meator)
[11:23:01] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:24:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:24:52] *** Joins: V-T60 (~v@91.203.24.166)
[11:24:59] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[11:26:46] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[11:29:12] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Read error: Connection reset by peer)
[11:29:35] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:30:05] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[11:32:55] *** Joins: jess (~jess@libera/staff/jess)
[11:33:24] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Client Quit)
[11:34:41] *** Joins: eson123 (~eson123@118.69.128.37)
[11:34:53] <eson123> i was trying something like this but it kinda not responding, https://pastebin.com/wN2CbSFU, anyone knows why ?
[11:35:09] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[11:36:01] <dave0> eson123: ah you forgot to allocate space for new1 and new2
[11:36:17] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[11:37:26] <dave0> eson123: you could use malloc, you could use temporary variables, you could use static storage, you could change the type from pointer to the object
[11:38:06] <dave0> eson123:   type1 *new1 = malloc(sizeof(type1)); type2 *new2 = malloc(sizeof(type2));
[11:38:14] <eson123> i mean by not using pointer, it works but i was intending to pass its address through typecasting to void to functions
[11:39:07] <dave0> eson123:   type1 new1; type2 new2; new1.a = 2; new2.b = 3; printf("%d ", new1.a); printf("%d ", new2.b);
[11:39:13] <dave0> it changes the syntax
[11:39:31] <eson123> oh yea, i forgot i can still pass address by doing &new1 :P
[11:39:38] <eson123> ok thk
[11:39:49] <eson123> also i wasn't so sure why adding in malloc() works tho
[11:39:51] <dave0> yep no worries
[11:40:15] <dave0> eson123: malloc makes some space for the object
[11:40:40] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:40:46] <eson123> dave0: well yea but wasn't it already having some space when i declare *new1 and *new2 ? it has to stay on memory somewhere
[11:41:23] <dave0> eson123:   type1 *new1;    allcoates space for a pointer, but it doesn't allocate somehing to point /to/
[11:41:38] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[11:41:48] <eson123> awwwh right
[11:42:38] <sham1> Could probably also use the malloc idiom instead
[11:42:41] <sham1> ,malloc
[11:42:41] <candide> There is no need to cast the result of library functions that return void *; it makes your code hard to read, adds no value, and can hide a bug if you don't have a valid prototype in scope. See http://c-faq.com/malloc/mallocnocast.html
[11:42:44] <sham1> Err
[11:43:54] <dave0> eson123: there are reasons to allocate space for one thing or another, but it depends on your needs
[11:44:23] <supakeen> ,mallocidiom
[11:44:23] <candide> T *p = malloc(sizeof *p) is more robust than T *p = malloc(sizeof (T)) because sizeof *p will always be the correct size of T and it prevents unnecessarily repeating the T (DRY principle). If sizeof (T) is used and later one of the T's is changed there will be a mismatch. T *p = malloc(sizeof *p) is more concise and easier to read, especially when T is a compound type.
[11:44:29] <sham1> That's it, thanks
[11:49:09] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:50:00] <supakeen> I'm fighting myself once more over obscenely long identifiers as if this is java because of my need to have unique names and nested stuff again grrr.
[11:50:55] *** Quits: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[11:51:16] <sham1> Being verbose isn't necessarily wrong
[11:51:43] <supakeen> No but `skul_type_stream_create` is a bit iffy :)
[11:53:23] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[11:53:42] <eson123> dave0: but this is a bit confusing for me, malloc(sizeof(int)) for example is allocate one integer in memory, malloc(sizeof(type1)) is allocate one struct member of type1 in memory, but on my computer both sizeof(type1) and sizeof(int) are 4, so either one will just be malloc(4), how can malloc recognize which is which if i choose to malloc() both types
[11:54:04] <sham1> It doesn't
[11:54:10] <sham1> And it doesn't need to
[11:54:11] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[11:54:28] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[11:54:39] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[11:54:57] *** Quits: rgrinberg (~textual@ip11-246-50-179.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:55:39] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[11:56:17] <dave0> eson123: (unfortunately) malloc does not know about types... it is up to you to allocate the correct size and put the value in the correct type of variable
[11:57:00] <koollman> eson123: it does not allocate "one integer", but "enough bytes to hold one integer". No information is kept about the type in it. So on your system, it allocates 4 bytes. not 'one integer'. It does not recognize that as one integer at all
[11:57:07] <eson123> i wonder what will happen if i put weird values instead
[11:57:11] <eson123> probably not responding
[11:57:33] <koollman> as long as those values can be stored in 4 bytes, nothing strange happens
[11:57:33] <dave0> eson123: you must tell the compiler that it is a pointer to int, by declaring your variable that way..   int *a = malloc(4);    (this is just an example, do not use raw "4", always use sizeof)
[11:57:39] <eson123> koollman: ok gotcha
[11:58:13] <sham1> And like was said before, you'd want to do `int *a = malloc(sizeof *a);` instead of `malloc(sizeof(int))`because if you change what a is pointing at, it will just work
[11:58:40] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:9179:e90c:ede4:6f85) (Quit: Leaving)
[11:58:44] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[11:58:59] <eson123> hm fair enough
[11:59:06] <eson123> i will try to mess around wit this :P
[11:59:23] <dave0> eson123: c exposes these low-level details for better or worse
[11:59:37] <eson123> nya i love these details
[11:59:39] <sham1> Considering what one usually uses C for, it's for the better
[11:59:52] <eson123> it helps me understand memory better
[12:02:39] *** Joins: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de)
[12:03:32] *** Joins: V-T60 (~v@91.203.24.166)
[12:05:13] *** Quits: V-T60 (~v@91.203.24.166) (Remote host closed the connection)
[12:05:48] *** Joins: ravan (~ravan@user/ravan)
[12:10:38] *** Joins: plastico (~plastico@neomutt/plastico)
[12:13:10] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[12:13:46] *** Joins: arinov (~arinov@213.194.126.155)
[12:15:17] *** Joins: Nspace (~Nspace@user/nspace)
[12:17:14] *** Joins: seninha (~seninha@user/seninha)
[12:19:15] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[12:19:24] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:24:13] *** Joins: Klinda (~superleag@user/klinda)
[12:29:42] *** Joins: Atque (~Atque@user/atque)
[12:30:31] *** Quits: krissmaster (~kriss@213.239.83.90) (Remote host closed the connection)
[12:31:15] *** Quits: deavmi (~tbk@user/deavmi) (Quit: Eish! Load shedding.)
[12:34:09] *** Joins: deavmi (~tbk@user/deavmi)
[12:35:37] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[12:35:57] *** Joins: krissmaster (~kriss@213.239.83.90)
[12:36:45] *** Quits: tinyweasel (~weasel@gateway/tor-sasl/tinyweasel) (Remote host closed the connection)
[12:37:44] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:38:12] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[12:38:23] *** Joins: tinyweasel (~weasel@gateway/tor-sasl/tinyweasel)
[12:44:49] *** Joins: Nspace (~Nspace@user/nspace)
[12:53:07] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[12:53:52] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:183d:b10c:65fa:9d96)
[12:54:11] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:9179:e90c:ede4:6f85)
[12:59:39] *** Joins: SoF (~skius@user/skius)
[13:01:37] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[13:05:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:06:03] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[13:06:55] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:07:50] <katnis> i think i need a little help here
[13:07:53] <katnis> https://pastebin.com/iGgNEW43
[13:07:59] <katnis> i get 0 :(
[13:08:17] <katnis> is there anything i am missing?
[13:08:47] <katnis> dont mind the total i just wanted the name like that  XD
[13:09:02] <katnis> wanted to get the average value
[13:09:23] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[13:09:57] *** Joins: lionkor (~lionkor@200116b80ff518007285c2fffea63d72.dip.versatel-1u1.de)
[13:11:47] <trenka> what do you expect to get?
[13:12:03] <trenka> it's integer
[13:12:10] <katnis> yes 
[13:12:12] <katnis> OH MY GOD
[13:12:17] <katnis> .............................................................................................................
[13:12:23] <katnis> i am going to jump off bye
[13:12:59] *** Joins: bolsonarogay (~bolsonaro@2804:56c:a188:4d00:b0bc:2f1b:a1bf:5dab)
[13:16:59] *** Joins: pony (~ed@smol/hors)
[13:19:18] *** Quits: bolsonarogay (~bolsonaro@2804:56c:a188:4d00:b0bc:2f1b:a1bf:5dab) (Quit: Quit)
[13:27:28] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[13:28:28] <Bou> and yet "math = 90",  heh
[13:29:06] <katnis> how do you have a profile picture?!
[13:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:30:29] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-0000-0000-0000-0806.res6.spectrum.com)
[13:30:51] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:31:01] *** Joins: csrf (~csrf@user/csrf)
[13:31:29] <Bou> account settings -> public avatar, it's an irccloud thing
[13:32:08] <katnis> I ALSO USE IT  OMGGGG
[13:32:10] <katnis> <3
[13:32:19] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:32:33] <Bou> obviously... otherwise you wouldn't see it
[13:32:37] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[13:33:04] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0d00-af10-da91-027d.res6.spectrum.com) (Ping timeout: 252 seconds)
[13:33:22] <katnis> that means no one can see it ;)
[13:34:05] <katnis> now i got one :D
[13:34:06] <katnis> yeey
[13:34:19] <katnis> :D
[13:34:26] <katnis> ahhh tomorrow C langauge exam
[13:34:29] <katnis> nervous
[13:40:45] *** Quits: geeknix (~pi@2001:e68:5432:e7b4:9184:efe7:4bf4:a5de) (Ping timeout: 260 seconds)
[13:40:57] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[13:42:41] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[13:43:43] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[13:44:18] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[13:45:16] *** Joins: Nspace (~Nspace@user/nspace)
[13:45:22] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[13:45:30] *** Joins: cursey (~cursey@user/cursey)
[13:47:04] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 244 seconds)
[13:50:06] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[13:53:15] *** Joins: pixies (~i.am@user/marlboro)
[13:53:33] *** Joins: geeknix (~pi@2001:e68:5432:1a6b:1b32:1143:c7cd:1d98)
[14:03:27] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:2541:21bc:c9f8:d237)
[14:15:29] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-0000-0000-0000-0806.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:15:58] *** Quits: wwilly (~wwilly@217.140.106.13) (Quit: Leaving)
[14:16:00] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-3830-04d0-020e-96bb.res6.spectrum.com)
[14:16:01] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-3830-04d0-020e-96bb.res6.spectrum.com) (Client Quit)
[14:19:21] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:19:49] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[14:21:01] *** Quits: Dotz0cat (~Dotz0cat@h11.46.90.75.dynamic.ip.windstream.net) (Read error: Connection reset by peer)
[14:21:56] *** pixies is now known as marlboro
[14:24:47] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[14:26:47] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[14:26:56] *** Joins: Nspace (~Nspace@user/nspace)
[14:27:55] *** Joins: Dotz0cat (~Dotz0cat@h194.118.90.75.dynamic.ip.windstream.net)
[14:29:37] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:30:37] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[14:30:50] *** Joins: snehal (~snehal@2402:8100:22d8:8f15:2186:edc3:b5c1:e9ec)
[14:30:59] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 244 seconds)
[14:31:10] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:34:15] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[14:34:33] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:34:50] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[14:36:40] *** Quits: snehal (~snehal@2402:8100:22d8:8f15:2186:edc3:b5c1:e9ec) (Quit: Leaving)
[14:39:23] *** Quits: dld (~davidlowr@2601:197:600:1210:5db6:6f5a:3b6e:25f9) (Ping timeout: 264 seconds)
[14:42:22] *** Joins: meator (~meator@user/meator)
[14:43:09] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[14:46:29] *** Joins: soul-d (~uknown@user/soul-d)
[14:47:39] *** Joins: Arthuria (~Arthuria@user/arthuria)
[14:47:42] <rahl> katnis: good luck. enjoy it
[14:47:52] *** Joins: Daemonick (~Daemonick@77.49.243.254.dsl.dyn.forthnet.gr)
[14:49:22] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[14:49:49] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[14:50:41] <katnis> thank you :D
[14:50:46] <katnis> got a new keyboard
[14:50:52] <katnis> its coming acrorss the ocean
[14:50:56] <katnis> and new keycaps!
[14:51:08] <katnis> gotta learn C a lot with this baby :D
[14:55:43] *** Quits: nfip^ (~nfip@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 265 seconds)
[14:57:12] *** Quits: george (~george@147.95.122.184) (Quit: Leaving)
[15:01:00] *** Joins: Guest199 (~Guest19@wificampus-098233.grenet.fr)
[15:01:12] *** Quits: Guest199 (~Guest19@wificampus-098233.grenet.fr) (Client Quit)
[15:01:34] *** Joins: Guest85 (~Guest85@wificampus-098233.grenet.fr)
[15:02:45] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:48be:c24:133a:8962)
[15:02:45] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:48be:c24:133a:8962) (Changing host)
[15:02:45] *** Joins: skapata (~Skapata@user/skapata)
[15:03:34] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (Read error: Connection reset by peer)
[15:03:49] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[15:04:09] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[15:04:34] *** Quits: rahl (~rahl@102.114.87.133) (Ping timeout: 244 seconds)
[15:04:57] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:06:38] *** Joins: rahl (~rahl@102.114.70.97)
[15:06:38] *** Quits: alch (~alch@151.38.131.175) (Read error: Connection reset by peer)
[15:08:24] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[15:08:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:09:16] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[15:10:03] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:15:40] <markand> katnis, a good keyboard is indeed necessary for programming
[15:15:46] * markand laughs in azerty at his colleagues
[15:16:13] <markand> french devs that use azerty must wrap their right thumbs just to write {}
[15:17:03] <gl> i guess most french devs swap their layour when programming
[15:17:06] <gl> layout*
[15:18:57] <katnis> azerty?? is that a thing? omg
[15:19:47] <katnis> the world is wide
[15:20:38] <fizzie> I wrote a nontrivial amount of code with the Finnish keyboard layout, which I don't think is any more programmer-friendly than the French one ({} are at altgr-7 and altgr-0, respectively); typing in the code is really not the bottleneck.
[15:22:20] <fizzie> (The dead-key ^ and ~ were pretty annoying though.)
[15:23:54] <LiaoTao> Changing to US keyboard layout increased my productivity and comfort immensely
[15:24:44] <Bou> With caps lock as compose key for áãåà
[15:25:13] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[15:26:15] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:27:45] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Quit: leaving)
[15:28:10] *** Joins: arinov (~arinov@213.194.126.155)
[15:28:51] *** Quits: bird_ (gnoo@user/gnoo) (Ping timeout: 258 seconds)
[15:31:00] * markand being french switched to permanent qwerty since 2008 
[15:31:18] <markand> as a bonus, nobody at works touches my keyboard as well
[15:31:47] *** Joins: st327 (~st327@user/st327)
[15:32:27] <dave0> are you sure it's not because it's sticky?
[15:33:07] <markand> haha, no being hygiene maniacal that's not possible
[15:33:50] <markand> precisely why I hate someone else using them
[15:34:09] *** Quits: Guest85 (~Guest85@wificampus-098233.grenet.fr) (Ping timeout: 256 seconds)
[15:34:46] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[15:34:48] *** Quits: st327 (~st327@user/st327) (Quit: Leaving)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:04] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:30] *** Quits: sss123 (~sss123@61.108.38.194) (Quit: Connection closed)
[15:38:45] *** Quits: f1refly (~f1refly@p4fc47ea6.dip0.t-ipconnect.de) (Quit: see ya in hell)
[15:39:34] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Remote host closed the connection)
[15:43:49] *** Joins: f1refly (~f1refly@p4fc47ea6.dip0.t-ipconnect.de)
[15:43:51] *** Joins: gnoo (gnoo@user/gnoo)
[15:44:43] *** Joins: constxd (~brad@192.75.101.164)
[15:45:02] *** Joins: constxo (~brad@192.75.101.164)
[15:46:50] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:47:50] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[15:49:23] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 260 seconds)
[15:49:54] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e841d-103.dhcp.inet.fi)
[15:51:18] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e841d-103.dhcp.inet.fi) (Client Quit)
[15:52:25] *** Joins: wren^ (~wren@wsip-68-227-92-38.mc.at.cox.net)
[15:53:08] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[15:55:31] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Ping timeout: 245 seconds)
[16:01:55] *** Quits: codemin (~codemin@185.232.22.196) (Ping timeout: 260 seconds)
[16:02:46] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:03:09] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[16:05:19] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:06:11] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[16:07:34] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:08:49] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:09:30] *** Joins: Nspace (~Nspace@user/nspace)
[16:10:25] *** Joins: zyweo (~Svew@user/zyweo)
[16:12:51] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[16:15:56] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:16:05] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:17:58] *** Joins: BSaboia (~bsaboia@177.37.198.218)
[16:25:11] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[16:25:52] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e841d-103.dhcp.inet.fi)
[16:27:10] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:2541:21bc:c9f8:d237) (Quit: Leaving)
[16:27:31] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e841d-103.dhcp.inet.fi) (Client Quit)
[16:27:31] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:2541:21bc:c9f8:d237)
[16:33:22] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[16:34:27] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:35:42] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:38:03] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[16:43:20] *** Joins: AmR (~AmREiSa@156.199.244.83)
[16:44:45] *** Quits: Daemonick (~Daemonick@77.49.243.254.dsl.dyn.forthnet.gr) ()
[16:47:46] <KillerWasp> dave0# you can use malloc(4) or malloc(sizeof(uint32_t)), both is same, always, and for any machine/processor.
[16:48:18] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[16:48:44] <sham1> KillerWasp: wrong. If CHAR_BITS were 16, let's say, sizeof(uint32_t) would be 2
[16:49:00] <KillerWasp> When you are so sure that the size will always be fixed, there is no point in using sizeof.
[16:49:01] <sham1> Assuming that uint32_t would even exist in such an environment
[16:49:13] <KillerWasp> like char or uint*_t
[16:49:13] *** Joins: Guest81 (~Guest81@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[16:49:53] <KillerWasp> sham1# what??
[16:50:05] <KillerWasp> sizeof(uint32_t) never be 2
[16:50:36] <sham1> If your architecture has 16-bit words as your smallest addressable unit, it certainly would be
[16:50:53] <KillerWasp> sham1# for what machine?
[16:51:03] <sham1> Some machine. The standard doesn't care
[16:52:58] <sham1> But since you asked me: TMS320C28x from Texas Instruments apparently has 16-bit words as their "bytes" and thus in that CHAR_BITS is 16
[16:54:04] <KillerWasp> humm... ARM chips?...
[16:54:11] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[16:54:35] <KillerWasp> sure... some chips have 32-bit also...
[16:56:42] <sham1> ARMs are 8. Those are byte-addressable, so for them it makes sense to use a CHAR_BITS of 8. And same is for stuff like RISC-V. The point is that one can't simply assume it.
[16:57:55] <sham1> One needs to remember, CHAR_BITS tells you the minimum size for an object that isn't a bit field, which tends to correlate with the idea of what is the smallest addressable unit. In most machines in common usage that'd be an octet, so 8 bits per byte, but that's of course not the only possibility
[16:58:14] *** Quits: aportnoy1 (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Ping timeout: 244 seconds)
[16:59:05] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ac0b:666b:acc0:2229) (Ping timeout: 260 seconds)
[16:59:10] *** Joins: strajder (~strajder@user/strajder)
[16:59:39] *** Joins: zwr (~zwr@2804:d45:b966:fb00:298f:8978:b1b0:174e)
[17:01:16] <dave0> KillerWasp: kinda... sizeof(char) is defined to be 1 so you wouldn't have to multiply by that
[17:01:54] <dave0> KillerWasp: using sizeof is more robust
[17:02:40] <strajder> ,sizeof(char)
[17:02:40] <candide> The size of `char` is always 1, by definition. Multiplying by `sizeof (char)` adds no value and makes the code noisier.
[17:02:59] *** Quits: lionkor (~lionkor@200116b80ff518007285c2fffea63d72.dip.versatel-1u1.de) (Remote host closed the connection)
[17:03:22] *** Joins: lionkor (~lionkor@200116b80ff518009ef0135c65608c7d.dip.versatel-1u1.de)
[17:03:54] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[17:04:06] *** Joins: de-facto (~de-facto@user/de-facto)
[17:04:45] <sham1> Usually I end up doing what is effectively `sizeof(char)` by doing something like `char *str_buf = calloc(str_len + 1, sizeof(*str_buf));`
[17:05:03] <sham1> On the plus side, if one ever changes the char to a char32_t or wchar_t *shudders* it'd still work
[17:05:27] <sham1> It just looks more consistent that way, even though it's not needed
[17:05:31] <strajder> that would break a lot of things
[17:06:11] <sham1> Well yeah, but at least it'd allocate the proper amount of memory for the buffer
[17:06:14] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[17:06:15] <strajder> that calloc should be calloc(str_len+1, 1)
[17:07:12] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:07:14] <dave0> i often use    malloc(strlen(something) + something_else)   if something is a string
[17:08:17] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:09:03] <dave0> or actual code!    struct node { struct node *next; char word[1]; }; struct node *n = malloc(sizeof(*n) + strlen(word)); strcpy(n->word, word);
[17:09:23] *** Quits: X-Scale (~ARM@92.250.96.217) (Ping timeout: 264 seconds)
[17:09:23] *** X-Scale` is now known as X-Scale
[17:09:29] <dave0> it's old code, from before we had flexible array member
[17:09:34] <sham1> I was about to say
[17:10:23] <strajder> dave0: that would overflow
[17:10:52] <strajder> strcpy(n->word, word), where word is a char array of length 1
[17:11:17] <dave0> strajder: it's how you used to do things before flexible array members
[17:11:29] <strajder> unless word is just array with nul as first char (not very useful), that would overflow
[17:11:34] <sham1> It's using the char-array in lieu of FAMs. As one can see from the malloc, it allocates enough space
[17:11:38] <dave0> it mallocs extra space for word[]
[17:11:58] <sham1> It's undefined-behaviour-tastic but it should work and old code does exactly that
[17:12:31] <dave0> http://www.c-faq.com/struct/structhack.html
[17:12:45] *** Quits: Guest81 (~Guest81@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[17:13:49] *** Parts: deavmi (~tbk@user/deavmi) (P A R T E D)
[17:14:12] <strajder> ha, "an official interpretation has deemed that it is not strictly conforming with the C Standard, although it does seem to work under all known implementations. (Compilers which check array bounds carefully might issue warnings.) "
[17:14:54] <sham1> Thankfully nowadays it's no longer needed thanks to flexible array member, but of course old code is old
[17:15:04] <strajder> I'm surprised that was even allowed
[17:15:41] <sham1> Well it's not really allowed
[17:15:51] <sham1> It just happens to work
[17:15:56] <dave0> i guess it was so popular they decided to standardize it
[17:16:07] <sham1> I think that's exactly what happened
[17:19:34] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:20:14] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 265 seconds)
[17:21:02] *** Quits: chenqisu1 (~xirndc@183.217.203.91) (Quit: Leaving)
[17:23:47] *** Joins: Atque (~Atque@user/atque)
[17:24:37] *** Joins: quartz (~quartz@user/quartz)
[17:25:25] *** Joins: themasterbuilder (~user@89.17.155.85)
[17:28:41] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[17:30:34] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:30:57] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:9179:e90c:ede4:6f85) (Quit: Leaving)
[17:30:59] *** Quits: meator (~meator@user/meator) (Ping timeout: 264 seconds)
[17:31:07] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[17:31:18] *** Quits: themasterbuilder (~user@89.17.155.85) (Remote host closed the connection)
[17:31:23] *** Joins: de-facto (~de-facto@user/de-facto)
[17:34:13] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:35:05] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:35:17] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[17:36:03] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[17:36:16] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:bddb:d75d:2e1e:4ad5)
[17:39:03] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[17:40:48] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e841d-103.dhcp.inet.fi)
[17:43:16] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:43:28] *** Joins: magla (~gelignite@55d4378c.access.ecotel.net)
[17:44:18] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e841d-103.dhcp.inet.fi) (Client Quit)
[17:44:42] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[17:45:46] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:48:59] *** Joins: Nspace (~Nspace@user/nspace)
[17:48:59] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 264 seconds)
[17:49:09] *** Joins: aportnoy1 (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[17:51:35] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[17:53:28] *** Quits: aportnoy1 (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Client Quit)
[17:55:25] *** Quits: ossifrage (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[17:56:00] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[17:56:03] <yates> i have the following macro in a .c file: #define weak_alias(X,Y)
[17:56:11] <yates> does this just do nothing?
[17:57:21] <yates> it's invoked in start.c (of glibc): http://paste.debian.net/1216826/
[18:00:15] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:1ae:2758:28a0:8f91)
[18:00:23] *** Parts: LTCD (~LTCD@2a02:c7f:dd1c:b600:1ae:2758:28a0:8f91) ()
[18:01:52] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:03:54] <sham1> If you don't provide a body for the macro, there won't be anything there
[18:05:55] *** Quits: wren^ (~wren@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[18:08:47] *** Quits: dmaroo (~dhruv@2409:4070:2e1b:c65d:acb5:3c04:828:2b94) (Ping timeout: 264 seconds)
[18:09:28] *** Quits: derjanni (~textual@p508ee13e.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[18:10:34] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 244 seconds)
[18:11:26] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[18:13:39] *** Joins: meator (~meator@user/meator)
[18:18:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:18:41] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:18:41] *** Joins: wroathe (~wroathe@user/wroathe)
[18:19:58] *** Joins: Atque (~Atque@user/atque)
[18:22:55] *** Quits: cul8r (~cul8r@76.113.95.199) (Quit: Leaving)
[18:24:11] *** Joins: Nspace (~Nspace@user/nspace)
[18:25:41] <fizzie> Usually that sort of thing is used in a context where the macro expands to something implementation-specific when the right macros are present, and to nothing otherwise.
[18:25:45] *** Joins: kadavul (~vazha@103.165.21.248)
[18:26:35] *** Quits: Nspace (~Nspace@user/nspace) (Client Quit)
[18:27:09] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[18:27:25] *** Joins: strajder (~strajder@user/strajder)
[18:27:37] *** Quits: regulate (~regulate@koduro.com) (Ping timeout: 244 seconds)
[18:29:40] *** Joins: regulate (~regulate@koduro.com)
[18:29:43] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:30:31] <katnis> little help here
[18:31:23] *** Joins: codemin (~codemin@217.138.255.180)
[18:32:44] *** Quits: kadavul (~vazha@103.165.21.248) (Ping timeout: 265 seconds)
[18:33:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[18:34:53] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:34:57] <sham1> Here is little help, yes. Mostly snark
[18:35:01] <sham1> And that's okay
[18:35:50] *** Joins: Famine- (~Famine@user/famine)
[18:36:26] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:36:52] <katnis> thank you so much
[18:37:14] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[18:37:23] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[18:38:28] *** Quits: regulate (~regulate@koduro.com) (Ping timeout: 244 seconds)
[18:38:36] *** Joins: regulate (~regulate@koduro.com)
[18:38:51] *** Quits: Famine_ (~Famine@user/famine) (Ping timeout: 245 seconds)
[18:39:27] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[18:40:04] *** Joins: kadavul (~vazha@103.165.21.248)
[18:41:52] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[18:47:40] *** Joins: de-facto (~de-facto@user/de-facto)
[18:49:10] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:49:48] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:49:48] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:49:48] *** Joins: wroathe (~wroathe@user/wroathe)
[18:50:17] *** Joins: Nspace (~Nspace@user/nspace)
[18:53:16] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[18:54:30] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[18:55:39] *** Joins: teepee (~teepee@openscad/teepee)
[18:56:32] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[18:56:45] *** Joins: dmaroo (~dhruv@2409:4070:2e1b:c65d:acb5:3c04:828:2b94)
[18:56:47] *** Joins: de-facto (~de-facto@user/de-facto)
[18:57:08] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[18:58:01] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 245 seconds)
[18:59:06] *** Joins: Nspace (~Nspace@user/nspace)
[19:00:40] *** Quits: Nspace (~Nspace@user/nspace) (Client Quit)
[19:01:06] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:02:44] *** Joins: Nspace (~Nspace@user/nspace)
[19:03:34] *** Joins: murych (~tmayzenbe@46.39.54.208)
[19:03:40] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[19:06:10] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com)
[19:07:32] *** Quits: Nspace (~Nspace@user/nspace) (Client Quit)
[19:08:11] *** Quits: kadavul (~vazha@103.165.21.248) (Ping timeout: 260 seconds)
[19:10:48] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[19:11:01] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 244 seconds)
[19:11:30] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[19:11:51] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (Quit: Leaving)
[19:12:00] *** Joins: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de)
[19:12:00] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[19:12:13] *** Joins: mrig (~AdiIRC@user/mrig)
[19:14:11] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 264 seconds)
[19:16:50] *** Joins: kadavul (~vazha@103.165.21.248)
[19:17:21] <sysRPL> hello
[19:18:51] *** Joins: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net)
[19:20:54] *** Joins: kurahaupo (~kurahaupo@pa49-181-167-244.pa.nsw.optusnet.com.au)
[19:24:03] *** Joins: gabriele (~gabriele@user/gabriele)
[19:24:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:25:25] <twkm> moo.
[19:25:48] *** Quits: kadavul (~vazha@103.165.21.248) (Quit: Leaving)
[19:27:28] <katnis> hello world
[19:30:42] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:30:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:30:42] *** Joins: wroathe (~wroathe@user/wroathe)
[19:33:18] *** Joins: X-Scale` (~ARM@31.22.144.14)
[19:33:19] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[19:33:50] *** Joins: Guest34 (~Guest34@97-116-119-108.mpls.qwest.net)
[19:34:19] *** Joins: Macuser (~Macuser@216.30.159.201)
[19:35:15] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 260 seconds)
[19:35:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[19:36:28] *** X-Scale` is now known as X-Scale
[19:39:10] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[19:39:23] *** Joins: mrig (~AdiIRC@user/mrig)
[19:41:27] *** Quits: slidercrank (~slidercra@user/slidercrank) (Remote host closed the connection)
[19:41:50] *** Quits: finalriposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (Ping timeout: 260 seconds)
[19:43:26] *** Quits: Guest34 (~Guest34@97-116-119-108.mpls.qwest.net) (Quit: Client closed)
[19:45:25] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[19:47:15] *** Joins: kadavul (~vazha@103.165.21.248)
[19:47:46] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[19:48:19] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[19:49:40] *** Joins: Quacc (~youbuntoe@user/quacc)
[19:49:45] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[19:49:46] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[19:50:19] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[19:58:10] *** Joins: jbauer (~jbauer@146.71.11.98)
[20:01:14] *** Joins: stzsch|2 (~stzsch@187.44.81.18)
[20:02:15] *** Quits: KevinX (~KevinX@212.102.47.75) (Ping timeout: 260 seconds)
[20:03:59] *** Quits: stzsch (~stzsch@187.44.81.18) (Ping timeout: 264 seconds)
[20:05:13] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[20:05:27] *** v- is now known as vaio
[20:06:16] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[20:06:45] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[20:07:13] *** Joins: KevinX (~KevinX@185.153.176.133)
[20:08:26] <yates> fizzie: thank you. makes sense.
[20:10:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:15:43] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[20:16:04] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[20:17:40] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[20:18:02] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:18:02] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:18:02] *** Joins: wroathe (~wroathe@user/wroathe)
[20:21:37] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Client Quit)
[20:22:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[20:27:03] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[20:27:22] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:27:55] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:27:56] <SamuelMarks> hi
[20:28:31] *** Joins: Narrat (~omnius@p200300df5f49111d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:28:55] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:29:29] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:32:33] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[20:32:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:36:08] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[20:37:38] *** Joins: mrig (~mrig@user/mrig)
[20:42:29] <omegatron> o/
[20:43:12] *** Joins: nostar (~nostar@45.14.195.153)
[20:43:25] *** Quits: aleamb (~aleamb@81.61.187.171.dyn.user.ono.com) (Quit: bye)
[20:44:11] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[20:44:40] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[20:47:33] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[20:48:23] *** Joins: satanist (~satanist@bureaucracy.bureaucracy.de)
[20:52:03] *** Quits: vitimiti (~Celtor@2a02:c7f:44ab:3100:be5b:3e8:d784:f95b) (Remote host closed the connection)
[20:52:55] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:55:33] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:55:49] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:55:58] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-156-ac57c0e5 - https://znc.in)
[20:58:33] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[21:00:08] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[21:00:12] *** Parts: ormaaj2 (~ormaaj2@user/ormaaj) ()
[21:01:24] *** Quits: makersmasher (~makersmas@097-092-244-194.res.spectrum.com) (Remote host closed the connection)
[21:04:16] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:2541:21bc:c9f8:d237) (Ping timeout: 258 seconds)
[21:05:46] *** Joins: alch (~alch@151.68.122.251)
[21:08:07] *** Quits: codemin (~codemin@217.138.255.180) (Ping timeout: 260 seconds)
[21:08:46] <SamuelMarks> omegatron o\
[21:11:46] *** Joins: rgrinberg (~textual@ip152-195-159-186.ct.co.cr)
[21:12:22] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[21:12:23] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Ping timeout: 264 seconds)
[21:13:36] *** Joins: rlvdv (~rlv@2a02:a03f:8bd6:bc00:5ae4:c060:7d3d:bd93)
[21:13:42] *** Quits: rlvdv (~rlv@2a02:a03f:8bd6:bc00:5ae4:c060:7d3d:bd93) (Client Quit)
[21:15:17] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:19:02] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[21:19:40] *** Joins: tiotags (~tiotags@user/tiotags)
[21:20:04] *** Joins: Telvana (~capo@user/telvana)
[21:20:24] *** Joins: mahmutov (~mahmutov@37.155.35.85)
[21:21:44] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[21:22:11] <KillerWasp> o\ o/ o\
[21:22:45] <sham1> \o |o /o
[21:22:51] *** Joins: makersmasher (~makersmas@2600:6c40:5b00:158d::f8b)
[21:25:36] *** Joins: Rounin (~david@84.212.130.215)
[21:32:23] *** Joins: meator (~meator@user/meator)
[21:32:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:32:54] <pragma-> for a second there i thought there was a spider on my screen
[21:33:49] *** Joins: pulse (~pulse@user/pulse)
[21:34:36] *** Joins: shivesh (~shivesh@user/shivesh)
[21:35:09] *** Joins: topside (~topside@ip68-226-238-34.lf.br.cox.net)
[21:35:10] <KillerWasp> 🕷️
[21:35:19] <KillerWasp> pragma-# now you have two spiders.
[21:35:58] <KillerWasp> or one, if the first is fake.
[21:38:28] <KillerWasp> btw, i found my old project for compiling a cross-compiling tools.
[21:38:34] <KillerWasp> https://bitbucket.org/rmbeer/rustwasher/src/master/
[21:38:53] *** Quits: kurahaupo (~kurahaupo@pa49-181-167-244.pa.nsw.optusnet.com.au) (Remote host closed the connection)
[21:39:08] <KillerWasp> My idea is quite original, but it needs people to maintain it.
[21:39:09] *** Joins: kurahaupo (~kurahaupo@pa49-181-167-244.pa.nsw.optusnet.com.au)
[21:39:34] *** Joins: kurahaupo_ (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[21:39:41] *** Quits: kurahaupo (~kurahaupo@pa49-181-167-244.pa.nsw.optusnet.com.au) (Killed (NickServ (GHOST command used by kurahaupo_!~kurahaupo@220-245-23-126.static.tpgi.com.au)))
[21:39:48] *** kurahaupo_ is now known as kurahaupo
[21:43:02] *** Joins: Guest25 (~Guest25@49.205.86.41)
[21:43:58] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:44:16] *** Parts: Guest25 (~Guest25@49.205.86.41) ()
[21:48:49] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[21:49:51] *** Joins: MarderIII (~MarderIII@enneman.demon.nl)
[21:53:28] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[21:55:30] *** Joins: dlss^ (~dlss@wsip-68-227-92-38.mc.at.cox.net)
[22:01:36] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:01:51] *** Joins: satanist (~satanist@bureaucracy.bureaucracy.de)
[22:04:19] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[22:09:25] *** Joins: tinhatcat (~manjaro-g@2620:103:a000:2201:8e4c:af6a:e11c:11a1)
[22:09:30] *** Joins: luizfrds (~Luiz@152.250.243.147)
[22:10:06] *** Quits: tinhatcat (~manjaro-g@2620:103:a000:2201:8e4c:af6a:e11c:11a1) (Client Quit)
[22:21:04] *** Quits: MarderIII (~MarderIII@enneman.demon.nl) (Quit: Leaving)
[22:21:21] *** Quits: constxo (~brad@192.75.101.164) (Ping timeout: 245 seconds)
[22:24:09] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:183d:b10c:65fa:9d96) (Remote host closed the connection)
[22:24:30] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:25:59] *** Joins: V-T60 (~v@91.203.24.166)
[22:27:28] *** Joins: Nspace (~Nspace@user/nspace)
[22:33:31] *** Joins: phao (~phao@2804:d45:8e7a:de00:15bf:2a09:24f1:7b84)
[22:36:06] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-88d0-d5e8-f775-5f00.res6.spectrum.com)
[22:38:21] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[22:40:29] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[22:41:11] *** Joins: phao_ (~phao@2804:d45:8e7a:de00:15bf:2a09:24f1:7b84)
[22:41:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:42:26] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[22:43:03] *** Joins: phao__ (~phao@189-106-19-15.ultrabandalargafibra.com.br)
[22:43:11] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:43:19] *** Quits: phao (~phao@2804:d45:8e7a:de00:15bf:2a09:24f1:7b84) (Ping timeout: 260 seconds)
[22:43:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:44:01] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[22:44:29] *** Parts: phao__ (~phao@189-106-19-15.ultrabandalargafibra.com.br) ()
[22:45:07] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:32] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[22:45:39] *** Quits: phao_ (~phao@2804:d45:8e7a:de00:15bf:2a09:24f1:7b84) (Ping timeout: 260 seconds)
[22:47:28] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:23] *** Joins: phao (~phao@2804:d45:8e7a:de00:15bf:2a09:24f1:7b84)
[22:49:14] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 260 seconds)
[22:49:51] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[22:51:18] *** Joins: topside_ (~topside@ip68-226-238-34.lf.br.cox.net)
[22:54:59] *** Quits: topside (~topside@ip68-226-238-34.lf.br.cox.net) (Ping timeout: 264 seconds)
[22:56:39] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Read error: Connection reset by peer)
[22:57:15] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:57:50] *** Joins: Psybur (~Psybur@mobile-166-170-29-12.mycingular.net)
[22:58:03] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:58:21] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:58:45] *** Joins: Betal (~Betal@user/betal)
[23:00:21] *** Joins: Filystyn (~piotr@user/filystyn)
[23:00:23] <Filystyn> hello
[23:00:31] <Filystyn> *datasize -= x;
[23:00:39] *** Quits: jbauer (~jbauer@146.71.11.98) (Remote host closed the connection)
[23:00:41] <Filystyn> what gets decremented *datasize or the pointer
[23:00:47] <Psybur> It took me a day to figure out that for a float *p, p + 1 will give the address to the 2nd element, not p + sizeof(float). :{ What if I really want the address of the second byte of the first float though?
[23:01:51] *** Joins: jbauer (~jbauer@146.71.11.98)
[23:01:55] <Filystyn> sizeof( float ) would be really insane tbh ;-)
[23:02:12] *** Joins: superboot (~agentgasm@user/superboot)
[23:02:20] <Filystyn> in that example*
[23:02:33] *** Joins: vicfred (~vicfred@user/vicfred)
[23:02:43] <Psybur> No it makes more sense, because it adds 4 to the address behind the scenes
[23:02:50] <Psybur> I dont like magic :P
[23:02:58] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[23:03:51] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 260 seconds)
[23:03:54] *** Joins: quartz (~quartz@user/quartz)
[23:04:15] *** Quits: Arthuria (~Arthuria@user/arthuria) (Ping timeout: 260 seconds)
[23:05:04] *** Quits: Sujmikro (~Sujmikro@cpe-188-252-138-63.zg5.cable.xnet.hr) (Ping timeout: 244 seconds)
[23:06:09] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:06:22] <Filystyn> looking at precedance it should increment the *datasize, vide value not pointer
[23:07:15] *** Quits: phao (~phao@2804:d45:8e7a:de00:15bf:2a09:24f1:7b84) (Quit: Leaving)
[23:07:53] <Filystyn> I had in mind ++ doing stupid things seems -= is pretty low
[23:08:31] <Maxdamantus> Psybur: what if the implementation doesn't want to support unaligned addresses?
[23:09:29] <Maxdamantus> Psybur: if `sizeof (float) == 4`, it could easily store the byte address right-shifted over 2 bits.
[23:10:01] <Maxdamantus> and then your interpretation of `p + 1` doesn't make much sense.
[23:10:13] *** Quits: mahmutov (~mahmutov@37.155.35.85) (Ping timeout: 244 seconds)
[23:11:58] *** Joins: phao (~phao@2804:d45:8e7a:de00:15bf:2a09:24f1:7b84)
[23:12:03] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[23:12:27] *** Quits: phao (~phao@2804:d45:8e7a:de00:15bf:2a09:24f1:7b84) (Read error: Connection reset by peer)
[23:13:11] *** Quits: kadavul (~vazha@103.165.21.248) (Ping timeout: 260 seconds)
[23:14:39] *** Joins: seninha (~seninha@user/seninha)
[23:17:32] *** Joins: Sujmikro (~Sujmikro@cpe-188-252-128-28.zg5.cable.xnet.hr)
[23:18:21] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:18:23] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[23:19:20] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[23:19:33] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[23:22:32] *** Quits: magla (~gelignite@55d4378c.access.ecotel.net) (Quit: Stay safe!)
[23:22:40] *** Quits: dmaroo (~dhruv@2409:4070:2e1b:c65d:acb5:3c04:828:2b94) (Quit: Konversation terminated!)
[23:26:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-88d0-d5e8-f775-5f00.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:26:53] *** Quits: lompik (~lompik@user/lompik) (Quit: WeeChat 3.3)
[23:27:18] *** Joins: Guest79 (~textual@77.252.63.98)
[23:31:04] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[23:31:44] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[23:32:27] *** Joins: Nspace (~Nspace@user/nspace)
[23:32:55] *** Quits: Guest79 (~textual@77.252.63.98) (Quit: Textual IRC Client: www.textualapp.com)
[23:33:14] *** Joins: Guest79 (~textual@77.252.63.98)
[23:34:39] <Filystyn> I have a big function that does something
[23:34:39] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[23:34:44] *** Quits: Guest79 (~textual@77.252.63.98) (Client Quit)
[23:34:54] <Filystyn> and no I won't cut it into pieces because no. 
[23:35:15] <Filystyn> And now I would like to have one more function that does soemthign a bit else but needs one more line simply
[23:35:26] <Filystyn> in function number first
[23:35:33] <Filystyn> and i got this shitty idea to
[23:35:47] <Filystyn> like turn the first code into two macros
[23:36:09] <Filystyn> and than the thrid one would like be macro1, special line, macro2
[23:36:19] <Filystyn> so yeah no code copying. 
[23:36:34] <Filystyn> I am all yours
[23:37:37] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[23:40:12] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-88d0-d5e8-f775-5f00.res6.spectrum.com)
[23:42:13] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[23:43:58] *** Joins: Nspace (~Nspace@user/nspace)
[23:48:59] *** Quits: Nspace (~Nspace@user/nspace) (Ping timeout: 264 seconds)
[23:51:07] *** Quits: marlboro (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:52:04] *** Joins: Akuli (~Akuli@213.216.209.22)
[23:53:02] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[23:54:48] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:55:15] <makersmasher> I am going through K&R as a C refresher, I have never extensively used C, and hte last time I really gave it a go was 15 years ago
[23:55:28] <makersmasher> https://gist.github.com/makersmasher/eacb2922945bbed1af1435f09f5303dd
[23:55:29] <candide> Title of makersmasher's link: histogram.c · GitHub
[23:56:05] <makersmasher> I am doing the histogram exercise, when I check the example solutions given online, they look a lot more complicated than mine; I just want to make sure I am not missing something
[23:56:15] <makersmasher> (and that I satisified the requirement)
[23:56:46] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[23:59:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-88d0-d5e8-f775-5f00.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
