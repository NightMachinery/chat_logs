[00:00:45] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:33:37] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (Ping timeout: 240 seconds)
[00:36:15] *** Joins: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com)
[00:36:15] *** Quits: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com) (Changing host)
[00:36:15] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[00:45:34] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 256 seconds)
[00:46:09] *** Quits: Frozenlock (~user@modemcable251.64-203-24.mc.videotron.ca) (Remote host closed the connection)
[01:15:31] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[01:17:01] *** Quits: struchu (~struchu@staticline-31-183-166-112.toya.net.pl) (Quit: WeeChat 3.3)
[02:06:33] *** Quits: kipper (~kipz@home.kipz.org) (Quit: Leaving)
[02:06:42] *** Joins: kipz (~kipz@home.kipz.org)
[02:32:29] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:42:02] *** thelounge98857 is now known as gb
[02:42:10] *** gb is now known as ggb
[02:44:12] *** Quits: schmudde (~schmudde@93-35-146-205.ip55.fastwebnet.it) (Ping timeout: 268 seconds)
[02:46:05] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[02:56:58] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:eab3:82ab:8055:296c)
[03:04:24] *** Quits: azureus (~azureus@49.207.203.40) (Ping timeout: 256 seconds)
[03:06:06] *** Joins: azureus (~azureus@49.207.192.155)
[03:19:52] *** Joins: joe_colben (~joe____co@185.190.112.211)
[03:39:35] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[03:41:48] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 256 seconds)
[03:45:33] *** Quits: azureus (~azureus@49.207.192.155) (Ping timeout: 256 seconds)
[03:47:59] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:eab3:82ab:8055:296c) (Quit: WeeChat 3.2)
[04:04:00] *** ggb is now known as Guest7283
[04:04:01] *** Quits: Guest7283 (6c05ba6c@67.205.143.82) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[04:04:10] *** Joins: Guest7283 (6c05ba6c@67.205.143.82)
[04:05:05] *** Joins: ggb (a62ffbaf4f@2604:bf00:561:2000::3ac)
[04:07:29] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[04:28:01] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[04:29:16] <kakuhen> out of curiosity, does anyone here use emacs for clojure projects? I'm trying to get into Clojure, but it's difficult for me because I am very used to the workflow of Emacs+SLY and I want something like that when working with Lisp-y things in general
[04:29:47] <kakuhen> so I guess my question is: what is the most common editing workflow for clojure projects? regardless of skill level
[04:31:57] <technomancy> I think Emacs always comes out as #1 in the yearly clojure user surveys
[04:33:58] <technomancy> https://www.surveymonkey.com/results/SM-S2L8NR6K9/ yeah it's #1 with 43%
[04:35:17] <technomancy> I've never used sly but maybe it would help to phrase your question with some more specificity
[04:35:47] <technomancy> I have used slime and afaict cider is a lot like that, minus the parts that are completely impossible to do in clojure like the restarts
[04:45:59] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[04:47:46] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (Quit: Gone.)
[04:47:48] *** Quits: form_fee- (~form_feed@nixon.einval.eu) (Quit: ZNC 1.8.2 - https://znc.in)
[04:48:03] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[04:48:04] *** Joins: form_feed (~form_feed@user/f/x-7101985)
[04:50:00] *** Quits: jjhoo (~jahakala@user/jjhoo) (Ping timeout: 268 seconds)
[04:50:40] *** Joins: jjhoo (~jahakala@user/jjhoo)
[04:55:31] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[04:58:22] *** Joins: azureus (~azureus@49.207.192.155)
[05:07:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:13:54] *** Quits: yauhsien (~Yau-Hsien@118-167-40-21.dynamic-ip.hinet.net) (Quit: Leaving)
[05:26:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:27:12] <kakuhen> Yeah, I'm fine with the lack of restarts in clojure given that it's a whole different language. I'll try out cider for now
[05:27:52] <kakuhen> Basically, I like the features of SLY such as "stickers," which let you select a variable in your code and let you see how the value changes as the program runs. Then the usual things like "jump to definition" when you place your cursor on a function name 
[05:29:23] <kakuhen> Also, I assume Cider works with Clojurescript as well
[05:30:23] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:37:37] *** Quits: azureus (~azureus@49.207.192.155) (Ping timeout: 240 seconds)
[05:55:58] <technomancy> I haven't used cider for a few years so I dunno about the stickers but jump-to-definition has worked for a long time; M-.
[05:57:20] *** Joins: molson (~molson@2001:48f8:704a:123d::75f:1037)
[05:58:32] <kakuhen> nice! i will configure cider then
[05:59:19] <kakuhen> my main interest with clojure right now is to see how to use clojurescript for a mobile web app, or something using react native
[06:39:10] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:24:25] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:25:36] *** Joins: mzan (~quassel@mail.asterisell.com)
[07:31:59] *** Quits: seabre (~seabre@user/seabre) (Quit: ZNC 1.8.2 - https://znc.in)
[07:33:15] *** Joins: seabre (~seabre@user/seabre)
[07:35:40] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[07:41:47] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[07:53:24] *** Quits: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz) (Ping timeout: 256 seconds)
[08:00:44] *** Joins: mbuf (~Shakthi@171.61.172.103)
[08:05:19] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[08:20:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:22:01] *** Joins: yauhsien (~Yau-Hsien@118-167-40-21.dynamic-ip.hinet.net)
[08:38:52] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:40:10] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[08:44:58] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[08:46:17] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[09:08:56] <v3ga> hmmm... kakuhen  take a look at enlightenment-mode built in cider
[09:16:44] *** Joins: puchka (~marius@165.73.240.62)
[09:29:39] <andreyorst> technomancy: https://github.com/IGJoshua/farolero - restarts in clojure
[09:31:22] <andreyorst> kakuhen: I use Emacs with CIDER at work, so if you have questions about CIDER feel free to ask!
[09:33:43] <kakuhen> Sure. Thanks for the suggestions and advice, everyone!
[09:41:34] *** Quits: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320) (Ping timeout: 260 seconds)
[09:55:52] *** Quits: Ekho (~Ekho@user/ekho) (Quit: CORE ERROR, SYSTEM HALTED.)
[09:59:16] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:1164:2854:8a6e:b4e3)
[10:03:06] *** Joins: joe_colben (~joe____co@185.190.112.211)
[10:08:40] *** Joins: Ekho (~Ekho@user/ekho)
[10:14:51] *** Quits: jemoka_ (~jemoka@user/jemoka) (Ping timeout: 256 seconds)
[10:23:01] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[10:23:23] *** Joins: joe_colben (~joe____co@185.190.112.211)
[10:23:26] *** Joins: silasfox (~sbv@p200300cec7219d00ef0f653f23257d7e.dip0.t-ipconnect.de)
[10:23:30] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[10:51:10] *** Joins: struchu (~struchu@staticline-31-183-182-43.toya.net.pl)
[10:55:28] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[10:58:10] *** Joins: joe_colben (~joe____co@185.190.112.211)
[11:00:58] <samebchase> technomancy: what do you use instead of CIDER, Conjure?
[11:03:10] <samebchase> kakuhen: TBH, I found stickers weird when I tried them. CIDER's debugger is much easier to use. I wish CL/SLY had something like that.
[11:11:17] *** Quits: silasfox (~sbv@p200300cec7219d00ef0f653f23257d7e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:11:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:11:34] *** Joins: silasfox (~sbv@p4fe8d6cb.dip0.t-ipconnect.de)
[11:19:44] *** Quits: puchka (~marius@165.73.240.62) (Ping timeout: 268 seconds)
[11:21:26] *** Joins: puchka (~marius@165.73.240.60)
[11:37:31] *** Joins: Major_Biscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl)
[11:37:41] *** Joins: Afroboy (~afroboy@105.107.120.194)
[11:38:25] <andreyorst> samebchase: technomancy uses monroe IIRC
[11:41:19] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 268 seconds)
[12:00:16] <samebchase> oh wow, I haven't heard of that, thanks andreyorst
[12:01:15] <yeik-the-spik[m]> <kakuhen> "Also, I assume Cider works..." <- IIRC the debugger does not work. Definitely some features do not work.
[12:01:15] <andreyorst> it's very minimalist, a single file with everything in it, but it mostly only provides a REPL
[12:02:15] <yeik-the-spik[m]> For the stickers, what about using the debugger? I do not know what stickers are, but based on your description, thats the closest feature
[12:03:27] <kakuhen> yeah, stickers just wrap a macro around a variable and then record how the value changes over time... it's  not a feature i use often, but it is one of many "little things" that adds to the experience when using SLY
[12:03:45] <kakuhen> in any case, I have just installed cider in my emacs and i'm gonna try following some clojure tutorial right now
[12:05:32] <yeik-the-spik[m]> overall, I say CL has a better coding experience on emacs.
[12:05:51] <samebchase> kakuhen: I usually recommend the book "Programming Clojure". That covers the most material in the shortest number of pages.
[12:06:15] <samebchase> ~200 pages, and you've had gotten a whirlwind tour of the entire language.
[12:06:25] <kakuhen> Sounds good. I'll try getting a copy of it
[12:07:06] <samebchase> There is another larger book called "Clojure Programming" which I haven't read, as yet. Make sure you get "Programming Clojure" 👍
[12:07:37] *** Quits: Afroboy (~afroboy@105.107.120.194) (Ping timeout: 240 seconds)
[12:09:24] <kakuhen> ooh the end of the first text has a java interop chapter -- that's really good
[12:09:39] <kakuhen> most of my motivation to learn how to use clojure is the java interop, and clojurescript, hehe
[12:11:30] <samebchase> If you already know Java, the interop is straightforward. Unfortunately, for me, I learnt Java through Clojure, which was a little trickier, but no biggie though
[12:11:44] <andreyorst> same
[12:11:58] <andreyorst> java has a lot of implicit stuff going on that becomes explicit in Clojure
[12:12:35] <andreyorst> and if you don't know about these kind of things, like implicit arrays in variadic functions for example, interop can be very frustrating
[12:13:08] <samebchase> I remember getting frustrated with some array stuff in interop code yeah!
[12:16:56] *** Quits: uncleyear (~ian@pppoe.178-66-158-61.dynamic.avangarddsl.ru) (Remote host closed the connection)
[12:17:51] *** Joins: uncleyear (~ian@pppoe.178-66-158-61.dynamic.avangarddsl.ru)
[12:27:55] *** Joins: Afroboy (~afroboy@static.193.145.201.195.clients.your-server.de)
[12:42:25] <ridcully_> just to mention it: portal works regardless of "ide" or editor,  it's very helpful if your data consists of large trees/tables/realworldstuff
[12:42:31] <ridcully_> it's clojure.inspector on steroids
[12:48:31] *** Quits: paul_j (~user@67.26.169.217.in-addr.arpa) (Remote host closed the connection)
[12:52:54] *** Joins: azureus (~azureus@49.207.192.155)
[12:55:04] *** Quits: Major_Biscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[12:57:31] *** Joins: MajorBiscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl)
[13:04:33] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[13:07:23] <andreyorst> cider has its own inspector thing, which is sometimes handy, but I always forget how to navigate it
[13:08:07] <andreyorst> I wish there was something like in Proto REPL, where one can expand or fold uninteresting parts of data a structure
[13:16:35] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[13:22:34] *** Joins: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320)
[13:28:06] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[13:32:03] <ridcully_> inspector and portal can do that.  inspector is part of clojure and you have to run it with the result.  portal listens on tap>
[13:40:37] *** Quits: bsaha (uid538054@id-538054.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[13:40:57] *** Quits: ggb (a62ffbaf4f@2604:bf00:561:2000::3ac) (Ping timeout: 240 seconds)
[13:41:02] *** Joins: Jing_ (~hedgehog@125.105.15.211)
[13:41:11] *** Joins: dale_ (~dale@user/dale)
[13:41:11] *** Joins: ggb (a62ffbaf4f@2604:bf00:561:2000::3ac)
[13:41:13] *** Joins: dfreeman_ (f6e24f0053@2604:bf00:561:2000::30d)
[13:41:37] *** Quits: jinks (~jinks@2001:470:1f18:3aa:1d8:0:1c:34ac) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: dale (dale@user/dale) (Ping timeout: 240 seconds)
[13:41:43] *** Joins: conjunctive_ (sid433686@id-433686.helmsley.irccloud.com)
[13:41:49] *** Joins: obviyus_ (sid415299@user/obviyus)
[13:41:57] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:1164:2854:8a6e:b4e3) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: dfreeman (f6e24f0053@user/dfreeman) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: devn3 (devn@2600:3c02::f03c:92ff:feeb:d478) (Ping timeout: 240 seconds)
[13:41:57] *** dfreeman_ is now known as dfreeman
[13:41:59] *** dale_ is now known as dale
[13:42:01] *** Joins: gko` (~user@2400:8902::f03c:91ff:fe70:e605)
[13:42:09] *** Joins: victor__ (sid208353@id-208353.tinside.irccloud.com)
[13:42:09] *** Joins: bsaha (uid538054@id-538054.uxbridge.irccloud.com)
[13:42:17] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::68b3) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: Solid (~slot@xmonad/slotThe) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: obviyus (sid415299@user/obviyus) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: cyberbanjo (mksybr@tilde.team) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: shem (~shem@saltus.discendum.com) (Ping timeout: 240 seconds)
[13:42:18] *** obviyus_ is now known as obviyus
[13:42:18] *** conjunctive_ is now known as conjunctive
[13:42:18] *** Joins: Solid_ (~slot@xmonad/slotThe)
[13:42:37] *** Quits: victor_ (uid208353@id-208353.tinside.irccloud.com) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: gko (~user@user/gko) (Ping timeout: 240 seconds)
[13:44:02] *** Joins: Jing (~hedgehog@125.105.15.211)
[13:44:15] *** Joins: devn3 (devn@2600:3c02::f03c:92ff:feeb:d478)
[13:44:26] *** Joins: shem (~shem@saltus.discendum.com)
[13:44:31] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Ping timeout: 256 seconds)
[13:44:31] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 256 seconds)
[13:45:39] *** Quits: Jing_ (~hedgehog@125.105.15.211) (Ping timeout: 256 seconds)
[13:45:39] *** Quits: azureus (~azureus@49.207.192.155) (Ping timeout: 256 seconds)
[13:46:30] *** Joins: jinks (~jinks@2001:470:1f18:3aa:1d8:0:1c:34ac)
[13:47:14] *** Joins: azureus (~azureus@49.207.192.155)
[13:47:24] *** Joins: jespada (~jespada@87.74.36.188)
[13:48:01] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[13:52:03] <andreyorst> no, not like that
[13:52:50] <andreyorst> both inspector and portal use a different view of your data. I'm just talking about the same code folding you have in the editor but provided for evaluation result in a popup
[13:52:53] *** Solid_ is now known as Solid
[13:53:27] <andreyorst> what I dislike about inspector the most is that it doesn't use regular clojure syntax for the data
[13:54:19] <andreyorst> ideally I'd like to have something like molds from glamorous toolkit where you can specify what kind of inspectors you want for different kinds of data
[13:54:46] <ridcully_> i sound like a broken reacord, but portal can do that
[13:55:11] *** Joins: cyberbanjo (mksybr@tilde.team)
[13:55:30] <ridcully_> you can also easily write your own.  e.g. render a black/white checker board for your game of life data
[13:56:04] <ridcully_> and i have not used inspector for quite a while, but i am pretty sure, that the tree was just plain clojure data?
[13:56:37] <ridcully_> granted, the swing UI is quite dated.  but it was nice to drill down into huge trees
[13:57:16] <ridcully_> i never used to table inspector though because my problems usually are not of that kind
[14:06:51] *** Quits: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz) (Ping timeout: 268 seconds)
[14:12:39] *** Quits: Jing (~hedgehog@125.105.15.211) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:16:55] *** Quits: jackhill (~jackhill@kalessin.dragonsnail.net) (Ping timeout: 250 seconds)
[14:17:14] *** Joins: Spec` (~spec@user/spec)
[14:17:21] *** Quits: croeso[m] (~croesovep@2001:470:69fc:105::1:aaa) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: spec (~spec@user/spec) (Ping timeout: 250 seconds)
[14:18:51] *** Joins: jackhill (~jackhill@kalessin.dragonsnail.net)
[14:29:48] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:c75b:87c1:1091:c9c8)
[14:39:31] *** Joins: croeso[m] (~croesovep@2001:470:69fc:105::1:aaa)
[14:39:48] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[14:40:10] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:4458:b22e:b9a7:2cea)
[14:41:58] *** Quits: azureus (~azureus@49.207.192.155) (Ping timeout: 256 seconds)
[14:53:28] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[15:03:36] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: mmos[m] (~mmosmatri@2001:470:69fc:105::1:8340) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: gonewest818[m] (~gonewest8@2001:470:69fc:105::f38b) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: nivekuil (~nivekuilc@2001:470:69fc:105::d57e) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: thinkerer0891[m] (~thinkerer@2001:470:69fc:105::1:5c62) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: karthink[m] (~karthinkm@2001:470:69fc:105::d777) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: ocTan_14_yKp[m] (~replikvlt@2001:470:69fc:105::2cb0) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: golanv (~golanv@2001:470:69fc:105::54c) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: ifs[m] (~ifsmatrix@2001:470:69fc:105::1:7342) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: croeso[m] (~croesovep@2001:470:69fc:105::1:aaa) (Quit: Bridge terminating on SIGTERM)
[15:10:17] *** Joins: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736)
[15:14:40] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-43fc-8805-e18a-4a61.res6.spectrum.com) (Remote host closed the connection)
[15:17:42] *** Quits: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736) (Remote host closed the connection)
[15:21:14] <andreyorst> I didn't knew you can make your own inspector, this is cool
[15:21:47] <andreyorst> if only there was a good framework for building these inspecors fast, we could compete with smalltalk in this regard :D
[15:23:56] <ridcully_> if you have the time : https://www.youtube.com/watch?v=Tj-iyDo3bq0 - this is the author showing off the features at the london clojurists remote conference some weeks ago
[15:24:19] <andreyorst> thx, will look into it
[15:29:03] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:c75b:87c1:1091:c9c8) (Ping timeout: 250 seconds)
[15:29:51] *** Joins: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736)
[15:32:43] *** Quits: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736) (Remote host closed the connection)
[15:37:18] *** Joins: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736)
[15:40:49] *** Joins: yoonkn (~user@175.197.208.79)
[15:46:34] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[15:46:34] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[15:46:34] *** Joins: nivekuil (~nivekuilc@2001:470:69fc:105::d57e)
[15:46:34] *** Joins: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152)
[15:46:34] *** Joins: golanv (~golanv@2001:470:69fc:105::54c)
[15:46:34] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[15:46:34] *** Joins: croeso[m] (~croesovep@2001:470:69fc:105::1:aaa)
[15:46:34] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[15:46:34] *** Joins: ocTan_14_yKp[m] (~replikvlt@2001:470:69fc:105::2cb0)
[15:46:34] *** Joins: thinkerer0891[m] (~thinkerer@2001:470:69fc:105::1:5c62)
[15:46:34] *** Joins: karthink[m] (~karthinkm@2001:470:69fc:105::d777)
[15:46:34] *** Joins: ifs[m] (~ifsmatrix@2001:470:69fc:105::1:7342)
[15:46:46] *** Joins: gonewest818[m] (~gonewest8@2001:470:69fc:105::f38b)
[15:46:48] *** Joins: mmos[m] (~mmosmatri@2001:470:69fc:105::1:8340)
[15:50:05] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:c75b:87c1:1091:c9c8)
[15:52:05] *** Quits: bsaha (uid538054@id-538054.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:03:14] *** Quits: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736) (Quit: Client limit exceeded: 20000)
[16:03:40] *** Quits: nivekuil (~nivekuilc@2001:470:69fc:105::d57e) (Quit: Client limit exceeded: 20000)
[16:04:53] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[16:10:09] *** Quits: thinkerer0891[m] (~thinkerer@2001:470:69fc:105::1:5c62) (Quit: Client limit exceeded: 20000)
[16:10:10] *** Quits: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152) (Quit: Client limit exceeded: 20000)
[16:10:10] *** Quits: croeso[m] (~croesovep@2001:470:69fc:105::1:aaa) (Quit: Client limit exceeded: 20000)
[16:10:10] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Quit: Client limit exceeded: 20000)
[16:10:26] *** Quits: ocTan_14_yKp[m] (~replikvlt@2001:470:69fc:105::2cb0) (Quit: Client limit exceeded: 20000)
[16:10:42] *** Quits: ifs[m] (~ifsmatrix@2001:470:69fc:105::1:7342) (Quit: Client limit exceeded: 20000)
[16:11:47] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Quit: Client limit exceeded: 20000)
[16:15:30] *** Quits: golanv (~golanv@2001:470:69fc:105::54c) (Quit: Client limit exceeded: 20000)
[16:17:18] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Client limit exceeded: 20000)
[16:17:31] *** Quits: karthink[m] (~karthinkm@2001:470:69fc:105::d777) (Quit: Client limit exceeded: 20000)
[16:30:35] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:c75b:87c1:1091:c9c8) (Ping timeout: 250 seconds)
[16:37:19] *** Joins: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152)
[16:37:19] *** Quits: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz) (Ping timeout: 250 seconds)
[16:37:19] <yeik-the-spik[m]> Does something like "Java for Clojure programmers" exists? I see a lot of stuff the other way around. I am banging my head against this old Java codebase and my lack of java knowledge is beginning to annoy me. 
[16:41:43] <andreyorst> I once wanted to find a decent book that covers most of Java on a surface level just to know what's there, and failed
[16:41:43] *** Joins: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736)
[16:41:44] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[16:41:58] *** Joins: golanv (~golanv@2001:470:69fc:105::54c)
[16:41:58] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[16:41:58] *** Joins: nivekuil (~nivekuilc@2001:470:69fc:105::d57e)
[16:41:58] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[16:41:58] *** Joins: croeso[m] (~croesovep@2001:470:69fc:105::1:aaa)
[16:41:58] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[16:42:11] *** Joins: ocTan_14_yKp[m] (~replikvlt@2001:470:69fc:105::2cb0)
[16:42:23] *** Joins: karthink[m] (~karthinkm@2001:470:69fc:105::d777)
[16:42:23] <andreyorst> so I came to a conclusion that thre's no such book even for java programmers
[16:42:35] *** Joins: thinkerer0891[m] (~thinkerer@2001:470:69fc:105::1:5c62)
[16:42:47] *** Joins: ifs[m] (~ifsmatrix@2001:470:69fc:105::1:7342)
[16:52:47] <andreyorst> ridcully_: I've watched the talk - pretty impressive stuff
[16:53:10] <andreyorst> now I need a emacs frontend for it ofc :D
[17:01:34] *** Quits: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320) (Remote host closed the connection)
[17:03:19] <sobel> I've been using Java since 1.2 but working with Vert.x has exposed me to so much of the good stuff in/since 8
[17:14:06] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:2861:5684:d4c6:df00)
[17:30:57] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Ping timeout: 240 seconds)
[17:32:08] *** Quits: gko` (~user@2400:8902::f03c:91ff:fe70:e605) (Changing host)
[17:32:08] *** Joins: gko` (~user@user/gko)
[17:34:57] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[17:45:00] *** Quits: kristianpaul (~paul@user/kristianpaul) (Ping timeout: 256 seconds)
[17:46:19] *** Joins: kristianpaul (~paul@user/kristianpaul)
[17:53:08] <Para> yeik-the-spik[m]: it'd be kinda short, as Java and Clojure come from entirely different genuses of proglangs
[18:16:10] *** Quits: silasfox (~sbv@p4fe8d6cb.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:17:18] *** Quits: kristianpaul (~paul@user/kristianpaul) (Ping timeout: 256 seconds)
[18:19:18] *** Quits: Guest7283 (6c05ba6c@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[18:25:14] *** Joins: kristianpaul (~paul@user/kristianpaul)
[18:43:42] <yeik-the-spik[m]> Yup, the one I understand and the one I dont xP
[18:45:29] <sm2n> It may be hard to believe, but Java has some shared ancestry with Common Lisp
[18:46:08] <TimMc> andreyorst: Maybe some kind of listing of all the syntactic forms of Java with a brief description of each?
[18:58:07] *** Quits: struchu (~struchu@staticline-31-183-182-43.toya.net.pl) (Quit: WeeChat 3.3)
[19:05:45] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:4458:b22e:b9a7:2cea) (Quit: Textual IRC Client: www.textualapp.com)
[19:07:43] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[19:20:40] *** Joins: seschwar (~seschwar@user/seschwar)
[19:30:52] *** Quits: Afroboy (~afroboy@static.193.145.201.195.clients.your-server.de) (Remote host closed the connection)
[19:42:49] *** Joins: selfsymmetric-mu (~matt@c-73-29-248-41.hsd1.nj.comcast.net)
[19:44:50] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[19:54:18] *** Quits: selfsymmetric-mu (~matt@c-73-29-248-41.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[19:54:30] *** Joins: selfsymmetric-mu (~matt@c-73-29-248-41.hsd1.nj.comcast.net)
[19:58:57] *** Spec` is now known as spec
[20:13:19] *** Joins: son0p (~ff@181.136.122.143)
[20:16:30] <sobel> i don't think you can build a modern major product with out the wisdom (and a couple participants) from lisp's better years
[20:16:50] <sobel> (for very traditional definitions of 'better')
[20:17:55] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:21:33] <Para> I was thinking last evening just how horrible it would be to mix python's evaluation with Clojure like lisp.
[20:22:09] <Para> I mean the thing which makes python's `__name__ = "__main__"` work.
[20:25:16] <technomancy> wellll I mean hylang exists
[20:25:22] <technomancy> but it has a lot of problems so yeah
[20:25:53] <logiz> `__name__ ==  "__main__"` is something that's bothered me for years
[20:27:51] *** Joins: Frozenlock (~user@modemcable251.64-203-24.mc.videotron.ca)
[20:29:40] <technomancy> I don't get why people don't just create separate bin scripts
[20:29:55] <technomancy> I dunno. there's a lot I don't understand about python but I'm OK with that.
[20:30:17] <sobel> as a rather impatient person, i stopped using python when it was a choice a while back
[20:36:24] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[20:39:06] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 260 seconds)
[20:42:41] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[20:43:47] <yeik-the-spik[m]> I once wrote this script both in Clojure and Python (mainly because testing different libraries). Python took 4 hours, Clojure took 20 mins.
[20:45:18] <yeik-the-spik[m]> I was a quite novice programmer, that might had had a greater impact, but still. I do not like waiting for computation
[20:46:26] <sobel> where i've employed transducers to cut a map+reduce operation from minutes to seconds, i don't know how to do the same in python. i'd have to learn more python.
[20:46:33] <sobel> and it would be gross
[20:48:16] *** Quits: mbuf (~Shakthi@171.61.172.103) (Quit: Leaving)
[20:52:29] <yeik-the-spik[m]> well, you get most efficiency out of python with list comprehensions or higher order functions (depending on what you are doing).
[20:53:16] <yeik-the-spik[m]> writing functional programming is kind of annoying with python, but you might feel less engrossed
[20:53:44] <yeik-the-spik[m]> or not. just food for thought
[20:53:55] <sobel> it's pretty annoying in java, too
[20:54:21] <sobel> i'm sorta liking vert.x for all-the-concurrent-things but it's no clojure
[21:04:01] *** Joins: silasfox (~sbv@p200300cec7219d00ef0f653f23257d7e.dip0.t-ipconnect.de)
[21:13:03] *** Quits: lunik1 (~lunik1@37.205.14.203) (Quit: :x)
[21:15:19] *** Joins: lunik1 (~lunik1@37.205.14.203)
[21:17:34] *** Quits: puchka (~marius@165.73.240.60) (Read error: Connection reset by peer)
[21:29:24] *** Quits: MajorBiscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[21:37:17] *** Joins: puchka (~marius@196.240.128.5)
[21:38:09] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[21:46:18] *** Quits: silasfox (~sbv@p200300cec7219d00ef0f653f23257d7e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:51:26] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[21:55:03] <yauhsien> yeik-the-spik[m]: so there are people who is familiar with clojure but never learnt java?
[21:58:55] * technomancy <-
[21:59:04] <Frozenlock> I started Clojure without ever doing Java. Now I can somehow read it, but don't ask me to write anything it.
[21:59:15] <Frozenlock> *in it
[21:59:30] <technomancy> yeah reading java and writing java are very different skills to me
[22:12:19] <yauhsien> Cool.
[22:12:46] <mwnaylor> Scala, then Clojure, have spoiled me. IMO, Java has to much boilerplate and not having immutability by default is a PITA.
[22:15:05] <yauhsien> I got another question. how do clojureurs treat so-called "bottom-up" in Paul Graham's "On Lisp?"
[22:16:58] <goodger> whose?
[22:20:07] <yauhsien> my friend in Taiwan told me that the clojure community tends to nearly avoid using macros but just use off-the-shelf features. so i would like to verify it by my sight.
[22:21:30] <TimMc> Yes, it's generally considered wise not to write macros if you don't need to.
[22:21:37] <TimMc> They don't compose well.
[22:22:53] <technomancy> goodger: hehe
[22:23:29] <yauhsien> Paul Graham told a way to make Lisp practical. By using buttom-up design, the language is extended to fit the problem, while by using top-down design, the application/program is scaled, and both language and application/program meet to some feasible locations.
[22:23:53] <technomancy> yeah you can do bottom-up design without macros
[22:25:08] <technomancy> it's harder in CL than it is in Clojure because CL doesn't quite have first-class functions
[22:25:26] <yauhsien> technomancy: it's not about macro. I just did not understand that when I was told the opinion by my friend.
[22:27:10] <yauhsien> Lisp was designed to be flexible. but why its descendant are treated so boring?
[22:27:57] <technomancy> because people like being able to understand code when they read it
[22:28:10] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::68b3) (Remote host closed the connection)
[22:28:10] <technomancy> same reason I don't invent to words like blorple in the middle of a conversation
[22:28:24] <technomancy> that would be a very blorple thing to do and no one would like it
[22:29:10] <yauhsien> then I told him, "oh, if you would like to use some Lisp-like language but do not want its power, then go back to non-Lisp languages such as Java. do not be twisted."
[22:29:49] <technomancy> lmao, as if the biggest problem with Java is it doesn't have macros
[22:29:59] <technomancy> if your friend thinks that he doesn't know much about Java
[22:30:50] <jeaye> If Java had macros, it'd likely be worse off, since they'd be Java macros.
[22:32:13] <jeaye> Also, all lisps are not so alike. The differences between CL and CLJ are profound.
[22:32:31] <technomancy> I guess if you want to know why people like clojure over java without macros the quickest way is to watch the Simple Made Easy video
[22:32:39] <TimMc> If Java had macros, we wouln't have had to have waited a decade or two for multi-catch and try-with-resources to be added to the language.
[22:32:39] <yauhsien> in Taiwan functional programming is not that famous. then, when someone said, "I love FP. I love its ""functional programming"" features such as ""immutable""," and I just learn that he's newbie to the language.
[22:33:11] <jeaye> If CLJ were not an option, I'd go with an imperative language (probably Rust) before choosing CL. CL is archaic.
[22:33:31] <manicennui> I'd argue that most working software engineers in the US aren't very familiar with FP.
[22:33:59] <technomancy> honest question because I am out of touch with kids these days: is react bringing some FP ideas into the mainstream?
[22:34:10] <technomancy> I heard someone claim that once but I had no idea if it was true
[22:34:11] <jeaye> Yes, to a degree.
[22:34:26] <manicennui> technomancy: I don't know that most people who use things like React are really familiar with the concepts.
[22:34:33] <manicennui> They just use the libraries.
[22:34:50] <jeaye> React focuses on pure components, rather than stateful ones. But it's within the JS ecosystem, so people are still in an OO/imperative mindset.
[22:35:03] <yauhsien> yes.
[22:35:40] <technomancy> I remember having a reeeeally weird conversation during an interview when someone explained they were taking a "functional approach" in JS and all they meant was "I'm going to do this without Objects"; I was so confused.
[22:36:10] <jeaye> It's a gradient.
[22:36:11] *** Joins: lovelymono (~lyna@89-64-82-45.dynamic.chello.pl)
[22:36:20] <lovelymono> hi all!
[22:36:24] <manicennui> I'm not sure I know what someone means when they talk about OO in JS. The basic data structure is a object/hashmap.
[22:36:26] <jeaye> That's just taking a "more functional approach"
[22:36:36] <jeaye> manicennui: JS has classes.
[22:36:40] <manicennui> Sure.
[22:36:41] <technomancy> manicennui: I wasn't sure either
[22:36:46] <manicennui> It has lots of things.
[22:36:58] <yauhsien> it's right. JS is a functional programming language.
[22:37:06] <jeaye> No.
[22:37:23] <manicennui> I guess this devolves into a discussion of what OO and FP are.
[22:37:29] <technomancy> there's no such thing as a functional programming language
[22:37:41] <technomancy> only functional programs and languages used to write them
[22:37:53] <yauhsien> and I can say that JS is also a data-oriented language, in my word.
[22:37:54] <jeaye> JS is multi-paradigm, yauhsien. You can write FP code in it, but that doesn't make it "a funtional programming language".
[22:38:17] <manicennui> How much of the prototypical functionality remains in JS?
[22:38:24] <technomancy> I wrote a whole dang blog post on this https://technomancy.us/194
[22:39:33] <technomancy> a language can only do two things: put an upper bound on "how functional" a program can be, and dictate an effort:functionalness ratio
[22:40:34] <yauhsien> yes or no, I won't argue it about "oh, because it has the feature ""function as first-class citizen"" then I treat it's a FP language, or so-called ""in functional way""." those talks are boring. I would like to just read John McCarthy's notes.
[22:41:29] <technomancy> a lot has changed since 1958
[22:43:14] <yauhsien> that's OK. I just began reading his notes between 1958 and 1960. more materials to read. I am enjoying.
[22:47:34] <wink> technomancy: that definiton wont fly with the smug people needing higher order fucntions :P
[22:47:57] <yauhsien> and I know the mission of Haskell, to be a general discussion basic scheme of functional programming, and it's OK that there are diverse implementations of a FP language.
[22:50:48] *** Joins: azureus (~azureus@49.207.192.155)
[22:53:09] <jeaye> technomancy: A language can also put a lower bound on "how functional" a program can be.
[22:54:14] <jeaye> If the lang doesn't support non-functional things, everything written in the lang must be functional.
[22:54:15] <technomancy> jeaye: hah; technically true =)
[22:55:52] <yauhsien> and thank you for your responses, everyone. :)
[22:57:17] *** Joins: Afroboy (~afroboy@105.106.179.18)
[23:00:15] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[23:08:21] <mwnaylor> Not just Clojure. Conventional Lisp wisdom is to avoid macros, favor functions, unless absolutely neede.
[23:09:51] *** Quits: lovelymono (~lyna@89-64-82-45.dynamic.chello.pl) (Quit: leaving)
[23:12:15] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek-caan)
[23:13:04] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::68b3) (Remote host closed the connection)
[23:15:18] <yauhsien> mwnaylor: so, by the way, it means that macro is for bottom-up design but function isn't?
[23:24:58] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[23:40:35] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[23:46:13] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[23:49:03] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:49:05] <theseb> At the risk of stating the obvious i had an epiphany yesterday that "variable" = "key value pair" !!! if you think about it a variable actually represents TWO things....its name (the key) and what it is = to (the value) !!! they are the same thing! surprising?
[23:49:51] <technomancy> theseb: replace "variable" with "var" and yes that's a key insight clojure has that very few other languages have
[23:50:03] <technomancy> (locals on the other hand are not first-class in the same way)
