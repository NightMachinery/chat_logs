[00:00:05] *** Quits: gour (~user@109.227.37.23) (Remote host closed the connection)
[00:00:35] *** Joins: gour (~gour@109.227.37.23)
[00:00:44] *** Joins: edf0 (edef@panther.nathan7.eu)
[00:03:25] *** Joins: Ebrahim[m] (~dearruden@2001:470:69fc:105::c1ee)
[00:03:38] *** Parts: gour (~gour@109.227.37.23) ()
[00:05:38] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:06:03] *** Joins: sgn (~sgn@user/sgn)
[00:13:40] *** Joins: olly (~olly@2001:470:69fc:105::26f)
[00:15:49] *** spoofer_ is now known as spoofer
[00:21:12] *** Quits: rgrinberg (~textual@2806:101e:7:33a5:9825:bd3b:45be:5a0f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:23:19] *** bremner` is now known as bremner
[00:27:08] *** Joins: adray (~araymatri@2001:470:69fc:105::1873)
[00:31:54] *** Joins: dngray[m] (~dngray@user/dngray)
[00:34:38] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:35:03] *** Joins: sgn (~sgn@user/sgn)
[00:50:20] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:50:45] *** Joins: sgn (~sgn@user/sgn)
[00:53:05] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:53:22] *** Joins: sgn (~sgn@user/sgn)
[01:18:56] *** Quits: Ebrahim[m] (~dearruden@2001:470:69fc:105::c1ee) (Remote host closed the connection)
[01:18:58] *** Quits: dngray[m] (~dngray@user/dngray) (Read error: Connection reset by peer)
[01:18:58] *** Quits: adray (~araymatri@2001:470:69fc:105::1873) (Read error: Connection reset by peer)
[01:18:59] *** Quits: olly (~olly@2001:470:69fc:105::26f) (Read error: Connection reset by peer)
[01:19:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:19:46] *** Joins: sgn (~sgn@user/sgn)
[01:21:31] *** Joins: defolos (~defolos@2001:470:69fc:105::692)
[01:43:59] *** Quits: defolos (~defolos@2001:470:69fc:105::692) (Quit: Client limit exceeded: 20000)
[01:46:53] *** Joins: dngray[m] (~dngray@user/dngray)
[01:46:53] *** Joins: Ebrahim[m] (~dearruden@2001:470:69fc:105::c1ee)
[01:46:53] *** Joins: Tisoxin (~ikosit@user/ikosit)
[01:46:53] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[01:47:05] *** Joins: adray (~araymatri@2001:470:69fc:105::1873)
[01:47:07] *** Joins: olly (~olly@2001:470:69fc:105::26f)
[01:47:46] *** Quits: dngray[m] (~dngray@user/dngray) (Quit: Client limit exceeded: 20000)
[01:48:55] *** Quits: Ebrahim[m] (~dearruden@2001:470:69fc:105::c1ee) (Quit: Client limit exceeded: 20000)
[02:08:50] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:09:16] *** Joins: sgn (~sgn@user/sgn)
[02:23:25] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:23:47] *** Joins: sgn (~sgn@user/sgn)
[02:46:45] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:47:09] *** Joins: sgn (~sgn@user/sgn)
[03:01:49] *** Quits: nzeo_ (~nzeo@80.64.181.150) (Quit: nzeo_)
[03:01:56] *** Joins: nzeo (~nzeo@80.64.181.150)
[03:22:47] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:23:13] *** Joins: sgn (~sgn@user/sgn)
[03:26:20] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:26:45] *** Joins: sgn (~sgn@user/sgn)
[03:40:30] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92)
[03:51:32] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:51:57] *** Joins: sgn (~sgn@user/sgn)
[03:58:18] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92) (Read error: Connection reset by peer)
[03:59:38] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92)
[04:47:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:47:45] *** Joins: sgn (~sgn@user/sgn)
[04:51:30] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:51:56] *** Joins: sgn (~sgn@user/sgn)
[05:03:16] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[05:19:37] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92) (Read error: Connection reset by peer)
[05:21:13] *** Joins: rgrinberg (~textual@177.246.216.2)
[05:26:05] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:26:11] *** Joins: sgn_ (~sgn@user/sgn)
[05:41:47] *** Quits: sgn_ (~sgn@user/sgn) (Ping timeout: 256 seconds)
[07:03:20] *** Quits: rgrinberg (~textual@177.246.216.2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:14:28] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92)
[08:28:57] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:47:39] *** Quits: nzeo (~nzeo@80.64.181.150) (Ping timeout: 256 seconds)
[10:16:33] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:b45e:99aa:a7d7:ba92) (Read error: Connection reset by peer)
[10:17:20] *** Joins: rgrinberg (~textual@177.246.216.125)
[10:18:29] *** Quits: rgrinberg (~textual@177.246.216.125) (Read error: Connection reset by peer)
[10:19:30] *** Joins: rgrinberg (~textual@177.246.216.125)
[11:00:33] *** Joins: kzak (~kzak@nat-37.starnet.cz)
[12:30:05] *** Joins: nzeo (~nzeo@80.64.181.150)
[13:05:08] *** Quits: rgrinberg (~textual@177.246.216.125) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:39:16] *** Joins: seschwar (~seschwar@user/seschwar)
[15:59:49] *** Quits: qyliss (~qyliss@atuin.qyliss.net) (Quit: bye)
[16:01:57] *** Joins: qyliss (~qyliss@atuin.qyliss.net)
[16:03:47] *** Quits: qyliss (~qyliss@atuin.qyliss.net) (Remote host closed the connection)
[16:07:42] *** Joins: qyliss (~qyliss@2001-ba8-1f1-f0bc-0-0-0-2.autov6rev.bitfolk.space)
[16:27:14] *** Joins: gast0n (~g4570n@user/gast0n)
[17:41:27] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 256 seconds)
[17:53:52] *** Joins: gast0n (~g4570n@user/gast0n)
[18:15:57] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 240 seconds)
[18:19:12] *** Joins: gast0n (~g4570n@user/gast0n)
[18:31:27] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 256 seconds)
[18:42:49] *** Joins: gast0n (~g4570n@user/gast0n)
[18:49:01] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 256 seconds)
[18:55:07] *** Joins: nlhowell (~nlhowell@149.160.135.76)
[18:56:49] *** cworth_ is now known as cworth
[19:27:18] *** Quits: lagash_ (lagash@lagash.shelltalk.net) (Quit: ZNC - https://znc.in)
[19:30:19] *** Joins: eblake (~eblake@172-125-7-16.lightspeed.rcsntx.sbcglobal.net)
[19:30:19] *** Quits: eblake (~eblake@172-125-7-16.lightspeed.rcsntx.sbcglobal.net) (Changing host)
[19:30:19] *** Joins: eblake (~eblake@redhat/eblake)
[19:30:35] *** Joins: lagash (lagash@lagash.shelltalk.net)
[19:31:00] *** Joins: gast0n (~g4570n@user/gast0n)
[19:51:01] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 240 seconds)
[19:52:30] *** Joins: gast0n (~g4570n@user/gast0n)
[20:13:40] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[20:46:50] *** Quits: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb) (Remote host closed the connection)
[20:47:20] *** Joins: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb)
[21:45:43] *** Joins: rgrinberg (~textual@2806:101e:7:33a5:693b:2444:ee3f:bdac)
[21:58:39] <vd> notmuch tag +inbox -- "tag:new AND ( to:list1 OR to:list2 OR to:list3 ) AND ( to:addr1 OR to:addr2 )" is the correct way to move to inbox all messages sent on mailing lists directly targeting me, right?
[21:58:39] *** Joins: defolos (~defolos@2001:470:69fc:105::692)
[21:58:40] *** Joins: dngray[m] (~dngray@user/dngray)
[21:58:52] *** Joins: Ebrahim[m] (~dearruden@2001:470:69fc:105::c1ee)
[21:59:09] <bremner> well. it's a bit unusual to use tag:new in your searches.
[21:59:23] <bremner> unless this is in a hook I guess
[21:59:27] <vd> that's from a post-new hook
[21:59:40] <bremner> ok
[21:59:45] <vd> it's for tagging incoming messages
[22:00:08] <bremner> it's one way of achieving what you want.
[22:00:26] <vd> would you recommend another way?
[22:00:27] <bremner> if all your lists use List-ID, you may want to index that
[22:00:58] <vd> I'm not aware of this. Is it a new feature you can match messages on?
[22:01:31] <bremner> there's an example in notmuch-config(1)
[22:01:40] <bremner> index.header
[22:01:59] *** Quits: rgrinberg (~textual@2806:101e:7:33a5:693b:2444:ee3f:bdac) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:03:22] *** Joins: rgrinberg (~textual@2806:101e:7:33a5:693b:2444:ee3f:bdac)
[22:03:48] <vd> that's great, thanks
[22:04:51] <vd> is there something smart to match all my emails rather than querying the config for user.primary_email and user.other_email and joining them with OR/TO?
[22:05:17] <bremner> there is not something smar
[22:05:18] <bremner> t
[22:05:57] <vd> hum ok so either I must specify them explicitly by joining the list or tag +me each address I suppose.
[22:06:52] <bremner> well, you can define a query and use query:me
[22:07:47] <vd> smarter indeed
[22:09:11] <vd> bremner what's the benefit of index.header.List if I may ask? Can  you do for example: notmuch tag +inbox -- "List:* AND query:me"
[22:09:45] <bremner> vd: you can do that, if you use the s-expression query syntax.
[22:10:20] <bremner> "(and (List *) (query me))" should work, if query.me is defined
[22:13:44] <vd> damn I got an emoji in your query. Did you mean: "(and (List *) (query me))"
[22:14:15] <bremner> yes
[22:14:25] <vd> it looks like emacs Lisp syntax, I'm not used to it. Didn't even know you could query with that
[22:15:21] <bremner> it's documented in notmuch-sexp-queries(7)
[22:15:39] <bremner> new in 0.34
[22:16:23] <vd> Can I make notmuch tag +inbox -- "List:* AND query:me" work with the old syntax?
[22:16:34] *** Joins: jao (~jao@71.red-176-80-138.dynamicip.rima-tde.net)
[22:17:14] <bremner> no
[22:17:56] <bremner> at least, not until Xapian query parser supports prefixed wildcards upstream, and I know of no ETA for that
[22:19:48] <vd> hooo the problem was List:*, I thought it was query:me and you were suggesting to use squery
[22:20:47] <bremner> ah, OK. query:me works with the old syntax, yes
[22:24:20] <vd> what's the problem with "List:*"? I seem to query this just fine
[22:24:31] <vd> (I mean it seems to work well so far)
[22:27:09] *** Quits: rgrinberg (~textual@2806:101e:7:33a5:693b:2444:ee3f:bdac) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:28:24] <bremner> it's interpreting it as (unprefixed) "List"
[22:28:47] <bremner> so if all the message bodies have List in them, it will look like it is working
[22:30:50] <bremner> you can verify by running "NOTMUCH_DEBUG_QUERY=y notmuch count 'List:*'"
[22:33:14] <vd> unluckily (or luckily) I get the same notmuch of messages with 'List:*' and '(List *)'
[22:33:29] <bremner> yep. that could happen.
[22:33:50] <vd> and squery is just an internal conversion?
[22:35:07] <bremner> not sure what you mean?
[22:38:10] <vd> notmuch config squery.<name>
[22:40:04] <bremner> yes, I know what squery is, but I don't know what "internal conversion" means here
[22:41:16] <vd> I meant what it is used for? Adding a query but telling notmuch that the syntax is Lisp so that you don't get a syntax error?
[22:42:02] <bremner> vd: it's for 'macro' in the s-expression syntax
[22:42:32] <vd> it is only used for 'notmuch config set' I presume
[22:42:38] <bremner> yep
[22:42:51] <bremner> or editing the file
[22:44:02] <vd> I see
[22:44:33] *** Joins: rgrinberg (~textual@187.223.75.25)
[22:45:05] *** Quits: rgrinberg (~textual@187.223.75.25) (Client Quit)
[22:46:06] <vd> how can I list user queries? I'm currently doing: notmuch config list | grep ^query | cut -d. -f2 | cut -d= -f1
[22:51:34] <bremner> I guess that's it. We don't have a query language for the config files :P
[22:51:48] <vd> ok
[22:52:08] <vd> notmuch count '(and (List *) (to vivien))' fails
[22:52:17] <vd> did I misunderstood the s-exp syntax?
[22:52:18] <bremner> you need --query=sexp
[22:52:21] <vd> ha
[22:53:32] <vd> so the problem here is that user provided prefixes (like header indexes) aren't interpreted with the usual foo:bar syntax, am I correct?
[22:55:01] <vd> notmuch count --query=sexp '(and (List *) (to vivien))' fails with Illegal argument for function
[22:55:46] <bremner> dunno. Do you have an unusual shell? or an older notmuch?
[22:56:15] <vd> bash 5.1.12 and notmuch 0.34.2
[22:57:23] <bremner> hmm. I just pasted that into bash here and it works fine (0 matches, but still)
[22:57:55] <bremner> some kind of script in your patch impersonating notmuch?
[22:58:35] <vd> and NOTMUCH_DEBUG_QUERY=y doesn't say much, it just states the Query string
[22:59:10] <vd> I'm trying the query from a terminal at the moment
[22:59:17] <bremner> oh, what does notmuch config get build_with.sexp_queries say?
[22:59:54] <vd> returns 0, no output text
[23:00:45] <bremner> sorry, built_with.sexp_queries
[23:02:03] <vd> false
[23:03:35] <bremner> ok, so your notmuch is not compiled with the right library
[23:04:35] <vd> damn Archlinux
[23:04:40] <vd> I'll notify the packager
[23:04:54] <bremner> to be fair, I just packaged it for debian a few months ago
[23:07:11] <vd> mail sent
[23:07:34] <bremner> yay!
[23:10:45] <vd> is it me or 'notmuch config set query.!' doesn't remove the ! query anymore?
[23:10:54] <vd> ('!' being the name of my query)
[23:11:26] <bremner> hmm. can't say I've tested that. It could be problematic in some way
[23:11:48] <vd> '!' is not the problem, same thing with an 'inbox' query
[23:12:11] <vd> notmuch config set query.inbox
[23:12:25] <vd> notmuch config list # <-- still shows query.inbox=...
[23:13:19] <bremner> try notmuch config set --database query.inbox
[23:13:30] <bremner> that's a change in 0.32
[23:14:19] <vd> it works
[23:14:47] *** Quits: jao (~jao@71.red-176-80-138.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[23:18:43] <vd> you can't match the List-Id with the domain name, e.g. List:lists.yoctoproject.org?
[23:18:45] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 256 seconds)
[23:19:28] <sm2n> I feel like this should be obvious, but I can't figure out how to do this even after reading docs — I've saved a message as a draft with notmuch-draft-postpone; how do I edit it again?
[23:19:58] <bremner> sm2n: use "e" from notmuch-show-mode
[23:21:09] <sm2n> oh, thanks! ...that binding is shadowed by evil-collection, seems like a mistake on that side
[23:21:42] <sm2n> I would not have guessed to search for "resume" though
[23:22:06] <vd> is it me or the wildcard didn'
[23:22:11] <vd> didn't used to work?
[23:22:28] <vd> e.g. to:my.address*@gmail.com
[23:22:45] <bremner> wildcards only ever worked at the end
[23:22:57] <bremner> (not counting regex searches)
[23:23:57] <vd> so now I can do List:*@lists.yoctoproject.org :)))
[23:24:29] <bremner> well, it might work by accident
[23:25:56] <bremner> should be the same as List:lists.yoctoproject.org
[23:27:11] <vd> bremner: but List:lists.yoctoproject.org returns 0 threads
[23:40:09] *** Quits: nlhowell (~nlhowell@149.160.135.76) (Ping timeout: 256 seconds)
[23:41:58] <vd> bremner: is that expected?
[23:43:10] <bremner> List:lists.debian.org works for me
[23:43:27] <bremner> double check actual headers, I guess?
[23:43:40] <vd> ok
[23:44:58] <vd> I want to tag email with my first name is in the body, but there are false positive like those messages saying "you received this email because firstname.lastname@gmail.com is subscribed to ..."
[23:45:33] <vd> I tried to search for 'vivien not near subscrib' but it raises a Xapian exception
[23:45:49] <vd> any idea how to achieve this?
[23:47:17] <bremner> I don't use the near stuff much, but it should be possible to make it work.
[23:47:51] <vd> how do you negate near? 'not near' seems problematic
[23:50:57] <bremner> maybe something like "vivien and not (vivien near subscrib)"
[23:51:10] <bremner> or just "vivian and not subscrib"
[23:51:46] <vd> I'll try that
