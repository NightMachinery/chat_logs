[00:18:40] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 268 seconds)
[00:33:53] *** Quits: uncleyear (~ian@pppoe.178-66-131-1.dynamic.avangarddsl.ru) (Remote host closed the connection)
[00:34:42] *** Joins: sailorCat (~user@p200300f6a70c4a1d23a18d3c27b2d269.dip0.t-ipconnect.de)
[00:36:24] *** Joins: uncleyear (~ian@pppoe.178-66-131-1.dynamic.avangarddsl.ru)
[00:41:25] *** Joins: uncleyea1 (~ian@pppoe.178-66-158-118.dynamic.avangarddsl.ru)
[00:41:30] *** Quits: uncleyear (~ian@pppoe.178-66-131-1.dynamic.avangarddsl.ru) (Ping timeout: 268 seconds)
[00:44:56] *** Quits: choas (~lars@ppp-188-174-58-75.dynamic.mnet-online.de) (Ping timeout: 260 seconds)
[00:45:49] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 268 seconds)
[00:46:32] *** Joins: choas (~lars@ppp-188-174-49-112.dynamic.mnet-online.de)
[01:00:57] *** Joins: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net)
[01:16:54] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 260 seconds)
[01:19:54] *** Joins: diminuoso (~diminuoso@pool-98-113-31-125.nycmny.fios.verizon.net)
[01:20:25] *** Parts: diminuoso (~diminuoso@pool-98-113-31-125.nycmny.fios.verizon.net) ()
[01:23:27] *** Joins: diminuoso (~diminuoso@86.106.121.192)
[01:24:00] *** Quits: desantra (~skykanin@user/skykanin) (Quit: WeeChat 3.3)
[01:27:17] <diminuoso> Hello. I’m trying to write a macro that takes a vector and essentially splices it as the arguments to case, but I’m getting an error because it’s seeing the symbol and not the vector. How does this get worked around?
[01:27:55] <ToxicFrog> Paste the macro?
[01:30:39] <diminuoso> Sure. https://pastebin.com/R7Uk7NRB
[01:35:02] <diminuoso> And to be clear, my problem is when the argument being passed is a var or local, not a literal vector (which would work fine, but is not what I'm going for).
[01:44:06] <jeaye> diminuoso: That code works for me.
[01:44:31] <jeaye> user=> (def f (gen-case-fn [1 true 2 false]))
[01:44:33] <jeaye> #'user/f
[01:44:35] <jeaye> user=> (f 1 nil)
[01:44:37] <jeaye> true
[01:44:39] <jeaye> user=> (f 2 nil)
[01:44:41] <jeaye> false
[01:44:43] <jeaye> user=> (f 3 nil)
[01:44:45] <jeaye> nil
[01:45:37] <jeaye> Ah, I missed you last bit.
[01:47:48] <jeaye> diminuoso: Mixing run-time values and compile-time macros is a mess.
[01:48:45] *** Joins: matty_matt (~matt@135.129.244.199)
[01:49:31] *** Joins: v3ga (~v3ga@2600:1702:ad0:3b90::40)
[01:50:36] <jeaye> diminuoso: You can try changing ~@v to ~@@(resolve v)
[01:51:03] <jeaye> But that'll only work if the symbol for v has been appropariately required.
[01:51:06] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[01:51:16] <jeaye> appropriately, that is.
[01:51:49] <jeaye> diminuoso: resolve returns a Var, which we then deref, and then we use ~@ to expand that vector out in the syntax quote.
[01:51:58] <jeaye> Thus ~@@
[01:55:30] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 268 seconds)
[01:56:08] <diminuoso> Thanks for taking a peek, jeaye. Hmm... Would that be looking at the passed v, though? Because that wouldn't (normally) be a var. I think it would have worked in the original form with an appropriately-bound var.
[01:58:27] <jeaye> diminuoso: No, v will be a symbol./
[01:58:46] <jeaye> (gen-case-fn my-vec) => v will be a symbol of "my-vec"
[01:59:06] <jeaye> Then you resolve that to get the var, deref to get the val, and you're good.
[02:01:55] <jeaye> diminuoso: https://dpaste.com/9YTKQB77T
[02:02:03] <jeaye> That's how you can make it work with both symbols and literals.
[02:02:05] *** Joins: matty_matt (~matt@135.129.244.199)
[02:02:23] <jeaye> Ah, woops. Ignore the vv bit.
[02:02:38] *** Quits: nighcoder (~ciumbi@45.58.87.61) (Ping timeout: 260 seconds)
[02:02:47] <jeaye> Removed it: https://dpaste.com/8LK4XZPCB
[02:03:37] <diminuoso> OK, yeah, I see how it would work now. Do you know what you'd do if it were a local? :)
[02:04:23] <jeaye> I wouldn't recommend trying to build macros from local vals.
[02:05:20] *** Joins: nighcoder (~ciumbi@45.58.87.61)
[02:05:31] <jeaye> Also, I named my vec v, but that was probably a bad move. I don't want to imply the param and the resolved symbol need to have the same name.
[02:05:41] *** Quits: nighcoder (~ciumbi@45.58.87.61) (Remote host closed the connection)
[02:05:47] <jeaye> (def my-vec [1 true 2 false]) and (gen-case-fn my-vec) would work just the same.
[02:06:53] <jeaye> diminuoso: If you need to do logic to build up your vector, that's fine. It doesn't need to be a local, though. Remember that you can def at any level and it goes ns-level.
[02:07:03] <jeaye> As long as it's set before you eval your macro, you're fine.
[02:07:47] *** Joins: nighcoder (~ciumbi@45.58.87.61)
[02:07:49] <jeaye> But this design of yours is making it harder for you. If you can move all of this into the macro, it may be easier. Note that macros can have their own state, too, including atoms for state across invocations.
[02:08:08] <jeaye> Keeping everything there is generally going to be much easier than mixing it with normal run-time code.
[02:09:38] <diminuoso> Yeah, no sweat. Unfortunately, being able to generate the case is really the crux of my little experiment. To come clean, I was experimenting with creating a map that uses a tableswitch under the hood, which is exactly what case emits if you "do it right".
[02:11:01] <diminuoso> So to follow Clojure semantics, any "update" (assoc, conj, etc.) would cause the case to be regenerated.
[02:13:36] *** Quits: nighcoder (~ciumbi@45.58.87.61) (Remote host closed the connection)
[02:15:14] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 268 seconds)
[02:15:55] *** Quits: diminuoso (~diminuoso@86.106.121.192) (Quit: Client closed)
[02:17:08] *** Joins: diminuoso (~diminuoso@86.106.121.192)
[02:28:30] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:31:28] <selfsymmetric-mu> Anyone enjoy what they do and looking for coworkers? I'm scoping for my next job and I love the conversations that happen in here.
[02:32:17] <selfsymmetric-mu> My last gig was building a programming language for enterprise finance.
[02:33:23] <selfsymmetric-mu> Now I'm between jobs and doing sillier things e.g. a ClojureScript clicker game about an AI being born.
[02:33:39] <lunik1> yes but we don't do any clojure :(
[02:34:38] <selfsymmetric-mu> lunik1: You know how I'm really shooting myself in the foot? I haven't interviewed in four years so I'm practicing typical screening questions, but I'm doing it in Clojure.
[02:34:51] <sobel> heh
[02:35:31] <selfsymmetric-mu> I should stop and switch to Python but I'm being stubborn with myself.
[02:35:46] <technomancy> interviewer: "you can use whatever language you feel most comfortable in" me: "wait, really? *pulls custom-built compiler out of his bag* let's rock."
[02:35:54] <sobel> last time i interviewed in clojure i was a little green at lazy sequences but i used them anyway, and ended up using about 105% of my time to code their challenge but likely turned in the only implementation that would work with data much bigger than memory
[02:36:43] <selfsymmetric-mu> sobel: That's something!
[02:36:50] <technomancy> during my interview I created a prototype implementation of a flaky test detector. now 4.5 years later the company is finally shipping the same feature (none of my code) in production.
[02:37:10] <lunik1> I did that and got a few interviews out it
[02:37:13] <selfsymmetric-mu> technomancy: Wow!
[02:37:29] <sobel> some balloon juggling thing, probably number-theoretic in nature. i followed up in email to let them know i was able to run *gigs* of sample data through my code w/o perf degradation, and they should try it too.
[02:37:34] <lunik1> there are choices that can make your life even more difficult
[02:37:40] <technomancy> selfsymmetric-mu: as far as I can tell it was just a random "uhhhh lemme think of a realistic-ish problem to pair on as part of the interview process"
[02:38:37] <sobel> i coulda wrecked it in python but i was really trying to turn over a new leaf
[02:38:54] <sobel> no second interview on that one, but it left me open to the gig i have now which i like a lot
[02:39:24] <selfsymmetric-mu> I don't actually have any language requirements for my next job. I've traveled a lot. Last job was Haskell, I've done Python, .NET, Java, whatever.
[02:40:22] <selfsymmetric-mu> Sometimes I learn languages to cheat, you know. Like how I learned Rust to avoid learning modern C++ idioms, or ClojureScript to make up for missing twelve cycles of JS.
[02:40:36] <sobel> i'm somewhat language agnostic these days as long as i have postgresql in the mix
[02:40:37] <selfsymmetric-mu> I do lean backend though.
[02:41:04] <selfsymmetric-mu> sobel: That's not a bad requirement. postgres is a stalwart companion.
[02:41:17] <selfsymmetric-mu> Used it at my last job, and I keep a local instance running.
[02:41:48] <sobel> i leveled up as an app-dba for 4 years, it was great
[02:42:02] <selfsymmetric-mu> technomancy: I like that idea. Was it about how to define "flakiness", or focused on something else?
[02:42:26] <selfsymmetric-mu> sobel: And now you're precious in the industry. Hard to hire a good DBAs.
[02:42:29] <selfsymmetric-mu> *DBA
[02:45:07] <sobel> i had no idea how useful or rare it would be to have solid relational design skill
[02:45:52] *** Joins: mfru (~mfru@178.115.254.65.static.drei.at)
[02:46:59] *** Quits: mfru (~mfru@178.115.254.65.static.drei.at) (Client Quit)
[02:48:05] <sobel> i think transducers are a secret weapon for those of us who need to deal with non-trivial data using code, too
[02:48:26] <sobel> i haven't seen anything as concise from another library or language
[02:49:08] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 268 seconds)
[02:51:30] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[02:52:01] *** Joins: Pixel_Outlaw (~ryan@2600-6c67-5e3f-ed1c-b0d1-9d45-253b-c828.res6.spectrum.com)
[02:52:06] *** Joins: nighcoder (~ciumbi@45.58.87.61)
[02:52:49] <technomancy> selfsymmetric-mu: it was defined as when one git sha produces more than one test result
[02:53:20] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[02:55:42] *** Joins: matty_matt (~matt@135.129.244.199)
[02:58:59] *** Joins: dadinn (~dadinn@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net)
[03:15:40] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 268 seconds)
[03:21:06] *** Quits: yewscion (~yewscion@72-21-198-66.amazon.com) (Ping timeout: 260 seconds)
[03:22:58] *** Quits: chujev (~chujev@88.103.227.222) (Remote host closed the connection)
[03:28:04] *** Joins: chujev (~chujev@88.103.227.222)
[03:31:13] <jeaye> selfsymmetric-mu: My team is hiring an experienced Go dev.
[03:31:22] <jeaye> Sounds like it's not up your alley, though. :)
[03:39:06] *** Quits: chujev (~chujev@88.103.227.222) (Ping timeout: 268 seconds)
[03:39:25] *** Joins: chujev (~chujev@88.103.227.222)
[03:39:57] *** Quits: chujev (~chujev@88.103.227.222) (Remote host closed the connection)
[03:43:00] *** Joins: chujev (~chujev@88.103.227.222)
[03:50:59] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[03:51:46] <selfsymmetric-mu> jeaye: I'm an experienced dev but haven't coded professionally in Go. Only thing I made in it was this pathfinder: https://github.com/matthew-piziak/spacepathgo
[03:52:14] * jeaye takes a look.
[03:54:00] <jeaye> selfsymmetric-mu: Gotcha. We're typically quite open to people learning langs on the job here. For this particular role, we have a bit of a Go expertise deficit we're trying to improve.
[03:54:30] <jeaye> I can suggest our other open roles, though. Let me get you a link to our careers page.
[03:55:19] <selfsymmetric-mu> jeaye: Thanks! And I totally understand that. Go's a simple language with a complicated context.
[03:55:27] <jeaye> selfsymmetric-mu: In which country are you looking to live while working?
[03:55:59] <selfsymmetric-mu> jeaye: I live in New Jersey, USA. Moving to Boston at some point. So I am looking at remote roles for the most part.
[03:57:27] <jeaye> selfsymmetric-mu: Here's the search for jobs in NA: https://ea.gr8people.com/jobs?page=1&inp11535=1
[03:57:28] *** Quits: nighcoder (~ciumbi@45.58.87.61) (Read error: Connection reset by peer)
[03:57:35] <jeaye> All of those allow remote.
[03:57:45] <selfsymmetric-mu> jeaye: Thanks very much!
[03:58:11] <jeaye> The general landing page, if you want to find a particular studio or location, is here: https://www.ea.com/careers
[03:58:32] <jeaye> selfsymmetric-mu: If you want to apply to one, feel free to DM me. I'd be happy to refer you.
[03:59:03] <selfsymmetric-mu> This is great, I will look through the roles and let you know! :)
[04:43:51] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 268 seconds)
[04:44:32] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[04:44:57] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[04:45:11] *** Quits: chujev (~chujev@88.103.227.222) (Remote host closed the connection)
[04:46:28] *** Joins: chujev (~chujev@88.103.227.222)
[04:51:07] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[05:01:06] *** Quits: sailorCat (~user@p200300f6a70c4a1d23a18d3c27b2d269.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:15:17] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 268 seconds)
[05:34:58] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[05:36:16] *** Quits: X-Scale (~ARM@46.50.0.1) (Ping timeout: 268 seconds)
[05:37:24] *** X-Scale` is now known as X-Scale
[05:44:54] *** Quits: diminuoso (~diminuoso@86.106.121.192) (Quit: Client closed)
[06:14:21] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[06:17:22] *** Quits: molson (~molson@24-220-198-232-dynamic.midco.net) (Quit: Leaving)
[06:46:46] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:51:16] *** Joins: mzan (~quassel@mail.asterisell.com)
[06:51:37] *** Joins: littleme (~user@user/littleme)
[06:52:30] <littleme> hey guys, is there a way to control clojure at Java?
[06:52:43] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:3a97:eaba:c01a:d700) (Ping timeout: 268 seconds)
[06:53:28] <littleme> Env.put("arg",load("{:a 1}")),loadString("(fn [{:keys [a]}] a)").invoke("arg")
[06:53:36] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:25ae:baa7:4680:70ca)
[06:54:46] <littleme> is that possible? i know how to loadString by Clojure.var,but i can't to apply the arg into it
[06:59:18] *** Quits: Pixel_Outlaw (~ryan@2600-6c67-5e3f-ed1c-b0d1-9d45-253b-c828.res6.spectrum.com) (Quit: Leaving)
[07:05:13] <littleme> i figure out, the loadString return the IFn, cool
[07:18:40] *** Quits: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:20:56] *** Joins: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net)
[07:55:08] *** Joins: mbuf (~Shakthi@122.174.233.21)
[07:58:14] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 260 seconds)
[08:17:15] *** Joins: matty_matt (~matt@135.129.244.199)
[08:22:02] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 260 seconds)
[08:34:26] *** Joins: matty_matt (~matt@135.129.244.199)
[10:07:45] *** Joins: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi)
[10:08:29] *** Quits: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi) (Remote host closed the connection)
[10:16:50] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 268 seconds)
[11:07:09] *** Joins: andreyorst (~andreyors@37-144-211-167.broadband.corbina.ru)
[11:30:37] *** Joins: op2 (~op@user/op2)
[11:35:24] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:37:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:01:11] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[12:27:55] *** Joins: to-hu (~Thunderbi@p200300e9af35d500dc698d15ae55d902.dip0.t-ipconnect.de)
[12:37:21] *** Joins: wonko (~wjc@user/wonko)
[13:04:35] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 268 seconds)
[13:12:56] *** Quits: uncleyea1 (~ian@pppoe.178-66-158-118.dynamic.avangarddsl.ru) (Remote host closed the connection)
[13:14:00] *** Joins: uncleyear (~ian@pppoe.178-66-158-118.dynamic.avangarddsl.ru)
[13:28:08] *** Joins: matty_matt (~matt@135.129.244.199)
[13:48:37] *** Quits: littleme (~user@user/littleme) (Remote host closed the connection)
[14:22:22] *** Parts: even4void (even4void@came.here.for-some.fun) ()
[15:02:49] *** Joins: nighcoder (~ciumbi@45.58.87.61)
[15:10:57] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[15:12:16] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[15:16:59] *** Joins: op2 (~op@user/op2)
[15:24:54] *** Quits: chujev (~chujev@88.103.227.222) (Remote host closed the connection)
[15:31:56] <Para> Man this M1 Macbook feels odd after stovetop hot Intel Macbook. This is lukewarm at best, battery lasts forever, everything's fast and snappy...
[15:32:36] <Para> I'm about to start doing Clojure on this machine, I wonder what surprises await me there, but at least lein+java17 seems to work just fine.
[15:38:57] <yeik-the-spik[m]> I dont know how I would get through winter without warm laptops. I am typing on a mechanical keyboard and will soon need to use gloves or go back to typing on my laptop.
[15:38:58] <yeik-the-spik[m]> Only half joking
[15:40:20] <yeik-the-spik[m]> I have for real stopped using the desk on winter and set the laptop on my lap on some winter night
[15:43:08] <yeik-the-spik[m]> Keep us posted on your experiments Para. Does Clojure yield surprises on mac? I have only used it on windows and linux. I've always been mac curious, but the chance of adventures is a negative point 
[15:43:25] *** Joins: chujev (~chujev@88.103.227.222)
[15:52:09] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[15:54:10] *** Quits: andreyorst (~andreyors@37-144-211-167.broadband.corbina.ru) (Ping timeout: 268 seconds)
[15:59:47] *** Quits: nighcoder (~ciumbi@45.58.87.61) (Remote host closed the connection)
[16:00:07] *** Joins: nighcoder (~ciumbi@45.58.87.61)
[16:10:31] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 256 seconds)
[16:22:49] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[16:23:10] *** Joins: op2 (~op@user/op2)
[17:09:20] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[17:10:50] *** Joins: andreyorst (~andreyors@2.92.125.180)
[17:12:38] *** Joins: matty_matt (~matt@135.129.244.199)
[17:18:36] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Remote host closed the connection)
[17:21:15] *** Joins: schmudde (~schmudde@public.toolboxoffice.it)
[17:23:26] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 260 seconds)
[17:24:05] *** Joins: X-Scale` (~ARM@83.223.227.196)
[17:24:42] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[17:26:04] *** X-Scale` is now known as X-Scale
[17:36:33] *** Joins: struchu (~struchu@staticline-31-183-169-150.toya.net.pl)
[17:44:51] *** Quits: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net) (Quit: Leaving)
[17:59:52] *** Joins: Achylles (~Achylles_@2804:431:d725:bb1e:5dd8:3b02:6cc3:2744)
[18:02:51] *** Quits: chujev (~chujev@88.103.227.222) (Remote host closed the connection)
[18:04:25] *** Joins: chujev (~chujev@88.103.227.222)
[18:22:09] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 268 seconds)
[18:23:22] *** Quits: Achylles (~Achylles_@2804:431:d725:bb1e:5dd8:3b02:6cc3:2744) (Remote host closed the connection)
[18:32:39] *** Quits: schmudde (~schmudde@public.toolboxoffice.it) (Ping timeout: 268 seconds)
[18:34:30] *** Joins: schmudde (~schmudde@public.toolboxoffice.it)
[18:42:37] *** Quits: struchu (~struchu@staticline-31-183-169-150.toya.net.pl) (Quit: WeeChat 3.3)
[18:59:02] *** Joins: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net)
[19:32:55] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:33:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:20:26] *** Joins: OMGOMG (~bobrobert@sandy.ifi.uio.no)
[20:27:04] *** Joins: Skyfire (~pyon@user/pyon)
[20:34:15] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:51:39] *** Joins: seschwar (~seschwar@user/seschwar)
[21:00:09] <yeik-the-spik[m]> has anyone ever inter-opped clojure and scala and can comment on the feasibility of such endeavor? I have noticed that lein has a scala plugin, so it should be possible, right?
[21:02:49] <technomancy> anything is possible at zombo com
[21:03:15] <technomancy> gen-class exists, so you can pretend your code is Java, and Scala can interop with Java easily
[21:03:23] <technomancy> idiomatic interop? well, that's another story
[21:17:16] *** Quits: mbuf (~Shakthi@122.174.233.21) (Quit: Leaving)
[21:23:17] <Para> There's a library for that.
[21:23:30] <Para> https://github.com/t6/from-scala
[21:24:03] <Para> or rather https://t6.github.io/from-scala/ explains better how it works
[21:24:15] <Para> It's warty, mainly because Scala is terrible to use from other languages.
[21:27:15] <Para> as for using clojure from scala, who knows
[21:40:07] <sobel> welcome to zombo com
[21:46:08] <Para> Which died with Flash, but thankfully we now https://html5zombo.com/
[21:47:58] *** Quits: schmudde (~schmudde@public.toolboxoffice.it) (Ping timeout: 260 seconds)
[22:01:36] *** Joins: desantra (~skykanin@user/skykanin)
[22:03:18] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[22:10:41] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[22:11:11] <sobel> <3
[22:39:44] *** Quits: uncleyear (~ian@pppoe.178-66-158-118.dynamic.avangarddsl.ru) (Remote host closed the connection)
[22:40:50] *** Joins: uncleyear (~ian@pppoe.178-66-158-118.dynamic.avangarddsl.ru)
[22:41:47] *** Quits: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net) (Remote host closed the connection)
[22:47:00] *** Joins: struchu (~struchu@staticline-31-183-169-150.toya.net.pl)
[22:47:44] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 256 seconds)
[22:59:15] <andreyorst> I had collegues who write in scala call our clojure methods
[23:00:44] <andreyorst> generally speaking, it was as easy as providing some functions via gen-class methods, and making sure to get agreement on types. Though AFAIK they've still needed to require Clojure as a library to get things like keywords 
[23:02:51] <andreyorst> ah, and there was fun thing with SBT, as it seen Clojure having circular dependencies
[23:03:19] <andreyorst> E.g. that Clojure 10 depends on Clojure 9 and SBT thought that it's a circular dependency
[23:05:10] <ridcully> spec is most likely the culprit there
[23:05:19] <ridcully> clojure depends on spec and spec depends on clojure
[23:05:29] <andreyorst> yeah, that was it
[23:05:30] *** Quits: nuorzi (nuorzi@hilla.kapsi.fi) (Ping timeout: 260 seconds)
[23:05:39] <andreyorst> I've actually asked about this in this channel before
[23:05:56] *** Quits: madscientist_ (tpalohei@kapsi.fi) (Ping timeout: 245 seconds)
[23:06:05] *** Quits: yason (yason@kapsi.fi) (Ping timeout: 264 seconds)
[23:06:06] <andreyorst> but clojure depends on spec, and spec depends on older clojure, so it's not really a circular dep..?
[23:06:20] *** Joins: nuorzi (nuorzi@hilla.kapsi.fi)
[23:07:41] <ridcully> most likely build tools would just promote the older version used for spec to the same one clojure uses and dont think about it it guess?
[23:09:17] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 256 seconds)
[23:09:18] <ridcully> and from that point of view it is a circular dep.  but then again most build tools would just build a set of all transitive deps, group them by group:artifiact and use max version - and so no one will ever see an error
[23:11:14] <andreyorst> why is it not a development dep tho
[23:11:37] *** Joins: madscientist` (tpalohei@kapsi.fi)
[23:12:11] *** Joins: yason (~yason@kapsi.fi)
[23:12:39] <ridcully> most likely it just was no problem with maven or ant or whatever clojure used back then
[23:13:29] <ridcully> and it's not with lein or deps.clj too it seems
[23:16:08] <ridcully> also it would be tricky to do a dev-only dep?
[23:16:53] <ridcully> would be best to set it on the spec libs.  but they too need the clojure core.  it's just _very_ unlikely someone would add _only_ spec to a project
[23:18:17] *** eldritch__ is now known as eldritch
[23:28:44] *** Quits: desantra (~skykanin@user/skykanin) (Quit: WeeChat 3.3)
[23:30:23] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Ping timeout: 246 seconds)
[23:38:38] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:9957:d573:47d6:dd09)
[23:43:29] <OMGOMG> anything like haskell's all@(head:tail) syntax in clojure?
[23:45:05] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[23:46:51] <ridcully> OMGOMG: (let [[x & xs :as all] [1 2 3]] [x xs all])
