[00:00:07] *** Joins: arcatech (~arcatech@user/arcatech)
[00:00:27] *** Quits: Drek45 (~jrept371@129.59.122.18) (Ping timeout: 245 seconds)
[00:03:32] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[00:03:37] <Lyn> does iOS have ripple effects like android has?
[00:04:09] *** Joins: independent56 (~independe@95.144.68.39)
[00:05:58] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8457:f465:9db8:46f2) (Read error: Connection reset by peer)
[00:06:49] *** Joins: jess (~jess@libera/staff/jess)
[00:08:51] *** Joins: independent_ (~independe@95.144.68.39)
[00:09:03] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8457:f465:9db8:46f2)
[00:09:04] <edgar-rft> glueing some sesame grain on an iOS thing gives a great ripple effect
[00:10:58] <Lyn> lol, never thought of that before but it seems android has ripple effects kinda everywhere, whereas iOS indeed doesn't have them
[00:11:28] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[00:11:47] <Samian> Suppose you have a CLI program that takes a bunch of CLI arguments, and you want to benchmark this program, so you make another program that repeatedly runs the program until all possible combinations of arguments have been tried. What do you call the outer program? Is there a name for it?
[00:12:03] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[00:12:10] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[00:12:21] <Lyn> test runner?
[00:12:32] *** Joins: austincheney_ (~austinche@2600:1700:1220:76c8:1997:452c:331f:6c92)
[00:12:33] <Samian> maybe, let me google
[00:12:35] <GeDaMo> test harness?
[00:12:55] <Samian> looks like that may be it
[00:12:55] <Samian> https://en.wikipedia.org/wiki/Test_harness
[00:12:56] <bayaz> Title: Test harness - Wikipedia 
[00:13:04] <Samian> more like a benchmark harness
[00:13:09] *** Joins: rtypo (~alex@user/rtypo)
[00:13:40] <Samian> maybe benchmark isn't the right word
[00:13:47] *** Quits: austincheney (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 240 seconds)
[00:13:52] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[00:14:04] <Samian> benchmark connotes something more complicated than measuring time elapsed from program start to program end.
[00:14:25] <Samian> is by benchmark, did you know I meant just measuring time elapsed?
[00:14:28] <edgar-rft> Samian: a program that tests the behaviour of another program is usually called a "profiler"
[00:15:20] <Samian> oh true
[00:16:17] <pyzozord> I'd call it end-to-end tests
[00:17:53] <Samian> but I'm not testing whether the program works. I'm measuring the speed
[00:17:58] <Samian> "testing" the speed ?
[00:17:59] <mawk> Samian: a fuzzer
[00:18:25] *** Quits: qbt (~edun@user/edun) (Ping timeout: 244 seconds)
[00:18:26] <mawk> it's the concept of a testing program that tests all possible input
[00:19:23] <pyzozord> oh speed testing program I'd call profiler
[00:19:30] <mawk> hmm not really
[00:19:34] <mawk> profiler is testing line by line the code
[00:19:41] <mawk> but yes maybe
[00:20:04] <pyzozord> I'm not really sure where the name profiler comes from
[00:20:13] <mawk> from the CSI tv show
[00:20:15] <mawk> most likely
[00:20:48] <mawk> I want to have my own font engine to display stuff on a RGB screen, I have 64k colors; so I was thinking to have something like truetype instead of ugly bitmap fonts
[00:20:52] <mawk> how would I go about doing that
[00:20:56] <edgar-rft> a profiler probably is a graduated amateurfiler
[00:21:00] <mawk> I found this: https://www.freetype.org/
[00:21:02] <bayaz> Title: The FreeType Project 
[00:21:04] *** Quits: luckyxxl (~luckyxxl@185.213.155.160) (Quit: bye)
[00:21:09] <mawk> but I'm not sure what it's worth
[00:21:42] *** Quits: hexingb (~hexingb@2409:8900:2940:7365:41ca:7385:3276:dd67) (Ping timeout: 245 seconds)
[00:21:58] <edgar-rft> now we finally can have programming languages with free types!
[00:22:11] <mawk> lol
[00:22:14] <mawk> it's more like font type
[00:22:27] <edgar-rft> let's discuss static typing vs. free typing
[00:22:35] <mawk> :(
[00:22:57] *** Quits: snake (~snake@user/snake) (Ping timeout: 245 seconds)
[00:24:02] *** Joins: pavonia (~user@user/siracusa)
[00:24:16] <pyzozord> mawk: I'm not sure but seems like freetype is the font rendering engine everyone uses
[00:24:56] *** Joins: derelict (derelict@user/derelict)
[00:25:19] <derelict> hi everyone, is there a channel for asking Design and Architecture questions?
[00:25:21] <oldlaptop> freetype is *the* font renderer
[00:25:34] <InPhase> derelict: Have you tried ##programming?
[00:25:34] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:25:51] <derelict> not yet :3
[00:25:54] <InPhase> :)
[00:26:04] <InPhase> It's at the core of programming, so, seems appropriate.
[00:26:16] <derelict> i was just wondering if anyone has a breif explanation of what a transcription script, a type of a singleton
[00:26:16] *** Joins: nekodesu (~bit@user/nekobit)
[00:26:45] *** Quits: nekodesu (~bit@user/nekobit) (Client Quit)
[00:27:02] <derelict> ive been looking online with no luck for an assignment 
[00:27:06] *** Joins: nekodesu (~bit@user/nekobit)
[00:27:16] <mawk> careful with mentionning it's an assignment
[00:27:34] <InPhase> derelict: Do you mean transaction script?
[00:27:37] <mawk> then some people will stop providing help
[00:27:54] <edgar-rft> isn't Design and Architecture a topic in ##art?
[00:27:58] *** Joins: dcand (~dcand@user/dcand)
[00:27:58] <mawk> oldlaptop: even on laptop?
[00:28:05] <mawk> on windows*
[00:28:08] <mawk> omg my brain is tired
[00:28:20] <InPhase> derelict: And if so, how do you picture it relating to singletons?
[00:28:21] <derelict> mawk: thanks :3 im supposed to implement some things with it but was looking for broad conceptual direction 
[00:28:53] <oldlaptop> The system renderers on Windows and macOS are probably the only really important truetype/etc. font renderers other than freetype in widespread use
[00:28:55] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[00:28:55] <dcand> from when tools.ieft.org started to redirect certain requests to datatracker.ietf.org
[00:29:26] <oldlaptop> I don't want to forget metafont/etc. though, that's another important font-rendering ecosystem (if one with a very specific purpose)
[00:29:42] <mawk> google has no hits for either transaction or transcription scripts derelict , are you sure you heard it right?
[00:29:43] <dcand> pdf url in tools.ietf.org had pdf with hyperlinks
[00:30:01] <mawk> oldlaptop: my very specific purpose is small footprint, for embedded system with less than 64K of ram
[00:30:15] <mawk> dcand, the last free software extremist on earth
[00:30:16] <dcand> datatracker.ietf.org's pdf don't have hyperlinks
[00:30:30] <InPhase> derelict: The "transcriptions" I'm aware of relating to programming have to do with speech to text, and DNA to RNA which could come into bioinformatics work.  I'm not aware of anything relating to a standard design pattern matching that term.
[00:30:41] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:30:44] <oldlaptop> derelict: People will generally be happy to help with "broad conceptual direction" and so forth. What many object to is answering exam questions, doing assignments for you, etc.
[00:31:04] <dcand> I fogot the url nature of pdfs of rfcs
[00:31:08] <oldlaptop> (Unfortunately, some do not.)
[00:31:22] <dcand> had to use wayback machine
[00:31:23] <mawk> rfc can be just text dcand , there's not really url nature in it
[00:31:30] *** Joins: aaa__ (~aaa__@2a02:27b0:5303:39e0:22c9:1e5f:e0b6:730)
[00:32:10] <dcand> the pdfs used to have hyperlinks to sections and others
[00:32:52] <derelict> InPhase: im learning domain modeling atm for building new applications and have been doing ADD for this. my current understanding of building transaction scripts is that it involves a sort of simple end singular end point, like an api for example 
[00:33:05] <dcand> Is there any place on earth where archive.org is blocked?
[00:33:35] <mawk> what do you mean by script exactly derelict ? script as in transcript? or script as in program
[00:33:51] <mawk> probably many school networks dcand 
[00:33:59] <mawk> and china, iran, etc
[00:34:03] <derelict> more like a design pattern mawk 
[00:34:35] <oldlaptop> Maybe another way of asking mawk's question: is this the kind of thing you mean by "transaction script"? https://developers.google.com/identity/sign-in/web/server_side_code_flow.png
[00:34:36] <bayaz> Type: image/png Size: 69.0 kB 
[00:34:44] <oldlaptop> Or are we after something else?
[00:35:02] <derelict> but i still dont think i get the idea completely, if anyone would point me to a reading source, id appreciate it
[00:35:15] <InPhase> derelict: You're saying words that sound like jargon, except they do not sound like jargon I have heard before.  They also do not appear in google, so I am suspicious something is going wrong.
[00:35:52] <oldlaptop> (if your instruction isn't happening in English, and you're translating for us, now would be a good time to mention that)
[00:36:05] <mawk> InPhase: maybe it's their prof intentionally jargonizing so they can't google it
[00:36:05] <derelict> lol it's in english
[00:36:08] <mawk> that would be evil
[00:36:09] <derelict> https://java-design-patterns.com/patterns/transaction-script/ i found this resource 
[00:36:09] <bayaz> Title: Transaction Script 
[00:36:19] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Remote host closed the connection)
[00:36:37] <InPhase> Okay, yeah, that's a different word.
[00:36:47] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[00:37:06] <derelict> oh my bad i didnt realize i used transcription by mistake 
[00:37:06] <mawk> >Transaction Script organizes business logic by procedures where each procedure handles a single request from the presentation.
[00:37:10] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[00:37:25] <mawk> that seems too light of a concept to deserve the name design pattern, but ok
[00:37:48] <derelict> yeah i thought i was missing something
[00:38:00] <oldlaptop> It smells to me like someone just HAD to jargonize it, come hell or high water :(
[00:38:49] *** Joins: alefir_ (~alefir@102.129.145.209)
[00:38:56] <InPhase> That's basically just "make functions that do a thing".
[00:38:56] <derelict> seems like the case oldlaptop lol
[00:39:36] *** Quits: alefir (~alefir@102.129.145.86) (Ping timeout: 244 seconds)
[00:39:42] <oldlaptop> strip off the java and it's the same procedural code you'd have had new students writing in their first semester thirty or forty years ago
[00:39:46] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:40:17] <pyzozord> Do I understand correctly that in this line https://git.suckless.org/st/file/x.c.html#l1923 the code is waiting at either ttyfd or xfd? And if so, do I understand correctly that Xorg provides a file descriptior for each window, why would it do that? I'm asking because in SDL there is no file descript for a window and I don't know how else I can wait for both window events and ttyfd at the same time 
[00:40:19] <bayaz> Title: x.c - st - simple terminal 
[00:40:23] <pyzozord> in a single thread.
[00:40:37] <derelict> i find that a lot of my challenges learning non-programming compsci concepts because of the amount of jargon like that oldlaptop
[00:40:41] <derelict> thank you all for the help!
[00:41:06] <InPhase> I would have used a term like "transaction script" to at minimum refer to a stored dynamic list of state-changing actions to be followed in a sequence.
[00:41:16] <oldlaptop> The really irritating thing: "transaction" means something specific, particuarly in the context of things like databases.
[00:41:47] <oldlaptop> InPhase: Yes, "transactions" in a "script" ought to be atomic, I would have thought
[00:42:10] <pyzozord> that sounds like some specific java-business jargon akin to lotus software etc
[00:42:23] <oldlaptop> pyzozord: Worse: java-academia
[00:42:58] <pyzozord> that is indeed worse :D
[00:43:22] *** Quits: akselmo (~akselmo@user/akselmo) (Quit: leaving)
[00:44:36] <InPhase> derelict: I would say in summary, don't feel bad about struggling to find the depth in the meaning of these terms.  It appears they are rare usages that don't imply much.  Next, figure out what you're actually supposed to do for the assignment.  :)
[00:45:05] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:25] <derelict> oldlaptop: my mind went to db type reversible transactions at first too 
[00:45:25] *** Quits: nekodesu (~bit@user/nekobit) (Remote host closed the connection)
[00:45:39] <derelict> InPhase: thank you :3 wish me luck
[00:45:42] *** Parts: dcand (~dcand@user/dcand) ()
[00:45:50] *** Joins: orondo (~orondo@user/orondo)
[00:46:07] <mawk> pyzozord: yes
[00:46:22] <mawk> either xfd or ttyfd, the one that was opened last (most of the time)
[00:46:26] <mawk> which is quite weird but whynot
[00:46:52] <mawk> also they do +1 on it..? I don't get it
[00:47:20] <mawk> ah no nevermind that's just the number of fds
[00:47:22] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:47:52] <mawk> yes so it waits both on ttyfd and rfd pyzozord , both at the same time
[00:48:02] *** Joins: jamea77 (~jamea@10.189-202-213.bestelclientes.com.mx)
[00:48:19] <mawk> you see line 1913 the rfd struct is filled
[00:48:54] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 244 seconds)
[00:49:06] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[00:49:11] <pyzozord> mawk: thank you
[00:49:22] <mawk> so it's not either, it's both
[00:49:33] <mawk> which is the same in the end I suppose
[00:49:43] <mawk> it waits on either xfd or ttyfd, or both
[00:50:55] <pyzozord> So in sdl, I don't have a file descriptor that represents window events like xfd. Is there any way I can wait for file changes *or* sdl events at the same time in a single thread?
[00:51:07] <pyzozord> or=or/and
[00:51:19] *** alefir_ is now known as alefir
[00:51:33] <mawk> pyzozord: if you find a file descriptor that gets read on window events, yes
[00:51:36] <mawk> otherwise no
[00:51:58] <mawk> https://stackoverflow.com/questions/47146174/is-it-possible-to-use-select2-to-watch-for-sdl-text-input-events
[00:52:00] <bayaz> Title: Is it possible to use select(2) to watch for SDL text input events? 
[00:52:00] <mawk> >Nope.
[00:52:25] <mawk> so, abandon all hopes pyzozord 
[00:52:25] <mawk> and use a thread
[00:52:31] <pyzozord> hmmm
[00:52:37] <pyzozord> thanks mawk :)
[00:52:44] <mawk> that gets ready*
[00:52:56] <Akuli> a separate thread pushing custom events seems quite elegant
[00:53:06] <mawk> yeah
[00:53:13] <pyzozord> I'm thinking maybe I will try to hack it in and get the underlaying xfd from sdl if I can
[00:53:14] <mawk> then between threads you can use file descriptors to communicate pyzozord 
[00:53:16] <mawk> or signals, or whatever
[00:53:32] <mawk> you can make a small puny thread that waits for events and wakes an eventfd in a loop
[00:53:40] <mawk> and keep your main application with using select/poll/epoll
[00:54:21] <pyzozord> oh so like a simulate the same thing with a thread so that the code works as it did before?
[00:54:44] *** Quits: langstme (~langstme@user/langstme) (Read error: Connection reset by peer)
[00:54:48] <mawk> yeah
[00:54:57] <mawk> you can make your own file descriptors, which can be used in select/(e)poll
[00:55:04] <mawk> look at eventfd(2)
[00:55:24] <mawk> you can also use signals between threads and then use signalfd(2) to detect when you receive a signal, but eventfd is lighter
[00:56:08] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[00:56:35] <pyzozord> so wait/notify mechanism are not signals?
[00:56:50] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:56:54] *** Joins: snake (~snake@user/snake)
[00:57:30] <mawk> what is wait/notify?
[00:57:49] *** Quits: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi) (Remote host closed the connection)
[00:57:54] <mawk> signals are one way to tell something to a thread/process, using a file descriptor is another (more elegant) way
[00:58:02] <pyzozord> from man eventfd " eventfd()  creates  an "eventfd object" that can be used as an event wait/notify mechanism by user-space applications"
[00:58:06] <mawk> ah
[00:58:19] <mawk> well file descriptors + poll is one of such wait/notify mechanism
[00:58:25] <mawk> another one is signal, but signal is like the old ugly way
[00:58:52] <pyzozord> oh so wait/notify is meant here in a general way, it's not specific thing in linux/unix
[00:58:53] <mawk> signal handlers are too disruptive, you have lots of precautions to take inside; using an event loop is much prettier
[00:58:55] <mawk> yeah
[00:59:18] <mawk> wait/notify isn't linux term, there is the wait(2) syscall but it's for waiting on the death of a child process, and there is no notify(2) syscall
[01:00:10] <pyzozord> ah yes. I remebered wait, and I remembered "inotify" so I thought that it's a specific linux wait/notify mechanism
[01:00:23] <pyzozord> kind of like alternative to signals or something
[01:00:52] <mawk> inotify is for waiting on file change
[01:01:02] <[R]> inotify is a linux specific thing for watching files
[01:01:11] <pyzozord> yeah confused many concepts together
[01:02:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:02:17] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[01:02:23] <mawk> so pyzozord you make a thread that shares an eventfd file descriptor with the main thread
[01:02:28] <pyzozord> I was really hoping to put threads for later but maybe there is no other way... SDL has some thread api, maybe that will ease me into the subject
[01:02:47] <mawk> when the thread has something to say, you write() a number to the eventfd; and from the main thread you poll(2) the eventfd and it gets ready whenever the other thread said something
[01:02:51] <mawk> as simple as that, and very lightweight
[01:03:24] <alycidyne> Hello, now that I know how a digital signature using a private key works, I now wonder: why can't it replace passwords? Or do passwords achieve something other than just authentication which I'm not realizing?
[01:03:28] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:03:46] <mawk> I use it when I want to do proper fork+exec with error handling, I use an eventfd to detect when something was wrong with executing the program
[01:04:00] <mawk> alycidyne: you can carry a password in your head
[01:04:16] *** Quits: magla (~gelignite@55d413e5.access.ecotel.net) (Quit: Stay safe!)
[01:04:19] <mawk> a private key needs to be much bigger, generated from a proper crypto-grade random source
[01:04:19] <pyzozord> mawk: that seems clever in the sense of not disrupting the preexisting logic in that code. But isn't creating a thread only to update a file only for that file to trigger a poll in another thread a bit inefficient? It seems like two layers of indirection
[01:04:24] <Caffeinated> alycidyne: #security might also know
[01:04:43] <alycidyne> mawk: right, if secure storage is not available, indeed
[01:05:00] <mawk> I wouldn't say inefficient pyzozord , having a thread doesn't really count as indirection, the eventfd does but again it's very lightweight
[01:05:06] <mawk> so it's one layer of indirection yes
[01:06:40] <mawk> SDL could be modded to add eventfd support, one day
[01:06:44] <mawk> but it's quite linux-specific so I don't know
[01:07:55] <mawk> anyway the answers in the SO post I linked suggest to do things even heavier with a unix socket and so on pyzozord , so I'd say eventfd is very light, almost invisible performance-wise
[01:08:11] <mawk> it's literally just a file descriptor referring to a single uint64_t in the kernel
[01:08:22] <mawk> not a socket or a file, just 8 bytes of memory somewhere
[01:09:33] <pyzozord> so eventfd is like a file except it stores just one integer and it lives in ram?
[01:11:35] *** Joins: MDP87900 (~SKI8040@177.12.40.77)
[01:11:38] *** Quits: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com) (Ping timeout: 244 seconds)
[01:14:00] <pyzozord> Anyway, thanks a lot mawk :)
[01:14:40] *** Quits: jamea77 (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 240 seconds)
[01:14:55] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[01:15:01] *** Joins: zaher_ (~zaher@37.48.176.225)
[01:15:25] <mawk> yes pyzozord eventfd is a single integer living in ram, and more importantly you can use it with poll/select to distribute events
[01:15:41] <mawk> also you can use it as a semaphore to acquire/release a resource
[01:16:05] <mawk> or even a simple lock; and it will work between threads and even processes
[01:16:28] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[01:18:36] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[01:18:36] <pyzozord> cool, indeed seems like a nifty tool for communication between threads
[01:18:36] <pyzozord> I don't have any experience working with threaded code
[01:19:23] <pyzozord> Honestly I find linux/unix api simpler than a lot of higher level apis
[01:20:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[01:20:38] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:20:58] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Ping timeout: 252 seconds)
[01:21:57] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[01:23:52] *** Quits: aaa__ (~aaa__@2a02:27b0:5303:39e0:22c9:1e5f:e0b6:730) (Ping timeout: 256 seconds)
[01:24:54] <mawk> yeah
[01:25:06] <mawk> with thread the thing to care about is data race
[01:25:22] <mawk> everytime you access variables shared between threads you need to be sure that you're the only one accessing it
[01:25:31] <mawk> so for that you need to use locks
[01:26:03] <mawk> see sem_overview(7) for POSIX semaphores
[01:26:11] <mawk> a semaphore is a kind of lock
[01:26:23] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[01:26:36] <mawk> a lock is a semaphore with a value of 1
[01:26:41] <pyzozord> oh i thought to threads can access the same memory at the same time and the problem is only with writing
[01:26:43] *** Quits: orondo (~orondo@user/orondo) (Remote host closed the connection)
[01:26:53] <pyzozord> s/to/two/
[01:27:08] <mawk> yes they can read at the same time without problem
[01:27:16] <mawk> the problem is with writing
[01:28:47] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89) (Quit: Textual IRC Client: www.textualapp.com)
[01:30:32] <pyzozord> got it
[01:31:36] *** Quits: Maaaanu (~manuel@91.65.193.123) (Quit: leaving)
[01:32:39] *** Joins: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com)
[01:34:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:34:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:35:24] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 244 seconds)
[01:35:34] *** Quits: Akuli (~Akuli@82-203-166-202.bb.dnainternet.fi) (Quit: Leaving)
[01:35:37] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[01:35:52] *** Quits: dld (~davidlowr@2620:6e:6000:2900:3d0a:b99:963f:cf07) (Ping timeout: 245 seconds)
[01:36:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[01:41:06] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[01:41:25] *** Joins: mickey (~user@user/mickey)
[01:44:37] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 245 seconds)
[01:44:37] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[01:45:43] *** Parts: alycidyne (~kova@91-160-172-214.subs.proxad.net) ()
[01:47:47] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[01:48:18] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[01:51:46] *** Quits: webstrand (~webstrand@user/webstrand) (Ping timeout: 240 seconds)
[01:55:07] *** Quits: Leone (~Leo@24.140.234.189) ()
[01:55:15] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[01:56:42] *** Joins: ixil (~ixil@82.197.178.137)
[01:58:42] *** Joins: travaldo (~travaldo@159.203.88.148)
[02:00:34] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[02:01:37] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 252 seconds)
[02:01:42] *** Joins: jamea77 (~jamea@10.189-202-213.bestelclientes.com.mx)
[02:08:06] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[02:08:25] *** Joins: mei (~mei@user/mei)
[02:10:33] *** Joins: jamea (~jamea@200.68.140.40)
[02:10:49] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[02:11:21] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Remote host closed the connection)
[02:11:24] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:12:21] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:13:41] *** Quits: jamea77 (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 240 seconds)
[02:17:19] *** Joins: Cypris (uid511277@user/cypris)
[02:17:23] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:18:10] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[02:22:55] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[02:24:42] *** Joins: hexfive (~eric@50.35.83.177)
[02:28:04] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:28:27] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:5122:6ba2:db85:592)
[02:28:41] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[02:29:33] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[02:30:27] *** austincheney_ is now known as austincheney
[02:34:06] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:40:10] *** Quits: Samian (~Sami@2620:10d:c091:480::1:8938) (Ping timeout: 252 seconds)
[02:41:13] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:41:32] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[02:41:51] *** Joins: independent_ (~independe@95.144.68.39)
[02:42:35] *** Joins: nekodesu (~bit@user/nekobit)
[02:43:05] *** Quits: tiwEllien (~tiwEllien@host-79-34-247-87.business.telecomitalia.it) (Ping timeout: 244 seconds)
[02:43:42] *** Quits: alefir (~alefir@102.129.145.209) (Quit: alefir)
[02:44:33] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[02:47:40] *** Quits: webNET4 (~0x100@32.211.211.39) (Ping timeout: 240 seconds)
[02:53:00] *** Joins: Atque (~Atque@user/atque)
[02:55:33] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:55:41] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:56:13] *** Quits: znedw (~znedw@home.znedw.com) (Quit: The Lounge - https://thelounge.chat)
[02:57:32] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[02:57:43] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[02:57:51] *** Joins: independent_ (~independe@95.144.68.39)
[02:58:20] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:59:48] *** Joins: znedw (~znedw@home.znedw.com)
[03:00:44] <KillerWasp> It's interesting to know if there's any other programmer who's dissecting libdrm, or testing screen resolutions.
[03:06:16] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:06:21] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[03:08:23] <[itchyjunk]> not me
[03:13:42] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[03:14:56] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:15:33] *** Joins: bm3 (~bm3@pool-74-101-152-242.nycmny.fios.verizon.net)
[03:16:14] <mawk> how do I rewind a file in bash
[03:16:40] *** Quits: MrMobius (~MrMobius@208.58.206.154) (Ping timeout: 240 seconds)
[03:19:13] *** Joins: safeAI (~safeAI@pc-101-50-101-190.cm.vtr.net)
[03:19:26] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[03:19:32] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[03:19:49] *** Joins: independent_ (~independe@95.144.68.39)
[03:20:33] <KillerWasp> mawk# ..... what?....
[03:20:43] *** Parts: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[03:21:01] <mawk> how do I rewind the position cursor of a file to the beggining, in bash
[03:21:11] <mawk> like I open a file with exec 9<>/some/file
[03:21:20] <KillerWasp> mawk# oh, you can found help in #bash
[03:21:21] <mawk> then I do stuff with it, and now I want to rewind it so I can print its contents from the beggining
[03:21:31] <mawk> a
[03:21:33] <mawk> thanks
[03:21:50] <KillerWasp> I think it's not possible, but when in doubt.
[03:22:12] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:23:21] <KillerWasp> mawk# I think that's possible only if you separate it into a separate process, and then use 'tail -f'
[03:23:38] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[03:23:58] <mawk> no I found, I needed to open the file again
[03:24:01] *** Joins: Samian (~Sami@163.114.130.5)
[03:24:07] <mawk> and it's at the beggining that way
[03:24:23] <mawk> exec 9<>/some/file; do some thing; exec 9<>/dev/fd/9; cat <&9
[03:24:34] <mawk> with exec 9<>/dev/fd/9 it reopens the file 
[03:25:13] *** Joins: jamea77 (~jamea@10.189-202-213.bestelclientes.com.mx)
[03:25:32] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[03:25:32] <phogg> mawk: you can't seek, you can't even maintain an open fd (really)
[03:25:46] <mawk> why?
[03:25:50] *** Joins: independent_ (~independe@95.144.68.39)
[03:25:51] <phogg> this is unfortunate. You could maybe ask for a way on the mailing list
[03:25:54] <mawk> what about the exec 9<>/stuff
[03:26:01] <mawk> that keeps the fd open
[03:26:03] <phogg> I've occasionally thought about asking, but haven't gotten around to it
[03:26:10] <phogg> mawk: not in a useful way
[03:26:20] <mawk> what do you mean
[03:26:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:26:25] <mawk> it's useful enough for my use case
[03:26:35] <phogg> you can't seek and you can't use it for anything other than read and write
[03:26:39] <mawk> I open the fd with that, then pass it around using <&9 or >&9, and that works
[03:26:42] <mawk> yeah
[03:26:52] <phogg> so you can pass through the file forward (but not backward)
[03:26:55] <phogg> and only once
[03:26:55] *** Quits: jamea (~jamea@200.68.140.40) (Ping timeout: 252 seconds)
[03:27:00] <mawk> yeah
[03:27:02] <mawk> but then I found how to "seek", I just reopen it with exec 9<>/dev/fd/9
[03:27:03] <KillerWasp> for such complicated things I find it easier to program in C. I find it more customizable with the handling of descriptors.
[03:27:18] <mawk> C isn't as easy with calling other programs KillerWasp 
[03:27:18] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:27:18] <phogg> it's a curious omission, mostly (I think) an accident of history more than a deliberate design choice
[03:27:36] <Izem> what about lua?
[03:27:48] <phogg> mawk: you could *possibly* add support with a bash module--I have not looked, but it ought to be possible
[03:27:50] <mawk> exec 9<>/dev/fd/9 to rewind, and then outputting single characters to /dev/null could be an easy way to rewind and seek forward phogg 
[03:28:01] <phogg> however I am reliably informed that writing modules is a tricky business
[03:28:05] <KillerWasp> mawk# is same, with exec();
[03:28:13] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[03:28:13] <mawk> it's not same at all KillerWasp 
[03:28:18] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Quit: Leaving)
[03:28:22] <mawk> execve() is just the syscall, but you need a ton of support code around it
[03:28:28] <KillerWasp> man 3 exec
[03:28:32] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[03:28:38] <mawk> yes, that's just the syscall
[03:28:40] <phogg> let's assume we have all read exec(3)
[03:28:51] *** Joins: independent_ (~independe@95.144.68.39)
[03:28:57] <mawk> you need to fork, you need to pass the arguments, you need to wait for the process to end, look up its exit reason
[03:29:06] <mawk> it's not a single line
[03:29:25] <mawk> if you do execve() in your program that's like exec in bash, it replaces the current process by the program you're calling; that's not what we want
[03:29:26] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[03:29:42] <mawk> so at the absolute best, without any error handling, you need more than execve, you need to fork first
[03:30:05] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[03:30:19] <mawk> and then you need to wait to get back the exit code
[03:30:25] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[03:30:28] <KillerWasp> hummm... I find it easy to do. I did it several times. I remember making one for stockfish too.
[03:30:40] *** Joins: hexingb (~hexingb@2409:8900:7140:2ba6:199f:516:717e:d1ca)
[03:30:44] <phogg> mawk: anyway, you could asking the smart people in #bash about it, but I believe there's no current support (but not for any good reason).
[03:30:54] <mawk> I see phogg , thanks
[03:31:06] <KillerWasp> mawk# yeah! let's go to #bash!
[03:31:12] <KillerWasp> sush! sush!
[03:31:26] <phogg> I ran into this defect while trying to write pure bash implementations of some posix tools. I think in this case I was doing tail
[03:31:35] <mawk> it's not fundamentally hard to do fork-exec-wait KillerWasp , but then to make it properly rigorous it gets tricky fast
[03:31:42] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 245 seconds)
[03:31:53] *** Joins: codemin (~codemin@69.167.6.173)
[03:31:55] <phogg> easy to do, hard to do *right*
[03:31:56] <mawk> especially if you want to differentiate between an error in the execution of the program, and an error in the program itself
[03:31:58] <phogg> that's programming for your
[03:32:00] <phogg> er, you
[03:32:14] <mawk> you need a way to signal to the main process which kind of error it is, and you can't do that from the mere exit code of the child process
[03:32:16] <mawk> yeah phogg 
[03:32:35] *** Quits: pizdets (~pizdets@183.182.110.19) (Ping timeout: 245 seconds)
[03:32:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:33:21] <KillerWasp> mawk# what signal? the error output are in the fd==2
[03:33:32] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[03:33:42] *** Joins: pizdets (~pizdets@183.182.110.40)
[03:33:50] *** Joins: independent_ (~independe@95.144.68.39)
[03:33:53] <KillerWasp> were you make a new fork, both process have the same fds (0, 1, 2)
[03:34:17] <KillerWasp> Each one working independently with their descriptors.
[03:34:33] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 248 seconds)
[03:34:44] <KillerWasp> Then whatever you do each one is different, you can close some of them and open as many.
[03:34:57] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[03:37:01] <mawk> I said a way to signal KillerWasp 
[03:37:15] <mawk> the output error of the exec'd process is in stderr yes
[03:37:29] <mawk> but you don't know if the exec'd process had an error, or if you had an error before you could even call execve()
[03:37:35] <mawk> for instance if the file doesn't exist
[03:38:00] <mawk> execve("/ghfdoghfdighfdiu"); will fail, but not because the program ghfdoghfdighfdiu failed, but instead because the program doesn't exist
[03:38:25] *** Quits: jamea77 (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 252 seconds)
[03:39:11] *** Joins: SystemFFan (~SystemFFa@188.71.213.184)
[03:41:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[03:42:40] *** Quits: codemin (~codemin@69.167.6.173) (Quit: Textual IRC Client: www.textualapp.com)
[03:42:52] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:43:08] <beaky> nice so subtransactions in postgres are considered harmful wonder what other commonly used database things should actually be avoided https://postgres.ai/blog/20210831-postgresql-subtransactions-considered-harmful
[03:43:10] <bayaz> Title: PostgreSQL Subtransactions Considered Harmful | Database Lab · Fast clones of PostgreSQL databases · Postgres.ai 
[03:43:10] *** Joins: codemin (~codemin@69.167.6.173)
[03:44:26] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[03:44:27] <phogg> beaky: if you use Oracle I could give you a long list
[03:44:34] <phogg> at the top of it would be "Oracle"
[03:44:47] <beaky> nice i like oracle wish i could use oracle someday so i could get a taste of what enterprise-grade databases are like
[03:45:10] <phogg> beaky: imagine postgres but it's obtuse, unhelpful, and cryptic
[03:45:54] <phogg> There is nothing good about Oracle except its long history and broad feature set, which is not helpful unless you are already married to it or those features aren't available elsewhere AND you need them.
[03:46:25] <phogg> but 98% of RDBMS uses don't need the corner cases covered well by Oracle and not by others
[03:46:55] <phogg> Oracle single handedly prevented the SQL standard from having a boolean type. For that alone they should be shunned.
[03:47:50] <beaky> yes all iknow about oracle is that all etnerprises use it for some reason and the infamous post on hacker news about it https://news.ycombinator.com/item?id=18442941
[03:48:30] <phogg> beaky: I was like you until the first project where I actually had to use Oracle. Once you wrap your head around it, if you already know any decent RDBMS, you will be shocked at just how *weird* it is. Unnecessarily weird.
[03:48:50] <phogg> Unhelpfully weird. As if it was made by people with the motto "We could help you, but we won't."
[03:49:15] <phogg> Ever received an error message that says "Error, $thing went wrong. Solution: obvious."? 
[03:49:29] <phogg> If you've use Oracle you will have this pleasure.
[03:49:34] *** Joins: jmft2__ (~JMFT@82.3.54.26)
[03:50:57] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[03:51:15] <phogg> did you know that Oracle doesn't have schemas? It has only users. A user is a schema, obviously. This is odd if you come from postgres or MS SQL where schemas are for namespacing and users are separate. It has some unpleasant impacts when it comes to organizing and securing the DB.
[03:52:32] *** Quits: jmft2_ (~JMFT@82.3.54.26) (Ping timeout: 245 seconds)
[03:52:52] *** Joins: Atque (~Atque@user/atque)
[03:53:07] <phogg> Oracle's default character encoding for all character columns is CP1252 because (and I quote the documentation) "most clients are Windows." Still. Don't worry, though, you can change it. But, it will effectively trash your stored data. But don't worry, you can convert it! Offline only, using a tool Oracle doesn't make public.
[03:53:49] <phogg> the easiest option is do do a DB dump and the re-import
[03:55:16] <beaky> enterprise-grade robust character encoding handling
[03:56:42] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5df4:b5b:92c4:e709) (Ping timeout: 250 seconds)
[03:56:46] <phogg> oh yes, which is why you shouldn't use UTF8 in Oracle. They got their first attempt at handling as wrong as mysql did. You have to use AL32UTF8 instead, obviously.
[03:59:00] * ^-^hi screams in fear
[03:59:20] <phogg> a natural reaction
[03:59:33] *** Joins: zaher (~zaher@37.48.185.6)
[04:00:13] *** Joins: nodoc (~nodoc@user/nodoc)
[04:01:07] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[04:01:37] *** Quits: zaher_ (~zaher@37.48.176.225) (Ping timeout: 244 seconds)
[04:02:32] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:04:01] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8457:f465:9db8:46f2) (Quit: Leaving)
[04:07:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:07:08] *** Joins: x003fgqwe (uid479614@id-479614.tooting.irccloud.com)
[04:07:32] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[04:09:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:09:29] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:09:57] <^-^hi> *tests* in *C* that take *20* hours
[04:11:34] <phogg> what?!
[04:11:49] <beaky> enterprise-grade tests
[04:12:15] * ^-^hi 's faith in humanity is lost
[04:12:25] <phogg> you still had faith in humanity?
[04:12:27] <phogg> that must have been nice
[04:13:10] * arahael hands ^-^hi a cookie.
[04:13:54] <^-^hi> the pinnacle of stupidity in my mind had been that we still use XML for anything besides documents, and applications get developed in Electron.
[04:14:41] <^-^hi> but that thing is entirely in another plane of existence
[04:14:51] <phogg> electron apps are not as stupid as xml as a serialization format
[04:15:29] <phogg> the mentality is quite similar, though
[04:15:38] <^-^hi> yes but still very stupid. the rationale for the commercial evil people looks clear though.
[04:15:46] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:15:50] <phogg> we have this one thing, it's kind of a universal tool! We can use it for everything! Let's use it for <something it's not good for>. Results are mixed.
[04:15:57] *** Joins: flynn (~mcbloch@user/flynn)
[04:16:10] <oldlaptop> doesn't oracle have special features for storing xml?
[04:16:21] <phogg> oldlaptop: depends how you mean
[04:16:35] <^-^hi> "website programmers are cheap, and resource waste is other people's problem"
[04:16:49] <oldlaptop> "look at our zooty new xml database! we're hep to the times, dawg!"
[04:16:56] <phogg> oracle's TEXT system can directly index files on disk and understands XML. It also ships with the ability to process XML in columns
[04:16:57] <oldlaptop> (is how I mean)
[04:17:03] <phogg> but, this is not much different from other databases
[04:17:19] *** Quits: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[04:17:33] <phogg> oracle an also *generate* xml from any resultset (read: output of a select statement)
[04:17:44] <oldlaptop> my psychological coping mechanisms have already erased most of my last run-in with oracle, so I don't remember exactly how it is hep to the xml-spewing times of 2003
[04:17:44] <phogg> it's not good XML, or even particularly valid, but it functions
[04:17:50] <phogg> of course other RDBMSs can do that, too
[04:18:06] <phogg> oldlaptop: its XML support was distinctly lacking in that era
[04:18:13] *** Quits: federico_it (~textual@151.95.116.125) (Quit: Textual IRC Client: www.textualapp.com)
[04:18:14] *** Quits: bm3 (~bm3@pool-74-101-152-242.nycmny.fios.verizon.net) (Quit: Client closed)
[04:18:26] <phogg> it needed (IIRC) 2 more releases to be where it is now
[04:18:33] <phogg> today built in JSON support is all the rage
[04:18:40] <^-^hi> arahael: thanks for the cookie
[04:18:46] <phogg> in that space Postgres is king, if you count only RDBMS and not document databases
[04:18:48] <oldlaptop> Yes, I take it as a base assumption that they'll have been all hip to the xml times by approximately three years after nobody wanted to see xml again
[04:19:10] *** Quits: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[04:19:14] <oldlaptop> (don't forget sqlite, which has very cannily ripped off the good parts of postgres' json support)
[04:19:14] <phogg> oldlaptop: yes, that was about when they reached completion on XML support
[04:19:40] <phogg> oldlaptop: exhibit A, xmlagg https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions215.htm
[04:19:40] <bayaz> Title: XMLAGG 
[04:19:58] <phogg> "it's so easy!"
[04:20:12] <oldlaptop> I thought you weren't supposed to touch things that say SYS_blablabla
[04:20:14] *** Quits: nodoc (~nodoc@user/nodoc) (Remote host closed the connection)
[04:20:21] <oldlaptop> or is that only the things that say $SYS$blablabla
[04:20:34] <phogg> people particularly keen on XML will like the part where an ID and a last name are *concatenated* into a tag value instead of being presented as attributes.
[04:20:49] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 252 seconds)
[04:20:57] *** Joins: nodoc (~nodoc@user/nodoc)
[04:21:04] <oldlaptop> Yes, very nice touch
[04:21:08] <phogg> oldlaptop: you generally shouldn't, they're not guaranteed stable
[04:21:13] <phogg> but sometimes one must because there is no other option
[04:21:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[04:21:50] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-6f81-efc3-489b-3fbb.res6.spectrum.com)
[04:22:02] <phogg> I have used listagg() in the past, which is similarly documented as "avoid" and unstable. And then they broke it, and then I had to switch to xmlagg and an insane amount of string manip
[04:23:07] <oldlaptop> this? https://docs.oracle.com/cd/E11882_01/server.112/e41084/functions089.htm#SQLRF30030
[04:23:07] <bayaz> Title: LISTAGG 
[04:23:15] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[04:23:25] <oldlaptop> they must document the HERE BE DRAGONS RUN AWAY somewhere else if so
[04:23:31] <phogg> that's the one
[04:23:44] <oldlaptop> also how the hell could that be HERE BE DRAGONS RUN AWAY
[04:23:46] <phogg> I can't recall where it was (this was years ago now)
[04:24:04] <Izem> why does google say 44 million results but then have like 15 results on a page?
[04:24:23] <phogg> most likely it was some "ask tom" article
[04:24:34] <oldlaptop> that's, like, one of sqlite's four or five aggregates, I would think the Dark Lord Larry would be embarrassed to not have feature parity with sqlite
[04:25:49] <phogg> oldlaptop: the best part is that the strings you generate with xmlagg can't exceed your string length limit, which was for the longest time 4000 bytes. If you want to generate longer XML output you must go through additional contortions to convert everything to CLOB as soon as possible.
[04:26:01] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:26:14] <phogg> the limit is 32KiB today, if you remember to set that in your DB init file, which is more reasonable.
[04:26:50] <phogg> Izem: it probably says "about " 44 million, and that includes all pages you could visit if you kept clicking next
[04:27:21] <Izem> next takes me to a "related search" :/
[04:27:54] <oldlaptop> It probably costs google a measurable, non-zero amount of money to actually pull up all of them. And they know as well as you do you're probably only going to look at the first four or five
[04:27:58] *** Quits: nekodesu (~bit@user/nekobit) (Ping timeout: 252 seconds)
[04:28:05] <phogg> Izem: you can also get more results per page by changing a value in settings (if you are logged in)
[04:28:17] *** Joins: nekodesu (~bit@user/nekobit)
[04:28:35] <oldlaptop> (well, forget all of them - pulling up 150 is probably measurably more expensive than pulling up 15)
[04:28:40] <^-^hi> Izem: that number is an estimate
[04:28:49] <phogg> oldlaptop: the max you can request is 100
[04:29:04] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[04:29:47] <oldlaptop> phogg: please tell me this is written by a mental patient: https://explainextended.com/2009/04/05/group_concat-in-oracle-10g/
[04:29:49] <bayaz> Title: Oracle: efficient GROUP_CONCAT (aggregate concatenation) 
[04:30:02] *** Quits: zopsi (~zopsi@irc.dir.ac) (Quit: Oops)
[04:30:03] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:30:19] *** Quits: neunon (~neunon@user/neunon) (Quit: ZNC 1.8.2 - https://znc.in)
[04:30:26] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:30:50] *** Joins: neunon (~neunon@user/neunon)
[04:30:53] *** Joins: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[04:31:49] <phogg> oldlaptop: which part amazes you? Do you find delight in the "connect by" syntax? I always found it quite horrifying.
[04:32:15] <phogg> the business with "model" is quite real, but fortunately not something that is needed very often
[04:32:25] <oldlaptop> I am amazed that the thing I can do in about five seconds and one aggregate in sqlite was, not that long ago, *that*
[04:32:40] <oldlaptop> what the hell is that what why how why...
[04:33:59] <phogg> oldlaptop: that is very much the Oracle experience
[04:34:21] <phogg> it could be a feature, but it's not. If you want it you can probably get it by writing a function--but that function may have to be *quite* intricate and complex
[04:34:26] <phogg> this is nothing like the worst I've seen
[04:34:33] <oldlaptop> Oh, I'm sure
[04:34:41] <phogg> try a function which builds up an SQL query to eval, and then evals it. 
[04:35:04] <phogg> I've seen that recommended seriously as a solution to several problems
[04:35:25] <phogg> but this is kinds stuff
[04:35:40] <phogg> try asking this question: how many different kinds of functions are there in Oracle?
[04:35:58] <phogg> and then ask yourself why
[04:36:22] <oldlaptop> It's just astounding that they let sqlite, of all things, beat them to an obvious thing like that by... [checks the changelog] at least a year and a half
[04:37:02] <oldlaptop> (sqlite's group_concat() has been there since 2007-12-14, apparently)
[04:37:10] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:37:32] <phogg> oldlaptop: the usual attitude is "you can just write that function yourself"
[04:37:48] <phogg> that's the official answer on why there isn't a boolean type shipped in the DB
[04:37:56] <phogg> "you can just create your own user defined type"
[04:38:19] <oldlaptop> Yep, that's what we're paying the big bucks for
[04:38:24] <phogg> most people use a char(1) constrainted to ('Y', 'N') or a small int contrained to (0,1)
[04:38:33] <phogg> but imagine what happens when these two conventions collide and true != true
[04:38:49] *** Quits: Inari (~Pinkishu@p4fe7ea07.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[04:39:31] <oldlaptop> why would you do the 'Y'/'N' thing at all?
[04:39:54] <phogg> it makes very little sense to me, but it seems popular
[04:40:02] <oldlaptop> fascinating
[04:40:08] *** Joins: arcatech (~arcatech@user/arcatech)
[04:40:14] <phogg> I blame people who learned databases in pre-SQL days
[04:40:38] <phogg> for flat text files that may be viewed by humans there is some logic to it
[04:41:05] <phogg> given that a number of oracle functions return literal int 0 or 1 for false/true I suspect the modern trend is the other way
[04:42:41] <phogg> my other theory is that this is a reaction from the group of DB people who insist that int and number columns are ONLY for math. If you're not doing math on it, use a char
[04:43:31] <oldlaptop> I'm guessing those people don't like sqlite's type system at all
[04:44:20] <phogg> I haven't used sqlite for anything. What's so different about it?
[04:44:37] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 245 seconds)
[04:45:16] <oldlaptop> "if it walks like a duck", pretty much: https://www.sqlite.org/datatype3.html
[04:45:17] <bayaz> Title: Datatypes In SQLite Version 3 
[04:45:36] <oldlaptop> sqlite2 was "everything is a string", the present situation is a concession of sorts
[04:45:39] *** Joins: _nodoc_ (~nodoc@user/nodoc)
[04:46:31] <phogg> everything is a string is definitely a choice one can reasonably make
[04:46:50] <oldlaptop> any column can store any value, unless prohibited by constraints or it's an INTEGER PRIMARY KEY in those exact words; declared types simply cause casts to be attempted
[04:46:51] *** Quits: nodoc (~nodoc@user/nodoc) (Ping timeout: 276 seconds)
[04:46:56] <phogg> all in all I prefer the postgres approach to types, where typing is static but coercion is automatic in most cases
[04:47:14] <phogg> and can be made explicit when you want or need it
[04:47:22] <oldlaptop> and `create table foo(a, b, c);` is perfectly legal
[04:47:42] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:47:52] *** Joins: Atque (~Atque@user/atque)
[04:48:10] <phogg> I can't say I like it. I want the DB to constrain what I can put in a column, otherwise I would just declare everything as varchar(max)
[04:48:16] <oldlaptop> also no crap about a distinction between "strings" and "clobs"
[04:48:28] <phogg> yeah, well NOBODY does that except Oracle
[04:48:34] <phogg> okay, I take it back. I am not familiar with all DBs
[04:48:40] <phogg> DB/2 may well be that insane
[04:48:42] *** Parts: _nodoc_ (~nodoc@user/nodoc) ()
[04:48:46] <phogg> but I know at least six DBs that aren't
[04:49:50] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:50:40] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:398e:7ab8:d74e:d9a5) (Ping timeout: 240 seconds)
[04:50:42] <oldlaptop> they usually still don't like you storing big things, though, AIUI
[04:50:52] <phogg> well there are performance implications
[04:50:54] <phogg> that's to be expected
[04:51:57] <oldlaptop> (the performance implications of putting it in the table don't stop being actively helpful until around 100K for sqlite: https://www.sqlite.org/intern-v-extern-blob.html)
[04:52:11] <phogg> 100K bytes?
[04:52:13] <oldlaptop> yes
[04:52:17] *** Joins: BitsnBytes (~kukulkan@ip59-131-15-186.ct.co.cr)
[04:52:45] <phogg> that's pretty usefully large, although not nearly what you might expect in an Oracle BLOB
[04:53:05] <phogg> I have some DBs where blob columns store file contents that are several MiB
[04:53:22] <oldlaptop> but then there are all these things you, like, can't do with them, man
[04:53:39] <phogg> I'm not saying it's a *good* practice
[04:54:17] <oldlaptop> I mean I wouldn't hesitate to plunk multi-MiB things right into `create table foo(a, b, c);`
[04:54:21] <phogg> but, for the kinds of things where sqlite is used, optimizing for the smaller end of things makes a lot of sense
[04:54:50] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[04:56:05] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[04:57:27] *** Quits: MDP87900 (~SKI8040@177.12.40.77) (Quit: Client closed)
[04:57:55] *** Joins: SKI8040 (~SKI8040@177.12.40.77)
[04:57:57] *** SKI8040 is now known as MDP87900
[05:07:22] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[05:11:57] *** Joins: nekodesu_ (~bit@user/nekobit)
[05:11:59] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:14:07] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[05:15:10] *** Quits: nekodesu (~bit@user/nekobit) (Ping timeout: 240 seconds)
[05:17:11] *** Joins: Cashlin (~hp@user/cashlin)
[05:17:30] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[05:18:52] *** Joins: jkl (~jkl@user/jkl)
[05:19:59] *** Quits: nekodesu_ (~bit@user/nekobit) (Quit: uninstall gentoo)
[05:20:42] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[05:21:49] *** Quits: pizdets (~pizdets@183.182.110.40) (Ping timeout: 252 seconds)
[05:22:00] *** Joins: pizdets_ (~pizdets@183.182.110.224)
[05:25:43] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[05:26:38] <beaky> nice so rust has simd intrinsics if i am willing to use nightly and unsafe https://neosmart.net/blog/2021/using-simd-acceleration-in-rust-to-create-the-worlds-fastest-tac/
[05:26:39] <bayaz> Title: Using SIMD acceleration in rust to create the world’s fastest tac 
[05:27:02] *** Quits: BitsnBytes (~kukulkan@ip59-131-15-186.ct.co.cr) (Quit: WeeChat 2.8)
[05:28:50] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:29:03] <phogg> okay? But seriously, how often do you really need tac? Does it really need to be fast?
[05:29:11] *** Joins: mickey (~user@user/mickey)
[05:29:19] <Caffeinated> i like to blog
[05:29:34] *** Quits: hexingb (~hexingb@2409:8900:7140:2ba6:199f:516:717e:d1ca) (Ping timeout: 252 seconds)
[05:29:59] *** Joins: hexingb (~hexingb@2409:8900:2721:f824:14e2:32a7:d638:73cf)
[05:30:36] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[05:30:40] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5122:6ba2:db85:592) (Ping timeout: 252 seconds)
[05:32:32] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[05:33:01] *** Joins: raj (uid72176@user/raj)
[05:33:05] *** Quits: SystemFFan (~SystemFFa@188.71.213.184) (Remote host closed the connection)
[05:33:12] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[05:33:31] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[05:36:43] *** Joins: Hanii (~textual@host86-171-71-229.range86-171.btcentralplus.com)
[05:41:46] *** Joins: frost (~frost@59.71.240.119)
[05:41:57] *** Joins: webNET4 (~0x100@32.211.211.39)
[05:42:22] *** Quits: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu) (Remote host closed the connection)
[05:43:19] *** Quits: peteyboy1 (~peteyboy1@95.169.235.10) (Ping timeout: 252 seconds)
[05:46:01] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[05:51:01] *** Quits: zaher (~zaher@37.48.185.6) (Ping timeout: 252 seconds)
[05:52:07] *** Joins: pulse (~pulse@user/pulse)
[05:56:28] *** Quits: southey (~foxtrot@user/foxtrot) (Ping timeout: 252 seconds)
[05:56:59] *** Joins: southey (~foxtrot@user/foxtrot)
[05:59:10] *** Quits: hexingb (~hexingb@2409:8900:2721:f824:14e2:32a7:d638:73cf) (Ping timeout: 240 seconds)
[06:00:02] *** Joins: hexingb (~hexingb@2409:8900:2721:f824:6d0b:2ca5:eb0b:188)
[06:03:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:04:03] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[06:04:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:04:38] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:04:40] *** Quits: xff0x (~xff0x@2001:1a81:52bb:c200:954e:ca7f:9978:3e44) (Ping timeout: 240 seconds)
[06:05:31] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b0dc:fa4:d0:c1c1)
[06:06:35] *** Joins: xff0x (~xff0x@2001:1a81:52f2:5d00:a43c:729f:4397:fe8e)
[06:06:53] *** Quits: ChromaCat248_ (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[06:10:02] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[06:10:14] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5c4f:6d00:4ecc:dae9)
[06:12:18] *** ormaaj is now known as ormaaj2
[06:12:48] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[06:13:46] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:14:24] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[06:16:13] *** Quits: stoneware (uid515661@user/stoneware) ()
[06:17:49] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[06:24:01] *** Quits: hexingb (~hexingb@2409:8900:2721:f824:6d0b:2ca5:eb0b:188) (Ping timeout: 252 seconds)
[06:24:22] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:24:35] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:24:45] *** brabrax_ is now known as brabrax
[06:25:01] *** Joins: hexingb (~hexingb@103.37.140.36)
[06:28:48] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[06:29:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:34:43] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[06:35:45] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:37:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[06:37:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[06:37:56] *** Joins: Atque (~Atque@user/atque)
[06:39:43] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[06:40:32] *** Joins: arcatech (~arcatech@user/arcatech)
[06:45:10] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[06:45:29] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[06:45:40] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[06:47:34] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510) (Read error: Connection reset by peer)
[06:47:56] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[06:48:19] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510)
[06:48:39] *** Quits: codemin (~codemin@69.167.6.173) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:48:43] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 252 seconds)
[06:48:43] *** shokohsc8 is now known as shokohsc
[06:48:51] *** Joins: jazzy (~jaziz@172.58.38.189)
[07:03:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[07:05:43] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:07:45] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[07:07:57] *** Joins: flynn (~mcbloch@user/flynn)
[07:10:48] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:13:06] *** Joins: diamondbond (~diamondbo@112.134.170.180)
[07:17:46] *** Quits: hardtotell (~hardtotel@satyr.seedboxes.cc) (Ping timeout: 240 seconds)
[07:20:07] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 252 seconds)
[07:23:13] *** Joins: hardtotell (~hardtotel@satyr.seedboxes.cc)
[07:28:32] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:33:51] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[07:34:11] <Izem> It seems data structures used to be embedded in application specific code.
[07:35:47] *** Joins: arcatech (~arcatech@user/arcatech)
[07:36:24] <Caffeinated> remby
[07:36:29] <Caffeinated> o/
[07:38:13] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 252 seconds)
[07:39:15] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[07:39:17] *** Joins: diamondbond_ (~diamondbo@116.206.246.30)
[07:39:24] *** Quits: clarjon_1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[07:40:40] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[07:42:07] *** Quits: diamondbond (~diamondbo@112.134.170.180) (Ping timeout: 252 seconds)
[07:42:18] *** Joins: arcatech (~arcatech@user/arcatech)
[07:45:02] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 245 seconds)
[07:45:07] *** Joins: One39Dev (LordShiva@user/one39dev)
[07:46:18] *** Quits: One39Dev (LordShiva@user/one39dev) (Client Quit)
[07:52:12] *** Quits: safeAI (~safeAI@pc-101-50-101-190.cm.vtr.net) (Quit: Leaving...)
[07:54:07] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 244 seconds)
[07:54:25] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[07:55:02] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[07:57:40] *** Quits: diamondbond_ (~diamondbo@116.206.246.30) (Ping timeout: 240 seconds)
[07:58:06] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[07:59:21] *** Quits: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[07:59:47] *** Joins: One39Dev (LordShiva@user/one39dev)
[08:00:29] *** Joins: blahblah441 (~blahblah4@89.45.224.24)
[08:00:49] *** Quits: blahblah441_ (~blahblah4@static-198-54-129-46.cust.tzulo.com) (Ping timeout: 252 seconds)
[08:01:50] *** Quits: One39Dev (LordShiva@user/one39dev) (Client Quit)
[08:02:05] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[08:13:58] *** Quits: causative (~halberd@user/causative) (Quit: may the truth move you)
[08:15:52] *** Joins: Samian (~Sami@2620:10d:c091:480::1:5b3a)
[08:19:35] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[08:19:44] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[08:21:02] *** Joins: Bjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[08:22:13] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 252 seconds)
[08:23:01] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:23:08] *** Bjander is now known as Belxjander
[08:23:39] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Remote host closed the connection)
[08:24:20] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 256 seconds)
[08:34:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:36:07] *** Joins: jazzy2 (~jaziz@172.58.38.189)
[08:36:09] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:39:16] *** Quits: jazzy (~jaziz@172.58.38.189) (Ping timeout: 252 seconds)
[08:40:24] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[08:41:06] *** Joins: Mija (~Mija@user/mija)
[08:44:45] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[08:45:16] *** Joins: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de)
[08:45:52] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018)
[08:45:58] <Juliu> Hi
[08:46:52] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[08:47:04] *** Joins: webNET4 (~0x100@32.211.211.39)
[08:51:17] *** Quits: raj (uid72176@user/raj) (Quit: Connection closed for inactivity)
[08:52:31] *** Joins: euouae (~euouae@user/euouae)
[08:55:53] *** Joins: jinsun (~quassel@user/jinsun)
[08:56:38] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 244 seconds)
[08:58:09] *** Quits: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:02:07] *** Quits: MDP87900 (~SKI8040@177.12.40.77) (Quit: Client closed)
[09:07:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:10:40] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 252 seconds)
[09:11:19] *** Joins: hexingb (~hexingb@2409:8900:2720:358d:85a0:3f3e:2636:6897)
[09:16:25] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Quit: WeeChat 3.2)
[09:18:28] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2)
[09:20:15] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:25:03] <cis> > In the soap opera General Hospital, Colonel Sanders of KFC makes a guest appearance because someone is trying to kill him to obtain the secret recipe of 11 herbs and spices. He knows Malbolge and is able to disarm the destruct sequence.
[09:26:02] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[09:26:17] <Caffeinated> ##programming 
[09:28:28] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:28:40] *** Joins: webNET4 (~0x100@32.211.211.39)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:33:05] <euouae> lmao
[09:40:30] <cis> the venn diagram of general hospital viewers who also know what malbolge is must contain only the the faintest sliver of overlap
[09:41:03] <cis> some bored writer googled for crazy programming langauges and just couldn't contain his excitement
[09:41:06] <Caffeinated> perhaps you've mistaken this channel for ##entertainment
[09:41:28] <cis> feel free to add better content :)
[09:42:05] <Caffeinated> thought so
[09:44:50] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[09:45:18] <euouae> The Malbolge comment makes it tangentially related Caffeinated
[09:45:22] <euouae> It's an esoteric programming language 
[09:45:46] <cis> it's pure madness in programming form
[09:46:13] <euouae> Nothing beats obfuscated C
[09:46:30] <Brando751> not even obfuscated brainfuck?
[09:46:48] <euouae> I doubt that's even a thing
[09:46:52] <cis> BF comes pre-obfuscated for convenience
[09:46:57] <Brando751> lol
[09:48:30] <Brando751> euouae: ask and you shall receive https://github.com/xoreaxeaxeax/movfuscator
[09:48:32] <bayaz> Title: GitHub - xoreaxeaxeax/movfuscator: The single instruction C compiler 
[09:48:37] <Brando751> The original M/o/Vfuscator (M/o/Vfuscator 1.0) compiles programs from the esoteric language BrainF@$!, and is best used in conjunction with the BFBASIC compiler by Jeffry Johnston. It is still available as a proof of concept in the poc directory.
[09:49:00] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-55ae-d7d8-7bcf-ce25.res6.spectrum.com) (Ping timeout: 250 seconds)
[09:50:51] <euouae> huh 
[09:51:14] <cis> > The M/o/Vfuscator contains a complete mov-only floating point emulator. Since it is approximately 500,000 instructions, you must explicitly link to it if you need it.
[09:51:23] <Brando751> lol
[09:53:00] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:54:03] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-405a-c628-91bb-f055.res6.spectrum.com)
[09:55:52] <Caffeinated> lol
[09:56:11] <Caffeinated> looks like "vaguely related" is the only prerequisite
[09:56:21] *** Joins: vysn (~vysn@user/vysn)
[09:56:46] <euouae> Caffeinated: From the topic: " Programming/Computer Science Discussion & Community Chat"
[09:57:02] <Caffeinated> as I said
[09:57:03] <euouae> It says community chat, so you can expect vaguely related programming stuff to be included, relaxed atmosphere
[09:57:15] <euouae> Obviously we're not coming here to talk about the deadlines we need to meet
[09:57:25] *** Quits: Samian (~Sami@2620:10d:c091:480::1:5b3a) (Ping timeout: 252 seconds)
[09:57:46] <Caffeinated> obviously
[09:57:47] <Caffeinated> lol
[09:57:57] <euouae> I'm learning how to configure git to use gpg to sign my commits
[09:58:00] <Brando751> Speak for yourself! I only have one week to program the TCP/IP stack in brainfuck, halp!
[09:58:10] <euouae> but I'm using yubikey and I want to configure gpg-agent to use that 
[09:58:10] <Brando751> euouae: thats pretty easy
[09:58:15] <Brando751> still easy
[09:58:17] <Brando751> thats my setup
[09:58:24] <Brando751> gpg on yubikey with git
[09:58:31] <euouae> do you use ssh keys or gpg keys? Brando751
[09:58:38] <Brando751> using 25519 curve
[09:58:40] <Brando751> gpg keys
[09:58:57] <euouae> I'm using rsa4096
[09:59:13] <Brando751> my public master sig key is rsa4096 as it is quite old
[09:59:15] <euouae> I just said "whatever, same in all keys:"
[09:59:22] <Brando751> but my new signing key for the yubikey is a 25519 key
[09:59:28] <cis> if you sign your commits, you'll have no recourse when someone git blames you
[09:59:37] <Brando751> you can just add it as a valid key to your keyfile if its signed by the master
[09:59:39] <euouae> What's a git blame cis
[09:59:47] <cis> try it!
[09:59:48] <Brando751> git blame
[09:59:49] *** Joins: qbt (~edun@user/edun)
[09:59:54] <Brando751> it tells you who is to blame line by line
[09:59:54] <euouae> Is it when the angry mob gets together to bash you 
[10:00:00] <cis> and that
[10:00:15] <PlanckWalk> git --Who. Did. THIS!
[10:00:15] <Caffeinated> one of the oldest computers was a model of our solar system based on the Compernican system built by Christiaan Huygens
[10:00:22] <Brando751> to be fair, the easy out is just, oh must have been my editor changing the indentation or something
[10:00:27] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:00:42] <cis> "it passed code review!"
[10:00:46] <Brando751> yup
[10:00:47] *** Quits: qbt (~edun@user/edun) (Remote host closed the connection)
[10:00:51] <euouae> I don't fear the git blame
[10:00:56] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[10:00:58] <Brando751> its not my fault you setup the repo to allow merge without review
[10:01:05] <euouae> Brando751, so how do you do it?
[10:01:06] *** Joins: qbt (~edun@user/edun)
[10:01:27] <Brando751> euouae: you have already created your gpg key? already have a signing key on the yubikey?
[10:01:43] <Brando751> and just want git to use it?
[10:01:49] <Brando751> or is the yubikey not setup yet?
[10:02:18] <euouae> that's set up
[10:03:06] <Brando751> have you stored your gpg public key on your git hosts (github, gitlab, bitbucket, etc)
[10:03:10] <euouae> yeah
[10:03:10] <Brando751> then just do 
[10:03:12] <Brando751> git config --global commit.gpgSign true
[10:03:27] <Brando751> git config --global user.signingkey <keyid>
[10:04:19] <Brando751> then when you commit a dialogue asking for your smartcard pin (the yubikey pin) will popup and depending upon how you setup your yubikey you may need to tap the yubikey then it will be signed
[10:04:29] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[10:04:32] <Brando751> thats really all there is to it
[10:05:29] <euouae> where the keyid is the main key id or the subordinate authentication key?
[10:06:08] <Brando751> subkey I believe
[10:06:35] <Brando751> let me check my setup real quick and confirm
[10:06:43] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[10:07:09] <Brando751> I used a signing subkey
[10:07:12] <Brando751> for the keyid
[10:07:14] *** Joins: anovick (~anovick@igld-83-130-62-236.inter.net.il)
[10:07:34] <euouae> okay thank you 
[10:08:07] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[10:08:08] <Brando751> it can be a pita if you have multiple yubikeys with multiple signing sub keys because my version of gpg for whatever reason still defaults to the newest one
[10:08:11] <Brando751> but meh
[10:08:23] <Brando751> I have four yubikeys though
[10:08:27] <euouae> You have to use a certain command Brando751
[10:08:29] <Brando751> and one actual gpg smartcard
[10:08:58] <euouae> Brando751, are they all loaded with the same gpg keys?
[10:09:11] <Brando751> they each have different auth/sig subkeys
[10:09:15] <Brando751> same enc subkey
[10:09:22] <euouae> Brando751, then plug in the yubikey and run `gpg-connect-agent "scd serialno" "learn --force" /bye`
[10:09:29] <euouae> That will load the encryption subkey
[10:09:36] <Brando751> the encryption key is not the issue
[10:09:40] <Brando751> the issue is with git signing
[10:09:56] <Brando751> it will always demand a specific yubikey even though there are multiple valid subkeys setup
[10:10:00] <Brando751> it always wants the latest
[10:10:01] <euouae> don't use global configurations 
[10:10:11] <euouae> It shouldn't if you use that command above
[10:10:12] *** Quits: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340) (Ping timeout: 276 seconds)
[10:10:18] <Brando751> this is a gpg issue not a git issue
[10:10:28] <euouae> Yeah thus the gpg command
[10:10:29] <Brando751> gpg on my system ignores the specific key I ask for
[10:10:37] <euouae> Try the command I gave you :P
[10:10:43] <Brando751> I already have used that command
[10:10:50] <euouae> No good? 
[10:10:56] <Brando751> nope :(
[10:11:09] <Brando751> I emailed the gpg mailing list about it but no one really had a solution
[10:11:26] <euouae> Wait so `gpg --sign --output foo.sig foo` doesn't work
[10:11:41] <Brando751> that works
[10:11:49] <Brando751> but tools that use gpg
[10:12:00] <Brando751> like git or thunderbird always default to the oldest key no matter what
[10:12:09] <euouae> How do they know?
[10:12:14] <Brando751> s/oldest/newest
[10:12:28] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[10:13:01] <euouae> well I did what you told me but "go tfailed to sign the data"
[10:13:07] <euouae> "error: gpg failed to sign the data"
[10:14:03] <Brando751> did you setup your yubikey to require touch on sign? 
[10:14:08] <Brando751> and did touch the yubikey
[10:14:08] <euouae> yeah
[10:15:02] <euouae> maybe something to do with macOS, hold on
[10:15:24] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[10:15:31] <Brando751> you can do a signature with gpg directly right?
[10:15:47] <Brando751> only other thing I can think of is: git config --global gpg.program gpg2
[10:18:10] <euouae> ah thanks! now it works!
[10:18:55] <euouae> extremely cumbersome though because the yubikey is behind 
[10:19:02] <euouae> and hangs from my 15 other keys
[10:19:58] <Brando751> what is cumbersome the need to touch it?
[10:20:03] <Brando751> you can disable the touch requirement
[10:20:31] <Brando751> ykman openpgp keys set-touch
[10:20:58] <Brando751> though if you do and you get a virus it can sign on your behalf without any intervention on your part so long as the yubikey is inserted
[10:21:03] <Brando751> the touch requirement prevents that
[10:21:07] <euouae> It's in a set with a lot of heavy keys
[10:21:15] <euouae> I can't have it hanging from a screen monitor
[10:21:37] <Brando751> what yubikey are you using?
[10:21:41] <Brando751> the NFC?
[10:21:43] <euouae> usb 5 
[10:21:44] <euouae> yeah
[10:22:05] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Read error: Connection reset by peer)
[10:22:28] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[10:22:30] <Brando751> euouae: I have this on my yubikey https://www.amazon.com/dp/B076KNFQH5
[10:22:42] <Brando751> so I can easily take it off the keyring and back on
[10:22:51] <Brando751> does not fit the neo model though
[10:23:02] <Brando751> but fits the NFC model just fine
[10:23:10] *** Quits: hexingb (~hexingb@2409:8900:2720:358d:85a0:3f3e:2636:6897) (Ping timeout: 240 seconds)
[10:23:27] <euouae> nice trick
[10:23:43] <euouae> dang looks like thunderbird is using SVN or something else, 
[10:23:47] <Brando751> yea
[10:23:50] <euouae> I don't know how to search
[10:23:50] <Brando751> thunderbird is a mess
[10:24:01] <euouae> but you said git does it too
[10:24:11] <Brando751> yea its a gpg issue
[10:24:23] <Brando751> git and thunderbird have the same behaviour 
[10:26:40] *** jazzy2 is now known as jazzy
[10:28:25] <Brando751> euouae: only suggestion is for a signing key perhaps consider a 25519 ECC key over RSA4096
[10:28:31] <Brando751> the signatures are much smaller and faster to generate
[10:28:38] <Brando751> and the yubikey supports them
[10:29:46] <euouae> too late done already 
[10:30:05] <Brando751> not too late! You can add as many subkeys as you want to your public key
[10:30:18] <Brando751> and you can revoke any keys you destroy for that matter other then the master key
[10:30:31] <euouae> oh yeah true 
[10:30:47] <euouae> Might follow your advice actually 
[10:30:57] <Brando751> so just because your master public key is RSA4096 does not mean your signing subkeys have to be
[10:31:13] <Brando751> so yes your public key will still be large the actual signatures on things you sign will be small
[10:31:15] <Brando751> thats what I do
[10:32:00] <euouae> cool, good idea
[10:32:09] <euouae> I'll do all that soon. 
[10:32:18] * euouae now goes through git's source code for instances of 'gog'
[10:32:22] <euouae> er, 'gpg'
[10:36:47] *** Quits: qbt (~edun@user/edun) (Quit: Leaving)
[10:37:10] <euouae> Brando751, https://github.com/git/git/blob/142430338477d9d1bb25be66267225fb58498d92/gpg-interface.c#L450-L454 
[10:37:11] <bayaz> Title: git/gpg-interface.c at 142430338477d9d1bb25be66267225fb58498d92 · git/git 
[10:37:18] <euouae> from what I can tell, this is the invocation
[10:38:41] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[10:38:42] <euouae> so does this work for you? the options -bsau 
[10:39:53] *** Quits: jazzy (~jaziz@172.58.38.189) (Read error: Connection reset by peer)
[10:40:14] *** Joins: jazzy (~jaziz@172.58.38.189)
[10:43:09] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[10:43:39] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[10:43:57] <euouae> It's crazy but I have NO idea where git invokes gpg. The source code makes no sense 
[10:44:12] *** Quits: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[10:45:21] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[10:46:26] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[10:46:28] *** Joins: aaa__ (~aaa__@2a02:27b0:5300:ba20:d3f0:f764:c38:c9c)
[10:46:28] *** Joins: tomgus1 (~tomgus1@90.208.15.36)
[10:46:52] <Akronymus> btw, why does programming have double `#`?
[10:47:11] <Caffeinated> because it is an "off topic" channel
[10:47:21] <Caffeinated> unofficial
[10:47:27] <deniska> Akronymus: old tradition
[10:47:55] <deniska> obviously we're the official representatives of programming, the human activity :)
[10:48:03] <euouae> I'm shivering in fear right now after realizing what the source code of git looks like 
[10:48:12] <euouae> only a mad genius could've written this 
[10:48:24] <Brando751> euouae: I always assumed git was a nightmare, what it does is insane
[10:48:28] <Akronymus> You're in luck then.
[10:48:29] <Caffeinated> it is merely beyond YOUR comprehension
[10:48:39] <Brando751> think of all the features and theory behind its inner workings
[10:48:50] <Akronymus> euouae Torvalds IS a mad man.
[10:49:31] <Brando751> euouae: the problem is I have deleted the non-relevant keys in order for it to work so I am unsure, I could pull out the cd from the safe and readd them but probably wont be able to tonight, will try in the morning though
[10:49:32] <Caffeinated> linus wrote linux, not the git backend
[10:49:45] <Akronymus> He wrote git too
[10:49:52] <deniska> Linus wrote linux, git, and that one tool for scuba divers
[10:49:57] <^-^hi> i think he began it, but someone name Junio did most
[10:50:03] <^-^hi> named*
[10:50:11] <^-^hi> he said in a interview
[10:50:43] <deniska> writing 90% of git is the easy part, the hard part is 90% which follows
[10:50:46] *** Quits: aaa__ (~aaa__@2a02:27b0:5300:ba20:d3f0:f764:c38:c9c) (Ping timeout: 252 seconds)
[10:50:57] <^-^hi> https://github.com/gitster
[10:50:58] <bayaz> Title: gitster - Overview 
[10:51:03] <Akronymus> The last 20% take 80% of the time.
[10:51:04] <^-^hi> this guy, it seems
[10:51:24] <Akronymus> The last 20% of that that 20% take 80% of the 80% of the time
[10:51:26] <Akronymus> And so on
[10:51:37] <euouae> OK it was some genius for sure 
[10:52:22] <euouae> There's some poetry in following the function references to find out where execv() lies only to end up with a bunch of print statements and no exec() in sight
[10:52:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:53:32] <Caffeinated> as if on cue
[10:54:27] <euouae> sign_buffer() -> pipe_command() -> start_command() -> ??? nope! 
[10:55:43] <euouae> start_command() -> trace_run_command() -> ??? .... 
[10:55:47] <Caffeinated> it'd be awesome to find out how git works...like in #git
[10:55:50] <euouae> Like, where is that exec*()?
[10:56:55] *** Joins: tiwEllien (~tiwEllien@host-79-34-247-87.business.telecomitalia.it)
[10:57:04] <euouae> I doubt they're discussing git source code but worth a try 
[10:58:11] <deniska> git is a tool which copies files around, and keeps lists of files, it's not magic
[10:58:41] <euouae> the magic is in doing it all in C
[10:59:39] <Akronymus> Not really.
[10:59:50] <Brando751> deniska: thats an oversimplification of what git does, it handles all sorts of graph theory problems, merging strategies, crazy optimizations 
[10:59:55] <Akronymus> The magic is thinking of it.
[11:00:09] <Akronymus> Specifically the algorithms it employs to be fast.
[11:00:12] <deniska> Brando751: yes, that's "the second 90%" I was refering to
[11:00:13] <Brando751> yup
[11:01:19] <Brando751> doing it all in C is just proving to the world your a masochist
[11:01:24] <Brando751> :P
[11:01:56] *** Joins: jazzy2 (~jaziz@172.58.38.189)
[11:01:58] <Brando751> granted I dont know what the state of languages like Rust where when git came out
[11:02:01] <deniska> speaking of C, that's now my favorite C snippet I saw in recent days: https://pbs.twimg.com/media/E-JtXw0XIAAAXrN?format=png&name=small
[11:02:02] <bayaz> Type: image/png Size: 29.6 kB 
[11:02:02] <Brando751> probably very new
[11:02:33] <Brando751> yea...
[11:02:45] <Brando751> I dont miss C at all
[11:03:04] <deniska> Brando751: git started in 2005, rust in 2010
[11:03:08] <euouae> deniska, ah yeah :P  because you declared them with ()
[11:03:14] <Brando751> deniska: then it makes a reasonable choice I suppose
[11:03:27] <Brando751> more reasonable at least
[11:03:30] <Akronymus> deniska that C code looks like UB to me.
[11:03:35] <deniska> Akronymus: it is
[11:03:38] <Akronymus> But I don't know the C standard too well
[11:03:57] <Brando751> Akronymus: which standard?
[11:03:59] <Brando751> there are tons of them
[11:04:12] <Akronymus> C99 I guess.
[11:04:27] <deniska> Akronymus: empty () in the declaration means that compiler will not check the parameter list, and if you supply the wrong amount of arguments, it's UB
[11:04:37] <Akronymus> Oh.
[11:04:47] <Akronymus> I always assumed it'd check for 0 arguments.
[11:04:52] <Akronymus> At least eclipse did that.
[11:05:00] <deniska> Akronymus: 0 arguments is (void)
[11:05:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:05:08] <euouae> eclipse shielded you from insanity
[11:05:12] <Akronymus> (Had to use eclipse + mingw at school.)
[11:05:14] <Brando751> Akronymus: I am pretty sure thats how most bugs in C occur
[11:05:18] <Brando751> oh I thought it would do that
[11:05:19] <Brando751> lol
[11:05:23] <Brando751> it did not
[11:05:28] <Akronymus> For C it is fucking awful.
[11:05:41] <Akronymus> For java, it is still kinda awful
[11:05:47] <Brando751> eww eclipse
[11:05:59] <Brando751> vscodium has been pretty nice to me 
[11:06:00] <Akronymus> intellij >>>>>>>>>> eclipse
[11:06:02] <deniska> I used eclipse for a while, never understood the hate :)
[11:06:06] <Brando751> its bloated crap
[11:06:09] <Brando751> :D
[11:06:10] *** Quits: jazzy (~jaziz@172.58.38.189) (Ping timeout: 252 seconds)
[11:06:16] <Akronymus> It has awful defaults.
[11:06:22] <Akronymus> You CAN make it work well.
[11:06:23] <Brando751> its a pain to configure
[11:06:29] <Akronymus> But ^
[11:06:29] <deniska> I mean, intellij is a fancier choice for java nowadays, but it's not like eclipse was necesserily bad
[11:06:37] <Brando751> and when things dont work right its a pain to find out why
[11:06:39] <euouae> I used vscode for a bit and then I disgusted myself at what I had become
[11:06:50] <Brando751> euouae: then use vscodium
[11:06:52] <Akronymus> Eclipse isn't bad when you customized it to be decent.
[11:06:52] <euouae> so I plan to take some time to re-learn Emacs and get back at it
[11:06:53] <Brando751> no microsoft
[11:07:02] <Akronymus> Eclipse is AWFUL out of the box.
[11:07:18] <euouae> Brando751, 100% hippy or no hippy :P
[11:07:21] <Akronymus> https://blog.codinghorror.com/the-power-of-defaults/
[11:07:22] <bayaz> Title: The Power of Defaults 
[11:08:53] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[11:09:06] *** Joins: wwilly (~wwilly@2a01:cb10:171:3a00:d2e:8faf:a535:2629)
[11:12:38] *** jazzy2 is now known as jazzy
[11:14:19] <smallville7123> i got my value to increase when it goes past the max range, but i cant get it to decrease when it goes under the max range
[11:14:37] <smallville7123> Diligent Engine: Info: increasing font to size 512
[11:14:37] <smallville7123> Diligent Engine: Info: cache min 256 max 512
[11:14:44] *** Joins: Fairy (~Fairy@2001:464a:4992:0:882e:cef8:320b:7103)
[11:15:02] <smallville7123> for Diligent Engine: Info: font changed: 237 -> 268
[11:15:25] <smallville7123> but nothing happens for Diligent Engine: Info: font changed: 260 -> 251
[11:15:37] <smallville7123> :(
[11:15:41] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[11:17:44] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[11:17:54] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:17:57] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:1813:98d:4b7a:3a80) (Ping timeout: 250 seconds)
[11:18:32] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[11:20:16] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[11:21:16] <Akronymus> `if (newsize >= maxsize) {currentSize = maxsize;}else if (newsize <= minsize) {currentsize = minsize;}else{currentsize = newsize;}`
[11:21:21] <Akronymus> Wouldn't that work?
[11:21:53] <smallvil_> Akronymus: can you repaste my last message?
[11:22:00] <smallvil_> i had to reopen my irc
[11:22:16] <smallvil_> limechat keeps timing out even tho my internet is stable ;-;
[11:22:17] <Akronymus> :(
[11:22:21] <Akronymus> That was your last one
[11:23:00] <smallvil_> Akronymus: can you repaste my last question?
[11:23:14] <euouae> Brando751, we have progress! Next time try `GIT_TRACE=1 git commit ...`
[11:23:40] <Akronymus> https://i.imgur.com/oK9buhw.png
[11:23:40] *** Joins: mei (~mei@user/mei)
[11:23:40] <bayaz> Type: image/png Size: 29.2 kB 
[11:23:42] <Akronymus> smallvil_
[11:23:42] <euouae> Brando751, it will show you the exact git command being ran. I just tried it with `git log --show-signature` and sure enough it showed me the invocation
[11:23:59] <smallvil_> yay
[11:24:49] <Brando751> nifty will try that once I get access to my safe in the morning
[11:24:53] <Brando751> thanks euouae 
[11:24:59] <smallvil_> in an array on min/max vals, i got my value to increase when it goes past the max, but i cant get it to decrease when it goes under the min https://gist.github.com/mgood7123/65d31ea20035841e24f4977b13952606
[11:25:00] <bayaz> Title: TextView.cpp 
[11:25:18] <smallvil_> of*
[11:25:30] <Akronymus> What is the intended behaviour?
[11:25:53] <smallvil_> to optimize the loaded font size based on the current font size
[11:26:07] <Akronymus> What do you mean with "optimize"?
[11:26:27] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-405a-c628-91bb-f055.res6.spectrum.com) (Quit: jarthur)
[11:26:33] <smallvil_> like 
[11:27:22] <smallvil_> its basically the same as a kernel table how pages are allocated and deallocated as needed when pages get full and empty
[11:28:22] <Akronymus> that doesn't make it any clearer to me.
[11:28:41] <pikapika> Akronymus, do you know numbers?
[11:28:47] <Akronymus> Yes
[11:28:58] <pikapika> I will be learning what numbers are
[11:29:02] *** Joins: mrig (~mrig@user/mrig)
[11:29:03] <pikapika> I don't know numbers
[11:30:14] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (Quit: Bye!)
[11:30:15] <pikapika> Akronymus, for example how to count. What are reals etc
[11:30:19] *** Joins: hexingb (~hexingb@101.236.65.144)
[11:30:27] *** Quits: DasBrain (DasBrain@user/dasbrain) (Ping timeout: 240 seconds)
[11:30:28] <smallvil_> hmm ok
[11:31:02] <Akronymus> Are you a student?
[11:31:03] <smallvil_> hmmm
[11:31:05] <Akronymus> pikapika
[11:31:32] <pikapika> Akronymus, no. But I want to know what numbers are.
[11:32:07] *** Joins: palasso (~palasso@user/palasso)
[11:32:55] <Akronymus> smallvil_ line 141
[11:33:09] <Akronymus> Do you notice anything special about that if?
[11:33:55] <Akronymus> Oh nvm
[11:34:01] <Akronymus> I overlooked something
[11:34:26] <smallvil_> if my min/max is min 256, max 512, then if i am increasing and my value is under the min, would i resize once it goes past the min? and if i am decreasing and my value is over the min, would i resize when it goes under the min?
[11:35:07] <Akronymus> I'd think that clamping it to the min/max would make more sense.
[11:35:17] <Akronymus> So, if it ever goes under the min, set it to the min.
[11:35:30] <Akronymus> If it ever goes above max, set it to the max
[11:35:46] <smallvil_> thats what im doing
[11:35:53] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[11:35:59] <smallvil_> except
[11:36:25] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Ping timeout: 252 seconds)
[11:36:30] <smallvil_> when loading the font, i clamp it to min/max, when rendering i allow the font to be any size and do not clamp it
[11:36:53] <Akronymus> `&& cache_font_size_min != min_` on line 141.
[11:37:06] <smallvil_> for example, if the font size is 50, then the loaded font size is clamped to 256 and thus downscaled from 256 to 50
[11:37:32] <Akronymus> This seems to me like it could cause problems.
[11:37:37] <smallvil_> when fonr size is 300 the loaded font size is increased to 512 and downscaled to 300
[11:38:04] <smallvil_> when the font size is 100 the loaded font size is decreased to 256 and downscaled to 100
[11:38:36] <Akronymus> Oh, it is increased to the next power of 2, then downscaled to the original?
[11:38:41] <smallvil_> yes
[11:38:59] <smallvil_> but it is not accounting for optimization such as upscale factor
[11:39:21] <smallvil_> for example the font can be loaded at 128 and upscaled to 256 with little loss in quality
[11:39:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[11:39:32] <smallvil_> if the font size is 256 or less
[11:39:36] *** Joins: Guest70 (~Guest70@103.5.134.18)
[11:39:58] <smallvil_> if it is 567 then it is loaded at 256 and upscaled to max of 512, and so on
[11:40:26] <smallvil_> but this is complex to calculate due to the upscale factor needing to be taken into account
[11:40:29] <smallvil_> brb lunch
[11:40:35] <smallvil_> so i set to 1 for now
[11:40:39] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[11:41:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:45:20] <smallvil_> back
[11:50:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[11:51:04] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[11:51:07] *** Quits: Guest70 (~Guest70@103.5.134.18) (Ping timeout: 256 seconds)
[11:53:25] *** Joins: aradesh (~aradesh@user/aradesh)
[11:54:20] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:54:46] <smallvil_> how do i detect if a value is less than X, eg, {2, 4, 6, 8}  how do i know if my value went from 4 to 3 assuming ranges of min 2 max 4, min 4 max 6, min 6 max 8
[11:56:46] *** Joins: orondo (~orondo@user/orondo)
[11:57:18] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:57:52] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 252 seconds)
[11:57:59] *** Quits: jazzy (~jaziz@172.58.38.189) (Ping timeout: 244 seconds)
[11:58:26] *** Joins: diophantoz (~dz@user/diophantoz)
[11:59:00] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Client Quit)
[11:59:22] <mrig> pyzozord: I think I worked out why there were calls to BSD in the code as I am trying to compile it but not the other, it is the SDL code that you have inside of the folder.
[12:00:34] <mrig> Curious to be exploring C code again after go, the compiler is so very different.
[12:01:57] <mrig> Am realising now how much Go has taught me about code structure.
[12:02:14] <Akronymus> mrig why not f#?
[12:02:32] <Akronymus> It forces you to structure your codebase essentially linearly
[12:02:40] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[12:04:36] *** Joins: jazzy (~jaziz@172.58.36.50)
[12:04:43] <mrig> Akronymus: I like to be forced to make trees, am not a linear thinker.
[12:05:11] <Akronymus> mrig well, you can group into folders.
[12:05:17] <mrig> That said I've never tried that kind of programming language.
[12:05:23] <Akronymus> But it is HARD to make cyclic references in f#
[12:05:31] <mrig> Ah I see.
[12:05:38] <Akronymus> And it is a 1 pass compiler.
[12:05:49] <mrig> right yes it is the cyclic references that I'm exploring at the moment.
[12:06:47] <mrig> I suppose essentially go is forcing that but not structurally, which is why we get the impression at times that we are fighting the language.
[12:06:48] <smallvil_> Akronymus: how do i detect if a value is less than X, eg, {2, 4, 6, 8}  how do i know if my value went from 4 to 3 assuming ranges of min 2 max 4, min 4 max 6, min 6 max 8
[12:07:01] <mrig> Truth is that we are fighting our own ignorance though.
[12:07:58] * Akronymus shrugs
[12:08:10] <Akronymus> Tbh, I am not intelligent enough to figure it out.
[12:08:23] <mrig> It is a language that I know nothing about, just taking a look.
[12:08:29] <Akronymus> smallvil_
[12:08:59] <smallvil_> how do i detect if a value is less than X,   for example, given an array of {2, 4, 6, 8}  how do i know if my value went from:     10 to 8 (max),     6 (min) to 5,    2 (min) to 1,     assuming ranges of     min 2 max 4,     min 4 max 6,     min 6 max 8
[12:08:59] <smallvil_> *
[12:09:33] <smallvil_> 10 to 7 *
[12:09:56] <mrig> smallvil_: you will need a memory of the previous value at the same time a knowing the current value.
[12:10:21] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[12:10:24] *** Joins: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name)
[12:10:37] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[12:10:44] <smallvil_> 8 (max) or 7      *
[12:10:51] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Remote host closed the connection)
[12:12:12] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:12:26] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[12:12:53] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[12:13:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:14:00] <mrig> I will have to take a look at the ML language group at some point.
[12:16:11] <Akronymus> Which f# is kinda a part of
[12:16:38] <mrig> Yes I was just having a read of the wikipedia page.
[12:17:09] <Akronymus> Gotcha
[12:17:15] <mrig> I can't put them into my mental map just yet, as I've got no idea as to how they work :)
[12:18:15] <Akronymus> mrig >as I've got no idea as to how they work
[12:18:19] <Akronymus> they just do
[12:18:30] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:18:30] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Quit: Leaving)
[12:18:51] <mrig> Seems to be coupled with the system of type inference, the way that the compiler reads and understands.
[12:19:08] <Akronymus> Oh yeah, the f# type inference is GOOD.
[12:19:46] <Akronymus> Combine that with everything being an expression, and even the significant whitespace syntax works well.
[12:21:29] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:24:16] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[12:26:32] *** caramel_ is now known as caramel
[12:26:46] <arahael> Akronymus: The biggest annoyance, imho, is that >>= is backwards compared to |>
[12:28:30] *** Joins: euouae (~euouae@user/euouae)
[12:30:01] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 244 seconds)
[12:30:40] *** Joins: ellie (~ellie@user/ellie)
[12:33:06] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[12:33:21] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[12:35:49] *** Quits: inky_ (~inky__@46.36.119.19) (Ping timeout: 252 seconds)
[12:36:44] *** Joins: inky_ (~inky@46.162.233.255)
[12:38:32] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:39:07] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[12:39:16] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:39:19] *** Quits: inky (~inky@46.36.119.19) (Ping timeout: 244 seconds)
[12:39:57] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[12:40:03] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:40:16] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[12:42:55] *** Quits: anovick (~anovick@igld-83-130-62-236.inter.net.il) (Ping timeout: 252 seconds)
[12:43:04] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[12:44:56] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[12:47:08] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[12:47:09] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[12:47:09] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[12:51:13] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018) (Ping timeout: 252 seconds)
[12:55:25] *** Joins: dan01 (~dan01@109.98.132.202)
[12:56:41] *** Joins: user51 (~user51@176.228.90.248)
[12:58:18] *** Joins: sjmulder (~Sijmen@2a02-a443-33e5-1-3440-39db-6f68-87ba.fixed6.kpn.net)
[13:00:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:01:37] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:02:17] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018)
[13:03:03] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[13:03:47] <sjmulder> time appropriate greetings all
[13:04:37] <euouae> timely
[13:05:11] <GeDaMo> timid
[13:06:26] <user51> cheers
[13:07:17] *** Joins: plastico (~plastico@neomutt/plastico)
[13:08:29] <sjmulder> bit late to the party but 'modern' C++ is pretty interesting. thinking about getting Effective Modern C++. little dated but rave reviews
[13:08:41] <pikapika> sjmulder, C++ is a family of languages
[13:10:31] <Akronymus> c++03 c++11 c++17 and c++20 are quite different indeed.
[13:10:41] <sjmulder> ha pikapika I can see why that would be
[13:11:33] <sjmulder> c++20 is the one with concepts right? that seems like a big, big step. wasn't 17 mostly <string_view>, <filesystem> and some other smaller things
[13:12:09] <pikapika> sjmulder, I am learning counting
[13:12:24] <Akronymus> https://en.wikipedia.org/wiki/C%2B%2B20#Features sjmulder yeah, and much more
[13:12:27] <bayaz> Title: C++20 - Wikipedia 
[13:12:44] *** Joins: archie (~archie@host-79-43-74-191.retail.telecomitalia.it)
[13:12:51] <archie> hello
[13:13:07] <archie> how can I print on cout the current date with timestamp in c++?
[13:13:31] <archie> looks like an easy task, but couldn't figure it out -.-
[13:13:52] <diophantoz> is a method returning an int (methodInt(int n) { m=n+1; return m } suppose to give the number 2 if n=1 for example?
[13:13:54] <sjmulder> so what I'm interested in is learning more about the C++ specific things, like const & constexpr correctness, noexcept, attributes, moves, lvalue references, etc. things to look out for to 'properly' implement e.g. a data structure
[13:14:14] <Akronymus> archie https://en.wikipedia.org/wiki/C%2B%2B20#Features
[13:14:14] <bayaz> Title: C++20 - Wikipedia 
[13:14:18] <Akronymus> Wrong link..
[13:14:24] <Akronymus> https://www.cplusplus.com/reference/cstdio/sprintf/
[13:14:25] <bayaz> Title: sprintf - C++ Reference 
[13:14:26] <Akronymus> That one
[13:14:30] <diophantoz> so methodInt(1) will return 2, but where is that 2?
[13:14:47] <Amadiro> diophantoz, in what language?
[13:14:50] <sjmulder> archie, https://man.openbsd.org/strftime maybe?
[13:14:51] <bayaz> Title: strftime(3) - OpenBSD manual pages 
[13:14:52] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[13:14:53] <diophantoz> since the method doesn't output anything verbose ... how can i access that value?
[13:14:56] <diophantoz> Amadiro: java
[13:15:19] <Amadiro> diophantoz, you have to "capture" it by doing something like "int result = methodInt(1);"
[13:15:31] <Amadiro> then you have it in the "result" variable and you can use it further.
[13:15:31] <diophantoz> Amadiro: ah, i see
[13:15:39] *** Joins: gggp (~textual@111.63.14.115)
[13:15:43] <diophantoz> nice
[13:15:53] <pikapika> Amadiro, can you count?
[13:16:15] <Amadiro> pikapika, no, it's too hard. That's why I tolerate a computer in my house
[13:16:31] *** Quits: archie (~archie@host-79-43-74-191.retail.telecomitalia.it) (Client Quit)
[13:16:31] <pikapika> Amadiro, Peano taught us a way of counting
[13:16:47] <Amadiro> diophantoz, and you could, by the way, also do something like "int result = methodInt(methodInt(1));"
[13:16:53] <Amadiro> pikapika, well, he formalized it, at least
[13:17:10] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[13:17:52] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:18:10] *** Quits: dan01 (~dan01@109.98.132.202) (Ping timeout: 252 seconds)
[13:18:28] <euouae> Peano wasn't the first one who formalized airhtmetic
[13:18:47] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 245 seconds)
[13:18:49] <euouae> he made a set theoretic model though
[13:18:50] <pikapika> euouae, I will be soon learning how to count and add
[13:19:17] *** Joins: palasso (~palasso@user/palasso)
[13:20:22] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[13:21:10] <GeDaMo> https://en.wikipedia.org/wiki/Substitution_failure_is_not_an_error
[13:21:11] <bayaz> Title: Substitution failure is not an error - Wikipedia 
[13:25:16] *** Joins: gggp (~textual@111.63.14.115)
[13:27:33] <KillerWasp> hello hellgate hell
[13:32:17] <mrig> a curious greeting KillerWasp :D
[13:32:23] <mrig> hello :)
[13:33:01] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[13:34:33] *** Joins: dan01 (~dan01@109.98.132.202)
[13:35:30] *** Quits: CP-400 (~sjw@69.206.48.64) (Remote host closed the connection)
[13:36:42] *** Joins: CP-400 (~sjw@69.206.48.64)
[13:37:40] *** Quits: ellie (~ellie@user/ellie) (Quit: The Lounge - https://thelounge.chat)
[13:37:51] *** Joins: ellie (~ellie@user/ellie)
[13:39:08] *** Joins: archie (~archie@host-79-43-74-191.retail.telecomitalia.it)
[13:39:10] <archie> hello
[13:39:20] <archie> how do I print the current milliseconds in c++?
[13:39:49] <archie> seems not trivial to cout a chrono's output -.-
[13:41:59] <GeDaMo> https://en.cppreference.com/w/cpp/chrono/duration
[13:42:00] <bayaz> Title: std::chrono::duration - cppreference.com 
[13:43:35] <archie> GeDaMo I just need to print chrono::system_clock::now()
[13:43:55] <archie> nor a duration or time difference
[13:44:32] <GeDaMo> std::chrono::microseconds
[13:45:09] <GeDaMo> Or millisewconds
[13:45:37] <diophantoz> <insert chrono trigger-joke>
[13:46:18] <archie> duration_cast<milliseconds>(system_clock::now().time_since_epoch()).count()
[13:46:27] *** Joins: MarcoFe (~marcofe@93-36-160-224.ip60.fastwebnet.it)
[13:47:19] <DnzAtWrk> is there a difference between sample rate and sampling rate
[13:47:35] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:48:21] *** Joins: nekodesu (~bit@user/nekobit)
[13:50:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[13:51:13] <Amadiro> DnzAtWrk, I guess I would use the latter when referring to a device like an ADC to indicate the process it performs, whereas I'd use the former when referring to a piece of data that already was sampled
[13:51:18] <Amadiro> in what context?
[13:51:35] <archie> how do I get a proper timestamp in a readable date format from the current milliseconds in c++?
[13:51:43] <DnzAtWrk> I guess that makes sense
[13:51:48] <DnzAtWrk> in several contextes
[13:51:51] <DnzAtWrk> contexti?
[13:52:10] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-6f81-efc3-489b-3fbb.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:54:14] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[13:56:18] *** Quits: gggp (~textual@111.63.14.115) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:58:40] *** Joins: rcoote (~rcoote@2a02:908:692:81c0:3343:ab29:6ac7:74a0)
[13:59:57] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[14:00:13] *** Quits: orondo (~orondo@user/orondo) (Quit: leaving)
[14:00:21] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:01:17] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:02:39] *** Joins: dev0 (~dev0@user/deepspace-link)
[14:03:24] <diophantoz> contextii*
[14:03:38] <diophantoz> contexts**
[14:04:27] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:06:08] <GeDaMo> https://en.wiktionary.org/wiki/contextus#Declension
[14:06:09] <bayaz> Title: contextus - Wiktionary 
[14:08:01] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:09:09] <archie> how do I get a proper timestamp in a readable date format from the current milliseconds in c++? any help please? :(
[14:09:29] <archie> I can't use external dependencies, boost only
[14:09:33] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[14:10:14] <Juliu> archie, how about   std::chrono::system_clock::now()   ?
[14:10:54] <KillerWasp> archie# man time.h
[14:10:58] <archie> Juliu I need a human readable timestamp to print in a logfile. now() cannot be printed out.
[14:11:06] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:11:14] <archie> I was able to get the current milliseconds with duration_cast<milliseconds>(system_clock::now().time_since_epoch()).count()
[14:11:18] *** Joins: flynn (~mcbloch@user/flynn)
[14:11:21] <KillerWasp> boost only???
[14:11:38] <archie> but I would like to generate an human readable format from it
[14:11:43] <KillerWasp> boost is external dependencies. :/
[14:11:49] <Juliu> archie, you just said the milliseconds. How about   duration_cast<milliseconds>(system_clock::now().time_since_epoch()).count()
[14:12:20] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net)
[14:12:27] <archie> Juliu yes, but rather than write out the microseconds, I would like a more human friendly timestamp format
[14:12:43] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[14:12:45] <Juliu> archie, maybe this article helps:   https://www.delftstack.com/howto/cpp/how-to-get-time-in-milliseconds-cpp/
[14:12:46] <bayaz> Title: Get Time in Milliseconds in C++ 
[14:12:52] <archie> KillerWasp yes I know, but is already imported in the project, I don't want to use an additional library just to format a date
[14:13:17] <Juliu> archie, so first you ask for milliseconds and then you say you dont want milliseconds?
[14:13:29] *** Joins: jokoon (~eio@2a01:e0a:542:e160:65e4:3400:c023:ed68)
[14:13:39] <archie> Juliu I have got the milliseconds already! Just want to print them out in a human friendly format (eg year-month-day-hour-min-seconds-milliseconds)
[14:14:02] <jokoon> What are rules that makes a PNG file smaller than a JPG, for the same input?
[14:14:19] <KillerWasp> archie# It is not any extra library because it is what is normally used throughout the system. :/
[14:14:23] <Juliu> archie, why not simply print the current date and time?
[14:14:29] *** Joins: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu)
[14:14:38] <beaky> c assumes computers are a fast pdp11, modern os design assumes computers are a fast vax with symmetric multiprocessing https://www.usenix.org/conference/osdi21/presentation/fri-keynote
[14:14:38] <elf_fortrez> time, time, time
[14:14:39] <bayaz> Title: It's Time for Operating Systems to Rediscover Hardware | USENIX 
[14:15:02] <archie> Juliu how do I do that? Also, I need at least milliseconds precision, seconds is not enough
[14:15:15] <Juliu> archie, why dont you google for yourself?
[14:15:18] <KillerWasp> What are extra libraries is boost, because it is encapsulating the use of the time.h clock, which is extremely redundant.
[14:15:38] <archie> Juliu I did with poor results, so I am sking help
[14:15:53] <elf_fortrez> what devire are we talking about?
[14:16:01] <elf_fortrez> device*
[14:16:05] <pikapika> elf_fortrez, hi
[14:16:15] <elf_fortrez> hi pikapika
[14:16:28] <Akronymus> What language archie?
[14:16:29] <pikapika> elf_fortrez, do you have an accurate spirit level
[14:16:37] *** Joins: Atque (~Atque@user/atque)
[14:16:59] <elf_fortrez> more than yesterday
[14:17:08] <elf_fortrez> i woke up learning asm
[14:17:31] <pikapika> elf_fortrez, no a level
[14:17:42] *** Joins: independent56 (~independe@95.144.68.39)
[14:17:45] <elf_fortrez> pm me
[14:17:48] <pikapika> It just dawned on me that spirits are just as much a gravity based instrument as plumbs
[14:17:59] <pikapika> So probably just a normal plumb can be more accurate
[14:18:43] *** Joins: humanface (~humanface@20014C4E1C473D0084366AD118E7836D.dsl.pool.telekom.hu)
[14:18:46] <archie> Akronymus c++
[14:18:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:19:19] <Akronymus> https://newbedev.com/how-to-print-current-time-with-milliseconds-using-c-c-11
[14:19:19] <bayaz> Title: How to print current time (with milliseconds) using C++ / C++11 | Newbedev 
[14:19:32] <elf_fortrez> i guess mario was a plumber
[14:19:35] <Akronymus> `c++ print milliseconds formatted` <-- search term
[14:20:12] <KillerWasp> mmmm... I remember using nanoseconds to time the game record and time.
[14:20:33] <elf_fortrez> he will ask for atto then
[14:20:37] <elf_fortrez> or pico
[14:20:45] <elf_fortrez> what is your game
[14:20:49] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[14:20:58] <archie> Akronymus hell, that's extremely verbose
[14:21:06] <Akronymus> And?
[14:21:07] <elf_fortrez> and precise
[14:21:28] <elf_fortrez> si units
[14:21:38] <pikapika> Akronymus, do you know where 'up' is?
[14:21:46] <elf_fortrez> in the lifo
[14:22:11] *** kinduff4 is now known as kinduff
[14:22:16] <Akronymus> OH FFS
[14:22:30] <Akronymus> That is just a mirror of stackoverflow https://stackoverflow.com/questions/16077299/how-to-print-current-time-with-milliseconds-using-c-c11
[14:22:31] <bayaz> Title: How to print current time (with milliseconds) using C++ / C++11 
[14:23:13] <elf_fortrez> this seems absurd
[14:23:19] <elf_fortrez> just let me ssh
[14:23:25] <elf_fortrez> and do it
[14:26:47] *** Joins: eson123 (~eson123@118.69.128.37)
[14:26:54] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[14:27:20] <eson123> hello, can i ask some simple things about data structure here ?
[14:27:25] *** Quits: archie (~archie@host-79-43-74-191.retail.telecomitalia.it) (Quit: Client closed)
[14:27:25] <GeDaMo> Yes
[14:27:59] *** Joins: peteyboy1 (~peteyboy1@95.169.235.10)
[14:28:49] <eson123> well i think i already asked this yesterday but no one has answered yet, not sure if it is annoying or people were too busy but when we talk about the term "Abstract Data Types", do we usually refer to data types such as integer, float, string, etc or structures such as Queue, Stack or Tree ?
[14:29:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:29:13] <GeDaMo> Queue, Stack, Tree
[14:29:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:29:46] <eson123> some do say Node is also an ADT, but isn't tree built on nodes ?
[14:29:55] <GeDaMo> An abstract Stack will have operations like push and pop but it doesn't say anything about how it's implemented
[14:30:03] <Akronymus> ADT usually refers to algebraic data types
[14:30:16] <Akronymus> At least afaik
[14:30:19] *** Quits: Neverloads (NeverLoad@freakshells.net) (Read error: Connection reset by peer)
[14:30:32] <GeDaMo> Abstract Data Types is historically the more common use :P
[14:30:40] <Akronymus> eson123 you can build a tree based on an array.
[14:30:43] *** Joins: Neverloads (NeverLoad@freakshells.net)
[14:30:57] <GeDaMo> A Node would be an element of a Tree
[14:30:57] <eson123>  Hm, i guess that is the only option when it comes to Python or alike languages
[14:31:46] <GeDaMo> The 'Abstract' part means the data structure is defined in terms of the operations you can perform, not how it's actually implemented
[14:31:49] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:32:01] <elf_fortrez> tree seems more intuitive to build in a functional language
[14:32:05] <eson123> awh, ok
[14:32:59] <DnzAtWrk> probably rather difficult to use arrays for unbalanced trees
[14:33:10] <Akronymus> Yeah
[14:33:57] *** Joins: gggp (~textual@111.63.14.115)
[14:34:04] <Akronymus> also only really viable for binary trees DnzAtWrk
[14:34:25] <Akronymus> So, something like an 8tree for 3d space partitions would make it quite hard.
[14:34:32] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[14:34:37] <Akronymus> Altough, as that is again a power of 2, maybe not THAT hard.
[14:34:46] <DnzAtWrk> I guess you could use a linked list
[14:35:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[14:35:10] <Akronymus> You could use a linked list for many things
[14:35:14] <Akronymus> Even a stack.
[14:35:19] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[14:35:31] <eson123> GeDaMo: Hm, in that case does list in python or array in C or C++ can be counted as ADT too ?
[14:35:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:36:31] <GeDaMo> Yes
[14:36:40] <eson123> awh, ok that makes sense now
[14:36:59] <GeDaMo> The array in C at least tends to be more of an implementation, a concrete type
[14:37:06] <elf_fortrez> i thought it was called DT only since it is already implemented
[14:37:20] <Thedarkb-Work> I've got an issue with an enum in this SQL script: https://dpaste.com/B8MZ777E6
[14:37:23] <Thedarkb-Work> Getting a syntax error.
[14:37:57] <GeDaMo> Where do you get the error?
[14:38:34] <beaky> c's FILE is the best example of an adt
[14:39:18] <pikapika> Thedarkb-Work, hi uwu
[14:41:29] *** Joins: nekodesu (~bit@user/nekobit)
[14:41:43] <eson123> beaky: huh, is it not specific to files only ?
[14:41:46] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[14:42:32] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:42:35] *** Quits: MarcoFe (~marcofe@93-36-160-224.ip60.fastwebnet.it) (Quit: Konversation terminated!)
[14:42:51] <GeDaMo> No, FILE * is an abstract interface to anything you can read or write
[14:42:57] *** Quits: jokoon (~eio@2a01:e0a:542:e160:65e4:3400:c023:ed68) (Quit: Leaving)
[14:43:24] <eson123> well directories also have read or write operations tho, but not sure if it applies becuz i never tried it 
[14:43:34] <pikapika> GeDaMo, but isn't that unix rather than C
[14:44:45] <GeDaMo> https://www.man7.org/linux/man-pages/man3/open_memstream.3.html
[14:44:47] <bayaz> Title: open_memstream(3) - Linux manual page 
[14:45:04] <GeDaMo> POSIX, I think
[14:45:11] <Thedarkb-Work> GeDaMo, near '("Collection_Point","Collector_Van","At_Dropoff")
[14:45:12] <Thedarkb-Work> )' at line 3
[14:45:24] <Thedarkb-Work> I changed a few characters around to ensure that wasn't the problem.]
[14:46:14] <GeDaMo> Which database are you using?
[14:46:25] <Thedarkb-Work> MariaDB#
[14:46:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:46:43] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[14:47:00] <arahael> Willingly? ;)
[14:47:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:47:28] <Thedarkb-Work> Eh, it's convenient given what my company's up to.
[14:47:32] <GeDaMo> Try locationType enum("Collection Point","Collector's Van","At Drop-off")
[14:47:42] <arahael> Thedarkb-Work: That's a valid reason, yeah.
[14:47:59] <Thedarkb-Work> I knew it was something dumb, thank you.
[14:48:54] <Thedarkb-Work> I've been staring at that for hours and it's the only enum that was broken and I didn't notice that I'd done it backwards.
[14:49:06] <Thedarkb-Work> Neither did my boss.
[14:49:44] *** Joins: silasfox (~silasfox@xdsl-85-197-57-82.nc.de)
[14:50:59] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[14:51:38] *** Joins: Twipply (~Twipply@user/twipply)
[14:54:22] <KillerWasp> enum for strings? in what language?
[14:54:28] *** Joins: inky (~inky@46.36.119.19)
[14:54:43] <GeDaMo> SQL
[14:54:53] <arahael> And enum strings isn't that unusual either.
[14:54:56] *** Joins: Lyn (~Lyn@user/law)
[14:54:57] <arahael> Stop coding in just C. ;)
[14:55:37] <sjmulder> C is cool
[14:55:42] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[14:55:45] <KillerWasp> arahael# stop coding in C is unusual. :/
[14:56:02] <arahael> C has the worst enums.
[14:56:16] <sjmulder> Q: is having something like https://example.com/track?url=... a 'vulnerability' if you can use any URL?
[14:56:18] <Thedarkb-Work> I don't mind them.
[14:56:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[14:56:56] <KillerWasp> I don't find problems with the C enum, but I don't use it.
[14:57:00] <Amadiro> sjmulder, a vulnerability in what way?
[14:57:40] *** Quits: inky_ (~inky@46.162.233.255) (Ping timeout: 252 seconds)
[14:58:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:58:44] <sjmulder> Amadiro, the 'ethical hacker' argues it can be used to a) construct plausible phishing links and b) circumvent access check
[14:59:24] <sjmulder> I think b is particularly far fetched, that would apply to authentication where the Referer header is checked (?!)
[14:59:45] <sjmulder> but a too, meh
[15:00:10] *** Joins: gggp (~textual@111.63.14.115)
[15:01:03] <Amadiro> Does he have some examples of how this would work?
[15:01:15] <arahael> sjmulder: It depends on how it could be used, I guess.  What would that url be used for, in particular?
[15:01:22] <deniska> Doesn't look like a vulnerability to me
[15:01:30] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:01:31] <mrig> Are there any conventions when coding with C, as to where to put non source code assets, such as data files?
[15:01:35] <deniska> At most you'll get spam in your tracking data
[15:01:40] <Amadiro> You can always put another "legit looking" URL at the end of your URL, and if the user doesn't pay attention to the beginning, you got them, but that's not an issue specific to tracking links
[15:02:12] <mrig> seems that a folder called src and bin are quite regular conventions, was wondering about digital assets?
[15:02:34] <Amadiro> mrig, not really, there's a couple different approaches, like compiling them into the binary (by embedding them as header file), for anything else it really depends more on the build and shipping system
[15:02:57] <mrig> I suppose it is also likely that I'm just picking up on some of the UNIX/POSIX/LINUX conventions.
[15:03:03] <arahael> As for the git repo, binary files are problematic; it depends on how often you expect them to be changed.  I'd consider keeping them out of the repo as a resource you can pick.
[15:03:05] <Amadiro> e.g. if you package your software up as a .deb package, then there's a predefined way (and you have to be able to discover that)
[15:03:22] <arahael> Amadiro: I think mrig is after repository layout conventions (Right?)
[15:03:24] <sjmulder> arahael, it's tracking links in emails, so by design a whitelist is impractical. maybe a signature parameter. but I mean is that worth it
[15:03:25] <mrig> Amadiro: oh right, how would you go about doing that in a program?
[15:03:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:04:01] <mrig> arahael: Yes as I've a fairly large text file that is likely going to accompany an otherwise small program.
[15:04:13] <Amadiro> mrig, there's a bunch of different approaches, it depends a little on what kind of platforms you want your software to run and what kind of software it is, and what kind of assets you bring along
[15:04:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:04:23] <arahael> sjmulder: I'd probably feel better if the system requires a registration, and if example.com only followed the link if everything checks out, but at this point, you might as well use a code and not a url.
[15:04:26] <Amadiro> like physFS if you want a single compressed file
[15:05:03] <Amadiro> or on linux systems you can either bake the path to the assets into the binary or read it from /etc/
[15:05:03] <mrig> ah, this is a trinket, aimed only at say POSIX compliant machines and OS
[15:05:24] <sjmulder> arahael, are we talking about the same thing? this is where you get an email with a link to foo.com but it actually links to example.com/track?url=foo.com&emailid=123 so it can track the click
[15:05:25] <arahael> mrig: How large is 'large'?  But yeah the options aren't great.  If it's huge, I'd say keep it on an http resource you can manage and know will be there for a long, long time.
[15:05:37] <mrig> the ideal would be to make it into one single binary, I think.
[15:05:45] <arahael> sjmulder: Yeah, we are.  I'm basically saying you might as well do what the url shorteners do.
[15:05:46] <sjmulder> arahael, or e.g. what Google does on links on the result page
[15:06:01] <mrig> oh its tiny really, but comparatively large 50MB
[15:06:10] <Amadiro> mrig, you can fairly easily include your text file as string into the binary or even compress it first and then decompress it in memory
[15:06:12] <mrig> for a kbyte program
[15:06:14] <sjmulder> arahael, ah like have a database of used URLs and pass an id
[15:06:19] <arahael> mrig: I'd probably just wack that in.
[15:06:24] <Amadiro> mrig, if it's text, I bet it compresses down to 5MiB or so
[15:06:41] <arahael> sjmulder: Indeed.
[15:06:57] <Amadiro> But if the size doesn't matter to you, just leave it hanging around
[15:07:06] <arahael> sjmulder: Plus url shorteners often double up as providing tracking statistics and the like.
[15:07:07] <Amadiro> in the repo you should have it uncompressed, at any rate
[15:07:14] <sjmulder> arahael, that would be nicer yeah, but would you consider this a vulnerability?
[15:07:21] <mrig> Amadiro: text full of similar escape charaters too, yes I bet it would go pretty small.
[15:07:41] <mrig> ah so keep it as a sting and inflate for use.
[15:07:47] <mrig> a string rather.
[15:07:51] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:08:21] <arahael> sjmulder: Not directly, but you could certainly implement a vulnerability that way, especially if you hire an idiot, and you do need to factor that in.  Plus, other organisations or governments could pressure you to put in such a vulnerability as well.
[15:09:28] <sjmulder> what kind of vuln then arahael? I can see the phishing angle - mybank.com/redirect?url=scarysite.tk
[15:09:32] <mrig> Would you just call upon a common library for the compression? Are there OS interfaces for this sort of thing?
[15:09:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:09:47] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:09:48] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[15:10:06] *** Joins: independent56 (~independe@95.144.68.39)
[15:10:06] <GeDaMo> sjmulder: maybe it could be used for DDOS?
[15:10:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:37] <beaky> yes the problem is known as 'open redirect' though it is considered to be of minimal severity https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html http://cwe.mitre.org/data/definitions/601.html
[15:10:37] <bayaz> Title: Unvalidated Redirects and Forwards - OWASP Cheat Sheet Series 
[15:10:38] <bayaz> Title: CWE - CWE-601: URL Redirection to Untrusted Site ('Open Redirect') (4.5) 
[15:12:20] <arahael> sjmulder: Plus perhaps XSS or something.
[15:12:34] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[15:13:21] <sjmulder> GeDaMo, it's the client's browser being redirected, so no data multiplication there
[15:13:53] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[15:14:06] <GeDaMo> Unless it's hidden in a webpage which is being viewed by a lot of people
[15:14:50] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 244 seconds)
[15:14:56] <Amadiro> mrig, you would probably compress it as part of your build process with bz2 or similar, and then include a library to decompress it in memory
[15:15:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:15:33] <sjmulder> GeDaMo, there's nothing here that's not the same for an non-static URL
[15:15:34] <Amadiro> mrig, but if you don't expect it to grow past the 50 megs it is now, also consider not bothering
[15:15:41] <arahael> mrig: I recommend libarchive for your application, but as for the git repo, store it uncompressed.
[15:15:41] <mrig> Amadiro: right yes, then document the dependency I suppose.
[15:16:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:17] *** Quits: YHVH (~yhvh@2601:982:8300:8090:754d:7ef0:7033:d635) (Ping timeout: 250 seconds)
[15:16:17] <mrig> Yes it will not grow, likely to be replaced by an algorithm that generate a similar thing than the file does.
[15:16:40] <arahael> mrig: In any case, 50MB of raw text is not 'huge' imho.
[15:16:53] <mrig> I'll just include as is for now, but am interested to learn about the general practices and considerations that people make, thank you for the info!
[15:16:59] <arahael> Then again, I'm infected by enterprise development.  2GB git repos, anyone?
[15:17:21] <Amadiro> 2G ain't bad
[15:17:27] <mrig> No in today's dev its nothing really, next to the rest of the program though it is enormous!
[15:17:31] *** Quits: gggp (~textual@111.63.14.115) (Ping timeout: 252 seconds)
[15:17:34] <mrig> :D
[15:17:44] <arahael> Amadiro: It was 2G when git was new.  Back in those days, 2G was git's theoretical limit on windows systems.
[15:17:47] <Amadiro> you can always `git gc`, do shallow clones and drop old history if things ultimately take too much space on your server
[15:17:48] <deniska> 2G git repo? Someone accidentally commited a movie? :D
[15:18:04] <deniska> (I know, I know :( )
[15:18:05] <arahael> deniska: Several SQL Server installers, as it turns out.
[15:18:17] <sjmulder> deniska, or vendored everything except the Linux kernel
[15:18:23] <mrig> I could make it into a separate lib for the fun of it and the experience I suppose, so that it does not go into the repo.
[15:18:24] <Amadiro> I generally don't have a big issue with having git repos that are tens or hundreds of gigs, as long as the developer experience of cloning and working with it still is pleasant
[15:18:30] <sjmulder> arahael, are those Electron yet?
[15:18:41] <arahael> sjmulder: Nope.
[15:18:46] <mrig> then when I do write the code that generates the same it will be a simple exchange.
[15:18:50] <pikapika> arahael, do you have a screw?
[15:18:57] <arahael> pikapika: You mean a hammer? ;)
[15:19:07] <pikapika> Why
[15:19:36] *** Joins: gggp (~textual@111.63.14.115)
[15:19:57] <arahael> pikapika: Ah, wrong joke. Why a screw?
[15:20:11] <pikapika> arahael, some applications call for really accurate screws
[15:20:18] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[15:20:18] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[15:20:21] <pikapika> Such as micrometers, leadscrews in printers or dividing machines etc
[15:20:25] *** Joins: hexingb (~hexingb@2409:8900:2721:ba36:5196:bc74:d2da:7a59)
[15:20:35] *** Joins: ixil (~ixil@82.197.178.137)
[15:20:36] *** Joins: independent56 (~independe@95.144.68.39)
[15:20:50] <arahael> Sure, yeah, it required a very specific version.
[15:20:55] <arahael> (Because that's what it was verified against)
[15:21:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:21:42] <pikapika> arahael, are you replying to me
[15:21:52] <arahael> Yep.
[15:21:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:22:06] <arahael> (Though I don't know if we're on the same page yet)
[15:22:07] <pikapika> arahael, accurate screws are very costly
[15:22:13] <pikapika> Same page regarding what?
[15:22:25] <arahael> pikapika: Is this "screw" a metaphor for something?
[15:22:43] <pikapika> No
[15:22:55] <arahael> Well, why are you talking to me about screws, then!?
[15:23:03] <pikapika> Its an interesting subject
[15:23:37] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net) (Ping timeout: 256 seconds)
[15:23:47] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (Ping timeout: 245 seconds)
[15:24:08] *** Quits: gggp (~textual@111.63.14.115) (Ping timeout: 244 seconds)
[15:24:25] <arahael> I suppose...
[15:27:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:27:14] *** AndrewYu is now known as Andrew
[15:27:38] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:27:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:29:02] *** Joins: YHVH (~yhvh@2601:982:8300:8090:b926:24a3:ed5e:cc61)
[15:29:18] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[15:29:36] *** Joins: independent56 (~independe@95.144.68.39)
[15:30:10] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[15:31:07] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[15:32:42] *** Joins: codemin (~codemin@69.167.19.76)
[15:33:15] <Akronymus> So, docker desktop for 250+ employee companies now costs a subscription
[15:34:01] *** Quits: dan01 (~dan01@109.98.132.202) (Ping timeout: 252 seconds)
[15:35:48] <leduyquang753> Real pros don't quite need it right?
[15:36:59] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[15:37:18] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[15:37:34] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[15:37:36] *** Joins: independent56 (~independe@95.144.68.39)
[15:37:48] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:41:11] *** Joins: zaher (~zaher@37.48.183.138)
[15:43:42] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[15:45:31] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:50:17] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018) (Remote host closed the connection)
[15:50:37] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018)
[15:55:21] *** Joins: LucaTM (~LucaTM@user/lucatm)
[15:57:39] <smallville7123> https://gist.github.com/mgood7123/c0ccd4e4a29d26f73ab789a5de907a97 how can i incorperate scale factor into this?
[15:57:40] <smallville7123> (which is described https://gist.github.com/mgood7123/c0ccd4e4a29d26f73ab789a5de907a97#file-textview-cpp-L76 )
[15:57:41] <bayaz> Title: TextView.cpp 
[15:57:41] <bayaz> Title: TextView.cpp 
[15:59:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Quit: terminal restart)
[16:00:39] *** Joins: zaher_ (~zaher@185.123.102.57)
[16:01:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:01:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Client Quit)
[16:01:51] *** Quits: zaher (~zaher@37.48.183.138) (Ping timeout: 244 seconds)
[16:03:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:04:05] *** Joins: DasBrain (DasBrain@user/dasbrain)
[16:05:28] *** Quits: _daoistmonk (~daoistmon@113.90.179.18) (Ping timeout: 244 seconds)
[16:05:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:05:44] *** Quits: x003fgqwe (uid479614@id-479614.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[16:07:01] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:d0f8:7:895:4c4b)
[16:09:08] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:10:36] <mrig> oh dear, vim is balking at this, might just buffer in a file to keep vim happy.
[16:11:06] <beaky> i lvoe emacs
[16:11:35] *** Quits: codemin (~codemin@69.167.19.76) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:12:12] <mrig> ah only the highlighting, just need to turn that off for this file.
[16:12:40] <mrig> beaky: is that pronounced with a th?
[16:13:29] <mrig> oh no, vim is still telling me that this is not on.
[16:14:16] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Quit: Leaving)
[16:14:33] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[16:18:56] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[16:19:44] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:20:57] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[16:20:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[16:21:44] *** Joins: zaher__ (~zaher@37.48.144.20)
[16:22:11] *** Joins: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de)
[16:23:05] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[16:23:46] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:23:51] *** Joins: NEYi (~NEYi@109.251.216.38)
[16:24:04] *** Quits: hexingb (~hexingb@2409:8900:2721:ba36:5196:bc74:d2da:7a59) (Ping timeout: 252 seconds)
[16:24:39] *** Joins: codemin (~codemin@69.167.14.200)
[16:25:00] *** Quits: sjmulder (~Sijmen@2a02-a443-33e5-1-3440-39db-6f68-87ba.fixed6.kpn.net) (Quit: Leaving)
[16:25:10] *** Quits: zaher_ (~zaher@185.123.102.57) (Ping timeout: 252 seconds)
[16:26:38] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[16:28:58] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[16:29:06] <smallvil_> https://gist.github.com/mgood7123/c0ccd4e4a29d26f73ab789a5de907a97 i think i got this to correctly account for scale factor
[16:29:07] <bayaz> Title: TextView.cpp 
[16:30:54] <Akronymus> My collegue sent me a message "Can I ask you a question"
[16:31:04] <Akronymus> That one drives me up the wall.
[16:31:15] <Akronymus> Question, not collegue
[16:31:48] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:31:55] <GeDaMo> Did it end with a question mark? :|
[16:32:16] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[16:32:18] <Akronymus> It did
[16:32:56] <Akronymus> I just asked him: "Why ask a question whether you can ask a question rather than asking the question?"
[16:33:16] <Akronymus> Great, and now "question" sounds wrong to me.
[16:35:10] *** Joins: jokoon (~eio@2a01:e0a:542:e160:65e4:3400:c023:ed68)
[16:36:17] *** Joins: daoistmonk (~daoistmon@113.90.179.18)
[16:38:20] *** Joins: scabby (~scabby@user/scabootssca)
[16:39:22] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[16:39:27] <GeDaMo> "The Moody Blues - Question" https://www.youtube.com/watch?v=qxOAhsngMyc
[16:39:28] <bayaz> Title: Question 
[16:40:37] *** Joins: nekodesu (~bit@user/nekobit)
[16:40:42] *** Joins: hexingb (~hexingb@103.37.140.36)
[16:42:30] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[16:43:31] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[16:46:42] *** Quits: inky (~inky@46.36.119.19) (Remote host closed the connection)
[16:46:52] *** Joins: JanC (~janc@user/janc)
[16:46:58] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 256 seconds)
[16:47:28] <peteyboy1> if i git checkout to a previous version and then commit whatever changes i make to that version, it will still change the last version, right?
[16:47:53] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[16:48:23] <peteyboy1> that is, it will commit on top of the last version
[16:48:29] *** Joins: inky_ (~inky__@46.36.119.19)
[16:49:23] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 244 seconds)
[16:49:37] *** Quits: inky_ (~inky__@46.36.119.19) (Client Quit)
[16:50:11] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[16:50:49] *** Joins: inky (~inky_@46.36.119.19)
[16:51:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[16:51:57] <[itchyjunk]> oh is that how it works?
[16:53:31] <vdamewood> peteyboy1: It depends on what you mean by the 'last version'.
[16:54:06] <vdamewood> peteyboy1: for exaple, if you're on master, and you checkout the commit before master, make changes, and commi them, then master will be unchanged.
[16:54:26] <pikapika> vdamewood, have you ever printed angles?
[16:55:39] <vdamewood> Technically, I guess I have, thought it was a PostScript program to print a flower.
[16:56:16] <pikapika> vdamewood, was tit purely for artistic purposes?
[16:56:38] <vdamewood> Well, no, it was just so I could prove that I could write PostScript programs.
[16:56:52] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[16:58:04] <peteyboy1> vdamewood, aren't all the commits in master?
[16:58:13] <vdamewood> peteyboy1: Nope.
[16:58:22] <peteyboy1> *crying dawson*
[16:58:50] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[16:58:53] <pikapika> Whos dawson?
[16:59:07] <peteyboy1> how are they not? if i only have one branch, and all the commits were done in master
[16:59:13] <peteyboy1> dawson's creek
[16:59:21] <vdamewood> peteyboy1: master is just a branch. All a branch is is a ref (an ID for a commit) that moved to the next commit when you make a change and new commit.
[16:59:47] <vdamewood> peteyboy1: That was a general statement, not a statement about your repo.
[16:59:49] <arahael> Also keep in mind a lot of new repositories use a different name as the default. (Eg, main)
[16:59:57] <peteyboy1> pikapika, http://img.wennermedia.com/social/1386968829_dawsons-creek-crying-zoom.jpg
[16:59:57] <bayaz> Type: image/jpeg Size: 41.1 kB 
[16:59:58] <vdamewood> or trunk
[17:00:25] <peteyboy1> vdamewood, yeah i got that it was a general statement, i'm just more confused now
[17:00:41] <vdamewood> So, what's the confusion?
[17:01:04] *** Quits: nekodesu (~bit@user/nekobit) (Remote host closed the connection)
[17:01:07] <vysn> America Exbplainn!
[17:01:22] <peteyboy1> i thought the version code is the ref for a commit, and that a branch is just a path on which these commits are being done
[17:01:32] <vysn> https://www.youtube.com/watch?v=5EbnoElOJx0
[17:01:33] <bayaz> Title: America explain! 
[17:01:49] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[17:01:55] <vdamewood> peteyboy1: a branch is a ref that moved with new commits.
[17:01:59] <vdamewood> moves*
[17:02:21] <vdamewood> as opposed to a tag which is a ref that stays on the same commit no matter what happens.
[17:02:32] <Akronymus> There's also the head 
[17:02:57] <Akronymus> Which is the current state you are working on afair.
[17:03:01] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[17:03:11] <vdamewood> every commit has a history, whether it's the commit a branch points to or not.
[17:04:00] <Akronymus> >every commit has a history,
[17:04:07] <Akronymus> One of the MOST underrated things about git
[17:04:46] *** Quits: daoistmonk (~daoistmon@113.90.179.18) (Ping timeout: 252 seconds)
[17:05:08] <Akronymus> Even reverts have a history.
[17:07:01] <Akronymus> (Actually, a revert is just a new commit with the changes in a specific commit/range of commits being undone)
[17:08:07] *** Joins: daoistmonk (~daoistmon@113.90.179.18)
[17:08:19] <vdamewood> peteyboy1: Stull confused?
[17:08:23] <vdamewood> still?
[17:09:49] <peteyboy1> vdamewood, yes, but i'm not going to be breaking my head with it right now. thank you
[17:10:28] *** Quits: daoistmonk (~daoistmon@113.90.179.18) (Max SendQ exceeded)
[17:10:49] <arahael> peteyboy1: When you finally understand it, you'll wonder how you ever failed to understand it.
[17:10:56] *** Joins: daoistmonk (~daoistmon@113.90.179.18)
[17:10:58] <arahael> It's weird.
[17:11:43] <vdamewood> I'm weird.
[17:12:02] <Akronymus> arahael same with functional programming/certain data structures/pointers/many more things
[17:12:24] <vdamewood> Yum, pointers.
[17:12:25] <arahael> Akronymus: Nah, everybody knows monads, what's the problem?
[17:12:38] <Akronymus> Shhhhh.
[17:12:42] *** Joins: zaher (~zaher@37.48.149.149)
[17:12:46] <Akronymus> The big m word scares people.
[17:12:59] <arahael> Akronymus: It really does. :(
[17:13:09] <vdamewood> Monads wander the desert or steppe isolating side effects.
[17:13:21] <peteyboy1> arahael, probably
[17:13:28] <Thedarkb-Work> I understand the concept of functional programming, my brain just isn't able to apply functional concepts to the problems I want to solve.
[17:13:37] <Akronymus> Like?
[17:13:57] <Thedarkb-Work> I like to tinker with an RPG engine I've been building in my spare time.
[17:14:07] <Thedarkb-Work> It's an action RPG engine and there is a fair amount of state.
[17:14:20] <Akronymus> Oh games.
[17:14:35] <Akronymus> Yeah, for those FP is probably the wrong choice.
[17:14:52] *** Joins: snake (~snake@user/snake)
[17:15:17] <Akronymus> Altough, for an rpg, I'd expect most of the state to be quite well represented by nested dictionaries.
[17:15:35] <Akronymus> Which you could write in a monadic way.
[17:15:44] *** Quits: zaher__ (~zaher@37.48.144.20) (Ping timeout: 244 seconds)
[17:15:48] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:d0f8:7:895:4c4b) (Quit: Textual IRC Client: www.textualapp.com)
[17:16:03] <Thedarkb-Work> For money, I make database frontends and work on logistics stuff.
[17:16:04] <arahael> Even then, the only problem with FP would be the non-determinism.
[17:16:18] *** Joins: jacks2 (~bc8167eb@217.29.117.252)
[17:17:17] <Akronymus> Not really the only problem.
[17:17:27] *** Joins: humky (~humky@user/humky)
[17:17:50] <Akronymus> But in many cases, you can somewhat sidestep it with allowing rng to just exist as a black box.
[17:18:00] <Akronymus> Or treating rng as part of the input parameter.
[17:18:06] <Akronymus> Or, well, world
[17:18:29] <arahael> Yeah, but you can define your "input world" as a fairly huge data type that includes RNG.
[17:18:37] <Akronymus> Indeed.
[17:19:00] <Akronymus> oh, world, as in the IO monad in haskell for example.
[17:19:04] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[17:19:22] <Akronymus> Rather than world as in the game world
[17:19:27] <Thedarkb-Work> The only FP things I've done have been trivial things in LISP to wrap my head around it.
[17:19:50] <jacks2> which lisp?
[17:19:54] <Thedarkb-Work> CLISP
[17:20:03] <Thedarkb-Work> I gave Scheme a go as well.
[17:20:04] <Akronymus> Maybe try f#?
[17:20:07] <jacks2> common lisp isn't very functional
[17:20:08] <Akronymus> Thedarkb-Work
[17:20:20] <Akronymus> Clisp isn't very anything
[17:20:32] <Akronymus> It is as unipinionated as languages can get
[17:20:39] <Akronymus> unopinionated*
[17:20:46] <jacks2> it has it's charm and pros. but functional programming isn't one of them
[17:21:00] <jacks2> it is quite painful to do FP in CL
[17:21:03] <Thedarkb-Work> I find S Expressions kind of hard to read as well.
[17:21:21] <Thedarkb-Work> Tcl suffers from a similar issue, I think.
[17:21:51] <Akronymus> What about ocaml style syntax?
[17:21:57] <Thedarkb-Work> Never given that a try.
[17:22:22] <Akronymus> https://fsharpforfunandprofit.com/why-use-fsharp/
[17:22:26] <bayaz> Title: Why use F#? | F# for fun and profit 
[17:22:27] <Akronymus> Obligatory
[17:23:15] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:23:39] <vdamewood> F# is fun#.
[17:23:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:23:49] <vdamewood> or Fuck#, I forget which.
[17:23:53] <vdamewood> Foo#!
[17:23:53] <Akronymus> ML style syntax just feels nice to me.
[17:24:07] <oldlaptop> haskell has some fairly natural syntax, in its own way
[17:24:18] <Akronymus> Haskell is basically ml syntax imo
[17:24:38] <davros> i'll admit it is kind of appealing but i'm firmly in the curly brace camp
[17:24:41] <oldlaptop> it is to mathematicians what COBOL is to middle managers, almost
[17:25:02] <[itchyjunk]> what is the technical jargon for the hierarchy of primitive types? Like int gets converted to long gets converted to double etc
[17:25:02] <davros> i guess partial function application / curryinh whatever you call it doesn't make much sense in c syntax
[17:25:14] <[itchyjunk]> there was a fancy term for it..
[17:25:23] <davros> foo(a,b,c)   foo(a,b)  looks wrong   vs    foo a b c     foo a b
[17:25:28] <Akronymus> davros I used to hate significant whitespace.
[17:25:49] <Akronymus> But f# made me like it, because you can't really accidentally use the wrong indentation.
[17:25:56] <Akronymus> Unlike a certain other language
[17:26:09] * vdamewood stroaks his Python.
[17:26:21] *** Quits: biberao (~Unknown@user/biberao) (Ping timeout: 276 seconds)
[17:26:27] <Amadiro> [itchyjunk], type promotion?
[17:26:35] <oldlaptop> I dislike a lot about python, but it does an *excellent* job of enforcing correct use of whitespace - exactly what would have been correct use of whitespace if it used curly braces or something instead
[17:26:37] <[itchyjunk]> promotion! that might be it
[17:27:00] <jacks2> [itchyjunk], implicit type conversion
[17:27:09] <oldlaptop> including enforcing the correct use of tabs, if tabs are used
[17:27:12] *** Joins: _daoistmonk (~daoistmon@113.90.179.18)
[17:27:22] <[itchyjunk]> I seem to forget the promotions, any trick on remembering them?
[17:27:23] <Akronymus> oldlaptop but it doesn't prevent you from accidentally putting one statement at the wrong level of ident 
[17:27:32] <[itchyjunk]> i know int is at the bottom of the food chain
[17:27:34] <Akronymus> Like the last statement of a loop
[17:27:37] <jacks2> as opposed to casts (explicit type conversion). this is C terminology. other languages may use different one
[17:27:40] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 240 seconds)
[17:27:43] <vdamewood> oldlaptop: I like the fact that Python eliminates the conflict between K&R braces, and BSD braces.
[17:27:52] <[itchyjunk]> (i'm working in context of Java)
[17:27:57] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[17:28:09] <Akronymus> In f# the type system would pretty much scream at you that you made an identation error.
[17:28:12] <[itchyjunk]> but i need to remember these promotions and i seen to keep forgetting
[17:28:21] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:28:29] <Akronymus> Which is pretty damn nice.
[17:28:39] <MrMobius> a lot of people who hate python indentation dont seem to know you can (de)indent a whole block at once
[17:28:41] <vdamewood> [itchyjunk]: Smaller to bigger, integers to floating-points.
[17:28:48] <MrMobius> id hate python too if i had to indent each line individually
[17:28:52] <Akronymus> MrMobius I know that you can do that.
[17:29:09] <oldlaptop> Akronymus: is that really analogous though?
[17:29:09] <Akronymus> But I still hate it because it leads to the pits of failure, rather than success IMO
[17:29:19] <vdamewood> [itchyjunk]: byte -> short -> int -> long <-- these are the integer types. float -> double <-- these are floating-point types.
[17:29:20] <Akronymus> oldlaptop is what analogous?
[17:29:41] *** Quits: daoistmonk (~daoistmon@113.90.179.18) (Ping timeout: 244 seconds)
[17:29:52] *** Joins: rtypo (~alex@user/rtypo)
[17:29:54] <oldlaptop> I haven't worked with f# specifically, but I would be surprised if it has "the last statement of a loop" as a concept
[17:30:03] <vdamewood> Though, I think all integers promote to double, not to float.
[17:30:24] <Akronymus> I guess to be correct, I'd have to say statements + weak type system + significant whitespace is bad, while expressions + strong type system + significant whitespace is amazing.
[17:30:43] <Akronymus> oldlaptop well, in f# everything is a expression 
[17:30:48] <Akronymus> So it gets type checked.
[17:31:16] <Akronymus> And because you most likely wouldn't have the same type inside the <control structure> and outside you'd get an error most of the time.
[17:31:19] <oldlaptop> Okay, I'll rephrase: I would be surprised if it has "loops" as a concept.
[17:31:21] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[17:31:29] <Akronymus> It definitely has loops.
[17:31:39] *** Joins: independent56 (~independe@95.144.68.39)
[17:31:40] <oldlaptop> That's odd.
[17:31:42] <Akronymus> But I just used that as an example where I meant any control structure
[17:31:53] <Akronymus> f# is functional first.
[17:31:59] <Akronymus> Rather than purely functional
[17:32:21] <Akronymus> could be the last statement/expression of a else branch.
[17:32:50] <Akronymus> In python you could almost always have it be in the outer scope without it throwing an error.
[17:32:58] <Akronymus> In f# you'd almost certainly get one.
[17:33:31] <[itchyjunk]> vdamewood, i need to write that down lol
[17:33:34] * [itchyjunk] writes it down
[17:34:21] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[17:34:38] <[itchyjunk]> vdamewood, what about long to double?
[17:34:39] *** Joins: independent56 (~independe@95.144.68.39)
[17:34:41] <[itchyjunk]> does that happen?
[17:34:45] <[itchyjunk]> because int to double happens
[17:34:53] <vdamewood> Yep.
[17:35:12] <[itchyjunk]> char to int
[17:35:34] <Akronymus> char is usually a alias to byte anyways.
[17:35:37] <Akronymus> So it should.
[17:35:41] <vdamewood> In Java, nope.
[17:35:43] <[itchyjunk]> oh..
[17:35:49] <Akronymus> vdamewood what?
[17:35:50] <[itchyjunk]> wait i can add char and int thought
[17:35:50] <Akronymus> Why?
[17:35:54] <[itchyjunk]> it turns char to int
[17:35:57] <[itchyjunk]> and adds and returns int
[17:36:04] <vdamewood> Akronymus: because a char represents a UTF-16 character, not a byte.
[17:36:07] <[itchyjunk]> turns char to ascii value
[17:36:08] <vdamewood> Akronymus: Java has a byte type.
[17:36:27] <[itchyjunk]> oh char and byte is different in java, gotcha
[17:36:27] <Akronymus> vdamewood oh
[17:37:05] <vdamewood> [itchyjunk]: Oh, I thought that didn't work in Java.
[17:37:30] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[17:37:36] *** Joins: independent_ (~independe@95.144.68.39)
[17:37:44] <pikapika> Java is the best beginner language
[17:37:48] <[itchyjunk]> it does! it was one of the homework to add P + 4 heh
[17:37:56] <[itchyjunk]> it turns it to ascii and adds the integer
[17:38:01] <Akronymus> pikapika I disagree
[17:38:14] <[itchyjunk]> i dislike using bulky ide when first learning
[17:38:21] <[itchyjunk]> i wish we learned it in notepad or something
[17:38:41] <pikapika> Akronymus, what would you choose?
[17:38:47] <pikapika> [itchyjunk], nothings stopping you
[17:38:52] <pikapika> Just compile from the terminal
[17:38:56] <[itchyjunk]> my class is
[17:39:03] <[itchyjunk]> you have to use the ide in labs and such
[17:39:05] <pikapika> Java is a very friendly language with fast compile times
[17:39:05] <[itchyjunk]> can't skip it
[17:39:29] <arahael> pikapika: Python's compiles are faster. ;)
[17:39:42] <pikapika> Its type safety is ass
[17:39:45] <pikapika> copmared to Java
[17:39:50] <arahael> Indeed.
[17:39:51] <pikapika> So Java has the better combination
[17:40:09] <arahael> Pascal is faster, though. ;)
[17:40:29] *** Joins: mishugana (~mishugana@user/mishugana)
[17:40:32] <Akronymus> pikapika I'd choose something like f#
[17:40:32] *** Quits: jazzy (~jaziz@172.58.36.50) (Ping timeout: 244 seconds)
[17:40:33] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[17:40:47] <pikapika> Too hard for beginners to think in functional
[17:40:49] <Akronymus> and type safety in java isn't much of a type safety at all IMO
[17:40:54] <Akronymus> not really
[17:40:56] <jacks2> here we go again.. pikapika came, and first thing he said is " <pikapika> Java is the best beginner language"
[17:40:57] <mishugana> It's all deja vu!
[17:41:10] <jacks2> and nowwe will have to suffer 2 hours of him arguing that with everyone else
[17:41:10] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Ping timeout: 240 seconds)
[17:41:11] <Akronymus> functional is easier for a complete beginner than oop
[17:41:26] <arahael> Akronymus: Indeed. Doesn't have sum types, even.  Not even proper enums.
[17:41:46] <Akronymus> And null for ANYTHING is null for EVERYTHING
[17:41:55] <mishugana> null is life!
[17:42:00] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[17:42:10] <vdamewood> [itchyjunk]: Though, one thing is that it doesn't convert to its ASCII value, it converts to its Unicode codepoint.
[17:42:15] <merijn> "functional is to hard to beginners", see the trick is you just don't tell them that
[17:42:17] <Akronymus> You'll have to take Option<T> from my cold dead hands mishugana
[17:42:27] <mishugana> XD
[17:42:33] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:42:34] <merijn> Taught my girlfriend haskell and had 0 problems, because she didn't know it was supposed to be hard
[17:43:17] <Akronymus> Funny thing: SICP has been used for a LONG time to teach people programming.
[17:43:20] <[itchyjunk]> oh
[17:43:27] <Akronymus> And they introduce state quite late in the book.
[17:43:31] <[itchyjunk]> does unicode agree with ascii values?
[17:43:34] <[itchyjunk]> else i did the hw wrong
[17:43:44] <mishugana> Akronymus: It was sad that they replaced SICP with Python in MIT.
[17:43:49] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 252 seconds)
[17:43:50] <mishugana> Sussman almost had a fit.
[17:43:53] <vdamewood> [itchyjunk]: Yes, Unicode codepoints 0-127 map to ASCII.
[17:43:53] <Akronymus> they WHAT?
[17:43:58] <[itchyjunk]> great!
[17:44:01] <mishugana> yeah :(
[17:44:15] *** Quits: codemin (~codemin@69.167.14.200) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:44:17] <vdamewood> Akronymus: Even worse, the published book will be JavaScript in the next edition.
[17:44:18] <mishugana> [itchyjunk]: Hahaha
[17:44:26] <mishugana> vdamewood: whoa
[17:44:38] <Akronymus> vdamewood well, JS started out as lisp for the web...
[17:44:39] <pikapika> mishugana, they should haveu sed Java
[17:44:41] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:44:45] <pyzozord> is scip teaching programming? it doesnt sound so from the table of contents
[17:44:51] <Akronymus> But then the execs told the person implementing it to make it more like java
[17:44:54] <pyzozord> sicp
[17:44:55] <pikapika> merijn, but your gf now has zero idea what is easy and what is hard for the computer
[17:44:57] <mishugana> pikapika: Hahaha
[17:44:58] <Akronymus> pyzozord it does
[17:45:05] <Akronymus> Quite well, even
[17:45:06] <vdamewood> pyzozord: Yep. It's about fundamental programming concepts.
[17:45:11] <oldlaptop> merijn: 'functional' *can* be hard to beginners to 'functional' who have already learned to think procedurally
[17:45:23] <Akronymus> oldlaptop or OOP
[17:45:24] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[17:45:27] <pikapika> Procedural is the most natural
[17:45:34] <merijn> pikapika: Except 95% of people who learn C, Java, or Python first *also* have zero idea what is easy and what is hard
[17:45:36] *** Joins: flynn (~mcbloch@user/flynn)
[17:45:38] <Akronymus> hence me saying that oop/procedural poisons the programmers mind
[17:45:46] <oldlaptop> Akronymus: OOP is fundamentally procedural, just with added pain
[17:46:02] <Akronymus> oldlaptop yeah. Do you want a jungle?
[17:46:06] <pyzozord> Akronymus: I'm not sure if things like "metacircular evaluator" are relly "teaching programming" per se
[17:46:16] <mishugana> Hmmmm
[17:46:20] <pikapika> merijn, at least they get a mostly ok approximate model of the computer
[17:46:27] <pyzozord> Akronymus: it's teaching something, and it does programming, but is it teaching programming? I don't think so
[17:46:39] <merijn> My evidence TAing programming courses disagrees :p
[17:46:50] <deniska> model of a computer is simple, you tappy-tappy-tap on the keyboard, and sometimes it does the right thing :)
[17:47:04] <mishugana> Beware of cosmic rays XD
[17:47:09] <Akronymus> pyzozord pretty sure thats quite late in the book.
[17:47:15] <pikapika> I think Java is the ideal beginner langauge
[17:47:26] <Akronymus> it is a crap beginner language
[17:47:26] <pikapika> It is a very friendly language with a nice compiler
[17:47:31] <Akronymus> Even if just because oop
[17:47:38] <mishugana> Well, I started with LOGO in 3rd grade - and LOGO is surprisingly functional.
[17:47:51] <mishugana> Very pleasurable to code in as well. Too bad it's dead.
[17:47:51] <deniska> public static void system out println insanity
[17:47:59] <pyzozord> Akronymus: I'd say it teaches programming in the first chapter, first 100 pages, beyond that it teaches something else
[17:48:14] <jinsun> I think rust is the best beginner language
[17:48:20] <mishugana> jinsun: Lmfao.
[17:48:49] <deniska> The best beginner language is obviously javascript. Every system comes with a compiler, it's widespread, it's useful in the industry, and it provides the experience of pain and suffering
[17:48:52] <Akronymus> pyzozord it was written for a double semester course. 
[17:49:06] <mishugana> deniska: Actually a good point - even the average joe has a browser.
[17:49:10] <Akronymus> Chapter 2 is also very much programming related.
[17:49:17] <Akronymus> Data structures and the like.
[17:49:24] <pyzozord> Akronymus: my point is, i've been paied to program over 10 years now, and I don't really know most of what that book teaches
[17:49:24] <pikapika> Akronymus, you have an irrational hate of oop
[17:49:33] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[17:49:36] <mishugana> The original HP videos (a much reduced form of SICP) are available online - pretyy funny to see Sussman's ticks :D
[17:49:37] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:49:38] <merijn> s/irrational/rational
[17:49:38] <Akronymus> pikapika i find it quite rational
[17:49:40] <pikapika> mishugana, logo is the essence of procedural
[17:49:48] <mishugana> pikapika: Hardly!
[17:50:00] <pikapika> You give the turtle the steps in sequence
[17:50:06] <Akronymus> After grokking datastructures more advanced topics make sense.
[17:50:21] <mishugana> pikapika: That's just Turtle graphics... LOGO itself is a huge language beyond that!
[17:50:25] <pikapika> It happens to be 'stateless' only because the only state it has are the coordinates of a turtle
[17:50:33] <Akronymus> pikapika OR I generate a new state based on the turtle and the next instruction
[17:50:35] <pikapika> mishugana, I haven't studied that
[17:50:50] <Akronymus> Where state is explicitly passed around
[17:51:03] <pikapika> Akronymus, thats just normal stateful programming then. Each statement is implicitly a "pure" function that takes current state and returns the next state.
[17:51:07] <pikapika> In short...a state machine
[17:51:08] <pikapika> lol
[17:51:19] <Akronymus> EXPLICITY matters
[17:51:20] <merijn> State machines aren't procedural
[17:51:21] <Akronymus> A whole lot
[17:51:23] <mishugana> pikapika: http://people.eecs.berkeley.edu/~bh/v1-toc2.html as the first book - very functional (and dynamic)
[17:51:23] <bayaz> Title: Symbolic Computing contents 
[17:51:34] <pyzozord> Akronymus: I'm not sure how long a semester is, is it 6 months of 12 months?
[17:51:39] <pikapika> merijn, state machines are just a mathematical description of computers
[17:51:45] <mishugana> Isn't a semester 4 months?
[17:51:49] <mishugana> 3?
[17:51:49] <Akronymus> A semester is half a school year, typically pyzozord
[17:51:58] <mishugana> Oh
[17:52:20] <oldlaptop> fifteen weeks, for most US schools, AIUI.
[17:52:21] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:52:21] <pyzozord> ok yeah sorry 6 months wasn't the most accurate, I meant "half a year"
[17:52:27] <pikapika> Java has a friendly static type system and compiler, and a big standard library.
[17:52:29] <mishugana> In fact, LOGO is almost a Lisp itself
[17:52:30] <pikapika> Its perfect for beginners
[17:52:33] <oldlaptop> sometimes compressed to seven and a half, for extra fun
[17:52:49] <Akronymus> And stuff like metacircular evaluator is quite "easy" in lisp.
[17:52:54] <Akronymus> Compared to other languages
[17:53:01] <Akronymus> OOP is HARD pikapika
[17:53:08] <Akronymus> MUCH MUCH harder than functional
[17:53:13] <pikapika> Nobody is forcing oop at the initial stage
[17:53:19] <Akronymus> Java does
[17:53:25] <pikapika> At that level they could just do procedural with static member functions
[17:53:53] <pikapika> Constructing a library class is very blackbox and does not require oop knowledge
[17:54:00] <Akronymus> Because you don't just have the object you are currently working on, but also have to keep in mind how it connects to other objects and such
[17:54:21] <pyzozord> I have a feeling like oop and fp are kind of artificial divisions. I kind of use both
[17:54:39] <pikapika> That rarely matters at the beginning level. At the beginning level of any language the standard lib invocations of things like input, file io, string parsing etc are treated as black boxes anyways
[17:54:46] <Akronymus> pyzozord I'd say object programming != object ORIENTED programming
[17:54:53] <pikapika> Do C books start printf after teaching how to write your own functios?
[17:54:54] <pikapika> Of course not
[17:55:00] <Akronymus> I like objects in f# for certain things
[17:55:14] <Akronymus> But I definitely am not doing object orientation
[17:55:18] <pyzozord> pikapika: actually K&R teaches you how to write your own malloc in the last chapter
[17:55:26] <pikapika> pyzozord, of course
[17:55:31] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[17:55:40] <Akronymus> Hell, c99/c11 is a better starting language than anything OOP
[17:55:44] <pikapika> But I meant as in, no book starts with how to write functions before introducing the printf in the hello world
[17:56:07] <mishugana> pikapika: Except for Haskell books :D
[17:56:07] <merijn> Eh, yes they do
[17:56:09] <pikapika> Akronymus is complaining you need to learn oop to use system.out.println or BufferedReader
[17:56:10] <pikapika> bullshit
[17:56:17] <Akronymus> I am not.
[17:56:32] <merijn> "I have never seen anything other than this, therefore it must not exist"
[17:56:38] <pikapika> Akronymus, then no. A beginner need not understand full oop to be using Java.
[17:56:51] <Akronymus> But a beginner needs to use OOP when using java.
[17:56:54] *** Joins: hexingb (~hexingb@103.37.140.36)
[17:56:59] <Akronymus> Even if they don't know
[17:57:04] <Akronymus> that they are
[17:57:06] <pikapika> Akronymus, they don't any more than they need to be able to write their own functions before using printf
[17:57:28] <pikapika> Do you have to know how to write a class, do operator overloading, etc before being able to use cout?
[17:57:35] <Akronymus> And it influences their programmatic thinking from the beginning on.
[17:57:38] <pikapika> cout is treated as a blackbox in the first chapter of the book
[17:57:38] <Akronymus> cout is c++
[17:57:44] <pikapika> Its another example
[17:58:04] <mishugana> they should have named `exit` as `cya`
[17:58:12] <mishugana> :D
[17:58:16] *** Quits: xsperry (~as@user/xsperry) ()
[17:58:23] <Akronymus> #define cya exit()
[17:58:24] *** Quits: _daoistmonk (~daoistmon@113.90.179.18) (Remote host closed the connection)
[17:58:42] *** Joins: daoistmonk (~daoistmon@113.90.179.18)
[17:59:11] <oldlaptop> mishugana: % rename exit cya
[17:59:19] <mishugana> Akronymus: Why do you think F# is not more popular? Is it because of it's association with MS?
[17:59:21] <Akronymus> pikapika I legitimately think you are holding these opinions because your mind has been poisoned by procedural/OOP
[17:59:32] <pyzozord> I agree with the sentiment of learning printfs before learning how to write a function. In real life you don't learn language theory before you learn the language
[17:59:34] <pikapika> Claiming you need to know oop to use System.out.println is the same as claiming you need to be able to write a class, operator overloading, etc before using cout
[18:00:00] <Akronymus> mishugana because schools teach oop first and foremost
[18:00:07] <pikapika> Akronymus, on the contrary I just don't have any strong feelings about oop. So I consider oopness not a complain against using Java as the first language.
[18:00:18] <Akronymus> pikapika you don't need to know how to use oop. But it still influences your thinking
[18:00:32] <pikapika> Oop is a very natural mode of thought
[18:00:37] *** Joins: humanface81 (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu)
[18:00:38] <Akronymus> Kinda.
[18:00:45] <Akronymus> If you already got used to it
[18:00:54] <pikapika> Someone who learns C will also come up with a model close to oop in a large codebase
[18:01:03] <Akronymus> OOP also makes writing impossible to maintain programs easy
[18:01:13] <pikapika> I'd say FP makes it far easier
[18:01:22] <Akronymus> That, I disagree with.
[18:01:37] <pikapika> No langauge protects you from spagetti
[18:01:50] *** Joins: cth (~Cthulchu@193.194.107.250)
[18:01:51] <Akronymus> In FP you can gleam a LOT of information just from input/output parameters.
[18:02:05] <Akronymus> Because almost always it will be side effect free.
[18:02:05] <pikapika> So is the case with procedural or oop
[18:02:12] <Akronymus> No, not really.
[18:02:20] <Akronymus> OOP is marrying the state with the functionality
[18:02:22] <pikapika> Usually I can guess what a amtheod will do just from its signature in the java official library docs
[18:02:26] <Akronymus> functional is divorcing it
[18:02:33] <pyzozord> pikapika: not sure if that's true, I've seen some open source c code recently and it kind of seems like imperative, functions structs. Not really oop. For oop you need to have functions as part of objects
[18:03:47] *** Quits: mishugana (~mishugana@user/mishugana) (Ping timeout: 244 seconds)
[18:03:55] <oldlaptop> pyzozord: consider that sqlite's documentation explicitly calls the structs that get passed around "objects", and the functions that you pass them to "methods"
[18:03:59] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 250 seconds)
[18:04:03] <oldlaptop> (https://www.sqlite.org/cintro.html)
[18:04:10] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[18:04:13] <Akronymus> But an important thing you probably glossed over: Object aren't necessarily bad.
[18:04:14] <pikapika> pyzozord, class_method(struct class *obj,params) is no different from obj.method(params)
[18:04:18] <Akronymus> The object orientation is.
[18:04:33] *** Quits: humanface (~humanface@20014C4E1C473D0084366AD118E7836D.dsl.pool.telekom.hu) (Ping timeout: 256 seconds)
[18:04:34] <oldlaptop> now, I'm sure partly this is to aid comprehension for the java-using masses, but also partly because that's more or less what it is
[18:04:40] <pikapika> oldlaptop, yeah
[18:04:47] <pikapika> A lot of large C projects use lightweight oop
[18:04:51] <pikapika> Its just the most natural model
[18:05:04] <Akronymus> They use object programming.
[18:05:11] <Akronymus> Not object ORIENTED programming
[18:05:13] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[18:05:32] <oldlaptop> Akronymus: that's an interesting distinction, probably really important.
[18:05:49] <pyzozord> yeah the dog may be buried in the details as they cheerfully say in my mother tongue
[18:05:55] <Akronymus> oldlaptop I use objects somewhat frequently in f#
[18:05:57] <oldlaptop> there's a difference between using concept foo where it makes sense and using concept foo as the ultimate grand unified theory of everything
[18:06:03] <Akronymus> They are amazingly useful at times.
[18:06:11] <Akronymus> But it ain't object orientation
[18:06:40] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:06:56] <pyzozord> I think I want to make a tablet/laptop device from raspberry pi and 12 inch eink screen
[18:07:05] <pikapika> classes and objects are just very natural
[18:07:15] <pikapika> pyzozord, eink is overpriced
[18:07:33] <vdamewood> Yeah, use regular ink.
[18:07:43] <oldlaptop> pyzozord: https://www.sqlite.org/vfs.html even speaks of "subclassing" structs (which you can kind of do)
[18:07:43] <pyzozord> pikapika: it's not overrated though. I saw waveshare 12 inch screen for somethinkg like $100-$200
[18:07:44] <bayaz> Title: The SQLite OS Interface or "VFS" 
[18:07:55] <pikapika> oh
[18:07:57] <Akronymus> pikapika not any more natural than functions.
[18:07:59] <JanC> the problem is the company that makes those screen doesn't want to sell licenses to 3rd parties
[18:08:01] <Akronymus> Actually less natural
[18:08:25] <pikapika> A struct to represent an object like a file or a network connection or a font etc is very natural
[18:08:26] <pyzozord> oldlaptop: I think this may be particular to sqlite
[18:08:28] <JanC> which has hampered the development of cheap & better quality e-ink/e-paper screens
[18:08:33] <pikapika> and so is the idea of specific functions married to that struct
[18:08:50] <oldlaptop> pyzozord: sqlite's documentation making the explicit choice to use javoid language may be
[18:09:06] <Akronymus> The put the function in a module together with the type
[18:09:09] <oldlaptop> I don't think the general style (dare I say "pattern"? ugh) is unusual though
[18:09:13] <pikapika> marrying structs and functions is very natural
[18:09:16] <JanC> (improved technology exist, but can't be manufactured without the patent licenses)
[18:09:16] <pyzozord> I just want a computer which is easy on my eyes. I want to enjoy reading pdfs
[18:09:33] <pikapika> pyzozord, invert colors
[18:09:42] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:09:50] <pyzozord> it still has backlight. I need a reflective display.
[18:10:46] <pikapika> pyzozord, I sometimes read scans of old (18th and 19th) c texts from archive.org
[18:10:51] <pyzozord> Also having raspberry pi as your main computer seems much more tinkerable, opensource and more in control of your device
[18:11:05] <pikapika> They yellowed out and textured nature of the paper in some ways makes it much easier on the eyes than a white bg pdf
[18:11:34] <oldlaptop> in one sense raspberrypis (and similar things) are less tinkerable: you can't do much to the board itself
[18:11:54] <oldlaptop> (swap out RAM, graphics cards, processors, bla bla bla)
[18:11:54] <pikapika> Akronymus, I think some people just have an irrational hate of oop
[18:11:59] <pyzozord> pikapika: that's because yellow is dimmer than white, black is even dimmer. But still it has more light than something that doesn't emit light
[18:12:17] <Akronymus> Or maybe, just maybe, it is rational.
[18:12:37] <Akronymus> Hell, OOP ala alan kay is something I actually like.
[18:12:43] <jacks2>  I was right.. 1 hour later, pika still at it. he is the resident troll
[18:12:45] <pikapika> pyzozord, the "yellow" comes from the scanning of old papers
[18:12:59] <pyzozord> oldlaptop: oh yeah, I guess I meant software-tinkerable. I guess one could solider in and out things though
[18:13:14] <Akronymus> jacks2 I don't think he is actually a troll but rather a person who has been poisoned a LOT by OOP
[18:13:23] <Akronymus> I kinda pity him
[18:13:36] <pikapika> I am not poisoned by anything
[18:13:38] <jacks2> Akronymus, first thing he did when he joined is make a controversial statement just to start an argument. definition of trolling
[18:13:39] <oldlaptop> not really on raspberrypi specifically, because it's almost all SMD, and much of it is either tiny SMD or BGA (neither of which is really possible to work with by hand)
[18:13:57] <pikapika> How is Java as a good beginner language a controversial statement?
[18:14:01] <Akronymus> pikapika you don't see how you are poisoned*
[18:14:03] <pyzozord> pikapika: I'm talking about private island, you are talking about backyard water pool
[18:14:22] <Akronymus> pyzozord filled with sewage
[18:14:24] <pikapika> pyzozord, I know. I was just clarifying where the yellow is from.
[18:14:26] <jacks2> Akronymus, it seems like every time I look at the channel pika is arguing about something.. usually how people have irrational hate of OOP/C/assembly
[18:14:42] <jacks2> or how FP sucks
[18:15:21] <Akronymus> Smalltalk is a OOP language I actually like.
[18:15:28] *** Joins: Blackpajamas (~Blackpaja@167.167.46.2)
[18:15:40] <Akronymus> But suuuuure, I hate OOP "irrationally"
[18:16:38] <Akronymus> And no, javas type safety isn't good.
[18:16:39] *** Quits: jacks2 (~bc8167eb@217.29.117.252) (Quit: quit)
[18:16:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[18:16:51] <Akronymus> Look at haskell or f# for good type safety.
[18:17:00] <pikapika> It has the right amount for a beginner
[18:17:07] <pikapika> A beginner would get bogged down with haskell
[18:17:09] <[itchyjunk]> safety?
[18:17:16] <[itchyjunk]> only you can prevent forest fires!
[18:17:22] *** Joins: inky_ (~inky@46.36.119.19)
[18:17:49] <Akronymus> pikapika and what prevents a beginner from assigning a string with a name to a string that should contain an living address?
[18:18:37] <Akronymus> Exactly
[18:18:40] <Akronymus> Nothing
[18:18:41] <pikapika> Akronymus, if they are considering problemso f that nature, they should have already been taught how to write their own data types by then
[18:18:44] <pikapika> so obviously
[18:18:49] <pikapika> They will write an Address class
[18:18:52] <pikapika> and a Name class
[18:19:01] *** Quits: zaher (~zaher@37.48.149.149) (Ping timeout: 252 seconds)
[18:19:07] <Akronymus> And there comes the OOP poison
[18:19:15] <pikapika> Why?
[18:19:27] <pikapika> You are the one who wanted separate data types for each
[18:19:28] <Akronymus> Because an address by itself doesn't have any functionality
[18:19:55] *** Joins: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au)
[18:20:54] <oldlaptop> Akronymus: Sure it does! changeAddress(), sendMail(), sendParcel(), setOnFire(), ...
[18:21:29] <Akronymus> But shouldn't sendmail be part of the mail class? Same with parcel...
[18:21:39] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[18:21:49] <pikapika> It was just an example
[18:21:49] <Akronymus> and changeaddress doesn't make any sense either.
[18:21:51] *** Joins: dld (~davidlowr@2601:197:600:1210:3d0a:b99:963f:cf07)
[18:21:56] <Akronymus> You can't change an address itself
[18:22:03] <pikapika> An Address class would rather have getStreet(), getState() etc
[18:22:30] <Akronymus> But that's just accessing data.
[18:22:32] <pyzozord> Akronymus: you can in rare cases when manucipality decides so
[18:22:36] <Akronymus> not functionailty
[18:22:51] <Akronymus> pyzozord but then you'd just assing a new, updated address
[18:22:57] <Akronymus> Because the address itself doesn't change
[18:23:14] <Akronymus> Hell, a changeaddress would need to be part of the class that contains one
[18:23:33] <Akronymus> But then you are marrying classes together and arrive at banana monkey jungle again
[18:24:13] <pikapika> In any case, you wanted them to be new types and there they are new types
[18:24:31] <Akronymus> But you showed me classes.
[18:24:40] <Akronymus> And classes are for data and functionality
[18:24:56] <Akronymus> But addressses by themselves have no real functionality
[18:25:00] <pikapika> Akronymus, a class is a type
[18:25:15] <Akronymus> But a type != class
[18:25:18] <pikapika> You wanted address to be a special type distinct from other strings
[18:25:20] <pyzozord> forgot what was the name of that problem but essentailly if you replace your car part by part, at which point is it a new car?
[18:25:26] <pikapika> So the simplest way is to turn it a class
[18:25:34] <pikapika> pyzozord, ship of theseus
[18:25:39] <pyzozord> pikapika: yeah!
[18:25:39] <Akronymus> and how would I do it in f#....
[18:26:09] <pikapika> Its just a syntatic issue anyways. Introducing an alias of an existing type is a non problem.
[18:26:18] <pikapika> You just want to alias a type into a new type
[18:26:27] <pikapika> Nothing to do with fp or oop or not
[18:26:28] <Akronymus> oh right `type Address = Address of string`
[18:26:42] <pikapika> Thats not anything fp specific or oop specific Akronymus 
[18:26:42] <pyzozord> yes it just shows how ambigous human languages are
[18:26:51] <Akronymus> You can still assign aliases to each others base type.
[18:27:03] <pyzozord> the problem isn't with the ship, the ship doesn't care
[18:27:07] <Akronymus> https://fsharpforfunandprofit.com/posts/designing-with-types-single-case-dus/ pikapika
[18:27:08] <bayaz> Title: Designing with types: Single case union types | F# for fun and profit 
[18:27:20] <pyzozord> there is even no such thing as the ship. It's just a bunch of elemnts that happen to stick together
[18:27:22] <pikapika> Akronymus, again thats orthogonal to fp and oop. That such a feature exists is neither a condemnation of oop nor a praise of fp.
[18:27:23] *** Joins: zaher (~zaher@37.48.185.202)
[18:27:53] <pikapika> C++ has aliases and typedefs too. I'll have to see if they result in type errors, but yeah, its nothing new.
[18:27:56] <pyzozord> and that all the way down, there is no things, just a bunch of atoms, there is no atoms just a bunch of particles, there is no particles just... strings, why not :P
[18:28:49] <pyzozord> so if we recognize that all that classifiation is not the true state of the universe we must admit it's only subjective, and only for our own benefit
[18:28:59] <pyzozord> and from that perspective both oop and fp are equally valid
[18:29:01] <pyzozord> :P
[18:29:17] <Akronymus> But so would esolangs
[18:29:17] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:29:20] <pyzozord> people have preferences on how they like to cputre the world
[18:29:31] *** Joins: mickey (~user@user/mickey)
[18:29:36] <pikapika> Akronymus, that type aliasing feature has zero relation to fp or oop
[18:30:01] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com)
[18:30:08] <Akronymus> But it does have relation. In FP a type is just that, a type.
[18:30:21] <Akronymus> In oop, you expect and class to have functionality relevant to the data
[18:30:23] <pikapika> So does that make C++ fp?
[18:30:25] <wedr> Is there a #devops channel somewhere on Libera Chat?
[18:30:37] <Akronymus> c++ can definitely be used in a fp way.
[18:30:43] <Akronymus> It'd be painful, but can be done
[18:31:00] <pikapika> Either way, type aliasing has nothing to do with fp or oop
[18:31:03] <pyzozord> I should learn some systems theory
[18:31:19] *** Quits: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au) (Quit: Have a groovy one)
[18:31:28] <Akronymus> By itself, no.
[18:31:33] <Akronymus> By how it is integrated, yes.
[18:31:45] *** Quits: pizdets_ (~pizdets@183.182.110.224) (Ping timeout: 245 seconds)
[18:31:47] <pyzozord> seems like the universe is a system. And system is a recursive definition. It's systems all the way down
[18:32:10] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[18:32:12] *** Joins: EdwardIII (~edwardiii@user/edwardiii)
[18:32:28] <pikapika> pyzozord, only death is real
[18:33:01] <pyzozord> pikapika: no that doesn't make any sense. Nothing is real. There is no such thing as real. :P
[18:33:50] <Akronymus> Altough, if we arguing about what is part of what:
[18:33:58] <Akronymus> Only inheritance is truly a oop-ism
[18:33:59] *** Joins: saribro (~swinnenb@user/swinnenb)
[18:34:20] <Akronymus> And inheritance makes things HARD
[18:34:29] <pikapika> Inheritance is used in oop
[18:34:39] <pyzozord> Yeah inheritance is not great imo
[18:34:40] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[18:34:41] <pikapika> For example windows has a subclassing mechanism
[18:34:41] <Akronymus> suddenly you have to worry about whether somewhere in the hirachy a function has been overwritten or not
[18:35:29] <pyzozord> But it's kind of just syntactic sugar on existing concepts. But then again everything is syntactic sugar all the way down to opcodes
[18:35:31] <pikapika> (in their C api for controls)
[18:36:55] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 250 seconds)
[18:36:56] <pyzozord> Philosophizing, I'll better go work on my terminal
[18:37:01] <pyzozord> *I'am
[18:37:51] <Akronymus> If I see a loop it can be doing anything.
[18:38:05] <Akronymus> But if I see a fold, I know it converts a collection to a single value
[18:38:24] <Akronymus> If I see a map, I know it transforms the values without changing the structure
[18:38:39] <Juliu> pyzozord, what you said about the recursive universe makes you sound wise in my opinion. Finally someone who understands
[18:38:54] <pyzozord> A fold is a haskell concept right? What was it again?
[18:39:10] <Akronymus> reduce in js, I think
[18:39:37] <Akronymus> Basically using all the values in a collection and accumulating them into something
[18:39:53] <Akronymus> Through a function that takes a state and element and returns a new state.
[18:39:53] <pikapika> Thats not fp
[18:40:00] <Akronymus> It very much is
[18:40:00] <pikapika> I use map reduce filter all the time
[18:40:07] <Akronymus> Then you are using some FP
[18:40:09] <pikapika> Those are just convenient abstractions of some for loops
[18:40:14] *** Joins: pizdets (~pizdets@183.182.114.170)
[18:40:21] <pyzozord> Juliu: thanks, but I'm very far from wise :D I haven't even finish highschool
[18:40:27] <mawk> there's no clear demarcation pikapika 
[18:40:31] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:40:45] <mawk> you could argue it's still FP, it doesn't matter what the computer does under the hood
[18:41:30] <pyzozord> oh that is a reduce indeed
[18:41:32] <Juliu> pyzozord, from my experience I can say that most of the people who were idiots in highschool stayed idiots all their lives, and the ones who were decent back then got better and better
[18:42:07] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com) (Ping timeout: 252 seconds)
[18:42:15] <pyzozord> fold sounds so much more profound and scary though
[18:42:21] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-f53f-9536-c646-bcb2.res6.spectrum.com)
[18:42:33] <Akronymus> fold => folding the collection into a state
[18:42:44] <Akronymus> Sounds quite natural to me
[18:42:44] *** Joins: dan01 (~dan01@109.98.132.202)
[18:42:57] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[18:43:03] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[18:43:23] <pyzozord> for me it brings images of some kind of universe folds of relaity or something :P Some high dimmentional concept
[18:44:23] <pyzozord> but that was my point, fp and oop are not really that interesting discussions, those are collections of techniques, we all use both all the time
[18:44:34] <pyzozord> I reduce on objects every day
[18:44:57] <Akronymus> But can you reduce on a collection of functions?
[18:45:01] <pyzozord> I don't use inheritance though, I don't like that one too much
[18:45:24] <Akronymus> Inheritance is THE intrinsic OOP-ism
[18:45:26] <pyzozord> Akronymus: of course you can
[18:45:29] <Akronymus> And it fucking sucks
[18:45:33] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[18:45:38] <Akronymus> Makes more problems than its worth
[18:47:30] <DPA> I Agree
[18:47:42] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 244 seconds)
[18:48:00] <DPA> Composition over inheritance, always!
[18:48:08] <Akronymus> Indeed
[18:48:18] <Akronymus> Or just don't marry data and functionality
[18:49:19] *** Joins: addc182 (~addc182@host109-158-74-189.range109-158.btcentralplus.com)
[18:51:33] *** Joins: sebastopole69 (~sebastopo@lmontsouris-658-1-15-189.w193-248.abo.wanadoo.fr)
[18:52:21] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[18:52:35] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:52:43] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[18:53:37] *** Quits: sebastopole69 (~sebastopo@lmontsouris-658-1-15-189.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[18:53:40] <pyzozord> I'm honestly not sure what is so bad about inheritance really. In practice it leads to terribly complicated architectures. But in theory it's just a powerful syntactic sugar. And we have many other powerful syntactic sugars that could lead to terrible architectures if they were abused
[18:53:56] *** Joins: sebastopole69 (~sebastopo@lmontsouris-658-1-15-189.w193-248.abo.wanadoo.fr)
[18:53:59] <Akronymus> https://news.ycombinator.com/item?id=28243089 "Arguments against passionately held positions are usually fruitless..."
[18:54:05] <Akronymus> Seems sane.
[18:54:06] <pyzozord> I have a feeling it's less about the sepcific abstraction and more about moderation and discipline in using that abstraction
[18:54:13] <Akronymus> Gonna disengage from this whole... mess then
[18:54:44] <Akronymus> pyzozord because you suddenly have to care about a whole network of distributed functionality that is all over the place
[18:55:07] <Akronymus> btw, look at the author of that message
[18:55:20] *** saribro is now known as swinnenb
[18:55:27] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Ping timeout: 245 seconds)
[18:55:33] *** Joins: Inhonion (~uhhh3@user/tastywiener95)
[18:56:00] <pyzozord> Akronymus: I think Alan Kays argument about the true OOP was that you don't care, that's the point, it's a complex system that you don't design, you negotiate with it
[18:56:07] <pikapika> You are the one who is passionate about programming models
[18:56:10] <deniska> pyzozord: inheritence makes a question of "what other parts of the code will be affected by this change?"
[18:56:15] <pikapika> I have no particular passion for or against oop
[18:56:21] <deniska> pyzozord: inheritence makes a question of "what other parts of the code will be affected by this change?" really hard to answer
[18:56:30] <deniska> or at least much harder than without it
[18:56:41] <Akronymus> pyzozord No, the true point was message passing.
[18:56:46] <Akronymus> As in no references and such
[18:57:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[18:57:11] <pyzozord> yeah but it was also, about letting go of the absolute control
[18:58:01] <pyzozord> for some reason I feel like smalltalks comes the closes to the true oop how Alan Kay envisioned it
[18:58:08] <pyzozord> And I love smalltalk, but it's a mess...
[18:58:14] *** Joins: codemin (~codemin@2602:252:d13:2b20:6087:2914:5ee9:82e8)
[18:58:31] <Akronymus> Yeah, smalltalk basically IS the example of oop as he envisioned it
[18:59:04] *** Quits: codemin (~codemin@2602:252:d13:2b20:6087:2914:5ee9:82e8) (Client Quit)
[18:59:25] *** Joins: nekodesu (~bit@user/nekobit)
[18:59:50] <deniska> I'd be hesitant to use terms like "true vision"
[19:00:11] *** Joins: cth (~Cthulchu@193.194.107.250)
[19:00:17] <Akronymus> I mean, he literally said that smalltalk is his vision of oop
[19:00:27] <Akronymus> Altough, that oop was probably the wrong name
[19:00:36] <Akronymus> Because it caused people to focus on the wrong thing
[19:01:01] <mrig> oh crumbs, knowing the length of the output gets complicated when there are escape characters in there too!
[19:01:26] *** Quits: hexingb (~hexingb@103.37.140.36) (Read error: Connection reset by peer)
[19:01:34] <pyzozord> deniska: yeah it was probably a bit presumptuous of me
[19:01:46] <pyzozord> Akronymus: oh, did he?
[19:01:51] *** Joins: hexingb (~hexingb@103.37.140.36)
[19:01:54] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[19:02:28] <deniska> words exist to convey ideas, and at this point "OOP" roughly means having classes aka structs with functions assigned to these structs, and object (instances of these structs)
[19:02:45] <pyzozord> anyone knows SDL? Is there SDL_Renderer alternative to SDL_BlitSurface? I mean rendering to a texture instead to the screen?
[19:02:52] <Akronymus> deniska indeed.
[19:03:01] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[19:03:02] <Akronymus> Hence using the specific wording I did
[19:03:27] <Akronymus> pyzozord apparently not. But he DID create smalltalk.
[19:03:43] <Akronymus> So, close enough?
[19:03:47] *** Joins: vysn (~vysn@user/vysn)
[19:03:58] <pyzozord> Yeah I guess that's close enough. I didn't know he created smalltalk.
[19:04:09] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:05:12] <Akronymus> https://wiki.c2.com/?AlanKaysDefinitionOfObjectOriented pyzozord
[19:05:16] <Akronymus> Anyways, g2g
[19:05:22] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Quit: work done for the day)
[19:05:25] <mrig> oh it is buggy but it is also glorious :D
[19:05:46] * mrig is letting fireworks off in the terminal.
[19:06:19] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 252 seconds)
[19:06:47] <pyzozord> mrig: nice! Can you show us? (I recommend `apt install peek` for short screencasts. It can even make gifs)
[19:06:51] *** Joins: hexingb (~hexingb@2409:8900:2721:fa33:45b4:1d7f:249a:1196)
[19:07:04] *** Joins: brickfat (~brickfat@user/brickfat)
[19:07:42] *** Quits: daoistmonk (~daoistmon@113.90.179.18) (Read error: Connection reset by peer)
[19:08:01] *** Joins: daoistmonk (~daoistmon@113.90.179.18)
[19:08:37] <mrig> I should really try and clean up some of the artifacts first :D
[19:09:28] <mrig> I'll take a look at peek, I suppose it is easy enough to put a short video clip onto a server.
[19:09:31] <pyzozord> well, I'm sure it's cool anyway :)
[19:09:41] *** Joins: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr)
[19:09:49] *** Quits: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr) (Read error: Connection reset by peer)
[19:09:55] <pyzozord> peek can produce gifs and you can upload gifs to imgur
[19:10:17] *** Joins: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr)
[19:10:22] <pyzozord> you can also upload mp4s to imgur but only 1 minute long I think
[19:10:28] <juliaEnv> Hi, did you have service-oriented architecture lectures at university?
[19:11:22] <[itchyjunk]> what does that mean?
[19:11:34] <whatsupboy> microservices in simple words
[19:12:40] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:13:28] <[itchyjunk]> seems like microservice is an example of it
[19:13:29] <[itchyjunk]> https://en.wikipedia.org/wiki/Service-oriented_architecture
[19:13:29] <bayaz> Title: Service-oriented architecture - Wikipedia 
[19:15:03] <[itchyjunk]> so if i had a weather() function that a customer could access to get temperature currently
[19:15:18] <[itchyjunk]> this would be service oriented architecture?
[19:15:24] <[itchyjunk]> provides one tiny service 
[19:15:25] <mrig> ah it saves to gif, that's cool.
[19:15:38] <[itchyjunk]> and they implement a bunch of them to make an appliccation
[19:15:47] <[itchyjunk]> like a day planner application using weather information
[19:16:47] <pyzozord> mrig: under the hood it seems to be just a convenient frontend for ffmpeg
[19:17:20] <pyzozord> so the gifs that it produces are really nice quality. I set mine to 24 frames per second, since that's the cinematic standard :D
[19:17:41] <pyzozord> it's a bit choppy but conveys enough movement
[19:18:03] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[19:18:13] <pyzozord> I've been making heavy use of peek since I started working remotely during pandemic, really nice tool
[19:19:33] *** Quits: sebastopole69 (~sebastopo@lmontsouris-658-1-15-189.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[19:20:02] <pyzozord> I'm not sure why I'm selling it so much. I guess I just like it
[19:20:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:21:39] <mrig> It has a nice interface, very intuitive.
[19:22:11] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[19:23:10] <sandman13> what tool is this?
[19:24:06] <mrig> pyzozord: here we go https://8i8.fr/public/Peek_2021-09-01_16-49.gif
[19:24:07] <bayaz> Type: image/gif Size: 2.9 MB 
[19:24:55] <mrig> dont hold your breath though, my little exclamation of excitement was the expressing of satisfaction after grappling with C again for the first time in ages :D
[19:24:58] <mrig> :|
[19:25:41] <mrig> sandman13: oh 'peek' for taking quick screen captures.
[19:25:56] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:26:28] *** Quits: Blackpajamas (~Blackpaja@167.167.46.2) (Remote host closed the connection)
[19:26:36] *** Joins: codemin (~codemin@69.167.17.139)
[19:26:55] <pyzozord> mrig: oh wow, super cool! :)
[19:27:02] *** Joins: Blackpajamas (~Blackpaja@167.167.46.2)
[19:27:02] <pyzozord> mrig: how did you do it?
[19:27:13] *** Quits: user51 (~user51@176.228.90.248) (Ping timeout: 252 seconds)
[19:27:29] <varaindemian> is the regex syntax correctly applied in my function? `docx_search_and_add_hyperlink(user_docx, re.compile(r'plain'), r'www.google.com')`
[19:27:34] <pyzozord> excitement fully earned, it looks very cool
[19:27:56] *** Quits: Blackpajamas (~Blackpaja@167.167.46.2) (Remote host closed the connection)
[19:27:59] <mrig> I am simply reading in the output of mpv to the terminal that I'd stored as a file.
[19:28:08] <varaindemian> specifically `re.compile(r'plain')` and `r'www.google.com'`
[19:28:40] *** Joins: Blackpajamas (~Blackpaja@167.167.46.2)
[19:29:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[19:29:50] <pyzozord> mrig: so there was issues with timing?
[19:29:57] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[19:30:01] <mrig> pyzozord: thank you, will it will suffice for now, though I think a particle matrices with a little physics will make a far nicer job eventually.
[19:30:28] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[19:30:42] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:30:45] <mrig> pyzozord: the timing is likely causing the artifacts, need to investigate further.
[19:30:49] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[19:31:18] <mrig> Currently using inserted 'go back to start' escape keys and just streaming the whole lot willy nilly at the moment.
[19:31:51] <pyzozord> mrig: maybe there is some way to make mpv output at fixed framerate
[19:31:59] <mrig> I should work out how to stop at that character and make the program do it, could slow it down and get a better result, I think, if I can figure that out.
[19:32:28] <mrig> That might make it easy to find those jump points too.
[19:34:15] <mrig> yes I need to, could be a lot nicer than it is.
[19:34:55] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[19:35:19] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[19:36:30] *** Quits: Cypris (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[19:37:52] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[19:38:46] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[19:38:49] <juliaEnv> [itchyjunk] you are right when you ask what a service-oriented architecture means. It is a paradigm. A paradigm can be imperative, functional, object-oriented, component-oriented, service-oriented, and many other. 
[19:39:26] *** Quits: silasfox (~silasfox@xdsl-85-197-57-82.nc.de) (Quit: silasfox)
[19:39:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[19:40:06] *** Joins: arcatech (~arcatech@user/arcatech)
[19:41:02] <wedr> Isn't inheritance useful for making a class containing common functionalities among similar subclasses?
[19:41:13] <juliaEnv> A paradigm is a model. Sometimes, paradigms are called design models, other authors call paradigm development models, and other authors call them programming models. Because paradigms influence a whole SDLC, I believe paradigms are software engineering paradigms. (i.e. how to do requirements engineering, how to do software design, how to do software construction and testing, etc.)
[19:41:17] <wedr> If not, I'm now confused
[19:42:16] <juliaEnv> wedr you have to think of the business domain and the ontology that these classes represent. 
[19:42:58] *** Joins: mishugana (~mishugana@103.5.134.18)
[19:43:13] <juliaEnv> So, service-oriented isn't just an architecture. Service-oriented is a whole SDLC, and that includes requirements, design, implementation, testing, deployment, and also it includes project management.
[19:43:50] *** Quits: francis (francis@user/francis) (Quit: rb)
[19:43:56] <juliaEnv> PM is not a part of an SDLC, but it may be part of the service-oriented paradigm (different planning of projects when they are service-oriented projects)
[19:46:09] *** Joins: xsperry (~as@user/xsperry)
[19:47:18] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:47:39] <juliaEnv> wedr you may want an abstract class, or some GoF design patern (i.e. Decorator or something), or composition (i.e. to make that common functionality a private property of each class and inject it via DI), and it may also be something I didn't name. There are many possibilities.
[19:47:42] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:48:49] *** Joins: francis (francis@user/francis)
[19:50:14] *** Joins: zaher_ (~zaher@37.48.179.136)
[19:51:46] *** Quits: dan01 (~dan01@109.98.132.202) (Ping timeout: 244 seconds)
[19:52:20] *** Quits: jokoon (~eio@2a01:e0a:542:e160:65e4:3400:c023:ed68) (Quit: Leaving)
[19:52:48] *** Quits: zaher (~zaher@37.48.185.202) (Ping timeout: 244 seconds)
[19:54:07] <mrig> Does anyone know how to write '[1;0f' into a char ?
[19:54:49] <mrig> I'm not sure what the escape sequence is supposed to be for this, I think \033 works for a string, but I would like to test for the character.
[19:55:10] <mrig> ah this will be in ioctl
[19:55:54] *** Quits: mteo (francis@user/francis) (Quit: rb)
[19:57:11] *** Joins: mteo (francis@user/francis)
[19:58:16] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[19:59:02] <pyzozord> mrig: char *mystring = "\033[1;0f";
[19:59:37] <pyzozord> or just the escapte character char esc = '\033';
[20:00:31] <juliaEnv> Because https://en.wikipedia.org/wiki/Service-orientation is a design paradigm (a model), it means it doesn't have one standard way. There are multiple vendors, frameworks, and methods tied to them. I found however service-oriented software engineering as one specific methodology https://en.wikipedia.org/wiki/Service-oriented_software_engineering that appears to be from the idea group. A different framework is offered by 
[20:00:31] <juliaEnv> Sommerville, in his Software Engineering book: https://cs.ccsu.edu/~stan/classes/CS530/Notes18/18-ServiceOrientedSE.html 
[20:00:31] <bayaz> Title: Service-orientation - Wikipedia 
[20:00:31] <bayaz> Title: Service-oriented software engineering - Wikipedia 
[20:00:32] <bayaz> Title: CS 530 - Software Engineering class notes 
[20:01:02] <mrig> oh of course there are several, right, so I'll need to test for this some other way, I was thinking that it was one char for some reason.
[20:01:24] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b0dc:fa4:d0:c1c1) (Read error: Connection reset by peer)
[20:01:34] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:02:23] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[20:02:37] *** Quits: inky (~inky_@46.36.119.19) (Ping timeout: 244 seconds)
[20:02:37] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 244 seconds)
[20:03:19] <vdamewood> mrig: Which language?
[20:04:49] *** jmft2__ is now known as jmft2
[20:05:47] <mrig> This is C
[20:06:10] <mrig> was thinking that a little ring buffer to test against might be the simplest solution.
[20:07:34] <vdamewood> So, what's '[1;0f'?
[20:07:59] *** Quits: nekodesu (~bit@user/nekobit) (Ping timeout: 252 seconds)
[20:09:07] <GeDaMo> "Horizontal Vertical Position" https://en.wikipedia.org/wiki/ANSI_escape_code#CSI_(Control_Sequence_Introducer)_sequences
[20:09:07] <bayaz> Title: ANSI escape code - Wikipedia 
[20:09:20] *** Quits: inky_ (~inky@46.36.119.19) (Ping timeout: 244 seconds)
[20:09:40] *** Joins: inky_ (~inky@46.162.252.15)
[20:10:06] *** Joins: Inari (~Pinkishu@p4fe7eacc.dip0.t-ipconnect.de)
[20:10:59] *** Quits: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr) (Quit: Leaving)
[20:12:09] *** Joins: nekodesu (~bit@user/nekobit)
[20:12:12] *** nekodesu is now known as swagneko
[20:13:27] <mrig> vdamewood: oh that moves the cursor to the first square of the terminal.
[20:14:04] *** Joins: ixil (~ixil@82.197.178.137)
[20:14:48] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[20:15:07] *** Joins: humky (~humky@user/humky)
[20:17:17] <juliaEnv> SOA has a standardization by OASIS. It has a reference model https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=soa-rm and a reference architecture http://docs.oasis-open.org/soa-rm/soa-ra/v1.0/soa-ra.pdf  Those are only abstract architectures. Then, different vendors (i.e. incl Oracle and others) offer their service-oriented framework. For SOA vs. microservices, the best comparison I've seen is at 
[20:17:17] <juliaEnv> https://www.talend.com/resources/service-oriented-architecture/ when you scroll down (microservices are merely an architectural style within an application). SOA is an enterprise-wide approach. SOA has a primary goal of resuability while microservices aim to make the application development process more agile.
[20:17:18] <bayaz> Title: What is Service Oriented Architecture (SOA)? | Talend 
[20:17:19] <bayaz> Title: OASIS SOA Reference Model TC | OASIS 
[20:17:19] <bayaz> Type: application/pdf Size: 2.6 MB 
[20:18:38] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[20:18:45] *** Quits: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de) (Read error: Connection reset by peer)
[20:18:49] *** Joins: inky (~inky_@46.162.252.15)
[20:22:07] *** Joins: nik (~nik777@vpn-users-dip-pool164.dip.cf.ac.uk)
[20:24:10] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:24:33] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[20:26:07] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[20:26:15] <wedr> Java 17 is coming out soon, and everybody is going to be forced to upgrade everything up to the baseline (Java 17, Jakarta EE 9, Hibernate ORM 6)
[20:26:39] *** Joins: arcatech (~arcatech@user/arcatech)
[20:27:11] *** Joins: keir (~keir@user/keir)
[20:27:40] *** Quits: xsperry (~as@user/xsperry) (Quit: quit)
[20:28:14] <vdamewood> wedr: Yay! ?
[20:28:32] <wedr> Problem is, we're stuck on Java 8.
[20:28:41] <wedr> We're literally 9 versions behind everyone
[20:28:50] <pulse> if it ain't broke, break it yourself
[20:29:32] <mishugana> wedr: I wouldn't worry too much. Most of the industry is still on 8
[20:30:05] <mishugana> https://www.jrebel.com/blog/2020-java-technology-report#java-version for instance
[20:30:05] <bayaz> Title: 2020 Java Technology Report | JRebel by Perforce 
[20:30:34] <mishugana> Or this: https://snyk.io/blog/developers-dont-want-to-leave-java-8-as-64-hold-firm-on-their-preferred-release/
[20:30:35] <bayaz> Title: 64% of developers report that Java 8 remains the most often used release | Snyk 
[20:30:53] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[20:31:33] *** Joins: dan01 (~dan01@109.100.108.98)
[20:31:47] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:1084:3dd6:ee9c:22f5)
[20:32:02] *** Joins: dan1001 (~dan01@109.100.108.98)
[20:32:04] <mishugana> It makes sense too since 8 is an LTS version, and so is 11, and 17 will be as well. Companies will basically move from LTS to LTS.. eventually.
[20:32:45] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[20:34:43] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:34:59] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:35:05] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:35:15] *** Quits: codemin (~codemin@69.167.17.139) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:35:18] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:35:41] *** Quits: dan01 (~dan01@109.100.108.98) (Ping timeout: 244 seconds)
[20:35:49] *** Joins: silasfox (~sbv@xdsl-85-197-57-82.nc.de)
[20:38:02] <pyzozord> wedr: isn't staying behind on java like a major security risk?
[20:38:23] <wedr> This forced upgrade won't happen until Q4 of 2022.
[20:39:00] <pyzozord> so my optimizations so far resulted in 2-3% increase of cpu usage
[20:39:03] *** Joins: Pixi_ (~Pixi@user/pixi)
[20:39:05] <pyzozord> great success
[20:39:07] <oldlaptop> pyzozord: I thought java8 was still getting security maintenance and so forth
[20:39:25] <oldlaptop> because of the travails of all the wedrs out there
[20:39:29] <juliaEnv> pyzozord are your optimizations in Java?
[20:39:45] <pyzozord> oh so java 8 is still supported? I didn't know that
[20:39:57] <pyzozord> juliaEnv: no completly unreleated, terminal emulator in sdl in c
[20:41:28] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 252 seconds)
[20:45:11] *** Quits: Blackpajamas (~Blackpaja@167.167.46.2) (Quit: Blackpajamas)
[20:45:52] <mishugana> Paid support will always be there, so no worries.
[20:46:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[20:47:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:47:26] *** Joins: raj (uid72176@user/raj)
[20:47:49] *** Joins: Thedarkb1 (~Thedarkb@85.255.234.233)
[20:50:09] *** Quits: Thedarkb (~Thedarkb@85.255.234.235) (Ping timeout: 244 seconds)
[20:51:13] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[20:51:51] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[20:52:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:52:37] *** Joins: newpy (~newpy@2601:280:4381:1390:fc7d:b965:6587:3eef)
[20:53:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:55:17] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[20:55:36] *** Joins: independent_ (~independe@95.144.68.39)
[20:57:29] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[20:58:03] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Quit: Leaving.)
[20:58:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:58:54] *** Joins: anovick (~anovick@2a0d:6fc0:18cb:e900:98e9:2c6f:1a52:52c0)
[20:59:17] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[20:59:20] *** Joins: Akuli (~Akuli@82-203-162-232.bb.dnainternet.fi)
[20:59:36] *** Joins: independent_ (~independe@95.144.68.39)
[20:59:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:00:45] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:01:59] *** Quits: inky_ (~inky@46.162.252.15) (Remote host closed the connection)
[21:03:30] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[21:03:52] *** Joins: inky_ (~inky@46.162.252.15)
[21:04:46] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[21:05:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:05:25] *** Quits: swagneko (~bit@user/nekobit) (Quit: uninstall gentoo)
[21:05:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:07:34] *** Joins: gitgood (~gitgood@host-78-145-140-210.as13285.net)
[21:10:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[21:11:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:15:59] *** Joins: SystemFFan (~SystemFFa@188.70.6.7)
[21:16:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[21:17:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:19:07] *** Joins: Samian (~Sami@2620:10d:c091:480::1:15b6)
[21:20:07] *** Quits: chives (~brandon@64.130.100.177) (Quit: WeeChat 2.3)
[21:22:11] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 244 seconds)
[21:22:46] *** Joins: luckyxxl (~luckyxxl@185.213.155.252)
[21:24:20] *** Joins: chives (~brandon@64.130.100.177)
[21:25:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:26:16] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:26:29] *** Joins: flynn (~mcbloch@user/flynn)
[21:27:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:27:33] *** Joins: arcatech (~arcatech@user/arcatech)
[21:28:46] *** Quits: chives (~brandon@64.130.100.177) (Client Quit)
[21:28:47] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[21:29:04] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:30:08] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[21:31:03] *** Joins: xsperry (~as@user/xsperry)
[21:32:24] *** Quits: mishugana (~mishugana@103.5.134.18) (Quit: leaving)
[21:34:47] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:34:51] <diophantoz> hi, what is a technique to make an "object" active? as in an active object that you keep in the software's current "default position"?
[21:35:04] <diophantoz> so anything you add will go to that object
[21:35:09] <diophantoz> unless you switch it
[21:35:24] <diophantoz> does that makes sense?
[21:35:29] <vdamewood> Not really.
[21:35:40] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-f53f-9536-c646-bcb2.res6.spectrum.com) (Ping timeout: 240 seconds)
[21:35:53] <GeDaMo> Serialize the object and reload when the program starts?
[21:36:05] <GeDaMo> Or maybe a database?
[21:36:24] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[21:37:24] <diophantoz> i guess some sort of software memory
[21:38:01] <diophantoz> sorry, this was vague but i appreciate the input
[21:39:16] <InPhase> diophantoz: Two related techniques are dependency injection, and registering callback handlers.
[21:39:34] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-b495-e64a-b23b-4c53.res6.spectrum.com)
[21:39:43] <InPhase> diophantoz: Perhaps those search terms will help you ground your thinking around some known solutions.
[21:39:59] *** Joins: arcatech (~arcatech@user/arcatech)
[21:40:05] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:40:12] <diophantoz> thank you
[21:43:01] *** Quits: xsperry (~as@user/xsperry) ()
[21:46:35] *** Joins: xsperry (~as@user/xsperry)
[21:51:40] *** Quits: zaher_ (~zaher@37.48.179.136) (Ping timeout: 240 seconds)
[21:51:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:52:08] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[21:53:40] <mrig> pyzozord: Finally got the timing fixed :) https://8i8.fr/public/Peek_2021-09-01_19-20.gif
[21:53:41] <bayaz> Type: image/gif Size: 5.4 MB 
[21:54:44] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 244 seconds)
[21:55:06] <pyzozord> mrig: ah nice, looking good :)
[21:55:22] <pyzozord> I'm stuck though. My textures don't want to blend
[21:56:14] <mrig> oh!
[21:56:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[21:57:14] <mrig> I was struggling a little with the terminal code as if I'm not mistaken, you've hard coded the the SDL lib in with the terminal code.
[21:57:54] <mrig> I mean depending upon it being within the local scope, I could be wrong though.
[21:57:59] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[21:58:07] *** Joins: magla (~gelignite@55d4b5be.access.ecotel.net)
[21:58:08] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b5e8:61ab:ae33:6d00)
[21:58:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[21:59:22] <mrig> well i'm making a TODO note next to this, write the same using particles and physics when the wind is blowing in the appropriate direction.
[21:59:51] <KillerWasp> mrig# i have several TODO notes in my source codes
[22:00:02] <KillerWasp> also TODO-BUG, or BUG notes
[22:00:50] <KillerWasp> When there are things I want to do, or I detect possible bugs, but I don't feel like fixing or modifying it.
[22:01:59] <KillerWasp> "TODO: Don't end up as lazy as KillerWasp"
[22:05:06] <mrig> Things have a right time to be done though.
[22:05:07] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[22:05:10] <pyzozord> Todos are cool, better have them then don't. I don't think they make you more lazy. Lazy people will be lazy without todos :P
[22:05:22] <mrig> do them too soon and they inevitably end up suffering for it.
[22:05:45] <mrig> Laziness is being over active to avoid ones own though.
[22:05:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:05:55] <mrig> and perception a curious thing ...
[22:06:42] *** Quits: inky_ (~inky@46.162.252.15) (Ping timeout: 245 seconds)
[22:06:45] <mrig> so scared of their own thought that they spent their entire life consuming crap, and producing even more so.
[22:06:52] <mrig> that is laziness.
[22:06:58] <novns> TODO: recall what TODO should have been placed here
[22:07:23] <mrig> a TODO calendar would be cool :)
[22:07:30] <mrig> TODO when time is right.
[22:08:22] *** Joins: inky_ (~inky@37.252.82.78)
[22:08:40] <mrig> TODO next person in this job, I have left you a dirty mess; So sorry, here is how you might like to consider ...
[22:09:09] <novns> TODO: get rich and quit this job
[22:09:43] <mrig> What did rich do to you and why do they need seeing to before you leave?
[22:10:19] <mrig> They left lots of TODO next person ... in the code :D
[22:10:34] <Juliu> TODO: Get a job
[22:10:51] <mrig> Screw the job, get a profession.
[22:11:14] <Juliu> I dont need both, or do I ?
[22:11:21] <novns> screw the profession, get the enlightenment
[22:11:28] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[22:11:36] *** Joins: codemin (~codemin@69.166.222.231)
[22:11:36] <mrig> na jobs are crap working for some overlord.
[22:11:57] <mrig> Professions are based upon mutual respect.
[22:12:21] <novns> profeßion
[22:13:08] *** Quits: humanface81 (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu) (Quit: Client closed)
[22:13:47] *** Joins: Pickchea (~private@user/pickchea)
[22:13:47] <pyzozord> it's not about doing the job in todo. It's way of communicating intent of the author
[22:13:56] <pyzozord> it provides context
[22:14:49] <Juliu> How about I find someone who gives me money just for free
[22:15:00] <pyzozord> ugh I got stuck on the other end. First my first texture wasn't visible, now the second texture isn't visible
[22:15:06] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:15:06] <Juliu> That is like a profession, just not me annoying that guy
[22:15:08] <novns> profeſſion
[22:15:15] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:15:17] <mrig> even better, make study your profession.
[22:15:27] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:15:46] <Juliu> pyzozord, why are they not visible?
[22:15:58] <novns> old newspapers and books are hard to read, becauſe ſ lookſ like f everywhere
[22:16:12] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 256 seconds)
[22:16:28] <novns> and they vſe v inſtead of u
[22:16:29] <Juliu> novns, lol
[22:17:06] <mrig> cheapskates did not want to pay for a font with an s in it!
[22:17:44] <Juliu> Who needs an s anyway
[22:17:46] <pyzozord> Juliu: good question, if I knew I'd be half way done with this issue
[22:18:06] <mrig> heh, now I've got to remember where I put the segfault in this that was the previous ending surprise.
[22:18:28] <Juliu> pyzozord, I have had the same problem 20 years ago, and it was because the texture dimensions (i.e. size) was not a power of 2
[22:18:47] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:19:16] <pyzozord> Juliu: no offence you don't sound 30+
[22:19:36] <Juliu> pyzozord, I'll take that as a compliment
[22:21:25] <Juliu> pyzozord, tell me if my suggestion solved your problem
[22:23:02] <pyzozord> Juliu: I just tried, sadly it didn't
[22:24:20] <mrig> Juliu: quite, letc just uce a c instead.
[22:25:01] <mrig> oh dag, i've got to play this darned game all the way through now to test it :|
[22:25:06] <mrig> dang.
[22:25:15] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[22:25:34] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:28:06] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:28:30] *** Joins: Guest10 (~Guest10@93-172-153-232.bb.netvision.net.il)
[22:28:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:29:49] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 252 seconds)
[22:31:34] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:32:07] <Juliu> mrig, ?
[22:32:41] <Juliu> pyzozord, maybe you are using mipmapping and haven't build all the mipmap levels
[22:34:06] *** Joins: src (~src@user/src)
[22:34:22] *** Joins: pulse (~pulse@user/pulse)
[22:34:30] <vdamewood> Yay! More food!
[22:34:39] * vdamewood peers at pulse.
[22:34:54] * pulse throws a pear in vdamewood's lap
[22:35:10] * vdamewood eats the pear.
[22:35:36] <vdamewood> Kako gre?
[22:35:54] <pulse> well i'm on no sleep
[22:36:12] <vdamewood> Sleepy time start soon?
[22:36:17] <vdamewood> starts*
[22:36:18] <pulse> i wish
[22:36:25] <mrig> Juliu: I've coded a tictactoe with a really annoying AI that lets you think that it is really stupid and then catches you out when you become nonchalant; You have to beat it quite a few times in a row to win, designed to infuriate.
[22:36:40] *** Joins: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu)
[22:37:05] <quippy> too bad it's an AI for a solved game
[22:37:14] <Juliu> mrig, once the AI does a mistake you should be able to win. Tictactoe is not that long
[22:37:26] <mrig> and have not coded in a fast path to the end for testing yet, it's ancient and would not have occurred to me at that time to do that
[22:37:31] <vdamewood> Drink black liquid of energy drug?
[22:37:52] <mrig> Juliu: oh it is the repetition that makes the game, you have to be consistent.
[22:38:08] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[22:38:14] <pulse> meh, i think i'm immune to coffee
[22:38:18] <mrig> if you lose once you loose all of your score and have to keep going.
[22:38:26] <Juliu> mrig, if the AI does not make a mistake, you can't win against it. And if you dont make a mistake, the AI cant win as well
[22:38:36] <mrig> Juliu: it does make mistakes,
[22:38:49] <mrig> lets you believe at times that it is rather stupid.
[22:38:52] <vdamewood> I prefer gomoku over Tic-Tac-Toe
[22:39:00] *** Joins: Macuser (~Macuser@216.30.159.201)
[22:39:09] <Juliu> mrig, I am sure the player also lets the AI think he is stupid
[22:39:11] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:39:40] <mrig> I used to have a ninja game on the c64 isometric view a terminal version of that would be pretty cool.
[22:39:58] <Juliu> mrig, Last Ninja ?
[22:40:04] <mrig> thats the one!
[22:40:08] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[22:40:13] <Juliu> Everyone had that :D
[22:40:22] <mrig> Grate game.
[22:40:29] <Juliu> Very hard
[22:40:51] <GeDaMo> https://www.explainxkcd.com/wiki/images/1/1e/tic_tac_toe.png
[22:40:51] <bayaz> Type: image/png Size: 646.1 kB 
[22:40:56] <Macuser> I need some help with my C code... I've been trying to modify this code to add microseconds precision to the end of the UTC time. https://pastebin.com/KVuRnLcA
[22:40:57] <bayaz> Title: int usecs;double CurrentDaynum(){ /* Read the system clock and return the - Pastebin.com 
[22:41:23] <Macuser> using gettimeofday()
[22:41:50] <mrig> There is a super state that my AI does not have yet, just add that at some point.
[22:42:15] <Macuser> i tried to make "usecs" global so I can access it in the second function
[22:42:29] <vdamewood> Oh, this is interesting. The full name for Gomoku is Gomoku Narabe in Japanese, They call Tic Tac Toe Sammoku Narabe according to WWWJDIC.
[22:42:45] <mrig> You can force a win by using certain moves, must get that in there at some point.
[22:42:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[22:43:04] *** Joins: keir (~keir@user/keir)
[22:43:05] <Juliu> vdamewood, that would probably be more interesting if anyone spoke Japanese
[22:44:10] *** Joins: Auron (Auron956@user/auron)
[22:44:35] <vdamewood> Juliu: Experience has shown that quite a few people do, especially in here.
[22:44:49] <Juliu> vdamewood, nani?
[22:45:12] <mrig> GeDaMo: Thanks for the link, if I keep that to hand; I may have a fighting chance :D
[22:45:47] <Juliu> mrig, you cant win Tictactoe against an opponent that does no mistakes
[22:46:17] <vdamewood> So, Tic Tac Toe is nothing like life according to Captain Picard.
[22:46:18] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[22:46:19] <Juliu> Watch the movie "Wargames" to see what I mean ;)
[22:46:37] <vdamewood> Life, the only winning move is not to play.
[22:46:58] <vdamewood> I just like the 8-inch floppies he used.
[22:47:03] <pulse> but will the AI ever be able to beat whack-a-mole
[22:47:07] <Juliu> vdamewood, feel free to end it and win a special prize
[22:47:14] <mrig> Juliu: sure no, but you can push mistakes by upping your probability of winning in a combination of moves.
[22:47:27] <vdamewood> Juliu: Lemme get my shoto.
[22:47:37] <Juliu> pulse, as long as the AI doesnt whack my mole
[22:47:39] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Remote host closed the connection)
[22:47:50] <mrig> So that more of the available free spaces lead the opponent to an assured loss.
[22:48:30] <mrig> pulse: I think whack-a-mole is all that AI does these days; And is pretty effective at it.
[22:48:34] <Juliu> vdamewood, need someone to help you commit harakiri? Of course just so you preserve your honor, and not to get rid of you
[22:48:56] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:49:10] <vdamewood> Juliu: You can do the beheading!
[22:49:24] <Juliu> vdamewood, that's what I was thinking of
[22:50:28] * vdamewood wonders how many have said "itai desu." (This is going to hurt.) before doing the dead.
[22:50:39] <pyzozord> that looks really complex
[22:50:47] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[22:50:54] <pyzozord> that tictactoe map
[22:51:06] *** Joins: independent_ (~independe@95.144.68.39)
[22:51:18] <Juliu> pyzozord, if you have ever played Tictactoe, you know it's pretty simple
[22:52:42] <Juliu> vdamewood, less talking, more commiting harakiri!
[22:52:54] <vdamewood> I don't have the guts to.
[22:53:04] <vdamewood> Here, you can do it.
[22:53:04] * Juliu beheads vdamewood
[22:53:09] <Juliu> That is what friends are for
[22:53:10] * vdamewood hands Juliu a .... nevermind.
[22:53:17] <Juliu> Too late
[22:53:30] <Juliu> And don't come back as a ghost
[22:53:52] * vdamewood comes back as an obake.
[22:54:03] <Juliu> I hope that is something to eat
[22:54:20] <vdamewood> Oh, wait, now. I can comunicate through a medium in the trial for my murder!
[22:54:42] <vdamewood> And my testimony can completely conflict with everyone else's!
[22:54:46] <Juliu> Sounds like a typical Japanese horror movie
[22:55:08] <vdamewood> Actually, I think it's classified as mystery or suspense.
[22:55:31] <pyzozord> finally some progress, I can see two textures semitransparent!
[22:55:34] <vdamewood> Juliu: Are you not familiar with this plot? It's a Kurosawa.
[22:55:36] <Juliu> I like those murder in a locked room cases. There should be more such movies
[22:55:37] <pyzozord> not the right textures but still
[22:56:20] <Juliu> vdamewood, I dont know what a obake or a kurosawa is, senpai
[22:56:38] <Juliu> pyzozord, so what was the mistake?
[22:57:21] <pyzozord> Juliu: not sure, some wrong combination of library function calls
[22:57:26] <vdamewood> Juliu: Oh. Okay. Kurosawa is Akira Kurosawa, a famous Japanese film director.
[22:57:36] <Juliu> pyzozord, ok
[22:57:52] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[22:57:57] <Juliu> vdamewood, I dont even know US film directors
[22:58:31] <vdamewood> Juliu: The plot of someone testifying at the trial for his own murder through a medium is from one of Kurosawa's movies, called Rashomon.
[22:58:57] <Juliu> vdamewood, I bet that trope is older
[22:59:26] <vdamewood> Juliu: In Rashomon, Three people give testimony about a murder, and their stories are so completely different from each other that no conclusion can be made about what happened.
[22:59:49] <vdamewood> Rashomon was made in 1950.
[22:59:57] <Juliu> vdamewood, how does the judge know the medium is not making up this stuff?
[23:00:18] <Juliu> The true murder could claim he is a medium as well
[23:00:22] <Juliu> *murderer
[23:00:48] <vdamewood> I think no one actually cares.
[23:00:52] <pyzozord> ok, success! It's working now. And it's on hardware accelerated support. Except it uses more cpu. Not much of an optimization
[23:00:55] <vdamewood> I haven't seen the movie yet.
[23:01:04] <Juliu> vdamewood, I am a medium as well, and your dead mom says you should go to bed now!
[23:01:32] <Juliu> pyzozord, well done, even though it sounds as if you dont know what you did
[23:02:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:03:00] <pyzozord> well I have some theories as to what I did
[23:03:02] <vdamewood> pyzozord: Are you optimizing to maximize CPU usage?
[23:03:25] *** Joins: elgraz (~elgraz@151.65.9.160)
[23:03:33] <Juliu> pyzozord, I also have some theories as to what you did
[23:03:44] <pyzozord> Juliu: don't push it
[23:03:53] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[23:03:56] <Juliu> lol
[23:04:53] *** Joins: Maaaanu (~manuel@ip5b41c17b.dynamic.kabel-deutschland.de)
[23:05:01] <Juliu> Anyway, back to the games topic:
[23:05:33] <Juliu> There is post quantum cryptography (i.e. quantum computer secure cryptography), right?
[23:05:53] <Juliu> Has anyone ever thought about quantum computer secure games?
[23:06:07] *** Joins: Enitin (~Enitin@82.102.22.84)
[23:09:03] *** Quits: zwr (~zwr@2804:d45:b966:fb00:c95b:63d6:bbd2:f8dd) (Ping timeout: 250 seconds)
[23:09:32] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:09:35] <pyzozord> Actually there is 1-2% cpu usage decrease since the previous version when ideling with the animated gif. The text rendering is the problem now. I think I cannot create and destroy hardware accelerated textures as often as I could software only textures
[23:09:49] *** Joins: zwr (~zwr@2804:d45:b966:fb00:9d50:5f1e:87a4:6ad6)
[23:10:38] <Juliu> pyzozord, you only need 1 static texture for text
[23:11:12] *** Quits: dan1001 (~dan01@109.100.108.98) (Ping timeout: 244 seconds)
[23:13:37] *** Joins: Narrat (~omnius@p200300df5f00d3ea06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:15:35] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[23:16:29] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:19:30] <leonardus> What is the best audio codec to use for a game that is as fast or faster than mp3 to decode?
[23:19:43] <leonardus> would mp3 be the best option?
[23:20:09] <pyzozord> Do i understand correctly that there is only UINT_MAX unicode code points?
[23:23:26] <edgar-rft> wav or aiff are way faster to decode than mp3
[23:23:43] *** Quits: inky_ (~inky@37.252.82.78) (Ping timeout: 252 seconds)
[23:23:47] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Ping timeout: 252 seconds)
[23:23:47] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[23:24:06] *** Joins: independent_ (~independe@95.144.68.39)
[23:24:24] *** Joins: nekodesu (~bit@user/nekobit)
[23:25:15] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[23:25:18] <edgar-rft> I don't think that UINT_MAX is part of the unicode specification
[23:25:26] *** Joins: dan1001 (~dan01@109.100.108.98)
[23:25:40] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[23:25:47] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[23:25:51] *** Quits: Guest10 (~Guest10@93-172-153-232.bb.netvision.net.il) (Ping timeout: 256 seconds)
[23:26:06] *** Joins: independent_ (~independe@95.144.68.39)
[23:26:06] *** Quits: Samian (~Sami@2620:10d:c091:480::1:15b6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:26:08] *** Quits: dan1001 (~dan01@109.100.108.98) (Client Quit)
[23:26:14] <leonardus> edgar-rft: I need compression
[23:26:19] <pulse> https://stackoverflow.com/a/27416004
[23:26:21] <bayaz> Title: Does Unicode have a defined maximum number of code points? 
[23:26:21] *** Joins: dan1001 (~dan01@109.100.108.98)
[23:26:32] *** Quits: hexingb (~hexingb@2409:8900:2721:fa33:45b4:1d7f:249a:1196) (Ping timeout: 252 seconds)
[23:26:33] <GeDaMo> "UTF-8 is capable of encoding all 1,112,064[nb 1] valid character code points in Unicode" https://en.wikipedia.org/wiki/UTF-8
[23:26:34] <bayaz> Title: UTF-8 - Wikipedia 
[23:26:54] <mrig> is `if (fn() > 0) { do something }` defined behaviour in C?
[23:27:05] <mrig> I forget, it has been a while.
[23:27:14] <GeDaMo> Should be
[23:27:26] <mrig> Thanks, I thought so but hesitated.
[23:27:51] <pyzozord> oh so that is much much smaller then uint32 max
[23:28:21] <pyzozord> oh but it is bigger than uint16. I see
[23:28:36] <GeDaMo> "Since the restriction of the Unicode code-space to 21-bit values in  2003, UTF-8 is defined to encode code points in one to four bytes"
[23:29:15] <edgar-rft> pyzozord: in C/C++ logic it's uint21
[23:30:11] *** Quits: elgraz (~elgraz@151.65.9.160) (Remote host closed the connection)
[23:30:27] <pyzozord> I see, thanks. Sorry, I opened the wiki page before asking, but couldn't find the answer fast. I'll spend more time skimming through wiki page next time
[23:31:12] <mrig> pyzozord: How this for an idea, an 8 or 16 bit terminal for the fun, with pixels rather than blocks?
[23:31:14] <edgar-rft> pyzozord: no worries, unicode can be a *huge* source of confusion :-)
[23:31:34] <mrig> for terminal activity and retro gaming.
[23:31:36] <pulse> you know why it's called unicode, because unicorns made it
[23:31:49] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4)
[23:32:20] <mrig> pulse: I thought it may have been the case, but did not dare to ask: I'm so very glad that you've confirmed that for me.
[23:32:44] <pulse> my sources are the elders of the internet themselves
[23:32:53] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4) (Client Quit)
[23:32:53] <quippy> you know the Elders of the Internet?!
[23:32:59] <quippy> Can you put in a good word for me?
[23:33:04] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4)
[23:33:07] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4) (Client Quit)
[23:33:16] <pulse> i'm gonna have to climb the big ben again but sure
[23:33:17] <mrig> Well I am not one to argue with such wisdom, as the elders of the iterweebs.
[23:33:21] <GeDaMo> The unicorn is the national animal of Scotland :|
[23:33:26] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4)
[23:33:31] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4) (Client Quit)
[23:33:33] <pulse> GeDaMo, that explains ... things
[23:33:38] <Macuser> ok i cleaned it up but still getting 0's in my msecs variable https://bpa.st/GG6Q
[23:33:39] <bayaz> Title: View paste GG6Q 
[23:34:10] *** Joins: vysn (~vysn@user/vysn)
[23:34:10] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4)
[23:34:31] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[23:35:17] <pulse> wow, haven't seen that style of argument definition in a while
[23:35:22] <Macuser> lol
[23:35:29] <Macuser> it's open source code from early 200s
[23:35:30] <Macuser> 2000s*
[23:37:01] <pyzozord> huh, so malloc(UINT_MAX * sizeof(SDL_Surface*)) is not a good idea right? I wanted to create cache for all rendered unicode glyphs
[23:37:38] <pyzozord> I says that is 34359738360 bytes
[23:37:52] <pulse> that's not a good idea
[23:38:05] <pulse> create a buffer
[23:38:43] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[23:38:43] <InPhase> pyzozord: Try a dictionary type cache...
[23:38:57] <pyzozord> yeah I think I'll be forced into making a hashmap
[23:39:15] <InPhase> pyzozord: And maybe size cap it.
[23:39:16] <GeDaMo> https://en.wikipedia.org/wiki/Texture_atlas
[23:39:16] <bayaz> Title: Texture atlas - Wikipedia 
[23:39:43] <pulse> i want a shirt of that https://upload.wikimedia.org/wikipedia/commons/6/6b/Texture_Atlas.png
[23:39:44] <bayaz> Type: image/png Size: 290.0 kB 
[23:40:00] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:40:08] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[23:40:52] *** Joins: yulian (~yulian@user/daegalus)
[23:40:59] <pyzozord> Texture atlas or a hashmap of textures I think that doesn't really matter. single atlas saves on the repeated texture metadata but that's not a lot
[23:41:00] *** Joins: Enitin (~Enitin@82.102.22.84)
[23:41:23] <pyzozord> the big problem is that's much more work than I hoped. I hoped I can get by with a fake hashmap imitated by a simple array
[23:42:26] <pyzozord> Hmm I guess I can just cache first say 65k glyphs and render rest dynamically for now
[23:42:48] *** yulian is now known as daegalus
[23:44:38] <pyzozord> I guess that's what everyone does, right? They just page in and page out glyph cache pages because it's not possible to keep acche of all uniceode glyph textures in memory?
[23:46:38] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[23:47:05] *** Quits: raj (uid72176@user/raj) (Quit: Connection closed for inactivity)
[23:47:33] <InPhase> pyzozord: Also, there are not 4 billion codepoints.  There are 1114112 codepoints in the unicode code space.
[23:48:06] *** Joins: Cashlin (~hp@user/cashlin)
[23:48:11] <InPhase> pyzozord: That's still a lot to store, since you will almost always not need it all.  So a hashmap is probably still the right choice.
[23:48:35] <vdamewood> InPhase: Are you including U+0000?
[23:48:35] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:48:48] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:48:57] <KillerWasp> 🥐
[23:49:07] <pyzozord> The ultimate solution woudl  be probably a hashmap of of atlases to have "pages" so to speak
[23:49:08] <InPhase> vdamewood: Better than that, I'm grabbing the standard value all over the Internet.  ;)
[23:49:31] *** Joins: webNET4 (~0x100@32.211.211.39)
[23:49:34] <vdamewood> InPhase: Ah, I typed 0x10FFFF into python and it gave me 114111
[23:50:07] <KillerWasp> It's pure chance that everyone is talking about unicodes when I bring one.
[23:50:10] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:50:16] <InPhase> Checks out then.  Paragraph 2 contains it:  https://en.wikipedia.org/wiki/Code_point
[23:50:17] <bayaz> Title: Code point - Wikipedia 
[23:50:41] <wedr> unicodes the bane of existence when attempting to write an article about it.
[23:51:04] <wedr> how code points are related to one another and explaining the details that I would get wrong, and such
[23:51:54] <webNET4> case mapping makes me want to hurl
[23:51:56] <InPhase> Unicode is certainly a lot more complicated than what we want to be dealing with for this issue.  But, it didn't create all of the problems it's trying to solve.
[23:52:11] <InPhase> It only created some of the problems it then has to solve.
[23:52:42] <vdamewood> InPhase: What are examples of problems that Unicode created?
[23:52:56] <pyzozord> Yeah there is intrinsic complexity in localization. People around the world do things differently in different ways
[23:53:02] <InPhase> Perhaps someday a cleaner approach will be designed and we'll get Twonicode or something.
[23:53:19] <vdamewood> *Duocode
[23:53:32] <pulse> multicode
[23:53:33] <InPhase> vdamewood: UTF-16.
[23:53:43] <InPhase> vdamewood: This should have never existed...
[23:53:59] <vdamewood> InPhase: UTF-8 and UTF-32 only?
[23:54:03] <InPhase> Yes.
[23:54:42] <pulse> utf-4 for some of us
[23:54:47] <InPhase> vdamewood: Also, I'm not sure that modifier code points should exist.  It might have been a better idea to just expand the space with the modifiers applied to alternate code points.
[23:54:50] <vdamewood> But, but, but... In UTF-16 the biggest a single codepoint can get is four bytes. As opposed to UTF-8 where the biggest is... four bytes.
[23:55:26] *** Joins: lunarkitty (uid501895@user/pyra)
[23:56:12] <vdamewood> Modifier code points?
[23:56:29] *** BenLand100 is now known as Treebeard
[23:56:37] <vdamewood> Is this a separate thing from combining diacritics?
[23:56:39] *** Treebeard is now known as BenLand100
[23:56:49] <InPhase> vdamewood: I mean specifically the combining ones, yes.
[23:58:23] <vdamewood> Just the Latin (Or LGC) ones, or all languages'?
[23:58:44] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 244 seconds)
[23:58:53] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[23:59:18] *** Joins: inky_ (~inky@46.162.252.15)
[23:59:29] <GeDaMo> U⃣ U+20E3 combining enclosing keycap
[23:59:44] <InPhase> vdamewood: Basically, it would be nice if there were a one-to-one mapping between codepoints and what's displayed.
[23:59:49] *** Joins: flynn (~mcbloch@user/flynn)
