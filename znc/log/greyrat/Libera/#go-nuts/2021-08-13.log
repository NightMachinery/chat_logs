[00:11:22] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[00:13:56] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[00:14:47] <j416> it's me
[00:16:27] <Tv_> mario?
[00:17:37] <j416> was going for that song
[00:17:47] <ikke> you're looking for?
[00:17:54] <j416> lol
[00:18:12] <j416> (no)
[00:18:45] <Tv_> i wish i could find that one parody video...
[00:18:49] <j416> goes like, hello-- it's me--
[00:19:28] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:21:26] <Tv_> this is not it, but it shall pass: https://www.youtube.com/watch?v=PTcTt-mfN6Y
[00:23:23] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[00:25:01] *** Joins: jinie (~jimmy@188.114.173.37)
[00:25:36] <j416> reminds me of that guy who sent a tweet to get tp and someone came to the rescue XD
[00:25:45] *** Joins: dr0n (~mnxaw@94.11.23.235)
[00:27:33] *** Quits: l2dy (~l2dy@user/l2dy) (Ping timeout: 268 seconds)
[00:27:51] *** Joins: l2dy (~l2dy@user/l2dy)
[00:30:12] <ikke> Was just reading this: https://mosh.org/elevator.txt
[00:36:09] <j416> should see if it's possible to e-mail or text for help should something similar happen. ty.
[00:48:08] <Tv_> j416: the modern bay area variant of that would be ordering TP via doordash
[00:48:36] <j416> I'm so out of the bay area loop.
[00:49:07] <Tv_> basically gig worker peasants pleasing the upper class
[00:49:46] <j416> looks like something similar to uber eats or foodora
[00:50:08] <foobaz> ikke: i've used mosh for years, i recommend it highly
[00:50:11] <j416> (companies that operate around here)
[00:51:07] <foobaz> it's noticeably smoother than SSH even over local wifi, and the auto-reconnect is great
[00:51:53] <ikke> foobaz: I use it right now
[00:52:31] <Tv_> i can't find the video conveniently publicly online right now, but... there was this one time i got a call in the elevator
[00:52:40] <Tv_> that is, the elevator answered the call, on the speakers
[00:53:02] <Tv_> turns out their "emergency call" phones are just regular phones, and a spammer called all the possible numbers in the area code
[00:53:37] <Tv_> biggest disappointment was that the robocall prompted me to press 1, and the button for floor 1 did not work
[00:53:41] <j416> Tv_: lol
[00:59:33] <Tv_>  note to pranksters: access your elevator engine room, find the phone number written down somewhere in there, call and make "funny" noises
[01:05:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[01:05:58] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[01:07:12] *** Joins: fikran (~fikran@user/fikran)
[01:08:53] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[01:11:47] *** Quits: bkircher (~bkircher@2001:a61:24b0:5701:f9c:7cbd:1cf5:28fe) (Ping timeout: 245 seconds)
[01:19:37] *** Quits: samhza (sam@2600:3c03::f03c:92ff:fe40:814c) (Read error: Connection reset by peer)
[01:19:50] *** Joins: samhza (~sam@samhza.com)
[01:20:04] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[01:21:49] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 268 seconds)
[01:21:54] *** Quits: arcanez (~arcanez@warpedreality.org) (Ping timeout: 240 seconds)
[01:23:23] *** Joins: arcanez (~arcanez@warpedreality.org)
[01:23:40] *** Joins: independent56 (~independe@22.red-193-153-27.dynamicip.rima-tde.net)
[01:24:26] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[01:31:26] *** Quits: revolve_ (~u0_a227@82-132-235-4.dab.02.net) (Ping timeout: 256 seconds)
[01:32:44] *** Joins: revolve (~u0_a227@82-132-214-254.dab.02.net)
[01:34:27] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:c93d:fe46:5674:f4ee) (Remote host closed the connection)
[01:34:54] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:c93d:fe46:5674:f4ee)
[01:36:02] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:c93d:fe46:5674:f4ee) (Remote host closed the connection)
[01:36:31] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:c93d:fe46:5674:f4ee)
[01:37:57] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:c93d:fe46:5674:f4ee) (Remote host closed the connection)
[01:38:01] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[01:38:12] <Vigdis> Hi, I've a cli tool for which I would like to use some goroutines. Since fmt isn't safe, I'm thinking about switching to log.New(os.Stdout...). Because of that I'm playing with dependency injection. I have this https://play.golang.org/p/PV8XcYNvlDK. Is there any way to log.New() only once in the code without using a package variable?
[01:38:36] *** Quits: sully42 (~textual@2601:3cb:7f:c096:45dc:498b:b851:3d59) (Quit: Textual IRC Client: www.textualapp.com)
[01:38:42] *** Joins: kiril (~kiril@85.91.153.163)
[01:40:25] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 248 seconds)
[01:40:53] <b0nn> Vigdis: you are calling .New() every time you write a message
[01:40:56] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[01:41:18] <Sam> Call log.New in main and pass the resulting logger down into whatever adapter, application, etc. needs it
[01:41:24] <Vigdis> b0nn,  yes exactly, I would like to avoid it
[01:41:37] <b0nn> I mean, when you /create/ the instance that you are injecting I would have thought would have been a more appropriate place to call .New()
[01:42:30] <b0nn> You have two choices: 1) Calculate every time (current solution) or 2) Store the value
[01:43:08] *** Quits: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[01:43:38] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:44:12] <Vigdis> yeah but I don't see/understand how to do it
[01:44:22] *** Joins: toretto_ (~ryan@45.15.16.60)
[01:44:33] *** Joins: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de)
[01:44:42] <Vigdis> (I'm very new to dependency injection so stuff seems very unusual for me)
[01:45:56] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Read error: Connection reset by peer)
[01:46:00] <seebs> Well, what *owns* the value? Something, somewhere, is the thing that needs to know how it is logging. Maybe it's the package, in which case it'd be a package variable. Maybe the package is used by starting with NewSomething(), and then the Something should be what has a reference to a logger stored in it.
[01:46:05] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[01:46:20] *** Quits: toretto (~ryan@user/toretto) (Ping timeout: 272 seconds)
[01:47:00] <b0nn> Vigdis: You're trying to avoid a "Package variable" but you need something to store the information
[01:47:12] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Remote host closed the connection)
[01:47:13] <Sam> You can use a trick called 'currying' to do this. The idea is that you create a function that takes a logger as an argument and returns a log adapter that uses that logger. Something like this: https://play.golang.org/p/5Sn1IdE5tco
[01:47:25] <seebs> Although I'm not totally sure what you mean by "fmt isn't safe".
[01:47:27] <Sam> Although, you could also just change your interface to have a "Print" function and not have to adapt the logger at all.
[01:47:28] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:47:54] <Sam> Or use the concrete logger without an interface, it's not entirely clear to me why the Logger interface exists
[01:50:06] <b0nn> Hrm, the thing with DI is, you have a type (package level, but not necessarily for the package..) and you inject into it the things that that type needs to be able to work (a logger in this case)
[01:50:37] <Vigdis> Sam, thanks that looks like something I want. I'm trying to understand it right now :)
[01:51:11] <Vigdis> seebs, it's concurrency safe afaik, so if two goroutines call fmt.Print() the text can get mangled
[01:51:17] <b0nn> So, in your main (or tests, or where someone is using your type exclusively) you say .. these are the instances of the dependencies you need to run
[01:52:06] <b0nn> and you instantiate them (calling .New()) so that they are ready for the type to use
[01:52:32] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[01:54:23] <Vigdis> Sam, "it's not entirely clear to me why the Logger interface exists" fwiw, the code I gave is mostly from https://github.com/learning-go-book/dependency_injection_example/blob/main/di.go (I removed the DataStore related code to simplify it)
[01:54:59] <Sam> I see, fair enough
[01:57:51] <seebs> Where are you seeing this information that text can get mangled if two goroutines call fmt.Print()?
[01:58:13] <seebs> The docs usually say something in some direction about things being safe or unsafe to use from multiple goroutines, where that would make sense.
[01:58:55] <b0nn> https://github.com/fmtlib/fmt/issues/1348
[01:59:28] <b0nn> oh hrm, is that Go
[01:59:31] <Sam> seebs: the convention is that things are unsafe unless otherwise noted in the docs. Unlike some languages, Go's fmt library is unbuffered and doesn't do any locking for the global functions
[02:00:38] <ikke> b0nn: that's c++
[02:00:41] <Sam> (this is why you'll find people all over the internet complaining that repeatedly calling fmt.Print to stdout is way slower in Go than <their favorite language>, but if you throw a bufio.Writer in there it will generally be on par with whatever they were using)
[02:01:07] <ikke> or C
[02:02:48] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[02:04:48] *** pez_ is now known as pez
[02:06:56] <foobaz> it's nice not needing to call fflush for debugging
[02:07:13] <foobaz> so much about go was designed for printf debugging
[02:07:36] *** Joins: alyx (alyx@atheme/alyx)
[02:08:28] <seebs> i mean, empirically, i've not previously heard of any problems with lack of locking between the global functions, because they all end up doing single writes to stdout or whatever, and thus, they write-or-don't-write a thing at a time.
[02:08:55] <seebs> although possibly that's only true with Printf, etc, and Print() or Println() don't handle it as well.
[02:12:45] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:23:17] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[02:25:06] *** Joins: jinie (~jimmy@188.114.173.37)
[02:29:16] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:36:25] *** Quits: khrbt (~znc@2601:646:8600:2f6:3fa:485d:475e:2130) (Changing host)
[02:36:25] *** Joins: khrbt (~znc@user/khrbt)
[02:46:07] <Tv_> none of those handle it, all you need is kernel write(2) to report short write. `go fmt.Println("foo"); go fmt.Println("bar")` can output e.g. `foboar\n\n` perfectly legally
[02:46:46] <Tv_> in practice, your writes would have to be >512 bytes at least to trigger that in "normal circumstances"
[02:47:11] <Tv_> but lmao if you rely on parsing output of concurrent fmt.Prints somewhere in a large/busy system
[02:47:12] *** Joins: hexfive (~eric@50.35.83.177)
[02:47:16] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[02:47:54] <Tv_> log adds a mutex on top to make sure write syscalls from one logical write don't get interleaved with other logical writes
[02:48:29] <Tv_> typically people shoot their foot with this mechanism when it's not os.Stdout but a net.Conn, those are much more eager to do short writes
[02:48:43] <Tv_> (got 1 byte of space left in your kernel tcp buffer? you'll be making a 1-byte write)
[02:52:19] *** Quits: GJdan (~quassel@107-190-25-75.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:54:41] *** Joins: GJdan (~quassel@107-190-25-75.cpe.teksavvy.com)
[02:57:37] *** Quits: independent56 (~independe@22.red-193-153-27.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[03:01:32] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[03:04:14] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:09:29] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 248 seconds)
[03:14:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[03:16:35] *** Joins: fikran (~fikran@user/fikran)
[03:18:19] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:18:45] *** Quits: Guest84 (~Guest84@2406:3003:2006:447e:9d85:ae5b:bc5f:9191) (Quit: Client closed)
[03:20:12] *** Quits: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de) (Quit: Ping timeout (120 seconds))
[03:20:23] *** Joins: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de)
[03:21:15] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:21:32] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[03:22:29] <seebs> that's a good point, yeah. in practice it is usually better to have some sort of locking in place, yes.
[03:22:44] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[03:25:55] <b0nn> hrm, isn't the channel supposed to be used for this
[03:26:01] *** Quits: rschmied (~huh@HSI-KBW-109-193-238-226.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 248 seconds)
[03:26:17] <b0nn> that is, it provides a buffer that is locked
[03:26:19] *** Joins: rschmied (~huh@HSI-KBW-109-193-238-226.hsi7.kabel-badenwuerttemberg.de)
[03:26:31] <b0nn> hrm, but it's not going to stop interleaved writed
[03:26:36] <b0nn> writes*
[03:27:16] <Tv_> having an extra goroutine just for the sake of mutual exclusion is silly, it costs a *lot* more than a mutex
[03:27:45] <b0nn> if the producer fills its own buffer /first/ and then tells the consumer (fmt) to read from that buffer, then that can be handled via the goroutine
[03:27:47] <Tv_> the one benefit might be if you specifically want delayed processing, but for e.g. output that makes debugging.. interesting
[03:27:57] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[03:28:16] <Tv_> b0nn: if the channel transports logical writes, and has a single receiver, it solves interleaved writes
[03:28:17] <b0nn> If it's just willy nilly throw stuff at fmt and expect it to behave, then, ofcourse, fmt is going to interleave prints
[03:29:00] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[03:29:09] *** Joins: gggpkm_ (~gggpkm@123.113.188.221)
[03:30:56] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[03:32:53] *** Quits: jsrnop (~mark@user/jsrnop) (Read error: Connection reset by peer)
[03:33:18] *** Joins: jsrnop (~mark@user/jsrnop)
[03:43:22] *** Joins: milosz__ (~milosz@user/milosz)
[03:45:03] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[03:45:40] *** Joins: Atque (~Atque@user/atque)
[03:47:21] *** Quits: rschmied (~huh@HSI-KBW-109-193-238-226.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 268 seconds)
[03:47:21] *** Quits: milosz_ (~milosz@user/milosz) (Ping timeout: 248 seconds)
[03:47:41] *** Joins: rschmied (~huh@HSI-KBW-109-193-238-226.hsi7.kabel-badenwuerttemberg.de)
[03:48:57] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 248 seconds)
[03:56:04] *** Joins: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e)
[04:00:02] *** Joins: toretto (~ryan@ca1-1.azirevpn.net)
[04:02:30] *** Quits: toretto_ (~ryan@45.15.16.60) (Ping timeout: 272 seconds)
[04:10:10] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:15:12] *** Quits: normen (~normen@p200300d7173dc9009dbf9647cbf37970.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:19:01] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:21:37] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[04:22:39] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[04:23:11] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[04:24:33] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (Ping timeout: 252 seconds)
[04:24:33] *** Quits: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb) (Ping timeout: 252 seconds)
[04:24:34] *** Quits: dngray[m] (~dngray@user/dngray) (Ping timeout: 240 seconds)
[04:24:41] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (Ping timeout: 258 seconds)
[04:24:42] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Ping timeout: 245 seconds)
[04:24:58] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (Ping timeout: 240 seconds)
[04:24:58] *** Quits: freswa[m] (~freswa@2001:470:69fc:105::c1ec) (Ping timeout: 240 seconds)
[04:25:08] *** Joins: jinie (~jimmy@188.114.173.37)
[04:25:11] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Ping timeout: 268 seconds)
[04:25:12] *** Quits: kadoban (~kadoban@user/kadoban) (Ping timeout: 268 seconds)
[04:25:14] *** Quits: TcM1911 (~tcm1911@2001:470:69fc:105::3649) (Ping timeout: 268 seconds)
[04:25:14] *** Quits: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1) (Ping timeout: 268 seconds)
[04:25:15] *** Quits: dpatterbee[m] (~dpatterbe@2001:470:69fc:105::3f9e) (Ping timeout: 276 seconds)
[04:25:15] *** Quits: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019) (Ping timeout: 276 seconds)
[04:25:16] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (Ping timeout: 276 seconds)
[04:25:18] *** Quits: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e) (Ping timeout: 272 seconds)
[04:25:22] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Ping timeout: 240 seconds)
[04:25:23] *** Quits: keeganza (~keeganza@2001:470:69fc:105::c842) (Ping timeout: 272 seconds)
[04:25:39] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 252 seconds)
[04:25:48] *** Quits: worr (~worr@2001:470:69fc:105::78c) (Ping timeout: 268 seconds)
[04:25:48] *** Quits: dung[m] (~dungbrocc@2001:470:69fc:105::d25b) (Ping timeout: 268 seconds)
[04:25:48] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 268 seconds)
[04:25:56] *** Quits: dec (~dec@2001:470:69fc:105::3204) (Ping timeout: 272 seconds)
[04:26:00] *** Quits: phoenix[m]12 (~phoenixma@2001:470:69fc:105::f9b) (Ping timeout: 272 seconds)
[04:26:00] *** Quits: mambang[m] (~mambang@user/mambang) (Ping timeout: 272 seconds)
[04:30:00] *** Quits: jdrab (~jdrab@user/jdrab) (Quit: jdrab)
[04:32:16] *** Quits: gggpkm_ (~gggpkm@123.113.188.221) (Read error: Connection reset by peer)
[04:36:23] *** Joins: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1008.inf6.spectrum.com)
[04:43:14] *** Quits: zwr (~zwr@2804:d45:b966:fb00:35a2:8b7b:d9fb:abe4) (Remote host closed the connection)
[04:45:00] *** Joins: kadoban (~kadoban@user/kadoban)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:23] *** Quits: gst (~gst@gateway/tor-sasl/gst) (Remote host closed the connection)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:44] *** Joins: gst (~gst@gateway/tor-sasl/gst)
[04:50:55] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[04:53:26] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[04:55:43] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[05:03:43] *** Joins: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1)
[05:07:17] *** Joins: TcM1911 (~tcm1911@2001:470:69fc:105::3649)
[05:08:46] *** Joins: bpalmer (~user@user/bpalmer)
[05:11:50] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:18:08] *** Joins: Torr (~Torr@user/torr)
[05:19:46] *** Joins: dngray[m] (~dngray@user/dngray)
[05:20:33] <Vigdis> Sam, I eventually understood what you meant, and indeed it's much simpler/better https://play.golang.org/p/8T9fewrYaHL thanks!
[05:20:55] <Vigdis> at least it's good to know how to hack around if needed haha
[05:24:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[05:25:56] *** Joins: fikran (~fikran@user/fikran)
[05:28:10] <Sam> Glad I could be of service. You could simplify even more by removing the interface altogether if it's not needed :)
[05:36:18] *** Joins: yvehan (~yvehan@14.21.31.50)
[05:36:59] <Vigdis> isn't its purpose to make sure that if it's ever get replaced, the new one will need to match it?
[05:37:46] <Sam> Is that likely to happen or are you planning on replacing it immediately? To me that sounds like a premature optimization.
[05:38:17] *** Joins: f8l12 (~f8l12@154.3.40.16)
[05:40:23] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[05:40:24] <Vigdis> right
[05:40:25] <Vigdis> people sell the idea of DI with among other things "if you ever need to change a dep, it will be easy" but I guess it's not the most important point of DI
[05:42:29] *** Joins: psydroid (~psydroid@user/psydroid)
[05:45:16] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[05:47:28] *** Joins: c10l (~c10l@89.34.167.207)
[05:48:42] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:58:32] <b0nn> it puts into the users hands the ability to select which implementation to use
[05:58:55] <b0nn> that is, if I use a lib that has a di for the logger I can choose which logger to use
[05:59:30] <b0nn> I as the developer of said lib will be doing that often -prod, and testing
[06:00:36] <b0nn> Another example is DB, unit tests I will be injecting my mocked DB, prod I will be using whatever
[06:02:46] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[06:03:07] *** Joins: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019)
[06:04:38] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[06:05:24] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[06:08:17] <Vigdis> yeah testing will be easier once I can inject what I want
[06:09:15] <Vigdis> b0nn, "I as the developer of said lib" do you put some interfaces to ensure the dep is right?
[06:11:04] <b0nn> I use DI a lot, yes
[06:11:08] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[06:11:23] <b0nn> And yes, I put interfaces into structs to allow me to DI
[06:12:07] <b0nn> In fact, I also create interfaces specifically to allow me to DI up/down stream services
[06:12:49] *** Joins: toretto_ (~ryan@45.15.16.60)
[06:13:45] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:13:47] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[06:15:32] *** Quits: toretto (~ryan@ca1-1.azirevpn.net) (Ping timeout: 245 seconds)
[06:16:07] *** Joins: normen (~normen@p200300d7173dc9009dbf9647cbf37970.dip0.t-ipconnect.de)
[06:20:52] <Vigdis> thanks for your input, I'll experiment with this :)
[06:21:38] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[06:23:14] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[06:25:11] *** Joins: jinie (~jimmy@188.114.173.37)
[06:25:29] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[06:25:36] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Client Quit)
[06:25:51] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[06:26:19] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[06:28:08] *** Joins: keeganza (~keeganza@2001:470:69fc:105::c842)
[06:30:18] *** Joins: freswa[m] (~freswa@2001:470:69fc:105::c1ec)
[06:30:23] *** Quits: normen (~normen@p200300d7173dc9009dbf9647cbf37970.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:32:21] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:4692:e3ec:239c:8c8)
[06:34:50] *** Quits: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1008.inf6.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:38:46] *** Quits: dr0n (~mnxaw@94.11.23.235) (Ping timeout: 268 seconds)
[06:39:57] *** Joins: dpatterbee[m] (~dpatterbe@2001:470:69fc:105::3f9e)
[06:41:06] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 276 seconds)
[06:41:15] *** Joins: worr (~worr@2001:470:69fc:105::78c)
[06:43:11] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:4692:e3ec:239c:8c8) (Quit: Leaving)
[06:48:38] *** Joins: dung[m] (~dungbrocc@2001:470:69fc:105::d25b)
[06:49:19] *** Joins: toretto (~ryan@ca1-1.azirevpn.net)
[06:51:28] *** Joins: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e)
[06:52:10] *** Quits: toretto_ (~ryan@45.15.16.60) (Ping timeout: 256 seconds)
[06:54:59] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[07:04:10] *** Joins: normen (~normen@p200300d7173dc9009dbf9647cbf37970.dip0.t-ipconnect.de)
[07:05:43] *** Joins: mambang[m] (~mambang@user/mambang)
[07:09:43] *** Joins: phoenix[m]12 (~phoenixma@2001:470:69fc:105::f9b)
[07:11:22] *** Quits: toretto (~ryan@ca1-1.azirevpn.net) (Changing host)
[07:11:22] *** Joins: toretto (~ryan@user/toretto)
[07:14:55] *** Joins: dec (~dec@2001:470:69fc:105::3204)
[07:19:59] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:25:15] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:39d6:13ef:a38:99f9)
[07:28:41] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c16:33c3:1bd1:6273) (Ping timeout: 252 seconds)
[07:30:12] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[07:33:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 272 seconds)
[07:35:18] *** Joins: fikran (~fikran@user/fikran)
[07:38:38] *** Quits: normen (~normen@p200300d7173dc9009dbf9647cbf37970.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:42:18] *** Quits: plujon (~user@24.16.249.105) (Ping timeout: 268 seconds)
[07:43:30] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 276 seconds)
[07:50:26] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[07:57:06] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 268 seconds)
[07:58:01] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Quit: Leaving)
[07:58:57] *** Quits: blinux (~blinux@pool-108-51-228-58.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[08:01:38] *** Quits: revolve (~u0_a227@82-132-214-254.dab.02.net) (Read error: Connection reset by peer)
[08:02:52] *** Joins: revolve (~u0_a227@82-132-227-191.dab.02.net)
[08:09:00] *** Joins: Atque (~Atque@user/atque)
[08:23:36] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[08:25:15] *** Joins: jinie (~jimmy@188.114.173.37)
[08:32:53] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[08:33:08] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[08:35:32] *** Quits: yvehan (~yvehan@14.21.31.50) (Ping timeout: 272 seconds)
[08:36:30] *** Joins: yvehan (~yvehan@117.136.79.155)
[08:40:14] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:7930:9c9c:37af:1eb)
[08:41:47] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:39d6:13ef:a38:99f9) (Ping timeout: 245 seconds)
[08:46:14] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:4464:8eb7:6efa:bba9)
[08:50:02] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:7930:9c9c:37af:1eb) (Ping timeout: 256 seconds)
[08:57:45] *** Quits: yelnah (~felix@220.240.69.167) (Ping timeout: 248 seconds)
[08:57:51] *** Joins: ofh (~felix@2001:44b8:309b:14b:6f0:21ff:fe3c:d4d7)
[08:59:59] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[09:03:29] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Client Quit)
[09:04:18] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[09:18:02] *** Quits: yvehan (~yvehan@117.136.79.155) (Read error: Connection reset by peer)
[09:18:22] *** Joins: yvehan (~yvehan@183.14.28.32)
[09:20:58] *** Quits: LiftLeft (~LiftLeft@212.102.58.168) (Ping timeout: 268 seconds)
[09:22:17] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[09:23:58] *** Quits: ofh (~felix@2001:44b8:309b:14b:6f0:21ff:fe3c:d4d7) (Quit: ZNC 1.8.2 - https://znc.in)
[09:24:09] *** Joins: yelnah (~felix@2001:44b8:309b:14b:6f0:21ff:fe3c:d4d7)
[09:24:34] *** Joins: codebam (~codebam@user/codebam)
[09:25:08] *** Joins: hikhvar796073809 (~thelounge@x4dbdabab.dyn.telefonica.de)
[09:25:32] *** Quits: hikhvar796073809 (~thelounge@x4dbdabab.dyn.telefonica.de) (Read error: Connection reset by peer)
[09:25:41] *** Joins: hikhvar796073809 (~thelounge@x4dbdabab.dyn.telefonica.de)
[09:28:16] *** Quits: thing (~thing@user/thing) (Ping timeout: 244 seconds)
[09:33:15] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[09:34:15] *** Joins: flynn (~mcbloch@user/flynn)
[09:34:50] *** Joins: LiftLeft (~LiftLeft@154.21.28.54)
[09:36:11] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[09:40:12] *** Joins: ztx (~ztx@user/ztx)
[09:42:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[09:44:40] *** Joins: fikran (~fikran@user/fikran)
[09:45:26] *** Quits: yvehan (~yvehan@183.14.28.32) (Read error: Connection reset by peer)
[09:49:16] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:54:09] *** Joins: netsan (~netsan@user/netsan)
[09:55:36] *** Joins: arcatech (~arcatech@user/arcatech)
[10:03:57] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[10:08:41] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 248 seconds)
[10:21:53] *** Joins: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net)
[10:22:00] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:4464:8eb7:6efa:bba9) (Read error: Connection reset by peer)
[10:23:34] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[10:23:51] *** Quits: LiftLeft (~LiftLeft@154.21.28.54) (Ping timeout: 268 seconds)
[10:25:19] *** Joins: jinie (~jimmy@188.114.173.37)
[10:27:06] *** Quits: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net) (Remote host closed the connection)
[10:27:25] *** Joins: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net)
[10:28:10] *** Joins: bkircher (~bkircher@2001:a61:24b0:5701:f9c:7cbd:1cf5:28fe)
[10:31:24] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[10:31:46] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[10:32:11] *** Quits: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net) (Remote host closed the connection)
[10:32:35] *** Joins: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net)
[10:33:19] *** Joins: dr0n (~dr0n@94.11.23.235)
[10:35:35] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 268 seconds)
[10:39:24] *** Quits: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[10:39:55] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[10:46:18] *** Joins: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net)
[10:52:16] *** Quits: toretto (~ryan@user/toretto) (Ping timeout: 272 seconds)
[10:54:45] *** Joins: shka (~herr@109.231.62.239)
[10:59:15] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[11:00:21] *** Joins: toretto (~ryan@ca1-1.azirevpn.net)
[11:01:44] *** Joins: oxum (~oxum@122.172.62.99)
[11:04:04] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[11:04:30] *** Quits: hgl- (hgl@67.230.181.248.16clouds.com) (Remote host closed the connection)
[11:04:49] *** Joins: hgl (hgl@67.230.181.248.16clouds.com)
[11:05:17] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[11:05:24] *** Joins: oxum (~oxum@122.172.62.99)
[11:05:46] *** Joins: novns (~novns@user/novns)
[11:06:46] *** Quits: novns (~novns@user/novns) (Client Quit)
[11:07:15] *** Quits: khyr0n (~khyr0n@2806:2f0:9140:ecb1:1979:68d6:902:2297) (Quit: Leaving)
[11:07:16] *** Joins: novns (~novns@user/novns)
[11:07:26] *** Joins: khyr0n (~khyr0n@2806:2f0:9140:ecb1:1979:68d6:902:2297)
[11:07:47] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[11:08:53] *** Quits: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net) (Ping timeout: 268 seconds)
[11:09:41] *** Joins: oxum (~oxum@122.172.62.99)
[11:09:49] *** Joins: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net)
[11:14:13] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[11:14:28] *** Quits: teasea (~teasea@user/teasea) (Quit: teasea)
[11:14:52] *** Joins: teasea (~teasea@user/teasea)
[11:17:31] *** Joins: mrig (~mrig@user/mrig)
[11:20:48] *** Joins: oxum (~oxum@122.172.62.99)
[11:23:22] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[11:30:30] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:30:37] *** Joins: oxum (~oxum@122.172.62.99)
[11:30:49] *** Quits: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net) (Ping timeout: 248 seconds)
[11:37:09] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[11:37:10] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[11:38:02] *** Joins: oxum (~oxum@122.172.62.99)
[11:38:05] *** Joins: jinie (~jimmy@188.114.173.37)
[11:38:13] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:40:21] *** Quits: khyr0n (~khyr0n@2806:2f0:9140:ecb1:1979:68d6:902:2297) (Quit: Leaving)
[11:42:21] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[11:42:46] *** Joins: gggpkm (~gggpkm@114.245.111.216)
[11:43:50] *** Joins: oxum (~oxum@122.172.62.99)
[11:43:59] *** Joins: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net)
[11:44:17] *** Joins: khyr0n (~khyr0n@2806:2f0:9140:ecb1:1979:68d6:902:2297)
[11:45:44] *** Quits: khyr0n (~khyr0n@2806:2f0:9140:ecb1:1979:68d6:902:2297) (Client Quit)
[11:45:54] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[11:45:57] *** Joins: khyr0n (~khyr0n@2806:2f0:9140:ecb1:1979:68d6:902:2297)
[11:47:06] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[11:47:17] *** Joins: oxum (~oxum@122.172.62.99)
[11:52:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[11:54:02] *** Joins: fikran (~fikran@user/fikran)
[11:58:43] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[12:00:52] *** Joins: oxum (~oxum@122.172.62.99)
[12:05:58] *** Joins: sizeof_void34 (~Thunderbi@109-252-75-112.nat.spd-mgts.ru)
[12:08:38] *** Quits: bkircher (~bkircher@2001:a61:24b0:5701:f9c:7cbd:1cf5:28fe) (Ping timeout: 252 seconds)
[12:12:45] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[12:13:10] *** Joins: oxum (~oxum@122.172.62.99)
[12:15:27] *** Joins: gggpkm_ (~gggpkm@221.219.68.199)
[12:18:33] *** Quits: gggpkm (~gggpkm@114.245.111.216) (Ping timeout: 268 seconds)
[12:20:30] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[12:20:44] *** Joins: bkircher (~bkircher@2001:a61:24b0:5701:f9c:7cbd:1cf5:28fe)
[12:21:02] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 268 seconds)
[12:24:33] *** Joins: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net)
[12:28:31] *** Joins: gggpkm (~gggpkm@60.10.23.162)
[12:29:48] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[12:30:33] *** Quits: gggpkm (~gggpkm@60.10.23.162) (Remote host closed the connection)
[12:30:34] *** Joins: oxum (~oxum@122.172.62.99)
[12:30:57] *** Joins: gggpkm (~gggpkm@123.113.182.84)
[12:31:08] *** Quits: gggpkm_ (~gggpkm@221.219.68.199) (Ping timeout: 258 seconds)
[12:32:37] *** Quits: independent56 (~independe@94.red-88-26-107.staticip.rima-tde.net) (Ping timeout: 245 seconds)
[12:37:56] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[12:40:56] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[12:41:06] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Changing host)
[12:41:06] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[12:41:23] *** Quits: gggpkm (~gggpkm@123.113.182.84) (Ping timeout: 268 seconds)
[12:44:33] *** Quits: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net) (Ping timeout: 258 seconds)
[12:46:18] *** Quits: dr0n (~dr0n@94.11.23.235) (Ping timeout: 268 seconds)
[12:46:47] <j416> fwiw, I've had most luck with abstracting types that _I_ own into interfaces and writing mocks for those, rather than mocking third-party types.
[12:47:17] *** Joins: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net)
[12:49:26] <j416> ah, that conversation was hours ago.
[12:49:28] <j416> Vigdis: ^
[12:50:02] *** Joins: thing (~thing@user/thing)
[12:51:53] *** Quits: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net) (Ping timeout: 248 seconds)
[12:55:23] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[13:02:55] *** Joins: fef (~thedawn@user/thedawn)
[13:03:54] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[13:11:05] *** Quits: hikhvar796073809 (~thelounge@x4dbdabab.dyn.telefonica.de) (Ping timeout: 248 seconds)
[13:18:22] *** Joins: usr123 (~usr123@27.255.251.226)
[13:22:53] <usr123> https://play.golang.org/p/JH7b8aETXCz I'm trying to make my own transport. I see the Transport field is of type RoundTripper which is an interface that has RoundTrip method. But the http.Transport doesn't seem to have a RoundTrip method. So how am I able to use this as the transport for http.Client ?
[13:23:14] *** Joins: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net)
[13:23:29] <usr123> By the way, the code is from the book Go programming blueprints.
[13:26:03] *** Quits: corby (~corby@c0rby.de) (Quit: So long)
[13:26:45] *** Joins: corby (~corby@c0rby.de)
[13:27:11] *** Joins: gggpkm (~gggpkm@60.10.23.162)
[13:28:15] *** Quits: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net) (Ping timeout: 268 seconds)
[13:28:41] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[13:32:24] <nevivurn> usr123: net/http.Transport does have a RoundTrip.
[13:32:58] <nevivurn> https://pkg.go.dev/net/http#Transport.RoundTrip
[13:35:47] <usr123> nevivurn: Thanks, I was looking through the code, couldn't find it. My bad.
[13:37:45] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[13:39:27] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[13:39:41] *** Joins: jinie (~jimmy@188.114.173.37)
[13:40:32] *** Joins: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net)
[13:42:01] *** Quits: gggpkm (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[13:43:26] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Remote host closed the connection)
[14:00:50] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 252 seconds)
[14:01:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[14:01:33] *** Joins: ztx (~ztx@user/ztx)
[14:02:17] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[14:03:24] *** Joins: fikran (~fikran@user/fikran)
[14:09:58] *** Joins: gggp (~gggp@60.10.194.45)
[14:11:59] *** Joins: gggp_ (~gggp@60.10.23.162)
[14:14:52] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Remote host closed the connection)
[14:16:07] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[14:16:09] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 248 seconds)
[14:16:12] *** Quits: gggp (~gggp@60.10.194.45) (Ping timeout: 272 seconds)
[14:18:44] *** Joins: ztx (~ztx@user/ztx)
[14:21:47] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[14:23:29] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Remote host closed the connection)
[14:23:51] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[14:24:42] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[14:26:20] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Remote host closed the connection)
[14:27:31] *** Joins: gggp__ (~gggp@60.10.23.162)
[14:27:48] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[14:30:48] *** Quits: revolve (~u0_a227@82-132-227-191.dab.02.net) (Read error: Connection reset by peer)
[14:30:50] *** Quits: gggp_ (~gggp@60.10.23.162) (Ping timeout: 272 seconds)
[14:32:32] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:32:43] *** Joins: revolve (~u0_a227@82-132-229-84.dab.02.net)
[14:32:59] *** Joins: mickey (~user@user/mickey)
[14:35:00] *** Joins: oxum (~oxum@122.172.62.99)
[14:36:59] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[14:37:22] *** Joins: gggp_ (~gggp@114.245.111.216)
[14:38:15] *** Quits: iliaf (~iliaf@user/iluxa) (Ping timeout: 256 seconds)
[14:38:29] *** Quits: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[14:40:09] *** Quits: gggp__ (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[14:43:00] *** Joins: oxum (~oxum@122.172.62.99)
[14:43:11] *** Quits: netsan (~netsan@user/netsan) (Quit: Leaving)
[14:44:58] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[14:45:52] *** Quits: Arahael (~arahael@124.170.238.106) (Quit: WeeChat 2.7.1)
[14:46:50] *** Joins: arahael (~arahael@124.170.238.106)
[14:50:47] *** Joins: oxum (~oxum@122.172.62.99)
[14:50:49] *** Joins: iliaf (~iliaf@user/iluxa)
[14:59:31] *** Quits: gggp_ (~gggp@114.245.111.216) (Ping timeout: 268 seconds)
[15:00:51] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Remote host closed the connection)
[15:02:00] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[15:03:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:04:26] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[15:05:07] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[15:12:08] *** Joins: haise01 (~haise01@213-191-130-226.dsl.iskon.hr)
[15:13:12] *** Quits: revolve (~u0_a227@82-132-229-84.dab.02.net) (Read error: Connection reset by peer)
[15:13:23] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[15:15:50] *** Joins: thing (~thing@user/thing)
[15:18:27] *** Joins: oxum (~oxum@122.172.62.99)
[15:23:15] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[15:23:44] *** Joins: oxum (~oxum@122.172.62.99)
[15:26:02] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[15:28:36] *** Joins: revolve (~u0_a227@82-132-229-84.dab.02.net)
[15:33:10] *** Joins: gggp_ (~gggp@114.245.111.216)
[15:34:59] *** Quits: usr123 (~usr123@27.255.251.226) (Read error: Connection reset by peer)
[15:35:22] *** Joins: usr123 (~usr123@49.156.122.68)
[15:37:32] *** Joins: gggp__ (~gggp@221.219.67.34)
[15:37:50] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[15:39:05] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-29.prtc.net)
[15:39:19] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[15:39:44] *** Joins: jinie (~jimmy@188.114.173.37)
[15:40:49] *** Quits: gggp_ (~gggp@114.245.111.216) (Ping timeout: 268 seconds)
[15:40:50] *** Joins: jackneill (~jackneill@20014C4E1803FD00C58EA8BB64E6BF20.dsl.pool.telekom.hu)
[15:44:46] *** Joins: gggp_ (~gggp@60.10.194.45)
[15:44:52] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[15:45:54] *** Quits: thing (~thing@user/thing) (Quit: WeeChat 3.2)
[15:48:56] *** Quits: gggp__ (~gggp@221.219.67.34) (Ping timeout: 258 seconds)
[15:49:16] *** Joins: gggp (~gggp@123.113.188.221)
[15:49:44] *** Joins: thing (~thing@user/thing)
[15:50:25] *** Joins: gggp__ (~gggp@60.10.23.162)
[15:51:26] *** Joins: mickey (~user@user/mickey)
[15:51:50] *** Quits: gggp_ (~gggp@60.10.194.45) (Ping timeout: 272 seconds)
[15:52:24] *** Joins: gggp_ (~gggp@60.10.23.162)
[15:53:54] *** Quits: gggp (~gggp@123.113.188.221) (Ping timeout: 256 seconds)
[15:55:53] *** Quits: gggp__ (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[15:56:15] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Ping timeout: 268 seconds)
[15:56:28] *** Quits: jackneill (~jackneill@20014C4E1803FD00C58EA8BB64E6BF20.dsl.pool.telekom.hu) (Remote host closed the connection)
[16:00:59] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[16:03:53] *** Quits: jinie (~jimmy@188.114.173.37) (Ping timeout: 248 seconds)
[16:05:11] *** Joins: jinie (~jimmy@188.114.173.37)
[16:08:07] *** Joins: Giedrius (~giedrius@5.133.65.65)
[16:10:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[16:11:44] *** Joins: jackneill (~jackneill@20014C4E1803FD008E9D9EA17E70E997.unconfigured.pool.telekom.hu)
[16:11:52] *** Joins: gggp (~gggp@125.33.224.44)
[16:12:56] *** Quits: gggp (~gggp@125.33.224.44) (Read error: Connection reset by peer)
[16:13:06] *** Joins: fikran (~fikran@user/fikran)
[16:13:19] *** Joins: gggp (~gggp@60.10.23.162)
[16:13:27] *** Quits: gggp_ (~gggp@60.10.23.162) (Ping timeout: 245 seconds)
[16:14:20] *** Joins: gggp_ (~gggp@125.33.224.44)
[16:16:42] *** Quits: gggp_ (~gggp@125.33.224.44) (Read error: Connection reset by peer)
[16:17:45] *** Quits: gggp (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[16:19:13] *** Quits: bloony (~bloony@2a02:2121:10a:9a7a:1c13:86d4:5401:3) (Ping timeout: 258 seconds)
[16:20:01] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[16:20:36] *** Quits: jackneill (~jackneill@20014C4E1803FD008E9D9EA17E70E997.unconfigured.pool.telekom.hu) (Remote host closed the connection)
[16:20:54] *** Joins: jackneill (~jackneill@20014C4E1803FD00733C9D8926EA0383.dsl.pool.telekom.hu)
[16:21:09] *** Quits: jackneill (~jackneill@20014C4E1803FD00733C9D8926EA0383.dsl.pool.telekom.hu) (Remote host closed the connection)
[16:23:01] *** Joins: iateadonut (~dan@121.177.17.154)
[16:23:45] <iateadonut> if anyone knows a bit about aws-lambda and the http api:
[16:23:45] <iateadonut> https://stackoverflow.com/questions/68771732/cannot-post-multiple-json-objects-thru-the-aws-http-api-golang-lambda
[16:24:14] <iateadonut> i'm having htis problem where the automatic unmarshaler doesn't work when the string is sent through the http gateway
[16:37:33] *** Joins: oxum (~oxum@122.172.62.99)
[16:39:30] <GinjaNinja32> that looks _very_ odd
[16:39:44] *** Quits: oxum (~oxum@122.172.62.99) (Remote host closed the connection)
[16:40:44] <GinjaNinja32> the only thing I can think of is maybe it's doing some sort of auto-fold over the input - maybe try returning `map[string]interface{}{"echo": s}` in the simplestlambda version and see what comes back when you pass the slice?
[16:42:01] *** Joins: gggpkm (~gggpkm@60.10.23.162)
[16:42:06] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-29.prtc.net) (Quit: Client closed)
[16:42:45] <iateadonut> the problem is the UNmarshaling; the error occurs when the string is passed INTO to the function and lambda auto-unmarshals it.
[16:42:56] <iateadonut> GinjaNinja32, what do you mean it looks odd?
[16:43:01] <iateadonut> the code itself or the error?
[16:43:20] <GinjaNinja32> the fact that you get an error is odd, your scenario looks logical to me and seems like it should work
[16:43:55] <iateadonut> i actually think it's an error in the aws, but i'm not so confident in my go or aws-lambda to say that out loud.
[16:44:16] <GinjaNinja32> try the `{"echo": s}` variant of simplestlambda and see what you get back for your slice input
[16:44:34] *** Joins: oxum (~oxum@122.172.62.99)
[16:44:39] <GinjaNinja32> i'm _hoping_ you get `{"echo": [{...}]}`, but i'm not sure
[16:44:44] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[16:45:22] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[16:48:09] *** Quits: gggpkm (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[16:51:44] *** Joins: Torr (~Torr@user/torr)
[16:55:15] <iateadonut> yeah, any interface{} at all works on simplestlambda
[17:00:43] *** Joins: jinie (~jimmy@188.114.173.37)
[17:03:52] *** Quits: bkircher (~bkircher@2001:a61:24b0:5701:f9c:7cbd:1cf5:28fe) (Ping timeout: 245 seconds)
[17:05:52] *** Quits: f8l12 (~f8l12@154.3.40.16) (Ping timeout: 256 seconds)
[17:06:49] *** Quits: oxum (~oxum@122.172.62.99) (Ping timeout: 248 seconds)
[17:07:43] *** Joins: yoonkn (~user@175.197.208.79)
[17:08:19] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Remote host closed the connection)
[17:08:25] *** Joins: oxum (~oxum@171.61.214.108)
[17:09:15] *** Joins: gggpkm (~gggpkm@114.245.111.216)
[17:11:37] *** Joins: adlternative (~adl@117.32.216.71)
[17:12:10] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[17:14:17] *** Quits: h1x (~h1x@193.27.14.156) (Ping timeout: 248 seconds)
[17:15:11] *** Quits: gggpkm (~gggpkm@114.245.111.216) (Ping timeout: 268 seconds)
[17:15:12] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[17:15:36] *** Joins: Jigsy (~Jigsy@user/jigsy)
[17:16:20] *** Joins: bkircher (~bkircher@2001:a61:24b0:5701:f9c:7cbd:1cf5:28fe)
[17:21:06] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Remote host closed the connection)
[17:21:29] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[17:31:52] *** Joins: gggpkm (~gggpkm@123.113.182.84)
[17:32:04] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:33:29] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[17:34:58] *** Quits: usr123 (~usr123@49.156.122.68) (Read error: Connection reset by peer)
[17:35:22] *** Joins: usr123 (~usr123@124.253.7.193)
[17:38:39] *** Quits: gpeskens (~gpeskens@94-209-53-75.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[17:38:57] *** Joins: gpeskens (~gpeskens@94-209-53-75.cable.dynamic.v4.ziggo.nl)
[17:41:16] *** Joins: jackneill (~jackneill@20014C4E1803FD00733C9D8926EA0383.dsl.pool.telekom.hu)
[17:41:43] <j416> iateadonut: why do you need []interface{} ?
[17:43:41] <j416> the aws sdk for Go isn't all perfect
[17:44:18] <j416> I typically try to avoid its magic when possible
[17:45:14] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[17:45:44] *** Joins: c10l (~c10l@89.34.167.207)
[17:49:12] *** Quits: oxum (~oxum@171.61.214.108) (Remote host closed the connection)
[17:49:56] *** Joins: oxum (~oxum@171.61.214.108)
[17:54:10] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[17:56:41] *** Joins: oxum_ (~oxum@122.172.205.112)
[17:57:43] *** Quits: oxum (~oxum@171.61.214.108) (Ping timeout: 268 seconds)
[17:58:33] *** Joins: LiftLeft (~LiftLeft@154.21.114.116)
[18:01:05] *** Joins: olavfosse (~Guest67@2001:464c:73bf:0:fe02:6050:e273:28a7)
[18:01:44] *** Quits: Kaivo (~Kaivo@user/kaivo) (Ping timeout: 252 seconds)
[18:02:04] *** Quits: oxum_ (~oxum@122.172.205.112) (Remote host closed the connection)
[18:03:00] *** Joins: oxum (~oxum@122.172.205.112)
[18:06:35] *** Joins: Kaivo (~Kaivo@user/kaivo)
[18:09:39] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:4692:e3ec:239c:8c8)
[18:13:02] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Ping timeout: 245 seconds)
[18:13:36] <iateadonut> i'm actually using []customStruct
[18:13:59] <iateadonut> []interface{} is just there to represent the simplest code possible.
[18:14:03] <iateadonut> j416
[18:14:32] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:15:41] <iateadonut> in the original program, the user gives something like this [{url:"google",checkfor:"string"},{url:"url",checkfor:"string2"}] - and go processes it and puts in a new field that shows if that string is found on that page.
[18:16:07] <iateadonut> and all these work fine if you execute them locally or even on lambda and hit them through the 'test' GUI
[18:16:34] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[18:16:54] <j416> iateadonut: that signature isn't listed as supported; not sure why. Did you try sending a context as well?
[18:17:28] *** Joins: Monsteranik8 (~Monsteran@160.202.156.153)
[18:17:54] <j416> I don't understand if what they list are just examples, or if that's all valid forms
[18:17:55] <j416> https://docs.aws.amazon.com/lambda/latest/dg/golang-handler.html#golang-handler-signatures
[18:18:33] <j416> in any case, I prefer to just do the unmarshaling on my own
[18:19:03] <iateadonut> how can i stop aws-lambda from unmarshaling it automatically?
[18:20:12] <j416> use []byte as your type
[18:20:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[18:21:04] <eric_hill> ^ you can also use json.RawMessage if that's your thing
[18:21:06] <iateadonut> thanks.  do you know any good documentation/book/whatever to peruse for learning about the specifics of golang in aws-lambda?
[18:21:18] <j416> iateadonut: the aws docs
[18:21:21] <j416> iateadonut: see link above
[18:21:55] *** Joins: oxum (~oxum@122.172.205.112)
[18:22:28] *** Joins: fikran (~fikran@user/fikran)
[18:26:49] *** Quits: oxum (~oxum@122.172.205.112) (Ping timeout: 248 seconds)
[18:27:13] <j416> ah, forgot
[18:27:13] *** Joins: edrocks (~Ed@user/edrocks)
[18:27:17] <j416> use StartHandler.
[18:27:26] <j416> lambda.StartHandler.
[18:27:43] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[18:28:05] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Remote host closed the connection)
[18:28:21] <j416> that'll skip the json magic altogether.
[18:28:38] <j416> iateadonut: ^
[18:29:22] *** Quits: kaleido (~adam@user/kaleido) (Ping timeout: 240 seconds)
[18:29:34] *** Joins: gggpkm_ (~gggpkm@125.33.84.211)
[18:29:48] *** Quits: gggpkm (~gggpkm@123.113.182.84) (Ping timeout: 268 seconds)
[18:30:36] *** Quits: gggpkm_ (~gggpkm@125.33.84.211) (Remote host closed the connection)
[18:31:06] *** Joins: gggpkm_ (~gggpkm@123.113.188.0)
[18:32:35] *** Quits: gggpkm_ (~gggpkm@123.113.188.0) (Remote host closed the connection)
[18:33:02] *** Joins: gggpkm_ (~gggpkm@221.219.68.254)
[18:34:24] *** Joins: oxum (~oxum@122.172.205.112)
[18:35:00] *** Quits: Monsteranik8 (~Monsteran@160.202.156.153) (Quit: Connection closed)
[18:36:30] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Read error: Connection reset by peer)
[18:36:39] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[18:36:42] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[18:36:55] *** Joins: oxum (~oxum@122.172.205.112)
[18:42:10] *** Joins: gggpkm (~gggpkm@60.10.23.162)
[18:43:32] *** Quits: gggpkm_ (~gggpkm@221.219.68.254) (Ping timeout: 252 seconds)
[18:43:35] *** Quits: gggpkm (~gggpkm@60.10.23.162) (Remote host closed the connection)
[18:44:39] *** Joins: gggpkm (~gggpkm@123.113.182.84)
[18:45:20] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[18:46:05] *** Quits: gggpkm (~gggpkm@123.113.182.84) (Remote host closed the connection)
[18:46:31] *** Joins: gggpkm (~gggpkm@114.245.111.102)
[18:47:49] <iateadonut> thanks.
[18:52:00] *** Quits: adlternative (~adl@117.32.216.71) (Ping timeout: 268 seconds)
[18:52:34] *** Joins: aeadio (~aead@ec2-52-2-178-231.compute-1.amazonaws.com)
[18:54:33] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 248 seconds)
[18:54:52] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[18:57:14] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[18:57:28] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:59:56] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ab6a:1722:f952:c72a)
[19:00:41] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[19:01:47] *** Joins: jinie (~jimmy@188.114.173.37)
[19:07:25] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[19:08:59] *** Joins: Torr (~Torr@user/torr)
[19:11:04] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 244 seconds)
[19:11:49] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[19:15:40] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[19:22:32] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:192a:1eb2:f711:9efa)
[19:24:23] *** Joins: sully42 (~sully@2601:3cb:7f:c096:1121:2226:7b97:8530)
[19:28:09] *** Quits: jackneill (~jackneill@20014C4E1803FD00733C9D8926EA0383.dsl.pool.telekom.hu) (Remote host closed the connection)
[19:28:35] *** Joins: oxum (~oxum@122.172.205.112)
[19:31:13] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 244 seconds)
[19:33:14] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:33:29] *** Quits: oxum (~oxum@122.172.205.112) (Ping timeout: 248 seconds)
[19:35:04] *** Quits: usr123 (~usr123@124.253.7.193) (Read error: Connection reset by peer)
[19:35:30] *** Joins: usr123 (~usr123@27.255.221.30)
[19:46:53] *** Quits: gggpkm (~gggpkm@114.245.111.102) (Remote host closed the connection)
[19:52:04] *** Joins: emcconville (~emcconvil@c-98-222-200-8.hsd1.il.comcast.net)
[19:54:58] *** Joins: kaleido (~adam@havokworks.io)
[19:54:59] *** Quits: kaleido (~adam@havokworks.io) (Changing host)
[19:54:59] *** Joins: kaleido (~adam@user/kaleido)
[19:59:29] *** Quits: Giedrius (~giedrius@5.133.65.65) (Remote host closed the connection)
[20:01:39] *** Parts: iateadonut (~dan@121.177.17.154) ()
[20:04:00] *** Quits: nekron_ (~nekron@noordsee.de) (Remote host closed the connection)
[20:05:09] *** Joins: nekron (~nekron@noordsee.de)
[20:06:31] *** Quits: nekron (~nekron@noordsee.de) (Remote host closed the connection)
[20:08:07] *** Joins: nekron (~nekron@noordsee.de)
[20:10:26] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[20:10:57] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[20:12:56] *** Joins: cation (cation@user/cation)
[20:30:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[20:31:13] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:31:50] *** Joins: fikran (~fikran@user/fikran)
[20:35:40] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[20:36:16] <thinkofher> did anyone here had problems with something overwriting your errors.New global variables?
[20:37:02] <thinkofher> i'm using bolt db and when i'm returning wrapped global variable error, it is being overwrited by prebious error and results in something like "new error" + "old error"
[20:37:09] <thinkofher> and the wrapped value becomes bigger and bigger over time
[20:37:14] <thinkofher> when given error occurs
[20:37:29] *** Joins: gaurav_ (~usr123@27.255.220.183)
[20:38:16] *** Joins: codebam (~codebam@user/codebam)
[20:40:42] <seebs> i haven't. can you build a minimal reproducer? if there's a specific thing that's returning the wrapped error and doing this, it should work on an arbitrary small example on playground.
[20:40:56] <thinkofher> ok, i was using errors.As instead of errors.Is
[20:40:57] <thinkofher> omg
[20:41:01] <thinkofher> that was insane
[20:41:09] *** Quits: usr123 (~usr123@27.255.221.30) (Ping timeout: 268 seconds)
[20:42:10] <thinkofher> i had to describe this situation to came up with the idea, that maybe, there something wrong on the layer, when i'm checking if this error is the error i'm looking for
[20:44:02] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 256 seconds)
[20:47:57] *** Joins: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[20:48:06] *** Joins: oxum (~oxum@122.172.205.112)
[20:48:10] <lungaro> What is like a sync.Once that I can reset?
[20:52:42] <seebs> uh
[20:53:02] <seebs> i think probably "an object which contains a sync.Once, and then you make a new object"
[20:53:05] <lungaro> i have a TTL type lib I can use, the only issue is i wanna mark it dirty
[20:53:07] <lungaro> haha
[20:53:28] <seebs> Like, seriously, if it's once-per-Something, then you probably want to make a new Something sometimes.
[20:53:30] <lungaro> trying to be lazy, gonna bite me in the end
[20:53:34] <seebs> yes
[20:56:51] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:58:33] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:00:33] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[21:00:46] *** Quits: revolve (~u0_a227@82-132-229-84.dab.02.net) (Read error: Connection reset by peer)
[21:01:13] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[21:02:22] *** Joins: jinie (~jimmy@188.114.173.37)
[21:02:42] *** Joins: revolve (~u0_a227@82-132-247-13.dab.02.net)
[21:04:31] <j416> sync.Twice
[21:05:43] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[21:07:41] *** Joins: oxum (~oxum@122.172.205.112)
[21:08:47] <bpalmer> or you can craft-your-own with a basic mutex (easy, maybe inelegant) or atomics (easier to mess up, maybe elegant)
[21:10:12] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[21:11:51] *** Joins: oxum (~oxum@122.172.205.112)
[21:13:43] <Tv_> lungaro: you might be interested in https://golang.org/x/sync/singleflight or https://pkg.go.dev/go4.org/syncutil#Once or https://github.com/matryer/resync
[21:14:07] <Tv_> singleflight is one-at-a-time, go4 is sync.Once-until-it-works, resync is sync.Once-per-Reset
[21:16:29] <Tv_> lungaro: if now > cache_hit.expiry { with singleflight keyed on object identity refresh the cached value }
[21:17:53] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[21:18:23] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:18:42] *** Joins: oxum (~oxum@122.172.205.112)
[21:23:27] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[21:24:56] <lungaro> that's what i'm thinkin. i can build my own pretty easily
[21:25:53] *** Joins: oxum (~oxum@122.172.205.112)
[21:26:30] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Quit: Leaving.)
[21:26:57] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[21:32:41] *** Quits: revolve (~u0_a227@82-132-247-13.dab.02.net) (Read error: Connection reset by peer)
[21:34:30] *** Joins: revolve (~u0_a227@82-132-229-230.dab.02.net)
[21:44:55] *** Joins: arcatech (~arcatech@user/arcatech)
[21:56:33] *** Joins: lalitmee (~lalitmee@180.94.33.239)
[21:58:27] *** Quits: gaurav_ (~usr123@27.255.220.183) (Read error: Connection reset by peer)
[21:58:53] *** Joins: gaurav_ (~usr123@27.255.221.210)
[22:01:21] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[22:02:34] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[22:03:58] *** Joins: fef (~thedawn@user/thedawn)
[22:04:10] *** Joins: oxum (~oxum@122.172.205.112)
[22:09:13] *** Quits: oxum (~oxum@122.172.205.112) (Ping timeout: 248 seconds)
[22:10:08] *** Joins: independent56 (~independe@185.50.0.80)
[22:10:14] *** Quits: independent56 (~independe@185.50.0.80) (Remote host closed the connection)
[22:10:37] *** Joins: independent56 (~independe@185.50.0.80)
[22:13:58] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[22:14:16] *** Quits: gaurav_ (~usr123@27.255.221.210) (Quit: Leaving)
[22:23:45] *** Joins: lalitmee_ (~lalitmee@180.94.33.244)
[22:24:30] *** Quits: lalitmee (~lalitmee@180.94.33.239) (Ping timeout: 272 seconds)
[22:26:54] *** Quits: seebs (~seebs@24.196.59.174) (Quit: Leaving)
[22:28:38] *** torin_ is now known as Torin
[22:30:07] *** Joins: codebam (~codebam@user/codebam)
[22:30:50] *** Joins: DeltaNova (~DeltaNova@user/deltanova)
[22:32:51] *** Quits: smitop (~smitop@user/smitop) (Quit: Ping timeout (120 seconds))
[22:33:26] *** Joins: smitop (~smitop@user/smitop)
[22:34:11] *** Joins: thing_ (~thing@user/thing)
[22:35:09] *** Quits: thing (~thing@user/thing) (Ping timeout: 244 seconds)
[22:35:49] *** thing_ is now known as thing
[22:37:53] *** Joins: oxum (~oxum@122.172.205.112)
[22:39:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:40:19] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[22:41:12] *** Joins: fikran (~fikran@user/fikran)
[22:43:53] *** Quits: independent56 (~independe@185.50.0.80) (Ping timeout: 248 seconds)
[22:44:45] *** Joins: jpw (~jpw@user/jpw)
[22:44:56] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[22:46:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[22:47:34] *** Joins: fikran (~fikran@user/fikran)
[22:48:39] *** Joins: oxum (~oxum@122.172.205.112)
[22:51:17] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[22:53:58] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[22:55:57] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 245 seconds)
[22:56:17] *** Quits: c4rc4s (~c4rc4s@user/c4rc4s) (Quit: Adios)
[22:56:28] *** Joins: independent56 (~independe@185.50.0.80)
[22:56:39] *** Joins: Bugz000 (~Bugz000@user/bugz000)
[22:57:01] <Bugz000> hey, i am trying go for the first time after being recommended it by a friend for the thousanth time... and i cannot get a simple program to compile
[22:57:15] <quippy> what's the error
[22:57:52] <Bugz000> no error at all, i type "go build dir\file.go"
[22:57:59] <Bugz000> it pauses a while and returns to cli
[22:58:10] <Bugz000> i check $gopath\bin and it's not there
[22:58:19] <fizzie> You don't generally build files but packages.
[22:58:39] <Bugz000> so this cannot compile to an exe?
[22:59:10] <Bugz000> https://bugz000.co.uk/i/y2ANdHsz.txt the simple code i am trying to compile
[22:59:23] <fizzie> You'd still specify the source as a package (directory) rather than a file.
[22:59:35] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[22:59:39] <CommunistWolf> untrusty domain
[23:00:05] <Bugz000> ssl works fine for me
[23:00:13] <fizzie> `go build -o foo .` would build the package in the current directory to an executable called `foo`, for example.
[23:00:34] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[23:00:44] <Bugz000> go: go.mod file not found in current directory or any parent directory; see 'go help modules'
[23:00:49] <CommunistWolf> I have a bunch of untrusty domains in my unbound config, they get blatted
[23:00:50] <Bugz000> hm
[23:00:55] <CommunistWolf> for some reason, thbis is one of them *shrug*
[23:01:30] <Bugz000> i guess someone hates my face
[23:01:39] <CommunistWolf> it'll be reet. go build -o is your friend
[23:01:43] <Bugz000> nothing on there except my file dump and my face lol
[23:01:47] <CommunistWolf> you can also go run <file> for fun
[23:01:58] <Bugz000> go build -o does not work
[23:02:03] <Bugz000> error as above
[23:02:12] <Bugz000> what is a go.mod file
[23:02:16] <fizzie> That error, on the other hand, is because it's in module mode and there's no go.mod file in place. You might want to look at one of those getting-started / code-organization style guides.
[23:02:27] *** Joins: jinie (~jimmy@188.114.173.37)
[23:02:27] <Bugz000> :|
[23:02:36] <CommunistWolf> GO111MODULE=off go build -o foo file.go
[23:02:41] <CommunistWolf> kinda getting silly at that point though
[23:02:46] <Bugz000> precisely
[23:02:50] <fizzie> Lemme paste an example of building your simple sample inside a module.
[23:03:04] <Bugz000> it's this kinda bs that turned me away from this language repeatedly but i figured hell i'll try it and.... well
[23:03:10] <Bugz000> it's living up to precisely what i expected it to be lol
[23:03:16] <CommunistWolf> other languages *are* available
[23:03:27] <CommunistWolf> go is absolutely useless at repl-y stuff
[23:03:44] <Bugz000> yes, i've been using an array of them for a long long time
[23:04:01] <fizzie> For one-file samples, you might use that aforementioned `go run file.go` wrapper.
[23:04:22] <fizzie> But anyway, https://0x0.st/-J0p.txt puts your sample code inside a module and compiles it into an executable.
[23:04:29] <quippy> Go modules are simpler than the nightmares other languages have like virtualenvs lol
[23:05:12] <Bugz000> *sigh* it's fine, thankyou for the help but if this cannot do something so simple as compile a file to an exe then i'm already out lol
[23:05:13] <fizzie> In C terms, just keep thinking of `go build` as the equivalent of `make` (or some other build system), not `cc`.
[23:05:17] <CommunistWolf> they're ok, but even composer beats them hands down
[23:05:41] <CommunistWolf> virtualenv is close to the bottom of the table :D
[23:05:46] <quippy> if you're going to give up so easily Bugz000 I hope you like what you already know because that's all you'll ever know lol
[23:05:47] <Bugz000> i mean ofcourse there's ways to "force" it to work but i do not fight uphill battles with my coding environment, either it's intuitive, or it's out
[23:06:05] <quippy> things are only intuitive if they follow the same patterns you've seen before
[23:06:15] <quippy> if you never learn new patterns, nothing innovative can ever happen
[23:06:19] <Bugz000> yes, baseline standards of usability
[23:06:30] <quippy> do `go mod init` to create a go module for your project
[23:06:43] <CommunistWolf> take care if you look too long into the darkness, for the darkness will also look back into you, or so
[23:06:44] <Tv_> frankly if you only ever want to use repls and nothing else, walk away now, you don't want to learn anything
[23:06:47] <Bugz000> error: go: cannot determine module path for source directory C:\Users\Bugz000\Desktop\New folder (outside GOPATH, module path must be specified)
[23:06:47] <quippy> then, if you want to just get started and not think, try installing cobra and running `cobra init myproject`
[23:06:55] <Tv_> there's a big world out there outside of repls
[23:06:59] *** Quits: bkircher (~bkircher@2001:a61:24b0:5701:f9c:7cbd:1cf5:28fe) (Ping timeout: 252 seconds)
[23:07:21] <quippy> and then read the documentation for Cobra and what it sets up, because it will give you a shell of a CLI program prebuilt with lots of comments, that will build and install with go install ./...
[23:07:32] <Bugz000> i try go mod init and yet another error rofl
[23:07:34] *** Joins: oxum (~oxum@122.172.205.112)
[23:07:40] <Tv_> i really wouldn't start with cobra
[23:07:46] <quippy> I'm being slightly dismissive
[23:07:52] <Tv_> Bugz000: go mod init github.com/bugz000/my-learning-project
[23:08:10] <quippy> learning to build a Go program takes about 10 minutes, if that's too hard for you, just use Python or Ruby or whatever
[23:08:11] <kubblai> Bugz000: cd to the directory your go project is in and init there
[23:08:16] <Tv_> Bugz000: https://golang.org/doc/tutorial/getting-started
[23:08:21] <Bugz000> i am only trying this as my friend won't shut up about it and well, now i know, it's 6 hours of error chasing before you can get the simplest task done... trial of fire
[23:08:28] <CommunistWolf> :D
[23:08:29] <Bugz000> kubblai i'm already there
[23:08:32] <quippy> lmao 6 hours!
[23:08:36] <CommunistWolf> it was ever thus
[23:09:05] <quippy> I think I had my entire first Go program written after six hours, as a Python programmer previously, and also I was stoned as balls
[23:09:15] <fizzie> Bugz000: I don't know if you missed https://0x0.st/-J0p.txt but that showed the exact sequence of two commands needed to end up with an executable.
[23:09:23] <Bugz000> maybe 6 hours is exaggeration... it'll sure feel like it though
[23:09:26] <fizzie> Well, three if you count the `cat > tmp.go`.
[23:10:09] <Bugz000> fizzie i seem to have missed that
[23:10:14] <bpalmer> go modules are pretty badly explained at the 'I want a hello world executable' level.
[23:10:17] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 252 seconds)
[23:10:17] <Bugz000> https://bugz000.co.uk/i/vbIcrna5.png
[23:10:40] <Bugz000> a solution! amazing... i'll write a wrapper for that i guess
[23:11:11] <Tv_> bpalmer: dunno https://golang.org/doc/tutorial/getting-started has em
[23:11:19] *** Quits: Jigsy (~Jigsy@user/jigsy) (Quit: brb.)
[23:11:51] <Bugz000> workflow and speed is key for me, i have chronic brain fog due to my disease... so the simpler i can make the workflow the more of the current task i can keep in my mind at one time
[23:12:16] <Tv_> Bugz000: literally "go build" after you're set up
[23:12:38] <Bugz000> after the mod file is present, any future changes are reflected after go build?
[23:12:46] <Bugz000> that is worded wrong...
[23:13:02] *** Joins: Torr_ (~Torr@user/torr)
[23:13:14] <Bugz000> i only need go build to compile subsequent versions of this program in here due to the presence of go.mod
[23:13:28] <Bugz000> aka i do not need to change go.mod any further or update it?
[23:13:30] <fizzie> Right, the `go mod init <module path>` is a once-per-project setup. You may need to run `go mod tidy` to add new requirements if you add imports to other code.
[23:13:45] <fizzie> But if you just rely on the standard library, you don't have to touch it ever again.
[23:14:02] <Bugz000> right... so it's kinda half way to an IDE/environment stuff but i think i can work with that
[23:14:21] <fizzie> It's a build system, that's why the subcommand's called `build`.
[23:14:23] <bpalmer> Tv_: "To enable dependency tracking for your code ...", to me, suggests that you don't have to do this if you don't want dependency tracking. The rate of people who seem to be coming in confused about go mod init on simple throwaway projects suggests that people are regularly overlooking this
[23:14:33] <Bugz000> there's only two lines in this damn mod file rofl
[23:14:36] <Bugz000> why is this not default
[23:14:42] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[23:14:56] <fizzie> Because any "real" project tends to have external dependencies.
[23:15:02] <Tv_> bpalmer: please create an issue saying that; people are generally blind to their own words, and most experienced developers will never do more than skim that page
[23:15:04] <bpalmer> Tv_: the worst case is when you're trying a simple local package and local main, where pre-modules GOPATH "just worked" and now you have to mess about with import lines.
[23:15:19] <Tv_> bpalmer: yes modules added complexity to the minimal case, absolutely
[23:15:32] <Bugz000> yes... i notice programmers these days simply import 50 libraries and have only 200 lines of their own code
[23:15:34] *** Joins: Jigsy (~Jigsy@user/jigsy)
[23:15:43] <Bugz000> i simply code everything myself, flat architecture
[23:15:50] <Tv_> yeah, that's a phenomena called sniffing glue, or something...
[23:15:50] <Bugz000> one file, no libs but i guess i'm oldschool
[23:16:35] <Bugz000> it does mean my programs are tiny however :)
[23:17:33] <Bugz000> and unworkable for other folk as they only know how to use their favorite libraries... not how to write them :p
[23:18:00] <Bugz000> anyway i think this can work
[23:18:14] <Bugz000> thankyou for the help, i did nearly give up but i missed the solution
[23:18:49] <bpalmer> Yes, I should go through filing an issue for it, I guess.
[23:18:54] *** Joins: bkircher (~bkircher@2001:a61:24b0:5701:f9c:7cbd:1cf5:28fe)
[23:19:34] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Quit: Leaving)
[23:21:10] *** Joins: hikhvar796073809 (~thelounge@dynamic-046-114-004-227.46.114.pool.telefonica.de)
[23:22:08] <fizzie> Bugz000: If you're curious, the underlying tools (the compiler, the linker) `go build` will run *are* available as commands too (`go tool compile -o tmp.a tmp.go; go tool link -o tmp.exe tmp.a` builds your example without any sort of module or gopath setup), they just get unwieldy if you decide to have dependencies after all.
[23:22:34] <Tv_> also, if you run into any trouble, people will just tell you to use go build
[23:22:40] <fizzie> That, too.
[23:23:28] <Bugz000> i'm just shocked the dependencies are not simply pulled from the code as a dependency chain
[23:23:49] <Tv_> Bugz000: they are, but the decisions need to be recorded somewhere
[23:23:53] <Bugz000> that is what i'm accustomed to should i ever use a library... socket libraries for one i use quite often
[23:24:08] <Tv_> go.mod is required because the design is that go modules need to know their own identity; that file is where you write that (go mod init blah)
[23:24:18] <Bugz000> simply put import socket at the top and it's there, it works and is all available etc
[23:24:38] <Tv_> go.mod will store the version used
[23:25:14] <Bugz000> hmm... i guess there was an update to an old socket library i was using which killed about 8 years of programs LOL
[23:25:23] <Bugz000> i was not happy... but it did push me to rewrite them all better
[23:25:46] <Bugz000> i suppose the mod would prevent that happening?
[23:26:38] <fizzie> The standard library (import "net") is of course a slightly different kind of thing than dependencies to other Go modules.
[23:26:39] <Bugz000> however it's my belief package maintainers should code with backward compatability in mind - or if they wish to completely change the structure, write a simple wrapper to port the old methods to new
[23:27:17] <fizzie> I used to think my own case of NIH syndrome was moderately severe, but this discussion is making me recalibrate my scale. :)
[23:27:41] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[23:27:52] <Bugz000> what is NIH syndrome?
[23:28:39] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[23:28:51] <fizzie> "Not Invented Here syndrome", when you refuse to use anything written by someone else.
[23:28:59] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Remote host closed the connection)
[23:29:09] <Bugz000> hahaha! https://bugz000.co.uk/i/fhOTRQ4F.png i look it up and found this image
[23:29:12] <fizzie> (At the terminal stage, you refuse to use any programming languages too, except your own.)
[23:29:52] *** Joins: blinux (~blinux@pool-108-51-228-58.washdc.fios.verizon.net)
[23:29:52] <Bugz000> that is very much me - i am master hacksmith... akin to the breakfast machine in chitty chitty bangbang
[23:30:15] <Bugz000> i see the "hacksmith" on youtube... he is a phoney... has far too fancy equipment and has assistants make half of his toys
[23:30:59] <Tv_> fizzie: itym build your own cpu
[23:31:01] *** Quits: lalitmee_ (~lalitmee@180.94.33.244) (Quit: Konversation terminated!)
[23:31:14] <Bugz000> i do not see it as a bad thing
[23:31:25] <quippy> it is definitely a bad thing
[23:31:26] <Tv_> https://collapseos.org/
[23:31:27] *** Joins: lalitmee_ (~lalitmee@180.94.33.244)
[23:31:30] <CommunistWolf> > master hacksmith
[23:31:40] <Tv_> i mean, are you independently wealthy and can devote your life to a "fun hobby"?
[23:31:40] <Bugz000> imagine what you could learn making your own CPU vs just plugging ryzens into motherboards and calling it a "gaming pc"
[23:31:47] <Bugz000> my son can also play lego
[23:31:59] <quippy> CollapseOS is hilarious
[23:32:04] *** Joins: Steeve (~steve@user/steeve)
[23:32:06] *** Quits: lalitmee_ (~lalitmee@180.94.33.244) (Client Quit)
[23:32:15] <quippy> "we think society is going to collapse, so as preparation, we're going to build an operating system!"
[23:32:17] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:4692:e3ec:239c:8c8) (Ping timeout: 252 seconds)
[23:32:22] *** Joins: lalitmee (~lalitmee@180.94.33.244)
[23:32:26] <quippy> idk maybe focus on generating electricity or food?
[23:32:30] <Bugz000> hahahha
[23:32:35] <Tv_> quippy: technical solutions to non-technical problems as usual
[23:32:42] <quippy> seriously, to the nth degree
[23:32:48] <CommunistWolf> I had an idea for a civilisational boostrapper recently
[23:32:54] <CommunistWolf> bootstrapper*
[23:32:54] <Bugz000> very true  quippy - however the ammount of computers present on earth,  they will certainly be present too!
[23:33:01] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[23:33:06] <quippy> this is pretty off-topic for this channel, but it reminds me of the 9front project
[23:33:09] <CommunistWolf> basically, you send a satellite on a highly elliptical orbit of earth
[23:33:19] <Tv_> the collapseos thing actually goes into good depth on expect lifespan of a modern cpu and why they picked z80
[23:33:29] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:33:42] <CommunistWolf> every millenium or so, it comes screaming back into close orbit, makes a huge data dump of everything we have on all available wavelengths, and screams off again
[23:33:43] <Tv_> https://en.wikipedia.org/wiki/Whisker_(metallurgy)
[23:33:48] <CommunistWolf> you know, just in case we forgot anything in the interim
[23:34:00] <Bugz000> the z80 has much much support and documentation behind it! albiet slow... i'm not sure one can break within a human lifetime
[23:34:04] <quippy> if society collapses the problem with computing isn't going to be maintaining your CPUs, it's going to be having enough power generation to do anything with them, if they still exist, and then of course, once they break down, there's no fab to replace them
[23:34:22] <CommunistWolf> we can always go back to vacuum tubes
[23:34:38] <quippy> it's funny because actually society collapsing MIGHT be a technological problem, but it's a low tech problem, not a high tech problem XD
[23:34:41] <mion> mechanical computers, you can kyber pass those
[23:34:46] <CommunistWolf> cybernetics is with us forever
[23:34:52] <Tv_> quippy: at least z80 could probably be powered by a steam engine or a water wheel
[23:34:56] <Bugz000> i live only a few miles from where the computer was invented, blechley park - i have seen the bombe, and the colossus - the colossus was all vacuum tubes! it was very hot in that room
[23:35:03] <Tv_> quippy: it's still very silly, for sure
[23:35:10] <CommunistWolf> anyway, who wants to crowdfund my satellite civilisational beacon?
[23:35:36] <quippy> are the British claiming the credit for "inventing the computer" now?
[23:35:45] <CommunistWolf> ada's kind of big on it
[23:35:50] <Tv_> CommunistWolf: the10kproject.com
[23:35:51] <quippy> I always figured the credit for the modern computer went to Bell Labs for inventing the transistor
[23:36:09] <Tv_> err sorry wrong 10k
[23:36:13] <Bugz000> CommunistWolf you may have been beaten by FOSSAsat
[23:36:20] <Tv_> CommunistWolf: the long now foundation, and their 10k year project
[23:36:33] <CommunistWolf> I was going to say
[23:36:34] <Tv_> whatever their web presence is
[23:36:40] <CommunistWolf> still, seems I'm not as original as I thought I was
[23:36:54] <Bugz000> not much larger than a rubix cube, using 900mhz LORA for a global IOT network, two were launched crowd funded! they use tape measure for antennas haha
[23:37:08] <CommunistWolf> ok, we'll launch a satellite, but with a twist: we'll, um, "massage" the information that goes into it
[23:37:22] <Tv_> can't be in near-earth orbit for the timelines to work
[23:37:25] <CommunistWolf> make a large enough contribution, we'll include false information about how awesome you were
[23:37:26] <Bugz000> first class data handling unlike i have ever seen
[23:37:35] *** Quits: blinux (~blinux@pool-108-51-228-58.washdc.fios.verizon.net) (Quit: WeeChat 3.2)
[23:37:53] *** Joins: blinux (~blinux@pool-108-51-228-58.washdc.fios.verizon.net)
[23:38:00] <Bugz000> CommunistWolf i do that myself already
[23:38:10] <CommunistWolf> no doubt
[23:38:29] <Bugz000> i have the body of mr balboa, it is 100% the truth no lies here at all whatsoever nope
[23:38:58] <Tv_> ah, the handsome looks of an older boxer, yes
[23:39:18] <Bugz000> hahha perhaps in his prime... he does look old these days
[23:40:20] <quippy> lmao
[23:40:45] <Bugz000> have you considered "NIH syndrome" is a construct to encourage people away from "right to repair" and "DIY" - to simply purchase premade hardware/software and use the "industry standard" - i wonder who benefits from such things... sure time is saved for the user ... but where does the money go... ;)
[23:41:05] <quippy> keep in mind that the term is usually aimed towards businesses moreso than individuals
[23:41:22] <quippy> so it's the opposite, companies with NIH syndrome build obscure, in-house, closed-source BS
[23:41:35] <quippy> companies without it are confident enough to use and contribute back to OSS
[23:41:58] <CommunistWolf> or use, anyway
[23:42:08] <Bugz000> ah, yes proprietary systems are awful, for an end user to make an obscure thing, sure... for a large company to propriet..arize? .. a product is simply greed
[23:42:25] <quippy> and for individuals, for personal projects, it's just practical advice. If you try to build everything yourself, your best case scenario is building something like TempleOS, but if you are willing to use libraries and stuff you can "stand on the shoulders of giants" and build much more practical, high-level applications
[23:43:14] <Bugz000> https://bugz000.co.uk/i/4SgAet6I.jpg meanwhile i will be making my own radio from scratch sometime soon :p
[23:43:36] <quippy> of course it also depends on what you want to do, maybe your project is a tightly interrelated custom OS and programming language, so you do want to start from the ground up, but if you're working alone, and that's your goal, you have to accept that you probably won't be using your OS as a daily driver any time soon, or ever, at least not without bringing on other contributors
[23:44:11] <quippy> one of the painful lessons I've learned in the last decade is how brutally slow software development is
[23:44:18] *** Quits: sizeof_void34 (~Thunderbi@109-252-75-112.nat.spd-mgts.ru) (Read error: Connection reset by peer)
[23:44:31] *** Joins: plujon (~user@24.16.249.105)
[23:44:33] <Bugz000> yes certainly there is a line where one human cannot recreate all the relevant technologies within one lifetime
[23:44:44] <Bugz000> in that case it is more efficient to use the standard and spend that time working on other things
[23:44:49] <quippy> yes and honestly it's my opinion that it's really easy to hit that line
[23:44:58] <quippy> especially when you work full time and have other responsibilities
[23:45:12] <quippy> the absolute depth of software is gob-smacking
[23:45:15] <Bugz000> i have not worked for 2 years due to my disease, so it makes sense
[23:45:27] <quippy> Sorry to hear that
[23:46:02] <Bugz000> prior to this i was a forester, 90 hour weeks, very dangerous work - i thought i had "no life" being a geek prior, but 90 hour weeks is the meaning of no life
[23:46:10] <Bugz000> work sleep work - literally, barely enough time to eat and wash
[23:46:16] <Bugz000> how sad to live in that way
[23:46:27] <quippy> being a forester sounds nice though
[23:46:39] <quippy> do you mean a logger or someone who tends to public land?
[23:46:50] <Bugz000> more deaths than the british millitary (granted we are not in active conflict so it slews in forestrys....favor?)
[23:47:01] <quippy> having been an indoor human for all my life I daydream about outdoor jobs like being a forester
[23:47:43] <Bugz000> while i was there a tree landed on a folk and paralysed him - i had two trees land on me, the other person there had a seizure due to the heat shortly before i went to hospital with thyrotoxic crisis, 70% mortality rate, it was then i thought "maybe work is not worth it".... lol
[23:47:48] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[23:47:57] <Bugz000> so being low income... you just get used to doing things yourself!
[23:48:30] <Bugz000> the wide world of industry exists only for those with money
[23:48:56] <Tv_> heh this password strength form thinks 24 bytes of entropy is "Fair"
[23:49:20] <Tv_> oh and forces silent truncation, that's why
[23:49:21] <Bugz000> quippy https://bugz000.co.uk/i/dScEXqte.jpg
[23:49:53] <Bugz000> https://bugz000.co.uk/i/AUc2tvaP.png here i am cutting a tree haha
[23:51:57] <Bugz000> even in summer you wake up when it's dark and are home when it's dark... outdoor jobs are not for intelligent people, get a well paid indoor job and keep outdoors for recreation
[23:52:35] <Bugz000> you can explore a forest in your own time quippy :)
[23:52:46] *** Joins: burningserenity_ (~burningse@146.70.38.28)
[23:53:10] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 272 seconds)
[23:58:35] <quippy> I spent most of my childhood doing that, to be fair, Bugz000
[23:59:11] <quippy> yeah where I'm from we call your old industry 'logging,' and a forester would be someone who works for the federal government to make sure natural forests aren't being abused by random citizens
[23:59:33] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[23:59:35] <quippy> I am jealous of our foresters, but I'm not jealous of loggers; logging is well-known to be rather dangerous
[23:59:46] <Bugz000> ah, forester is the FSC  - forestry commission, the officials are called "rangers" :)
[23:59:58] <quippy> yeah officially that's what they are here in the US as well
[23:59:58] <Bugz000> i guess i would be a logger yes
