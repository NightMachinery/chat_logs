[00:01:35] *** Quits: p-i- (~Ohmu@223.206.150.241) (Ping timeout: 264 seconds)
[00:03:00] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[00:05:41] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[00:06:16] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[00:09:07] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:09:23] <dman777> I have some logic where I need to go through a list and consume 5 apis. Only after all 5 are done, then I will return the results to the user. In Javascript, sinec fetch is non blocking I would use a promise.all(). How would I do this in python using the requests library?
[00:09:44] <dman777> meaning... how could I consume them in a non blocking fashion and wait for all of them to be completed?
[00:10:12] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: WeeChat 3.3)
[00:10:55] <deniska> dman777: in python an analogous mechanism would be to use an async framework like asyncio or trio
[00:11:16] <deniska> dman777: for that you'll need an async-aware http client library like aiohttp or httpx
[00:11:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:11:26] <Swayze> https://medium.com/hackernoon/how-to-run-asynchronous-web-requests-in-parallel-with-python-3-5-without-aiohttp-264dc0f8546
[00:11:31] <Swayze> this is great
[00:12:10] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[00:12:19] <ChrisWarrick> ugh, medium
[00:12:38] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:12:39] <ChrisWarrick> (the post’s solution is ThreadPoolExecutor, which I guess works for requests)
[00:12:55] <Swayze> "How would I do this in python using the requests library?"
[00:12:55] *** Joins: fcjsx (~fcjsx@2800:a4:831:a800:ccdd:5940:bddb:ce90)
[00:12:57] <Swayze> problem?
[00:13:11] *** Quits: fcjsx (~fcjsx@2800:a4:831:a800:ccdd:5940:bddb:ce90) (Remote host closed the connection)
[00:14:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:14:49] <grym> httpx is just like requests, but can do this
[00:15:20] <deniska> most http libraries are like requests nowadays
[00:15:41] <deniska> even when I make my own for languages which lack a proper http lib, I try to mimic requests :)
[00:15:57] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[00:17:47] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[00:20:56] *** Quits: superboot (~agentgasm@user/superboot) (Remote host closed the connection)
[00:21:37] *** Joins: gregloscombe (~greglosco@82.25.194.79)
[00:21:54] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[00:22:14] *** Joins: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[00:23:45] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[00:24:59] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 264 seconds)
[00:25:58] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:29:32] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:33:50] *** Quits: DeaDSouL (~DeaDSouL@85.203.34.74) (Ping timeout: 260 seconds)
[00:33:53] *** Joins: djapo (~archangel@user/djapo)
[00:34:17] *** Joins: zebrag (~chris@user/zebrag)
[00:35:12] *** Joins: DeaDSouL (~DeaDSouL@45.130.136.148)
[00:39:14] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[00:40:23] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[00:41:26] *** Joins: darklands (~darklands@69.43.65.116)
[00:42:20] *** Joins: metaace (~metaace@user/metaace)
[00:42:22] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:42:43] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[00:42:47] *** Quits: darklands (~darklands@69.43.65.116) (Remote host closed the connection)
[00:44:09] <dman777> deniska: Swayze: thanks
[00:47:37] *** Joins: neu__ (~neuterion@user/neuterion)
[00:48:03] <Swayze> yw
[00:49:31] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[00:49:35] *** Quits: Alleria (~textual@user/alleria) (Remote host closed the connection)
[00:50:03] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[00:50:21] *** Joins: ricky (rickybob@gateway/vpn/protonvpn/rickybob)
[00:50:45] *** Joins: ali1234 (~al@user/ali1234)
[00:51:46] *** Quits: neuterion (~neuterion@user/neuterion) (Ping timeout: 260 seconds)
[00:54:38] *** Quits: luva (~luva@159.48.53.250) (Ping timeout: 260 seconds)
[00:55:04] *** Joins: neuterion (~neuterion@user/neuterion)
[00:56:30] *** Quits: Mumm-Ra (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[00:56:54] *** Quits: neu__ (~neuterion@user/neuterion) (Ping timeout: 260 seconds)
[01:03:08] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[01:08:10] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 260 seconds)
[01:09:21] *** Joins: iryd (~jamesm@c-174-56-254-152.hsd1.ga.comcast.net)
[01:09:45] *** Joins: luva (~luva@159.48.53.254)
[01:10:07] *** Parts: iryd (~jamesm@c-174-56-254-152.hsd1.ga.comcast.net) ()
[01:10:56] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[01:11:07] *** Joins: Gourgette (~Thunderbi@2a01:e34:eca8:8540:b760:1cc9:c7aa:6d76)
[01:11:26] <dman777> [x for x in fields if x['props'].__contains__('Consume api')] ... I wrote this myself. Just to confirm.... it will only return data if  x['props'].__contains__('Consume api')? I ask because I didn't have to explicity tell it to return x['props']
[01:12:10] *** Joins: korg815 (~korg815@user/korg815)
[01:12:12] <ChrisWarrick> dman777: try it and see?
[01:12:21] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[01:12:27] <ChrisWarrick> dman777: also, don’t call __contains__ directly, use the `in` operator
[01:12:30] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:13:51] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[01:14:33] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[01:14:48] *** Joins: Viewday4 (~Viewday@user/viewday)
[01:17:02] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 260 seconds)
[01:17:02] *** Viewday4 is now known as Viewday
[01:17:36] <dman777> ChrisWarrick: thanks... I can't really change the data to test non truthfull situations
[01:17:58] <ChrisWarrick> you can always build a simple list of dicts
[01:20:15] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:20:17] *** Quits: znpy (~znpy@user/znpy) (Ping timeout: 268 seconds)
[01:20:42] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 260 seconds)
[01:21:13] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:23:34] *** Quits: Thanatos (~Thanatos@105.112.180.185) (Read error: Connection reset by peer)
[01:24:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[01:24:35] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d) (Ping timeout: 256 seconds)
[01:25:42] *** Joins: fikran (~fikran@user/fikran)
[01:25:43] *** Quits: Akuli (~Akuli@82-203-164-223.bb.dnainternet.fi) (Quit: Leaving)
[01:26:50] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:29:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d)
[01:30:45] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:33:57] *** Joins: defsam (~defsam@cpc136884-bsfd10-2-0-cust642.5-3.cable.virginm.net)
[01:34:57] <defsam> Hello, any recommends for best play to learn through projects?
[01:35:01] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[01:35:07] <defsam> *place
[01:36:23] *** Quits: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0) (Ping timeout: 264 seconds)
[01:36:51] *** Joins: zepolen (~zepolen@2a02:587:863d:d8c0:cab8:dda7:a83c:cfec)
[01:38:32] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 246 seconds)
[01:38:36] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:39:31] *** Joins: zebrag (~chris@user/zebrag)
[01:40:04] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:42:38] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[01:42:43] <Swayze> top hits on google are good defsam
[01:43:19] *** Quits: ComputerTech_ (~ComputerT@user/computertech) (Quit: ZNC 1.8.2 - https://znc.in)
[01:43:28] *** Quits: Gourgette (~Thunderbi@2a01:e34:eca8:8540:b760:1cc9:c7aa:6d76) (Quit: Gourgette)
[01:45:09] *** Joins: ComputerTech (~ComputerT@user/computertech)
[01:45:26] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[01:47:04] <defsam> thanks Swayze, will stick to the top results then
[01:47:40] *** Quits: defsam (~defsam@cpc136884-bsfd10-2-0-cust642.5-3.cable.virginm.net) (Quit: Client closed)
[01:47:42] *** Joins: iflema (~ian@user/iflema)
[01:49:39] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:52:43] *** Joins: zebrag (~chris@user/zebrag)
[01:53:05] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[01:54:45] *** Joins: nomic2 (~nomic@185.192.69.57)
[01:57:15] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:98a:6da6:8044:af0f) (Ping timeout: 260 seconds)
[01:59:20] *** Joins: Thanatos (~Thanatos@105.112.180.185)
[02:00:50] *** nomic2 is now known as nomic
[02:01:23] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:ecf7:1521:506c:53cc)
[02:01:59] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (Quit: Reconnecting)
[02:02:00] *** Quits: davor (~davor@user/davor) (Ping timeout: 268 seconds)
[02:02:26] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[02:02:47] *** Quits: aknot (~aknot@2603:900a:1503:17bb:cda1:b2e7:3cb9:b386) (Ping timeout: 264 seconds)
[02:03:08] *** Joins: davor (~davor@user/davor)
[02:03:50] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:04:38] *** Quits: Thanatos (~Thanatos@105.112.180.185) (Ping timeout: 260 seconds)
[02:04:53] *** Joins: Bakunin (~Lindis@user/lindis)
[02:05:33] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[02:05:52] *** Joins: CombatVet (~c4@user/combatvet)
[02:06:39] *** Joins: Thanatos (~Thanatos@197.210.45.74)
[02:07:48] *** Joins: moose (~moose@user/moose)
[02:09:31] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[02:09:39] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[02:10:07] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[02:11:55] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[02:12:45] *** Joins: emerent_ (~quassel@p200300cd574855bdba27ebfffed28a59.dip0.t-ipconnect.de)
[02:12:45] *** emerent is now known as Guest353
[02:12:45] *** Quits: Guest353 (~quassel@p200300cd5748553bba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (iridium.libera.chat (Nickname regained by services)))
[02:12:45] *** emerent_ is now known as emerent
[02:13:30] *** Quits: luva (~luva@159.48.53.254) (Ping timeout: 260 seconds)
[02:14:14] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[02:14:39] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[02:15:38] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 246 seconds)
[02:15:50] *** Quits: neuterion (~neuterion@user/neuterion) (Quit: Leaving)
[02:16:21] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[02:16:57] <zln> how do I get can I use itemgetter and attrgetter at the same time and if so how? :) I need to sort on itemgetter(1) on a tuple, but the tuple is stored in an attribut in a object
[02:19:20] <nedbat> zln: maybe it's easier to write it out:   sort(key=lambda x: x.attribute[1])
[02:20:47] *** Joins: Klinda_ping (~superleag@user/klinda)
[02:21:19] <zln> ah
[02:21:19] *** Joins: luva (~luva@159.48.53.254)
[02:22:30] <jinsun__> `operator.itemgetter(1)(operator.attrgetter("attribute")(obj))` for the operator way
[02:22:45] *** jinsun__ is now known as jinsun
[02:24:10] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[02:24:43] <jinsun> but still would need a lambda or another def to pass it to sort key, so just writing it out is probably better
[02:25:47] *** Joins: grooverman (~grooverma@179.99.123.165)
[02:25:47] <zln> yeah, but both is nice
[02:27:21] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[02:28:26] *** Quits: Thanatos (~Thanatos@197.210.45.74) (Ping timeout: 260 seconds)
[02:29:27] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[02:29:29] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-b958-97b0-ca4d-4603.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:30:42] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[02:30:44] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:32:38] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 260 seconds)
[02:34:11] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:37:41] *** Quits: Inline (~Inline@2a02:908:1252:7a80:e007:8711:e7b4:2641) (Ping timeout: 246 seconds)
[02:39:11] *** Joins: _Ev (~ev@user/ev/x-8999918)
[02:39:23] *** Joins: oz4ga (~tim@93.90.4.233)
[02:40:21] *** Quits: magla (~gelignite@55d47dc5.access.ecotel.net) (Quit: Stay safe!)
[02:42:14] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:45:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[02:47:50] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:49:10] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[02:49:29] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[02:50:27] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[02:52:14] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[02:54:21] *** Quits: Klinda_ping (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:54:39] *** Joins: Klinda (~superleag@user/klinda)
[02:54:54] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:55:36] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[02:57:28] *** Quits: ricky (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: pees oot)
[03:03:16] *** Quits: oprypin_ (~irc@pryp.in) (Quit: Bye)
[03:03:26] *** Joins: oprypin (~irc@pryp.in)
[03:05:11] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:06:26] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Read error: Connection reset by peer)
[03:09:17] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.0)
[03:11:19] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Read error: Connection reset by peer)
[03:11:48] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[03:12:12] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[03:13:38] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[03:14:59] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:16:43] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[03:18:20] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:19:35] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[03:19:43] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:21:01] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:21:10] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[03:23:30] *** Quits: luva (~luva@159.48.53.254) (Ping timeout: 260 seconds)
[03:27:25] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[03:27:29] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:28:12] <twainwek> i'm trying to test an api written in flask. this api requires authentication. how can i test data itself that is returned by the api, rather than being concerned with the authentication mechanism in place
[03:29:14] *** Quits: _Ev (~ev@user/ev/x-8999918) (Quit: Leaving.)
[03:30:02] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (Quit: Oops)
[03:30:02] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[03:30:13] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:25] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 265 seconds)
[03:30:37] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:45] *** Joins: mickey8 (~user@user/mickey)
[03:31:54] *** Quits: oz4ga (~tim@93.90.4.233) (Ping timeout: 260 seconds)
[03:33:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[03:35:03] *** Joins: fikran (~fikran@user/fikran)
[03:41:26] *** Joins: luva (~luva@159.48.53.254)
[03:44:19] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[03:45:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[03:46:05] *** audiocat is now known as audio
[03:46:32] *** Quits: audio (~audio@2603-8081-1800-1546-0768-f6c4-f0f5-0017.res6.spectrum.com) (Changing host)
[03:46:32] *** Joins: audio (~audio@user/audio)
[03:48:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:48:12] *** moonmoon is now known as awoo
[03:49:06] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[03:50:02] *** Joins: Atque (~Atque@user/atque)
[03:50:39] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:51:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:51:45] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[03:51:55] *** Lord_of_Life_ is now known as Lord_of_Life
[03:54:21] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:56:09] *** Joins: gimzmoe_ (~gimzmoe@user/gimzmoe)
[03:56:12] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:56:20] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Read error: Connection reset by peer)
[03:57:22] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:57:26] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[03:57:27] <JimmyRustles> hi
[03:58:06] <JimmyRustles> could someone tell my why the startGame function here doesn't modify enemyships?
[03:58:08] <JimmyRustles> https://dpaste.org/0RBK
[03:58:16] <JimmyRustles> i've included everything i thought was relevant
[03:58:28] <JimmyRustles> if you look at the print statements you'll see they both print different values instead of both printing 24000
[03:58:54] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[03:59:30] <Yhg1s> JimmyRustles: it does modify the list assigned to enemyships on line 24. It doesn't modify the list passed to startGame, though (because of that assignment on line 24).
[04:00:22] *** Joins: Wulf (~Wulf@user/wulf)
[04:00:45] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[04:01:03] <dman777> is AIOHTTP the recommended library for async requests? Or is there a better one?
[04:01:03] <JimmyRustles> oh does that mean i'm creating a local variable there?
[04:01:11] <JimmyRustles> so enemyships becomes a local instead of the passed variable?
[04:01:28] <Yhg1s> JimmyRustles: 'enemyships' already is a local variable. You're assigning a new list to that local variable, so it no longer refers to the list that was passed to the function.
[04:01:39] <Yhg1s> JimmyRustles: you don't pass variables, you pass objects. (See bit.ly/pynames1)
[04:01:54] <JimmyRustles> ok thanks
[04:02:03] <JimmyRustles> so what way should i use to clear the list instead of assigning it = []?
[04:02:13] <JimmyRustles> for item in list: list.pop(item)?
[04:02:32] <Yhg1s> JimmyRustles: well, I would _highly_ recommend not relying on mutation at all. Return the new list. But if you must, 'del enemyships[:]'
[04:02:36] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[04:02:52] <JimmyRustles> ok i'll return the list
[04:02:52] <JimmyRustles> thanks
[04:06:09] *** audio is now known as audiocat
[04:06:44] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[04:06:50] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:07:13] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[04:08:34] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:11:33] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[04:15:37] <dman777> with aiohttp is it possible to make multiple async requests to different hosts? looking from docs, it looks like multiple async requests are only available per a session and a session is only per a host
[04:17:50] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:37bb:726e:5a5d:30b) (Ping timeout: 260 seconds)
[04:17:52] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:18:22] *** Joins: mickey8 (~user@user/mickey)
[04:20:45] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[04:22:21] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:22:36] <aphysically> hmmm numhl doesn't seem to be working I wonder if my theme is doing something weird
[04:22:46] *** Quits: nergar (~Nergar@177.225.129.22) (Read error: Connection reset by peer)
[04:22:49] <BtbN> A session is not per host, is it?
[04:25:25] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[04:26:45] <JimmyRustles> Yhg1s: that worked, thanks
[04:26:53] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 246 seconds)
[04:28:10] *** Joins: parv (~quass@user/parv)
[04:28:50] <dman777> does anyone know of a api on the web that will return just text like hello world?
[04:29:13] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:31:43] *** Joins: amo (~amogorkon@port-92-196-41-54.dynamic.as20676.net)
[04:32:00] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:35:11] *** Quits: amogorkon (~amogorkon@port-92-196-69-122.dynamic.as20676.net) (Ping timeout: 264 seconds)
[04:40:28] *** Joins: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru)
[04:40:28] <yolo_> anyone here knows both doxygen and sphinx, I refer to https://stackoverflow.com/questions/36064976/using-doxygen-in-read-the-docs trying to convert a doxygen output to readthedocs, it always shows a default homepage from index.rst instead of doxygen's own index.html, how does sphinx's index.rst work with doxygen's index.html
[04:40:30] *** Quits: flokuehn (~flokuehn@87.123.247.54) (Ping timeout: 260 seconds)
[04:41:48] *** Joins: twb (~twb@2403-5804-c6--add.ip6.aussiebb.net)
[04:42:24] *** Joins: flokuehn (~flokuehn@87.123.247.51)
[04:43:12] <twb> I'm trying to unsplice a list-of-lists.  This does what I want: ['first', *(i for i in range(3)),'last']
[04:43:13] <twb> But this isn't flat: ['first', *((i, -i) for i in range(3)),'last']
[04:43:24] <twb> I can't just add another * because ** means dict unsplice
[04:43:47] <twb> I also guessed ['first', *(*((i, -i) for i in range(3))),'last']  ... which is a syntax error
[04:44:07] <twb> I feel like I'm missing something obvious
[04:44:25] <KirkMcDonald> twb: Meaning you want i and -i to be distinct elements in the resulting list?
[04:44:32] <KirkMcDonald> resulting*
[04:44:44] <KirkMcDonald> (Er, wait, I didn't typo that.)
[04:44:52] <twb> KirkMcDonald: yep
[04:45:03] <twb> This works but is a little unobvious: ['first', *(x for i in range(3) for x in (i, -i)),'last']
[04:45:05] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.3)
[04:45:13] <KirkMcDonald> twb: I was just about to type that out, heh.
[04:46:05] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[04:46:21] <twb> The actual use case is constructing a subprocess command, where I need something like *['--include=foo', '--with=foo'] for a bunch of foo
[04:46:55] <KirkMcDonald> twb: Ah, because I was about to suggest some clever math for the (i, -i) case.
[04:49:53] <KirkMcDonald> twb: Fundamentally, you need something like that double loop.
[04:50:01] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[04:50:03] <twb> righto
[04:50:21] <KirkMcDonald> A list comprehension really wants to yield one element of the result for each iteration.
[04:50:34] <KirkMcDonald> So to unpack something nested, you need another loop.
[04:51:00] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[04:51:16] *** CountDeMoney is now known as Roey
[04:51:46] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:53:51] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[04:54:37] *** Joins: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur)
[04:56:39] <dman777> if I have foo = { 'fruit': 'apple', 'meat': 'steak' } and I want add { car: 'honda'}.... how could I do that in a non mutating way?  In otherwards, create a new object instead of mutating?
[04:57:12] <BrenBarn> I think there was a proposal to add a union operator in the newest version of Python
[04:57:13] <BrenBarn> or maybe the next upcoming one
[04:57:24] <grym> dman777: foo = {**foo, "car":"honda"}
[04:57:39] <dman777> grym: than you
[04:57:42] <dman777> thank you
[04:58:16] <grym> np
[04:58:38] <grym> and yeah i think you can do that with foo = foo | {"car":"honda"} fsvo new python
[04:58:41] <grym> i forget which
[04:59:06] <jinsun> 3.9
[05:01:05] <twb> grym: nice; I was thinking more like "import deepcopy" >_<
[05:01:26] <dman777> grym: oh cool
[05:01:33] <grym> twb: nope, just give up and rebind the name :)
[05:02:31] <grym> when i want to do this a lot, i tend to drop dicts in favor of @attr.s(frozen=True) and then use attr.evolve
[05:02:53] <grym> nice little immutable workhorse there
[05:03:14] <twb> +1 for opt-out mutable conses
[05:03:20] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[05:04:20] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:04:29] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[05:05:47] *** Quits: mumixam (~m@user/mumixam) (Remote host closed the connection)
[05:06:09] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[05:08:54] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 260 seconds)
[05:10:06] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[05:10:24] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[05:10:36] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[05:11:23] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:12:16] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[05:12:21] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[05:13:15] *** Quits: MrSpooky (Ben@mrbenc.net) (Ping timeout: 260 seconds)
[05:14:58] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[05:15:14] *** Joins: tg (~tg@rockylinux/infra/tg)
[05:17:22] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[05:21:02] *** Quits: delvian (~delvian@41.13.204.97) (Ping timeout: 260 seconds)
[05:21:20] *** Joins: mumixam (~m@user/mumixam)
[05:23:08] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:23:59] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[05:24:09] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[05:26:24] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Client Quit)
[05:27:41] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d) (Ping timeout: 256 seconds)
[05:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:53] *** Joins: amogorkon (~amogorkon@port-92-196-69-68.dynamic.as20676.net)
[05:31:51] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:32:43] *** Quits: busybusybusy (~BUSY@user/busy) (Read error: Connection reset by peer)
[05:33:20] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[05:33:59] *** Quits: amo (~amogorkon@port-92-196-41-54.dynamic.as20676.net) (Ping timeout: 264 seconds)
[05:42:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[05:42:11] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[05:44:16] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 245 seconds)
[05:44:24] *** Joins: fikran (~fikran@user/fikran)
[05:47:18] *** Joins: Socra (~Socra@206.217.216.27)
[05:47:33] *** Joins: MrC (Ben@mrbenc.net)
[05:49:34] *** Quits: sharperguy (~sharpergu@89.244.122.120) (Ping timeout: 260 seconds)
[05:50:11] *** Joins: aknot (~aknot@2603:900a:1503:17bb:77e2:247a:c812:4e3b)
[05:51:05] *** Joins: sharperguy (~sharpergu@88.130.218.27)
[05:52:42] *** Quits: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[05:53:27] *** Quits: driib (~driib@185.65.135.236) (Ping timeout: 260 seconds)
[05:53:59] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[05:54:38] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[05:54:38] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[05:58:34] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:58:35] *** Quits: aknot (~aknot@2603:900a:1503:17bb:77e2:247a:c812:4e3b) (Ping timeout: 264 seconds)
[05:58:38] *** Joins: floogy (~floogy@p200300c92f1fea00145150afd4f072cd.dip0.t-ipconnect.de)
[06:01:07] <floogy> Hi, I need to incease every second byte with four bit. How can I achieve this task?
[06:03:26] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[06:03:47] *** Joins: wo0f (~wo0f@user/wo0f)
[06:04:11] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:04:45] *** Joins: pankid (~quassel@pankid.club)
[06:06:07] <twb> floogy: up to a fixed number of bytes?
[06:06:23] *** Quits: pankid (~quassel@pankid.club) (Client Quit)
[06:06:44] *** Joins: pankid (~quassel@pankid.club)
[06:06:53] <twb> floogy: you'll want something built out of >> (right shift), and << (left shift) and & (bitwise-and)
[06:07:24] <floogy> for an entire fat32 filesystem which was truncated due to a short this way. At least it looks like that
[06:07:56] *** Joins: stdout (~stdout@50.115.255.72)
[06:07:58] <twb> That... is above my pay grade
[06:08:17] <twb> strongly advise to restore from tape instead
[06:10:25] *** Joins: vlm (~vlm@user/vlm)
[06:10:27] <floogy> unfortunmately I don't know much python and programming, but I used some functions in shell scripts. It's a CF-Card 8GB I used to fiddle with FreeDOS, and I stored some 5.25" floppy images on it. Maybe it isn't worth the hassle.
[06:11:23] <floogy> I didn't made a backup yet. Isn't attached on my veeam box.
[06:13:26] <floogy> Looks like this (first 4 blocks in a diff): https://bpa.st/DK5Q
[06:17:47] *** Quits: Hash (~stoned@is.coding.when.stoned.io) (Ping timeout: 264 seconds)
[06:18:04] *** Quits: Spawns_Carpet (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Quit: WeeChat 3.3)
[06:18:32] <floogy> Err, I'm afraid, it looks more caotic than that.
[06:21:08] *** Joins: The_Jag_ (~The_Jag@host-87-16-87-93.retail.telecomitalia.it)
[06:21:54] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[06:22:48] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[06:23:32] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[06:23:34] *** Quits: The_Jag (~The_Jag@host-82-56-115-92.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[06:25:10] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[06:28:14] *** Joins: driib (~driib@185.65.135.236)
[06:30:58] *** Joins: noarb (~noarb@user/noarb)
[06:31:02] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[06:31:03] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:30] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:31:31] *** Joins: brabrax (~brabrax@user/brabrax)
[06:31:34] *** Quits: jim (~jim@about/linux/staff/jim) (Quit: Leaving)
[06:31:46] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[06:31:53] *** Quits: zepolen (~zepolen@2a02:587:863d:d8c0:cab8:dda7:a83c:cfec) (Ping timeout: 264 seconds)
[06:32:04] *** Joins: jim (~jim@about/linux/staff/jim)
[06:32:13] *** Joins: driib9 (~driib@185.65.135.232)
[06:33:33] *** Joins: Thanatos (~Thanatos@197.210.45.74)
[06:34:18] *** Quits: driib (~driib@185.65.135.236) (Ping timeout: 260 seconds)
[06:34:18] *** driib9 is now known as driib
[06:34:43] *** Joins: avikalp (~avikalp@49.36.103.196)
[06:34:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:35:42] *** Joins: HaMsTeRs (~Thunderbi@14-0-171-244.static.pccw-hkt.com)
[06:35:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[06:35:50] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:42:41] *** Quits: Thanatos (~Thanatos@197.210.45.74) (Read error: Connection reset by peer)
[06:46:40] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:48:09] *** Quits: wolfgang (~wolfgang@124.181.66.145) (Remote host closed the connection)
[06:51:54] *** Quits: stdout (~stdout@50.115.255.72) (Quit: Leaving)
[06:54:04] *** Joins: desophos (~desophos@2601:249:1680:a570:b44c:753b:291d:308f)
[06:55:08] *** Quits: desophos (~desophos@2601:249:1680:a570:b44c:753b:291d:308f) (Client Quit)
[06:58:10] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[07:02:16] *** Joins: brookesy66 (~will@123-243-15-48.tpgi.com.au)
[07:02:45] <deltab> floogy: eesh
[07:03:54] <deltab> unfortunately just clearing the 4 bit won't give you back the original data, because sometimes that bit was set in the original
[07:04:56] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[07:05:31] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 245 seconds)
[07:07:11] <deltab> for text files it might be possible to recover quite a bit using a word list to disambiguate
[07:07:37] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:12:17] <twb> Time to invest in a checksumming filesystem!
[07:16:21] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 245 seconds)
[07:16:42] <deltab> allocation tables and directories might be recoverable if the files are contiguous enough
[07:17:15] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Quit: Leaving)
[07:18:30] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:21:14] *** Joins: noarb (~noarb@user/noarb)
[07:24:43] *** Joins: Hash (~stoned@is.coding.when.stoned.io)
[07:28:01] *** Quits: Disposeable-Nick (~Ident@user/disposeable-nick) (Ping timeout: 245 seconds)
[07:30:59] *** Quits: avikalp (~avikalp@49.36.103.196) (Read error: Connection reset by peer)
[07:32:54] *** Joins: djapo (~archangel@user/djapo)
[07:33:57] *** Quits: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32) (Quit: Leaving)
[07:33:59] *** Quits: luva (~luva@159.48.53.254) (Ping timeout: 264 seconds)
[07:34:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d)
[07:35:05] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[07:35:30] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:01] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[07:39:27] *** Joins: avikalp (~avikalp@49.36.103.196)
[07:40:38] *** Joins: mexijoe (~Android@97.115.177.65)
[07:41:59] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32)
[07:43:49] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32) (Remote host closed the connection)
[07:44:14] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32)
[07:45:13] *** Quits: HaMsTeRs (~Thunderbi@14-0-171-244.static.pccw-hkt.com) (Read error: Connection reset by peer)
[07:45:29] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[07:49:25] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[07:50:14] *** Joins: delvian (~delvian@41.13.194.198)
[07:51:50] *** Joins: luva (~luva@159.48.53.251)
[07:51:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[07:52:50] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:5ce:f1d1:83d:e8ab) (Remote host closed the connection)
[07:53:23] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[07:53:45] *** Joins: djapo (~archangel@user/djapo)
[07:53:45] *** Joins: fikran (~fikran@user/fikran)
[07:58:24] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Remote host closed the connection)
[08:00:05] * aphysically checks license of all transitive dependencies
[08:00:18] * aphysically notices copyleft >:l
[08:01:11] <aphysically> I guess most people wouldn't consider  'import requests' as copyleft'ing yourself though
[08:01:28] <aphysically> besides certifi is probably more on the 'data' side than the code side
[08:02:42] *** Joins: etbcf (~etbcf@2001:8a0:7b3a:dd01:4f38:3aa1:32ef:7cd3)
[08:03:19] *** Parts: etbcf (~etbcf@2001:8a0:7b3a:dd01:4f38:3aa1:32ef:7cd3) ()
[08:03:48] <twb> https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)  "down for maintenance" sigh
[08:04:22] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[08:04:56] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:10:59] <aphysically> twb: i figure surely it doesn't matter, right?
[08:11:36] <aphysically> cause I'm reasonably sure requests is only using certifi for the pem data, which is in the python stdlib too
[08:11:54] <aphysically> (i.e. the certifi pem data is in the python stdlib)
[08:12:55] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[08:14:03] <twb> aphysically: it sounds like your goal is "use GPL'd software in a non-free product" and your justification is "I'm only using it a little bit"
[08:14:57] <aphysically> I don't make any non-free products
[08:15:21] <twb> Then what is your goal?
[08:15:30] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:15:55] <aphysically> I was wondering if my MIT project on github was fully MIT or had any copyleft in transitive dependencies
[08:16:29] <aphysically> because it uses requests it has certifi in dependencies, but it seems to be the consensus online and in python you can use stuff as "data"
[08:17:00] <twb> Unless you're making non-free software, why do you care?
[08:17:06] <aphysically> because it's interesting?
[08:17:14] <twb> Fair enough
[08:17:41] <twb> the only way to get a CONCLUSIVE answer is to have an actual lawsuit decided by an actual judge
[08:17:45] <aphysically> I wish i was making non-free software, I'd probably be getting paid for it ;[
[08:18:12] <twb> I haven't seen anyone arguing (convincingly) that licenses "don't matter" for data
[08:18:24] <twb> Olson database would be a relevant test case
[08:18:37] <aphysically> well, the reason I say python seems to have taken that position is the python stdlib seems to include the certifi certificates
[08:18:42] <aphysically> (without changing its permissive license)
[08:19:21] <aphysically> there was even a PEP about including them
[08:19:30] <twb> aphysically: this is basically the whitelist of CA certificates copy-pasted from Mozilla?
[08:20:08] <aphysically> yep that's what certifi is
[08:20:20] <aphysically> also, I was wrong, the stdlib decided to use system certificates instead of mozilla, but they apparently considered mozilla: https://www.python.org/dev/peps/pep-0476/
[08:21:28] <twb> On my system a similar package is "ca-certificates", which says in /usr/share/doc/ca-certificates/copyright that it's (mostly) MPL-2.0
[08:21:51] <aphysically> afaik certifi = ca-certificates
[08:22:03] <aphysically> they're both just packaged versions of the mozilla certs?
[08:22:09] <twb> Auxiliary files like mozilla/* and makefile are marked GPL-2+
[08:22:41] <aphysically> but yeah MPL is copyleft
[08:22:46] <aphysically> although weaker than gpl iirc
[08:22:54] <aphysically> (but I don't remember in what way)
[08:24:33] *** Quits: spiderman (~spiderman@user/spiderman) (Quit: WeeChat 3.2)
[08:24:43] <twb> aphysically: a possible (and probably easy) workaround is to change the library to use specific pinned certs rather than CA certs
[08:25:04] <aphysically> "This allows, for example, programs using MPL-licensed code to be statically linked to and distributed as part of a larger proprietary piece of software, which would not generally be possible under the terms of stronger copyleft licenses."
[08:25:14] <aphysically> https://www.mozilla.org/en-US/MPL/2.0/FAQ/
[08:25:15] <twb> Although I don't know offhand what copy rights apply to e.g. certificates generated by Let's Encrypt
[08:25:44] <aphysically> so it seems to be weak enough that people who statically linked requests couldn't be obligated to open source their project
[08:26:24] <aphysically> twb: oh yeah that's true, if you're only using your own websites or something you could do that
[08:26:31] <aphysically> I wonder if it's easy to swap out the certs in requests like that
[08:26:43] *** Joins: yac (~user@user/yac)
[08:28:47] <aphysically> but I guess since MPL 2.0 allows static linking it would never matter in practice for anyone?
[08:29:25] <twb> aphysically: for an autonomous CA hierarchy you could just nerf "import requests.certs" which is currently an alias for "import certifi"
[08:29:29] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[08:30:29] <aphysically> yeah
[08:30:58] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[08:31:00] *** Quits: grooverman (~grooverma@179.99.123.165) (Read error: Connection reset by peer)
[08:31:07] <twb> aphysically: for pinning, I *think* at a glance you have to hook it in urllib3, and I can't immediately see if/where requests exposes that
[08:31:10] <aphysically> which wouldn't need to be done at the level of my (MIT) library; someone using it could do that themselves if they wanted rid of the MPL-2
[08:32:21] *** Joins: grooverman (~grooverma@179.99.123.165)
[08:32:43] * aphysically should find a job making non-free software so he can get paid
[08:32:59] <bparker> based
[08:33:06] <aphysically> or free software too I guess, but I suspect those are less common
[08:33:16] <bparker> much
[08:34:18] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Ping timeout: 260 seconds)
[08:34:23] <twb> that's because if it's free you only need to do it once :-)
[08:35:31] *** Quits: delvian (~delvian@41.13.194.198) (Ping timeout: 245 seconds)
[08:36:16] <aphysically> I wonder why requests/urllib3 doesn't have an option to use system certs
[08:36:20] <aphysically> or maybe they do and I haven't looked hard enough
[08:36:23] * aphysically looks
[08:39:37] <twb> You pass verify='/path/to/cert/bundle/' somewhere
[08:40:17] *** Joins: jaggz (~jaggz@user/jaggz)
[08:40:48] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:41:23] *** Joins: mickey8 (~user@user/mickey)
[08:41:27] <jaggz> anyone have some bash "venv" bash function which can tab complete some path of environments
[08:41:29] <jaggz> like ~/venv/
[08:41:41] <jaggz> and then will source the bin/activate script of the env?
[08:41:59] *** Joins: HaMsTeRs (~Thunderbi@14-0-171-069.static.pccw-hkt.com)
[08:42:05] <jaggz> actually I wouldn't mind it just listing them if I type venv.. I can handle that without the tab completion..
[08:42:14] <jaggz> got me my solution for now . yay.
[08:42:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:42:46] <aphysically> I use virtualenvwrapper
[08:42:55] <aphysically> which came with zsh completions for me at least
[08:43:05] <aphysically> or at least something gave it zsh completions
[08:44:26] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:45:03] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[08:45:38] <aphysically> twb: did you see the that npm package vulnerability the other day?
[08:45:38] *** Joins: CombatVet (~c4@user/combatvet)
[08:46:04] <aphysically> it's what got me thinking about transitive dependencies - surely it must be basically impossible to avoid copyleft if you have almost any overlap with the npm package ecosystem
[08:46:18] <jaggz> venv () { if [[ "$#" -lt 1 ]]; then ls ~/venv/*/bin/activate | sed -e 's#/bin/activate##; s#^.*/##;'; else . ~/"venv/$1/bin/activate"; fi; }
[08:46:30] <jaggz> aphysically, that might be nice
[08:46:54] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:50:26] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:51:00] <twb> aphysically: no; I have a blanket ban against nodejs
[08:51:49] <aphysically> I saw it on my news feed which is when I learned apparently hundreds of transitive dependencies are the norm for small nodejs projects
[08:52:05] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:52:06] <twb> jaggz: you might as well change [[]] to (()).  It is not safe to parse ls's output.
[08:53:01] *** Quits: luva (~luva@159.48.53.251) (Ping timeout: 245 seconds)
[08:54:09] *** Quits: wo0f (~wo0f@user/wo0f) (Remote host closed the connection)
[08:55:52] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[08:56:06] *** Joins: CombatVet (~c4@user/combatvet)
[08:56:53] <deltab> for f in ~/venv/*/bin/activate; do f=${f%/bin/activate}; echo "${f##*/}"; done
[08:57:12] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:58:27] <deltab> local f
[08:58:41] <twb> deltab: thanks; I couldn't quite brain my way through that part
[08:59:37] <twb> Does venv really not use ~/.local/ ?  That seems rather greybeard for something relatively new
[09:00:02] <deltab> printf '%s\n' "${f##*/}"  for those concerned about directories named "-n"
[09:01:32] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[09:03:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[09:03:49] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Read error: Connection reset by peer)
[09:04:05] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[09:05:34] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[09:07:10] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[09:07:26] *** Joins: analoq (~yashi@user/dies)
[09:07:43] <jaggz> Hrm.  I think I want to dump that puppy into fzf
[09:07:50] <jaggz> familiar with fzf?
[09:07:53] *** Quits: xiaguan (~parsley@2604:180:f1::173) (Ping timeout: 264 seconds)
[09:09:39] <jaggz> <geirha> jaggz: _venv_complete() { for f in ~/venv/"$2"* ; do [[ -d $f ]] && COMPREPLY+=( "${f##*/}" ) ; done }; complete -o filenames -F _venv_complete venv
[09:11:54] *** Joins: luva (~luva@159.48.53.252)
[09:13:30] <deltab> yeah, fzf all the things
[09:13:38] *** Joins: dohtem (uid524096@user/dohtem)
[09:15:02] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:20:16] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[09:22:28] <aphysically> you can break many things with stuff named stuff like -n
[09:22:44] <aphysically> it's wild out there
[09:24:12] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[09:24:12] *** Quits: dav1d (~dav1d@user/dav1d) (*.net *.split)
[09:24:12] *** Quits: bloodElk (~bloodElk@user/bloodelk) (*.net *.split)
[09:24:12] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (*.net *.split)
[09:24:12] *** Quits: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953) (*.net *.split)
[09:24:12] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (*.net *.split)
[09:24:12] *** Quits: l4yer (~l4yer@2a02:6ea0:e102:0:1011:8d08:ca14:8f03) (*.net *.split)
[09:24:12] *** Quits: dxrt (~dxrt@user/dxrt) (*.net *.split)
[09:24:12] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (*.net *.split)
[09:24:12] *** Quits: explodes (~explodes@user/explodes) (*.net *.split)
[09:24:12] *** Quits: grawity (grawity@star.nullroute.lt) (*.net *.split)
[09:24:12] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[09:24:12] *** Quits: Dantali0n (~Dantali0n@2a10:3781:15ed::2003) (*.net *.split)
[09:24:12] *** Quits: Gerlo (~Gerlo@user/gerlo) (*.net *.split)
[09:24:12] *** Quits: Togra (~Togra@user/togra) (*.net *.split)
[09:24:12] *** Quits: drmessano (drmessano@user/drmessano) (*.net *.split)
[09:24:12] *** Quits: pjlsergeant (sid143467@hampstead.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: flagrama (sid145621@hampstead.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: josh_h (sid301834@helmsley.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: codebam (~codebam@user/codebam) (*.net *.split)
[09:24:12] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[09:24:12] *** Quits: Brocker (~NoBody@user/brocker) (*.net *.split)
[09:24:12] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[09:24:12] *** Quits: AMG (ghebo@user/amg) (*.net *.split)
[09:24:12] *** Quits: Tashtari (~tashtari@user/tashtari) (*.net *.split)
[09:24:12] *** Quits: osxtra (~root@136.49.108.80) (*.net *.split)
[09:24:12] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[09:24:12] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[09:24:12] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (*.net *.split)
[09:24:12] *** Quits: Quack (~Quack@185.21.216.169) (*.net *.split)
[09:24:12] *** Quits: MightyMu (~MightyMu@104.131.138.31) (*.net *.split)
[09:24:12] *** Quits: xavierdarkness (~xavierdar@user/xavierdarkness) (*.net *.split)
[09:24:12] *** Quits: fxrs (~fxrs@192.227.212.130) (*.net *.split)
[09:24:12] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[09:24:12] *** Quits: jancoow (~jancoow@user/jancoow) (*.net *.split)
[09:24:12] *** Quits: programmerq (~programme@user/programmerq) (*.net *.split)
[09:24:12] *** Quits: Bato (~plauder@2001:bc8:182c:b39::1) (*.net *.split)
[09:24:12] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (*.net *.split)
[09:24:12] *** Quits: the4oo4 (~the4oo4@shenzhou.whatbox.ca) (*.net *.split)
[09:24:12] *** Quits: olasd (~olasd@softwareheritage/olasd) (*.net *.split)
[09:24:12] *** Quits: fakenullie (~nullie@london.nullie.name) (*.net *.split)
[09:24:12] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (*.net *.split)
[09:24:12] *** Quits: MrNaz (sid133418@uxbridge.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: dunc (sid16@uxbridge.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: VSpike (~johncc@2001:bc8:47ac:1a22::1) (*.net *.split)
[09:24:12] *** Quits: roguelazer (~jbrown@sietchtabr.roguelazer.net) (*.net *.split)
[09:24:12] *** Quits: Dystopia (~Dystopia@159.65.223.12) (*.net *.split)
[09:24:12] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[09:24:12] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (*.net *.split)
[09:24:12] *** Quits: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9) (*.net *.split)
[09:24:12] *** Quits: zeus (~user@user/kamyl) (*.net *.split)
[09:24:12] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (*.net *.split)
[09:24:12] *** Quits: meph (~mepholic@flux.hxx.in) (*.net *.split)
[09:24:12] *** Quits: exarkun (~exarkun@user/exarkun) (*.net *.split)
[09:24:12] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (*.net *.split)
[09:24:12] *** Quits: shrysr (~shrysr@user/shrysr) (*.net *.split)
[09:24:12] *** Quits: acnebs (~acnebs@2604:a880:400:d0::1a64:c001) (*.net *.split)
[09:24:12] *** Quits: bboles (~bboles@64.94.212.195) (*.net *.split)
[09:24:12] *** Quits: Superstars111 (~jared@li227-215.members.linode.com) (*.net *.split)
[09:24:12] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[09:24:12] *** Quits: francis (francis@user/francis) (*.net *.split)
[09:24:12] *** Quits: andi_ (~andi@user/andi/x-3467420) (*.net *.split)
[09:24:20] *** Joins: Superstars111 (~jared@li227-215.members.linode.com)
[09:24:21] *** Joins: francis (francis@user/francis)
[09:24:21] *** Joins: zeus (~user@user/kamyl)
[09:24:22] *** Joins: meph (~mepholic@flux.hxx.in)
[09:24:22] *** Joins: the4oo4 (~the4oo4@shenzhou.whatbox.ca)
[09:24:26] *** Joins: Riviera (Riviera@user/riviera)
[09:24:27] *** Joins: codebam (~codebam@user/codebam)
[09:24:27] *** Joins: Soni (~quassel@autistic.space)
[09:24:29] *** Joins: Bato (~plauder@2001:bc8:182c:b39::1)
[09:24:32] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[09:24:32] *** Joins: MrNaz (sid133418@id-133418.uxbridge.irccloud.com)
[09:24:35] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[09:24:36] *** Joins: flagrama (sid145621@id-145621.hampstead.irccloud.com)
[09:24:39] *** Joins: drmessano (drmessano@user/drmessano)
[09:25:07] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[09:25:09] *** Joins: roguelazer (~jbrown@sietchtabr.roguelazer.net)
[09:25:11] *** Joins: dav1d (~dav1d@user/dav1d)
[09:25:11] *** Joins: bboles (~bboles@64.94.212.195)
[09:25:11] *** Joins: exarkun (~exarkun@user/exarkun)
[09:25:19] *** Joins: l4yer (~l4yer@2a02:6ea0:e102:0:1011:8d08:ca14:8f03)
[09:25:30] *** Joins: jancoow (~jancoow@user/jancoow)
[09:25:35] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[09:25:38] *** Joins: grawity (grawity@star.nullroute.lt)
[09:25:38] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[09:25:42] *** Joins: bloodElk (~bloodElk@user/bloodelk)
[09:25:42] *** Joins: fxrs (~fxrs@192.227.212.130)
[09:25:42] *** Joins: acnebs (~acnebs@198.199.68.107)
[09:25:42] *** Joins: dxrt (~dxrt@user/dxrt)
[09:25:42] *** Joins: wyre (~wyre@user/wyre)
[09:25:43] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[09:25:43] *** Joins: shrysr (~shrysr@user/shrysr)
[09:25:44] *** Joins: xavierdarkness (~xavierdar@user/xavierdarkness)
[09:25:50] *** Joins: Dystopia (~Dystopia@159.65.223.12)
[09:25:57] *** Joins: hexology (~hexology@user/hexology)
[09:26:01] *** Joins: fakenullie (~nullie@london.nullie.name)
[09:26:01] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[09:26:03] *** Joins: MightyMu (~MightyMu@104.131.138.31)
[09:26:13] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[09:26:14] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[09:26:23] *** Joins: explodes (~explodes@user/explodes)
[09:26:30] *** Joins: energizer (~energizer@user/energizer)
[09:26:32] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Quit: Leaving)
[09:28:44] *** Joins: mjsir911 (~bnc@user/mjsir911)
[09:28:46] *** Quits: avikalp (~avikalp@49.36.103.196) (Read error: Connection reset by peer)
[09:29:00] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:29:20] *** Joins: Togra (~Togra@user/togra)
[09:29:29] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[09:29:53] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[09:30:27] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:32:50] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (*.net *.split)
[09:32:50] *** Quits: MelMalik (ellenor@vice-chairwoman.of.freenode.management) (*.net *.split)
[09:32:50] *** Quits: Chex (~Chex@user/chex) (*.net *.split)
[09:32:50] *** Quits: tdsmith (~tdsmith@tds.xyz) (*.net *.split)
[09:32:50] *** Quits: queue[m] (~queue-@2001:470:69fc:105::1:1892) (*.net *.split)
[09:32:50] *** Quits: ptival (~ptival@2001:470:69fc:105::41fc) (*.net *.split)
[09:32:50] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (*.net *.split)
[09:32:50] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (*.net *.split)
[09:32:50] *** Quits: psydroid (~psydroid@user/psydroid) (*.net *.split)
[09:32:50] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (*.net *.split)
[09:32:50] *** Quits: u4t (~chat@78.ip-139-99-236.net) (*.net *.split)
[09:32:50] *** Quits: toine (~antoine@2001:41d0:e:41f::1) (*.net *.split)
[09:32:50] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[09:32:50] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[09:32:50] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (*.net *.split)
[09:32:50] *** Quits: jor (~jor@jor.link) (*.net *.split)
[09:32:50] *** Quits: webmind (~webmind@user/webmind) (*.net *.split)
[09:32:50] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (*.net *.split)
[09:32:50] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[09:32:50] *** Quits: meridion (~meridion@punt.hetgrotebos.org) (*.net *.split)
[09:32:50] *** Quits: Armen (~Armen@armen138.com) (*.net *.split)
[09:32:50] *** Quits: mirai (~mirai@2001:bc8:630:161::1) (*.net *.split)
[09:32:50] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (*.net *.split)
[09:32:50] *** Quits: wintrmute (~wintrmute@bit.pappanaka.com) (*.net *.split)
[09:32:50] *** Quits: rookie101 (~rookie@207.154.204.166) (*.net *.split)
[09:32:50] *** Quits: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78) (*.net *.split)
[09:32:50] *** Quits: niluje (~niluje@2a05:d012:f91:1700:6975:ef0b:def6:3bdd) (*.net *.split)
[09:32:50] *** Quits: dnns01 (~quassel@2a02:c207:3003:651::1) (*.net *.split)
[09:32:50] *** Quits: sybariten (~jake@157.90.217.120) (*.net *.split)
[09:32:50] *** Quits: Wegge (~wegge@user/wegge) (*.net *.split)
[09:32:50] *** Quits: ttkap (~ttkap@user/ttkap) (*.net *.split)
[09:32:50] *** Quits: anthraxx (~anthraxx@archlinux/developer/anthraxx) (*.net *.split)
[09:32:50] *** Quits: ThiefMaster (~thief@indico/developer/thiefmaster) (*.net *.split)
[09:32:50] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[09:32:50] *** Quits: Fingel (~fingel@user/fingel) (*.net *.split)
[09:32:50] *** Quits: FunkyBob (~curtis@vhost3.tinbrain.net) (*.net *.split)
[09:32:50] *** Quits: librenaut (~librenaut@user/librenaut) (*.net *.split)
[09:32:50] *** Quits: Kingsy (~chris@kingsy.co.uk) (*.net *.split)
[09:32:50] *** Quits: syllin (~syllin@user/syllin) (*.net *.split)
[09:32:50] *** Quits: nomn (nomn@user/nomn) (*.net *.split)
[09:32:50] *** Quits: binchickin (~binchicki@165.22.169.69) (*.net *.split)
[09:32:50] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[09:32:58] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[09:32:59] *** Joins: dnns01 (~quassel@2a02:c207:3003:651::1)
[09:32:59] *** Joins: FunkyBob (~curtis@vhost3.tinbrain.net)
[09:33:01] *** Joins: Wegge (~wegge@user/wegge)
[09:33:04] *** Joins: anthraxx (~anthraxx@archlinux/developer/anthraxx)
[09:33:04] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[09:33:17] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[09:33:19] *** Joins: syllin (~syllin@user/syllin)
[09:33:25] *** Joins: wintrmute (~wintrmute@bit.pappanaka.com)
[09:33:33] *** Joins: ThiefMaster (~thief@indico/developer/thiefmaster)
[09:33:33] *** Joins: binchickin (~binchicki@165.22.169.69)
[09:33:40] *** Joins: jor (~jor@jor.link)
[09:33:43] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[09:33:44] *** Joins: Armen (~Armen@armen138.com)
[09:33:44] *** Joins: webmind (~webmind@user/webmind)
[09:33:45] *** Joins: niluje (~niluje@2a05:d012:f91:1700:6975:ef0b:def6:3bdd)
[09:33:46] *** Joins: bkhl (~bkhl@user/bkhl)
[09:33:49] *** Joins: Fingel (fingel@user/fingel)
[09:33:53] *** Joins: Henry151 (~bishop@user/henry151)
[09:33:55] *** Joins: rookie101 (~rookie@207.154.204.166)
[09:34:01] *** Joins: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78)
[09:34:39] <KirkMcDonald> It seems people are doing terrible things with Unicode directionality characters: https://www.lightbluetouchpaper.org/2021/11/01/trojan-source-invisible-vulnerabilities/
[09:35:03] *** Joins: mirai (~mirai@2001:bc8:630:161::1)
[09:35:07] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[09:36:05] *** Joins: ptival (~ptival@2001:470:69fc:105::41fc)
[09:36:37] *** Quits: HaMsTeRs (~Thunderbi@14-0-171-069.static.pccw-hkt.com) (Quit: HaMsTeRs)
[09:37:38] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[09:39:11] *** Joins: psydroid (~psydroid@user/psydroid)
[09:39:30] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[09:40:12] <aphysically> ...what is even the suggested mitigation
[09:40:16] <aphysically> compiler level or what
[09:40:17] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[09:41:26] *** Joins: queue[m] (~queue-@2001:470:69fc:105::1:1892)
[09:41:38] *** Joins: nomic (~nomic@185.192.69.57)
[09:41:46] <Wulf> aphysically: could start by using a better editor.
[09:42:06] * aphysically is not going to stop using vim
[09:42:09] <aphysically> :^)
[09:42:24] <aphysically> I recently started trying out neovim LSP and tree-sitter though that's fun
[09:42:34] <aphysically> I also installed vscodium for the first time :O
[09:42:51] *** Joins: MelanieMalik (ellenor@vice-chairwoman.of.freenode.management)
[09:42:54] <Wulf> aphysically: oh, then you're already using the best editor.
[09:43:07] <Wulf> aphysically: try to open https://raw.githubusercontent.com/nickboucher/trojan-source/main/Python/invisible-function.py on vim.
[09:44:34] <aphysically> Wulf: https://i.imgur.com/Vjnp7MR.png
[09:45:31] <dodo> which editors would actually show the "incomplete" version?
[09:45:37] <aphysically> but if they've found a way to sneak in lookalike characters that's more problematic; it's probably not a problem in practice though because I doubt it will work
[09:45:48] <aphysically> (looklike characters are inevitably going to look nothing like my accustomed terminal font)
[09:45:56] <aphysically> (hopefully)
[09:45:57] <aphysically> (:^)
[09:46:19] *** Joins: djapo (~archangel@user/djapo)
[09:47:09] <aphysically> I mean I guess the bigger deal is people often won't review github PRs in vim
[09:47:26] <deltab> do Α and A look different?
[09:47:39] <aphysically> no :^(
[09:47:59] *** MelanieMalik is now known as MelMalik
[09:48:17] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:48:26] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[09:49:10] *** Joins: seednode4 (~seednode@user/seednode)
[09:49:20] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[09:49:35] <Wulf> best mitigation would be to change code quality tools to warn about stuff like this
[09:50:22] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[09:50:31] <aphysically> looks like rust already released an update to lint against it
[09:50:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:51:38] <aphysically> rust is taking the route of preventing source code with it from being compiled
[09:52:21] <aphysically> probably reasonable
[09:52:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:52:34] <parv> Wulf, That invisible* causes SyntaxError in python 3.[6-9]
[09:53:08] <aphysically> this kind of thing is nasty because even if common languages implement workarounds today, it's the kind of bug that people won't think to know about when they make new compilers "tomorrow" and so will continue to be a bug again and again
[09:54:02] *** Quits: p-i-_ (~Ohmu@223.206.150.241) (Ping timeout: 260 seconds)
[09:54:04] <Wulf> parv: yep, but the other examples from https://github.com/nickboucher/trojan-source/tree/main/Python/ seem to work.
[09:54:28] <aphysically> I wonder what the CPython response was
[09:55:06] <aphysically> the vuln people say they got responses from languages of CVEs/patch commitments to being told it's not a problem
[09:55:08] <dodo> i mean.. if a malicious coder can commit to your repo unicode attacks seem like the least of your worries..
[09:55:21] <aphysically> but they didn't mention who
[09:55:44] <aphysically> dodo: I think the idea is you hide it in a seemingly legitimate PR on github or something and it gets merged
[09:55:46] <aphysically> at least that's the gist I got
[09:56:08] <dodo> aphysically: github shows the entire code for me too
[09:56:30] <aphysically> the authors mentioned specifically that github had committed to patching it
[09:56:43] <aphysically> so that could be, ostensibly, that they have dodo
[09:57:04] <aphysically> we would have to go see what github looked like yesterday to be sure, I guess
[09:57:08] <aphysically> or last month or whatever
[09:58:41] <twb> aphysically: implementors have had 3 months of escrow to deal with it
[09:59:20] *** Joins: manti7 (~manti7@176.10.104.94)
[09:59:27] <twb> And at least the second CVE is already discussed at length in some TRs on unicode.org
[09:59:53] <twb> I don't know offhand if there's an entry on cwe.mitre.org yet
[10:00:19] *** Quits: brookesy66 (~will@123-243-15-48.tpgi.com.au) (Quit: WeeChat 3.3)
[10:00:33] <aphysically> twb: in an interview the bug finder people mentioned they were basically blown off by some people so there's most probably at least some places not doing anything about it
[10:01:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[10:01:05] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[10:01:43] <aphysically> not sure if Python is included in that group
[10:01:48] <twb> aphysically: that is incredibly common, which is why https://en.wikipedia.org/wiki/Responsible_disclosure is a thing :-(
[10:02:11] <twb> e.g. git claiming SHA-1 was totally fine
[10:02:29] <aphysically> does git still use SHA-1? I know they're trying to move away from it but it's taking ages isn't it?
[10:02:39] <aphysically> at least last I heard it's still using SHA-1
[10:02:40] <twb> aphysically: SHA-2 is experimental
[10:02:51] <aphysically> SHA..2?
[10:02:56] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[10:03:06] *** Joins: fikran (~fikran@user/fikran)
[10:03:06] <aphysically> not that there's a problem with that; it just seems an odd choice I guess
[10:03:20] <twb> They're lazy
[10:03:27] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[10:03:30] <aphysically> if you're committed to only using SHA, SHA-3 came out way before that mess didn't it?
[10:03:48] <aphysically> but SHA-3 (and SHA-2 for that matter) don't seem to have been widely adopted
[10:03:56] <twb> fossil has been pure SHA3 for ages
[10:04:09] <twb> https://fossil-scm.org/home/doc/trunk/www/hashpolicy.wiki
[10:04:17] <aphysically> there's been a ton of movement toward blake2b which I'm not sure why
[10:04:35] <aphysically> as in, crypto-socially I'm not sure how it came to be that blake2b in particular is so widely adopted
[10:05:01] <twb> aphysically: it's faster than keccak on non-embedded hw
[10:05:19] <aphysically> all the cool kids are using xxhash and blake2b these days
[10:05:25] <aphysically> (for non- and cryptographic hash functions)
[10:07:21] <aphysically> I guess now that I think about it you do see SHA-2 a lot of places that were using SHA-1 before
[10:07:27] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[10:07:32] <aphysically> like certs and such
[10:07:33] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[10:08:35] *** Joins: kosh (~kosh@user/kosh)
[10:09:41] *** Joins: Maikel (~Maikel@130.61.63.136)
[10:11:13] <aphysically> gitlab said they're deploying something to make it visible too (along with github)
[10:12:02] <parv> early-return was  rather insidious, could have been spotted if I had used proper font (Google NotoMono, xterm, vim). "H" of "sayHello" is however rendered the same. Interesting ... to say the least
[10:12:42] *** Quits: luva (~luva@159.48.53.252) (Ping timeout: 260 seconds)
[10:13:33] *** Joins: p-i- (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th)
[10:13:34] <aphysically> I guess we'll find out if python decided to do any mitigations in the next day or so
[10:14:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:16:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:16:39] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 260 seconds)
[10:18:56] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[10:20:03] *** Joins: upsala (~zcb@185.213.155.232)
[10:23:08] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[10:24:16] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[10:27:57] *** Joins: luva (~luva@159.48.53.252)
[10:28:43] *** Quits: cheater (~Username@user/cheater) (Read error: Connection reset by peer)
[10:28:52] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:30:41] *** Quits: besin88 (~besbin@69.4.234.105) (Read error: Connection reset by peer)
[10:32:11] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 264 seconds)
[10:34:49] *** Joins: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr)
[10:36:25] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[10:37:22] *** Joins: cheater (~Username@user/cheater)
[10:38:51] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[10:41:41] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[10:43:51] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Ping timeout: 245 seconds)
[10:43:54] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[10:44:04] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[10:46:18] *** Joins: gusto (~Augustus@2620:149:e0:6001::7)
[10:49:14] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Killed (NickServ (GHOST command used by Omega037-B)))
[10:50:23] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 268 seconds)
[10:51:59] *** Joins: palasso (~palasso@user/palasso)
[10:52:15] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:52:15] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:54:21] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:54:50] *** Joins: Inline (~Inline@2a02:908:1252:7a80:86ce:9852:a68c:aeee)
[10:55:10] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:55:20] *** Quits: rMdes (~rmdes@my.armada.digital) (Quit: The Lounge - https://thelounge.github.io)
[10:55:28] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:55:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:58:01] *** Joins: ravan (~ravan@user/ravan)
[10:58:02] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 260 seconds)
[10:58:40] *** Joins: dbristow_ (~dbristow@user/dbristow)
[11:00:53] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 265 seconds)
[11:01:35] *** Quits: dbristow (~dbristow@user/dbristow) (Ping timeout: 264 seconds)
[11:02:12] *** Quits: p-i- (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th) (Remote host closed the connection)
[11:02:48] *** Joins: p-i- (~Ohmu@223.206.144.16)
[11:04:35] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 268 seconds)
[11:06:35] *** Quits: gusto (~Augustus@2620:149:e0:6001::7) (Read error: Connection reset by peer)
[11:06:37] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[11:07:01] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:10:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:12:24] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:13:48] *** Joins: gusto (~Augustus@109.255.100.54)
[11:16:03] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[11:17:33] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:20:06] *** Joins: magla (~gelignite@55d4d950.access.ecotel.net)
[11:21:16] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:22:14] *** Quits: luva (~luva@159.48.53.252) (Ping timeout: 260 seconds)
[11:24:08] *** Quits: AlanMD_ (~AlanMD@86.121.179.183) (Remote host closed the connection)
[11:24:31] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[11:24:44] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:25:02] *** Quits: floogy (~floogy@p200300c92f1fea00145150afd4f072cd.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[11:25:32] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[11:26:02] *** Joins: delvian (~delvian@41.13.220.35)
[11:26:03] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:886c:28eb:676e:2add) (Remote host closed the connection)
[11:26:16] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:6fe3:bcb1:43f4:e29c)
[11:27:04] *** Joins: rendar (~rendar@user/rendar)
[11:28:33] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:6fe3:bcb1:43f4:e29c) (Remote host closed the connection)
[11:28:38] *** Joins: yepla (~yepla@bez60-3-78-197-24-235.fbx.proxad.net)
[11:28:46] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:ec66:1e29:9b4a:5827)
[11:28:58] *** Quits: yepla (~yepla@bez60-3-78-197-24-235.fbx.proxad.net) (Client Quit)
[11:29:35] *** Quits: brainstew0 (brainstew0@50-80-133-185.client.mchsi.com) (Quit: Going offline, see ya! (www.adiirc.com))
[11:30:01] *** Joins: yepla (~yepla@bez60-3-78-197-24-235.fbx.proxad.net)
[11:31:59] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[11:32:04] *** Joins: cheater (~Username@user/cheater)
[11:33:07] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[11:35:16] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[11:35:18] *** Quits: grooverman (~grooverma@179.99.123.165) (Ping timeout: 260 seconds)
[11:35:25] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:35:33] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:37:28] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[11:37:50] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:38:29] *** Joins: luva (~luva@159.48.53.252)
[11:39:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:42:59] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[11:46:25] *** LiaoTao_ is now known as LiaoTao
[11:49:20] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:55:02] *** Joins: brelod (~me@90.244.150.142)
[11:55:54] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 260 seconds)
[11:57:38] *** Joins: sgn (~sgn@user/sgn)
[12:00:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:86ce:9852:a68c:aeee) (Quit: Leaving)
[12:00:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80:86ce:9852:a68c:aeee)
[12:08:40] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[12:10:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[12:10:56] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[12:11:10] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 268 seconds)
[12:11:11] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[12:12:06] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:12:27] *** Joins: fikran (~fikran@user/fikran)
[12:13:02] *** Joins: sgn (~sgn@user/sgn)
[12:13:17] *** Joins: vak0160 (~vak0160@118.99.104.63)
[12:13:34] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[12:16:01] *** Quits: vak0160 (~vak0160@118.99.104.63) (Client Quit)
[12:17:18] *** Quits: yepla (~yepla@bez60-3-78-197-24-235.fbx.proxad.net) (Quit: No Ping reply in 180 seconds.)
[12:17:23] *** Quits: encukou (quassel@nat-pool-brq-t.redhat.com) (Remote host closed the connection)
[12:18:20] *** Quits: evilissimo (vfeenstr@redhat/evilissimo) (Ping timeout: 246 seconds)
[12:18:39] *** Joins: encukou (quassel@nat-pool-brq-t.redhat.com)
[12:19:06] *** Joins: yepla (~yepla@bez60-3-78-197-24-235.fbx.proxad.net)
[12:19:47] *** Joins: NeoCore (~neocore@89.40.183.30)
[12:19:57] *** Joins: arinov (~arinov@213.194.126.155)
[12:22:01] *** Quits: yepla (~yepla@bez60-3-78-197-24-235.fbx.proxad.net) (Client Quit)
[12:22:29] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:23:53] *** Joins: OPK (~OPK@user/opk)
[12:24:07] *** Joins: kostkon_ (~kostkon@2a02:587:a115:b544:bb56:c21f:3bea:4fdd)
[12:24:10] *** dcaro_away is now known as dcaro
[12:24:23] *** Quits: kostkon (~kostkon@2a02:587:a10a:f794:2241:1740:cc3e:322d) (Ping timeout: 264 seconds)
[12:24:32] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:26:26] *** Joins: kostkon__ (~kostkon@2a02:587:a115:b544:bb56:c21f:3bea:4fdd)
[12:28:58] *** Quits: kostkon_ (~kostkon@2a02:587:a115:b544:bb56:c21f:3bea:4fdd) (Ping timeout: 260 seconds)
[12:29:36] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[12:30:05] *** Joins: ano (~ano@user/ano)
[12:30:14] *** Quits: ptival (~ptival@2001:470:69fc:105::41fc) (Quit: You have been kicked for being idle)
[12:31:35] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[12:31:37] *** Joins: alzgh (~alzgh@user/alzgh)
[12:36:19] *** Quits: javascout (~java@2406:da1c:87a:b700:ba4:9251:3d45:648d) (Quit: Kā kite ano i a koutou)
[12:36:27] *** Quits: luva (~luva@159.48.53.252) (Ping timeout: 268 seconds)
[12:37:13] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d) (Ping timeout: 256 seconds)
[12:37:22] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[12:37:45] *** Quits: seabre (~seabre@user/seabre) (Ping timeout: 260 seconds)
[12:38:35] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[12:38:45] *** Joins: seabre (~seabre@user/seabre)
[12:38:55] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:39:23] *** Joins: java (~java@2406:da1c:87a:b700:ba4:9251:3d45:648d)
[12:41:34] *** Joins: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052)
[12:41:41] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[12:41:46] <mad_moses> Hi, I am getting this exception in my server log: 52060     lang                    = translation.get_language().split('-')[1]
[12:41:46] <mad_moses> 52061 IndexError: list index out of range
[12:42:06] <mad_moses> How can I extend this error message with the string? is this possible?
[12:42:08] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Ping timeout: 246 seconds)
[12:42:57] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[12:43:11] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[12:43:24] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[12:44:55] <supakeen> You could log it, but it's pretty evident that the string doesn't contain a `-`.
[12:45:06] *** Joins: chele (~chele@user/chele)
[12:47:34] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[12:52:55] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Ping timeout: 260 seconds)
[12:53:40] *** Joins: luva (~luva@159.48.53.253)
[12:53:41] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:53:47] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 264 seconds)
[12:53:50] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[12:53:58] *** Joins: alkino (~quassel@user/alkino)
[12:54:36] <mad_moses> supakeen: yes, but I would like to see how the string looks like.
[12:55:09] <mad_moses> supakeen: there must be a bug somewhere. At this point the string have to had a "-"
[12:56:28] *** Joins: gusto (~Augustus@109.255.100.54)
[12:57:06] *** Joins: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-127.pool.digikabel.hu)
[12:58:36] *** Joins: tobybl_ (~tobybl@213.31.135.91)
[13:00:25] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[13:00:56] *** Quits: sharperguy (~sharpergu@88.130.218.27) (Ping timeout: 245 seconds)
[13:01:10] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[13:01:16] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[13:01:45] *** Quits: tobybl (~tobybl@213.31.135.91) (Ping timeout: 268 seconds)
[13:02:07] <nedbat> mad_moses: the only way to get more information is to add code to that file
[13:02:33] <mad_moses> nedbat: yes, how can I add a string to that message at that point?
[13:03:05] <supakeen> You would need to log the values yourself (add code) or run the code under a debugger to take a look at the values post-fact.
[13:03:08] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:03:23] <nedbat> mad_moses: you could put a try/catch around that line
[13:03:25] *** Joins: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul)
[13:03:33] <nedbat> sorry, try/except
[13:03:55] <mad_moses> >> You would need to log the values yourself (add code) or run the code under a debugger to take a look at the values post-fact. debbuger is not possible. This is happening only in production
[13:04:22] <supakeen> nedbat: Have you been cheating on use with different languages :>
[13:04:26] <mad_moses> try: ... except: raise Exception("My string" + value)  <== like that?
[13:05:30] <nedbat> supakeen: i guess i've been saying try/catch since my java days?
[13:05:32] <supakeen> mad_moses: I tend to have something like this `try: ...; except: logging.error("Received invalid value for `get_language(): %s`, translation.get_language()); raise;`.
[13:05:45] <nedbat> ^^
[13:05:53] <aphysically> TIL there's a unicode confusable spec https://www.unicode.org/reports/tr39/#Confusable_Detection
[13:05:57] <mad_moses> supakeen: thank you
[13:06:03] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[13:06:59] *** Quits: mortn (~weechat@81-234-122-230-no158.tbcn.telia.com) (Ping timeout: 268 seconds)
[13:07:44] <rendar> with this `return (args, kwargs)` how can express this in -> fn annotations?
[13:08:08] <rendar> tuple[list[t.Any], dict[str:t.Any]] ?
[13:08:36] <The-Compiler> rendar: almost, dict[str, t.Any]
[13:08:59] <rendar> but that's a tuple.. what about args? args is not a dict..
[13:09:06] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[13:09:18] <The-Compiler> rendar: no, I mean as part of your suggestion
[13:09:27] <The-Compiler> rendar: i.e.  tuple[list[t.Any], dict[str, t.Any]]
[13:09:40] <rendar> oh i see
[13:11:24] *** Joins: vit (~vit@chello085216193138.chello.sk)
[13:12:51] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[13:13:09] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[13:13:38] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:16:34] <zamba> anyone got some algorithms for comparing wrapping sequence numbers? basically i have a sequence counter that will increase until a certain value where it wraps and then starts all over again..
[13:16:57] <zamba> i feel this is something that's done over and over again
[13:17:13] <zamba> it goes from 0 to 16383 and then starts at 0 again
[13:17:24] <zamba> and i want to flag if there's a jump/gap in these sequences
[13:17:27] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[13:18:00] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:18:21] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[13:18:45] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:18:50] *** Quits: daoudr (~daoudr@178.197.208.229) (Remote host closed the connection)
[13:21:47] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:23:03] *** Joins: Mikro (leo@libera.ninja)
[13:28:05] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:28:17] <iflema> cycle from itertools?
[13:29:33] *** Quits: Strom (strom@fedora/strom) ()
[13:29:36] *** Joins: mortn (~weechat@81-234-122-230-no158.tbcn.telia.com)
[13:30:48] <zamba> iflema: hm.. no.. i'm not creating sequence numbers.. i'm parsing data and reading out sequence numbers.. and i want a more efficient way of determining if there's any data packets out of order/sequence
[13:30:50] *** Quits: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-127.pool.digikabel.hu) (Quit: leaving)
[13:31:08] *** Joins: Strom (strom@fedora/strom)
[13:31:25] *** Joins: shurane (sid132556@id-132556.helmsley.irccloud.com)
[13:31:32] *** Joins: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-127.pool.digikabel.hu)
[13:32:41] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[13:33:22] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:33:55] <ThiefMaster> for an end-user application I support python 3.9 and 3.10 - is `python_requires = >=3.9.0, <3.11` the best way of specifying this? (since there doesn't seem to be a way to use `~3.9.0 or ~3.10.0` unless i just didn't find the documentation for an OR operator there in the docs)
[13:37:52] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:a121:38cf:b8e7:b8a7)
[13:39:45] <iflema> zamba: what do you do now. What about something that detects ranges the if the sequence is unbroken the there will be only one range, otherwise you get a list of where it broke and the rest
[13:40:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:41:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[13:43:52] *** Joins: olasd (~olasd@softwareheritage/olasd)
[13:46:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:46:24] <bjs> zamba: I'm not entirely sure what part you're trying to check?  You mean you are given two numbers and want to know if they're consecutive?
[13:46:45] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[13:47:23] *** Joins: cursey (~cursey@user/cursey)
[13:47:33] *** Joins: p-i-_ (~Ohmu@223.206.144.16)
[13:51:41] *** Quits: p-i- (~Ohmu@223.206.144.16) (Ping timeout: 268 seconds)
[13:53:47] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[13:53:55] <iflema> RT
[13:55:23] *** Quits: luva (~luva@159.48.53.253) (Ping timeout: 268 seconds)
[13:55:33] <supakeen> `if b - a < 0`?
[13:57:15] <iflema> not 1?
[13:58:24] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[13:58:38] <supakeen> Depends on the rest of the details, if you're looking for 'is the next number lower than the previous one': 0, if you also care about 'i got the same message twice': 1.
[13:58:44] <supakeen> I'd say?
[14:00:50] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Client Quit)
[14:02:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:02:39] *** Joins: c_89 (~c_89@151.54.158.143)
[14:03:57] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[14:05:31] <iflema> ThiefMaster: >=3.9.0 should be enough
[14:05:32] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:06:04] *** Joins: Klinda (~superleag@user/klinda)
[14:07:26] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[14:07:43] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:08:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:08:31] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:09:08] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:09:45] *** Quits: Napalm (~Napalm@user/napalm) (Remote host closed the connection)
[14:11:36] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:12:10] <iflema> goodone
[14:12:14] *** Quits: ravan (~ravan@user/ravan) (Read error: No route to host)
[14:13:49] *** Joins: luva (~luva@5.180.62.157)
[14:14:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:15:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:15:44] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[14:15:51] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:17:50] <delvian> Hi again.  Can somebody please help me explain why line 64 always prints 0 the first time it runs https://gist.github.com/delvianv/c92c26fb1db76e2a96ac1cfe55c704cb?
[14:18:00] <delvian> So the problem is that the first time I change the month, the date always jumps to 1.  It's supposed to remember the selected date.  It works properly after that first change.
[14:18:09] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:18:27] *** Quits: TJ- (~root@user/tj-) (Quit: WeeChat 3.3)
[14:18:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:19:13] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:19:40] <nedbat> delvian: this isn't python code?
[14:20:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[14:20:02] <delvian> It's QML.  I'm using Qt for Python.
[14:20:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[14:20:34] <delvian> Hopefully, somebody here has knowledge of QML.
[14:21:20] *** Joins: ravan (~ravan@user/ravan)
[14:21:48] *** Joins: fikran (~fikran@user/fikran)
[14:21:51] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:22:19] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[14:23:14] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:23:18] *** Joins: arinov (~arinov@178.240.160.150)
[14:23:19] <delvian> The QtQuick channel only has ~40 members and it's very quiet.
[14:23:27] <delvian> The PySide channel has even less.
[14:23:43] <delvian> And PyQt seems dead.
[14:23:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[14:24:14] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:a121:38cf:b8e7:b8a7) (Ping timeout: 260 seconds)
[14:24:46] *** Joins: dnns01_ (~quassel@2a02:c207:3003:651::1)
[14:24:47] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:25:01] *** Quits: dnns01 (~quassel@2a02:c207:3003:651::1) (Read error: Connection reset by peer)
[14:25:53] <delvian> All those calls to _bridge is to Python.
[14:25:53] <nedbat> delvian: the comment on 156 says "starts at 0"
[14:26:40] <delvian> nedbat, yeah, that's just to remind me why I minus 1 there.
[14:27:16] <delvian> The combo box index starts at 0, but the list of dates start at 1.
[14:27:39] <supakeen> I could guess but I know nothing of either Qt or the language used.
[14:28:12] <zamba> bjs: i'm iterating through data.. reading and parsing out fields from this data.. and one of these fields is a sequence number/counter..
[14:28:36] <zamba> when iterating through this file i want to detect if there's a gap in sequence number.. basically.. if current sequence number is not + 1 from the previous one
[14:28:48] <zamba> and then you have the case where the sequence number wraps and starts all over again at 0
[14:29:21] <zamba> declaring prev_seq outside the loop.. setting it initially to None or whatever.. and then starting to compare.. it works.. but i feel it's inefficient somehow
[14:29:40] <zamba> i feel it's something i've done over and over again and that it should probably be some kind of function for
[14:29:45] <zamba> function/library
[14:30:58] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:31:06] <bjs> zamba: I don't really understand what the algorithm/function would do other than `if (this_value - last_value) % 16383 != 1: ...`
[14:31:28] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[14:32:32] *** Joins: dob1_ (~dob1@user/dob1)
[14:33:42] <bjs> (or rather % 16384 if you wrap to 0, probably)
[14:34:15] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 260 seconds)
[14:35:11] *** dob1_ is now known as dob1
[14:35:47] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:35:55] <bjs> (or `if (last_value + 1) % 16384 != this_value` if that reads better, there are lots of equivalent ways of writing this if)
[14:36:30] <lericson> zamba: use numpy
[14:37:23] *** Joins: nomn (nomn@user/nomn)
[14:37:55] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:38:06] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[14:38:46] *** Joins: CombatVet (~c4@user/combatvet)
[14:41:05] *** Joins: plastico (~plastico@neomutt/plastico)
[14:41:13] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:41:47] *** Joins: gregoryloscombe (~gregorylo@213.86.15.80)
[14:41:51] <zamba> bjs: ah, that looks good
[14:41:58] *** Quits: arinov (~arinov@178.240.160.150) (Ping timeout: 260 seconds)
[14:42:17] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[14:42:41] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[14:43:12] <bjs> zamba: another approach that is basically the same is just to generate the sequence of ids you expect and check they match, e.g. with itertools.cycle
[14:44:57] <zamba> bjs: well, your solution was neater than what i initially had :)
[14:45:56] *** Quits: c_89 (~c_89@151.54.158.143) (Quit: Connection closed)
[14:47:20] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:47:20] *** Joins: cth (~Cthulchu@193.194.107.250)
[14:52:09] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[14:52:14] <amosbird> Hello! Does python provide ways to calculate combinators like C(1, 3) and A(2, 3)?
[14:53:07] *** Quits: p-i-_ (~Ohmu@223.206.144.16) (Remote host closed the connection)
[14:53:42] *** Joins: p-i- (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th)
[14:53:48] *** dbristow_ is now known as dbristow
[14:53:54] *** Joins: CombatVet (~c4@user/combatvet)
[14:54:52] *** Joins: R035N3R (~phobos@user/r035n3r)
[14:55:01] *** Joins: computeiro (~Wender@189.37.66.193)
[14:55:50] <leduyquang753> Yes, math.comb and math.perm.
[14:57:01] <drogas> need backtracking introduction. Any good resources would be appreciated.
[14:57:04] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[14:57:38] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:58:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[14:58:37] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[14:58:41] *** Joins: xkuru (~xkuru@user/xkuru)
[14:58:52] <rendar> let's say i'm doing a console application which must print on the screen results of commands i type OR commands received in stdin or TCP: what about those external processes? e.g. a process that is connected with TCP, cannot print stuff in stdout, but it must send stuff through network, how to do this transparently? do i need a protocol?
[14:59:09] *** Joins: arinov (~arinov@213.194.126.155)
[14:59:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:59:50] *** dcaro is now known as dcaro_lunch
[15:00:12] *** Quits: xkuru (~xkuru@user/xkuru) (Client Quit)
[15:00:34] *** Joins: mrwick (~mrwick@user/mrwick)
[15:01:03] *** Joins: xkuru (~xkuru@user/xkuru)
[15:01:13] *** Joins: lovelace (~Elspeth@2.24.23.175)
[15:01:21] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:04:07] *** Quits: snalty_ (~Shhh@user/snalty) (Ping timeout: 260 seconds)
[15:04:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:04:59] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[15:06:42] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[15:08:23] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[15:09:17] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e120)
[15:09:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:09:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:58] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Client Quit)
[15:11:01] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[15:11:23] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[15:12:30] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:14:38] *** Quits: luva (~luva@5.180.62.157) (Ping timeout: 260 seconds)
[15:15:05] *** Quits: lovelace (~Elspeth@2.24.23.175) (Quit: Konversation terminated!)
[15:15:34] *** Quits: chele (~chele@user/chele) (Ping timeout: 268 seconds)
[15:16:36] *** Joins: lovelace (~Elspeth@2.24.23.175)
[15:17:05] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi)
[15:17:19] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:20:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:21:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:21:33] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[15:21:51] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 260 seconds)
[15:22:13] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:22:40] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:22:40] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:23:48] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:25:19] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:30:03] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[15:32:25] *** Joins: Payam (~Payam@138.106.57.131)
[15:32:42] *** Joins: wender (~Wender@189.41.172.101)
[15:33:11] *** Joins: luva (~luva@5.180.62.157)
[15:33:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:35:18] *** Quits: computeiro (~Wender@189.37.66.193) (Ping timeout: 268 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:10] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 260 seconds)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:53] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 264 seconds)
[15:38:39] *** nyanolantern is now known as nyany
[15:40:22] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[15:41:40] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:42:02] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi) (Quit: WeeChat 2.8)
[15:43:14] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:43:31] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Client Quit)
[15:45:50] *** Joins: ThreeOfLife (~Guest44@108.red-83-58-131.dynamicip.rima-tde.net)
[15:45:57] *** Quits: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-127.pool.digikabel.hu) (Quit: leaving)
[15:46:56] <ThreeOfLife> Anyone with experience reading/parsing gml (geography markup language) files?
[15:47:31] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[15:49:50] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[15:49:53] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:50:35] *** Joins: TJ- (~root@user/tj-)
[15:50:52] <Payam> Hi, Is Python3-pip a part of python3-env? or python3-minimal?
[15:50:55] *** Joins: ali1234 (~al@user/ali1234)
[15:51:16] *** Joins: gurki (~gurki@user/gurki)
[15:51:30] <Payam> Hi, Is Python3-pip a part of python3-dev? or python3-minimal?
[15:52:33] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:52:56] <mdk> neither, IIRC
[15:53:14] <hexnewbie> Payam: Assuming those are distro package names, neither. If it refers to something else, even less so.
[15:54:19] <hexnewbie> Payam: python3-pip is not even required by those packages (by minimal, obviously not so)
[15:54:25] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[15:55:25] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:55:40] <rendar> let's say i'm doing a console application which must print on the screen results of commands i type OR commands received in stdin or TCP: what about those external processes? e.g. a process that is connected with TCP, cannot print stuff in stdout, but it must send stuff through network, how to do this transparently? do i need a protocol?
[15:58:47] *** Joins: nomic (~nomic@185.192.69.57)
[15:59:48] *** Joins: u4t (~chat@78.ip-139-99-236.net)
[16:01:03] *** Quits: summonner (~summonner@188.26.74.156) (Quit: Leaving)
[16:01:18] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 260 seconds)
[16:01:37] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[16:02:12] *** Joins: computeiro (~Wender@189.37.66.193)
[16:03:59] <Payam> I send alot of requests at the same time. Sometimes the response status is not 200. Should I have a `sleep` between them you think?
[16:04:06] *** Quits: wender (~Wender@189.41.172.101) (Ping timeout: 260 seconds)
[16:04:53] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[16:05:58] <Kim^J> Payam: That depends on whatever you're firing requests at.
[16:06:11] *** Quits: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 246 seconds)
[16:08:01] <Payam> just some get request from an api
[16:09:16] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:09:42] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:11:35] *** Joins: rsx (~dummy@ppp-188-174-129-46.dynamic.mnet-online.de)
[16:11:57] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:12:41] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[16:12:44] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th)
[16:13:41] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[16:14:23] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[16:16:14] *** Quits: p-i- (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th) (Ping timeout: 260 seconds)
[16:17:10] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th) (Ping timeout: 260 seconds)
[16:17:42] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:18:33] *** Joins: darksun (~darksun@user/darksun)
[16:19:11] *** Joins: summonner (~summonner@188.26.74.156)
[16:19:42] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:19:57] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:24:10] *** Quits: luva (~luva@5.180.62.157) (Ping timeout: 260 seconds)
[16:24:27] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[16:25:44] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:25:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[16:26:00] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:26:14] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:26:15] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Ping timeout: 260 seconds)
[16:26:25] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:27:19] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:28:06] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[16:28:30] *** Joins: frost (~frost@user/frost)
[16:29:24] *** Joins: luva (~luva@5.180.62.157)
[16:29:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:29:42] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:30:07] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[16:30:22] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[16:30:45] *** Joins: bloody (~bloody@user/bloody)
[16:31:09] *** Joins: fikran (~fikran@user/fikran)
[16:32:31] *** Joins: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[16:32:44] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[16:32:52] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:34:05] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[16:37:02] *** Quits: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Quit: Leaving)
[16:37:10] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: pees oot)
[16:40:42] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:40:46] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[16:41:32] *** Joins: kosh (~kosh@user/kosh)
[16:41:35] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:41:54] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[16:42:12] *** Joins: wender (~Wender@189.15.202.128)
[16:43:00] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:43:00] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:43:38] *** Quits: fjmorazan_ (~quassel@user/fjmorazan) (Quit: fjmorazan_)
[16:44:13] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[16:44:37] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[16:44:58] *** Quits: computeiro (~Wender@189.37.66.193) (Ping timeout: 268 seconds)
[16:46:20] <gimzmoe_> .
[16:48:02] <hodapp> .
[16:48:22] <NoImNotNineVolt> .  https://krebsonsecurity.com/2021/11/trojan-source-bug-threatens-the-security-of-all-code/
[16:49:30] <NoImNotNineVolt> i've half-jokingly evangelized ascii here in my half-joking campaign against unicode, but this leaves me feeling half vindicated :P
[16:49:47] <BtbN> It primarily threathens crappy "I'm gonna use a Browser for a code editor"-Editors
[16:50:03] <NoImNotNineVolt> does it?
[16:50:05] <BtbN> Proper editors aren't affected it seems
[16:50:07] <supakeen> I like the endless cycle of people forget about things.
[16:50:10] <bss> there's some vindication to be had with that, but "the security of all code" is a *bit* of an exaggeration, no?
[16:50:10] <hodapp> I swear someone showed me a POC of this bug 10+ years ago
[16:50:22] <NoImNotNineVolt> do proper editors not render bidi stuff correctly?
[16:50:23] <supakeen> (this used to be common in the FXP days, then common in the filename days, then common in the curl ... | sh days)
[16:50:25] *** Joins: reset (~reset@user/reset)
[16:50:38] *** Joins: alzgh (~alzgh@user/alzgh)
[16:50:40] <MacGyver> supakeen: Is it "people forget" or is it "people weren't conscious back then".
[16:50:40] <supakeen> Good that it brings new attention and eyes onto it at least.
[16:50:42] <bss> the ordering of blocks with weird comments is novel, but the homonyms or whatever have been a thing for URLs for a long time
[16:50:46] <supakeen> MacGyver: We knew about it then :)
[16:50:48] <NoImNotNineVolt> bss: krebs blowing something out of proportion?! never! :P
[16:50:49] <hodapp> and what he showed me was almost the exact same thing - putting certain Unicode in comments in such a way that it hid code
[16:50:49] <gimzmoe_> https://stackoverflow.com/questions/11874767/how-do-i-plot-in-real-time-in-a-while-loop-using-matplotlib I'm a plot-noob, is there a way to only plot the last N objects, I'm using this example in my code.
[16:50:53] <MacGyver> supakeen: "we".
[16:50:56] *** gimzmoe_ is now known as gimzmoe
[16:51:05] <MacGyver> supakeen: Let me see if I can explain this better.
[16:51:09] <bss> NoImNotNineVolt: hah fair enough
[16:51:42] <NoImNotNineVolt> this is why i use nano on an os with no unicode support
[16:51:42] <supakeen> MacGyver: Let's see, this attack is mostly similar: https://www.openwall.com/lists/oss-security/2015/08/11/8
[16:51:50] * NoImNotNineVolt continues half-joking
[16:51:51] <MacGyver> supakeen: Communities (like IT) don't "age" the same way individuals do, with experiences internalized until they die. They age by losing old people and gaining new people.
[16:52:00] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[16:52:05] <supakeen> Sure that's what I mean, it's good that the circle repeats itself.
[16:52:15] <grym>  MacGyver: as long as you have a few sigma's worth of window overlap...
[16:52:26] <MacGyver> supakeen: As time progresses, once a serious issue is fixed, the new people aren't necessarily conscious of the issue ever having existed, until it crops up again.
[16:52:30] <supakeen> (I think that oss-sec is actually the wrong post)
[16:53:59] *** Joins: stdout (~stdout@216.163.21.11)
[16:54:50] <grym> supakeen: soon people will re-learn that you can do truly egregious things with csv, too
[16:56:07] <hodapp> see: Chesterton's fence
[16:56:47] <grym> that too
[16:59:27] *** dcaro_lunch is now known as dcaro
[17:00:19] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:01:08] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[17:01:21] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 245 seconds)
[17:02:09] *** Quits: rojiro (~rojiro@gateway/tor-sasl/rojiro) (Ping timeout: 276 seconds)
[17:02:15] *** Quits: delvian (~delvian@41.13.220.35) (Ping timeout: 268 seconds)
[17:02:33] *** Joins: rojiro (~rojiro@gateway/tor-sasl/rojiro)
[17:02:50] *** Joins: ATAD (~ATAD@user/atad)
[17:03:32] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[17:04:07] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[17:04:36] *** Joins: delvian (~delvian@41.13.220.35)
[17:04:39] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:07:48] *** Quits: rsx (~dummy@ppp-188-174-129-46.dynamic.mnet-online.de) (Ping timeout: 268 seconds)
[17:08:34] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 260 seconds)
[17:09:55] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:09:59] *** Joins: Thanatos (~Thanatos@105.112.179.248)
[17:10:34] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:11:15] *** Joins: snalty (~Shhh@user/snalty)
[17:11:48] *** Joins: georgios (~georgios@user/georgios)
[17:12:32] *** Joins: programmerq (~programme@user/programmerq)
[17:12:57] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:13:14] <Thanatos> Hello everyone
[17:14:04] <Swayze> HI!
[17:14:31] *** Quits: dxrt (~dxrt@user/dxrt) (Quit: ZNC - http://znc.sourceforge.net)
[17:14:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[17:14:44] *** Joins: dxrt (~dxrt@user/dxrt)
[17:16:22] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:16:41] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:16:51] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[17:17:02] *** Awoobis is now known as A_Dragon
[17:17:09] *** Quits: ThreeOfLife (~Guest44@108.red-83-58-131.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[17:18:10] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[17:18:30] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:18:57] <Thanatos> I'm using a windows machine. I have python script I want to run on a CentOS server(7.9). The server has no internet access and doesn't have python 3 installed. What's the fastest way to get it running? I'm looking into Vagrant v Docker
[17:19:14] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:19:45] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[17:19:51] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[17:20:10] <SnoopJ> Thanatos, can you install Python from a physical medium? I.e. download it on a machine that *does* have internet connectivity and copy it to this server?
[17:20:40] <SnoopJ> That would probably be 'fastest' assuming the build environment is relatively sane.
[17:20:54] <Thanatos> SnoopJ, hmm, that makes sense not sure about corporate policy on that.
[17:20:58] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[17:21:00] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:21:06] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[17:21:22] <Thanatos> How would I go about packaging dependencies in that case?
[17:22:36] <Thanatos> Just docopt and requests in this case, nothing esoteric.
[17:23:01] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:24:15] *** Quits: aoei (aoei@nethackscoreboard/aoei) (Quit: brb reboot)
[17:24:34] <SnoopJ> download the necessary wheels with pip and move those across too: `mkdir vendored_wheels && python3 -m pip download --dest vendored_wheels docopt requests`
[17:24:50] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[17:25:26] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[17:25:45] *** Joins: nomic (~nomic@185.192.69.57)
[17:25:59] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:26:12] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:26:52] *** Joins: aoei (aoei@nethackscoreboard/aoei)
[17:27:04] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[17:27:27] *** Joins: mickey89 (~user@user/mickey)
[17:28:02] <SnoopJ> you could do the same thing to install Python 3 if you can find an rpm (and its dependencies) that supports this version. Looks like there's an rpm for 3.6.8: https://centos.pkgs.org/7/centos-x86_64/python3-3.6.8-17.el7.i686.rpm.html
[17:28:07] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[17:28:43] <SnoopJ> should be more convenient than compiling Python yourself, although you'd be stuck with that if you wanted a newer version (unless you found a non-official rpm that provided it)
[17:28:48] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[17:28:50] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:c1c7:b90:e12f:7d31)
[17:29:27] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[17:29:28] *** mickey89 is now known as mickey8
[17:29:43] <kosh> couldn't you just install anaconda, it has a huge number of dependencies already built in, maybe what you need is already in there
[17:29:54] *** Joins: Elodin (~weechat@user/elodin)
[17:30:22] <SnoopJ> that's a pretty big increase in complexity for no real reason, but sure
[17:30:59] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:31:13] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 268 seconds)
[17:31:21] <kosh> I was thinking that would be easier
[17:31:23] <SnoopJ> Thanatos, it looks like yum has a comparable feature that lets you download RPMs, if you have another CentOS 7.9 system that does have connectivity, you could download what you need that way
[17:31:33] <SnoopJ> Might want to ask #centos for help with that
[17:31:56] <kosh> since it is one binary and should work on pretty much any linux dist and has most packages already included
[17:31:59] *** Joins: ano (~ano@user/ano)
[17:32:06] <SnoopJ> kosh, yes I just don't understand why you would think that since it's several orders of magnitude larger in filesize and pretty explicitly designed around internet access
[17:32:20] <SnoopJ> but it is not impossible to solve this problem this way
[17:32:34] <kosh> is file size a problem? it is small enough to stick on a flash drive
[17:32:49] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:33:03] <kosh> I was thinking that tracking down a bunch of rpms and their dependencies would be harder than just downloading a single binary
[17:33:08] <SnoopJ> Evidently
[17:33:12] <Thanatos> kosh, filesize shouldn't really a problem, I'll use scp to transfer the files
[17:33:42] *** Quits: luva (~luva@5.180.62.157) (Ping timeout: 268 seconds)
[17:34:32] <Thanatos> My plan was to load up a CentOS Vagrant box. Then use pyinstaller to make a onefile .rpm. Copy that rpm to the server.
[17:35:43] <SnoopJ> Loading up CentOS 7.9 in a VM and using yum's --downloadonly would be a little simpler I think
[17:36:27] <SnoopJ> PyInstaller could do it too, since it vendors the interpreter and deps
[17:36:53] <SnoopJ> although this doesn't make Python available on the system generally, so it might be kind of cumbersome if there are any other Python programs you might want to run on the system?
[17:37:55] <BtbN> Or just use Anaconda and copy the ready-made env over there
[17:38:05] <BtbN> Just have to make sure they're in the same path
[17:39:31] <Celelibi> Is there a nice way to have a context manager that handles "-" as a filename to mean sys.stdout?
[17:39:52] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[17:39:55] <Thanatos> BtbN, How large is the Anaconda rpm?
[17:40:04] <BtbN> I doubt it has one
[17:40:08] <SnoopJ> It doesn't IIRC
[17:40:23] <bjs> Celelibi: you mean like open()-but-also-accepts-"-"
[17:40:24] * SnoopJ has serious doubts Anaconda would alleviate more complexities than it introduces
[17:40:24] <BtbN> Its its own package manager
[17:40:44] <Celelibi> bjs, yes.
[17:40:59] <bjs> Celelibi: make a contextmanager that calls open() or just yields sys.stdout
[17:41:14] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:41:23] *** Joins: luva (~luva@5.180.62.157)
[17:41:24] <SnoopJ> `if fn == "-": yield sys.stdout; else: yield open(...)`
[17:41:40] <bjs> Celelibi: usually "-" is a command-line thing, and tools like click can do this for you
[17:41:45] <bjs> SnoopJ: you need to `with open(...) as f: yield f`
[17:41:55] <SnoopJ> err, yea
[17:42:08] *** Quits: delvian (~delvian@41.13.220.35) (Quit: Leaving)
[17:42:13] <SnoopJ> click does have nice machinery for this
[17:44:32] <bjs> I think the standard streams are supposed to support context manager protocol so you can `with sys.stdout: ...` but it doesn't do anything
[17:44:51] *** Joins: rsx (~dummy@ppp-188-174-141-116.dynamic.mnet-online.de)
[17:45:06] *** Joins: ubert (~Thunderbi@p548c9652.dip0.t-ipconnect.de)
[17:45:30] <SnoopJ> bjs, what would that do?
[17:45:36] <Celelibi> Oh interesting.
[17:45:40] <SnoopJ> that you can't already do with sys.stdout.write(...) etc.?
[17:45:45] <bjs> SnoopJ: nothing
[17:45:48] <SnoopJ> oh, lol
[17:46:08] <bjs> but it means sys.stdout isn't a different "type" of object or anything,  you can just have a function that returns open or returns sys.stdout
[17:46:50] <bjs> the docs say it's a file object, and file objects implement io.IOBase which says it must be a context manager... so I guess it's documented?
[17:46:57] *** Joins: delvian (~delvian@41.13.220.35)
[17:47:09] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[17:47:17] <bjs> Although it might actually close stdout(?) in which case, don't do that ;D
[17:48:04] <bjs> yeah nvm it seems to actually close stdout, so use the @contextmanager with an explicit `with open`
[17:48:05] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-541a-d54d-99fb-72fd.res6.spectrum.com)
[17:48:41] <Celelibi> Hm. Ok.
[17:50:13] *** Joins: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[17:50:30] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Ping timeout: 260 seconds)
[17:50:30] *** Joins: ThreeOfLife (~ThreeOfLi@108.red-83-58-131.dynamicip.rima-tde.net)
[17:51:25] *** Joins: superboot (~agentgasm@user/superboot)
[17:51:27] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[17:52:05] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:53:11] *** Joins: ravan (~ravan@user/ravan)
[17:53:31] <Celelibi> So, to handle stdout as well as stdin depending on the mode, testing on set(mode) & set("wxa+") should be good, right?
[17:53:55] *** Quits: gregoryloscombe (~gregorylo@213.86.15.80) (Ping timeout: 260 seconds)
[17:54:25] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[17:55:15] *** Joins: OnceMe (~stefan@user/onceme)
[17:55:21] <Celelibi> Hm... No, a rw should be invalid for a filename "-".
[17:55:38] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[17:55:44] <OnceMe> did anyone here uses PyCharm and remote python interpreter from docker? I have set that up, but installing dependencies like pip3 install django, is not visible in PyCharm, module not exist...?
[17:55:48] *** Joins: gregoryloscombe (~gregorylo@213.86.15.80)
[17:56:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[17:57:11] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:8ca1:238b:723f:2741)
[17:57:19] <gitesh> I'm trying to get Python Decorators, any help?
[17:57:52] <Celelibi> gitesh, they basically wrap your function inside another function.
[17:58:39] <gitesh> Celelibi: then what happens by doing that?
[17:59:22] <Celelibi> When you call your function, it's not your function that gets called. At least not immediately. Some stuff happens before. Some stuff happens after.
[17:59:23] *** Joins: srhm (~srhm@user/srhm)
[17:59:24] <phy1729> The pep has a nice example https://www.python.org/dev/peps/pep-0318/#current-syntax
[18:00:29] <gitesh> Celelibi: which function?
[18:00:46] <Celelibi> The one you decorated.
[18:00:47] *** Joins: akk (~akk@75.161.146.115)
[18:01:02] <Thanatos> SnoopJ, I don't understand. Why are the files here https://centos.pkgs.org/7/centos-updates-x86_64/python3-3.6.8-18.el7.x86_64.rpm.html so small?
[18:01:06] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:01:20] <Thanatos> Even the libs rpm is quite small
[18:01:25] <phy1729> Celelibi: that's not quite accurate; the function is fixed up at definition time
[18:01:35] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[18:01:50] *** Joins: mefistof1les (~mefistofe@user/mefistofeles)
[18:02:44] <Celelibi> phy1729, I know it's not accurate. But better give him some rough idea of what happens before diving into the implementation details.
[18:02:46] <phy1729> So in the PEP example the func name no longer referrs to the function object defined on line 3, but to the function object retured by dec2
[18:03:20] <phy1729> Ah, I'll shutup then :)
[18:03:29] *** Quits: mefistof1les (~mefistofe@user/mefistofeles) (Client Quit)
[18:04:55] <bjs> gitesh: the fancy syntax, `@decorator def f ...` is just shorthand for writing `def f ...` then going `f = decorator(f)`.  So really all it is is a way to automatically call the decorator function
[18:05:30] *** Joins: ThanatosJ (~Thanatos@105.112.179.248)
[18:05:42] <bjs> and the "decorator" itself?  it's just a function (which gets passed another function as an argument)
[18:08:50] *** Quits: Thanatos (~Thanatos@105.112.179.248) (Ping timeout: 268 seconds)
[18:09:31] <SnoopJ> ThanatosJ, most of the heaviness is in libpython: https://centos.pkgs.org/7/centos-x86_64/python3-libs-3.6.8-17.el7.x86_64.rpm.html
[18:09:54] *** Joins: cmagina (sid286142@user/cmagina)
[18:09:57] *** Quits: mexijoe (~Android@97.115.177.65) (Quit: -a- Connection Timed Out)
[18:10:35] *** Joins: Payam (~Payam@138.106.57.131)
[18:11:07] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:11:20] *** Joins: imakestuff (~imakestuf@197.156.77.195)
[18:11:35] <imakestuff> I have the following package in a parent directory:
[18:11:37] <Payam> How do I know when asyncio.gather is done?
[18:11:39] <imakestuff> ➜  python3 tree ../empty
[18:11:39] <imakestuff> ../empty
[18:11:39] <imakestuff> ├── __init__.py
[18:11:41] *** Joins: pro_z (~pro_z@37.214.77.123)
[18:11:41] <imakestuff> └── empty.py
[18:11:52] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[18:11:52] <ThanatosJ> SnoopJ, Yea, that's only 6.9MB
[18:11:57] <imakestuff> __init__.py has the following content "x = 8"
[18:12:16] <bjs> Payam: you await it
[18:12:19] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:12:30] *** Quits: delvian (~delvian@41.13.220.35) (Read error: Connection reset by peer)
[18:12:33] <imakestuff> when i try from ..empty import x  I get the error "ImportError: attempted relative import with no known parent package"
[18:12:35] <SnoopJ> ThanatosJ, what size are you expecting?
[18:12:51] <bjs> imakestuff: how are you running this?
[18:12:52] <imakestuff> How am i supposed to import from a package in parent directory?
[18:12:59] <imakestuff> in a python shell
[18:13:01] <imakestuff> repl
[18:13:08] <ThanatosJ> I don't know maybe over 50 MB
[18:13:09] <imakestuff> practicing python koans :)
[18:13:15] *** Joins: delvian (~delvian@41.13.220.35)
[18:13:24] <bjs> imakestuff: but from where?  how did you import things?
[18:13:37] <imakestuff> i'm in a directory
[18:13:39] <bjs> imakestuff: the important thing here is that Python's `import` doesn't really import files/directories but "modules"
[18:13:41] <bjs> imakestuff: ...
[18:13:48] <imakestuff> i it's parent i created empty package
[18:14:07] <imakestuff> bjs: same error
[18:14:12] <imakestuff> from ...empty import x
[18:14:16] <bjs> what do you mean "same error" I didn't give you anything to do
[18:14:29] <SnoopJ> ThanatosJ, well, I can't speak for your expectations, but Python itself is relatively small. Note also that 6.9 MB is the size of the archive, the size when unpacked is closer to 30-40 MB.
[18:14:35] <imakestuff> i thought you told me to use "..." :)
[18:14:38] <bjs> imakestuff: I'm just trying to work out *exactly* what you ran
[18:14:43] <bjs> and from where
[18:14:44] <Payam> bjs I have a huge number of requests and last I get this error: https://bpa.st/HJGA
[18:15:01] <bjs> Payam: I'm guessing your connection timed out
[18:15:05] <gitesh> look at this ---> https://bpa.st/H5NA
[18:15:05] <bjs> or one of them did at least
[18:15:09] <imakestuff> bjs: lets say i have /x/y/z
[18:15:13] <imakestuff> i am in z directory
[18:15:25] <imakestuff> i created the package "empty" inside "y"
[18:15:38] <imakestuff> running python shell from z
[18:15:46] <imakestuff> and trying to import /x/y/empty
[18:16:10] <imakestuff> y is the parent dir of z
[18:16:19] <hexology> python doesn't really know anything about files or directories - it knows about modules and packages. so you have to tell python to search for modules and packages in `/x/y`
[18:16:20] <imakestuff> so trying to import sth from parent dir
[18:16:42] <hexology> because by default its search locations are a couple of system-level standard directories, and "."
[18:16:43] <bjs> imakestuff: you can't run from inside z and make this work, generally you cannot directly run stuff inside a package
[18:16:54] <bjs> gitesh: I'm looking, what do you want me to look at/do with this
[18:16:54] <Payam> bjs How do I put a longer time? lime timeout=60?
[18:16:57] <imakestuff> i saw on SO people trying to do stuff like from ... import x
[18:17:08] <bjs> imakestuff: yes, that means "from my parent package, import x"
[18:17:30] <hexology> the workaround would be to set `PYTHONPATH=..`, which should prepend ".." to the list of directories to search
[18:17:32] <bjs> imakestuff: if you cd up to / then you go `python -m x.y.empty`
[18:18:01] <imakestuff> so if i put __init__.py at y, y becomes parent package?
[18:18:04] <bjs> Payam: I don't know, you didn't even say what you did or what library you're using
[18:18:12] <Payam> httpx
[18:18:15] <bjs> imakestuff: yes and no,  packages need __init__.py but also you can't "run" directly inside a package
[18:18:17] <Payam> bjs what is timeout?
[18:18:22] <bjs> Payam: what does the httpx documentation say about timeouts?
[18:18:50] <imakestuff> aha
[18:18:51] <imakestuff> got you
[18:18:59] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:19:15] <imakestuff> you mean must run from top package but you can reference parent in the children packages?
[18:19:21] <imakestuff> bjs: yeah?
[18:19:31] <Payam> bjs in general. What do they mean by timeout?
[18:19:33] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[18:19:35] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[18:19:46] <bjs> Payam: it means it took too long so it gave up
[18:19:53] <bjs> imakestuff: yes.
[18:20:24] <imakestuff> bjs: thanks! all clear now
[18:20:31] <Payam> bjs okej. thanks. So the connection for instance has Timeout seconds to try to get results. and after it it tells that it failed right?
[18:20:45] <bjs> Payam: maybe,  what does the httpx docs say about timeouts?
[18:20:58] <Payam> bjs timeout - (optional) The timeout configuration to use when sending the request.
[18:22:29] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[18:23:52] <ThanatosJ> SnoopJ, my expectations come from using Windows
[18:24:10] *** Quits: civillian (~nick@ppp118-208-162-104.cbr-trn-nor-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[18:24:52] <hexology> imakestuff: possibly a useful document https://docs.python.org/3/tutorial/modules.html
[18:25:01] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[18:25:08] <ThanatosJ> SnoopJ, will installing those rpms will make python available system-wide on the server?
[18:25:30] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[18:25:33] <SnoopJ> ThanatosJ, yes.
[18:26:24] <OnceMe> did anyone here uses PyCharm and remote python interpreter from docker? I have set that up, but installing dependencies like pip3 install django, is not visible in PyCharm, module not exist...?
[18:33:11] *** Joins: vulpes_vulpes (~vulpes_vu@88-144-232-205.host.pobb.as13285.net)
[18:33:26] <ThanatosJ> Ah, I don't suppose it'd be easy to find a portable version I can use without installation
[18:34:08] <SnoopJ> Probably not easier than your PyInstaller idea, no
[18:34:13] <ThanatosJ> SnoopJ, I need a bunch of dependencies to install the rpms you linked
[18:34:25] <deltab> OnceMe: is there a command line available within PyCharm?
[18:34:32] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:d29:7f9f:ec16:1313)
[18:34:47] <OnceMe> ?
[18:34:47] <SnoopJ> ThanatosJ, yes, you do. As I said before, you should ask #centos about how to get the rpms. It seems that yum has a way to help in the same way that pip can for the packages you want.
[18:35:28] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:35:58] <ThanatosJ> Okay, thanks. I'll ask there
[18:39:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[18:39:57] *** Joins: lastshell (~lastshell@user/lastshell)
[18:39:59] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[18:40:21] <Dev0n> hey, why would you run arm32v7/python:3.8-alpine docker image when then normal python:3.8-alpine runs fine on a raspberry pi?
[18:40:30] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[18:40:30] *** Joins: fikran (~fikran@user/fikran)
[18:41:26] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[18:41:46] *** Quits: johnnyt (tao@2a01:7e01::f03c:92ff:fe66:2e43) (Quit: WeeChat 3.2)
[18:41:49] <gitesh> bjs: can you tell me about python decorators?
[18:42:08] <bjs> gitesh: I did earlier didn't I?  what do you want to know?
[18:42:36] <gitesh> bjs: I want to know what thing is bound to what
[18:43:11] <bjs> gitesh: Like I said earlier,  the fancy syntax `@deco def f ...` is just a shorthand for writing `def f ...` then later going `f = deco(f)`
[18:43:32] <bjs> decorators are just normal functions,  and the @-syntax is just a shorthand to automatically call them
[18:44:29] <bjs> gitesh: so like in your example with the fib and call_counter there's no magical "decorator" stuff happening, it's just normal Python rules for function calls and variables.
[18:45:27] <gitesh> bjs: what is fib bound to in my example?
[18:45:43] <bjs> gitesh: the result of calling `call_counter(fib)`
[18:45:44] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:46:05] <bjs> gitesh: like any other variable, `v = f(x)` v is bound to the return value from calling f with argument x
[18:46:09] <gitesh> bjs: call_counter return wrap
[18:46:25] <bjs> gitesh: so it's bound to wrap
[18:47:04] <gitesh> yeah
[18:50:18] *** Joins: p-i- (~Ohmu@223.206.144.16)
[18:51:05] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[18:51:20] <aphysically> BtbN: re: trojan source - the harder one to fix is the homoglyphs - but apparently there's a unicode standard for this which everyone is now implementing
[18:51:32] <aphysically> I might take a crack at a vim plugin to do it
[18:51:55] <aphysically> it's the confusables here: http://www.unicode.org/reports/tr39/
[18:52:12] <aphysically> apparently there's an implementation in icu already: https://github.com/unicode-org/icu/blob/main/icu4c/source/i18n/uspoof.cpp
[18:53:26] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:53:46] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: pees oot)
[18:53:51] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:53:52] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[18:54:24] <bjs> gitesh: does that answer your questions, or?
[18:54:27] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[18:55:23] <gitesh> bjs: I'm still trying to get
[18:56:09] <bjs> gitesh: so this line `fib = call_counter(fib)` assigns `fib` to be something else.  In your example, it makes `fib` instead refer to `wrap`
[18:56:19] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 268 seconds)
[18:56:37] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:56:44] <bjs> wrap is a new function and now anytime in your program after that assignment you say `fib` you're actually talking about `wrap`
[18:56:57] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:57:28] <gitesh> bjs: got it
[18:57:40] <gitesh> bjs: how is that useful
[18:57:57] <gitesh> bjs: and @ is for say fib = call_counter(fib)
[18:58:04] <bjs> gitesh: well,  you can ask the same question about any function and variables.  Why is it useful to have functions and variables at all?
[18:58:11] <bjs> Well, to make writing code easier.
[18:58:28] <bjs> This example is a bit silly
[18:58:29] <gitesh> okay
[18:58:43] <bjs> gitesh: yes, you could instead have written @call_counter  on the line before `def fib`
[18:59:31] <bjs> gitesh: but generally, "why would you want to return a function?" or "why would you want to pass a function as an argument?" it's because functions are just values,  you can do useful things with them.  You can store them, you can modify them.  You can return new functions that have extra behaviour
[18:59:42] <bjs> e.g. here wrap remembers how many times it's been called,  the original fib didn't do that!
[19:00:33] <bjs> So you can write a function "call_counter" just once and now you can use it for any function rather than re-writing it each time
[19:00:48] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[19:00:51] <gitesh> okay, it's simple i guess
[19:01:13] <bjs> gitesh: it's a very simple idea that is very useful and very powerful
[19:01:27] *** Quits: redoc (~redoc@user/redoc) (Quit: Going offline, see ya! (www.adiirc.com))
[19:05:34] *** Joins: zmt01 (~zmt00@user/zmt00)
[19:07:38] *** Joins: Roey (~Roey@user/Roey)
[19:08:02] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Ping timeout: 268 seconds)
[19:09:15] *** Joins: causaui1 (~causasui@192.241.228.169)
[19:09:42] *** Joins: gitly (~gitly@148.252.133.199)
[19:10:43] *** Joins: nemosaltat (~nemosalta@2607:fb90:8f07:5c5f:51c:bfcd:4928:aadb)
[19:11:08] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[19:12:35] *** Quits: nemosaltat (~nemosalta@2607:fb90:8f07:5c5f:51c:bfcd:4928:aadb) (Remote host closed the connection)
[19:13:10] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 260 seconds)
[19:14:10] *** Quits: imakestuff (~imakestuf@197.156.77.195) (Remote host closed the connection)
[19:14:34] *** Joins: daoudr (~daoudr@2a02:1205:c690:ca10:1d6:6982:9414:1a59)
[19:15:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:15:56] <gitesh> bjs: so python decorator is a function which takes another function as an argument and wraps it inside yet another function?
[19:16:17] <bjs> gitesh: the "wraps it inside yet another function" part just happens to be what *your* "decorator" did
[19:16:31] <bjs> it's *just a function* and so can do whatever it wants, and can return whatever it wants
[19:16:35] *** Quits: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au) (Ping timeout: 260 seconds)
[19:17:03] <bjs> making "wrapper" functions is a common thing,  and you can find people doing it even outside of "decorators"
[19:17:15] <gitesh> ok
[19:18:18] *** Joins: Valeria (~Valeria@user/valeria)
[19:20:07] *** Joins: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul)
[19:21:41] *** Joins: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net)
[19:21:46] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[19:22:05] *** Joins: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au)
[19:22:25] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[19:24:24] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[19:25:48] *** Joins: nemosaltat (~nemosalta@2607:fb90:8f07:5c5f:e448:ff8b:a6a0:3b11)
[19:26:38] *** Joins: Pandadub (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:28:01] *** Quits: orange (~orangeext@user/orangeextract) (Quit: Leaving)
[19:30:22] *** Quits: nemosaltat (~nemosalta@2607:fb90:8f07:5c5f:e448:ff8b:a6a0:3b11) (Ping timeout: 260 seconds)
[19:30:44] *** Joins: Elzington (~Elzington@68.235.43.172)
[19:30:46] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[19:31:13] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[19:31:24] *** awoo is now known as moonmoon
[19:32:25] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[19:34:32] *** Quits: OnceMe (~stefan@user/onceme) (Quit: Konversation terminated!)
[19:34:36] <aphysically> speaking of the trojan source and such, I sorta wish there was an implementation of the various unicode security mechanisms and normalizations ins tdlib
[19:34:50] <aphysically> in stdlib*; although I guess we can always find a wrapper for ICU or some such
[19:34:51] *** Quits: delvian (~delvian@41.13.220.35) (Read error: Connection reset by peer)
[19:34:58] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[19:35:03] *** Joins: apteryx (~maxim@dsl-153-210.b2b2c.ca)
[19:35:18] <aphysically> that's probably the normal thing to do
[19:35:19] *** Joins: delvian (~delvian@41.13.220.35)
[19:36:04] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[19:36:34] *** Joins: brainstew0 (~brainstew@50.80.133.185)
[19:37:25] *** Joins: jcvfen (~jcvfen@84.209.129.214)
[19:37:35] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:41:58] *** Quits: gitly (~gitly@148.252.133.199) (Ping timeout: 268 seconds)
[19:42:24] *** Joins: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-025d.v6.ethz.ch)
[19:42:49] *** Joins: gitly (~gitly@185.69.144.225)
[19:42:58] <kek_> hi, if I import something e.g. "from pycbc.inject import InjectionSet" what is executed? The __init__.py file?
[19:43:11] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 246 seconds)
[19:44:33] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.3)
[19:44:50] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[19:46:23] <apteryx> is it possible to use 'yield' in a recursive function?
[19:47:10] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:47:44] *** Quits: ThreeOfLife (~ThreeOfLi@108.red-83-58-131.dynamicip.rima-tde.net) (Quit: Client closed)
[19:47:53] *** Quits: R035N3R (~phobos@user/r035n3r) (Quit: WeeChat 3.3)
[19:48:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[19:48:36] <apteryx> when I debug, I see 'GeneratorExit' upon entering my recursive call, and it seems to reset one of the arguments (to the scope used when first yielding), causing it to malfunction
[19:48:48] *** Joins: hacksword (~hacksword@ip68-231-215-184.oc.oc.cox.net)
[19:49:13] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Ping timeout: 252 seconds)
[19:49:15] *** Joins: balognatops (~hacksword@107.182.228.197)
[19:49:49] *** Joins: soman (~soman@83.139.147.234)
[19:49:59] <apteryx> ah, seems I must use yield from
[19:50:04] <kek_> oh have to leave, bye.
[19:50:06] *** Quits: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-025d.v6.ethz.ch) (Quit: Leaving)
[19:50:06] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:51:50] <pr100> you don't have to use yield from - it depends what you want to do
[19:51:56] *** Quits: fearnothing (~fearnothi@user/fearnothing) (Remote host closed the connection)
[19:52:14] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[19:52:32] * enyc meows
[19:52:53] <enyc> we still get occasonal people in leenode #python , yeesh how long has that been going on for
[19:52:55] <pr100> ```def foo(x):
[19:52:55] <pr100> ...     if x != 0:
[19:52:56] <pr100> ...         yield x
[19:52:56] <pr100> ...         yield from foo(x-1)```
[19:53:02] <pr100> erk - formatting
[19:53:18] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[19:53:40] *** Quits: hacksword (~hacksword@ip68-231-215-184.oc.oc.cox.net) (Ping timeout: 268 seconds)
[19:53:46] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:55:49] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[19:56:23] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[19:57:51] <apteryx> pr100: in my case 'yield from' gives the expected result; I wanted continuity in the recursive calls
[19:58:00] <apteryx> pr100: thank you
[20:00:18] *** Joins: toverna (~uni@2.95.65.14)
[20:01:05] <sharperguy> What's the best way to process the stdout of a Popen in a separate thread? Basically, I want to have several subprocesses running in paralell, and each passing their output in lines to a single class instance, which deals with them sequentially.
[20:02:18] *** Joins: maxpowa (~maxpowa@107.150.39.146)
[20:04:25] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:04:45] <hexology> i think you can just pass the stdout to the thread, although you will probably end up with scary issues around cleaning up resources
[20:04:56] <hexology> i'd suggest using async with anyio :)
[20:05:00] <rendar> let's say i'm doing a console application which must print on the screen results of commands i type OR commands received in stdin or TCP: what about those external processes? e.g. a process that is connected with TCP, cannot print stuff in stdout, but it must send stuff through network, how to do this transparently? do i need a protocol?
[20:05:26] *** Joins: monkey_ (~user@190.104.116.31)
[20:06:37] *** Joins: R035N3R (~phobos@user/r035n3r)
[20:06:39] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[20:07:23] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:07:40] <TJ-> rendar: sounds like a job for xinetd, which can listen on a network socket and connect it to stdin/stdout of a process
[20:08:58] <TJ-> rendar: but this is also something systemd.socket can do
[20:09:46] <rendar> uhm, i wish to avoid external stuff
[20:09:52] *** Joins: Ixiodor (~Guest92@net-93-149-142-113.cust.vodafonedsl.it)
[20:10:05] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[20:10:52] *** Joins: lbracher (~lucas@94.105.106.159.dyn.edpnet.net)
[20:11:02] *** Quits: ThanatosJ (~Thanatos@105.112.179.248) (Ping timeout: 260 seconds)
[20:11:41] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[20:13:18] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 260 seconds)
[20:13:57] <lbracher> Hello! I would like to know if it's somehow possible in Python to search for a string in a HTML document and retrieve matching XPaths to the elements that contain this string? Thanks!
[20:14:56] *** Joins: BlessJah (~BlessJah@user/blessjah)
[20:15:26] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:15:45] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[20:16:53] *** Joins: DnzAtWrk (~DnzAtWrk@1175.pc.puv.fi)
[20:18:20] *** Joins: cosimone (~user@93-47-228-135.ip115.fastwebnet.it)
[20:18:21] <phy1729> It'd probably be easiest to write a recursive search that keeps a path as it decends, checks the current node's text for the string (yield if found) then recurses into each child
[20:19:03] *** Quits: emerent (~quassel@p200300cd574855bdba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:19:13] <moonmoon> or do something with BeautifulSoup, maybe (haven't looked into it too much but it's a good library for HTML stuff)
[20:19:24] *** Joins: emerent (~quassel@p200300cd574855f2ba27ebfffed28a59.dip0.t-ipconnect.de)
[20:21:32] <phy1729> iirc BS can find elements with text, but I don't think it can get a path from that
[20:22:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[20:23:01] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[20:23:23] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:23:45] <rendar> you can try with a regex
[20:23:49] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:24:00] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[20:24:23] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[20:24:30] *** Quits: DnzAtWrk (~DnzAtWrk@1175.pc.puv.fi) (Ping timeout: 260 seconds)
[20:25:40] <phy1729> rexex and html don't mix; that way lies Cthulhu
[20:26:56] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[20:27:42] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:7d98:b130:1888:cac6)
[20:29:39] *** Papa_ is now known as papa
[20:30:37] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[20:30:49] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:31:05] <akk> Definitely better to find them with a library like BS, but I've never done anything with XPaths so I don't know that part.
[20:31:06] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:31:48] *** Joins: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com)
[20:32:03] *** Quits: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com) (Remote host closed the connection)
[20:33:39] *** Joins: hel0 (~hel0@user/redrum88)
[20:33:58] <aphysically> I don't see anything on python for trojan source but it may be still be hidden by embargo
[20:34:14] <Ixiodor> Hi, I was messing UP with python package for the first time. And I have a question. I have a structure like src=>package(package is not a placeholder, it's the real name) and I want to be renamed while building in somenthing else, there is a chance?
[20:34:22] <aphysically> so I don't want to bother people by filing a bpo bug if it's just hidden still :^(
[20:34:48] *** Parts: cmagina (sid286142@user/cmagina) (Good Bye)
[20:35:23] *** Joins: xcombel39 (~Xavier_Co@atoulouse-551-1-6-34.w92-156.abo.wanadoo.fr)
[20:36:06] <gloomy> https://gist.github.com/ldorigo/5631b90a81edfdb33b97061b3ed76168 Hey, what's the proper way to do this? (It's about generators and it's much easier to illustrate by example in that paste than to try and explain it here)
[20:36:21] *** Joins: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com)
[20:36:22] *** Quits: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com) (Remote host closed the connection)
[20:37:42] *** Joins: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru)
[20:37:46] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[20:38:11] *** Quits: lovelace (~Elspeth@2.24.23.175) (Quit: Konversation terminated!)
[20:38:16] <gloomy> Basically - if I have a Generator function `foo` that takes an iterator of A's and yields ProcessedA's, and another Generator function `bar` that takes tuples of (A,B) and yields tuple of (ProcessedA,B) by using foo - what's the cleanest way to pass stuff to foo from bar?
[20:38:42] *** Joins: lovelace (~Elspeth@2.24.23.175)
[20:39:27] <gloomy> * that takes an iterator of tuples of
[20:40:31] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:6046:e4ad:26c5:665) (Ping timeout: 245 seconds)
[20:41:00] *** Joins: zyweo (~Svew@user/zyweo)
[20:41:11] <phy1729> yield from ((foo(a), b) for a, b in ab)  ?
[20:41:56] <gloomy> no, foo takes an iterator of A, not just A
[20:42:23] *** Quits: monkey_ (~user@190.104.116.31) (Remote host closed the connection)
[20:42:43] <gloomy> (and before you tell me to change that, I can't, it's a wrapper around a library that works on generators)
[20:43:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[20:44:08] <gloomy> s/generators/iterators/
[20:44:11] <jinsun_> would be easy with intermediate list, not sure if you can do it without that
[20:44:13] <phy1729> I mean you could cheat and foo((a,)), but perhaps someone smarter know how to split the iterable of tuples into two
[20:45:18] <gloomy> https://gist.github.com/ldorigo/5631b90a81edfdb33b97061b3ed76168 I guess I could do this? not sure if there's a cleaner way
[20:45:50] *** Quits: tobybl_ (~tobybl@213.31.135.91) (Remote host closed the connection)
[20:46:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:46:14] <phy1729> L13-14 can use yield from instead of yield
[20:46:34] *** Joins: hay207 (~hay207@41.233.181.207)
[20:46:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:47:01] <hay207> Hi, how to run this program? https://github.com/tuomasjjrasanen/python-uinput
[20:47:43] <gloomy> Yup, true, thanks
[20:47:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[20:48:01] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:48:46] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[20:49:51] *** Joins: fikran (~fikran@user/fikran)
[20:51:14] *** Joins: odinsbane (~mbs@pat-pool-138.crick.ac.uk)
[20:51:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[20:52:00] *** Joins: ErkiS (~opera@85.253.103.121.cable.starman.ee)
[20:54:24] <hay207> or https://pyautogui.readthedocs.io/en/latest/quickstart.html
[20:54:41] *** Quits: mallkrampus (~mallkramp@185.203.219.12) (Ping timeout: 245 seconds)
[20:54:49] <hay207> i cannot understand how to run python
[20:55:27] *** Quits: rsx (~dummy@ppp-188-174-141-116.dynamic.mnet-online.de) (Quit: rsx)
[20:55:34] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[20:55:37] *** Joins: Thanatos (~Thanatos@105.112.17.39)
[20:56:22] *** Parts: ErkiS (~opera@85.253.103.121.cable.starman.ee) ()
[20:56:24] *** Quits: Ixiodor (~Guest92@net-93-149-142-113.cust.vodafonedsl.it) (Quit: Client closed)
[20:56:34] <akk> hay207, I'm guessing you're on windows? It might help to read https://docs.python.org/3/faq/windows.html
[20:56:46] <hay207> linux
[20:57:11] <akk> On linux you just type "python" at a shell prompt. Pretty much every linux has python already installed.
[20:57:26] <akk> (you might have to type python3, if it's a very old linux distro that defaults to python2)
[20:57:29] <hay207> ok, thanks
[20:58:22] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Quit: morrigan)
[21:00:13] <lbracher> phy1729, I'll try that. Thanks!
[21:01:35] *** Quits: toverna (~uni@2.95.65.14) (Quit: Konversation terminated!)
[21:04:29] *** Joins: spaceone (~spaceone@wc1.wechall.net)
[21:05:05] <spaceone> why does multiprocessing.Pool pickle my functions which I start (e.g. via .apply())?
[21:05:24] <CrtxReavr> I'm quite sure there's "current distros" shipping with 2.7 as the default, as they rely on tools written for 2.x.
[21:05:25] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d)
[21:05:48] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:06:15] <gloomy> spaceone: that's the way data is passed to the child processes. It's annoying :-)
[21:06:32] <gloomy> Is there any logic to why it's [a for b in c for a in b] instead of [a for a in b for b in c] which is 10x more readable and understandable?
[21:07:04] <spaceone> gloomy: :-D i am always thinking about this as well.
[21:07:28] <spaceone> gloomy: hm, but shoudln't it be just a os.fork() ?
[21:07:56] <gloomy> spaceone: it was actually a separate question unrelated to my answer to yours but I guess they both fall under "python idiosyncracies"
[21:08:36] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:09:03] <Repiphany> You write the loops in a compression in the same order as you would in standard for loops
[21:09:07] <ChrisWarrick> spaceone: os.fork() doesn’t work on Windows
[21:09:23] <gloomy> spaceone: I think it might be because fork works differently on unix vs. windows (something about the memory being accessible to child processes on linux but not windows) but really not sure, someone else can probably expand
[21:09:29] <ChrisWarrick> spaceone: there are also some pitfalls on macOS related to forking
[21:09:50] <Repiphany> `for a in range(10): for b in range(a): (expression)` -> [expression for a in range(10) for b in range(a)]
[21:09:51] <spaceone> ChrisWarrick: jeah ok, but for windows there are a lot workarounds. one can do if POSIX: fork() else: foo()
[21:10:01] <ChrisWarrick> spaceone: it kinda does that
[21:10:59] <spaceone> ok, so multiprocessing does not use os.fork() but instead does something else and pickles the functions to start? hm
[21:11:01] <aphysically> I sorta wish I knew whatever the python response to CVE-2021-42574
[21:11:24] <gloomy> Repiphany: hm, thanks, maybe that will help finally drive it into my brain
[21:11:50] <ChrisWarrick> spaceone: are you on Linux?
[21:12:01] <spaceone> aphysically: https://github.com/nickboucher/trojan-source/tree/main/Python
[21:12:05] <spaceone> ChrisWarrick: yes
[21:12:31] <aphysically> spaceone: I mean, what the python developers' response was when (presumably) informed
[21:12:48] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[21:13:34] <ChrisWarrick> spaceone: multiprocessing does use os.fork on linux
[21:13:53] <aphysically> there's not a bpo bug for it but presumably one was privately reported
[21:14:12] <ChrisWarrick> spaceone: but I suppose it still needs pickles for (a) easier cross-platform compatibility (b) probably easier sharing of data
[21:14:45] <ChrisWarrick> aphysically: ugh, that’s a classic overblown “security” “issue”, completely with a shiny website, domain and name, can we (the industry) please stop doing those?
[21:14:51] <spaceone> ChrisWarrick: okay, then back to my initial question: why is the function pickled which is started. when it uses os.fork() this shouldn't be necessary.
[21:15:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:15:22] <gloomy> ChrisWarrick: Are you sure? I work on linux and I had this pickling issue many times
[21:15:40] <ChrisWarrick> gloomy: I am sure it uses os.fork, and I am sure it uses pickles.
[21:16:12] <ChrisWarrick> spaceone: you can run multiple functions with one Process, it isn’t as trivial as “just os.fork() and reuse the memory”
[21:16:18] <aphysically> ChrisWarrick: the websites and such are a bit silly I guess, but I think the mitigations are mostly common sense
[21:16:44] *** Joins: et (~et@user/et)
[21:16:57] <spaceone> ~ok.
[21:17:15] *** Joins: mcon (~Thunderbi@host-79-55-229-50.retail.telecomitalia.it)
[21:17:23] <ChrisWarrick> aphysically: https://github.com/nickboucher/trojan-source/blob/main/Python/commenting-out.py
[21:17:23] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[21:17:25] <spaceone> what are the conditions that a function is pickleable? it must not reference locals which cannot be pickled?
[21:17:56] <aphysically> ChrisWarrick: what about it?
[21:17:59] <spaceone> i have a method of class which contains connected sockets. doesn't seem to be pickleable
[21:18:07] <ChrisWarrick> aphysically: even without the github warning, the code looks wrong thanks to syntax highlighting not being fooled by it
[21:18:37] <ChrisWarrick> spaceone: pickling a function pretty much ends up pickling the function name and where to look for it
[21:18:41] <mcon> if I have an inner class (i.e.: a class defined inside another class, not a class derived) can I access "outer" class attributes?
[21:19:16] <aphysically> ChrisWarrick: the bidirectional one is important but already mitigated in a good few editors, and I think the warnings in the PR systems and forthcoming gcc/clang patches will help a lot
[21:19:22] <aphysically> the homoglyph problem I thought was more interesting
[21:20:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:20:09] <aphysically> I don't know if there's precedent for ignoring the unterminated bidi control characters at the level of the python interpreter
[21:20:13] <ChrisWarrick> aphysically: quite frankly, I wouldn’t mind banning non-ASCII identifiers from programming languages
[21:20:26] <aphysically> that's the approach rust took (refusing to compile the bidi..)
[21:22:12] <ChrisWarrick> I’d refuse to compile `π = 3.14159`
[21:24:30] *** Joins: none (~stdout@50.115.255.72)
[21:25:10] *** Quits: none (~stdout@50.115.255.72) (Remote host closed the connection)
[21:25:17] *** Quits: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Quit: Leaving)
[21:26:53] *** Joins: node1 (~node1@user/node1)
[21:27:50] *** Joins: Tenn0 (~Tenn0@167.98.27.226)
[21:28:26] *** Quits: Thanatos (~Thanatos@105.112.17.39) (Read error: Connection reset by peer)
[21:29:00] *** Quits: Tenn0 (~Tenn0@167.98.27.226) (Client Quit)
[21:29:02] *** Joins: aquery (~aquery@ip-178-203-147-123.hsi10.unitymediagroup.de)
[21:29:08] *** kostkon__ is now known as kostkon
[21:29:22] *** Quits: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[21:30:05] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 264 seconds)
[21:30:21] <aquery> Hello all, I have an array with some numbers: [1,4,7,9]. And another array (array_2) with lots of information. What I'm trying to do is to get the 1,4,7,9 from array_2.
[21:30:24] <aquery> Is this possible?
[21:31:05] <aquery> I tried something along the lines of a = array_2[",".join(array_1)] but it doesn't work
[21:31:43] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[21:31:45] <Pilate> what does array2 look like
[21:31:46] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 260 seconds)
[21:32:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:32:16] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[21:32:54] *** Joins: Khoyo (~khoyo@user/khoyo)
[21:33:04] *** Joins: georgios (~georgios@user/georgios)
[21:33:08] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[21:33:47] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:33:48] <ChrisWarrick> aquery: so you want items with indexes 1, 4, 7, 9?
[21:34:19] <ChrisWarrick> aquery: if you’re dealing with lists: [list_2[i] for i in list_1]
[21:34:22] *** Joins: ffledgling (~textual@2620:10d:c090:500::2:3f27)
[21:34:35] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 264 seconds)
[21:34:37] <ChrisWarrick> aquery: if you’re dealing with numpy arrays: something like array_2[array_1] might work?
[21:35:06] *** Joins: emf (~emf@2620:10d:c090:400::5:f24f)
[21:37:16] <aquery> ChrisWarrick: awsome solution
[21:37:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[21:37:22] <aquery> awesome*
[21:37:28] <aquery> ChrisWarrick: many thanks!
[21:37:30] *** Quits: gregoryloscombe (~gregorylo@213.86.15.80) (Quit: WeeChat 3.2)
[21:37:34] <ChrisWarrick> aquery: you’re welcome!
[21:38:49] *** Joins: Macuser (~Macuser@216.30.159.201)
[21:39:05] *** Parts: Aminda (~sid12355@Feneas/Mikaela) ()
[21:40:59] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[21:41:06] *** Quits: aquery (~aquery@ip-178-203-147-123.hsi10.unitymediagroup.de) (Quit: leaving)
[21:42:59] *** Joins: the-mask (~the-mask@user/the-mask)
[21:43:04] <ffledgling> Hello, I have an async python exception, and I'm blanking out on what I'm doing wrong. The exception is "coroutine is being awaited already". Here's a paste of the exception and the two functions I think are implicated. https://bpa.st/5G5A
[21:43:31] *** Quits: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[21:43:31] <ffledgling> Can someone help me figure out what the right ordering of function calls and await keywords I should be using?
[21:43:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:44:02] <ChrisWarrick> ffledgling: what if you try dropping @memoize_timed?
[21:44:36] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[21:45:00] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:45:01] <ffledgling> I can try, but that's super important in the context of the code itself. I specifically factored out _get_unit_cost, so that I could cache it
[21:45:10] <ffledgling> Do you suspect the decorator is wrong?
[21:45:27] <stwange> I've reported a bug with async DNS resolver ignoring specified name servers, but does anyone know of a workaround here? I could really do with being able to specify nameserver https://bugs.python.org/issue45683
[21:46:07] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:46:12] <ChrisWarrick> ffledgling: the rest of the code looks okay
[21:46:12] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[21:46:26] <ChrisWarrick> ffledgling: removing the decorator seems the simplest thing to try
[21:47:32] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:47:34] <ffledgling> welp, you're right - I'm using the sync version of the decorator instead of the aysnc
[21:47:41] <ffledgling> That would do it I guess
[21:48:53] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[21:48:55] *** Joins: Atque (~Atque@user/atque)
[21:50:54] <Pilate> stwange where did you see docs saying you could do that?
[21:51:20] <ffledgling> This completely confused me about async def + return await though. await is supposed to return a result, after executing the coroutine, so technically value = await self._get_unit_cost() should work because it'll exec the unit_cost() function and that'll exec unit.calculate, right? Why does the error say coroutine is already being waited on. Which one is already being waited on?
[21:51:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[21:51:35] *** Quits: stwange (~j@82.21.202.140) (Quit: Leaving)
[21:52:55] *** Joins: stwange (~j@82.21.202.140)
[21:53:02] <ffledgling> does the memoize_timeout decorator returning a non-async function cause the await keyword to throw that error?
[21:53:11] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[21:53:40] <stwange> Just closed chat by accident so not sure who asked me where the documentation was for async resolver, but https://dnspython.readthedocs.io/en/latest/async-resolver-class.html says "The async resolver is a subclass of dns.resolver.Resolver and has the same attributes" and https://dnspython.readthedocs.io/en/latest/resolver-class.html has "nameservers". It's possible I misunderstood
[21:54:19] <stwange> It even says under resolve "See dns.resolver.Resolver.resolve() for the documentation of the other parameters, exceptions, and return type of this method."
[21:54:45] <Pilate> youre setting the 'nameserver' attribute, the sync class docs say its 'nameservers'
[21:55:39] <stwange> Pilate, thank you, I'm an idiot. I was looking at it for 5 days before I raised that bug
[21:56:23] *** Joins: khile (cacambo@triton.blinkenshell.org)
[21:58:13] *** Joins: jazzy (~jaziz@user/jaziz)
[21:59:40] <awmv> Why do I need /static to use a local file path for an src attribute for an image?
[22:00:22] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-6cb7-7b9e-be34-0e03.res6.spectrum.com)
[22:00:35] <awmv> I mean
[22:00:36] <awmv> OK
[22:02:22] *** Joins: hideaway (~hideaway@user/hideaway)
[22:02:29] <awmv> I have a folder that contains PNGs that I generate dynamically. I store the absolute path to those individual images as well as some meta info in a python dict
[22:02:58] <awmv> Fk I'm in the wrong channel
[22:03:19] <awmv> fml
[22:03:29] *** Quits: llh (~llh@user/llh) (Ping timeout: 268 seconds)
[22:03:59] *** Quits: Jong (~Jong@174.27.107.153) (Ping timeout: 264 seconds)
[22:06:29] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[22:06:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:07:32] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:08:17] *** gitesh is now known as g1t3sh
[22:08:41] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:08:54] *** Joins: tdsmith (~tdsmith@tds.xyz)
[22:09:53] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[22:10:00] *** Joins: Akuli (~Akuli@82-203-161-164.bb.dnainternet.fi)
[22:10:13] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:10:43] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[22:10:59] *** Joins: parv (~quass@user/parv)
[22:11:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[22:11:29] *** Joins: sammie (~sammie@users-nat.ccs.neu.edu)
[22:11:57] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:12:27] *** Parts: Aminda- (~mikaela-@Feneas/Mikaela-) ()
[22:13:39] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[22:14:50] *** Joins: spiderman (~spiderman@user/spiderman)
[22:14:53] *** Quits: ffledgling (~textual@2620:10d:c090:500::2:3f27) (Ping timeout: 268 seconds)
[22:16:39] *** g1t3sh is now known as gitesh
[22:17:00] *** Quits: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net) (Quit: Leaving)
[22:17:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:18:47] <shodan45> why does lxml.etree.tostring() return a b'' string?
[22:19:50] *** Quits: gitly (~gitly@185.69.144.225) (Ping timeout: 268 seconds)
[22:20:26] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Ping timeout: 268 seconds)
[22:21:27] *** Joins: gitly (~gitly@85.255.235.111)
[22:24:00] *** Joins: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net)
[22:27:10] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:28:30] *** Joins: oriba (~oriba@dynamic-089-012-132-051.89.12.pool.telefonica.de)
[22:29:29] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[22:29:59] <sco1> As in, why do the developers make that the default behavior, or how can you get a non-bytestring?
[22:32:21] *** Quits: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr) (Quit: leaving)
[22:34:01] *** Quits: pro_z (~pro_z@37.214.77.123) (Ping timeout: 268 seconds)
[22:40:44] *** Joins: jay-m1262 (~jay-m@129.0.205.209)
[22:40:47] *** Joins: jay-m1263 (~jay-m@129.0.205.209)
[22:41:48] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[22:42:05] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[22:42:10] *** Quits: gregloscombe (~greglosco@82.25.194.79) (Ping timeout: 260 seconds)
[22:42:10] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[22:42:31] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[22:42:31] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:45:00] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[22:45:03] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:46:27] *** Joins: neilthereildeil (~neilthere@pool-71-114-72-118.washdc.fios.verizon.net)
[22:46:34] <neilthereildeil> hey guys
[22:46:45] <neilthereildeil> im using VisualStudio code on Linux to debug a python program
[22:46:49] <neilthereildeil> but i dunno how to launch it
[22:47:13] <neilthereildeil> its a "python -m my.module.name" command
[22:47:18] <neilthereildeil> how can i launch it in VS code?
[22:47:30] *** Joins: Thanatos (~Thanatos@105.112.17.39)
[22:47:34] *** Quits: jay-m1263 (~jay-m@129.0.205.209) (Ping timeout: 268 seconds)
[22:47:35] *** Quits: jay-m1262 (~jay-m@129.0.205.209) (Ping timeout: 268 seconds)
[22:47:40] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:48:07] <neilthereildeil> in launch.json, program will be python or my.module.name?
[22:49:17] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[22:49:20] *** Joins: jay-m1262 (~jay-m@129.0.204.214)
[22:50:00] <neilthereildeil> TypeError: compile() expected string without null bytes
[22:51:53] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Ping timeout: 268 seconds)
[22:51:58] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[22:53:22] *** Quits: cosimone (~user@93-47-228-135.ip115.fastwebnet.it) (Ping timeout: 260 seconds)
[22:54:04] *** Joins: jay-m1263 (~jay-m@129.0.204.214)
[22:55:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:56:46] <hideaway> https://code.visualstudio.com/docs/python/python-tutorial
[22:57:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[22:57:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[22:58:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:59:12] *** Joins: fikran (~fikran@user/fikran)
[22:59:29] <deltab> shodan45: I think because if you were to use a non-standard encodings it owuld need to be declared within the XML declaration, and it's easier for the library to do both for you
[22:59:59] *** Joins: nomic (~nomic@185.192.69.57)
[23:00:31] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[23:00:48] <deltab> shodan45: you can pass 'unicode' or str as the value for encoding to get a Unicode string out
[23:01:09] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Quit: Reconnecting)
[23:01:17] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[23:05:27] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[23:07:04] *** Joins: vicfred (~vicfred@user/vicfred)
[23:08:30] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:08:36] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[23:10:08] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[23:10:53] *** Quits: vulpes_vulpes (~vulpes_vu@88-144-232-205.host.pobb.as13285.net) (Remote host closed the connection)
[23:12:04] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Bye)
[23:15:54] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[23:16:24] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:16:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[23:17:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:17:51] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[23:19:36] *** Server sets mode: +Ccnrtf #python-unregistered
[23:20:41] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[23:23:57] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 268 seconds)
[23:24:11] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[23:24:46] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[23:25:08] *** Joins: Tenn0 (~Tenn0@88.97.110.231)
[23:25:20] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[23:26:44] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[23:29:05] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[23:29:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[23:31:08] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[23:32:17] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:32:45] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[23:32:55] *** Joins: audiocat (~audio@user/audio)
[23:33:01] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:33:26] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[23:38:34] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[23:41:09] *** Quits: neilthereildeil (~neilthere@pool-71-114-72-118.washdc.fios.verizon.net) (Quit: Client closed)
[23:41:52] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[23:42:23] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:42:40] *** Joins: grooverman (~grooverma@177.102.119.40)
[23:42:45] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Read error: Connection reset by peer)
[23:43:04] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[23:43:14] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[23:44:17] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[23:44:50] *** Joins: sfields (~sfields@2605:a601:adea:7a00:5fcc:d1b3:a00e:11b8)
[23:45:03] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[23:45:08] *** Joins: ffledgling (~textual@2620:10d:c090:500::1:8381)
[23:45:20] *** Joins: ztane (ztane@kapsi.fi)
[23:46:11] <ztane> many people tried the nogil fork yet? :D
[23:48:57] *** Quits: grooverman (~grooverma@177.102.119.40) (Remote host closed the connection)
[23:49:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:49:35] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:51:02] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[23:51:14] *** Quits: jay-m1262 (~jay-m@129.0.204.214) (Ping timeout: 260 seconds)
[23:51:19] *** Joins: grooverman (~grooverma@177.102.119.40)
[23:51:42] *** Quits: jay-m1263 (~jay-m@129.0.204.214) (Ping timeout: 268 seconds)
[23:53:10] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[23:54:26] *** Joins: Auron (Auron956@user/auron)
[23:54:30] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[23:56:01] *** Quits: hay207 (~hay207@41.233.181.207) (Ping timeout: 268 seconds)
[23:56:14] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 246 seconds)
[23:59:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
