[00:16:49] *** Joins: jbarton (~tmtowtdi@pool-108-48-30-133.washdc.fios.verizon.net)
[00:17:02] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-ed5a-86df-2069-0e7f.res6.spectrum.com) (Quit: Leaving.)
[00:17:17] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-ed5a-86df-2069-0e7f.res6.spectrum.com)
[00:17:48] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-ed5a-86df-2069-0e7f.res6.spectrum.com) (Client Quit)
[00:20:43] *** Quits: jdbarton (~tmtowtdi@pool-108-48-30-133.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[00:29:09] *** Joins: junktext (~junktext@109.201.152.179)
[00:30:02] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:31:33] *** Joins: Poboy (~Poboy@user/poboy)
[00:33:08] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[00:33:55] *** Quits: tex (~dee@user/dix) (Ping timeout: 252 seconds)
[00:38:28] *** Joins: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com)
[00:39:09] <de-facto> what is the best way to do in place transpose of an n-dimensional array?
[00:44:10] *** Quits: junktext (~junktext@109.201.152.179) (Ping timeout: 260 seconds)
[01:00:57] <Albright> Hmm, yes, in-place array transposing, I do that every day in PHP
[01:03:53] <Albright> To be serious, and if I understand what transposing is correctly, we don't really have a way to do that, but if you want to flip on the X-axis, you could iterate through an array's rows and use array_reverse()
[01:04:17] *** Quits: pmercado (~pmercado@186.107.63.213) (Ping timeout: 252 seconds)
[01:05:58] <Albright> For Y, the sanest way might be to rotate the array (iterate the columns and build a new one with return values from array_column() might help), then use array_reverse() as above, then redo the array_column thing()
[01:07:20] *** Joins: stenno (~stenno@user/stenno)
[01:07:35] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 252 seconds)
[01:11:55] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[01:15:37] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[01:17:41] <de-facto> would something like this be appropriate? https://pastebin.com/sb91ZSt7
[01:18:40] <de-facto> it seems to kinda work
[01:24:58] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Read error: Connection reset by peer)
[01:25:25] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[01:38:13] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[01:46:57] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[01:49:27] <Sammitch> https://en.wikipedia.org/wiki/In-place_matrix_transposition#Algorithms
[01:55:51] <Sammitch> https://3v4l.org/4YU1s
[01:56:37] <Sammitch> I would even go so far as to make it a decorator
[01:57:33] <Sammitch> just chain a bunch of transformation decorators together and only do the necessary operations on the fly
[01:59:05] <de-facto> nice object oriented approach
[02:00:39] <Sammitch> I passed linear algebra
[02:00:43] <Sammitch> but not by much
[02:00:48] <Sammitch> and IO remembner none of it <_<;
[02:03:43] *** Joins: semeion (~semeion@user/semeion)
[02:08:07] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[02:10:32] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[02:16:00] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:22:53] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:26:33] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:54:03] <robertparkerx> when you change value in php.ini do you have to restart apache2?
[02:54:55] <Sammitch> if you're using mod_php, yes. otherwise restart of FPM or whatever is running your PHP code.
[02:55:07] <robertparkerx> litespeed
[02:55:13] <robertparkerx> sorry
[02:55:15] <robertparkerx> Not apache2
[02:55:36] *** Joins: stenno (~stenno@user/stenno)
[02:55:52] <Sammitch> otherwise restart of FPM or whatever is running your PHP code
[02:56:16] <Sammitch> running the code/managing the processes
[02:56:35] <robertparkerx> ty
[02:56:42] <robertparkerx> I'm sorry you had to repeat it
[02:56:55] <Byteflux> Guessing in this case the LiteSpeed SAPI, so LSPHP
[02:57:32] <robertparkerx> yes
[02:59:58] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[03:04:54] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[03:12:06] *** Joins: jargon (~jargon@184.101.212.50)
[03:12:21] *** Joins: keypusher (keypusher@user/keypusher)
[03:12:33] <jargon> https://pastebin.com/8rSnLXRu Why does my program not properly capture the hits and place them into $page2 ?
[03:13:23] <jargon> Blondie101010?
[03:13:25] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 252 seconds)
[03:13:30] <jargon> __adrian?
[03:15:48] <jargon> https://regex101.com/r/Ed959i/3 Here is what isn't working.
[03:16:24] <jargon> I provided the pattern, the subject and the code.
[03:17:12] <jargon> #regex is exhausted and debugging it is beyond their capability.
[03:18:07] <jargon> the matches keeps returning an empty array.
[03:22:34] <jargon> I slimmed down the code as much as feasible.
[03:23:52] *** night_wulfe_ is now known as night_wulfe
[03:24:26] *** Joins: WishBoy (~WishBoy@user/wishboy)
[03:25:33] <Blondie101010> jargon: your interpretation of the situation looks very flawed
[03:26:05] <Blondie101010> no sane person will spend hours trying to figure out what you're trying to do with that regex and what is wrong with it unless you pay them a real salary
[03:27:10] <Byteflux> Blondie101010: I stopped caring and closed the tab at `global`
[03:28:21] <Blondie101010> the test sring is 72KB
[03:28:25] <Blondie101010> lol
[03:28:59] <jargon> Yes ,the test string is the entire QBasic game.
[03:29:25] *** Quits: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com) (Quit: Leaving.)
[03:29:26] <Blondie101010> jargon:  that's not how you test regex
[03:29:43] <jargon> We live in the future, might as well actually use our powerhouse machines for other use than self amusement.
[03:29:56] <Blondie101010> don't know what you're talking about
[03:30:12] <Blondie101010> what is the purpose of that regex?
[03:30:52] <jargon> Isolating Attack Cards in my Roe Colector Card Game in-order to change it up so they load from disk as needed.
[03:31:48] <Blondie101010> I don't understand, and I don't think it's only because I don't know the game
[03:31:55] <jargon> When it is ready, I will port it from QBasic to FreeBASIC.
[03:32:01] <Blondie101010> if you want to change code, you just change it
[03:32:12] <Blondie101010> why do a regex to change it?
[03:32:38] <jargon> Because the data entry parts are pretty uniform and redundant.
[03:33:12] <Byteflux> Blondie101010: Yeah writing an actual parser/lexer seems way simpler than this regex lol
[03:33:29] <jargon> Might as well load that part of the code off disk as needed.
[03:33:49] <Blondie101010> jargon:  how big is that?
[03:33:59] <jargon> The regex is supposed to define a stencil that the cards go by.
[03:34:12] <Blondie101010> don't think I care about that part
[03:34:30] <jargon> Bigger than a 3.25" floppy.
[03:34:48] <Blondie101010> on a VIC20?
[03:34:55] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[03:35:00] <Blondie101010> or commodore 64?
[03:35:11] <jargon> MS-DOS' QBasic 1.1
[03:35:17] <Blondie101010> so what?
[03:35:29] <Blondie101010> that fits in less than 640KB
[03:35:32] <jargon> I got it working on QuickBasic4.5 last week.
[03:35:45] <Blondie101010> anyways, wrong channel, good luck!
[03:35:50] <jargon> The resources are bigger than a floppy.
[03:36:03] <Blondie101010> you're wasting your time if the purpose is to save IO
[03:36:14] <jargon> I was using php8/pcre2 to modify the game not run it.
[03:36:28] <Blondie101010> the same machine that would benefit from it could not run it because of the CPU intensive regex
[03:36:31] <Blondie101010> think about it!!!
[03:36:44] <jargon> --> I was using php8/pcre2 to modify the game not run it. <--
[03:37:11] <Blondie101010> you're trying to save a few MB of IO
[03:37:16] <Blondie101010> that is crazy!
[03:37:19] <Blondie101010> stop it
[03:37:26] <Blondie101010> and anyways, off topic here!
[03:37:47] <jargon> Did you even read my questions?
[03:38:19] <Blondie101010> you have a problem with that crazy stupid regex
[03:38:28] <Blondie101010> not a PHP issue
[03:38:56] <Blondie101010> and the intelligent thing to do would be to find an alternative, and considering what you described, the best alternative is to delete that junk
[03:39:03] <jargon> The #regex chat told me to ask in #php
[03:39:44] <Byteflux> It's a PHP-specific regex so yeah it's on topic as far as the question goes, but the approach is kinda dumb so it's up to someone to actually care enough to help out.
[03:39:46] <Blondie101010> scroll up and reread the first few things I replied
[03:40:12] <Blondie101010> jargon:  I explained why you were not getting the help you expected
[03:40:29] <Blondie101010> that will not change unless you drastically change your approach and simplification
[03:40:48] <jargon> MY regex was simple until purplex fixed a few flaws and optimized it.
[03:41:09] <Blondie101010> anyways
[03:41:47] <jargon> Regex101 was able to prcess 74kb in 7ms.
[03:42:12] <Blondie101010> sure
[03:42:38] <Blondie101010> what line should it match that doesn't?
[03:42:57] <Blondie101010> (that's usually how you test regex"
[03:43:06] <jargon> It doesn't match anything on my own XAMPP.
[03:43:14] <Byteflux> Presumably regex101 is working as corrected, just not matching anything in an actual PHP environment
[03:43:22] <Byteflux> as intended*
[03:44:22] <jargon> Regex101 properly processed all 12 matches out of 74kb in 7ms. My XAMPP tho, immediately matches nothing.
[03:44:59] <Blondie101010> jargon:  if you bring your PHP code down to less than 15 lines, I'll look at it
[03:45:05] <Byteflux> Based on what's being matched in the test string (the highlighted portions), this approach could be incredibly simplified to a more readable solution with plain old string parsing.
[03:45:16] * Blondie101010 nods
[03:45:25] <Byteflux> This regex is unnecessary and nobody wants to read it or try to understand it.
[03:45:27] <Blondie101010> but it seems like this is also useless
[03:46:15] <jargon> The entire reason I am using regex, is because PCRE@ reads better than me and doens't typo as easily.
[03:46:24] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:47:43] <jargon> I use regex for single purpose, throw away use for personal projects.
[03:48:01] <Blondie101010> you should learn to build proper things instead of throw away junk
[03:48:09] <Byteflux> That's not really relevant anyway
[03:48:19] <Byteflux> You choose to use something because it's the better tool for the job.
[03:48:23] <jargon> That 74kb program is from 1997.
[03:48:26] <Byteflux> In this case, regex is not the better tool for the job.
[03:48:48] <Byteflux> Regex just makes the job harder to do, in fact.
[03:48:49] <Blondie101010> jargon:  at this point I'm not sure if your problem is in the regex or the PHP code, because you say you simplified it but you simplified neither of them
[03:48:53] <Blondie101010> so get simplifying!
[03:49:51] <Byteflux> When you have regexes that look like this, it's usually a sign that regex is not the right solution.
[03:50:11] <Blondie101010> unless there's no other option
[03:50:16] <jargon> I plan on making a php8/pcre2 based Roe Collector Card editor for use with developing the actual game, which would be rewritten in FreeBASIC
[03:50:33] <Blondie101010> very extremely uninteresting!
[03:50:38] <Byteflux> Don't expect people to help you if you created something only you can read.
[03:50:43] <jargon> The game itself in FB, the editor would be a website.
[03:54:51] <jargon> Byteflux, it was very readable until purplex got his hands on the regex.
[03:55:13] <jargon> I had to ask his help because of a line skip flaw.
[03:56:00] <Byteflux> The complexity of these matches does not warrant a regex at all in the first place
[03:56:10] <jargon> purplex motto is "you got what you paid for / no refunds"
[03:57:50] *** Quits: bobdobbs (~user@2406:5a00:f030:1700:b85e:3fb5:dfc0:69ed) (Ping timeout: 260 seconds)
[03:57:55] <jargon> Everytime I ask for help with a regex, the helper keeps attempting to optimize it to the point that it reads as a garbled mess.
[03:59:26] <jargon> At-least I am able to somewhat understand purplex's regex. I just can't get it to make any matchs on my XAMPP.
[03:59:52] <jargon> I was told by #regex that it is a #php issue, not a #regex one.
[04:00:30] <Byteflux> Good luck, maybe someone will care enough to troubleshoot this regex.
[04:01:14] <Sammitch> is there a doc page that talks about the splat operator ... ?
[04:02:13] <Byteflux> Sammitch: This page? https://php.net/functions.arguments#functions.variable-arg-list
[04:03:04] <Sammitch> Byteflux: danke
[04:08:08] *** Joins: ferdna (~ferdna@user/ferdna)
[04:09:36] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[04:22:38] *** Joins: stenno (~stenno@user/stenno)
[04:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:34:55] *** Joins: vlm (~vlm@user/vlm)
[04:47:36] *** Joins: prime (~prime@173.213.88.248)
[04:52:41] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[05:11:52] *** Quits: prime (~prime@173.213.88.248) (Quit: and then my friend you die)
[05:13:52] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[05:16:34] *** Joins: keypusher (keypusher@user/keypusher)
[05:36:09] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[05:46:20] *** Joins: Rockwood (~Rocky@user/rocky)
[06:11:08] *** Joins: nebx_co (~nebx_co@c-76-25-23-196.hsd1.co.comcast.net)
[06:37:06] <Rockwood> __adrian, were you talking about this few days back -> https://www.rust-lang.org/learn/get-started
[06:52:02] *** Joins: carlino3 (~carlino3@user/carlino3)
[06:52:05] <carlino3> hi
[06:54:37] <Rockwood> hi
[06:56:47] <Rockwood> carlino3, name looks like Mexican name
[06:56:53] *** Joins: carlino324 (~carlino3@user/carlino3)
[06:56:58] *** Quits: carlino3 (~carlino3@user/carlino3) (Ping timeout: 256 seconds)
[06:57:05] *** carlino324 is now known as carlino3
[07:02:18] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:35:49] *** Joins: Aryan (Aryan@user/aryan)
[07:46:42] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[07:46:58] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[07:50:44] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Ping timeout: 252 seconds)
[07:51:40] *** Joins: titus123 (~gsandroid@184.151.230.214)
[08:00:40] <titus123> I am uploading a number of images to a directory and recording the file names in myslqi.  I also want to change the image name to the next id number.  I about to try if the mysqli_insert_id returns the last one for me.  My question is, as my script is managing each image, creating thumbnail the entering the file name into the db, do I have to call mysqli_connect for each call of the function, or
[08:00:40] <titus123> I simply have to use mysqli_conntect once and then process every file name with the incert?
[08:01:38] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[08:02:07] <Blondie101010> you connect at the beginning of the script and use that connection
[08:02:26] <Blondie101010> so no you don't connect each time
[08:02:41] <titus123> ok, do I then have to close it for any reason or not be concerned about that?
[08:03:22] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[08:04:07] <Blondie101010> it's a good practice to close what you open in the proper context
[08:04:29] <Blondie101010> but in most cases it doesn't matter at all
[08:04:43] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:05:28] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Client Quit)
[08:05:41] *** Joins: Hiccup (cHoy@user/hiccup)
[08:06:11] <titus123> I see... thank you.  I had recalled reading about closing the connection years ago and wondered why I was not seeing it in the examples recently.   So it seems it not a big issue.
[08:08:31] <carlino3> as Blondie101010 said, closing resources that you won't use anymore is always a good practice. but for db connection, normally you want the connection alive for the entire request lifetime, so it will die automatically when PHP process finishes
[08:09:31] <Blondie101010> well if you use OO, then it's handled by the object
[08:09:48] <Blondie101010> hence the "proper context"
[08:10:27] <titus123> thanks, both of you.  I had another issue: I was first wanting to change the image name to round(microtime(true))... as I found an example for that but it turned out that it seems the script was running to fast and many of the files had the same name (number)
[08:10:59] <Blondie101010> that is not surprising
[08:11:06] <titus123> that is why I am thinking of going by the id number instead
[08:11:13] <carlino3> you may want to use another method for generating unique filenames
[08:11:22] <titus123> I just want there to be some conistent pattern to the file names
[08:11:30] <Blondie101010> that's a sane choice, but it tells the users how many images came before
[08:11:33] <carlino3> you may combine a timestamp with a fully random string, or use something like uniqid
[08:11:49] *** Quits: iogue (~iogue@gateway/tor-sasl/iogue) (Quit: iogue)
[08:12:04] <titus123> ah that is a good idea
[08:12:18] <titus123> that way they can not poke around for images based on file names
[08:12:21] <Blondie101010> uniqid("", true);
[08:13:44] <Blondie101010> I'd usually wrap that to validate the name doesn't already exist, though it shouldn't
[08:14:39] <carlino3> Blondie101010 an UNIQUE constraint on the database should be enough
[08:14:55] <Blondie101010> that is a good option
[08:15:04] <Blondie101010> not my favorite
[08:15:25] <carlino3> better to fail 1 in 1000000000 than do more work
[08:15:33] <Blondie101010> no
[08:15:47] <Blondie101010> that is not good programming practice at all
[08:16:01] <carlino3> why you think so?
[08:16:08] <Blondie101010> a good programmer needs to make sure that all cases are covered, not to skip over obvious problems
[08:16:41] <Blondie101010> you check, either in the FS or the DB, or both
[08:16:51] <Blondie101010> what is 1ms per request?
[08:17:14] <carlino3> well, if the chances of something failing (an UNIQUE constraint violation throwing an exception) are very rare, i will prefer that than adding code for checking the existance of that ID
[08:17:31] <titus123> if I do a random number proceceded by mysqli_incert_id ... I shoudl be good?
[08:17:52] <Blondie101010> carlino3:  ah sure, the unique constraint exception is a good solution
[08:18:17] <Blondie101010> titus123:  that would not ensure uniqueness
[08:19:08] <Blondie101010> since you already store the filename, it's simple to just put a unique key on it as carlino3 described
[08:19:56] <titus123> I am checking google to understand what this unique key is
[08:20:15] <Blondie101010> you're using a database
[08:20:37] <carlino3> also, someone here recommended me a time ago twitter "snowflakes", which i find it is a very good solution for this problem, and also for the "german tank" issue
[08:21:52] <carlino3> titus123 it is a database constraint to ensure that the value of a record is always unique, that way if you insert two records with the same value for that column, the constraint will make the insertion fail
[08:25:03] <Blondie101010> they're using mysqli, so it won't be as simple as PDO to handle
[08:25:08] <titus123> then if it fails, I have to do some error handeling. I find this is all interesting to learn about... but I am wondering how fetching the last ID then tagging on a randome number could fail... it would have to be unique because the first digits will always be incremental ... I am thinking logically?
[08:25:38] <jargon> Blondie101010, I figure out why my regex wasn't working... PHP8 contained a virus.
[08:25:54] <Blondie101010> in that case, where it can happen without a real problem, it'd just make it try again
[08:26:16] <Blondie101010> jargon:  how did you install it?
[08:27:46] <carlino3> titus123 no, if it fails, you show an error message, and make the user try again. it will ve a very very rare case, so..
[08:28:47] <carlino3> i don't understand the rest of your question, why do you need to fetch the last insert id?
[08:28:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[08:29:25] *** Quits: Hiccup (cHoy@user/hiccup) (Remote host closed the connection)
[08:29:46] <jargon> Blondie101010, TeamViewer is ransomware and TeamSpeak is obsolete.
[08:29:48] <titus123> carlino3 ... thinking to make the file name unique ... was going to use the last insert id plus a random number
[08:30:30] <Blondie101010> that would also be a bad choice
[08:30:38] <Blondie101010> it would frequently conflict
[08:32:29] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:32:30] <carlino3> titus123 why includign the last insert id? a truly random number isn't enough?
[08:33:27] <titus123> random numbers could conflict, but incremental numbers could not...... random would not be enough because a random number could come up again at a random point
[08:33:52] <titus123> yes... a truly random number is good
[08:34:16] <titus123> but I am trying to find the fastest way to make a reliable random number the first try
[08:34:20] <titus123> not have a fail
[08:39:00] <carlino3> makes sense, but the chances of a truly random number to be duplicated are very very very low, that's why i suggested the UNIQUE constraint and forget about it
[08:39:13] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[08:39:24] <Byteflux> You want either a sequential ID managed by your database or a v4 UUID.
[08:39:29] <carlino3> and adding the last insert id will minimize even more the probablity of conflict
[08:39:36] <Byteflux> Those are the most sane options.
[08:40:49] *** Quits: jargon (~jargon@184.101.212.50) (Remote host closed the connection)
[08:41:04] <Byteflux> A relational database is designed to provide atomicity.
[08:41:22] <carlino3> i wouldn't worry so much about this, just generate something like `{last_insert_id} + {uniqid}` and that's all. if it fails, make that client try again
[08:44:27] <Byteflux> Just insert the record *and then* change the image name.
[08:44:44] <Byteflux> It's your database's *job* to manage the sequence.
[08:45:50] <Byteflux> If you insist on violating that responsibility then you shouldn't be using a sequential ID to begin with. You should be using a v4 UUID.
[08:46:33] <Byteflux> Chance of collision is effectively impossible.
[08:52:34] <titus123> thanks for all these ideas and explanations ... I am giving them a try
[09:03:41] *** Quits: Aryan (Aryan@user/aryan) (Quit: Have a nice day!)
[09:03:45] *** Quits: titus123 (~gsandroid@184.151.230.214) (Read error: Connection reset by peer)
[09:04:42] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[09:05:07] *** Joins: Aryan (Aryan@user/aryan)
[09:15:27] <titus123> ok, it seems I can not call  mysqli_insert_id to get the last ID unless there was an insert done from the same session?  I am getting and undefined varialbe when I call 	 $last_insert_id = mysqli_insert_id($con );
[09:15:52] *** Joins: tex (~dee@user/dix)
[09:16:21] <titus123> is this not the right way to find out what the last ID number is in the table?
[09:18:22] <titus123> I want to find out the last ID number before I insert
[09:19:34] <Blondie101010> titus123: you do the insert, then check the id
[09:19:47] <Blondie101010> right after
[09:20:15] <titus123> ya... I need the ID first because that is what I want to generate part of the file name with before the insert
[09:20:32] <Blondie101010> titus123:  you were explained different ways of doing it
[09:20:38] <titus123> yes I was
[09:20:44] <Blondie101010> just do it :)
[09:21:06] <Blondie101010> with PDO, the unique key is easy
[09:21:07] <titus123> I like those ideas... but I still want to get the last ID in the table to use as part of a file name regarless
[09:21:27] <titus123> because I am using the ID in the file name in other uses as well
[09:22:12] <Blondie101010> you should probably be consistant
[09:22:25] <titus123> not finding anyting on google just yet to fetch the last ID in the table
[09:22:35] <Blondie101010> what?
[09:22:53] <Blondie101010> no don't do that
[09:22:59] <titus123> I do not want to do an insert then get the ID... I want to get the last ID in the table then do the insert
[09:23:06] <Blondie101010> and as I replied to your different ideas, they really were bad
[09:23:19] <Blondie101010> that is also bad
[09:23:49] <Blondie101010> you could even force it with a transation, making it stable code, but it's an atrocity
[09:23:53] <titus123> I understand your reasons why it is bad... but I also have another purpose for using the ID
[09:24:30] <Byteflux> If you're not going to use the ACID features of your relational database, you may as well stop using a relational database.
[09:24:43] <Blondie101010> start transaction, select max(id) from table_name; insert; commit
[09:24:47] <titus123> I want to cross reference files by name and the ID ... it should not be so hard to get the last ID in the table without first doing an insert is it?
[09:25:12] <titus123> lets forget my first stated purpose to create a unique file name
[09:25:19] <titus123> I agree with you
[09:25:33] <Blondie101010> you need to learn something
[09:25:37] <titus123> but I still want to find the last ID in the table before doing an insert
[09:25:55] <Blondie101010> I just gave you a very simple recipe
[09:26:11] <Blondie101010> the problem is not that you don't get clear answers, it's that you do NOTHING with it
[09:26:15] <titus123> to get the last ID in the table without doing an insert?
[09:26:20] <Byteflux> That's fine and all, but you need to understand that when performing multiple reads or writes in parallel, you need to use mechanisms that guarantee the consistency of your data.
[09:26:34] <Byteflux> The transaction example Blondie101010 posted is one such example.
[09:26:35] <Blondie101010> titus123:  <Blondie101010> start transaction, select max(id) from table_name; insert; commit
[09:27:09] <titus123> I did miss that, thank you
[09:28:07] <Blondie101010> but there are probably better ways to do what you're trying to do
[09:28:16] <titus123> I think I made my point confusing because I was at first mentioned the unique file name ... but I do indeed want to include the ID in the file name for other reasons ... and thank you
[09:28:40] <Byteflux> v4 UUIDs are a very common use case for concurrent/parallel writes
[09:33:41] <Byteflux> Otherwise you *have* to wrap the SELECT last ID, rename image, INSERT all into a transaction.
[09:36:12] *** Joins: Hiccup (cHoy@user/hiccup)
[09:43:10] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[09:43:30] *** Joins: AMG (ghebo@user/amg)
[09:47:49] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 252 seconds)
[09:49:34] *** Quits: xsist10 (~Test@2a02-a453-4c64-1-5ce3-21bc-dd02-66d6.fixed6.kpn.net) (Quit: Konversation terminated!)
[09:53:59] *** Quits: Hiccup (cHoy@user/hiccup) (Remote host closed the connection)
[09:55:11] *** Quits: carlino3 (~carlino3@user/carlino3) (Quit: Ping timeout (120 seconds))
[10:04:35] *** Joins: iogue (~iogue@gateway/tor-sasl/iogue)
[10:16:38] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:24:59] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[10:49:03] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[10:59:44] *** Joins: bobdobbs (~user@2406:5a00:444e:a800:3446:f7d0:d654:d40d)
[10:59:54] <titus123> Blondie101010: thank you... the MAX(ID) worked for me ... mysqli_query($con, "SELECT MAX(ID) FROM images LIMIT 1"))
[11:02:29] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[11:02:50] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[11:04:26] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[11:09:30] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Ping timeout: 260 seconds)
[11:10:38] *** Joins: titus123 (~gsandroid@184.151.230.214)
[11:28:51] *** Quits: iogue (~iogue@gateway/tor-sasl/iogue) (Remote host closed the connection)
[11:29:06] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 260 seconds)
[11:29:20] *** Joins: iogue (~iogue@gateway/tor-sasl/iogue)
[11:39:15] *** Quits: iogue (~iogue@gateway/tor-sasl/iogue) (Quit: iogue)
[11:41:44] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[11:42:19] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[11:44:01] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[11:46:04] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 252 seconds)
[11:57:08] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[11:58:11] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[12:02:20] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-84f5-6d99-e289-b6f4.res6.spectrum.com)
[12:13:08] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[12:14:27] *** Quits: titus123 (~gsandroid@184.151.230.214) (Read error: No route to host)
[12:14:54] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[12:34:16] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:34:28] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 252 seconds)
[12:43:18] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[12:53:06] *** Quits: bobdobbs (~user@2406:5a00:444e:a800:3446:f7d0:d654:d40d) (Ping timeout: 260 seconds)
[12:53:22] *** Joins: bobdobbs (~user@14.137.23.74)
[12:54:08] *** Joins: Miles8of9 (~obrien@93-34-145-79.ip50.fastwebnet.it)
[13:40:37] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-84f5-6d99-e289-b6f4.res6.spectrum.com) (Quit: Leaving.)
[13:40:53] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-84f5-6d99-e289-b6f4.res6.spectrum.com)
[13:45:25] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-84f5-6d99-e289-b6f4.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:01:10] *** Joins: genom (~g@37.214.82.187)
[14:03:44] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-2d33-f081-24f7-adef.res6.spectrum.com)
[14:05:40] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-2d33-f081-24f7-adef.res6.spectrum.com) (Client Quit)
[14:15:03] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-65af-9ed1-e7d9-e937.res6.spectrum.com)
[14:17:41] *** Joins: guido (~guido@host-79-19-250-211.retail.telecomitalia.it)
[14:34:38] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:36:17] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:37:44] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[14:39:56] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[14:52:31] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[14:53:11] *** Joins: mactron (~mactron@APN-123-242-104-gprs.simobil.net)
[15:09:33] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-65af-9ed1-e7d9-e937.res6.spectrum.com) (Quit: Leaving.)
[15:09:48] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-65af-9ed1-e7d9-e937.res6.spectrum.com)
[15:10:19] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-65af-9ed1-e7d9-e937.res6.spectrum.com) (Client Quit)
[15:13:54] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:44:40] *** Joins: ArchNoob (~maotora@user/archnoob)
[16:08:02] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:08:29] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:11:47] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:11:51] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[16:14:40] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[16:15:36] *** Joins: Simplar (~quassel@188.163.92.105)
[16:19:24] *** Joins: keypusher (keypusher@user/keypusher)
[16:31:33] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[16:35:10] *** Quits: Simplar (~quassel@188.163.92.105) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:35:47] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 240 seconds)
[16:36:02] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 268 seconds)
[16:42:39] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[16:44:09] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 265 seconds)
[17:00:04] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[17:01:12] *** Quits: d3sync (~d3sync@62.1.158.148) (Read error: Connection reset by peer)
[17:20:17] *** Joins: Simplar (~quassel@188.163.92.105)
[17:25:25] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[17:30:29] *** Joins: Poboy (~Poboy@user/poboy)
[17:32:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:49:56] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Quit: Client quit)
[17:50:42] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[17:58:17] *** Joins: onichomp666 (~onichomp@2806:264:4404:94a9:a1d2:a673:497:86b)
[17:59:42] *** Quits: onichomp (~onichomp@2806:264:4404:81d9:f4fa:280b:8b06:a951) (Ping timeout: 260 seconds)
[18:06:04] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[18:10:23] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:11:19] *** Joins: mactron_ (~mactron@APN-123-242-104-gprs.simobil.net)
[18:14:32] *** Quits: mactron (~mactron@APN-123-242-104-gprs.simobil.net) (Ping timeout: 265 seconds)
[18:18:31] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[18:40:50] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[18:53:41] *** Quits: mactron_ (~mactron@APN-123-242-104-gprs.simobil.net) (Ping timeout: 265 seconds)
[19:09:39] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[19:17:33] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:28:00] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[19:34:24] *** Joins: keypusher (keypusher@user/keypusher)
[19:35:42] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:58:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:01:56] *** Joins: Rockwood (~Rocky@user/rocky)
[20:03:30] *** Joins: magla (~gelignite@55d42346.access.ecotel.net)
[20:12:00] <Rockwood> Nek, o/
[20:23:41] *** Quits: guido (~guido@host-79-19-250-211.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[20:33:09] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[20:33:14] *** Joins: guido (~guido@host-79-19-250-211.retail.telecomitalia.it)
[20:37:34] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 250 seconds)
[21:06:30] *** Joins: Warped (~Warped@user/warped)
[21:11:00] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:14:13] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[21:14:31] *** Joins: pmercado (~pmercado@186.107.63.213)
[21:20:01] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:23:30] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:23:47] *** Joins: shalora (~quassel@2a02:810a:b40:9f4::178f)
[21:24:00] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 265 seconds)
[21:28:23] *** Quits: Simplar (~quassel@188.163.92.105) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:28:38] <Woet> I have some code with a promise and event handler, however, that part is gonna be optional (lines 2 and 3). obviously I can turn the code into the callback into a function and call that, but is there any other way I'm not thinking of?
[21:33:23] *** Quits: tex (~dee@user/dix) (Quit: Konversation terminated!)
[21:39:59] *** Joins: ArchNoob (~maotora@user/archnoob)
[21:47:37] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-9c3e-79ce-5e92-d571.res6.spectrum.com)
[21:47:50] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[21:49:39] *** Joins: Northwoods (~Northwood@202.14.122.53)
[21:56:38] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Ping timeout: 252 seconds)
[21:56:58] *** Joins: Ben10 (~Ben10@37.120.130.28)
[21:57:26] *** Joins: titus123 (~gsandroid@184.151.230.214)
[22:23:27] *** Joins: \mSg (mSg@user/msg/x-0285936)
[22:24:58] *** Joins: mactron (~mactron@APN-123-246-111-gprs.simobil.net)
[22:27:45] *** Parts: Ben10 (~Ben10@37.120.130.28) ()
[22:29:46] *** Joins: Warped (~Warped@user/warped)
[22:29:53] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:31:05] *** Quits: WishBoy (~WishBoy@user/wishboy) (Client Quit)
[22:38:26] *** Quits: mactron (~mactron@APN-123-246-111-gprs.simobil.net) (Ping timeout: 252 seconds)
[22:44:43] *** Joins: semeion (~semeion@user/semeion)
[23:04:53] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[23:41:40] *** Quits: guido (~guido@host-79-19-250-211.retail.telecomitalia.it) (Quit: WeeChat 3.2.1)
[23:48:10] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Ping timeout: 252 seconds)
[23:49:22] *** Joins: WishBoy (~WishBoy@user/wishboy)
[23:50:41] <WishBoy> php router something "necessary" in projects or is it dispensable?
[23:52:30] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 260 seconds)
[23:59:45] <TinoDidriksen> Don't need it at all, but having a common entry point makes many things much easier.
