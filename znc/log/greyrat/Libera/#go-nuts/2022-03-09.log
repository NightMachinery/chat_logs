[00:00:02] *** Joins: MrWiggly (~MrWiggly@62.6.56.226)
[00:05:32] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1d57:8085:a2ac:6196)
[00:09:06] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:7859:22cf:713c:fe6e) (Ping timeout: 260 seconds)
[00:09:20] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[00:14:31] *** Joins: bigGopher (~dan@207.98.176.66)
[00:16:17] *** Joins: tane (~tane@dslb-002-201-234-175.002.201.pools.vodafone-ip.de)
[00:16:17] *** Quits: tane (~tane@dslb-002-201-234-175.002.201.pools.vodafone-ip.de) (Changing host)
[00:16:17] *** Joins: tane (~tane@user/tane)
[00:17:18] *** Joins: neurocyte0917090 (~neurocyte@IP-045014190241.dynamic.medianet-world.de)
[00:17:18] *** Quits: neurocyte0917090 (~neurocyte@IP-045014190241.dynamic.medianet-world.de) (Changing host)
[00:17:18] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:24:50] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Quit: The Lounge - https://thelounge.chat)
[00:25:29] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[00:26:43] *** Quits: yelnah (~felix@2001:44b8:30c9:336:6f0:21ff:fe3c:d4d7) (Quit: ZNC 1.8.2 - https://znc.in)
[00:26:53] *** Joins: yelnah (~felix@2001:44b8:30c9:336:6f0:21ff:fe3c:d4d7)
[00:34:24] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[00:35:37] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1d57:8085:a2ac:6196) (Ping timeout: 250 seconds)
[00:35:52] *** Joins: absc (~absc@dynamic-adsl-94-34-219-179.clienti.tiscali.it)
[00:36:58] *** Joins: SuperLag (~akulbe@user/superlag)
[00:38:59] *** Quits: absc (~absc@dynamic-adsl-94-34-219-179.clienti.tiscali.it) (Client Quit)
[00:40:49] *** Quits: dr0n (~nabromov@176.26.119.61) (Quit: WeeChat 3.3)
[00:48:25] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:56:36] *** Joins: bluedust (~bluedust@103.165.167.61)
[01:01:00] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 252 seconds)
[01:04:21] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[01:06:46] *** Joins: crashrep (~crashrep@user/crashrep)
[01:06:57] *** Joins: omnihil (~hermes@camel.ethereal.net)
[01:07:21] *** Quits: warblr (~warblr@ip-67-213-71-181.fibre.fibrestream.ca) (Quit: Leaving)
[01:09:15] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Remote host closed the connection)
[01:09:21] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[01:11:36] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:15:50] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (Ping timeout: 260 seconds)
[01:15:51] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 252 seconds)
[01:16:42] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[01:17:26] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[01:24:05] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:24:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:27:27] *** Joins: ricci (~ricci@31.187.110.131)
[01:29:40] *** Parts: jla (~jordi@137.215.35.37.dynamic.jazztel.es) ()
[01:29:59] *** Quits: MrWiggly (~MrWiggly@62.6.56.226) (Quit: Textual IRC Client: www.textualapp.com)
[01:40:20] *** Joins: MrWiggly (~MrWiggly@62.6.56.226)
[01:40:26] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[01:45:17] *** Quits: artifishul (~textual@104.238.128.150) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:53:19] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[01:53:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:56:39] *** Quits: MrWiggly (~MrWiggly@62.6.56.226) (Quit: Textual IRC Client: www.textualapp.com)
[01:56:46] *** Joins: artifishul (~textual@104.238.128.150)
[01:57:06] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:57:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[02:00:06] *** Joins: zeebrow (~zeebrow@2600:1700:5c5b:d280:43b7:cb91:8d82:7e08)
[02:00:53] *** Quits: artifishul (~textual@104.238.128.150) (Client Quit)
[02:02:28] *** Quits: ekathva (~ekathva@n14jqqwhtfh2jdj1f-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[02:05:37] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Quit: The Lounge - https://thelounge.chat)
[02:12:29] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 252 seconds)
[02:13:30] *** Joins: rcernin (~rcernin@101.189.129.123)
[02:17:37] *** Quits: jimeh (jimeh@matrix.bah.io) (Remote host closed the connection)
[02:18:47] *** Joins: jimeh (jimeh@matrix.bah.io)
[02:20:32] *** Quits: zeebrow (~zeebrow@2600:1700:5c5b:d280:43b7:cb91:8d82:7e08) (Ping timeout: 240 seconds)
[02:21:37] *** Joins: zeebrow (~zeebrow@2600:1700:5c5b:d280:b62e:99ff:febe:ef01)
[02:25:39] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[02:25:46] *** Quits: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[02:25:46] *** Quits: adip (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[02:26:17] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:31:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[02:32:52] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[02:35:03] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (Quit: WeeChat 3.0)
[02:38:40] *** Quits: lazyreader (~lazyreade@user/lazyreader) (Quit: The Lounge - https://thelounge.chat)
[02:39:33] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[02:39:43] *** Joins: lazyreader (~lazyreade@user/lazyreader)
[02:39:59] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:41:51] <Tach> chilversc are you around ?
[02:42:08] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[02:43:22] *** Quits: dvdmuckle (~dvdmuckle@user/dvdmuckle) (Quit: Bouncer Surgery)
[02:44:15] *** Joins: dvdmuckle (~dvdmuckle@user/dvdmuckle)
[02:46:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:59:29] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[03:00:34] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:01:53] *** Parts: zeebrow (~zeebrow@2600:1700:5c5b:d280:b62e:99ff:febe:ef01) ()
[03:02:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[03:08:36] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 252 seconds)
[03:09:52] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[03:11:20] *** Quits: loggingbot (~loggingbo@user/loggingbot) (Read error: No route to host)
[03:11:21] *** Quits: jamra_ (sid16103@id-16103.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: telemachus (sid2004@id-2004.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: recursion (sid504862@id-504862.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: themayor (sid498794@almalinux/themayor) (Ping timeout: 252 seconds)
[03:11:31] *** Joins: loggingbot (~loggingbo@user/loggingbot)
[03:11:38] *** Quits: soren (sid124229@id-124229.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:11:38] *** Quits: Teckla (sid172075@user/teckla) (Read error: Connection reset by peer)
[03:11:38] *** Quits: trollixx (sid289131@id-289131.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:11:38] *** Quits: jimcroft_______ (sid148498@id-148498.uxbridge.irccloud.com) (Write error: Connection reset by peer)
[03:11:38] *** Quits: theckman (sid295081@user/theckman) (Read error: Connection reset by peer)
[03:11:38] *** Quits: kubblai (sid478659@fedora/kubblai) (Read error: Connection reset by peer)
[03:11:38] *** Quits: flukes (sid527792@user/flukes) (Read error: Connection reset by peer)
[03:11:39] *** Quits: nikki93 (sid200244@id-200244.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:11:48] *** Joins: telemachus (sid2004@id-2004.helmsley.irccloud.com)
[03:11:48] *** Joins: jimcroft_______ (sid148498@id-148498.uxbridge.irccloud.com)
[03:11:53] *** Joins: flukes (sid527792@user/flukes)
[03:11:54] *** Quits: servytor (uid525486@id-525486.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[03:11:54] *** Quits: wangledorf_ (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:54] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:55] *** Quits: wyre (~wyre@user/wyre) (Remote host closed the connection)
[03:11:55] *** Quits: else- (sid23924@id-23924.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:11:55] *** Quits: computerquip (sid423484@user/computerquip) (Read error: Connection reset by peer)
[03:11:56] *** Quits: bw (sid2730@user/betawaffle) (Read error: Connection reset by peer)
[03:12:02] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[03:12:07] *** Joins: recursion (sid504862@id-504862.ilkley.irccloud.com)
[03:12:07] *** Joins: servytor (uid525486@id-525486.hampstead.irccloud.com)
[03:12:10] *** Joins: themayor (sid498794@almalinux/themayor)
[03:12:10] *** Joins: trollixx (sid289131@id-289131.uxbridge.irccloud.com)
[03:12:11] *** Joins: bw (sid2730@user/betawaffle)
[03:12:12] *** Joins: computerquip (sid423484@user/computerquip)
[03:12:12] *** Joins: wyre (~wyre@user/wyre)
[03:12:13] *** Joins: r0bby (r0bby@user/r0bby)
[03:12:17] *** Joins: else- (sid23924@id-23924.tinside.irccloud.com)
[03:12:17] *** Joins: soren (sid124229@id-124229.uxbridge.irccloud.com)
[03:12:17] *** Joins: nikki93 (sid200244@id-200244.tinside.irccloud.com)
[03:12:18] *** Joins: Teckla (sid172075@user/teckla)
[03:12:18] *** Joins: kubblai (sid478659@fedora/kubblai)
[03:12:18] *** Joins: wangledorf_ (sid505185@id-505185.ilkley.irccloud.com)
[03:12:19] *** Joins: jamra_ (sid16103@id-16103.ilkley.irccloud.com)
[03:12:20] *** Joins: theckman (sid295081@user/theckman)
[03:12:28] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[03:12:32] *** Joins: pl (sid98063@id-98063.helmsley.irccloud.com)
[03:13:33] *** Quits: wim (~wim@42.be) (Ping timeout: 252 seconds)
[03:13:53] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (Ping timeout: 268 seconds)
[03:14:06] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: unl0ckd (~unl0ckdma@2001:470:69fc:105::15e6) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: tommo[m] (~tommodevm@2001:470:69fc:105::1:9654) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: nescafe1001 (sid211018@id-211018.tinside.irccloud.com) (Ping timeout: 252 seconds)
[03:15:05] *** Joins: kodah (~kodah@user/kodah)
[03:15:13] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:15:50] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[03:23:23] *** Quits: servytor (uid525486@id-525486.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:27:01] *** Joins: nescafe1001 (sid211018@id-211018.tinside.irccloud.com)
[03:27:36] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[03:28:48] *** Joins: tommo[m] (~tommodevm@2001:470:69fc:105::1:9654)
[03:29:08] *** Joins: unl0ckd (~unl0ckdma@2001:470:69fc:105::15e6)
[03:30:14] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 260 seconds)
[03:35:19] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[03:35:50] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Client Quit)
[03:38:26] *** Quits: jimeh (jimeh@matrix.bah.io) (Remote host closed the connection)
[03:39:36] *** Joins: jimeh (jimeh@matrix.bah.io)
[03:40:08] *** Joins: Torr (~Torr@user/torr)
[03:40:21] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[03:43:07] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[03:47:14] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[03:47:46] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[03:47:57] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Client Quit)
[03:52:09] *** Quits: beholders_eye (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1) (Read error: Connection reset by peer)
[03:53:59] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[03:57:08] *** Joins: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net)
[03:58:20] *** Joins: lindsay (~lindsay@user/LindsayZhou)
[03:58:32] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:58:44] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[04:02:13] *** Quits: lux0r (~lux0r@65.56.68.34.bc.googleusercontent.com) (Ping timeout: 240 seconds)
[04:03:20] *** Joins: lux0r (~lux0r@65.56.68.34.bc.googleusercontent.com)
[04:03:53] *** Quits: rairden (~rairden@2603:9000:de04:9613::1a20) (Quit: rairden)
[04:09:15] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[04:10:59] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[04:15:44] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 272 seconds)
[04:15:51] *** Joins: Praise- (~Fat@user/praise)
[04:16:15] *** Joins: R2robot (~R2robot@user/r2robot)
[04:18:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:33:16] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 256 seconds)
[04:33:42] *** Joins: nattiestnate (~nate@202.138.250.37)
[04:34:04] *** Quits: nattiestnate (~nate@202.138.250.37) (Client Quit)
[04:41:49] *** Joins: wim (~wim@42.be)
[04:43:00] *** Quits: endre (end.re@end.re) (Ping timeout: 240 seconds)
[04:45:13] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:05] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:49:03] *** Joins: endre (~end.re@end.re)
[04:49:48] *** Quits: wim (~wim@42.be) (Ping timeout: 252 seconds)
[04:55:42] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:14:42] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[05:17:45] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Changing host)
[05:17:45] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[05:19:13] *** Quits: krux02_ (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:23:00] *** Quits: Schoentoon (~Schoentoo@2a01:4f8:171:20d2::1) (Ping timeout: 240 seconds)
[05:24:39] *** Joins: Schoentoon (~Schoentoo@2a01:4f8:171:20d2::1)
[05:52:49] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[05:58:58] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[06:01:21] *** Quits: thatcher (~thatcher@91.110.54.67) (Ping timeout: 256 seconds)
[06:01:42] *** Joins: thatcher (~thatcher@91.110.54.67)
[06:17:45] *** Quits: muirrum_ (~muirrum@sourcehut/user/muirrum) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:17:57] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:33:55] *** Quits: lindsay (~lindsay@user/LindsayZhou) (Quit: WeeChat 3.4)
[06:39:03] *** Joins: lindsay (~lindsay@user/LindsayZhou)
[06:39:08] <skyfall> I'm trying to serve images from Base64 data URLs (base64 encoded images stored on database). Here's my current code: https://bpa.st/raw/KCQQ But this performs slower compared to a PHP version. Am I doing anything inefficient with regards to `response_buffer` utility? Is there any optimization that you guys recommend?
[06:40:06] <skyfall> I'm resetting the buffer because I'm using chunked encoding to send images one by one (because sending all of them at once takes longer).
[06:53:25] *** Joins: wim (~wim@42.be)
[06:58:49] *** Joins: bluedust (~bluedust@103.165.167.61)
[07:03:41] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 256 seconds)
[07:08:38] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Ping timeout: 260 seconds)
[07:25:07] <bpalmer> have you verified it's actually doing chunked encoding to send to the user?
[07:25:29] <bpalmer> but a few things stand out: why are you connecting anew to the database each time this is called?
[07:26:11] <bpalmer> why aren't you caching these images?
[07:27:00] <bpalmer> What purpose does first writing a string to a bytes.Buffer and then writing the bytes.Buffer as a string somewhere else serve?
[07:29:18] *** Joins: ejjfunky (~ejjfunky2@125.164.16.249)
[07:33:43] <bpalmer> I'm pretty sure you need to set up flushing on the writer to get transfer encoding, but this should show up when you look at the responses.
[07:35:07] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:36:01] *** Joins: jasonwucj (uid13975@id-13975.ilkley.irccloud.com)
[07:41:23] *** Joins: bluedust (~bluedust@103.165.167.61)
[07:41:38] *** Quits: ejjfunky (~ejjfunky2@125.164.16.249) (Quit: Leaving)
[07:49:06] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:7585:7dcf:ed00:963a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:50:52] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[07:51:08] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[07:51:40] *** Joins: ejjfunky (~ejjfunky@125.164.20.238)
[07:52:00] *** Quits: jjhoo (~jahakala@user/jjhoo) (Ping timeout: 268 seconds)
[07:57:04] *** Joins: jjhoo (~jahakala@user/jjhoo)
[07:57:50] <skyfall> bpalmer: Yeah, it's using the chunked encoding. I've seen the Transfer-Encoding header of the initial request.
[07:58:36] <skyfall> bpalmer: I thought that's the only way we can send chunks after processing them. Like, pushing into buffer, writing the reply and emptying that buffer to write more.
[07:58:51] <skyfall> I'm not aware of any other container that does that.
[07:59:48] <bpalmer> b.WriteString('hello') ; fmt.Fprintf(w, b.String()) <-- that's just fmt.Fprintf(w, 'hello')
[08:00:10] <bpalmer> assuming b is empty to begin with, of course. But that's the case you're facing in your loop, as you continually reset the buffer
[08:01:34] <skyfall> Hmm, I didn't notice that. I can write stuff directly into http.ResponseWriter. I will remove that buffer.
[08:01:49] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[08:01:51] <skyfall> Yeah, you're right. The buffer is useless there.
[08:01:58] <bpalmer> skyfall: the chunks are being sent where you think they are? Again, the usual way I've seen is if f, ok := w.(http.Flusher); ok { f.Flush() } to explicitly mark when the data should be flushed out.
[08:02:54] <bpalmer> (And sorry, I wrote 'hello' above because I've been in python land all day; that should be "hello", of course)
[08:03:26] <skyfall> ya, gotcha
[08:04:38] <skyfall> Sorry, what is this `w.(http.Flusher)` syntax again?
[08:04:44] <skyfall> I've once learned it.
[08:05:10] *** Joins: andlabs (~andlabs@2605:ef80:8090:9297:fd7b:e030:be2f:8094)
[08:06:41] *** Joins: hanzo (uid532183@user/hanzo)
[08:07:29] <bpalmer> that's a type assertion
[08:07:43] <skyfall> ah, thanks.
[08:08:13] *** Joins: bluedust (~bluedust@103.165.167.61)
[08:09:13] <skyfall> interesting, so http.Flusher type implements the interface functions of http.ResponseWriter right? (I didn't know this is how we're supposed to flush the buffer).
[08:10:59] <bpalmer> no, net.Flusher is a separate interface; "The Flusher interface is implemented by ResponseWriters that allow an HTTP handler to flush buffered data to the client"  (from https://pkg.go.dev/net/http )
[08:11:45] <skyfall> I see.
[08:11:48] *** Quits: andlabs (~andlabs@2605:ef80:8090:9297:fd7b:e030:be2f:8094) (Ping timeout: 240 seconds)
[08:13:26] *** Joins: andlabs (~andlabs@2605:ef80:8095:22b2:c52a:af9d:3e05:4bd)
[08:13:29] <bpalmer> a type can implement multiple interfaces ; for example, type FStruct struct {}  ; func (f FStruct) Close() error { return nil }  func (f FStruct) Read(p []byte) (int, err) { return 0, nil }  <- an FStruct object implements the io.Closer and io.Reader interfaces
[08:13:50] <bpalmer> so if you're given a Reader , it might also implement Closer and it might not; type assertion lets you check at runtime.
[08:14:34] <bpalmer> the only thing a Reader is *guaranteed* to support is the Read method.
[08:17:40] *** Quits: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net) (Ping timeout: 272 seconds)
[08:25:09] <skyfall> Yeah, that makes sense, thanks.
[08:28:21] <skyfall> bpalmer: I've rewritten the code like you suggested, now it's little bit faster than the PHP version. https://bpa.st/raw/YWUA
[08:28:37] <skyfall> A few secs faster.
[08:29:40] *** Joins: k8yun (~k8yun@user/k8yun)
[08:30:26] <bpalmer> I also suggested moving the database connection to be persistent so you're not connecting anew every time.
[08:30:35] <bpalmer> but sounds like you've met your immeditae goals.
[08:30:58] <skyfall> yeah
[08:31:13] <bpalmer> also, fmt.Fprintf(w, fmt.Sprintf(a, b))  is the same thing as fmt.Fprintf(w, a, b)
[08:31:34] <skyfall> oh, i see.
[08:46:11] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Read error: Connection reset by peer)
[08:50:19] *** Joins: treeford (~charleste@user/treeford)
[08:51:22] *** Joins: han-solo (~hanish@user/han-solo)
[08:54:36] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[09:00:15] *** Quits: andlabs (~andlabs@2605:ef80:8095:22b2:c52a:af9d:3e05:4bd) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:00:37] *** Joins: cdated (~cdated@70-231-19-36.lightspeed.rlghnc.sbcglobal.net)
[09:03:12] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[09:06:06] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[09:11:41] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[09:18:21] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[09:19:36] *** Quits: notepad7 (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
[09:20:04] *** Joins: notepad7 (~notepad@129.159.46.243)
[09:23:33] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[09:29:25] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[09:29:26] *** Joins: jpw (~jpw@user/jpw)
[09:31:02] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[09:31:16] *** Joins: adip (~adip@dhy11.neoplus.adsl.tpnet.pl)
[09:31:18] *** Joins: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl)
[09:34:59] *** Quits: Praise- (~Fat@user/praise) (Ping timeout: 256 seconds)
[09:35:25] *** Joins: Praise (~Fat@user/praise)
[09:40:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:43:28] *** Quits: casastorta (~casastort@neo3.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:44:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:45:20] *** Joins: casastorta (~casastort@neo2.krivokuca.net)
[09:47:51] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[09:48:11] *** Joins: bindu (~bindu@user/bindu)
[09:49:32] *** Quits: zanshin (~zanshin@user/zanshin) (Ping timeout: 252 seconds)
[09:52:36] *** Quits: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[09:52:36] *** Quits: adip (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[09:57:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:58:11] *** Joins: ghost08 (~ghost08@62.168.104.146)
[10:07:42] *** Quits: ghost08 (~ghost08@62.168.104.146) (Quit: WeeChat 3.4)
[10:10:26] *** Quits: normen_ (~normen@pd9eecc5a.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:12:59] *** Joins: zanshin (~zanshin@user/zanshin)
[10:13:35] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[10:13:42] *** Joins: xsteadfastx (~marv@94.31.99.245)
[10:14:07] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[10:14:15] *** Quits: redquasar (~redquasar@user/redquasar) (Quit: redquasar.xyz)
[10:15:14] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[10:18:48] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[10:19:12] *** Joins: novns (~novns@user/novns)
[10:20:04] *** Quits: xsteadfastx (~marv@94.31.99.245) (Ping timeout: 256 seconds)
[10:21:51] *** Joins: redquasar (~redquasar@user/redquasar)
[10:25:08] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[10:25:29] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:26:56] *** Quits: redquasar (~redquasar@user/redquasar) (Quit: redquasar.xyz)
[10:27:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:30:41] *** Quits: bigGopher (~dan@207.98.176.66) (Quit: bigGopher)
[10:31:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:33:24] *** Joins: redquasar (~redquasar@user/redquasar)
[10:36:03] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[10:37:02] *** Joins: normen_ (~normen@p200300d71749cc00f442ceb358110ec5.dip0.t-ipconnect.de)
[10:39:32] *** Joins: andlabs (~andlabs@70.107.171.168)
[10:44:32] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:48:05] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[10:54:12] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[10:56:31] *** Joins: masoudd (~masoudd@user/masoudd)
[10:58:17] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[10:58:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:03:20] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[11:15:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:15:20] *** Joins: absc (~absc@81.31.144.28)
[11:16:02] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 240 seconds)
[11:17:48] *** Quits: lindsay (~lindsay@user/LindsayZhou) (Ping timeout: 265 seconds)
[11:18:07] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[11:20:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[11:25:04] *** Quits: WilliamH (~william@gentoo/developer/williamh) (Quit: Lost terminal)
[11:25:34] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[11:28:33] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[11:30:03] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Remote host closed the connection)
[11:32:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:32:59] *** Joins: monoxane (~monoxane@user/monoxane)
[11:37:44] <shibumi> Is there a way to get the file path to a file in mapfs?
[11:38:07] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[11:40:32] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[11:41:13] *** Joins: shka (~herr@109.231.3.55)
[11:41:28] *** Joins: lindsay (~lindsay@user/LindsayZhou)
[11:47:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 245 seconds)
[11:47:35] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:49:36] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[11:53:36] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:6c4c:421:daab:13f6)
[11:56:02] *** Quits: Kane (~Kane@vps-edf8dc99.vps.ovh.net) (Quit: quit)
[11:56:33] *** Joins: rcernin_ (~rcernin@101.189.129.123)
[11:57:45] *** Joins: Kane (~Kane@vps-edf8dc99.vps.ovh.net)
[11:58:47] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:6c4c:421:daab:13f6) (Ping timeout: 252 seconds)
[11:59:01] *** Joins: rendar (~rendar@user/rendar)
[12:00:03] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 256 seconds)
[12:04:25] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[12:04:27] *** Joins: jcajka (~jcajka@ip-86-49-255-10.net.upcbroadband.cz)
[12:09:27] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:11:41] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: Konversation terminated!)
[12:15:08] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[12:21:03] *** Joins: jespada (~jespada@148.252.132.235)
[12:23:01] *** Joins: alwyn (~alwyn@user/alwyn)
[12:32:11] *** Joins: aLeSD (~aLeSD@91.126.33.194)
[12:32:21] <aLeSD> hi all!
[12:33:08] *** Quits: willow (~willow@user/willow) (Quit: willow)
[12:33:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:33:31] <aLeSD> I'd like to serve a static webpage by golang ... is it possible (an is it ok) to add the webpage to my binary ?
[12:34:28] <lemmi> aLeSD: https://pkg.go.dev/embed
[12:36:22] <aLeSD> wow
[12:38:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[12:41:30] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[12:42:32] *** Joins: adip (~adip@dhy11.neoplus.adsl.tpnet.pl)
[12:42:34] *** Joins: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl)
[12:50:09] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:53:34] *** Joins: lehmrob1337 (~rd7@p5dca86f0.dip0.t-ipconnect.de)
[12:55:04] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Ping timeout: 272 seconds)
[13:02:57] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 240 seconds)
[13:08:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:12:54] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:18:38] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[13:19:06] *** Joins: connor_k6 (~connor_k@ip68-102-25-198.ks.ok.cox.net)
[13:19:17] *** Quits: connor_k (~connor_k@ip68-102-25-198.ks.ok.cox.net) (Ping timeout: 240 seconds)
[13:19:17] *** connor_k6 is now known as connor_k
[13:24:16] *** Joins: ricci (~ricci@31.187.110.131)
[13:25:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:27:02] *** Joins: treeford (~charleste@user/treeford)
[13:27:21] *** Joins: ekathva (~ekathva@n14jr7jr13zqs0uz1-1.v6.elisa-mobile.fi)
[13:28:12] *** Quits: rcernin_ (~rcernin@101.189.129.123) (Ping timeout: 256 seconds)
[13:30:03] *** Quits: couchllama (~llama@2604:a880:400:d0::1f90:1) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:30:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[13:30:44] *** Joins: couchllama (~llama@2604:a880:400:d0::1f90:1)
[13:31:24] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[13:32:25] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Ping timeout: 256 seconds)
[13:33:25] *** Joins: derphilipp (~derphilip@p200300cd3f110b00cc0715b41190a42b.dip0.t-ipconnect.de)
[13:35:36] *** Quits: jespada (~jespada@148.252.132.235) (Ping timeout: 272 seconds)
[13:35:58] *** Joins: jespada (~jespada@148.252.132.235)
[13:37:44] <derphilipp> How should I proceed if I receive JSON (via WS) that has 2 elements:
[13:37:45] <derphilipp> {"fooKey":"fooVar", "barKey": "barVal"}
[13:37:45] <derphilipp> but depending on the value of fooVar, barVal is sometimes of type integer instead of string.
[13:37:46] <derphilipp> Should I just try to unmarshal the one option, if it fails go for the other one? Or should I read fooVar and then chose the appropriate unmarshalling strategy; Or is my approach suboptimal anyway?
[13:42:44] <fizzie> `json.RawMessage` is one option.
[13:43:17] <fizzie> (As in, use that as the type for barKey for the initial unmarshal.)
[13:44:28] <fizzie> https://pkg.go.dev/encoding/json#example-RawMessage-Unmarshal has an example.
[13:45:27] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[13:49:24] <derphilipp> Thank you very much, that is exactly what I was looking for - I can take it from here;
[13:53:30] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:60d2:c7b6:26d8:60c)
[13:53:32] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:60d2:c7b6:26d8:60c) (Client Quit)
[13:54:59] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:55:39] *** Quits: jespada (~jespada@148.252.132.235) (Ping timeout: 256 seconds)
[13:59:53] <fizzie> Just for completeness, here's a version of that example that doesn't have the json.RawMessage in the "public" struct but keeps it inside an unmarshaller instead: https://go.dev/play/p/dv8wEQxtcYp
[14:00:11] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Ping timeout: 256 seconds)
[14:00:57] *** Joins: ekathva_ (~ekathva@n14jp5os0e43ev9my-1.v6.elisa-mobile.fi)
[14:01:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:02:13] *** Quits: ekathva (~ekathva@n14jr7jr13zqs0uz1-1.v6.elisa-mobile.fi) (Ping timeout: 240 seconds)
[14:06:10] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[14:11:03] <ishan> hello everyone! I have a nested struct like, `type A struct {X int64} type B struct { A Y int64 }`. When I marshal this into yaml format, it gives me,
[14:11:19] <ishan> Y: 0\nA: X: 0
[14:11:40] <ishan> How do I properly embed the struct such that X and Y are at the same level if that makes sense ?
[14:12:06] *** Joins: jespada (~jespada@148.252.132.235)
[14:15:02] <ishan> Okay, looks like `inline` tag does this
[14:15:34] <ishan> but `inline` floats it all the way to the top
[14:19:17] <ishan> Here is the snippet, https://go.dev/play/p/sdBEC7pq9Lr
[14:23:44] <ishan> Fixed, https://go.dev/play/p/wRMFE63woxn
[14:23:44] *** Quits: mickey (~user@user/mickey) (Quit: mickey)
[14:24:32] *** Joins: mickey (~user@user/mickey)
[14:30:05] <fizzie> Maybe I'm not following, but isn't that doing what you wanted? As in, `tableName` and `partitionKey` are on the same level in the YAML, even though one's a direct field of Output and the other's a field of the embedded SchemaOptions struct.
[14:31:44] <ishan> fizzie: Sorry, I didn't explain it well earlier. This is the behaviour I want. tableName and partitionKey should be on the same level.
[14:32:10] <ishan> SchemaOptions/Key are just wrappers so I don't have to repeat them for the table and then GSI
[14:35:14] *** Quits: normen_ (~normen@p200300d71749cc00f442ceb358110ec5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:36:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:37:01] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Ping timeout: 256 seconds)
[14:37:38] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[14:40:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[14:46:59] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[14:50:10] *** Joins: normen_ (~normen@pd9eecc5a.dip0.t-ipconnect.de)
[14:52:01] *** Joins: walterwhip (~www@user/walterwhip)
[14:52:01] *** Quits: jespada (~jespada@148.252.132.235) (Read error: Connection reset by peer)
[14:52:57] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[15:04:54] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 272 seconds)
[15:05:08] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[15:14:43] *** Quits: aog (~aog@user/aog) (Remote host closed the connection)
[15:15:06] *** Joins: aog (~aog@user/aog)
[15:26:40] *** Quits: MrElendig (~Urist@archlinux/op/MrElendig) (Quit: brb, going to tjernobyl)
[15:27:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:28:11] *** Joins: MrElendig (~Urist@archlinux/op/MrElendig)
[15:29:10] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[15:32:10] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[15:38:05] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:54:31] *** Joins: arkurious (~arkurious@user/arkurious)
[16:01:00] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[16:01:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:03:19] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[16:05:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:07:22] *** Joins: han-solo (~hanish@user/han-solo)
[16:15:52] <chilversc> If I wanted to compile a package without access to the internet (e.g. private network/firewall), could I just fetch the source from a machine that does have internet access then run "go mod vendor", then copy that over to the private network?
[16:17:45] <chilversc> specifically, is there any change I would need to make to the build command or go.mod file, or does the build automatically check the vendor directory?
[16:18:50] <fizzie> If (and only if) the main module's `go.mod` file specifies `go 1.14` or higher, the vendor directory is used automatically if present.
[16:19:12] <fizzie> If it says something lower, you may have to add `-mod=vendor` to the build command.
[16:19:14] <chilversc> version is "go 1.17"
[16:20:10] <fizzie> Then I believe it should Just Work™.
[16:21:36] <fizzie> (Well, okay, it also requires the vendor directory contents match the go.mod file, but if you just populated it with `go mod vendor`, that should be the case.)
[16:21:48] <chilversc> are there any versioned docs such as go.dev/ref/mod that I can link to and won't change as newer version of go are released?
[16:24:14] <siXy> not that I know of, but the stdlib virtually never breaks backwards compatibility, so ideally that shouldn't be needed
[16:24:28] <aLeSD> uI am using this "r.PathPrefix("/").Handler(http.FileServer(http.FS(Content)))" to server a static webpage ... but how to remove the static/ for the FS ?
[16:24:43] <fizzie> Hmm. pkg.go.dev can do versioned links to the standard library docs, but I guess maybe not to the other kinds of docs.
[16:25:59] <siXy> aLeSD: see StripPrefix
[16:27:57] <chilversc> so the two main ways would be something like artifactory and GOPROXY, or "go mod vendor", any other ways to easily handle building in a restricted environment?
[16:28:16] <fizzie> I guess technically speaking https://cs.opensource.google/go/x/website/+/master:_content/ref/mod.md;drc=617d83c5d40b0ebcebb0da1d6bbf9180565e5a14 is a versioned link of ref/mod that will never change, and in the "Preview" pane it doesn't honestly look all that bad. Well, except all the images are missing.
[16:32:44] <fizzie> Building once elsewhere to populate $GOMODCACHE, then copying over both the source and the cache and building with GOPROXY=off comes to mind as one hypothetical alternative, but I wouldn't try to build a process on that. (GOPROXY=off means "disallows downloading modules from any source"; GOPROXY=direct is the "don't use a proxy" option.)
[16:32:47] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:34:08] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[16:34:46] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Quit: Leaving)
[16:36:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:41:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:45:06] *** Joins: ilpanda_ (ilpanda@shell.xshellz.com)
[16:45:52] *** Quits: ilpanda (ilpanda@user/ilpanda) (Read error: Connection reset by peer)
[16:49:24] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[16:54:42] *** Joins: henry40408 (~henry4040@175.181.180.53)
[17:07:19] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:09:00] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[17:13:04] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:14:16] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[17:14:16] *** Quits: Nixieboluo (~Nixiebolu@47.93.220.75) (Quit: Ping timeout (120 seconds))
[17:14:36] *** Joins: Nixieboluo (~Nixiebolu@47.93.220.75)
[17:15:44] *** Joins: treeford (~charleste@user/treeford)
[17:16:04] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[17:19:48] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[17:24:31] *** Joins: llorllale (~llorllale@198.98.119.85)
[17:26:44] *** Joins: jespada (~jespada@148.252.132.116)
[17:27:56] *** Joins: bigGopher (~dan@207.98.176.66)
[17:34:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:35:10] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[17:36:45] *** Quits: normen_ (~normen@pd9eecc5a.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[17:37:00] *** Joins: normen_ (~normen@p200300d71749cc0078ad620c6210ee71.dip0.t-ipconnect.de)
[17:38:39] *** Joins: beholders_eye (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1)
[17:47:29] *** Joins: ricci (~ricci@31.187.110.131)
[17:47:30] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[17:48:01] *** Joins: todo75 (~todo75@user/todo75)
[17:53:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:54:38] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:56:49] *** Joins: treeford (~charleste@user/treeford)
[17:57:13] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:02:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[18:05:25] <mikoto-chan> maybe a little off-topic but do u guys watch code reviews?
[18:05:41] <mikoto-chan> I haven't found a lot of them for go yet
[18:05:51] <mikoto-chan> and I think they're a great learning tool
[18:06:39] *** Quits: bigGopher (~dan@207.98.176.66) (Quit: bigGopher)
[18:09:41] *** Joins: epony (epony@user/epony)
[18:15:37] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[18:16:59] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Remote host closed the connection)
[18:21:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:24:11] *** Joins: xsteadfastx (~marv@94.31.99.245)
[18:27:10] *** Quits: beholders_eye (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1) (Ping timeout: 260 seconds)
[18:34:10] *** Quits: jespada (~jespada@148.252.132.116) (Read error: Connection reset by peer)
[18:37:02] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[18:39:50] *** Quits: lehmrob1337 (~rd7@p5dca86f0.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[18:40:12] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 240 seconds)
[18:40:22] *** Joins: lehmrob (~rd7@p5dca86f0.dip0.t-ipconnect.de)
[18:40:36] *** Joins: bigGopher (~dan@207.98.176.66)
[18:42:37] *** Quits: lehmrob (~rd7@p5dca86f0.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:43:31] *** Quits: derphilipp (~derphilip@p200300cd3f110b00cc0715b41190a42b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:46:13] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[18:47:34] *** Quits: alwyn (~alwyn@user/alwyn) (Quit: brb maybe)
[18:50:33] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Client Quit)
[18:50:53] *** Quits: xsteadfastx (~marv@94.31.99.245) (Ping timeout: 256 seconds)
[18:51:44] *** Quits: ejjfunky (~ejjfunky@125.164.20.238) (Quit: Leaving)
[19:00:01] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[19:00:21] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:01:29] *** Joins: jespada (~jespada@148.252.132.116)
[19:03:29] *** Joins: treeford (~charleste@user/treeford)
[19:05:05] *** Joins: bluedust (~bluedust@89.238.143.232)
[19:06:08] *** Joins: alwyn (~alwyn@user/alwyn)
[19:07:53] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[19:08:40] *** Joins: todo75 (~todo75@user/todo75)
[19:11:48] *** Quits: henry40408 (~henry4040@175.181.180.53) (Ping timeout: 240 seconds)
[19:14:12] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:14:25] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[19:23:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 256 seconds)
[19:24:34] *** Joins: treeford (~charleste@user/treeford)
[19:25:21] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[19:25:50] *** Quits: bluedust (~bluedust@89.238.143.232) (Ping timeout: 272 seconds)
[19:27:39] *** Quits: jespada (~jespada@148.252.132.116) (Read error: Connection reset by peer)
[19:30:38] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:30:54] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[19:32:50] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[19:34:00] *** Joins: jespada_ (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[19:37:00] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Ping timeout: 240 seconds)
[19:41:29] *** Joins: masoudd (~masoudd@user/masoudd)
[19:42:07] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[19:43:44] *** Quits: alwyn (~alwyn@user/alwyn) (Quit: WeeChat 3.4)
[19:46:06] *** Quits: idstam (~idstam@185.176.247.102) (Ping timeout: 272 seconds)
[19:46:31] *** Joins: idstam (~idstam@185.176.247.102)
[19:47:14] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:47:22] *** Quits: jespada_ (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Ping timeout: 272 seconds)
[19:50:40] *** Joins: nuh^ (~nuh@50.232.121.75)
[19:51:09] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[19:54:02] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[19:57:45] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[19:58:08] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[20:13:14] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[20:13:30] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[20:15:35] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[20:18:09] *** Joins: Midjak (~Midjak@82.66.147.146)
[20:22:08] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:23:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 240 seconds)
[20:25:30] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[20:26:25] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[20:26:50] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[20:27:18] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[20:27:54] *** Quits: X-Scale (~ARM@31.22.167.35) (Ping timeout: 272 seconds)
[20:27:55] *** X-Scale` is now known as X-Scale
[20:41:29] *** Joins: andlabs (~andlabs@2605:ef80:8095:92c6:4171:76d1:3db3:fb64)
[20:43:29] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[20:43:58] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 256 seconds)
[20:48:04] *** Quits: andlabs (~andlabs@2605:ef80:8095:92c6:4171:76d1:3db3:fb64) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:48:19] *** Joins: alwyn (~alwyn@user/alwyn)
[20:53:38] *** Joins: andlabs (~andlabs@2605:ef80:8095:92c6:5469:4be6:8299:c99f)
[20:55:09] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[21:02:52] *** Joins: k8yun (~k8yun@user/k8yun)
[21:05:08] *** Quits: aLeSD (~aLeSD@91.126.33.194) (Remote host closed the connection)
[21:08:50] *** Quits: kadobanana (~mud@user/kadoban) (Remote host closed the connection)
[21:09:15] *** Joins: kadobanana (~mud@user/kadoban)
[21:13:23] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[21:14:51] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[21:16:37] *** Joins: hanzo (uid532183@user/hanzo)
[21:19:16] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:19:32] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[21:23:27] *** Joins: Ben[m]1234 (~benmatrix@2001:470:69fc:105::1:d678)
[21:26:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[21:28:10] *** Joins: jpw (~jpw@user/jpw)
[21:34:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:36:34] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:40:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[21:40:23] *** Joins: crashrep (~crashrep@user/crashrep)
[21:41:32] *** Joins: manu_ (~manu@194-208-201-025.tele.net)
[21:41:41] *** Parts: manu_ (~manu@194-208-201-025.tele.net) ()
[21:44:36] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 240 seconds)
[21:53:57] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[21:56:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[21:58:07] *** Joins: k8yun (~k8yun@user/k8yun)
[21:58:37] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:03:44] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[22:04:38] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[22:04:57] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[22:06:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[22:07:08] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:08:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:08:51] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[22:09:00] *** Joins: paw (~afong@198-84-206-8.cpe.teksavvy.com)
[22:10:42] *** Quits: andlabs (~andlabs@2605:ef80:8095:92c6:5469:4be6:8299:c99f) (Ping timeout: 260 seconds)
[22:11:08] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[22:12:12] <mickey> is it possible to somehow embed a file after compliation? like a self-signed ssl certficiate that is generated by the binary on run
[22:12:48] <foobaz> yes, check out https://pkg.go.dev/embed
[22:13:15] <espero> but this is embedding on compile-time
[22:13:17] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Ping timeout: 240 seconds)
[22:13:44] <espero> the OP is asking for a way to (apparently) modify the binary including given file on runtime
[22:14:04] <siXy> self-modifying binaries are strongly discouraged for a long long list of reasons.
[22:14:21] <siXy> Not to mention that go won't let you do this anyway
[22:14:26] *** Quits: ricci (~ricci@31.187.110.131) (Ping timeout: 260 seconds)
[22:15:34] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 272 seconds)
[22:15:59] <mickey> well i dont mind if a binary would modify another binary instead. like a ./prepare file.bin cert.key would embed cert.key in file.bin
[22:17:06] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:17:07] <siXy> mickey: a shell script plus go:embed (docs linked above) would work.
[22:17:21] <siXy> But you'll have to build the binary as part of that.
[22:17:48] <A_Dragon> yeahhhh dont patch the binary
[22:17:51] <siXy> You can't modify an already-built binary like that (well... technically you COULD, but it'd be awfully fragile)
[22:17:53] <A_Dragon> that'll make things sad
[22:18:16] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:18:22] <fizzie> You'd definitely want to guarantee the replacement is exactly the same size if you were planning on actually batching binaries without rebuilding them.
[22:18:27] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[22:19:37] <siXy> for a tls cert, as long as you fix the type of it in advance technically you COULD do this. I'd probably use something like xdelta3 or bsdiff. But the ways in which this could go horribly wrong are legion.
[22:20:08] <siXy> Not to mention there's no good go implementation of either algo I'm aware of.
[22:20:08] *** Joins: beholders_eye (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1)
[22:22:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:25:16] <mickey> okay i get it lol
[22:26:43] <fizzie> There's of course also the old-fashioned non-Go-specific thing where you just concatenate some extra bytes after the binary (generally ignored, since binaries specify what they load), and expect the running program to be able to find its own executable file at runtime. :) But feels like probably other ways of providing the certificate would be better.
[22:35:21] <Mathisen> hello again :) anyone mind explaining to me in simple terms why i need to pass *** and not just * in this example > https://go.dev/play/p/E5W6gRRrKF3 im new to this so still figuring out pointers. in my head it would seem enough to just use one pointer * when n := &b
[22:35:59] <siXy> There is no universe in which you should ever use ***
[22:36:15] <Mathisen> well that is not an issue here im learning
[22:36:16] <foobaz> Mathisen: each * undoes one &, and there are three &'s
[22:36:47] <siXy> a pointer to a pointer to a pointer to an int is the sort of code that makes people give up entirely and take up goat farming.
[22:37:08] <seebs> more common in C, where that would also be idiomatic for multidimensional arrays.
[22:37:09] <foobaz> http://wiki.c2.com/?ThreeStarProgrammer
[22:37:18] <b0nn> Mathisen: oh, wow, I've never seen that in Go before
[22:37:24] <Mathisen> siXy, you maybe correct but if a programmer dont understand what a pointer to a pinter works there will be no code at all
[22:37:50] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[22:38:16] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[22:38:38] <Mathisen> foobaz, ok thanks i think i get what you mean
[22:38:46] <seebs> so, the first * gets you to n, because you passed &n. n is also &b. the second star gets you to b. the third star gets you to a.
[22:39:15] <siXy> This ^. But really, really don't write code this way in Go.
[22:40:11] <Mathisen> thanks all
[22:40:38] <b0nn> https://go.dev/play/p/pj3JLMyQk7N
[22:40:41] <b0nn> Holy cow
[22:40:54] <Mathisen> when reading about pointers the information is kinda overwhelming for someone new :)
[22:41:05] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[22:41:23] <b0nn> I wonder if there's a limit to the number
[22:43:34] <Mathisen> maybe something to try out in a obfuscated code competition :)
[22:43:44] <b0nn> Well, 24 and counting https://go.dev/play/p/ed2YR0DM5h9
[22:44:14] <b0nn> Sorry, 26 and counting
[22:46:22] <crashrep> Hey, I was wondering if you have a go web server running with net/http would you recommend running it behind an nginx reverse proxy?
[22:46:53] <crashrep> golang does seem to handle requests concurrently but i was wondering if golang has ddos prevention tools like nginx
[22:47:38] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:49:01] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:50:57] <Mathisen> strange question
[22:51:09] <Mathisen> ofc go will not prevent ddos attacks
[22:51:27] <Mathisen> all nginx will do is limit connections and set timeouts
[22:51:55] <Mathisen> and can be used as load balancer in the same way .. 100+ connections pass it somehwere else and so on
[22:52:11] <seebs> "go" (not "golang") does not have any innate DDoS prevention, because that wouldn't make sense as a language-level feature. if you want DDoS protection you can write it or put your code behind something else that does it.
[22:53:51] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[22:54:13] *** Joins: dalek_caan (~Thunderbi@109.252.124.86)
[22:54:29] <Mathisen> oh he left
[22:54:42] *** Quits: paw (~afong@198-84-206-8.cpe.teksavvy.com) (Quit: Leaving)
[22:54:48] *** aog is now known as gary
[22:55:43] *** Quits: gary (~aog@user/aog) (Killed (NickServ (GHOST command used by garyunsanctioned!~tor@user/gary)))
[22:55:58] *** Joins: aog (~aog@user/aog)
[22:58:25] *** Joins: neurocyte0917090 (~neurocyte@IP-094046072103.dynamic.medianet-world.de)
[22:58:25] *** Quits: neurocyte0917090 (~neurocyte@IP-094046072103.dynamic.medianet-world.de) (Changing host)
[22:58:25] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[23:09:11] *** Quits: alwyn (~alwyn@user/alwyn) (Quit: WeeChat 3.4)
[23:12:59] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[23:18:42] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[23:18:47] *** Joins: jontix[m] (~jontixmat@2001:470:69fc:105::1:383a)
[23:19:03] *** Quits: ilpanda_ (ilpanda@shell.xshellz.com) (Changing host)
[23:19:03] *** Joins: ilpanda_ (ilpanda@user/ilpanda)
[23:19:13] *** Quits: strubbl891941988 (~strubbl@ipbcc0c7cb.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[23:19:42] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:19:55] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[23:20:33] *** Joins: strubbl891941988 (~strubbl@ipbcc0c7cb.dynamic.kabel-deutschland.de)
[23:22:28] *** Joins: King_julian (~King_juli@41.1.92.54)
[23:26:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[23:27:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:27:41] *** Joins: absc (~absc@dynamic-adsl-94-34-219-179.clienti.tiscali.it)
[23:44:52] *** Quits: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[23:44:52] *** Quits: adip (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[23:45:15] *** Quits: jcajka (~jcajka@ip-86-49-255-10.net.upcbroadband.cz) (Quit: Leaving)
[23:45:37] <braxas> in postgres, what happens to transactions using a view I replace it?
[23:45:50] <braxas> oh wow, wrong channel
[23:46:06] *** Joins: adip (~adip@dil199.neoplus.adsl.tpnet.pl)
[23:46:13] *** Joins: adip_ (~adip@dil199.neoplus.adsl.tpnet.pl)
[23:50:10] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[23:57:12] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
