[00:00:45] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:906:2a58:dc2c:ac0e)
[00:01:19] *** Quits: mint (~mint@37.78.183.195) (Quit: Leaving)
[00:05:58] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:06:09] <mrvn> Like this: https://godbolt.org/z/bsvao3G81
[00:06:34] <mrvn> B and C don't get the same value as each advances A one step.
[00:07:18] *** Quits: paul424 (~tom@ip-5-172-237-23.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:08:57] <mrvn> I can't figure out how to implement a "tee" for coroutines.
[00:09:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[00:17:11] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[00:17:54] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[00:19:34] *** Quits: ivii (~ivan@user/ivii) (Ping timeout: 260 seconds)
[00:20:56] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Client Quit)
[00:25:53] *** Joins: mint (~mint@37.78.183.195)
[00:27:02] *** Quits: Msandoy (~Msandoy@telia-590832-38.connect.netcom.no) (Read error: Connection reset by peer)
[00:28:05] *** Quits: magla (~gelignite@55d44736.access.ecotel.net) (Quit: Stay safe!)
[00:32:19] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[00:35:12] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:35:45] *** Joins: CaCode (~CaCode@user/cacode)
[00:36:29] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[00:37:07] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[00:37:30] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[00:37:43] *** Quits: mint (~mint@37.78.183.195) (Quit: Leaving)
[00:41:40] <CarloWood> which operators are represented by <=>  just <, <=, >= and > I presume?
[00:41:54] <mrvn> !=
[00:41:55] <nolyc> = is assignment, not comparison.
[00:41:57] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[00:42:11] <CarloWood> And == too?
[00:42:35] <mrvn> is != or == defined with the other or do they both go directly to <=>?
[00:43:03] *** Joins: plastico (~plastico@neomutt/plastico)
[00:43:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:43:32] <LordKalma> <=> gives you == and !=
[00:44:06] <CarloWood> { A a1, a2; cout << (a1 == a2); } struct A { friend bool operator<=>(A const& a1, A const& a2) { return true; } };
[00:44:06] <geordi> error: no match for 'operator==' in 'a1 == a2' (operand types are 'A' and 'A')
[00:44:35] <CarloWood> geordi: replace a1 == a2 with a1 <= a2
[00:44:36] <geordi> false
[00:44:46] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Quit: Leaving)
[00:44:48] <CarloWood> Apparently not.
[00:44:59] <mrvn> operator<=> isn't bool
[00:45:23] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[00:45:40] <CarloWood> Explain why the last version compiles then.
[00:45:53] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[00:45:59] <LordKalma> yeah, it should return weak ordering or strong ordering
[00:46:03] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 250 seconds)
[00:46:04] <mrvn> No idea. function lookup doesn't depend on the return type. it's just wrong but should compile
[00:46:15] <LordKalma> { A a1, a2; cout << (a1 == a2); } struct A { auto operator<=>(const A&) const = default;};
[00:46:15] <geordi> true
[00:46:37] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[00:46:51] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[00:46:54] <mrvn> Maybe the == checks the return type of the <=>
[00:47:23] <LordKalma> > If operator<=> is defaulted and operator== is not declared at all, then operator== is implicitly defaulted.
[00:47:23] <mrvn> Do you get == for weak ordering?
[00:47:31] <LordKalma> <=> only gives you == by defaulting
[00:47:50] *** Joins: Xardas (~Xardas@149.233.51.127)
[00:48:27] <mrvn> { A a1, a2; cout << (a1 == a2); } struct A { friend bool operator<=>(A const& a1, A const& a2) { return true; } auto operator==(A const& other) = default; };
[00:48:27] <geordi> error: defaulted 'auto A::operator==(const A&)' must return 'bool'
[00:48:34] <LordKalma> mrvn, https://en.cppreference.com/w/cpp/utility/compare/weak_ordering > admits all six relational operators (==, !=, <, <=, >, >=)
[00:48:38] <mrvn> { A a1, a2; cout << (a1 == a2); } struct A { friend bool operator<=>(A const& a1, A const& a2) { return true; } bool operator==(A const& other) = default; };
[00:48:38] <geordi> error: defaulted 'bool A::operator==(const A&)' must be 'const'
[00:48:45] <mrvn> { A a1, a2; cout << (a1 == a2); } struct A { friend bool operator<=>(A const& a1, A const& a2) { return true; } bool operator==(A const& other) const = default; };
[00:48:45] <geordi> true
[00:49:11] <mrvn> so it's just not automatic for non-default spaceship.
[00:49:24] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[00:49:27] <LordKalma> bool operator<=> must be the source for *manyyyyyyy* errors
[00:49:48] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[00:49:52] <LordKalma> << weak_ordering(false); // does it conver?
[00:49:52] <geordi> error: no matching function for call to 'weak_ordering::weak_ordering(bool)'
[00:49:57] <LordKalma> ah thank god
[00:49:59] <mrvn> Why did they ever decide to ignore the return type?
[00:50:24] <mrvn> { A a1, a2; cout << (a1 == a2); } struct A { friend bool operator<=>(A const& a1, A const& a2) { return true; } char* operator==(A const& other) const = default; };
[00:50:24] <geordi> error: defaulted 'char* A::operator==(const A&) const' must return 'bool'
[00:51:55] <mrvn> LordKalma: how would that ever convert? ordering has 3 states that are nothing like true/false.
[00:52:39] <LordKalma> I was just afraid it did
[00:52:42] <LordKalma> it's C++ afterall
[00:53:23] <CarloWood> mrvn: it is not a new operator with three states - it's like a template that represents all the normal operators in one.
[00:53:34] <CarloWood> Each of which returns a bool.
[00:53:45] <mrvn> CarloWood: I was talking about the type
[00:54:10] <CarloWood> Yep, so it returns a bool in all of its forms.
[00:54:37] <RandomReader> er ... no it doesn't / where on earth did you get that idea?
[00:54:41] <RandomReader> it's an individual operator, not a template
[00:54:51] <mrvn> <=> returns an ordering. That's nothing like bool
[00:54:55] <nisa> Hello71: the instruction that I am skipping over is always 1 byte sized, but I already fixed the problem
[00:55:00] <RandomReader> https://en.cppreference.com/w/cpp/language/operator_comparison#Three-way_comparison
[00:55:33] <RandomReader> and the logic for auto-generated ones: https://en.cppreference.com/w/cpp/language/default_comparisons#Defaulted_comparisons
[00:55:35] <nisa> Turns out there is a difference between `int 3` and `int3`
[00:55:44] *** Joins: AlanRoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie)
[00:55:44] <nisa> Hello71: the instruction that I am skipping over is always 1 byte sized, but I already fixed the problem
[00:55:50] <Hello71> you said that already
[00:55:56] <nisa> What
[00:56:01] <mrvn> CarloWood: The whole point of <=> is that it answers all questions of <, <=, ==, !=, >=, > in one call.
[00:56:03] <Hello71> it depends on your assembler
[00:56:04] <RandomReader> like all operators, you can create one with a return type that doesn't match convention, but then it will also be confusing to use (and not fit with other default-generation mechanisms)
[00:56:28] <Gamah> is there a better name for <=> than "spaceship"?
[00:56:37] <Gamah> i've never liked that...
[00:56:42] <Hello71> RandomReader: *cough* iostreams *cough*
[00:57:04] <bpalmer> "hamburger eater"
[00:57:12] <mrvn> Gamah: comparison operator?
[00:57:14] <CarloWood> Ok, I totally did not understand <=> then :/.  I thought it was just a short cut for declaring all the comparison operators in one :/
[00:57:32] <Gamah> mrvn: isn't comparison a type? like > is comparison, = is comparison
[00:57:41] <mrvn> CarloWood: it can be. But for example sort() will use it to do < and == in one call.
[00:57:47] <RandomReader> "three-way comparison": https://eel.is/c++draft/class.spaceship
[00:57:57] <Gamah> hmmm.... i guess that works
[00:58:41] <RandomReader> by way of analogy, it covers the same surface area something like strcmp() would
[00:59:16] <RandomReader> (but also expresses some other concepts, if appropriate for the type)
[00:59:25] <mrvn> RandomReader: I believe that's where the idea comes from and why it is defined as it is.
[01:06:27] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:07:20] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[01:09:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[01:10:54] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[01:11:17] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[01:13:49] *** Quits: jsbach (~jsbach@2a01:c23:6544:db00:96d8:90de:fbe5:f86a) (Ping timeout: 240 seconds)
[01:16:36] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:20:19] *** Quits: robod34 (Username@79.113.200.158) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:25:00] *** Quits: Tokamak (~Tokamak@172.58.188.132) (Ping timeout: 240 seconds)
[01:27:15] *** Joins: Tokamak (~Tokamak@166.205.152.5)
[01:30:13] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:43:43] <very_sneaky> LordKalma: you do scientific computing, have you ever used any units libraries?
[01:44:10] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:44:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:44:18] *** ChanServ sets mode: +v npaperbot
[01:45:15] <very_sneaky> i thought this was a pretty interesting talk: https://www.youtube.com/watch?v=5dhFtSu3wCo
[01:49:18] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:906:2a58:dc2c:ac0e) (Ping timeout: 252 seconds)
[01:51:50] *** Quits: jokoon (~eio@2a01:e0a:542:e160:80a9:a828:83d2:7884) (Quit: Leaving)
[01:54:47] *** Quits: Xardas (~Xardas@149.233.51.127) (Ping timeout: 256 seconds)
[01:57:57] *** Joins: markong (~kvirc@213.146.188.203)
[02:00:22] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 260 seconds)
[02:03:02] *** Quits: Tokamak (~Tokamak@166.205.152.5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:07:00] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:08:26] *** Joins: Xardas (~Xardas@149.233.51.127)
[02:08:38] <mort> I'm kind of conflicted
[02:08:48] <mort> I really want to integrate iwyu and be able to just do what iwyu tells me to do
[02:08:55] <mort> but at the same time, it seems pretty buggy
[02:09:53] <mort> it recommends I #include <__memory/unique_ptr.h>, when 1) the file doesn't even need to include anything from <memory> and 2) <__memory/unique_ptr.h> isn't the standard path for unique_ptr
[02:10:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[02:10:54] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[02:11:18] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[02:12:40] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[02:16:14] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:20:47] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[02:24:53] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[02:27:20] *** Quits: m_ben_ (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[02:30:33] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[02:30:45] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[02:31:54] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[02:34:15] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:40:35] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:43:45] *** Quits: ravan__ (~ravan@user/ravan) (Ping timeout: 252 seconds)
[02:45:33] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:45:44] *** Joins: ravan (~ravan@42.201.198.151)
[02:45:44] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[02:45:44] *** Joins: ravan (~ravan@user/ravan)
[02:46:41] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[02:46:46] *** Joins: Tokamak (~Tokamak@166.205.152.5)
[02:54:31] *** Quits: Tokamak (~Tokamak@166.205.152.5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:54:31] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[02:55:09] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[02:55:29] *** Joins: blackout69 (~blackout6@37.183.198.248)
[03:03:10] *** Quits: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu) (Remote host closed the connection)
[03:03:11] *** Quits: mitch0 (~mitch@84-236-97-135.pool.digikabel.hu) (Read error: Connection reset by peer)
[03:03:50] *** Quits: blackout69 (~blackout6@37.183.198.248) (Quit: Leaving.)
[03:06:17] *** Joins: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu)
[03:07:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:08:45] *** Joins: badone (~badone@209.132.189.152)
[03:10:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[03:16:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[03:29:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:32:25] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[03:32:48] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[03:34:06] *** Quits: SoniEx2 (~quassel@autistic.space) (Ping timeout: 245 seconds)
[03:43:24] *** Joins: Tokamak (~Tokamak@166.205.152.5)
[03:46:03] *** Joins: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[03:47:28] *** Quits: malloy (~jimery@120.235.172.170) (Ping timeout: 265 seconds)
[03:53:39] <ville> apparently java-level performance is now something to aim for: https://github.com/smarr/are-we-fast-yet
[03:53:41] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Ping timeout: 250 seconds)
[03:55:28] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[03:55:43] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[03:59:44] *** Joins: LuckyFire_ (~LuckyFire@79.125.173.139)
[03:59:54] *** Joins: ymwm (~yingmanwu@27.153.164.29)
[04:02:56] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Ping timeout: 252 seconds)
[04:04:39] *** Joins: Soni (~quassel@autistic.space)
[04:05:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[04:06:32] *** Quits: AlanRoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie) (Ping timeout: 268 seconds)
[04:07:37] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:07:58] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:08:25] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[04:08:41] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[04:10:32] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[04:11:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[04:16:59] *** Joins: ferdna (~ferdna@user/ferdna)
[04:23:58] <mrvn> If I have a coroutine then that function can "output" values with co_yield. Can it also get values from the caller like in pythons "value_from_outside = yield value_send_to_outside;"?
[04:25:26] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:28:26] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[04:28:42] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[04:34:30] *** Joins: malloy (~jimery@116.30.221.173)
[04:46:17] *** Quits: Kakurady (~nekoyasha@207.236.147.169) (Read error: Connection reset by peer)
[04:46:36] *** Joins: Kakurady (~nekoyasha@207.236.147.169)
[04:51:04] <johnny> crystal is there, but not C++
[04:51:06] <johnny> strange
[04:53:55] *** Quits: LuckyFire_ (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[04:54:13] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 240 seconds)
[04:54:18] *** Joins: LuckyFire_ (~LuckyFire@79.125.173.139)
[04:54:35] <johnny> how many people here have played woth these coroutines in C++?
[04:56:31] <mrvn> not enough probably
[05:04:18] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:04:45] <mrvn> It's really confusing. Anything calling co_* must have a return type that in turn has a type promise_type, which has nothing to do with std::promise.
[05:06:36] *** Quits: noent (~quassel@user/sven/x-0967695) (Ping timeout: 240 seconds)
[05:07:25] *** Joins: noent (~quassel@squint.a-oben.org)
[05:07:25] *** Quits: noent (~quassel@squint.a-oben.org) (Changing host)
[05:07:25] *** Joins: noent (~quassel@user/sven/x-0967695)
[05:07:35] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 268 seconds)
[05:08:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:08:21] *** Joins: nshire (~nshire@user/nshire)
[05:11:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[05:21:11] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[05:25:29] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[05:29:34] *** Joins: CodePoint (~CodePoint@2607:fb90:25d7:94f4:f8a5:ce83:a3cc:e16d)
[05:33:13] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.28-57.dynamic.3bb.co.th) (Remote host closed the connection)
[05:33:43] *** Joins: p-i- (~Ohmu@mx-ll-183.89.28-57.dynamic.3bb.co.th)
[05:35:20] *** Quits: CodePoint (~CodePoint@2607:fb90:25d7:94f4:f8a5:ce83:a3cc:e16d) (Ping timeout: 252 seconds)
[05:44:11] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:44:20] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:44:20] *** ChanServ sets mode: +v npaperbot
[05:44:33] <ville> i looked at them, couldn't get any compiler to elide the allocation so didn't bother further
[05:52:16] *** Joins: ymwm_ (~yingmanwu@240e:37a:40e4:9e00:71aa:8953:b0de:ee76)
[05:52:17] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[05:52:40] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[05:54:49] *** Quits: ymwm (~yingmanwu@27.153.164.29) (Ping timeout: 256 seconds)
[06:03:46] *** Quits: p-i- (~Ohmu@mx-ll-183.89.28-57.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[06:04:21] *** Joins: p-i- (~Ohmu@183.89.28.57)
[06:05:52] *** Joins: Inline__ (~Inline@p200300cd470817006c1421c75266f737.dip0.t-ipconnect.de)
[06:07:39] *** Joins: gargus (~user@27-32-195-30.static.tpgi.com.au)
[06:08:13] *** Quits: Inline (~Inline@p200300cd473cb900eebf25766a02ea81.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:08:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:08:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:12:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:15:25] *** Quits: LuckyFire_ (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[06:15:48] *** Joins: LuckyFire_ (~LuckyFire@79.125.173.139)
[06:21:31] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:30:12] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b126:42fc:7c9a:5916) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:31:21] *** Quits: malloy (~jimery@116.30.221.173) (Quit: WeeChat 3.0)
[06:31:45] *** Joins: Inline (~Inline@p200300cd4709f600befffe6df48235ec.dip0.t-ipconnect.de)
[06:33:22] *** Quits: Inline__ (~Inline@p200300cd470817006c1421c75266f737.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:33:26] *** Joins: malloy (~jimery@116.30.221.173)
[06:34:01] *** Quits: cq-work (~cq-work@user/cq-work) (Remote host closed the connection)
[06:34:26] *** Joins: cq-work (~cq-work@user/cq-work)
[06:36:01] *** Quits: ymwm_ (~yingmanwu@240e:37a:40e4:9e00:71aa:8953:b0de:ee76) (Quit: Leaving)
[06:36:59] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:a5ba:2fa3:99b1:4dae) (Ping timeout: 256 seconds)
[06:41:37] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812)
[06:43:33] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812) (Ping timeout: 252 seconds)
[06:44:45] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812)
[06:46:54] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812) (Ping timeout: 260 seconds)
[06:56:35] *** Quits: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian) (Ping timeout: 256 seconds)
[07:05:17] *** Quits: Tokamak (~Tokamak@166.205.152.5) (Ping timeout: 240 seconds)
[07:05:26] *** Joins: SorryBeauty (~SorryBeau@103.76.184.42)
[07:06:01] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[07:06:38] *** Joins: adeliktas6 (~adeliktas@i59F5FD1E.versanet.de)
[07:08:43] *** Quits: adeliktas (~adeliktas@i59F5F671.versanet.de) (Ping timeout: 256 seconds)
[07:08:43] *** adeliktas6 is now known as adeliktas
[07:09:13] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:10:40] *** Joins: Tokamak (~Tokamak@166.205.152.5)
[07:11:30] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[07:12:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[07:15:22] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[07:15:37] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[07:16:02] *** Quits: p-i- (~Ohmu@183.89.28.57) (Quit: Leaving...)
[07:17:13] *** Joins: furrymcg1e (~devuan@cgn-89-1-209-26.nc.de)
[07:20:02] *** Quits: furrymcgee (~devuan@cgn-213-196-210-225.nc.de) (Ping timeout: 240 seconds)
[07:24:40] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[07:27:49] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:33:34] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812) (Ping timeout: 260 seconds)
[07:36:26] *** Quits: LuckyFire_ (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[07:36:49] *** Joins: LuckyFire_ (~LuckyFire@79.125.173.139)
[07:37:24] *** Joins: ravan_ (~ravan@42.201.198.151)
[07:37:24] *** Quits: ravan_ (~ravan@42.201.198.151) (Changing host)
[07:37:24] *** Joins: ravan_ (~ravan@user/ravan)
[07:40:12] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 252 seconds)
[08:01:25] *** Quits: SorryBeauty (~SorryBeau@103.76.184.42) (Ping timeout: 256 seconds)
[08:10:02] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:12:32] <nisa> johnny: I did quite a lot in them
[08:12:45] <nisa> They are definitly amazing.
[08:13:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[08:26:44] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:31:25] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[08:31:39] *** Joins: Kill-Animals (~manjaro-u@199-7-159-81.eng.wind.ca)
[08:36:17] *** Quits: montpol (montpol@fine.mouses.xyz) (Quit: The Lounge - hosted by mouses.xyz)
[08:37:29] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[08:45:32] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:52:25] *** Quits: nshire (~nshire@user/nshire) (Ping timeout: 256 seconds)
[08:56:46] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[08:57:17] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[08:57:56] *** Quits: LuckyFire_ (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[08:58:19] *** Joins: LuckyFire_ (~LuckyFire@79.125.173.139)
[09:02:52] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[09:04:21] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 252 seconds)
[09:05:29] *** Quits: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10:fbf2:b01f:1d47:7542) (Ping timeout: 250 seconds)
[09:10:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:13:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:15:23] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812)
[09:16:36] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[09:17:21] *** Quits: Kakurady (~nekoyasha@207.236.147.169) (Quit: Konversation terminated!)
[09:23:05] *** Joins: jsbach (~jsbach@2a01:c23:6148:1d00:b546:c5e3:316a:a)
[09:34:21] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[09:44:11] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:44:19] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:44:19] *** ChanServ sets mode: +v npaperbot
[09:47:35] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[09:59:07] *** Joins: biberu\ (~biberu@user/biberu)
[10:00:49] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812) (Quit: Quit)
[10:01:50] *** Joins: christinebabe (~christine@223.233.64.78)
[10:02:41] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 256 seconds)
[10:02:41] *** biberu\ is now known as biberu
[10:05:02] *** Joins: biberu\ (~biberu@user/biberu)
[10:07:07] *** Joins: biberu- (~biberu@user/biberu)
[10:08:31] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 250 seconds)
[10:09:21] *** Joins: biberu (~biberu@user/biberu)
[10:10:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:10:59] *** Quits: biberu\ (~biberu@user/biberu) (Ping timeout: 268 seconds)
[10:12:28] *** Quits: CaCode (~CaCode@user/cacode) (Read error: Connection reset by peer)
[10:13:27] *** Quits: biberu- (~biberu@user/biberu) (Ping timeout: 268 seconds)
[10:14:41] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[10:17:57] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:19:26] *** Quits: LuckyFire_ (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[10:19:49] *** Joins: LuckyFire_ (~LuckyFire@79.125.173.139)
[10:28:32] *** Joins: eladion (~drew@2602:47:2257:b300:20c4:dc21:2a33:58c1)
[10:33:28] *** Quits: ac_slater (~ac_slater@c-73-221-73-144.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[10:34:59] *** Joins: ac_slater (~ac_slater@c-73-221-73-144.hsd1.wa.comcast.net)
[10:36:27] *** Quits: emerent (~quassel@p200300cd5743c31fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:36:37] *** Joins: emerent (~quassel@p200300cd5743c3adba27ebfffed28a59.dip0.t-ipconnect.de)
[10:41:06] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[10:46:22] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Ping timeout: 272 seconds)
[10:47:45] *** Quits: Kill-Animals (~manjaro-u@199-7-159-81.eng.wind.ca) (Ping timeout: 252 seconds)
[10:48:35] *** Quits: LuckyFire_ (~LuckyFire@79.125.173.139) (Ping timeout: 256 seconds)
[10:50:10] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[10:51:03] *** Joins: arch-angel (~arch-ange@user/arch-angel)
[10:55:47] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[11:01:37] *** Quits: christinebabe (~christine@223.233.64.78) (Quit: Client closed)
[11:10:12] *** Joins: bobb_ (~bobb_@dslb-088-065-189-078.088.065.pools.vodafone-ip.de)
[11:11:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:14:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[11:16:27] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[11:17:11] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[11:18:10] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[11:21:52] *** Joins: andreasbuhr (~quassel@p549db851.dip0.t-ipconnect.de)
[11:21:52] *** Quits: andreasbuhr (~quassel@p549db851.dip0.t-ipconnect.de) (Client Quit)
[11:22:13] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[11:27:24] *** Joins: Kill-Animals (~manjaro-u@199-7-159-81.eng.wind.ca)
[11:34:20] *** Joins: mitch0 (~mitch@84-236-97-135.pool.digikabel.hu)
[11:34:51] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 268 seconds)
[11:37:31] *** Joins: evangeline (~Eleanor@178.79.105.181)
[11:39:40] *** Quits: eladion (~drew@2602:47:2257:b300:20c4:dc21:2a33:58c1) (Quit: Leaving)
[11:40:27] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[11:40:49] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[11:47:01] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[11:50:15] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:51:29] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:59:47] <mrvn> nisa: any idea how to pass values into a coroutine other than during creation?
[12:01:46] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:a0a3:96a0:478:e308)
[12:08:40] *** Joins: mint (~mint@46.159.204.49)
[12:11:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:12:47] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[12:12:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[12:13:55] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:14:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[12:18:59] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[12:20:43] *** Joins: robod34 (Username@79.113.200.158)
[12:21:29] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[12:21:48] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[12:23:49] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[12:24:53] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[12:32:59] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:34:12] *** Quits: elastic_dog (~elastic_d@ary77.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[12:41:10] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:49:06] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:51:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[13:01:57] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[13:02:20] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[13:11:09] *** Joins: ivii (~ivan@user/ivii)
[13:11:41] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:15:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[13:16:59] *** Joins: plastico (~plastico@neomutt/plastico)
[13:22:23] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[13:23:24] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[13:25:00] *** Joins: paul424 (~tom@ip-5-172-234-230.multi.internet.cyfrowypolsat.pl)
[13:29:11] *** Quits: Kill-Animals (~manjaro-u@199-7-159-81.eng.wind.ca) (Quit: Konversation terminated!)
[13:30:12] *** Joins: Gvidon (~Gvidon@user/gvidon)
[13:32:44] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[13:37:09] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:493b:d7a3:16ee:b2cf)
[13:41:32] * Haohmaru rotates nolyc around the 4th axis
[13:41:33] <Haohmaru> !rq
[13:41:35] <nolyc> Haohmaru: <urdh> 1/i is clearly -i
[13:43:31] *** Quits: undeclared (nullx@user/undeclared) (Quit: undeclared)
[13:44:12] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:44:20] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:44:20] *** ChanServ sets mode: +v npaperbot
[13:44:30] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:48:15] *** Joins: cursey (~cursey@user/cursey)
[13:48:21] *** Joins: undeclared (nullx@user/undeclared)
[14:00:48] *** Joins: Kakurady (~nekoyasha@207.236.147.169)
[14:04:41] *** Quits: Kakurady (~nekoyasha@207.236.147.169) (Read error: Connection reset by peer)
[14:04:47] *** Joins: Kakurady_ (~nekoyasha@207.236.147.169)
[14:08:58] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[14:09:48] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[14:11:31] *** Quits: Gvidon (~Gvidon@user/gvidon) (Remote host closed the connection)
[14:12:00] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:14:07] *** Joins: paule32 (~paul@user/paule32)
[14:14:12] <paule32> hello
[14:14:23] <paule32> i try to combine g++, and fpc
[14:14:42] <paule32> the problem is: g++ is case sensitive, fpc not
[14:14:50] <paule32> fpc = free pascal compiler
[14:15:24] *** Joins: seninha (~seninha@user/seninha)
[14:15:26] <paule32> is there a possibility, to define a macro, that converts function names to uppercase ?
[14:15:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[14:15:48] <ville> no. fix your source code?
[14:15:56] <paule32> so i don't need to write  inline PAUSE() {}  inline Pause() ...
[14:16:19] <paule32> hello ville
[14:16:30] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[14:16:40] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:16:47] <paule32> the problem is, that I have to write all possibilities of function name
[14:17:03] <paule32> and this results in larger code
[14:18:42] <ville> ...or fix your source code.
[14:19:34] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[14:21:22] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[14:21:43] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:23:28] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[14:23:51] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[14:25:20] *** Joins: letto2 (~letto@188.27.114.171)
[14:25:55] <Haohmaru> <excuses.txt> rejected ^
[14:27:03] *** Joins: Gvidon (~Gvidon@user/gvidon)
[14:27:25] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[14:31:44] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[14:32:09] <LordKalma> +nolyc> Haohmaru: <urdh> 1/i is clearly -i // ahahah I remember this dicussion. Whomever !grab-bed this didn't realize we were talking about the imag unit
[14:32:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:32:49] <LordKalma> (or use gfortran like everybody else :p)
[14:34:27] *** Quits: CalamityBlue (~CalamityB@user/CalamityBlue) (Ping timeout: 256 seconds)
[14:35:21] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[14:36:31] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[14:41:08] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[14:54:57] *** Joins: markong (~kvirc@213.146.188.203)
[15:03:25] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[15:04:31] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:493b:d7a3:16ee:b2cf) (Ping timeout: 245 seconds)
[15:04:53] *** Joins: darkbit (~db@152.32.100.99)
[15:07:13] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[15:07:43] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[15:09:38] *** Quits: paul424 (~tom@ip-5-172-234-230.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:12:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:15:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:16:49] *** Quits: Kakurady_ (~nekoyasha@207.236.147.169) (Quit: Konversation terminated!)
[15:19:27] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 256 seconds)
[15:20:56] *** furrymcg1e is now known as furrymcgee
[15:28:31] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:30:57] *** Joins: JohnMS_WORK (~kvirc@194.110.240.100)
[15:31:36] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[15:34:23] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:37:48] *** Quits: proller (~p@2a02:6b8:b081:b404::1:14) (Ping timeout: 240 seconds)
[15:40:23] *** Quits: bobb_ (~bobb_@dslb-088-065-189-078.088.065.pools.vodafone-ip.de) (Quit: Ping timeout (120 seconds))
[15:43:08] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:f9b9:c2d3:ad62:759d)
[15:44:59] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[15:45:23] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[15:45:50] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 268 seconds)
[15:47:04] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:dc5b:897:dfbc:2d30) (Ping timeout: 268 seconds)
[15:53:50] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 260 seconds)
[15:57:11] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[15:58:02] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[16:07:50] *** Quits: gargus (~user@27-32-195-30.static.tpgi.com.au) (Quit: Leaving)
[16:08:45] <Haohmaru> !fact
[16:08:46] <nolyc> Haohmaru: The function main shall not be used within a program.
[16:09:15] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 240 seconds)
[16:09:24] <rpav> no more defining main() :(
[16:10:54] <vdamewood> I think it means s/used/called/
[16:10:59] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:12:19] <rpav> but that's not what it _said_, and the facts tending toward being extremely pedantic, therefore it must be taken as absolutely literal ;)
[16:12:36] <vdamewood> Of course.
[16:13:00] <vdamewood> But is including a definitoon for a function really 'using' it?
[16:13:20] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:13:22] <rpav> that said, since i'm still pretty sure compiling code is UB ... if it's not compiled, is it really used?
[16:16:41] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:20:05] *** Quits: johnny (~johnny@user/johnny) (Ping timeout: 256 seconds)
[16:23:01] <Gvidon> Compiling code isn't UB, since it isn't covered by the standard at all
[16:24:45] <Gvidon> Except for the short chapter on phases of translation, but I'm not sure it counts
[16:25:31] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[16:25:53] <rpav> Gvidon: exactly; the standard states that anything not explicitly allowed by the standard is undefined behavior
[16:26:01] <rpav> nowhere in the standard is compiling code explicitly allowed
[16:29:05] <Gvidon> 🤔
[16:30:06] *** Joins: Msandoy (~Msandoy@telia-590850-1.connect.netcom.no)
[16:30:06] *** Joins: pulse (~pulse@user/pulse)
[16:30:30] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[16:34:29] *** Quits: Gvidon (~Gvidon@user/gvidon) (Remote host closed the connection)
[16:39:15] *** Joins: txtsd (~txtsd@user/txtsd)
[16:41:21] *** Joins: proller (~p@2a02:6bf:fff0:1:458a:d0ec:aeca:cd21)
[16:42:55] *** Joins: Gvidon (~Gvidon@user/gvidon)
[16:43:55] *** Quits: proller (~p@2a02:6bf:fff0:1:458a:d0ec:aeca:cd21) (Remote host closed the connection)
[16:45:11] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:49:16] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6469:70ea:b962:2f9)
[16:53:29] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 252 seconds)
[17:00:47] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[17:00:57] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[17:01:15] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:02:01] *** Quits: foul_owl (~kerry@23.82.193.89) (Ping timeout: 256 seconds)
[17:03:43] *** Joins: proller (~p@2a02:6b8:b081:7208::1:24)
[17:05:44] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[17:06:29] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[17:06:39] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[17:06:52] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[17:07:19] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[17:08:51] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[17:10:56] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:12:44] *** Quits: Terminus (~null@user/terminus) (Quit: ZNC 1.8.2 - https://znc.in)
[17:12:49] <ville> rpav: what you compiling, and presumably linking, is what the standard calls translating
[17:13:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:14:29] <ville> err call
[17:15:05] <vdamewood> So, even if the wording used in the field is stupid, the standard still uses non-stupid terminology.
[17:15:14] <ville> and the system where the result runs is supposed to emulate the abstract machine
[17:15:57] *** Joins: foul_owl (~kerry@23.82.193.87)
[17:16:54] <ville> http://www.eelis.net/c++draft/intro.abstract and http://www.eelis.net/c++draft/lex.phases
[17:17:05] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:17:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[17:17:47] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:20:06] <Gvidon> Yeah, and http://www.eelis.net/c++draft/lex.phases#1.9 is all it says about linking and code generation. And then you draw the rest of the damn owl
[17:20:09] *** Joins: Terminus (~null@user/terminus)
[17:21:06] <ville> it doesn't have to define how it's done. it's enough to state it's done and result operates under the "as-if" rule
[17:24:50] <Alipha> Though all the environmental limits are implementation defined, so technically even a hello world program could cause UB
[17:25:03] *** Joins: slavfox (~slavfox@93.158.232.111)
[17:25:48] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[17:26:53] *** Joins: str0 (~str0@178.220.28.32)
[17:29:00] <rpav> ville: no, translation is clearly not compilation because it happens before even template instantiation
[17:29:16] <rpav> and linking is clearly allowed in the link Gvidon posted
[17:29:40] <rpav> but compilation is not, because it needs to happen after 8 and before 9, and there is no provision for it
[17:32:23] <rpav> that said you could still hypothetically run C++ (is running C++ programs explicitly allowed? 🤔 i vaguely recall something) if it's interpreted
[17:34:11] <mrvn> rpav: Compilation explicitly prevents any form of UB (for constexpr, constinit, consteval)
[17:34:58] <rpav> that would be compile-time/static evaluation, not compilation
[17:35:33] <mrvn> As for defining main: I do that in baremetal in an extern "C" blob because calling the mangled name from asm is not portable.
[17:35:56] <rpav> main isn't mangled
[17:36:55] <rpav> though i think what gets produced from the main() function is implementation defined? which is probably one reason why you're not allowed to call it from other C++
[17:37:16] <rpav> i vaguely recall some recursive main shenanigans in C at some point but it's not terribly useful in any regard
[17:37:46] <mrvn> int main = 0x4e78; // return from subroutine (m68k)
[17:38:24] <mrvn> actually make that short, or it's "or D0, D0; RET"
[17:39:10] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[17:44:12] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:44:21] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:44:21] *** ChanServ sets mode: +v npaperbot
[17:45:48] *** Quits: Gvidon (~Gvidon@user/gvidon) (Quit: Leaving...)
[17:48:47] *** Joins: magla (~gelignite@d5363125.access.ecotel.net)
[18:09:34] *** Joins: bobb_ (~bobb_@dslb-088-065-189-078.088.065.pools.vodafone-ip.de)
[18:14:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:15:58] <ville> rpav: 8 is where templates are instantiated
[18:16:33] <rpav> ville: right, and translation happens before this, and therefore can't be complation
[18:17:10] <ville> all of them are still phases of translation
[18:17:14] <rpav> besides if you read the details of translation, it clearly isn't compilation either, it's right there in step 7 .. it's producing a TU from #includes and stuff
[18:17:32] <rpav> no, a "translated translation unit" is what step 7 produces
[18:17:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:18:20] <ville> look at the section name...
[18:19:03] <rpav> ¯\_(ツ)_/¯ that doesn't imply it applies to more than translation units
[18:20:29] <rpav> in any case even if it _is_, then there is no step in which "translation" as "compilation" happens .. clearly step 7 is producing a translated-translation-unit, which is not _compiled_, and step _8_ does not, because it's merely instantiating templates, and step _9_ is not, becuase it's only linking / resolving external references
[18:21:10] <rpav> even if you define _a_ translation(compilation), there is no step in which it is explicitly allowed
[18:21:19] <ville> as-if
[18:21:37] <rpav> _explicit_
[18:22:27] <ville> it's explixitly stated that no restriction is placed as long as the result abides by the as-if, otherwise the standard would be infinitely large
[18:22:29] *** Quits: causative_ (~halberd@user/causative) (Ping timeout: 256 seconds)
[18:23:02] <rpav> but that only applies to things that don't change observable behavior
[18:23:20] <rpav> compiling a program makes it runnable, which is _definitely_ observable
[18:23:52] <ville> an interpreter is perfectly valid emulator
[18:24:01] <ville> emulator of the abstract machine
[18:25:25] <rpav> 🤔
[18:27:02] <rpav> (this also assumes running the program at all is defined behavior, i'm not sure if i actually saw such)
[18:27:29] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[18:27:54] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[18:38:01] *** Joins: minto (~mintograd@47.201.5.61)
[18:38:29] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[18:40:57] *** Quits: minto_ (~mintograd@47.201.5.61) (Ping timeout: 250 seconds)
[18:45:18] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[18:46:46] *** Quits: dextaa (~DV@user/dextaa) (Quit: Ping timeout (120 seconds))
[18:47:07] *** Joins: dextaa (~DV@user/dextaa)
[18:47:11] *** Quits: jancoow (~jancoow@user/jancoow) (Quit: Ping timeout (120 seconds))
[18:47:39] *** Joins: jancoow (~jancoow@user/jancoow)
[18:51:27] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[18:51:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:54:57] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f5bb:fecb:2a5a:41b8)
[18:54:57] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f5bb:fecb:2a5a:41b8) (Changing host)
[18:54:57] *** Joins: skapata (~Skapata@user/skapata)
[18:57:55] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[18:59:26] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Ping timeout: 252 seconds)
[18:59:27] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[18:59:46] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[19:03:51] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[19:06:02] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:08:42] *** Joins: causative (~halberd@user/causative)
[19:11:29] *** Quits: JohnMS_WORK (~kvirc@194.110.240.100) (Ping timeout: 250 seconds)
[19:14:15] <rpav> really could use nullptr<T>
[19:15:01] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:16:09] <rpav> although i guess lambda return type takes care of const-T* ambiguity in this case
[19:18:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:22:15] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:23:39] *** Quits: Tokamak (~Tokamak@166.205.152.5) (Quit: Textual IRC Client: www.textualapp.com)
[19:28:05] *** Joins: spikhoff (~spikhoff@8ab7-fe8e-44ff-127b-2180-4880-07d0-2001.sta.estpak.ee)
[19:31:29] *** Joins: calcul0n (~calcul0n@2a01:e0a:150:6030:4012:c816:317c:3628)
[19:41:12] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[19:41:48] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Remote host closed the connection)
[19:41:58] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[19:44:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[19:45:15] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:46:30] <cq-work> https://github.com/conan-io/conan/issues/10829#issuecomment-1074078828 - So much effort just to use OpenSSL with Conan :(
[19:47:15] <cq-work> Man I wish conan was easier to use... it would basically be used unanimously if it were
[19:47:33] <cq-work> Instead, it takes several days to figure out how to use one of the most common libraries on the planet
[19:49:01] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Remote host closed the connection)
[19:49:23] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[20:00:00] <rpav> yeah, next, try making/maintaining libraries ;)
[20:02:11] <cq-work> I hate how basically all of the options for dependency management suck lol
[20:02:20] <cq-work> conan comes close, just an awful implementation and worse documentation.
[20:02:51] <cq-work> Hunter looks interesting I guess.
[20:04:05] <cq-work> But I say that about every package manager, then I run into issues that make me hate life.
[20:11:14] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[20:11:37] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:15:34] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:18:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[20:29:35] *** Parts: mint (~mint@46.159.204.49) (Leaving)
[20:29:38] *** Joins: mint (~mint@46.159.204.49)
[20:29:42] *** Parts: mint (~mint@46.159.204.49) (Leaving)
[20:29:47] *** Joins: mint (~mint@46.159.204.49)
[20:31:53] *** Quits: LuckyFire (~LuckyFire@79.125.173.139) (Ping timeout: 250 seconds)
[20:32:51] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[20:34:07] <rpav> spack looked pretty interesting but i'm not sure on second look if it's much better, and it doesn't support windows
[20:34:27] <rpav> CPM.cmake seems to be the killer option for me .. simple to use, simple for _others_ to use, no deps
[20:34:53] *** Quits: spikhoff (~spikhoff@8ab7-fe8e-44ff-127b-2180-4880-07d0-2001.sta.estpak.ee) (Quit: Leaving)
[20:35:11] *** Joins: soman (~yaaic@83.139.179.68)
[20:35:22] <Friithian> the best is a list of apt package names and saying ``good luck''
[20:36:35] <cq-work> The problem with CPM is that it doesn't work for dependencies that don't use cmake. So you end up having to port them yourself. In addition, it uses FetchContent and runs during the configure phase of your build.
[20:36:43] <soman> https://godbolt.org/z/r5nb1drc7 Why line 12 is ok? Assigning lvalue to rvalue
[20:37:30] <rpav> cq-work: it does if you write cmake some for the deps, which is often trivial
[20:37:36] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: Ping timeout (120 seconds))
[20:37:54] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[20:38:44] <rpav> you can make cmake call other things .. at some point when i had more time/investment i wanted to implement a "cmake-build-other-things" for CPM so you could e.g. fetch a meson project and build it with options fairly automatically
[20:39:03] <rpav> even if you have to specify what libs or whatnot you get out of it
[20:39:15] *** Quits: Msandoy (~Msandoy@telia-590850-1.connect.netcom.no) (Remote host closed the connection)
[20:43:03] *** Quits: magla (~gelignite@d5363125.access.ecotel.net) (Read error: Connection reset by peer)
[20:44:17] *** Joins: magla (~gelignite@d5363125.access.ecotel.net)
[20:55:33] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[20:55:53] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:56:30] *** Quits: ravan_ (~ravan@user/ravan) (Remote host closed the connection)
[20:57:09] *** Joins: ravan_ (~ravan@user/ravan)
[20:58:01] *** Quits: ravan_ (~ravan@user/ravan) (Remote host closed the connection)
[20:58:13] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[20:58:37] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:59:41] *** Quits: bobb_ (~bobb_@dslb-088-065-189-078.088.065.pools.vodafone-ip.de) (Quit: Client closed)
[21:02:29] <Alipha> rpav: template<typename T> constexpr T *null{}; // :-)
[21:04:00] <rpav> Alipha: yeah
[21:04:35] <rpav> just one of those "trivial, but i still have to implement it everywhere"
[21:06:20] <rpav> i'm not sure if there's another case where it's that useful though .. i think the last time i wanted it was for the same thing, and explicit return works fine
[21:08:01] <ville> soman: side effects
[21:08:56] <soman> ville: from what? compiler? Is it allowed by standard?
[21:10:39] <ville> soman: as in it's unknown what kind of wacky operator = user-defined types could have
[21:11:23] <ville> c++ has lot of spots where you could do wacky things, not that you should
[21:11:55] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[21:13:27] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[21:18:49] *** Joins: ravan (~ravan@user/ravan)
[21:19:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:19:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:34:58] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[21:35:01] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[21:37:51] *** Quits: magla (~gelignite@d5363125.access.ecotel.net) (Quit: Stay safe!)
[21:39:07] *** Joins: paul424 (~tom@ip-5-172-234-87.multi.internet.cyfrowypolsat.pl)
[21:40:01] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[21:40:53] *** Quits: letto2 (~letto@188.27.114.171) (Read error: Connection reset by peer)
[21:41:34] *** Joins: letto (~letto@188.27.114.171)
[21:44:13] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:44:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:44:22] *** ChanServ sets mode: +v npaperbot
[21:45:21] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 268 seconds)
[21:51:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:53:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:53:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:55:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:57:48] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[22:07:28] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[22:08:03] *** Joins: Gvidon (~Gvidon@user/gvidon)
[22:10:55] *** Joins: Tokamak (~Tokamak@166.205.152.5)
[22:14:09] <MaddHatter> now asan is complaining about a global buffer overflow in std::lower_bound ffs
[22:16:36] <MaddHatter> This is really a stretch since it's been unmaintained for so long, but has anybody used address sanitizer with Loki?
[22:17:24] <MaddHatter> if so, is asan as unhappy about AssocVector for you as it is for me?
[22:20:16] *** Joins: k8yun (~k8yun@user/k8yun)
[22:20:35] *** Joins: magla (~gelignite@d5363125.access.ecotel.net)
[22:21:37] *** Quits: Gvidon (~Gvidon@user/gvidon) (Read error: Connection reset by peer)
[22:21:43] *** Joins: Gvidon_ (~Gvidon@user/gvidon)
[22:22:02] *** Gvidon_ is now known as Gvidon
[22:22:21] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:23:00] <rpav> test case?
[22:23:16] *** Quits: soman (~yaaic@83.139.179.68) (Quit: Yaaic - Yet another Android IRC client - http://www.yaaic.org)
[22:23:44] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[22:24:43] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[22:27:46] *** Joins: Tokamak_ (~Tokamak@172.58.191.123)
[22:29:00] *** Quits: Tokamak (~Tokamak@166.205.152.5) (Ping timeout: 240 seconds)
[22:29:45] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 268 seconds)
[22:34:44] *** Joins: Kakurady (~nekoyasha@207.236.147.169)
[22:35:38] *** Quits: proller (~p@2a02:6b8:b081:7208::1:24) (Ping timeout: 260 seconds)
[22:38:27] <paul424> what kind of this is : {std::vector<Tile*, std::allocator<Tile*> > (Building * const)}  encountered during gdb session
[22:40:23] <paul424> never mind, I have found out ...
[22:42:21] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[22:42:25] *** Quits: Shell (~shell@user/shell) (Quit: ZNC 1.8.2 - https://znc.in)
[22:44:53] *** Joins: Shell (~shell@user/shell)
[22:47:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[22:50:47] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:53:33] *** Joins: yolo (~xxiao@li1120-73.members.linode.com)
[22:54:06] <yolo> how to convert `new Node<T>(value)` to make_shared? make_shared<Node<T>>(new Node<T>(value)); does not work
[22:55:13] <PJBoy> shared_ptr<T>(new T(args...)) == make_shared<T>(args...)
[22:55:39] *** Joins: KombuchaKip (~kip@192.252.230.5)
[22:56:15] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:56:16] <yolo> tried make_shared<Node<T>>(value); -- cannot covert std::shared_ptr<Node<int>>' to 'Node<int>*' in assignment
[22:56:31] <yolo> this->head_ = make_shared<Node<T>>(value);
[22:56:38] <PJBoy> looks like the shared_ptr is created correctly, but you're trying to assign it to a raw pointer
[22:57:09] *** Joins: Msandoy (~Msandoy@telia-59080e-89.connect.netcom.no)
[22:57:12] *** Quits: Shell (~shell@user/shell) (Quit: ZNC 1.8.2 - https://znc.in)
[22:58:45] <yolo> yeah that's it. was trying to convert a raw ptr to smart_ptr, forgot the declaration
[22:59:24] <yolo> it's hard to do it with unique_ptr for this linkedlist, i will just shared_ptr them all over
[22:59:37] *** Quits: Tokamak_ (~Tokamak@172.58.191.123) (Ping timeout: 240 seconds)
[23:00:13] *** Joins: Shell (~shell@user/shell)
[23:00:36] *** Quits: Msandoy (~Msandoy@telia-59080e-89.connect.netcom.no) (Client Quit)
[23:02:34] *** Joins: Tokamak (~Tokamak@107.116.82.97)
[23:04:45] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 252 seconds)
[23:05:12] <yolo> first time using shared_ptr, and it fixed the memleak in linked list somewhere right away, nice
[23:06:00] *** Quits: Kakurady (~nekoyasha@207.236.147.169) (Quit: Konversation terminated!)
[23:06:58] <Gvidon> Is the list doubly linked?
[23:07:08] <yolo> yes
[23:07:26] <Friithian> why are you making a linked list?
[23:07:45] <Gvidon> I hope you understand that it consists of cycles and shared_ptr doesn't play well with cycles :)
[23:08:13] <yolo> Gvidon: i don't, thanks. so really it should be unique_ptr to be safe?
[23:08:30] <Gvidon> You can't make a doubly-linked list with unique_ptr
[23:08:52] <Gvidon> Or, at least, all you pointers can't be unique_ptr
[23:08:57] <rpav> you can't make a doubly-linked list with _two_ unique_ptr
[23:09:10] <yolo> so, either I use <list> in c++, or I make one with new|delete?
[23:09:14] <rpav> you can certainly make a struct Node { unique_ptr<Node> next; Node* prev{}; };
[23:09:28] <Gvidon> Yeah, you can have unique_ptr pointing in one direction, and a raw pointer backwards
[23:09:37] <rpav> maybe not ideal but better than shared_ptr by infinity
[23:09:39] <Friithian> I would avoid linked lists as much as possible, personally
[23:09:57] <rpav> they're not particularly easy/great to work with in C++ and don't have a ton of advantage so
[23:10:16] <rpav> doubly-linked, doubly-so
[23:11:02] <Hello71> doubly-leaked
[23:11:08] <Raziel> they have a few very specific uses where they fit perfectly
[23:11:09] <yolo> right unique_ptr for double list makes no sense
[23:11:15] <Raziel> but for everything else, you probably don't wanna touch em
[23:11:52] <rpav> unique_ptr makes sense anywhere you have an owning pointer .. i'm not really sure it makes a ton of sense structurally to have a data structure based on them, and they have problems when you do
[23:12:09] <rpav> e.g. if you free a really long linked list of unique_ptr, you might stack overflow
[23:12:42] <rpav> but for like a linked list, do nodes really _own_ the next node? maybe but
[23:14:03] <PJBoy> I agree with the question
[23:15:18] <PJBoy> I wanna say nodes don't own other nodes, and so smart pointers aren't so suitable
[23:15:38] <PJBoy> rather the list itself is responsible for the creation and destruction of nodes
[23:15:44] <yolo> smart pointers might not fit for low-level data strucuture implementations, recalling this now as I read it a while ago. e.g. to implement your own <list>, use new
[23:16:03] <yolo> and delete and get them right, avoid smart pointers at the low level
[23:16:08] <Gvidon> PJBoy: Not necessarily. Intrusive lists exist :)
[23:16:22] *** Joins: proller (~p@2a02:6b8:b081:20::1:21)
[23:16:25] <rpav> PJBoy: it sortof depends, since you don't need a "container" class for some things like linked lists, but
[23:16:46] <PJBoy> intrusive containers isn't something I've ever looked at actually
[23:16:57] <PJBoy> well for linked list, you'd wanna know where the head of the list is
[23:16:57] <rpav> not really intrusive per se
[23:17:04] <rpav> just node<T>
[23:17:16] <rpav> like you don't really needa  list<T> of node<T>
[23:17:26] <rpav> but in C++, probably nicer if you have it
[23:18:05] <kalven> I think the question becomes easy when you look at it from a pragmatic rather than dogmatic viewpoint
[23:18:06] <rpav> in the case of a singly-linked list at least .. if you're doing doubly- then meh
[23:18:24] <rpav> but like, it's useful to treat an arbitrary node as the "head" of its sublist
[23:18:37] <rpav> if you try that with an owning/containing class, that gets complicated
[23:19:11] <rpav> also arguably i guess if you have a circular "list" then you don't really have a list anymore
[23:26:23] *** Quits: Gvidon (~Gvidon@user/gvidon) (Quit: Leaving...)
[23:28:52] *** Quits: paul424 (~tom@ip-5-172-234-87.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:29:45] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[23:30:20] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:30:26] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[23:30:50] *** Quits: plastico (~plastico@neomutt/plastico) (Remote host closed the connection)
[23:31:22] *** Joins: plastico (~plastico@neomutt/plastico)
[23:34:09] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[23:36:59] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[23:38:22] *** Joins: johnny_ (~johnny@user/johnny)
[23:39:17] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[23:40:11] *** Joins: LuckyFire (~LuckyFire@79.125.173.139)
[23:46:32] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[23:47:54] *** johnny_ is now known as johnny
[23:49:09] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:49:49] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:52:29] <Alipha> Indeed, just raw pointers makes the most sense for low-level data structures. But `unique_ptr<T> next; T *prev;` can work--you just need to create a custom destructor to ensure non-recursive deletion, which mostly defeats the purpose of unique_ptr. And a distant 3rd option would be `shared_ptr<T> next; weak_ptr<T> prev;`
[23:52:32] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[23:52:47] *** Joins: bomb (~bomb@user/bomb)
[23:53:20] <Alipha> And you'd need a custom destructor for the shared_ptr solution too
[23:57:15] *** Joins: causative_ (~halberd@user/causative)
[23:58:22] <rpav> yeah
[23:58:38] *** Quits: causative (~halberd@user/causative) (Ping timeout: 252 seconds)
[23:58:53] <yolo> would be interesting to know how STL does <list> and <forward_list>
[23:59:13] <rpav> std::list M-.
[23:59:36] <rpav> but pretty sure it's a containing class that cleans itself up at every step
