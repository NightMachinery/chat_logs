[00:01:25] <grondilu> oh wait isn't there a keyword to delegate a method to the next candidate or something?
[00:02:23] <moon-child> nextsame?
[00:03:06] <grondilu> yeah, under "re-dispatching" in the docs
[00:03:39] <grondilu> m: proto infix:<+>(|) {*}; multi sub infix:<+>(Int \a,Int \b) { callsame mod 13; }; say 12 + 1
[00:03:40] <camelia> rakudo-moar 10b327292: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    mod used at line 1␤␤»
[00:03:50] <grondilu> m: proto infix:<+>(|) {*}; multi sub infix:<+>(Int \a,Int \b) { callsame() mod 13; }; say 12 + 1
[00:03:51] <camelia> rakudo-moar 10b327292: OUTPUT: «Cannot resolve caller infix:<mod>(Nil:U, Int:D); none of these signatures match:␤    (Real $a, Real $b)␤  in sub infix:<+> at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»
[00:05:06] <grondilu> m: proto infix:<+>(|) {*}; multi sub infix:<+>(Int \a,Int \b) { callsame(); }; say 12 + 1
[00:05:06] <camelia> rakudo-moar 10b327292: OUTPUT: «Nil␤»
[00:05:19] <grondilu> m: proto infix:<+>(|) {*}; multi sub infix:<+>(Int \a,Int \b) { return callsame(); }; say 12 + 1
[00:05:20] <camelia> rakudo-moar 10b327292: OUTPUT: «Nil␤»
[00:05:49] * grondilu whispers
[00:06:25] <moon-child> because the builtin &[+] isn't a candidate for the new proto you just made
[00:06:49] <grondilu> oh yeah makes sense
[00:09:26] <grondilu> so I overwrite everything or nothing, I guess.  That's not very useful.
[00:12:58] <lizmat> note that you *can* override all and still access the old
[00:14:02] <grondilu> Maybe I should just define a 'm' suffix.
[00:14:43] <lizmat> m: BEGIN my &old = &infix:<+>; proto sub infix:<+>(|) {*}; multi sub infix:<+>(\a, \b) { old(a,b) };  say 42 + 666
[00:14:43] <camelia> rakudo-moar 10b327292: OUTPUT: «708␤»
[00:14:58] <lizmat> m: BEGIN my &old = &infix:<+>; proto sub infix:<+>(|) {*}; multi sub infix:<+>(\a, \b) { old(a,b) };  my $a = 42; say $a + 666
[00:14:58] <camelia> rakudo-moar 10b327292: OUTPUT: «708␤»
[00:15:19] <grondilu> neat trick
[00:15:23] <lizmat> grondilu: ^^ between the proto and the catchall, you can insert your own candidates
[00:16:19] <grondilu> m: BEGIN my &old = &infix:<+>; proto sub infix:<+>(|) {*}; multi sub infix:<+>(\a, \b) { old(a,b) mod 13 }; say 12 + 1
[00:16:20] <camelia> rakudo-moar 10b327292: OUTPUT: «0␤»
[00:16:23] <grondilu> nice
[00:18:48] <grondilu> so it's feasible
[00:19:33] *** Joins: bgran (~nobody@swift.havoc.fi)
[00:20:12] <grondilu> I'm so going to write a secp256k1 module now ;)
[00:29:26] <lizmat> ++grondilu 
[01:00:36] *** Quits: immedlate (~immedlate@5.176.148.14) (Quit: Connection closed)
[01:49:15] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[01:49:24] <melezhik> how can I remove cookies using cro ?
[01:53:10] <melezhik> I have very strange bug when my cookies works fine when tested with safari and I see random issues with working with another browsers, like Mozilla
[01:53:39] <melezhik> for mbf - http://161.35.115.119/mbf/
[01:54:04] <melezhik> I don't think that cookies format is specific to browsers?
[01:54:46] <melezhik> basically I use standard cro function - https://github.com/melezhik/mybutterflies/blob/master/app.raku#L232
[01:54:54] <melezhik> to set cookies on server side ...
[01:54:56] <melezhik> that is it
[01:58:12] <melezhik> duck duck go browser works fine as well ...
[02:01:55] <melezhik> yeah, just checked things, looks like does not work properly in Firefox ((
[02:09:55] *** Quits: [Coke] (~coke@cpe-104-228-9-26.nycap.res.rr.com) (Read error: Connection reset by peer)
[02:20:44] <melezhik> https://github.com/croservices/cro-http/issues/155
[02:25:34] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Ping timeout: 265 seconds)
[02:35:33] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[02:45:39] <melezhik> if cro caches GET requests? if so, how to disable this cache?
[02:54:46] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Quit: Ping timeout (120 seconds))
[03:17:08] *** Quits: lichtkind (~lichtkind@p200300d0a7115d7b5deaf96981cc4bef.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:17:08] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:17:08] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:20:09] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[04:20:31] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:21:35] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[04:32:44] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:33:26] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:47:53] *** Joins: MasterDuke47 (~MasterDuk@2601:14c:4201:5a20:a919:722e:f70b:bf85)
[05:47:54] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:50:06] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[06:27:10] *** Joins: a3r0 (~aero@61.100.184.210)
[06:34:42] *** Joins: vrurg (~vrurg@50.231.121.51)
[06:46:43] *** Quits: vrurg (~vrurg@50.231.121.51) (Remote host closed the connection)
[07:14:46] *** Quits: unixcat64 (hyperreal@fedora/hyperreal) (Quit: Ping timeout (120 seconds))
[07:15:08] *** Joins: unixcat64 (hyperreal@envs.net)
[07:19:55] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[07:49:01] *** Joins: frost (~frost@59.71.243.104)
[07:49:51] *** Quits: unixcat64 (hyperreal@envs.net) (Changing host)
[07:49:51] *** Joins: unixcat64 (hyperreal@fedora/hyperreal)
[08:01:58] *** Quits: frost (~frost@59.71.243.104) (Ping timeout: 265 seconds)
[08:37:13] *** Quits: lucs (~lucs@user/lucs) (Remote host closed the connection)
[08:58:42] *** Joins: vrurg (~vrurg@50.231.121.51)
[09:11:07] *** Joins: vrurg_ (~vrurg@50.231.121.51)
[09:11:07] *** Quits: vrurg (~vrurg@50.231.121.51) (Read error: Connection reset by peer)
[10:10:29] *** Quits: vrurg_ (~vrurg@50.231.121.51) (Remote host closed the connection)
[10:11:25] <xinming> releasable6: status
[10:11:26] <releasable6> xinming, Next release in ≈1 day and ≈13 hours. There are no known blockers. Changelog for this release was not started yet
[10:11:27] <releasable6> xinming, Details: https://gist.github.com/979bb3007e0eac871425be93f6373636
[10:11:44] *** Joins: vrurg (~vrurg@50.231.121.51)
[10:16:49] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 265 seconds)
[10:32:41] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:34:33] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[10:35:09] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:39:03] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 265 seconds)
[10:39:50] *** Joins: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at)
[10:42:46] *** Joins: vrurg (~vrurg@50.231.121.51)
[10:58:20] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 268 seconds)
[10:59:41] *** Quits: Kaiepi (~Kaiepi@156.34.44.192) (Ping timeout: 252 seconds)
[11:10:16] *** Joins: vrurg (~vrurg@50.231.121.51)
[11:15:18] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 265 seconds)
[11:25:30] *** Joins: immedlate (~immedlate@37.155.232.76)
[11:26:38] *** Joins: vrurg (~vrurg@50.231.121.51)
[11:32:30] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 260 seconds)
[11:35:04] *** Quits: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Read error: Connection reset by peer)
[11:35:11] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:35:25] *** Joins: Sgeo (~Sgeo@user/sgeo)
[11:35:34] *** Joins: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[11:43:55] *** Joins: vrurg (~vrurg@50.231.121.51)
[11:46:49] *** Quits: immedlate (~immedlate@37.155.232.76) (Quit: Ping timeout (120 seconds))
[11:50:06] *** Joins: Kaiepi (~Kaiepi@156.34.44.192)
[11:55:07] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 252 seconds)
[11:59:18] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:04:28] *** Joins: patrickb (~quassel@55d4ebe0.access.ecotel.net)
[12:08:26] *** Joins: vrurg (~vrurg@50.231.121.51)
[12:10:38] *** Joins: patrickz (~quassel@55d4d572.access.ecotel.net)
[12:11:06] *** Quits: patrickb (~quassel@55d4ebe0.access.ecotel.net) (Ping timeout: 268 seconds)
[12:13:18] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 265 seconds)
[12:40:49] *** Quits: bdju (~bard@user/bdju) (Ping timeout: 252 seconds)
[12:47:31] <SmokeMachine> I was wondering about the assuming issue... would it make any sense to make something like this: `my &func = -> $a -> $b, $c -> $d { "$a $b $c $d" }` be equivalent to `my &func = -> $a { -> $b, $c { -> $d { "$a $b $c $d" } } }` and make the `[]` post circunfix operator on Callable work like getting as many arguments as the function expects from the list and passing the rest for the returning function? like: `fun[1, 2, 3, 4]` would 
[12:47:31] <SmokeMachine> be equivalent to `fun(1).(2, 3).(4)`. Would that make any sense?
[13:22:24] *** Quits: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[13:22:31] *** Joins: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[13:31:16] *** Joins: immedlate (~immedlate@37.155.232.76)
[13:56:35] <xinming> SmokeMachine: I personally would think it's a good api call. :-)
[13:57:31] <xinming> `fun(1).assuming(3,4).()`    <--- This to me will be more clear example.
[13:58:43] <xinming> something like,  admin-task-for-user($user-id).assuming('add-credit', 3).();
[13:59:26] <xinming> my &add-user-credit = admin-task-for-user($user-id).assuming('add-credit'); add-user-credit(3);
[13:59:38] <xinming> just illustration
[14:00:24] <CIAvash> SmokeMachine: well, the `func[1,2,3,4]` part would not be compatible with the language I think, because `[1,2,3,4]` gets called on the return value of `func`.
[14:01:12] <SmokeMachine> CIAvash: I meant a new multi for .[]... but it could be any postcircunfix operator...
[14:02:18] <CIAvash> That would be confusing, and against the rule of different operators for different things.
[14:09:16] *** Joins: vrurg (~vrurg@50.231.121.51)
[14:10:47] <CIAvash> But maybe Raku functions could act like in Haskell? I don't know if it is possible or how complicated it is(considering multi dispatch), otherwise they wouldn't add the `assuming` method if they could do it, I don't know.
[14:11:50] <CIAvash> Also there is no need for dots in function call, `func(1)(2,3)(4)`
[14:13:45] *** Quits: vrurg (~vrurg@50.231.121.51) (Read error: Connection reset by peer)
[14:14:06] *** Joins: vrurg (~vrurg@50.231.121.51)
[14:15:06] *** Quits: immedlate (~immedlate@37.155.232.76) (Ping timeout: 265 seconds)
[14:19:09] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 268 seconds)
[14:19:14] <Altreus> I had to read to the end of that to remember the dot was not concatenation
[14:19:22] <Altreus> :O
[14:19:47] <grondilu> while developping a module raku seems to keep using the precomp version and ignore my changes in the source code.  What am I doing wrong?
[14:20:19] <grondilu> I do 'raku -Ilib t/test.t' to test
[14:20:51] <grondilu> and yes I did save the changes on disk beforehand.
[14:23:02] <CIAvash> Also signatures in Raku are more complicated, there are optional arguments, named arguments, captures, ...
[14:23:46] <lizmat> grondilu: what does the use statements inside test.t say ?
[14:23:49] <lizmat> *do
[14:25:47] <grondilu> just use Test; use MyModule::Path;
[14:25:59] <SmokeMachine> CIAvash: but that would work as well, wouldn't it? `-> $a? -> *@b -> :$c {...}` being equivalente to `-> $a? { -> *@b { -> :$c {...} } }` right?
[14:26:45] <SmokeMachine> (I'm talking more on how to create the function returning functions than the way to call it...)
[14:28:14] <grondilu> I do have the same module installed with zef, so maybe it's using this instead on the one on lib/
[14:28:21] <CIAvash> Yeah, the calling is the more complicated part.
[14:28:22] <SmokeMachine> because you will be able to do something like: `my &add = -> $a -> $b { $a + $b }; my &incr = add 1; say incr 41`
[14:29:34] <SmokeMachine> (I mean, call like that, that would already be useful)
[14:29:35] * grondilu uninstalls it to be sure
[14:32:50] <SmokeMachine> (and it would be much more readable IMHO)
[14:54:03] *** Joins: immedlate (~immedlate@37.155.232.76)
[14:56:29] *** Joins: vrurg (~vrurg@50.231.121.51)
[15:01:34] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 260 seconds)
[15:06:00] *** Quits: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net) (Quit: Pipe Terminated)
[15:13:13] *** Joins: vrurg (~vrurg@50.231.121.51)
[15:14:16] *** Joins: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net)
[15:24:31] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 268 seconds)
[15:36:58] <grondilu> any idea why 'my uint @a; @a = @b;' would give a different result than 'my uint @a; @a = my uint @ = @b;' ?
[15:38:17] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 250 seconds)
[15:55:44] *** Joins: frost (~frost@59.71.243.104)
[15:57:57] *** Joins: leah2 (~leah@vuxu.org)
[15:58:31] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Remote host closed the connection)
[16:06:20] <grondilu> found it.  @b was actually referencing @a so that was bad.   It was something like @a = @a[1], @a[0]
[16:06:30] <grondilu> m: my 
[16:06:30] <camelia> rakudo-moar 10b327292: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed my␤at <tmp>:1␤------> 3my7⏏5<EOL>␤»
[16:06:53] <grondilu> m: my @a = (1, 2); @a = 
[16:06:53] <camelia> rakudo-moar 10b327292: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing required term after infix␤at <tmp>:1␤------> 3my @a = (1, 2); @a =7⏏5<EOL>␤    expecting any of:␤        prefix␤        term␤»
[16:07:01] <grondilu> sorry fat finger
[16:07:38] <grondilu> m: my @a = (1, 2); @a = @a[1], @a[0]; say @a
[16:07:38] <camelia> rakudo-moar 10b327292: OUTPUT: «[2 1]␤»
[16:08:06] <grondilu> hum that works though.  I don't get it.
[16:18:25] *** Joins: bdju (~bard@user/bdju)
[16:25:14] *** Quits: immedlate (~immedlate@37.155.232.76) (Quit: Connection closed)
[16:32:51] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:35:15] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[17:15:42] <grondilu> m: my uint32 ($x, $y, $z) = <3397201341 1759006370 581115732>; say $y +^ ($x +| +^$z)
[17:15:42] <camelia> rakudo-moar 10b327292: OUTPUT: «-1213881571␤»
[17:16:27] <grondilu> why would a bitwise expression of unsigned integers ever return a signed integer?
[17:20:15] *** Joins: vrurg (~vrurg@50.231.121.51)
[17:22:21] <grondilu> m: say +^my uint32 $ = 581115732
[17:22:21] <camelia> rakudo-moar 10b327292: OUTPUT: «-581115733␤»
[17:23:03] <grondilu> m: say +^my uint8 $ = 1
[17:23:03] <camelia> rakudo-moar 10b327292: OUTPUT: «-2␤»
[17:25:03] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 265 seconds)
[17:25:38] *** Joins: [Coke] (~coke@cpe-104-228-9-26.nycap.res.rr.com)
[17:26:28] * grondilu searches roast to see if that is specced
[17:33:39] * grondilu doesn't find anything relevant
[17:34:09] <grondilu> whatever that's too weird, I'm posting an issue
[17:38:42] *** Joins: vrurg (~vrurg@50.231.121.51)
[17:39:20] <CIAvash> SmokeMachine: I wrote a little function for calling functions that return functions, if you are interested: https://gist.github.com/CIAvash/686114e5b4b3dedff74c398d725fcf3b
[17:40:53] <codesections> grondilu I'm pretty sure that is a bug, and is related to https://github.com/rakudo/rakudo/issues/3429
[17:43:45] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 260 seconds)
[17:43:54] <grondilu> well maybe it's not, I've just checked in C and it returns 2 too.
[17:44:02] <grondilu> which is baffling to me.
[17:45:29] <timo> our uint support is .. a little "weak"
[17:46:15] <SmokeMachine> CIAvash: it looks great! Maybe it could accept the named parameters anywhere instead of only on the "right place"... maybe testing the named ones on every function...
[17:52:08] <timo> gasp
[17:52:16] <timo> this is like reverse currying?
[17:52:29] <timo> or i guess how function application works in a language that curries everything, like haskell
[17:59:01] <SmokeMachine> CIAvash: of course it could be much improved, but I was thinking into something like this (I mean the named param being able tube used anywhere...): https://gist.github.com/FCO/58f648cb9df26fa127519358f81d9f03
[18:00:45] <SmokeMachine> I really think the `my &sum = -> $a -> $b { $a + $b }` is a good idea, and this currying operator would make it even better...
[18:01:09] *** Joins: very (~very@37.155.232.76)
[18:01:55] *** Joins: vrurg (~vrurg@50.231.121.51)
[18:06:55] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 252 seconds)
[18:13:29] *** Joins: vrurg (~vrurg@50.231.121.51)
[18:14:31] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:48:13] *** Quits: xinming (~xinming@115.219.35.168) (Ping timeout: 252 seconds)
[18:49:11] <Geth> ¦ App-Rakubrew/master: 8 commits pushed by (Patrick Böker)++
[18:49:11] <Geth> ¦ App-Rakubrew/master: aef19b15a1 | Fix setting the local version
[18:49:11] <Geth> ¦ App-Rakubrew/master: 394182f812 | Remove some dead code
[18:49:11] <Geth> ¦ App-Rakubrew/master: ed5582573f | Deal with empty version files more gracefully
[18:49:11] <Geth> ¦ App-Rakubrew/master: fdb768a933 | Detect broken versions
[18:49:12] <Geth> ¦ App-Rakubrew/master: 87847c039a | Clean up version path search logic a bit
[18:49:12] <Geth> ¦ App-Rakubrew/master: 1ea95f401e | Fix `shell` command in env mode
[18:49:13] <Geth> ¦ App-Rakubrew/master: 1238f64294 | Document changes
[18:49:15] <Geth> ¦ App-Rakubrew/master: c913e6c123 | Version 20
[18:49:17] <Geth> ¦ App-Rakubrew/master: review: https://github.com/Raku/App-Rakubrew/compare/dc2b6b9bd2fb...c913e6c12354
[18:50:01] *** Joins: xinming (~xinming@115.219.34.146)
[18:55:17] *** Quits: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net) (Quit: Pipe Terminated)
[19:03:01] *** Joins: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net)
[19:07:29] *** Quits: vrurg (~vrurg@50.231.121.51) (Remote host closed the connection)
[19:15:01] *** Joins: jess (~jess@libera/staff/jess)
[19:15:49] *** Quits: very (~very@37.155.232.76) (Quit: Connection closed)
[19:19:34] *** Quits: xinming (~xinming@115.219.34.146) (Ping timeout: 252 seconds)
[19:21:19] *** Joins: xinming (~xinming@115.219.33.252)
[19:30:07] *** Quits: frost (~frost@59.71.243.104) (Quit: Connection closed)
[19:34:06] *** Quits: xinming (~xinming@115.219.33.252) (Ping timeout: 260 seconds)
[19:34:29] *** Joins: xinming (~xinming@115.219.33.252)
[20:03:59] *** Joins: lucs (~lucs@user/lucs)
[20:27:49] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (Quit: WeeChat 3.1)
[20:39:53] *** Joins: vrurg (~vrurg@50.231.121.51)
[20:44:46] *** Quits: vrurg (~vrurg@50.231.121.51) (Ping timeout: 252 seconds)
[21:00:02] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[21:02:18] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 260 seconds)
[21:02:29] *** Joins: sena_kun (~koto@188.163.64.2)
[21:06:39] <Geth> ¦ doc: ca2e03ab16 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/faq.pod6
[21:06:39] <Geth> ¦ doc: Update faq.pod6
[21:06:39] <Geth> ¦ doc: 
[21:06:39] <Geth> ¦ doc: Various language tweaks.
[21:06:39] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/ca2e03ab16
[21:06:42] <linkable6> Link: https://docs.raku.org/language/faq
[21:11:26] <Geth> ¦ doc: e2d8bdacce | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/faq.pod6
[21:11:26] <Geth> ¦ doc: Update faq.pod6
[21:11:26] <Geth> ¦ doc: 
[21:11:26] <Geth> ¦ doc: Add missing question marks.
[21:11:26] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/e2d8bdacce
[21:11:29] <linkable6> Link: https://docs.raku.org/language/faq
[21:15:57] *** Joins: vrurg (~vrurg@50.231.121.51)
[21:15:58] *** Quits: vrurg (~vrurg@50.231.121.51) (Remote host closed the connection)
[21:38:27] *** Quits: MasterDuke47 (~MasterDuk@2601:14c:4201:5a20:a919:722e:f70b:bf85) (Quit: Client closed)
[21:51:07] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[22:30:49] *** Joins: archenoth (~archenoth@2604:3d09:681:f00:8173:355d:3407:7897)
[22:32:51] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:33:46] *** Quits: Oshawott (~archenoth@2604:3d09:681:f00:a4ca:327d:3946:a076) (Ping timeout: 260 seconds)
[22:34:42] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[23:31:56] *** Quits: patrickz (~quassel@55d4d572.access.ecotel.net) (Quit: Quit.)
[23:51:16] *** Joins: randy88 (~randy@c-24-1-7-54.hsd1.il.comcast.net)
