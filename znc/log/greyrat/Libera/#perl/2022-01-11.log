[00:00:26] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[00:01:20] * GumbyPAN CPAN Upload: GD-Barcode-1.99_03 by MICHIELB https://metacpan.org/release/MICHIELB/GD-Barcode-1.99_03
[00:05:06] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:06:56] *** Quits: MDingas- (~MDingas@static.155.53.55.162.clients.your-server.de) (Quit: ZNC 1.8.2 - https://znc.in)
[00:08:27] <karjala> There's no way to extract an array of path elements (the basenames of all ancestors) with Path::Tiny, is there?
[00:08:38] <karjala> (I can't find it0
[00:12:24] <choroba> why do you need it?
[00:14:07] <ether> you can recursively call File::Spec->splitpath
[00:14:24] <ether> which is what Path::Tiny does anyway when you call dirname or parent
[00:21:47] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:24:01] <simcop2387> perlbot: farnsworth 40 furlongs per hogshead -> miles per gallon
[00:24:03] <perlbot> simcop2387:  (2500000/31499937  /* apx (0.0793652380955556) */) 
[00:24:09] <simcop2387> still bad
[00:26:33] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[00:26:43] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[00:27:21] *** Quits: furrymcgee (~devuan@cgn-89-1-208-165.nc.de) (Quit: leaving)
[00:27:30] <Adura> Try to send a ctcp version to Jantz before he ends up Excess Flooding, wonder what's so fucked up with whatever version of IceChat he's using.
[00:30:31] <karjala> choroba: I was trying to extract the first element of the path, but I guess it's easier with a regex
[00:30:54] <karjala> because the first element contains some important information
[00:31:08] <karjala> thanks
[00:31:31] <choroba> you can ->parent until there's nothing left
[00:33:24] <zgu> better than rods to the hogshead though
[00:33:40] <zgu> perlbot: farnsworth 40 rods per butt
[00:33:43] <perlbot> zgu:  Undefined symbol 'butt' 
[00:34:41] <zgu> hmm apparently a butt is 2 hogsheads so that would be even worse
[00:36:40] *** Quits: hudo (~hhudo_@mail.allm-elektro.de) (Changing host)
[00:36:40] *** Joins: hudo (~hhudo_@user/hudo)
[00:36:40] *** Quits: hudo__ (~hudo@62.68.18.50) (Changing host)
[00:36:40] *** Joins: hudo__ (~hudo@user/hudo)
[00:38:16] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[00:48:21] *** Quits: magla (~gelignite@55d483f5.access.ecotel.net) (Quit: Stay safe!)
[00:50:37] *** Quits: martinus__ (~martin@171.25.202.77.rev.sfr.net) (Ping timeout: 240 seconds)
[00:58:09] <skrzyp> 1. What if I would like to do some Perl web stuff, but I don't want to roll out whole CGI?
[00:58:40] <skrzyp> 2. Is there some middleware module which can be run inside perl script to act as a HTTP development server for it?
[00:59:46] <Grinnz> nobody uses CGI anymore, and the mojolicious framework includes an HTTP development and production server
[01:00:57] <Grinnz> perlbot: mojolicious
[01:00:57] <perlbot> Grinnz: A next generation pure-perl web framework for Perl, with first-class async and WebSocket support, and no non-core dependencies. Includes many tools useful for working with the web, like Mojo::DOM, Mojo::URL, Mojo::JSON, an event loop Mojo::IOLoop, and a simple object system Mojo::Base. http://mojolicio.us/
[01:01:15] <skrzyp> OK, let's say my knowledge about perl in webdev dates back to early 2000s, I ony used it for simple shell stuff after that, can't blame myself :)
[01:01:21] <Grinnz> perlbot: mojolicious =~ s/mojoliciou\.us/mojolicious.org
[01:01:22] <perlbot> Grinnz: Stored mojolicious as A next generation pure-perl web framework for Perl, with first-class async and WebSocket support, and no non-core dependencies. Includes many tools useful for working with the web, like Mojo::DOM, Mojo::URL, Mojo::JSON, an event loop Mojo::IOLoop, and a simple object system Mojo::Base. http://mojolicio.us/
[01:01:25] <Grinnz> perlbot: mojolicious =~ s/mojoliciou\.us/mojolicious.org/
[01:01:25] <perlbot> Grinnz: Stored mojolicious as A next generation pure-perl web framework for Perl, with first-class async and WebSocket support, and no non-core dependencies. Includes many tools useful for working with the web, like Mojo::DOM, Mojo::URL, Mojo::JSON, an event loop Mojo::IOLoop, and a simple object system Mojo::Base. http://mojolicio.us/
[01:01:38] <Grinnz> well that didn't work
[01:01:48] <skrzyp> Now I want to somewhat bridge some shell stuff and simple web front :)
[01:02:34] <ology> skrzyp: Just jump in! Mojolicious is so easy! https://metacpan.org/pod/Mojolicious::Lite for a start :)
[01:02:35] <Paperbot_> Link title(s): [ Mojolicious::Lite - Micro real-time web framework - metacpan.org ]
[01:02:40] <Grinnz> well you can make a fully functional mojolicious app that automatically can be deployed any number of ways including a dev web server, in a few lines
[01:02:52] <skrzyp> ok, ok
[01:03:29] <skrzyp> won't be that too huge for simple front interacting with shell execution + csv file for data storage?
[01:03:53] <ology> As in "bloated"? No.
[01:03:59] <skrzyp> single server, few users at maximum
[01:04:29] <skrzyp> ology: more like "being too verbose to achieve a little"
[01:05:19] <Grinnz> not at all
[01:05:41] <skrzyp> good
[01:05:45] <Grinnz> what's verbose is trying to wrangle a module like CGI.pm into doing something simple like that
[01:06:22] <skrzyp> that was my first thought to be honest and I got quite scared about that 
[01:07:58] <Grinnz> if you really want to use the CGI protocol i wrote CGI::Tiny to fix all of CGI.pm's problems: https://metacpan.org/pod/CGI::Tiny#COMPARISON-TO-CGI.PM but there's not a lot of reason to use the CGI protocol in most cases
[01:07:58] <Paperbot_> Link title(s): [ CGI::Tiny - metacpan.org ]
[01:08:10] <Grinnz> mojo has much better features and ecosystem
[01:08:49] <skrzyp> that's not what I want, but that was what I thought first when decided I should add my web ui for my perl stuff
[01:09:12] <skrzyp> looks like there's need to cure some PR issues in perl :/
[01:09:30] <Grinnz> always
[01:09:49] <Grinnz> not a whole lot to do about decades of mindset and google results though
[01:10:12] <skrzyp> the latter one is easier to fix :P
[01:10:17] <skrzyp> but not THAT easy
[01:10:51] <skrzyp> however, the former one makes people laugh at you when you mention "modern perl" and telling you that's an oxymoron
[01:22:10] *** Quits: Aniar (~Aniar@23-116-8-40.lightspeed.cicril.sbcglobal.net) (Ping timeout: 256 seconds)
[01:22:46] <Yaakov> Can PERL be used to program the webs?
[01:25:39] *** Joins: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net)
[01:27:30] *** Joins: whynot (~whynot@37.73.149.230)
[01:29:21] * ology is in your server fixing things
[01:31:24] *** Quits: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[01:34:04] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Ping timeout: 256 seconds)
[01:35:31] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:38:01] *** Quits: hudo__ (~hudo@user/hudo) (Quit: Leaving)
[01:43:17] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[01:46:06] *** Joins: monkey_ (~user@190.104.116.153)
[01:48:09] *** Joins: Aylat (~Aylat@110.red-79-150-96.dynamicip.rima-tde.net)
[01:51:01] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[01:56:36] *** Joins: monkey_ (~user@190.104.116.153)
[02:06:33] * GumbyPAN CPAN Upload: PDL-2.065 by ETJ https://metacpan.org/release/ETJ/PDL-2.065
[02:20:04] *** Joins: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c)
[02:23:53] *** Quits: waltman (waltman@2601:4a:701:4451:c8db:490c:65cc:65c1) (Quit: leaving)
[02:30:01] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:30:25] *** Joins: waltman (waltman@2601:4a:701:4451:15a5:db1d:2849:5c21)
[02:33:01] *** Quits: pizdets (~pizdets@183.182.111.169) (Ping timeout: 240 seconds)
[02:33:55] *** Joins: pizdets (~pizdets@183.182.115.239)
[02:34:59] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:37:32] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[02:44:22] *** Quits: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c) (Remote host closed the connection)
[02:45:19] *** Quits: v^ (~v@user/ctrl) (Ping timeout: 256 seconds)
[02:45:25] *** Joins: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c)
[02:46:37] * GumbyPAN CPAN Upload: PDL-2.066 by ETJ https://metacpan.org/release/ETJ/PDL-2.066
[02:48:04] *** Joins: monkey_ (~user@190.104.116.153)
[02:49:24] *** Quits: Aylat (~Aylat@110.red-79-150-96.dynamicip.rima-tde.net) (Quit: Leaving)
[02:51:28] *** Joins: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net)
[02:51:37] * GumbyPAN CPAN Upload: Digest-Bcrypt-1.210 by CAPOEIRAB https://metacpan.org/release/CAPOEIRAB/Digest-Bcrypt-1.210
[02:52:12] *** Joins: morte_ (~user@190.104.116.153)
[02:53:27] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Read error: Connection reset by peer)
[02:55:03] <genio> leont: Digest::Bcrypt is still a bad interface for Bcrypt, but at least it's using your Crypt::Bcrypt now.
[02:55:13] <genio> small victories and all
[02:55:23] <leont> :-)
[03:01:48] <leont> The synopsis could use some improvement though, especially the password checking part. 
[03:02:14] <leont> One should use $known_pass_hash as the settings string for it to DWIM
[03:03:03] <leont> Though that's more making it obvious how sucky the interface is, than actually something we'd want people to do
[03:10:34] *** Quits: riceandbeans (~zach@user/riceandbeans) (Quit: rebooting)
[03:14:17] *** Joins: riceandbeans (~zach@user/riceandbeans)
[03:18:38] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[03:20:04] <ash_worksi> I know I can do /\\/\\\\/ to add slashes to backslashes in a string, but is there one that requires the actual repetition of the "\" less, like PHP's `addslashes()` ?
[03:25:52] <pragma-> quotemeta?
[03:27:19] <whynot> eval "abc\Q\\\\\Exyz"
[03:27:31] *** Quits: e1f (~user@141.117.1.184) (Quit: güd neyt...)
[03:28:11] * whynot forgot how perlbot works :(
[03:28:32] <whynot> eval: "abc\Q\\\\\Exyz"
[03:28:33] <perlbot> whynot: abc\\\\xyz
[03:28:45] <whynot> success!
[03:29:04] <ash_worksi> pragma-: I'm googling quotemeta
[03:29:27] <ology> perldoc -f quotemeta
[03:29:27] <perlbot> ology: Your documentation is available at: https://perldoc.perl.org/functions/quotemeta
[03:31:26] <ash_worksi> eval: quotemeta("A \string")
[03:31:28] <perlbot> ash_worksi: Unrecognized escape \s passed through at (IRC) line 1. A\ string
[03:31:45] <ash_worksi> eval: quotemeta('A \string')
[03:31:46] <perlbot> ash_worksi: A\ \\string
[03:32:40] <Grinnz> quotemeta escapes any non-word character, not just backslashes
[03:33:16] <Grinnz> (addslashes adds to it a few random characters)
[03:34:54] *** Joins: l33t0day (worldhacke@user/l33t0day)
[03:34:54] <Grinnz> sweval: my $bs = '\'; 'A \string' =~ s/$bs/$bs$bs/gr
[03:34:56] <perlbot> Grinnz: Bareword found where operator expected at (IRC) line 1, near "'\'; 'A" 	(Missing operator before A?) Backslash found where operator expected at (IRC) line 1, near "A \" 	(Do you need to predeclare A?) ERROR: Bad name after string' at (IRC) line 1. 
[03:35:01] <Grinnz> sweval: my $bs = '\\'; 'A \string' =~ s/$bs/$bs$bs/gr
[03:35:01] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[03:35:02] <perlbot> Grinnz: ERROR: Trailing \ in regex m/\/ at (IRC) line 1. 
[03:36:12] <Grinnz> hmm, there's some weird bugs having to do with escaping and regexes
[03:36:33] <Grinnz> i would probably just do s{\\}{\\\\}g
[03:39:50] <ash_worksi> yeah, that might be the best thing to do anyway
[03:40:23] *** Joins: gast0n (~g4570n@user/gast0n)
[03:40:41] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:40:49] <ash_worksi> as is with other things, in my endeavor to make something more clean or pretty I've forgotten why I wanted to do that in the first place
[03:40:52] <emanuele6> Grinnz: it's not a bug, you need to use \Q$bs\E in the pattern.
[03:41:34] <Grinnz> it's buggier than that, but yeah that could work
[03:41:42] * GumbyPAN CPAN Upload: SPVM-0.9115 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9115
[03:43:07] <Grinnz> ah yeah the bug is when you do /\Q\\/
[03:43:07] <ash_worksi> oh that's right, I wanted to search a namespace in ag that was interpreting backslashes
[03:43:23] <Grinnz> \Q then interpolated variable should work fine
[03:43:41] <ash_worksi> ironically, I can just wrap the namespace manually in \Q and \E in ag already
[03:44:24] <Grinnz> that sounds like the better solution
[03:46:06] <aquanight> gordonfish: so basically, a typical pattern I'll use in normal matching with captures might go something like this: if (my ($cmd, $dest, $src) = $line =~ /^(\w+) (\w+) (\w+)$/)
[03:46:19] <aquanight> gordonfish: but if you try that same strategy with m//g you get entirely different results
[03:46:26] <emanuele6>  /w 14
[03:46:29] <emanuele6> oops
[03:47:39] <aquanight> m//g in scalar context will do one match at a time (good for iterating) but then if you want the captures it's ugly @{^CAPTURE} land. m//g in list context just pulls all the matches and you can't get the captures at all
[03:48:46] <aquanight> you can't do the "captures into a variable list straight off of the match operator" method like you can with m//
[03:49:47] <aquanight> the workaround is ugly: while (my ($cmd, $dest, $src) = do { $file =~ m/^(\w+) (\w+) (\w+)$/mg ? @{^CAPTURE} : () })
[03:54:37] *** Quits: l33t0day (worldhacke@user/l33t0day) (K-Lined)
[03:55:46] *** Joins: l33tdev (worldhacke@2607:5300:60:21b::1)
[03:58:41] *** Quits: whynot (~whynot@37.73.149.230) (Quit: leaving)
[03:59:42] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[04:03:00] *** Quits: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:03:02] *** Quits: l33tdev (worldhacke@2607:5300:60:21b::1) (K-Lined)
[04:09:37] *** Joins: Figworm (FiggyWitIt@user/figworm)
[04:15:25] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 240 seconds)
[04:18:16] *** Quits: morte_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[04:25:52] <genio> leont: https://github.com/genio/digest-bcrypt/#synopsis any better?
[04:25:53] <Paperbot_> Link title(s): [ GitHub - genio/digest-bcrypt: Digest::Bcrypt - Perl interface to the bcrypt algorithm ]
[04:26:12] *** Joins: frost (~frost@user/frost)
[04:26:19] <genio> I wanted to yank the example, but you're right; leaving it there serves as a better use deterrent than yanking it
[04:26:27] *** Joins: monkey_ (~user@190.104.116.153)
[04:29:11] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:29:32] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Read error: Connection reset by peer)
[04:37:01] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[04:49:00] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[04:50:38] *** Joins: EvanCarroll (~ecarroll@c-76-30-110-244.hsd1.tx.comcast.net)
[04:53:01] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 240 seconds)
[04:55:13] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[05:02:55] *** Joins: hyperreal (hyperreal@fedora/hyperreal)
[05:03:01] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[05:12:05] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 256 seconds)
[05:13:08] *** Joins: |0day-xc-Our| (~FBI@125.162.75.120)
[05:14:21] *** Quits: |0day-xc-Our| (~FBI@125.162.75.120) (Client Quit)
[05:15:21] *** Joins: skraito (~skraito@user/skraito)
[05:15:35] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[05:17:42] *** Joins: c0l0mb0 (~dwalker@58.177.241.177)
[05:28:52] *** Joins: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net)
[05:29:19] <blinux> Is this the best way to get vim setup for perl programming? The syntax highliting doesn't all seem to be enabled: https://github.com/vim-perl/vim-perl
[05:29:20] <Paperbot_> Link title(s): [ GitHub - vim-perl/vim-perl: Support for Perl 5 in Vim ]
[05:29:26] *** Joins: frost (~frost@user/frost)
[05:35:25] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[05:36:57] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:37:57] *** Quits: Su-Shee (~Susanne@p50894c29.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:40:02] *** Joins: Su-Shee (~Susanne@p50894972.dip0.t-ipconnect.de)
[05:41:32] <hyperreal> Hi all. Okay so, I have an html file with <pre title="title-here"> elements. what I want to do is take the value of the title attribute (so in this case "title-here") and insert <code class="title-here">contents</code> between the <pre> elements.
[05:43:08] <hyperreal> the contents of the code block do not need to be included. I just want wrap the <code class="title-here"> </code> around them.
[05:44:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:50:36] <Grinnz> sweval: use Mojo::DOM; my $html = '<pre title="title-here">foo</pre>'; my $dom = Mojo::DOM->new($html); foreach my $pre ($dom->find('pre[title]')->each) { $pre->wrap_content(Mojo::DOM->new_tag('code', title => $pre->{title})) } $dom->to_string
[05:50:39] <perlbot> Grinnz: <pre title="title-here"><code title="title-here">foo</code></pre>
[05:51:19] <Grinnz> not sure if i deciphered your requirements correctly, but that should get you started
[05:55:01] *** Joins: frost (~frost@user/frost)
[05:56:55] * GumbyPAN CPAN Upload: SPVM-0.9116 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9116
[05:59:30] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[06:00:37] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[06:02:37] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[06:04:13] *** Joins: skraito (~skraito@user/skraito)
[06:04:25] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[06:07:35] <aquanight> sweval: use Scalar::Util 'reftype'; my $x; my $z = \$x; reftype(\$z);
[06:07:37] <perlbot> aquanight: REF
[06:08:28] <aquanight> wait no it'll never matter, the scalar being reffed should always start with undef
[06:08:39] <aquanight> sweval: use Scalar::Util 'reftype'; my $x; my $z = undef; reftype(\$z);
[06:08:41] <perlbot> aquanight: SCALAR
[06:09:29] <aquanight> a state variable should always contain undef if the sub it's declared in has never executed
[06:09:41] <aquanight> so why tf did I start second guessing myself
[06:10:40] <aquanight> okay wait
[06:10:52] <aquanight> rv2cv_op_cv apparently can handle the case where the sub is identified by OP_CONST
[06:10:56] <aquanight> what scenario can make this happen?
[06:11:11] *** Joins: monkey_ (~user@190.104.116.153)
[06:12:25] <aquanight> there's &{"test"} but this produces ex-rv2cv { scope { ex-nextstate, const } } -- the scope will prevent rv2cv_op_cv from seeing it (not to mention OPpENTERSUB_AMPER
[06:13:04] <aquanight> "test"->() produces gv(*test)
[06:13:57] <aquanight> "test"->&* is closer, that gets ex-rv2cv { const } but the rv2cv is still flagged AMPER which will stop rv2cv_op_cv before it ever gets that far
[06:14:00] *** Joins: frost (~frost@user/frost)
[06:14:21] <aquanight> LeoNerd: how does one create an entersub { ..., rv2cv { const } } without rv2cv being flagged AMPER
[06:14:37] <aquanight> becuase rv2cv_op_cv can handle this scenario but I've no idea how to create it
[06:15:53] <aquanight> ooooh
[06:15:58] <aquanight> the const is expected to be a coderef
[06:17:18] <aquanight> AH
[06:17:29] <aquanight> use constant THING => sub { whatever; }; THING->()
[06:17:56] <aquanight> presumably THING => \&other_sub could happen too
[06:18:40] <buu> perlbot: hi
[06:18:41] <perlbot> buu: END OF LINE
[06:19:36] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Remote host closed the connection)
[06:22:49] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[06:22:53] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[06:27:20] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[06:28:53] *** Joins: rgrinberg (~textual@187.223.71.231)
[06:29:28] <buu> perlbot: hi
[06:29:30] <perlbot> buu: meow
[06:29:32] <buu> sigh
[06:29:43] <buu> perlbot: hi
[06:29:45] <perlbot> buu: hi
[06:32:04] <buu> perlbot: hi
[06:32:05] <perlbot> buu: hello
[06:32:23] <buu> Whenever I type something it overwrites the last line irssi is displaying at the bottom of the window
[06:32:33] <buu> Until I hit ctrl-l to redraw
[06:43:24] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:43:24] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:43:24] *** finn_elija is now known as FinnElija
[06:46:13] *** Joins: monkey_` (~user@190.104.116.153)
[06:46:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:46:47] *** Quits: monkey_` (~user@190.104.116.153) (Remote host closed the connection)
[06:51:16] *** Joins: frost (~frost@user/frost)
[06:54:07] *** Quits: henry40408 (~henry4040@175.181.188.127) (Remote host closed the connection)
[06:54:41] *** Joins: henry40408 (~henry4040@175.181.188.127)
[06:57:32] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:59:59] <buu> perlbot: hi
[07:00:00] <perlbot> buu: hello
[07:00:04] <buu> Le sigh
[07:02:28] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[07:02:35] *** Quits: k-man (~jason@user/k-man) (Remote host closed the connection)
[07:02:50] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0:b46d:33b4:3fc3:e796)
[07:04:03] *** Joins: k-man (~jason@user/k-man)
[07:04:37] *** Quits: subie (~subie@2601:4c0:4080:bc0:1c49:6d39:cd8f:c992) (Ping timeout: 240 seconds)
[07:04:51] *** Quits: AI4AI (~subie@2601:4c0:4080:bc0:b46d:33b4:3fc3:e796) (Read error: Connection reset by peer)
[07:05:04] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[07:06:26] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[07:08:13] <buu> perlbot: hi
[07:08:15] <perlbot> buu: meow
[07:08:23] <buu> perlbot: hi
[07:08:24] <perlbot> buu: END OF LINE
[07:08:29] <buu> Augh!
[07:08:50] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Max SendQ exceeded)
[07:09:42] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[07:10:32] *** Joins: monkey_ (~user@190.104.116.153)
[07:11:25] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[07:12:22] <buu> perlbot: hi
[07:12:24] <perlbot> buu: meow
[07:16:08] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Quit: leaving)
[07:16:59] *** Joins: buu_ (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[07:17:09] <buu_> perlbot: hi
[07:17:11] <perlbot> buu_: hi
[07:17:19] <buu_> ilu perlbot
[07:17:42] <buu> perlbot: hi
[07:17:43] <perlbot> buu: hi
[07:17:54] <buu_> Ok tmux is breaking me, e-gasd
[07:19:11] *** Quits: buu_ (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Client Quit)
[07:19:47] <EvanCarroll> ZOMFG IT IS A BUUUUUU
[07:20:14] <EvanCarroll> tmux is amazing.
[07:20:24] <rindolf> EvanCarroll: hey Evan the terribly awesome
[07:20:52] <rindolf> ada and  Evan;)
[07:21:01] <EvanCarroll> damn right, about time someone knows something around here.
[07:21:30] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[07:21:59] *** Joins: frost (~frost@user/frost)
[07:23:10] <rindolf> EvanCarroll: i love tmux. even tho i use less than ~5% of its functionality
[07:23:21] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[07:24:22] <rindolf> EvanCarroll: how's life in .tx.us?
[07:26:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[07:29:20] *** Joins: v` (~v@user/ctrl)
[07:32:33] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[07:38:21] <EvanCarroll> hilarious
[07:38:28] <EvanCarroll> everyone is getting is COVID, and no one cares.
[07:38:31] <EvanCarroll> including me.
[07:38:34] <EvanCarroll> Texas owns.
[07:38:44] <rindolf> https://www.shlomifish.org/humour/Muppets-Show-TNI/Summer-Glau-and-Chuck-Norris.html - texans with guns
[07:38:45] <Paperbot_> Link title(s): [ Muppets: Summer Glau & Chuck Norris as Grammar Nazis - Shlomi Fish’s Homesite ]
[07:40:56] <rindolf> EvanCarroll: i disbelieve that there is a pandemic: https://github.com/shlomif/shlomif-tech-diary/blob/master/multiverse-cosmology-v0.4.x.asciidoc
[07:40:57] <Paperbot_> Link title(s): [ shlomif-tech-diary/multiverse-cosmology-v0.4.x.asciidoc at master · shlomif/shlomif-tech-diary · ... ]
[07:45:12] <EvanCarroll> holy shit rindolf ...
[07:45:15] <EvanCarroll> > Zionism is non-coincidentally cognate with the Hebrew word for fourth base "fucks" and was a process by which the Satans tried to convince 'false prophets' men or women to relocate to an active hellhole for giving birth there ( e.g: because the current hell hole was plugged). 
[07:45:25] <EvanCarroll> That's based my dude. You++
[07:45:47] <EvanCarroll> Zionism is satanic settler colonist idiology.
[07:46:14] <EvanCarroll> I don't know why, I didn't know the Book of Rindolf was so hawt.
[07:49:36] <rindolf> EvanCarroll: zionism wasn't limited to .il/.pa or to jews
[07:53:56] <EvanCarroll> I mean, we don't have to agree about everything.
[07:55:13] <rindolf> EvanCarroll: https://www.shlomifish.org/humour/bits/true-stories/my-first-kiss/ vs. what the girl remembered: https://www.youtube.com/watch?v=Zlot0i3Zykw
[07:55:13] <Paperbot_> YouTube video linked by rindolf: Taylor Swift - Red - published by TaylorSwiftVEVO
[07:57:40] <rindolf> EvanCarroll: "if everyone acted just like me, i'd act differently"
[08:02:31] <EvanCarroll> so long as you're telling everyone that Israel is an active hell hole that spun off from a satanic philoosphy of settler colonism, I'm cool with you acting just like you are.
[08:03:20] <EvanCarroll> colonialism*
[08:06:35] *** Joins: Martchus_ (~martchus@2a01:c22:6fc6:d00:d250:99ff:fe49:3cce)
[08:07:50] *** Quits: Martchus (~martchus@2a01:c22:76ed:2200:d250:99ff:fe49:3cce) (Ping timeout: 268 seconds)
[08:09:25] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[08:15:54] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[08:17:36] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[08:19:05] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[08:26:42] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:33:30] *** Joins: subie (~subie@2601:4c0:4080:bc0:b46d:33b4:3fc3:e796)
[08:34:41] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[08:34:56] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[08:35:03] *** Joins: Kimm0n0 (~Kimmono@195-159-198-100.customer.powertech.no)
[08:38:30] *** Quits: Kimmono (~Kimmono@195-159-198-100.customer.powertech.no) (Ping timeout: 256 seconds)
[08:38:57] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:39:36] *** Joins: mexen (uid495612@user/mexen)
[08:40:37] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:41:26] <R2robot> are you ok?
[08:42:18] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:42:41] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:48:51] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[08:49:02] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[08:51:59] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:52:44] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[08:53:12] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:54:43] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[08:56:46] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:57:03] *** Quits: EvanCarroll (~ecarroll@c-76-30-110-244.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[08:58:07] <buu> perlbot: utf8 ☼
[08:58:08] <perlbot> buu: U+263C (e2 98 bc): WHITE SUN WITH RAYS [☼] 
[08:58:44] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[09:03:26] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[09:13:33] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[09:21:57] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 240 seconds)
[09:29:03] <rindolf> EvanCarroll: .il is no longera hell hole
[09:32:15] <rindolf> EvanCarroll: gush dan and tel aviv stuck like asore thumb up to a least 1977
[09:33:38] <rindolf> by 1980 they were liberated too.
[09:36:54] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:37:11] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:38:10] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[09:38:40] *** Joins: gloin (~gloin@user/gloin)
[09:41:36] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[09:44:42] <rindolf> https://en.wikipedia.org/wiki/Samantha_Smith beat https://en.wikipedia.org/wiki/Jim_Henson and then they joined forces and all remaining false prophets (= 'vampire's) were slain by https://muppet.fandom.com/wiki/Count_von_Count
[09:44:43] <Paperbot_> Link title(s): [ Samantha Smith - Wikipedia ] [ Jim Henson - Wikipedia ] [ Count von Count | Muppet Wiki | Fandom ]
[09:48:12] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[09:49:01] <rindolf> "A vampire can only be slain by another vampire, except for the last vampire standing, who will be slain by his or her child." — The-Codex™ of the Selineverse. ==> i will be slain by Christina Grimmie, who is badder than me
[09:49:37] *** Joins: frost (~frost@user/frost)
[09:49:52] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[09:53:37] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:a580:94ef:e9e9:f6e2) (Ping timeout: 240 seconds)
[10:00:09] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:00:36] *** Joins: tejr (~tejr@user/tejr)
[10:07:25] *** Quits: c0l0mb0 (~dwalker@58.177.241.177) (Quit: leaving)
[10:21:12] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:25:49] *** Quits: japh (~scp1@user/japh) (Ping timeout: 240 seconds)
[10:26:07] *** Joins: japh (~scp1@user/japh)
[10:34:31] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:35:21] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:35:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:38:31] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:39:21] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:46:27] * GumbyPAN CPAN Upload: IP-Geolocation-MMDB-0.009 by VOEGELAS https://metacpan.org/release/VOEGELAS/IP-Geolocation-MMDB-0.009
[10:46:41] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:46:52] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:49:29] <EvanCarroll> rindolf: do you see vampires, ever?
[10:49:30] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:49:42] *** Joins: tejr (~tejr@user/tejr)
[10:52:43] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:53:28] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:01:07] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:01:34] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:03:23] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:03:42] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:05:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[11:08:31] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:09:50] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:10:02] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:11:00] *** Quits: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[11:16:48] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:17:36] *** Joins: frost (~frost@user/frost)
[11:18:23] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:20:58] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:21:05] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:23:39] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:23:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:26:01] *** Joins: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net)
[11:26:24] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:27:05] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:34:14] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:35:31] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:35:52] *** Joins: tobybl (~tobybl@237.202.200.146.dyn.plus.net)
[11:38:38] *** Joins: pizdets_ (~pizdets@183.182.115.239)
[11:38:43] *** Quits: pizdets (~pizdets@183.182.115.239) (Read error: Connection reset by peer)
[11:40:45] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:40:50] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:43:07] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:43:39] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:45:14] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:52:02] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[11:53:10] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[11:54:01] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[11:57:49] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[12:01:07] *** Joins: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com)
[12:01:42] *** Quits: rgrinberg (~textual@187.223.71.231) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:05:09] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[12:06:31] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[12:06:36] * GumbyPAN CPAN Upload: Data-Gimei-v0.0.4 by YOUPONG https://metacpan.org/release/YOUPONG/Data-Gimei-v0.0.4
[12:18:18] *** Joins: Pali (~pali@user/pali)
[12:23:15] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[12:23:25] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[12:32:01] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[12:32:47] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[12:34:12] *** Joins: skraito (~skraito@user/skraito)
[12:34:14] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 256 seconds)
[12:34:25] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[12:47:49] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 240 seconds)
[12:49:47] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (Read error: Connection reset by peer)
[12:51:41] * GumbyPAN CPAN Upload: Gimp-2.37 by ETJ https://metacpan.org/release/ETJ/Gimp-2.37
[12:52:18] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:53:49] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:55:50] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[12:57:20] *** Joins: jplesnik_ (jplesnik@nat-pool-brq-t.redhat.com)
[12:59:44] *** Quits: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com) (Ping timeout: 256 seconds)
[13:03:19] *** Joins: furrymcgee (~devuan@cgn-89-1-208-165.nc.de)
[13:07:39] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[13:11:42] * GumbyPAN CPAN Upload: PDL-Stats-0.81 by ETJ https://metacpan.org/release/ETJ/PDL-Stats-0.81
[13:14:21] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[13:22:49] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:33:48] *** Quits: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[13:34:16] *** RemoteHost is now known as A_Dragon
[13:35:59] *** Joins: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net)
[13:40:02] *** Joins: maroloccio (~marolocci@151.75.59.229)
[13:41:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[13:41:46] * GumbyPAN CPAN Upload: Date-Holidays-KZ-0.2022.0 by BESINT https://metacpan.org/release/BESINT/Date-Holidays-KZ-0.2022.0
[13:44:58] *** Quits: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz) (Remote host closed the connection)
[13:45:21] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[13:45:22] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:51:47] * GumbyPAN CPAN Upload: Avatica-Client-0.003 by PUTINTSEV https://metacpan.org/release/PUTINTSEV/Avatica-Client-0.003
[13:51:47] * GumbyPAN CPAN Upload: DBD-Avatica-0.2.2 by PUTINTSEV https://metacpan.org/release/PUTINTSEV/DBD-Avatica-0.2.2
[13:52:35] *** Quits: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 250 seconds)
[13:57:52] *** Joins: frost (~frost@user/frost)
[14:00:13] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[14:00:39] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[14:00:41] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Quit: What is Hope? That all of your wishes and all of your dreams come true? To turn back time because things were not supposed to happen like that (C) Rau Le Creuset)
[14:00:55] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[14:01:48] * GumbyPAN CPAN Upload: Date-Holidays-BY-1.2022.1 by BESINT https://metacpan.org/release/BESINT/Date-Holidays-BY-1.2022.1
[14:02:29] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:03:06] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:03:34] *** Joins: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net)
[14:03:47] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[14:07:05] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[14:10:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[14:12:35] *** Joins: frost (~frost@user/frost)
[14:22:56] <xq> I'm trying to understand why root cannot write to a fifo created by normal user https://paste.debian.net/hidden/18dad382/ If anyone has an idea, please enlighten me
[14:22:57] <Paperbot_> Link title(s): [ Debian Pastezone ]
[14:24:49] <xq> nvm it's https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=30aba6656f61ed44cba445a3c0d38b296fa9e8f5
[14:24:50] <Paperbot_> Link title(s): [ kernel/git/torvalds/linux.git - Linux kernel source tree ]
[14:25:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:30:58] *** Joins: Shells (~michelle@203.206.128.220)
[14:31:35] *** Quits: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 250 seconds)
[14:31:37] *** Quits: Michelle (~michelle@203.206.128.220) (Ping timeout: 240 seconds)
[14:31:48] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:32:09] *** Joins: frost (~frost@user/frost)
[14:32:27] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:12] *** Joins: csrf (~csrf@user/csrf)
[14:35:48] *** Quits: maroloccio (~marolocci@151.75.59.229) (Quit: WeeChat 3.0)
[14:38:02] *** Joins: tobybl_ (~tobybl@237.202.200.146.dyn.plus.net)
[14:39:49] *** Quits: tobybl (~tobybl@237.202.200.146.dyn.plus.net) (Ping timeout: 240 seconds)
[14:39:57] *** Joins: art1 (~romeyke@p200300ccdf059600628c41b0c57c0991.dip0.t-ipconnect.de)
[14:44:26] <aquanight> huh. That's a weird kernel quirk. I guess I get why they did it (/tmp/ races are fun)
[14:53:15] <daemon> eval: my $q = 'blahblahblah|x'; my $e = 'blahblahblah'; if ($q =~ m/^\Q$e\E\|.*$/) { return "yes" } else { return "no" }
[14:53:16] <perlbot> daemon: yes
[14:53:18] *** Quits: pieguy12- (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (Ping timeout: 260 seconds)
[14:54:19] *** Joins: xenial-user10 (~androirc@20014C4C17E1D200C9052E86C3043E92.catv.pool.telekom.hu)
[14:54:22] *** Joins: HvszrStykp (~X@81.171.62.86)
[14:56:53] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:57:51] <ilmari> aquanight: the docs in the patch explain exactly why
[15:03:31] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[15:05:20] *** Quits: bs338 (~pi@host31-51-176-41.range31-51.btcentralplus.com) (Ping timeout: 268 seconds)
[15:06:54] *** Joins: bs338 (~pi@host217-44-234-101.range217-44.btcentralplus.com)
[15:11:51] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[15:12:09] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[15:16:56] * GumbyPAN CPAN Upload: Regex-Object-1.10 by ALEXPAN https://metacpan.org/release/ALEXPAN/Regex-Object-1.10
[15:17:19] *** Joins: frost (~frost@user/frost)
[15:21:58] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[15:29:37] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[15:47:18] *** Shells is now known as Michelle
[15:51:18] *** Quits: jplesnik_ (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[15:52:29] *** Joins: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com)
[15:59:56] <skrzyp> How can I iterate over array of hashes continously as long as there's at least a single hash in array which suffices a single condition? Using 'map' is okay, but it iterates only once 
[16:01:55] <ilmari> skrzyp: while (my @matches = grep …, @array) { … }
[16:02:14] <skrzyp> hmm
[16:02:16] <skrzyp> hmmmmm
[16:02:18] <skrzyp> hmmmmmmm
[16:02:22] <skrzyp> that sounds like it might work
[16:02:32] <ilmari> assuming you assign new values to @array inside the loop
[16:02:46] <ilmari> otherwise it'd just loop infinitely, of course
[16:03:03] <skrzyp> ok
[16:17:01] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Ping timeout: 240 seconds)
[16:31:12] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[16:33:57] *** Joins: jplesnik_ (jplesnik@nat-pool-brq-t.redhat.com)
[16:36:03] *** Quits: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com) (Ping timeout: 256 seconds)
[16:37:55] *** Joins: frost (~frost@user/frost)
[16:42:05] * GumbyPAN CPAN Upload: App-Rakubrew-26 by PATRICKB https://metacpan.org/release/PATRICKB/App-Rakubrew-26
[16:55:49] *** Joins: monkey_ (~user@190.104.116.153)
[16:56:36] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[16:57:06] * GumbyPAN CPAN Upload: App-findeps-0.12 by WORTHMINE https://metacpan.org/release/WORTHMINE/App-findeps-0.12
[17:02:25] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[17:04:12] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:11:53] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:17:05] *** Joins: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net)
[17:18:44] *** Quits: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net) (Remote host closed the connection)
[17:19:05] *** Joins: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net)
[17:21:08] *** Quits: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net) (Read error: Connection reset by peer)
[17:21:22] *** Joins: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net)
[17:28:47] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:29:23] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:29:43] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:29:56] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:30:00] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[17:32:08] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[17:37:10] * GumbyPAN welcomes TURAEL - Arthur Komendantov to CPAN!
[17:37:10] * GumbyPAN welcomes MGENDY - Mena Bekhit to CPAN!
[17:37:11] * GumbyPAN welcomes NNZ - Nikolay Neustroev to CPAN!
[17:37:16] * GumbyPAN welcomes EDELL - David Edell to CPAN!
[17:37:21] * GumbyPAN welcomes TSTOREY - Thomas Storey to CPAN!
[17:37:26] * GumbyPAN welcomes KALIKIANA - Cris Dywan to CPAN!
[17:37:31] * GumbyPAN welcomes BOREKL - Borek Lupoměský to CPAN!
[17:38:53] *** Joins: hethw (~heth@46.238.32.56)
[17:39:06] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[17:39:57] <hethw> how can I include a perl script in the current file? I want to execure the script code at a specified location in another file
[17:40:08] *** Joins: morte_ (~user@190.104.116.153)
[17:40:37] <Adura> What's the exeillness?
[17:41:14] <hethw> I'm testing a script in a test file
[17:41:47] <hethw> the script consists of two parts, script.pm with all subs and 'script' with only the execution
[17:42:23] <hethw> I tried with do 'script'; but that didn't work
[17:43:19] <Altreus> that would have been my answer
[17:43:28] <Altreus> what sort of didn't work didn't it do
[17:43:53] <ilmari> system $^X, $path_to_script;
[17:44:25] <ilmari> possibly wrapped in capture { ... } (from Capture::Tiny) if you want to capture and check the output
[17:44:57] <Altreus> mm that works - although it starts up a new interpreter so if you've mocked anything it won't apply
[17:45:19] <ilmari> but if all the logic is in the module (and the script is just `use Foo; Foo->run(@ARGV)`, there's not much point in testing that
[17:45:41] <Altreus> inasmuch as you want to test you didn't screw it up in basic ways :D
[17:47:32] <ilmari> yeah, in which case you can have a --help or --version option that doesn't actually do anything, and just `capture { system $^X, $script }` and check the output
[17:47:35] <ilmari> no need for mocking
[17:48:00] <ilmari> `capture { system $^X, $script, '--version' }` even
[17:48:45] <simcop2387> you'll want to: do '/path/to/script'; probably
[17:48:52] <simcop2387> or the system stuff
[17:49:26] <Altreus> Do I remember correctly that I can set up my environment to run something when perl -d starts, so that I can e.g. replace Params::Validate::validate with sub {1} before the code runs?
[17:49:51] <Altreus> I'm running a version where Params::Validate is a sad panda under the debugger
[17:49:54] <hethw> I've replaced some subs
[17:50:13] <hethw> so that the script can run
[17:50:21] <hethw> I don't need any output
[17:50:38] <hethw> I get the results from the replaced subs
[17:50:56] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[17:51:21] <ilmari> hethw: as I said, I would make the script so trivial it doesn't need more than the most cursory of testing, then just call the same entry point in the module from the tests
[17:51:37] <simcop2387> hethw: what happens when you're trying to do 'script';?
[17:51:54] <hethw> simcop2387, I don't see anything happening that's the thing
[17:52:10] <ilmari> hethw: are you checking the error conditions `perldoc -f do` tells you to?
[17:52:12] <Altreus> what do you expect to happen :)
[17:52:12] <hethw> ilmari, that's easy, I want to learn another way to test scripts :)
[17:52:20] <simcop2387> hethw: no output from the script or subs neing called?
[17:52:29] <hethw> subs aren't called
[17:52:53] <simcop2387> what about any output from the acript thoufh
[17:52:54] <hethw> I'll check the error stuff now
[17:53:00] <hethw> none whatsoever
[17:53:26] <ilmari> that's because `do` reports errors by return code, not exceptions or warnings
[17:53:45] <ilmari> if you don't check the return code and relevant variables, you won't see any errors
[17:55:21] <Altreus> you didn't update it to do main unless caller, did you? :P
[17:55:33] <Altreus> is do affected by autodie?
[17:57:18] <hethw> I saw the error
[17:57:22] <hethw> horray
[17:57:41] <hethw> what is main unless caller
[18:01:58] <Altreus> it runs main unless there's a caller
[18:02:12] <hethw> sure, but what does that actually mean
[18:02:17] <Altreus> So you can `do 'script.pl'` without it running main, but if you just run script.pl it will run main
[18:02:46] <Altreus> thus you can compile your script and load all the subs into a namespace, and call the subs as though your script were a package
[18:03:18] <hethw> which main the test main, the pm main or the script main? :)
[18:03:38] <Altreus> use Test::More; subtest "main runs" => sub { TheScript::main() }; package TheScript; do 'script.pl';
[18:03:45] <hethw> i have package in the pm and use package in the script
[18:03:59] <Altreus> of those, only the script would have a sub main
[18:04:09] *** homura is now known as pamela22
[18:06:19] <Altreus> like this https://l.perl.bot/p/hzkb2t
[18:06:19] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[18:06:27] <Altreus> modulo mistakes
[18:07:07] * Altreus found sub afterinit in .perldb
[18:07:15] <Altreus> this is hopefully my answer
[18:09:17] *** Quits: japh (~scp1@user/japh) (Ping timeout: 240 seconds)
[18:09:20] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[18:09:42] <Altreus> except validate does defaults so I can't just replace it :D
[18:11:25] *** Joins: japh (~scp1@user/japh)
[18:14:57] <Altreus> heh I found PERL_NO_VALIDATE whlie trying to figure it out
[18:17:14] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 260 seconds)
[18:17:22] *** Joins: akaWolf (~akaWolf@akawolf.org)
[18:18:18] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[18:21:17] *** Joins: Furai (~Furai@furai.pl)
[18:23:27] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[18:24:39] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[18:24:56] *** Joins: diskin (~diskin@185.49.242.51)
[18:26:56] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[18:26:56] *** Quits: diskin (~diskin@185.49.242.51) (Killed (zirconium.libera.chat (Nickname regained by services)))
[18:26:56] *** diskin_ is now known as diskin
[18:27:16] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[18:28:58] *** Quits: furrymcgee (~devuan@cgn-89-1-208-165.nc.de) (Ping timeout: 256 seconds)
[18:31:32] *** Quits: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[18:37:16] * GumbyPAN CPAN Upload: Amazon-Credentials-1.0.12 by BIGFOOT https://metacpan.org/release/BIGFOOT/Amazon-Credentials-1.0.12
[18:40:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:40:34] *** Joins: jgaz (~jgaz@2600:8805:d980:7620::9e0)
[18:44:29] *** Joins: rgrinberg (~textual@2806:101e:7:445d:e1a3:1c4d:1ca5:ce95)
[18:46:27] <xenu> TIL about this syntax:
[18:46:36] <xenu> eval: my @foo = ([1],[2],[3]); for \my @arr (@foo) { say $arr[0] }
[18:46:38] <perlbot> xenu: 1 2 3 
[18:46:43] <xenu> apparently it was introduced with refaliasing
[18:46:49] <xenu> and @arr is an alias
[18:47:48] <Altreus> alias sounds like a minor inaccuracy there
[18:48:08] <Altreus> I guess not, since that's what ref aliasing is doing!
[18:49:14] <xenu> alias to each variable that references inside @foo point to
[18:49:23] <ilmari> it is an alias to the arrays referenced by the items in @foo
[18:49:28] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Remote host closed the connection)
[18:49:28] <xenu> it doesn't have to be an array, $ and % will work too
[18:49:34] <xenu> weird syntax
[18:49:40] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[18:51:16] <ilmari> eval: use experimental 'declared_refs'; for my \@arr ([1],[2],[3]) { say $arr[0] }
[18:51:17] <perlbot> ilmari: 1 2 3 
[18:51:17] * GumbyPAN CPAN Upload: CGI-Simple-1.280 by MANWAR https://metacpan.org/release/MANWAR/CGI-Simple-1.280
[18:54:27] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:55:39] *** Joins: randir_ (~randir@196.149.60.156)
[18:55:41] <Kobaz> anyone know of a free city/state/zip database?
[18:56:55] <ology> google seems to know of a few
[18:57:02] <simcop2387> Kobaz: i think this was the where i'd get it before https://postalpro.usps.com/address-quality/city-state-product
[18:57:03] <Paperbot_> Link title(s): [ City State Product | PostalPro ]
[18:57:37] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:58:39] <Kobaz> i didn't see anything all that useful there
[18:59:00] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Ping timeout: 256 seconds)
[18:59:12] <Kobaz> they have some sort of grid listing of zips: https://postalpro.usps.com/storages/2022-01/AISUREPT_0.TXT
[18:59:15] <Kobaz> i have no idea what that is
[19:00:21] <Kobaz> looks like they want $450 for city/state listings
[19:04:04] <Yaakov> This API offers 5000 free requests per month: https://zipcodebase.com
[19:04:04] <Paperbot_> Link title(s): [ Zip Code API - Free Access to Worldwide Postal Code Data ]
[19:05:03] <Kobaz> oh neat
[19:05:45] <mb> what is the cross platform way to create a safe file name
[19:06:04] <mb> lets assume I have a string that is "MyString:foo/bar" 
[19:06:12] <simcop2387> hmm could swear that used to be free
[19:06:13] <Kobaz> File::Path
[19:06:24] <mb> what is the best way to encode it so that I can write this to a file?
[19:06:39] <Kobaz> encode it?
[19:06:53] <mb> I was thinking File::Spec should have a helper function for that, it would make sense if it would be there
[19:07:00] <mb> but I can't find it there
[19:07:29] <Adura> Dealing with unicode names in Windows is a bit of a pain, hah.
[19:07:39] <Kobaz> File::Spec as well, yeah
[19:07:48] <mb> Yeah it's not just unicode
[19:08:01] <mb> files on Windows can't have colons in them
[19:08:07] <Adura> Indeed
[19:08:20] <Kobaz> replace colons with dashes or something?
[19:08:24] <mb> I'm just looking for a helper function that knows stuff like this and would replace those characters with "os-safe" characters
[19:08:31] <Adura> Wonder if you can use fullwidth colons...
[19:08:59] <Adura> You can!
[19:09:21] <Adura> Bit silly looking, but there it is.
[19:09:27] <Kobaz> heh
[19:09:51] <mb> Yeah so I found this
[19:09:52] <mb> https://en.wikipedia.org/wiki/Filename#Comparison_of_filename_limitations
[19:09:52] <Paperbot_> Link title(s): [ Filename - Wikipedia ]
[19:09:52] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:2d06:fff0:d105:7c1)
[19:10:21] <mb> I know on linux, the only two unallowed characters are '/' and null
[19:10:44] <mb> so this is why it's not in perl, I guess, because perl is mostly about linux and *EVERYTHING_ELSE* is bolted on
[19:11:19] <ilmari> perl predates linux
[19:11:32] <Adura> Yeah, whatever *nix Larry was on.
[19:11:40] <mb> yeah for sure, UNIX
[19:12:32] <mb> but on for instance VMS you also can't have %()@ in yer file names :D
[19:13:30] <mb> So the problem is, these characters _are_ valid in URLs and I want a function that takes a URL and uses the basename as a file name, to save it to disk
[19:14:53] <xenu> typical solutions are 1) replace non-ascii characters with '_', but that may cause collisions
[19:14:56] <ilmari> then you need to map those in an unambiguous way
[19:14:56] <xenu> 2) something like base64
[19:14:59] <mb> but I'll have to somehow create a 'safe' file name; I guess I'll just make a nice regex and do it very defensive by replacing anything that is not [\w\d] or such with a _
[19:15:15] <Adura> Or, just use the file's hash.
[19:15:27] <mb> yeah the downside of base64 or a hash is that it's not really recognizable
[19:15:42] <xenu> s/non-ascii/non alphanumeric/
[19:16:01] <ilmari> s/([^a-zA-Z0-9-])/sprintf("_%02X_", ord $1)/ge
[19:16:09] <mb> So I was looking at fixing this issue in File::Fetch --> https://rt.cpan.org/Public/Bug/Display.html?id=88416
[19:16:09] <Paperbot_> Link title(s): [ Bug #88416 for File-Fetch: Problems with URL containing ":" on Windows ]
[19:16:23] <mb> But I think File::Fetch is just not such a great module
[19:18:01] <mb> still, I think my usecase is not so strange, right? Every app that allows you to save something, defaults to some kind of 'safely encoded' filename, to prevent issues
[19:18:34] <bkhl> I wonder what `curl --remote-name` does for invalid characters.
[19:18:37] *** Quits: xenial-user10 (~androirc@20014C4C17E1D200C9052E86C3043E92.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[19:18:44] <bkhl> That does something similar to what I understand you are describing.
[19:18:58] <bkhl> (I checked and the curl man page doesn't say)
[19:19:07] <Grinnz> mb: in HTTP::Simple i just require passing the filepath to use
[19:19:21] <Grinnz> but that doesn't help you with File::Fetch
[19:24:41] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[19:24:55] <mb> bhkl: yeah curl --remote-name even is 'smart' in that it understands it can't do colons on Windows, but will happily use them on macOS
[19:25:21] <mb> Grinnz ; yeah it seems stupid but it's not so easy 
[19:26:01] <mb> of course one can 'roll your own solution' but it seems there _ought_ to be something, 'core-ish', out there
[19:26:12] <bkhl> mb: I assumed that much, but I was wondering if it has some smart solution for replacing the characters.
[19:26:16] <bkhl> Or it just skips them?
[19:27:42] <bkhl> I had to do something similar recently, not in Perl, exporting files from a system using names that were in UTF-8, but the exported files needed to be ASCII.
[19:28:04] <bkhl> I just went with '0xNNNN' for any sequences that weren't valid UTF-8
[19:28:15] <huf> it cant *just* skip them, because they may be the only characters in the filename
[19:28:19] *** Quits: randir_ (~randir@196.149.60.156) (Ping timeout: 256 seconds)
[19:29:03] <Adura> Plop a short hash in front of it.
[19:31:36] <mb> I found this --> https://www.reddit.com/r/perl/comments/8lzvze/module_for_converting_strings_to_safe_filenames/
[19:31:50] <Paperbot_> Link title(s): [ Module for converting strings to safe filenames? : perl ]
[19:32:07] *** Quits: zgu|skaro (~zgu@2603-7080-b704-0800-832f-b7d5-7b90-f547.res6.spectrum.com) (Quit: Leaving)
[19:32:52] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[19:33:55] <bkhl> Encode::Safename looks nice as long as you don't have a need to prevent filename clashes.
[19:33:57] <tirnanog> mb: as concerns windows, here's a snippet which - while not written in perl - has been devised by somebody that has properly taken the necessary considerations into account: https://gist.github.com/doctaphred/d01d05291546186941e1b7ddc02034d3#gistcomment-3584903. I'd wager there's nothing like this in CPAN currently.
[19:33:58] <Paperbot_> Link title(s): [ Invalid characters for Windows filenames · GitHub ]
[19:34:07] <tirnanog> not terribly difficult to implement, though.
[19:34:11] <bkhl> E.g. with that system "foo_bar" and "foo bar" would be encoded the same.
[19:34:49] <bkhl> Windows have some other restrictions too, not just character contents of the filename.
[19:35:02] <bkhl> Also more restrictive file name length restrictions, and some forbidden names.
[19:35:17] <Mandevil> Can't create file 'AUX'.
[19:35:32] <Mandevil> God damn, backwards compatibility straight to stone age.
[19:35:58] <mb> **exactly**
[19:37:11] <bkhl> I think it's better now but there used to also be things like your _entire path_ was limited to 256 characters.
[19:41:01] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[19:42:30] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-227.dsl.bell.ca)
[19:45:25] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 240 seconds)
[19:47:08] <ugexe> hash the path part names
[19:47:46] *** Quits: PonyBlocks (ponyblocks@user/ponyblocks) (Ping timeout: 260 seconds)
[19:47:59] <bkhl> Or just the whole original URL?
[19:48:22] *** Quits: Pny (pny1312@user/pny) (Ping timeout: 268 seconds)
[19:48:46] <ugexe> url isn't as nice -- it has case insensitivity for parts of it
[19:49:07] *** Quits: k33p3r (kexik@2605:6400:c847:1948::8491) (Quit: ZNC - https://znc.in)
[19:49:17] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-227.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:49:41] <bkhl> OTOH I thought if the ultimate source is a URL, being able to verify the filename against it may be handy.
[19:50:18] <ugexe> just make sure you normalize your urls first
[19:50:49] <Grinnz> mb: https://metacpan.org/pod/Mojo::Util#slugify would be a little overzealous for the purpose but also would work
[19:50:49] <Paperbot_> Link title(s): [ Mojo::Util - Portable utility functions - metacpan.org ]
[19:51:02] <bkhl> Or https://metacpan.org/pod/URL::Normalize
[19:51:02] <Paperbot_> Link title(s): [ URL::Normalize - Normalize/optimize URLs. - metacpan.org ]
[19:52:18] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:a580:94ef:e9e9:f6e2)
[19:53:09] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:57:22] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Ping timeout: 256 seconds)
[19:58:11] <mb> Grinnz: thanks for the pointer; indeed I was thinking how I solved something similar before when I was working on a Django app, and I did it by using django's slugifier
[19:58:33] <Grinnz> i believe we based that implementation on that one
[19:58:41] <mb> because it is restrictive, but it also tries to read the resulting string 'readable' or 'recognizable' which is just what you'd want
[19:59:49] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Ping timeout: 240 seconds)
[20:02:01] <mb> but I'm also not sure about using that slugifier in File::Fetch 
[20:02:52] <mb> (by stealing the sub, not by making Mojolicious a dependency!!)
[20:03:20] <Grinnz> hah, yeah that's definitely not a reasonable dependency for a core module
[20:03:24] <mb> Let's ask BinGOs, who seems to be the person caring most about File::Fetch or at least merging my pull request the other day 
[20:03:40] *** Quits: jgaz (~jgaz@2600:8805:d980:7620::9e0) (Quit: Leaving)
[20:03:51] <Grinnz> for files you might as well do something a bit more lenient and custom
[20:04:01] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-183.dsl.bell.ca)
[20:08:33] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-183.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:09:37] <pragma-> I *really* wish there was a way to decorate subs, even non-constant ones, as inline-able. I'd love to be able to make a bunch of well-named tiny subs everywhere if I could tell Perl to replace the sub call with the contents of the sub.
[20:10:59] <pragma-> I am seeing noticeable slowdowns when I make too many subs. :(
[20:11:17] <SpiceMan> implement a preprocesor with a source filter
[20:11:17] <Adura> -funroll-loops !
[20:11:19] * SpiceMan runs
[20:14:06] *** Quits: jplesnik_ (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[20:14:14] *** Joins: masticass (~gzc@host-85-201-222-202.dynamic.voo.be)
[20:16:45] *** Quits: masticass (~gzc@host-85-201-222-202.dynamic.voo.be) (Client Quit)
[20:17:48] <Grinnz> pragma-: https://metacpan.org/pod/Sub::Quote
[20:17:48] <Paperbot_> Link title(s): [ Sub::Quote - Efficient generation of subroutines via string eval - metacpan.org ]
[20:20:26] <pragma-> Hmm. Is a string eval actually cheaper than a sub call?
[20:20:47] <pragma-> I would have thought there would be a bit more work in doing an eval than a sub call.
[20:21:00] <Grinnz> yes
[20:22:55] <Grinnz> more generally, it's best to unroll excessive sub calls into normal loops
[20:23:05] <Grinnz> if reasonable
[20:23:44] <xenu> eval is less efficient, the point of Sub::Quote this is to semi-manually inline subs to reduce the number of sub calls
[20:23:47] <Grinnz> the Sub::Quote machinery is mostly for hyperoptimizing Moo, and will make your code much more confusing
[20:24:23] <Grinnz> right, it's mroe efficient because you only build it once
[20:24:24] <Adura> As long as the computer is less confused.
[20:24:28] <xenu> imagine that for example you generate a sorting subroutine basing on the user-specified parameters
[20:26:01] <xenu> without eval/Sub::Quote you will be stuck with something like sort { call_something() } @array which is extremely inefficient
[20:26:40] <xenu> also, yeah, i wish perl could inline stuff automatically, but it's really hard because of how dynamic perl is
[20:27:15] <pragma-> That's why I suggest a decorator so the programmer can just promise to Perl that the sub isn't dynamic.
[20:27:32] <pragma-> That way Perl doesn't need to try to figure it out itself.
[20:28:01] <xenu> you can override subs at runtime, but that's just one of the problems
[20:28:05] <xenu> dynamic overloads, tied variables
[20:28:22] <xenu> s/dynamic/global/
[20:28:37] <xenu> the fact that aliasing exists
[20:29:37] <xenu> also marking subs as non-overridable won't help with methods
[20:29:43] <xenu> everything about objects happens at runtime
[20:29:48] <xenu> it's sad
[20:30:32] <Grinnz> i also suspect if-and-when Object::Pad/Corinna changes that dynamic, a lot of expectations will break
[20:30:52] <Grinnz> we are very used to how dynamic methods are
[20:37:43] *** Joins: fling (~fling@user/fling)
[20:44:29] *** Quits: rgrinberg (~textual@2806:101e:7:445d:e1a3:1c4d:1ca5:ce95) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:45:42] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:56:11] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[20:57:30] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:58:13] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[20:58:13] <arthurpbs> what is a good approach to make set operations on array ?! I mean, since I cannot garantee what is in the array, how do I approach to cmp the values ?
[20:58:42] *** Joins: Pny (pny1312@2605:6400:c847:1985::5891)
[20:58:53] *** Joins: PonyBlocks-_- (ponyblocks@2605:6400:c847:1478::8741)
[21:05:44] <tirnanog> what sort of operation do you have in mind?
[21:05:52] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[21:06:17] <ology> https://metacpan.org/search?q=array%20set ?
[21:06:18] <Paperbot_> Link title(s): [ Search for "array set" - metacpan.org ]
[21:06:31] * GumbyPAN CPAN Upload: Open-This-0.000030 by OALDERS https://metacpan.org/release/OALDERS/Open-This-0.000030
[21:07:50] *** Joins: k33p3r (kexik@2605:6400:c847:1948::8491)
[21:08:07] <Grinnz> it's not really possible to do set operations unless you know what you are comparing
[21:08:32] <Grinnz> https://metacpan.org/pod/Set::Scalar if they are scalars
[21:08:32] <Paperbot_> Link title(s): [ Set::Scalar - basic set operations - metacpan.org ]
[21:08:59] <Grinnz> https://metacpan.org/pod/Set::Object if they could be scalars or references
[21:08:59] <Paperbot_> Link title(s): [ Set::Object - set of objects and strings - metacpan.org ]
[21:10:02] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[21:10:13] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[21:11:53] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[21:17:28] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:17:48] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Read error: Connection reset by peer)
[21:18:03] *** Quits: tobybl_ (~tobybl@237.202.200.146.dyn.plus.net) (Remote host closed the connection)
[21:18:45] *** Joins: lucasb (uid333435@id-333435.hampstead.irccloud.com)
[21:19:13] <skrzyp> LeoNerd: Would you mind updating docs for Tickit, please? The first example in first Tickit POD is failing for me, and while I can debug that on my own it's not making first impression any good :)
[21:19:47] <skrzyp> (perl 5.34.0, macos 12.1/m1, installed via `cpm install Tickit`)
[21:19:49] <skrzyp> % perl -I$PWD/local/lib/perl5 tester.pl
[21:19:51] <skrzyp> Applying legacy direct pen attribute 'bg' for Tickit::Widget::Static at tester.pl line 34.
[21:19:53] <skrzyp> Applying legacy direct pen attribute 'bg' for Tickit::Widget::Box at tester.pl line 34.
[21:19:55] <skrzyp> The 'child' constructor argument to Tickit::Widget::Box is no longer recognised; use ->set_child instead at tester.pl line 34.
[21:20:04] *** Joins: jplesnik (~jplesnik@83.240.61.101)
[21:20:16] *** Quits: jplesnik (~jplesnik@83.240.61.101) (Client Quit)
[21:20:28] <skrzyp> (don't mind linenos, I added some other code on my own, but fails in bare example as well)
[21:30:36] *** Joins: krismatrix (~krismatri@38.80.149.51)
[21:30:37] *** Quits: henry40408 (~henry4040@175.181.188.127) (Remote host closed the connection)
[21:31:13] *** Joins: henry40408 (~henry4040@175.181.188.127)
[21:34:10] *** Quits: krismatrix (~krismatri@38.80.149.51) (Remote host closed the connection)
[21:36:30] <TieUpYourCamel> Ugh... hours of debugging to find out that my problem stems from two CPAN modules that have functions with the same name.
[21:36:56] <TieUpYourCamel> List::MoreUtils and Excel::ValueReader::XLSX
[21:38:44] *** Parts: art1 (~romeyke@p200300ccdf059600628c41b0c57c0991.dip0.t-ipconnect.de) ()
[21:39:12] <TieUpYourCamel> s/two/fact that i am using two/
[21:39:28] <TieUpYourCamel> they both have a function called "first_index"
[21:39:35] <skrzyp> OTOH, it looks like there's not much options for full featured Perl GUIs on desktop today. Even more, I can't find one which could run on regular macOS
[21:40:46] <ilmari> TieUpYourCamel: I see no mention of first_index in the XLSX module... https://github.com/damil/Excel-ValueReader-XLSX/search?q=first_index
[21:40:46] <Paperbot_> Link title(s): [ Search · first_index · GitHub ]
[21:40:50] <rewt> i've used Tkx for guis on windows and linux, should work on macos too
[21:41:58] <TieUpYourCamel> ilmari hmmm... well i'm still investigating.
[21:42:47] <TieUpYourCamel> adding "List::MoreUtils" to the function call seemed to fix it, but now it doesn't.  So i'm back to head banging.
[21:47:36] <TieUpYourCamel> oh I think I see it now.  List::MoreUtils exports nothing by default.
[21:51:18] <ilmari> as it shouldn't
[21:51:19] <ology> https://metacpan.org/pod/Perl::Critic::Policy::Community::PreferredAlternatives#List::MoreUtils fwiw
[21:51:19] <Paperbot_> Link title(s): [ Perl::Critic::Policy::Community::PreferredAlternatives - Various modules with preferred alternati... ]
[21:51:49] <ilmari> yeah, I was going to mention that List::SomeUtils is preferred 
[22:13:57] <mjgardner> Highlighting members of the Perl family, part 1: https://phoenixtrap.com/2022/01/11/highlighting-members-of-the-perl-family/
[22:14:00] <Paperbot_> Link title(s): [ Highlighting members of the Perl family—The Phoenix Trap ]
[22:25:44] *** Joins: magla (~gelignite@55d42175.access.ecotel.net)
[22:26:49] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[22:28:00] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[22:31:40] * GumbyPAN CPAN Upload: Net-DNS-Resolver-Unbound-1.01 by RWF https://metacpan.org/release/RWF/Net-DNS-Resolver-Unbound-1.01
[22:45:36] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[22:46:11] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-198.dsl.bell.ca)
[22:51:25] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-198.dsl.bell.ca) (Ping timeout: 240 seconds)
[22:53:36] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[22:57:18] *** Joins: mexen (uid495612@user/mexen)
[23:00:45] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-25.dsl.bell.ca)
[23:01:29] <pragma-> seems incomplete
[23:02:42] <mjgardner> “the first in an occasional series”…
[23:02:53] <pragma-> oh
[23:06:55] <ether> nope, there's only 3 people in the perl community
[23:07:05] <ether> they all wear lots of hats and take on different names to keep up the illusion
[23:07:14] <revhippie> nobody here but us chickens
[23:08:40] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:09:35] <mjgardner> use Chicken:🐔:Chicken; # https://youtu.be/yL_-1d9OSdk
[23:09:35] <Paperbot_> YouTube video linked by mjgardner: Chicken chicken chicken - published by Yoram Bauman
[23:13:36] <Botje> chicken chicken, chicken *chicken* chicken? chicken _chicken_ chicken, chicken chicken chicken.
[23:18:14] <gloin> badger badger
[23:21:41] <ology> we don't need no steekning badgers!
[23:21:48] <ology> erf
[23:22:30] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 256 seconds)
[23:23:54] * ology remembers watching VHF with DrForr back at Databorg... Sigh.
[23:24:21] *** Joins: zakame (~zakame@user/zakame)
[23:24:23] <ology> UHF DAMMIT
[23:24:43] <gloin> mushroom!
[23:37:48] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Read error: Connection reset by peer)
[23:38:04] *** Joins: fstd (~fstd@xdsl-87-78-21-185.nc.de)
[23:40:01] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[23:41:25] *** Quits: veesh (~veesh@5.28.155.48) (Ping timeout: 240 seconds)
[23:43:08] *** Joins: hudo__ (~hudo@user/hudo)
[23:43:48] *** Joins: veesh (~veesh@5.28.146.32)
[23:44:03] * gloin remembers with fondness convincing people to watch that flash animation, telling them the punchline at the end was worth it. Not the same now that it's a YouTube video.
[23:44:13] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 240 seconds)
[23:48:27] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:52:39] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 250 seconds)
