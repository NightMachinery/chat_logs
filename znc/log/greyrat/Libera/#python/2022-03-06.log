[00:00:02] <theseb> SnoopJ: so that logic seems pretty solid as to why increasing batch size must harm accuracy
[00:00:09] *** Joins: sobkas (~sobkas@95.175.17.217)
[00:00:09] <SnoopJ> but yes, the batch size is kind of a "granularity" on the training process
[00:01:06] <SnoopJ> if there's a single piece of ML advice I can give you, it's that the field is split almost exactly evenly between "someone worked this out in the 1970s" and "we're making this up as we go and it's all heuristics"
[00:01:17] <SnoopJ> *especially* in non-academic contexts
[00:01:48] <theseb> SnoopJ: yea
[00:02:04] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[00:02:14] <SnoopJ> (people are making it up as they go in academia too, of course, but there are fewer pathological incentives to overrepresent the work as de rigueur)
[00:03:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:03:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:03:31] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:5c99:3fb5:4f54:3112) (Read error: Connection reset by peer)
[00:05:09] *** Quits: Linux77 (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4) (Quit: Bye, nice, gratefull)
[00:05:36] *** Quits: edd_lc (~edd_lc@85.65.219.112.dynamic.barak-online.net) (Ping timeout: 272 seconds)
[00:05:46] <EvilDMP> When using Sphinx autodoc to get docstrings into documentation, is there a way not to have to install every module that the code imports in the Sphinx environment too? It seems rather expensive to do all that installing, and I don't see why autodoc has to load the module it's documenting - can't it parse it for docstrings without doing thayt?
[00:06:31] <SnoopJ> EvilDMP, maybe it supports docstrings that are generated?
[00:06:44] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[00:06:54] <SnoopJ> (or docstrings on objects that are generated)
[00:06:55] <EvilDMP> SnoopJ: I don't follow, sorry
[00:07:01] *** Quits: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Ping timeout: 245 seconds)
[00:07:28] <SnoopJ> EvilDMP, not every object that will be in the module at runtime is immediately discernible from the module's syntax. Just parsing will necessarily miss anything like that
[00:07:30] <ChrisWarrick> EvilDMP: foo.__doc__ == bar.__doc__
[00:07:35] <ChrisWarrick> EvilDMP: uh, foo.__doc__ = bar.__doc__
[00:08:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[00:08:42] <SnoopJ> or even: `def func_factory(param): def func(): """blah blah""" do_something(param); return func;;  func1 = func_factory(42); func2 = func_factory(-1);`
[00:08:47] <not_not> wow
[00:08:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[00:08:54] <ChrisWarrick> EvilDMP: there are so many ways to mess with (a) what’s in a module (b) what’s something’s docstring that the only way to do it correctly is to run code
[00:10:50] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[00:11:45] <EvilDMP> ReadTheDocs must be executing a *vast* amount of code...
[00:12:58] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[00:13:24] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[00:15:13] <ChrisWarrick> mostly function/class definitions, so it isn’t as much as eg. github actions
[00:15:59] <jinsun> yeah normally the code doing real work is inside functions and methods, and that is not run when importing
[00:17:43] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:17:52] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[00:18:44] *** Joins: darksun (~darksun@user/darksun)
[00:19:10] *** Joins: oilt^ (~oilt@50.232.121.75)
[00:21:26] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[00:23:25] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[00:23:58] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[00:24:13] *** Joins: Deneb (~johnch@128.82.159.143.dyn.plus.net)
[00:25:04] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[00:28:00] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[00:29:22] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:fcd9:dcb7:2188:1348) (Remote host closed the connection)
[00:29:46] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:4dcf:37f8:1201:77c6)
[00:32:25] *** Joins: parv (~quass@user/parv)
[00:33:49] *** runelind_ is now known as runelind
[00:36:00] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[00:36:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[00:37:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:37:26] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:37:53] *** Joins: georgeisbot (~georgeisb@144.202.103.167)
[00:38:25] *** Joins: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de)
[00:39:07] *** Quits: notevil (~notevil@user/notevil) (Quit: ZNC 1.8.2 - https://znc.in)
[00:40:10] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[00:40:20] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[00:40:31] *** Quits: beanzilla (beanzilla@user/beanzilla) (Quit: ZNC 1.8.2 - https://znc.in)
[00:40:45] *** Joins: onichomp (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1)
[00:41:17] *** Quits: georgeisbot (~georgeisb@144.202.103.167) (Remote host closed the connection)
[00:42:20] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[00:42:32] *** Quits: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de) (Client Quit)
[00:43:29] *** Joins: marcello42 (~mp@p200300dfaf10fe010e3892c3ca815872.dip0.t-ipconnect.de)
[00:45:30] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[00:45:50] *** Joins: cruncher (~cruncher@79.116.64.92)
[00:45:55] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[00:46:02] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2)
[00:49:09] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[00:51:10] *** Joins: gitly (~gitly@148.252.132.255)
[00:51:27] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c137:5b23:feaf:eefd) (Ping timeout: 256 seconds)
[00:52:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:52:12] *** Quits: bloody (~bloody@user/bloody) (Ping timeout: 240 seconds)
[00:52:35] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[00:53:42] *** Quits: fflam_ (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.4)
[00:53:45] *** Joins: shabius (~shabius@2a0e:1c80:1:1041::1007)
[00:54:12] *** Quits: twobitsprite (~twobitspr@gateway/vpn/pia/twobitsprite) (Quit: leaving)
[00:54:57] *** Joins: tga (~tga@p54a75da2.dip0.t-ipconnect.de)
[00:54:58] *** Quits: tga (~tga@p54a75da2.dip0.t-ipconnect.de) (Changing host)
[00:54:58] *** Joins: tga (~tga@user/tga)
[00:55:30] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[00:56:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[00:57:23] *** Quits: paul424 (~tom@ip-5-172-235-17.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:58:09] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[00:58:47] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:00:41] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:00:45] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:01:12] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[01:01:24] *** Quits: AkechiShiro (~licht@user/akechishiro) (Ping timeout: 240 seconds)
[01:01:28] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[01:01:52] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:a53c:1629:19ad:b370)
[01:02:12] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[01:02:29] *** Joins: AkechiShiro (~licht@user/akechishiro)
[01:06:17] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 240 seconds)
[01:07:11] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[01:07:57] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 240 seconds)
[01:08:16] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48b2jd1mh9yvk0u.ipv6.telus.net)
[01:08:30] *** Joins: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[01:09:35] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:11:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:12:57] *** Joins: runelind (~runelind@user/runelind)
[01:13:22] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[01:13:50] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[01:14:31] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:14:48] *** Joins: zebrag (~chris@user/zebrag)
[01:16:08] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:16:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[01:16:44] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[01:17:06] *** Quits: shabius (~shabius@2a0e:1c80:1:1041::1007) (Quit: Leaving)
[01:18:55] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-58.range86-168.btcentralplus.com) (Quit: Leaving.)
[01:19:11] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[01:20:07] *** Quits: ThePhilgrim (~ThePhilgr@151.41.9.171) (Quit: ThePhilgrim)
[01:20:42] *** Quits: Deneb (~johnch@128.82.159.143.dyn.plus.net) (Quit: Leaving)
[01:21:15] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[01:21:17] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[01:22:17] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 256 seconds)
[01:23:30] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[01:26:32] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[01:26:45] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[01:27:26] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[01:29:20] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f783) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:29:23] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[01:30:01] *** Joins: darksun (~darksun@user/darksun)
[01:30:01] *** Joins: jazzy (~jaziz@user/jaziz)
[01:30:41] *** Joins: tableflipper (~tableflip@121.99.197.93)
[01:31:07] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 256 seconds)
[01:32:04] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[01:33:37] *** Quits: tableflip (~tableflip@121.99.197.93) (Ping timeout: 240 seconds)
[01:35:20] *** Joins: willow (~willow@user/willow)
[01:36:12] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[01:36:42] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[01:36:52] *** Joins: crashrep (~crashrep@user/crashrep)
[01:37:02] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[01:37:10] *** Joins: Syzygy_ (~Syzygy@178-190-83-4.adsl.highway.telekom.at)
[01:37:12] *** Quits: andreasbuhr (~quassel@p548dd8d5.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:37:16] <willow> does a regex searchall or match provide an index of where match(es) occur in the search string?
[01:37:17] *** Joins: runelind (~runelind@user/runelind)
[01:39:19] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[01:39:47] *** Quits: Syzygy (~Syzygy@2001:871:265:1cdc:3c68:34fe:80ab:a3c4) (Ping timeout: 252 seconds)
[01:39:50] <willow> i'm doing some multi-line stuff and wondering if it's better to iterate through each individual line to find matches and obtain their indices, or just slurp the whole file as a string and do multi-line regexes.   it seems like it would be more efficient to parse file a line at a time, if it's possible to obtain indexes of each match...
[01:39:51] <SnoopJ> willow, Match objects contain that information, so any method that returns them will make it available to you. I don't know what searchall() is, but if you mean findall() the answer is no (it returns a list of strings)
[01:40:10] <willow> SnoopJ: sorry i meant findall
[01:40:24] <KirkMcDonald> But you can use finditer() to get match objects.
[01:40:32] <SnoopJ> yea, finditer() is usually what you use instead
[01:40:53] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:41:14] * SnoopJ scowls that `re`'s API
[01:41:51] <KirkMcDonald> The re module is a good example of an API with the accumulation of history in back of it, heh.
[01:41:54] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[01:42:04] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[01:42:13] *** Joins: palasso (~palasso@user/palasso)
[01:43:41] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[01:44:36] <willow> print(re.findall(REGEX, search_string))   doesn't provide any sort of index information on the matches, just the matches themselves
[01:44:52] <SnoopJ> correct
[01:45:13] <willow> ok, well i think slurping the whole file into a string and using re.MULTILINE makes more sense then
[01:45:26] <KirkMcDonald> willow: Or use re.finditer()
[01:45:30] <SnoopJ> you can do `list(re.finditer(REGEX, search_string))` if you want a list of Match objects
[01:45:33] <SnoopJ> or just iterate the result of finditer()
[01:45:40] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[01:45:53] <SnoopJ> findall() is unfortunately just idiosyncratic, and the bad behavior isn't documented to boot
[01:46:23] <KirkMcDonald> It isn't? The documentation seems reasonably clear.
[01:46:41] <SnoopJ> KirkMcDonald, if you knew about Match objects, what would you think "a list of all non-overlapping matches" means?
[01:46:56] <SnoopJ> I certainly would not think it means "a list of strings"
[01:46:59] <KirkMcDonald> "... as a list of strings or tuples."
[01:47:15] <SnoopJ> hmm am I looking at an old version
[01:47:18] <KirkMcDonald> There are even examples.
[01:47:24] <KirkMcDonald> https://docs.python.org/3/library/re.html#re.findall
[01:47:26] <willow> oh yeah, with finditer() i see:  <re.Match object; span=(261, 276), match='search_string'>    cool
[01:47:34] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[01:47:43] <SnoopJ> KirkMcDonald, sorry, I mean the pydoc documentation.
[01:47:53] <KirkMcDonald> Ah, pydoc.
[01:47:53] <SnoopJ> the online documentation is more helpful, as you say
[01:47:55] <willow> so 261 and 276 are the indices.  👍
[01:48:06] <SnoopJ> (I've never really understood why CPython ships worse documentation to the place that needs it?)
[01:48:20] <KirkMcDonald> willow: Yes. The match object has various methods for accessing these values.
[01:48:25] <willow> thank you all!
[01:48:35] <KirkMcDonald> e.g. https://docs.python.org/3/library/re.html#re.Match.span
[01:48:47] *** Quits: pkapp_ (~pkapp@2601:58c:c500:6900:d850:a28a:db91:bb4b) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[01:49:02] <willow> KirkMcDonald: right.  i just wasn't sure how to get these span values from a search.
[01:49:02] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[01:49:49] <SnoopJ> you can't do it at all if you don't have a Match object, short of basically repeating the work of the search. But when you want rich contextual information, you have to use one of the functions that gives you results as Match objects
[01:50:39] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[01:51:15] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[01:51:23] <willow> i'm thinking about what is most efficient if you have e.g. an extremely long file you need to do matches on.  rather than slurping the whole thing and searching it, it seems more efficient to search for the smallest pieces possible and obtain their indexes, then go back and look for other pieces as necessary
[01:51:55] *** Joins: tijuco (~tijuco@user/tijuco)
[01:52:26] *** Quits: NeoCore (~neocore@138.199.47.164) (Quit: Leaving)
[01:52:27] <willow> i could see where complex multi-line match expressions could consume resources on huge files
[01:52:55] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:53:12] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[01:53:35] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 240 seconds)
[01:53:43] <parv> What is "huge" in your case?
[01:53:46] <SnoopJ> being multi-line doesn't change the nature of the problem very much, a newline is "just" another kind of character
[01:54:00] <SnoopJ> but it's easy to write expensive regexes, to be sure
[01:54:08] <willow> i sometimes wonder why Unix daemons don't use databases as their storage paradigm over flat text files.  for example, imaging BIND with a large number of domains
[01:54:20] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[01:54:45] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[01:54:53] <SnoopJ> only-half-cheeky answer: what is a filesystem if not a database
[01:55:01] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[01:55:19] <willow> parv: in actual use, the file is relatively small.  but i can imagine some enterprise situation where the file is 10K lines
[01:55:27] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[01:55:44] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[01:56:01] <KirkMcDonald> 10k is still not very large. It is still small enough that the program can load the entire thing into memory and just put it into a hash table, or whichever kind of structure it finds most efficient.
[01:56:11] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:56:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:56:17] <KirkMcDonald> In which case a flat text file is as reasonable as anything.
[01:56:19] <willow> the insanity of writing complex regexes to process huge BIND zone files vs. doing very easy database inserts.
[01:56:33] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[01:56:42] *** Joins: gentooclimax (~gentoocli@2a02-8440-3141-9736-c805-f707-a5cc-8552.rev.sfr.net)
[01:56:56] *** Joins: darksun (~darksun@user/darksun)
[01:57:01] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[01:57:11] <SnoopJ> they're not always the best choice, sometimes they're an extremely poor one
[01:57:12] <KirkMcDonald> Maybe. I probably would not do this sort of thing with regexes. Rather, I would put the file into some more structured format.
[01:57:25] <SnoopJ> (which naturally does not stop anyone from using them!)
[01:57:36] <willow> you *can* do it with regexes on a text file, but it seems wrong for zone entries not to simply be database records, which makes their management trivial even for huge numers of records
[01:58:18] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[01:58:20] <KirkMcDonald> It could e.g. be a JSON file. Or YAML. Or one of the innumerable serialization formats that exist.
[01:58:30] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 252 seconds)
[01:58:44] <KirkMcDonald> Or even a custom config file format.
[01:59:08] *** Joins: tijuco (~tijuco@user/tijuco)
[01:59:24] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[01:59:37] <KirkMcDonald> Text files are part of the ancient ways of Unix, and at least have the advantage that you can just edit the thing with your usual text editor.
[01:59:42] <willow> yes but if your JSON/YAML parsing code breaks...    database records are so much less brittle.
[01:59:48] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c5b5:e915:429b:2fcc)
[02:00:05] <KirkMcDonald> If it breaks then the thing complains on loading the file, and you fix it.
[02:00:06] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[02:01:06] <willow> i don't know.  i'd rather have my zone file entries accessible via  a db than in json/yaml format
[02:01:24] <willow> anyhow 😉
[02:01:45] <KirkMcDonald> How do you edit the database, in this context? Also: Such text files have the additional useful property that you can put them in version control.
[02:02:03] <nedbat> also: grep
[02:02:12] <SnoopJ> Important to remember the historical context, too. It's why what I said earlier is only half-cheeky. "Database" as you're using it here is a pretty modern notion.
[02:02:29] <willow> grep becomes SELECT
[02:02:44] <SnoopJ> Although some early filesystems amusingly were record-oriented, so indeed, a FS is a kind of DB
[02:02:58] <KirkMcDonald> There are also fancier configuration systems like jsonnet, which allow defining hierarchies of configurations which might match complexities in a production environment.
[02:02:58] <SnoopJ> (if not one that is particularly helpful in this specific problem)
[02:03:29] <KirkMcDonald> And that sort of thing can be difficult to express in an RDBMS.
[02:03:48] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[02:04:07] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[02:04:21] *** Joins: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732)
[02:04:22] *** Joins: irf21k (~irf21k@223.186.85.106)
[02:04:57] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[02:05:01] <willow> databases might be easier to access on the backend with microservices that are used to administer the services
[02:05:17] *** Quits: haslo (uid390999@id-390999.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:05:18] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[02:05:19] *** Joins: lastshell (~lastshell@user/lastshell)
[02:05:28] <KirkMcDonald> Easier than what? A file that is deployed with the rest of the code?
[02:06:11] <KirkMcDonald> If the database is a separate service (and not, say, a sqlite file deployed alongside the rest of the thing), then that's also a whole new moving part to maintain.
[02:06:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:07:11] <KirkMcDonald> In fact, it's probably *several* moving parts, since configuration is the sort of thing that you'll want to be different between your different environments (dev, staging, prod, etc).
[02:07:54] <KirkMcDonald> So now you're talking about a different configuration database for each of these... which in turn implies having some sort of configuration to select which configuration database to look at. And how to connect to it.
[02:08:36] *** Joins: blackpill0w (blackpill0@gateway/vpn/protonvpn/blackpill0w)
[02:08:38] <KirkMcDonald> Because, in truth, it's not that unusual to have different sorts of configuration options defined in different ways.
[02:09:00] <KirkMcDonald> Depending on which aspects of the system need them, and how and why those options might change.
[02:09:24] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[02:09:46] <KirkMcDonald> Oh, which brings in what might be the biggest problem with database-defined configuration, which is that if you have a centralized database for your configuration options, then suddenly those options are global.
[02:10:07] <KirkMcDonald> You can't stage a deployment with some portion in one configuration and another portion with another.
[02:10:13] <KirkMcDonald> Which can be *intensely* useful.
[02:10:21] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[02:10:22] *** Quits: oilt^ (~oilt@50.232.121.75) (Ping timeout: 272 seconds)
[02:10:36] *** Quits: gentooclimax (~gentoocli@2a02-8440-3141-9736-c805-f707-a5cc-8552.rev.sfr.net) (Ping timeout: 252 seconds)
[02:12:26] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[02:12:26] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[02:12:28] *** Joins: oilt^ (~oilt@50.232.121.75)
[02:12:32] *** Parts: qurls (~user@47.200.190.217) (ERC (IRC client for Emacs 27.2))
[02:13:50] <willow> well make it so that only the daemon (such as BIND) itself has access to its db, and it provides an API for doing search|add|remove|update of records?
[02:13:51] *** Quits: blackpill0w (blackpill0@gateway/vpn/protonvpn/blackpill0w) (Quit: Leaving)
[02:14:04] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[02:14:26] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[02:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:09] <KirkMcDonald> willow: Mostly I think using a DB is overcomplicated. But I think the important thing, when talking about configuration is *scope*.
[02:15:09] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.3)
[02:15:16] <willow> so whatever the daemon does in terms of storing, managing, accessing its db is invisible to the user?
[02:15:41] *** Joins: readytheory (~user@ip24-252-15-245.om.om.cox.net)
[02:15:56] <KirkMcDonald> E.g. if you have a config file that is read on startup and deployed with the code, that implies that changes to the config are scoped to versions of your deployment; you have to re-deploy the code in order to change the config.
[02:16:06] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[02:16:10] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:26] *** Joins: favreje (~jeff@170.249.173.67)
[02:16:27] <KirkMcDonald> On the other hand, if you have command-line options, then changes are scoped to the startup of the application. You can change them by just restarting the code, no deployment required.
[02:16:52] <KirkMcDonald> It is not unusual to want both, for different purposes.
[02:17:26] <shailangsa> does anybody know whether it's normal to perceive source code and code bases as improper and unconventional despite the owners of the source code following the best programming practices and making it easy to understand?
[02:18:10] <KirkMcDonald> shailangsa: This is purely a judgment call.
[02:18:21] <KirkMcDonald> shailangsa: It's hard to answer that in the abstract.
[02:18:22] <SnoopJ> one motivated very much by the aesthetics of the observer
[02:18:46] <shailangsa> ?
[02:19:20] <KirkMcDonald> shailangsa: "Improper and unconventional" is a matter of personal aesthetics.
[02:20:01] <KirkMcDonald> (For that matter, so are "best practices.")
[02:20:26] <SnoopJ> (which practices? which conventions? which standards of propriety?)
[02:20:41] <KirkMcDonald> (Not to mention "easy to understand.")
[02:20:51] <willow> KirkMcDonald: thank you for the explanations.  a lot to ponder...
[02:20:54] <SnoopJ> shailangsa, I would say that given any bit of source code, any possible set of opinions about that code is something I would expect *some* reader to have.
[02:20:58] <shailangsa> dont see why generics in java is used in some libraries the way they're used though
[02:22:42] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 265 seconds)
[02:24:16] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[02:25:55] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[02:26:07] *** Joins: rvalue (~rvalue@user/rvalue)
[02:26:08] *** Quits: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net) (Quit: Client closed)
[02:27:00] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Ping timeout: 240 seconds)
[02:27:59] *** Joins: bloody (~bloody@user/bloody)
[02:28:10] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[02:28:53] *** white_rose[m] is now known as whiterose[m][m]
[02:30:11] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[02:30:28] *** whiterose[m][m] is now known as white_rose[m]
[02:31:04] <ChrisWarrick> shailangsa: which uses do you have in mind?
[02:31:12] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[02:31:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:31:49] <shailangsa> it seems with java why generics is used in some libraries the way they're used though
[02:33:36] <readytheory> anyone here have experience collecting performance metrics from python programs into prometheus or similar?  I'm specifically thinking about short-lived ETL jobs running in containers.
[02:36:25] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:36:31] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:37:22] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:f061:74c8:3357:e997)
[02:37:23] <SnoopJ> readytheory, I have not, but if there's any follow-up question for someone who might say "yes" I encourage you to ask that one too
[02:37:24] *** Quits: tga (~tga@user/tga) (Ping timeout: 256 seconds)
[02:38:15] *** Parts: ACfromTX (~acroft@47-219-46-13.tyrmcmtk01.res.dyn.suddenlink.net) (Have a good one.)
[02:38:32] *** Quits: jay-m126_ (~jay-m@154.72.150.211) (Ping timeout: 256 seconds)
[02:38:32] *** Quits: jay-m126 (~jay-m@154.72.150.211) (Ping timeout: 256 seconds)
[02:39:05] <jfb4> I'm building a module iteratively, used as "import mylib" say.  After adding a new function f1 to mylib, and rerunning "import mylib", python won't find the new function f1 - (""module mylib has no attribute f1"")unless I restart python.  Is there a more effective way?
[02:39:40] *** Quits: jay-m1261 (~jay-m@154.72.150.211) (Ping timeout: 256 seconds)
[02:40:27] *** Joins: jay-m126 (~jay-m@129.0.76.220)
[02:40:35] *** Joins: jay-m126_ (~jay-m@129.0.76.220)
[02:40:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[02:41:12] <Repiphany> jfb4: `importlib.reload(mylib)`
[02:41:19] <Repiphany> `import importlib` first
[02:42:00] <SnoopJ> note that this can be kinda unreliable, so restarting Python is often less of a gamble
[02:42:12] *** Joins: Guest63 (~Guest63@2001:9e8:e69e:2900:5887:8a67:1b69:fd8c)
[02:42:32] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[02:42:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[02:43:20] <jfb4> Repiphany, SnoopJ : thank you!!
[02:43:32] *** Joins: Adoi (~Adoi@user/adoi)
[02:43:37] *** Quits: Guest63 (~Guest63@2001:9e8:e69e:2900:5887:8a67:1b69:fd8c) (Client Quit)
[02:43:50] *** Joins: Guest63 (~Guest63@2001:9e8:e69e:2900:5887:8a67:1b69:fd8c)
[02:43:54] <SnoopJ> jfb4, I've done this sort of thing in JupyterLab before, defining the functionality I'm working on in an input cell and re-running it when I change the definition, then eventually copying that into the module
[02:43:59] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[02:44:01] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[02:44:03] *** Quits: murdoc_x01 (~nitestryk@98.42.49.72) (Remote host closed the connection)
[02:44:11] *** Quits: Guest63 (~Guest63@2001:9e8:e69e:2900:5887:8a67:1b69:fd8c) (Client Quit)
[02:44:13] <hams> https://imgur.com/a/mrOqrJV any ideas why i get this error?
[02:44:21] *** Joins: Guest63 (~Guest63@2001:9e8:e69e:2900:5887:8a67:1b69:fd8c)
[02:45:39] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:45:48] *** Quits: jay-m126 (~jay-m@129.0.76.220) (Ping timeout: 240 seconds)
[02:45:48] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[02:45:54] *** Quits: jay-m126_ (~jay-m@129.0.76.220) (Ping timeout: 256 seconds)
[02:46:27] <SnoopJ> hams, you're passing "coerse" intead of "coerce"
[02:46:49] *** Joins: jay-m126 (~jay-m@129.0.76.223)
[02:47:00] *** Joins: jay-m126_ (~jay-m@129.0.76.223)
[02:47:09] <SnoopJ> https://github.com/pandas-dev/pandas/blob/main/pandas/_libs/tslibs/strptime.pyx#L87
[02:47:21] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[02:47:34] *** Joins: Guest6385 (~Guest63@2001:9e8:e69e:2900:5887:8a67:1b69:fd8c)
[02:48:03] *** Joins: uxemacs (~timothy@2607:fb90:7e83:9e2d::164)
[02:48:30] <SnoopJ> seems like pandas enjoys asserting things without error messages in places where the traceback won't be any help :/
[02:48:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[02:48:45] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2) (Ping timeout: 256 seconds)
[02:48:45] *** Quits: emerent (~quassel@p200300cd570c2158ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:49:17] *** Joins: emerent (~quassel@p200300cd5743c315ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:50:10] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[02:50:13] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[02:51:39] *** Quits: Guest6385 (~Guest63@2001:9e8:e69e:2900:5887:8a67:1b69:fd8c) (Client Quit)
[02:51:55] *** Joins: jay-m1261 (~jay-m@129.0.76.223)
[02:53:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:53:23] <nedbat> jfb4: be careful about defining classes in that module
[02:53:39] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:54:21] <hams> lololol
[02:54:26] <hams> SnoopJ, ty lol
[02:54:40] <jfb4> nedbat: what's the catch?
[02:54:42] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[02:55:09] <Lando-SpacePimp> baseball glove, jfb4
[02:56:07] *** Joins: notevil (~notevil@user/notevil)
[02:56:13] *** Quits: notevil (~notevil@user/notevil) (Remote host closed the connection)
[02:56:21] *** Quits: Guest63 (~Guest63@2001:9e8:e69e:2900:5887:8a67:1b69:fd8c) (Ping timeout: 256 seconds)
[02:56:47] <SnoopJ> jfb4, see the bottom of the documentation on reload(): https://docs.python.org/3/library/importlib.html#importlib.reload
[02:56:48] *** Joins: notevil (~notevil@user/notevil)
[02:57:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[02:57:57] <foo> Bah, getting this error trying to install psycopg error: command 'x86_64-linux-gnu-gcc' failed: No such file or directory
[02:58:00] * foo investigates
[02:58:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[02:58:15] <foo> Actually, I probably want psycopg2-binary
[02:58:55] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[02:59:03] <nedbat> jfb4: if you create an object from a class, the change the class code and reload the module, the old objects will still use the old code
[02:59:26] <SnoopJ> foo, if this is Ubuntu/Debian, that should be provided by one of the gcc packages
[03:01:37] *** Joins: arinov (~arinov@178.240.182.179)
[03:01:38] *** Quits: irf21k (~irf21k@223.186.85.106) (Read error: Connection reset by peer)
[03:02:17] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[03:03:44] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[03:03:46] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[03:06:15] *** Joins: martums59 (~martums@user/martums)
[03:06:23] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:07:05] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:07:33] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[03:07:43] <foo> SnoopJ: thank you
[03:07:54] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:08:00] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[03:09:14] *** Joins: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:479d:899:a3ae:fe9d)
[03:09:38] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:09:38] *** CodeMouse92 is now known as Guest5228
[03:09:46] *** Quits: jay-m1261 (~jay-m@129.0.76.223) (Ping timeout: 260 seconds)
[03:09:54] *** Quits: jay-m126_ (~jay-m@129.0.76.223) (Ping timeout: 272 seconds)
[03:09:54] *** Quits: jay-m126 (~jay-m@129.0.76.223) (Ping timeout: 272 seconds)
[03:10:14] *** Quits: arinov (~arinov@178.240.182.179) (Ping timeout: 260 seconds)
[03:10:14] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[03:11:25] *** Quits: luva (~luva@185.168.9.231) (Ping timeout: 240 seconds)
[03:11:55] *** Joins: luva (~luva@37.120.197.45)
[03:12:44] *** Joins: jl (~jl@user/jl)
[03:13:37] *** Joins: white2 (~mahengrui@user/mahengrui1)
[03:13:53] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[03:13:58] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[03:14:14] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[03:15:00] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[03:19:00] *** Guest5228 is now known as CodeMouse92
[03:19:13] *** Quits: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:479d:899:a3ae:fe9d) (Changing host)
[03:19:13] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[03:20:05] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[03:20:17] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[03:20:54] <parv> I am using "logging" & "requests" modules. How should I silence debug logging from "urllib3.connectionpool"?
[03:20:54] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:22:44] <willow> just one thing i wanted to add about the idea of having daemons being 'aware' of the entities they are responsible for managing/controlling: if you look at popular libraries for managing e.g. BIND, what's the first thing these libraries do?  they create an abstraction of a zone record, usually an object or similar structure.   so it begs the question, why doesn't BIND itself implement the abstraction and
[03:22:44] <willow> provide access via setters/getters?
[03:22:52] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[03:22:59] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[03:23:24] *** Joins: vollkornbrot (~vollkornb@p4ff6c32e.dip0.t-ipconnect.de)
[03:24:28] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Ping timeout: 272 seconds)
[03:25:09] *** Joins: TheCat (~Z-cat@user/z-cat)
[03:25:36] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[03:25:50] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48b2jd1mh9yvk0u.ipv6.telus.net) (Ping timeout: 250 seconds)
[03:26:28] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 268 seconds)
[03:27:18] *** Quits: vollkornbrot (~vollkornb@p4ff6c32e.dip0.t-ipconnect.de) (Quit: Quit)
[03:27:33] *** Joins: mythos (~mythos@user/mythos)
[03:28:12] <ChrisWarrick> willow: BIND is a C program, and it doesn’t care about Python and its OOP view of the world.
[03:28:16] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 245 seconds)
[03:30:02] *** Quits: waxfire6 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:14] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[03:30:27] *** Quits: JC5 (~X@user/jc5) (Quit: Bye)
[03:30:33] *** Joins: KombuchaKip (~kip@192.252.230.5)
[03:30:49] <SnoopJ> willow, that's a better question for #linux than #python
[03:30:53] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[03:31:29] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[03:31:44] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:31:56] <mythos> hiho. printf bytes is easy and results in a really nice string represenation like b'a\x00\x01c' which is useful for python code. but is there a formatted bytes parse that can create a bytes object from that string (with or without b)?
[03:33:01] <mythos> i could just iterate over that string and replace those \x.. myself. but maybe there is something handy already
[03:33:03] <SnoopJ> mythos, ast.literal_eval()
[03:33:06] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[03:33:22] <mythos> SnoopJ, will try it right away :D
[03:33:37] *** Quits: cruncher (~cruncher@79.116.64.92) (Ping timeout: 240 seconds)
[03:34:05] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[03:34:06] <SnoopJ> mythos, however, if you're storing the repr() of an object and trying to deserialize it, that's probably a sign that you should reconsider what you're doing and come up with something more formal
[03:34:55] <mythos> SnoopJ, it is just for easy copy paste. i also have a json representation already. but thought it would be need to use those python bytestrings
[03:35:05] <mythos> *neat
[03:35:40] * SnoopJ would probably store data like that in a base64 encoded string
[03:36:08] <mythos> needs to stay human readable as much as possible
[03:36:20] <mythos> but yes, b64 is always nice
[03:36:39] <ChrisWarrick> utf-7 then?
[03:36:39] <mythos> just throw b64 at any problem. looks so much cooler :)
[03:37:13] *** Joins: Z-cat (~Z-cat@user/z-cat)
[03:38:15] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[03:39:01] *** Quits: TheCat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[03:39:16] *** Joins: shaan150 (~shaan150@host62-7-180-55.range62-7.btcentralplus.com)
[03:39:30] <shaan150> hi all
[03:39:49] <shaan150> i've got an issue where my while loop appears to freeze, and doesn't move or display anything afterwards
[03:40:06] <mythos> SnoopJ, thx! it's working like a charme
[03:40:24] <shaan150> it just displays the print statement in it once
[03:40:35] <Adoi> hello, in the first reply here; https://stackoverflow.com/a/419185, the author explains why "__name__=main" is used, by stating that "Your module is only used as a main program, but it has some unit tests, and the testing framework works by importing .py files like your script and running special test functions. You don't want it to try running the script just because it's importing the module."
[03:40:36] <SnoopJ> shaan150, perhaps you can show us the code at https://bpa.st
[03:40:51] <Adoi> this is very confusing to me
[03:40:52] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[03:41:09] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[03:41:09] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[03:41:25] <shaan150> snoopj, it's here https://bpa.st/QGEA
[03:42:03] <shaan150> the particular issue is line 421& 76
[03:42:07] *** Quits: onichomp (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1) (Read error: Connection reset by peer)
[03:42:16] <shaan150> the recieve methods
[03:42:40] <Adoi> if I am using this convention in the code, and use it as the main program, then it means all my code is supposed to be under "if  __name__= main:" block, as I understand. in which case I dont see how I separately import part of it.
[03:42:44] *** Joins: onichomp (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1)
[03:42:49] *** Quits: favreje (~jeff@170.249.173.67) (Ping timeout: 256 seconds)
[03:43:07] *** Joins: blackout69 (~blackout6@37.183.230.121)
[03:43:19] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[03:43:43] <Adoi> and then comes the last sentence in the comment, which is altogether contrary to the former comments above, as if I do these in order to avoid running the script.
[03:43:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:44:44] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48b2jd1mh9yvk0u.ipv6.telus.net)
[03:44:44] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[03:45:20] <BrenBarn> you wouldn't put all your code under the if-name-main block
[03:45:39] <BrenBarn> typically you put almost all the code outside the block, and in the block you just put a small bit that runs the rest
[03:45:49] <BrenBarn> e.g., by calling some kind of "main" function
[03:46:02] <SnoopJ> shaan150, my guess would be that the recv() call at Line 428 is blocking forever waiting for data from the server. You could test that by putting some print() messages before/after it
[03:46:03] <Adoi> but it says ""Your module is only used as a main program"
[03:46:53] <Adoi> and if I put part of it under "main", then this will be the part that is going to be skipped if it is imported by another program, right?
[03:46:56] <BrenBarn> that is prefaced by a thing saying "here are some reasons why you might want to do this"
[03:46:57] <SnoopJ> Adoi, when a Python module is being run (for any reason), the variable __name__ is set. It has the special value "__name__" if the module is where the Python runtime starts out
[03:47:34] <SnoopJ> so if you put code in an `if __name__ == "__main__":` block, it will only be run if someone did `python3 yourmodule.py`
[03:47:38] <BrenBarn> i.e., it's not saying "it is a fact that your module is only used as a main program", it's saying "one of many reasons you might want to do this is IF your module is only used as a man program, but blah blah"
[03:47:58] <BrenBarn> snoopj: you mean special value `__main__`
[03:48:07] <SnoopJ> yes, sorry
[03:48:08] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Quit: Lost terminal)
[03:48:31] <shaan150> snoopj, ah you're right
[03:48:43] <shaan150> How would i validate if there's no data left to come through
[03:48:45] <SnoopJ> shaan150, you might want to set a timeout on the socket
[03:48:57] <shaan150> Surely that would disconnect the user
[03:49:10] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[03:49:14] <SnoopJ> no, you can timeout the recv() without dropping the connection
[03:51:24] *** Quits: uxemacs (~timothy@2607:fb90:7e83:9e2d::164) (Ping timeout: 240 seconds)
[03:51:29] <shaan150> ah i see
[03:51:31] *** Joins: Joeee (~Joeee@188.252.198.59)
[03:51:31] *** Parts: Joeee (~Joeee@188.252.198.59) ()
[03:51:38] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 256 seconds)
[03:51:38] <shaan150> and i use try
[03:51:41] *** Joins: Joeee (~Joeee@188.252.198.59)
[03:51:48] *** Quits: readytheory (~user@ip24-252-15-245.om.om.cox.net) (Ping timeout: 240 seconds)
[03:52:16] <shaan150> That's actually soon help me quite a bit let me try it but you might've just saved my sanity
[03:53:09] *** Joins: uxemacs (~timothy@2607:fb90:7e83:9e2d::164)
[03:53:36] <SnoopJ> yep, you can catch the timeout exception
[03:54:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:57:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[03:58:50] <Adoi> yes, I am also talking about the above one particular reason why or how one would do that as the above comment states. yes, I am running it as a main program by typing  `python3 yourmodule.py`. that is fine. but the problem starts with the part which says "testing framework works by importing .py files like your script and running special test functions". how is this import happening when the code is in  "__name__ = main"? and, to make matters even more confusing,
[03:58:50] <Adoi> the last sentence refers to "avoiding running script" while importing the module?! if the module is a "main program only" how can we expect to run it at all by importing, let alone avoid the script? and did the previous sentence not refer to importing precisely that script and not the whole module?
[03:58:51] *** Quits: oriba (~oriba@dynamic-077-013-129-008.77.13.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:58:54] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[03:59:27] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[03:59:27] <Repiphany> You don't have any running code in the main body of the script, only definitions
[03:59:38] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:a53c:1629:19ad:b370) (Ping timeout: 250 seconds)
[03:59:39] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[03:59:51] <BrenBarn> what do you mean by "importing the script and not the whole module"?
[03:59:52] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[04:00:03] <Adoi> I mean the last sentence of the above quote
[04:00:41] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[04:00:46] <BrenBarn> I guess the SO answer does have some inconsistent terminology
[04:01:29] <BrenBarn> the idea is that typically your code will mostly consist of things like defining functions that are "safe" to do regardless of whether you are running the file as a script or importing it
[04:01:45] <BrenBarn> but there are some parts that you only want to do when running it as a script (and usually those parts involve calling the functions you defined)
[04:01:48] *** Parts: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Don't Panic.)
[04:01:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:02:12] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:02:15] <BrenBarn> so you put those parts (the parts you want to do only when the file is run directly, not when it's imported) into the if-name-main block
[04:03:17] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[04:03:21] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c5b5:e915:429b:2fcc) (Ping timeout: 252 seconds)
[04:03:48] <Adoi> but if, say, there is a unit test in the script, like the above comment refers to, I will not be able to use it in another script when I put it in the name-main block
[04:03:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[04:04:06] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Ping timeout: 256 seconds)
[04:04:11] <BrenBarn> as I and others have said repeatedly, you would not put it in the if-name-main block
[04:04:23] <Adoi> and if I put it outside of it, then I will not be able to use it in the main program itself
[04:04:28] <SnoopJ> Adoi, don't overthink it: how Python enters the module determines what value __name__ has before that module starts executing. From there, the normal rules about Python apply.
[04:04:45] <BrenBarn> why do you think you won't be able to use it in the main program?
[04:04:49] <SnoopJ> usually you define things in the part of the module that always runs, and *use* things in the guarded block
[04:05:01] <BrenBarn> the wording in that answer makes it sound like "running the script" and "importing the module" somehow do different things, but both of them run all the code in the file, the only difference is that like SnoopJ said, if you run it as a script a certain special variable called `__name__` is set to a special value `"__main__"`
[04:05:18] <BrenBarn> and your code can check that with an if to condition on whether it's being run as a script, but other than that it's the same
[04:06:56] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[04:07:05] *** Joins: beencubed (~beencubed@209.131.238.248)
[04:07:57] <BrenBarn> that is, the only reason different code runs in the two cases is if you make it that way by using ordinary flow control mechanisms (like an `if` that checks explicitly whether it's being run as a script)
[04:08:12] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:08:15] <parv> To mute debug output from "urllib3" module: https://stackoverflow.com/questions/11029717/how-do-i-disable-log-messages-from-the-requests-library  -- that is: logging.getLogger( 'urllib3' ).setLevel( logging.INFO )
[04:09:27] *** Joins: Naan` (~Naan@user/naan)
[04:09:34] <Adoi> I am not clear about this. and I think i will not be, not right now, at any rate
[04:10:00] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:10:00] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[04:11:02] <Adoi> if I can write it in the public area of the code, why is the talk about "some special script that you want to import separately" or one that "you would like to avoid running.." obviously some part to be guarded is meant
[04:11:20] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[04:11:54] <BrenBarn> the idea is that you have a file, and in that file are functions that do things
[04:12:08] <BrenBarn> sometimes you want to run that file and have it use those functions to do things in a way you predefine as part of that file
[04:12:38] <BrenBarn> but often you want to allow another file to import your file, and use those functions to do things in a different way that you did not specifically plan for
[04:12:56] <BrenBarn> and in that latter case, you don't want your file to also "use" the functions to do its predefined thing
[04:12:58] *** Joins: Tacoder (~DarkPsyde@2806:264:5482:9e0:813d:c1de:5748:988)
[04:13:13] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:13:27] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:13:27] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:13:43] *** Joins: foobaz2124846 (~foobaz212@213.205.198.216)
[04:13:43] *** Joins: foobaz212 (~foobaz212@213.205.198.216)
[04:13:56] <parv> That situation is calling out for the part to be used as library|module to be a module.
[04:14:12] <BrenBarn> it's not so much that some parts of the code are "public" and some are "private", but that some are defining behaviors and some are executing those behaviors
[04:14:18] <parv> Whole thing is fugly
[04:14:18] *** Quits: foobaz212 (~foobaz212@213.205.198.216) (Client Quit)
[04:14:18] *** Quits: foobaz2124846 (~foobaz212@213.205.198.216) (Client Quit)
[04:15:21] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 245 seconds)
[04:15:41] *** Joins: ejjfunky (~ejjfunky2@125.164.20.168)
[04:15:56] *** Joins: foobaz2124846 (~foobaz212@213.205.198.216)
[04:15:56] *** Joins: foobaz212 (~foobaz212@213.205.198.216)
[04:16:31] *** Joins: creedofnecessity (~creedofne@mobile-107-77-199-124.mobile.att.net)
[04:16:31] *** Quits: foobaz2124846 (~foobaz212@213.205.198.216) (Client Quit)
[04:16:31] *** Quits: foobaz212 (~foobaz212@213.205.198.216) (Client Quit)
[04:17:14] <Adoi> ok, I think I will forget about the whole topic and wait for it to clarify itself in time
[04:17:19] <Adoi> thank you all
[04:17:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[04:18:12] <foo> Is there anyway who thinks "None" is really needed here? user: User = ctx.get("user", None)
[04:18:21] <parv> (╯°□°）╯︵ ┻━┻
[04:18:54] *** Joins: wyclif (~wyclif@user/wyclif)
[04:19:57] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[04:20:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:20:30] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[04:21:34] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:22:06] *** Quits: akk (~akk@75.161.130.204) (Ping timeout: 260 seconds)
[04:23:22] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 272 seconds)
[04:23:28] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 250 seconds)
[04:24:08] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:26:18] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[04:26:30] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f97e:25ad:9b8c:d34e)
[04:26:53] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[04:28:51] *** Parts: Joeee (~Joeee@188.252.198.59) ()
[04:29:00] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 240 seconds)
[04:31:53] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:33:17] *** Joins: Wulf (~Wulf@user/wulf)
[04:35:23] *** Joins: tomg (~tomg@user/tomg)
[04:36:21] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[04:37:33] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48b2jd1mh9yvk0u.ipv6.telus.net) (Quit: Leaving)
[04:38:04] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:40:15] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[04:42:54] *** Joins: akk (~akk@75.161.130.204)
[04:44:17] *** Quits: uxemacs (~timothy@2607:fb90:7e83:9e2d::164) (Ping timeout: 240 seconds)
[04:46:40] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2)
[04:47:00] *** Joins: summersault (~summersau@179.221.251.36)
[04:47:05] *** Joins: readytheory (~user@ip24-252-15-245.om.om.cox.net)
[04:47:23] *** Joins: uxemacs (~timothy@2607:fb90:7e83:9e2d::164)
[04:47:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:49:58] *** Quits: Guest3952 (~vit@chello085216193138.chello.sk) (Ping timeout: 272 seconds)
[04:50:16] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Remote host closed the connection)
[04:50:42] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[04:54:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:54:13] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[04:55:05] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:55:08] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[04:58:00] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[04:58:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:59:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[05:00:33] *** Joins: thiras (~thiras@user/thiras)
[05:00:58] *** Joins: wolfshappen (~waff@irc.furworks.de)
[05:04:36] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[05:05:30] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[05:05:51] *** Quits: shaan150 (~shaan150@host62-7-180-55.range62-7.btcentralplus.com) (Quit: Client closed)
[05:07:22] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:f061:74c8:3357:e997) (Quit: I have gone to sleep. ZZZzzz…)
[05:08:28] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[05:09:09] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[05:10:34] <jmcantrell> Why was I banned from #python-offtopic?
[05:10:52] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[05:10:58] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[05:11:47] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[05:13:40] <Peng> #python-offtopic no longer exists. Maybe everyone was banned. Its successor is ##python-offtopic .
[05:14:50] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[05:14:53] <jmcantrell> ah
[05:16:20] *** Quits: kostkon_ (~androirc@athedsl-393845.home.otenet.gr) (Read error: Connection reset by peer)
[05:16:39] *** Joins: kostkon_ (~androirc@2a02:587:a10f:c988:4142:80fd:5bce:d437)
[05:17:50] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 272 seconds)
[05:19:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f97e:25ad:9b8c:d34e) (Quit: Leaving)
[05:20:36] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[05:20:41] *** Joins: aknot (~aknot@2603:900a:1503:17bb:9493:e079:9241:e085)
[05:21:00] *** Joins: Guest143332 (~Guest1433@ppp141255053226.access.hol.gr)
[05:21:19] *** Quits: Guest143332 (~Guest1433@ppp141255053226.access.hol.gr) (Client Quit)
[05:23:26] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[05:26:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:27:24] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[05:27:56] *** Quits: akk (~akk@75.161.130.204) (Quit: +++)
[05:28:23] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[05:28:39] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[05:29:39] *** Quits: securethemews_ (~securethe@2a00:23c4:1e85:6b00:8187:e255:5019:96c3) (Quit: Leaving)
[05:29:40] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Ping timeout: 256 seconds)
[05:30:52] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Quit: The true sign of intelligence is not knowledge but imagination.)
[05:31:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[05:31:22] *** Quits: flokuehn (~flokuehn@87.123.247.80) (Ping timeout: 256 seconds)
[05:32:57] *** Joins: flokuehn (~flokuehn@87.123.247.66)
[05:33:43] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:33:44] *** Joins: geli (~gelignite@55d44ff4.access.ecotel.net)
[05:36:00] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[05:36:29] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:36:42] *** Quits: magla (~gelignite@55d44f73.access.ecotel.net) (Ping timeout: 250 seconds)
[05:37:14] *** Quits: gitly (~gitly@148.252.132.255) (Quit: WeeChat 3.4)
[05:37:28] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 272 seconds)
[05:37:50] *** Joins: runelind (~runelind@user/runelind)
[05:38:59] *** Joins: mrgz_ (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:39:44] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[05:39:44] *** Quits: mrgz_ (~mrgz@201-42-0-191.dsl.telesp.net.br) (Client Quit)
[05:40:13] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:42:40] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[05:44:08] *** Joins: wolfshappen (~waff@irc.furworks.de)
[05:46:16] *** Joins: masoudd (~masoudd@user/masoudd)
[05:47:42] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:48:37] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[05:48:38] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[05:48:40] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[05:48:58] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[05:50:03] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[05:52:04] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[05:52:33] *** Joins: summersault (~summersau@179.221.251.36)
[05:52:43] *** Quits: not_not (~ircuz@5.2.79.79) (Quit: Lost terminal)
[05:53:23] *** Joins: Jong (~Jong@2620:10d:c090:400::5:9b63)
[05:53:29] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[05:53:40] *** Joins: rickybob2 (~rickybob@35.143.255.39)
[05:54:02] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[05:55:37] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[05:55:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:56:08] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[05:57:43] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[05:58:45] *** Quits: hyiltiz_ (~quassel@31.220.5.250) (Quit: hyiltiz_)
[05:58:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:59:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:59:54] *** Joins: hyiltiz (~quassel@31.220.5.250)
[06:00:50] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[06:01:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[06:03:28] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:28e7:8145:9d63:81d3)
[06:03:40] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:04:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[06:05:30] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[06:06:34] *** Quits: geli (~gelignite@55d44ff4.access.ecotel.net) (Quit: Stay safe!)
[06:07:07] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[06:08:02] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 260 seconds)
[06:08:32] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:08:46] *** Joins: xa0s (~xa0s@mab.sdf.org)
[06:08:54] *** Quits: rickybob2 (~rickybob@35.143.255.39) (Read error: Connection reset by peer)
[06:09:05] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:11:31] *** Joins: icy_hot (~icy_hot@211.32.147.101)
[06:14:13] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:16:44] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[06:18:29] *** Joins: jazzy (~jaziz@user/jaziz)
[06:19:05] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Remote host closed the connection)
[06:19:35] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:20:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:21:00] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[06:23:03] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[06:24:13] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:25:01] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:27:00] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[06:27:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:28:11] *** Quits: icy_hot (~icy_hot@211.32.147.101) (Quit: WeeChat 3.4)
[06:28:16] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 250 seconds)
[06:29:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:31:01] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[06:32:31] <white2> foo, what is the context?
[06:33:08] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[06:33:42] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:31] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:34:47] *** Joins: noarb (~noarb@user/noarb)
[06:35:07] *** Joins: manusandoval05 (~manusando@2806:107e:19:9223::9)
[06:35:47] *** Joins: xkuru (~xkuru@user/xkuru)
[06:35:57] <manusandoval05> Hello, this is the first time I use this app. How does it work? P.D. I saw python, and I clicked
[06:36:32] *** Quits: Jong (~Jong@2620:10d:c090:400::5:9b63) (Quit: Textual IRC Client: www.textualapp.com)
[06:37:01] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[06:38:52] *** Quits: noarb (~noarb@user/noarb) (Remote host closed the connection)
[06:39:12] *** Joins: noarb (~noarb@user/noarb)
[06:39:37] <grym> manusandoval05: https://libera.chat/guides/  is a good "i'm totally new" summary of IRC
[06:39:57] <grym> manusandoval05: this channel asks and answers questions about the python programming language
[06:40:48] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[06:41:46] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[06:45:08] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:46:45] *** Joins: crashrep (~crashrep@user/crashrep)
[06:46:46] *** Batzy_ is now known as Batzy
[06:47:26] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[06:47:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:48:34] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[06:49:56] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 250 seconds)
[06:50:08] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[06:51:16] *** Quits: fling (~fling@user/fling) (Ping timeout: 256 seconds)
[06:51:31] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 256 seconds)
[06:52:02] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 240 seconds)
[06:52:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[06:53:32] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 256 seconds)
[06:54:17] *** Quits: aknot (~aknot@2603:900a:1503:17bb:9493:e079:9241:e085) (Ping timeout: 240 seconds)
[06:56:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:57:47] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:c553:d7c9:6b52:d9a8)
[07:00:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[07:00:47] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[07:01:12] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:01:32] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[07:01:56] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[07:03:31] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[07:03:32] <enrh> With pytest-cov, is it possible to only list coverage on specific files rather than directory?
[07:04:43] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:04:51] *** Joins: lastshell (~lastshell@user/lastshell)
[07:05:26] <phy1729> you could use the coverage.py config to include/omit https://coverage.readthedocs.io/en/stable/source.html
[07:08:12] *** Joins: frost (~frost@user/frost)
[07:09:03] <enrh> Hmmm okay that might work, I'll check it out- thanks phy1729
[07:09:23] <WhiteKarura> https://pypi.org/project/telegram-crypto-price-bot/
[07:09:24] <WhiteKarura> Greeting fellow programmers! I had a question regarding the modification of the source code. I've been trying to introduce certain new features in the above project. For that, I need to make necessary changes in the source code. However, absolutely no change is being reflected when I run the main module. It just displays whatever initially it was
[07:09:24] <WhiteKarura> meant to do. No changes are reflected when I run it afresh.
[07:09:25] <WhiteKarura> I've also cleared my __pycache__ folder if that helps.
[07:09:25] <WhiteKarura> It is just that I wanted to test out a few features of my own since I wanted to extend the functionality of the package...
[07:09:52] <Repiphany> WhiteKarura: Install it with `pip -e`
[07:10:29] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[07:13:57] <WhiteKarura> @Repiphany you mean like this?
[07:13:57] <WhiteKarura> pip install telegram-crypto-price-bot -e
[07:15:00] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[07:15:25] <Repiphany> Clone the git repository and install with `pip install -e /path/to/src/folder`
[07:17:33] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[07:20:35] <WhiteKarura> Repiphany Understood...will surely give it a shot
[07:21:02] <WhiteKarura> thanks for the help
[07:21:51] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[07:22:35] *** Joins: semeion (~semeion@user/semeion)
[07:22:45] *** Quits: zzbot (~zbot@68.23.85.99) (Quit: Leaving)
[07:23:29] *** Joins: zzbot (~zbot@68.23.85.99)
[07:23:48] *** Quits: Babar (~Babar@171.233.210.64) (Quit: Leaving)
[07:24:18] *** Joins: adeliktas0 (~adeliktas@i59F5FA8E.versanet.de)
[07:24:30] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 272 seconds)
[07:25:09] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[07:26:24] *** Quits: adeliktas (~adeliktas@i59F5F4FC.versanet.de) (Ping timeout: 272 seconds)
[07:26:25] *** adeliktas0 is now known as adeliktas
[07:27:04] *** Quits: zzbot (~zbot@68.23.85.99) (Client Quit)
[07:29:17] *** Joins: zzbot (~zbot@68.23.85.99)
[07:29:24] *** Joins: botz (~zbot@68.23.85.99)
[07:29:42] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[07:30:07] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:12] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[07:31:06] *** Quits: zzbot (~zbot@68.23.85.99) (Client Quit)
[07:31:47] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[07:31:59] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:39] *** Quits: Tacoder (~DarkPsyde@2806:264:5482:9e0:813d:c1de:5748:988) (Ping timeout: 256 seconds)
[07:34:11] *** Parts: botz (~zbot@68.23.85.99) ()
[07:34:35] *** Joins: irf21k (~irf21k@2401:4900:4bc3:2135:1:0:7690:c997)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:37:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:38:59] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[07:39:15] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[07:42:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:43:18] *** Joins: semeion (~semeion@user/semeion)
[07:44:46] *** Quits: sreve (~quassel@p4ff44c1a.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[07:45:03] *** Joins: sreve (~quassel@p54a705d5.dip0.t-ipconnect.de)
[07:45:49] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 240 seconds)
[07:47:52] *** Joins: zzbot (~zbot@user/zzbot)
[07:48:29] *** Quits: manusandoval05 (~manusando@2806:107e:19:9223::9) (Quit: manusandoval05)
[07:50:13] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2) (Ping timeout: 256 seconds)
[07:51:42] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:52:45] *** Quits: lllh (~UPP@198.48.244.21) (Quit: :::: ( UPP ) ::::)
[07:54:43] *** Joins: icy_hot (~icy_hot@211.32.147.101)
[07:57:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:57:10] *** Joins: frost (~frost@user/frost)
[07:58:44] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[08:00:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:02:20] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:04:16] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:c0b1:263d:6983:3cc0)
[08:06:40] *** Joins: Tacoder (~DarkPsyde@2806:264:5482:9e0:1476:b53:9822:6652)
[08:07:24] *** Quits: Tacoder (~DarkPsyde@2806:264:5482:9e0:1476:b53:9822:6652) (Client Quit)
[08:07:37] *** Quits: WhiteKarura (~WhiteKaru@user/whitekarura) (Quit: Client closed)
[08:07:46] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 256 seconds)
[08:08:39] *** Joins: Tacoder (~DarkPsyde@2806:264:5482:9e0:1476:b53:9822:6652)
[08:08:42] *** Quits: zzbot (~zbot@user/zzbot) (Remote host closed the connection)
[08:09:21] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[08:10:51] *** Quits: readytheory (~user@ip24-252-15-245.om.om.cox.net) (Remote host closed the connection)
[08:11:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:12:25] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[08:13:13] *** Quits: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[08:13:53] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:14:07] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[08:14:31] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[08:14:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:14:52] *** Joins: CombatVet (~c4@user/combatvet)
[08:16:25] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:c553:d7c9:6b52:d9a8) (Quit: Textual IRC Client: www.textualapp.com)
[08:16:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[08:17:39] *** Quits: Tacoder (~DarkPsyde@2806:264:5482:9e0:1476:b53:9822:6652) (Quit: Leaving)
[08:19:07] *** Joins: BillyZane (~BillyZane@91.196.220.174)
[08:20:23] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652)
[08:21:46] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:23:20] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:4dcf:37f8:1201:77c6) (Remote host closed the connection)
[08:23:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:23:58] *** Quits: icy_hot (~icy_hot@211.32.147.101) (Quit: WeeChat 3.4)
[08:23:59] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[08:25:03] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:25:46] *** Quits: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com) (Read error: Connection reset by peer)
[08:25:53] *** Joins: lystra_ (~lystra@d53-64-11-169.nap.wideopenwest.com)
[08:27:51] *** Quits: visl (visl@user/visl) (Ping timeout: 256 seconds)
[08:27:52] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:31:17] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:26] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:31:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[08:31:53] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[08:39:08] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652) (Read error: Connection reset by peer)
[08:39:31] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:be62:fea5:4a22:2e71)
[08:39:33] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652)
[08:40:17] *** Joins: jazzy3 (~jaziz@user/jaziz)
[08:40:49] *** Joins: kts (~kts@103.73.237.221)
[08:43:48] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[08:45:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:45:45] *** Quits: uxemacs (~timothy@2607:fb90:7e83:9e2d::164) (Quit: Konversation terminated!)
[08:47:17] *** Joins: uxemacs (~timothy@2607:fb90:7e83:9e2d::164)
[08:48:01] *** Quits: emerent (~quassel@p200300cd5743c315ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:48:17] *** Joins: emerent (~quassel@p200300cd5743c34aba27ebfffed28a59.dip0.t-ipconnect.de)
[08:50:02] *** Joins: icy_hot (~icy_hot@211.32.147.101)
[08:50:38] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[08:51:19] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[08:51:44] *** Joins: GiorgiGzirishvil (~drnmatrix@2001:470:69fc:105::1:d1e5)
[08:54:38] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[08:56:37] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[08:57:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:57:43] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[08:57:44] *** Joins: kts (~kts@103.73.237.221)
[08:58:23] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:c0b1:263d:6983:3cc0) (Quit: Leaving)
[08:59:48] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[09:00:38] *** Quits: kts (~kts@103.73.237.221) (Client Quit)
[09:01:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[09:02:47] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[09:03:12] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[09:05:45] *** Joins: emf (~emf@2600:1700:19e0:5c80:463:c67:e6c7:c76)
[09:07:18] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[09:07:55] *** Joins: epony (epony@user/epony)
[09:08:31] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[09:09:37] *** Quits: emf (~emf@2600:1700:19e0:5c80:463:c67:e6c7:c76) (Remote host closed the connection)
[09:10:16] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 272 seconds)
[09:10:18] *** Joins: humberto1 (~humbertow@189.236.30.197)
[09:10:29] *** Joins: emf (~emf@2620:10d:c090:400::5:12de)
[09:11:41] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[09:13:11] *** Joins: kts (~kts@103.73.237.221)
[09:13:16] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[09:19:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:19:26] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[09:20:34] *** Joins: onichomp666 (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1)
[09:20:59] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:21:40] *** Quits: epony (epony@user/epony) (Remote host closed the connection)
[09:21:46] *** Quits: emf (~emf@2620:10d:c090:400::5:12de) (Quit: emf)
[09:23:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:24:18] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[09:24:46] *** Joins: xon (~xon@host-111-net-68-160-119.mobilinkinfinity.net.pk)
[09:25:25] *** Quits: xon (~xon@host-111-net-68-160-119.mobilinkinfinity.net.pk) (Client Quit)
[09:25:42] *** Joins: xon (~xon@host-111-net-68-160-119.mobilinkinfinity.net.pk)
[09:26:38] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[09:28:15] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:31:10] *** Quits: xon (~xon@host-111-net-68-160-119.mobilinkinfinity.net.pk) (Ping timeout: 272 seconds)
[09:31:27] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[09:33:25] *** Quits: DaNeenjah (~jake@adsl-74-230-8-132.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[09:34:01] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Read error: Connection reset by peer)
[09:34:20] *** Quits: icy_hot (~icy_hot@211.32.147.101) (Ping timeout: 272 seconds)
[09:35:37] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652) (Read error: Connection reset by peer)
[09:35:42] *** Joins: icy_hot (~icy_hot@211.32.147.101)
[09:36:01] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652)
[09:39:21] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[09:39:25] *** Quits: icy_hot (~icy_hot@211.32.147.101) (Client Quit)
[09:40:22] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[09:40:45] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:40:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[09:41:02] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:42:36] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[09:42:44] *** Quits: agumonkey (~user@88.163.231.79) (Read error: Connection reset by peer)
[09:43:14] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[09:43:24] *** Joins: agumonkey (~user@88.163.231.79)
[09:45:56] *** Joins: xkuru (~xkuru@user/xkuru)
[09:46:13] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:46:47] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[09:46:56] *** Joins: stpz (~stpz@27.190.249.114)
[09:47:10] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2)
[09:51:08] *** Quits: stpz (~stpz@27.190.249.114) (Client Quit)
[09:51:41] *** Joins: epony (epony@user/epony)
[09:53:21] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[09:53:54] <Pi-sistance> adding a 1d array of 5 elements to a 5x5 array works how???
[09:54:23] <Pi-sistance> numpoy interpreted the 1d array as a 5x5
[09:54:23] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[09:55:14] *** Joins: zebrag (~chris@user/zebrag)
[09:55:52] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[09:56:04] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:56:28] *** Quits: theo (~theo@user/theo) (Remote host closed the connection)
[09:56:52] *** Quits: Elzington_ (~Elzington@87.249.134.31) (Quit: Leaving)
[09:57:03] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[09:57:45] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:58:18] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:58:26] <themill> Pi-sistance: it's called broadcasting: https://numpy.org/doc/stable/user/basics.broadcasting.html
[09:59:40] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[09:59:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:00:03] <Pi-sistance> ty!
[10:02:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[10:03:23] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[10:04:30] *** Joins: white2 (~mahengrui@user/mahengrui1)
[10:05:44] *** Joins: upsala (~zcb@185.209.196.134)
[10:06:18] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[10:08:31] *** Joins: fef (~thedawn@user/thedawn)
[10:08:54] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[10:08:56] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:09:01] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:09:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:09:23] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[10:10:00] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[10:10:18] *** Quits: uxemacs (~timothy@2607:fb90:7e83:9e2d::164) (Quit: Konversation terminated!)
[10:10:30] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[10:10:44] *** Joins: zebrag (~chris@user/zebrag)
[10:12:03] *** Joins: kaivai (~kaivai@user/kaivai)
[10:12:36] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[10:12:44] <shrysr> Is it fair to say that in the past decade, python has become significantly more popular for enterprise web applications and is possibly as popular as Java today for this purpose?
[10:13:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:14:24] <white2> sounds kind of doubtable without further discussion
[10:14:26] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[10:14:47] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[10:15:17] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:16:21] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:17:39] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[10:18:21] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[10:18:45] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[10:18:55] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:19:16] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:19:53] <shrysr> https://www.tiobe.com/tiobe-index/
[10:19:58] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:28e7:8145:9d63:81d3) (Read error: Connection reset by peer)
[10:20:15] <Batzy> does anyone have any idea how i can use std::hash in cython?
[10:20:20] <Batzy> this is the std::hash from c++
[10:20:44] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:21:22] *** Joins: kaivai (~kaivai@user/kaivai)
[10:23:07] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[10:23:24] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:23:52] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:23:59] *** Joins: bluedust (~bluedust@103.165.167.61)
[10:24:44] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:25:15] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[10:25:25] *** Joins: manti7 (~manti7@176.10.104.94)
[10:26:36] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[10:26:53] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[10:27:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:27:52] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[10:28:08] *** Joins: uxemacs (~timothy@2607:fb90:7e83:9e2d::164)
[10:28:35] <white2> shrysr, u may convince me if ur essay/presentation is good enough, it depends on the kind of 'fair'
[10:29:32] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[10:30:03] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:30:26] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[10:30:35] *** Joins: wyclif (~wyclif@user/wyclif)
[10:31:25] *** Quits: creedofnecessity (~creedofne@mobile-107-77-199-124.mobile.att.net) (Quit: Client closed)
[10:31:41] *** Joins: jay-m126 (~jay-m@129.0.99.174)
[10:31:46] *** Joins: jay-m126_ (~jay-m@129.0.99.174)
[10:31:47] *** Joins: jay-m1261 (~jay-m@129.0.99.174)
[10:32:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:32:56] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[10:33:07] *** Joins: bluedust (~bluedust@103.165.167.61)
[10:33:37] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[10:33:38] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[10:34:42] *** Joins: jay-m1262 (~jay-m@129.0.99.174)
[10:35:11] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:35:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[10:35:46] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[10:36:02] <nomic> i got <ft5406.Touch object at 0xb1fab930>
[10:36:02] <nomic>   how do i reference the 0x number
[10:36:04] <nomic> i forgot
[10:36:10] <nomic> id
[10:36:12] <nomic> k
[10:36:14] <nomic> i remember no
[10:37:24] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[10:40:21] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[10:41:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[10:41:20] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[10:42:08] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:43:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[10:43:26] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:43:48] *** Joins: wyclif (~wyclif@user/wyclif)
[10:46:36] <willow> can i put opening a file inside a function, so that the function can return a file handle that can be used elsewhere?
[10:47:05] <nz> that's perfectly valid
[10:47:26] <nz> just generally make sure the user of your function closes it once done with it
[10:47:48] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[10:48:17] <willow> so if i name the function 'fh'  can i use something like:   for line in fh(): print(line)     ?
[10:48:18] <nz> depending on your code, you could implement it as a context manager so that it can be used with a `with` block
[10:48:51] <nz> `for a in b()` will re-evaluate b() each iteration AFAIK
[10:50:32] <willow> so if i have a bunch of different functions which all need a file handle, i have to copy the whole 'with open' into each of the functions?
[10:50:50] <nz> ah wait I'm a dumb-dumb. Ignore my last msg
[10:50:51] *** Joins: koox (~dev@213.133.91.246)
[10:51:19] <willow> because the code that uses the file handle always has to be inside the with block
[10:51:31] <nz> It's up to you how you structure it
[10:51:59] *** Joins: bluedust (~bluedust@103.161.144.63)
[10:52:02] <willow> pydoc page on file io doesn't have any example of how to do this
[10:52:06] <nz> generally speaking, code is normally structured to be fed a file handle, not for it to reach out and figure out which fh to use
[10:52:14] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:52:17] <nz> Do you have a concrete example?
[10:53:02] <willow> yes gimme a sec
[10:54:53] <koox> is there a better way to rewrite it? https://pastecode.io/s/bqeoj8wb using lambdas?
[10:55:12] <nz> koox, what's wrong with your current implementation?
[10:55:58] <koox> trying to advance my skills
[10:56:08] <nz> cool. what don't you like about it
[10:56:38] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 256 seconds)
[10:56:46] <koox> repeating the same line while I could possibly iterate through the keys to add .append to corresponding ret elements
[10:57:41] <nz> I see. One thing you could do would be to codify the mapping from each A index to its dd label in a dict, and then iterate over this inside your current loop
[10:57:48] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652) (Ping timeout: 240 seconds)
[10:58:26] <nz> I understand you're just looking to improve skills, but always remember that reducing repetition doesn't always increase readability
[10:58:47] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4)
[10:59:02] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:59:56] <willow> https://bpa.st/FWPA    funcB uses 'conf' which gets exported.  but in funcA I want to iterate through 'f' which is not exported
[11:00:18] <koox> I was thinking something in that direction, already trying it
[11:00:22] <koox> let's see
[11:00:44] *** Joins: f1se4 (~f1se4@213.195.113.45)
[11:01:01] <willow> the example is pretty simplistic
[11:01:21] <nz> willow, any reason you can't pass the f into funcA? This would be the normal approach
[11:01:32] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[11:01:59] <willow> nz: i didn't think that f was available outside of the with block, unlike 'conf'
[11:02:09] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[11:02:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:02:12] <nz> It's not
[11:02:13] <willow> ValueError: I/O operation on closed file.
[11:02:14] <Repiphany> The file is closed once you exit the `with` statement and also the file would be at the end after `.read()`ing it
[11:02:30] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[11:02:37] <nz> the file is closed outside the with block as you found
[11:02:57] <nz> willow, Unless you're 'slurping' a file's contents into memory, any code that uses f needs to be "inside" the with block, execution-wise
[11:03:14] <nz> i.e. it has to be directly inside the with block, or called by code that is inside that with block
[11:04:07] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[11:04:35] <willow> right, funcB uses the slurped contents.  but in funcA i don't want the slurped, just the fh to iterate over.
[11:05:10] <Repiphany> https://docs.python.org/3/library/itertools.html#itertools.tee might be something you can use
[11:05:30] *** Joins: pro_z_ (~pro_z@37.214.35.129)
[11:05:38] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[11:06:00] <nz> willow, if that's the case then yeah, funcA needs a still-open file handle
[11:06:19] *** Joins: sambauer64 (~sambauer6@86.121.173.133)
[11:06:26] <Repiphany> Or just load the file in memory (which you're already doing) and don't try to use the file anymore
[11:06:32] <nz> ^
[11:06:54] *** Parts: sambauer64 (~sambauer6@86.121.173.133) ()
[11:06:56] <nz> If you want the whole file slurped line-wise like iterating over a fh gives, you can use fh.readlines()
[11:06:58] *** Joins: c4017_ (~c4017@S0106c0943583f893.vf.shawcable.net)
[11:09:05] *** Joins: Z-cat (~Z-cat@user/z-cat)
[11:09:17] <willow> ok got it working!  https://bpa.st/C5FQ
[11:09:46] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[11:09:48] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:85a0:c944:c308:3afa) (Ping timeout: 240 seconds)
[11:10:29] <willow> thanks, i wasn't sure of the difference between read() and readlines()    they both seem to do the same thing or similar.
[11:10:34] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Client Quit)
[11:11:05] <nz> read reads the whole file as one, while readlines returns an array of strings, one for each line
[11:12:09] <nz> You've also removed your with clause, which means the file is no longer closed. Probably not a biggie for a play-thing program but not great form for production code :)
[11:13:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:14:10] <willow> by the way, i'm loving the walrus operator combined with regex matching. for example, append the matching line number and the match string to a dict:   if m := re.search(RE, _):  matches[i] = m.group(1)
[11:16:15] <KirkMcDonald> That's kinda the main use-case for why the operator was added in the first place.
[11:16:38] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:17:41] <nz> Yeah I had a python colleague who took the piss out of C programmers for using `if (foo = bar()) { baz(foo); }` until the walrus came along
[11:20:31] <jinsun> it is a problem only if you write = when you meant ==
[11:20:41] <nz> yeah
[11:20:56] <nz> I find that to be alarmingly uncommon for some reason
[11:21:03] <jinsun> and it is harder to confuse and write := insteead o f==
[11:21:21] <nz> true, Python does have that going for its syntax
[11:22:08] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:24:21] <white2> well, what does the alias 'foo' stand for? seen in codes and IRC nets
[11:25:03] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:25:03] <nz> generally just a nonsense/placeholder word
[11:25:26] <nz> some would say it comes from foobar/fubar
[11:25:46] <nz> hence both foo and bar. Dunno why baz and qux follow
[11:26:14] <EdFletcher> they're called "metasyntactic variables" in this context https://en.wikipedia.org/wiki/Metasyntactic_variable
[11:26:32] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[11:26:58] <nz> apparently I need to use spam, ham, and eggs instead :)
[11:27:48] <EdFletcher> 😆
[11:28:11] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[11:29:16] <nz> I guess spam makes sense, given python
[11:29:27] <white2> EdFletcher, Alice and Bob i see
[11:30:00] <nz> wonder how much trouble I'd get in for naming my two kids that
[11:30:02] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[11:30:06] *** Joins: NeoCore (~neocore@195.200.221.224)
[11:30:43] <nz> and then making sure they go to a school where the bully is called Mallory
[11:31:03] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:18] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:31:24] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:43] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:32:02] <EdFletcher> white2: indeed, different contexts have different colloquial versions of the same thing
[11:33:06] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:35:09] *** Joins: tga (~tga@p54a75da2.dip0.t-ipconnect.de)
[11:35:10] *** Quits: tga (~tga@p54a75da2.dip0.t-ipconnect.de) (Changing host)
[11:35:10] *** Joins: tga (~tga@user/tga)
[11:35:33] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:35:37] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[11:35:37] *** Joins: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de)
[11:36:29] *** Quits: BillyZane (~BillyZane@91.196.220.174) (Remote host closed the connection)
[11:37:01] *** Joins: zaquest (~notzaques@5.130.79.72)
[11:39:59] <ano> does modern python have human readable size units conversion builtin pkg/function?
[11:40:06] *** Joins: BillyZane (~BillyZane@193.160.245.132)
[11:40:41] *** Quits: bluedust (~bluedust@103.161.144.63) (Remote host closed the connection)
[11:45:26] *** Quits: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:46:50] *** Joins: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de)
[11:47:27] *** Quits: onichomp666 (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1) (Read error: Connection reset by peer)
[11:48:05] *** Joins: onichomp666 (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1)
[11:49:37] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[11:49:53] <willow> Google has example name recommendations for devs  https://developers.google.com/style/examples
[11:50:01] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:50:50] <deniska> ano: I've seen packages for that on pypi, but nothing builtin
[11:50:58] *** Joins: Guest3952 (~vit@chello085216193138.chello.sk)
[11:52:12] *** Quits: amazigh (~amirouche@user/amirouche) (Ping timeout: 240 seconds)
[11:52:34] *** Joins: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de)
[11:53:23] *** Joins: rsx (~dummy@ppp-188-174-143-104.dynamic.mnet-online.de)
[11:56:25] *** doc|home is now known as doc
[11:56:36] *** Joins: Babar (~Babar@171.233.210.64)
[11:59:18] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:59:28] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Read error: Connection reset by peer)
[12:00:53] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[12:01:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[12:02:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[12:02:56] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:03:09] *** Joins: TheRedRipper (TheRedRipp@user/theredripper)
[12:03:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:03:53] *** Quits: TheRedRipper (TheRedRipp@user/theredripper) (Client Quit)
[12:05:10] *** Joins: paul424 (~tom@ip-5-172-235-218.multi.internet.cyfrowypolsat.pl)
[12:06:08] *** Joins: TheRedRipper (TheRedRipp@user/theredripper)
[12:09:30] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[12:09:42] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[12:10:41] *** Joins: epony (epony@user/epony)
[12:11:48] *** Joins: rendar (~rendar@user/rendar)
[12:11:49] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[12:15:56] <nomic> taking the pygame docs down for ukraine is the stupidest thing i have ever seen
[12:17:08] *** Joins: yaraju_ (~yaraju@user/yaraju)
[12:17:31] *** Joins: gentooclimax (~gentoocli@2a02-8440-3341-46ef-7e63-048d-9a39-2c6f.rev.sfr.net)
[12:18:46] *** Joins: palasso (~palasso@user/palasso)
[12:20:16] *** Quits: yaraju (~yaraju@user/yaraju) (Ping timeout: 272 seconds)
[12:20:54] *** Joins: moose (~moose@user/moose)
[12:25:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:25:33] *** Quits: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:26:22] *** Joins: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de)
[12:26:33] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:26:50] *** Joins: tgamblin_ (~tgamblin@2607:fea8:c2a0:8640:7a3:73e3:df4:afe1)
[12:26:59] *** Quits: tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[12:27:10] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[12:28:11] *** _--_ is now known as morfeus
[12:30:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:30:09] *** Quits: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8) (Quit: You have been kicked for being idle)
[12:32:16] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:32:34] *** Quits: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:33:46] *** Joins: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de)
[12:35:53] *** Joins: cqi (~cqi@2408:8207:2525:3910:8e76:aec5:111e:4716)
[12:36:43] *** Quits: traptrip (trip@brigaid.xs4all.nl) ()
[12:37:18] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[12:38:08] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:38:36] *** Joins: blackout69 (~blackout6@37.183.230.121)
[12:39:31] *** Quits: TheRedRipper (TheRedRipp@user/theredripper) (Quit: lol)
[12:39:45] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[12:39:46] *** gentooclimax is now known as climax
[12:42:21] *** morfeus is now known as _--_
[12:43:03] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[12:43:48] *** climax is now known as gentooclimax
[12:47:21] *** Quits: cqi (~cqi@2408:8207:2525:3910:8e76:aec5:111e:4716) (Quit: Leaving)
[12:47:53] *** Joins: cqi (~cqi@2408:8207:2525:3910:8e76:aec5:111e:4716)
[12:49:16] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[12:49:24] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[12:51:04] *** Quits: cqi (~cqi@2408:8207:2525:3910:8e76:aec5:111e:4716) (Client Quit)
[12:51:38] *** Joins: cqi (~cqi@2408:8207:2525:3910:8e76:aec5:111e:4716)
[12:52:24] *** Quits: bim9262 (~bim9262@user/bim9262) (Quit: ZNC - https://znc.in)
[12:52:42] *** Joins: bim9262 (~bim9262@user/bim9262)
[12:52:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:53:15] *** Joins: kts (~kts@103.73.237.221)
[12:55:20] *** Joins: Mat1010 (~Mat1010@168.181.209.34)
[12:56:23] *** Quits: Maxt3r (~Maxt3r@128-76-167-194-static.dk.customer.tdc.net) (Quit: WeeChat 3.4)
[12:56:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:57:24] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:57:38] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[13:00:01] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:01:13] *** Joins: Pickchea (~private@user/pickchea)
[13:01:22] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:01:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:03:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:03:49] *** gentooclimax is now known as climax
[13:04:22] *** Joins: fling (~fling@user/fling)
[13:04:52] *** Quits: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:06:56] *** Joins: nomic (~nomic@85.203.36.100)
[13:07:28] *** climax is now known as gentooclimax
[13:07:29] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[13:08:00] *** Joins: amo (~amogorkon@user/amogorkon)
[13:09:24] *** Quits: bim9262 (~bim9262@user/bim9262) (Ping timeout: 240 seconds)
[13:10:16] *** Joins: EGH (~EGH@185.25.195.104)
[13:10:32] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-104.range86-168.btcentralplus.com)
[13:11:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[13:11:59] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[13:14:03] *** Joins: trahanas (~zxcvb___@77.49.250.116.dsl.dyn.forthnet.gr)
[13:15:29] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[13:15:40] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[13:15:52] *** Quits: trahanas (~zxcvb___@77.49.250.116.dsl.dyn.forthnet.gr) (Quit: trahanas)
[13:17:24] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[13:17:50] *** Quits: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net) (Ping timeout: 260 seconds)
[13:18:53] *** Joins: bim9262 (~bim9262@user/bim9262)
[13:19:24] *** Joins: kosh (~kosh@user/kosh)
[13:22:03] *** Joins: f1se4 (~f1se4@213.195.113.45)
[13:22:58] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:23:24] *** Quits: bim9262 (~bim9262@user/bim9262) (Ping timeout: 256 seconds)
[13:24:08] *** Quits: onichomp (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1) (Read error: Connection reset by peer)
[13:24:25] *** Quits: onichomp666 (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1) (Read error: Connection reset by peer)
[13:24:46] *** Joins: onichomp (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1)
[13:25:03] *** Joins: onichomp666 (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1)
[13:25:12] *** gentooclimax is now known as climax
[13:25:21] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (Ping timeout: 256 seconds)
[13:25:49] *** Joins: bim9262 (~bim9262@user/bim9262)
[13:25:53] *** Quits: onichomp (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1) (Read error: Connection reset by peer)
[13:26:06] *** Quits: onichomp666 (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1) (Read error: Connection reset by peer)
[13:26:32] *** Joins: onichomp (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1)
[13:26:43] *** Joins: onichomp666 (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1)
[13:28:51] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[13:29:16] *** climax is now known as gentooclimax
[13:30:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:31:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:33:00] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 240 seconds)
[13:33:45] *** Quits: gentooclimax (~gentoocli@2a02-8440-3341-46ef-7e63-048d-9a39-2c6f.rev.sfr.net) (Quit: Konversation terminated!)
[13:34:48] *** Quits: onichomp (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1) (Ping timeout: 252 seconds)
[13:35:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[13:35:21] *** Quits: onichomp666 (~onichomp@2806:264:4408:162:60b1:8ad9:2446:62e1) (Ping timeout: 252 seconds)
[13:35:40] *** Joins: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de)
[13:36:54] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[13:37:36] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:37:44] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[13:39:16] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[13:42:07] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 256 seconds)
[13:43:45] <voldial> How do I get os.lstat(path).st_size IFF getdents64(path).dtype == 8 without a race condition? Asked another way, how do I get a file's os.lstat(path).st_size IFF path is a file (not a symlink(10), dir(4), fifo(1), block device(6), socket(12), char(2), or unknown(0))?
[13:43:55] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[13:46:19] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:46:19] *** Joins: ivii (~ivan@user/ivii)
[13:46:30] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:46:37] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[13:47:14] <wyre> might I catch the KeyboardInterrupt exception when giving an input through input()?
[13:47:19] <voldial> as far as I know, the only way is a direct getdents64(path.parent) syscall, and there is no built in way to do that?
[13:48:21] *** Quits: martums59 (~martums@user/martums) (Read error: Connection reset by peer)
[13:49:00] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2) (Ping timeout: 240 seconds)
[13:49:15] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:9468:2066:9a2d:cc29)
[13:49:16] *** Joins: martums59 (~martums@user/martums)
[13:49:33] <wyre> this doesn't work for me https://bpa.st/TXRQ
[13:50:56] <jinsun> wyre: define doesn't work? you get an error?
[13:51:05] <wyre> well, it's probably because it's inside a function which is being threaded
[13:51:23] *** Joins: millido (~millido@84.210.150.128)
[13:51:28] <wyre> jinsun, https://bpa.st/SFSQ this is the code I'm trying to test
[13:52:05] <jinsun> okay threads can't catch keyboard interrupt, because it sends a signal that can be handled in the main thread only
[13:52:08] <wyre> but it have problems with the fact it's a thread https://bpa.st/2S5Q
[13:52:23] <wyre> I see
[13:52:32] <wyre> and is there some way to do it in a clean way?
[13:52:34] <jinsun> see this https://docs.python.org/3/library/signal.html#signals-and-threads
[13:52:36] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:53:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:54:14] <wyre> jinsun, apparently I should use this one https://docs.python.org/3/library/signal.html#signal.SIGBREAK but ... I'm not sure how 🤔
[13:54:25] <wyre> oh, no, that's for W$ ...
[13:54:45] <jinsun> you can maybe catch KeyboardInterrupt in the main thread and let the other thread know about it using events or something
[13:54:58] <wyre> that one https://docs.python.org/3/library/signal.html#signal.SIGINT
[13:56:36] *** Joins: dudek (~dudek@185.150.236.127)
[13:56:57] <wyre> jinsun, you mean these events? https://docs.python.org/3/library/threading.html#event-objects
[13:57:04] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[13:57:14] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[13:58:20] *** Joins: p4rtizan (p4rtizan@gateway/vpn/protonvpn/p4rtizan)
[13:58:56] <jinsun> wyre: yeah, I had got this kind of thing working with Events in the past by following some stackoverflow, I don't have it now though
[14:00:12] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[14:00:42] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:00:46] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[14:00:50] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[14:00:51] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[14:00:55] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[14:01:03] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:01:05] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[14:01:13] *** Joins: kts (~kts@103.73.237.221)
[14:03:16] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[14:03:59] *** Joins: kosh (~kosh@user/kosh)
[14:04:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:05:04] *** Quits: dudek (~dudek@185.150.236.127) (Quit: Leaving)
[14:06:45] *** Quits: p4rtizan (p4rtizan@gateway/vpn/protonvpn/p4rtizan) (Quit: Leaving)
[14:06:53] <wyre> jinsun, I'm not sure if something like this ... https://bpa.st/2FRA but the event is apparently set even from its creation 🤔
[14:07:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:07:31] <wyre> oh, I was missing the not before kbi_e.is_set()
[14:08:12] <wyre> https://bpa.st/7IUQ but it's not working still as I expect
[14:08:23] <wyre> I'm not sure if I'm passing properly the event
[14:09:27] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-104.range86-168.btcentralplus.com) (Quit: Leaving.)
[14:09:27] <parv> I want to see where is memory is consumed. I found "memory-profiler" package, https://pypi.org/project/memory-profiler/ . Is that good? Are there others?
[14:09:54] *** Joins: rickybob (~rickybob@35.143.255.39)
[14:10:02] *** Joins: somlis (~somlis@user/somlis)
[14:11:45] *** Joins: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net)
[14:12:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[14:13:01] *** Joins: Drone4four (~Drone4fou@2607:fea8:87c0:dca0::f042)
[14:14:21] *** Joins: OnceMe (~stefan@user/onceme)
[14:14:55] *** Joins: plastico (~plastico@neomutt/plastico)
[14:15:52] <OnceMe> can someone help me/guide me how to write a script which will take two excel files (one csv and one xlsx), and go through xlsx and for each username in xlsx, search csv and then replace by that username a new ID which is present in row in xlsx? does this already exist somewhere or what should I do, go with pandas?
[14:16:38] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:18:21] *** Joins: acresearch (~acresearc@user/acresearch)
[14:18:53] <acresearch> i have been hanging out on discord for a while now,,, i prefear IRC by are people still here? why not migrate to discord?
[14:19:37] *** Quits: rickybob (~rickybob@35.143.255.39) (Quit: rickybob)
[14:19:53] <nedbat> acresearch: we are still here (and sometimes in both places)
[14:20:32] <acresearch> nedbat: i wish IRC too over again,,,, sad to see it stagnant, and even losing people :-(
[14:21:07] <nedbat> acresearch: i remember when people were impressed that #python had 800 people.
[14:21:13] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[14:21:15] <acresearch> nedbat: haha
[14:21:41] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[14:23:16] <nedbat> discord has some real advantages, but IRC does too
[14:23:28] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:24:29] *** Joins: kosh (~kosh@user/kosh)
[14:24:34] *** Joins: cqi_ (~cqi@111.201.36.198)
[14:24:50] *** Joins: cheater (~Username@user/cheater)
[14:25:10] *** Joins: JC5 (~X@user/jc5)
[14:27:06] *** Joins: thiras (~thiras@user/thiras)
[14:27:13] *** Quits: cqi (~cqi@2408:8207:2525:3910:8e76:aec5:111e:4716) (Ping timeout: 265 seconds)
[14:27:41] *** Joins: ano (~ano@user/ano)
[14:28:51] *** Joins: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net)
[14:29:14] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[14:30:04] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[14:31:27] <jinsun> wyre: this seems to be working https://bpa.st/IY2Q
[14:31:35] *** Joins: rickybob (~rickybob@35.143.255.39)
[14:31:52] <jinsun> had to join the thread, and handle the EOFError thrown by input()
[14:32:04] *** Joins: oriba (~oriba@dynamic-078-054-198-245.78.54.pool.telefonica.de)
[14:32:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[14:32:56] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[14:33:51] <jinsun> parv: there is scalene too https://github.com/plasma-umass/scalene (I haven't used both properly so can't say which is better)
[14:36:01] *** Joins: ikonia (~irc@user/ikonia)
[14:36:19] *** Joins: NealRame (~a@89.187.163.193)
[14:36:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:37:15] *** Quits: avane (~avane@fsf/member/avane) (Quit: o/)
[14:37:38] *** Joins: weedmic_ (~weedmic@93-173-109-49.bb.netvision.net.il)
[14:37:39] <ikonia> could anyone explain how to approach a pip upgrade, docs say pip install --upgrade pip should do it, but that fails due to a non-empty directory of pep517 which is in site-packages, however a pip list doesn't show pep517 as installed so I can't remove it before upgrading pip
[14:37:59] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:38:02] <ikonia> I could be brutal and manually remove the directory before the upgrade, but that feels a ill thought out approach
[14:38:08] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[14:38:13] <ikonia> is there a better way to do this ?
[14:39:18] <jinsun> how did the pep517 folder get created? and what is inside that?
[14:39:38] *** Quits: paul424 (~tom@ip-5-172-235-218.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[14:40:49] <ikonia> jinsun: not 100% sure, it's from a container image that I'm trying to clean up (or at least test with to then build my own)
[14:41:02] *** Quits: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net) (Remote host closed the connection)
[14:41:17] <ikonia> looks like the directory has a few python scripts from the build system pep517 provides
[14:42:40] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[14:42:43] <jinsun> pip list doesn't show it probably because the metadata got deleted somehow, it would have been in a dist-info folder in site-packages
[14:43:21] <ikonia> actual working directory in the container is /usr/local/lib/python3.7/site-packages/pip/_vendor/pep517
[14:44:13] <jinsun> hmm, that is not pep517 package, that is the vendored version of pep 517 inside pip
[14:44:32] <jinsun> so you don't have it installed then
[14:44:51] *** Joins: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net)
[14:45:01] <ikonia> so how do I approach upgrading pip then if it won't allow it while that directory is not empty
[14:45:06] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Remote host closed the connection)
[14:45:34] *** Quits: tga (~tga@user/tga) (Quit: leaving)
[14:45:45] <jinsun> I would just make a venv and not deal with the site-packages in /usr/local
[14:46:10] <ikonia> ok, that's something for me to research then
[14:46:19] <ikonia> is there actually any point to that directory ?
[14:46:23] <jinsun> that is the good thing about venvs, if it is behaving weird, you can just rm -rf it and make a new one
[14:47:21] <ikonia> ahhhh it appears it is important
[14:47:25] <jinsun> yes pip needs pep517, so it vendors it, without that folder pip won't work properly
[14:47:34] <ikonia> yup, I see that
[14:47:47] <ikonia> that feels odd then that pip can't manage the upgrade
[14:48:53] <very_sneaky> i've heard around the place that importing pip as a library and invoking it's main function or otherwise is a bad idea - can anybody elaborate on this thought process? I would have thought that it would be better than invoking it via a subprocess
[14:49:02] <parv> jinsun, Thanks for the suggestion; will try scalene too
[14:49:13] <nedbat> very_sneaky: it's only bad because pip doesn't promise that it will work.
[14:49:19] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[14:49:34] <nedbat> very_sneaky: can you tell us more about your situation?
[14:49:36] <very_sneaky> gotcha, so it's about interface stability
[14:50:51] <very_sneaky> i'm using conan to manage my C++ projects, and i have a dependency on sphinx for my documentation. conan (which is written in python), doesn't have any native capability to install packages or manage virtual environments, so i'm looking for a way to shoehorn that in, and looking for the best way to do it
[14:51:12] *** Joins: Joeee (~Joeee@188.252.198.59)
[14:51:28] <very_sneaky> i assume it's the same case for invoking the `venv` module or using `virtualenv`? should be done via subprocess rather than importing the lib?
[14:52:09] *** Quits: Mat1010 (~Mat1010@168.181.209.34) (Quit: Client closed)
[14:53:18] <nedbat> very_sneaky: conan doesn't have a simple way to say, "run this shell command"?
[14:55:14] *** cqi_ is now known as cqi
[14:55:38] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:56:14] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) ()
[14:56:22] <very_sneaky> nedbat: yeah, it's a python script, so i could just use the subprocess module
[14:56:25] <wyre> thank you very much jinsun 😊
[14:57:20] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[14:57:23] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[14:58:25] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[14:58:41] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:58:43] *** Joins: avane (~avane@fsf/member/avane)
[14:58:49] <very_sneaky> nedbat: i just figured that perhaps i could get tighter integration and that would be preferable to making assumptions about the target operating system, or whatever
[14:59:21] <nedbat> very_sneaky: i'm not sure, tbh
[15:00:37] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[15:01:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:02:10] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[15:02:38] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:03:22] *** Joins: magla (~gelignite@55d44ff4.access.ecotel.net)
[15:03:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[15:03:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:03:42] *** Quits: jay-m1261 (~jay-m@129.0.99.174) (Ping timeout: 256 seconds)
[15:03:42] *** Quits: jay-m126_ (~jay-m@129.0.99.174) (Ping timeout: 256 seconds)
[15:04:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:04:50] *** Quits: jay-m126 (~jay-m@129.0.99.174) (Ping timeout: 256 seconds)
[15:04:56] *** Quits: jay-m1262 (~jay-m@129.0.99.174) (Ping timeout: 272 seconds)
[15:05:20] *** Joins: jay-m126 (~jay-m@154.72.150.130)
[15:05:27] *** Joins: jay-m126_ (~jay-m@154.72.150.130)
[15:06:19] *** Joins: jay-m1261 (~jay-m@154.72.150.130)
[15:06:23] *** Joins: jay-m1262 (~jay-m@154.72.150.130)
[15:06:50] <ikonia> ha, irony, pip warning message when installing a modue
[15:06:51] <ikonia> module
[15:06:52] <ikonia> You should consider upgrading via the 'pip install --upgrade pip' command.
[15:07:19] <ikonia> the actual command it gives you to upgrade pip is the one that won't work because of a directory it's created
[15:07:40] <very_sneaky> i mean, i guess it still wouldn't get me away from invoking shell commands. it looks like virtualenvs weren't made to be activated programatically
[15:07:52] <very_sneaky> actually, maybe i'll look at how pipx deals with this
[15:08:31] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[15:09:15] *** Joins: kts (~kts@103.73.237.221)
[15:09:16] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:09:26] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:12:43] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:13:30] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[15:14:39] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:15:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:16:37] <very_sneaky> heh, pipx invokes a subprocess. i guess if that's what pypa are doing, that's probably what i should do
[15:17:35] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[15:18:18] *** Joins: s98259 (~s98259@ip129.ip-51-195-238.eu)
[15:19:26] *** Quits: cqi (~cqi@111.201.36.198) (Quit: Leaving)
[15:19:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:21:10] <jinsun> ikonia: it is unusual, it doesn't complain about that folder normally, upgrading pip just works, you can try running in verbose mode to see if that gives more details of the problem pip -vvv install --upgrade pip
[15:23:13] <ikonia> yeah, happy to, great idea
[15:23:21] *** Quits: rickybob (~rickybob@35.143.255.39) (Quit: rickybob)
[15:23:48] *** Joins: jhunk (~jhunk@c-69-143-130-202.hsd1.md.comcast.net)
[15:25:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[15:25:16] <ikonia> well that's useful , it looks to be due to the python version of a symlink
[15:25:58] <ikonia> what do you think https://paste.centos.org/view/9e6baec2
[15:26:03] *** Joins: wyclif (~wyclif@user/wyclif)
[15:26:48] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[15:27:01] <ikonia> it tries to remove /usr/local/lib/python3.7/site-packages/~ip as I read it, which is actually linked to /usr/local/lib/python3.7/site-packages/pip/ which is the parent of where the directory exists
[15:27:27] <ikonia> the ~ip directory appears to be a tmp directory created by the upgrade
[15:29:00] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[15:29:25] *** Quits: Hazza (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[15:30:25] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[15:30:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:31:32] *** Joins: wyclif (~wyclif@user/wyclif)
[15:33:49] <jinsun> hmm no idea why it would make the ~ip folder and the OS error seems to be because the source and destination are not on te same partition, which is also weird
[15:33:53] *** Joins: CIA[m] (~luvemidov@2001:470:69fc:105::1:d32e)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:36:49] <jinsun> anyway venvs are your friend, not much point in trying to upgrade pip in your /usr/local when you can avoid these problems by making a venv
[15:37:03] *** Joins: wyclif (~wyclif@user/wyclif)
[15:37:20] <ikonia> yeah, I was just curious to be honest about this, pythons not my bag normally, so venvs look a better option
[15:37:48] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[15:39:59] <Sora> can someone help me with this error please on tox install https://bpa.st/PVUQ
[15:40:04] <Sora> python is fundamentally broken
[15:41:02] <acresearch> Sora: why? what happened?
[15:41:05] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[15:41:12] <Sora> this error?
[15:41:15] <Sora> error in setuptools
[15:41:19] <Sora> that is pretty fundamental
[15:41:25] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[15:41:27] <Sora> it's system install of python on latest debian
[15:41:30] <nedbat> Sora: can you tell us what steps you took to get there?
[15:42:58] <Sora> https://deluge.readthedocs.io/en/latest/devguide/tutorials/01-setup.html
[15:43:01] <Sora> exactly this up until tox -e denv
[15:43:32] <Sora> and apt-get install tox
[15:44:01] <Sora> installing tox through pip same error
[15:45:28] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3)
[15:46:30] <nedbat> Sora: hmm, i'm not sure what's causing that
[15:46:50] <bjs> Sora: so you ran `tox -e denv` and it failed with this error?
[15:46:53] <Sora> correct
[15:47:06] <Sora> i also tried purging python from the system and reinstalling through apt
[15:47:16] <bjs> It's a bit weird because the error message doesn't mention tox at all
[15:47:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[15:47:30] <Sora> well tox is running this
[15:47:33] <Sora> ERROR: InvocationError for command /usr/bin/python3 -m virtualenv --system-site-packages --no-download --python /usr/bin/python3 .venv (exited with code 1)
[15:47:38] <Sora> so the error is in virtualenv
[15:47:47] <Sora> so virtualenv is shipping buggy packages or I have something else wrong
[15:48:06] <bjs> Oh I see,  tox ran that command and that command failed
[15:48:13] <Sora> in fact just running `/usr/bin/python3 -m virtualenv` gives the same error
[15:48:42] <bjs> Sora: what is /usr/bin/python3 --version
[15:48:51] <Sora> Python 3.9.2
[15:49:13] <nedbat> Sora: there are threads discussing this, and it seems to be a pip version mismatch with setuptools perhaps? There's no crisp solution that I've seen.
[15:50:13] <wyre> jinsun, I'm curious ... why you catch an EOFError? 🤔
[15:50:22] <bjs> is this a distribution that removes pip/venv and you have to re-install them?
[15:50:28] <nedbat> Sora: fwiw, debian has a habit of changing how python's environment tools are packaged, because of differences in packaging philosophy. that can complicate this issue.
[15:50:31] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[15:50:52] <bjs> it'd be nice if it at least re-installed the same versions again :/
[15:50:59] <wyre> oh, I see https://www.geeksforgeeks.org/handling-eoferror-exception-in-python/
[15:51:11] <Sora> it would be nice if debian's packages weren't a flaming pile of garbage
[15:51:24] <Sora> maybe I should just permanently move to ubuntu
[15:51:43] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[15:52:01] <nedbat> Sora: well, ubuntu is based on debian, so i'm not sure it would change this
[15:52:07] <bjs> Sora: for what it's worth, I always install my own local version of Python straight from the actual Python sources (I use pyenv to do that) and use that instead of the system packages
[15:52:24] <jinsun> wyre: input() throws EOFError in the thread after pressing Ctrl+C, and I assumed you didn't want to see the traceback for that
[15:52:26] <Sora> nedbat: yes, but the packages aren't 10 years out of date
[15:52:40] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:53:15] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[15:53:16] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:53:57] <very_sneaky> nedbat: for interest, it turns out that pypa actually have an official position on using pip as a library: https://pip.pypa.io/en/stable/user_guide/#using-pip-from-your-program
[15:54:12] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[15:54:22] <wyre> jinsun, I see, but I don't notice any difference if I remove that try/except statement 🤔
[15:54:39] *** Joins: stpz (~stpz@27.190.249.114)
[15:55:15] <jinsun> wyre: okay, I dunnow why I was getting that error then, might have been something specific to windows maybe?
[15:55:30] <wyre> ¯\_(ツ)_/¯
[15:55:37] <bjs> wyre: https://docs.python.org/3/library/functions.html#input  "When EOF is read, EOFError is raised. "
[15:55:40] <bjs> e.g. on Ctrl-D
[15:55:54] *** Quits: stpz (~stpz@27.190.249.114) (Client Quit)
[15:56:25] <wyre> I see bjs ty 😊
[15:56:34] <nedbat> very_sneaky: good find
[15:56:50] <wyre> but I'm not sure then why if I don't include this try/except the exception is suppressed
[15:57:08] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Killed (NickServ (GHOST command used by amo)))
[15:57:11] *** amo is now known as amogorkon
[15:57:12] <bjs> wyre: exceptions in a thread aren't reported to other threads
[15:57:34] *** Joins: amo (~amogorkon@user/amogorkon)
[15:57:43] *** Quits: amo (~amogorkon@user/amogorkon) (Killed (NickServ (GHOST command used by amogorkon)))
[15:57:43] <wyre> bjs, I guess I should force this in the case I'd want, right?
[15:58:09] *** Joins: amo (~amogorkon@user/amogorkon)
[15:59:28] <amogorkon> very_sneaky, the fact that pip can't be used as a lib is so frustrating
[15:59:30] <bjs> wyre: if you don't have the try/except, then on EOF you should see an EOFError printed to the screen
[15:59:31] *** Joins: barry1 (~Thunderbi@222.129.33.141)
[15:59:41] <bjs> wyre: but the parent thread will continue to run
[15:59:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:59:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 260 seconds)
[15:59:52] <amogorkon> we struggled with that in justuse for quite a while
[15:59:54] *** Joins: readytheory (~user@ip24-252-15-245.om.om.cox.net)
[16:00:34] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[16:00:36] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:01:08] *** Joins: Adoi (~Adoi@user/adoi)
[16:01:13] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[16:01:22] <readytheory> in c ecosystem there is "make" ;   is "doit" library most popular analog in python?
[16:01:47] <bjs> readytheory: well Python projects don't normally need a "make"-like thing at all
[16:02:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:02:45] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[16:03:04] *** Joins: cruncher (~cruncher@79.116.74.120)
[16:03:27] <nedbat> readytheory: and when they do, they often use make.
[16:03:40] <bjs> make is good at what it does :)
[16:03:45] <nedbat> readytheory: what things are you thinking of automating?
[16:04:10] <olspookishmagus> hello, what's with the following:
[16:04:12] <olspookishmagus> import datetime as dt
[16:04:13] <olspookishmagus> from datetime import datetime
[16:04:17] <olspookishmagus>  
[16:04:28] <bjs> olspookishmagus: what do you mean what is "with" the following?
[16:04:47] <olspookishmagus> isn't already the entire datetime module loaded as it is? why import a specific function from it?
[16:04:52] <nedbat> olspookishmagus: if you have those two lines in a program, it means someone wanted to talk about datetime in two different ways
[16:05:02] <nedbat> olspookishmagus: maybe because the code evolved over time in a messy way
[16:05:05] <bjs> olspookishmagus: the second line could have been written `datetime = dt.datetime`
[16:05:15] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[16:05:28] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:05:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:05:37] <olspookishmagus> but 'datetime' is both a module and a function within that module, right?
[16:05:47] <bjs> olspookishmagus: datetime.py contains a datetime class yeah
[16:05:48] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:05:54] <olspookishmagus> oh, a "class"
[16:06:12] <olspookishmagus> good thing to know the grounds I'm treading onto
[16:06:16] <bjs> olspookishmagus: the first imports the whole module and calls it "dt", the other imports the module (again, but it's already imported) and then grabs just the 'datetime' name (in this case, the class) from it
[16:06:18] <olspookishmagus> thank you bjs, nedbat
[16:06:50] <olspookishmagus> which is a reduntant import, as it is already imported, right?
[16:06:50] <bjs> olspookishmagus: I'm guessing the author just didn't want to write `dt.datetime` each time they wanted to mention the class.
[16:07:19] <bjs> olspookishmagus: yes and no,  the module is already imported but the name "datetime" doesn't exist.
[16:07:25] <olspookishmagus> well, this happens again later:
[16:07:28] <olspookishmagus> import subprocess
[16:07:29] <olspookishmagus> from subprocess import PIPE
[16:07:30] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[16:07:46] <bjs> olspookishmagus: right, if you only `import subprocess` you can't write PIPE,  you have to write subprocess.PIPE
[16:08:16] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 272 seconds)
[16:08:33] <bjs> and the author wanted the shorter name, so wrote the second import line to do that.
[16:08:37] <bjs> (I would guess)
[16:08:48] <olspookishmagus> ok, some light on the terminology would set me up for sailing even further without pestering you
[16:08:52] <Adoi> hello, in setUp() vs. setUpClass(), is the choice only about using the latter for elements, processes...that need to be done only once to be applied to the whole class?
[16:08:59] <bjs> olspookishmagus: which terminology?
[16:09:00] *** Joins: MajorBiscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl)
[16:10:02] *** Joins: Klinda (~superleag@user/klinda)
[16:10:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:10:59] <readytheory> bjs - am doing a tutorial that uses make to shortcut a tedious docker cli is why question came up.  It never occured to me to use "make" for docker stuff before.
[16:11:05] <olspookishmagus> bjs: is it module.class right?
[16:11:31] <bjs> olspookishmagus: maybe my correction to "class" was unhelpful,  it doesn't matter that it's a class
[16:11:38] *** Joins: aslicedbanjo (~aslicedba@host86-178-157-161.range86-178.btcentralplus.com)
[16:11:59] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[16:12:00] <Adoi> also, there is this stackoverflow example, https://bpa.st/XL3A..if setUp() is to be called per test, isn't this code wrong, since test1 and test2 have only one setUp() and tearDown() for both?
[16:12:26] <bjs> olspookishmagus: but `import module` will go and import module.py  (for example) and make it available as the variable  "module", so that y ou can go "module.some_name" to access a name (a variable, a class, a function ... whatever) from it
[16:12:37] *** Joins: Iolo (~iolo@user/Iolo)
[16:14:12] <nedbat> Adoi: that code isn't wrong: often tests share setup and teardown
[16:14:17] <bjs> olspookishmagus: `import module as another_name` will import module.py but instead make it available as the name "another_name".  and `from module import some_name` will import module.py but instead of making the whole module available, it only makes `some_name` available.
[16:14:56] <Adoi> nedbat, but this pair (setup and teardown) are frequently mentioned to be "per test"
[16:15:05] <bjs> olspookishmagus: here's a little exercise you can try https://bpa.st/YXVA  some of these lines won't work, try think about which ones and why.  Also think about which lines will stop working if you remove the second import
[16:15:14] <nedbat> Adoi: yes, they are executed anew for each test
[16:15:46] <Adoi> nedbat, ah, so there may be one pair within each fixture, being restarted for each test
[16:15:51] <olspookishmagus> but when it has something like from foo import bar, foo is a module and bar is a class right?
[16:16:00] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[16:16:04] <bjs> olspookishmagus: well it doesn't have to be a class, it can be any variable or function or class or whatever
[16:16:04] <nedbat> Adoi: i'm not sure i understand how you are using the word fixture there.
[16:16:39] <bjs> olspookishmagus: I think my correcting you that datetime.datetime happens to be a class was unhelpful,  it doesn't matter it's a class not a function.
[16:16:40] <olspookishmagus> bjs: so it's a name of ... something, that something which can be variable/function/class/whatever is called what? namespace? ...
[16:17:13] <bjs> olspookishmagus: "name" is the correct technical term here,  there's nothing fancier
[16:17:19] <olspookishmagus> when I put my hands on a language I'm not very familiar with, I like to learn the terms, so I can ask the right questions
[16:17:19] <Adoi> nedbat, I thought that was what the test process was called, which starts with setUp and ends with tearDown
[16:17:23] <olspookishmagus> cool.
[16:17:29] <olspookishmagus> thank you very much bjs
[16:17:43] <bjs> olspookishmagus: `from foo import ...` then the ... can be any variable, any class, any function. Python calls variables "names"
[16:17:52] <nedbat> Adoi: it might be that some people use it that way. I think of fixture as some supporting code or data for a test.
[16:18:09] <bjs> olspookishmagus: see bit.py/pynames1 for a better explanation of Python's "names" and variables/assignment.
[16:18:13] <bjs> oops haha
[16:18:21] <bjs> olspookishmagus: https://nedbatchelder.com/text/names1.html
[16:18:48] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:18:52] <bjs> My fingers found .py too easily there
[16:19:04] <nedbat> Adoi: often the point of setUp is to create the environment for the test, to make get the fixtures in place.
[16:19:08] *** Joins: sobkas (~sobkas@95.175.17.217)
[16:19:19] <olspookishmagus> ok I got it, in order to reference datetime.datetime.now() for example there's an "alias" setup as such: from datetime import datetime, right?
[16:19:39] <bjs> olspookishmagus: if you `import datetime` then it's datetime.datetime.now()
[16:19:53] <bjs> olspookishmagus: but if you `import datetime as dt` then it's `dt.datetime.now`, and if you `from datetime import datetime` it's just `datetime.now()`
[16:19:53] <Adoi> nedbat, and it does that for each test contained within the class, as I understand
[16:20:04] <olspookishmagus> perfect, that clicks
[16:20:15] <olspookishmagus> once again thank you bjs for your time and energy
[16:20:30] <nedbat> Adoi: yes
[16:21:04] <cyberjunkie> Well explained, bjs! Appreciate everyone who's listening and responding here.
[16:21:17] <Adoi> and those things that will be too costly to run for each test will be done once by setUpClass, right?
[16:21:47] <nedbat> Adoi: yes, though be careful not to couple your tests together with it
[16:22:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:23:24] <exarkun> Adoi: you may be interested in https://pypi.org/project/testresources/
[16:23:47] <Adoi> nedbat, am I correct that you mean tests should run independently from what setUpClass does?
[16:23:59] <nedbat> Adoi: they should run independently of each other.
[16:24:07] *** Joins: kts (~kts@103.73.237.221)
[16:24:41] *** Joins: Z-cat_ (~Z-cat@128-69-58-157.broadband.corbina.ru)
[16:24:53] <nedbat> Adoi: if you have code in setUpClass, presumably the test requires that code in order to run
[16:25:05] <olspookishmagus> anyone has a PDF of this presentation? http://bit.ly/pynames1
[16:25:09] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[16:25:31] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:25:40] *** Joins: savolla (~quassel@95.10.239.22)
[16:26:08] <bjs> olspookishmagus: i think it's only html slides,  nedbat ^
[16:26:33] <nedbat> olspookishmagus: it's slides, video, and HTML text.
[16:27:05] <olspookishmagus> yeah I saw your response here: https://nedbatchelder.com/text/names1.html#comment_15275
[16:27:08] <olspookishmagus> still grateful for this
[16:27:14] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:27:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:27:54] <Adoi> nedbat, it was just not clear to me what your warning referred to, concerning coupling
[16:27:54] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[16:28:29] <nedbat> Adoi: you could create something in setupClass. test1 could modify that thing. test2 could assume the state that test1 created. Now you can't run test2 without running test1.
[16:29:44] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[16:29:44] *** Quits: jay-m1262 (~jay-m@154.72.150.130) (Ping timeout: 250 seconds)
[16:29:44] *** Quits: jay-m126 (~jay-m@154.72.150.130) (Ping timeout: 250 seconds)
[16:30:05] *** Quits: jay-m1261 (~jay-m@154.72.150.130) (Ping timeout: 256 seconds)
[16:30:26] *** Quits: jay-m126_ (~jay-m@154.72.150.130) (Ping timeout: 272 seconds)
[16:30:49] *** Z-cat_ is now known as TheCat
[16:31:03] *** Quits: TheCat (~Z-cat@128-69-58-157.broadband.corbina.ru) (Changing host)
[16:31:03] *** Joins: TheCat (~Z-cat@user/z-cat)
[16:32:08] <olspookishmagus> >>> datetime.now()
[16:32:10] <olspookishmagus> datetime.datetime(2007, 12, 6, 16, 29, 43, 79043)
[16:32:18] <olspookishmagus> what's "79043" ?
[16:32:20] *** Quits: kts (~kts@103.73.237.221) (Ping timeout: 272 seconds)
[16:32:24] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[16:32:48] <deniska> olspookishmagus: microseconds
[16:33:24] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[16:34:02] *** Joins: ymwm__ (~yingmanwu@27.153.167.245)
[16:34:05] <Adoi> nedbat, right, so each has to be "standalone", or independently running from each other
[16:34:12] <nedbat> Adoi: yes
[16:34:35] <olspookishmagus> thank you deniska
[16:35:10] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:35:16] <olspookishmagus> now I'm playing with this command, trying to get the ms part to be 999999
[16:35:32] <olspookishmagus> like I used to stop my CASIO stopwatch at exactly 00:00:10.000
[16:35:55] <deniska> odds are one millionth
[16:36:27] <olspookishmagus> and what is the PDF?
[16:36:35] <Adoi> thank you very much, nedbat
[16:36:46] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Ping timeout: 272 seconds)
[16:36:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[16:37:17] <Payam> I never done math in Python. What is the simplest library to do matrix multiplication, inverse, eigenvalues and so one?
[16:37:22] <Payam> Linear Algebra
[16:37:34] <olspookishmagus> Payam: you're on my quest: refactoring MATLAB code
[16:37:39] <deniska> I guess computers are fast though: `while (c := datetime.now()).microsecond != 999999: pass`
[16:37:59] <Payam> olspookishmagus, No I don't wana do matlab
[16:38:02] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 272 seconds)
[16:38:23] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:38:24] <olspookishmagus> on the stopwatch unit, what's one thousandth of a microsecond called?
[16:38:59] <deniska> nanosecond?
[16:39:23] <Payam> 1e-6 . nano is -9
[16:39:25] <Payam> micro
[16:39:27] <Payam> right?
[16:39:32] <Payam> ah
[16:39:36] <Payam> nano it is
[16:39:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:40:10] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:40:18] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:40:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:41:05] *** Joins: georgios (~georgios@user/georgios)
[16:41:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:41:27] *** Joins: audio (~audio@user/audio)
[16:41:37] <olspookishmagus> well I haven't expressed it correctly
[16:41:37] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[16:41:40] <olspookishmagus> it's miliseconds
[16:42:07] <Payam> what?
[16:42:12] <olspookishmagus> same as ffmpeg and other applications: HOURS:MINUTES:SECONDS.MILISECONDS
[16:42:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:42:24] <Payam> 1/1000 * 10^-6 = 10^-9
[16:42:37] <Payam> ah
[16:42:38] <Payam> okej
[16:43:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:44:07] <olspookishmagus> well I'm wrong again, that stopwatch I used to have it used to show hundredths of seconds {00..99}
[16:44:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:44:20] <Payam> ah
[16:44:34] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:44:36] <Payam> What stopwatch is it?
[16:46:29] <olspookishmagus> something like that: https://www.oroloi.gr/Images/Products/Normal/2532088.jpg
[16:46:30] *** Joins: kts (~kts@103.73.237.221)
[16:46:42] <olspookishmagus> anyway, enough with the rabbit holes, I have to read on about: psycopg2 now
[16:46:44] <Payam> nice
[16:46:46] <olspookishmagus> thank you Payam and deniska
[16:49:26] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[16:51:57] *** Joins: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net)
[16:52:48] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:52:51] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[16:53:11] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[16:55:59] <olspookishmagus> what kind of python data structure is what datetime.datetime.now() returns?
[16:56:03] <olspookishmagus> >>> datetime.datetime.now()
[16:56:04] <olspookishmagus> datetime.datetime(2022, 3, 6, 15, 24, 37, 296821)
[16:56:18] <nedbat> olspookishmagus: it returns a datetime object
[16:56:21] <olspookishmagus> I'm looking on how does the str() function handles that
[16:56:41] <olspookishmagus> "object"... ok
[16:56:46] <olspookishmagus> things are getting interesting
[16:57:10] <olspookishmagus> why haven't I meddled with Python so far? things are getting very interesting very fast :D
[16:57:13] <nedbat> olspookishmagus: that object is implemented in C code, so you won't find the Python that does it.
[16:57:13] <olspookishmagus> thank you nedbat
[16:57:30] <nedbat> "why haven't I meddled with Python so far?" misspent youth I guess :)
[16:58:00] <olspookishmagus> I'm on my mid-40s, so yeah that checks out
[16:58:37] *** Joins: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de)
[16:59:43] <olspookishmagus> interesting stuff to explain the inner workings of those: https://bpa.st/CVSA
[17:00:05] <olspookishmagus> oh there's even a raw option, here (it's better): https://bpa.st/raw/CVSA
[17:00:18] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:00:52] *** Joins: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de)
[17:01:11] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[17:01:24] <nedbat> (actually, i prefer the non-raw, so we have line numbers)
[17:01:27] *** Quits: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:01:54] *** Joins: Auron (Auron956@user/auron)
[17:02:10] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:02:14] *** Joins: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de)
[17:02:21] <olspookishmagus> I mean how does str know when to use dashes or colons or dots
[17:02:37] <nedbat> olspookishmagus: str(x) calls x.__str__(), so the class can decide how it behaves.
[17:02:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:02:50] <bjs> olspookishmagus: str() just asks the object to do it,  so it's up to the datetime or date classes to do that
[17:03:06] <nedbat> olspookishmagus: take a look at type(d.date())  and type(d.time()).  they are different classes
[17:04:00] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Ping timeout: 272 seconds)
[17:04:12] <bjs> olspookishmagus: you can see the actual code in datetime.py for it if you want.  .date() returns a `date` object, whose __str__ is defined here https://github.com/python/cpython/blob/3.10/Lib/datetime.py#L938
[17:04:29] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[17:04:31] <bjs> and this is what str() ends up calling, and this is the code that puts the dashes in.
[17:04:36] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[17:05:22] <bjs> (note the `__str__ = isoformat` telling Python to use the `isoformat` method when calling str())
[17:06:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:06:44] *** Joins: Midjak (~Midjak@82.66.147.146)
[17:06:51] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:07:03] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[17:08:42] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Client Quit)
[17:11:12] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[17:11:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:16:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:16:40] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[17:17:23] *** Joins: wyclif (~wyclif@user/wyclif)
[17:18:21] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[17:19:21] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[17:19:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:19:57] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[17:20:16] *** Quits: kts (~kts@103.73.237.221) (Ping timeout: 256 seconds)
[17:20:17] <wyre> bjs, when I use ctrl+c I can't see the EOFError https://asciinema.org/a/m9OIxuY9JBgWmCHvkygtehisK
[17:20:35] <bjs> wyre: ctrl+c isn't EOF, it's a keyboardinterrupt
[17:20:46] <bjs> if you ctrl+d  (or generate EOF some other way) then you'll see EOFError
[17:20:48] *** Joins: sirwilliam (~sirwillia@c-98-197-61-131.hsd1.tx.comcast.net)
[17:20:56] * olspookishmagus bows to nedbat and bjs 
[17:21:24] <wyre> bjs, and could I use something like `except EOFError or KeyboardInterrupt:`? 🤔
[17:21:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:22:35] <bjs> wyre: `except (EOFError, KeyboardInterrupt):`
[17:22:51] <wyre> well, actually the keyboardinterrupt is handled in the main thread
[17:23:05] <wyre> so I guess I just need to add the handling for EOFError as jinsun did 😜
[17:23:07] *** Joins: wyclif (~wyclif@user/wyclif)
[17:23:10] <olspookishmagus> and in general all the "delta" just mean change between two "values" right? nothing to do with Dirac Delta function right? ^^
[17:23:11] <bjs> wyre: yes it's a signal (SIGINT) and signals are always handled by the main thread
[17:23:28] <wyre> ty :-)
[17:23:36] *** Joins: bluedust (~bluedust@103.165.167.61)
[17:23:39] <nedbat> olspookishmagus: timedelta is the duration between two times
[17:23:47] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[17:23:50] <OnceMe> can someone help me/guide me how to write a script which will take two excel files (one csv and one xlsx), and go through xlsx and for each username in xlsx, search csv and then replace by that username a new ID which is present in row in xlsx? does this already exist somewhere or what should I do, go with pandas?
[17:23:54] *** Parts: sirwilliam (~sirwillia@c-98-197-61-131.hsd1.tx.comcast.net) ()
[17:23:56] <bjs> olspookishmagus: yeah, it means in the calculus "difference" sense
[17:23:56] <nedbat> it also has nothing to do with the mississippi delta :)
[17:24:37] <olspookishmagus> is this even a term? a "python script" instead of a "python program"?
[17:24:46] <bjs> olspookishmagus: not a technical term no,  but it's a term people use
[17:25:06] <bjs> to mean "a py file you run directly" rather than "py files you import"
[17:25:15] <bjs> or in some more nebulous unclear definition of "scripting"
[17:25:21] <olspookishmagus> maybe an oneliner?
[17:25:50] <bjs> olspookishmagus: there's no definition and Python itself doesn't use either the word "program" or "script" generally, to avoid this kind of confusion
[17:25:57] <olspookishmagus> interestingly I haven't search with python modules there are for meddling with xls(:?x?) files
[17:26:43] <olspookishmagus> bjs: well then, since as you already might have figured with me being psyched about the lingo, what's the term? "python code"?
[17:27:20] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[17:27:26] *** Joins: han-solo (~han-solo@user/han-solo)
[17:27:50] <olspookishmagus> OnceMe: start with modules: openpyxl and csv
[17:28:06] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[17:28:08] <bjs> olspookishmagus: Python says py files are "modules", and you can execute it by importing it or you running it from the command line
[17:28:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:28:34] *** Joins: wyclif (~wyclif@user/wyclif)
[17:29:00] <olspookishmagus> bjs: superb
[17:30:24] <bjs> olspookishmagus: but yeah, most people will just say "program" or "script" but note that there is no definition of what these actually are, it's just informal
[17:30:54] <olspookishmagus> absofruitely
[17:30:58] <bjs> and some people, sadly, get very caught up in terminology like that and will argue until they're blue about it :(
[17:31:12] <OnceMe> olspookishmagus: how can I with openpyxl iterate through sheet and get usernames?
[17:31:25] <olspookishmagus> I was brought up amidst such flames in Usenet newsgroups
[17:31:43] <olspookishmagus> and this is why I'm very strict on the terms
[17:32:07] <olspookishmagus> especially @ comp.lang.c.questions
[17:32:31] <olspookishmagus> if there was even suspicion this was a homework or an assingment you were bound for a long torturing
[17:33:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:33:33] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[17:34:30] *** Joins: wyclif (~wyclif@user/wyclif)
[17:35:06] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) (Remote host closed the connection)
[17:37:17] <olspookishmagus> now I have a question regarding this: https://bpa.st/PWQA
[17:37:23] <jinsun> OnceMe: there probably isn't anything readymade that would do what you want, you would have to write some logic, and it would probably be easier to do with pandas than openpyxl or csv
[17:37:42] <olspookishmagus> yeah pandas is also excellent
[17:37:53] <OnceMe> how to iterate over pandas's df?
[17:38:09] <bjs> olspookishmagus: you didn't say what the question was
[17:38:46] <olspookishmagus> bjs: yeah sorry, how that triple quote gets evaluated and how does the .format part works
[17:39:07] <bjs> olspookishmagus: the triple quote is just a string
[17:39:14] <olspookishmagus> OnceMe: have a variable and loop through it?
[17:39:22] <olspookishmagus> of a single quote, right?
[17:39:28] <bjs> olspookishmagus: python lets you use ' or " or """ or ''' as quotes around a string.
[17:39:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:39:41] <bjs> olspookishmagus: no x = """hello""" is the same as `x = 'hello'
[17:39:50] <bjs> oops forget that `
[17:39:59] <olspookishmagus> ok
[17:40:01] <jinsun> OnceMe: normally you don't iterate over dataframe, just do vectorized operations over entire columns, if you would write for loops then you don't get much benefit of pandas
[17:40:03] *** Joins: wyclif (~wyclif@user/wyclif)
[17:40:18] <bjs> olspookishmagus: then .format() is string formatting. "hello {}".format("world") == "hello world",  see the tutorial https://docs.python.org/3/tutorial/inputoutput.html#the-string-format-method
[17:40:35] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Read error: Connection reset by peer)
[17:41:02] <bjs> olspookishmagus: here they are using ''' as it's a multi-line string and ''' lets you have newlines in it.
[17:41:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:43:34] <olspookishmagus> bjs: and whenever there's a {} it looks for a variable/value to match, like C's printf right?
[17:43:50] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[17:43:59] <bjs> olspookishmagus: yeah, the {} are placeholders that get replaced later
[17:44:13] <olspookishmagus> bjs: can I buy you a beer somehow?
[17:44:16] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:c486:dc7e:8ce4:e6c9)
[17:44:25] <olspookishmagus> you too nedbat
[17:44:25] <bjs> olspookishmagus: no, we don't charge for helping here
[17:44:27] <jinsun> OnceMe: it would probably be easier if you show how the dataframes look and what you want to do there, I couldn't get what you wanted to do from your text description
[17:44:58] <nedbat> olspookishmagus: the fact that you want to is enough reward :)
[17:45:03] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.55)
[17:45:07] *** Joins: georgios (~georgios@user/georgios)
[17:45:13] <olspookishmagus> "charge"? I was merely trying to show my gratitude - anyway, WHEN WE MEET then
[17:45:25] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:45:36] <olspookishmagus> nedbat: catch you @ at a conference or something, be wary and alert :D
[17:45:38] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[17:45:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:45:47] * olspookishmagus goes to make a 6-shot espresso
[17:45:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[17:45:52] <nedbat> "when you least expect it, expect it!"
[17:46:46] *** Joins: wyclif (~wyclif@user/wyclif)
[17:47:42] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.138) (Ping timeout: 272 seconds)
[17:48:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 260 seconds)
[17:48:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:48:51] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[17:48:53] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3) (Ping timeout: 252 seconds)
[17:49:48] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[17:49:48] *** Quits: jhunk (~jhunk@c-69-143-130-202.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[17:50:33] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 256 seconds)
[17:51:16] *** Joins: bluedust (~bluedust@103.165.167.61)
[17:51:31] *** Joins: kaivai (~kaivai@user/kaivai)
[17:53:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[18:00:25] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[18:00:32] *** Joins: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net)
[18:00:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:01:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:01:46] *** Joins: kts (~kts@103.73.237.247)
[18:03:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:03:36] <readytheory> in fastAPI, if I reference a global variable should multiple calls to an enpoint see the vlaue increase?  https://bpa.st/NOWA
[18:04:10] <readytheory> "the vlaue increase" I mean: the global-ness persist between invocations
[18:04:19] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e094-2189-f138-c84d.res6.spectrum.com)
[18:04:43] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 256 seconds)
[18:05:08] <fakenullie> readytheory: if it all happens in one process
[18:05:09] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[18:06:58] *** Joins: bahamas (~lucian@84.232.140.52)
[18:06:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:07:07] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[18:07:18] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 256 seconds)
[18:07:27] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:08:37] <nedbat> readytheory: and if the process hasn't restarted.  how important is it for the value to increase?
[18:09:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[18:09:11] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[18:09:18] *** Joins: toolbox (~toolbox@h213-21-123-59.cust.a3fiber.se)
[18:09:52] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:09:57] *** Joins: mxp (~mxp@185.16.205.131)
[18:10:24] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[18:10:53] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[18:11:00] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[18:11:07] <readytheory> fakenullie nedbat -- thanks I need to redesign to pass the value.  I want the variables reset at start of each call but simultaneous calls shouldn't clobber each other.  I was lazy/sloppy and put some stuff in globals and had bad feelings
[18:11:11] <olspookishmagus> is this _accurate_? https://bpa.st/raw/6S5Q
[18:11:18] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:11:28] *** Joins: Enissay (~Enissay@user/enissay)
[18:11:33] <nedbat> olspookishmagus: it's hard to say
[18:11:35] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:11:58] <jinsun> not true in general
[18:12:00] <nedbat> olspookishmagus: in that particular case, it could be right, but   a.b().c()   can be many things
[18:12:16] <olspookishmagus> with the risk of being offtopic, I made that with this tool: https://github.com/mythsman/Jave5 I've been using it since ages
[18:12:24] <olspookishmagus> nedbat: much much appreciated
[18:12:29] <jinsun> cursor could be a function that returns a object with execute method, and not be a class
[18:13:05] <olspookishmagus> so you always have to to either aware of the implementation or investigate
[18:13:08] <readytheory> olspookishmagus: whatever "b" is, it is a callable that returns something that has an attribute named "c"  and c is a callable
[18:13:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:13:34] <olspookishmagus> readytheory: what you have just said, does it always apply to a.b().c() ?
[18:13:42] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[18:14:02] <jinsun> olspookishmagus: normally you don't care what it is, but what can do with it or what it contains
[18:14:14] *** Quits: amo (~amogorkon@user/amogorkon) (Read error: Connection reset by peer)
[18:14:15] <readytheory> olspookishmagus: anything with ()   is a callable and..
[18:14:19] <olspookishmagus> jinsun: did you just assume I'm normal? ^^
[18:14:20] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[18:14:23] <newdimension> Anyone use Pycharm? I have a question about folder organization
[18:14:32] <toolbox> Reading in CSV data into a DataFrame. Looking to loop through a specific column, add some prefix and then read each line o a result text file.
[18:14:45] <han-solo> readytheory: if you want to keep a state, there's `app.state` and in request, `request.app.state` iirc
[18:15:05] <olspookishmagus> toolbox: OnceMe was also trying to do stuff with CSVs and XLSXs
[18:15:09] <readytheory> .. a callable with .X    means the callable returns .X   -- or anythway the programmer expect/hoped/guessed it did when typing :)
[18:15:13] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[18:15:42] *** Joins: wyclif (~wyclif@user/wyclif)
[18:15:55] <olspookishmagus> in my case that also gets a "fetchall()" in the end
[18:16:07] <olspookishmagus> I don't think 6 shots will be enough ^^
[18:16:14] <toolbox>  olspookishmagus Actually I need to transform CSV data to LDIF for pouplating LDAP server. But I do not find a tool och script that match 100%.
[18:16:16] <readytheory> but x.y()   can mean a lot of things.  One commone one:  there is a file named "x.py" and it has a function named y that is not part of any class
[18:16:21] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[18:16:26] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[18:17:43] <readytheory> olspookishmagus: for me, coming from basic c#/java, this was very confusing, and the "import x from y" also.   Were you asking about this stuff in context of unittest autodiscovery?
[18:18:25] <jinsun> toolbox: you can add a prefix to a column by just doing `df[column] = prefix + df[column]` and for writing to a file just use df.to_csv
[18:19:18] <olspookishmagus> readytheory: like I said, I like to be technically precise when I'm asking questions - when I was learning stuff (still am) the elders were being triggered if you were throwing non-technical terms and I eventually got taught to avoid that
[18:20:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[18:20:34] <olspookishmagus> an example of what I'm talking about: https://2.bp.blogspot.com/-Ifgl3TXB4oA/U0aIfZH51RI/AAAAAAAALCo/9z9HpE2Iz7M/s1600/scummvm00219.png
[18:20:38] *** Quits: hqdruxn08__ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 268 seconds)
[18:20:45] *** Joins: wyclif (~wyclif@user/wyclif)
[18:21:03] <olspookishmagus> by the way, I'm pasting links in here, I hope I won't get kicked/banned because of that, is this allowed?
[18:22:02] *** Quits: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net) (Ping timeout: 256 seconds)
[18:22:06] *** Joins: dag (~d@user/dag)
[18:22:23] <olspookishmagus> so fetchall() according to the spec returns a "list of tuples"
[18:23:24] *** Joins: bluedust (~bluedust@103.165.167.61)
[18:23:36] <nedbat> olspookishmagus: links are fine
[18:23:42] *** Joins: Jonatin (~Jonatin@177.197.107.130)
[18:23:51] <olspookishmagus> python's interpreter sure helps speeding up learning about it
[18:23:57] <nedbat> (thought we don't get many memes....)
[18:25:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[18:26:20] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[18:26:50] <olspookishmagus> well Dawking (Richard) did a cool treatise on memes
[18:27:00] <olspookishmagus> Dawkins* but enough about being off-topic
[18:28:40] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[18:28:46] <readytheory> olspookishmagus: I have never seen a really great REPL with code completion.  But yes, repl and dir() and type() help a lot with the kinds of questions you are asking, and it seems to me like you are asking important questions  a lot of "I just need this code to work" developers never ask.  Anyway after two years I still am realizing frequently I have bad understanding of that stuff
[18:29:39] *** Quits: ideopathic_ (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[18:30:01] <readytheory> a good book is "fluent python" and you can take a free trial at O'reilly to read it.  Or for $100/year join acm.org and get full access to the O'Reilly learning library
[18:30:36] <olspookishmagus> thank you readytheory
[18:31:36] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[18:31:43] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:32:35] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:33:18] <Jonatin> I'm trying to get division and mod operations to return the same  values as windows calculator, https://pastebin.com/LCf8SY5C - any idea what am i getting wrong in this ?
[18:34:30] <deniska> Jonatin: d_hex is a positive number
[18:34:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:34:44] <deniska> python ints aren't fixed width
[18:35:09] <CoderCharmander> Jonatin: Python integers are arbitrary precision, you can't set use two's complement
[18:35:19] <CoderCharmander> s/set use/use
[18:35:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:36:03] <Jonatin> hmm I thought the first bit would tell python what to interpret it as
[18:36:24] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[18:37:18] <jinsun> putting a mius sign in front does that job
[18:37:45] <jinsun> because there is no fix width the fisrt bit is always 1
[18:37:54] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[18:38:08] <jinsun> ugh I can't type
[18:38:14] <jinsun> s/mius/minus
[18:38:24] <jinsun> s/fisrt/first
[18:38:32] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 240 seconds)
[18:39:13] *** Joins: creedofnecessity (~creedofne@mobile-107-77-199-124.mobile.att.net)
[18:39:49] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-543d-a065-e6d9-3062.res6.spectrum.com)
[18:39:49] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[18:39:58] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[18:40:59] <Jonatin> jinsun, you mean a minus sign just like I did in the decimal representation but for the hex number?
[18:41:10] *** Joins: Barones (~Barones@user/Barones)
[18:42:10] <jinsun> yes but the hex number has to change too
[18:42:25] <Jonatin> how so ?
[18:42:28] <jinsun>  hex(-108209234) is -0x6732452
[18:42:37] <jinsun> not -0xFFFFFFFFF98CDBAE
[18:43:29] <Jonatin> ah ok, thank you! this explains the division operation, but what about the mod operation ? I havent been able to get the correct result with none of my tries
[18:44:07] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Quit: leaving)
[18:44:18] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[18:44:58] <jinsun> a % b is the same as a - math.floor(a / b) * b
[18:45:01] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:45:10] <jinsun> so you always get +ve values
[18:45:49] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[18:46:54] *** Quits: cl (~quassel@user/ouemt) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[18:46:57] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[18:47:15] *** Joins: ouemt (~quassel@user/ouemt)
[18:47:18] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[18:47:36] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d96f:789:dcb9:a5e6)
[18:47:36] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d96f:789:dcb9:a5e6) (Changing host)
[18:47:36] *** Joins: skapata (~Skapata@user/skapata)
[18:48:11] *** Joins: wyclif (~wyclif@user/wyclif)
[18:50:02] <Jonatin> jinsun what is +ve ?
[18:50:14] <jinsun> positive
[18:50:35] <jinsun> what you wanted and what your calculator is doing is probably math.copysign(abs(d_dec) % divisor, d_dec)
[18:50:37] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[18:50:46] *** Joins: martums599 (~martums@user/martums)
[18:50:51] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[18:50:57] <jinsun> but python uses the other definition I gave before
[18:51:27] <jinsun> s/wanted/expected
[18:51:52] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:52:02] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[18:52:08] *** Joins: revolve (~u0_a227@82-132-238-140.dab.02.net)
[18:53:00] <Jonatin> yes, it was exactly like you mentioned, but why is python different?
[18:53:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[18:53:51] <jinsun> many times the way python does it is more useful, even if less intuitive for negative numbers
[18:53:53] <Jonatin> is that because integers are arbitrary precision or some other reason? sorry i'm not good at math
[18:54:12] *** Quits: martums59 (~martums@user/martums) (Ping timeout: 272 seconds)
[18:54:13] *** martums599 is now known as martums59
[18:54:19] <Jonatin> thank you:-)
[18:56:49] <deniska> Jonatin: reminder being always positive is quite convenient
[18:57:10] <deniska> when indexing into buffers with wrap-around and such
[18:57:35] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:58:59] *** Joins: blackout69 (~blackout6@37.183.230.121)
[18:58:59] *** Joins: akk (~akk@75.161.130.204)
[19:00:26] <wyre> bjs, I was trying to connect two threads by an event ... but I'm confused on why is the event triggering the print in the middle of the input https://asciinema.org/a/hqIQ2IcNUEBTP1u7QPoQHMmDh
[19:01:27] *** Joins: wyclif (~wyclif@user/wyclif)
[19:04:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:04:22] <jinsun> wyre: well, where did you expect it to show up? while your put thread is waiting for input, the print thread gets a chance to print
[19:04:43] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:05:25] <wyre> jinsun, couldn't I make it wait? 🤔
[19:06:52] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[19:07:22] <jinsun> well you can just not have the print thread and do the print after the input in the put thread itself
[19:07:51] *** Joins: elgraz (~elgraz@151.65.13.40)
[19:07:56] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:10:06] <jinsun> or maybe do the ni_e.set() after getting the input(), not sure, but doing everything in single thread is definitely more reliable than trying to get multiple threads to behave
[19:10:07] <Adoi> hello, when we are writing code under 'class SomeClass(unittest.TestCase):' do we not need to use  'def __init__(self,..):' in order to define the variables that emerge in the following test and helper functions in the class?
[19:11:13] <jinsun> yes don't write init for TestCase, use setupClass instead
[19:11:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[19:11:21] <Adoi> for ex. the first test in the class uses "self.url" without having initiated i.e. 'self.url = url'
[19:12:05] *** Joins: raitonoberu (~Username@188.162.73.210)
[19:12:26] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[19:12:30] *** Joins: wyclif (~wyclif@user/wyclif)
[19:12:46] <Adoi> even setUpClass is not used in my example.
[19:12:56] <fakenullie> Adoi: you're supposed to use setUp or setUpClass
[19:12:56] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[19:13:16] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 240 seconds)
[19:13:16] <Adoi> neither is used in the example I have
[19:13:21] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[19:13:22] <fakenullie> show us the example
[19:14:08] <Adoi> sure
[19:14:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:14:26] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[19:14:54] <Adoi> this is it ; https://bpa.st/RFRA
[19:15:02] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[19:15:38] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[19:15:38] *** Joins: humberto1 (~humbertow@189.236.30.197)
[19:15:41] <fakenullie> it assigns to the self.url in test method and then helper functions use it
[19:15:46] *** Quits: oilt^ (~oilt@50.232.121.75) (Ping timeout: 245 seconds)
[19:16:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:16:33] *** Joins: Blankspace (~androirc@user/blankspace)
[19:16:44] <jinsun> probably would have been better to write a setUp anyway, but this way works too
[19:16:58] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[19:17:10] <Adoi> so there is no setUp, no setUpClass, one test functions comtains 'self.url with no prior mention of it (and how come the following helper functions just adopt it?) '
[19:17:17] <Adoi> contains*
[19:17:19] <fakenullie> I'd pass url to helper methods
[19:17:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[19:17:34] <fakenullie> Adoi: that's how python works, no declaration is needed
[19:17:35] *** Joins: zmotaj_ (~zmotaj@86.61.80.191)
[19:17:52] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 250 seconds)
[19:18:02] *** Joins: wyclif (~wyclif@user/wyclif)
[19:18:08] <fakenullie> Adoi: but the code isn't good, yes
[19:18:19] <Helle> oh, I am doing such fun things today, composing iterators, because iteratorception is just what we need.....
[19:18:22] <jinsun> Adoi: it works because only test_PageProperties is called, and there is guarantee that line 14 will run before the lines below
[19:18:37] <Helle> let's see if itertools can help
[19:19:12] <fakenullie> chain.from_iterable works for some cases
[19:19:16] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[19:19:44] <Helle> I think that is what I need yeah
[19:19:45] <wyre> jinsun, sure, but my point is just that, learning about inter-threads communication 😊
[19:19:53] *** Joins: paul424 (~tom@ip-5-172-236-92.multi.internet.cyfrowypolsat.pl)
[19:20:12] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[19:20:12] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 240 seconds)
[19:20:37] <jinsun> wyre: a very important thing to learn there is the avoid inter-threads communication as much as possible :D
[19:21:07] <Pi-sistance> with , with open('some_numbers.txt','r') as f: for line in f:      how does the method know im referring to lines? lines isnt a special word, I replaced it with anything
[19:21:22] <wyre> jinsun, so the arch is just led threads to communicate with the main one? 🤔
[19:21:23] <Pi-sistance> so it must be the only possible variable?
[19:21:26] <wyre> s/led/let/
[19:21:38] <vlt> Pi-sistance: That’s the default iterator.
[19:21:41] *** Joins: jamea (~jamea@177.239.81.39)
[19:21:44] <fakenullie> Pi-sistance: because files are iterated line by line
[19:21:47] <wyre> s/led/allow/
[19:22:29] <Pi-sistance> ok, I guess it is read and write methods afterall so guess that makes sense, thanks.
[19:22:39] <vlt> Pi-sistance: "for foo in f:" would work the same.
[19:23:01] <Pi-sistance> yeah i tried already, well moomins
[19:23:14] <fakenullie> I think while (chunk := f.read(chunksize) could work
[19:23:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[19:23:24] <fakenullie> In 3.8 and up
[19:23:45] *** Joins: wyclif (~wyclif@user/wyclif)
[19:24:04] <fakenullie> while (chunk := f.read(chunksize)):
[19:24:14] <Adoi> jinsun, oh, right, I understand that. but for the other point; 1) is setUpClass, which serves to run one-time operations for the whole class, also the place that replaces the above-mentioned '__init__' ? 2) or is it not necessarily the case, and that we can add 'self.something' to a test or its related functions in this kind of class without having to introduce it before?
[19:24:36] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Ping timeout: 240 seconds)
[19:25:00] <fakenullie> Adoi: we can assign and create instance variables at any time
[19:25:24] <jinsun> wyre: more like, try not to have threads, or if you must, then use simple things like ThreadPoolexecutor, and deal with the synchronisation stuff only in the rare worst cases
[19:25:25] <fakenullie> Adoi: you will get attribute error if you try to read it before assignment
[19:26:07] *** Joins: masoudd (~masoudd@user/masoudd)
[19:26:11] *** Joins: oilt^ (~oilt@50.232.121.75)
[19:26:28] *** Joins: Everything (~Everythin@37.115.210.35)
[19:26:52] <Adoi> yeah but I cant even assign it without passing it in __init__ first in another arbitrary python class. it gets rejected. here it is not the case
[19:26:54] <jinsun> Adoi: you can directly do it in the test function, the setup stuff is useful for not repeating the same thing at the beginning of each function
[19:27:28] <fakenullie> Adoi: you can
[19:27:47] <fakenullie> Adoi: what do you mean by "gets rejected"?
[19:27:55] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[19:28:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[19:28:21] <Adoi> jinsun, so setUp and setUpClass have unrelated roles to my current question, and with test functions, I can directly pass 'self.whatever'in them
[19:28:48] <Adoi> fakenullie, I mean I get error when I do that
[19:28:49] *** Quits: raitonoberu (~Username@188.162.73.210) (Quit: Going offline, see ya! (www.adiirc.com))
[19:28:49] *** Quits: Blankspace (~androirc@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:29:08] <fakenullie> Adoi: example would help
[19:29:16] *** Joins: wyclif (~wyclif@user/wyclif)
[19:29:24] *** TonyStone31 is now known as TonyStone
[19:29:29] <jinsun> "pass" is the wrong word, you are setting attributes to self, and self is passed to the test function automatically
[19:29:47] <fakenullie> Adoi: maybe you try to read before you assign, or you use special classes like dataclass or class with __slots__ or other classes with redefined __setattribute__
[19:31:04] *** Joins: revolve_ (~u0_a227@82-132-238-140.dab.02.net)
[19:31:04] *** Quits: revolve (~u0_a227@82-132-238-140.dab.02.net) (Read error: Connection reset by peer)
[19:31:33] <Adoi> jinsun, yes, I am setting attributes to self, but I am doing it within the test function, at the beginning of it. my question is, do we not need to do it beforehand? #
[19:31:56] <jinsun> you need to do it before you use that attribute
[19:32:22] *** Joins: Doffi (~doffi@91.132.197.188)
[19:32:26] *** Joins: stockh0lm (~Andreas@p200300d2c73a0400e9da7e37d42463e6.dip0.t-ipconnect.de)
[19:32:32] <jinsun> doesn't matter if you do it in the test method or in the setup
[19:33:00] *** Joins: marcello1 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[19:34:14] <Adoi> what is the point of 'def__init_(self,...)', then, in other cases?
[19:34:30] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[19:34:45] <Adoi> we can simply add 'self.whatever' in the function/method on the spot, just before we use it
[19:34:48] <fakenullie> Adoi: to initialize instance variable when you create instance of a class
[19:35:03] <fakenullie> it's the method which called when you create an instance
[19:35:06] <jinsun> it gets called automatically when you create an instance of the class, so you don't have to call it manually
[19:35:27] <jinsun> you could do the same thing in another function but python won't call it automatically
[19:35:45] <Adoi> how different is 'self.url* in the pasted example? does it not need to get initialized?
[19:36:03] *** Quits: kmh (~kmh@2a00:6020:5004:6800:75b3:49e:f05a:4982) (Quit: Leaving)
[19:36:03] <fakenullie> ah, sorry, I mean "assign"
[19:36:11] <fakenullie> there's no such thing as separate initialization
[19:36:11] <bjs> Adoi: going `self.url = ...` is what initialises it, by assigning a value to it
[19:36:36] <bjs> Adoi: it doesn't matter where this happens, whether in __init__ or in a setUp method or in any other method, so long as it happens before you try to use it
[19:36:37] <Adoi> bjs, so that comes back to what I formerly asked; do we not necessarily need __init__ to initialize?
[19:36:57] <bjs> Adoi: no you do not,  __init__ is just a convenience to the programmer
[19:37:00] <Adoi> bjs, your last reply clarifies it
[19:37:22] <bjs> Python will automatically call it for you when the instance is created so you can do do some 'setup' of the instance straight away
[19:37:45] <bjs> (__init__ is important if you want to pass arguments to the class, like `C(1,2,3)` though, as it's __init__ that will receive them)
[19:39:08] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[19:39:22] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f0e4:c086:e571:9fdb)
[19:39:38] <Adoi> would adding def__init__(self,url) = 'https://...' be identical?
[19:40:00] <bjs> Adoi: be identical to what?   currently this class doesn't accept a "url" argument at all
[19:40:37] <bjs> Adoi: also I'm not really sure what to make of that line, it's a bit weird is it supposed to be a `def` or an assignment?
[19:40:41] *** Joins: Pickchea (~private@user/pickchea)
[19:40:42] <Adoi> sorry, I mean def__init__(self,url): self.url = 'https://...'
[19:41:04] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 272 seconds)
[19:41:08] <fakenullie> this won't work with TestCase classes I think, testrunner will ignore those
[19:41:18] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:9468:2066:9a2d:cc29) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:41:33] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:9468:2066:9a2d:cc29)
[19:41:34] <bjs> Adoi: well this would add a "url" argument to your class,  which is not what the class has at the moment, so it'd probably break the test runner
[19:41:48] *** Quits: elgraz (~elgraz@151.65.13.40) (Quit: Leaving)
[19:41:56] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[19:42:10] <Adoi> so what I thought __init__ would do is not what happens in the case of test
[19:42:23] <bjs> Adoi: "in the case of test" I'm not sure what you mean
[19:42:28] <Adoi> unittest
[19:42:36] <bjs> __init__ isn't something to do with tests or unittests, it's something that all classes have
[19:42:41] <Adoi> in the case of the pasted code
[19:43:22] <Adoi> yet the above way I mentioned is not how 'self.url' would be introduced
[19:43:33] <Adoi> with __init__ in this case, I mean
[19:44:11] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:44:16] <bjs> Adoi: unittest doesn't change how variables work or what __init__ does or anything like that
[19:44:18] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[19:44:43] <bjs> Adoi: it's just that your `def __init__(self, url)`  <- now "url" is a new argument that wasn't there before, so it's not identical
[19:45:14] *** Joins: p4rtizan (p4rtizan@gateway/vpn/protonvpn/p4rtizan)
[19:45:17] <bjs> same with if you went `def test_PageProperties(self, url)` i'd say it's not identical because now it has a "url" argument which it didn't before, so your code would break (unless you also changed wherever you called it)
[19:45:33] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:45:54] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3)
[19:46:28] *** Quits: toolbox (~toolbox@h213-21-123-59.cust.a3fiber.se) (Ping timeout: 256 seconds)
[19:46:50] <Adoi> I can make sense of it if test function cannot take 'url' as arg, but why should it be a problem to initialize it with __init__, as is done with any other class?
[19:47:10] <bjs> Adoi: if you just take a class and add parameters to __init__ without changing the rest of the code it'll break
[19:47:14] <bjs> that's true of all classes
[19:47:14] <Adoi> fakenullie said it would be ignored
[19:47:48] <bjs> Adoi: like if you just take random code somewhere and add a new parameter to a function/method/class whatever without rewriting the rest of the code, it'll break.
[19:47:55] <bjs> That's not anything to do with unittest
[19:48:31] <Adoi> in classes, do we not always initialize things this way?
[19:48:31] <bjs> if you add a "url" parameter to __init__ you need to ask where it's going to come from, after all someone has to pass it.
[19:48:59] <bjs> Adoi: you can initialise things in __init__ but the problem is not the `self.url = "https://..." part but the `self, url):` part
[19:49:00] <Adoi> yes, we could add the url given in the current paste
[19:49:11] <bjs> you've made url a new parameter to the __init__ method, which it wasn't before
[19:49:39] *** Quits: p4rtizan (p4rtizan@gateway/vpn/protonvpn/p4rtizan) (Client Quit)
[19:49:43] *** Joins: aknot (~aknot@2603-900a-1503-17bb-284b-7439-7d1a-dd28.inf6.spectrum.com)
[19:50:20] <Helle> yep, I now have an async iterator that produces async iterators and async version of itertools chain chains them so their are continuous, this code is cursed
[19:50:50] *** Joins: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:3b86:53ab:52ef:1ea9)
[19:51:14] *** CodeMouse92 is now known as Guest6719
[19:51:49] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[19:52:21] *** Quits: revolve_ (~u0_a227@82-132-238-140.dab.02.net) (Read error: Connection reset by peer)
[19:53:41] <Adoi> it is not clear to me why adding an extra parameter to __init__ should be a problem. until now, it used to be how I thought adding new variables to the class method/function would be done. now, apparently with unittests or elsewhere, you dont even need it, and more, you can have unwanted results if you do
[19:54:05] *** Quits: Guest6719 (~CodeMouse@2600:6c46:6000:97b:3b86:53ab:52ef:1ea9) (Client Quit)
[19:54:14] <bjs> Adoi: it's not just __init__ but *any* function,  if you take a random function and add a new parameter to it then .... it has a new parameter
[19:54:46] *** Joins: securethemews_ (~securethe@2a00:23c4:1e85:6b00:7442:15d5:58b0:f1c2)
[19:55:33] *** Joins: rond_ (~rond_@90.251.109.52)
[19:55:34] <jinsun> Adoi: the problem in the unittest thing is that you are subclassing unittest.TestCase, and the test runner assumes TestCase objects behave in a certain way, which will break if you change the init method
[19:55:41] <Adoi> but it is not new, it is already everywhere in the code. what would be the harm in moving the assignment from the first test function to an __init__ block (this is not my original problem, but just asking we are talking about it now)
[19:55:52] <bjs> Adoi: nothing is wrong with moving the *assignment* at all
[19:55:59] <bjs> it's the fact you wanted to add `url` as an argument to __init__
[19:56:33] <bjs> adding new parameters to functions means you get a different function, so it won't be "identical" anymore and unless you change the rest of the code as well, it'll break
[19:56:38] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::48)
[19:56:47] <Adoi> jinsun, so it has a native __init__ method already?
[19:56:52] *** Quits: akk (~akk@75.161.130.204) (Quit: +++)
[19:56:52] <bjs> Adoi: `def __init__(self): self.url = "https://google.com"`  is perfectly fine
[19:58:06] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:be62:fea5:4a22:2e71) (Quit: Leaving)
[19:58:07] <jinsun> Adoi: yes, and it does some things that the test runnner expects, and more importantly it doesn't take any extra arguments, and the test runner will assume that when creating the instance
[19:58:26] <bjs> Adoi: but `def __init__(self, url): self.url = "https://google.com"`  is not fine.
[19:58:51] <Adoi> jinsun, and perhaps that is why the assignment was directly done in the test function?
[19:59:02] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[19:59:14] <bjs> Adoi: no the problem with parameter is nothing to do with assignment
[19:59:19] <bjs> you can do the assignment in __init__ just fine.
[20:00:45] <jinsun> Adoi: it was not done in __init__ because writing __init__ for TestCase subclasses is discouraged by the documentation, you will get it wrong (as you've tried and seen already)
[20:01:20] <Adoi> bjs, in all examples I can recall, all 'x's appearing in 'self.x' throughout the code were added as parameters in def__init_(self,x1, x2, x3...) at start. therefore I thought it would be right.
[20:01:31] <bjs> Adoi: yes well that's because the author wanted them to be parameters
[20:02:06] <bjs> but you don't have to have parameters, you can assign without it being a parameter just like you _already do_ in test_PageProperties :)
[20:03:05] <jinsun> Adoi: when you write the init like that and it works, you are the one creating the instance and supplying the extra parameters, but when you make a TestCase, you are not the one in control of making the instance, the test runner will do it and it will not provide the extra paramters
[20:04:30] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[20:04:35] <Adoi> jinsun, right, it is already natively existent, as we mentioned before
[20:04:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:04:47] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[20:04:54] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[20:04:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:05:05] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[20:05:09] *** Joins: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net)
[20:05:38] *** Joins: akk (~akk@75.161.130.204)
[20:06:51] <jinsun> well already "native existent" method can also be overridden, but you have to be very careful and it is easy to do wrong
[20:08:34] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:08:41] *** Quits: blackout69 (~blackout6@37.183.230.121) (Quit: Leaving.)
[20:09:53] * Adoi is reviewing our conversations
[20:10:36] <olspookishmagus> how can I "reset" python's interpreter, without "turning it off and on" again?
[20:12:19] <bjs> olspookishmagus: you can't
[20:12:36] *** Quits: oilt^ (~oilt@50.232.121.75) (Remote host closed the connection)
[20:14:00] *** Joins: Mat1010 (~Mat1010@168.181.209.34)
[20:14:37] <jinsun> for some definition of "reset" you can do if you are using ipython, with the %reset magic
[20:14:52] *** Parts: Mat1010 (~Mat1010@168.181.209.34) ()
[20:15:04] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: Leaving)
[20:15:58] *** Joins: dez (uid92154@user/dez)
[20:16:37] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[20:17:11] *** Joins: et (~et@user/et)
[20:19:31] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[20:21:13] *** Quits: Jonatin (~Jonatin@177.197.107.130) (Quit: Client closed)
[20:21:22] *** Joins: bahamas (~lucian@84.232.140.52)
[20:24:19] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:24:52] *** Joins: revolve (~u0_a227@82-132-238-140.dab.02.net)
[20:26:08] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[20:28:37] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Ping timeout: 240 seconds)
[20:29:05] *** Quits: cbasah (~cbasah@user/cbasah) (Read error: Connection reset by peer)
[20:30:20] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[20:32:27] *** Joins: upsala (~zcb@185.209.196.134)
[20:33:42] *** Joins: medium_cool (~medium_co@136.36.128.48)
[20:35:11] *** Joins: ivii (~ivan@user/ivii)
[20:36:26] *** Joins: Arw| (~Arwalk@lfbn-dij-1-1282-83.w92-141.abo.wanadoo.fr)
[20:37:00] *** Quits: Arw- (~Arwalk@lfbn-dij-1-510-126.w86-235.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[20:37:04] *** Joins: bahamas (~lucian@84.232.140.52)
[20:37:27] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[20:37:46] *** Joins: philectro (~quassel@2a02:2788:1024:671:74f6:1176:1c8f:894f)
[20:38:12] *** flooded is now known as _flood
[20:39:58] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[20:41:42] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[20:41:43] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[20:42:25] *** Joins: Guest20 (~Guest20@77.124.7.8)
[20:42:49] <Guest20> Hi, I want to load self signed ceritifcate in memory, there is anyway to do that?
[20:43:47] *** Joins: Conjecture (~Conjectur@160-2-104-193.cpe.sparklight.net)
[20:43:58] *** Quits: creedofnecessity (~creedofne@mobile-107-77-199-124.mobile.att.net) (Ping timeout: 256 seconds)
[20:44:00] <Conjecture> What would be the best way in Python3 to subclass dict?
[20:44:08] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:20fe:ca90:5661:533)
[20:44:42] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[20:45:04] <tpr> class subdict(dict): pass
[20:45:57] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[20:46:24] *** Joins: Klinda (~superleag@user/klinda)
[20:46:44] <Adoi> jinsun, bjs, fakenullie, thank you so much
[20:47:48] *** Quits: medium_cool (~medium_co@136.36.128.48) (Ping timeout: 240 seconds)
[20:48:21] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[20:48:38] *** Joins: medium_cool (~medium_co@136.36.128.48)
[20:48:46] <orbisvicis> anyone have any experience using scipy.optimize.curve_fit with mpmath ?
[20:48:54] <han-solo> Conjecture: tpr https://treyhunner.com/2019/04/why-you-shouldnt-inherit-from-list-and-dict-in-python/
[20:49:13] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:49:53] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[20:51:38] *** Joins: Betal (~Betal@user/betal)
[20:52:21] <tpr> han-solo: yes, I know. but that's how you could still do it
[20:52:54] *** Joins: Zenagon (~Zenagons@194.207.114.191)
[20:53:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:53:40] <Conjecture> Thanks, I'll give it a go
[20:54:03] *** Quits: Joeee (~Joeee@188.252.198.59) (Quit: Leaving.)
[20:54:09] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[20:54:13] <orbisvicis> ahh initial estimate prevents overflow, avoids mpmath requirement
[20:54:25] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[20:54:33] *** Joins: thiras (~thiras@user/thiras)
[20:55:02] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.55) (Ping timeout: 240 seconds)
[20:55:54] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:56:31] *** Quits: revolve (~u0_a227@82-132-238-140.dab.02.net) (Read error: Connection reset by peer)
[21:03:28] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[21:04:24] *** Zenagon is now known as Zenago
[21:04:44] *** Zenago is now known as _
[21:04:56] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[21:04:58] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.31)
[21:05:14] *** _ is now known as Guest5950
[21:05:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:05:46] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[21:06:13] *** Guest5950 is now known as Zenagon
[21:06:24] *** Joins: thelounge24 (~thelounge@acrids.robince.net)
[21:06:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:07:11] *** Quits: MajorBiscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:07:56] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[21:09:06] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[21:09:11] *** Joins: bluedust (~bluedust@103.165.167.61)
[21:10:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.31) (Ping timeout: 256 seconds)
[21:10:23] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:10:36] *** thelounge24 is now known as thrope
[21:14:08] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[21:14:36] *** Joins: nomic (~nomic@85.203.36.100)
[21:16:11] *** Quits: Zenagon (~Zenagons@194.207.114.191) (Quit: Leaving)
[21:16:37] *** Quits: rsx (~dummy@ppp-188-174-143-104.dynamic.mnet-online.de) (Quit: rsx)
[21:17:08] *** Quits: asix (~Anders@user/asix) (Ping timeout: 256 seconds)
[21:18:07] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[21:18:51] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:19:54] *** Quits: stockh0lm (~Andreas@p200300d2c73a0400e9da7e37d42463e6.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:21:28] *** Quits: securethemews_ (~securethe@2a00:23c4:1e85:6b00:7442:15d5:58b0:f1c2) (Quit: Leaving)
[21:23:13] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:24:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[21:25:48] *** Joins: jay-m126 (~jay-m@154.72.150.130)
[21:25:53] *** Joins: jay-m1262 (~jay-m@154.72.150.130)
[21:25:53] *** Joins: jay-m1261 (~jay-m@154.72.150.130)
[21:25:54] *** Joins: jay-m126_ (~jay-m@154.72.150.130)
[21:26:08] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[21:26:16] *** Joins: securethemews_ (~securethe@2a00:23c4:1e85:6b00:b549:6341:ebb8:8e83)
[21:27:02] *** Joins: Jong (~Jong@2620:10d:c090:400::5:9b63)
[21:28:28] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 256 seconds)
[21:29:22] *** Quits: OnceMe (~stefan@user/onceme) (Quit: Konversation terminated!)
[21:31:03] <theseb>  can someone show me how to port some Databricks Scala code to python? sdf.format("the_database").options(Map("table" -> s"$tbl", "keyspace" -> s"${keyspace}")).mode(SaveMode.Append).save()
[21:31:53] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[21:32:43] <ChrisWarrick> theseb: what did you try?
[21:33:24] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[21:33:46] *** Joins: crashrep (~crashrep@user/crashrep)
[21:33:49] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:34:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:34:33] <ChrisWarrick> theseb: I have zero knowledge of Databricks, but if the scala/python bindings are mostly straightforward, then try:  .options({"table": str(tbl), "keyspace": str(keyspace)}    or possibly .options(table=str(tbl), keyspace=str(keyspace))  (the string formatting looks strange, but maybe those aren’t regular Strings)
[21:35:33] *** Joins: kafka (~kafka@user/kafka)
[21:35:58] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:36:53] *** Joins: xkuru (~xkuru@user/xkuru)
[21:37:06] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:39:37] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:40:37] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[21:40:48] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[21:40:58] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:42:04] *** Quits: medium_cool (~medium_co@136.36.128.48) (Ping timeout: 256 seconds)
[21:42:07] *** Joins: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[21:42:12] *** Quits: savolla (~quassel@95.10.239.22) (Ping timeout: 240 seconds)
[21:42:20] *** Joins: medium_cool_ (~medium_co@2605:a601:a9aa:f800:59a0:7909:b21a:d2fc)
[21:42:44] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Quit: Leaving)
[21:44:13] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Read error: Connection reset by peer)
[21:44:14] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[21:44:19] *** Joins: cs (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:45:17] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:45:46] *** Quits: kafka (~kafka@user/kafka) (Quit: WeeChat 3.2)
[21:46:03] *** Joins: kafka (~kafka@user/kafka)
[21:46:05] *** Joins: asix (~Anders@user/asix)
[21:46:12] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:46:33] *** Joins: bloody (~bloody@user/bloody)
[21:49:41] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[21:50:02] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3) (Ping timeout: 240 seconds)
[21:52:08] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:53:20] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[21:55:02] *** Quits: securethemews_ (~securethe@2a00:23c4:1e85:6b00:b549:6341:ebb8:8e83) (Quit: Leaving)
[21:56:04] *** Quits: phlixi (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de) (Remote host closed the connection)
[21:56:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:57:01] *** Quits: aknot (~aknot@2603-900a-1503-17bb-284b-7439-7d1a-dd28.inf6.spectrum.com) (Ping timeout: 245 seconds)
[21:57:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:57:13] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[21:57:24] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 240 seconds)
[21:57:51] *** Quits: philectro (~quassel@2a02:2788:1024:671:74f6:1176:1c8f:894f) (Ping timeout: 245 seconds)
[21:58:49] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[21:58:53] *** Joins: wib_jonas (~wib_jonas@164.215.125.58)
[21:59:41] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:59:57] *** Quits: kts (~kts@103.73.237.247) (Ping timeout: 240 seconds)
[22:00:21] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[22:03:36] *** Joins: mdq (~mdq@freeshell.de)
[22:04:11] *** Quits: irf21k (~irf21k@2401:4900:4bc3:2135:1:0:7690:c997) (Ping timeout: 256 seconds)
[22:04:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:05:56] *** Quits: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[22:06:04] *** Joins: georgios (~georgios@user/georgios)
[22:06:09] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:07:34] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Ping timeout: 256 seconds)
[22:07:36] *** Joins: CSWookie (~CSWookie@2601:804:8680:90:1db2:7ee4:694:44d8)
[22:07:42] *** Quits: cs (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:07:53] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[22:07:59] *** Joins: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[22:08:21] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[22:08:29] <CSWookie> Hey, all!  I have a pytest script that uses --env and --groups command line arguments.  In one docker container, that works and in another the arguments aren't recognized.  They both have the same version of pytest.  I'm figuring there's some missing plugin or configuration.  Can someone tell me what the problem is?
[22:08:44] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[22:09:20] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:09:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:09:47] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:09:47] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Read error: Connection reset by peer)
[22:09:53] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:10:16] *** Joins: jjasghar (~jjasghar@idlerpg/player/jjasghar)
[22:10:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[22:11:12] <Widdershins> CSWookie: i don't think those are standard arguments for pytest
[22:11:26] *** Quits: casastortaAway (~casastort@neo1.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:11:53] *** Quits: marcello1 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[22:12:19] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:12:40] *** Joins: touki (~touki@152.230-182-91.adsl-dyn.isp.belgacom.be)
[22:12:41] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652)
[22:12:47] *** Joins: stockh0lm (~Andreas@p200300d2c73a0400e9da7e37d42463e6.dip0.t-ipconnect.de)
[22:12:49] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:13:02] *** Joins: casastorta (~casastort@neo3.krivokuca.net)
[22:13:14] <touki> Hi everybody.
[22:13:41] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 245 seconds)
[22:14:08] <CSWookie> Folks in #pytest channel are helping me, now, Widdershins
[22:15:11] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[22:15:23] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:15:24] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[22:15:30] *** Quits: pro_z_ (~pro_z@37.214.35.129) (Ping timeout: 256 seconds)
[22:15:57] *** Quits: kafka (~kafka@user/kafka) (Quit: WeeChat 3.2)
[22:16:12] <touki> c.total() does not seem to work (python3.7) where c is a 'Counter', raising "'Counter' has no attribute 'total'". Any idea?
[22:16:21] *** Joins: kafka (~kafka@user/kafka)
[22:16:30] *** Quits: CSWookie (~CSWookie@2601:804:8680:90:1db2:7ee4:694:44d8) (Quit: Client closed)
[22:16:50] <bjs> touki: https://docs.python.org/3/library/collections.html#collections.Counter.total
[22:16:57] <bjs> "New in version 3.10."
[22:16:59] *** Quits: kafka (~kafka@user/kafka) (Client Quit)
[22:17:08] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[22:17:16] <Widdershins> touki: you can just write `sum(c.values())` instead
[22:17:17] *** Joins: kafka (~kafka@user/kafka)
[22:17:24] <Widdershins> it's not any slower really
[22:17:34] <bjs> Widdershins: infact that's how it's implemented
[22:17:40] <bjs> https://github.com/python/cpython/blob/3.10/Lib/collections/__init__.py#L584
[22:17:43] *** Quits: kafka (~kafka@user/kafka) (Client Quit)
[22:18:17] <Widdershins> sensible
[22:18:54] *** Quits: mdq (~mdq@freeshell.de) (Quit: leaving)
[22:19:27] *** Joins: mdq (~mdq@freeshell.de)
[22:19:58] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Quit: bitkiller)
[22:20:28] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:20:39] <touki> bjs: thanks. I have an issue with sum(c.values()), which oddly enough is: 'int' object is not callable.
[22:20:56] <bjs> touki: did you go `sum = ...` somewhere?
[22:21:20] *** Joins: insanity5000 (~insanity5@2607:fb90:ae19:3c5e:3c2c:8091:0:2ed)
[22:21:22] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[22:21:49] <touki> right, ages ago. I'll try it up. so 'sum' should not be used as var name?
[22:22:09] <bjs> touki: well if you use it as a variable name you can't *also* use the builtin 'sum'
[22:22:21] *** Joins: Atque (~Atque@user/atque)
[22:22:25] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:22:46] *** Joins: humberto1 (~humbertow@189.236.30.197)
[22:22:55] <touki> bjs: yes, thanks.
[22:23:05] *** Quits: TheCat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[22:23:54] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[22:25:25] *** zmotaj_ is now known as zmotaj
[22:25:25] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[22:25:25] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[22:25:36] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:25:46] *** Joins: Z-cat (~Z-cat@user/z-cat)
[22:25:51] *** Joins: Z-cat_ (~Z-cat@user/z-cat)
[22:25:52] <Z-cat> :O
[22:26:06] *** Quits: Z-cat_ (~Z-cat@user/z-cat) (Read error: Connection reset by peer)
[22:26:49] *** Joins: skapata (~Skapata@user/skapata)
[22:27:00] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:27:14] *** Joins: Origin (~Origin@d-69-161-70-214.nh.cpe.atlanticbb.net)
[22:27:23] *** Joins: darksun (~darksun@user/darksun)
[22:27:24] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 256 seconds)
[22:27:25] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[22:27:34] *** Joins: jmd (~user@p200300ea5f49c2f5f5d6d242084bd21a.dip0.t-ipconnect.de)
[22:28:11] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[22:28:21] *** Joins: CSWookie (~CSWookie@2601:804:8680:90:1db2:7ee4:694:44d8)
[22:29:54] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:30:35] *** Joins: humberto1 (~humbertow@189.236.30.197)
[22:31:10] *** Quits: ejjfunky (~ejjfunky2@125.164.20.168) (Read error: Connection reset by peer)
[22:31:32] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[22:33:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[22:33:05] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:33:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:33:31] <Widdershins> touki: yes it is bad practice to shadow builtins like that
[22:33:37] <Widdershins> for exactly this reason
[22:34:06] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[22:35:52] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[22:36:05] *** Joins: vats (~vats@103.216.143.6)
[22:36:10] *** Quits: CSWookie (~CSWookie@2601:804:8680:90:1db2:7ee4:694:44d8) (Quit: Client closed)
[22:37:10] *** Joins: lispy (~lispy@user/lispy)
[22:37:40] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:38:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:38:18] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:38:33] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:38:44] *** Joins: ta180m (~ta180m@2001:470:69fc:105::1d3)
[22:39:05] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Client Quit)
[22:39:57] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[22:41:25] *** Joins: Guest99 (~Guest99@41.136.116.160)
[22:41:29] *** Joins: marcello1 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[22:42:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[22:43:51] *** Joins: jjasghar4 (~jjasghar@idlerpg/player/jjasghar)
[22:44:31] *** Joins: humberto1 (~humbertow@189.236.30.197)
[22:45:05] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:21] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Ping timeout: 245 seconds)
[22:45:21] *** jjasghar4 is now known as jjasghar
[22:45:32] *** Quits: vats (~vats@103.216.143.6) (Ping timeout: 256 seconds)
[22:46:12] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[22:47:30] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:48:36] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:48:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:48:54] *** Joins: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk)
[22:49:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:49:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:50:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:50:23] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[22:50:48] *** Quits: insanity5000 (~insanity5@2607:fb90:ae19:3c5e:3c2c:8091:0:2ed) (Remote host closed the connection)
[22:53:30] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[22:53:42] <ikonia> I'm running a python app (not written by myself) and on startup it's generating a few errors, the errors all appear to be referencing either an 'import' or a function made available from an import
[22:54:09] <ikonia> when I look at what's being imported, the python modules needed to supply it are there and I believe in the correct path
[22:54:26] <ikonia> I'm curious to how to approach it both, to validate what it's looking for, but then understand why it's failing
[22:54:37] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-b010-98de-ab8a-c8b6.res6.spectrum.com)
[22:54:47] *** Joins: henistein (~henistein@2001:8a0:fc95:1d01:9334:5a2b:f1b:fdd5)
[22:55:09] <exarkun> that's quite a broad and deep topic.
[22:55:18] <theseb> ChrisWarrick: thanks!
[22:55:24] <ikonia> exarkun: it's worse when you're really not great with python
[22:55:46] <ikonia> may I provide an example to just check if I'm looking at it right ?
[22:55:48] <exarkun> Perhaps read https://docs.python.org/3/reference/import.html and hope that it is correct and up-to-date?  (Choose the version of the docs that matches your Python, too)
[22:55:53] <exarkun> ikonia: Sure.
[22:56:01] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[22:56:12] <ikonia> let me stick a quick pastebin together
[22:56:38] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[22:57:28] <Widdershins> ikonia: one of the things to check for is in which python environment the app is running, be it some virtualenv or the system python or what-have-you
[22:57:29] *** Joins: tijuco (~tijuco@user/tijuco)
[22:59:03] *** Joins: favreje (~jeff@170.249.173.67)
[22:59:17] *** Quits: uxemacs (~timothy@2607:fb90:7e83:9e2d::164) (Ping timeout: 240 seconds)
[23:00:48] <ikonia> Widdershins: that's one of the things I need to understand more
[23:00:59] <ikonia> hopefully this example will help me get a little more comfortable with it
[23:01:29] <Widdershins> nice
[23:02:09] <Widdershins> but yeah how you're invoking the program and what's around it can matter here. as previously stated, a fairly broad topic
[23:02:42] <ikonia> this is someone elses work bundled in a container so part of my task is to understand the environment it's being deployed in more
[23:03:02] *** Quits: gegenschein (~james@ec2-54-210-169-253.compute-1.amazonaws.com) (Remote host closed the connection)
[23:03:03] <ikonia> code works on a machine - doesn't work in the container (slight differences between the two envs such as python version)
[23:03:16] <Widdershins> ah ha. are you doing the containerbundling
[23:03:41] <ikonia> Widdershins: I'm fixing (or trying to) a bit of what looks like a good job done a bit messy
[23:04:21] <ikonia> here is one of the examples
[23:04:22] <ikonia> https://bpa.st/UA5A
[23:05:18] <ikonia> so when I look at the error output it gives a clear output of line 35 - line 35 is the import of ltr559, which is provided by ltr559 which is installed, so my only assumption is that it's not being referened in the right way
[23:05:27] <ikonia> I hope I'm approaching this right ?
[23:05:35] <ikonia> (which links to your environment referene)
[23:05:37] *** Quits: wib_jonas (~wib_jonas@164.215.125.58) (Ping timeout: 256 seconds)
[23:06:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:06:57] *** Joins: undt (undt@gateway/vpn/protonvpn/undt)
[23:07:06] <Widdershins> i'm not sure if i'm seeing this right, did you include the whole runtime error? i don't see the actual error part
[23:07:29] <ikonia> my apologies, I just put in an example - the runtime error is complete
[23:07:37] <ikonia> but I only put example of the first error thrown
[23:07:47] <Widdershins> well, again, there isn't an error message here. only a traceback
[23:08:08] <ikonia> you know, my apologies, I did miss soemthing, one moment I'll update
[23:08:31] <ikonia> you know, my apologies, I did miss soemthing, one moment I'll update
[23:08:36] <Widdershins> i would expect probably something between the invocation and the line starting with "Traceback (most recent call last):"
[23:08:37] <ikonia> typo on my part, missed off the last line
[23:09:14] <Widdershins> so i can see that something is going wrong and where but your paste doesn't say what
[23:09:14] <ikonia> updated the missing line
[23:09:22] <ikonia> hit refresh
[23:09:28] <ikonia> that's the output from when I run the python app
[23:09:41] <ikonia> then I put more details in at the second ----- break
[23:09:45] <Widdershins> you've made a new paste, i believe. not sure if pbaste has editing
[23:09:51] <ikonia> https://bpa.st/KCGQ
[23:09:56] <Widdershins> thanks
[23:10:04] *** Quits: favreje (~jeff@170.249.173.67) (Ping timeout: 272 seconds)
[23:10:06] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[23:10:12] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[23:10:13] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[23:10:26] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:11:04] <Widdershins> oh you know what you might be looking at
[23:11:31] <Widdershins> you might be missing an installed native library in the container
[23:11:51] *** Quits: readytheory (~user@ip24-252-15-245.om.om.cox.net) (Ping timeout: 256 seconds)
[23:11:55] <Widdershins> like a dynamic .so library in /usr/lib
[23:11:56] <ikonia> I'd love to know how you worked that out, and how to work out potentially which one
[23:12:06] <Widdershins> no idea which one sorry.
[23:12:07] *** Joins: andreasbuhr (~quassel@p548dd961.dip0.t-ipconnect.de)
[23:12:16] <ikonia> is your guess just experience talking ?
[23:12:30] <ikonia> as the file not found could very well be a .so missing
[23:12:41] <ikonia> but there is no clude output from what I'm reading
[23:12:45] <ikonia> clue
[23:12:48] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[23:12:52] *** Joins: jazzy (~jaziz@user/jaziz)
[23:12:58] <ikonia> I could ldd it
[23:13:05] <ikonia> see if it complains of anything obvious
[23:13:18] <Widdershins> that's an error you can get, at least in some languages, when an executable runs without the shared libraries it needs to link to to start up]
[23:13:32] <Widdershins> the thing is it's happening mid-execution in python
[23:13:39] <Widdershins> i'm looking in these python libs to see what they're doing
[23:13:46] <ikonia> ok - so this is useful actually, the container obviously has a different style of python installed to what would normally by provided by the distro it's built from
[23:13:53] <ikonia> python is in /usr/local/bin
[23:14:03] <ikonia> that's a great pointer !, thank you
[23:15:13] <ikonia> think I've found something missing
[23:15:25] <ikonia> let me see if the distro can help me see what should be providing it
[23:15:28] <Widdershins> so it's not an import error, the python files were all there
[23:15:30] <ikonia> then reference the container
[23:15:36] <ikonia> 	linux-vdso.so.1 (0xbef0e000)
[23:15:44] <ikonia> that appears to be not in the container
[23:15:50] <Widdershins> idk where `smbus` is coming from but i would check what it's doing very closely to see if it's calling into some native code
[23:15:57] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[23:16:16] <Widdershins> i don't think vdso is the one
[23:16:25] <ikonia> no, but it is one to fix
[23:16:29] <ikonia> working it through logically
[23:16:37] *** Joins: manusandoval05 (~manusando@2806:107e:19:9223::9)
[23:16:57] <Widdershins> what smbus modules do you have installed in pip? smbus-cffi ?
[23:17:16] *** Quits: paul424 (~tom@ip-5-172-236-92.multi.internet.cyfrowypolsat.pl) (Ping timeout: 256 seconds)
[23:17:27] <ikonia> smbus2                           0.4.1
[23:19:03] <Widdershins> hm no it's probably not a missing library, it's probably this line https://github.com/kplindegaard/smbus2/blob/9f9af5a788d658417208b98c8cd3ee4514300e04/smbus2/smbus2.py#L310
[23:19:27] <Widdershins> opening the file "/dev/i2c-1"
[23:19:54] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[23:19:55] <ikonia> ahhh on /dev
[23:20:06] <ikonia> which is why the host can do it just fine
[23:20:19] *** Joins: zebrag (~chris@user/zebrag)
[23:20:32] <Widdershins> yeah i have no idea what the container has for /dev or whether it even makes sense to do this in a container
[23:21:02] <Widdershins> maybe your container needs to make that file available through some kind of volume trickery or however docker wants that done
[23:21:14] <ikonia> that's fine, if you're correct I can work that out, that's been really helpful
[23:21:15] <Widdershins> no idea if that works for device files
[23:21:34] <ikonia> good job you looked, I was approaching it wrong !
[23:21:39] <Widdershins> np
[23:21:54] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[23:22:41] *** Quits: manusandoval05 (~manusando@2806:107e:19:9223::9) (Quit: manusandoval05)
[23:23:41] *** Joins: manusandoval05 (~manusando@2806:107e:19:9223::9)
[23:24:25] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:24:31] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:25:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:25:20] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[23:25:30] *** Quits: henistein (~henistein@2001:8a0:fc95:1d01:9334:5a2b:f1b:fdd5) (Quit: Client closed)
[23:25:48] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[23:26:14] *** rwb is now known as rb
[23:26:32] *** Joins: zyweo (~Svew@user/zyweo)
[23:26:45] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[23:27:11] *** Lord_of_Life_ is now known as Lord_of_Life
[23:27:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:27:47] *** Joins: Adoi (~Adoi@user/adoi)
[23:28:58] *** Quits: manusandoval05 (~manusando@2806:107e:19:9223::9) (Quit: manusandoval05)
[23:29:52] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[23:30:33] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[23:32:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[23:32:52] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[23:34:05] *** Joins: favreje (~jeff@170.249.173.67)
[23:34:25] *** Quits: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net) (Quit: Leaving)
[23:34:31] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:35:13] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[23:36:37] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[23:38:12] *** Quits: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk) (Ping timeout: 240 seconds)
[23:38:59] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[23:40:00] *** Quits: akk (~akk@75.161.130.204) (Quit: +++)
[23:40:35] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[23:41:49] *** Joins: uxemacs (~timothy@50-244-88-1-static.hfc.comcastbusiness.net)
[23:41:55] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:42:58] *** Joins: georgios (~georgios@user/georgios)
[23:43:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:43:38] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Ping timeout: 272 seconds)
[23:44:33] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[23:44:40] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[23:44:47] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:45:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:46:11] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 256 seconds)
[23:46:23] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3)
[23:46:29] *** Joins: akk (~akk@75.161.130.204)
[23:46:48] *** Quits: uxemacs (~timothy@50-244-88-1-static.hfc.comcastbusiness.net) (Ping timeout: 272 seconds)
[23:47:53] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[23:48:03] *** Joins: aknot (~aknot@2603-900a-1503-17bb-9bf7-e987-5e02-c96f.inf6.spectrum.com)
[23:49:13] *** Joins: bahamas (~lucian@84.232.140.52)
[23:49:56] *** Quits: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[23:50:11] *** Joins: Barones (~Barones@user/Barones)
[23:51:10] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Quit: WeeChat 3.4)
[23:53:04] *** Joins: rpino (~textual@189.172.95.214)
[23:53:59] *** Quits: rpino (~textual@189.172.95.214) (Client Quit)
[23:54:06] *** Joins: creedofnecessity (~creedofne@98.97.84.93)
[23:54:06] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[23:54:29] *** Joins: rpino (~textual@189.172.95.214)
[23:56:07] *** Joins: Maxc4m (~Maxc4m@5.167.13.137)
[23:56:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:57:48] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[23:57:53] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:58:55] *** Joins: georgios (~georgios@user/georgios)
