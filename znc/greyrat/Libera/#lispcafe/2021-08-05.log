[00:01:00] <lotuseater> Curry-Howard isomorphism is one of those powerful theorems
[00:01:23] <mariari> yeah it's nice, and it's fun when you get into dependent type hackery
[00:01:26] <mariari> and actually prove things
[00:01:34] <lotuseater> :)
[00:01:38] *** Joins: vats (~vats@103.70.83.249)
[00:02:03] <lotuseater> didn't catch up with Coq much yet, just Idris and ACL2
[00:02:43] <lotuseater> but dependent types seem to be the functional equivalent of contracts
[00:02:47] <mariari> Coq is nice
[00:02:50] <mariari> yeah you can view them as such
[00:03:05] *** Quits: vats (~vats@103.70.83.249) (Remote host closed the connection)
[00:03:19] <lotuseater> I mean this concept of OO contracts which was brought by Eiffel.
[00:03:27] <mariari> I haven't played with Eiffel at all
[00:03:33] <mariari> I'm not sure then
[00:03:58] <lotuseater> I just got to know it this year. Ada adapts the concept too since the 2012 version
[00:04:06] <mariari> ada is odd
[00:04:10] <lotuseater> :D
[00:04:14] <mariari> for actual proofs, they dispatch to Coq and whyML
[00:04:22] <mariari> where they use whyML as their SMT solver
[00:04:23] <lotuseater> ahh
[00:04:41] <lotuseater> can you recommend something to learn more?
[00:04:49] <mariari> I believe variant types, are disabled which is strange given that variants are part of the theory of CoiC
[00:04:55] <mariari> book wise or?
[00:05:04] <lotuseater> I can recommend the "Category Theory for Programmers" by Bartosz Milewski
[00:05:16] <mariari> I like bartosz
[00:05:36] <lotuseater> yes he is nice :) from what i've seen of his youtube talks
[00:05:37] <sham1> Category theory. Did we suddenly transform into #haskell?
[00:05:47] <mariari> if you want to learn about type theory in general, Types and programming languages is the standard for a starter type theory book
[00:06:01] <lotuseater> but of course CL builds on set theory not on category theory
[00:06:55] <lotuseater> sham1: no but we're offtopic and it's one of those universal things :) like with thermodynamics, its principels also govern parts of even quantum mechanics
[00:07:10] <lotuseater> mariari: ah that book yes
[00:07:13] <sham1> Fair enough
[00:07:36] <mariari> Haskellers tend to talk about category theory, but I don't think they really get deep into it
[00:07:41] <mariari> more surface level category theory applied to the language
[00:07:42] <lotuseater> would be helpful if someone shows me how to write/read the notation in an understandable way
[00:07:53] <mariari> ahh there is a good website for that
[00:08:23] *** Joins: vats (~vats@103.70.83.249)
[00:08:23] <lotuseater> mariari: yes the concepts that apply are not so deep. deepest level for lenses or such as i see it
[00:09:25] <lotuseater> typed lambda calculus + monads + no side effects + advanced hindley-milner + lazy (or better non eager) evaluation
[00:09:45] <mariari> http://logitext.mit.edu/tutorial
[00:09:46] -ixelp- Interactive Tutorial of the Sequent Calculus
[00:09:51] <mariari> this is a good tutorial for sequent calculus
[00:09:55] <mariari> took me a good minute to remember the name
[00:10:07] <lotuseater> special thx
[00:10:09] <mariari> they are thankfully moving away from normal monad stacks into effects in due time
[00:10:30] <lotuseater> it triggers my https everywhere plugin :D
[00:11:21] <mariari> it's kind of neat how much you could prove just by clicking around with sequent calc on that website
[00:11:24] <mariari> makes it quite intuitive
[00:11:43] <lotuseater> ha.
[00:15:40] <selwyn> yeah category theory is a good language for quantum mechanics
[00:15:53] <selwyn> there are lots of ways of doing it though
[00:17:07] <selwyn> there is a criticism of categorical quantum mechanics that you don´t get anything new out of it, and it is just a flashy tool without any use
[00:17:34] <selwyn> i think that that is not a fair point to make about xz calculus for example
[00:18:14] <selwyn> basically, these diagrammatic representations of quantum circuits can be a kind of intermediate representation in a quantum compiler
[00:18:17] <selwyn> which is really cool
[00:18:22] *** Quits: vats (~vats@103.70.83.249) (Remote host closed the connection)
[00:18:24] <lotuseater> hm even string theory had important impacts on other things
[00:19:39] <lotuseater> selwyn: indeed. it was cool when one found out such algorithms are representative in such circuits
[00:19:54] <lotuseater> "it must have as much inputs as outputs"
[00:22:03] <selwyn> an applet would have been good for this https://zxcalculus.com/pyzx.html
[00:22:03] -ixelp- PyZX Demo
[00:22:07] <selwyn> only 90s kids will remember
[00:22:14] <lotuseater> Applet :D
[00:22:46] *** Joins: razzy (razzy@user/razzy)
[00:22:53] <lotuseater> took long to load
[00:27:45] *** Joins: vats (~vats@103.70.83.249)
[00:28:55] <selwyn> it´s nice that quantum computing is ´hackable´ now, all the way down to running circuits in the cloud
[00:29:04] <selwyn> did not used to be the case until recently
[00:36:30] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[00:38:47] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:48:06] *** Joins: christophergray (~christoph@190.148.53.129)
[00:48:47] *** Quits: razzy (razzy@user/razzy) (Ping timeout: 268 seconds)
[01:01:57] *** Quits: christophergray (~christoph@190.148.53.129) (Quit: WeeChat 3.2)
[01:03:34] *** Quits: shka (~herr@109.231.62.239) (Read error: Connection reset by peer)
[01:03:53] *** Joins: shka (~herr@109.231.62.239)
[01:06:35] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Leaving)
[01:18:52] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[01:19:28] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 272 seconds)
[01:30:04] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[02:02:16] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[02:19:42] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[02:36:57] <gilberth> Took me longer than expected, but now I have my own WEB preprocessor, which emits the very same token sequence as the original. Time to proceed!
[02:46:42] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[02:57:36] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[02:58:01] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:08:09] <lotuseater> gilberth: nice. happy ongoing
[03:18:57] <edgar-rft> gilberth: now you finally can read all the crap from the the web how *you* want
[03:19:41] <gilberth> Heh, no, the other web.
[03:20:41] <hayley> Good morning everyone!
[03:20:57] <gilberth> Hello hayley!
[03:21:26] <lotuseater> hello hayley
[03:21:55] * hayley notes her ex is now on the receiving end of her last article. How lovely.
[03:22:00] <edgar-rft> gilberth: you mean the World English Bible? -> https://worldenglish.bible/
[03:22:01] -ixelp- World English Bible
[03:22:20] <hayley> s/on the receiving end/a subject/
[03:22:36] <lotuseater> hayley: and how do you feel about that?
[03:22:48] <hayley> lotuseater: Fine.
[03:22:54] <lotuseater> okay
[03:24:15] <hayley> It only took a whole series of like 4 articles to achieve that, but we got there in the end.
[03:28:33] <hayley> And she was like that before, though I'd usually say something nice but mention that server-communities don't real and that collaborative filtering is somewhat more powerful. No argument there.
[03:29:42] * hayley checks emails
[03:29:58] <hayley> "Hayley, are you employable on a global scale?" Well, probably.
[03:30:43] <lotuseater> oh that sounds good
[03:31:08] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[03:31:38] <hayley> Anyways IMO she only went for small wins when a larger one isn't that much harder.
[03:31:57] <lotuseater> oh hm
[03:48:38] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:55:57] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[04:00:30] *** Joins: kakuhen_ (~kakuhen@user/kakuhen)
[04:03:17] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 258 seconds)
[04:04:03] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Ping timeout: 258 seconds)
[04:17:28] *** Quits: robin (~robin@user/terpri) (Ping timeout: 258 seconds)
[04:25:19] <hayley> https://www.youtube.com/watch?v=-piWdq2_sJc
[04:25:19] -ixelp- [YTP] The FreeDumb Phone - YouTube
[04:32:51] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[04:33:46] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 240 seconds)
[04:37:53] *** Joins: notzmv (~zmv@user/notzmv)
[04:47:54] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[04:52:26] <lotuseater> funny line out of a talk when it was going about management: "so let's start, I want a baby in a month. let's get nine women!" :D
[04:54:03] *** Joins: rt (~robin@user/terpri)
[04:54:21] *** Quits: rt (~robin@user/terpri) (Remote host closed the connection)
[04:55:07] *** Joins: rt (~robin@user/terpri)
[04:57:27] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[04:59:04] <dave0> maw
[05:01:07] <gilberth> Hello dave0!
[05:01:41] <dave0> hey gilberth !
[05:01:54] <dave0> gilberth: how are your spaces adding up?
[05:05:49] <gilberth> Heh, they form a cube.
[05:07:15] <lotuseater> hi dave0
[05:07:49] <dave0> hi lotuseater 
[05:08:23] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[05:32:41] <dave0> time for a walk! bbl
[05:33:45] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[05:37:37] <lotuseater> hah. :D
[05:56:28] <lotuseater> the cover makes me want to buy it: https://www.zvab.com/servlet/BookDetailsPL?bi=30971727441&searchurl=hl%3Don%26ds%3D20%26sortby%3D20%26kn%3DCommon%2BLisp&cm_sp=snippet-_-srp1-_-title16
[05:56:29] -ixelp- The Art of the Metaobject Protocol von Kiczales, Gregor: Very Good Paperback (1999) Early Edition. | 84 Charing Cross Ro [...]
[06:07:16] *** Joins: notzmv (~zmv@user/notzmv)
[06:18:27] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[06:25:23] *** rt is now known as robin
[06:26:49] *** Joins: notzmv (~zmv@user/notzmv)
[07:00:34] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[07:07:08] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[07:42:20] *** Joins: Catie (~user@24.19.51.175)
[08:01:16] <hayley> https://www.youtube.com/watch?v=IEqYDv8lMHM
[08:01:17] -ixelp- Motion And Heart (2003 Digital Remaster) - YouTube
[08:38:16] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[08:40:25] *** Joins: robin (~robin@user/terpri)
[08:50:36] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:50:56] <dave0> maw
[08:52:15] <hayley> https://www.youtube.com/watch?v=HPf32r1LIwY traditional German sosig
[08:52:15] -ixelp- Pineapple Fried Rice Sausage - YouTube
[08:56:33] <dave0> Pen Pineapple Apple Pen
[08:57:41] *** Joins: nihaal (~nihaal@106.201.177.18)
[09:11:43] *** Joins: selwyn (~selwyn@user/selwyn)
[09:24:17] <hayley> https://www.youtube.com/watch?v=WvPv-sLt42M
[09:24:18] -ixelp- Brian Eno / David Byrne - Mea culpa - YouTube
[09:32:41] * hayley found Eno posted a link to MLITBOG demos but they are on a shitty slow download site. And it is mirrored...to other shitty download sites.
[09:34:16] *** Joins: derelict (~derelict@user/derelict)
[09:48:17] *** Quits: elflng (~elflng@5.28.137.182) (Ping timeout: 258 seconds)
[10:06:22] *** Joins: notzmv (~zmv@user/notzmv)
[10:32:45] *** Quits: vats (~vats@103.70.83.249) (Ping timeout: 252 seconds)
[10:48:28] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 258 seconds)
[10:49:02] *** Joins: shka (~herr@109.231.62.239)
[10:53:23] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[11:08:43] *** Quits: kakuhen_ (~kakuhen@user/kakuhen) (Quit: Leaving...)
[11:08:56] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[11:18:39] <hayley> https://www.youtube.com/watch?v=X_0zFEtPbiA
[11:18:39] -ixelp- Honest Government Ad | Hotel Quarantine - YouTube
[11:36:04] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Quit: bibi!)
[11:36:21] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[12:10:21] *** Joins: kakuhen_ (~kakuhen@user/kakuhen)
[12:12:12] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Ping timeout: 245 seconds)
[12:20:51] *** Joins: elflng (~elflng@5.28.137.182)
[12:21:08] *** Quits: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com) (Remote host closed the connection)
[12:22:57] *** Quits: kakuhen_ (~kakuhen@user/kakuhen) (Quit: Leaving...)
[12:23:08] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[12:25:22] *** Joins: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com)
[12:29:01] *** Joins: vats (~vats@103.70.83.249)
[13:19:07] *** Joins: makomo (~makomo@user/makomo)
[13:45:12] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:706d:6457:86cf:4f78)
[13:53:20] *** Joins: selwyn (~selwyn@user/selwyn)
[14:21:30] * hayley uploaded an image: (298KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/TwCxtfBHAJPDEHTGjTLFjfLT/Screenshot_2021-08-05_19-56-13.png >
[14:21:37] <hayley> New meme template: Henry Baker's gratuitous waste of bandwidth page
[14:31:37] <hayley> gilberth: https://www.youtube.com/watch?v=3vJWVyEBcdE GC the movie
[14:31:38] -ixelp- Garbage the Video - YouTube
[15:09:08] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:22:49] *** Joins: rogersm (~rogersm@90.166.177.48)
[15:24:13] *** Joins: random-nick (~random-ni@87.116.181.197)
[15:42:08] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:57:02] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[17:26:07] *** Quits: lotuseater (~user@p200300e7871b3f0034ed9e810c3724ce.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[17:36:37] *** Joins: silasfox (~sbv@2001-4dd6-8e13-0-6f0d-fa0c-ffdd-c563.ipv6dyn.netcologne.de)
[17:43:40] *** Quits: vats (~vats@103.70.83.249) (Ping timeout: 272 seconds)
[17:49:11] <gilberth> Good morning #lispcafe!
[17:50:05] <hayley> Good morning gilberth!
[17:50:09] <gilberth> Somehow I optimized too much, by test TeX file, chap-9.tex of dpans, has a different checksum :(
[17:50:29] <gilberth> my, even. Perhaps it's font metrics.
[17:51:16] <gilberth> But then you get different files depending on whether a Pascal REAL is a single or double float.
[17:53:57] <gilberth> Anyhow, I want to find out what happened.
[17:54:50] * hayley starts to think that async programmers just rediscovered WITHOUT-SCHEDULING or whatever the bad old synchronisation primitive is called.
[17:54:51] *** Joins: selwyn (~selwyn@user/selwyn)
[17:56:07] <gilberth> hayley: The Lisp machine used cooperative scheduling.
[17:56:31] <hayley> So you find there are too many states because threads can go in any order? Well, your code is broken if there is no synchronisation anyway - put some locks on that shit! And then state machines are nice.
[17:56:52] <gilberth> This is why PROCESS-WAIT-FOR or what ever that is called makes sense.
[17:57:25] <hayley> e.g. https://glyph.twistedmatrix.com/2014/02/unyielding.html
[17:57:26] -ixelp- Deciphering Glyph :: Unyielding
[17:57:27] <gilberth> I designed my scheduling for my embedded systems the very same way.
[17:58:21] <hayley> I seriously don't find threads that hard. To survive you mostly do the stuff you do for serial programs: encapsulate and don't give out references to your shit, check invariants...
[17:59:12] <gilberth> Sure, I also never shared the fear of multi-threading. Closure for instance used a lot of threads.
[17:59:20] <gilberth> Anyhow, bbl.
[18:01:07] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[18:01:32] *** Joins: selwyn (~selwyn@user/selwyn)
[18:01:40] <hayley> But still, the claim that n threads requires O(exp) reasoning is wrong, given that really you have however few synchronisation points, and then those only touch a few shared things...a good concurrent/parallel system is pretty simple.
[18:07:53] <hayley> And in any case you can't do anything in parallel without some kind of synchronisation. But if one is a Python programmer they won't really win anything from that :)
[18:08:08] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:10:17] <hayley> So IMO just making it impossible to yield except at explicit points (so, this "event driven" style, async/await) is about as disastrous as WITHOUT-SCHEDULING was.
[18:22:43] *** Quits: elflng (~elflng@5.28.137.182) (Ping timeout: 258 seconds)
[18:32:43] *** Joins: selwyn (~selwyn@user/selwyn)
[18:33:18] <dave0> nite all
[18:34:09] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:34:10] <hayley> Night.
[18:34:59] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[18:35:23] *** Joins: selwyn (~selwyn@user/selwyn)
[19:06:48] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 256 seconds)
[19:07:12] *** Joins: notzmv (~zmv@user/notzmv)
[19:41:33] *** Joins: vats (~vats@103.70.83.249)
[19:58:57] *** Quits: silasfox (~sbv@2001-4dd6-8e13-0-6f0d-fa0c-ffdd-c563.ipv6dyn.netcologne.de) (Ping timeout: 258 seconds)
[20:08:48] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[20:09:19] *** Joins: nihaal (~nihaal@106.201.177.18)
[20:32:46] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 272 seconds)
[21:05:32] <shka> any sources on *lisp
[21:05:33] <shka> ?
[21:09:23] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:10:07] <gilberth> It was my ROUND routine. *sigh*
[21:10:22] <gilberth> shka: ?
[21:10:36] <shka> gilberth: star lisp
[21:10:52] <gilberth> You have a Connection Machine? Cool.
[21:10:52] <shka> i am trying to find how programming in it was like
[21:10:58] <shka> lol, i don't
[21:11:06] <gilberth> Our uni had.
[21:11:25] <gilberth> Oh dear, I once saw sources for *Lisp.
[21:13:13] <gilberth> http://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/lang/lisp/impl/starlisp/0.html
[21:13:14] -ixelp- Package: lang/lisp/impl/starlisp/
[21:13:29] <gilberth> The good old AI repository.
[21:14:10] <gilberth> shka: There you go!
[21:15:10] <shka> thank you
[21:24:27] *** Joins: makomo_ (~makomo@user/makomo)
[21:26:33] <pjb> shka: IIRC, BBN Butterfly Lisp was related to *lisp, no?  
[21:27:08] <pjb> https://www.cs.cmu.edu/Groups/AI/lang/lisp/impl/bbn/0.html
[21:27:09] -ixelp- Package: lang/lisp/impl/bbn/
[21:27:30] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 240 seconds)
[21:29:35] <pjb> hey bbn butterfly lisp (scheme) seems to compile to C too.
[21:32:18] *** Joins: elflng (~elflng@5.28.137.182)
[21:42:26] <gilberth> Can I use ASDF as a make(1) ersatz, or would I turn mad?
[21:44:04] <gilberth> It's time for me to craft some "makefile" for a full built of TeX with its fonts and tools.
[21:57:06] <gilberth> Heh, I found this: <https://ctan.org/tex-archive/macros/latex/contrib/lisp-on-tex?lang=en> Crazy.
[21:57:06] -ixelp- CTAN: /tex-archive/macros/latex/contrib/lisp-on-tex
[22:01:27] *** Joins: krl (~rixard@h-158-174-122-239.A357.priv.bahnhof.se)
[22:09:09] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[22:31:34] <ck_> so now tex is self-hosting, per your implementation?
[22:43:25] <gilberth> ck_: What exactly do you mean by self-hosting here? Meta-circular by that Lisp in (La)Tex?
[22:44:30] *** Parts: Catie (~user@24.19.51.175) (Killed buffer)
[22:45:33] *** Joins: Catie (~user@c-24-17-253-63.hsd1.wa.comcast.net)
[22:45:37] <ck_> I mean compiling tex with (lisp-in-)tex
[22:47:07] <gilberth> I won't attempt that. That certainly is no CL to begin with.
[22:49:28] <Catie> That sounds like a really good way to make some absolutely unreadable code
[22:53:03] <gilberth> I have a toy Lisp in Postscript, could try to load TeX there. :) But then a Pascal to Postscript compiler be nicers and feasible.
[22:54:25] <Catie> Lisp-on-TeX looks super useful though. I use a lot of LaTeX and I wouldn't mind being able to embed arbitrary Lisp code in it
[23:01:54] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:29:22] *** Quits: mala (~mala@user/malaclyps) (Ping timeout: 240 seconds)
[23:31:00] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 252 seconds)
[23:31:56] *** Parts: gin (~gin@user/gin) ()
[23:41:34] *** lonjil2 is now known as lonjil
[23:54:01] *** Joins: selwyn (~selwyn@user/selwyn)
[23:59:10] <copec> Has anyone made like an SBCL unikernel or something that's made for "the cloud"
