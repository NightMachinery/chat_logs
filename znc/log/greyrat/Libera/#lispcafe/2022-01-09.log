[00:00:12] <pl> (and I had two doses of Pfizer then, now 2x Pfizer and 1x Moderna)
[00:00:24] <gilberth> pl: You were tested?
[00:01:32] <pl> yes, but we don't get info about type of virus back
[00:01:41] <pl> went through the mandatory quarantine
[00:11:03] <selwyn> 1 million dead in poland?
[00:11:34] <shka> selwyn: in summary, two years
[00:11:39] <shka> all reason
[00:11:49] <selwyn> oh right
[00:11:52] <shka> while it was 200k less before the pandemic 
[00:11:58] <selwyn> i thought you were counting tax years or school years for some reason
[00:12:24] <shka> so can covid make meaningful changes in the voting demographic: yes
[00:12:40] <selwyn> i cannot entertain such hopes in britain
[00:12:47] <selwyn> besides, it is depressing to win via the plague
[00:13:33] <selwyn> though i sympathise with the fact that you are not fussy how it happens
[00:15:08] <pl> selwyn: hopefully we won't have post-pandemic long-term consequence type of win
[00:15:50] <pl> last time it happened in Europe, we went from perfecting industrial killing of soldiers into perfecting killing of civilians
[00:17:52] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[00:38:17] <hayley> moon-child: https://gist.github.com/no-defun-allowed/7e3e238c959e27d4919bb4272487d7ad#gistcomment-4021304
[00:38:17] -ixelp- Don't Build Your Own Lisp Â· GitHub
[00:38:36] <shka> pl: any opinions on my blog post draft?
[00:48:27] <pl> in gist form it wasn't very readable, because it lost any formatting so I had something like 15 kilometer-long lines
[00:49:12] <shka> mmm, right
[00:49:52] <shka> it will be published with formatting, but that's what i have right now
[00:58:08] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[01:00:16] *** Joins: Alfr (~Alfr@user/alfr)
[01:00:18] <selwyn> i fucked up the kefir today so i am eating some grains
[01:00:24] <selwyn> hopefully i won't turn into some
[01:01:16] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[01:04:53] <selwyn> there are some sober voices that appear to discount the prospect of 'flurona', but whatever
[01:05:03] <selwyn> public health communication has been terrible this pandemic
[01:05:41] <shka> selwyn: from what i gathered it is considered unlikely to get both rona and flu
[01:05:58] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:06:14] <shka> but this assumption may get invalidated in the future
[01:06:27] <selwyn> ok
[01:06:47] <shka> anyway, my point is
[01:07:06] <shka> flu after corona proved to be a serious problem
[01:07:39] <drakonis> hayley: wow
[01:07:44] <shka> and this just shows that we are still trying to gather data 
[01:08:17] <drakonis> https://github.com/kanaka/mal seen this one yet?
[01:08:18] <aeth> I've been varying degrees of sick at least three times since late November
[01:08:19] -ixelp- GitHub - kanaka/mal: mal - Make a Lisp
[01:08:34] <aeth> late November, mid December, and early January
[01:08:42] <aeth> spaced enough apart to be three different things
[01:08:55] <aeth> could be two covid variants and a cold or the flu, I guess
[01:08:56] <drakonis> 63 different impls
[01:09:03] <hayley> Yes, it's not as horribly broken, but the description of a compiler at the end is damn misleading. "Just generate code for your host language." Sure, and draw the rest of the fucking owl too.
[01:09:43] <drakonis> why is it that everyone wants to make clojure inspired lisps now
[01:09:57] <selwyn> i thought clojure was out of fashion these days
[01:10:15] <hayley> drakonis: cause it's more mOrDerN
[01:10:36] * hayley keeps the typo
[01:10:41] <drakonis> its a good typo
[01:11:14] <drakonis> lispcafe isnt publicaly logged, right?
[01:11:32] <hayley> Correct, it's not logged publicly.
[01:11:33] <shka> drakonis: no
[01:11:35] <drakonis> good
[01:11:37] <drakonis> okay
[01:11:47] <shka> selwyn: clojure is still pretty popular
[01:11:48] <drakonis> i think clojure these days is current lisp cult lives
[01:11:59] <shka> because it is a good language!
[01:12:11] <drakonis> lisp themed programming cult
[01:12:16] <drakonis> also rich hickey is arrogant as fuck
[01:12:17] <shka> i prefer CL, but clojure is actually pretty good
[01:12:56] <drakonis> the big downside of clojure is the community being aggressively cult-ish and laying claim to so many things it did not create
[01:13:06] <shka> ok
[01:13:14] <shka> worse then rust?
[01:13:29] <drakonis> getting there
[01:13:56] <shka> shame about that
[01:14:13] <shka> but i still think that clojure is a nice language 
[01:14:21] <drakonis> sure
[01:14:31] <selwyn> i got the impression that clojure did a much better job of taking noobs under their wing
[01:14:36] <shka> perhaps the best you can do and have java interop thing still going on
[01:14:48] <clothespin> clojure is a nice language if for some reason you are forbidden to use CL
[01:14:56] <drakonis> you got clojurians talking about immutable data structures like they didnt exist exist before clojure
[01:14:57] <shka> selwyn: having access to java libs would do that for ya
[01:14:58] <selwyn> which we admittedly have room for improvement
[01:15:30] <drakonis> there always is
[01:15:43] <selwyn> i don't know how responsible java interop is for that situation
[01:16:04] <drakonis> it is
[01:16:12] <drakonis> highly responsible for clojure's success
[01:16:14] <selwyn> possibly it looks more attractive as people know what the jvm is, and what jvm languages are
[01:16:25] <shka> selwyn: it is critical
[01:16:34] <sm2n> A lot of clojure people seem to learn it at work
[01:16:59] <shka> access to java libraries means that you have, from day 0, access to every library you would ever need to write a corporate software
[01:17:01] <sm2n> CL doesn't really have that
[01:17:08] <drakonis> it lets clojure take advantage of java's entire ecosystem of libraries and jvm optimizations
[01:17:16] <drakonis> its a huge improvement
[01:17:27] <drakonis> so much that the clr variant of clojure has never taken off the way the jvm one has
[01:17:53] <shka> yup
[01:18:14] <selwyn> but specifically with respect to nurturing beginners more - is this down to jvm interop
[01:18:30] <shka> while in CL... even HTTP/2 will be a problem
[01:18:45] <shka> and it is http/3 under way
[01:18:58] <selwyn> or is it a case of a language that people use in large numbers eventually getting popular resources
[01:19:29] <drakonis> jvm interop played a huge role in it
[01:19:29] <shka> it is the case of language as a platform vs language on the platform
[01:19:39] <drakonis> so basically
[01:19:42] <pl> shka: I was thinking of building wrapper for some http/2 and http/3 libs that provided drakma interface for backwards compat
[01:19:54] <drakonis> aggressive evangelism also did it
[01:19:56] <shka> pl: dexador please
[01:20:05] <shka> dexador api > drakma api :P
[01:20:17] <shka> but anyway, still missing
[01:20:18] <pl> shka: that's possible. Both would be mappings to internal API
[01:20:39] <clothespin> common lisp needs a multicore solution like cilk
[01:20:40] <pl> because any HTTP/1.x API is not a good match for HTTP/2 or HTTP/3
[01:20:40] <sm2n> If you are fine with ffi, wrapping libcurl should work
[01:20:44] <sm2n> it's just kind of ugly
[01:20:46] <shka> also, try to connect to a database from CL
[01:20:47] <drakonis> rich hickey's extremely aggressive about the whole thing
[01:20:49] <shka> PG no problem
[01:20:53] <drakonis> also transducers
[01:20:55] <shka> try SNOWFLAKE
[01:20:58] <drakonis> lol
[01:21:00] <pl> shka: hahahahahahahahaha
[01:21:12] <pl> shka: guess where I'm starting on 17th?
[01:21:14] <drakonis> there's a lot of things that he renamed and pushed for
[01:21:17] <drakonis> pl: ycombinator?
[01:21:34] <pl> nope. *Snowflake*
[01:21:43] <shka> snowflake is legit great data base for certain types of loads
[01:21:47] <shka> very cost effective
[01:22:34] <shka> but using it from CL is a problem
[01:22:42] <shka> it is not a problem when using from clojure
[01:22:55] <drakonis> oh
[01:22:56] <drakonis> huh
[01:23:10] <shka> well, maybe it wouldn't be hard when you pull out ABCL
[01:23:20] <drakonis> java interop strikes again
[01:23:26] <shka> yup
[01:23:51] <drakonis> another thing that people like about clojure seems to be the blank slate with regards to lisp design?
[01:23:53] <drakonis> also uh
[01:23:54] <shka> anyway, snowflake, hadoop, machine learning
[01:23:55] <drakonis> how do i put it
[01:24:01] <shka> you call it, java has it
[01:24:16] <selwyn> patched log4j
[01:24:37] <shka> yes, log4j was embarrassing 
[01:24:43] <hayley> .oO(I wonder how many milliseconds any of the BYOL interpreters will last if I run them through AFL. Any guesses? 5?)
[01:24:44] <pl> hadoop is a problem because a lot of hadoop stuff is simply unworkable outside of java, because they use java serialization over the wire
[01:24:45] <drakonis> clojure's design is very deliberate and controlled by a single party
[01:25:10] <selwyn> shka: a million twelve year olds wondering why minecraft is updating without any new content
[01:25:14] <pl> shka: anyway, who knows, maybe I could spin a small project to make snowflake CL client :D
[01:25:27] <shka> pl: would appreciate it man
[01:25:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:25:52] <shka> i would consider moving my terabytes of counter strike data into it
[01:26:08] <shka> would be much cheaper then PG
[01:26:09] <pl> I'll be working in the underlying platform team, mostly dealing with low-level Operating System stuff, but who knows, I might be able to get something pushed
[01:27:28] <drakonis> perhaps the biggest way to draw people would be one of those libraries that adds a nice layer on top of cl that makes it easier for starters?
[01:27:30] <drakonis> maybe?
[01:27:57] <selwyn> maybe
[01:27:58] <hayley> But are you sure you're teaching CL?
[01:28:02] <selwyn> people have tried this sort of thing before
[01:28:06] <selwyn> (iirc)
[01:28:12] <drakonis> definitely not.
[01:28:16] <drakonis> wrt taeching cl
[01:28:18] <drakonis> teaching cl
[01:28:31] <drakonis> cl21 tried something like it iirc
[01:28:35] <selwyn> yeah
[01:29:29] <sm2n> I've taught people CL before and it was fine
[01:29:44] <drakonis> lots of people act like CL is this crusty old language
[01:30:05] <sm2n> The issue is motivation, not the core language
[01:30:10] <drakonis> perhaps
[01:30:11] <selwyn> if you want to make common lisp popular - and not everyone does - there ought to be some kind of board that experiments and markets different things, instead of individuals trying to guess what outsiders would find attractive
[01:30:29] <drakonis> perhaps
[01:30:30] <pl> I used previously replacement "CL" package that imported various useful bits (like making conduits standard)
[01:30:41] <pl> selwyn: that's what CDR was supposed to bring
[01:30:52] <selwyn> the extensions mechanism?
[01:30:56] <drakonis> CDR is coming back mind you
[01:31:29] <drakonis> https://mailman.common-lisp.net/pipermail/clo-devel/2022-January/001518.html
[01:31:29] -ixelp- CDR - Looking for some people...
[01:32:20] <drakonis> at least it stands to be seen.
[01:32:23] <sm2n> pl: I don't think CDR is really that
[01:32:29] <drakonis> i'm new to CL
[01:32:47] <pjb>  drakonis: then #clschool is for you.
[01:32:47] <drakonis> CDR is for improving CL without needing to spend ungodly amounts of money and time on a new iteration of the standard
[01:33:01] <sm2n> We talk a lot about language extensions but I personally don't think they are that important
[01:33:11] <pl> sm2n: CDR was supposed to replicate similar community processes in other communities
[01:33:18] <pl> and there are some extensions that would be really useful
[01:33:26] <pl> like extensible sequences and hash table types
[01:33:30] <selwyn> yeah
[01:33:33] <drakonis> all it does is improve the baseline
[01:34:05] <selwyn> there are some extensions for which there is no good reason not to implement them
[01:34:06] <pl> also, CDR could cover things like better standard networking interface, which could be then implemented by a library but also incorporated with implementations
[01:34:06] <sm2n> What I would like is a concerted effort on high-quality libraries for doing more "normal people" things, such as the aforementioned http client/server
[01:34:40] <drakonis> if i remember correctly, most of ansi cl was designed before clos and mop
[01:34:52] <pl> sm2n: a considerable issue is that for a good modern HTTP library, I need to write a new modern DoD Internet library
[01:35:10] <drakonis> so a cdr for taking advantage of post clos/mop cl would be welcome i suppose?
[01:35:11] <sm2n> DoD?
[01:36:11] <pl> sm2n: Department of Defense Internet Protocol. Also known as IPv4 (and nowadays v6)
[01:36:18] <sm2n> ah, yeah
[01:36:29] <sm2n> that's what I thought but I wasn't sure
[01:37:03] <pl> IPv9 used TCP and UDP on top of OSI instead of DoD protocols, but no IP
[01:37:13] <drakonis> small improvements like the ones you'd see with the srfis
[01:37:20] <drakonis> or big ones even?
[01:37:21] <selwyn> i am not familiar with the cdr mechanism on this, but it is customary to take those extra parts of the mop as morally part of the spec
[01:37:49] <sm2n> IPv9???
[01:37:59] <drakonis> i'm sure its actually ipv6
[01:39:07] <sm2n> https://datatracker.ietf.org/doc/html/rfc1606
[01:39:09] -ixelp- rfc1606
[01:39:09] <sm2n> oh hahaha
[01:39:21] <drakonis> wait what
[01:39:34] <drakonis> haha
[01:39:52] <random-nick> drakonis: CLOS got in late in the standardisation process but the MOP was intentionally omitted
[01:40:01] <drakonis> sure
[01:40:08] <drakonis> but clos, yeah.
[01:40:27] <pl> yeah, IPv9 was the number assigned to TUBA proposal
[01:40:56] <pl> not to mistake it with 1606
[01:42:02] <pl> IPv6 was one out of few that were discusses in early 1990s when v4 was supposed to be sunset
[01:42:40] <pl> (part of the problem that caused v4 to be so hard to migrate from is the shittiest socket api, Berkeley Sockets)
[01:44:30] <drakonis> the worst thing to come out of berkeley
[01:44:32] <sm2n> pl: What's the issue with bsd sockets? I'm not really familiar with the criticism around it
[01:44:44] <sm2n> drakonis: that would be unix in general, probably
[01:44:54] <drakonis> that'd be the bsds
[01:44:56] <drakonis> not unix
[01:45:06] <sm2n> Yeah, that's true
[01:45:18] <drakonis> bell labs is where unix spawned from
[01:45:22] <sm2n> unix was att/bell labs
[01:45:51] <drakonis> how devilish
[01:46:06] <sm2n> pl: I guess a better question is, what are/were the alternative socket apis?
[01:46:26] <sm2n> and how does that relate to ipv4 migration
[01:46:37] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 240 seconds)
[01:47:40] <pl> sm2n: BSD Sockets were a hack job because DoD needed to port IPv4 to Unix fast
[01:47:59] <pl> and it exposes way too much of low-level information in normal usage
[01:48:54] <pl> meaning that porting an application that used IPv4 to anything else was a big issue till at earliest 1998, and the extensions introduced then (taken from XTI, which was overall better interface) weren't easily available - or known about
[01:48:55] *** Joins: johnjaye (~pi@154.6.152.74)
[01:50:46] <hayley> https://news.ycombinator.com/item?id=29855044
[01:50:47] -ixelp- Having learned a number of Lisp systems in the past, I wouldn't necessarily reco... | Hacker News
[01:50:58] <hayley> did u know that if JVM is deterministic, then every language targeting JVM is deterministic?
[01:51:12] <drakonis> that's good timing...
[01:51:18] <hayley> Also, then ABCL should similarly benefit from the JVM being standardised. Not!
[01:51:39] <pl> sm2n: for example, both XTI and Symbolics Genera networking had the feature where it let application writer /not care about how to reach the other system/
[01:51:45] <drakonis> lisp for me but not for thee
[01:52:25] <drakonis> oh hey, gigamonkey is in the comments
[01:52:36] <drakonis> is lisp going back into vogue or something?
[01:52:53] <selwyn> lisp is always in vogue at hn
[01:53:13] <sm2n> drakonis: lisp always gets karma on hn because p*ul graham was/is a lisper and people like to suck up to him
[01:53:26] <drakonis> ah yes
[01:53:26] <selwyn> what sm2n said
[01:53:43] <drakonis> good to hear that pg cultists havent been relevant to lisp
[01:54:11] <selwyn> without pg i would never have discovered common lisp
[01:54:17] <sm2n> pl: Where can I learn more about this?
[01:54:31] <sm2n> is there some cache of xti manpages somewhere
[01:54:46] <selwyn> i feel he is broadly correct about its advantages in startup world
[01:55:07] <selwyn> but i had to unlearn some things before i could actually write half sane software in common lisp
[01:55:17] <pl> sm2n: you can grab a Solaris based system, among other things
[01:55:39] <sm2n> like smartos?
[01:56:06] <drakonis> is solaris still relevant beyond a historical cliffnote?
[01:56:20] <sm2n> samsung uses it in production
[01:56:26] <sm2n> (joyent)
[01:56:48] <sm2n> and oracle still sells their version
[01:56:49] <pl> oxide.computer also uses Solaris 
[01:56:58] <pl> OmniOS I think is still alive?
[01:57:09] <hayley> Yeah, well, that's Oxide Computer
[01:57:19] <drakonis> oxide is pretty much sun alumni
[01:57:23] <pl> anyway, so-called "STREAMS" networking was exposed for most with so called TLI/XTI interfaces
[01:57:29] <drakonis> its their whole thing
[01:57:44] <pl> there's a lot of non-sun people there now
[01:58:03] <pl> and I think Jesse was never Sun, and came from "extreme coreOS user" side ;)
[01:58:09] <drakonis> ah yes, there's her
[01:59:52] <pl> the person who designed their network switch is also not from sun
[02:00:03] <drakonis> also good
[02:00:25] <drakonis> because the worst thing i've observed about sun's history is that it flew too close to the sun
[02:00:32] <sm2n> They also have chief rust evangelism strike force leader klabnik (very much not from sun)
[02:00:35] <drakonis> ah yes
[02:00:37] <drakonis> wait
[02:00:56] <drakonis> i don't know if there's a veneer of irony here when they name their new OS hubris
[02:01:05] <hayley> drakonis: one sec
[02:01:10] <drakonis> https://hubris.oxide.computer/
[02:01:11] -ixelp- Hubris
[02:01:11] <pl> I consider Rust to be a bit of improvement over the people who gave us non-trivial parts of node.js
[02:01:12] <drakonis> jfc
[02:01:13] <hayley> https://i.redd.it/yxmyv4achv281.jpg
[02:01:21] <sm2n> well the debugger for it is called humility iirc
[02:01:26] <pl> drakonis: they explicitly call out the name
[02:01:40] <sm2n> so it's supposed to be a joke
[02:01:53] <drakonis> its ironic because it was hubris that killed sun
[02:02:09] <drakonis> they're on the running to be the second rise and fall of sun arent they
[02:02:25] <sm2n> hayley: Actually I've been wondering about that, why do they think virtual memory is so important?
[02:02:42] <hayley> sm2n: Cause _someone_ has to run unsafe Rust code.
[02:02:58] <pl> they have third party code blobs
[02:03:00] <pl> period
[02:03:04] <sm2n> Ah
[02:05:16] <drakonis> im bookmarking lispmemes to shitpost
[02:05:16] <pl> and while pure language-enforced security sounds nice, I agree with OS/400 approach of "throw second layer of hw interlocks at it"
[02:05:49] <drakonis> hayley: is this just you posting with three dozen alts?
[02:06:13] <hayley> No, it's me posting like 2/3 of the time with one account.
[02:06:15] <drakonis> also fuck reddit's new theme holy shit i still hate
[02:06:39] <drakonis> who the fuck thought it was a good idea to enforce it on desktop
[02:07:07] * hayley thinks she is running out of less obscure Lisp meme ideas. Also helps that early r/lispmemes had a huge backlog to go through.
[02:07:19] <hayley> https://www.reddit.com/r/LispMemes/comments/rt88l8/not_clickbait_not_for_kids_carl_hewitt_called/ was a total flunk.
[02:07:21] -ixelp- [not clickbait] [NOT for kids] [Carl Hewitt called] : LispMemes
[02:07:50] <hayley> https://www.reddit.com/r/fullegoism/comments/rtf7i5/it_is_literally_called_self/ was also posted in r/lispmemes first, to no success.
[02:07:52] -ixelp- it is literally called Self : fullegoism
[02:08:11] <pl> drakonis: use old.reddit.com
[02:08:14] <pl> minimally better
[02:08:25] <drakonis> i am trying to enforce it to always use old.reddit.com
[02:08:39] <pl> there are extensions that will automatically rewrite your links, works better than anything from reddit itself]
[02:10:26] <drakonis> which ones?
[02:10:46] <drakonis> RES clearly doesnt have it
[02:10:47] <drakonis> sadly.
[02:11:15] <drakonis> have it now
[02:13:40] <pl> I have something dedicated to just swapping for old reddit
[02:14:25] <pl> and on mobile I use RIF and picturesaurus
[02:17:23] <hayley> https://lists.gnu.org/archive/html/savannah-hackers-public/2022-01/msg00001.html "My balls include a copy of the license"
[02:17:23] -ixelp- Re: [Savannah-hackers-public] Error en https://savannah.gnu.org/register
[02:18:05] <sm2n> lol
[02:18:17] <drakonis> lmfao
[02:21:13] <hayley> https://www.reddit.com/r/rustjerk/comments/rttfxk/riir/ lmao
[02:21:16] -ixelp- "RIIR" : rustjerk
[02:28:20] <selwyn> hm
[02:28:36] <selwyn> there is of course 'l' in death note but also an 'r' iirc
[02:28:40] <selwyn> memeworthy?
[02:28:51] <drakonis> memeworthy.
[02:29:49] <selwyn> i'll take a crab.. and eat it
[02:30:14] * hayley uploaded an image: (320KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/mIwpcajyqyyVFLWrDGsQQhNk/cooking-with-jmc.png >
[02:30:22] <selwyn> https://www.youtube.com/watch?v=KC6T3_O2iWc
[02:30:23] -ixelp- I'll take a potato chip... and eat it! - YouTube
[02:36:36] <hayley> selwyn: I was thinking the tune of https://youtu.be/dVZwu5524f0?t=192 somehow.
[02:36:37] -ixelp- The Misunderstanding (2003 Digital Remaster) - YouTube
[02:37:43] <epony> the 64bit epoch begins a bit earlier in 2000, and only commercialisation starts in 2004
[02:54:34] <drakonis> lmao casey muratori
[02:55:52] <drakonis> that and jon blow
[02:57:24] *** Joins: OutsideContextPr (GreatFlea@168.138.73.107)
[03:10:05] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[03:12:32] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[03:15:16] <drakonis> why are game devs so arrogant?
[03:21:05] <drakonis> https://i.redd.it/6fnrs8tuinz61.png this is very good
[03:47:14] * hayley writes the words TRANSFER and CONFLUENCE and gets worried.
[03:51:38] <hayley> I also need a CLOSER-P apparently.
[03:58:15] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:58c5:6207:2988:1b06) (Ping timeout: 268 seconds)
[04:19:12] <hayley> https://github.com/telekons/one-more-re-nightmare/blob/master/Code/Compiler/length-inference.lisp#L24-L48 mucho texto
[04:19:13] -ixelp- one-more-re-nightmare/length-inference.lisp at master Â· telekons/one-more-re-nightmare Â· GitHub
[04:23:09] <hayley> But I haven't had to write such a long comment before; does it make sense?
[04:27:34] <gilberth> hayley: Have you played with re2?
[04:28:05] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[04:28:53] <hayley> RE2? No.
[04:29:49] <gilberth> Ok then, I intend to add it to my testing tool. It's C++ though, and my C++ is rusty.
[04:30:56] <hayley> BTW I now lint REs too, and you get warnings if a RE or a submatch never matches.
[04:31:04] * hayley doesn't know what to call it. Submatch? Group? Capture?
[04:31:19] <gilberth> Submatch.
[04:31:46] <gilberth> I do that for my scanner and warn when one rule could never be matched.
[04:32:19] <gilberth> Which you can tell from the DFA.
[04:32:24] <hayley> Yep.
[04:32:34] <hayley> https://github.com/telekons/one-more-re-nightmare/blob/master/Code/Interface/lint.lisp
[04:32:35] -ixelp- one-more-re-nightmare/lint.lisp at master Â· telekons/one-more-re-nightmare Â· GitHub
[04:47:25] *** Quits: algae (~algernon@170.10.246.117) (Ping timeout: 240 seconds)
[04:51:39] <drakonis> https://blog.klipse.tech/databook/2021/12/10/dop-link.html ?????
[04:51:40] -ixelp- Data-Oriented Programming: A link in the chain of programming paradigms | Yehonathan Sharvit
[04:52:37] <drakonis> ???????????
[05:08:37] <gilberth> I would appreciate when re2 would have some documentation.
[05:11:45] <gilberth> drakonis: What the heck is data oriented programming?
[05:12:24] <pjb> When the structure of your code matches the structure of your data.  Also, when you write "interpreters" for your data.
[05:12:40] <drakonis> the clojure fanboy defines it as the separation of data from functions?
[05:12:42] <drakonis> its uh
[05:12:44] <aeth> in particular
[05:12:44] <drakonis> idk
[05:13:15] <aeth> I think the common factor is a rejection of OOP
[05:13:28] <aeth> sort of a return to procedural, or at least procedures
[05:14:22] <drakonis> yes.
[05:14:32] <aeth> since there are different variations of the same approach, but the key is that it's not oriented around objects
[05:14:46] <edgar-rft> immutability would save us from getting infected with covid-19
[05:15:37] <drakonis> i think the author's interpretation of rejecting objects to be sketchy at best
[05:16:44] <gilberth> "The main limitation of LISP lists is that when we update a list, we need to create a new version of it by cloning it and it has a negative impact on performances both in terms of CPU and memory." Aha. The original LISP paper indeed has no RPLACA or RPLACD, not even SETQ; But the LISP I implementation has. So much for that.
[05:17:15] <aeth> and then there's the confusingly separate but also OOP-rejecting https://en.wikipedia.org/wiki/Data-oriented_design
[05:17:34] <aeth> (reject OOP, return to FORTRAN, everything is an array, it's good for caches)
[05:17:37] <drakonis> appaling at worst.
[05:17:46] <aeth> vs https://en.wikipedia.org/wiki/Data-driven_programming
[05:17:47] <moon-child> yeah, mutability has been a very important part of lisp for a looong time
[05:17:54] <drakonis> because it tries to frame it within newer lisps like clojure
[05:18:14] <drakonis> its not like it didnt exist in the context of other languages
[05:18:32] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:479:e10b:25ac:9e6f) (Remote host closed the connection)
[05:18:38] <drakonis> "Unfortunately, until 2007 and the implementation of efficient persistent data structures in Clojure, immutability was not applicable for production applications at scale."
[05:18:40] <drakonis> ??????
[05:19:01] <drakonis> haskell??
[05:19:52] <aeth> drakonis: and on your earlier point, gamedevs are arrogant because (1) it's very hard but it seems easy (easy to verify (play), hard to generate (make)... to abuse the P != NP intuition that every programmer has)
[05:20:13] <aeth> drakonis: and (2) everyone who's not arrogant doesn't speak online while everyone who is thinks that they're a '70s Hollywood director
[05:20:20] <gilberth> So, now what? Immutability is bad for LISP, but good otherwise? Could the author make up his mind?
[05:20:21] <aeth> s/who is/who does/
[05:20:39] <drakonis> gaming auteurs
[05:20:40] <aeth> gilberth: immutability is good, but only if fast? I don't disagree
[05:21:06] <aeth> I tend not to use immutability much outside of macros because it isn't fast in CL and, more importantly, it's not very predictable in performance (and the latter's the real flaw)
[05:22:42] <gilberth> Oh dear. What if the thing I manipulate has state?
[05:23:09] <drakonis> STATE BAD
[05:23:14] <drakonis> STATE MUST DIE BEEP BOOP
[05:23:17] <drakonis> EXTERMINATE
[05:23:43] <gilberth> Say good bye to your window system then. And to your networking stack.
[05:24:56] <gilberth> This is ideology. An oversimplification like GOTO = evil. Next.
[05:26:09] <gilberth> Rather tell me what I need to do to have re2 match anything at all.
[05:26:43] <drakonis> i really dont want to keep shitting at clojure people
[05:26:50] <drakonis> but they really gotta stop with this shit
[05:28:34] <drakonis> i feel really dirty
[05:28:50] <hayley> Well, that's you. I don't.
[05:28:59] <edgar-rft> what do clojure people think about the united states?
[05:29:28] * hayley drank a $1 slushee equivalent and her digestive system hates her for it.
[05:29:54] *** Joins: algae (~algernon@170.10.246.117)
[05:33:00] <drakonis> also what the fuck is a transducer supposed to be anyways? chaining higher order functions?
[05:33:09] <drakonis> if yes then why the fuck does it need a new name?
[05:33:19] <drakonis> its not like pipe macros dont exist
[05:35:39] <drakonis> fuckin computers, man.
[05:36:53] <gilberth> In a nutshell a transducer is a finite state machine mapping one input stream to an output stream. In CS, that is.
[05:37:05] <drakonis> https://web3isgoinggreat.com/
[05:37:06] -ixelp- Web3 is going just great
[05:37:07] <drakonis> i see
[05:46:10] <drakonis> that sounds really boring and not at all impressive
[05:47:09] <hayley> Sounds about right.
[05:48:01] <hayley> gilberth: But which updating operations? PUSH and POP don't copy any list structure. APPEND shares with one of the lists.
[05:49:25] <gilberth> hayley: RPLACA, RPLACD, NCONC if you wish. And the whole host of other.
[05:49:55] <hayley> Those don't copy either. 
[05:50:18] <hayley> "In as sense, LISP lists are the ancestors of JavaScript object literals" Fucking _what_
[05:50:19] <gilberth> I got what you said the wrong way around.
[05:51:00] <gilberth> hayley: Yes, we are so confident and bold, that we share structure. *gasp*
[05:51:13] <hayley> Yes, most "functional" operations don't copy.
[05:51:42] <hayley> PUSH and POP should rather be CONS and CDR to be pure, but you get the idea.
[05:52:03] <gilberth> That's bad, because we need a GC then, forgot?
[05:52:13] <hayley> https://pbs.twimg.com/media/FImIjF-WYAYHRCv?format=jpg&name=900x900 lol
[05:52:35] <hayley> They are Clojure programmers, they'd suck off the maintainers of their JVM if they could.
[05:53:19] <hayley> (Though apparently use of persistent data structures and structure sharing gives you more old objects, which is supposed to annoy a generational GC. Should measure it one day.) 
[05:53:32] <gilberth> Well, I should stop reading what people wrote who can't do their f***ing homework.
[05:54:19] <hayley> Usually helps, yes.
[05:54:19] <gilberth> hayley: This kind of sharing you mentioned in right in the purely functional original paper LISP.
[05:55:02] <drakonis> hayley: this is some confidently incorrect shit
[05:55:03] <hayley> https://gist.github.com/no-defun-allowed/7e3e238c959e27d4919bb4272487d7ad#gistcomment-4021819 Seems I helped someone with their homework, though idk why they chose to do it.
[05:55:03] -ixelp- Don't Build Your Own Lisp Â· GitHub
[05:55:24] <hayley> "But that was why I wanted to work with C again to get to know memory management bugs first hand, and I think I got a good taste" idk, I don't drink poison to get to know it.
[05:55:32] <gilberth> So the author must refer to the previous [failed IMHO] attempt to formulate LISP in terms of SUBLIS.
[05:56:03] <hayley> (let ((x 'y)) (list x 'x)) ; oops
[05:56:24] <gilberth> lol
[05:56:56] <kakuhen> seeing the mp4 parsing code in XLD was enough for me to never attempt reading or writing parsers in C
[05:57:09] <hayley> Oh well, I mentioned -fsanitize=memory and the author of BYOL didn't. Don't build 1-0 Build
[05:59:52] <gilberth> hayley: (cdr (list 1 2)) ;oops
[06:00:40] <hayley> Well, time to do what I'd say I'd do and fuzz test BYOL. This will be hilarious.
[06:02:16] <hayley> "make: *** No rule to make target 'clean'.  Stop." u wot
[06:07:59] <hayley> Nothing after 2 minutes?
[06:08:53] <hayley> Apparently the hand-rolled parser is much faster though. Funny.
[06:11:33] <hayley> Still, the way memory is managed in that book is so fragile - it really does depend on everything being linear, and it's far too easy to fuck that up.
[06:18:44] <sm2n> Interesting <https://libreboot.org/news/usa-libre.html>
[06:18:45] -ixelp- Libreboot Ã¢ÂÂ New Hampshire (USA) may soon enshrine Software Freedom into law. YOUR HELP IS NEEDED!
[06:21:05] <hayley> I can't even watch it blow the stack, because it strcmps symbols. How un-fun.
[06:22:28] <hayley> Well, it crashes gloriously if I ulimit -s 512
[06:26:51] <hayley> 4.1 seconds to compute fib(20) the stupid way. /me wonders how it compares to using a printer.
[06:28:19] <hayley> https://www.reddit.com/r/Anarchism/comments/rz777j/til_garbage_collection_is_3x_deadlier_than/
[06:28:20] -ixelp- TIL garbage collection is 3x deadlier than policing : Anarchism
[06:29:27] <gilberth> hayley: Still wasting your time on BYOL? Stop it. You already wasted enough time on that.
[06:29:40] <hayley> Fine.
[06:30:53] <hayley> Either fuzzing is like shooting fish in a barrel, or it yields nothing. No fun.
[06:31:24] <gilberth> sm2n: Interesting, indeed. In general I would not like such a law, but I like this part: "If a person is tried in a criminal case, they have the right to audit the source code of any proprietary software that collects evidence against them". This would imply to reveal any exploits they used to pwn your devices.
[06:32:23] <moon-child> gilberth: I think there was a case like that recently in the us
[06:32:36] <sm2n> It's a larger issue with black box surveillence systems and such
[06:32:37] <moon-child> matlab was used to perform dna analysis that incriminated someone
[06:32:45] <moon-child> he asked to look at the source code
[06:32:47] <moon-child> they refused
[06:32:50] <moon-child> so the case was dropped
[06:33:28] <moon-child> oh, no, they did let him look at the code
[06:36:27] <gilberth> If you're an ISP here, you are forced by law to cooperate with law enforcement when performing man-in-the-middle attacks.
[06:37:47] <moon-child> in australia, it is worse.  The government can ask you to spy on your employer
[06:38:08] <hayley> Hey, I get to be forced to pwn my own software...somehow.
[06:38:11] <gilberth> [That is when law enforcement wants to launch a man-in-the-middle attack against you. To be clear.]
[06:38:48] <gilberth> moon-child: Wat?
[06:39:25] <gilberth> I mean they may ask, but can they force me to spy?
[06:39:36] * hayley taps on https://www.homeaffairs.gov.au/about-us/our-portfolios/national-security/lawful-access-telecommunications/data-encryption
[06:40:50] <hayley> Agencies can seemingly choose "to request voluntary assistance from providers with a technical assistance request", or "agencies to require assistance from providers with a technical assistance notice where the provider is already capable of giving the required assistance", possibly after "the Attorney-General and Minister for Communications [...] jointly require a provider develop a new capability with a technical capability notice where the
[06:40:50] <hayley> provider is not already capable of offering that type of assistance"
[06:42:36] <gilberth> Yep. This is different from what moon-child said.
[06:43:06] <hayley> However, you apparently cannot be asked to remove encryption. So what do they want exactly? That I backdoor someone's machine to get the plaintext?
[06:43:58] <hayley> "If you are a service provider other than a carrier or carriage service provider, a company can be fined up to approximately AUD 10 million for each case of non-compliance. An individual can be fined up to approximately AUD 50,000 for each case of non-compliance."
[06:44:36] <hayley> They can force you to spy, but I don't know about the "on your employer "part.
[06:45:16] <gilberth> Well, here the assistance as an ISP, you need to provide is some power, some space, coffee and routing the network traffic to and from the suspect through the law enforcement's machine.
[06:47:47] <gilberth> Which opens the door to man-in-the-middle attacks. Convenient that all kind of software does updates all the time.
[06:51:10] <gilberth> There is another law, which allows law enforcement to plant a Trojan horse on your device to get at communication before it gets encrypted. Trouble is: The software leaked, was reverse engineered, and that software was fit to also place false evidence. This rendered this software completely useless for the law enforcement.
[06:53:17] <hayley> Still no complaints about my description of the minimum length algorithm?
[06:54:02] <gilberth> hayley: Are you talking to me?
[06:54:10] <hayley> Sure.
[06:55:26] <gilberth> I have not read it. Have posted propose here? Or some link?
[06:57:16] <hayley> https://github.com/telekons/one-more-re-nightmare/blob/master/Code/Compiler/length-inference.lisp#L24-L48
[06:57:17] -ixelp- one-more-re-nightmare/length-inference.lisp at master Â· telekons/one-more-re-nightmare Â· GitHub
[07:00:48] <gilberth> Later, hayley, later.
[07:03:57] * moon-child ponders the benefits of a multi-dimensional array representation where the shape is always sorted
[07:04:15] <drakonis> there's a bunch of lisp posts on hn right now
[07:04:16] <drakonis> wow
[07:04:28] <moon-child> e.g. compare simd reductions--summation, say--on arrays with shape 3 n and n 3 (where n is arbitrarily large).  3 n will be easier
[07:04:38] <moon-child> _regardless_ of whether you perform a leading-axis or trailing-axis sum
[07:05:51] <moon-child> however, it is also possible to sensibly add two arrays one of whose shapes is a subsequence of the other.  In which case the prefix and suffix of the (virtual) shape could be arbitrarily distributed within the actual shape
[07:05:54] <moon-child> which is not so nice
[07:17:06] <semz> > This rendered this software completely useless for the law enforcement.
[07:17:13] <semz> Has there even been a case where this line of argument was tested?
[07:17:41] <semz> I mean obviously we can see that it would be useless, but what stops the judge from saying "the police said it would never ever do that, so sorry, jail for you"
[07:19:39] <semz> because afaik that's how most defenses along these lines end
[07:20:36] <hayley> "gilberth has completed his investigation into gilberth and found no corruption"
[07:20:46] *** Quits: OutsideContextPr (GreatFlea@168.138.73.107) (Quit: The Lounge - https://thelounge.chat)
[07:22:44] <Aurora_v_kosmose> semz: There seems to be a problem with blackbox proprietary software output being used as evidence in USA
[07:23:19] <gilberth> semz: Not in a criminal case. But it's obvious that any evidence would then be useless. The High Court for constitutional matters (Bundesverfassungsgericht) stopped use of that Trojan horse. But IIRC it stopped the law in question at a whole. I am losing track as that court stops laws all the time, which then are passed again by parliament all the time.
[07:23:27] <semz> The USA also has fruit of the poisoned tree, which Krautland doesn't have :(
[07:23:38] <semz> ah
[07:26:03] <Aurora_v_kosmose> > There is another law, which allows law enforcement to plant a Trojan horse on your device to get at communication before it gets encrypted. | utterly unacceptable
[07:26:29] <gilberth> Anyhow, I will never vote a party which passes unconstitutional laws. I am grateful though, that we have said Bundesverfassungsgericht watching and being effective.
[07:26:33] <Aurora_v_kosmose> > Which opens the door to man-in-the-middle attacks. Convenient that all kind of software does updates all the time. | Something something reproducibility & authentication would help against this
[07:27:16] <Aurora_v_kosmose> But yeah, Microsoft Windows & its built-in dropper is a big culprit.
[07:27:50] <gilberth> Aurora_v_kosmose: When I route all my traffic though some VPN, how could that kind of attack be successful. That's the fun part, most of those wet dreams are ineffective.
[07:28:35] <Aurora_v_kosmose> Well, the issue with Windows is they could presumably instead ask the company to provide you with a different blackbox payload than others through your Microsoft account
[07:28:57] <Aurora_v_kosmose> So unless you're blocking updates (or stay away from all Microsoft malware), you'd have problems.
[07:30:00] <gilberth> The danger is, and this Constitution Court said that again and again, that this will also be used for lesser crimes than the all might executes on either fighting terrorism or child abuse. (Not in this case, but for other silly laws).
[07:30:40] <semz> Not even really a danger anymore, this has been documented over and over.
[07:30:45] * hayley uploaded an image: (137KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/KLaIppiExsoFyrSwcqJdlubn/mealy-machine-music.jpeg >
[07:30:45] <Aurora_v_kosmose> The Horsemen of the Infocalypse should be considered to invalidate any law project that uses them even just in passing.
[07:30:46] <hayley> gilberth: new album
[07:30:47] <semz> *cough* covid tracking data
[07:32:03] <gilberth> Aurora_v_kosmose: Local law enforcement cannot ask somebody in a foreign country to collaborate. So once I route my traffic over a secure channel to a trusted country and a trusted third party, I am safe against this kind of attack.
[07:32:38] <Aurora_v_kosmose> gilberth: Are you considering the known collusion between spook agencies of certain NATO countries?
[07:32:51] <gilberth> semz: Indeed. It took a week or so for the police to abuse covid tracking data.
[07:33:30] <Aurora_v_kosmose> Few countries managed to both have a FOSS app and to not use dangerous APIs by untrustworthy corporations in them.
[07:33:44] <gilberth> Aurora_v_kosmose: Could you rephrase for me? I have trouble with "spook" and "collusion".
[07:34:08] <Aurora_v_kosmose> gilberth: I'm referencing 14 Eyes & their shenanigans.
[07:34:29] <hayley> "collusion": working together, "spook": government agent
[07:34:49] <gilberth> ok
[07:36:22] <gilberth> Aurora_v_kosmose: What I referred to (the man-in-the-middle thing) is not about secret services --- they have other more covert means --- but about regular law enforcement aka police.
[07:36:46] <Aurora_v_kosmose> Hm, I see.
[07:37:47] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[07:42:58] *** Quits: algae (~algernon@170.10.246.117) (Quit: WeeChat 3.4)
[07:48:17] <drakonis> http://winestockwebdesign.com/Essays/Lisp_Curse.html is this still relevant?
[07:48:18] -ixelp- The Lisp Curse
[07:50:55] *** Joins: semz (~none@user/semz)
[07:57:34] <Aurora_v_kosmose> I don't think so.
[07:57:57] <Aurora_v_kosmose> Also it forgets the abomination that is Glib's Object-Orientation for C
[07:57:58] <hayley> Never was.
[07:57:58] <hayley> https://applied-langua.ge/posts/lisp-curse-redemption-arc.html
[07:57:59] -ixelp- The Lisp "Curse" Redemption Arc, or How I Learned To Stop Worrying And Love The CONS
[07:59:07] <moon-child> Death to GObject!
[07:59:20] <Aurora_v_kosmose> Right that was the name
[07:59:47] <hayley> TL/DR someone who probably hasn't written any Lisp talks shit about it
[07:59:48] <Aurora_v_kosmose> It has to be one of the most complicated & ugly interfaces for OOP I've had the displeasure of seeing.
[08:00:48] <Aurora_v_kosmose> In the quest for sufficient OOP magic, they forgot that the end-result had to actually be comfortably usable.
[08:00:59] <hayley> I mean, none of the claims made in the article actually happened. It's pure extrapolation, and pretty easy to toss out if you look at how Lisp programmers work.
[08:01:50] <Aurora_v_kosmose> Scheme has standard OOP interfaces, they're split by implementation as they're not defined in the Scheme spec itself.
[08:06:15] <hayley> https://news.ycombinator.com/item?id=29801787 ð¤
[08:06:16] -ixelp- Software and Anarchy [pdf] | Hacker News
[08:13:46] <Aurora_v_kosmose> I've observed that it's relatively common to provide annotated/commented examples in CL than to have extensive standalone documentation.
[08:14:13] <Aurora_v_kosmose> I think the Lisp Curse person just failed to notice the directory called "examples" in the tarballs.
[08:14:38] <hayley> I find it hard to believe he looked at any code ever, honestly.
[08:20:10] <drakonis> hayley: i saw a typo
[08:20:18] <drakonis> "The Computer Revolution Hasn't Heppened Yet"
[08:20:22] <drakonis> *heppened*
[08:21:18] <hayley> My favourite is "yet the cultists of the Lisp Curse believe the situation only see the similarities" cause I can't tell what I was trying to write.
[08:21:42] <hayley> Remove "believe" to get "only see the similarities in the situation"? "believe the situation only has similarities"? idk
[08:21:58] <Aurora_v_kosmose> > They will not be portable across Lisp systems. | ...He really didn't try for long.
[08:22:16] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[08:22:53] <hayley> One decade later, and there's one Coalton, one pattern matcher, and one lazy evaluation library. Oops.
[08:23:37] <Aurora_v_kosmose> He's also off-track about novel operating systems that are actually gaining ground as well.
[08:23:54] <sm2n> There are more test frameworks than programmers though :)
[08:24:22] <sm2n> (not actually true)
[08:24:31] <hayley> How many test frameworks are actually used though?
[08:24:34] <Aurora_v_kosmose> The IDE situation is also no longer true.
[08:24:47] <hayley> My bet is like 5.
[08:24:54] <sm2n> hayley: shhhhhh
[08:24:56] <Aurora_v_kosmose> vlime exists since a while, there's also some other conventional IDE for CL iirc.
[08:25:03] <Aurora_v_kosmose> All of which are free to use.
[08:25:06] <Aurora_v_kosmose> Then there's Lispwork's.
[08:25:30] <Aurora_v_kosmose> Which is also free for personal edition I think?
[08:25:33] <sm2n> And well, I feel like people that complain about this kind of thing are the same type of people who pay for jetbrains and such
[08:25:38] <sm2n> they should just pay for lispworks
[08:25:50] <hayley> Aurora_v_kosmose: It's also not like it was anyone relevant's fault that everything but Unix and Windows died, either.
[08:25:57] <hayley> Victim blaming methinks.
[08:26:05] <Aurora_v_kosmose> hayley: Indeed.
[08:26:28] <hayley> The essay is so full of holes that I wonder how anyone ever thinks of it seriously.
[08:26:34] <Aurora_v_kosmose> ^
[08:26:49] <Aurora_v_kosmose> It might have held-up better when it was written, but it certainly doesn't float too well now.
[08:27:06] <hayley> I have my doubts about when it was written too.
[08:27:07] <sm2n> Most people that talk about LISP^Wlisp don't use it
[08:27:23] <hayley> The introductory quote from Baker dates to 1995, and he was complaining about basically the same line of logic.
[08:27:39] <hayley> "There are far more ugly programs than ugly languages. Using a 'good' language does not guarantee pretty programs. In fact, since a 'good' language has immense power, it is possible to write uglier programs in a 'good' language, than it is to write ugly programs in a 'bad' language. This, of course, is one of the justifications I've seen for forcing people to write in 'bad' languages!!"
[08:28:05] <sm2n> Wow, did he predict golang?
[08:28:14] <hayley> sm2n: According to later comments, Winestock is a Clojure or Racket weenie. Who'd have thunk it.
[08:28:19] <Aurora_v_kosmose> The whole "stuck with Emacs" line also feels funny to me. You mean stuck with an amazingly modifiable, tunable and adjustable editor you can turn into just about anything you feel like?
[08:28:31] <Aurora_v_kosmose> Wow, woe is us.
[08:28:53] <hayley> Wait, my editor doesn't have a web browser (eww doesn't count)?
[08:29:06] <Aurora_v_kosmose> hayley: There's some chinese project that did add one with xorg reparenting.
[08:29:48] <sm2n> webkit xwidgets
[08:29:51] <hayley> But, honestly, I couldn't tell if my response with the Redemption Arc should have been "yeah, and?" or "if you make up things, you can indeed make anything sound bad".
[08:30:06] <hayley> So you get some of both.
[08:30:15] <sm2n> hayley: I just find it funny that I think his website design is kind of awful
[08:30:32] <hayley> "hire me btw, I do web design"
[08:30:37] <sm2n> background gradient has banding for some reason?
[08:30:52] <Aurora_v_kosmose> Eh, it's not awful but I'd have chosen different colors.
[08:30:58] <hayley> "But if everyone can program by themselves, there will be too many libraries!" *chad face* "Yeah, and?"
[08:31:11] <sm2n> more like "Yes."
[08:31:27] <Aurora_v_kosmose> It reflows properly for mobile mode too, so it has that going for itself.
[08:32:07] <sm2n> yeah, it's not awful
[08:32:09] <gilberth> Hugh?! Is g++-11.1 incompatible with g++-4.9.2? In the sense that when I use some C++ lib which came with the distribution and used the older gcc version, I get garbage and segfaults, when using compiled with with g++-11.1, but not when I use g++-4.9.2? Or have I missed something while building gcc-11.1?
[08:32:14] <sm2n> it's not good either
[08:32:36] <hayley> What, you were expecting a stable ABI?
[08:32:41] <sm2n> spacing is off in a bunch of places
[08:32:48] <sm2n> gilberth: c++ doesn't have a stable abi
[08:32:55] <gilberth> hayley: Yes?
[08:33:08] <gilberth> sm2n: I noticed.
[08:33:10] <sm2n> you have to use the same compiler (incl configuration) or it doesn't work
[08:33:17] <sm2n> for everything you link against
[08:33:20] <hayley> Is the https://applied-langua.ge/posts/ design any better? IIRC code overflows on a phone, but that's it.
[08:33:21] -ixelp- Published texts
[08:34:12] <Aurora_v_kosmose> hayley: I like it less, black on white is uncomfortable after a short while.
[08:34:17] <gilberth> sm2n: I am in business now, I just was not aware that this is an issue, still.
[08:34:18] <hayley> Dammit.
[08:34:25] <sm2n> also he uses google fonts and they don't look very good either
[08:34:32] <Aurora_v_kosmose> Which is a problem I wouldn't have if I was using eww instead of FF, though
[08:34:34] <hayley> I think you'll have to fight over moon-child for that one.
[08:34:37] <sm2n> hayley: you can add a media-query for dark mode
[08:34:44] <sm2n> that way both are satisfied
[08:34:56] <gilberth> I can query for dark mode?
[08:35:16] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:35:19] <sm2n> Yes, it was added about a year or so ago
[08:35:33] <Aurora_v_kosmose> I think that might not be available for desktop browsers though
[08:35:38] <sm2n> it is
[08:35:38] <dave0> maw
[08:35:49] <Aurora_v_kosmose> Huh, where? (I actually want to use it)
[08:35:52] <sm2n> @media(prefers-color-scheme: dark) { ... }
[08:36:01] <gilberth> That's great. I like dark mode. In fact black-on-white is unreadable to me. I mean, literally, I just can't read that.
[08:36:10] <sm2n> if you use firefox on linux and you use a dark gtk theme it should work out of the box
[08:36:26] <Aurora_v_kosmose> gilberth: I'm not quite as bad off, I can read it, but it definitely causes eyestrain if I do so for any meaningful amount of time.
[08:36:38] <sm2n> it disables it if you use the advanced tracking prevention stuff though, since it is some extra entropy leaked
[08:37:20] <gilberth> Aurora_v_kosmose: Since I decided to make my health go bust, it's that way. No doctor knows why.
[08:37:30] <Aurora_v_kosmose> Huh
[08:37:51] <Aurora_v_kosmose> Incidentally, PDF-Tools in Emacs has a midnight recolor mode which I find quite convenient for reading.
[08:38:16] <hayley> CNR dark mode here, idk.
[08:38:30] * gilberth has invert whole screen on a hotkey.
[08:38:41] <Aurora_v_kosmose> gilberth: Ah, the nuclear option
[08:38:50] <sm2n> hayley: I think your site is fine
[08:38:56] <sm2n> adding a dark mode would be nice though
[08:38:57] <gilberth> Yes, I like nukes.
[08:39:20] <sm2n> speaking of which, didn't Germany close down a bunch of reactors recently?
[08:39:30] <sm2n> I heard they're going entirely nuclear-free this year
[08:39:31] <hayley> Nice that I have to make night mode a{,:visited,etc} colours myself.
[08:39:31] <gilberth> Dark mode would be better, if it would be high contrast, though. Why go low-contrast with dark mode?
[08:39:38] <sm2n> crazy people
[08:39:47] <sm2n> Yes, it should be high contrast
[08:39:55] <sm2n> All themes should be high contrast
[08:40:01] <sm2n> or you are causing pain
[08:40:08] <drakonis> https://en.wikipedia.org/wiki/Carcinisation
[08:40:14] <drakonis> is there a lisp equivalent of this?
[08:40:28] * hayley uploaded an image: (130KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/vafPLuzpGhaOYyIFZdwgIZaQ/night-mode-test.png >
[08:40:31] <sm2n> "crab"
[08:40:32] <drakonis> where all language evolution eventually converges to lisp?
[08:40:36] <gilberth> sm2n: Yes, by end of 2022 all the remaining nuclear power plants will be shutdown. We shutdown a few by 2021-12-31.
[08:40:53] <hayley> I'd make a reference to xenofeminism, but the official page for the manifesto gives me migraines.
[08:41:08] <hayley> Still, that colour theme?
[08:41:25] <sm2n> hayley: looks good, reminds me of modus dark
[08:41:44] <sm2n> drakonis: it's called greenspun's (tenth) law
[08:42:19] <gilberth> Thanks to the anti-nuclear movement in which the so called Green Party has its roots. They rather burn natural gas from Russia. Perhaps that's greener. Anyhow. /me continues hacking.
[08:44:57] <hayley> Sadly making night mode for the home page makes my shitty masking job more obvious. And it doesn't make sense for the image to be lit up so much. /me wonders about those CSS transforms.
[08:45:58] <drakonis> hayley: where does it say/infer that winestock is a clojure/racket weenie?
[08:46:11] <hayley> Somewhere in a Hacker News comment...
[08:46:45] <hayley> https://news.ycombinator.com/item?id=14481506
[08:46:46] -ixelp- I am the author of this essay and this is the umpteenth time that it has appeare... | Hacker News
[08:47:08] <Aurora_v_kosmose> hayley: Other than the black & white stuff, it has the no-nonsense design that I think works generally well.
[08:47:35] <Aurora_v_kosmose> hayley: owo is that an org-project export?
[08:47:52] <hayley> Yes.
[08:48:00] <hayley> All org-mode, except for the homepage.
[08:48:33] <Aurora_v_kosmose> nice
[08:48:50] <sm2n> "From what I can tell, the main differences are that it's on the JVM (obviously) and that it uses loops rather than recursion" spot the person that's never LOOPed
[08:49:11] <sm2n> Of course, I click through the profile link and what do I see?
[08:49:16] <sm2n> " Rust developer"
[08:50:01] <hayley> It'd be cute to have a starry background for the home page on night mode, but idk how to make it.
[08:50:17] <sm2n> hayley: you can include an image conditionally with css
[08:50:31] <hayley> Right.
[08:51:00] * hayley uploaded an image: (145KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/GQGNzAvsxgMEJhOkebeHjgXT/night-home-page.png >
[08:51:01] <hayley> Or I just settle with this.
[08:51:29] <sm2n> that looks decent
[08:51:38] <Aurora_v_kosmose> Loops instead of recursion is a strange statement, since recursion-first with spec-guaranteed TCO is exclusively a Scheme thing.
[08:51:40] <sm2n> other than the matrix link at the top
[08:51:48] <hayley> lol
[08:51:56] <moon-child> somebody just flooded another channel with what looks like an ieee latex template
[08:52:09] <moon-child> my main question is: _why_
[08:52:13] <hayley> Beats epony.
[08:52:20] <moon-child> lol true
[08:52:26] <Aurora_v_kosmose> hayley: Get one of those glitchy backgrounds from one of those Lain fandom sites
[08:52:48] <Aurora_v_kosmose> :p
[08:53:12] <sm2n> moon-child: that must have taken some effort
[08:53:50] <hayley> Aurora_v_kosmose: No, that's my VPS provider's job, not mine.
[08:53:50] <sm2n> Actually no, I was mixing up / and \
[08:54:07] <Aurora_v_kosmose> hayley: lol
[08:54:23] <moon-child> sm2n: it's really very easy
[08:54:26] <hayley> Aurora_v_kosmose: https://cyberia.club/
[08:54:27] -ixelp- Cyberia Computer Club
[08:54:29] <hayley> Not kidding.
[08:54:43] <moon-child> 1) find ieee latex template.  2) copy ieee latex template.  3) paste ieee latex template
[08:54:49] <Aurora_v_kosmose> hayley: They inject stuff in responses?
[08:55:19] <hayley> No, but that's the website for the provier.
[08:55:28] <sm2n> moon-child: I thought at first that the \ would conflict with irc commands
[08:55:32] <sm2n> but no, that would be /
[08:55:52] <Aurora_v_kosmose> hayley: oh nice.
[08:56:06] <moon-child> xsel -o|sed -e 's/^\//\/\//'|xsel -ib
[08:56:08] <moon-child> easy enough
[08:56:14] <hayley> It'd be cuter to have the stars procedurally generated somehow, IMO. But I don't know how to do that.
[08:56:48] <Aurora_v_kosmose> hayley: With canvas it'd be relatively simple, but kind of graphics intensive.
[08:56:48] <hayley> Also, the way I made the sky and ground effect work makes it a total pain to work with.
[08:56:54] <Aurora_v_kosmose> For a webpage.
[08:57:23] <Aurora_v_kosmose> And obviously it'd depend on the JavaScript heresy.
[08:58:02] <sm2n> moon-child: I feel you are overestimating the capabilities of someone who would copypaste a latex template into an irc channel
[08:58:39] <sm2n> (on that note, how would you design a clipboard in your ideal os?)
[08:58:58] <moon-child> lol
[08:59:25] <moon-child> 'how would you design a clipboard'  I haven't given it a tonne of thought.  I see the clipboard generally as a form of temporal state, and would like to generalize that
[08:59:27] <moon-child> more than that idk
[08:59:29] <Aurora_v_kosmose> Qubes' is a good start.
[08:59:34] <hayley> Aurora_v_kosmose: Try <https://applied-langua.ge/posts/the-poverty-of-post-open-source.html> again? Though now it requires your browser to signal it wants night mode.
[08:59:35] -ixelp- The poverty of "post-open source" - what to do about the Left's foray into intellectual property
[08:59:44] <hayley> Mine doesn't. IIRC I use a light theme for Gtk+ though.
[08:59:56] <moon-child> (as opposed to e.g. cwd, which is spatial state)
[08:59:56] <Aurora_v_kosmose> It has additional keybinds to transfer clipboard content between Qubes.
[09:00:03] <Aurora_v_kosmose> So I can't just copy-paste accidentally random stuff in here.
[09:00:31] <Aurora_v_kosmose> I think it would be a good start for a design.
[09:01:16] <sm2n> it sounds like a hassle, though I can see why they did it that way
[09:01:59] <sm2n> I feel like clipboards are a hard topic
[09:02:25] <sm2n> I remember reading about how windows does it, with letting you copy arbitrary msoffice objects and stuff
[09:02:32] <sm2n> it was very complicated
[09:03:08] <Aurora_v_kosmose> Transfer between programs (or security domains or what have you) should require explicit instruction by the user.
[09:03:21] <sm2n> I suppose it might be easier if you have a single address space (for easy identity) and also capabilities (to manage security domains)
[09:03:28] <sm2n> Aurora_v_kosmose: Yeah, I agree
[09:03:35] <moon-child> Aurora_v_kosmose: I see no reason why you could not set up mutually trusting domains, such that anything placed in a clipboard by program X may be implicitly read by program Y
[09:03:46] <moon-child> with anything not on the whitelist requiring an explicit grant
[09:03:49] <Aurora_v_kosmose> moon-child: Indeed, that would be acceptable.
[09:04:01] <Aurora_v_kosmose> hayley: Seems not to work alas.
[09:04:09] <sm2n> Aurora_v_kosmose: force refresh
[09:04:12] <sm2n> it works for me
[09:04:13] <Aurora_v_kosmose> Probably something on my end, like accessibility being disabled.
[09:04:31] <Aurora_v_kosmose> I don't want to go through the slow reload of my hundreds of tabs just yet so I'll hold off on that for now.
[09:04:43] <sm2n> no, you just have to do the one tab
[09:04:51] <sm2n> You might be using the old css, is the point
[09:04:59] <sm2n> it would be cached by default
[09:05:43] <Aurora_v_kosmose> sm2n: Hm, seems not. I think it's likely the accessibility. Which requires a full Firefox restart.
[09:05:54] <sm2n> accessibility?
[09:07:02] <Aurora_v_kosmose> sm2n: Seems the option was deprecated between last FF version and now.
[09:07:04] <Aurora_v_kosmose> I have no idea.
[09:07:11] <Aurora_v_kosmose> (It's gone from the menu)
[09:07:35] <sm2n> do you use "privacy.resistFingeprinting" by any chance?
[09:07:55] <sm2n> (It disables dark mode, as I said earlier)
[09:08:56] <Aurora_v_kosmose> sm2n: Not directly, but the GUI option for the same yes.
[09:09:42] <sm2n> There isn't a GUI option for it
[09:09:57] <Aurora_v_kosmose> Tracking protection stuff?
[09:10:15] <sm2n> That doesn't go all the way
[09:11:13] <sm2n> Anyway, if you open inspect element, there should be a button in the middle column to turn on dark mode temporarily
[09:11:18] <sm2n> see if that works
[09:13:06] <Aurora_v_kosmose> Yeah, the toggle was necessary.
[09:13:27] <Aurora_v_kosmose> Even from a barebones profile instance. *shrugs*
[09:14:11] <sm2n> I guess your firefox isn't picking up on your system settings
[09:14:23] <Aurora_v_kosmose> Ah, it's system settings, not firefox theme?
[09:14:26] <sm2n> there's an about:config option to force it, but I don't remember what it's called
[09:14:28] <sm2n> yes
[09:14:32] <sm2n> GTK theme, if you are on linux
[09:14:35] <Aurora_v_kosmose> ...Well that explains that.
[09:14:46] <Aurora_v_kosmose> I was trying with the browser's theme itself.
[09:14:50] <sm2n> Ah
[09:15:37] <Aurora_v_kosmose> Yeah, it's nicer this way.
[09:15:39] <gilberth> Oh dear, I ask for POSIX syntax with re2 and an re "a)b" yields an error. That's a bug.
[09:17:28] <Aurora_v_kosmose> > To put it politely, your system is completely broken if publishing source code is a problem.  | <3
[09:17:53] <sm2n> Where is this from?
[09:17:58] <sm2n> oh
[09:18:03] <Aurora_v_kosmose> hayley's article
[09:18:10] <sm2n> yeah, I realized
[09:18:33] <sm2n> Quite frankly, doing things other than publishing source code shouldn't be an option to begin with
[09:18:56] <sm2n> Binary artifacts are rightfully just cache
[09:19:09] <Aurora_v_kosmose> It's basically the same as selling a home, sealing the walls and threatening with lawsuits if you get them fixed or looked at by anyone else. 
[09:19:13] <Aurora_v_kosmose> It's completely nonsensical.
[09:19:36] <hayley> I know double negatives are annoying, but it's "the poverty of post-open source" for a reason.
[09:21:29] <Aurora_v_kosmose> Regarding the neckbeard accusation, it's always been even more uncomfortable to get something that verges on body discrimination from a crowd that really ought to know better.
[09:26:58] <gilberth> And for [0-9]+x[0-9]+ it's at 295MB/s, while glibc is at ~1GB/s. So much for "fast". However when I ask for some submatches, glibc becomes slower.
[09:27:09] <gilberth> But I am after bugs, not speed.
[09:28:18] <gilberth> BTW this libtre is at 86MB/s only.
[09:31:13] <gilberth> Any other C library which I could test?
[09:32:36] <hayley> glibc? I thought it blew when it came to (aa|a)*.
[09:33:09] <hayley> Still, I'm in the process of updating that article. e.g. how I now have to mention how stupid an idea not using a license is.
[09:34:10] <hayley> It's not FOSS by any means, the author implicitly retains all copyright, for better or worse. And just making your users "pirate" your software because of this is dumb.
[09:34:12] <gilberth> hayley: Does it? I don't care at this point. Correctness is more important. And glibc's regex(3) has bugs. Plenty of them.
[09:34:33] <hayley> gilberth: Yeah, remember that line graph? It was worse than Rust.
[09:35:34] <hayley> Also, is the subtitle (stuff after the hyphen) bait-y enough?
[09:36:41] <sm2n> How bait-y do you want it to be?
[09:37:19] <hayley> A bit, but not too much.
[09:37:35] <dave0> so bait-y the fish jump into your boat by themselves?
[09:38:10] <sm2n> hayley: idk, personally it feels kind of long-winded
[09:38:22] <sm2n> the stuff prior to the - is more bait-y
[09:38:26] <gilberth> hayley: [0-9]+x[0-9]+ does not suffer from backtracking.
[09:39:14] <hayley> gilberth: I guess so.
[09:39:18] <hayley> sm2n: Well, news to me.
[09:39:38] <hayley> As opposed to "On the Poverty of Student Life: A Consideration of Its Economic, Political, Sexual, Psychological and Notably Intellectual Aspects and of a Few Ways to Cure it" it seems pretty short.
[09:39:51] <sm2n> Yes, that is even more long winded
[09:40:51] <moon-child> gilberth: https://github.com/katef/libfsm
[09:40:51] -ixelp- GitHub - katef/libfsm: DFA regular expression library & friends
[09:41:18] <moon-child> iirc that includes both posix and pc res
[09:41:21] <hayley> But "The poverty of post-open source" sorta suggests to me that I'll need to know what "post-open source" is. Probably helps for context, but I don't think it's that necessary.
[09:42:04] <hayley> ...though I doubt poor naming is the largest of my problems with getting people to read it.
[09:43:20] <hayley> Being the third position is never fun.
[09:44:26] <sm2n> Who is your audience anyway?
[09:45:06] <hayley> People who'd have otherwise fallen for the original "post-open source" article.
[09:45:15] <gilberth> moon-child: Ah. I'll see if it as a not too painful API. Thanks.
[09:46:41] <hayley> The ideal reader is a leftist mildly annoyed with open source development, perhaps. But, like the Lisp Curse Redemption Arc, I doubt most would get it, if they are stuck with conventional "wisdom" on some things.
[09:50:13] <hayley> I know cause my ex would fall for that, and we'd never agree on much.
[09:51:19] <sm2n> You'd have to have a pretty poor grasp on history to fall for that
[09:51:50] <sm2n> I mean, it literally says "open source won, and nothing got better."
[09:52:46] <hayley> I mean, the question looks like this: "Would you believe that some organisation, e.g. a 'community' or a 'cooperative' is going to work in your best interest?" Yes: "Congrats, you've recreated the logic of the thing you want to oppose." No: "You are less inconsistent than the guy next to you."
[09:54:07] <sm2n> sounds about right
[09:54:30] <hayley> Because, well, having "community" in the soppy Internet sense means you trust people you probably shouldn't. Hence, you can excuse not having source materials for things, if you think they're going to behave.
[09:56:11] <hayley> (Well, not all of them, but many projects I've opposed have their cultish followers, and mostly believe that things could never go wrong.)
[09:57:39] <sm2n> Yeah, any project of broad relevance has cultish followers
[09:57:57] <sm2n> heck, if any of your projects ever takes off, you will have cultish followers
[09:58:20] <hayley> Sadly, yes.
[09:59:44] <hayley> But IIRC the marketing for Parastat went like this: "There are mean people on the Internet. So we want better moderation tools." After publishing A Parastatal Problem, I asked something like "So, what of the moderation then? You can't really just give moderators better tools - they need more mental bandwidth than they have." "People are just gonna post cat pictures with this software, I don't know why moderation is such a big deal to you."
[10:00:09] <hayley> So everyone that uses this software is magically going to behave. Yeah, suuuuure.
[10:00:33] <sm2n> that sounds like a bait and switch
[10:00:46] <sm2n> in bad faith, even
[10:02:12] <hayley> Right.
[10:02:21] <sm2n> I also question how possible it is to improve moderation tools with activitypub specifically without protocol changes
[10:02:49] <hayley> They claimed they were going to make a new protocol, but still support AP.
[10:02:55] <sm2n> lol
[10:03:02] <hayley> So, weakest links and all.
[10:05:43] <hayley> But the judgement in either case is pretty similar, something like "my moderator/software maintainer won't fuck up". And that is not something I would bet on.
[10:06:28] <hayley> Oh, and this would be written in C for efficiency (as compared to Mastodon, which is big, sure, but they used unreproducible statistics on just how big). You know what, I'll just link <https://applied-langua.ge/posts/parastatal-problem.html>
[10:06:29] -ixelp- A Parastatal Problem
[10:07:33] <hayley> And, again, when I brought that up? "The person writing the server has 15(ish? I forgot) years of experience in C, they won't write any bugs." Right, and we have how many pointer-bug-related CVEs per year, even for big and professional projects?"
[10:08:10] <hayley> Point is, you put trust where you shouldn't, if someone constructs in- and out-groups.
[10:08:40] <sm2n> yeah
[10:09:01] <sm2n> also, doesn't/didn't a much more efficient AP server already exist?
[10:09:05] <hayley> Hence to approach the problem, I have to be blatantly anti-organisation, and that's a hard thing to sell.
[10:09:12] <sm2n> pleroma iirc
[10:09:24] <hayley> I think Pleroma is usually the other option. But it's ironically "the Nazi server software" these days.
[10:10:02] <hayley> Or, at least it was on the side of the Fediverse I "grew up in". On the side I'm on now, it's just a damn AP server.
[10:10:02] <Aurora_v_kosmose> lol
[10:10:13] <sm2n> lol
[10:10:40] <sm2n> thankfully I never got into "microblogging"
[10:10:43] <hayley> e.g. https://cybre.space/@haskal/106100707957820072
[10:10:43] -ixelp- witch hat hacker ð spooky ver: "@eris@disqordia.space lmao got one" - Cybrespace
[10:10:58] <sm2n> I think it's a pretty awful medium all around
[10:11:30] <hayley> I use Mastodon for the same reason some use Facebook. I don't like it, but some of my friends still use it.
[10:11:32] <hayley> :)
[10:11:55] <sm2n> hah
[10:14:57] <hayley> I think I've mentioned that servers in the Fediverse approximate "communities" in the same stupid way enough times, so I'll spare #lispcafe another time.
[10:15:39] <sm2n> yeah, it is beating a dead horse at this point
[10:15:52] <Aurora_v_kosmose> Tasty tenderized horse. :p
[10:16:13] <sm2n> though, I did have a thought recently
[10:16:25] <hayley> I remember showing APP to beach, and he said something like "Only 2GB of memory? Writing about it probably cost more than buying more memory."
[10:16:30] <sm2n> in networking terms, federation doesn't respect the end-to-end principle
[10:16:48] <sm2n> hahahahaha
[10:17:25] <sm2n> to be fair, his economics are wrong because most people run their stuff on a $5 VPS
[10:17:29] <hayley> And a VPS on https://lowendbox.com/ with 2GB RAM isn't that expensive, either.
[10:17:29] -ixelp- LowEndBox - Cheap VPS, Dedicated Servers and Hosting Deals
[10:18:19] <hayley> Apparently I wrote US$20/year in a footnote. Probably a bit more if you go with a more established VPS provider, but still not so far off.
[10:18:33] <sm2n> I've been told that if you use full-text search, it can blow up to >10GB
[10:18:40] <Aurora_v_kosmose> 5$/y ?
[10:18:45] <sm2n> because elasticsearch
[10:18:47] <Aurora_v_kosmose> Erh 20
[10:18:49] <Aurora_v_kosmose> I'm interested.
[10:19:44] <hayley> Damn, AU$7.36/month on OVH these days.
[10:20:04] <Aurora_v_kosmose> :/
[10:20:21] <hayley> About US$60/year then. brb, dinner
[10:21:04] <sm2n> thoughts on <https://github.com/fiatjaf/nostr>?
[10:21:04] -ixelp- GitHub - fiatjaf/nostr: a truly censorship-resistant alternative to Twitter that has a chance of working
[10:21:57] <sm2n> I found out about this recently, and I like the design of it a lot more over say activitypub
[10:22:22] <sm2n> I was designing something similar a while back
[10:23:28] <moon-child> question: why do we need more than irc|talk and usenet|phpbb|email?
[10:23:51] <moon-child> any social media system which attempts greater scale than those are capable of is doomed to that very scale
[10:24:10] <semz> "If spam is a concern for a relay, it can require payment for publication or some other form of authentication, such as an email address or phone, and associate these internally with a pubkey that then gets to publish to that relay â or other anti-spam techniques, like hashcash or captchas."
[10:24:29] <semz> So it solves the spam problem by not solving it at all?
[10:25:13] <Aurora_v_kosmose> I agree that the old options are fairly good. Main flaw to them I can find is more the lack of an ecosystem on darknets.
[10:25:44] <moon-child> you can do irc, phpbb, and email over tor
[10:25:54] <moon-child> presumably also usenet
[10:26:05] <moon-child> and I think freenet has some kind of forum system
[10:26:16] <Aurora_v_kosmose> Freenet'
[10:26:23] <Aurora_v_kosmose> s opennet mode is fundamentally broken.
[10:26:29] <moon-child> (though my impression of freenet is it has worse cp problems than tor)
[10:26:32] <moon-child> Aurora_v_kosmose: how's that?
[10:26:49] <sm2n> moon-child: they don't work well over tor
[10:26:56] <Aurora_v_kosmose> moon-child: Anyone with the link for a given file with ability to observe the network can trivially observe & deanonymize over it.
[10:27:16] <sm2n> At any rate, I am not interested in microblogging, I just want email but better, mostly
[10:27:17] <Aurora_v_kosmose> That has been used in a legal case in Canada, among others.
[10:27:35] <moon-child> Aurora_v_kosmose: interesting, link?
[10:27:53] <moon-child> sm2n: aside from better ui for encryption (incl. for metadata), what more do you want from email?
[10:28:07] <Aurora_v_kosmose> https://en.wikipedia.org/wiki/Freenet#Vulnerabilities There's the reference with the fancy legal name there
[10:28:14] <sm2n> On the other hand, people are going to want to interact in certain ways anyway, so it is desirable to make it better from a privacy etc perspective
[10:28:14] <Aurora_v_kosmose> moon-child: ^
[10:28:38] <sm2n> moon-child: I would like to not have to rely on a server, and dns
[10:29:00] <Aurora_v_kosmose> I relatively recently re-read their docs and they didn't add anything to fix that issue.
[10:29:04] <sm2n> Additionally, some of the things kinda suck, like if you do email locally your hostname is leaked by default in the message-id field
[10:29:23] <sm2n> probably should ping contrapunctus, they're the resident freenet user iirc
[10:29:36] <Aurora_v_kosmose> I2P has an email alternative that could work, to a point anyway.
[10:29:52] <moon-child> sm2n: clearly, if you want other people to be able to talk to you, you need to have some way for them to reach you.  So I don't really see the problem
[10:30:01] <hayley> "It insists on having a chain of updates from a single user" Probably unnecessary, but in an actual conversation setting, you need to chain to assert causality in a distributed system.
[10:30:33] <hayley> If object A references object B, then B happens-before A. This is what makes Netfarm not useless.
[10:30:47] <sm2n> moon-child: I find dns as a final authority on who I am unsatisfactory
[10:31:07] <Aurora_v_kosmose> https://github.com/i2p/i2p.i2p-bote
[10:31:08] -ixelp- GitHub - i2p/i2p.i2p-bote: I2P-Bote is a serverless, encrypted e-mail application.
[10:31:15] <hayley> sm2n: Did I mention that someone really said blockchains are centralised because they replicate one single state?
[10:31:29] <moon-child> sm2n: dns doesn't say who you are; dns says how to reach you.  You don't have much choie about that, on the internet (though see opennic)
[10:31:29] <Aurora_v_kosmose> It's a DHT/public-key based setup.
[10:31:34] <hayley> Usually I would fall out of my chair laughing, but my backside learnt its lesson after some cop said "there isn't a racism problem in Australia" on TV.
[10:31:40] <sm2n> hayley: who?
[10:31:48] <hayley> One second...
[10:32:01] <Aurora_v_kosmose> poor hayley, her back was never the same...
[10:32:08] <sm2n> moon-child: Well, sure, if we're assuming gpg
[10:32:12] <hayley> Back_side_, I fell on it.
[10:32:22] <Aurora_v_kosmose> Ah~
[10:32:23] <hayley> https://twitter.com/mcclure111/status/1478771329402822656 Nobody, but it cracks me up that someone thinks this.
[10:32:24] <sm2n> The ux around that is awful though
[10:32:32] <hayley> "A blockchain is a single centralized data store which happens to be owned by multiple people. Might as well call S3 decentralized, Amazon has multiple datacenters" Fucking wot
[10:32:36] <moon-child> sm2n: I don't know as we need to assume that specifically.  But some mechanism for signing and encryption
[10:32:45] <moon-child> I said: 'aside from better ui for encryption (incl. for metadata), what more do you want from email?'
[10:33:10] <sm2n> Yes, but there is no in-band way to update how to reach you
[10:33:16] <sm2n> I see that as a flaw in the system
[10:33:30] <hayley> "which happens to be owned by multiple people" is the under-relation of the year, and they only needed 6 days to come up with it.
[10:33:37] <Aurora_v_kosmose> https://nitter.42l.fr/mcclure111/status/1478771729929547778#m well-said
[10:33:38] -ixelp- mcc (@mcclure111): "Actually most blockchains do have the shared ownership concept you mention, it's just that rather th [...]
[10:33:45] <sm2n> If I want to talk to moon-child, I should be able to, and it shouldn't matter what happens in the middle
[10:33:53] <sm2n> and that should persist over time
[10:34:11] <hayley> Well, I guess they recovered after that first comment. But the first one is fucking funny.
[10:34:13] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:34:41] <Aurora_v_kosmose> On Gnunet or I2P, security concerns like encryption wouldn't be relevant at the email-level insofar as every client doubles as a public-key-addressed server.
[10:34:45] <hayley> "Centralisation is when you copy, and the more copying the more centralised"?
[10:34:56] <moon-child> sm2n: ok.  So what's your proposed solution?  Mutable DHT?
[10:35:10] <Aurora_v_kosmose> So I think the issue isn't so much that email doesn't support encryption, but that the entire network stack underneath is broken & insecure.
[10:35:31] <sm2n> moon-child: essentially, but with a web of trust
[10:35:42] <moon-child> Aurora_v_kosmose: network stack is transport-layer.  Pgp encrypts at rest
[10:35:52] <moon-child> sm2n: web of trust does not work, can not work, and will not work
[10:36:12] <sm2n> moon-child: and with store/forward style relays
[10:36:19] <sm2n> moon-child: why do you say that?
[10:36:22] * hayley wants to complain
[10:36:35] <Aurora_v_kosmose> moon-child: If you care for at-rest encryption I suppose it can make some sense, though in networks like those I mention it only really ever is at-rest at the endpoints.
[10:37:04] <Aurora_v_kosmose> Intermediate hosts see nothing but encrypted messages that could be any other sort of traffic.
[10:37:28] <moon-child> scale.  Scale doesn't work.  Wot tries to impose order at scale but you cannot
[10:37:50] <Aurora_v_kosmose> WoT is also too complex for normies to properly use.
[10:37:54] <hayley> I would simply embrace the chaos.
[10:37:59] <Aurora_v_kosmose> Hell, most devs can't into it properly.
[10:38:22] <moon-child> say I 90% trust you, you 90% trust your friend, your friend 90% trusts his friend.  Only need 7 friends before the trust level dips below 50%.  For instance
[10:38:36] <sm2n> I'm not talking about that kind of WoT
[10:38:37] <Aurora_v_kosmose> Previous experiments suggest you can't trust people to revoke signatures when someone goes untrustworthy.
[10:39:00] <sm2n> and yeah Aurora_v_kosmose, the UX has to be rethought from scratch
[10:39:10] <sm2n> we need something like grammar of graphics, but for trust chaining
[10:39:27] <moon-child> sm2n: what, then?
[10:39:40] <hayley> My own guess for Netfarm (wherein users assert/reject claims on reality) is that you hit an inflection point around 2-deep anyway.
[10:40:13] <semz> hayley, seems to check out with my experience
[10:40:45] <hayley> But it's a total guess, idk. Never actually used such a system. Never really finished writing one either.
[10:41:07] <semz> Direct links obviously make sense because you're the one who made them, indirection with one guy inbetween still tells you something, anything beyond that is basically unusable for everything from what I've seen
[10:41:14] <semz> and this kills any attempt at automation
[10:41:31] <hayley> (Some people thought I was still experimenting, and I wouldn't use it in practise, because I wrote that I didn't like some parts of Netfarm in The Book. But I'd still use it.)
[10:42:08] <semz> but seeing how, e.g. PKI is basically a degenerate web of trust, I don't see why one couldn't base the system on it anyway and just have most users run it in this degenerate form
[10:42:22] <sm2n> moon-child: You don't need a gpg-style web of trust. The DHT already tells you where you can find people (availability), but there may be multiple routes. In the presence of an active attacker, you need an out of band key to distinguish between them
[10:42:48] <sm2n> I'm just talking about something like how e2ee messaging applications let you verify a key, probably shouldn't call it WoT
[10:43:01] <sm2n> and I agree with what semz regarding degenerate forms
[10:43:21] <hayley> Mfers be like "Check that this is on the other device: ð ð± ð ð­ ð¥"
[10:43:31] <sm2n> I expect most people would use TOFU in practice, and that is fine
[10:43:47] <Aurora_v_kosmose> I don't think any number of friends trusting someone else should lead to transitive trust properties being applied onto that someone as well. At best/worst, they should be trusted for their own content but no further.
[10:44:08] <sm2n> It's impossible to draw such a line for transitive trust
[10:44:29] <Aurora_v_kosmose> Basically, the existence of conmen makes transitive trust a very dubious proposition.
[10:44:37] <moon-child> sm2n: what do you mean by a 'route'?
[10:44:51] <hayley> I had used collaborative filtering to try to compute how much you could afford to trust someone. Or really, just how much you actually agree with them in practise.
[10:45:29] <gilberth> Oh, I found REG_ENOSYS in some version of the POSIX, but not in the 2017 version. As I found it, 2017 couldn't have existed yet. *sigh* I need a break.
[10:45:41] <hayley> https://youtu.be/iXov5ukVVWI?t=1787 Look, I'm on TV
[10:45:42] -ixelp- Techniques and Utilities for Farming Objects On The Net - Online Lisp Meeting #7, 26.08.2020 - YouTube
[10:46:21] <sm2n> I should explain further â In practice, computers are split between low-availability/low-connectivity machines, endpoints, that people use to actually do things, and high-availability/high-connectivity machines, servers, that people can't directly interact with
[10:46:42] <Aurora_v_kosmose> Has anything been written on trust transitivity?
[10:46:52] <sm2n> And this makes sense from a physical perspective too â it's more energy efficient, for one
[10:47:22] <sm2n> This leads to compromises like federation, which is a problem, because it gives too much power to the server operator
[10:47:34] <sm2n> in other words, it fails the end-to-end principle
[10:47:51] <moon-child>  oh, so by 'route', you just mean an endpoint.  Not a complete sequence of hops 
[10:47:53] <moon-child> ok
[10:47:58] <Aurora_v_kosmose> sm2n: I think that depends on the scale of the federation as well.
[10:48:05] <sm2n> Also, note that the majority of people will never run their own servers
[10:48:29] <Aurora_v_kosmose> If becoming a federating node was as simple as enabling an option & you autosynchronize with some DHT, that'd work much better.
[10:48:52] <sm2n> Aurora_v_kosmose: yeah, sure, but availability is still an issue
[10:49:12] <sm2n> moon-child: The point is, the mapping from endpoints to servers should not be N:1
[10:49:25] <Aurora_v_kosmose> sm2n: True, but given a store & forward model, availability ends-up at worst similar to torrents. Which isn't catastrophic.
[10:49:26] <sm2n> and servers should not own my address
[10:49:36] <moon-child> sure.  I thought you wanted p2p
[10:49:40] <hayley> I just went with the guarantees a Bitcoin network offers, i.e. not many.
[10:50:15] <sm2n> moon-child: Yeah, I want a p2p network that is as efficient and reliable as a federated one
[10:50:47] <moon-child> so there _are_ no servers with which to associate a client
[10:50:47] <sm2n> p2p has better resilience under catastrophic conditions, and federation does better under normal use
[10:50:52] <Aurora_v_kosmose> A server should simply be a hop/node that knows a given public-key & will forward it messages it may have stored when it is pinged by it.
[10:51:07] <moon-child> only a network through which clients discover each other's identities
[10:51:41] <Aurora_v_kosmose> But then I'm basically just describing how traffic works in I2P/Gnunet already anyway
[10:52:08] <sm2n> moon-child: The idea is, I could be reached directly if possible, or I could designate node(s) that will store my messages and forward them to me, and that information is stored in a dht
[10:52:09] <Aurora_v_kosmose> Lack of end-to-end oriented application protocols is an issue.
[10:52:27] <sm2n> And the network decides what is the most efficient
[10:52:30] <Aurora_v_kosmose> sm2n: That receiver model reminds me of Loopix.
[10:52:48] <moon-child> sm2n: I see
[10:52:50] <sm2n> Aurora_v_kosmose: I have never heard of loopix
[10:52:53] <sm2n> let me take a look
[10:53:00] <moon-child> that sounds like federation with extra steps
[10:53:14] <sm2n> moon-child: sure, but without the downsides
[10:53:24] <sm2n> for one, your identity is not tied to a server
[10:53:27] <Aurora_v_kosmose> sm2n: https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/piotrowska https://www.youtube.com/watch?v=R-yEqLX_UvI
[10:53:27] -ixelp- The Loopix Anonymity System | USENIX
[10:53:36] <sm2n> there is no such thing as defederation in this system
[10:54:12] <sm2n> And you can easily switch which servers you would like to hold your stuff
[10:54:43] <sm2n> it's not even have to be visible to the person sending you messages in the common case
[10:55:23] <sm2n> s/have to//
[10:56:35] <sm2n> additionally, this gives you an actually secure global identity network
[10:56:49] <sm2n> so in theory you can finally kill passwords
[10:57:21] <Aurora_v_kosmose> I'm all for the p2p protocols-not-platforms idea.
[10:59:26] <sm2n> hayley: "...chain of updates..." 
[10:59:29] <sm2n> Yeah, that's true
[10:59:50] <sm2n> I think the focus on microblogging is misguided and harmful
[11:02:33] <hayley> Meta-media time
[11:04:03] <sm2n> Yeah, distributed objects is something I want to investigate more in the future. Currently, I don't think I really understand the design space there
[11:04:14] <moon-child> blogging (whether of the micro variety or otherwise) and more generally extreme asymmetry encourages parasocial relationships
[11:04:40] <sm2n> moon-child: I agree with this
[11:04:49] <moon-child> academia avoids this by de-emphasizing the author of a work.  But that's not something you want in an environment where you want trust
[11:05:05] <sm2n> moon-child: I think you are misunderstanding me
[11:05:27] <sm2n> I want an identity network as the core primitive for authenticated communications
[11:05:28] <Aurora_v_kosmose> I'm not sure that parasocial relationships are entirely negative. Not any more than mundane social relationships.
[11:05:43] <sm2n> I have not said anything about how you communicate with such a network
[11:05:57] <sm2n> (at least, I don't think I have)
[11:05:58] <moon-child> sm2n: yes, I understand.  I was responding to 'focus on microblogging is misguided and harmful'
[11:06:02] <hayley> I find it hard to believe, but my main problems are with communities, which don't exactly require cult leaders.
[11:06:09] <sm2n> oh, yeah
[11:06:25] <Aurora_v_kosmose> Echo chambers are far more toxic and far more typical social interaction than parasocial interactions.
[11:07:15] <sm2n> Aurora_v_kosmose: the issue with parasocial interactions is that (by definition) they are not interactions someone else has with you
[11:07:23] <sm2n> so there is some observability bias
[11:08:30] <hayley> My favourite thing about distributed objects is if they're objects or not.
[11:08:53] <hayley> Spritely: "THEY'RE NOT OBJECTS THEYRE OBJECT CAPABILITIES NOOOOOOO" Croquet: *same thing* Netfarm "Yeah they're objects, suck it"
[11:09:14] <moon-child> Aurora_v_kosmose: parasocial relationships are, in the limit, exploitative.  And you can not avoid the limit at scale
[11:10:29] <Aurora_v_kosmose> I don't think restraining communication to a local cell is at all desirable.
[11:10:39] <Aurora_v_kosmose> Especially for those stuck in backwater wastelands like myself.
[11:10:58] <Aurora_v_kosmose> The religious mind infection is still popular here.
[11:11:56] <Aurora_v_kosmose> And such restriction is basically the only way to avoid the limit, by avoiding scale entirely.
[11:12:11] <sm2n> hayley: You know what would be useful? A rosetta stone for terminology used for this stuff
[11:12:29] <sm2n> It is very confusing trying to decode what people are talking about sometimes
[11:12:36] <hayley> Also, most distributed object systems are federated by normie terms. So I had to invent "replicated object system" to describe my stuff.
[11:12:46] <sm2n> oh, really?
[11:13:19] <hayley> "federated" in the sense that the only writable version resides on one computer.
[11:13:52] <sm2n> moon-child: I don't think it makes sense to bake how people should communicate into a communications primitive
[11:14:05] <ck_> good morning
[11:14:06] <moon-child> you do not need to restrict communication to build systems which encourage some patterns of communication.  An analogy: many schools will segragate their dormitories by sex.  I think this is highly problematic because it causes people to view members of the opposite sex as separate from those of their own.  I do not think it makes sense to _force_ people to socialize with members of the opposite
[11:14:08] <moon-child> sex, but they should also not be forcibly separated
[11:14:32] <sm2n> Though, you could argue that by doing that you are promoting unchecked communications, and there is some truth to that
[11:14:35] <moon-child> e.g.: discord, by virtue of having two-level organizational structure, permits communities of greater scale than irc
[11:14:47] <sm2n> It's an old thing "Do artifacts have politics"
[11:14:56] <Aurora_v_kosmose> I see.
[11:15:08] <Aurora_v_kosmose> I misunderstood your point then.
[11:15:51] <moon-child> sm2n: this https://faculty.cc.gatech.edu/~beki/cs4001/Winner.pdf ?
[11:16:10] <sm2n> yes
[11:16:24] <moon-child> (encountered it a while ago, never got around to reading it; probably I will now as it seems pertinent)
[11:16:56] <sm2n> it's a good read imo
[11:17:15] <hayley> "Hence, the stern advice commonly given those who flirt with the notion that technical artifacts have political qualities: What matters is not technology itself, but the social or economic system inwhich it is embedded." Best I can tell, Bookchin, Carson et al say argue both.
[11:17:36] <hayley> A technology can be liberatory or not, independent of whether or not the surrounding environment will let it thrive.
[11:18:48] <moon-child> can a technology not be liberatory in context of one system, but restrictive in another?
[11:18:59] <Aurora_v_kosmose> From the sound of it what you say echoes the "Free Software is Political" notion.
[11:19:17] <hayley> Also possible, yes.
[11:19:38] <sm2n> moon-child: of course, the context matters
[11:19:50] <hayley> But e.g. one would have few good uses of a nuke, and few legal uses of lockpicking tools.
[11:19:53] <Aurora_v_kosmose> Souveillance vs surveillance.
[11:20:02] <Aurora_v_kosmose> *Sousveillance
[11:20:30] * moon-child runs off to make dinner
[11:22:19] <Aurora_v_kosmose> Anyway back to finishing my reading of the curse
[11:22:26] <Aurora_v_kosmose> And then hayley's counterargument
[11:22:48] <sm2n> Maybe I will read bookchin this year
[11:22:57] <sm2n> hayley: I assume you would recommend it?
[11:23:06] <hayley> sm2n: Anything up til 1995.
[11:23:14] <sm2n> what happened in 1995
[11:24:09] <hayley> He gets very mad at some people, who he correctly identifies as doing jack shit, and then ditches anarchism.
[11:24:35] <sm2n> lol
[11:24:50] <hayley> The resulting text has a title like "S... A... or L... A..."
[11:27:04] <sm2n> oh, it has the L-word in it
[11:27:10] <sm2n> savage
[11:27:58] <hayley> The big 3 to read are Post Scarcity Anarchism, a 1978 speech called Utopia, not Futurism, and The Ecology of Freedom.
[11:28:12] <sm2n> okay, thanks
[11:28:39] <Aurora_v_kosmose> hayley: The redemption arc isn't visible from the listing of your articles?
[11:29:02] <hayley> Aurora_v_kosmose: Right, I haven't updated it still.
[11:29:29] <Aurora_v_kosmose> Oh, I had been half-expecting you to have simply customized the output functions for org & for it to be the autogenerated index page
[11:29:59] <hayley> Nope, all manual. And I write a short description too.
[11:30:21] <sm2n> on that note, any plans for an atom feed?
[11:31:00] <hayley> How frequently do you think we write?
[11:31:32] <sm2n> The less frequent, the more important the feed!
[11:31:44] <Aurora_v_kosmose> Isn't a newsfeed specifically to be alerted of posts you'd otherwise not know about?
[11:31:56] <hayley> Yes.
[11:31:57] * hayley coming up with excuses
[11:32:11] <sm2n> Most of the things in my feed reader update pretty sparsely
[11:32:12] <sm2n> haha
[11:32:24] <Aurora_v_kosmose> I need to set mine up again.
[11:32:56] <Aurora_v_kosmose> Still have the data around so that shouldn't be too hard.
[11:34:47] <Aurora_v_kosmose> I also need to fixup my own blog, which I can't share here because meatspace attribution would be far too easy.
[11:34:54] <hayley> sm2n: FWIW I do find myself using the L-word in my head to describe some people, but throwing out all individualist anarchism is like throwing the baby with the bathwater.
[11:36:35] <moon-child> hayley: fwiw somebody asked me for a feed and I still haven't added one.  Through following my example, achieve enlightenment
[11:36:49] <moon-child> sm2n: what is in your feed?
[11:37:26] <sm2n> moon-child: don't set a bad example! (I'm a hypocrite, I have yet to add one to my site either)
[11:37:34] <sm2n> Mostly random blogs
[11:38:05] <sm2n> But in my defense, I have not posted anything interesting to read yet
[11:38:47] <hayley> https://www.youtube.com/watch?v=7mMqVw4cqj4
[11:38:48] -ixelp- Giles, Giles & Fripp - Hypocrite - YouTube
[11:39:18] <hayley> In my defense, I bother #lispcafe with what I write anyway.
[11:39:48] <sm2n> Yeah, but following irc logs is a chore when I'm actually busy
[11:40:58] <selwyn> https://explainextended.com/2021/12/31/happy-new-year-13/
[11:40:59] -ixelp- Happy New Year! - EXPLAIN EXTENDED at EXPLAIN EXTENDED
[11:41:28] <sm2n> moon-child: You have writing posted online?
[11:42:40] <sm2n> selwyn: why
[11:43:09] <ck_> selwyn: SELECT * from state where KET(x) + BRA(y) > 0.5 ?
[11:44:06] <selwyn> i've never seen a 285 line sql query before
[11:44:36] <selwyn> https://github.com/quassnoi/explain-extended-2022/blob/master/07.grover.sql
[11:44:37] -ixelp- explain-extended-2022/07.grover.sql at master Â· quassnoi/explain-extended-2022 Â· GitHub
[11:44:49] <sm2n> selwyn: https://www.scattered-thoughts.net/writing/against-sql
[11:44:51] -ixelp- Against SQL
[11:45:01] <moon-child> sm2n: outerproduct.net
[11:45:02] <selwyn> would rather use sql than python tbh
[11:45:16] <moon-child> nothing particularly interesting.  I was going to write something interesting there but then I got side-tracket
[11:45:36] <sm2n> moon-child: what, I already had that website open in a tab, apparently
[11:45:43] <hayley> We already have https://plover.com/~mjd/misc/hbaker-archive/letters/CACM-RelationalDatabases.html though.
[11:45:44] -ixelp- "Relational Databases", Comm. of the ACM 35,4 (April 1992), 16,18.
[11:47:20] <sm2n> "Death to GObject!"
[11:47:21] <sm2n> nice
[11:48:20] <gilberth> C++ noob question: When I say { std::string blah; ... } do I have to free^Wdelete it?
[11:48:57] <hayley> Nope.
[11:49:04] <gilberth> Thanks.
[11:49:11] <hayley> Pretend it's stack allocated, except for the part where it's not.
[11:49:35] <sm2n> okay, is there anything Henry Baker did not do?
[11:49:50] <gilberth> hayley: Well, when I say { std::string blah; ...} it is, isn't it?
[11:49:59] <hayley> Right.
[11:50:02] <hayley> sm2n: Found r/lispmemes?
[11:50:02] <Aurora_v_kosmose> hayley: It has that RAII destructor stuff going on in the backgruond doesn'it?
[11:50:08] <hayley> Yes.
[11:50:36] <hayley> I should write a RE fuzzer. Then I can watch and see just how slow I can make the OMRN compiler.
[11:50:44] <gilberth> hayhey: I feared that pointers would hide in there. But copying is great, shareing is bad. I forgot.
[11:50:45] <sm2n> I guess
[11:51:38] <gilberth> hayley: (a|ab}{1000} You lost. Dead in the water!
[11:52:23] <moon-child> gilberth: yes, this is one of the things I really hate about c++.  Copies everywhere.  Or, you must pass everything as a reference.  And if you forget once?  Kaboom
[11:52:42] <hayley> I'll just run everything except CL:COMPILE, since that's the actually slow part.
[11:53:08] <gilberth> hayley: You still lost. I would be more interested in POSIX-conformance.
[11:53:38] <hayley> Well, okay, Mr DFA Guy, how do you handle that.
[11:53:50] <gilberth> moon-child: C++ needs a borrow checker.
[11:54:00] <gilberth> hayley: I don't.
[11:54:06] <sm2n> gilberth: that is called crab^Wrust
[11:54:28] <hayley> And I still need to be able to have T_blah <- NIL in my IR, which I am closer to achieving. Then I suspect I'm closer to POSIX than most.
[11:55:12] <sm2n> I am told you can use "move semantics" a la rust with std::move these days in C++
[11:55:23] <sm2n> but it does not check them for you
[11:55:27] <gilberth> Milady, I'll challenge you some day. So far I pass all POSIX tests I could find and came up with. I saw no other lib do that.
[11:55:47] <hayley> https://www.youtube.com/watch?v=ns-fw7a16Gw
[11:55:47] -ixelp- jean-jacques burnel - Freddie Laker - YouTube
[11:56:14] <hayley> We use the same algorithm, more or less. Not going to be exciting.
[11:57:19] <gilberth> hayley: Wanna bet?
[12:00:24] <Aurora_v_kosmose> >  Yet there is no Python curse, and no one asking for the authors of either library to make the stupid decision to somehow combine efforts. 
[12:00:44] <hayley> gilberth: I'm pretty sure of it.
[12:03:23] * moon-child discreetly sets up a betting booth
[12:03:59] <hayley> Odds then?
[12:05:13] <moon-child> WYSIWYG
[12:06:41] *** Joins: Alfr (~Alfr@user/alfr)
[12:11:06] <Aurora_v_kosmose> Nice article.
[12:11:16] <contrapunctus> sm2n: more like resident Freenet advocate ð
[12:12:29] <hayley> https://www.reddit.com/r/rust/comments/rz0lnt/fully_remote_rust_companies/ Non-existent, no message passing means no proxying of Rust companies.
[12:12:30] -ixelp- Fully Remote Rust Companies : rust
[12:16:28] <hayley> Guess I should work on implementing R <- NIL tomorrow. Actually pretty easy. DERIVATIVE should leave R <- NIL alone, or maybe replicate R, but as NIL is constant, it can very nearly just be a compile-time construct.
[12:17:53] <hayley> ...eh, maybe not, I could end up making infinite assignments. I'll just treat it like POSITION until I know better. And evidently now registers can be NIL, rather than a position, but we were using fixnums for registers anyway.
[12:20:25] <hayley> If I had a fuzzer, I could use the "fuck about and find out" approach.
[12:35:56] <contrapunctus> sm2n, moon-child: if you need censorship resistance, very few existing mediums/networks attempt it. Tor has the exit node weakness and relies on centralized servers and all their attendant problems (DDoS -> unavailability, and measures which make life worse for Tor users; server mortality and link rot; server costs -> monetization -> anti-patterns like ads/tracking/censorship). Also, Freenet has em
[12:35:56] <contrapunctus> ail, forums, and IRC. Re: opennet mode, Freenet docs themselves repeatedly emphasize that opennet mode is insecure and only meant for trying out Freenet in non-sensitive contexts. ð¤·ââï¸ï¸
[12:37:14] *** Quits: remexre (~remexre@user/remexre) (Remote host closed the connection)
[12:37:29] *** Joins: remexre (~remexre@user/remexre)
[12:39:56] <moon-child> 'Notebooks are a direct evolution of REPLs'
[12:41:23] <hayley> Anything's an evolution if you try hard enough.
[12:46:19] *** Joins: notzmv (~zmv@user/notzmv)
[12:50:35] <hayley> (first-match "(a|Â«bÂ»)*" "ba") â #(0 2 NIL NIL)
[12:50:43] <hayley> I swear I should need more to do this. /me scratches head
[13:31:13] <hayley> Well, it's all over with. Phew.
[13:52:14] <gilberth> That's an example re2 and glibc get wrong.
[13:54:00] <hayley> gilberth: I think it's called offset binary btw https://en.wikipedia.org/wiki/Offset_binary
[13:54:32] <hayley> ...implementing signed values by making zero halfway in your representation.
[13:55:04] <gilberth> hayley: moon-child mentioning this yesterday already.
[13:55:09] <hayley> Sorry.
[13:55:33] <gilberth> I prefer the term "biased".
[13:55:43] <hayley> Maybe if burntsushi ever responds to me, I'll ask him what semantics he thinks Rust regex implements for submatching.
[13:56:25] <gilberth> Doesn't it say?
[13:56:31] <hayley> Nope.
[13:56:42] <gilberth> Poor.
[13:56:46] <hayley> "Much of the syntax and implementation is inspired by RE2." is all there is.
[13:57:00] <hayley> "The module documentation also includes a comprehensive description of the syntax supported." I don't care, give me semantics.
[13:57:07] <gilberth> RE2 is configurable in its semantics.
[13:58:39] <gilberth> I am too lazy right now, to test it, though.
[14:00:12] <hayley> Well, it can't be POSIX, since (a|aa)* is broken as usual.
[14:00:37] <gilberth> ok
[14:01:26] <gilberth> I ought to gather examples where POSIX differs from Perl.
[14:02:06] <hayley> Also, what's your reference on how submatches should match? /me skimming the POSIX table of contents, doesn't see "Here Is How Your Damn Submatches Work" as a heading.
[14:02:33] <gilberth> It's there, look closely.
[14:03:28] <hayley> The definition of "matched" states "Consistent with the whole match being the longest of the leftmost matches, each subpattern, from left to right, shall match the longest possible string." at least.
[14:03:52] <gilberth> Yeah, that's it.
[14:04:35] <gilberth> What do you miss in there?
[14:05:23] <hayley> Now I'm wondering where the (a|(b))* rule is.
[14:05:40] <gilberth> What about it?
[14:06:28] <hayley> Just wondering where it is.
[14:06:41] <gilberth> What exactly?
[14:06:48] <hayley> Also, can I plunder the examples in the spec for unit tests? Can you copyright that?
[14:07:11] <gilberth> The spec has a copyright, hasn't it?
[14:07:17] <hayley> Where (a|(b))* against "ba" shouldn't have a result for the second submatch.
[14:07:19] <hayley> Yes.
[14:07:54] <gilberth> \2 with (a|(b))* on "ba" should be undefined.
[14:08:16] <hayley> Right, but where does the spec state that?
[14:08:41] <gilberth> It's somewhere. I don't know off my head.
[14:08:42] <hayley> ...
[14:09:12] <hayley> Never mind, it makes more sense if we assume nested subpatterns have to have nested results.
[14:09:20] <gilberth> regexec(3) says so.
[14:09:26] <hayley> e.g. \1 there would be "a", so \2 can't be "b". Just a thought.
[14:09:48] <gilberth> Look at regexec(3) in POSIX.
[14:14:19] <hayley> https://pubs.opengroup.org/onlinepubs/9699919799/functions/regexec.html A fair few words to read.
[14:14:20] -ixelp- regcomp
[14:14:49] <gilberth> > If subexpression i is contained within another subexpression j, and i is not contained within any other subexpression that is contained within j, and a match of subexpression j is reported in pmatch[ j], then the match or non-match of subexpression i reported in pmatch[ i] shall be as described in 1. and 2. above, but within the substring reported in pmatch[j] rather than the whole string.
[14:14:57] <gilberth> Item 3 there.
[14:15:58] <hayley> Right, thanks.
[14:16:00] <gilberth> Hence, \2 can only match within \1.
[14:16:14] <hayley> "Never mind, it makes more sense if we assume nested subpatterns have to have nested results." Called it.
[14:27:13] <hayley> Hey, I can test against https://github.com/haskell-hvr/regex-tdfa/issues/2 now.
[14:27:13] -ixelp- POSIX submatch semantics is broken in two (rare) cases Â· Issue #2 Â· haskell-hvr/regex-tdfa Â· GitHub
[14:29:35] <hayley> (one-more-re-nightmare:first-match "Â«Â«Â«a*Â»|bÂ»|bÂ»+" "ab") â #(0 2 1 2 1 2 NIL NIL) I guess?
[14:29:59] <hayley> Forgot to do the same patching thing to + and {n} until now, though.
[14:34:23] <gilberth> You still write your REs funny, milady.
[14:35:30] <gilberth> That seems to be correct.
[14:36:34] <hayley> Yes, I don't have a POSIX parser yet.
[14:37:22] <gilberth> Poor execute for pickin Â«/Â» as parens.
[14:37:30] *** Joins: random-nick (~random-ni@87.116.167.125)
[14:37:30] <gilberth> excuse rather
[14:38:58] <hayley> I had used () for precedence before, and Â«Â» are quotation marks. So the latter seemed to make sense, without colliding with any other meaning of brackets in REs.
[14:39:09] <gilberth> glibc is wrong here, and re2, too.
[14:39:58] <gilberth> Why not use (?:...) for precedence as everybody else?
[14:40:41] <hayley> Why is Elvis Presley in my RE now?
[14:41:57] <gilberth> Is he alive?
[14:42:04] <hayley> Probably not.
[14:42:35] <gilberth> You hide dead bodies in your REs? Do I need to call the police?
[14:43:18] <hayley> No, the library finds its own dead REs by itself.
[14:44:12] <gilberth> Is that the reason why you keep the GC handbook?
[14:44:41] <hayley> Must be.
[14:49:46] <moon-child> I hope when I'm dead they put me in a dumpster
[14:49:50] <moon-child> who needs ceremony?
[14:52:41] <pl> it's usually the last chance to dunk on some people :P
[15:10:28] <hayley> at coffin "Bro you posted a lot of cringe"
[15:11:50] <ck_> a funeral isn't really for the benefit of the body, is it.  If the people left living want ceremony, why deny them
[15:13:20] <hayley> https://www.youtube.com/watch?v=NAmyMqL1AkI
[15:13:20] -ixelp- New Order - Ceremony (Live at CoManCHE Student Union, Manchester on 6th February 1981) - YouTube
[15:16:54] <hayley> https://twitter.com/slava__bobrov/status/1480055188757098501 Pictured: brain performing GC
[15:17:26] <hayley> And it takes a lot of passes over the heap too. Must be the Lisp-2 algorithm.
[15:49:02] *** Quits: amazigh (~amirouche@user/amirouche) (Quit: WeeChat 2.8)
[16:16:54] <shka> *sigh*
[16:17:36] <shka> it took a moment because i decided that slightly polishing my blog was a good idea
[16:17:39] <shka> https://sirherrbatka.github.io/Encoding%20hierarchical%20codes%20for%20classification%20tasks.html
[16:17:39] -ixelp- Encoding hierarchical codes for classification tasks
[16:21:52] <shka> using no longer developed emacs packages is not the best idea
[16:22:08] <moon-child> this 'ariel labs' style guide is ... interesting
[16:22:18] <moon-child> 'For example, "@export" annotation means exporting the following function or something'
[16:23:50] <moon-child> or what??
[16:24:14] * semz could never figure out what the point of cl-annot was
[16:24:35] <shka> semz: "because we can"
[16:41:33] <shka> also, reader macros are cool and all, but they also can fuck up your code
[16:44:04] <semz> Is there anything to it beyond giving macro uses a different syntax?
[16:44:35] <shka> semz: yeah
[16:44:44] <shka> so i use clesh
[16:44:50] <shka> for interactive lisp 
[16:44:53] <shka> because i am weird
[16:45:37] <shka> and clesh uses ! to indicate that you are inputting shell input
[16:45:46] <shka> so you can write !ls in repl
[16:45:53] <semz> I meant cl-annot lol
[16:45:59] <shka> or !find . -name "*.mp3"
[16:46:04] <shka> semz: this is the same issue
[16:46:36] <shka> it all work fine, but it forces me to FIRST load my packages, and then enable this reader macro
[16:47:05] <shka> because some of my functions use scheme convention 
[16:47:09] <shka> for mutate!
[16:47:28] <shka> and this will trip up clesh
[16:47:58] <shka> and if you would use @ as a function name, it would confuse also cl-annot
[16:48:48] <semz> I think we're talking past each other. I was wondering whether there was any more to cl-annot other than changing (my-export-defun ...) to @export (defun ...).
[16:49:00] <shka> oh, nothing
[16:49:01] <semz> Because this seems really bizarre as a library
[16:49:10] <shka> it is just a syntatic sugar
[16:49:13] <shka> nothing more
[16:49:42] <shka> i think that it is misguided effort :-)
[17:07:40] <contrapunctus> semz, shka: I didn't know about cl-annot, but I had once voiced the issue that defpackage basically duplicates information - the symbol is typed twice, so if you change the definition name you have to change the export form too. cl-annot's @export sounds like a possible solution to that.
[17:08:23] <shka> mmm, perhaps
[17:08:37] <shka> i still prefer to have explicit list of exported symbols
[17:08:41] <shka> even if duplicated
[17:09:41] <moon-child> I think separately specifying exported symbols is a sign of api maturity
[17:09:54] <moon-child> it means changes carry weight and are considered carefully
[17:12:34] <shka> i share this sentiment
[17:12:41] <semz> h-haha yeah *quickly C-c M-o's to hide pages of SBCL bitching about package variance*
[17:13:47] <semz> but jokes aside it does help to have the API all in one place
[17:34:02] <selwyn> clesh
[17:34:11] <selwyn> fucks sake wish i knew about this
[17:34:20] <shka> selwyn: yup, unix shariah don't like it
[17:34:45] <selwyn> instead, i reinvented a shitty bug-ridden version of half of it
[17:34:54] <selwyn> greenspun's 11th rule
[17:35:09] <selwyn> why don't they like it
[17:35:18] <shka> ... it is a joke
[17:35:28] <shka> i mean https://www.youtube.com/watch?v=bJ9r8LMU9bQ
[17:35:28] -ixelp- The Clash - Rock the Casbah (Official Video) - YouTube
[17:35:33] <moon-child> Any sufficiently complicated common lisp program contains an ad-hoc, informally-specified, bug-ridden implementation of half of unix?
[17:35:35] <moon-child> :/
[17:36:03] <selwyn> oh lol
[17:36:31] <shka> because, well clesh sounds like clash :P
[17:36:33] <shka> anyway
[17:36:35] <moon-child> reminds me of the allegro corrolary: any sufficiently complicated common lisp program contains an ad-hoc, informally-specified, bug-ridden implementation of half of common lisp
[17:36:58] <shka> i use clesh when i have to write something a little bit more complex then i am bothered to use bash for 
[17:37:00] <moon-child> they literally did that.  I don't remember what the talk was called (ask beach maybe)
[17:37:12] <shka> mostly interactive stuff
[17:37:39] <selwyn> i use it for getting a shell on what is supposed to be a non-interactive compute node
[17:37:53] <shka> launch sbcl in terminal, write a bunch of functions working with unix programs, pipe trough cl-ds...
[17:37:54] <semz> fwiw I got some cloud-based video editor at first when looking up clesh
[17:38:22] <selwyn> perhaps i ought to give a presentation on how to hack a pbs queue to give you a repl to a lisp image running on a compute node
[17:38:37] *** Joins: christophergray (~christoph@200.119.158.103)
[17:38:52] <shka> selwyn: yup, to rock the casbah you ought to use clesh
[17:39:15] *** Joins: euandreh (~euandreh@191.181.59.160)
[17:40:58] <shka> selwyn: for the ultimate abuse: root android device, install linux in the chroot, install lisp in that linux, install swank in that lisp
[17:41:24] <shka> ... and us clesh from that :P
[17:41:46] <shka> you may also include docker in the middle 
[17:41:55] <shka> for shit and giggles
[17:42:39] * shka is honestly shocked how capable smartphone/tablet hardware has become
[17:42:51] <selwyn> now that i have a smartphone
[17:42:56] <selwyn> i can return to android dev
[17:42:59] <selwyn> except with common lisp
[17:43:02] *** Joins: amazigh (~amirouche@user/amirouche)
[17:43:17] <selwyn> the qt5 with ecl thing
[17:43:36] <shka> heh, it is almost time for qt6
[17:44:37] <selwyn> lyrics say > The shareef don't like it
[17:44:59] <selwyn> not having it
[17:45:13] <shka> anyway, even old and well used smartphone is enough for personal server
[17:45:25] <shka> selwyn: hah, i always thought it was shariah
[17:45:43] <shka> but yeah, shareef makes more sense actually 
[17:46:10] <shka> was this song after iranian revolution anyway?
[17:46:17] <selwyn> haha
[17:46:30] <selwyn> when people got scared. yeah idk
[17:46:56] <shka> yeah, it was after Iranian revolution
[17:48:00] <pl> Shouldn't the better lyrics be "Oh, if it's not the consequences of my own stupid actions"? ;-)
[17:48:24] <shka> pl: clesh ain't stupid
[17:48:39] <selwyn> clesh appears to not work for me
[17:48:46] <shka> how so?
[17:48:48] <selwyn> is the quicklisp version advisable
[17:48:52] <shka> sure
[17:48:56] <pl> shka: I meant more about the Iranian revolution 
[17:49:03] <shka> oh, ok
[17:49:10] <selwyn> when i type '!!' as per instructions it spits out an endless list of '$'
[17:50:14] <shka> selwyn: yeah, this didn't work for me either :P
[17:50:17] <shka> but !ls
[17:50:26] <selwyn> oh well
[17:50:33] <shka> and !find . -name... works
[17:52:32] <selwyn> imo the iranian revolution is still underrated and underappreciated
[17:56:16] <selwyn> the clesh output seems to break the colour formatting in the repl
[17:56:18] <selwyn> but whatever
[18:02:27] <shka> color formatting?
[18:04:05] <selwyn> https://cdn.discordapp.com/attachments/873281830856577044/929744680986484827/unknown.png
[18:04:17] <shka> oh, ok
[18:04:28] <shka> i don't even use that from emacs honestly
[18:05:17] <selwyn> what do you use it from
[18:05:43] <shka> just konsole --workdir /home/shka/ -e rlwrap sbcl --noinform --userinit /home/shka/.shclrc
[18:06:02] <moon-child> no chsh?
[18:06:06] <selwyn> oh
[18:06:08] <selwyn> cute
[18:06:24] <shka> i have bought that to a key
[18:06:36] <shka> *bound
[18:06:38] <shka> jesus
[18:06:57] <shka> sometimes i facepalm at shit i type
[18:07:04] <selwyn> me too
[18:07:12] <selwyn> i appear to be getting worse at english
[18:09:11] <shka> well anyway, i have this little program so pressing key once launches ipython, and pressing key twice launches clesh
[18:09:22] <shka> with stuff that i usually use imported
[18:09:24] <selwyn> on one of your keypads?
[18:09:47] <shka> yeah, on that cheap ass Chinese keypa
[18:09:50] <shka> d
[18:10:13] <selwyn> considering whether to buy a bluetooth booster, if that exists
[18:10:19] <shka> https://github.com/sirherrbatka/hotkeychords/blob/main/listener.py a rather simple program 
[18:10:20] -ixelp- hotkeychords/listener.py at main Â· sirherrbatka/hotkeychords Â· GitHub
[18:10:22] <selwyn> tired of bluetooth headphones not working around the house
[18:11:06] <shka> https://github.com/sirherrbatka/hotkeychords/blob/a43226c5a822957558f6f1f6900bb3b091f85083/chords.py#L35 this bad boy can fit so many applications
[18:11:07] -ixelp- hotkeychords/chords.py at a43226c5a822957558f6f1f6900bb3b091f85083 Â· sirherrbatka/hotkeychords Â· GitHub
[18:12:03] <selwyn> why chromium for discord but firefox for github
[18:12:38] <shka> because firefox webrtc does not work good on linux 
[18:12:53] <shka> and i don't hang on discord anyway
[18:13:03] <shka> i just pop window up, do my call, and close it again
[18:13:22] <shka> same for facebook
[18:16:15] <selwyn> i went on linkedin for the first time in years yesterday
[18:20:49] <contrapunctus> shka: let me tell you about AV calls on XMPP, and hell, even Matrix ð
[18:21:01] <contrapunctus> Also Mumble...
[18:25:19] <contrapunctus> Someone, recommend a name for a Common Lisp equivalent to youtube-dl/ripme - some options are... 1. slurp 2. yoink 3. claim 4. clutch 5. tentacle
[18:25:38] <SAL9000> youtube-cl
[18:25:39] <pl> XMPP tends to only show in certain big corps 
[18:25:43] <contrapunctus> SAL9000: LOL
[18:25:59] <SAL9000> the pun jumped out at me :)
[18:26:09] <contrapunctus> SAL9000: that's excellent, thanks...unfortunately YouTube is one thing it _doesn't_ do at the moment.
[18:27:46] <SAL9000> some jokes based on "you wouldn't download a car!" come to mind but they're a bit long
[18:31:13] <dave0> nite all
[18:31:19] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:32:10] <selwyn> earlier today someone asked me 'do you want to hear a conspiracy theory'
[18:33:53] <selwyn> it turns out that two guys on mh 370 had patented covid, together with one other guy who died in a car accident, and the other who is still alive (who may actually be bill gates iirc)
[18:34:08] <selwyn> he asked me 'how can you patent a virus'
[18:34:12] <selwyn> how indeed?
[18:34:52] <selwyn> but i wonder if it is possible that there is some kind of biotech patent related to coronaviruses out there, that is sufficiently technical and obscure to convince those that want to believe
[18:34:59] <selwyn> shka: what do you think
[18:35:13] <selwyn> i was under the impression that coronaviruses were too shit to do anything interesting with
[18:35:32] <shka> won't entertain a guess at that
[18:35:42] <ck_> still waiting for the part where everyone clapped
[18:39:03] <pl> You forgot the "stood up" part 
[18:39:56] *** Quits: euandreh (~euandreh@191.181.59.160) (Ping timeout: 256 seconds)
[18:41:36] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:42:40] <SAL9000> contrapunctus: media-cdr ? :P
[18:42:52] <contrapunctus> heh
[18:43:06] <SAL9000> might be confused with CD-Rewritable though
[18:44:06] <selwyn> it is just as well that i did not try to talk him out of it, since i thought he meant mh 17 at first
[18:46:22] <selwyn> which patently did not vanish without a trace
[18:47:51] <pl> selwyn: people are however incapable of reading even the most straightforward, simplified reports, so you'd be surprised... 
[18:51:22] <selwyn> mfw when i accidentally patent my bioweapon
[18:54:04] <ck_> that's what will stop ww3. fear of patent trolls
[18:56:34] <selwyn> why is ibm a patent troll?
[18:57:20] <ck_> I think I missed the context, where did ibm get mentioned?
[18:57:29] <selwyn> just now
[18:57:41] <selwyn> i heard stories that they are really notorious for it
[18:57:42] <ck_> indemnifying
[18:57:59] <selwyn> pushing their engineers to patent any damn thing they come up with
[18:58:05] <selwyn> but i am too dumb to understand why
[18:58:31] <ck_> I thought that behaviour stems from fear of patent trolls, not from being one
[18:58:45] <selwyn> is it part of a rational decision that they might be able to extract enough income to make the patenting cost worth it, or is it just institutional custom
[18:59:15] <ck_> protection against someone else patenting things, then suing ibm -- was what I thought
[18:59:41] <ck_> never heard of them actually being the ones suing. that of course doesn't mean it didn't happen -- but I was thinking more of SCO
[18:59:48] <ck_> http://hackles.org/cgi-bin/archives.pl?request=352
[18:59:49] -ixelp- Hackles Cartoon Archive
[19:00:38] <ck_> fuck that was almost t-w-e-n-t-y years ago where did the time go?
[19:01:23] <selwyn> furries at the office
[19:05:20] <ck_> I wonder if old people's homes will be organized by meme strata
[19:08:47] <selwyn> old people gathering around the vintage windows xp media center 'my, isn't that cat long'
[19:10:39] <ck_> for example
[19:13:47] <ck_> that's it, I'm switching careers to online culture translator and interpreter. Those people will be needed in the twilight of the human race
[19:17:56] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:f755:55d9:216b:76f6)
[19:36:08] <ck_> did you do some baking by now?
[19:36:30] <selwyn> not yet
[19:36:35] <selwyn> how was your quiche
[19:37:33] <shka> bioweapons... are a bad idea
[19:37:38] <ck_> better than I feared, quite good actually. Pro move, used a few separate casserole dishes instead of one
[19:38:08] <shka> from MAD to Totally Undiscriminating Death
[19:38:42] <shka> and COVID demonstrates why it is this way
[19:39:31] <shka> although corona is not even the most deadly virus ever, it shows how quickly it can spread 
[19:43:07] <selwyn> til printer ink has drm
[19:43:42] <ck_> oh yeah, for a while
[19:44:02] <ck_> "where do you think juicero[tm] got the idea from?" :)
[19:44:06] <shka> selwyn: yes, that's why it is so fucking expensive 
[19:44:26] <ck_> it's all so ridiculously broken, I don't know what we're even doing
[19:44:32] <shka> i remember the god old days when all you had to do is to use a syringe
[19:44:52] <shka> or just put the powder toner into a cartridge 
[19:45:14] <selwyn> what
[19:45:20] <selwyn> sounds like firing a musket
[19:45:35] <shka> and those stupid printers of that era are still working and are actually more expensive then the new ones :P
[19:45:47] <shka> selwyn: never refiled cartridge?
[19:45:54] <selwyn> no?
[19:46:20] <shka> https://www.youtube.com/watch?v=sbmbDjm_HhA
[19:46:21] -ixelp- How to Refill Cartridges of Brother Laser Printer - YouTube
[19:46:29] <selwyn> well
[19:46:36] <selwyn> i guess that was too simple to last
[19:46:45] <shka> yes, it used to be that simple and cheap :P
[19:47:25] <selwyn> i know a guy who uses old school printers
[19:47:29] <selwyn> possibly one of these models
[19:48:03] <shka> and for the maximum hilarity check prices of printers that allow you to do that
[19:48:19] <selwyn> he probably got them off ebay
[19:48:19] <shka> even if not in production for over a decade
[19:50:18] <shka> and i think that those old printers lasted longer as well somehow
[19:51:07] <sm2n> selwyn: <http://yosefk.com/blog/patents-how-and-why-to-get-them.html>
[19:51:08] -ixelp- Patents: how and why to get them
[19:51:23] <selwyn> sm2n: thanks
[20:05:04] <Aurora_v_kosmose> contrapunctus: The docs do indeed emphasize it. Unfortunately darknet mode has some fairly specific use-cases.
[20:07:24] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[20:07:53] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[20:08:54] *** Joins: domovod (~domovod@176.196.122.197)
[20:13:41] <selwyn> hl2e2 hits different after playing hl: alyx
[20:17:52] * ck_ writes that down for his cultural interpretation exam
[20:22:26] <ck_> I never played that episode :o "saving it until ep3 is released"
[20:26:44] *** Quits: shka (~herr@109.231.0.226) (Remote host closed the connection)
[20:27:04] <selwyn> ck: damn
[20:27:20] <selwyn> nearly twenty years!
[20:36:01] *** Joins: shka (~herr@109.231.0.226)
[20:47:46] <ck_> any day now
[21:23:08] <Aurora_v_kosmose> https://www.f150ecoboost.net/forum/attachments/23515d1412318761-fog-light-led-bulb-replacement-39559-op-will-surely-deliver-we-just-4lfx.jpeg
[21:24:01] <ck_> remember those exact memes were used when the steam client was first introduced and everything took forever to download?
[21:24:08] <ck_> more cobwebs though
[21:29:42] *** Quits: domovod (~domovod@176.196.122.197) (Quit: WeeChat 3.4)
[21:32:09] * contrapunctus tries to get back to their CLIM word processor
[21:37:14] *** Joins: makomo (~makomo@user/makomo)
[21:38:53] <contrapunctus> I have CLOS classes, I know how to make a text editor pane...I guess I could now try making a test document and displaying that...
[22:10:34] *** Quits: christophergray (~christoph@200.119.158.103) (Quit: WeeChat 3.4)
[22:23:37] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[22:37:13] *** Joins: random-nick (~random-ni@87.116.167.125)
[22:53:08] <shka> selwyn: how it is possible that we are not connected on linkedin anyway?
[23:16:22] *** Quits: remexre (~remexre@user/remexre) (Remote host closed the connection)
[23:16:37] *** Joins: remexre (~remexre@user/remexre)
[23:22:20] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:b923:8538:9f72:8140)
[23:32:13] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[23:51:54] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:56:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
