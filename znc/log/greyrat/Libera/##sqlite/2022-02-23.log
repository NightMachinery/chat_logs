[00:04:53] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[00:22:45] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Ping timeout: 256 seconds)
[00:23:05] *** Quits: analogsalad (~analogsal@user/analogsalad) (Quit: bye)
[00:27:17] *** Quits: aknot (~aknot@2603:900a:1503:17bb:82d3:d799:e6f2:4d4f) (Ping timeout: 240 seconds)
[00:46:02] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[01:04:35] *** Quits: blaze (~blaze@user/blaze) (Ping timeout: 252 seconds)
[01:07:58] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 250 seconds)
[01:08:34] *** Quits: scain (~scain@2603-8080-b104-4e00-45cf-678b-0a7f-b897.res6.spectrum.com) (Quit: Konversation terminated!)
[01:10:11] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[01:11:26] *** Quits: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:14:30] *** Joins: oriba (~oriba@dynamic-078-054-159-212.78.54.pool.telefonica.de)
[01:32:51] *** Joins: oprypin (~irc@pryp.in)
[02:03:03] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:16:06] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:34:51] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[02:42:59] *** Joins: karakedi (~eAC53C340@user/karakedi)
[02:58:35] *** Joins: AmR (~AmREiSa@156.199.47.115)
[03:21:51] *** Quits: oriba (~oriba@dynamic-078-054-159-212.78.54.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:39:21] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[03:43:21] *** Quits: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[03:43:55] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:07:19] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[04:09:40] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[04:13:45] *** Quits: AmR (~AmREiSa@156.199.47.115) (Quit: Konversation terminated!)
[04:31:36] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:50:41] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[04:52:45] *** Joins: aknot (~aknot@2603:900a:1503:17bb:ce29:714f:5e3f:3f5b)
[05:30:11] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[06:14:28] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Remote host closed the connection)
[06:14:46] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[06:20:30] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Remote host closed the connection)
[06:20:47] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[06:49:27] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:09:38] *** Quits: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[07:13:00] *** Quits: aknot (~aknot@2603:900a:1503:17bb:ce29:714f:5e3f:3f5b) (Ping timeout: 240 seconds)
[07:59:05] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[07:59:25] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:25:11] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[10:32:51] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Remote host closed the connection)
[10:33:24] *** Quits: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:01:57] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:03:11] *** Joins: de-facto_ (~de-facto@user/de-facto)
[11:03:30] <otisolsen70> I have a table with two timestamps in it: ts1, ts2. I want to calculate the difference between those timestamps in seconds. I have tried "SELECT ts1, ts2, ts2 - ts1 FROM conn;" but that yields just 0s. What is the right way of doing this?
[11:03:55] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[11:05:19] <otisolsen70> ts1 and ts2 is of type TIMESTAMP. I am not sure if it should be something else? I create them like this: INSERT OR IGNORE INTO conn (id, ts1, ts2) VALUES (42, '2022-02-09 08:55:58.013+00', '2022-02-09 09:16:03.227+00')
[11:06:41] *** de-facto_ is now known as de-facto
[11:10:16] <pekster> otisolsen70: That's *almost* ISO-8601, but not quite.
[11:10:56] <pekster> Formats 2 through 10 may be optionally followed by a timezone indicator of the form "[+-]HH:MM" or just "Z".
[11:11:07] <pekster> Reference: https://sqlite.org/lang_datefunc.html#time_values
[11:11:28] <pekster> I suspect if you want to use that format, you need the timezone in +00:00 format.
[11:11:58] <pekster> Or if all your data is in UTC/GMT form, either omit it, or use the "Z" suffix, for Zulu time.
[11:12:36] <pekster> otisolsen70: Oh, also if you want the _difference_ in time, convert them first to seconds after epoch. See the strftime() function functions, or aliases to that.
[11:13:36] <pekster> eg: you may want the `unixepoch()` alias before you do your subtraction if you want a value result in seconds.
[11:20:40] <otisolsen70> pekster, so because of my error in timezone format, does that mean the times are then just added as strings?
[11:21:17] <pekster> They're always added as strings, unless you added them through a datetime function, such as unixepoch() or strftime()
[11:22:13] <otisolsen70> Sorry, I have very little experience using SQLite. But I have lots of experience using other RDBMS. But I am bit confused here. Are SQLite's types not enforced when inserting data?
[11:22:30] <otisolsen70> If column type is TIMESTAMP, can I just insert 'foo' into it?
[11:22:41] <pekster> Somewhat; sqlite doesn't have strict typing, and there is no such type as TIMESTAMP in sqlite.
[11:23:00] <pekster> Some background that you may want: https://www.sqlite.org/datatype3.html
[11:23:59] <pekster> I'd probably recommend if you have experience with basic date converstions that you consider typing your timestamps instead as INTEGER columns, and store them in sqlite as unixepoch values, then use strftime() (or its sqlite aliases, such as unixepoch() ) to convert them into ISO-8601 or similar for display on insert or query.
[11:24:42] <pekster> Alternatively, you can also store them as anything SQLite will understand *as* the value for an strftime() function converstio, such as any resolution of ISO-8601, but that may not be as useful depending on what you're doing.
[11:25:35] <otisolsen70> pekster, I just removed everything before the + char. E.g. 2022-02-09 09:06:03.066. 
[11:25:59] <pekster> So that's now a SQLite valid ISO-8601 string, *but* you still need to do something useful to perform date-math on it.
[11:26:16] <pekster> ie: run it through unixepoch() before your math operations.
[11:26:31] <otisolsen70> SELECT ts1, ts2, unixepoch(ts1) - unixepoch(ts2) FROM conn; produces: "SQL error or missing database (no such function: unixepoch)"
[11:28:07] <pekster> Hmm, I have the same here, I wonder if there's some build-time param that makes that optional? 1 sec..
[11:28:44] <pekster> Must be; same thing but in terms of strftime() function: SELECT strftime('%s', '2022-03-01T00:00') - strftime('%s', '2022-02-01T00:00');
[11:28:53] <pekster> That works here on my distro's build of sqlite3
[11:29:07] <pekster> (returning of course the unixepoch seconds difference between the 2 dates)
[11:29:08] <otisolsen70> ^ produces: 2419200
[11:29:24] <pekster> Yea, so our builds just don't have the unixepoch() function at the link I supplied above for date-functions.
[11:29:55] <pekster> You can always perform the "alias" functions in terms of strftime() which is much like the C-funciton call (with a few extra bells & whistles you won't find in the C library)
[11:29:59] <otisolsen70> This works: SELECT ts1, ts2, strftime('%s', ts2) - strftime('%s', ts1) FROM conn;
[11:30:01] <otisolsen70> :)
[11:30:42] <pekster> Yea, so just store your dates in *either* an INTEGER column which is itself the unixepoch value, or an ISO8601 value, then use the correct arguments to strftime() in SQLite to get what you need back.
[11:31:11] <otisolsen70> OK. Thanks.
[11:31:27] <pekster> If ISO-8601, it's easiest to type your column as TEXT, but SQLite only has "type affinity" as I noted above. FOr all it matters, type your column as "ISO8601" since SQLite will just store it as TEXT anyway with an ISO-8601 string.
[11:32:02] <pekster> `CREATE TABLE example (foo PENGUIN, baz WHATEVER, bar MY_BEST_COLUMN_TYPE);` <-- valid SQLite, but probably not useful.
[11:33:18] <otisolsen70> So I have something like:: SELECT ts1, ts2, (strftime('%s', ts2) - strftime('%s', ts1)) AS time_diff FROM conn;   This gives me the numbers I want. Is there a way to actually update the table populating the column "time_diff" with the calculated time_diff in this query? The actual column time_diff exists in the table and contains NULL
[11:34:25] <pekster> You could do an `UPDATE some_table SET result_column = strftime('%s', ts2) - strftime('%s', ts1);` or such.
[11:34:40] <pekster> Edit to suit if you need a predicate or something.
[11:34:57] <pekster> Or if you need to store it in something other than the %s difference.
[11:43:23] <pekster> I also did confirm that if you have a timezone offset, you do need the "00:00" syntax. Just hours won't work.
[12:00:11] <otisolsen70> Thanks!
[12:02:03] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[12:22:18] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[15:14:07] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[15:44:40] *** Joins: danshearer (~dansheare@2a00:23c6:3ea5:6d01:19b5:e8d6:8f4c:2c0f)
[15:54:25] *** Joins: aknot (~aknot@2603:900a:1503:17bb:c918:85e9:73bf:d1d)
[16:24:40] *** Joins: fmartingr (~fmartingr@user/fmartingr)
[16:41:49] *** Joins: AmR (~AmREiSa@156.199.47.115)
[17:12:37] *** Quits: aknot (~aknot@2603:900a:1503:17bb:c918:85e9:73bf:d1d) (Ping timeout: 240 seconds)
[17:12:53] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[17:15:21] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[17:20:26] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[17:51:45] *** Joins: jringstad__ (~Amadiro@31.11.55.179)
[17:54:02] *** Quits: Amadiro (~Amadiro@31.11.55.179) (Ping timeout: 260 seconds)
[17:54:23] *** Quits: jringstad__ (~Amadiro@31.11.55.179) (Remote host closed the connection)
[17:54:41] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[18:35:35] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[18:36:05] *** Joins: de-facto (~de-facto@user/de-facto)
[18:38:58] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[19:39:34] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[19:39:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:43:42] *** Quits: danshearer (~dansheare@2a00:23c6:3ea5:6d01:19b5:e8d6:8f4c:2c0f) (Ping timeout: 260 seconds)
[20:00:17] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[21:13:18] *** Joins: danshearer (~dansheare@2001:8b0:dfb4:de56:9c11:5547:36cb:1f36)
[21:22:22] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[21:34:16] <fmartingr> In order to migrate a virtual table from fts4 to fts5 (because a software dependency), since tables can't be altered, the only solution is to rename the old virtual table, create the new virtual table and move the data between them manually, right?
[21:39:48] <Habbie> i don't know anything about fts, but i've quite often done "begin; make new table; insert .. select; drop old table; rename; commit" for other alterations that sqlite did not support
[21:40:05] *** Joins: Guest4934 (~joe@89.19.67.28)
[21:45:06] <fmartingr> Habbie: thanks
[21:45:41] *** Quits: Guest4934 (~joe@89.19.67.28) (Ping timeout: 256 seconds)
[22:30:13] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:48:50] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:51:53] *** Quits: danshearer (~dansheare@2001:8b0:dfb4:de56:9c11:5547:36cb:1f36) (Ping timeout: 252 seconds)
