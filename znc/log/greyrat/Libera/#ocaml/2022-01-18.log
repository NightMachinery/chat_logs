[00:00:18] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[00:28:52] *** Quits: gravicappa (~gravicapp@178.214.248.83) (Ping timeout: 250 seconds)
[00:36:13] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[00:36:35] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[00:49:40] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 250 seconds)
[00:56:23] *** Quits: salkin (~salkin@84.212.156.62) (Ping timeout: 256 seconds)
[01:00:07] *** Joins: zebrag (~chris@user/zebrag)
[01:07:34] *** Parts: rustyne (c7dec7c28e@2604:bf00:561:2000::1ab) ()
[01:08:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:09:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:17:27] *** Quits: mro (~mro@port-92-195-169-120.dynamic.as20676.net) (Quit: Leaving...)
[01:48:09] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:231d:262d:fcb7:17d7)
[01:53:16] *** Quits: pippijn (~pippijn@ra.xinutec.org) (Ping timeout: 245 seconds)
[01:54:14] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[01:56:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:03:36] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:03:49] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 240 seconds)
[02:03:51] *** Joins: pippijn (~pippijn@ra.xinutec.org)
[02:04:04] *** Quits: pippijn (~pippijn@ra.xinutec.org) (Client Quit)
[02:05:02] *** Joins: pippijn (~pippijn@ra.xinutec.org)
[02:16:01] *** Joins: Everything (~Everythin@46-133-77-215.mobile.vf-ua.net)
[02:22:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:28:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:32:31] *** Joins: nfc_ (nfc@tilde.institute)
[02:33:16] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:231d:262d:fcb7:17d7) (Quit: Konversation terminated!)
[02:45:26] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[02:45:44] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[03:10:39] *** Quits: kakadu (~kakadu@195.19.236.234) (Remote host closed the connection)
[03:11:02] *** Joins: kakadu (~kakadu@195.19.236.234)
[03:13:46] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Quit: Leaving.)
[03:22:38] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 250 seconds)
[03:26:55] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[03:31:47] *** Joins: afrosenp1i (~afrosenpa@li642-224.members.linode.com)
[03:35:26] *** Quits: afrosenp1i (~afrosenpa@li642-224.members.linode.com) (Client Quit)
[03:43:37] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzz‚Ä¶)
[03:44:27] *** Joins: biog (~user1@159.224.42.85)
[03:45:07] *** Joins: afrosenpai (~afrosenpa@li642-224.members.linode.com)
[03:46:14] *** Parts: afrosenpai (~afrosenpa@li642-224.members.linode.com) ()
[03:46:50] *** Joins: afrosenpai (~afrosenpa@li642-224.members.linode.com)
[03:50:21] *** Quits: biog (~user1@159.224.42.85) (Ping timeout: 256 seconds)
[03:52:41] *** Joins: bobo_ (~bobo@37.168.51.206)
[03:52:47] *** Quits: spip (~bobo@37.164.94.173) (Ping timeout: 256 seconds)
[04:02:14] <afrosenpai> hello
[04:02:39] <afrosenpai> is #general the only channel on discord in which the irc is configured to work?
[04:03:48] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[04:03:52] <afrosenpai> s/the irc/irc/
[04:05:25] *** Joins: octachron_ (~octachron@2a01:4f8:1c1c:69ae::1)
[04:06:46] *** Quits: slothby (~JoshAshby@irc.isin.space) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: nimaje (~nimaje@bureaucracy.bureaucracy.de) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: octachron (~octachron@2a01:4f8:1c1c:69ae::1) (Ping timeout: 268 seconds)
[04:07:37] *** Joins: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:08:07] *** Joins: nimaje (~nimaje@bureaucracy.bureaucracy.de)
[04:08:14] *** Joins: slothby (~JoshAshby@irc.isin.space)
[04:10:06] *** Joins: spip (~bobo@37.168.51.206)
[04:10:11] *** Quits: bobo_ (~bobo@37.168.51.206) (Ping timeout: 256 seconds)
[04:14:13] <d_bot> <NULL> #general is the only channel bridged to IRC, yes; you can also count the feeds as "bridges" if you want
[04:14:57] *** Quits: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[04:20:16] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[04:33:02] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 240 seconds)
[04:37:17] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[04:47:07] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Quit: „Éê„Ç§„Éê„Ç§)
[04:47:28] *** Joins: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:48:41] *** Joins: CalimeroTeknik (~calimero@185.13.36.50)
[05:14:26] *** cross_ is now known as cross
[05:30:38] <b0o> In the changelog for ocaml-lsp, there's this entry -- Breaking: ocamllsp drops support for .merlin files, and as a consequence no longer depends on dot-merlin-reader. (#523)
[05:30:51] <b0o> What is the new way to configure merlin?
[05:31:57] <d_bot> <NULL> I think merlin still uses those files when used alone; the LSP gets the info that those files are supposed to have from dune
[05:32:13] <b0o> (this was driving me NUTS for the past 24 hours, trying to figure out why my vendored modules weren't being picked up by the lsp)
[05:32:44] <b0o> I am trying to contribute to rescript-vscode's analysis sub-project which doesn't use dune for some reason, it just has a .merlin file
[05:33:12] <b0o> https://github.com/rescript-lang/rescript-vscode/tree/master/analysis
[05:40:44] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[05:48:40] *** Quits: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[06:01:06] *** Joins: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[06:06:07] <d_bot> <EduardoRFS> There is any way to inline high order functions in the closure middle end?
[06:25:04] *** Quits: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[06:32:59] *** Quits: tomku (~tomku@user/tomku) (Read error: Connection reset by peer)
[06:37:34] *** Joins: tomku (~tomku@user/tomku)
[06:45:04] *** Quits: Everything (~Everythin@46-133-77-215.mobile.vf-ua.net) (Quit: leaving)
[07:07:02] *** Quits: chrisz (ofx4q7xwd9@55d41ac7.access.ecotel.net) (Ping timeout: 240 seconds)
[07:08:51] *** Joins: chrisz (lrwls3yud8@55d4400f.access.ecotel.net)
[07:21:42] *** Joins: mbuf (~Shakthi@136.185.86.67)
[07:22:44] *** Quits: mbuf (~Shakthi@136.185.86.67) (Remote host closed the connection)
[07:27:56] *** Joins: mbuf (~Shakthi@136.185.86.67)
[07:57:02] *** Quits: chrisz (lrwls3yud8@55d4400f.access.ecotel.net) (Ping timeout: 240 seconds)
[07:59:01] *** Joins: chrisz (nonnpovydi@55d4ebf6.access.ecotel.net)
[08:28:14] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[08:42:29] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 252 seconds)
[08:44:27] *** Quits: chrisz (nonnpovydi@55d4ebf6.access.ecotel.net) (Ping timeout: 256 seconds)
[08:46:09] *** Joins: chrisz (ivdopvnt3r@55d46065.access.ecotel.net)
[08:51:26] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[08:53:09] *** Joins: hackinghorn (~hornhacki@137.132.213.132)
[08:53:30] *** Quits: hackinghorn (~hornhacki@137.132.213.132) (Changing host)
[08:53:30] *** Joins: hackinghorn (~hornhacki@user/hackinghorn)
[09:02:50] *** Joins: hackhorn (~hornhacki@137.132.235.172)
[09:03:47] *** Quits: hackinghorn (~hornhacki@user/hackinghorn) (Remote host closed the connection)
[09:05:21] *** Joins: hornhack (~hornhacki@137.132.213.132)
[09:05:21] *** Quits: hornhack (~hornhacki@137.132.213.132) (Changing host)
[09:05:21] *** Joins: hornhack (~hornhacki@user/hackinghorn)
[09:05:45] *** hornhack is now known as hackinghorn
[09:07:32] *** Quits: hackhorn (~hornhacki@137.132.235.172) (Ping timeout: 240 seconds)
[09:08:49] *** Joins: hackhorn (~hornhacki@137.132.214.138)
[09:10:02] *** Quits: hackhorn (~hornhacki@137.132.214.138) (Changing host)
[09:10:02] *** Joins: hackhorn (~hornhacki@user/hackinghorn)
[09:11:39] *** Quits: hackinghorn (~hornhacki@user/hackinghorn) (Ping timeout: 256 seconds)
[09:29:01] *** Quits: ansiwen (~sanders@vm1.a6n.de) (Quit: ZNC 1.7.1 - https://znc.in)
[09:30:38] *** Joins: ansiwen (~sanders@vm1.a6n.de)
[09:57:51] *** Joins: gravicappa (~gravicapp@178.214.248.83)
[10:08:08] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[10:09:20] *** Joins: hornhack (~hornhacki@137.132.217.135)
[10:11:32] *** Quits: hackhorn (~hornhacki@user/hackinghorn) (Ping timeout: 240 seconds)
[10:19:37] <d_bot> <joris> Hello. I'm still totally confused about the rule odoc (odig) uses to select comment for file modules to put as short description in module index
[10:19:57] <d_bot> <joris> i have files which follow the same pattern and some have descriptions but most don't ü§Ø
[10:30:17] *** Quits: hornhack (~hornhacki@137.132.217.135) (Changing host)
[10:30:17] *** Joins: hornhack (~hornhacki@user/hackinghorn)
[10:34:23] *** Joins: jlrnick (~josephler@2a01cb040a1594004d2b9edeb7374d20.ipv6.abo.wanadoo.fr)
[10:36:43] *** Joins: fcc977 (~kaph@151.19.243.144)
[10:41:00] *** Joins: mro (~mro@port-92-195-223-196.dynamic.as20676.net)
[10:45:30] *** Quits: fcc977 (~kaph@151.19.243.144) (Remote host closed the connection)
[10:45:50] *** Joins: fcc977 (~kaph@151.19.243.144)
[11:03:44] <d_bot> <joris> > Documentation tools such as odig may use the first line to generate a summary of the module.
[11:03:45] <d_bot> <joris> *may* üòÑ i guess i better look at the code
[11:04:00] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[11:08:14] <d_bot> <joris> https://ocaml.github.io/odoc/odoc_for_authors.html#synopsis and i found this too, but i'm not sure what i am missing, it does not always work
[11:25:56] *** Quits: fcc977 (~kaph@151.19.243.144) (Read error: Connection reset by peer)
[11:29:21] *** Quits: wagle (~wagle@quassel.wagle.io) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[11:29:41] *** Joins: fcc977 (~kaph@151.43.53.126)
[11:29:55] *** Joins: wagle (~wagle@quassel.wagle.io)
[11:30:10] *** Joins: vijon (~vijon@8.45.41.32)
[11:31:51] *** Quits: wagle (~wagle@quassel.wagle.io) (Client Quit)
[11:32:23] *** Joins: wagle (~wagle@quassel.wagle.io)
[11:33:06] <d_bot> <joris> https://github.com/ocaml-doc/odoc-parser/blob/b13ffc2f30ca20ca5bb733be4f630d46bd274fd6/src/syntax.ml#L231 i've solved the case actually. Must be (** Text, no space allowed.
[11:33:15] *** Quits: fcc977 (~kaph@151.43.53.126) (Remote host closed the connection)
[11:34:32] *** Joins: fcc977 (~kaph@151.43.53.126)
[11:35:13] *** Quits: rgrinberg (~textual@2806:101e:7:2b:f4e6:13e8:c8a9:3722) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:37:57] *** Quits: fcc977 (~kaph@151.43.53.126) (Read error: Connection reset by peer)
[11:38:11] *** Joins: fcc977 (~kaph@151.43.53.126)
[11:43:13] *** Quits: vijon (~vijon@8.45.41.32) (Quit: vijon)
[11:54:24] *** Quits: fcc977 (~kaph@151.43.53.126) (Ping timeout: 250 seconds)
[12:00:59] *** Quits: jlrnick (~josephler@2a01cb040a1594004d2b9edeb7374d20.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[12:05:04] <d_bot> <joris> and no still does not not work. Honestly i'm totally confused by this for a month
[12:08:14] <d_bot> <darrenldl> i vaguely recall putting a (** line *) at top suffices?
[12:10:42] *** Quits: CalimeroTeknik (~calimero@185.13.36.50) (Changing host)
[12:10:42] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[12:10:57] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[12:31:16] <d_bot> <joris> This works only for some modules, but not for most.  Maybe this is too long, i really don't understand
[12:41:09] *** Joins: salkin (~salkin@138.251.92.62.static.cust.telenor.com)
[12:44:06] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[12:46:51] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[13:04:44] *** Quits: hornhack (~hornhacki@user/hackinghorn) (Quit: Leaving)
[13:37:35] *** Quits: salkin (~salkin@138.251.92.62.static.cust.telenor.com) (Ping timeout: 256 seconds)
[13:51:14] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[14:06:47] *** Joins: bartholin (~bartholin@158.110.70.210)
[14:09:53] *** Joins: fcc977 (~kaph@151.43.53.126)
[14:13:29] *** Quits: fcc977 (~kaph@151.43.53.126) (Client Quit)
[14:13:41] *** Joins: fcc977 (~kaph@151.43.53.126)
[14:19:06] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[14:19:44] *** Quits: mro (~mro@port-92-195-223-196.dynamic.as20676.net) (Remote host closed the connection)
[14:23:00] *** Joins: mro (~mro@port-92-195-223-196.dynamic.as20676.net)
[14:23:32] *** Joins: kaph (~kaph@151.43.53.126)
[14:24:27] *** Quits: fcc977 (~kaph@151.43.53.126) (Ping timeout: 256 seconds)
[14:24:44] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Quit: Leaving)
[14:26:43] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[14:26:55] *** Quits: kaph (~kaph@151.43.53.126) (Read error: Connection reset by peer)
[14:28:23] *** Joins: kaph (~kaph@151.43.53.126)
[14:30:23] *** Quits: mro (~mro@port-92-195-223-196.dynamic.as20676.net) (Remote host closed the connection)
[14:33:00] *** Quits: kaph (~kaph@151.43.53.126) (Remote host closed the connection)
[14:33:26] *** Joins: mro (~mro@port-92-195-223-196.dynamic.as20676.net)
[14:34:18] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Quit: Leaving)
[14:34:28] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[14:35:30] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Client Quit)
[14:41:42] *** Joins: kaph (~kaph@151.43.53.126)
[14:44:54] *** Joins: romildo (~Romildo@ip-191-5-85-76.isp.valenet.com.br)
[14:45:36] <d_bot> <darrenldl> is the repo public?
[14:45:48] <d_bot> <joris> unfortunately no
[14:49:39] *** Joins: jlrnick (~josephler@2a01cb040a1594009183477ef2740532.ipv6.abo.wanadoo.fr)
[15:00:46] *** Joins: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[15:00:50] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[15:02:15] *** Quits: kaph (~kaph@151.43.53.126) (Read error: Connection reset by peer)
[15:05:38] *** Joins: kaph (~kaph@151.43.53.126)
[15:13:45] *** Quits: kaph (~kaph@151.43.53.126) (Ping timeout: 256 seconds)
[15:21:28] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Quit: Leaving)
[15:22:01] *** Quits: jlrnick (~josephler@2a01cb040a1594009183477ef2740532.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[15:23:30] *** Quits: romildo (~Romildo@ip-191-5-85-76.isp.valenet.com.br) (Quit: Leaving)
[15:26:30] *** Quits: mro (~mro@port-92-195-223-196.dynamic.as20676.net) (Remote host closed the connection)
[15:48:19] *** Joins: bobo_ (~bobo@37.171.167.233)
[15:49:09] *** Quits: spip (~bobo@37.168.51.206) (Ping timeout: 268 seconds)
[15:49:53] *** Joins: salkin (~salkin@138.251.92.62.static.cust.telenor.com)
[16:15:03] *** Joins: mro (~mro@2002:5cc3:dfc4:0:7d61:830d:eb18:ce15)
[16:26:25] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[16:26:45] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[16:34:20] *** Quits: mro (~mro@2002:5cc3:dfc4:0:7d61:830d:eb18:ce15) (Ping timeout: 250 seconds)
[16:36:22] *** Joins: mro (~mro@2002:5cc3:dfc4:0:a4be:b0c6:faa7:c11f)
[16:46:30] *** Quits: reynir (root@user/reynir) (Quit: WeeChat 3.0)
[16:53:35] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[16:56:32] *** Quits: gravicappa (~gravicapp@178.214.248.83) (Ping timeout: 240 seconds)
[17:04:37] *** Joins: reynir (root@user/reynir)
[17:09:56] *** Quits: salkin (~salkin@138.251.92.62.static.cust.telenor.com) (Ping timeout: 268 seconds)
[17:11:08] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:28:28] *** Joins: jlrnick (~josephler@2a01cb040a159400f964e9d93ef0b450.ipv6.abo.wanadoo.fr)
[17:29:21] <d_bot> <mseri> Can you make a small public reproduction, with dummy functions?
[18:06:39] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:388c:b3d0:9d83:a60)
[18:13:56] <d_bot> <joris> The problem is, i don't know how to make it work üòÑ https://github.com/jorisgio/test-odoc
[18:14:31] <d_bot> <joris> so in the basic case it does not generate any synopsis for module index of test_lib. But i have files with some, and i don't understand how (but basically i want that everywhere obviously)
[18:14:54] *** Joins: gravicappa (~gravicapp@178.214.248.83)
[18:16:39] <d_bot> <joris> but on my code i have cases which are obviously better like this
[18:16:40] <d_bot> <joris> https://cdn.discordapp.com/attachments/436568060288172044/933009500342992966/Screenshot_2022-01-18_at_15-45-09_Test_lib_test_lib_Test_lib.png
[18:16:41] <d_bot> <joris> https://cdn.discordapp.com/attachments/436568060288172044/933009500649168926/Screenshot_2022-01-18_at_15-45-50_Apispec_api_Apispec.png
[18:17:42] *** Joins: Haudegen (~quassel@91.114.49.10)
[18:22:31] *** Joins: xiongxin (~Thunderbi@119.123.101.25)
[18:36:37] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:388c:b3d0:9d83:a60) (Quit: Konversation terminated!)
[18:44:45] *** Quits: mro (~mro@2002:5cc3:dfc4:0:a4be:b0c6:faa7:c11f) (Remote host closed the connection)
[18:50:21] <d_bot> <leviroth> What version of odoc are you using?
[18:50:22] <d_bot> <leviroth> https://cdn.discordapp.com/attachments/436568060288172044/933017978721665035/odoc-test.png
[18:53:56] <d_bot> <joris> the latest, but thanks a lot !!! odoc-parser was hold to 0.9 instead of 1.0 due to ocamlformat...
[18:53:59] <d_bot> <joris> i was going crazy
[18:57:31] <d_bot> <leviroth> Oh yeah, I definitely have that problem in my GitHub Actions builds
[18:57:51] <d_bot> <leviroth> Actually maybe I fixed it by upgrading ocamlformat.
[19:00:43] <d_bot> <joris> i wish i could do that easily, but reformatting 800k loc and getting tens of thousands of diff tends to make people angry :
[19:02:01] <companion_cube> => don't use ocamlformat
[19:02:34] <d_bot> <joris> but then reading 20 different style of ocaml makes *me* angry :p
[19:03:07] <companion_cube> take a vallium :p
[19:03:25] <companion_cube> (I get where you come from, tbh. but OCaml's syntax was never designed to be uniform alas)
[19:04:27] <d_bot> <joris> i guess i can just patch it üôà seems not too hard
[19:07:14] <companion_cube> ocamlformat should commit to being stable :p
[19:07:20] <companion_cube> instead of breaking their options and/or formatting
[19:07:23] <companion_cube> oh well.
[19:07:42] <zozozo> I'll probably always prefer ocp-indent to ocamlformat tbh
[19:12:22] <d_bot> <joris> 666 files changed, 316 insertions(+), 7508 deletions(-)
[19:12:30] <d_bot> <joris> lol that stats are fitting üòÑ
[19:17:54] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[19:17:54] *** Quits: jakzale (6291399afa@user/jakzale) (Remote host closed the connection)
[19:17:54] *** Quits: seeg (0bf4efab5c@2604:bf00:561:2000::2c7) (Remote host closed the connection)
[19:18:33] *** Joins: seeg (0bf4efab5c@2604:bf00:561:2000::2c7)
[19:18:37] *** Joins: jakzale (6291399afa@user/jakzale)
[19:18:45] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[19:38:12] *** Quits: xiongxin (~Thunderbi@119.123.101.25) (Quit: xiongxin)
[19:44:07] *** Joins: mro (~mro@port-92-195-223-196.dynamic.as20676.net)
[19:48:55] <d_bot> <VPhantom> Yes there's several options I depend on in `ocamlformat` which will disappear in the next release. I hope the end result will still be decent. My current setup with 0.19 is almost perfect. (If only closing tags were on separate lines, then it'd be perfect to minimize developer hassle and commit diffs.)
[19:49:11] <companion_cube> just fork ocamlformat ;)
[19:49:29] <companion_cube> it's not a proper OCaml project if you don't have at least 2 or 3 alternatives.
[19:49:37] <d_bot> <VPhantom> Yikes, that'd kind of defeat the purpose of having a common standard. I already hate that I have to set so many options in the config file to get things nice and readable.
[19:49:44] <d_bot> <VPhantom> True. üòõ
[19:50:01] <companion_cube> there'll never be a common standard
[19:50:06] <companion_cube> it's 20 years too late for that
[19:50:21] <d_bot> <VPhantom> I did like that when I touched Dune, I used its `.ocamlformat` automatically and could edit a line without breaking anything else.
[19:51:11] <d_bot> <VPhantom> If there's no goal of a common standard, then I strongly disagree with their impending removal of important options. üòï
[19:51:37] <d_bot> <VPhantom> ‚Ä¶but I _really_ don't want to maintain a fork of something this complex.
[19:52:37] <d_bot> <darrenldl> actually why provide options at all if they wanted strict uniformity
[19:53:12] <d_bot> <VPhantom> Like `prettier`.
[19:54:10] <Corbin> Wait, why are reformatting-only commits a problem? They should be just as bisectable as their neighbors, and code formatters can be configured so that every commit is formatted.
[19:54:27] <hannes> darrenldl: exactly, I never understood why ocamlformat doesn't join forces with ocp-indent and just propose the single >style<.
[19:54:33] <Corbin> I understand that it's *ugly*, but code formatting isn't about pretty code; it's about readable, uniform, non-bikesheddable code.
[19:54:42] <companion_cube> @darrendl because there are already several incompatible styles in the wild
[19:54:45] <hannes> Corbin: well, git praise is the issue I have with these commits.
[19:54:55] <companion_cube> like, normal, and janestreet :p
[19:55:12] <d_bot> <darrenldl> then pick one and die on said hill if you are going to wave the flag of uniformity : p
[19:55:18] <Corbin> hannes: Friendship ended with git-blame, now git-bisect is your best friend~
[19:56:17] <companion_cube> but then you don't get adoption, @darrendl
[19:56:26] <d_bot> <darrenldl> feels like eating a cake and wanting to have it too
[19:56:46] <companion_cube> well, it's an unsolvable problem
[19:56:57] <companion_cube> no agreement on what OCaml should look like
[19:57:07] <companion_cube> the new tool has to accomodate existing code
[19:57:17] <d_bot> <darrenldl> id rather accept that and stop dropping options
[19:57:21] <companion_cube> (and even then it didn't always succeed in doing that imho; I don't use it for example because it drives me fucking mad)
[19:57:49] <hannes> companion_cube: I'd push that single style everywhere I can, if it does not interfere with ocp-indent, and not change in every (minor) revision. so far ocamlformat hasn't convinced me since the output changes in every version.
[19:59:33] <companion_cube> if the style didn't fuck with code I explicitly write, I'd consider it
[19:59:37] <companion_cube> but tough luck
[19:59:46] <companion_cube> ocamlformat tries to do too much.
[19:59:57] <d_bot> <darrenldl> maybe i should move back to ocp-indent hm
[20:01:51] <d_bot> <VPhantom> I haven't tried ocp-indent; I wonder how it compares.
[20:02:52] <companion_cube> well it just does indentation, which means at least it doesn't undo your formatting
[20:03:32] <zozozo> personally, I tend to really dislike ocamlformat's default, and compared to ocp-indent it robs you of any power over formatting of some things (in some cases, you want to adjuts formatting to make things more readable, e.g. big printf statements)
[20:05:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[20:05:58] <Corbin> companion_cube: I think that the idea that your code has an explicit style is exactly the idea that the bikeshed's paint has a color. Your choice of style, and commitment to it, is your choice of paint.
[20:06:44] <companion_cube> sure, but I also like readable code
[20:06:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:07:04] <companion_cube> and none of the existing styles are readable enough because they're oblivious to OCaml's syntax's problems.
[20:07:34] <d_bot> <darrenldl> time to make yet another formatter ( : D
[20:07:43] <d_bot> <joris> the problem is, ocaml syntax is so loose that there are widely different styles in the wild, and ocamlformat is one. And this one was initially super opinionated (like putting separator at the beginning of the line, that was never done in most OS projects as far as i know)
[20:07:50] <companion_cube> zozozo and I are just sticking to ocp-indent
[20:08:01] <companion_cube> yep @joris
[20:08:24] <companion_cube> imho syntaxes which use {} have an easier time, because most things are in a block, and formatting blocks is easy
[20:08:30] <d_bot> <joris> but the major problem is that, code style depends on code style. And by style i mean what is the way you write ocaml. It influences the style that is readable for you
[20:09:32] <d_bot> <joris> for instance, if you tend to split everything i very small file, then you usually obviously like super sparse syntax. But if you tend to write quite big files, in the form of thousands of lines, then sparse syntax you will find it super unreadable
[20:09:37] <d_bot> <joris> it's just an example
[20:09:42] <companion_cube> yep yep
[20:09:54] <companion_cube> and if you write nested matches, or imperative code, your needs are different
[20:10:43] <d_bot> <joris> yep. For instance i use nested matches a lot, and we used to have a code style at work that allows you to not indend nested match if it is the last case
[20:11:29] <d_bot> <joris> it might look like a stylisc choice only, but it also in the long run influences how you write your code semantically
[20:12:19] <d_bot> <joris> and when you change the style, you actually end up changing the code pattern use, so it actually does not really help that much with "uniformity"
[20:12:30] <d_bot> <joris> at least if it keeps changing
[20:12:47] <companion_cube> üíØ
[20:12:48] <Corbin> joris: That's a way of looking at it, but we could also look at code formatters as *erasing* personal styles.
[20:12:54] <companion_cube> which, fuck that
[20:13:41] <d_bot> <joris> i really do like the idea of erasing personal styles inside a project
[20:14:00] <zozozo> another problem with ocamlformat's "style" is that, well it's ocamlformat's style, as in: as far as I know there weren't really any concertation on what a good style woiuld be for ocaml, and so it's a bit strange to want to bring everyone to that one style arbitrarily
[20:14:03] <companion_cube> then we just need a new syntax
[20:14:09] <d_bot> <joris> but i don't really like that it prevents a project to pick a style that fits its ocaml flavor
[20:14:11] <companion_cube> one that is compatible with formatting.
[20:14:30] <d_bot> <darrenldl> reasonml2 when
[20:14:35] <d_bot> <joris> btw, @companion_cube i don't think it is only block syntax vs ocaml syntax, because to some extand the issue also happens with reason
[20:14:43] <zozozo> at that point, why not store marshalled ASTs, and each person can have its editor configure to display code as one wants
[20:14:48] <d_bot> <joris> i think it is also because ocaml is an increadibly broad language
[20:14:54] <companion_cube> does it? do reason users have wildly different formatting styles?
[20:15:22] <d_bot> <joris> Not really because refmt was here from the start
[20:15:33] <d_bot> <joris> But they are also unhappy about the patterns it enforces
[20:15:58] <Corbin> zozozo: As long as the abstract syntax is terse, sure. But if it supports even one single optional do-nothing leaf operation, then humans will argue over the style question of how many do-nothing leaves to insert, and after which operations; they'll insist that the leaves have a magical code-organizing quality.
[20:16:04] <d_bot> <joris> Though I cannot speak for opensource reason dev
[20:16:10] <Corbin> e.g. whitespace in Lisps!
[20:16:29] <companion_cube> @joris rust people don't seem to dislike the formatter too much
[20:16:40] <companion_cube> you still get a handful of "styles" but it's mostly about sparseness
[20:17:30] <d_bot> <joris> It depends. I remember people complaining about the default format to write monadic code that was unreadable
[20:17:54] <d_bot> <joris> It is just there are a lot less different ways to write rust than to write ocaml I believe
[20:18:21] <d_bot> <joris> But yes it is mostly about sparseness
[20:18:22] <companion_cube> ah, monadic code with >>= would suck, for sure
[20:19:13] <zozozo> Corbin: sure, but then that's also why projects have guidelines (or tyranical leaders, which works quite effectively, ^^)
[20:19:32] <d_bot> <joris> And code review
[20:19:36] <companion_cube> let* would work well in a reasonml like syntax
[20:22:41] <d_bot> <joris> But once again rust as a much lesser surface than ocaml. Idk how it is now but when I left nobody was even writing recursion because no tce
[20:23:17] <companion_cube> I don't know that rust has that small a syntax :p
[20:23:26] <d_bot> <joris> No record update, no objects, no functional vs imperative style
[20:23:29] <companion_cube> there's the whole async stuff, closures with move, blocks, lifetimes‚Ä¶
[20:23:33] <companion_cube> yes record update
[20:23:42] <companion_cube> {x: 1, ..r}
[20:23:49] <d_bot> <joris> Ah yes true
[20:23:57] *** Joins: zebrag (~chris@user/zebrag)
[20:26:22] <Corbin> It's not just about immediate syntax, but modularity. Ideally, every module could be written in its own code style, so that it *doesn't matter* if you're using modules authored by other people. But the only way I've found to make this work is to put every module in its own file *and* design the language so that modules are tiny.
[20:29:02] <companion_cube> which is definitely not the case :D
[20:30:19] *** Joins: rgrinberg (~textual@187.223.115.174)
[20:32:18] <Corbin> Sure. So the lesson for OCaml users, as with many other languages, is either stop collaborating or relax one's opinions about code style.
[20:32:39] *** Joins: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net)
[20:38:12] *** Quits: rgrinberg (~textual@187.223.115.174) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[20:39:31] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[20:39:59] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:53:44] *** Quits: mro (~mro@port-92-195-223-196.dynamic.as20676.net) (Remote host closed the connection)
[20:54:38] *** Joins: mro (~mro@port-92-195-223-196.dynamic.as20676.net)
[20:59:20] *** Quits: mro (~mro@port-92-195-223-196.dynamic.as20676.net) (Ping timeout: 268 seconds)
[21:00:14] *** Joins: mro (~mro@port-92-195-223-196.dynamic.as20676.net)
[21:03:09] *** Joins: salkin (~salkin@84.212.156.62)
[21:05:05] *** Quits: mro (~mro@port-92-195-223-196.dynamic.as20676.net) (Ping timeout: 256 seconds)
[21:09:06] *** Quits: mbuf (~Shakthi@136.185.86.67) (Quit: Leaving)
[21:19:04] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 268 seconds)
[21:22:10] *** Quits: bartholin (~bartholin@158.110.70.210) (Quit: Leaving)
[21:28:05] *** Joins: mro (~mro@port-92-195-223-196.dynamic.as20676.net)
[21:32:27] *** Quits: mro (~mro@port-92-195-223-196.dynamic.as20676.net) (Ping timeout: 256 seconds)
[21:43:23] *** Joins: vijon (~vijon@8.45.41.32)
[21:43:32] *** Quits: vijon (~vijon@8.45.41.32) (Client Quit)
[21:46:21] <d_bot> <cemerick> I see it's another morning of tears re: ocamlformat üôÉ
[21:46:51] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[21:47:04] <d_bot> <VPhantom> Personally I'd be fine with it if they weren't deprecating a bunch of useful options.
[21:47:44] <d_bot> <VPhantom> I love that my code is uniform and that it catches my occasional scoping mistakes (i.e. with a multi-statement pattern match or a runaway if/else).
[21:49:00] <d_bot> <undu> I also haven't been happy with it, it's impossible to keep a consistent style while upgrading it because not eve normal style is stable
[21:49:03] <d_bot> <cemerick> something like it is essential IMO, but yeah, its current direction leaves a _lot_ to be desire
[21:49:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:49:55] <d_bot> <undu> unless you're jane street in that case the style is worh keeping, it's a very bad mesag to send
[21:50:59] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 256 seconds)
[21:51:22] <d_bot> <cemerick> gofmt came around, and now the only thing people seem to want is to enforce some small N of "blessed" styles
[21:52:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:53:36] <d_bot> <cemerick> I agree w/ @companion_cube, might as well have 4 - 10 ocamlformat forks with wildly varying options
[21:54:09] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:55:50] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Read error: Connection reset by peer)
[21:56:58] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[21:58:03] <d_bot> <VPhantom> If ocamlformat already has a lot of options, might as well have all the options people ask for, and rely on each project's `.ocamlformat` to allow contributors to easily and painlessly contribute. I think that would be the best compromise, short of having an official style defined as part of the language itself.
[21:59:03] <d_bot> <VPhantom> If we forked it, then we'd have _two_ possible formatting tools to worry about. (Obligatory <https://xkcd.com/927/>)
[22:01:53] *** Joins: mro (~mro@2002:5cc3:dfc4:0:a4be:b0c6:faa7:c11f)
[22:02:51] *** Quits: salkin (~salkin@84.212.156.62) (Ping timeout: 268 seconds)
[22:06:13] <companion_cube> which is ok since it's per project anyway
[22:06:16] *** Quits: mro (~mro@2002:5cc3:dfc4:0:a4be:b0c6:faa7:c11f) (Ping timeout: 250 seconds)
[22:08:32] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 240 seconds)
[22:08:39] *** Joins: gentauro (~gentauro@user/gentauro)
[22:10:56] *** Quits: gentauro (~gentauro@user/gentauro) (Quit: leaving)
[22:11:11] *** Joins: gentauro (~gentauro@user/gentauro)
[22:11:12] <d_bot> <cemerick> who's "we" there? The canonical project is looked after quite nicely by fb and js folks, but obviously it doesn't meet everyone's needs
[22:11:26] *** Quits: gentauro (~gentauro@user/gentauro) (Client Quit)
[22:12:22] <companion_cube> zozozo: maybe we should fork it and make an acceptable style ;)
[22:12:36] *** Joins: gentauro (~gentauro@user/gentauro)
[22:13:30] <zozozo> companion_cube: that could be an interesting idea
[22:13:41] <zozozo> but we'd need a name for the fork
[22:13:49] <zozozo> ccfmt ?
[22:16:29] <d_bot> <VPhantom> Several people mentioned "forking", I was merely applying a subject to that.
[22:16:39] <d_bot> <Anurag> Supporting every additional option comes with a cost (specially if the development team is small). The OCaml format project hasn‚Äôt reached 1.0 yet so now will be the time to leave your feedback on the issue tracker to pick better defaults.
[22:18:45] <d_bot> <VPhantom> My issue isn't with the defaults, it's that I use several of the options being removed to get the legibility I'm looking for. The removals are already merged, just not released yet (as of 0.19). i.e. <https://github.com/ocaml-ppx/ocamlformat/pull/1898>
[22:19:07] <companion_cube> zozozo: :D
[22:19:14] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[22:19:44] <companion_cube> although I'm worried it's just not able technically to preserve some choices
[22:19:51] <companion_cube> (like parentheses)
[22:20:16] <d_bot> <Anurag> My point being that if an option you use is being removed, you can start a discussion about what the new default behavior should be within OCaml format. Example: <https://github.com/ocaml-ppx/ocamlformat/issues/1958>
[22:20:49] <zozozo> companion_cube: yeah, there's quite a few things that can't very reasonbaly be kept in the parsetree...
[22:21:29] <companion_cube> @anurag at this point, it's even options that are not there yet at all üòÇ
[22:23:22] <d_bot> <VPhantom> Yeah that #1900 PR is especially painful. Keeping delimiters on separate lines vs content for long lists is key to not only keeping diffs clean but also making edits easier. I hate having to do a bunch of maneuvers just to add a new last item in a list; it shouldn't be harder than inserting one mid-way.
[22:24:08] <d_bot> <VPhantom> I guess I should look for issues like 1958 about the 4 removals that keep me pinned at 0.19.
[22:33:14] *** Joins: salkin (~salkin@84.212.156.62)
[22:34:43] *** Joins: mro (~mro@port-92-195-223-196.dynamic.as20676.net)
[22:39:51] *** Quits: mro (~mro@port-92-195-223-196.dynamic.as20676.net) (Ping timeout: 268 seconds)
[22:40:10] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[22:52:56] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[22:56:37] <Anarchos> I have a strange behaviour with Unix : my server reads (Unix.read) from a socket by chunks of 8192 . It read some chunks  then read a 8191 bytes chunk, and then blocks on read. I know i sent more bytes so why does it read 8191(then blocks) and not 8192 ?
[22:56:40] <d_bot> <cemerick> seeing (IMO) basics like align-cases (just to pick one off the top of my head) go away sends a very clear signal that the project is intended to provide a very small set of normative styles. Providing feedback in contrast to that objective would just be shouting into the wind.
[22:59:36] <d_bot> <Kakadu> GADT question. Can I write my function better:  shorter, without non-prenex polymorphism via record? https://gist.github.com/Kakadu/2a7d9f483103a7c7ed7b0af186d22455
[23:01:06] <d_bot> <VPhantom> So, fork 0.19? The choices they made in 0.20 make no sense to me.
[23:03:21] <companion_cube> Anarchos: are you sure you sent the rest?
[23:04:13] <Anarchos> companion_cube yes : if i do Ctrl+C in netcat, it says it sends 23*8192 bytes
[23:04:44] <companion_cube> did it flush?
[23:04:51] <companion_cube> did you ctrl-d?
[23:04:56] <companion_cube> netcat might buffer stuff.
[23:06:32] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[23:08:45] *** Quits: salkin (~salkin@84.212.156.62) (Remote host closed the connection)
[23:09:06] <Anarchos> i read netcat buffer with size 8192
[23:09:22] <companion_cube> buffering on netcat's side I mean.
[23:11:13] <Anarchos> companion_cube i tried with 'nc -l' instead of my server, and all the bytes are transmitted
[23:11:26] <Anarchos> companion_cube so i am pretty sure my server is the faulty one
[23:11:58] <companion_cube> also, possibly a off by one error
[23:12:05] <companion_cube> 8191 is suspicious
[23:12:28] <Anarchos> yes and fully reproducible
[23:12:54] <companion_cube> it's not a bug in Unix.read, btw.
[23:17:13] <Anarchos> companion_cube the read in question is there : https://github.com/Sylvain78/Preuves/blob/master/server/proof_server.ml#L364
[23:18:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:18:30] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:20:49] *** Joins: noob9000 (~noob9000@64.125.179.183)
[23:21:00] <companion_cube> seems ok I guess
[23:21:46] <companion_cube> I'd use strace to make sure it reads/writes the amount you expect
[23:21:50] <noob9000> How would one go about writing a function that returns true when one list is a sublist of the second (contiguously, too)?
[23:23:47] <Anarchos> companion_cube strace on my server or on netcat ?
[23:23:56] <companion_cube> either one I guess?
[23:23:58] <companion_cube> both
[23:25:19] <zozozo> could the off-by-one be caused by a \r\n -> \n translation (which is performed by ocaml in some cases) ?
[23:25:57] *** Joins: mro (~mro@port-92-195-223-196.dynamic.as20676.net)
[23:26:41] <d_bot> <undu> that has been my experience
[23:29:46] <companion_cube> oh good point
[23:29:53] <companion_cube> although that's a unix socket
[23:30:04] <companion_cube> would it do the rewriting anyway?
[23:30:36] <zozozo> no idea, but it might be worth it to make sure the binary mode is used (rather than the text mode which can perform conversions)
[23:30:44] <zozozo> just to see whether it fixes the problem
[23:30:56] <companion_cube> I forget if there's such a thing _in the Unix API_
[23:31:00] <companion_cube> if you use channels, then 100% agree
[23:31:48] <Anarchos> i use open_in instead of open_in_bin
[23:32:21] <companion_cube> so zozozo must be right
[23:32:30] <Anarchos> zozozo do you know if i can identify \r\n in my source files ?
[23:32:46] <companion_cube> grep '\r' ?
[23:33:48] <zozozo> I'm not sure, I have to say I don't know how unix-y tools react to windows-like end of lines, :p
[23:34:20] <Anarchos> zozozo anyway i only use \n in my protocol
[23:34:33] <haesbaert> Unix.read is a simple wrapper around read(2), it doesn't do anything, on a stream socket it reads up to "n" bytes
[23:34:47] <d_bot> <rudy> https://discord.com/channels/436568060288172042/436568060288172044/933086303766081537
[23:34:51] <haesbaert> the only buffering involved is the incoming socket buffer
[23:36:06] <haesbaert> the fact that you're reading 8191 and not 8192 is odd, are you sure the other side is not doing an off by one write ?
[23:36:18] <companion_cube> zozozo: they normally just pass \r through
[23:36:20] *** Quits: noob9000 (~noob9000@64.125.179.183) (Quit: Client closed)
[23:36:25] <companion_cube> but some, like git, have their own idea
[23:36:54] <zozozo> I'm not surprised
[23:37:22] <zozozo> companion_cube: I'd expect editors to magically translate such end-of-lines maybe ?
[23:38:23] <companion_cube> ah probably, but I wouldn't consider them to be "unix-y tools" :D
[23:38:35] <companion_cube> stuff like grep, cat, etc. shouldn't fuck with \r
[23:38:51] <companion_cube> and tbh I think the default mode for channels should have been binary
[23:39:02] <companion_cube> it's the least surprising behavior
[23:39:20] <d_bot> <cemerick> I agree. The real forcing function will be when the deprecated options are actually excised.
[23:39:49] <companion_cube> is that going to happen?
[23:40:05] * companion_cube quickly checks that his httpd does use raw sockets
[23:40:24] <companion_cube> (so there should be no \r problem with raw sockets, since http depends on them being there)
[23:40:38] <Anarchos> i only do (cat files ) | nc host por
[23:44:45] <Anarchos> socket is created by : socket ~cloexec:true ~domain:socket_domain ~kind:SOCK_STREAM ~protocol:0
[23:45:56] <zozozo> Anarchos: did you try and print the received data to check which byte is missing (i.e. ensure it's the latest presumably) ?
[23:47:07] <Anarchos> zozozo yes , and it cuts at the midlle of a line
[23:49:39] <companion_cube> hmm does cat add a \n between each file?
[23:51:33] <Anarchos> companion_cube it should'nt be the trouble : it only blocks in middle of 7th file
[23:51:37] <haesbaert> wait are you expecting that 1 write of 8192 will result in one read of 8192 ?
[23:51:57] <Anarchos> haesbaert no i just do netcat on one side to send
[23:52:11] <Anarchos> and i read by chunks of 8192 in a buffer
[23:52:15] <haesbaert> yeah and netcat exits and everything is flushed, so your problem is the reader
[23:52:28] <Anarchos> haesbaert no netcat doesn't exit
[23:53:45] <haesbaert> that means netcat blocks on write, which means the other side is not reading everything ?
[23:55:15] <Anarchos> haesbaert strace on netcat ends with "write select read"
[23:55:56] *** Joins: travv0 (sid293381@user/travv0)
[23:56:02] <haesbaert> yeah, it's waiting the other side to read, to open the window and select return it as writable
[23:56:56] <haesbaert> can you paste the exat line you're using  on netcat
[23:56:58] <haesbaert> *exact
[23:57:48] <Anarchos> haesbaert (cat theories/Bourbaki_Options.prf theories/Bourbaki_Notations.prf theories/Bourbaki_Logic.prf theories/Bourbaki_S1.prf theories/Bourbaki_S2.prf theories/Bourbaki_S3.prf theories/Bourbaki_S4.prf)  |nc localhost 5757 -v -v -o /tmp/nc.traf
[23:58:10] <d_bot> <VPhantom> @cemerick Oh I thought that 0.20 actually removed those options. I haven't looked at the diffs yet though. If they're still just flagged as deprecated, there might still be time to try reversing their decision. The pull requests included no explanation; it must've been documented elsewhere.
[23:58:14] <Anarchos> it blocks in middle of theories/Bourbaki_S4.prf
[23:58:55] <haesbaert> can you make the reader a netcat process as well, nc -l 127.0.0.1 5757 > /dev/null
[23:58:59] <companion_cube> is it possible that your server crashes because it doesn't get exactly 8192 bytes?
[23:59:33] <haesbaert> see if it can dump everything on a netcat listener, just to confirm it's your reader who is doing something wrong
[23:59:46] <haesbaert> I was the maintainer of netcat and would be surprised if there is something wrong
