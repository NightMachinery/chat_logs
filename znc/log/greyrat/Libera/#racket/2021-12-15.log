[00:01:47] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Remote host closed the connection)
[00:02:12] *** Joins: ur5us (~ur5us@203.86.198.200)
[00:07:56] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[00:23:20] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[00:24:01] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Remote host closed the connection)
[00:24:07] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[00:26:23] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 265 seconds)
[00:29:57] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[00:34:11] *** Quits: even4void (even4void@came.here.for-some.fun) (Ping timeout: 252 seconds)
[00:43:58] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:5d34:adba:2092:1fba)
[00:45:16] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ec:1646:7d3a:50e:9c6d:2db)
[00:49:02] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:5d34:adba:2092:1fba) (Ping timeout: 240 seconds)
[00:49:15] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Remote host closed the connection)
[00:49:47] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[00:55:18] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Ping timeout: 260 seconds)
[00:59:35] *** Joins: raghavgururajan (9fd51d1ea8@user/raghavgururajan)
[01:09:42] *** Joins: even4void (even4void@came.here.for-some.fun)
[01:14:16] *** Joins: TCZ (~tcz@91.150.178.124)
[01:24:31] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[01:37:22] *** Joins: countvajhula (~user@2601:642:4c09:4a1e:494e:5852:3b09:5ca2)
[01:42:29] <countvajhula> in syntax-parse, is there a way to match patterns starting with some prefix? E.g. a rule like [(_ (~starts-with speshal)) #'hi], so that (speshal-map ...) and (speshal-func ...) would both be matched?
[01:45:16] <countvajhula> i'd like to match these within my macro and leave them unchanged, the idea being, I could then use this as an macro extension mechanism. i.e. others could write `speshal-*` macros and they would work inside my macro since mine would leave them alone (otherwise, my macro would consider it invalid syntax)
[01:50:06] <samth> countvajhula: you can certainly write a syntax class like that yourself
[01:51:38] <samth> something like `(define-syntax-class (~starts-with x) (pattern i:id #:when (string-prefix=? x (symbol->string (syntax-e #'i))))`
[01:51:56] <samth> that expects a string, of course
[02:07:47] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[02:33:16] *** Quits: monkey_ (~user@181.114.17.106) (Read error: Connection reset by peer)
[02:33:52] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[02:36:05] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[02:36:05] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ec:1646:7d3a:50e:9c6d:2db) (Read error: Network is unreachable)
[02:43:13] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 250 seconds)
[02:53:09] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[02:53:52] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Remote host closed the connection)
[02:54:35] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[02:55:14] *** Quits: countvajhula (~user@2601:642:4c09:4a1e:494e:5852:3b09:5ca2) (Ping timeout: 260 seconds)
[03:00:07] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Ping timeout: 250 seconds)
[03:13:52] *** Joins: TCZ (~tcz@91.150.178.124)
[03:17:33] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[03:26:30] *** Joins: s-liao (~s-liao@101.86.96.154)
[03:28:25] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[03:40:09] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:bde5:121e:162b:ec8a) (Ping timeout: 256 seconds)
[04:01:35] *** Joins: countvajhula (~user@2601:642:4c09:3e63:504b:cc2c:f8ab:d016)
[04:02:31] <countvajhula> fantastic, I will try that. thank you samth !
[04:06:51] *** Quits: countvajhula (~user@2601:642:4c09:3e63:504b:cc2c:f8ab:d016) (Ping timeout: 252 seconds)
[04:07:06] *** Joins: countvajhula (~user@98.51.3.11)
[04:11:59] *** Joins: notzmv (~zmv@user/notzmv)
[04:13:51] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[04:33:56] *** Quits: countvajhula (~user@98.51.3.11) (Read error: Connection reset by peer)
[05:15:27] *** Joins: countvajhula (~user@2601:642:4c09:3e63:504b:cc2c:f8ab:d016)
[05:16:52] <countvajhula> is this the right way to use that syntax class samth ?
[05:16:58] <countvajhula> (define-syntax-parser blah
[05:16:59] <countvajhula>             [(_ (i:(starts-with "abc") expr ...)) #'hi])
[05:17:38] <countvajhula> (blah (abc 5)) ;=> blah: bad syntax
[05:19:49] <countvajhula> i haven't used a syntax class taking an argument before. not sure if that colon syntax is still valid? It didn't seem to complain about that though
[05:20:21] <countvajhula> for reference, here's the code defining the syntax class:
[05:20:29] <countvajhula> (define-syntax-class (starts-with pfx)
[05:20:29] <countvajhula>     (pattern
[05:20:29] <countvajhula>      i:id #:when (string-prefix? (symbol->string
[05:20:29] <countvajhula>                                   (syntax-e #'i)) pfx)))
[05:34:07] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 252 seconds)
[05:37:45] <countvajhula> aha, I found this in Ryan's paper on Fortifying Macros: "The colon notation
[05:37:46] <countvajhula> is a shorthand for parameterless syntax classes; e.g., x:identifier is short for (˜var
[05:37:46] <countvajhula> x (identifier)). When the syntax class takes parameters, the explicit ˜var notation is
[05:37:46] <countvajhula> required."
[05:40:00] <countvajhula> aaannd that did it! :)
[05:40:17] <countvajhula> (define-syntax-parser blah
[05:40:17] <countvajhula>   [(_ ((~var i (starts-with "abc")) expr ...)) #''hi])
[05:40:17] <countvajhula> (blah (abcd 5))
[05:40:17] <countvajhula> ;=> 'hi
[05:42:36] *** Quits: TCZ (~tcz@91.150.178.124) (Read error: Connection reset by peer)
[05:44:20] *** Joins: TCZ (~tcz@91.150.178.124)
[05:47:39] <samth> Yay
[05:50:48] *** Quits: codingquark (~quassel@user/codingquark) (Read error: Connection reset by peer)
[05:59:12] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[06:01:26] *** Quits: schulze (~schulze@dynamic-077-008-164-183.77.8.pool.telefonica.de) (Ping timeout: 260 seconds)
[06:03:14] *** Joins: Guest64873 (~bot@172-220-180-248.res.spectrum.com)
[06:03:17] *** Parts: Guest64873 (~bot@172-220-180-248.res.spectrum.com) ()
[06:04:31] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Ping timeout: 250 seconds)
[06:11:10] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[06:31:21] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[06:41:36] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[07:04:21] *** Quits: countvajhula (~user@2601:642:4c09:3e63:504b:cc2c:f8ab:d016) (Read error: Connection reset by peer)
[07:14:36] *** Joins: libertyprime (~libertypr@203.211.78.24)
[07:37:57] *** Joins: codingquark (~quassel@user/codingquark)
[07:49:02] *** Quits: aliasless (quassel@2001:19f0:6001:490f:9436:fd2d:3fc6:cfde) (Ping timeout: 240 seconds)
[08:00:55] *** Quits: libertyprime (~libertypr@203.211.78.24) (Ping timeout: 256 seconds)
[08:13:56] *** Quits: xgqtd (~xgqt@gentoo/developer/xgqt) (Quit: WeeChat 3.3)
[08:14:28] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[08:22:29] *** Joins: sts-q (~sts-q@212.53.219.230)
[08:38:38] *** Joins: libertyprime (~libertypr@203.211.78.24)
[08:51:03] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:57:15] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 252 seconds)
[09:17:45] *** Joins: aliasless (quassel@2001:19f0:6001:490f:9436:fd2d:3fc6:cfde)
[09:39:47] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (Ping timeout: 252 seconds)
[10:02:47] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[10:09:07] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Ping timeout: 252 seconds)
[10:36:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:49:09] *** Joins: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com)
[10:49:09] *** Quits: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com) (Changing host)
[10:49:09] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[10:50:22] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[10:50:25] *** Joins: badkins (~badkins@136.56.92.199)
[10:54:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 252 seconds)
[11:43:18] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b4e0:3e21:5ab4:62c2)
[11:43:18] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b4e0:3e21:5ab4:62c2) (Changing host)
[11:43:18] *** Joins: skapata (~Skapata@user/skapata)
[11:44:40] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:45:51] *** Joins: notzmv (~zmv@user/notzmv)
[12:52:51] *** Joins: schulze (~schulze@dynamic-077-001-062-038.77.1.pool.telefonica.de)
[13:24:21] *** Joins: badkins (~badkins@136.56.92.199)
[13:29:01] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[13:44:21] *** Quits: libertyprime (~libertypr@203.211.78.24) (Ping timeout: 252 seconds)
[13:55:03] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:9876:dcfa:8764:8af)
[13:57:31] *** Joins: libertyprime (~libertypr@203.211.78.24)
[14:07:38] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[14:13:19] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Ping timeout: 250 seconds)
[14:30:12] *** Quits: libertyprime (~libertypr@203.211.78.24) (Quit: leaving)
[14:35:57] <jakzale> does racket provide assertions? I saw that typed/racket/base provides assert, but I didn't find any in racket/base. Is using assertions in racket discouraged?
[14:43:11] <bremner> jakzale: it's more typical to use contracts or unit tests, depending on your goals
[14:43:30] <bremner> contracts are like assertions on steroids, I guess.
[15:01:44] <jakzale> bremner: thanks
[16:14:03] *** Quits: schulze (~schulze@dynamic-077-001-062-038.77.1.pool.telefonica.de) (Quit: nyaa~)
[16:14:39] *** Joins: schulze (~schulze@dynamic-077-001-062-038.77.1.pool.telefonica.de)
[16:16:57] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:18:01] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[16:28:09] *** Joins: badkins (~badkins@136.56.92.199)
[16:30:31] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[16:32:40] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[16:35:10] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Ping timeout: 260 seconds)
[16:53:25] *** Joins: badkins (~badkins@136.56.92.199)
[16:56:22] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[16:56:30] *** Joins: badkins (~badkins@136.56.92.199)
[17:41:47] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[17:56:57] *** Joins: monkey_ (~user@181.114.17.106)
[18:04:27] *** Quits: ermo (~ermo@user/ermo) (Quit: ZNC 1.8.2 - https://znc.in)
[18:08:58] *** Joins: ermo (~ermo@user/ermo)
[18:10:02] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[18:17:06] *** Joins: badkins (~badkins@136.56.92.199)
[18:21:59] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[18:23:25] *** Joins: badkins (~badkins@136.56.92.199)
[18:27:27] *** Quits: ermo (~ermo@user/ermo) (Quit: ZNC 1.8.2 - https://znc.in)
[18:28:16] *** Quits: jfred (quassel@libera/sponsor/jfred) (Ping timeout: 245 seconds)
[18:28:50] *** Joins: jfred (~quassel@libera/sponsor/jfred)
[18:30:39] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[18:31:21] *** Joins: badkins (~badkins@136.56.92.199)
[18:33:33] *** Joins: ermo (~ermo@user/ermo)
[18:36:00] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[18:42:34] *** Joins: badkins (~badkins@136.56.92.199)
[18:55:21] *** Quits: rudybot (~luser@ec2-52-8-12-207.us-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[19:03:22] *** Quits: ratzkewatzke (~ec2-user@ec2-34-217-87-98.us-west-2.compute.amazonaws.com) (Ping timeout: 265 seconds)
[19:05:55] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 252 seconds)
[19:07:03] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[19:08:21] *** Quits: jsoo_ (~znc@irc.refl.club) (Quit: ZNC 1.8.2 - https://znc.in)
[19:17:38] *** Joins: rudybot (~luser@ec2-52-8-12-207.us-west-1.compute.amazonaws.com)
[19:18:31] *** Joins: jsoo (~znc@irc.refl.club)
[19:24:47] *** Joins: ratzkewatzke (~ec2-user@ec2-34-217-87-98.us-west-2.compute.amazonaws.com)
[19:46:55] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 268 seconds)
[19:49:44] *** Joins: monkey_ (~user@181.114.17.106)
[19:53:09] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:32:14] *** Quits: jackhill (~jackhill@kalessin.dragonsnail.net) (Remote host closed the connection)
[20:32:19] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[20:36:57] *** Joins: monkey_ (~user@181.114.17.106)
[20:39:07] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[20:51:19] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 250 seconds)
[20:53:11] *** Joins: monkey_ (~user@181.114.17.106)
[20:54:28] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[21:11:19] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Remote host closed the connection)
[21:11:47] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[21:12:07] *** Quits: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net) (Remote host closed the connection)
[21:12:15] *** Joins: capfredf (~capfredf@c-68-51-122-2.hsd1.in.comcast.net)
[21:13:56] *** Joins: jackhill (~jackhill@kalessin.dragonsnail.net)
[21:33:59] *** jackhill is now known as KM4MBG
[21:34:12] *** KM4MBG is now known as jackhill
[21:46:37] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[21:53:59] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 265 seconds)
[21:56:07] *** Joins: badkins (~badkins@2600:380:9d20:fd09:c188:d559:a950:91b)
[21:56:20] *** Joins: monkey_ (~user@181.114.17.106)
[21:57:59] *** Joins: badkins_ (~badkins@136.56.92.199)
[21:58:27] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[22:00:27] *** Quits: badkins (~badkins@2600:380:9d20:fd09:c188:d559:a950:91b) (Ping timeout: 252 seconds)
[22:19:17] *** Joins: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com)
[22:32:10] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 260 seconds)
[23:00:40] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[23:43:13] *** Quits: badkins_ (~badkins@136.56.92.199) (Remote host closed the connection)
[23:44:58] *** Joins: badkins (~badkins@136.56.92.199)
[23:49:31] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[23:50:08] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[23:55:47] *** Quits: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com) (Ping timeout: 265 seconds)
[23:58:36] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
