[00:02:16] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[00:02:18] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[00:02:55] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[00:03:25] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc6-git-38f80f4-Pogorze-Karpackie-CUSTOM-KERNEL)
[00:07:11] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:25:25] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[00:25:33] *** Joins: kensanata (~user@user/kensanata)
[00:32:04] *** Joins: deadmarshal_ (~deadmarsh@95.38.228.103)
[00:32:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[00:34:33] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[00:34:33] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[00:34:33] *** finn_elija is now known as FinnElija
[00:34:47] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:37:12] *** Quits: deadmarshal_ (~deadmarsh@95.38.228.103) (Ping timeout: 272 seconds)
[00:38:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[00:38:25] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[00:38:25] *** finn_elija is now known as FinnElija
[00:44:36] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 256 seconds)
[00:53:44] *** Joins: csrf (~csrf@user/csrf)
[01:02:27] *** Joins: ekathva__ (~ekathva@mobile-access-b04872-245.dhcp.inet.fi)
[01:04:34] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[01:05:05] *** Quits: ekathva_ (~ekathva@n14jrd0b036rtepea-1.v6.elisa-mobile.fi) (Ping timeout: 252 seconds)
[01:06:21] *** Joins: Trigon (~reuben@73.127.1.41)
[01:06:30] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[01:07:26] *** Joins: tejr (~tejr@user/tejr)
[01:09:50] *** Joins: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[01:09:52] *** Quits: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[01:10:05] *** Joins: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[01:12:15] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[01:12:17] *** Quits: Core3905 (~bscan@2600:380:8c7f:b351:b10e:2320:15c5:c389) (Ping timeout: 240 seconds)
[01:14:36] *** Quits: bs338 (~pi@host86-170-55-212.range86-170.btcentralplus.com) (Ping timeout: 240 seconds)
[01:19:01] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 272 seconds)
[01:26:03] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[01:26:33] *** Joins: bs338 (~pi@host109-153-209-160.range109-153.btcentralplus.com)
[01:35:01] *** Quits: ekathva__ (~ekathva@mobile-access-b04872-245.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:37:00] * GumbyPAN CPAN Upload: CGI-Ex-2.54 by CCM https://metacpan.org/release/CCM/CGI-Ex-2.54
[01:38:06] *** Joins: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net)
[01:38:43] <krismatrix> https://l.perl.bot/p/i93a63    
[01:38:44] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[01:39:11] *** Quits: DrHyde (~david@bytemark.barnyard.co.uk) (Ping timeout: 252 seconds)
[01:39:17] <krismatrix> Can I get help with the SQL statements in this perl functions? They seem right to me and the warn statements that follow the SQL statements show that I am passing the data. But they are not updating the dataase.
[01:39:18] *** Joins: DrHyde (~david@bytemark.barnyard.co.uk)
[01:39:41] <krismatrix> Similar code works directly when I just run it in SQL.
[01:43:54] <tirnanog> I'm no Mojo expert but the overall approach seems OK. perhaps add some debugging statements - maybe even exception handling code (unless you get to see exceptions interactively already).
[01:44:34] <krismatrix> how would I do exception handling
[01:45:08] <tirnanog> there's an example for query in the Mojo::Pg docs. you can also use Syntax::Keyword::Try or, if you have good fortune to be on 5.34, use experimental qw(try).
[01:45:22] <tirnanog> have the*
[01:45:55] <tirnanog> oh, actually it's shown for begin: https://docs.mojolicious.org/Mojo/Pg/Database#begin
[01:45:56] <Paperbot> Link title(s): [ Mojo::Pg::Database - Database ]
[01:46:08] <tirnanog> they employ eval there which, at least, works everywhere.
[01:47:23] <Grinnz> i would not recommend it, especially since it checks $@ improperly
[01:47:31] <Grinnz> always use try/catch when possible
[01:48:03] <tirnanog> I wouldn't use eval either but what should the check be?
[01:48:44] <Grinnz> try { ... } catch { say $@ } would be the equivalent
[01:48:57] <Grinnz> but less error prone and easier to add logic to
[01:49:13] <tirnanog> that's illegal syntax for try as implemented in 5.34, mind.
[01:49:23] <tirnanog> what was wrong with the check, though? is say $@ if $@ wrong?
[01:49:29] <Grinnz> yes, $@ can be false
[01:49:39] <tirnanog> ah.
[01:49:40] <Grinnz> if you're asking what's the proper way to use eval?
[01:49:50] <tirnanog> yes. you said the check was wrong so I was simply asking.
[01:49:56] <tirnanog> I haven't used eval in many years.
[01:50:00] <Grinnz> eval { ... } or say $@; in that case, since you don't need the eval return value
[01:50:06] <tirnanog> ah, right.
[01:50:07] <Grinnz> sorry
[01:50:11] <Grinnz> eval { ...; 1 } or say $@;
[01:50:16] <tirnanog> got it.
[01:50:52] <tirnanog> regarding try, you can't write catch without a parameter using the native implementation. I wouldn't mind if it were possible to do catch (undef) for cases where one is not interested in the content of the exception.
[01:50:53] <Grinnz> i usually write it as unless (eval {...; 1}) { say $@; } because i have more complex error handling
[01:51:17] <Grinnz> sure, try { ... } catch ($e) { say $e; } on newer SKT
[01:51:25] <tirnanog> and 5.34, yes.
[01:51:32] <krismatrix> is try catch a module?
[01:51:37] <Grinnz> reads better and doesn't abuse global vars, so it's better
[01:51:41] <tirnanog> it's both a module and something implemented natively in 53.4.
[01:51:43] <tirnanog> 5.334
[01:51:44] <Grinnz> yes. the ones tirnanog mentioned before
[01:51:46] <tirnanog> damn it.
[01:51:49] <tirnanog> you know what I mean :)
[01:52:12] <tirnanog> Syntax::Keyword::Try is king of the hill, as far as module-based solutions go.
[01:52:13] <Grinnz> https://metacpan.org/pod/Feature::Compat::Try is also a good way 
[01:52:14] <Paperbot> Link title(s): [ Feature::Compat::Try - make try/catch syntax available - metacpan.org ]
[01:52:21] <tirnanog> ah yes, and that.
[01:52:26] <Grinnz> which will use either of the things tirnanog mentioned depending what you have available
[01:52:26] <tirnanog> better still!
[01:53:00] <krismatrix> ok..confused with the wall of text.
[01:53:20] <krismatrix> do I use LeoNerd's module? the Feature::Compat::Try ?
[01:53:31] <tirnanog> lon story short: if you have 5.34, "use experimental qw(try);". otherwise, use Feature::Compat::Try.
[01:53:52] <tirnanog> that module is great because it will defer to the 5.34+ functionality if available.
[01:54:32] *** Quits: Juerd (juerd@computervrede.nl) (Ping timeout: 240 seconds)
[01:55:07] <tirnanog> and, as Grinnz has demonstrated, it's easy to get it wrong with eval. not to mention that the syntax isn't especially pleasant.
[01:55:24] <vms14> tirnanog: This is perl 5, version 34, subversion 0 (v5.34.0) built for x86_64-netbsd-thread-multi I have "just" that version
[01:55:44] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[01:55:57] <tirnanog> ah, netbsd. I've noticed that they do a commendable job of supporting perl in general.
[01:56:18] <vms14> tirnanog: perl is like the best supported language in this system
[01:56:41] <tirnanog> I've even benefited from that work while using macOS at times. joyent have binary pkgsrc repos.
[01:56:47] <tirnanog> good stuff.
[01:56:49] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:57:02] * GumbyPAN CPAN Upload: Unicode-ICU-0.04_05 by CPANEL https://metacpan.org/release/CPANEL/Unicode-ICU-0.04_05
[01:57:05] <vms14> other languages tend to fail, specially when they want to do ffi
[01:58:05] <vms14> yet you won't be able to install the whole cpan, but most packages are also in the netbsd repo as binary
[01:58:11] <tirnanog> yes, indeed.
[01:58:22] <tirnanog> the cpan coverage is pretty good by the standards of any platform I've seen.
[01:59:32] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[01:59:35] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[02:00:13] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:00:23] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[02:00:35] <krismatrix> hmmm...ok . i tried the 'try' method...but got no errors or warnings.
[02:00:41] *** Joins: lllh (~UPP@198.48.244.21)
[02:00:55] *** Joins: CycoCid (Kulrak@n122-109-114-101.rdl1.qld.optusnet.com.au)
[02:01:39] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[02:01:40] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[02:01:40] *** finn_elija is now known as FinnElija
[02:01:42] <krismatrix> https://l.perl.bot/p/5eho2p
[02:01:43] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[02:01:52] <krismatrix> The same code but now with the try catch stuff
[02:01:53] <Grinnz> netbsd smokers seem to have vanished, but used to give me lots of interesting fails on my FFI modules
[02:01:58] *** Joins: lucerne8 (~lucerne@ip202.ip-51-178-215.eu)
[02:02:25] *** Joins: vrurg_ (~vrurg@45.74.95.181)
[02:02:26] *** Joins: rake (~anomander@vps-e9abfd3d.vps.ovh.net)
[02:02:27] <Grinnz> krismatrix: how did you import try?
[02:02:30] *** Joins: samcv (~samcv@194.233.102.77)
[02:02:33] *** Joins: Te[u]K` (~teuk@2001:41d0:2:eb60::1)
[02:02:36] *** Joins: jayray_ (~jayray@user/jayray)
[02:02:38] <krismatrix> use Feature::Compat::Try;
[02:02:49] <tirnanog> krismatrix: is your stack set up such that you would even see anything emitted to stderr? that's kind of the point of using an exception handler to begin with; you have the opportunity to log exceptions in some other fashion.
[02:02:52] <Grinnz> should be ok then
[02:03:04] *** Joins: p71- (~p71@096-042-034-230.res.spectrum.com)
[02:03:11] <krismatrix> tirnanog ... no idea
[02:03:30] <krismatrix> I know that my warn statements do show up on screen.
[02:03:32] <tirnanog> ah.
[02:03:43] <tirnanog> ok, then so should have an exception in the first place. guess you're not getting any.
[02:04:07] *** Joins: Woodzy_ (~quassel@198.204.246.228)
[02:04:12] <krismatrix> Right...Basically the 'try' part is working because I see the warn in my try block.
[02:04:17] <vms14> Grinnz: usually languages assume they're in linux
[02:04:19] <krismatrix> I don't see the warns from my catch block.
[02:04:27] <vms14> or the linux folder hierarchy
[02:04:31] *** Joins: Paladin` (~paladin@S0106c0eae42a785d.vc.shawcable.net)
[02:04:37] <tirnanog> so none of the methods are throwing an exception presently and it's something else.
[02:04:43] *** Joins: cxreg2 (~count@63.228.111.44)
[02:04:47] <krismatrix> Actually ignore my last comments.
[02:04:48] *** Joins: ether_ (~ether@vps-6c71e929.vps.ovh.net)
[02:04:48] *** Joins: izzyb_ (izzyb@izzyb.host.thunderirc.net)
[02:04:48] *** Quits: ether_ (~ether@vps-6c71e929.vps.ovh.net) (Changing host)
[02:04:48] *** Joins: ether_ (~ether@perl/cpan-druid/ether)
[02:04:51] *** Joins: jjhoo_ (~jahakala@user/jjhoo)
[02:04:52] <vms14> and here in netbsd installed third party packages are in /usr/pkg/*
[02:04:58] *** Joins: ndorf_ (~nd@ob.noxio.us)
[02:05:02] <krismatrix> there are no warns withiin the try.
[02:05:07] *** Joins: Kanji (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[02:05:12] <Grinnz> vms14: not that sort of problem... ffi modules are direct compiled shared libraries
[02:05:19] *** Joins: kolcon1 (~kolcon@v.kolouch.org)
[02:05:23] <tirnanog> krismatrix: you might want to add some, just to follow the control flow.
[02:06:01] <tirnanog> although, I see that you have a few already.
[02:06:22] <Grinnz> the catch blocks will only fire if an exception is thrown in the try
[02:06:57] <tirnanog> it's a long shot but are you definitely operating on the database and table that you think you are? perhaps you are operating on something that was intended for testing.
[02:07:04] *** Quits: lllh (~UPP@198.48.244.21) (Quit: :::: ( UPP ) ::::)
[02:07:45] <krismatrix> I tested after moving the warn statements within the try{}. They do print on my screen.
[02:07:55] <krismatrix> As for the correct database....it should be.
[02:08:44] <tirnanog> also, it could just be that the WHERE clause just plain doesn't match. you can count the number of rows operated upon.
[02:09:33] <tirnanog> and/or Dumper the value conveyed to cus_id and check for yourself.
[02:09:44] *** Quits: bs338 (~pi@host109-153-209-160.range109-153.btcentralplus.com) (*.net *.split)
[02:09:44] *** Quits: Woodzy (~quassel@198.204.246.228) (*.net *.split)
[02:09:44] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (*.net *.split)
[02:09:44] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (*.net *.split)
[02:09:45] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (*.net *.split)
[02:09:45] *** Quits: lotharn (~kvirc@174-26-203-222.phnx.qwest.net) (*.net *.split)
[02:09:45] *** Quits: Dreadnaught (Kulrak@n122-109-114-101.rdl1.qld.optusnet.com.au) (*.net *.split)
[02:09:45] *** Quits: jjhoo (~jahakala@user/jjhoo) (*.net *.split)
[02:09:45] *** Quits: capn (~capn@user/capn) (*.net *.split)
[02:09:45] *** Quits: Te[u]K (teuk@teuk.org) (*.net *.split)
[02:09:45] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[02:09:45] *** Quits: llh (~UPP@user/llh) (*.net *.split)
[02:09:45] *** Quits: Paladin (~paladin@S0106c0eae42a785d.vc.shawcable.net) (*.net *.split)
[02:09:45] *** Quits: vrurg (~vrurg@45.74.95.181) (*.net *.split)
[02:09:45] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (*.net *.split)
[02:09:45] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[02:09:45] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[02:09:45] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (*.net *.split)
[02:09:45] *** Quits: perlmaros (~perlmaros@master.k-1.com) (*.net *.split)
[02:09:45] *** Quits: ndorf (~nd@ob.noxio.us) (*.net *.split)
[02:09:45] *** Quits: Bossi_ (~quassel@p5dc59ffc.dip0.t-ipconnect.de) (*.net *.split)
[02:09:45] *** Quits: sysdef_ (~sysdef@user/sysdef) (*.net *.split)
[02:09:45] *** Quits: Rich_ (~rich@nakts.net) (*.net *.split)
[02:09:45] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[02:09:45] *** Quits: anomander (~anomander@vps-e9abfd3d.vps.ovh.net) (*.net *.split)
[02:09:45] *** Quits: izzyb (izzyb@38.87.162.182) (*.net *.split)
[02:09:45] *** Quits: rednul (~rednul@mc.emailserverz.com) (*.net *.split)
[02:09:45] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[02:09:45] *** Quits: jayray (~jayray@user/jayray) (*.net *.split)
[02:09:45] *** Quits: cxreg (~count@63.228.111.44) (*.net *.split)
[02:09:45] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[02:09:45] *** Quits: samcv_ (~samcv@194.233.102.77) (*.net *.split)
[02:09:45] *** Quits: ether (~ether@perl/cpan-druid/ether) (*.net *.split)
[02:09:45] *** Quits: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[02:09:45] *** Quits: p71 (~p71@096-042-034-230.res.spectrum.com) (*.net *.split)
[02:09:47] *** lucerne8 is now known as lucerne
[02:09:54] *** Joins: capn (~capn@user/capn)
[02:10:05] *** jayray_ is now known as jayray
[02:10:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[02:11:30] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:12:35] *** Joins: whynot (~whynot@37.73.8.217)
[02:12:50] <tirnanog> use Data::Dump; warn "cus_id = ", Dumper $hash->{data}->{object}->{customer};
[02:13:02] <tirnanog> er, Data::Dumper
[02:14:18] <krismatrix> Why bother...it already prints the value.
[02:14:23] <krismatrix> without dumper.
[02:14:37] <krismatrix> The problem doesn't appear to be with the hash...it is with my query.
[02:14:38] <tirnanog> oh, I missed that.
[02:15:15] *** vrurg_ is now known as vrurg
[02:15:26] *** Joins: rednul (~rednul@mc.emailserverz.com)
[02:15:26] *** Joins: bs338 (~pi@host109-153-209-160.range109-153.btcentralplus.com)
[02:15:26] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[02:15:26] *** Joins: blinky42 (~quassel@user/blinky42)
[02:15:26] *** Joins: Pixi (~Pixi@user/pixi)
[02:15:26] *** Joins: perlmaros (~perlmaros@master.k-1.com)
[02:15:26] *** Joins: Bossi_ (~quassel@p5dc59ffc.dip0.t-ipconnect.de)
[02:15:26] *** Joins: sysdef_ (~sysdef@user/sysdef)
[02:15:26] *** Joins: Rich_ (~rich@nakts.net)
[02:15:26] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[02:16:10] <tirnanog> still, the point remains. if it's not throwing an exception, the most logical explanation would be that the WHERE clause impedes any rows from being updated or that you're writing the same field values as the row previously contained (granted, that doesn't seem likely).
[02:16:39] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:16:43] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[02:16:45] *** Quits: Artea- (~Lufia@artea.com.pt) (Quit: ZNC 1.6.2 - http://znc.in)
[02:16:54] <pragma-> 99%, if not all, of Perl documentation on eval just does `warn $@ if $@`. Even https://perldoc.perl.org/functions/eval uses that pattern. I'd say it's absurd and silly to do something like `die 0` or `die ""`.
[02:16:54] <Paperbot> Link title(s): [ eval - Perldoc Browser ]
[02:17:05] *** Joins: koolazer (~koo@user/koolazer)
[02:17:41] *** Joins: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[02:17:52] *** Joins: lotharn (~kvirc@174-26-203-222.phnx.qwest.net)
[02:19:14] <krismatrix> I am trying to do a basic SELECT statment...and even that is suddently not working.
[02:19:38] <krismatrix> I am wondering whether the fact that is supposed to be a webhook has something to do with it.
[02:20:35] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[02:20:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[02:20:36] *** finn_elija is now known as FinnElija
[02:30:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[02:31:30] <krismatrix> ok..i just tested that the SELECT query works and I see the data.
[02:31:54] <krismatrix> but the UPDATE's still don't work.
[02:32:59] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:33:39] *** Quits: pizdets_ (~pizdets@183.182.115.74) (Ping timeout: 256 seconds)
[02:33:46] *** Joins: pizdets (~pizdets@183.182.114.152)
[02:34:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:35:00] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:35:01] <Grinnz> pragma-: that's not how you get false $@, see the Try::Tiny docs for more info
[02:35:43] <Grinnz> (Try::Tiny isn't the best option now that we have SKT/the try feature, but it's still the best docs on the problems with eval)
[02:36:15] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:36:45] <Grinnz> also, 99% of perl documentation needs fixing in some way
[02:37:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:38:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:38:56] <pragma-> So, $@ potentially being false is due to a bug that has been fixed since 5.14.0?
[02:39:03] <Grinnz> partially
[02:39:11] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:39:12] <Grinnz> objects can also be false
[02:39:18] <Grinnz> also, not just one bug
[02:39:39] <pragma-> "$@ could also be an overloaded error object that evaluates to false, but that's asking for trouble anyway."
[02:39:59] <Grinnz> it is, but the number of times people end up in that situation accidentally is nonzero
[02:40:34] *** Quits: haj2 (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[02:40:37] <Grinnz> do you know how to use overload and avoid that problem?
[02:40:55] <Grinnz> (not a lot of people do)
[02:41:07] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:41:16] <pragma-> I don't use overload.
[02:41:18] *** Joins: haj1 (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[02:41:26] <Grinnz> (hint: it's why this policy exists https://metacpan.org/pod/Perl::Critic::Policy::Community::OverloadOptions )
[02:41:27] <Paperbot> Link title(s): [ Perl::Critic::Policy::Community::OverloadOptions - Don't use overload without specifying a bool o... ]
[02:41:47] <pragma-> I tend to not use much "magic".
[02:41:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:42:07] <Grinnz> error objects are required to use overload so they stringify
[02:42:15] <Grinnz> otherwise they aren't very useful
[02:42:37] <pragma-> Let me rephrase, then. Any magic I end up using is hidden away in someone else's module. :p
[02:43:01] <Grinnz> point is "yes it's increasingly less a problem, but it's easy to avoid so avoid it"
[02:43:08] <vms14> btw padre isn't working in netbsd
[02:43:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:43:28] <vms14> there's a binary and I've just pkg_add p5-Padre
[02:44:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:44:05] <vms14> but wants  Wx::Scintilla::Constant which I'm not able to install
[02:44:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[02:44:26] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 260 seconds)
[02:44:33] <vms14> I wanted to escape from emacs, but the world seems to not let me
[02:45:26] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:46:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:47:41] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:48:44] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:50:08] *** Quits: haj1 (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:50:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:51:00] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:52:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:53:39] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:55:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:55:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:57:10] <krismatrix> ah...The problem is not that my sql code is wrong. The problem is that I am expecting cs_ field to be set for the queries to work, but it isn't as quickly as the webhooks are being called.
[02:59:17] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[03:01:32] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Quit: I love you.)
[03:01:47] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[03:01:54] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[03:02:15] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[03:02:30] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[03:05:22] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Quit: polettix)
[03:05:28] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:05:57] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[03:06:02] <vms14> pragma-: you use perl, so you use magick
[03:06:06] *** Joins: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com)
[03:06:08] <vms14> magic*
[03:06:09] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[03:06:11] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:06:41] <vms14> perl is all about magic
[03:06:43] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[03:06:55] <vms14> also you are a pragma
[03:06:55] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[03:07:02] <vms14> magic stuff in perl
[03:07:17] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[03:07:42] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[03:08:14] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[03:08:29] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[03:08:54] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[03:09:16] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[03:15:29] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:20:15] <arcanez> how do I go about fixing "utf8 "\xFA" does not map to Unicode" when calling Encode::decode_utf("ú", Encode::FB_CROAK); (same as Encode::decode("UTF-8", "ú", Encode::FB_CROAK); .. "ú" is "Latin Small Letter U with Acute"
[03:23:14] <tirnanog> arcanez: you've inserted ú directly into your code, presumably in its UTF-8 encoded. as such, you'll need "use utf8" to inform perl that the source code should be treated accordingly.
[03:23:19] <tirnanog> encoded form*
[03:26:43] <tirnanog> actually no. it's probably the opposite, sorry. if you use the utf8 pragma, the sequence - as present in the source code - will already been decoded before being conveyed to decode. you can't UTF-8 decode that which has already been UTF-8 decoded.
[03:26:58] <arcanez> I have `use utf8;` in my test script, but in reality, the value is user input (the filename of an uploaded asset)
[03:27:26] <tirnanog> ok. still, the error message suggests that it's already been decoded to UTF-8 bytes at some I/O boundary.
[03:27:36] <tirnanog> in that case, it is correct to throw an exception.
[03:27:44] <arcanez> the code works without `use utf8;` 
[03:27:55] <tirnanog> I explained why just now.
[03:28:09] <tirnanog> utf8 only affects how source code is treated.
[03:29:08] <tirnanog> if you inject ú then the utf8 pragma will have it be decoded before Encode::decode gets hold of the value. you can't UTF-8 decode twice.
[03:32:00] <tirnanog> so, without "use utf8", the presence of this character in the source code will be treated as 0xc3 0xba. that's a value UTF-8 byte sequence and can thus be decoded by Encode. but if you do use that pragma, it already gets decoded to the codepoint U+00FA. you can't then proceed to decode that with Encode::decode. it's already been decoded.
[03:32:06] <tirnanog> valid*
[03:33:41] <tirnanog> keep in mind that this pragma does not affect encoding/decoding before in any other context. it only governs whether a decoding pass is peformed on the source code (within the given lexical scope).
[03:34:49] <arcanez> so it sounds like by the time the code is doing `Encode::decode_utf8(..)`, the data is already decoded
[03:35:03] *** Quits: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net) (Quit: Leaving)
[03:35:34] <arcanez> `use utf8;` and ú directly in the source was just to test..
[03:35:58] <tirnanog> right. you can reproduce the same error by passing "\N{U+FA}" as a value to be decoded.
[03:36:18] <tirnanog> whereas the UTF-8 bytes would instead be: "\xc3\xba"
[03:36:38] <arcanez> so Catalyst might be decoding the data prior.. thanks
[03:37:44] <tirnanog> yes. putting your test case aside, it sounds as though your input strings are already codepoints rather than UTF-8 bytes.
[03:40:32] <tirnanog> another possibility - which I sincerely hope is not the case - is that the input is in some other encoding, such as latin-1. note that "\xFA" is the correct byte sequence for that codepoint in latin-1.
[03:41:20] <tirnanog> even if that be the case, you have the option of decoding from latin-1. still, before making any changes, it's a good idea to try to figure out exactly where encoding/decoding occurs at every level of your application.
[03:41:50] <tirnanog> and, indeed, which encodings are being employed at every such boundary.
[03:49:22] *** Joins: Juerd (juerd@computervrede.nl)
[03:51:49] *** Joins: Figworm (FiggyWitIt@user/figworm)
[03:55:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:00:19] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:02:15] * GumbyPAN CPAN Upload: OpenAPI-Modern-0.023 by ETHER https://metacpan.org/release/ETHER/OpenAPI-Modern-0.023
[04:06:48] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:e5b0:929a:e104:6590) (Ping timeout: 250 seconds)
[04:06:50] *** Joins: Trigon (~reuben@73.127.1.41)
[04:13:03] *** Joins: jpn (~jpn@user/jpn)
[04:16:02] *** Joins: rgrinberg (~textual@177.244.18.30)
[04:21:40] *** Quits: jpn (~jpn@user/jpn) (Quit: leaving)
[04:27:41] *** Joins: gast0n (~g4570n@user/gast0n)
[04:30:01] *** Quits: rgrinberg (~textual@177.244.18.30) (Read error: Connection reset by peer)
[04:30:42] *** Joins: rgrinberg (~textual@177.244.18.30)
[04:54:11] *** Quits: Su-Shee (~Susanne@176-125-142-46.pool.kielnet.net) (Ping timeout: 256 seconds)
[04:55:32] *** Joins: Su-Shee (~Susanne@174-125-142-46.pool.kielnet.net)
[04:57:44] *** Quits: proller (~p@2a02:6b8:b081:b481::1:0) (Ping timeout: 252 seconds)
[05:01:50] *** Joins: semeion (~semeion@user/semeion)
[05:09:48] <Grinnz> arcanez: also use decode with 'UTF-8' or the Encode::Simple version of decode_utf8, not Encode::decode_utf8 - see its docs for the warnings
[05:10:39] <Grinnz> arcanez: and yes modern web frameworks tend to decode input for you. CGI.pm is a big exception
[05:10:47] <tirnanog> "utf8". one of perl's biggest mistakes.
[05:11:01] <Grinnz> tirnanog: exposing it as an "encoding" to use, anyway
[05:11:06] <tirnanog> <nod>
[05:11:21] <tirnanog> if it had been called anything else, that would have helped so much.
[05:11:35] <tirnanog> "perlinternal" :D
[05:11:59] *** Joins: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net)
[05:12:28] <tirnanog> that module deserves to be core, if you ask me.
[05:12:43] <Grinnz> what module?
[05:12:46] <tirnanog> yours.
[05:13:52] <Grinnz> maybe one day they'll take my suggestions :)
[05:14:51] <tirnanog> as Larry said, easy things should be easy, and hard things possible.
[05:21:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[05:21:41] *** Joins: monkey_ (~user@190.104.116.153)
[05:22:47] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:24:42] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[05:25:14] *** Quits: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:28:22] <gordonfish> [OT/Shower Thought] If many east asian cultures avoid using the symbol for the number 4 in things like elevators, product names, etc, due it look very close to the symbol for death, why don't they just introduce a new symbol for the number 4 that /doesn't/ look like the one for death? I'm quite curious how this hasn't been done sometime ago. New, unique symbol, problem should be solved.
[05:30:38] <vms14> gordonfish: reinventing stuff is forbidden
[05:30:39] <vms14> sorry
[05:30:50] <vms14> we patch stuff instead and shoot in our feet
[05:31:13] <vms14> welcome to our world
[05:31:57] <gordonfish> err, what
[05:31:59] <vms14> just use existing stuff and help us to live with things that were invented 20 years ago
[05:32:10] <vms14> or more
[05:32:48] <gordonfish> Then what about all those cars and eletronics that come out of there?
[05:32:58] <vms14> if you try to redesign stuff we'll blame you to death
[05:33:29] <vms14> that stuff is not allowed for mere mortals
[05:33:43] <vms14> mortals aren't allowed to reinvent nor think
[05:34:43] <gordonfish> Superstition or not, blacklisting a number just feels kinda... silly
[05:34:56] <pragma-> no 13th floors!
[05:35:30] <gordonfish> pragma-: In places like Vegas, sure, but there are a lot of places in the US that have a 13th floor in regular buildings
[05:35:50] <gordonfish> We don't outright shun 13th whole sale
[05:35:55] <gordonfish> 13*
[05:36:38] *** Quits: Su-Shee (~Susanne@174-125-142-46.pool.kielnet.net) (Ping timeout: 260 seconds)
[05:37:21] <gordonfish> We had Apollo 13, Friday the 13th (at least 13 of them!), Ocean's 13
[05:38:10] <gordonfish> I once sat in a seat numbered 13 at a stadium, and I'm sure I've seen see a row 13 on planes before
[05:38:14] *** Joins: Su-Shee (~Susanne@i5E8613A6.versanet.de)
[05:38:32] <gordonfish> s/see a/a/
[05:39:20] <gordonfish> I've seen race cars and track runners and sports jerseys with the number 13
[05:39:58] <gordonfish> But you wont find anyone using 4 in a public facing way in japan, china, korea, etc
[05:49:10] <vms14> gordonfish: well in first time it has no sense to avoid a number just because resembles something
[05:49:27] <vms14> so any action that comes before that it's likely won't have sense 
[05:52:55] <vms14> but in their culture it has sens
[05:53:36] <vms14> because their culture has a lot of mysticysm and weird rules regarding luck and alike
[05:54:29] <vms14> for example they pay to a witch to know how their children should be named
[05:54:39] <vms14> and when has to born to have a nice life
[05:55:24] <vms14> when they go to a house they pray to the ancestors of that house in 4 times and directions and then they can start moving to that house
[05:55:53] <gordonfish> Curious
[05:56:39] <vms14> and more stuff, here there is people who has similar beliefs and fears stuff but it's not something common in our culture
[05:57:52] <vms14> but there is something your parents teach and ensure you do
[05:57:56] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[05:58:05] <gordonfish> Well you have fortune tellers, hand line readers, card readers, etc, who are generally regarded as fakes and frauds, so that would be one source of people looking into things like that with a skeptical eye
[05:58:27] <gordonfish> (in the west that is)
[05:58:36] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[05:58:40] <vms14> yes, but they're not part of our culture, that's why yyou refer them as fake and frauds
[05:58:51] <vms14> instead there they're needed
[05:59:37] <vms14> you learned all those rules and you'll be willing to obey all of them as that's how you'll think the stuff is done
[06:00:49] <vms14> if you want to be successful you have to do all this stuff and pay some "expert" to help and guide you
[06:01:07] <vms14> maybe this is why we aren't successful :D
[06:04:16] *** Quits: MasterOfMagic (~magnets@turnpike.bastards.stream) (Quit: Goodbye)
[06:05:02] *** Joins: MasterOfMagic (~magnets@turnpike.bastards.stream)
[06:05:17] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 272 seconds)
[06:17:28] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0d13-db80-1316-2ed6.res6.spectrum.com)
[06:25:29] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:26:31] * GumbyPAN CPAN Upload: DBD-SQLite-1.71_06 by ISHIGAKI https://metacpan.org/release/ISHIGAKI/DBD-SQLite-1.71_06
[06:33:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[06:35:55] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:38:51] *** Quits: whynot (~whynot@37.73.8.217) (Quit: leaving)
[06:39:18] <arcanez> is there a way to determine if my input is already decoded?
[06:39:52] *** Joins: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com)
[06:42:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[06:43:32] <tirnanog> you shouldn't try to guess based on heuristics, other than for debugging purposes. that being said, printf '%vX', $str is quite useful. it will print the actual codepoints and, from studying and understanding those, you can get an idea of whether you're looking at a particular encoding (bytes) or string that consists only of codepoints.
[06:45:30] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:46:48] <arcanez> looks like whoever wrote the initial code characterized `Wide character at ..` error as already decoded
[06:47:17] <tirnanog> it doesn't prove it, but one would hope so. obviously byte values can't legally be above 255 (FF).
[06:47:52] <tirnanog> if the application were somehow mixing byte encodings with wide characters (ordinary codepoints), you'd have a major problem on your hands.
[06:47:58] *** Quits: vms14 (~vms14@29.red-79-153-202.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[06:49:56] <tirnanog> with a bit of practice, you get a feel for how commonly used encodings manifest themselves. if you're not used to spotting utf-8 bytes, see https://man.archlinux.org/man/utf-8.7#Encoding
[06:49:56] <Paperbot> Link title(s): [ utf-8(7) — Arch manual pages ]
[06:51:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:52:41] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[06:53:25] <tirnanog> sweval: use Encode::Simple 'decode_utf8'; my $bytes = "\xe2\x98\x83"; my $characters = "\N{U+2603}"; my $decoded_bytes = decode_utf8($bytes); [ map { sprintf '%vX', $_ } $bytes, $characters, $decoded_bytes ]
[06:53:29] <perlbot> tirnanog: ["E2.98.83",2603,2603]
[06:57:39] <tirnanog> basically, if you see a byte sequence that leads with a byte >= 0x80, it's not ascii. utf-8 and latin1 are probably the two encodings most likely to be encountered in the wild.
[06:58:58] <tirnanog> but, unfortunately, to make that inference, you also have to know you're looking at bytes. as I say, it takes some practice. if you're not able to fully reason with a given application, sometimes coercing it into processing 'high' codepoints and seeing what you get on the wire can be instructive.
[07:01:43] *** Joins: deadmarshal_ (~deadmarsh@95.38.118.140)
[07:04:52] <tirnanog> see, also, Encode::Guess and encguess. again, you don't want to rely on heuristics in production, but they could be useful for debugging.
[07:04:58] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Remote host closed the connection)
[07:05:29] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:953b:b3a2:451c:224e)
[07:13:28] *** Quits: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net) (Quit: Leaving)
[07:21:59] <rindolf> tirnanog++
[07:23:31] *** Quits: Manderson (~manderson@173.241.174.143) (Remote host closed the connection)
[07:24:19] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[07:29:00] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Ping timeout: 252 seconds)
[07:29:39] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:29:39] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:29:39] *** finn_elija is now known as FinnElija
[07:35:39] *** Joins: Martchus (~martchus@dynamic-095-115-041-197.95.115.pool.telefonica.de)
[07:36:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[07:36:42] *** Quits: Martchus_ (~martchus@dynamic-095-115-084-241.95.115.pool.telefonica.de) (Ping timeout: 252 seconds)
[07:37:16] *** Joins: tejr (~tejr@user/tejr)
[07:45:43] *** Joins: Guest60 (~Guest60@150.116.46.158)
[07:49:28] *** Joins: monkey_ (~user@190.104.116.153)
[07:50:55] *** Joins: frost (~frost@user/frost)
[07:54:48] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[07:55:21] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[07:59:22] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[08:04:23] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:06:04] *** Quits: Guest60 (~Guest60@150.116.46.158) (Quit: Client closed)
[08:13:22] *** Joins: rgrinberg (~textual@177.244.18.30)
[08:15:44] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[08:18:52] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[08:24:36] *** Quits: rando25892 (~homefame@user/rando25892) (Ping timeout: 272 seconds)
[08:35:17] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[08:44:06] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (Quit: The BNC has broken!)
[08:49:20] *** Quits: odc (sid197788@id-197788.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[08:49:20] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 250 seconds)
[08:49:20] *** Quits: stephen87 (sid33834@user/stephen87) (Ping timeout: 250 seconds)
[08:49:46] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[08:50:04] *** Quits: davebaker_ (sid143727@id-143727.lymington.irccloud.com) (Read error: Connection reset by peer)
[08:50:04] *** Quits: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com) (Read error: Connection reset by peer)
[08:50:05] *** Quits: patterner___ (sid212303@id-212303.ilkley.irccloud.com) (Read error: Connection reset by peer)
[08:50:05] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (Read error: Connection reset by peer)
[08:50:06] *** Quits: mruszczyk (sid160336@id-160336.tinside.irccloud.com) (Read error: Connection reset by peer)
[08:50:06] *** Quits: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com) (Read error: Connection reset by peer)
[08:50:06] *** Quits: timeless (sid4015@id-4015.ilkley.irccloud.com) (Read error: Connection reset by peer)
[08:50:07] *** Quits: Grinnz (sid183254@id-183254.hampstead.irccloud.com) (Read error: Connection reset by peer)
[08:50:12] *** Joins: davebaker_ (sid143727@id-143727.lymington.irccloud.com)
[08:50:12] *** Joins: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com)
[08:50:13] *** Joins: patterner___ (sid212303@id-212303.ilkley.irccloud.com)
[08:50:14] *** Joins: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com)
[08:50:17] *** Joins: odc (sid197788@id-197788.helmsley.irccloud.com)
[08:50:18] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[08:50:22] *** Joins: mruszczyk (sid160336@id-160336.tinside.irccloud.com)
[08:50:23] *** Joins: timeless (sid4015@id-4015.ilkley.irccloud.com)
[08:50:25] *** Joins: stephen87 (sid33834@user/stephen87)
[08:50:31] *** Joins: BlueShark (sid10311@user/blueshark)
[08:50:32] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[08:50:32] *** Joins: Grinnz (sid183254@id-183254.hampstead.irccloud.com)
[08:51:56] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 250 seconds)
[08:54:27] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[08:55:38] *** Quits: Pali (~pali@user/pali) (Ping timeout: 272 seconds)
[08:57:47] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[09:07:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:13:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[09:16:15] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 252 seconds)
[09:18:31] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[09:20:18] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:20:56] *** Joins: rgrinberg (~textual@177.244.18.30)
[09:26:36] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 250 seconds)
[09:28:13] *** Joins: _tuttza_ (~zach@47.153.99.149)
[09:31:10] *** Joins: Darkcoal (~user@user/Darkcoal)
[09:43:45] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 252 seconds)
[09:45:42] *** Joins: Darkcoal (~user@user/Darkcoal)
[09:49:17] *** Quits: kevin-oculus (~kevin-ocu@c188-149-14-10.bredband.tele2.se) (Ping timeout: 240 seconds)
[09:58:02] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[09:59:23] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:953b:b3a2:451c:224e) (Ping timeout: 256 seconds)
[10:04:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[10:07:41] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Remote host closed the connection)
[10:11:30] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[10:20:19] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:20:38] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:39:00] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[10:46:08] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Quit: polettix)
[10:46:58] * GumbyPAN CPAN Upload: Data-Password-Top10000-1.0.0 by PERLSRVDE https://metacpan.org/release/PERLSRVDE/Data-Password-Top10000-1.0.0
[10:49:36] *** Quits: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:05:48] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:14:34] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Quit: polettix)
[11:15:00] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:15:20] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:15:51] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:16:07] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:16:32] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:16:54] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:17:24] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:17:40] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:18:15] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:18:27] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:19:01] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:19:14] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:19:35] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:20:00] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:20:21] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:20:48] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:21:23] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:21:34] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:22:09] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:22:21] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:22:56] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:23:08] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:23:42] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:23:54] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[11:23:59] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:24:50] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[11:26:46] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Remote host closed the connection)
[11:26:53] *** Joins: ovid (~ovid@lfbn-mar-1-584-173.w109-208.abo.wanadoo.fr)
[11:28:02] *** Joins: R2robot_ (~R2robot@user/r2robot)
[11:28:15] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 252 seconds)
[11:29:51] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:31:46] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[11:43:36] *** R2robot_ is now known as R2robot
[11:50:55] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:57:08] *** Joins: ovid_ (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[11:59:56] *** Quits: ovid (~ovid@lfbn-mar-1-584-173.w109-208.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[12:02:06] * GumbyPAN CPAN Upload: Math-MPC-1.15 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-MPC-1.15
[12:04:23] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[12:05:20] *** Joins: kevin-oculus (~kevin-ocu@c188-149-14-10.bredband.tele2.se)
[12:10:12] *** Joins: jpn (~jpn@user/jpn)
[12:12:01] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 245 seconds)
[12:18:37] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:18:51] *** Quits: Lartza (lartza@user/lartza) (Quit: Quit)
[12:19:21] *** Quits: deadmarshal_ (~deadmarsh@95.38.118.140) (Ping timeout: 256 seconds)
[12:19:25] *** Joins: deadmars- (~deadmarsh@95.38.119.200)
[12:19:55] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Quit: polettix)
[12:29:33] *** Joins: ovid (~ovid@lfbn-mar-1-584-173.w109-208.abo.wanadoo.fr)
[12:29:33] *** Quits: ovid_ (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Read error: Connection reset by peer)
[12:30:04] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[12:30:51] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Remote host closed the connection)
[12:35:34] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:36:41] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[12:36:59] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:39:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:40:49] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[12:41:07] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[12:52:37] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 250 seconds)
[13:01:59] *** Joins: ovid_ (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[13:03:19] *** Joins: ovid__ (~ovid@lfbn-mar-1-584-173.w109-208.abo.wanadoo.fr)
[13:04:06] *** Quits: ovid (~ovid@lfbn-mar-1-584-173.w109-208.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[13:04:37] *** Quits: ovid_ (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Remote host closed the connection)
[13:25:26] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[13:30:03] *** Joins: jpn (~jpn@user/jpn)
[13:34:23] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[13:35:49] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[13:38:03] *** Quits: ovid__ (~ovid@lfbn-mar-1-584-173.w109-208.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[13:41:21] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[13:41:49] *** Joins: jpn (~jpn@user/jpn)
[13:43:33] *** Quits: _tuttza_ (~zach@47.153.99.149) (Ping timeout: 252 seconds)
[13:44:38] *** Quits: Su-Shee (~Susanne@i5E8613A6.versanet.de) (Ping timeout: 252 seconds)
[13:46:25] *** Joins: Su-Shee (~Susanne@188-125-142-46.pool.kielnet.net)
[13:46:52] *** Joins: Adoi (~Adoi@user/adoi)
[13:51:52] *** Parts: Adoi (~Adoi@user/adoi) (Leaving)
[13:52:17] *** Joins: Adoi (~Adoi@user/adoi)
[13:52:36] *** Parts: Adoi (~Adoi@user/adoi) ()
[13:57:27] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[13:58:46] *** Joins: pucara (~i@host112.190-139-217.telecom.net.ar)
[14:04:08] *** Joins: ovid_ (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr)
[14:04:08] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Read error: Connection reset by peer)
[14:04:26] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[14:05:47] *** Quits: ovid_ (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr) (Read error: Connection reset by peer)
[14:07:53] *** Joins: ovid_ (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr)
[14:08:33] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[14:09:35] *** Joins: martinus__ (~martin@92.29.201.77.rev.sfr.net)
[14:15:41] *** Joins: _tuttza_ (~zach@47.153.99.149)
[14:18:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:19:22] *** Joins: Lartza_ (lartza@user/lartza)
[14:21:29] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[14:24:17] *** Quits: _tuttza_ (~zach@47.153.99.149) (Remote host closed the connection)
[14:28:22] *** Joins: frost (~frost@user/frost)
[14:37:56] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:38:16] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[14:50:30] *** Joins: Pali (~pali@user/pali)
[14:57:20] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[14:57:55] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[15:00:56] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[15:01:23] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[15:01:28] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:02:45] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[15:03:17] *** Quits: Su-Shee (~Susanne@188-125-142-46.pool.kielnet.net) (Ping timeout: 252 seconds)
[15:03:54] *** Lartza_ is now known as 047AAH2J2
[15:04:19] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[15:04:22] *** 047AAH2J2 is now known as Lartza
[15:04:44] *** Joins: Su-Shee (~Susanne@88-110-142-46.pool.kielnet.net)
[15:05:26] *** Joins: jpn (~jpn@user/jpn)
[15:08:40] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[15:09:34] *** Joins: kiras (~kiras@176.103.56.119.adsl.inet-telecom.org)
[15:13:10] *** Quits: pucara (~i@host112.190-139-217.telecom.net.ar) (Quit: Lost terminal)
[15:16:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[15:24:46] *** Quits: capn (~capn@user/capn) (Quit: Later!)
[15:27:37] *** Quits: kiras (~kiras@176.103.56.119.adsl.inet-telecom.org) (Changing host)
[15:27:37] *** Joins: kiras (~kiras@user/kiras)
[15:27:59] *** Quits: kiras (~kiras@user/kiras) (Quit: Leaving)
[15:28:15] *** Joins: kiras (~kiras@user/kiras)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:17] *** Joins: proller (~p@80.240.216.69)
[15:30:58] *** Joins: csrf (~csrf@user/csrf)
[15:33:00] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:34:21] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:35:32] *** Joins: capn (~capn@user/capn)
[15:38:12] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:39:16] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[15:40:09] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[15:44:31] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[15:57:30] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[15:58:44] *** Joins: jpn (~jpn@user/jpn)
[16:04:13] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Quit: polettix)
[16:05:31] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[16:06:26] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[16:06:33] * GumbyPAN CPAN Upload: DNS-Unbound-0.29 by FELIPE https://metacpan.org/release/FELIPE/DNS-Unbound-0.29
[16:06:49] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[16:06:56] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[16:07:47] *** Joins: jpn (~jpn@user/jpn)
[16:10:18] *** Quits: ovid_ (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr) (Remote host closed the connection)
[16:12:03] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[16:20:01] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:21:26] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[16:25:48] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Ping timeout: 252 seconds)
[16:28:40] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[16:31:51] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:34:47] *** Joins: Woodzy (~quassel@198.204.246.228)
[16:34:48] *** Quits: Woodzy_ (~quassel@198.204.246.228) (Ping timeout: 272 seconds)
[16:41:03] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[16:41:56] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[16:43:30] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[16:43:48] *** Joins: cation (cation@user/cation)
[16:43:55] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:44:19] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[16:45:04] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[16:48:54] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[16:55:54] *** Joins: jpn (~jpn@user/jpn)
[17:01:36] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[17:04:00] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[17:06:13] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:07:38] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[17:08:26] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Read error: Connection reset by peer)
[17:08:32] *** Joins: ovid_ (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[17:13:38] *** Quits: Adura (~Adura@user/adura) (Quit: Quit)
[17:15:45] *** Joins: jpn (~jpn@user/jpn)
[17:21:04] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[17:28:03] *** Joins: tobybl_ (~tobybl@227.192.115.87.dyn.plus.net)
[17:28:51] <ovid_> Anyone seen this bug before with Mojolicious::Plugin::OpenAPI? https://github.com/jhthorsen/mojolicious-plugin-openapi/issues/233
[17:28:52] <Paperbot> Link title(s): [ Can't call method "validator" on an undefined value · Issue #233 · jhthorsen/mojolicious-plugin-o... ]
[17:30:07] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[17:30:38] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Ping timeout: 250 seconds)
[17:31:42] * GumbyPAN CPAN Upload: Git-Critic-0.7 by OVID https://metacpan.org/release/OVID/Git-Critic-0.7
[17:32:03] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:32:36] *** Quits: tobybl_ (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[17:39:38] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[17:39:38] *** Quits: ovid_ (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Remote host closed the connection)
[17:40:43] *** Quits: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da) (Read error: Connection reset by peer)
[17:40:58] *** Joins: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da)
[17:42:12] *** Joins: jpn (~jpn@user/jpn)
[17:43:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[17:49:23] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[17:55:53] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Remote host closed the connection)
[17:58:03] *** Joins: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net)
[17:58:43] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[17:59:22] <krismatrix> What is with Mojo::Pg or perhaps whatever modules that it draws from where if I do a $result = $db->query("some query"); and then do print $result->hashes; , I cannot use $result->hashes multiple times?
[18:04:23] *** Joins: jpn (~jpn@user/jpn)
[18:11:11] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 245 seconds)
[18:14:57] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:16:00] *** Joins: ovid_ (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr)
[18:16:22] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Read error: Connection reset by peer)
[18:19:12] *** Quits: ovid_ (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr) (Remote host closed the connection)
[18:21:28] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[18:22:46] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Remote host closed the connection)
[18:24:48] <rewt> krismatrix, looks like ->hashes fetches the rows and returns a Mojo::Collection, and once all results are fetched, there are no more to fetch:  https://metacpan.org/pod/Mojo::Pg::Results#hashes
[18:24:48] <Paperbot> Link title(s): [ Mojo::Pg::Results - Results - metacpan.org ]
[18:26:48] * GumbyPAN CPAN Upload: PDL-VectorValued-1.0.16 by MOOCOW https://metacpan.org/release/MOOCOW/PDL-VectorValued-1.0.16
[18:28:30] <simcop2387> krismatrix: if you were to compare it to the way DB interfaces work in python or many other places, the $results act like a cursor from the database.  the results are ready to be grabbed, but once you've grabbed them you have to rerun the query.  there might be a way to reset the statement handle though
[18:28:50] <simcop2387> i'm looking right now at the dbd pg source to determine if that's the case
[18:29:40] <simcop2387> actually looks like it does end up using dbi statement handles even with mojo pg
[18:29:41] <krismatrix> I guess it is ok. I just rant into a problems because I wanted to use Dumper($result->hashes) while testing to make sure I understood what I was getting and then $result->hash->{username} and it gives errors.
[18:29:50] <krismatrix> So that part causes me grief at times.
[18:30:41] <ology> Since you are debugging when it happens, can you save the $result->hashes to a temporary var and dumpe that without touching hashes?
[18:31:46] <simcop2387> yea no way to rerun a statement handle even if you were to manipulate it manually.  so you just have to rerun it all.  at least i see no interface on the source to let you do that.  might be some convoluted way to do it but i don't think i can recommend then
[18:35:25] <ology> s/->hashes//
[18:38:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:41:46] *** Joins: Core2420 (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[18:41:47] *** Quits: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[18:42:51] *** Joins: bscan (~bscan@2600:380:8c39:985e:2934:193d:a7b5:ad12)
[18:43:43] <krismatrix> Yeah...there are work arounds by storing to a variable. Just less convenient because I am adding variables and lines of code and i may end up missing it when I remove it and introduce other bugs...whereas being able to say warn "xxxx" means I can just search for warn statements and make sure to remove them in my code.
[18:45:13] <krismatrix> I guess what I should probably do is just do $result = $db->query("SQL STATEMENT")->hashes; all the time...and when my warn statements just have to act on $result and I guess $result->{somevalue} might work.
[18:46:02] *** Quits: Core2420 (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[18:48:36] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[18:49:59] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Remote host closed the connection)
[18:50:32] *** Joins: ovid (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr)
[18:53:33] *** Quits: CycoCid (Kulrak@n122-109-114-101.rdl1.qld.optusnet.com.au) (Quit: Leaving)
[18:54:19] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[18:55:57] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[18:56:46] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Quit: polettix)
[18:57:21] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[18:57:22] *** Joins: Kulrak (~Kulrak@n122-109-114-101.rdl1.qld.optusnet.com.au)
[18:57:33] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[18:57:57] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[18:58:07] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[18:58:19] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[18:58:50] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[18:58:50] *** Joins: jpn (~jpn@user/jpn)
[18:59:06] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[18:59:41] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[18:59:53] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[19:00:15] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[19:00:39] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[19:01:12] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[19:01:26] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[19:01:47] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[19:02:11] *** Joins: Tempesta (~Tempesta@user/tempesta)
[19:02:13] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[19:02:33] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[19:03:00] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[19:03:00] *** Quits: perldoc (~perldoc@24.88.46.213) (Read error: Connection reset by peer)
[19:03:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0d13-db80-1316-2ed6.res6.spectrum.com) (Ping timeout: 240 seconds)
[19:03:48] *** Quits: ovid (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr) (Remote host closed the connection)
[19:04:16] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[19:04:50] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[19:05:49] *** Joins: perldoc (~perldoc@2603-6081-6402-7816-0000-0000-0000-0d8f.res6.spectrum.com)
[19:08:14] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[19:11:01] *** Joins: gast0n (~g4570n@user/gast0n)
[19:12:25] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:953b:b3a2:451c:224e)
[19:15:51] *** Quits: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da) (Ping timeout: 256 seconds)
[19:16:09] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0d13-db80-1316-2ed6.res6.spectrum.com)
[19:22:42] <krismatrix> In Mojo is there some way to remove html comments? I have some blocks of commented out code that I don't want visible even when the user does a view source in production. I am wondering what you guys do.
[19:27:04] <simcop2387> krismatrix: i'm not sure of one that exists right now, but you can probably make a mojolicious plugin that can do that kind of filtering.  https://metacpan.org/pod/Mojolicious::Plugin::Text::Minify this might be a good place to start figuring out how to do it
[19:27:05] <Paperbot> Link title(s): [ Mojolicious::Plugin::Text::Minify - remove HTML indentation on the fly - metacpan.org ]
[19:28:00] <krismatrix> It seems to only remove whitespace. It won't remove comments.
[19:28:01] <simcop2387> krismatrix: probably switch it over to https://metacpan.org/pod/HTML::Packer
[19:28:02] <Paperbot> Link title(s): [ HTML::Packer - Another HTML code cleaner - metacpan.org ]
[19:28:18] <krismatrix> And I don't presently understand how to make plugin with mojo. The tutorial doesn't make sense to me.
[19:28:48] <simcop2387> krismatrix: look at the source of ::Text::Minify there, it's very very small
[19:30:18] <simcop2387> i am surprised though that there isn't a ready made plugin for that though
[19:30:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:31:07] <krismatrix> is register() and a function that ALL plugin's must have or something?
[19:33:09] <simcop2387> pretty much.  sub register($self, $app, $conf) is the function that gets called when a mojolicious app does the whole: plugin 'plugin_name', {config=>'here'}; thing.  and then the plugins just do stuff to the mojolicious $app.  in this case it sets up a hook for when rendering is finished, and then changes the output of the rendering
[19:33:38] <krismatrix> so...what is a hook?
[19:34:08] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 250 seconds)
[19:34:26] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[19:34:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 245 seconds)
[19:35:03] <simcop2387> krismatrix: trying to find a good explination of that idea, one sec
[19:35:12] <krismatrix> no problem.
[19:36:00] <simcop2387> https://docs.mojolicious.org/Mojolicious#HOOKS has a list of them and when they happen.  basically a hook is how you can do something when an event during a request and response happens inside mojolicious. 
[19:36:00] <Paperbot> Link title(s): [ Mojolicious - Real-time web framework ]
[19:36:23] <krismatrix> i mean I recently ran code to utilize stripe webhook, but I understand that as simply to mean write a route function and tell stripe to call that route when doing callbacks.
[19:37:10] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[19:38:33] <simcop2387> in this case it's not a webhook, but it's a similar idea.  mojolicious will call all the hooks that have been set up when an event happens while it processes each request coming in.  so the after_render hook will let you do something every time a page is rendered.  in this case you'd check if it's html and then use something like HTML::Packer to remove the comments and maybe do other minification
[19:38:38] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[19:38:39] <simcop2387> of the output (like remove extra whitespace)
[19:38:54] *** Joins: monkey_ (~user@190.104.116.153)
[19:39:17] <krismatrix> Ah. Interesting. 
[19:39:24] <simcop2387> and then as the text minify plugin showed before, you can just only enable the whole thing when running in production mode.  that way in development mode you still get to see all the comments and whitespace, so that you can better see what the template rendering was doing
[19:40:30] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 252 seconds)
[19:42:21] <krismatrix> Where do you store plugin scripts in the mojo full app?
[19:42:31] <krismatrix> in my_app/lib/MyApp/Controller/ ?
[19:43:05] <simcop2387> you'd make something like lib/MyApp/Plugin/MinifyHtml.pm
[19:43:34] <krismatrix> and where would load the plugin? in lib/MyApp.pm ?
[19:46:45] <zgu> does Archive::Tar have a simple way to add a file but store it with a "local" path (just ->basename or possibly some other arbitrary name)?
[19:46:56] <krismatrix> And really...do I even need a plugin. Can't i just have a hook in lib/MyApp.pm $self->hook(before_render => sub {..}); Where the function minifies and removes comments the html? 
[19:47:00] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[19:47:03] *** Joins: proller (~p@2a02:6b8:b081:b65a::1:2b)
[19:47:32] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[19:48:51] <krismatrix> I don't understand why the Text::Minify does after_render. If it is already rendered, what would be the point.
[19:49:21] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[19:52:42] *** Joins: jpn (~jpn@user/jpn)
[19:54:05] *** Joins: ovid_ (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr)
[19:54:06] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Read error: Connection reset by peer)
[19:58:11] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 268 seconds)
[19:58:49] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[19:59:32] <zgu> best i can do is... create an Archive::Tar::File and call ->rename(). which seems to do an extra in-memory copy of the file data when i add_files it
[19:59:55] *** Joins: clf059 (~clf059@212.102.46.25)
[20:06:29] <simcop2387> krismatrix: $output in the after_render hook is a scalar reference.  you can change the contents of it.  that's what the $$output = Text::Minify...($$output) part does.  it dereferences it, passes it to Text::Minify, and then replaces the content of $$output with the new content
[20:06:41] <simcop2387> that's why it has to run *AFTER* the rendering.  it needs the rendered output to work.
[20:07:04] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[20:07:35] *** Joins: Core7526 (~bscan@2600:380:8c39:985e:e51c:ff5c:6383:4b7)
[20:07:56] *** Joins: Core6938 (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[20:09:55] <simcop2387> krismatrix: the reason to do it this way is that then it doesn't depend on how the rendering happens, just what the format of it is.  that way the way your templates are written doesn't affect the removal of the comments
[20:10:54] *** Joins: thrig (~thrig@207.108.197.156)
[20:11:00] *** Quits: bscan (~bscan@2600:380:8c39:985e:2934:193d:a7b5:ad12) (Ping timeout: 240 seconds)
[20:11:07] <simcop2387> eval: use HTML::Packer;
[20:11:11] <perlbot> simcop2387: ERROR: Can't locate HTML/Packer.pm in @INC (you may need to install the HTML::Packer module) (@INC contains: $BLEAD/lib/site_perl/5.35.9/x86_64-linux $BLEAD/lib/site_perl/5.35.9 $BLEAD/lib/5.35.9/x86_64-linux $BLEAD/lib/5.35.9) at (IRC) line 1. BEGIN failed--compilation aborted at (IRC) line 1. 
[20:11:50] *** Quits: Core7526 (~bscan@2600:380:8c39:985e:e51c:ff5c:6383:4b7) (Ping timeout: 250 seconds)
[20:12:24] <krismatrix> not sure i entirely follow. But i guess it doesn't need a plugin right. I could just add a $self->hook() in lib/MyApp.pm
[20:12:35] <simcop2387> eval: my $html = "<blah>blah blah blah <!-- eat my shorts --> blah blah blah</blah>"; sub remove_comments {my ($output) = @_; $$output =~ s/<!--.*-->//g;} remove_comments(\$html); $html
[20:12:37] <perlbot> simcop2387: <blah>blah blah blah  blah blah blah</blah>
[20:12:44] <simcop2387> possibly, i've not done it that way
[20:13:37] <simcop2387> that eval there is essentially how the after_render hook is working, it gets passed \$output so that the hook can alter the contents of the renderer
[20:16:16] <zgu> oh that's pathetically beyond useless. the only perl package QNAP has for ARM systems is 5.10
[20:17:13] <zgu> wait no it has 5.20 installed
[20:17:14] <zgu> what
[20:17:56] <zgu> where the hell are the files for the perl 5.10 app that's supposedly installed
[20:20:36] *** Joins: clf059_ (~clf059@2603:3023:a2b:a800:f097:5796:35c8:7bc7)
[20:21:48] *** Quits: clf059 (~clf059@212.102.46.25) (Ping timeout: 250 seconds)
[20:22:14] *** v` is now known as `v
[20:24:52] *** Joins: neo1 (~neo@103.144.161.13)
[20:27:42] *** Quits: neo1 (~neo@103.144.161.13) (Client Quit)
[20:30:43] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[20:31:16] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[20:32:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:34:37] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 240 seconds)
[20:35:18] *** clf059_ is now known as clf059
[20:35:44] *** Quits: clf059 (~clf059@2603:3023:a2b:a800:f097:5796:35c8:7bc7) (Quit: Textual IRC Client: www.textualapp.com)
[20:35:48] <krismatrix> What exactly is $opts in HTML::Packer?
[20:36:09] <krismatrix> I assume that $opts must somehow contain optons like 'remove_comments', but how exactly should that be formatted?
[20:36:10] *** Joins: clf059 (~clf059@94.140.8.5)
[20:36:17] *** Joins: zakame (~zakame@user/zakame)
[20:38:30] <krismatrix> never mind...i see it says $opts must be a hashref of options.
[20:39:14] <krismatrix> how do I write hashref? The only way I know is to write a hash my %hash = ( 'a' => 1}; then pass as \%hash;
[20:39:45] <thrig> ( ... } seems buggy
[20:39:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[20:46:21] <krismatrix> simcop2387: Your suggestion and guidance helped me and now I understand what hooks are...and while I didn't attempt plugins..i may a little closer to udnerstanding that too.
[20:46:39] <krismatrix> I got the html minification and removal of comments working too.
[20:47:07] *** Joins: jpn (~jpn@user/jpn)
[20:51:06] <krismatrix> It seems like for me the trick to remember when I am creating a reference vs an actual value is....if I writing the hash/array as though I am writing in python, then it's a reference in perl. Always use common brackets () when doing it in perl if you do't want a reference.
[20:51:18] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (Ping timeout: 272 seconds)
[20:51:56] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[20:53:33] *** Joins: semeion (~semeion@user/semeion)
[20:54:37] *** Quits: semeion (~semeion@user/semeion) (Client Quit)
[21:00:02] *** Joins: rednul_ (~rednul@mc.emailserverz.com)
[21:07:28] *** Quits: rednul (~rednul@mc.emailserverz.com) (*.net *.split)
[21:07:28] *** Quits: bs338 (~pi@host109-153-209-160.range109-153.btcentralplus.com) (*.net *.split)
[21:07:28] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (*.net *.split)
[21:07:28] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[21:07:28] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[21:07:28] *** Quits: perlmaros (~perlmaros@master.k-1.com) (*.net *.split)
[21:07:28] *** Quits: Bossi_ (~quassel@p5dc59ffc.dip0.t-ipconnect.de) (*.net *.split)
[21:07:28] *** Quits: sysdef_ (~sysdef@user/sysdef) (*.net *.split)
[21:07:28] *** Quits: Rich_ (~rich@nakts.net) (*.net *.split)
[21:07:28] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[21:08:25] *** Quits: clf059 (~clf059@94.140.8.5) (Quit: Textual IRC Client: www.textualapp.com)
[21:08:26] <japh> today I learned by accident about the GetOptions '<>' argument callback. I've been processing options in perl for some 15 years. Mind blown
[21:09:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[21:12:55] *** Joins: bs338 (~pi@host109-153-209-160.range109-153.btcentralplus.com)
[21:12:55] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[21:12:55] *** Joins: blinky42 (~quassel@user/blinky42)
[21:12:55] *** Joins: Pixi (~Pixi@user/pixi)
[21:12:55] *** Joins: perlmaros (~perlmaros@master.k-1.com)
[21:12:55] *** Joins: Bossi_ (~quassel@p5dc59ffc.dip0.t-ipconnect.de)
[21:12:55] *** Joins: sysdef_ (~sysdef@user/sysdef)
[21:12:55] *** Joins: Rich_ (~rich@nakts.net)
[21:12:55] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[21:14:39] *** Quits: ovid_ (~ovid@lfbn-mar-1-85-38.w86-229.abo.wanadoo.fr) (Remote host closed the connection)
[21:16:00] <krismatrix> umm...what do you guys do when attempting to implement HOTP (TOTP is the SMS based method right?)
[21:16:36] *** `v is now known as v|
[21:18:06] <v|> sorry, testing alt nicks, i'll part and do that, biab
[21:18:10] *** Parts: v| (~v@user/ctrl) ()
[21:20:36] <krismatrix> Actually...i must be wrong. I think I need to use TOTP. 
[21:30:48] *** Joins: wie (~v@user/ctrl)
[21:31:47] <wie> choosing a nick or alt nick makes my head hurt a little
[21:33:05] *** Joins: neo1 (~neo@103.144.161.8)
[21:33:32] <wie> it's like everyone else's nick fits them so perfect and why can't mine be like that
[21:34:02] <wie> oh well, c'est la wie
[21:34:16] <shaldannon> :-)
[21:34:26] * wie stands up on the chair and raises both fists to the sky
[21:34:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:34:36] <wie> DAD JOKE MISSION ACCOMPLISHED
[21:34:38] *** Quits: neo1 (~neo@103.144.161.8) (Client Quit)
[21:34:40] <shaldannon> wie won't stand for that :-}
[21:34:46] <thrig> oui
[21:35:04] <japh> I'm japh
[21:35:16] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Quit: polettix)
[21:35:33] *** Joins: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859)
[21:35:44] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[21:36:02] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[21:36:11] <shaldannon> one of my high school senior class paid for an ad in the school paper, "$so-and-so leaves the middle finger on his right fist raised defiantly aloft".  the paper censored it down to "leaves his right fist raised defiantly aloft"
[21:36:33] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[21:36:49] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[21:36:53] *** Joins: martinus__ (~martin@92.29.201.77.rev.sfr.net)
[21:36:58] *** Quits: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net) (Quit: Leaving)
[21:37:20] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[21:37:36] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[21:38:10] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[21:38:54] <shaldannon> of course, in my estimation, nicks are like women.  the good ones are taken and the rest have issues.
[21:39:16] <shaldannon> (you could flip that around for your preferred gender if you wanted)
[21:39:46] *** wie is now known as v\
[21:39:59] *** Quits: ovid (~ovid@2a01:cb1c:5f6:4c00:f909:bf80:99c9:b859) (Ping timeout: 250 seconds)
[21:40:16] <shaldannon> if you're gonna do that, add a :, e.g., v:\
[21:40:35] <thrig> v: is the shares drive, however
[21:41:18] *** Joins: jpn (~jpn@user/jpn)
[21:46:15] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[21:47:12] <zgu> i can't remember the last time i've seen that combination of letters together when someone was actually trying to spell "defiantly" and didn't just not know how to spell "definitely"
[21:48:49] <shaldannon> one of my pet peeves.  people who don't know how to spell the word they want, so just use whatever.
[21:49:11] <thrig> such as Shakespeare
[21:49:42] <zgu> that one is at least more understandable when you consider how vowel reduction works in english
[21:50:06] <thrig> or spelling being not really 'set in stone' back then
[21:50:49] <shaldannon> another one that peeves me:  "well" vs "welp"
[21:51:24] <zgu> i realized that when tom scott did a video 2 years ago, around the same time everyone was saying "quarentine"
[21:51:47] <shaldannon> my father periodically remarks that we need to teach "English as a first language" courses to Americans
[21:52:02] <buZz> why not native languages?
[21:52:04] <buZz> cherokee?
[21:52:19] <buZz> shaldannon: why would americans need to learn european languages, thats silly :P
[21:52:37] <shaldannon> you kidding? as bad as we mangle English, why would we want to have them butcher someone else's language?
[21:52:40] *** Joins: Adura (~Adura@user/adura)
[21:53:00] <buZz> shaldannon: yeah if only there was a language spoken on that continent -before- it turned into a colony
[21:54:06] * shaldannon recalls the notalwaysright.com submission where some woman was in the store talking on her cell phone in a non-English language.  Guy behind her says, "you want to speak something other than English, go back where you came from."  She says, "that was Navajo.  maybe you should go back where *you* came from"
[21:55:46] <buZz> yeah , seems no european on that continent ever got the hint
[21:56:17] <shaldannon> well, you'd think the bows, arrows, spears, guns, etc., might have been a hint
[21:56:38] <thrig> also disease
[21:56:44] <buZz> yes, violence does seem to attract americans
[21:56:53] <shaldannon> sadly, yes :-(
[21:56:56] <buZz> almost hasnt been a war since 1945 without them involved or starting it
[21:57:03] *** Joins: vms14 (~vms14@29.red-79-153-202.dynamicip.rima-tde.net)
[21:57:05] <buZz> almost 2 per year?
[21:57:18] <vms14> ahahaha I'm using modperl and you cannot do anything to stop me
[21:57:21] <shaldannon> something ...
[21:57:28] <buZz> vms14: thats fine
[21:57:34] <vms14> :O
[21:57:54] <shaldannon> I'm Amercian ... but often times, what my political and business elites do frustrates and shames me
[21:58:06] <shaldannon> can't spell either apparently
[21:58:07] <vms14> I want to try to use template toolkit to provide random users a way to make a blog
[21:58:28] <buZz> shaldannon: > whats the diff between US and a bowl of yogurt
[21:58:33] <buZz> shaldannon: < yogurt can grow a culture
[21:58:33] <shaldannon> what?
[21:58:38] <shaldannon> ouch
[21:58:46] <buZz> ;)
[21:58:52] <vms14> you can add features in a somewhat controlled manner
[21:59:00] <shaldannon> support bacteria.  it's the only culture some people have
[21:59:19] <vms14> like providing functions for those users, which is nice because they could do some basic back end stuff
[21:59:44] <vms14> and they could have their own set of "macros" and alike
[21:59:57] <vms14> also they can even choose the delimiters for tt
[22:00:12] <shaldannon> vms14: about 20 years ago or so, I worked for a company that was using HTML::Mason for that sort of functionality (for news sites)
[22:00:32] <vms14> shaldannon: any guide or recommendation/advice?
[22:00:40] <shaldannon> don't use it? :-)
[22:00:43] <vms14> ahahaha
[22:01:12] <vms14> I had this idea some time ago, maybe users end liking it
[22:01:20] <shaldannon> basically HTML::Mason is a complicated way to make Perl behave like PHP
[22:01:37] <vms14> I don't want mason, I'll just use tt
[22:01:54] <vms14> but my goal is to expose tt to the users
[22:02:13] <mason> shaldannon: Perl Home Pages!
[22:02:26] <shaldannon> I've used tt some years ago for a web app I was doing, but never exposed the functionality to anyone
[22:02:34] <vms14> shaldannon: I did try the perl apache asp 
[22:02:43] <vms14> but meh
[22:02:44] <shaldannon> that sounds evil
[22:03:02] <vms14> it's similar to mason and embperl I suppose
[22:03:16] <vms14> didn't like it, but it makes perl behave as php
[22:04:00] <mason> shaldannon: That's the actual meaning of the acronym "PHP" as I remember it.
[22:04:04] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:04:13] <vms14> mason: was Personal Home Page I guess
[22:04:13] <shaldannon> eek
[22:04:17] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[22:04:29] <vms14> but I've read he started it as a perl module
[22:04:29] <mason> Looking for a reference. Pretty sure it was Perl initially.
[22:04:52] <shaldannon> https://en.wikipedia.org/wiki/PHP
[22:04:53] <Paperbot> Link title(s): [ PHP - Wikipedia ]
[22:04:57] <vms14> and somehow he disliked perl and make a language to dislike it more
[22:05:05] <vms14> made*
[22:05:36] <mason> https://nitter.pussthecat.org/rasmus/status/226405807305138176 is interesting
[22:05:38] <Paperbot> Link title(s): [ Rasmus Lerdorf (@rasmus): "I wonder why people keep writing that PHP was ever written in Perl. It... ]
[22:05:47] <mason> and specifically https://nitter.pussthecat.org/PhilipOlson/status/226406741389234176#m
[22:05:47] <Paperbot> Link title(s): [ Philip Olson (@PhilipOlson): "@rasmus because once upon a time http://php.net/history.php said it... ]
[22:05:49] <shaldannon> originally Personal Home Page
[22:06:10] <mason> Checking archive.org
[22:06:15] *** Quits: kiras (~kiras@user/kiras) (Ping timeout: 252 seconds)
[22:06:15] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 252 seconds)
[22:06:56] <mason> Hrm, that doesn't go back nearly far enough. What I'm remembering is from the 90s and archive.org only goes back to 2009 for the history page.
[22:07:03] <shaldannon> bahaha:  The syntax resembled that of Perl, but was simpler, more limited and less consistent.[9]
[22:07:52] <mason> https://web.archive.org/web/20090426061624/http://us3.php.net/history.php
[22:07:53] <Paperbot> Link title(s): [ PHP: History of PHP - Manual ]
[22:08:04] <vms14> btw web archive is from google
[22:08:07] <mason> "PHP succeeds an older product, named PHP/FI. PHP/FI was created by Rasmus Lerdorf in 1995, initially as a simple set of Perl scripts for tracking accesses to his online resume."
[22:08:14] <vms14> didn't surprise me so much
[22:08:19] <mason> But yeah: "He named this set of scripts 'Personal Home Page Tools'."
[22:08:43] <mason> Won't be the first time my memory has been faulty, but the timing is right on that PHP/FI
[22:08:51] <vms14> what I've read is he tried to do it in perl, but didn't like it
[22:10:31] <vms14> actually he disliked it so much that he killed it
[22:10:47] <mason> ♥ history
[22:10:49] <vms14> at least on that niche
[22:11:24] <vms14> mason: the fail was with modperl I think or at least I think it helped to favor php
[22:11:46] <vms14> I mean, shared hostings didn't offer modperl because of security issues with several users
[22:12:04] <vms14> and they've just discarded and offered perl cgi and php
[22:12:16] <mason> The first time I ran PHP, which I now see was actually PHP/FI, the admin swatted it down as soon as she found it.
[22:12:19] <vms14> without modperl php won in efficiency
[22:12:25] <mason> History has proven her right in doing so. :P
[22:12:29] <thrig> I recall PHP not having a stellar security record
[22:12:43] <vms14> thrig: yes, but I mean in the view of a shared hosting
[22:12:51] <vms14> modperl wasn't meant for this
[22:13:53] <vms14> I think perl is much more secure than php (althought I know php has evolved a lot and now is a more "respectable" language)
[22:14:02] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[22:14:05] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:14:43] <vms14> anyways I have 0 interest in php, even if the world seems to want me to code in it
[22:14:49] <mason> https://www.webtoolkit.eu/wt is where it's at anyway
[22:14:50] <Paperbot> Link title(s): [ Wt, C++ Web Toolkit  —  Emweb ]
[22:14:51] *** Joins: rgrinberg (~textual@177.244.18.30)
[22:15:01] <vms14> and when I try it's like oh bro, why should I use this having perl
[22:15:17] <vms14> it's like perl without the funny stuff
[22:15:28] <vms14> and weird names for functions like explode implode
[22:15:39] <vms14> yet it has some stuff I liked it
[22:16:11] <vms14> like non globals usage in functions unless you specify it, and the key => value in a loop
[22:16:49] <vms14> but I won't use a language I have 0 interest in just because the world asks me to do so
[22:17:02] <vms14> and this is why I have no developer job xD
[22:17:40] <vms14> should I learn php java js or python and would get a job very fast (specially with java and php)
[22:17:51] <rindolf> https://www.youtube.com/watch?v=QNJL6nfu__Q
[22:17:51] <Paperbot> YouTube video linked by rindolf: Michael Jackson - They Don’t Care About Us (Brazil Version) (Official Video) - published by michaeljacksonVEVO
[22:17:55] <vms14> but I like perl and lisp (and somehow forth)
[22:18:33] <vms14> and btw perl is very "lispy"
[22:18:42] <vms14> or better said, fp friendly
[22:18:45] <mason> Honestly, programming any language is fun. It's the organizing thought and managing resulting data that's compelling and addictive.
[22:19:33] <thrig> maybe not befunge
[22:19:42] <vms14> mason: yes, but to be hired (as a junior) I have to choose any of those 4 langs and make it my main language (start doing a lot of projects and alike as a portfolio)
[22:19:57] <rindolf> vms14: i like python3, typescript, and java too
[22:20:04] <mason> Yeah, you've nailed down the languages for ease of employment.
[22:20:17] <vms14> and I'll always want to use another language
[22:20:27] <vms14> rindolf: I hate java so much
[22:20:54] <mason> FWIW, my two pure development jobs used C++ and Perl respectively.
[22:21:06] <mason> So using one of those four is definitely not a hard and fast rule.
[22:21:10] <vms14> mason: but surely you can apply as a senior
[22:22:05] <mason> I've got the grey beard to vouch for me.
[22:22:27] *** Quits: thrig (~thrig@207.108.197.156) (Remote host closed the connection)
[22:22:53] <mason> Last few years I've read far more code than I've written, with most of the reading in C and most of the writing split between C, Perl, and POSIX shell.
[22:23:20] <mason> I want to get involved in a project that's exclusively C++ so I'm spinning that back up.
[22:23:35] <rindolf> vms14: https://shlomifish.livejournal.com/1747.html - stoicism
[22:23:37] <mason> Alright, off for an errand, but thank you all for the pleasant interlude.
[22:23:37] <Paperbot> Link title(s): [ The Stoic Road to Peace of Mind - Unarmed but still Dangerous — LiveJournal ]
[22:24:51] <mason> rindolf: Ah, I just met steerpike recently. It was good timing as I'm just now re-reading Gormenghast.
[22:24:58] <mason> anyway, bbiab
[22:27:08] <vms14> rindolf: I try to resign myself and use some of those langs
[22:27:17] <vms14> but it lasts 3 days as much
[22:27:55] <vms14> the whole time I'm not happy because I feel forced to use something I don't have interest in 
[22:28:02] <vms14> and then it's not fun
[22:28:19] <vms14> I prefer 
[22:28:41] <vms14> I prefer to work as a waiter and let programming be fun instead
[22:29:03] <vms14> or as people usually recommends me, make a startup
[22:29:09] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Quit: polettix)
[22:29:25] <vms14> this is why I want to try making some sort of blogging platform by exposing template toolkit to users
[22:29:40] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:29:56] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:30:22] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:30:23] <vms14> and usually I tend to overcomplicate stuff, so this time I'll just try to do something simple and iterate from that
[22:30:43] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:30:44] <vms14> and the most important thing: make it work for me
[22:31:07] <vms14> so welcome to mod perl :D
[22:31:17] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:31:30] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:31:54] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:32:16] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:32:44] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:33:03] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:33:37] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:33:49] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:34:20] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:34:36] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:34:57] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:35:23] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:35:26] *** Joins: jpn (~jpn@user/jpn)
[22:35:45] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:36:06] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[22:36:09] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:36:24] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[22:36:30] *** Joins: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it)
[22:36:56] *** Quits: polettix (~polettix@93-34-95-184.ip49.fastwebnet.it) (Client Quit)
[22:37:30] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:40:21] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[22:40:29] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:41:19] <vms14> http://iam.codingtheworld.com/perl-status
[22:41:20] <Paperbot> Link title(s): [ Apache2::Status 4.01 ]
[22:41:22] <vms14> xd
[22:41:34] <vms14> idk how much you can fck my machine
[22:41:59] <vms14> I had a cracker friend time ago who made me a simple ddos attack and fucked my whole internet
[22:44:56] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:45:38] <vms14> rindolf: I think I've got your ip
[22:46:12] <vms14> do you have a server with a login page and a "zz"?
[22:46:31] <vms14> give me a user :/
[22:47:00] <rindolf> vms14: https://www.shlomifish.org/meta/FAQ/where_are_you_from.xhtml
[22:47:00] <Paperbot> Link title(s): [ Shlomi Fish’s FAQ - Where are you from? Where do you live currently? ]
[22:47:23] *** Joins: Giovanni (~Giovanni@176.55.170.26)
[22:48:16] <vms14> this site does not explain if that login page is yours
[22:48:35] <vms14> unless I use geolocation
[22:49:40] <rindolf> vms14: i'm not giving users
[22:49:52] <vms14> :/
[22:51:00] *** Quits: deadmars- (~deadmarsh@95.38.119.200) (Ping timeout: 272 seconds)
[22:54:41] <vms14> idk why the server is getting so slow
[22:58:26] *** Joins: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net)
[22:59:52] <rindolf> EvanCarroll: hi, shavua tov
[23:03:03] *** Joins: magla (~gelignite@d5366f7c.access.ecotel.net)
[23:05:23] *** clarjon_1 is now known as clarjon1
[23:22:09] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[23:29:36] *** Joins: jpn (~jpn@user/jpn)
[23:32:13] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[23:33:55] *** Joins: Markow (~Markow@176.122.215.103)
[23:34:12] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[23:38:09] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:41:48] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc6-git-38f80f4-Pogorze-Karpackie-CUSTOM-KERNEL)
[23:43:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[23:44:45] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[23:45:13] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:49:39] *** Joins: ovid (~ovid@amontpellier-652-1-76-179.w109-210.abo.wanadoo.fr)
[23:51:39] *** Joins: Trigon (~reuben@73.127.1.41)
[23:54:22] *** Quits: ovid (~ovid@amontpellier-652-1-76-179.w109-210.abo.wanadoo.fr) (Ping timeout: 268 seconds)
