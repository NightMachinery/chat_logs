[00:15:55] *** Quits: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) (Ping timeout: 256 seconds)
[00:32:25] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b86f:1b4d:c83a:7071)
[00:40:29] *** Joins: jokoon (~eio@2a01:e0a:542:e160:f1f7:4741:3efd:9e56)
[00:41:03] <jokoon> any idea how to iterate a json array with https://github.com/nlohmann ? I'm having a hard time finding examples...
[00:42:26] *** Joins: shailangsa_ (~shailangs@host86-186-142-101.range86-186.btcentralplus.com)
[00:42:28] <rpav> for(auto&& item : json_array) ...
[00:45:12] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[00:46:46] <jokoon> So I don't have to cast types?
[00:54:38] <jokoon> wait I can directly use a std::map?
[00:56:04] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:56:49] *** Quits: rito_ (~rito_gh@45.112.243.151) (Quit: Leaving)
[00:57:27] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:00:04] <jokoon> woooow that's amazing
[01:00:55] <jokoon> tried some json lib some years ago, was not so easy
[01:01:57] <LordKalma> the SFC supports SWIG, which is a great cause
[01:02:19] <LordKalma> one of those projects that everybody relies one, is severely underfunded, and pretty much maintained by 2 guys
[01:06:22] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:06:54] <rpav> super famicom?
[01:07:22] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[01:07:41] <rpav> but, screw swig, people should use https://github.com/rpav/c2ffi or something similar ;P
[01:08:33] <rpav> err which i really need to update apparently but
[01:08:51] <rpav> wtf, i thought i'd added 13
[01:09:23] <rpav> but, the point being, generate binding descriptions using clang and then generate FFI bindings in-language
[01:10:15] <rpav> the former is a simple "use clang and spit out an easily-parsed data format" and the latter is "read an easily-parsed data format and spit out bindings," and none of this "write a complicated module in another language using halfassed broken parsing"
[01:21:14] *** Quits: shailangsa_ (~shailangs@host86-186-142-101.range86-186.btcentralplus.com) (Ping timeout: 268 seconds)
[01:23:24] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:23:31] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:25:05] *** Quits: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Remote host closed the connection)
[01:33:47] *** Quits: magla (~gelignite@55d4b9f8.access.ecotel.net) (Quit: Stay safe!)
[01:35:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:36:57] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:40:13] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:40:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:40:23] *** ChanServ sets mode: +v npaperbot
[01:46:52] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Quit: SureVoIP: http://www.surevoip.co.uk)
[01:47:25] *** Joins: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com)
[01:57:42] *** Quits: jokoon (~eio@2a01:e0a:542:e160:f1f7:4741:3efd:9e56) (Quit: Leaving)
[02:00:46] *** Joins: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net)
[02:24:29] *** Quits: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net) (Quit: WeeChat 3.0)
[02:37:00] *** Joins: ferdna (~ferdna@user/ferdna)
[02:49:15] *** Joins: seninha (~seninha@user/seninha)
[02:55:32] *** Joins: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs)
[03:07:17] *** Joins: jehelset (~jeh@130.51-175-95.customer.lyse.net)
[03:32:41] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:35:40] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[03:40:21] *** Joins: chozorho (~chozorho@2601:146:300:c30::31b5)
[04:12:27] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:40:18] *** Quits: Meteorhead (~Meteorhea@lfbn-idf1-1-520-7.w86-242.abo.wanadoo.fr) (Read error: Connection reset by peer)
[05:06:35] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:06:45] *** Quits: AmR (~AmREiSa@156.199.202.96) (Quit: Konversation terminated!)
[05:07:11] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[05:15:32] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[05:16:15] *** Joins: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com)
[05:17:23] *** Joins: malloy (~jimery@116.30.221.255)
[05:24:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:24:59] *** Joins: seninha (~seninha@user/seninha)
[05:29:00] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:bd21:ec47:c1ea:4c9e) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:34:03] *** Quits: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[05:37:36] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Quit: WeeChat 3.3)
[05:40:13] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:40:14] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:40:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:40:23] *** ChanServ sets mode: +v npaperbot
[05:43:56] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:45:01] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Ping timeout: 256 seconds)
[05:50:32] *** Quits: andreasbuhr (~quassel@p549dbe1a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:50:59] *** Joins: andreasbuhr (~quassel@p549dbe5a.dip0.t-ipconnect.de)
[05:57:40] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[06:16:48] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[06:20:51] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[06:23:56] *** Joins: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com)
[06:24:21] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:25:48] *** Joins: Guest86 (~Guest86@cpe-67-247-98-228.nyc.res.rr.com)
[06:27:52] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[06:28:31] *** Quits: Guest86 (~Guest86@cpe-67-247-98-228.nyc.res.rr.com) (Client Quit)
[06:29:14] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[06:35:07] *** Joins: matt_ (~allparadi@cable-179-151.sssnet.com)
[06:40:39] *** Quits: matt_ (~allparadi@cable-179-151.sssnet.com) (Quit: Leaving)
[06:40:55] *** Joins: matt_ (~allparadi@cable-179-151.sssnet.com)
[06:41:11] *** Joins: TheGuestMovie (~TheGuestM@173.231.114.74)
[06:51:38] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:07:35] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:13:20] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Ping timeout: 268 seconds)
[07:17:18] *** Joins: adeliktas0 (~adeliktas@i59F4D5BD.versanet.de)
[07:18:22] *** Joins: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com)
[07:19:17] *** Quits: adeliktas (~adeliktas@i59F4D5C9.versanet.de) (Ping timeout: 240 seconds)
[07:19:17] *** adeliktas0 is now known as adeliktas
[07:21:31] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Client Quit)
[07:24:13] *** Joins: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com)
[07:24:50] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Client Quit)
[07:26:40] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[07:27:56] *** Joins: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com)
[07:29:59] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[07:31:03] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Client Quit)
[07:31:19] *** Joins: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com)
[07:33:54] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Client Quit)
[07:40:49] <very_sneaky> if you haven't seen jason turners video on setting up a cmake project with all of its tooling, I've thought it was actually pretty good: https://www.youtube.com/watch?v=YbgH7yat-Jo
[07:42:24] <very_sneaky> not sure how i feel about the part on conan though, looks like he wants to use conan entirely from cmake
[07:42:57] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[07:50:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:51:44] *** Quits: TheGuestMovie (~TheGuestM@173.231.114.74) (Quit: Client closed)
[07:56:08] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[08:04:15] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:12:04] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:14:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[08:22:05] *** Quits: matt_ (~allparadi@cable-179-151.sssnet.com) (Quit: Leaving)
[08:29:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:34:07] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:35:59] *** Joins: spartacus (~root@172-105-20-45.ip.linodeusercontent.com)
[08:38:46] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[08:40:49] *** Joins: malloy (~jimery@116.30.221.255)
[08:47:21] <spartacus> Hello.  I am using std::mutex and std::condition_variable_any in a thread pool class implementation and am finding that using those as local members and adding the the worker method to the thread vector is not good, since, you can't copy a mutex.  What am I doing wrong with this? https://controlc.com/f8ed9e51
[08:49:46] <spartacus> eh.  that pastebin is terrible.  copied to: https://zerobin.net/?7a4fe5ac89ed5c95#kr0pNTW2qGMkjQSwrxTCV2oLK8159k3wXKvlBGuKPLY=
[08:50:36] <kalven> where's the mutex getting copied?
[08:51:33] <spartacus> kalven: L83
[08:52:15] <spartacus> At least, that's my closest guess at the completely unhelpful output of "error: use of deleted function 'std::mutex::mutex(const std::mutex&)'"'
[08:52:31] <spartacus> (compile-time error)
[08:53:28] <spartacus> there are a few, it also says the same thing about ThreadPool::ThreadPool(const Threadpool&) and `std::_V2::condition_variable_any::condition_variable_any(const std::_V2::condition_variable_any&)`
[08:54:07] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[08:54:14] <kalven> no, that's about the pool itself not being copyable (which is expected)
[08:54:22] <spartacus> correct because it has a mutex
[08:54:26] <spartacus> which can't be copied
[08:54:39] <mike18> hi, can someone tell what to change to fix the compile error with that hash function? https://ideone.com/lnSd0Q
[08:55:47] <kalven> spartacus: right, but that's not about line 83
[08:55:52] <mike18> error: static assertion failed: hash function must be invocable with an argument of key type ....
[08:56:15] <spartacus> kalven: ok, then im at a loss as to what the issue is.  should mutex and condition_variable_any be static?
[08:57:05] <kalven> spartacus: no, but take a step back.. you're getting that error because you've got some code that is trying to copy the whole threadpool
[08:57:59] <spartacus> kalven: the error is introduced when I use in main() `auto tp = Threadpool();` to instantiate the thread pool
[08:58:29] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[08:59:54] <kalven> spartacus: that means you're using some older version of c++.. either compile with a newer version, or instantiate it like: Threadpool tp;
[09:00:17] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[09:00:42] <kalven> before c++17 (I think), that expression actually requires the class to be copyable
[09:01:13] <spartacus> O_o
[09:01:17] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:01:39] <spartacus> o_O ok, I need to drink until that makes sense, I lost hours of my life to this and now have no clue why that fixed it.
[09:01:47] <kalven> mike18: make both your hash functor's operator() and the operator== const
[09:02:00] <mike18> oh really?
[09:02:03] <spartacus> Thanks a whole lot for the extra eyes!
[09:02:37] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 240 seconds)
[09:02:39] <mike18> kalven: ok worked - but the compiler error is a bit confusing - no?
[09:02:54] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[09:02:58] <kalven> mike18: yeah, but that's par for the course in c++
[09:03:04] <spartacus> (yeesh i was just starting to think I understood this runtime :/)
[09:03:16] <mike18> kalven: are those messages improved in c++?
[09:03:19] <mike18> c++20
[09:04:07] <kalven> mike18: it's a compiler thing, not really up to the language.. having said that, with c++20 concepts, it *might* shit out a better error
[09:33:22] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[09:35:14] *** Joins: malloy (~jimery@116.30.221.255)
[09:38:03] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[09:40:14] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:40:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:40:23] *** ChanServ sets mode: +v npaperbot
[09:41:15] <very_sneaky> hmm. on second thought, i think i'm going to avoid cmake presets since there are no conan generators that support them
[09:41:28] <very_sneaky> i also much prefer jason turners cmake layout to friendlyanon's
[09:42:32] *** Joins: aakashi2001 (~aakashi20@103.61.255.19)
[09:42:32] *** Quits: aakashi2001 (~aakashi20@103.61.255.19) (Changing host)
[09:42:32] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[09:43:32] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[09:43:58] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[09:45:29] *** Joins: traxex (~traxex@user/traxex)
[09:46:17] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[09:50:41] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[10:07:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[10:09:38] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:30:49] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:b86f:1b4d:c83a:7071) (Quit: Quit)
[10:35:00] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:40:36] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[10:44:48] <ville>  so it begins. the rift in the cult of modern cmake
[10:47:10] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[10:47:35] <ville> spartacus: c++ initialization rules are just not very good. they've overall probably gotten better over the different versions, but they are just not very good
[10:48:27] <ville> spartacus: you can probably grab any bona fide c++ expert and trick then with some detail about initialization
[10:50:38] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: kernel)
[10:51:47] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[10:53:43] * vdamewood is a mala fide C++ 'expert'.
[10:54:15] <RandomReader> lol
[11:16:29] <spartacus> heh i believe it, the syntax gets weirder every year (no offense to any dogmatists listening)
[11:16:51] <spartacus> most corp teams only use about 30% of the syntax and each team uses a different 30%
[11:17:31] <spartacus> i like to watch them argue
[11:19:15] <spartacus> i propose a solution
[11:19:54] <spartacus> we divide the language and its syntax extensions between two warring factions:  "C, with Objects" and "Write Your Thesis Here".  May the odds forever be in your favor.
[11:20:27] <kalven> This is an interesting take. I don't think I've heard it before
[11:21:11] <spartacus> Of course the Thesis kids will win, it'll just take 30 years, and the first group will make too much money before that to ever really fully lose.  The culture would settle on both ends I think.
[11:21:18] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[11:24:32] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[11:24:51] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[11:26:59] <spartacus> COBS vs. WYTH 2022
[11:31:37] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 240 seconds)
[11:32:38] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[11:56:10] <spartacus> so this is not expected behaviour.  my multi-threaded tcp server will hang on socket accept until i send a newline char.  :/  https://zerobin.net/?b549d5bb951ece89#65P5TIs9R57hSLbFiHLnuDVPdb3pOZ3WcXqnhYP/q8I=
[11:56:44] <spartacus> i snaked it through and it's happening after L86 but before L90, though, there's nothing going on in between the two and neither should be blocking.
[11:59:49] <spartacus> not holding on accept() so that's good...adds it to queue...that's good...
[12:01:22] <kalven> probably not related, but you need to use bytesRead when creating the string on line 54
[12:02:25] <spartacus> dangit.  i need to remove all 3 of those lines, that was a test while i was building this out; thanks, that read() is what's doing it
[12:03:06] <spartacus> beautiful
[12:03:39] <spartacus> im kidding, lol, this code is awful and needs cleaned up now :)
[12:05:10] <spartacus> like this logger function needs to be made static
[12:07:41] *** Quits: chozorho (~chozorho@2601:146:300:c30::31b5) (Quit: WeeChat 3.0)
[12:20:25] *** Joins: robod34 (Username@79.113.195.239)
[12:45:34] *** Joins: troller (~p@80.240.216.69)
[12:53:25] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[13:02:30] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[13:03:34] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[13:03:54] *** Joins: eck (~root@user/eck)
[13:08:10] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:17:41] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:22:55] *** Joins: seninha (~seninha@user/seninha)
[13:32:03] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:37:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[13:40:14] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:40:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:40:23] *** ChanServ sets mode: +v npaperbot
[13:44:12] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:47:05] *** Joins: aakashi2001 (~aakashi20@103.61.255.19)
[13:47:05] *** Quits: aakashi2001 (~aakashi20@103.61.255.19) (Changing host)
[13:47:05] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[13:59:28] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[14:00:12] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[14:02:41] *** Quits: jehelset (~jeh@130.51-175-95.customer.lyse.net) (Ping timeout: 256 seconds)
[14:33:20] *** Joins: pulse (~pulse@user/pulse)
[14:36:50] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6dd5:67d6:1710:24ab)
[14:51:49] *** Quits: kurfen (~kurfen@176.119.195.10) (Ping timeout: 250 seconds)
[14:53:51] *** Joins: kurfen (~kurfen@176.119.195.10)
[14:54:13] *** Joins: luc4 (~luca@151.38.149.242)
[15:03:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[15:05:25] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:07:32] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6dd5:67d6:1710:24ab) (Quit: Konversation terminated!)
[15:09:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[15:11:21] *** Joins: pulse (~pulse@user/pulse)
[15:11:21] *** Quits: pulse (~pulse@user/pulse) (Client Quit)
[15:14:13] <very_sneaky> so this is my current repo structure: https://bpa.st/3PZQ - if src/CMakeLists.txt generates ${PROJECT_LIB}, and I want to consume that in tests/CMakeLists.txt, is there a way to share this?
[15:15:11] <very_sneaky> obviously pretty easy in my root CMakeLists.txt, but not sure how to make it visible laterally
[15:16:07] <LordKalma> iirc any targets are available they are defined
[15:16:27] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[15:23:01] <very_sneaky> hmmmmm
[15:29:02] *** Joins: frost (~frost@user/frost)
[15:36:11] <very_sneaky> when i try to link i get a whole bunch of undefined symbol errors
[15:36:15] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:36:46] *** Quits: luc4 (~luca@151.38.149.242) (Read error: Connection reset by peer)
[15:39:11] *** Joins: luc4 (~luca@151.38.190.239)
[15:40:02] <very_sneaky> so this is how i'm creating my lib in src/ atm: https://bpa.st/Z3UQ
[15:40:34] <very_sneaky> my understanding is that because `${PUBLIC_SOURCE_DIR}/include` is PUBLIC, it should be propagated to anything that links with it, right?
[15:41:22] <very_sneaky> so if i have `target_link_libraries(${PROJECT_TEST} PRIVATE ${PROJECT_LIB})`, that include should be made available to the ${PROJECT_TEST} target
[15:43:01] <very_sneaky> i was having no problems with this when ${PROJECT_LIB} was defined in the top level CML, but now that it's being defined in src/ it's throwing symbol visibility errors
[15:44:54] <very_sneaky> yeah - ${EXTERNAL_LIBS} and ${PROJECT_LIB} are empty
[15:48:02] <johnny> you're killin me with remembering about dealign with that :(
[15:48:32] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[15:49:56] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[15:52:28] <very_sneaky> huuuuh. okay. it's just the environment variable that gets nuked, the target is still accessible
[15:53:32] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:55:54] <very_sneaky> johnny: i'm not sure i'm anywhere near the point where i can start blaming cmake for things :P
[15:56:57] <johnny> build tools are hard
[15:58:47] <very_sneaky> not just that - building is hard
[15:59:00] <very_sneaky> knowing how to build things seems like an area of expertise in and of itself
[15:59:38] <very_sneaky> half the time i'm frustratingly unaware of whether an issue i have is because i don't understand the way things work, because i don't understand the build system, or if something is a bug
[16:02:57] *** Joins: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[16:07:19] *** Quits: p-i- (~Ohmu@180.183.72.213) (Remote host closed the connection)
[16:24:03] <luc4> Hello! Is ccache on topic here?
[16:24:32] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[16:24:36] <PJBoy> yeah
[16:24:55] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:26:43] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[16:27:16] <luc4> It just happened to me that in one of my containers ccache stopped working as usual. I tried to debug, and it seems that if I "touch" a cpp file, the cache is used. If instead I "make clean", I only get cache misses. It seems that the hash it looks for changes. Any idea why?
[16:36:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 250 seconds)
[16:40:50] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[16:40:58] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[16:41:14] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:42:32] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[16:43:44] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:43:45] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:43:54] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:55:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[16:55:38] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[16:56:16] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[16:56:33] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[17:03:42] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:85b6:2c43:f2cd:529c)
[17:07:54] *** Joins: arch-angel (~arch-ange@2001:d08:1830:cfe4:b4f:740a:8d11:a72b)
[17:14:55] *** Joins: p-i- (~Ohmu@mx-ll-180.183.72-213.dynamic.3bb.co.th)
[17:25:14] *** Quits: arch-angel (~arch-ange@2001:d08:1830:cfe4:b4f:740a:8d11:a72b) (Ping timeout: 252 seconds)
[17:31:17] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[17:31:56] <yates> ville: was it you that gave me a command to generate dependency graphs using llvm/clang the other day? I have missplaced it - could you please repost it
[17:32:42] *** Joins: supernova (~quassel@2405:9800:ba11:6207:7dab:f480:fe82:1601)
[17:34:11] <TinoDidriksen> If it was in this channel you can search https://i.pjj.cc/lb/logs/%23c++-general/
[17:34:28] <yates> thanks TinoDidriksen
[17:38:19] <PJBoy> `clang++ -S -emit-llvm main.cxx -o - | opt -analyze -std-link-opts -dot-callgraph` for reference
[17:39:49] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[17:40:15] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:40:23] *** Joins: plastico (~plastico@neomutt/plastico)
[17:40:24] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:40:24] *** ChanServ sets mode: +v npaperbot
[17:40:28] <supernova> Folks! My books misses vector as class member syntax. Can you please help to amend my code prepared for arrays to make it true for vectors
[17:40:37] <supernova> https://wandbox.org/permlink/8tciHRqHX5J0WyWT
[17:42:10] <great_taste> this guy figured out how to make compile time type ids https://github.com/skypjack/entt/blob/cdf9c2fc6feace59503f50a957349914dd9e3e2a/src/entt/core/type_info.hpp#L100
[17:42:25] <very_sneaky> supernova: https://en.cppreference.com/w/cpp/container/vector
[17:42:54] <very_sneaky> vector doesn't take a size as a template parameter
[17:45:32] <very_sneaky> I'm not sure why you would even need a size for a vector, it resizes automatically for you
[17:46:11] <very_sneaky> i guess unless there's some pre-allocation efficiency you can achieve :s but that would be done using `.reserve()`
[17:46:36] <supernova> under the link its just vector in main function
[17:46:54] <supernova> i need to handle syntax with class and its constructor
[17:48:25] <very_sneaky> what i'm saying is that `std::vector<int, arraySize>` is invalid, because the second template parameter is not size of the underlying container, it's an allocator. You're trying to provide a size_t template param where it's expecting an Allocator, or nothing
[17:48:46] <supernova> i just copied syntax from array
[17:48:53] <supernova> i dont know how to work with vector
[17:48:55] <very_sneaky> it's not the same
[17:49:01] <supernova> yes :)
[17:49:05] <supernova> thats why im asking
[17:49:05] <very_sneaky> that's what cppreference is for :)
[17:49:24] <supernova> i know about dynamical size and pushback things
[17:49:35] <supernova> i just need syntax for class with vector :)
[17:49:42] <very_sneaky> so why are you trying to pass it an arraySize?
[17:50:05] <very_sneaky> what purpose does arraySize serve
[17:50:37] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[17:52:29] <supernova> i just copied to make example clear
[17:52:47] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:53:26] <very_sneaky> well, i think that might be the first thing to understand to help you on your way to refactoring that bit of code
[17:56:22] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Client Quit)
[17:56:48] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:03:04] <supernova> just delete arraySize, still compile errors
[18:03:46] <very_sneaky> LordKalma: I thought you might find this interesting, what jason turner does to include warnings in his builds is adds them as compile options to an interface library, and links that in privately: https://github.com/cpp-best-practices/cpp_starter_project/blob/17b5afdfe1b5b592a7d7e4e9d28ff5a2a6ddda0c/CMakeLists.txt#L31
[18:03:54] <very_sneaky> supernova: what compile errors are you getting?
[18:04:09] <PJBoy> that sounds so over the top
[18:04:21] <LordKalma> it's Turner, what did you expect?
[18:04:28] <PJBoy> ...true
[18:04:40] <very_sneaky> PJBoy: i really like it, it stops them from propagating to upstream deps too
[18:04:52] <very_sneaky> so i'm not building boost with -pedantic anymore
[18:05:25] <very_sneaky> does the same for sanitizers
[18:06:06] <PJBoy> he also allows precompiled header D:
[18:06:20] <very_sneaky> ...it ends up a _lot_ less verbose than adding them as compile options for every target
[18:06:46] <PJBoy> ah
[18:07:17] <PJBoy> I look forward to getting familiar enough to cmake to discuss the pros and cons here
[18:09:01] <very_sneaky> :P
[18:09:50] <PJBoy> so I saw some reddit thread about how devs have to wait on average 2 days for a code review to be completed
[18:10:08] <PJBoy> and I thought "that's pretty good, two day pipeline is completely fine"
[18:10:16] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081)
[18:10:16] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081) (Changing host)
[18:10:16] *** Joins: skapata (~Skapata@user/skapata)
[18:10:31] <PJBoy> and then a load of the comments were from devs that seem to not work at all while waiting for their review???
[18:10:32] <very_sneaky> i think that really depends on whether it's a blocking change
[18:11:01] <PJBoy> is my company in the minority when it comes to working on multiple tasks?
[18:11:07] <PJBoy> I thought that was absurd
[18:11:25] <very_sneaky> yeah, it does seem a bit extreme
[18:11:32] <PJBoy> granted some reviews are much more important than others, yeah
[18:11:47] <PJBoy> but you'd poke and prod reviewers in that case
[18:11:49] <very_sneaky> even if your main bit of work depends on the result of the review to progress, surely there are other tickets you can pull off that don't depend on the new changes
[18:12:08] <PJBoy> yeah indeed
[18:12:09] <supernova> where can i past erors?
[18:12:28] <PJBoy> ideally your wandbox paste will reproduce the issue you're having
[18:12:31] <very_sneaky> supernova: bpaste.net, or share your wandbox again
[18:13:51] <very_sneaky> i try to get my reviews out of the way same-day
[18:13:56] <very_sneaky> but it really depends on how big they are
[18:14:14] <very_sneaky> some big reviews can take a few days to do, especially where new architecture is being introduced
[18:15:24] <supernova> https://wandbox.org/permlink/LKDs18ctZSONXJVd
[18:15:49] <very_sneaky> supernova: what's your understanding of that error message?
[18:16:23] <PJBoy> I schedule the tired part of my day for reviews, whatever that is
[18:16:26] <supernova> usually they clear for me
[18:16:48] <supernova> it expects argument from constructor probably
[18:17:01] <PJBoy> prioritise the review if it works into my area of expertise in the codebase
[18:17:43] <very_sneaky> supernova: what makes you think it's to do with a constructor?
[18:18:08] <very_sneaky> PJBoy: i try not to do that, if i'm tired i get lazy and miss things :\
[18:18:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:18:45] <PJBoy> yeah but that's always gonna be true, I have to pick something to allocate that tired time to
[18:18:59] <very_sneaky> heh, yeah i guess so. i do admin
[18:19:31] <PJBoy> not too much admining in my job \o/
[18:19:49] <supernova> no known conversion for argument 1 from â€˜std::vector<int, Hugeinteger>â€™ to â€˜std::vector<int>&â€™
[18:19:49] <supernova>    12 | Hugeinteger( std::vector< int > &digitsArray );
[18:19:53] <very_sneaky> lucky you. i don't know how i've managed to accrue as much as i have
[18:20:10] <very_sneaky> supernova: i think you've shared a different wandbox with me
[18:20:11] <PJBoy> yeah I'm aware of how fortunate I am :D
[18:21:52] <supernova> its the same, lol :D
[18:21:55] <Alipha> supernova: remove `HugeInteger` from `vector< int, Hugeinteger >`
[18:22:05] <Alipha> !give supernova books
[18:22:06] <nolyc> supernova: A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
[18:22:54] <very_sneaky> supernova: the error i see in https://wandbox.org/permlink/LKDs18ctZSONXJVd is `undefined reference to `main'`
[18:32:27] <rpav> ðŸ¤”
[18:33:53] <supernova> Alipha thanks
[18:34:20] <supernova> got a little tired, completely did not want to see Constructor name
[18:36:36] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[18:41:00] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:42:52] <rpav> function pointer syntax in c++ is always annoyingly weird
[18:43:44] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:44:19] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Quit: Leaving)
[18:45:20] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:45:50] <rpav> can you variadically-define an array of values
[18:46:48] <rpav> ok, yes, but how complex can you get
[18:51:17] <rpav> haha i think i just figured out a trivial way to implement get(tuple, n)
[18:51:26] <rpav> why didn't i think of this before
[18:52:19] <rpav> it would be even simpler if one could obtain the address of and get the Nth element by pointer, but
[18:53:21] <rpav> ok still would be nice to work around a void*, but
[18:54:02] <rpav> actually that shouldn't be that hard either
[18:55:40] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[18:56:02] *** flooded is now known as _flood
[19:02:13] *** Joins: Simplar (~Simplar@188.163.93.76)
[19:06:08] <PJBoy> get(tuple, n) seems not immediately useful
[19:06:27] <PJBoy> you'd have to make it a template anyway, so get<n>(tuple) is just as good
[19:06:31] <rpav> it can be very useful, but not for the obvious thing (i.e. iteration)
[19:09:36] <rpav> (e.g. say you want to store the _index_ of a tuple element, and you know the type and/or want to get_if<T>)
[19:10:35] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:10:57] *** Joins: Crassus (~Crassus@user/crassus)
[19:10:59] <rpav> i think the most interesting part of this is that you can generate a constexpr array of functions variadically using lambdas
[19:11:16] <rpav> like, at least, gcc 10 takes this syntax
[19:11:49] <ville> yates: yes but looks like PJBoy had it already
[19:12:15] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:12:16] <PJBoy> yeah I need to try that one out at some point too
[19:12:19] <rpav> like you _can_ generate jump tables in C++, actually
[19:12:32] <rpav> this is sortof a big deal though the syntax is sortof shit
[19:12:54] <rpav> i'll have to test whether the code generated is actually faster than my current implementation for my tables stuff
[19:13:31] <rpav> _that_ uses basically `if constexpr(n < N) next_one(n+1) ...`
[19:21:54] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[19:22:17] *** Joins: troller (~p@2a02:6b8:b081:9::1:1b)
[19:22:53] <Alipha> rpav: seems that for get(tuple, n) to be useful, then the tuple would have to contain all the same types, in which case, just use a std::array
[19:24:12] <PJBoy> I think the idea is `get<Ret>(tuple, n)` where Ret is known from some external source
[19:24:25] *** Joins: magla (~gelignite@55d48631.access.ecotel.net)
[19:24:35] <PJBoy> still gives me a :/ though
[19:25:01] <rpav> Alipha: again, don't think interation
[19:25:40] <rpav> if you wanted that, you wouldn't iterate a tuple, you'd map it to a visitor or something
[19:26:03] <Alipha> visit(tuple, n, [](auto x) { })
[19:26:05] <PJBoy> you'd std::apply it over a comma fold :)
[19:26:29] <rpav> that's mapping
[19:26:32] <PJBoy> unless you need the index, then you have to bring in index_sequence
[19:28:58] <rpav> of course, then there's a related operation there .. say you want to map a dynamic subrange
[19:29:03] <Alipha> i'm still at a loss at what exactly this use case that rpav has
[19:29:29] <PJBoy> rpav just likes to find new and interesting ways to express C++ language
[19:29:54] <rpav> Alipha: with tuple, it's rare .. i think i've run into one or two times i was like "damn i want to .." but the "more general" case is "keep a tuple-like sequence of types in a table and keep/lookup indices"
[19:29:58] <rpav> also that
[19:30:14] <Alipha> <rpav> can you variadically-define an array of values -- yes, by expanding a parameter pack. which that parameter pack might be created from index_sequence
[19:30:32] <rpav> this is almost entirely an "oh shit you can variadically generate lambdas / jump tables" which has even more interesting possibilities
[19:30:40] <rpav> Alipha: or types!
[19:31:38] *** Joins: AmR (~AmREiSa@156.199.202.96)
[19:31:58] <Alipha> https://github.com/alipha/cpp/blob/master/multi_dispatch/multi_dispatch/multi_dispatch.hpp#L33 :-) (don't attempt to understand this code. i wrote it and i don't understand it)
[19:33:41] <PJBoy> those are some long lines
[19:33:41] <Plazma> jfc Alipha
[19:33:53] <PJBoy> wish github had support for them
[19:38:50] <Alipha> sometimes, i feel being forced to break up a line because it's "too long" makes the code harder to read because now you're turning something that was supposed to be one entity into multiple entities
[19:39:08] *** Joins: pulse (~pulse@user/pulse)
[19:39:24] *** Quits: luc4 (~luca@151.38.190.239) (Ping timeout: 240 seconds)
[19:39:38] *** Joins: luc4 (~luca@151.36.211.238)
[19:39:41] *** Quits: andreasbuhr (~quassel@p549dbe5a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:40:46] <Alipha> (did anyone buy that flimsy excuse for my laziness?)
[19:44:31] <AmR> What this error mean ? :-1: error: /Qt/5.15.2/gcc_64/lib/libQt5WebEngineCore.so: .dynsym local symbol at index 3 (>= sh_info of 3) ?
[19:46:37] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[19:51:29] *** Quits: magla (~gelignite@55d48631.access.ecotel.net) (Quit: Stay safe!)
[19:51:33] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:57:07] <PJBoy> wtf
[19:59:37] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[20:00:01] *** Joins: Burgundy (~yomon@79.115.213.171)
[20:00:05] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:05:27] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:05:57] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:06:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:07:34] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:10:15] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:26bf:6614:202d:474a)
[20:10:15] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:26bf:6614:202d:474a) (Changing host)
[20:10:15] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:23:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:25:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:25:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:26:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:26:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:27:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:28:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:30:11] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:31:15] <rpav> sigh libstdc++
[20:31:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Excess Flood)
[20:33:25] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:34:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:36:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:36:44] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:37:23] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:41:51] *** Joins: Guest1191 (~Inline@2a02:908:1252:7a80::47)
[20:42:09] *** Quits: Guest1191 (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:43:54] *** Joins: Inline__ (~Inline@aftr-37-201-240-204.unity-media.net)
[20:47:14] *** Joins: magla (~gelignite@55d48631.access.ecotel.net)
[20:47:26] *** Joins: jehelset (~jeh@130.51-175-95.customer.lyse.net)
[20:47:29] *** Inline__ is now known as Inline
[20:49:51] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[20:51:17] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:52:26] *** Quits: luc4 (~luca@151.36.211.238) (Ping timeout: 260 seconds)
[20:58:37] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 240 seconds)
[20:59:29] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[21:04:18] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:44ee:eade:13ad:a4fd)
[21:06:44] *** Quits: Leone (~Leo@157.52.18.77) (Read error: Connection reset by peer)
[21:08:05] *** Joins: peeps (~peepsalot@openscad/peepsalot)
[21:09:57] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 256 seconds)
[21:10:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[21:21:35] *** Joins: etolier_ (~somewhere@116-255-9-224.ip4.superloop.com)
[21:22:15] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 250 seconds)
[21:22:27] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[21:22:57] *** Quits: etolier (~somewhere@125-63-6-35.ip4.superloop.com) (Ping timeout: 240 seconds)
[21:24:15] *** Joins: jsbach (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55)
[21:24:57] *** Quits: DrMax (~DrMax@node-1w7jra94757g05r4hkl32blfy.ipv6.telus.net) (Ping timeout: 268 seconds)
[21:36:31] *** Joins: DrMax (~DrMax@node-1w7jra94757fzqkincqfc6jpy.ipv6.telus.net)
[21:40:15] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:40:24] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:40:24] *** ChanServ sets mode: +v npaperbot
[21:41:01] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[21:41:55] *** Joins: zmt01 (~zmt00@user/zmt00)
[21:41:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[21:43:02] *** Quits: supernova (~quassel@2405:9800:ba11:6207:7dab:f480:fe82:1601) (Ping timeout: 240 seconds)
[21:50:54] *** Quits: jsbach (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55) (Quit: Leaving)
[21:52:59] *** Joins: jsbach (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55)
[21:54:54] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:55:13] *** Joins: jsbach_ (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55)
[21:55:17] *** Quits: jsbach_ (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55) (Remote host closed the connection)
[21:56:17] *** Quits: AmR (~AmREiSa@156.199.202.96) (Quit: Konversation terminated!)
[21:56:35] *** Quits: jsbach (~jsbach@2a01:c23:64ce:1100:8fdf:ae45:298:ae55) (Client Quit)
[21:58:11] *** Joins: supernova (~quassel@2405:9800:ba11:6207:878:a9f2:d95a:2c43)
[21:58:54] *** Joins: jsbach (~jsbach@2a01:c23:64ce:1100:d610:3a7c:f6e8:4372)
[22:02:24] *** Joins: jsbach_ (~jsbach@2a01:c23:64ce:1100:46f5:c826:22db:de85)
[22:04:26] *** Quits: jsbach (~jsbach@2a01:c23:64ce:1100:d610:3a7c:f6e8:4372) (Ping timeout: 268 seconds)
[22:10:37] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[22:13:00] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[22:15:47] *** Joins: jsbach (~jsbach@2a01:c23:64ce:1100:46f5:c826:22db:de85)
[22:18:05] *** Joins: AmR (~AmREiSa@156.199.202.96)
[22:22:57] *** Joins: ftghrther (~Miranda@78.156.235.93)
[22:24:06] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[22:25:37] *** Joins: chozorho (~chozorho@2601:146:300:c30::8360)
[22:26:19] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:31:22] *** Quits: ftghrther (~Miranda@78.156.235.93) (Quit: Miranda NG! Smaller, Faster, Easier. https://miranda-ng.org/)
[22:32:14] *** Joins: sixpiece (~brainz3sl@4.182.132.164.lunanode-rdns.com)
[22:48:15] <rpav> QVariant is just ðŸ¤¦
[22:49:26] <LordKalma> what about it?
[22:52:14] <comrad> what is it? sorry, i dont speak emoij
[22:54:12] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:55:02] <PJBoy> man facepalming
[22:55:41] <rpav> is there any nice mechanism to cast a reference to its value, or do you just have to copy / void*
[22:56:13] <rpav> e.g. `v.get_if<QString>() -> QString*`
[22:57:16] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:57:33] <PJBoy> C++23 has `auto(x)`
[22:57:45] <rpav> i'm not sure what that's supposed to do
[22:57:47] <PJBoy> otherwise just T(x)
[22:58:03] <PJBoy> auto(x) is the same as `remove_reference_t<decltype(x)>(x)`
[22:58:14] <rpav> well not really going to help here
[22:58:23] <PJBoy> that's what I thought you meant by cast reference to value
[22:58:39] <rpav> the point of a variant ought to be a typesafe "get this type if that's what it is with a very cheap check"
[22:58:56] *** Quits: supernova (~quassel@2405:9800:ba11:6207:878:a9f2:d95a:2c43) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:59:09] <rpav> i mean i can it just kinda sucks
[22:59:29] <LordKalma> v.get_if<QString> // this is std::variant, right?
[22:59:32] <LordKalma> not QVariant
[22:59:43] <kalven> std::get_if
[23:00:16] <rpav> probably .. i'm not 100% sure where i first started seeing get_if, but i don't see anything on QVariant that looks usefully-similar
[23:00:38] <rpav> like you can value-copy the contents with value<T>() which is dumb, or you can like .data() for a void*
[23:00:46] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 260 seconds)
[23:01:10] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:44ee:eade:13ad:a4fd) (Quit: Quit)
[23:03:24] *** Joins: fentanyl (~chroot@user/sapi01)
[23:06:06] <rpav> totally unrelated, anyone else find themselves using tiny lambdas as local functions more
[23:06:38] <fentanyl> I'm trying to dump a C++ object into a file, such that I can re-read that into memory on-demand. Is there a way I can do that? I'm currently using a 3rd party things like BDB or redis, but I was curious if I can do it without those. The goal is something like Python's shelve or pickle where we'd dump a dictionary into disk (as binary object) and load it on-demand as an object.
[23:06:46] <fentanyl> Is there anything similar for C++?
[23:06:59] <rpav> probably, but binary object dumping is kinda dumb
[23:07:19] <fentanyl> Why is it dumb?
[23:07:40] <rpav> like you probably can fine with aggregates or whatever for some specific cases where you don't care about sharing the file ever, as a simple solution, but .. eh
[23:09:39] <rpav> fentanyl: any number of reasons from "it's probably UB for anything complex enough to care about" to "you can't really do much with it" or "not really optimal" or "not very good for structures where all the data isn't a value-part of the struct, i.e. anything with a pointer, which is basically most things"
[23:13:30] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[23:22:39] <PJBoy> just to clarify, using memcpy to dump data is a bad idea
[23:22:51] <PJBoy> encoding well serialised data in binary rather than text is fine
[23:23:45] <PJBoy> C++ doesn't have anything non-intrusive for this
[23:23:51] <PJBoy> but there is boost serialization
[23:24:46] <vdamewood> Oh yeah, imagine 'saving' the vtable pointer for an object and on a later invocation of the program, the vtable gets loaded into another memory location.
[23:24:55] <PJBoy> and many more https://en.cppreference.com/w/cpp/links/libs#Serialization
[23:28:49] <rpav> right whether the _format_ is human-readable or not is sortof orthogonal, but memcpy / iterate by bytes is not great
[23:29:16] <rpav> it's slightly annoying but not really hard to write encoding routines for things
[23:30:13] *** Quits: Simplar (~Simplar@188.163.93.76) (Quit: Going offline, see ya! (www.adiirc.com))
[23:30:18] <rpav> really most of the time, even if you _can_, serializing in-memory structures directly isn't great
[23:31:32] <rpav> (i.e. "i can reliably say `write(someobj, "file")` and it will write the fields, even if they're maps/arrays/etc" is not likely to lead to great data storage)
[23:33:59] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 250 seconds)
[23:37:31] <rpav> (this is not to say that directly dumping large blocks of uniform data _isn't_ necessarily a big win in some cases, but just not generally)
[23:47:26] *** Joins: bobb_ (~bobb_@dslb-088-066-156-033.088.066.pools.vodafone-ip.de)
[23:49:53] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Remote host closed the connection)
[23:59:27] <yates> \join #ubuntu
