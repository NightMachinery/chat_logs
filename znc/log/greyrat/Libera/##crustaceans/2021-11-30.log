[00:12:49] <gerikson> gwozniak: I just upped your age a fair bit ;)
[00:24:55] <cb> geoff erikson and gustaf wozniak
[00:27:23] *** Joins: CONSUMERA (~CONSUMERA@2600:1008:b10f:d8f6:bab3:18f6:a7d0:977d)
[00:27:27] <gwozniak> gerikson: it was cassettes all through high school for me :)
[00:28:18] <gwozniak> I couldn't really afford CDs until the end of high school, but I did have a few
[00:28:31] <gwozniak> No CD player in a car, tho
[00:28:40] * cd spins
[00:33:10] <gwozniak> I remember 8-tracks in cars when I was a kid
[00:39:17] <prussian> damn.
[00:39:53] <prussian> i'm too young for even cassettes honestly. though i've had cars with players for them.
[00:46:07] <epilys> I still buy tapes :)
[00:57:59] <indigo> Just as long as you don't buy apes
[01:00:59] <Church> My first music as a kid was on casettes heh
[01:01:15] <Church> And I was born in the latter half of the 90's so CDs weren't that unheard :p
[01:10:14] *** Quits: jaix (~jaix@user/jaix) (*.net *.split)
[01:10:14] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[01:10:14] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (*.net *.split)
[01:10:14] *** Quits: dcz_ (~dcz@user/dcz) (*.net *.split)
[01:10:15] *** Quits: danderson (~dave@tailscale/danderson) (*.net *.split)
[01:10:15] *** Quits: bkero (~bkero@osuosl/alumni/bkero) (*.net *.split)
[01:10:15] *** Quits: akspecs__ (~akspecs@user/akspecs) (*.net *.split)
[01:10:16] *** Quits: indigo (~indigo@user/indigo) (*.net *.split)
[01:10:16] *** Quits: cultpony (~cultpony@user/cultpony) (*.net *.split)
[01:10:17] *** Quits: art_vandelay (~art_vande@142.126.234.156) (*.net *.split)
[01:10:17] *** Quits: edef (~edef@user/edef) (*.net *.split)
[01:10:18] *** Quits: qa6 (sid145515@tinside.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: skyl4rk (~tlvb@user/tlvb) (*.net *.split)
[01:10:18] *** Quits: kz (~kzisme@user/kz) (*.net *.split)
[01:10:18] *** Quits: dasm (~dasm@2601:647:cd00:a4:5054:ff:feda:eded) (*.net *.split)
[01:10:19] *** Quits: wrl (~wrl@naphtha.ix.illest.net) (*.net *.split)
[01:10:19] *** Quits: kronk (~18137d14@user/imode) (*.net *.split)
[01:10:20] *** Quits: n3t (n3t@user/n3t) (*.net *.split)
[01:10:20] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[01:10:20] *** Quits: miah (~miah@173.255.215.56) (*.net *.split)
[01:10:20] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[01:10:20] *** Quits: noptys (~noptys@and.noemailaddress.com) (*.net *.split)
[01:10:20] *** Quits: mcint (mcint@user/mcint) (*.net *.split)
[01:10:20] *** Quits: drakonis (drakonis@user/drakonis) (*.net *.split)
[01:10:20] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[01:10:21] *** Quits: gerikson (~gerikson@user/gerikson) (*.net *.split)
[01:10:21] *** Quits: leon (~znc@user/leon) (*.net *.split)
[01:10:22] *** Quits: cb (~calvin@fctnnbsc38w-47-55-90-145.dhcp-dynamic.fibreop.nb.bellaliant.net) (*.net *.split)
[01:10:22] *** Quits: unlobito (~htw@rosemary.sys.canidae.systems) (*.net *.split)
[01:10:22] *** Quits: jlindgren[m] (~jlindgren@2001:470:69fc:105::1:2056) (*.net *.split)
[01:10:22] *** Quits: kline (~freedom0@libera/staff/kline) (*.net *.split)
[01:10:22] *** Quits: girst (~girst@zeta.gir.st) (*.net *.split)
[01:10:23] *** Quits: amir (sid22336@user/amir) (*.net *.split)
[01:10:23] *** Quits: Mai (~mai@user/mai) (*.net *.split)
[01:10:23] *** Quits: bradfier (~bradfier@user/bradfier) (*.net *.split)
[01:10:24] *** Quits: seabre (~seabre@user/seabre) (*.net *.split)
[01:10:24] *** Quits: Xe (~cadey@tailscale/xe) (*.net *.split)
[01:10:24] *** Quits: Geekingfrog (geekingfro@2a01:7e01::f03c:92ff:fe48:8bdf) (*.net *.split)
[01:10:25] *** Quits: ngoldbaum (sid407863@user/ngoldbaum) (*.net *.split)
[01:10:25] *** Quits: dmc (~dmc@archlinux/trusteduser/polyzen) (*.net *.split)
[01:10:25] *** Quits: buttsbot (~buttsbot@31.187.71.242) (*.net *.split)
[01:10:27] *** Quits: alpernebbi (~quassel@user/alpernebbi) (*.net *.split)
[01:10:27] *** Quits: dmc[m] (~dmcm]@archlinux/trusteduser/polyzen) (*.net *.split)
[01:10:27] *** Quits: Michi[m] (~michimatr@2001:470:69fc:105::6da) (*.net *.split)
[01:10:28] *** Quits: riv (river@tilde.team/user/river) (*.net *.split)
[01:10:28] *** Quits: prussian (~prussian@user/prussian) (*.net *.split)
[01:10:28] *** Quits: dimadima (~user@user/dimadima) (*.net *.split)
[01:10:28] *** Quits: gwozniak (~user@dslb8.ody.ca) (*.net *.split)
[01:10:28] *** Quits: moose (~moose@user/moose) (*.net *.split)
[01:10:29] *** Quits: WilhelmVonWeiner (~dch@static.172.136.9.5.clients.your-server.de) (*.net *.split)
[01:10:29] *** Quits: blissful (~blissful@user/blissful) (*.net *.split)
[01:10:30] *** Quits: martian67| (~martian67@user/martian67) (*.net *.split)
[01:14:17] *** Joins: jaix (~jaix@user/jaix)
[01:14:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:14:17] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[01:14:17] *** Joins: danderson (~dave@tailscale/danderson)
[01:14:17] *** Joins: dcz_ (~dcz@user/dcz)
[01:14:17] *** Joins: bkero (~bkero@osuosl/alumni/bkero)
[01:14:17] *** Joins: Xe (~cadey@tailscale/xe)
[01:14:17] *** Joins: Geekingfrog (geekingfro@2a01:7e01::f03c:92ff:fe48:8bdf)
[01:14:17] *** Joins: drakonis (drakonis@user/drakonis)
[01:14:17] *** Joins: akspecs__ (~akspecs@user/akspecs)
[01:14:17] *** Joins: cultpony (~cultpony@user/cultpony)
[01:14:17] *** Joins: indigo (~indigo@user/indigo)
[01:14:17] *** Joins: n3t (n3t@user/n3t)
[01:14:17] *** Joins: martian67| (~martian67@user/martian67)
[01:14:17] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[01:14:17] *** Joins: TallonRain (sid214799@user/tallonrain)
[01:14:17] *** Joins: amir (sid22336@user/amir)
[01:14:17] *** Joins: ngoldbaum (sid407863@user/ngoldbaum)
[01:14:17] *** Joins: dmc (~dmc@archlinux/trusteduser/polyzen)
[01:14:17] *** Joins: buttsbot (~buttsbot@31.187.71.242)
[01:14:17] *** Joins: cb (~calvin@fctnnbsc38w-47-55-90-145.dhcp-dynamic.fibreop.nb.bellaliant.net)
[01:14:17] *** Joins: dasm (~dasm@2601:647:cd00:a4:5054:ff:feda:eded)
[01:14:17] *** Joins: Mai (~mai@user/mai)
[01:14:17] *** Joins: alpernebbi (~quassel@user/alpernebbi)
[01:14:17] *** Joins: dimadima (~user@user/dimadima)
[01:14:17] *** Joins: gwozniak (~user@dslb8.ody.ca)
[01:14:17] *** Joins: moose (~moose@user/moose)
[01:14:17] *** Joins: unlobito (~htw@rosemary.sys.canidae.systems)
[01:14:17] *** Joins: edef (~edef@user/edef)
[01:14:17] *** Joins: qa6 (sid145515@tinside.irccloud.com)
[01:14:17] *** Joins: gerikson (~gerikson@user/gerikson)
[01:14:17] *** Joins: skyl4rk (~tlvb@user/tlvb)
[01:14:17] *** Joins: wrl (~wrl@naphtha.ix.illest.net)
[01:14:17] *** Joins: kz (~kzisme@user/kz)
[01:14:17] *** Joins: leon (~znc@user/leon)
[01:14:17] *** Joins: bradfier (~bradfier@user/bradfier)
[01:14:17] *** Joins: jlindgren[m] (~jlindgren@2001:470:69fc:105::1:2056)
[01:14:17] *** Joins: dmc[m] (~dmcm]@archlinux/trusteduser/polyzen)
[01:14:17] *** Joins: Michi[m] (~michimatr@2001:470:69fc:105::6da)
[01:14:17] *** Joins: edk (edk@libera/staff/edk)
[01:14:17] *** Joins: miah (~miah@173.255.215.56)
[01:14:17] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[01:14:17] *** Joins: kronk (~18137d14@user/imode)
[01:14:17] *** Joins: noptys (~noptys@and.noemailaddress.com)
[01:14:17] *** Joins: mcint (mcint@user/mcint)
[01:14:17] *** Joins: prussian (~prussian@user/prussian)
[01:14:17] *** Joins: riv (river@tilde.team/user/river)
[01:14:17] *** Joins: seabre (~seabre@user/seabre)
[01:14:17] *** Joins: girst (~girst@zeta.gir.st)
[01:14:17] *** Joins: kline (~freedom0@libera/staff/kline)
[01:14:17] *** Joins: blissful (~blissful@user/blissful)
[01:14:17] *** Joins: WilhelmVonWeiner (~dch@static.172.136.9.5.clients.your-server.de)
[01:14:29] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Max SendQ exceeded)
[01:14:33] *** Quits: glider (~glider@user/glider) (Max SendQ exceeded)
[01:15:19] *** Joins: glider (~glider@user/glider)
[01:15:40] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[01:28:29] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[01:32:56] <jjuran> I have a cassette in my car that, when I last listened to it years ago, was already decades old and sounded amazing.
[01:33:58] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:34:01] <jjuran> Then again, it's an Alan Parsons Project album, and when it comes to audio engineering they know WTF they're doing.
[01:34:51] <jjuran> A well-produced album on tape sounds much better than a badly made one on CD.
[01:36:48] <gerikson> I think reel-to-reel is gonna be the next hipster thing
[01:41:20] <jjuran> I just watched Pulp Fiction, and Mia plays music on a reel-to-reel
[01:43:53] *** Quits: dcz_ (~dcz@user/dcz) (Ping timeout: 252 seconds)
[01:50:52] <imode> oh wild, I missed the netsplit.
[01:53:19] <epilys> reel to reel is hard to get equipment for (I know, I've looked)
[01:53:24] <epilys> and the music selection is not great
[01:53:59] <gerikson> :(
[01:54:29] <epilys> I bought an album on a game boy advance cartridge recently
[01:54:33] <epilys> that's the next hipster thing
[01:55:48] <epilys> https://f4.bcbits.com/img/0025183287_10.jpg
[01:57:30] <jjuran> Oh, I wouldn't say I /missed/ it, Bob :-D
[02:11:36] <ngoldbaum> in the new beatles documentary they’re using an 8-track tape recorder the size of a cabinet
[02:11:51] <ngoldbaum> and this is the “portable” recording equipment on loan from EMI
[02:12:28] <ngoldbaum> high tech in 1969 i’m sure
[02:12:39] <ngoldbaum> also chain smoking in fur coats all day
[02:13:24] <gwozniak> I used something like this back when I did music production: https://reverb-res.cloudinary.com/image/upload/s--NkNJw7us--/a_exif,c_limit,e_unsharp_mask:80,f_auto,fl_progressive,g_south,h_620,q_90,w_620/v1471406895/n6fuilzkv9h5ik94zjnh.jpg
[02:13:35] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[02:13:58] <gwozniak> Didn't have the analog VU meters, though.
[02:39:54] <indigo> Send us some of your old tracks!
[02:56:31] *** Quits: jaix (~jaix@user/jaix) (Quit: Leaving)
[03:15:29] <imode> tomorrow I'll be 26.
[03:15:44] <imode> weird to be almost 30.
[03:32:09] <gwozniak> indigo: Long gone! But I did have to do a mix of this song: https://www.youtube.com/watch?v=WxZov_m9vVU
[03:32:10] <buttsbot> EVERYBODY WALK THE DINOSAUR - YouTube - https://www.youtube.com/watch?v=WxZov_m9vVU
[03:32:20] <gwozniak> I never need to hear it again
[03:33:11] <gwozniak> And I played bass for a recording of "Candle in the Wind".  This was before Princess Diana died, so it wasn't all that notable
[03:33:48] <gwozniak> imode: add 20 years to that and it's still weird
[03:41:02] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[03:41:39] *** Joins: edk (edk@libera/staff/edk)
[03:45:16] *** Quits: reneeontheweb (~reneeonth@2601:246:900:bba0:999f:f877:67b1:7251) (Ping timeout: 264 seconds)
[04:10:30] <indigo> imode: Somehow I thought you were much older!
[04:10:51] <indigo> LOL
[04:24:48] <imode> indigo: how much older lol.
[04:25:34] <skyl4rk> it's odd in between too
[04:28:13] <indigo> imode: Maybe mid-30s
[04:30:07] <imode> damn!
[04:30:15] <imode> people always think I'm older.
[04:30:19] <imode> maybe I am and I don't know it.
[04:30:27] <indigo> Hehehe
[04:30:39] <indigo> Leetcode Premium is on sale
[04:42:57] <gwozniak> https://twitter.com/CoinersTakingLs/status/1464728878329446400
[04:42:57] <buttsbot> Twitter - CoinersTakingLs - How it started / How it’s going https://t.co/92246HNEZ5
[04:47:21] <indigo> I was talking to a coworker today; apparently there are NFTs that will pay dividends
[04:48:13] <gwozniak> da fuq...
[04:48:58] <Brekkjern> I'd bet they are based on proof of stake if so
[04:49:32] <Brekkjern> I have a few shitcoins that are PoS that pay dividends
[04:49:57] <Brekkjern> I think I have made 10 eurocents from them now in total? :P
[04:53:05] <imode> indigo: which ones.
[04:54:13] <indigo> I'm not sure; he just said that they exist
[05:07:38] <imode> wild..
[05:15:42] <dimadima> how can an nft pay dividends i wonder
[05:16:26] <cb> https://sourcehut.org/blog/2021-11-29-announcing-the-chat.sr.ht-public-beta/ i see ulterior motives
[05:16:26] <buttsbot> Announcing chat.sr.ht: a persistent IRC session for sourcehut users
[05:38:44] <Church> cb: Those being?
[05:43:48] *** Quits: alpernebbi (~quassel@user/alpernebbi) (Ping timeout: 260 seconds)
[05:48:03] *** Joins: alpernebbi (~quassel@user/alpernebbi)
[08:39:55] *** Quits: cb (~calvin@fctnnbsc38w-47-55-90-145.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 250 seconds)
[09:07:27] *** Quits: jj5 (~jj5@111-220-243-3.dyn.dodo.net.au) (Quit: Konversation terminated!)
[09:11:00] *** Joins: jj5 (~jj5@111-220-243-3.dyn.dodo.net.au)
[09:15:52] *** Joins: cb (~calvin@47.55.246.142)
[09:33:33] *** Quits: cb (~calvin@47.55.246.142) (Ping timeout: 256 seconds)
[09:44:21] *** Joins: cb (~calvin@fctnnbsc38w-47-55-87-222.dhcp-dynamic.fibreop.nb.bellaliant.net)
[09:52:10] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[10:02:04] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 264 seconds)
[10:49:16] <indigo> Looks like someone posted it anyway
[10:55:06] <imode> I'm curious as to the ulterior motives as well.
[10:55:11] <imode> paid bouncer?
[10:58:42] <gerikson> imode: echoing a convo with cb / @calvin elsewhere, they see it as a way of Drew injecting himself into ircv3
[11:13:10] <imode> somehow I don't get that read.
[11:13:59] <imode> "We are involved in upstream IRCv3 development" nevermind.
[11:25:37] <gerikson> *shrug*
[11:25:49] <gerikson> as Ariadne says, nothings happening in ircv3 anyway
[11:27:04] <gerikson> can't tell if this is good or bad for "web3" https://news.ycombinator.com/item?id=29389707
[11:27:05] <buttsbot> NFTs Are Copyright for Web3 | Hacker News
[11:28:03] <gerikson> typical medium bullshit
[11:57:42] *** Joins: dcz_ (~dcz@user/dcz)
[12:34:39] *** Quits: gwozniak (~user@dslb8.ody.ca) (Ping timeout: 265 seconds)
[13:20:04] <gerikson> matricians upset that even after Freenode implosion, everyone still thinks Matrix sux https://lobste.rs/s/aejdvi/chat_sr_ht_persistent_irc_session_for#c_v7xbri
[13:20:05] <buttsbot> chat.sr.ht: a persistent IRC session for sourcehut users | Lobsters
[13:36:20] <kline> kek
[13:37:18] <kline> tbh given the massive webshit bloat that is synapse, i think ddv would probably excoriate any suggestion that it be used
[13:38:07] <kline> regardless of the merits or not of matrix, running an enormous python+js synapsed is antithetical to sourcehuts design philosophy of high thrust to weight
[14:14:52] <gerikson> someone is ham-curious https://news.ycombinator.com/item?id=29348950
[14:14:53] <buttsbot> Crystal Detector | Hacker News
[14:18:08] <akspecs__> gerikson: hey, long time no chat :)
[14:18:29] <akspecs__> curious, why do you think matrix sux?
[14:20:58] <gerikson> akspecs__: I've never used it
[14:21:04] <akspecs__> also, is it bad if drew injects himself into ircv3?
[14:21:05] <gerikson> it was a general observation
[14:21:31] <gerikson> I don't think matrix got a huge boost from freenode's death
[14:21:35] <akspecs__> gerikson: what have you used?  i've noticed number of people use irc through matrix
[14:22:05] <gerikson> akspecs__: re: Drew, I've seen him crash around in gemini like a bull in a china shop
[14:23:09] <gerikson> but maybe that's what ircv3 needs
[14:23:12] <gerikson> some action
[14:26:49] <gerikson> even @Ariadne (kinda active in ircv3) chose discord
[14:26:55] <gerikson> for her Treehouse
[14:31:48] <akspecs__> i imagine one can make the argument that if comparing among propietary chats, discord > slack / others
[14:35:19] *** Quits: akspecs__ (~akspecs@user/akspecs) (Quit: WeeChat 3.2)
[14:41:11] <gerikson> IRC is more socual for me, I don't rely on it to get work done
[14:42:13] <Brekkjern> Same
[14:42:18] <Brekkjern> I don't rely on it at all to get work done :P
[14:43:35] <Brekkjern> Discord is just a platform to talk shit with some gamer friends and play games with them. Works well for that.
[14:43:51] <defect> at work we have irc as a backup, and some greybeards use it
[14:44:50] <defect> use it day-to-day*
[14:59:55] * pja examines beard.
[16:38:37] <ngoldbaum> the problem is ircv3 adds a bunch of features that a lot of people who stick with IRC don’t want
[16:39:03] <ngoldbaum> like matrix adds all that stuff and some people certainly use it but lots don’t
[16:39:10] <ngoldbaum> and network effects are important
[16:55:13] *** Joins: gwozniak (~user@dsld24.ody.ca)
[16:57:04] <gerikson> I think having a bouncer "shell" (like IRCloud) is a good halfway step
[16:57:11] <gerikson> it can help with authentication etc
[16:57:16] <gerikson> which tbh is a fucking mess
[16:58:16] <gthm> sometimes I think I should setup a bouncer instead of tmux+irssi on a cloud vm
[16:58:23] <gthm> and then I realize I have better things to do
[16:58:28] <gwozniak> Same
[16:58:39] <gwozniak> I just deal with the regular disconnections
[16:58:58] <gwozniak> Because I don't want to bother getting some external resource that I have to manage
[16:59:06] <gthm> ++
[16:59:22] <gerikson> I tried setting up ZNC
[16:59:27] <gerikson> actually managed to do it
[16:59:33] <gerikson> but god it's a chore
[16:59:53] <gerikson> I only ddi it for mobile access then figured I don't want to be online *that* much
[16:59:59] <gthm> lol
[17:00:09] <gthm> yeah, that I don't have irc on my phone is a feature
[17:01:21] <Brekkjern> Quassel is so much better than ZNC IMO
[17:01:34] <Geekingfrog> 👀
[17:22:50] <gthm> anyway. my wife and I decided to leave NL and go to home (for me) to IS
[17:23:10] <gthm> we're sick of working jobs we don't particularly like just to pay for child care
[17:23:22] <gthm> and of being far away from family
[17:28:02] <gerikson> won't wife be even farther from her family?!
[17:28:10] <gerikson> j/k
[17:28:30] <gerikson> you have a place to stay in IS?
[17:28:40] * gerikson has not idea what the housing sitch is 
[17:29:51] <gthm> we don't have a place yet. maybe we can stay with some family for a couple of weeks while we find one, or we can find something quick to rent and look around for something to buy
[17:30:13] <gthm> we have to sell our place here first, which makes this a bit of a juggling manouver
[17:30:36] <gthm> in general the rental market is bad, but there's plenty to buy
[17:30:52] <gerikson> yeah same here
[17:30:59] <gerikson> lots of stuff but you have to pay $$$
[17:31:04] <gthm> yup
[17:31:18] <gthm> but then again you have to pay $$$$ here in NL as well, so maybe it'll even out
[17:40:55] <gerikson> sounds good to me
[17:41:04] <gerikson> good luck!
[17:41:16] <edm> feel like i could do with a single good book for implementing linear algebra - pseudo-inverses, svds and the like (in a low level language) - any recommendations? I often find myself doing something obvious and assume I'm missing out on cleverer ways
[17:44:16] <gerikson> so, algos for linalg, or general theory?
[17:44:51] <edm> algos i think
[17:44:59] <edm> i'm happy enough with the LA itself
[17:45:07] <gerikson> ok I got nothing ;)
[17:45:21] <gerikson> what language are you using?
[17:46:27] <edm> rust probably
[17:48:30] <gerikson> isn't there a fancy crate or w/e for that ?
[17:48:37] <gerikson> like Rust-Lapack?
[17:49:45] <gwozniak> gthm: yeah, good luck with the move!
[17:50:00] <gthm> gwozniak, gerikson: thanks!
[17:50:03] <edm> oh sure, but the question wasn't about doing the calcs
[17:50:08] <edm> it was about implementing the algos
[17:50:17] <edm> lapack not much use on an 8-bit micro, for example
[17:50:38] <gthm> in unrelated things, I think the most cursed thing I know about how TeX reads input is that it means the following works:
[17:51:03] <edm> 'most cursed' and 'TeX' is quite a combination
[17:51:07] <gthm> if you have a bunch of things like \sin(x) and you want to get rid of the parentheses, simply do \def\bsin(#1){\sin #1}
[17:51:14] <edm> i feel like anything w.r.t. TeX has a power relationship
[17:51:14] <gthm> and replace all the \sin(x) by \bsin(x)
[17:52:43] <gerikson> I see no issues with that
[17:53:11] <edm> i suppose it's just Numerical Recipes in C that i have at work somewhere, but translated
[18:11:49] <gwozniak> I watched a couple of Catholic masses yesterday from the church that my friend attends to see if the sermons may be the place he's getting some bad ideas.  Let me just say it is not my kind of thing. (The sermons were mostly benign, it turned out.)
[18:12:10] <gwozniak> I couldn't get over how weird the whole thing was
[18:14:49] <gwozniak> The rituals are just bizarre.  And I was forced to go to Lutheran church when I grew up
[18:15:42] <gwozniak> The sermons were mostly benign, but the bible passages that were read had me doing the Target lady reaction at times
[18:17:23] <gwozniak> Like, it really seemed like the key thing in life is to wait for death so you can go to heaven
[18:23:56] <gerikson> is it a tradcath  church? Latin rites?
[18:24:11] * gerikson is also culturally Lutheran
[18:24:33] <gerikson> which became really apparent when we were in Rome and I sneerd at the gold leaf everywher
[18:25:00] <gwozniak> I don't know if it's traditional Catholic.  I didn't hear any Latin so probably not.
[18:25:16] <gwozniak> I really don't know much about catholic rituals and such
[18:25:29] <gerikson> the last time I was at a Catholic mass was for the funeral of a contemporay of mine
[18:25:57] <gerikson> I don't think he was observant but his family hailed from France and Austria so...
[18:26:07] <gerikson> he was a distant relative of Wittgenstein
[18:26:15] <gwozniak> I've been to catholic wedding and funeral, but not a regular mass
[18:26:18] <gerikson> one of the smartest peopel I've ever known
[18:26:36] <gerikson> went through the ice when skating and died of exposure
[18:26:43] <gwozniak> oof
[18:26:49] <gerikson> big accident
[18:26:59] <gerikson> skating here is generally quite safe
[18:27:07] <gerikson> I think a dozen peopel went through
[18:27:15] <gerikson> so rescuers were stretched
[18:29:00] <gwozniak> I recently watched The Dead Zone.  Remeber this scene? https://www.youtube.com/watch?v=y-TUmx2Ow74
[18:29:01] <buttsbot> The Ice Is Gonna Break! - The Dead Zone (8/10) Movie CLIP (1983) HD - YouTube - https://www.youtube.com/watch?v=y-TUmx2Ow74
[18:32:27] <gwozniak> Lots of notable coincidences happening for me lately
[18:33:44] *** Joins: akspecs (00cc8321af@user/akspecs)
[18:47:48] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:55:10] <cb> i need to see it
[18:55:30] * ngoldbaum waits patiently for leviathan falls to show up
[18:57:10] <cb> videodrome is one of my favs so i wanna see the dead zone
[18:59:08] <ngoldbaum> https://twitter.com/jcs/status/1465704038645710862 jcs stroked out
[18:59:09] <buttsbot> Twitter - jcs - SM 0 A9F4 G 0
[18:59:35] <jjuran> Whoa, I know what that means :-)
[19:00:20] <gerikson> o_O
[19:00:28] <gerikson> is it bridge
[19:01:18] <jjuran> It invoked the ExitToShell trap from classic Mac OS' ROM debugger
[19:01:21] <jjuran> *invokes
[19:01:37] <gerikson> wow, so even nerdier than bridge
[19:01:56] <jjuran> It's useful for killing an application in an endless loop if you don't have Macsbug installed and Force Quit doesn't exist yet
[19:02:59] <ngoldbaum> is jcs trying to kill twitter?
[19:03:06] <jjuran> Computer:  End program.
[19:03:17] <jjuran> I have no idea what it actually means in context.
[19:08:49] *** Joins: reneeontheweb (~reneeonth@2601:246:900:bba0:b16d:9323:9170:328a)
[19:14:04] <gwozniak> Jack leaving had a more profound effect than we realized
[19:20:11] <dimadima> the lame thing about typescript's type system is that functions don't make named types. you need to use a class for that
[19:21:20] <companion_cube> what would a function as type mean?
[19:25:07] <dimadima> well in JS functions can be `NamedFunction`s
[19:25:44] <dimadima> and TS functions have types, so like (size: number) => string
[19:26:00] <dimadima> but in TS you can't use a function's name (if it has one) as a type
[19:26:24] <jjuran> What does it mean for a function to be a type?
[19:26:29] <dimadima> you need to do `(cb: () => void) => void
[19:26:46] <dimadima> where the type of `cb` can't be the name of a function
[19:26:55] <Brekkjern> jjuran: If a function is a type, then it is also "something" so you can pass a function around as a value and call that value to invoke that function.
[19:27:04] <dimadima> for a function to be a type, you could put its name wherever a type goes
[19:27:23] <jjuran> In Varyx, functions are definitely first-class values, but they're not types
[19:27:47] <jjuran> On the other hand, types are inherently usable as functions
[19:27:49] <dimadima> what is Varyx?
[19:28:01] <jjuran> My language:  https://www.vcode.org/
[19:28:02] <buttsbot> Varyx (A Programming Language)
[19:28:15] <dimadima> oh cool!
[19:28:35] <dimadima> awesome jjuran
[19:28:47] <dimadima> anyway, that was my gripe
[19:29:00] <jjuran> thanks
[19:30:01] <dimadima> jjuran: nice how you have GitHub under "Social Networks"
[19:30:47] <companion_cube> dimadima: oh you mean `f` would mean the type of `f`?
[19:36:08] <Brekkjern> Bleh. I don't want to have the exam tomorrow :(
[19:36:17] <dimadima> exactly
[19:37:30] <jjuran> dimadima: :-P
[19:37:35] <companion_cube> dimadima: that's kind of weird :D
[19:44:55] <dimadima> companion_cube: `f` instead of `typeof f`? they let you do `ClassName` instead of `typeof ClassName`... what's the difference?
[19:45:09] <companion_cube> a class is already a type? :)
[19:45:24] <dimadima> why isn't a function a type?
[19:45:27] <dimadima> :)
[19:45:45] <companion_cube> a function is a value
[19:45:58] <companion_cube> is a class a value? afaik it's not, it's a template to make values (thus, a type)
[19:46:05] <Brekkjern> https://docs.python.org/3/library/typing.html#callable
[19:46:05] <buttsbot> typing — Support for type hints — Python 3.10.0 documentation
[19:46:12] <Brekkjern> That is an example of it in Python
[19:46:12] <dimadima> a function is a value
[19:46:19] <dimadima> i see
[19:46:31] <Brekkjern> That link is about the typing of it, but it illustrates the mechanics of it
[19:46:34] <companion_cube> I mean there are function types, Brekkjern
[19:46:39] <companion_cube> but a function is not its type
[19:46:49] <Brekkjern> No it is not. It is it's own type
[19:46:56] <dimadima> but a class is a function in JS/TS
[19:47:01] <dimadima> that's the thing about it
[19:47:10] <dimadima> and it can certainly be a value in JS/TS
[19:47:11] <companion_cube> a class can be applied, but it's not a function… is it?
[19:47:21] <dimadima> it is technically in JS/TS
[19:47:24] <companion_cube> heh, fun
[19:47:34] <companion_cube> well the runtime component is the constructor
[19:47:39] <dimadima> class syntax is sugar
[19:47:47] <dimadima> i guess yeah
[19:47:58] <companion_cube> the class represents the type of the _return value_ of its constructor
[19:48:07] <companion_cube> not the type of the constructor itself (which is the function)
[19:48:18] <Brekkjern> def some_func(proc: Callable[[int], int]) -> int:
[19:48:18] <Brekkjern> This function, some_func, would accept a function that accepts an integer. Both proc and some_func would return an integer.
[19:48:22] <dimadima> companion_cube: well what's fun about that is constructors in JS do not return the constructed value
[19:49:04] <dimadima> but generally i see what you're saeying
[19:49:13] <dimadima> or at least i think do
[19:49:34] <companion_cube> it's an interesting idea to have a function refer to its type
[19:49:39] <companion_cube> never seen that before :D
[19:49:57] <dimadima> that's what a class in TS is :/
[19:50:02] <dimadima> unless i'm misunderstanding it
[19:50:09] <dimadima> (cause a class is a function)
[19:50:22] <dimadima> except i guess it's limited and different
[19:50:30] <dimadima> (can't return anything)
[19:50:50] <Brekkjern> Bleh, this sounds like some shit I will have on the exam tomorrow :S
[19:50:58] <Brekkjern> I don't want it at all
[19:51:08] <dimadima> what's your exam?
[19:51:10] <dimadima> this type shit
[19:51:12] <Brekkjern> FP
[19:51:16] <Brekkjern> Or rather, Scheme
[19:51:23] <companion_cube> dimadima: sounds to me like a class is more like a type with additional runtime stuff
[19:51:31] <companion_cube> in TS, anyway
[19:51:44] <companion_cube> describes an object with sugar to build it
[19:52:20] <Brekkjern> In Scheme, you can make an object by doing fancy shit with lambdas
[19:53:46] <Brekkjern> So really, you can represent an object in at least two ways. Attaching functions to a struct, or by doing fancy shit with lambdas that refer to various frames/environments/scopes.
[19:57:03] <Brekkjern> All of this is pretentious wankery IMO :P
[19:57:57] <companion_cube> only if you think programming languages don't matter :p
[19:58:21] *** Quits: prussian (~prussian@user/prussian) (Quit: goodbye)
[19:59:17] <Brekkjern> I do think they matter, but the difference is so minute that I don't really see why it is all that important
[19:59:33] <Brekkjern> I mean, what is an environment if not a struct that you have attached more meaning to?
[20:00:32] <companion_cube> idk that scheme has always had structs
[20:00:48] <companion_cube> you can consider that closures (and lambda calculus) are foundational enough that you can do everything with them
[20:01:00] <companion_cube> in practice you may not want to, but still, it's good to know that it's equivalent
[20:01:53] <Brekkjern> Yeah
[20:05:13] <Brekkjern> I'm consoling myself that I won't be touching Scheme and thinking about shit like this after tomorrow :P
[20:05:22] <Brekkjern> I can't wait..
[20:07:36] <gwozniak> I hope some of the info from the course is insightful at some point, but regardless, good luck on your exam tomorrow :)
[20:09:54] <Brekkjern> gwozniak: Thanks :) I mean, some of it was nice, but a lot of it was just Scheme and a very cursory overview of what FP is.
[20:10:21] <Brekkjern> I couldn't explain the finer points after this to be honest.
[20:12:41] <Brekkjern> Bleh... I'll have a break from the studying now and re-watch an episode of Arcane while I eat :S
[20:12:52] <Brekkjern> Hopefully I will be able to read a bit more after that...
[20:13:22] *** Quits: hoistbypetard (~hoistbype@user/hoistbypetard) (Ping timeout: 256 seconds)
[20:13:31] *** Joins: hoistbypetard_ (hoistbypet@user/hoistbypetard)
[20:13:52] <Brekkjern> Again, I cannot recommend that series enough. Just stick through the first 3 episodes.
[20:13:56] <indigo> Good luck on your exam tomorrow Brekkjern!
[20:13:56] *** Quits: harrow (~harrow@static.38.6.217.95.clients.your-server.de) (Ping timeout: 256 seconds)
[20:14:01] <Brekkjern> indigo: Thanks :)
[20:14:30] *** Quits: companion_cube (~simon@user/companion-cube) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: defect (~defect@vps-1.nyc1.defect.se) (Ping timeout: 256 seconds)
[20:15:04] *** Joins: harrow (~harrow@static.38.6.217.95.clients.your-server.de)
[20:15:05] *** Quits: Skarn (~skarn@user/skarn) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: letoram (~bjorn@user/letoram) (Ping timeout: 256 seconds)
[20:16:17] *** Joins: defect (~defect@vps-1.nyc1.defect.se)
[20:16:27] *** Joins: Skarn (~skarn@user/skarn)
[20:16:27] <indigo> Back to Python after this? :)
[20:16:38] <indigo> Peter Norvig ditched Lisp for Python
[20:16:41] <indigo> High praise
[20:16:53] <Brekkjern> Python is my favorite language to use, yeah
[20:17:08] *** Joins: letoram (~bjorn@user/letoram)
[20:18:09] <Brekkjern> After adding typing and using an editor that wasn't bleeding edge in the 90's, it is a very comfortable and good language to work in
[20:19:36] <gwozniak> indigo: he saw the writing on the wall
[20:20:40] <indigo> Python has first class functions anyway
[20:21:20] <indigo> No tail recursion though
[20:21:25] <Brekkjern> Structurally, changing something in Scheme requires you to rebuild large parts of the program. Python (and other similar languages) don't really have that weakness.
[20:21:35] <Brekkjern> Yeah. I miss tail recursion in Python
[20:21:40] <Brekkjern> But that's the only thing I miss
[20:23:05] <Brekkjern> But now I'm gonna watch some Arcane and hopefully manage to study through the tears afterwards
[20:25:41] *** Joins: prussian (~prussian@user/prussian)
[20:27:28] *** Joins: companion_cube (~simon@user/companion-cube)
[20:33:29] <ngoldbaum> python 2.7 was peak python
[20:33:31] <ngoldbaum> fite me
[20:34:50] <gwozniak> no argument here
[20:36:28] <dimadima> really don't feel like programming
[20:40:24] <gwozniak> I'm waiting for a build to finish so I can actually debug some library build mess
[21:02:22] <Brekkjern> Python is much better now that strings are actually strings IMO.
[21:03:21] <Brekkjern> It makes it a tiny bit iffier to deal with bytes, but you can deal with them as either bytestrings or integers, so that works for me
[21:03:33] <Brekkjern> Or structs
[21:03:37] * ngoldbaum continues needing only ascii
[21:04:14] <Brekkjern> Så heldig for deg at du ikke trenger et utvidet karaktersett :)
[21:06:28] <imode> another year older, another year.. wiser? nahhhhhhh.
[21:07:10] <companion_cube> I guess fstrings are a net positive?
[21:07:21] <Brekkjern> Yeah
[21:07:50] <Brekkjern> And r strings too IMO. Not sure when those were added though
[21:08:45] <ngoldbaum> hmm 8°C and warming up
[21:08:56] * ngoldbaum thinks about going for a run
[21:35:10] <indigo> I feel like Python moves more and more from "There should be one-- and preferably only one --obvious way to do it."
[21:35:46] <kline> how many ways can i format a string now?
[21:36:14] <Brekkjern> indigo: Yeah, but I don't think that is the strongest point of the language IMO
[21:36:58] <kline> "a: "+value , "a: %s" % value, "a: {}".format(value), f"a: {value}" ?
[21:37:03] <indigo> Yeah for sure. IMO the strongest points are the libraries (including stdlib!) and the fast iteration time
[21:37:23] <indigo> I should really use f-strings more
[21:37:24] <Brekkjern> kline: You missed f"{=value}"
[21:37:35] <kline> still an fstring
[21:37:42] <Brekkjern> Not entirely the same, but still a cool thing
[21:37:52] <Xe> f to pay respects
[21:37:56] <imode> fstring reminds me of ruby's strings.
[21:37:58] <companion_cube> kline: the question is more, why wouldn't you use a fstring, now
[21:38:03] <companion_cube> - I think
[21:38:26] <kline> cause explicit is better than implicit - use .format()
[21:38:36] <Brekkjern> companion_cube: They are evaluated eagerly, so if you don't actually use the string because of some other reason, then you have wasted time doing the concatenation
[21:39:02] <companion_cube> so does % no?
[21:39:14] <companion_cube> I mean, if you're in a branch where you do the formatting, you'll do it in any case
[21:39:20] <companion_cube> whether you use .format() or f""
[21:39:30] <Brekkjern> Yeah, but many logging libraries take an arbitrary amount of values and then tests if it should print them
[21:40:18] <Brekkjern> Doing the concatenation lazily will save you a few cycles then
[21:40:20] <companion_cube> ah!! yeah that's a place for .format for sure
[21:40:33] <companion_cube> but it's on the logging function to do it
[21:40:36] <Brekkjern> Indeed
[21:50:55] <gwozniak> I still use .format()
[21:51:10] <gwozniak> But I write very little Python these days
[21:58:35] <indigo> Python is the one nice thing about studying for job interviews
[21:59:00] <indigo> So many great tools to use when solving toy problems
[21:59:16] <indigo> set, deque, ordereddict, heapq
[22:02:05] <gwozniak> Yeah, all those useful data structures
[22:02:15] <gwozniak> That's really the great part about it
[22:03:23] <companion_cube> isn't ordereddict redundant now? :)
[22:11:41] <imode> deque is my life.
[22:12:23] <edk> it's... rare to actually need those things
[22:12:40] <imode> what, ordered dicts?
[22:12:46] <edk> yeah
[22:12:52] <imode> yeh.
[22:12:56] <edk> i'm very annoyed that they made regular dicts preserving order part of the language spec
[22:13:26] <imode> what's the argument against it.
[22:13:46] <edk> you shouldn't promise more things than you have to
[22:13:47] <companion_cube> it's a bit slower? but then it's python so who cares
[22:13:49] <edk> the reason they did it comes from a strange optimisation that is afaict only useful for python because of other terrible features
[22:14:12] <edk> but now that it's part of the spec (well, documentation; python is too cool to have an actual spec) every implementation will have to do it forever
[22:14:25] <imode> joy.
[22:17:56] <gwozniak> Yeah, I don't get that "requirment"
[22:18:08] <companion_cube> tbh for a language where dictionaries are the universal swiss army knife, it makes sense
[22:18:16] <companion_cube> it's useful in a few more cases
[22:21:34] <imode> are they in sorted order or in insertion order.
[22:22:33] <Geekingfrog> insertion order
[22:22:45] <imode> are sets ordered similarly?
[22:23:27] <Brekkjern> I don't believe so
[22:29:40] <indigo> Let's seee
[22:30:22] <indigo> Nope
[22:31:25] <indigo> Python ordered dict makes the LRU cache problem easy to do :) although they'll probably tell you something like "write it as if dict wasn't ordered"
[23:09:52] *** Quits: reneeontheweb (~reneeonth@2601:246:900:bba0:b16d:9323:9170:328a) (Remote host closed the connection)
[23:15:08] *** Joins: reneeontheweb (~reneeonth@2601:246:900:bba0:a585:bf76:842a:e904)
