[00:01:48] *** Joins: SpecialK (~toor@django/moderator/doismellburning)
[00:01:48] *** ChanServ sets mode: +v SpecialK
[00:11:36] <vlt> ktosiek: I didn't want to use PBKDF2HMAC from cryptography directly because it lives in the "hazmat" territory. Yes, Django's PBKDF2PasswordHasher.encode() returns a formatted "pbk...$<iterations>$<salt>$..." string that .decode() splits into a dict but it feels unneccessarily complicated :|
[00:11:56] *** Quits: minto (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[00:13:16] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[00:15:10] <vlt> Another question: From which method of a FormView can I call a redirect() no matter if the form is valid or invalid?
[00:15:52] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:17:37] <SpecialK> vlt: in what situation do you want to redirect?
[00:18:05] <vlt> SpecialK: If some request.session value is True.
[00:18:23] <ktosiek> I think you are a bit too nervous about the "hazmat" designation: if you know what PBKDF2 is for, and why it uses a salt and iterations count, it should be ok. It's not more dangerous than the Django's wrapper
[00:18:38] <SpecialK> vlt: when?
[00:18:46] <vlt> ktosiek: Ok, thanks.
[00:19:25] <vlt> SpecialK: Instead of processing the form would be fine.
[00:20:46] <vlt> SpecialK: In my draft it works fine if I out the check both in form_valid() and form_invalid() but there must be a better place ;-)
[00:20:54] <vlt> s/out/put
[00:25:25] <SpecialK> vlt: check out FormView source and you'll see where they're both called from - override that
[00:30:21] <SpecialK> vlt: ProcessFormView.post - override that
[00:44:54] *** Joins: shelle (~shelle@ip-96-43-235-154.dsl.netrevolution.com)
[00:52:14] <shelle> Hi, within template command like {% include path_to_template.html with a="lot" of=variables %} is there a way to break lines to make the code more readable? thanks
[00:56:23] <GinFuyou> Why do you pass a lot of vars? include by default pass full context, if you need some specific context for, maybe prepare and pass it as a dict?
[01:01:36] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[01:16:00] *** Joins: admin123 (~harrymore@2607:fb90:55a3:5860:a5d7:b82b:a4ef:d9aa)
[01:51:47] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[02:07:40] *** Quits: ekathva (~ekathva@n2gvphjzi3l3fwqfx-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[02:25:24] *** Joins: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it)
[02:31:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:31:06] *** ChanServ sets mode: +v EvilDMP
[02:32:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:33:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[02:34:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:39:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[02:41:08] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:43:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[02:45:39] *** Quits: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se) (Ping timeout: 268 seconds)
[02:47:17] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[02:48:04] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:50:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:07:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:08:33] *** Joins: audio (~audio@user/audio)
[03:11:35] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[03:12:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[03:15:52] *** Joins: sydbarret (~anton@static-186-121-195-1.acelerate.net)
[03:16:07] <sydbarret> Im trying to implement this on python  https://paste.ofcode.org/ypMEME9MftpHVGGQVuYKyK  and here is my python attempt https://paste.ofcode.org/xQGHApL4kdGuaQJBsfEHcJ. Anything wrong?
[03:19:32] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:25:32] *** Quits: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it) (Quit: Leaving.)
[03:26:35] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[03:38:05] *** Quits: sreve (~quassel@p4ff44127.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:46:11] *** Joins: [ohjn] (~jndev@2601:c6:8401:c2d0:89ab:5fad:3e92:1a22)
[03:47:47] *** Joins: sreve (~quassel@p54a71f06.dip0.t-ipconnect.de)
[03:50:24] *** Quits: admin123 (~harrymore@2607:fb90:55a3:5860:a5d7:b82b:a4ef:d9aa) (Ping timeout: 268 seconds)
[04:23:47] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[04:41:04] *** Quits: sydbarret (~anton@static-186-121-195-1.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:44:28] *** Quits: [ohjn] (~jndev@2601:c6:8401:c2d0:89ab:5fad:3e92:1a22) ()
[04:54:19] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:03:38] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[05:03:58] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:15:42] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:15:53] *** Joins: yanchai (~yanchai@115.147.34.99)
[05:23:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:27:49] *** Quits: yanchai (~yanchai@115.147.34.99) (Quit: leaving)
[05:28:22] *** Joins: yanchai (~yanchai@115.147.34.99)
[05:29:28] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:34:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:37:39] *** Joins: epony (epony@user/epony)
[05:38:07] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[05:39:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[05:39:05] <yanchai> is it ideal to use django-crispy-forms for login?
[05:40:22] <yanchai> i mean should i even use the django LoginView class with crispy-forms? or should i create my on views in authenticating and logging a user? which is the best practice?
[05:43:10] *** Joins: twinsignal (~twinsigna@89.46.114.40)
[05:44:08] *** Quits: twinsignal (~twinsigna@89.46.114.40) (Remote host closed the connection)
[06:09:57] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:11:28] *** Joins: justAstache (~justache@user/justache)
[06:36:08] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[06:37:15] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:40:55] <yanchai> is there a way to customize the django-crispy-forms specifically the login form? sorry to ask but i cant find any solutions so far :(
[06:41:17] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[06:44:27] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:48:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[06:54:33] *** Quits: georgereynolds (~georgerey@203.229.204.205) (Quit: Goodbye.)
[06:56:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[06:56:25] *** ChanServ sets mode: +v EvilDMP
[06:56:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[06:57:38] *** Joins: audio (~audio@user/audio)
[06:57:55] *** Joins: georgereynolds (~georgerey@203.229.204.205)
[07:06:22] <FunkyBob> yanchai: what benefit are you using crispy forms for, specifically?
[07:06:35] <FunkyBob> isn't its whole purpose to allow you to customise how forms are rendered?
[07:10:12] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 240 seconds)
[07:41:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[07:41:10] *** ChanServ sets mode: +v EvilDMP
[07:50:29] *** Quits: sreve (~quassel@p54a71f06.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:50:58] *** Joins: sreve (~quassel@p549d7015.dip0.t-ipconnect.de)
[08:04:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:05:07] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:06:29] *** Quits: georgereynolds (~georgerey@203.229.204.205) (Quit: Goodbye.)
[08:07:33] *** Joins: georgereynolds (~georgerey@203.229.204.205)
[08:11:42] *** Joins: yanchai (~yanchai@115.147.34.99)
[08:11:44] <yanchai> hi
[08:11:57] <yanchai> how do we access the @property function from model to template?
[08:18:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:21:05] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 256 seconds)
[08:24:20] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[08:27:53] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[08:28:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:32:45] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:37:20] *** Quits: georgereynolds (~georgerey@203.229.204.205) (Quit: Goodbye.)
[08:38:02] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[08:38:53] *** Joins: georgereynolds (~georgerey@203.229.204.205)
[08:40:37] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 240 seconds)
[08:48:18] *** Joins: ekathva (~ekathva@n2gvphuai7dnh8dcm-1.v6.elisa-mobile.fi)
[08:49:29] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[09:10:36] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:23:30] *** Joins: yanchai (~yanchai@115.147.34.99)
[09:27:42] <yanchai> is there a way to block specific urls based on usertype using middleware?
[09:28:58] <dodo> user type?
[09:29:17] <dodo> probably yes, just do it?
[09:29:45] *** Joins: djapo (~archangel@user/djapo)
[09:30:01] <yanchai> my user model has a field user_type choices are teacher, students. i would like to make user these specific urls are for students only
[09:30:18] <yanchai> dodo: do you have a sample code on how to implement those?
[09:30:48] <yanchai> *make sure
[09:30:56] <dodo> yanchai: you can start here https://docs.djangoproject.com/en/4.0/topics/http/middleware/#writing-your-own-middleware
[09:31:01] <dodo> look at the request.user object
[09:32:10] <yanchai> in my experience in laravel there is middleware that can be hooked to urls group i would like to know if there is that same feature in django too would be great. i am migrating my laravel app to django btw im a bit newbie here hehehe
[09:32:49] <dodo> the generic approach would probably be to use the permission system
[09:33:02] *** Joins: jmd (~user@de.cellform.com)
[09:33:43] <yanchai> what i am thinking is whenever they type those specific urls they will be redirected to homepage with error saying not accessible
[09:39:40] <yanchai> i mean how can i implement my middleware to url routes?
[09:41:49] <dodo> the middleware runs always, so you need to check the url in your middleware
[09:42:18] <yanchai> oh ok i thought u need to inject them to group urls
[09:42:21] <yanchai> thanks mate
[09:52:31] *** Joins: dor (~erg@188.146.36.240.nat.umts.dynamic.t-mobile.pl)
[10:02:15] *** Joins: stdedos (~Guest62@user/stdedos)
[10:04:49] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[10:05:12] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:09:29] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[10:13:49] <yanchai> can we use redirect_authenticated_user=True in fbv login?
[10:18:52] *** Joins: emamirazavi (~emamiraza@2a01:5ec0:7000:b3cf:98d3:2dff:fe79:602)
[10:20:00] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:21:04] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[10:22:21] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 256 seconds)
[10:23:04] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[10:23:19] <stdedos> If I use a `urlpatterns.path` with a plain `views.py` function, is there an "eloquent" way to say what HTTP Methods does it support (and throw 405 on the other ones), or do I need to write an if/elif/else block?
[10:25:25] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[10:32:26] *** Joins: Atque (~Atque@user/atque)
[10:32:48] *** Quits: Atque (~Atque@user/atque) (Client Quit)
[10:34:14] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:36:36] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 240 seconds)
[10:38:04] *** Quits: dor (~erg@188.146.36.240.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[10:42:18] *** Joins: Atque (~Atque@user/atque)
[10:46:24] *** Joins: yanchai (~yanchai@115.147.34.99)
[10:46:32] <FunkyBob> stdedos: there's a decorator, iirc
[10:47:39] <FunkyBob> stdedos: https://docs.djangoproject.com/en/4.0/topics/http/decorators/#allowed-http-methods
[10:48:36] *** Joins: mrwick (~mrwick@user/mrwick)
[10:49:34] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:54:04] <stdedos> Oh, silly mi :sweat:
[10:54:12] <stdedos> Thank you for the doc digging :-D
[10:58:02] <yanchai> hi bob
[10:58:28] <yanchai> FunkyBob: is there a way to use redirect_authenticated_user=True in a function based view login?
[10:59:35] <yanchai> the only issue i have in using the LoginView cbv is i cant add icons to its input field so yeah i used fbv instead for my login but i dunno how to implement the redirect_authenticated_user=True in fbv
[10:59:42] <yanchai> thanks in advance mate
[11:00:47] <FunkyBob> icons? input fields?  that's the form, surely, not the view?
[11:01:42] <FunkyBob> on a regular view, you would use the user_passes_test decorator
[11:02:09] <FunkyBob> in which case it's easy for you to control what it does
[11:05:18] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[11:05:38] <yanchai> can i use 2 decorators at the sametime like @login_required and @user_passes_test?
[11:05:49] *** Joins: djapo (~archangel@user/djapo)
[11:06:26] <yanchai> sorry this is a dummy question :)
[11:07:52] *** Quits: kostkon_ (~androirc@2a02:587:a10f:c988:7978:f3ec:a9a9:427e) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[11:08:53] <FunkyBob> login_required is a wrapper for user_passes_test
[11:09:10] *** Joins: jgee636 (~jgee@186.80.49.20)
[11:09:51] <FunkyBob> https://github.com/django/django/blob/main/django/contrib/auth/decorators.py#L10
[11:09:56] <FunkyBob> https://github.com/django/django/blob/main/django/contrib/auth/decorators.py#L43
[11:10:18] <FunkyBob> it simply passses a test function of--  lambda u: u.is_authenticated
[11:11:18] *** Quits: jgee63 (~jgee@186.80.49.20) (Ping timeout: 272 seconds)
[11:11:19] *** jgee636 is now known as jgee63
[11:11:20] <yanchai> the idea of my view is to make sure that the view will execute if the user is authenticated and at the same time the user_type == 'student'
[11:12:15] <yanchai> my goal is to prevent unnecessary query in the backend rather than implement it on templates using permissions
[11:12:45] <yanchai> also i would like to disallow other type of users to access specific urls
[11:15:22] <yanchai> FunkyBob: i figured out on those decorators thanks :)
[11:15:32] <yanchai> FunkyBob: last question though
[11:16:02] <yanchai> FunkyBob: is there a way to use the redirect_authenticated_user in login url using a function based view?
[11:16:25] <yanchai> i just wanna make sure that login form will not be redirected if user is authenticated
[11:18:32] <FunkyBob> not sure I follow
[11:18:46] <FunkyBob> are we talking about a view that's @user_passes_test decorated?
[11:18:49] <FunkyBob> or the login view itself?
[11:19:31] <yanchai> well my current url   path('login/', LoginView.as_view(template_name='account/auth/login.html', redirect_authenticated_user=True), name='login'), works fine
[11:20:03] <FunkyBob> ok?
[11:20:10] <yanchai> but since i am using function based view i dunno how to implement it using user_passes_test
[11:20:22] <FunkyBob> implement what, exactly?
[11:20:26] <FunkyBob> describe the behavior you want
[11:20:38] <yanchai> path('login/', login_student, name='login'), this is now my login url
[11:20:48] <FunkyBob> so you're writing your own login view for some reason?
[11:20:56] <yanchai> yes mate
[11:21:19] <FunkyBob> to... ensure the user is a student type user?
[11:21:33] <yanchai> yes mate exactly
[11:21:36] <FunkyBob> (which you could do in the Form validation...)
[11:21:56] <FunkyBob> but you want to make sure logged in users that _aren't_ students... don't get redirected?
[11:22:08] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:22:17] <yanchai> yes sir
[11:22:20] <FunkyBob> (or get redirected elsewhere?)
[11:22:24] <yanchai> yes
[11:22:42] *** Joins: theprophet (~theprophe@212.58.102.155)
[11:23:21] *** Joins: pycode (~pycode3@2001:b07:5d28:551:12ef:ed76:5dba:9e9c)
[11:23:28] <FunkyBob> well, in your view you could put the test in there explicitly easily enough
[11:23:51] <FunkyBob> if request.user.is_authenticated() and request.user.user_type != 'student':
[11:25:01] <yanchai> i did add a test and it works but if the student is logged in and goes to login/ it shows the loginform
[11:26:04] <yanchai> oh got it
[11:26:12] <yanchai> ill just include it in my login views then
[11:26:15] *** Joins: sandeepk (~sandeepk@223.130.30.239)
[11:26:16] <yanchai> thanks mate :)
[11:26:37] <yanchai> should i use request.user.is_authenticated in my view or user.is_authenticated?
[11:27:07] <FunkyBob> hard to say when I can't see your view
[11:27:17] <theprophet> FunkyBob bob, can you help me to understand,  where is this question on line 4 coming , from? https://dpaste.org/jocg , when my detail view looks like this ? https://dpaste.org/DA9X
[11:27:17] <FunkyBob> you would be testing right at the start of the view, I assumed
[11:27:47] <FunkyBob> theprophet: do you mean the view on line 16?
[11:28:00] <theprophet> yes
[11:28:10] <yanchai> https://dpaste.org/ScLa this is my login view
[11:28:40] <yanchai> https://dpaste.org/3t0p and this is my index view
[11:28:57] <FunkyBob> theprophet: by default the DetailView adds the model instance into the context as 'object' _and_ its class name (lower cased)
[11:29:13] *** Quits: stdedos (~Guest62@user/stdedos) (Quit: Client closed)
[11:29:13] <FunkyBob> yanchai: why is the index view relevant?
[11:29:33] <FunkyBob> yanchai: the test I suggested would go at line 2... before the view does any other work
[11:29:37] <theprophet> so its detailView where its coming from? like it lowers the Question class?
[11:29:50] <FunkyBob> yanchai: however you'd _also_ have your Form validate the user is a student
[11:29:52] <yanchai> its a sample view for student dashboard will update that later when i understand the logic on the redirect when logged in
[11:30:13] <FunkyBob> theprophet: it uses the model_name [there's an algorithm for it]
[11:30:20] <FunkyBob> theprophet: but, yes, it's the view populating the context
[11:30:23] <yanchai> i validate here https://dpaste.org/ScLa
[11:30:41] <FunkyBob> yanchai: ok, but how is the index view relevant to what we're talking about _now_?
[11:31:00] <FunkyBob> that login view triggers the form validation... but it's not the validation in the form.
[11:31:06] <theprophet> FunkyBob wow. wow. wow.  i am so pissed rn.. ok bro you, i thank you.. but django documentation is horrible.
[11:31:07] <FunkyBob> forms are for validating user input.
[11:31:20] <FunkyBob> theprophet: the class-based view docs are ... lacking.
[11:31:36] <FunkyBob> theprophet: https://docs.djangoproject.com/en/4.0/ref/class-based-views/mixins-single-object/#django.views.generic.detail.SingleObjectMixin.get_context_data
[11:31:39] <theprophet> yeaa, bro thanks.
[11:32:02] <FunkyBob> https://docs.djangoproject.com/en/4.0/ref/class-based-views/generic-display/#django.views.generic.detail.DetailView
[11:32:13] <yanchai> yes i understand that part. my concern is if the students are logged in the login form still shows vial login/
[11:32:25] <yanchai> which should redirect him back to index once user is logged in
[11:32:40] <theprophet> FunkyBob yes but, see there kwargs? when i change the question in detail html it does not show the model quory anymore, thats the worse part there.
[11:32:53] <yanchai> and i figured it out already
[11:33:25] <FunkyBob> theprophet: sorry, what?
[11:33:41] <yanchai> if i may sir i would like to clarify which is appropriate in the view between request.user.is_authenticated vs user.is_authenticated?
[11:34:05] <FunkyBob> yanchai: if you're putting that test where Itold you, only one of those could possibly work.
[11:34:25] <yanchai> ok thanks mate
[11:34:25] <theprophet> FunkyBob get_context_data(**kwargs)
[11:35:03] <yanchai> FunkyBob: thanks mate got it!
[11:35:09] <FunkyBob> theprophet: what about it?
[11:35:42] <theprophet> FunkyBob if question in detail.html is provided by generic.DetailView
[11:36:09] <FunkyBob> yes...?
[11:36:17] <theprophet> how come , when i change the question to something else, like question 1, the quory is not shown anymore on localhost
[11:36:32] <FunkyBob> how are you 'changing the question'?
[11:36:42] <FunkyBob> and what is a 'quory'?  do you mean query? or...?
[11:36:46] <theprophet> {{ question.question_text }}
[11:36:47] <theprophet> this works
[11:36:52] <theprophet> but this one does not
[11:36:55] <theprophet> {{ question1.question_text }}
[11:37:00] <FunkyBob> why would it?
[11:37:06] <FunkyBob> where did question1 come from?
[11:37:20] <theprophet> where did question come from? from Question right?
[11:37:25] <FunkyBob> from the view
[11:37:32] <FunkyBob> the view put it in the template context.
[11:37:41] <theprophet> yes that u told me yes
[11:37:47] <FunkyBob> you learned that in the tutoria,.
[11:37:49] <FunkyBob> tutorial.
[11:37:55] <theprophet> what?
[11:37:59] <theprophet> no bro
[11:38:07] <theprophet> i am asking something else
[11:38:16] <theprophet> in detail.html
[11:38:19] <FunkyBob> well, I have on idea what... you seem to imply a lot
[11:38:23] <theprophet> theres this text {{ question.question_text }}
[11:38:25] <FunkyBob> and expect me to infer it
[11:38:26] <FunkyBob> yes
[11:38:43] <theprophet> where is this lowercase question come from exacyl?
[11:38:46] <theprophet> exactly
[11:38:53] <FunkyBob> that name?  it's derived from the model name
[11:39:02] <theprophet> Question right?
[11:39:05] <FunkyBob> right
[11:39:18] <theprophet> ok so now tell me this
[11:39:45] <theprophet> when i change the name of the model
[11:39:50] <theprophet> how is it still working?
[11:39:54] <theprophet> this {{ question.question_text }}
[11:40:10] <FunkyBob> you'd have to fill in all the details about _how_ you changed the name of the model
[11:40:21] <theprophet> manualy
[11:40:23] <FunkyBob> because "i change the name of the model" could mean a LOT of different things
[11:40:32] <theprophet> text
[11:40:35] <theprophet> i changed the text
[11:40:38] <FunkyBob> what text?
[11:40:42] <theprophet> by hand ritting on the keyboard
[11:40:45] <FunkyBob> ...
[11:40:46] <theprophet> WORD
[11:40:47] <theprophet> lol
[11:40:48] <FunkyBob> be SPECIFIC
[11:40:53] <FunkyBob> all your code is text
[11:41:06] <FunkyBob> or do you mean the question_text field's value?
[11:41:12] <theprophet> ok look there is a Name of the model Question right?
[11:41:25] <theprophet> i went there i read it and change it to Question1
[11:41:30] <FunkyBob> "class Question(models.Model):" <-- that's how you named it
[11:41:37] <FunkyBob> read 'it' what?
[11:41:41] <FunkyBob> changed it where?
[11:41:44] <theprophet> it was class called Question, now its Question1
[11:41:48] <FunkyBob> so in your models.py
[11:42:01] <FunkyBob> you changed "class Question" to "class Question1"?
[11:42:07] <theprophet> yes class name
[11:42:13] <theprophet> Class Question to Question1
[11:42:15] <theprophet> to check
[11:42:17] <FunkyBob> in the models.py?
[11:42:24] <theprophet> if question in details html would still work
[11:42:26] <theprophet> and it does
[11:42:32] <theprophet> yes in models.py
[11:42:48] <FunkyBob> and then changed your views.py to import Question1 not Question?
[11:43:11] <theprophet> everything to check where the detail question was coming from
[11:43:18] <theprophet> since i did not had the func based views
[11:43:26] <theprophet> anymore
[11:43:40] <theprophet> because in func based views i had  context
[11:43:52] <theprophet> {'question': question}
[11:43:52] <yanchai> FunkyBob: mate which is the best way or the ideal approach
[11:44:16] <yanchai> my plan was each user has its url groups and different views
[11:44:48] <yanchai> example student/documents/ for students and teacher/examschedule/ for teacher
[11:45:05] <yanchai> is it ideal to use 1 login form for these 2 user types?
[11:45:23] <yanchai> or 1 login portal for each user type?
[11:45:55] <yanchai> like student/login and teacher/login?
[11:46:48] <FunkyBob> theprophet: https://github.com/django/django/blob/main/django/views/generic/detail.py#L83
[11:49:12] <theprophet> FunkyBob ok i am looking at it
[11:49:35] <FunkyBob> theprophet: also read get_context_data which calls that
[11:50:22] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[11:50:37] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[11:51:25] <theprophet> FunkyBob https://dpaste.org/7rmD
[11:51:42] <FunkyBob> ok?
[11:51:54] <theprophet> ok ive read what u said
[11:52:05] <theprophet> since its derived
[11:52:13] <FunkyBob> what's derived?
[11:52:19] <theprophet> i mean
[11:52:23] <theprophet> question
[11:52:28] <theprophet> is Question
[11:53:16] <FunkyBob> the context variable name is the model's meta.model_name
[11:53:25] <FunkyBob> which is derived from its class name, yes
[11:54:14] <theprophet> yes , but a little bit confused about how can i change the question if i wanted to?
[11:54:18] <theprophet> in html
[11:54:32] <theprophet> what if i dont want it to be question but something else
[11:55:24] <theprophet> {{ question.question_text }} instead i want {{ noquestion.question_text }}
[11:55:44] <theprophet> or {{ whatsup.question_text }}
[11:56:14] <theprophet> FunkyBob how can i do it so it would work
[11:58:02] <FunkyBob> you can reconfigure the view to use a different name
[11:58:08] <FunkyBob> though it's not clear why you'd want to
[11:58:10] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[11:58:31] <theprophet> to be more specific
[11:58:39] <FunkyBob> you can specify context_object_name on the view class - https://docs.djangoproject.com/en/4.0/ref/class-based-views/mixins-single-object/#django.views.generic.detail.SingleObjectMixin.context_object_name
[11:58:41] *** Joins: djapo (~archangel@user/djapo)
[11:58:51] <FunkyBob> more specific is  good
[11:58:57] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[12:00:08] <theprophet> FunkyBob thank you for your time and help.
[12:00:28] <FunkyBob> ok... I thought you were about to be more specific about something?
[12:00:47] <theprophet> no, i answered your question.
[12:01:04] <FunkyBob> oh, I see, that was your ending.
[12:01:05] <theprophet> - though it's not clear why you'd want to -
[12:01:11] <FunkyBob> yes
[12:01:13] <FunkyBob> it's not clear
[12:01:29] <FunkyBob> but that's how you can cchange it
[12:02:04] <theprophet> and i said, to be more specific, to myself when working on project. cause i am learning and its easy for me to adjust myself to this while knowing exactly at what am i looking
[12:02:27] <FunkyBob> I mean, you could also use 'object'
[12:02:36] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[12:02:42] <FunkyBob> which, as you saw, it will always use
[12:02:56] <theprophet> i see
[12:09:21] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[12:10:37] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[12:14:38] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[12:15:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:20:35] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 252 seconds)
[12:30:06] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: You have been kicked for being idle)
[12:30:40] <theprophet> @funt
[12:30:47] <theprophet> FunkyBob cant thank you enough bro.
[12:30:50] *** Quits: rob4226 (~Thunderbi@154.6.25.48) (Quit: rob4226)
[12:31:19] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:33:09] *** Joins: yanchai (~yanchai@115.147.34.99)
[12:38:13] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:40:01] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[12:41:04] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[13:09:06] *** Joins: d00k2153 (~Guest33@2409:4063:4d81:dd6b:836d:ebb8:37e0:225e)
[13:14:31] *** Joins: d00k215359 (~d00k2153@2409:4063:4d81:dd6b:836d:ebb8:37e0:225e)
[13:14:55] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[13:15:10] *** Parts: d00k215359 (~d00k2153@2409:4063:4d81:dd6b:836d:ebb8:37e0:225e) ()
[13:15:30] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:19:14] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 272 seconds)
[13:19:43] *** Quits: d00k2153 (~Guest33@2409:4063:4d81:dd6b:836d:ebb8:37e0:225e) (Ping timeout: 256 seconds)
[13:21:59] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[13:36:24] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:36:39] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[13:57:40] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[13:58:21] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[13:58:26] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[13:58:31] *** Quits: kostkon (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea) (Read error: Connection reset by peer)
[13:58:45] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[13:58:51] *** Joins: kostkon (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea)
[14:00:02] *** Quits: emamirazavi (~emamiraza@2a01:5ec0:7000:b3cf:98d3:2dff:fe79:602) (Quit: Client closed)
[14:02:56] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[15:00:46] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:04:06] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[15:11:56] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:45:57] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[15:51:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:51:14] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[15:53:22] *** Joins: yanchai (~yanchai@115.147.34.99)
[16:09:26] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[16:13:39] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 250 seconds)
[16:17:22] *** Quits: pycode (~pycode3@2001:b07:5d28:551:12ef:ed76:5dba:9e9c) (Ping timeout: 250 seconds)
[16:27:59] *** Quits: sandeepk (~sandeepk@223.130.30.239) (Remote host closed the connection)
[16:28:26] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:39:06] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 252 seconds)
[16:49:36] *** Joins: Ergo^ (~ergo@91.238.59.144)
[16:50:51] *** Joins: devor (~devor@pd9fa3ddf.dip0.t-ipconnect.de)
[16:52:53] *** Quits: devor (~devor@pd9fa3ddf.dip0.t-ipconnect.de) (Quit: Leaving)
[17:10:49] *** Joins: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[17:11:47] *** Joins: d00k2153 (~d00k2153@2409:4063:4d94:4d2a:7248:c8ed:a01b:4aea)
[17:20:41] *** Joins: pycode (~pycode3@2001:b07:5d28:551:58d4:7d53:299:4ec3)
[17:34:13] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[17:42:38] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:42:42] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[17:55:41] *** Quits: d00k2153 (~d00k2153@2409:4063:4d94:4d2a:7248:c8ed:a01b:4aea) (Ping timeout: 256 seconds)
[18:00:40] *** Joins: dez (uid92154@user/dez)
[18:02:27] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[18:05:43] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[18:05:47] *** Joins: prodigius_ (~prodigius@75-163-174-136.clsp.qwest.net)
[18:05:54] *** Quits: prodigius_ (~prodigius@75-163-174-136.clsp.qwest.net) (Remote host closed the connection)
[18:07:34] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[18:08:23] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[18:09:19] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[18:11:18] *** Joins: pro_z_ (~pro_z@37.214.78.161)
[18:32:06] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[18:33:01] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[18:41:42] *** Joins: bambanxx (~bambanx@2800:150:106:1061:a43d:15fb:1f7:a49c)
[18:44:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[18:46:29] <jim> hi, I'm trying to figure out if I"m doing the right things to a form, passing it correctly throughout its life...
[18:46:37] <jim> what do you need to see?
[18:48:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:48:57] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[19:05:10] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[19:14:21] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 250 seconds)
[19:18:14] <GinFuyou> jim, the full view code most of all. Form code less, but wouldn't hurt
[19:21:02] *** Joins: Thanatos (~Thanatos@105.112.189.56)
[19:23:17] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:29:20] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[19:30:32] <jim> GinFuyou, ok, one sec for that. the issue is, form errors are not appearing after a form with bad data is submitted; and I'm trying to find out where the "blockage" is
[19:31:18] <GinFuyou> representation of invalid input data then would also be welcome
[19:32:15] <jim> ok, so a form submission... let me get you what I can
[19:35:05] <jim> here is (project)/users/views.py: //termbin.com/vmim
[19:35:21] <jim> https://termbin.com/vmim
[19:37:34] <jim> (UserCreationForm is subclassed, here's the subclass, in (project)/users/forms.py: https://termbin.com/nu5m
[19:40:50] <jim> here's the template, in (project)/users/templates/users/register.html: https://termbin.com/bjlm
[19:41:04] <GinFuyou> Only see minor issues so far, but let's start with sanity check https://dpaste.org/rhra
[19:42:41] <jim> that's the register() view function?
[19:43:49] <GinFuyou> I hope you to recognize your own code ^_^" I've only added prints() and one else clause
[19:44:30] <jim> yes, I see, I'm trying to locate everything, I'll try a diff
[19:45:09] <GinFuyou> Going afk for some time, check outputs from it (in terminal if you are running runserver)
[19:45:47] <jim> is it the whole views.py (with changes)?
[19:46:03] <jim> and, ok, thanks so far.
[19:51:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[19:58:44] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[20:00:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:48] *** Quits: Elzington_ (~Elzington@87.249.134.17) (Quit: Leaving)
[20:02:26] *** Joins: Elzington (~Elzington@87.249.134.17)
[20:02:51] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:07:06] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 272 seconds)
[20:08:26] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Read error: Connection reset by peer)
[20:09:43] *** Joins: d00k2153 (~d00k2153@2409:4063:4d94:4d2a:7ac7:a688:60f8:64c6)
[20:10:13] *** Joins: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br)
[20:12:05] *** Joins: justAstache (~justache@user/justache)
[20:18:29] *** Quits: d00k2153 (~d00k2153@2409:4063:4d94:4d2a:7ac7:a688:60f8:64c6) (Ping timeout: 256 seconds)
[20:27:01] <GinFuyou> back, jim, any progress?
[20:31:07] *** Joins: xkuru (~xkuru@user/xkuru)
[20:31:34] <jim> GinFuyou, still futzing :)
[20:35:06] <jim> looking at the diff so I can clearly see your changes, and applying those by hand
[20:38:08] <wintrmute> anyone familiar with getting multiple optional positional arguments working with re_path?  something like r'foo/(?P<foo_call>.+?)/(?:(.+?)/)?$'
[20:38:10] *** Joins: rob4226 (~Thunderbi@154.6.25.48)
[20:39:00] *** Joins: mekhami (~mekhami@12.161.60.162)
[20:39:48] <wintrmute> that pattern matches foo/bar/ foo/bar/baz/ foo/bar/baz/zoo/ but only bar is passed to the view method, baz and zoo dont seem to be passed
[20:42:56] <GinFuyou> probably because it's non-capturing group? But how do you check anyway?
[20:43:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:43:47] *** ChanServ sets mode: +v EvilDMP
[20:49:17] <wintrmute> so r'foo/(?P<foo_call>.+?)/(.+?/)?$' should match and pass multiple optional positional args then?  i have an raise Exception(...) with the get method args in the code to see whats being passed, if thats what youre asking
[20:50:13] <GinFuyou> those are not GET args
[20:50:36] <GinFuyou> you don't need anything in urls pattern to use GET params
[20:53:11] *** Joins: djapo (~archangel@user/djapo)
[20:58:21] *** Quits: pycode (~pycode3@2001:b07:5d28:551:58d4:7d53:299:4ec3) (Ping timeout: 250 seconds)
[21:02:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[21:10:16] *** Quits: bambanxx (~bambanx@2800:150:106:1061:a43d:15fb:1f7:a49c) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:13:31] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:18:02] <wintrmute> im talking about method get in a generic CBV (View), not request.GET, django passes the url parameters to the method
[21:19:14] <wintrmute> anyway, it works if i dont use a named pattern (e.g. ?P<foo_call>) but keep everything positional
[21:21:27] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[21:29:03] *** Joins: bambanxx (~bambanx@2800:150:106:1061:44c1:d44d:b54e:946a)
[21:33:45] <wintrmute> from the docs:  "In either case, using only one style within a given regex is recommended. When both styles are mixed, any unnamed groups are ignored and only named groups are passed to the view function."
[21:34:31] *** Joins: djapo (~archangel@user/djapo)
[21:38:35] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:38:45] *** Joins: rje (~textual@65.141.156.170)
[21:39:00] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:59:41] *** Quits: mekhami (~mekhami@12.161.60.162) (Ping timeout: 256 seconds)
[22:04:53] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:10:08] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[22:12:53] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[22:27:52] *** Joins: blackout69 (~blackout6@37.183.230.121)
[22:28:51] *** Joins: kostkon_ (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea)
[22:29:15] *** Quits: kostkon (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea) (Remote host closed the connection)
[22:47:56] *** Quits: Thanatos (~Thanatos@105.112.189.56) (Read error: Connection reset by peer)
[22:50:21] *** Quits: pro_z_ (~pro_z@37.214.78.161) (Ping timeout: 256 seconds)
[22:57:48] *** Quits: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 240 seconds)
[23:11:59] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[23:12:28] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[23:12:37] *** Joins: djapo (~archangel@user/djapo)
[23:13:20] *** Joins: Elzington_ (~Elzington@87.249.134.10)
[23:15:32] *** Quits: Elzington (~Elzington@87.249.134.17) (Ping timeout: 240 seconds)
[23:19:33] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[23:21:32] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[23:21:42] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[23:25:52] *** Joins: pyrrhus1 (~pyrrhus@user/pyrrhus)
[23:27:00] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Ping timeout: 268 seconds)
[23:29:17] *** Quits: pyrrhus1 (~pyrrhus@user/pyrrhus) (Client Quit)
[23:35:39] *** Quits: Elzington_ (~Elzington@87.249.134.10) (Quit: Leaving)
[23:36:11] *** Joins: Elzington (~Elzington@87.249.134.10)
[23:41:39] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:56:21] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
