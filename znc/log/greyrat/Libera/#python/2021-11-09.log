[00:00:07] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-906d-cc0e-1f4e-892a.res6.spectrum.com)
[00:00:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:01:38] *** Quits: l4yer (~l4yer@195.181.170.210) (Remote host closed the connection)
[00:01:41] *** Quits: catdog (~quassel@birdperson.tuxzone.org) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[00:01:50] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[00:04:08] *** Joins: zaquest (~notzaques@5.128.210.178)
[00:05:03] *** Quits: Xasa (~Zeno@user/zeno) (Remote host closed the connection)
[00:06:10] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:ed81:215:7b5b:85c3) (Ping timeout: 256 seconds)
[00:06:14] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:06:47] *** Quits: eddiejennings (~eddie@136.55.139.140) (Quit: Konversation terminated!)
[00:06:59] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:07:09] *** Joins: eddiejennings (~eddie@136.55.139.140)
[00:07:33] *** Quits: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f) (Ping timeout: 250 seconds)
[00:10:26] *** Joins: Payam (~Payam@138.106.57.131)
[00:11:06] <Payam> hi. How do I explicitly ensure that a asyncio.gather(..) is done before I go with the rest of my code?
[00:12:00] *** Joins: lastshell (~lastshell@user/lastshell)
[00:12:19] *** Joins: raxor2k (~raxor2k@78.158.246.35)
[00:12:34] <deniska> Payam: await it
[00:12:43] *** Quits: mumixam (~m@user/mumixam) (Ping timeout: 268 seconds)
[00:13:18] <Payam> yes I do. but is there anyway to day h = await asyncio.gather(...) if h.done(): lbablabl
[00:13:24] <Payam> say*
[00:13:51] <SnoopJ> exactly like that, I think?
[00:13:51] <raxor2k> someone who can help me stringify this json after i read values from a dict? : https://bpa.st/4PDQ
[00:14:29] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[00:15:25] <Repiphany> If you need the index and the value, it's cleaner to use `enumerate` than range(len(list))
[00:15:48] <Repiphany> Whoops, ignore that
[00:16:07] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[00:16:38] <Payam> SnoopJ really?
[00:16:58] <Repiphany> raxor2k: You're making a set in line 7 which isn't jsonifiable
[00:17:01] <SnoopJ> Payam, the purpose of await is to suspend execution until the awaitable thing is done.
[00:17:51] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:18:41] <Payam> hmm thanks
[00:19:56] <raxor2k> repihany: so how can i jsonfiable it ?
[00:20:17] <raxor2k> json.dumps() aint working
[00:20:45] <Repiphany> Lists and dictionaries are json compatible
[00:20:51] *** Joins: darksun (~darksun@user/darksun)
[00:21:37] *** Joins: mdemo (~mdemo@user/mdemo22)
[00:21:41] <grym> Repiphany: well, depending on what you put in them
[00:21:41] <Repiphany> I don't know why you have a json string inside your python dictionary in the first place
[00:22:09] *** Joins: wildo (~lain6141@119.224.72.222)
[00:23:09] <raxor2k> whaat
[00:24:24] <raxor2k> repiphany: as you can see in the code, im taking 2 parts from the "error_codes_dict" into the json_dict
[00:24:57] <Repiphany> I can see that the values of ...['message_code'] and ...['message'] are json strings
[00:25:44] <raxor2k> repiphany: ok, so everything is looking allright to you?
[00:26:13] <Repiphany> No, I don't understand your input data and what you expect as a result
[00:27:43] <theseb> if my django web server runs some processes in background with Popen is there any risk/problem with that?
[00:28:04] <theseb> (servers don't like long running processes so Popen seemed to fix)
[00:28:45] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Read error: Connection reset by peer)
[00:29:12] <raxor2k> Repiphany: well, now you should understand: https://bpa.st/X6MQ
[00:29:39] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[00:30:22] <Repiphany> I already said you're making a set which can't be turned into json
[00:31:07] <Repiphany> Does whatever you're using actually require json strings, because usually it's better to just deal with python objects and let whatever to the json conversion hidden away
[00:31:22] *** Quits: kostkon (~kostkon@athedsl-393393.home.otenet.gr) (Ping timeout: 244 seconds)
[00:31:26] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[00:31:37] <raxor2k> okei
[00:31:44] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[00:32:01] <Repiphany> json_to_send = {error_codes_dict[1]["message_code"], error_codes_dict[1]["message"]}
[00:32:18] *** Joins: kostkon (~kostkon@athedsl-393393.home.otenet.gr)
[00:32:52] <raxor2k> yes ?
[00:33:12] <raxor2k> and i still dont see the problem
[00:33:24] *** Joins: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f)
[00:34:18] <Repiphany> `{1, 2}` is a set, not a dictionary
[00:34:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[00:34:31] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[00:35:03] *** Quits: grooverman (~grooverma@177.102.119.40) (Remote host closed the connection)
[00:36:07] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[00:36:28] *** Joins: alzgh (~alzgh@user/alzgh)
[00:37:23] *** hanaan is now known as Naan
[00:37:36] <raxor2k> aha, i see where the problem is
[00:38:35] *** Quits: kostkon (~kostkon@athedsl-393393.home.otenet.gr) (Remote host closed the connection)
[00:38:37] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[00:38:56] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-906d-cc0e-1f4e-892a.res6.spectrum.com) (Quit: Client closed)
[00:39:22] *** Quits: raxor2k (~raxor2k@78.158.246.35) ()
[00:39:25] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-906d-cc0e-1f4e-892a.res6.spectrum.com)
[00:40:49] *** Joins: grooverman (~grooverma@177.102.119.40)
[00:44:50] *** Joins: hel0 (~hel0@user/redrum88)
[00:47:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:47:23] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[00:49:07] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[00:49:09] *** Joins: zaquest (~notzaques@5.128.210.178)
[00:49:11] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[00:49:34] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[00:51:08] <saltrocklamp[m]> <theseb> "if my django web server runs..." <- i don't think there's a big problem with it, but you will have to make sure you're checking for completion, checking return status, etc. that said, i'm not sure if that's necessary when using a wsgi server like gunicorn, which should handle each request in a separate "worker"
[00:51:21] *** Joins: Celeo (~Celeo@user/celeo)
[00:51:32] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[00:52:04] *** Joins: stewie92567 (~stewie925@2600:1702:44f0:35c0:ed81:215:7b5b:85c3)
[00:53:35] *** Quits: stewie92567 (~stewie925@2600:1702:44f0:35c0:ed81:215:7b5b:85c3) (Client Quit)
[00:53:52] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:ed81:215:7b5b:85c3)
[00:54:23] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[00:54:30] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[00:56:01] *** Joins: curiosity_ (uid511277@user/cypris)
[00:56:33] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:ed81:215:7b5b:85c3) (Client Quit)
[00:56:36] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[00:56:57] *** Joins: alzgh (~alzgh@user/alzgh)
[00:59:04] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[00:59:30] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[01:00:15] *** Joins: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com)
[01:01:30] *** Quits: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com) (Remote host closed the connection)
[01:02:22] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 244 seconds)
[01:02:58] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:04:12] *** Joins: wender (~Wender@189.15.84.198)
[01:05:06] *** Joins: l4yer (~l4yer@195.181.170.210)
[01:05:51] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[01:06:03] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[01:06:12] *** Joins: BillyZane2 (~BillyZane@139.28.216.252)
[01:06:20] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[01:06:24] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:06:36] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:06:45] *** Quits: computeiro (~Wender@189.37.68.18) (Ping timeout: 256 seconds)
[01:07:08] *** wender is now known as computeiro
[01:07:20] *** Quits: BillyZane (~BillyZane@91.196.220.174) (Ping timeout: 260 seconds)
[01:07:32] *** Quits: driib (~driib@185.195.233.166) (Ping timeout: 244 seconds)
[01:08:54] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:316:44af:1ca2:c2c5)
[01:09:16] *** Joins: p-i- (~Ohmu@223.206.144.244)
[01:10:25] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:10:49] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.147-186.dynamic.3bb.co.th) (Ping timeout: 250 seconds)
[01:10:54] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:11:02] *** Quits: cosimone (~user@93-34-133-23.ip49.fastwebnet.it) (Remote host closed the connection)
[01:12:28] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[01:12:56] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[01:13:09] *** Quits: magla (~gelignite@55d431b8.access.ecotel.net) (Quit: Stay safe!)
[01:13:11] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:13:18] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:13:43] *** Joins: wender (~Wender@189.37.68.18)
[01:14:18] *** Quits: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Quit: harpia)
[01:14:57] <theseb> saltrocklamp[m]: there seems to be lots of choices to handle background tasks...Celery, uWSGI, dramtiq, etc...which is the best true Pythonic solution?
[01:16:01] *** Quits: computeiro (~Wender@189.15.84.198) (Ping timeout: 250 seconds)
[01:16:25] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:16:52] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:17:32] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 240 seconds)
[01:18:58] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 260 seconds)
[01:19:00] *** Joins: alkino_ (~quassel@user/alkino)
[01:21:42] <saltrocklamp[m]> those are all different things. celery is a task queue, often used in conjunction with django. i've never used dramtiq, it looks interesting though, e.g. https://www.pedaldrivenprogramming.com/2018/07/dramatiq-celery-alternative/. as for uwsgi, that's a wsgi server, which i haven't used; instead i've used gunicorn, which seems to "just work" in my light-duty (but professional) experience. the wsgi server sits between the outward-facing
[01:21:42] <saltrocklamp[m]> web server like apache or nginx, and your python application. see the diagram at the top of this blog post: https://medium.com/django-deployment/which-wsgi-server-should-i-use-a70548da6a83
[01:21:47] *** Joins: jamesmartinez (uid6451@id-6451.helmsley.irccloud.com)
[01:22:19] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[01:22:50] <saltrocklamp[m]> so the answer is, the industry-standard solution is to use a task queue and a wsgi server. when i last worked on a django app, celery was the only popular task queue that i knew of, but i guess now dramtiq is a viable alternative. and for the most part i think gunicorn is the go-to wsgi server.
[01:23:00] *** Quits: ubert (~Thunderbi@p200300ecdf4fca48e6b318fffe838f33.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[01:23:14] <saltrocklamp[m]> but django also supports async now, along with asgi https://docs.djangoproject.com/en/3.2/topics/async/
[01:24:31] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:25:17] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[01:25:37] <SnoopJ> point of clarification: a WSGI server and a task management system aren't really solving the same problem
[01:25:48] <saltrocklamp[m]> asgi is kind of the successor to wsgi, using the relatively new python "async" stuff. common asgi servers include uvicorn, hypercorn, and daphne https://dev.to/bowmanjd/the-three-python-asgi-servers-5447 - apparently daphne has its roots in the django ecosystem
[01:26:09] *** Quits: alkino_ (~quassel@user/alkino) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:26:11] <saltrocklamp[m]> yes, important point SnoopJ
[01:26:37] *** Joins: driib (~driib@185.65.135.253)
[01:27:10] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 244 seconds)
[01:27:36] *** Joins: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77)
[01:28:32] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[01:29:12] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[01:29:52] *** Joins: thiras_ (~thiras@user/thiras)
[01:30:05] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[01:30:18] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[01:30:28] *** Joins: Hackerpcs (~user@user/hackerpcs)
[01:30:30] *** Joins: thiras_ (~thiras@user/thiras)
[01:30:45] *** Quits: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f) (Ping timeout: 250 seconds)
[01:30:50] *** Joins: kostkon (~kostkon@athedsl-394752.home.otenet.gr)
[01:31:37] *** Quits: thiras (~thiras@user/thiras) (Killed (NickServ (GHOST command used by thiras_)))
[01:31:43] *** thiras_ is now known as thiras
[01:32:09] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[01:33:05] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[01:33:21] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[01:33:37] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:33:41] *** Joins: odrling (~odrling@korone.aidoru.agency)
[01:34:37] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[01:35:02] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[01:35:04] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:35:20] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:35:22] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[01:35:27] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[01:35:35] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:35:44] *** Joins: Viewday (~Viewday@user/viewday)
[01:35:59] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:36:10] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[01:36:45] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:36:54] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:37:16] *** Quits: eddiejennings (~eddie@136.55.139.140) (Ping timeout: 250 seconds)
[01:38:33] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[01:39:34] *** Quits: kostkon (~kostkon@athedsl-394752.home.otenet.gr) (Ping timeout: 244 seconds)
[01:39:34] *** Joins: l4yer (~l4yer@195.181.170.210)
[01:39:50] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:40:45] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[01:40:58] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:41:16] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:41:53] *** Joins: Abrax (~Abrax@user/abrax)
[01:44:35] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:44:46] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:46:08] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[01:46:38] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:46:42] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:46:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:47:01] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:47:33] *** Quits: Intruder777 (~Intruder7@user/intruder777) (Quit: Leaving)
[01:47:36] *** Joins: inomoz (~inomoz@176.59.125.26)
[01:48:55] *** Joins: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f)
[01:50:29] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:50:44] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:52:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:52:45] <anddam> semi OT, I am using PySide2 and filling in TableWidgetItems in a TableWidget. I develop on a Linux system, then assemble binaries for win/lin/mac, so far so good but I just had the oddest report from a windows computer with a different locale (my testing win machine is en_GB)
[01:53:10] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[01:53:23] <anddam> I have a structure I iterate over to fill the data, this structure has already the final data (it has been through processing, i18n among them) but the point is that I have https://gist.github.com/anddam/23924192a6748a146ea054213a206255
[01:53:57] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:54:02] *** Quits: luva (~luva@146.70.62.254) (Ping timeout: 260 seconds)
[01:54:25] <anddam> when L27 hits the strings are placed into the Qt controls but with string characters shifted by 2 positions
[01:55:01] *** Joins: luva (~luva@37.120.197.46)
[01:55:02] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[01:55:03] <anddam> let me emph that, *each char in the displayed control is 2 position before in encoding WRT what it should be*
[01:55:58] *** Joins: computeiro (~Wender@191.54.176.252)
[01:56:24] <anddam> kinda ROT-2, but only on this system. I set my locale to the same and (obviously) could not replicate, but what puzzles me is that I cannot figure what would go and tweak strings that way
[01:56:55] <anddam> to be more clear I have "Reader" in my log line, but the program displays "Pc_bcp"
[01:57:22] <anddam> has anyone ever heard something like this? I am having a hard time even finding something close on the web
[01:57:22] *** Quits: flyback (~flyback@2601:540:8201:1e60::43a) (Remote host closed the connection)
[01:57:37] *** Quits: wender (~Wender@189.37.68.18) (Ping timeout: 250 seconds)
[01:59:03] *** Joins: flyback (~flyback@2601:540:8201:1e60::43a)
[01:59:07] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[01:59:25] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:00:11] *** Joins: pigweed (~pigweed@97.119.229.243)
[02:01:11] *** Joins: emerent_ (~quassel@p200300cd574855efba27ebfffed28a59.dip0.t-ipconnect.de)
[02:01:11] *** Quits: emerent (~quassel@p200300cd574855c7ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (iridium.libera.chat (Nickname regained by services)))
[02:01:11] *** emerent_ is now known as emerent
[02:01:46] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:05:24] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:8874:ee5d:a4d:8468)
[02:05:55] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:06:18] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:06:38] *** Joins: jinsun__ (~quassel@user/jinsun)
[02:07:19] *** Quits: nomic (~nomic@85.203.36.33) (Quit: Leaving)
[02:08:39] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[02:08:55] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[02:09:54] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[02:11:03] *** Quits: luva (~luva@37.120.197.46) (Ping timeout: 250 seconds)
[02:11:22] *** Quits: pigweed (~pigweed@97.119.229.243) (Quit: Leaving)
[02:11:49] *** Quits: Akuli (~Akuli@82-203-160-135.bb.dnainternet.fi) (Quit: Leaving)
[02:12:24] *** Joins: luva (~luva@45.141.152.37)
[02:13:35] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[02:13:53] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[02:14:07] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[02:14:12] *** Quits: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Quit: harpia)
[02:17:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[02:17:35] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 268 seconds)
[02:18:07] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[02:18:23] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[02:18:25] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[02:19:50] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[02:21:42] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:22:24] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[02:22:27] *** Joins: thiras (~thiras@user/thiras)
[02:22:32] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:22:41] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[02:23:19] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:24:04] *** Quits: The_Loko (~The_Loko@86.127.253.186) (Remote host closed the connection)
[02:24:20] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[02:24:35] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[02:25:33] *** Joins: Sazpaimon (~wat@pool-71-175-29-161.phlapa.fios.verizon.net)
[02:25:40] *** Joins: LuksNuke (~LuksNuke@94.242.200.211)
[02:25:44] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[02:26:28] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[02:26:29] <Sazpaimon> does zipfile allow reading files from a zip, seeking back and forth to random places in that file without loading the entire decompressed data in memory?
[02:27:15] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[02:27:19] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[02:27:35] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[02:29:02] *** Quits: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f) (Ping timeout: 240 seconds)
[02:29:10] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[02:29:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:30:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:30:33] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:30:37] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:09] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:31:09] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:29] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:316:44af:1ca2:c2c5) (Quit: Konversation terminated!)
[02:33:10] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:34:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[02:34:46] <BtbN> Sazpaimon, I don't see how that'd possibly be possible
[02:35:33] *** Quits: LuksNuke (~LuksNuke@94.242.200.211) (Remote host closed the connection)
[02:35:52] *** Joins: LuksNuke (~LuksNuke@94.242.200.211)
[02:38:47] <Sazpaimon> BtbN, I was afraid of that. Unfortunately I'm dealing with 8+GB files inside a zip file
[02:39:30] <Sazpaimon> i guess the most efficient way would be to load the entire decompressed data into a bytesio and pray that i dont get oom killed
[02:40:31] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:40:33] *** Joins: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com)
[02:40:33] *** Joins: jazzy (~jaziz@user/jaziz)
[02:41:03] <BtbN> You could just open it in chunks I guess
[02:41:09] <BtbN> You can stream it out of the zip file
[02:41:19] <BtbN> and that way have "Windows" into the compressed file
[02:41:35] <BtbN> Could even crudely implement seeking that way. But very inefficiently
[02:43:12] *** Quits: Toxmi (~Toxmi@49.158.248.16) (Quit: Toxmi)
[02:44:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:45:05] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:46:09] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[02:47:02] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[02:47:02] *** Quits: stockholm (~Andreas@p200300d2c706c500006cb6b6b81a6cfe.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:47:30] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[02:48:57] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:50:40] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:51:51] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[02:52:11] *** Joins: alzgh (~alzgh@user/alzgh)
[02:52:32] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[02:54:08] *** Joins: uint_t (~refujee@c-24-22-76-106.hsd1.wa.comcast.net)
[02:54:58] *** Quits: LuksNuke (~LuksNuke@94.242.200.211) (Read error: Connection reset by peer)
[02:59:02] *** Quits: computeiro (~Wender@191.54.176.252) (Quit: Leaving)
[03:00:27] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[03:03:47] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:04:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[03:04:36] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[03:06:42] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-cce3-74e0-cf74-3ab2.res6.spectrum.com)
[03:07:46] *** Joins: iflema (~iflema@user/iflema)
[03:08:32] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-58a6-5967-745c-e63f.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:11:43] *** Quits: inomoz (~inomoz@176.59.125.26) (Ping timeout: 250 seconds)
[03:16:54] *** Joins: mahavishvarupa (~ananda@82-71-10-21.dsl.in-addr.zen.co.uk)
[03:18:19] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[03:18:52] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:21:10] *** Joins: Betal (~Betal@user/betal)
[03:23:00] *** Quits: iflema (~iflema@user/iflema) (Quit: iflema)
[03:23:55] *** curiosity_ is now known as curiosity
[03:24:06] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[03:24:51] *** Quits: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[03:25:46] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[03:26:09] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[03:27:11] *** BillyZane2 is now known as BillyZane
[03:29:48] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[03:30:35] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:30:58] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[03:30:59] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:34:41] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[03:35:01] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:35:16] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:37:11] *** Quits: emf (~emf@2620:10d:c091:480::1:6062) (Ping timeout: 245 seconds)
[03:37:34] *** Joins: asd (~noname@user/asd)
[03:37:53] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[03:39:02] *** Joins: emf (~emf@2620:10d:c090:400::5:c9f2)
[03:39:46] *** Quits: mahavishvarupa (~ananda@82-71-10-21.dsl.in-addr.zen.co.uk) (Quit: Konversation terminated!)
[03:40:06] *** Joins: de-facto_ (~de-facto@user/de-facto)
[03:41:57] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[03:42:38] *** Joins: eddiejennings (~eddie@136.55.139.140)
[03:43:49] *** de-facto_ is now known as de-facto
[03:45:12] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[03:45:19] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[03:45:36] *** Quits: Inst (~Inst@2601:6c4:4080:3f80:f571:277c:e0b0:82b9) (Read error: Connection reset by peer)
[03:48:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:51:49] *** Joins: djapo (~archangel@user/djapo)
[03:52:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:52:54] *** Joins: stpz (~stpz@240e:341:2232:4b00:3451:af62:480d:7fea)
[03:54:43] *** Joins: iflema (~ian@user/iflema)
[03:55:22] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:55:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[03:55:57] *** Quits: stpz (~stpz@240e:341:2232:4b00:3451:af62:480d:7fea) (Client Quit)
[03:56:33] *** Quits: Inline (~Inline@2a02:908:1252:7a80:2e5d:c24e:9b07:51fd) (Ping timeout: 268 seconds)
[03:56:38] *** Lord_of_Life_ is now known as Lord_of_Life
[03:59:39] *** Joins: Ivii (~Ivyy@2001:a61:13ad:1c01:e32a:130c:f3c:3482)
[03:59:48] *** Joins: odix (~ok@65.141.163.206)
[04:01:23] *** Joins: inomoz (~inomoz@176.59.125.26)
[04:02:10] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 244 seconds)
[04:06:50] *** Quits: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:07:36] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[04:09:49] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:10:02] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:10:04] *** Joins: frost (~frost@user/frost)
[04:13:34] *** Joins: iflema (~ian@user/iflema)
[04:14:57] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[04:18:31] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:19:56] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[04:20:41] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[04:21:03] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[04:21:16] *** Quits: ripdog (~quassel@user/ripdog) (Quit: ripdog)
[04:21:48] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 244 seconds)
[04:22:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:22:19] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 244 seconds)
[04:23:30] *** Joins: Wulf (~Wulf@user/wulf)
[04:24:00] *** Joins: ripdog (~quassel@user/ripdog)
[04:24:36] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[04:25:23] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 250 seconds)
[04:27:19] *** Joins: runelind (~runelind@user/runelind)
[04:28:00] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Quit: Leaving)
[04:28:20] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[04:28:24] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[04:28:25] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[04:29:32] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[04:38:05] <aphysically> looks like main flake8 ecosystem rejected linting for the unpaired bidi characters as well
[04:38:17] <aphysically> pylint and bandit have open issues though
[04:39:13] *** Joins: iflema_ (~ian@user/iflema)
[04:39:18] <aphysically> so at any rate it looks like we won't get any wide automatic coverage of this in the python ecosystem
[04:39:54] <aphysically> probably just best to make sure you view the code for PRs on github or in modified editors
[04:40:25] *** Joins: damonlynch (~ngaio@68.235.43.94)
[04:40:38] <nedbat> aphysically: i bet pylint will do it
[04:40:47] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[04:41:07] *** Quits: Ivii (~Ivyy@2001:a61:13ad:1c01:e32a:130c:f3c:3482) (Remote host closed the connection)
[04:41:31] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 256 seconds)
[04:41:46] *** Quits: TonyStone31 (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[04:42:32] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:42:32] <aphysically> yeah that would be nice; I don't really like that this affects more than the people who think they're developing something that necessitates linting their code with bandit
[04:42:37] <aphysically> (so only having it in bandit isn't a great solution)
[04:43:44] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:43:45] <energizer> the attack is where my dependency using import * on its dependency and accidentally calls the wrong function, or something? i dont really get it
[04:44:23] <aphysically> that's the confusable character attack, but I'm referring to the bidi one here
[04:44:44] <aphysically> basically you can use unpaired bidi control characters on comments and string literals to make the source code appear to be something other than what it is
[04:44:59] <aphysically> by letting you rearrange code visually
[04:45:27] <aphysically> rust, gcc, clang and such have patches to reject this (or full lang modifications in rust's case)
[04:46:09] <aphysically> python security team punted it to linters to find, flake8 is punting to bandit, and pylint and bandit have open issues
[04:46:11] *** Joins: dohtem (uid524096@user/dohtem)
[04:46:58] <aphysically> it's a bit weird for bandit to find though since it works on the AST and the attack isn't on the AST level
[04:49:50] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[04:50:03] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[04:50:22] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:54:46] *** Joins: nac0 (~nac@user/nac)
[04:56:40] *** Quits: nac (~nac@user/nac) (Ping timeout: 260 seconds)
[04:56:40] *** nac0 is now known as nac
[04:57:32] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 240 seconds)
[05:01:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:02:31] *** Joins: amogorkon (~amogorkon@port-83-236-35-197.dynamic.as20676.net)
[05:03:51] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[05:04:41] *** Quits: amo (~amogorkon@port-92-196-38-113.dynamic.as20676.net) (Ping timeout: 244 seconds)
[05:04:48] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[05:05:27] *** Joins: nicode (~nic@2607:f2c0:9580:700:eed9:f4c8:5f08:d5b6)
[05:05:53] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:06:37] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:07:25] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e59c-51ba-07e6-ca2d.res6.spectrum.com) (Read error: Connection reset by peer)
[05:08:38] *** Joins: orangejuice (~orangeext@user/orangeextract)
[05:08:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:09:36] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[05:09:51] *** Quits: eddiejennings (~eddie@136.55.139.140) (Ping timeout: 244 seconds)
[05:11:02] *** Quits: orange (~orangeext@user/orangeextract) (Ping timeout: 240 seconds)
[05:12:18] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[05:14:48] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:16:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:17:43] *** Joins: de-facto (~de-facto@user/de-facto)
[05:18:51] *** Joins: eddiejennings (~eddie@136.55.139.140)
[05:20:40] *** Quits: de-facto (~de-facto@user/de-facto) (Excess Flood)
[05:20:57] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:21:37] *** Joins: de-facto (~de-facto@user/de-facto)
[05:22:45] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[05:23:42] *** Joins: rannnn8888 (~rannnn888@bzq-85-130-144-96.static.bezeqint.net)
[05:24:24] <rannnn8888> Hey how i take specipic cells from data frame ? but keep get this by dataframe example "df.loc[df['Close'] == "0.0003"].values"
[05:24:43] <rannnn8888> but dont want get its like list values by data frame
[05:25:02] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[05:26:23] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[05:27:21] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:30:00] *** Quits: flokuehn (~flokuehn@87.123.247.36) (Ping timeout: 244 seconds)
[05:30:37] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:45] *** Joins: flokuehn (~flokuehn@87.123.247.74)
[05:34:24] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:35:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[05:37:12] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:40:20] *** Quits: rannnn8888 (~rannnn888@bzq-85-130-144-96.static.bezeqint.net) (Quit: Client closed)
[05:41:08] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:42:27] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:43:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:43:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 244 seconds)
[05:45:27] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[05:45:31] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[05:46:05] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[05:46:44] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[05:46:46] *** Quits: yac (~user@user/yac) (Ping timeout: 245 seconds)
[05:47:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[05:48:27] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:48:52] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[05:49:23] *** Joins: kevr` (~kevr@user/kevr)
[05:49:36] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[05:50:00] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:50:32] *** kevr` is now known as kevr
[05:52:58] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[05:53:38] *** Joins: alzgh (alzgh@user/alzgh)
[05:54:08] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:6549:da81:550b:aebe) (Remote host closed the connection)
[05:57:37] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[05:58:05] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[05:59:08] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:00:02] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Ping timeout: 240 seconds)
[06:01:02] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:02:32] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[06:02:53] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[06:03:12] *** Joins: alex11 (~alex11@user/alex11)
[06:03:13] *** Joins: datadog (~datadog@user/datadog)
[06:06:50] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[06:07:40] *** Joins: moldorcoder7 (~moldorcod@37.120.143.29)
[06:08:40] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[06:08:51] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[06:10:06] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[06:11:32] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 240 seconds)
[06:12:05] *** Joins: zebrag (~chris@user/zebrag)
[06:14:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:17:20] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[06:17:32] *** Quits: iflema_ (~ian@user/iflema) (Ping timeout: 240 seconds)
[06:18:04] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:18:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:19:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:20:13] *** _koolazer is now known as koolazer
[06:21:41] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:21:47] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[06:22:38] *** Joins: iflema (~ian@user/iflema)
[06:22:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[06:22:42] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[06:22:42] *** brabrax_ is now known as brabrax
[06:25:23] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[06:26:55] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[06:27:21] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[06:30:01] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:32:51] *** Joins: Pixi (~Pixi@user/pixi)
[06:34:26] *** Quits: Pixi__ (~Pixi@user/pixi) (Ping timeout: 268 seconds)
[06:34:43] *** Joins: TJ- (~root@user/tj-)
[06:35:02] *** Quits: Pixi (~Pixi@user/pixi) (Read error: Connection reset by peer)
[06:35:47] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:36:44] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[06:39:43] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[06:40:27] *** Quits: datadog (~datadog@user/datadog) (Quit: Leaving)
[06:40:40] *** Joins: Pixi (~Pixi@user/pixi)
[06:40:44] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 260 seconds)
[06:42:23] *** Joins: duoi (~duoi@user/duoi)
[06:44:32] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 240 seconds)
[06:46:00] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:48:27] *** Joins: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt)
[06:48:33] *** Quits: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt) (Remote host closed the connection)
[06:49:46] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[06:49:56] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Remote host closed the connection)
[06:50:35] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:52:24] *** Quits: alzgh (alzgh@user/alzgh) (Remote host closed the connection)
[06:55:39] *** Quits: p-i- (~Ohmu@223.206.144.244) (Remote host closed the connection)
[06:56:14] *** Joins: p-i- (~Ohmu@mx-ll-223.206.144-244.dynamic.3bb.co.th)
[06:56:54] *** Joins: yac (~user@user/yac)
[06:57:58] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[06:58:31] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[06:59:06] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[07:01:53] *** Joins: rickay (rickybob@gateway/vpn/protonvpn/rickybob)
[07:03:23] *** Quits: emf (~emf@2620:10d:c090:400::5:c9f2) (Ping timeout: 264 seconds)
[07:03:41] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[07:07:07] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:07:08] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:07:08] *** finn_elija is now known as FinnElija
[07:12:09] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[07:12:29] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[07:12:31] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[07:13:31] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[07:13:32] *** Joins: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt)
[07:18:32] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Ping timeout: 240 seconds)
[07:21:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:22:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 240 seconds)
[07:22:35] *** Joins: fluter (~fluter@user/fluter)
[07:22:48] *** Quits: parv (~quass@user/parv) (Quit: parv)
[07:24:01] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[07:25:44] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[07:25:54] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[07:29:22] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[07:30:06] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.144-244.dynamic.3bb.co.th)
[07:31:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:33:27] *** Quits: p-i- (~Ohmu@mx-ll-223.206.144-244.dynamic.3bb.co.th) (Ping timeout: 250 seconds)
[07:35:29] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[07:36:00] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:03] *** Quits: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt) (Quit: Leaving)
[07:37:56] *** Joins: darklands (~darklands@69.43.66.31)
[07:38:51] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:42:04] *** Joins: mumixam (~m@user/mumixam)
[07:44:21] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:a8fe:979b:f620:11ec)
[07:45:23] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:45:33] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[07:46:10] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[07:50:47] *** Quits: darklands (~darklands@69.43.66.31) (Ping timeout: 256 seconds)
[07:52:10] *** Joins: Matt343 (~Matt@c-69-181-108-8.hsd1.ca.comcast.net)
[07:52:32] *** Joins: _Ev (~ev@user/ev/x-8999918)
[07:52:47] <Matt343> I chained a bunch of code paths in my data using yield from's to create pipes that pass data around. However, some code paths that enter these pipes don't need to receive yielded data, and would prefer to just treat the generators as normal functions. I can get around this by wrapping the entry points in a wrapper that handles the generators and
[07:52:48] <Matt343> returns the data. I don't want to copy paste the wrappers in a thousand places.
[07:53:06] *** Joins: nac (~nac@user/nac)
[07:53:33] <Matt343> If I can ensure that nothing will actually be yielded, is there some way to transparently treat the generators as normal functions and walk through them?
[07:53:33] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[07:55:11] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 244 seconds)
[07:55:31] <Matt343> _global_generators_are_functions = True or something
[07:55:35] *** Joins: alex11 (~alex11@user/alex11)
[07:55:47] *** Quits: alex11 (~alex11@user/alex11) (Remote host closed the connection)
[07:55:52] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Killed (NickServ (GHOST command used by jeho1)))
[07:58:05] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:59:45] *** Joins: lethu (~lethu@user/lethu)
[07:59:57] *** Quits: _Ev (~ev@user/ev/x-8999918) (Quit: Leaving.)
[08:00:44] <energizer> Matt343: how about list(f())
[08:01:12] <Matt343> I'd still need to do that in a thousand places, might as well use my wrapper(f())
[08:02:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:04:03] <energizer> i cant think of a way to do it without deep hacking
[08:04:27] <energizer> didnt you mean wrapper(f)() tho
[08:05:31] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 245 seconds)
[08:05:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[08:05:41] <energizer> well you could wrap them in place
[08:05:57] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 250 seconds)
[08:06:26] <energizer> as in `for f in [those functions]: # wrap f`
[08:06:34] <Matt343> Yeah I figured there was no easy way, and no my wrapper takes the generator and advances it internally until it completes, so wrapper(f())
[08:06:46] <energizer> that's just list(f())
[08:06:47] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[08:07:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[08:07:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:07:41] <Matt343> Kinda, but there's some bidirectional communication stuff with yielded values on the other end that my wrapper needs to handle that a list() wouldn't
[08:08:12] <Matt343> If i could transparently walk the generators as functions, i could probably make the yields conditional on the other end as well so they don't happen
[08:11:03] *** Joins: mcpac82 (~textual@212.25.0.228)
[08:11:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:12:08] *** Quits: adder (~adder@user/adder) (Killed (NickServ (GHOST command used by adder`)))
[08:12:59] *** Joins: adder (~adder@user/adder)
[08:13:04] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:14:24] *** Quits: duoi (~duoi@user/duoi) (*.net *.split)
[08:14:24] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (*.net *.split)
[08:14:24] *** Quits: zebrag (~chris@user/zebrag) (*.net *.split)
[08:14:24] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (*.net *.split)
[08:14:24] *** Quits: flokuehn (~flokuehn@87.123.247.74) (*.net *.split)
[08:14:24] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (*.net *.split)
[08:14:24] *** Quits: runelind (~runelind@user/runelind) (*.net *.split)
[08:14:24] *** Quits: frost (~frost@user/frost) (*.net *.split)
[08:14:24] *** Quits: odix (~ok@65.141.163.206) (*.net *.split)
[08:14:24] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (*.net *.split)
[08:14:24] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (*.net *.split)
[08:14:24] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[08:14:24] *** Quits: grooverman (~grooverma@177.102.119.40) (*.net *.split)
[08:14:24] *** Quits: lastshell (~lastshell@user/lastshell) (*.net *.split)
[08:14:24] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[08:14:24] *** Quits: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net) (*.net *.split)
[08:14:24] *** Quits: Madda (~Madda@216.51.198.146.dyn.plus.net) (*.net *.split)
[08:14:24] *** Quits: bloody (~bloody@user/bloody) (*.net *.split)
[08:14:24] *** Quits: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net) (*.net *.split)
[08:14:24] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (*.net *.split)
[08:14:24] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (*.net *.split)
[08:14:24] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (*.net *.split)
[08:14:24] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (*.net *.split)
[08:14:24] *** Quits: FergusL (~freenode4@user/fergusl) (*.net *.split)
[08:14:24] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (*.net *.split)
[08:14:24] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[08:14:24] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[08:14:24] *** Quits: dambuster (~dambuster@185.193.170.225) (*.net *.split)
[08:14:24] *** Quits: kurfen (~kurfen@45.152.181.20) (*.net *.split)
[08:14:24] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[08:14:24] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (*.net *.split)
[08:14:24] *** Quits: Scotteh (~Scotteh@user/scotteh) (*.net *.split)
[08:14:24] *** Quits: mdk (~mdk@python/psf/mdk) (*.net *.split)
[08:14:24] *** Quits: Raichvent (~Raichvent@193.123.33.210) (*.net *.split)
[08:14:24] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[08:14:24] *** Quits: the_rat (~ratto@emily.sorcio.org) (*.net *.split)
[08:14:24] *** Quits: masterkorp (~masterkor@user/masterkorp) (*.net *.split)
[08:14:24] *** Quits: lxdr (~lxdr@user/lxdr) (*.net *.split)
[08:14:24] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[08:14:24] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[08:14:24] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[08:14:24] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[08:14:24] *** Quits: edr (~edr@user/edr) (*.net *.split)
[08:14:24] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[08:14:24] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[08:14:24] *** Quits: drew (~drew@user/drew) (*.net *.split)
[08:14:24] *** Quits: ruediger (~ruediger@user/ruediger) (*.net *.split)
[08:14:24] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[08:14:24] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (*.net *.split)
[08:14:24] *** Quits: shawwwn (uid6132@helmsley.irccloud.com) (*.net *.split)
[08:14:24] *** Quits: debnet (sid330295@python/afpy/debnet) (*.net *.split)
[08:14:24] *** Quits: moonmoon (awoo@libera/staff/moonmoon) (*.net *.split)
[08:14:24] *** Quits: llh (~llh@user/llh) (*.net *.split)
[08:14:24] *** Quits: zaz\ (~zaz@poneybl.eu) (*.net *.split)
[08:14:24] *** Quits: flagrama (sid145621@hampstead.irccloud.com) (*.net *.split)
[08:14:24] *** Quits: altendky (sid135382@hampstead.irccloud.com) (*.net *.split)
[08:14:24] *** Quits: jposer (sid132110@uxbridge.irccloud.com) (*.net *.split)
[08:14:24] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[08:14:24] *** Quits: holbrode (sid339826@tinside.irccloud.com) (*.net *.split)
[08:14:24] *** Quits: erica (~erica@user/erica) (*.net *.split)
[08:14:24] *** Quits: zmotaj (~zmotaj@user/zmotaj) (*.net *.split)
[08:14:24] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (*.net *.split)
[08:14:24] *** Quits: arti (~arti@193.40.103.195) (*.net *.split)
[08:14:24] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (*.net *.split)
[08:14:24] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[08:14:24] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[08:15:12] *** Joins: duoi (~duoi@user/duoi)
[08:15:12] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[08:15:12] *** Joins: zebrag (~chris@user/zebrag)
[08:15:12] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[08:15:12] *** Joins: flokuehn (~flokuehn@87.123.247.74)
[08:15:12] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[08:15:12] *** Joins: runelind (~runelind@user/runelind)
[08:15:12] *** Joins: frost (~frost@user/frost)
[08:15:12] *** Joins: odix (~ok@65.141.163.206)
[08:15:12] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[08:15:12] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[08:15:12] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[08:15:12] *** Joins: grooverman (~grooverma@177.102.119.40)
[08:15:12] *** Joins: lastshell (~lastshell@user/lastshell)
[08:15:12] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:15:12] *** Joins: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net)
[08:15:12] *** Joins: Madda (~Madda@216.51.198.146.dyn.plus.net)
[08:15:12] *** Joins: bloody (~bloody@user/bloody)
[08:15:12] *** Joins: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:15:12] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[08:15:12] *** Joins: FergusL (~freenode4@user/fergusl)
[08:15:12] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[08:15:12] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[08:15:12] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[08:15:12] *** Joins: cursey (~cursey@user/cursey)
[08:15:12] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[08:15:12] *** Joins: dambuster (~dambuster@185.193.170.225)
[08:15:12] *** Joins: kurfen (~kurfen@45.152.181.20)
[08:15:12] *** Joins: niko (~niko@libera/staff/niko)
[08:15:12] *** Joins: mdk (~mdk@python/psf/mdk)
[08:15:12] *** Joins: edr (~edr@user/edr)
[08:15:12] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[08:15:12] *** Joins: OverCoder (~OverCoder@user/overcoder)
[08:15:12] *** Joins: lxdr (~lxdr@user/lxdr)
[08:15:12] *** Joins: Scotteh (~Scotteh@user/scotteh)
[08:15:12] *** Joins: Raichvent (~Raichvent@193.123.33.210)
[08:15:12] *** Joins: masterkorp (~masterkor@user/masterkorp)
[08:15:12] *** Joins: the_rat (~ratto@emily.sorcio.org)
[08:15:12] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[08:15:12] *** Joins: foo (~foo@user/foo/x-8763512)
[08:15:12] *** Joins: chronon (~chronon@user/chronon)
[08:15:12] *** Joins: marienz (~marienz@libera/staff/marienz)
[08:15:12] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[08:15:12] *** Joins: libussa (~libussa@libussa.net)
[08:15:12] *** Joins: drew (~drew@user/drew)
[08:15:12] *** Joins: streety (~streety@li761-24.members.linode.com)
[08:15:12] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[08:15:12] *** Joins: shawwwn (uid6132@helmsley.irccloud.com)
[08:15:12] *** Joins: debnet (sid330295@python/afpy/debnet)
[08:15:12] *** Joins: moonmoon (awoo@libera/staff/moonmoon)
[08:15:12] *** Joins: llh (~llh@user/llh)
[08:15:12] *** Joins: zaz\ (~zaz@poneybl.eu)
[08:15:12] *** Joins: flagrama (sid145621@hampstead.irccloud.com)
[08:15:12] *** Joins: altendky (sid135382@hampstead.irccloud.com)
[08:15:12] *** Joins: jposer (sid132110@uxbridge.irccloud.com)
[08:15:12] *** Joins: wolfshappen (~waff@irc.furworks.de)
[08:15:12] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[08:15:12] *** Joins: erica (~erica@user/erica)
[08:15:12] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[08:15:12] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[08:15:12] *** Joins: arti (~arti@193.40.103.195)
[08:15:12] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[08:15:12] *** Joins: rb (~augh@theguntretort.com)
[08:15:12] *** Joins: Sadale (~Sadale@user/sadale)
[08:16:11] *** Quits: sreve (~quassel@p4ff44fe1.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:17:07] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Max SendQ exceeded)
[08:17:07] *** Quits: wolfshappen (~waff@irc.furworks.de) (Max SendQ exceeded)
[08:17:07] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Max SendQ exceeded)
[08:17:07] *** Quits: OverCoder (~OverCoder@user/overcoder) (Max SendQ exceeded)
[08:17:07] *** Quits: llh (~llh@user/llh) (Max SendQ exceeded)
[08:17:15] *** Quits: drew (~drew@user/drew) (Max SendQ exceeded)
[08:17:36] *** Joins: wolfshappen (~waff@irc.furworks.de)
[08:17:38] *** Joins: llh (~llh@user/llh)
[08:17:40] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[08:18:00] *** Joins: OverCoder (~OverCoder@user/overcoder)
[08:18:41] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[08:20:02] *** Quits: adder (~adder@user/adder) (Ping timeout: 240 seconds)
[08:20:26] *** Joins: adder (~adder@user/adder)
[08:20:41] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[08:20:54] *** Joins: drew (~drew@user/drew)
[08:21:17] *** Joins: alzgh (~alzgh@user/alzgh)
[08:23:29] *** Joins: nac9 (~nac@user/nac)
[08:23:34] *** Joins: monchi_ (~joints@143.198.92.132)
[08:25:02] *** Quits: monchi (~joints@143.198.92.132) (Remote host closed the connection)
[08:25:02] *** Quits: nac (~nac@user/nac) (Ping timeout: 240 seconds)
[08:25:02] *** nac9 is now known as nac
[08:26:14] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:28:28] *** monchi_ is now known as monchi
[08:30:27] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:32:42] *** Joins: vlm (~vlm@user/vlm)
[08:33:17] *** Quits: adder (~adder@user/adder) (Ping timeout: 256 seconds)
[08:33:41] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[08:34:48] *** Joins: rvgate5 (~rvgate@user/rvgate)
[08:35:33] *** Quits: rvgate (~rvgate@user/rvgate) (Ping timeout: 256 seconds)
[08:35:33] *** rvgate5 is now known as rvgate
[08:37:17] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:37:45] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[08:38:11] *** Joins: elkclone (~elkclone@user/elkclone)
[08:38:53] *** Joins: adder` (~adder@user/adder)
[08:39:01] *** adder` is now known as adder
[08:39:18] *** Joins: iflema (~ian@user/iflema)
[08:39:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[08:40:32] *** Quits: michele (~eraser@user/michele) (Quit: restart)
[08:40:54] *** Joins: michele (~eraser@user/michele)
[08:41:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:43:13] *** Quits: elkclone (~elkclone@user/elkclone) (Ping timeout: 250 seconds)
[08:43:14] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 244 seconds)
[08:44:24] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Ping timeout: 260 seconds)
[08:44:53] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[08:51:30] *** Quits: eddiejennings (~eddie@136.55.139.140) (Quit: Konversation terminated!)
[08:52:25] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[08:56:31] *** Joins: lethu (~lethu@user/lethu)
[08:57:55] *** Joins: lint_coder (~lint_code@2405:201:f00c:8980:3d09:cc46:834a:f181)
[08:58:50] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[08:59:54] *** Quits: manuels (~manuel@80.211.205.88) (Quit: The Lounge - https://thelounge.chat)
[09:00:07] *** Joins: Deep6 (~jhenkel@S01061056117e632c.pk.shawcable.net)
[09:00:10] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[09:00:32] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[09:00:38] *** Joins: manuels (~manuel@80.211.205.88)
[09:02:11] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[09:03:13] *** Quits: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[09:03:27] *** Joins: alex11 (~alex11@user/alex11)
[09:04:03] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[09:04:41] *** Joins: thurs806014 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:04:52] *** Quits: death916 (AdiIRC@user/death916) (Quit: ZNC 1.8.2 - https://znc.in)
[09:05:02] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 240 seconds)
[09:06:29] *** Quits: edr (~edr@user/edr) (Ping timeout: 244 seconds)
[09:08:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:10:01] *** Joins: trace987 (~trace@91.66.153.65)
[09:11:31] *** Quits: cheater (~Username@user/cheater) (Read error: Connection reset by peer)
[09:11:45] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[09:14:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:14:09] <lint_coder> Hello
[09:14:35] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[09:15:04] *** Joins: cheater (~Username@user/cheater)
[09:15:26] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[09:16:03] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[09:17:11] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[09:17:21] <Feuermagier> How do I signal the end of an iterator?
[09:17:29] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:17:47] *** Quits: n1000 (~n1000@user/n1000) (Ping timeout: 264 seconds)
[09:18:05] <deniska> Feuermagier: raise StopIteration
[09:18:56] <energizer> return
[09:18:57] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[09:19:05] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Ping timeout: 260 seconds)
[09:19:18] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 276 seconds)
[09:19:46] <deniska> I assumed we're inside __next__ :)
[09:20:02] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[09:20:23] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[09:20:31] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[09:21:09] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Read error: Connection reset by peer)
[09:21:46] *** Quits: lz__ (l@gateway/vpn/protonvpn/lz/x-63480406) (Ping timeout: 245 seconds)
[09:22:01] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[09:22:53] <Feuermagier> deniska, I'm trying to do a generator with "yield"
[09:23:04] *** Joins: mcpac82 (~textual@212.25.0.228)
[09:23:07] <deniska> Feuermagier: ah, then just that, return
[09:23:22] <Feuermagier> ah, so I can just let the function end?
[09:23:22] <deniska> (or let a function to end)
[09:23:32] *** Joins: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406)
[09:23:45] <Feuermagier> hmm?
[09:23:50] <energizer> s/to//
[09:24:02] *** Joins: nomic (~nomic@85.203.36.33)
[09:24:20] *** Quits: Matt343 (~Matt@c-69-181-108-8.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:24:51] *** Quits: trace987 (~trace@91.66.153.65) (Ping timeout: 256 seconds)
[09:24:51] *** Quits: mcpac82 (~textual@212.25.0.228) (Client Quit)
[09:26:41] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[09:27:25] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[09:27:33] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[09:27:35] *** Joins: pingpongball (~pingpongb@103.94.252.87)
[09:27:40] *** Joins: dfcnvt (~dfcnvt@gateway/vpn/pia/dfcnvt)
[09:28:31] *** Joins: stranac (~stranac@195.29.239.126)
[09:28:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[09:29:19] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:31:00] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:31:24] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[09:31:30] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[09:31:59] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[09:32:12] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[09:32:13] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Remote host closed the connection)
[09:32:56] *** Joins: de-facto (~de-facto@user/de-facto)
[09:33:05] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[09:33:14] *** Quits: pingpongball (~pingpongb@103.94.252.87) (Quit: Client closed)
[09:33:51] *** Joins: dvx (~dvx@5.181.92.64)
[09:34:04] <dfcnvt> How do I insert the value into the non-definable-finite-space for list?   For example, I'd like to do: # m[2][1][3] = 1 # successfully without defining the finite space beforehand for m = [[[0,0,0],[...],[...]],[[0,0,0],[],[]],[[0,0,0],[],[]]]
[09:35:44] *** Quits: Allegretto (~allegrett@92-249-221-230.pool.digikabel.hu) (Ping timeout: 268 seconds)
[09:36:11] <energizer> there's a bunch of ways to do that kind of thing, they're all pretty awkward imo
[09:36:48] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[09:37:00] <energizer> .setdefault
[09:37:55] *** Quits: theo (~theo@user/theo) (Quit: Bye)
[09:39:16] *** Joins: theo (~theo@user/theo)
[09:39:46] <BrenBarn> You can't do it with lists
[09:39:53] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[09:39:55] <BrenBarn> You can try to some up with some other data structure
[09:39:58] <dfcnvt> energizer: Yeah, I don't think so.  the key need to be written beforehand to the dict
[09:40:33] <energizer> you can write your own setdefault function
[09:40:57] <BrenBarn> what do you mean by "finite space"?  do you just mean you want to insert something into a list at an index that doesn't exist yet?
[09:41:10] <dfcnvt> I'm trying to create a 3d model into an undefinable length of space....Seems like I need to create a finite space..?
[09:42:24] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:43:13] <BrenBarn> I will ask again
[09:43:17] <BrenBarn> what do you mean by "finite space"?
[09:44:54] <dfcnvt> A space to fill in with any 3d model to put in.  And by "finite" I mean, if I need to define it beforehand, I may have to say...Let's the finite space be 300x300x300 and I can only write anything that is within 300x300x300 and not greater than 300 in any axis.
[09:44:57] *** Joins: Payam (~Payam@138.106.57.131)
[09:45:19] <grawity> so if you don't want to define it beforehand, use a dict instead of list
[09:45:30] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[09:45:39] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[09:45:51] <dfcnvt> Let me experiment quickly with dict
[09:46:19] *** Joins: oakridge (~oakridge@user/oakridge)
[09:46:25] <grawity> there should be a fancy oneliner to define a recursive collections.defaultdict() so that you don't need to pre-define m[2]={} etc
[09:47:49] *** Joins: Allegretto (~allegrett@80-95-71-243.pool.digikabel.hu)
[09:47:50] <grawity> probably something like "ddict = lambda: collections.defaultdict(lambda: ddict()); m = ddict(); m[2][1][3] = 1" not sure how well that works performance-wise
[09:49:18] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[09:49:34] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[09:50:11] *** Joins: c10l (~c10l@user/c10l)
[09:50:17] *** Joins: djapo (~archangel@user/djapo)
[09:50:53] <dfcnvt> Okay, thanks -- I'll try that
[09:51:23] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[09:53:02] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:53:30] *** Quits: frost (~frost@user/frost) (Ping timeout: 244 seconds)
[09:53:48] *** Joins: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt)
[09:54:08] <grawity> hmm if you only want exactly 3 levels, you probably should defaultdict(defaultdict(defaultdict(int))) instead
[09:54:58] <BrenBarn> You could also just use a dict with tuple keys if you know it's going to be 3d
[09:55:03] <jinsun_> grawity:  nice, it is defaultdicts all the way down
[09:55:10] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:55:11] *** Quits: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:55:14] <BrenBarn> So you would do `m[2, 1, 3]` instead of `m[2][1][3]`
[09:55:32] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[09:55:42] *** Joins: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com)
[09:55:58] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[09:56:24] *** Joins: vaio (~gary@user/ghost)
[10:00:31] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Quit: Connection closed for inactivity)
[10:00:44] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:02:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:03:23] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 250 seconds)
[10:04:36] *** Quits: emerent (~quassel@p200300cd574855efba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[10:05:51] *** Joins: emerent (~quassel@p200300cd574855efba27ebfffed28a59.dip0.t-ipconnect.de)
[10:08:50] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:10:15] *** Quits: tuxlovesyou (~daemonchi@136.37.26.49) (Ping timeout: 268 seconds)
[10:10:23] *** Joins: mrwick (~mrwick@user/mrwick)
[10:10:41] <Feuermagier> Has anyone had the issue of the jupyter notebook render turning grey/invisible in Pycharm and knows a fix? - Even restarting the Kernel doesn't help - I need to restart Pycharm every time. Would appreciate fixes/debug ideas.
[10:10:47] *** Joins: iflema (~ian@user/iflema)
[10:12:15] *** Quits: feoh (~feoh@137.184.104.30) (Quit: The Lounge - https://thelounge.chat)
[10:12:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[10:12:51] *** Joins: feoh (~feoh@137.184.104.30)
[10:13:49] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:15:17] *** Quits: Allegretto (~allegrett@80-95-71-243.pool.digikabel.hu) (Ping timeout: 256 seconds)
[10:17:35] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[10:20:21] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[10:21:08] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.144-244.dynamic.3bb.co.th) (Remote host closed the connection)
[10:21:43] *** Joins: p-i- (~Ohmu@mx-ll-223.206.144-244.dynamic.3bb.co.th)
[10:21:47] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[10:22:20] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[10:22:44] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:a8fe:979b:f620:11ec) (Read error: Connection reset by peer)
[10:22:59] *** Quits: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt) (Quit: Leaving)
[10:23:08] *** Joins: kevr` (~kevr@user/kevr)
[10:23:32] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:24:35] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:25:13] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[10:26:33] *** Joins: mcpac82 (~textual@p5dc1c756.dip0.t-ipconnect.de)
[10:27:15] *** Joins: yitz (~yitz@exercism/yitz)
[10:27:17] *** Joins: sharperguy (~sharpergu@88.130.219.154)
[10:28:17] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[10:28:34] <roniez> .
[10:28:36] *** Joins: Allegretto (~allegrett@84-236-36-103.pool.digikabel.hu)
[10:28:41] *** Quits: mcpac82 (~textual@p5dc1c756.dip0.t-ipconnect.de) (Client Quit)
[10:28:56] * enyc mewos roniez 
[10:29:04] *** Joins: sreve (~quassel@p4ff44cd9.dip0.t-ipconnect.de)
[10:29:32] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[10:31:26] *** Joins: parv (~quass@user/parv)
[10:31:26] *** Joins: ubert (~Thunderbi@p200300ecdf4fca8de6b318fffe838f33.dip0.t-ipconnect.de)
[10:32:31] *** Joins: hd1 (~hd1@cpe-172-91-170-129.socal.res.rr.com)
[10:32:39] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[10:33:48] <hd1> Is there no use of type hints in the library for a reason other than nobody's bothered to go through and add them?
[10:33:53] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:34:22] <hd1> err.. let me try that again
[10:34:32] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[10:35:13] <hd1> is there a reason that type hints are not used in the cpython tree?
[10:36:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[10:36:27] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:36:41] <jinsun__> the type stubs are in typeshed not in cpython, maybe because type hints need to be updated faster than cpython releases
[10:36:52] *** jinsun__ is now known as jinsun
[10:36:55] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[10:37:16] <jinsun> https://github.com/python/typeshed/tree/master/stdlib
[10:37:18] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[10:37:22] *** Joins: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com)
[10:38:04] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:39:20] <jinsun> also I guess because this way the type stubs can be used for all implementations of python, not just cpython
[10:39:21] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[10:40:11] *** Joins: brabrax (~brabrax@user/brabrax)
[10:40:51] *** Joins: n1000 (~n1000@user/n1000)
[10:40:55] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[10:41:47] *** Joins: brabrax (~brabrax@user/brabrax)
[10:41:55] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:43:07] <jinsun> also inline annotations are probably a no no because they would mess with the git history
[10:44:02] *** Joins: alkino (~quassel@user/alkino)
[10:45:36] <hd1> it's just another patch, jinsun
[10:45:39] *** Quits: curiosity (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[10:47:21] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:26] <jinsun> they have to be constantly updated too, typeshed didn't get it right the first time
[10:47:43] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[10:48:06] <jinsun> so better to have that noise outside the cpython repository in a separate repo
[10:48:10] *** Joins: seednode (~seednode@user/seednode)
[10:48:27] *** Quits: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com) (Ping timeout: 250 seconds)
[10:49:04] <jinsun> and that is just one reason, the other reasons are probably more important (faster updates and implementation agnosti annotations)
[10:50:04] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:50:52] *** Quits: hd1 (~hd1@cpe-172-91-170-129.socal.res.rr.com) (Quit: Connection closed)
[10:54:56] *** Joins: Armanzor (~Armanzor@user/armanzor)
[10:55:07] *** Quits: lint_coder (~lint_code@2405:201:f00c:8980:3d09:cc46:834a:f181) (Read error: Connection reset by peer)
[10:55:14] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[10:55:18] *** Joins: Tas-sos (~Tas-sos@46-174-70.adsl.cyta.gr)
[10:59:20] *** Quits: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net) (Remote host closed the connection)
[11:00:35] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[11:01:51] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:02:43] *** Joins: brabrax (~brabrax@user/brabrax)
[11:04:28] *** Joins: rendar (~rendar@user/rendar)
[11:05:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[11:05:20] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[11:05:25] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[11:05:38] *** Joins: carl- (~carl-@185.103.188.130)
[11:05:49] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-cce3-74e0-cf74-3ab2.res6.spectrum.com) (Quit: jarthur_)
[11:08:01] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:09:19] *** Joins: brabrax (~brabrax@user/brabrax)
[11:10:04] *** Joins: manti7 (~manti7@176.10.104.94)
[11:11:21] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:12:36] *** Joins: mcpac82 (~textual@p5dc1c756.dip0.t-ipconnect.de)
[11:13:58] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[11:15:16] *** Joins: brabrax (~brabrax@user/brabrax)
[11:15:40] *** Joins: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com)
[11:16:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:16:24] *** Joins: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6)
[11:18:01] *** Joins: lorenzosu (~lorenzosu@user/lorenzosu)
[11:19:46] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[11:20:02] *** Quits: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com) (Ping timeout: 240 seconds)
[11:21:19] *** Joins: pingpongball (~pingpongb@103.94.252.84)
[11:21:49] *** Joins: elissparke (~elisspark@pool-96-238-11-235.prvdri.fios.verizon.net)
[11:21:52] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:21:57] *** Joins: the_finn (uid526334@id-526334.hampstead.irccloud.com)
[11:22:58] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:23:15] <elissparke> can someone advise me how to best distribute an application on Windows, that includes both a python daemon and a win32 program? is there a way to install a win32 binary as part of the python install? or is there a way to make a .msi or .exe installer package that also installs my python daemon and its dependencies?
[11:23:22] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:23:41] <pingpongball> Somebody please
[11:23:43] <pingpongball> Anybody know react.js , socket.io and axios here.
[11:23:53] <pingpongball> #reactjs doesnt response
[11:25:41] <twb> pingpongball: this is the wrong place to ask.  Try a non-IRC support forum: https://reactjs.org/community/support.html
[11:25:53] *** Joins: palasso (~palasso@user/palasso)
[11:28:35] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 264 seconds)
[11:28:43] *** kevr` is now known as kevr
[11:28:47] *** Joins: cluelessperson_ (~cluelessp@user/cluelessperson)
[11:31:22] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:31:51] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[11:32:16] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:32:21] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 256 seconds)
[11:32:31] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[11:33:17] *** Joins: grooverman_ (~grooverma@179.99.123.165)
[11:33:58] *** Joins: SirScott5 (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[11:34:12] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:ed81:215:7b5b:85c3)
[11:34:23] *** Quits: FuraiTHD (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[11:34:31] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:ed81:215:7b5b:85c3) (Client Quit)
[11:34:46] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 244 seconds)
[11:35:36] *** Quits: elissparke (~elisspark@pool-96-238-11-235.prvdri.fios.verizon.net) (Quit: Client closed)
[11:35:47] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Ping timeout: 264 seconds)
[11:35:47] *** SirScott5 is now known as SirScott
[11:37:30] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:37:46] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:38:01] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[11:39:41] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[11:40:17] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:40:18] *** Parts: nickodd (~nickodd@user/nickodd) ()
[11:40:32] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[11:41:45] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Client Quit)
[11:41:53] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:43:22] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[11:45:50] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[11:46:17] *** Quits: cluelessperson_ (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[11:47:17] *** Joins: thiras (~thiras@user/thiras)
[11:47:44] *** Joins: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr)
[11:48:25] *** Quits: visl (visl@user/visl) (Ping timeout: 260 seconds)
[11:48:32] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 240 seconds)
[11:50:22] *** Parts: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr) ()
[11:50:29] *** Quits: llh (~llh@user/llh) (Ping timeout: 256 seconds)
[11:51:17] *** Joins: llh (~llh@user/llh)
[11:51:17] *** Joins: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de)
[11:51:59] *** Quits: p-i- (~Ohmu@mx-ll-223.206.144-244.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[11:52:26] *** Joins: TJ- (~root@user/tj-)
[11:53:02] *** Quits: rickay (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 250 seconds)
[11:53:47] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[11:54:34] *** Joins: nickodd (~nickodd@user/nickodd)
[11:54:34] *** Joins: kosh (~kosh@user/kosh)
[11:56:09] *** Quits: Allegretto (~allegrett@84-236-36-103.pool.digikabel.hu) (Ping timeout: 256 seconds)
[11:58:25] *** Joins: RiFo (~RiFo@user/rifo)
[12:00:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:01:35] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[12:01:44] *** Quits: nomic (~nomic@85.203.36.33) (Quit: Leaving)
[12:02:49] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[12:03:24] *** Joins: chele (~chele@user/chele)
[12:04:35] *** Joins: visl (visl@user/visl)
[12:09:36] *** Joins: Allegretto (~allegrett@91-83-2-207.pool.digikabel.hu)
[12:09:52] *** Joins: arinov (~arinov@213.194.126.155)
[12:13:00] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:14:23] *** Joins: arseru (uid515527@user/arseru)
[12:15:36] <arseru> Hi! What would be the more pythonic way to executed method `my_method()` either from ClassAA or ClassBB, by calling a method named `evaluate(class="AA").evaluate()`? I don't know if I'm explaining correctly
[12:15:50] *** Joins: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com)
[12:16:08] *** Joins: fdan (~fdan@103.215.168.1)
[12:16:18] *** Joins: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[12:16:43] <arseru> some magical way to import classes depending on an input string
[12:16:46] *** Joins: brelod (~me@90.244.150.142)
[12:16:48] <kosh> why doesn't each of them just have an evaluate() method that you call on an object of ClassAA or c
[12:18:40] <arseru> kosh: let's say I have 200 of these different ClassAA/ClassBB classes, and I need to choose which one to use/import from an input string "AA"/"BB"/etc, and after I've chosen, I can call their child methods `my_method()`
[12:19:07] <jinsun> the magic way to get class from its name string is getattr `import module; getattr(module, "classname")`
[12:19:13] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[12:20:00] <arseru> jinsun: that's what I was looking for, thanks! :)
[12:20:02] *** Joins: Atque (~Atque@user/atque)
[12:20:45] *** Quits: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com) (Ping timeout: 250 seconds)
[12:21:25] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[12:21:53] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Remote host closed the connection)
[12:22:18] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:23:09] *** Joins: vladoski (~vladoski@93-36-216-2.ip62.fastwebnet.it)
[12:24:04] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:26:20] *** Joins: strk (~strk@user/strk)
[12:26:32] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:26:42] <strk> I'm trying to get a backtrace, isn't `raise ("xxx")` supposed to do that ?
[12:27:19] <strk> I ask because the backtrace resulting from my raise shows, as caller, a library: "/usr/local/lib/python3.9/site-packages/django/template/base.py",
[12:27:32] <strk> which is unexpected to me -- could that be registered callbacks into a library ?
[12:27:48] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.3)
[12:28:18] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[12:30:09] <energizer> strk: normally you'd raise a particular exception like `raise ValueError("xxx")` but django probably does a certain amount of magic
[12:30:18] *** Joins: greedom (~greedom@x59cc9b10.dyn.telefonica.de)
[12:30:50] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[12:30:53] <strk> I raised Exception
[12:31:01] <energizer> (the two things i said are both true but arent related to each other)
[12:31:13] <strk> yeah, I hate magic
[12:32:22] <energizer> strk: you can try traceback.print_stack() or whatever it's called and is what it says
[12:33:24] <energizer> strk: django might be just catching and rethrowing your exception
[12:34:21] *** Quits: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Quit: Leaving)
[12:34:35] <energizer> from some higher frame
[12:35:08] <energizer> (or lower, depending which way stacks grow...)
[12:35:18] *** dcaro_away is now known as dcaro
[12:35:49] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[12:36:21] *** Quits: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[12:36:43] *** Joins: shad (~shad@user/shad)
[12:37:47] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:38:07] *** Joins: jpic (~jpic@82.142.10.150)
[12:38:08] <strk> general question: how to tell what to `import` when looking at docs like this: https://docs.python.org/3/library/traceback.html
[12:38:12] <strk> is that just "import traceback" ?
[12:38:29] <jinsun> yes
[12:39:53] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:40:42] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-205-221.dynamic.dial.as9105.com)
[12:41:32] <strk> same, still File "/usr/local/lib/python3.9/site-packages/django/template/base.py", line 858, in _resolve_lookup
[12:42:03] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[12:42:12] <strk> I don't get how django can call a business logic custom function
[12:42:16] <energizer> where are you putting this code?
[12:42:18] <strk> that line 858 is current = current()
[12:42:20] <strk> :(
[12:42:54] <strk> the django function is called _resolve_lookup and documented to do magic (call a function to resolve a variable, I guess)
[12:42:59] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[12:43:03] *** Joins: QuantumCurious (~adarsh@27.57.121.105)
[12:43:19] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[12:43:24] <strk> so basically in order to tell what triggers the call I have to find all occurrences of the *name* of the function being invoked trough that lookup
[12:43:48] <energizer> i can only speak about python, i dont know what django does, so if necessary there is also #django
[12:44:00] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[12:44:02] <strk> yes, thanks
[12:44:31] <strk> I think this is what's happening anyway: a template file is using "coords_list" as a variable name, and django is being invoked to resolve that name (which triggers calling a function)
[12:46:43] *** Joins: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de)
[12:52:10] *** Joins: ihristov (~ihristov@217.145.94.71)
[12:54:07] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[12:54:18] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:54:30] *** Quits: QuantumCurious (~adarsh@27.57.121.105) (Quit: Leaving)
[12:55:03] *** Joins: brabrax (~brabrax@user/brabrax)
[12:55:09] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:56:00] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[12:56:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:56:47] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 264 seconds)
[12:57:07] *** Quits: greedom (~greedom@x59cc9b10.dyn.telefonica.de) (Remote host closed the connection)
[12:57:11] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:57:22] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[12:57:34] *** Joins: AsenMx (~AsenMx@user/asenmx)
[12:58:22] *** Joins: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[12:59:02] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[12:59:02] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Ping timeout: 240 seconds)
[12:59:54] <Helle> Is there a reasonable human date time string parsing library for Python ? dateparser cannot be setup to handle both YYYY-MM-DD DD/MM/YYYY at the same time due to the US-centric presumptions in it
[13:00:11] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[13:01:39] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:01:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[13:02:00] *** Joins: sodimel (~co@7.190.125.78.rev.sfr.net)
[13:02:46] <niluje> Helle: arrow?
[13:02:51] <niluje> https://arrow.readthedocs.io/en/latest/
[13:03:25] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:03:42] <drogas> "humanize".... "dehumanize".. hahah what a doc
[13:04:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[13:05:04] <Helle> niluje: that seems to only shift dates
[13:07:08] <jinsun> I go for inhuman date parsers for dd/mm/yyyy, cannot trust the human to not be american
[13:07:26] <Helle> jinsun: I mean yyyy-mm-dd is the ISO standard
[13:08:26] <jinsun> if you have only yyyy-mm-dd you shouldn't have any problems
[13:09:03] <jinsun> date.fromisoformat and dateutil.parser.parse both handle that fine
[13:09:11] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[13:09:16] <jinsun> (and probably all other date parsers too)
[13:09:24] <drogas> yyyy-mm-dd makes a lot of sense computationally over mm-dd-yyyy that is the US abomination
[13:09:58] <Helle> jinsun: I am accepting human input, but the humans involved would never use US inputs, but can use either year or day first ordering and with / or - separating
[13:10:06] <Helle> and several other minor variations that would parse
[13:10:07] <jinsun> it is dd/mm/yyyy and mm/dd/yyyy that cause problems
[13:10:38] *** Quits: pingpongball (~pingpongb@103.94.252.84) (Quit: Client closed)
[13:10:52] <drogas> apply Apple philosphy and force them to go one or the other.
[13:11:32] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[13:12:07] <Helle> nah, this is interactive enough that I can provide useful feedback, but the US ordering just is the one that wouldn't occur, but due to how dateparser is setup I can't make it just do both of the other ones, it can only do one or the other
[13:12:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[13:12:45] *** Joins: semuadmin (~semuadmin@cpc101310-bagu16-2-0-cust726.1-3.cable.virginm.net)
[13:13:05] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[13:13:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:14:28] *** Parts: semuadmin (~semuadmin@cpc101310-bagu16-2-0-cust726.1-3.cable.virginm.net) ()
[13:14:32] <jinsun> don't know of any automatic parser that is not american, but you can always do it the hard way by writing all possible strptime formats that are likely and try them one by one
[13:15:03] *** Joins: greedom (~greedom@x59cc9b10.dyn.telefonica.de)
[13:15:10] <Helle> or patch dateparser
[13:15:16] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[13:15:19] <Helle> I mean the logic change needed is tiny
[13:15:48] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[13:16:28] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[13:16:29] *** Joins: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com)
[13:16:40] *** Parts: strk (~strk@user/strk) (WeeChat 3.0.1)
[13:17:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:17:46] <odix> is it possible in python to refer to parameters in a function by shortened values ? Or even if statements ? def blah(var1, var2):...I can refer to var1 as maybe $1 and var2 as $2 or something within the scope
[13:17:49] <jinsun> I solve it by saying dates will be parsed how dateutil.parser wants if you don't like mm/dd/yyyy use yyyy-mm-dd
[13:18:12] <drogas> maybe you can use pandas?
[13:18:23] <nedbat> odix: there is no shorthand like that
[13:18:34] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 260 seconds)
[13:18:49] <jinsun> pandas also uses dateutil.parser internally for the date parsing I think
[13:18:52] *** Quits: greedom (~greedom@x59cc9b10.dyn.telefonica.de) (Remote host closed the connection)
[13:18:57] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 268 seconds)
[13:19:09] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[13:19:28] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:20:02] <drogas> ah I see wasn't aware of that
[13:20:09] <odix> thanks ned
[13:20:23] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:20:59] *** Quits: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com) (Ping timeout: 250 seconds)
[13:21:01] <vladoski> what's the best way to add new keys to a dictionary from another dictionary knowing that I can encounter a keyerror?
[13:21:19] <vladoski> is using multiple try excepts ugly for this?
[13:21:43] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[13:21:56] *** Joins: df_data (sid466269@ilkley.irccloud.com)
[13:22:00] <energizer> odix: def blah(*a): a[0], a[1]
[13:22:16] *** Joins: DaPinkOne (~Dap@user/dap)
[13:22:56] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:23:14] <parv> vladoski, Are you not collecting values too from another dict?
[13:23:46] <energizer> Helle: you might look at pendulum. author is french
[13:23:56] <energizer> it has a strict=False mode iirc
[13:23:58] <vladoski> parv yes I need to populate a first dict with some values from another one
[13:24:09] <vladoski> but in the second one I might get a keyerror
[13:24:24] <odix> energizer: ty
[13:25:09] <odix> different approach
[13:25:16] <grawity> vladoski: IMO, "for k in wanted_keys: if k in old_dict: new_dict[k] = old_dict[k]"
[13:25:16] <parv> vladoski, I thought you were "new keys to a dictionary from another dictionary". So why would there be a KeyError?
[13:25:40] <grawity> probably a pre-defined list of keys that the old dict may or may not have
[13:25:45] *** Joins: plastico (~plastico@neomutt/plastico)
[13:26:24] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:26:43] <grawity> in some situations, I might even use "existing_keys = {*wanted_keys} & {*old_dict}" and then do something with keys_which_exist
[13:26:50] <grawity> probably unnecessary in this case
[13:27:03] *** Parts: arseru (uid515527@user/arseru) ()
[13:28:00] <parv> vladoski, In any case there are dict.{setdefault,get} methods (in addition to collections.defaultdict).
[13:28:51] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:30:11] <parv> grawity, That will fail with NameError or some such ;->
[13:30:20] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[13:30:31] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[13:30:53] *** Joins: legola (~legola@46.235.101.181)
[13:31:57] *** Joins: alzgh (~alzgh@user/alzgh)
[13:32:29] <kungp> is there a queue variant that will just automatically remove the oldest value when it's full and i add to it?
[13:33:02] *** Quits: sharperguy (~sharpergu@88.130.219.154) (Ping timeout: 240 seconds)
[13:33:16] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[13:33:23] <energizer> kungp: collections.deque
[13:33:38] <kungp> or i guess what i'm looking for is the fastest way to do that
[13:33:43] <kungp> oh, thanks
[13:35:06] <parv> Given the outline: old.update( { k : new.get( k ) for k in new } )
[13:36:05] <grawity> parv: ?
[13:36:40] *** Joins: mcope (~matt@user/mcope)
[13:37:19] *** Quits: orangejuice (~orangeext@user/orangeextract) (Quit: Leaving)
[13:38:01] <vladoski> okay understood thanks, but in my case I don't want to create a key with null or another placeholder. Is it still possible to do without lots of try except blocks?
[13:38:03] <parv> grawity, re: <grawity> in some situations, I might even use "existing_keys = {*wanted_keys} & {*old_dict}" and then do something with keys_which_exist -- my comment about failure was due to change of variable name; compare: "existing_keys" with "keys_which_exist"
[13:38:31] <grawity> vladoski: "for k in wanted_keys: if k in old_dict: new_dict[k] = old_dict[k]"
[13:43:09] *** Parts: dminuoso (~dminuoso@user/dminuoso) (WeeChat 3.1)
[13:44:09] *** Joins: Naan (~Naan@user/naan)
[13:45:38] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:47:07] *** Joins: Klinda (~superleag@user/klinda)
[13:47:42] *** Quits: sodimel (~co@7.190.125.78.rev.sfr.net) (Quit: Konversation terminated!)
[13:48:32] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 240 seconds)
[13:49:05] <parv> "for k in wanted: if k in dict ..." could translate to new.update( { k : old[ k ] for k in set( wanted ) & set( old.keys() ) } )
[13:51:20] <gitesh> I am not understanding this -------> https://bpa.st/ET7Q
[13:51:56] <gitesh> they said "✔️ Yes, alist was unchanged by the assignment statement. blist was a copy of the references in alist."
[13:52:34] <gitesh> if blist is a copy of the references , so if i changed alist blist should be changed i think
[13:53:05] <gitesh> okay now I'm understaing it a little bit as I'm explaining to you
[13:53:39] <gitesh> because element of the list are integers they are immutable, so if i changed blish..um
[13:53:48] <gitesh> *blist
[13:53:58] *** Joins: raxor2k (~raxor2k@78.158.246.35)
[13:54:10] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[13:55:23] <gitesh> why alist is not changed?
[13:55:34] *** Joins: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru)
[13:55:44] <raxor2k> error_codes_dict = {1: {'message_code_ID': 1, 'message_code_number': 1, 'message_code': 'message_code', 'message': 'wrong subscription'}}     how can i print the "message" key?
[13:55:46] <jinsun> because alist and blist refer to different lists
[13:55:51] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Client Quit)
[13:55:58] <raxor2k> not "wrong_subscription" but "message"
[13:56:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[13:56:20] <jinsun> you want to print("message") ?
[13:56:39] <nedbat> gitesh: try it in pythontutor: https://pythontutor.com/visualize.html#code=alist%20%3D%20%5B4,2,8,6,5%5D%0Ablist%20%3D%20alist%20*%202%0Ablist%5B3%5D%20%3D%20999%0Aprint%28alist%29%0A&cumulative=false&curInstr=4&heapPrimitives=nevernest&mode=display&origin=opt-frontend.js&py=3&rawInputLstJSON=%5B%5D&textReferences=false
[13:56:53] <gitesh> ok
[13:56:58] <gitesh> thanks
[13:57:01] <raxor2k> jinsun: yes
[13:57:16] *** Joins: darksun (~darksun@user/darksun)
[13:57:35] <jinsun> raxor2k: okay so you can just do that `print("message")`
[13:57:53] <gitesh> nedbat: that says these are completely different lists
[13:57:54] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:58:03] <nedbat> gitesh: because they are
[13:58:10] <raxor2k> error_codes_dict[1]["message"]  prints me : "wrong subscription", but i also want to print ("message")
[13:58:18] <raxor2k> because this dict may change dynamically
[13:58:31] <gitesh> nedbat: ok
[13:58:48] <nedbat> raxor2k: what do you know about the key other than "it's 'message' " ?
[13:59:04] <raxor2k> nothng
[13:59:19] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[13:59:29] <nedbat> raxor2k: then you can only do:  print("message: ", error_codes_dict[1]["message"])
[13:59:42] <nedbat> raxor2k: unless you want to print all the keys and values
[14:00:03] <raxor2k> nedbat: ok thanks
[14:03:37] <parv> raxor2k, You could print that string only if "message" key exists by iterating over keys of "error_codes_dict"; then using those, iterate over keys of its sub-dict where you would compare if the current key is the one you need
[14:06:46] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[14:07:30] *** Joins: thiras (~thiras@user/thiras)
[14:07:53] * parv is reminded of "Hello" sung by Lionel R, https://www.youtube.com/watch?v=mHONNcZbwDY
[14:10:07] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:12:17] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:17:00] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[14:18:50] *** Joins: ano (~ano@user/ano)
[14:20:06] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:22:52] *** Joins: jonaskabrink (~jonaskabr@eduroam-190-094.wlan.tu-harburg.de)
[14:23:32] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:24:18] *** Quits: jonaskabrink (~jonaskabr@eduroam-190-094.wlan.tu-harburg.de) (Client Quit)
[14:27:02] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[14:28:02] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[14:28:56] *** Joins: stpz (~stpz@27.190.169.153)
[14:29:15] *** Quits: stpz (~stpz@27.190.169.153) (Client Quit)
[14:29:28] *** Joins: stpz (~stpz@27.190.169.153)
[14:30:39] *** Joins: Ilyu (~quassel@78.202.228.230)
[14:31:03] *** Joins: jonaskabrink (~jonaskabr@eduroam-190-094.wlan.tu-harburg.de)
[14:33:09] *** Quits: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[14:33:58] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:49e4:96ed:79df:eb49)
[14:34:27] *** Joins: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com)
[14:35:05] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[14:37:26] *** Quits: Deep6 (~jhenkel@S01061056117e632c.pk.shawcable.net) (Remote host closed the connection)
[14:37:53] *** Quits: stpz (~stpz@27.190.169.153) (Quit: Ping timeout (120 seconds))
[14:38:45] *** Joins: stpz (~stpz@27.190.169.153)
[14:39:02] *** Quits: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com) (Ping timeout: 240 seconds)
[14:40:08] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[14:41:36] *** Joins: timkofu (~timkofu@user/timkofu)
[14:41:38] *** Quits: stpz (~stpz@27.190.169.153) (Client Quit)
[14:41:41] <timkofu> Howdy
[14:42:18] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:44:11] <rindolf> timkofu: hey
[14:45:52] *** Joins: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru)
[14:48:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:52:57] *** Joins: drogas (~drogas@jump2.jet.uk)
[14:54:49] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[14:54:56] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:55:11] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[14:56:27] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[14:57:11] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[14:59:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:59:59] *** Quits: mcpac82 (~textual@p5dc1c756.dip0.t-ipconnect.de) (Quit: mcpac82)
[15:00:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:57] *** Joins: mcpac82 (~textual@212.25.0.228)
[15:04:39] *** Joins: shokohsc8 (~shokohsc@17.245.204.77.rev.sfr.net)
[15:08:36] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: ZNC 1.8.2 - https://znc.in)
[15:09:04] *** Joins: nomic (~nomic@185.192.69.217)
[15:10:26] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:10:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:10:53] <nedbat> of all the useless "fixes": renaming assertRaisesRegexp to assertRaisesRegex
[15:11:31] <jbe> the "p" is now silent
[15:11:33] *** Joins: arseru (uid515527@user/arseru)
[15:11:43] *** Joins: pacbard (~pacbard@user/pacbard)
[15:12:25] <arseru> Hi! What would be the better way to use `@pytest.mark.parametrize` without knowing how many use cases you have? e.g. have a fixture with N tests without having to write each one of them in `pytest.mark.parametrize`
[15:12:36] <arseru> r/use cases/test cases/
[15:12:45] <nedbat> arseru: where are the N test cases coming from?
[15:13:00] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:13:18] <arseru> nedbat: from a JSON fixture file where I want to check for a specific code, different subcodes and data linked to it
[15:14:17] <arseru> e.g. I have different zip codes, each of them with a list of streets, and each street linked to a specific data
[15:15:05] <arseru> so that when I executed the tests, pytest automatically discovers N zip codes, N streets and tests the data for each of those combinations
[15:15:14] <nedbat> arseru: there are a few ways to do it: https://stackoverflow.com/questions/57702637/how-to-parametrize-tests-with-json-array-test-data-using-pytest-in-python
[15:15:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:15:29] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:15:29] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[15:15:49] <arseru> nedbat: thanks, I'll take a look at that :)
[15:15:56] *** Joins: paul424 (~tom@ip-37-248-157-216.multi.internet.cyfrowypolsat.pl)
[15:16:41] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[15:17:01] *** Joins: gregoryloscombe (~gregorylo@213.86.15.34)
[15:17:34] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[15:17:49] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[15:18:38] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:18:53] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[15:19:59] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:20:09] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[15:20:43] *** Quits: mcpac82 (~textual@212.25.0.228) (Read error: Connection reset by peer)
[15:20:57] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Client Quit)
[15:21:04] *** Quits: odix (~ok@65.141.163.206) (Ping timeout: 244 seconds)
[15:22:01] *** dcaro is now known as dcaro_lunch
[15:24:23] *** Joins: zeden (~zeden@user/zeden)
[15:24:30] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:24:30] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[15:25:14] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[15:26:46] *** Joins: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77)
[15:26:57] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 256 seconds)
[15:29:03] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[15:29:17] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[15:29:30] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[15:29:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[15:30:34] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[15:31:51] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[15:32:25] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:33:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:34:12] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[15:34:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:34:48] *** Joins: ano (~ano@user/ano)
[15:34:52] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:35:27] *** Quits: raxor2k (~raxor2k@78.158.246.35) ()
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:16] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[15:38:07] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:41:05] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[15:42:14] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[15:43:59] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 250 seconds)
[15:44:36] <arseru> and how can I use the return value of a fixture in another fixture?
[15:46:32] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[15:47:26] <arseru> nvm, fixed it
[15:47:29] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:52:02] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 240 seconds)
[15:52:05] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[15:52:50] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[15:55:41] *** Joins: CoolerX (~CoolerX@user/coolerx)
[15:57:02] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:57:23] *** Joins: Elodin (~weechat@user/elodin)
[15:57:27] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:57:37] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:57:47] <ExeciN> Hi people. I'm having some trouble getting a hex string into bytes. this is my code https://bpa.st/QDZA I could probably directly convert the int into bytes instead of taking the hex string of the int and then making bytes out of it
[15:58:50] *** Quits: jonaskabrink (~jonaskabr@eduroam-190-094.wlan.tu-harburg.de) (Quit: jonaskabrink)
[16:00:03] <grawity> do you know whether 'amount' has a specific number of bytes allocated to it?
[16:01:19] *** Lando-HoloNet is now known as Lando-SpacePimp
[16:01:46] <supakeen> You can use `int.to_bytes`. or `bytes.fromhex`.
[16:02:03] *** Joins: nerus (~nerus@181.174.164.224)
[16:03:37] *** Quits: paul424 (~tom@ip-37-248-157-216.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[16:03:54] *** Quits: servytor (uid525486@id-525486.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:05:17] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:05:35] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[16:07:58] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[16:08:03] *** Joins: jonaskabrink (~jonaskabr@eduroam-190-175.wlan.tu-harburg.de)
[16:09:21] *** Quits: nerus (~nerus@181.174.164.224) (Quit: Leaving)
[16:09:59] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[16:10:51] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[16:11:54] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:13:01] *** Quits: ubert (~Thunderbi@p200300ecdf4fca8de6b318fffe838f33.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[16:13:44] *** Joins: nerus (~nerus@181.174.164.224)
[16:14:14] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[16:14:49] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[16:16:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:17:33] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[16:17:52] <ExeciN> grawity: to be honest I'm not sure about the number of bytes but I think padding isn't allowed
[16:18:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[16:18:31] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[16:20:59] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:21:21] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[16:22:05] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[16:22:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[16:22:58] *** Quits: ac_slater (~ac_slater@c-71-231-45-179.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[16:23:33] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[16:26:08] <bjs> ExeciN: why do you say you're having trouble?  Is the code you pasted buggy in some way?
[16:26:54] *** Joins: pycurious (~Adium@user/pycurious)
[16:27:03] <pycurious> https://www.pypy.org/download.html - how do i install this in ubuntu 20?
[16:29:02] *** Joins: ubert (~Thunderbi@ip5b405828.dynamic.kabel-deutschland.de)
[16:29:05] *** Quits: jonaskabrink (~jonaskabr@eduroam-190-175.wlan.tu-harburg.de) (Quit: jonaskabrink)
[16:29:19] <arseru> pycurious: Linux x86 64 bit
[16:29:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:29:26] <bjs> pycurious: presumably follow the instructions for Linux
[16:29:44] *** Joins: elkclone (~elkclone@user/elkclone)
[16:29:58] <bjs> pycurious: you may also find there is a distribution package for it you can install (E.g. with `apt`),  and other tools like `pyenv` can install pypy versions
[16:30:24] *** Quits: nomic (~nomic@185.192.69.217) (Quit: Leaving)
[16:30:29] <pycurious> found it: https://launchpad.net/~pypy/+archive/ubuntu/ppa
[16:31:22] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[16:31:24] <pycurious> the ppa still has 3.7 in it - not 3.8
[16:31:48] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[16:32:07] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:32:11] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:32:16] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:32:16] <bjs> pycurious: ubuntu packages tend to not be the most up to date,  if you're going to be installing lots of different Python versions I really do recommend pypy
[16:32:19] <bjs> uh oops, pyenv*
[16:33:49] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-205-221.dynamic.dial.as9105.com) (Ping timeout: 256 seconds)
[16:34:06] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[16:34:20] <pycurious> bjs: pypy3.7-7.3.3 - that is the latest in pyenv
[16:34:23] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[16:35:09] <pycurious> ah - my pyenv itself is out of date
[16:35:26] <bjs> pycurious: :)
[16:35:43] <bjs> it's just a github repo, you can `git pull` to get things.
[16:35:54] <pycurious> yup, got it now
[16:36:02] <pycurious> pyenv update worked like a charm :)
[16:36:50] *** Joins: damonlynch_ (~ngaio@68.235.43.174)
[16:36:55] *** Joins: pro_z (~pro_z@37.214.56.218)
[16:37:00] *** Joins: upsala (~zcb@185.213.155.252)
[16:37:22] *** Joins: iflema (~ian@user/iflema)
[16:37:40] *** dcaro_lunch is now known as dcaro
[16:38:26] *** Quits: twb (~twb@2403-5804-c6--add.ip6.aussiebb.net) (Ping timeout: 245 seconds)
[16:38:35] *** Quits: damonlynch (~ngaio@68.235.43.94) (Ping timeout: 250 seconds)
[16:38:45] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 268 seconds)
[16:39:33] *** Joins: nyah (~nyah@94.6.71.219)
[16:39:41] *** Quits: aoei\Chickatrice (aoei@nethackscoreboard/aoei) (Quit: WeeChat 3.3)
[16:39:49] *** Joins: aoei (aoei@nethackscoreboard/aoei)
[16:39:49] *** aoei is now known as aoei\Chickatrice
[16:40:46] *** Joins: tmm88 (~tmm88@user/tmm88)
[16:41:22] <tmm88> https://pastebin.com/yK69Ue3w
[16:41:22] <tmm88> can someone provide me feedback on this?
[16:41:22] <tmm88> thanks
[16:41:26] *** Quits: aoei\Chickatrice (aoei@nethackscoreboard/aoei) (Client Quit)
[16:41:34] *** Joins: aoei (aoei@nethackscoreboard/aoei)
[16:41:38] *** aoei is now known as aoei\Chickatrice
[16:43:20] *** Joins: bindu (~bindu@user/bindu)
[16:43:25] <rindolf> tmm88: perhaps use json/toml/etc. for the filenames' list
[16:43:31] *** Joins: computeiro (~Wender@189.15.137.242)
[16:43:34] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:44:28] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[16:44:49] *** Joins: shad (~shad@user/shad)
[16:44:54] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[16:44:54] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[16:45:15] <bjs> tmm88: that list is screaming to be turned into a for loop :)
[16:45:19] <bjs> also why does each appear twice?
[16:45:24] *** Joins: plastico (~plastico@neomutt/plastico)
[16:45:30] <rindolf> tmm88: line 878 should be a loop
[16:46:07] <rindolf> tmm88: lines 869-878 shud use a list
[16:46:17] *** Quits: nerus (~nerus@181.174.164.224) (Ping timeout: 256 seconds)
[16:46:18] <bjs> and lines869-877 could be a list and loop
[16:48:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:49:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[16:49:39] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:51:09] *** Quits: luva (~luva@45.141.152.37) (Ping timeout: 250 seconds)
[16:51:12] *** Quits: _xor (~xor@72.49.199.147) (Quit: brb)
[16:52:12] *** Joins: luva (~luva@37.120.197.46)
[16:52:45] *** Joins: han-solo (~hanish@user/han-solo)
[16:53:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[16:54:02] *** Quits: Linux77 (~7Linux7@186.233.178.42) (Ping timeout: 240 seconds)
[16:55:08] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:55:22] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:55:32] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[16:56:21] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 245 seconds)
[16:56:21] *** Quits: drew (~drew@user/drew) (Ping timeout: 250 seconds)
[16:56:34] *** Quits: damonlynch_ (~ngaio@68.235.43.174) (Ping timeout: 260 seconds)
[16:57:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[16:57:02] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[16:57:04] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:57:37] *** Quits: luva (~luva@37.120.197.46) (Quit: Ping timeout (120 seconds))
[16:58:05] *** Joins: luva (~luva@37.120.197.46)
[16:58:16] *** Joins: superboot (~agentgasm@user/superboot)
[16:58:47] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:59:45] *** Joins: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi)
[17:00:43] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:01:43] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[17:04:10] *** Joins: swensson (~swensson@213.88.131.10)
[17:05:44] *** Joins: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr)
[17:06:06] *** Joins: AsenMx (~AsenMx@user/asenmx)
[17:06:35] <CrtxReavr> It's amusing how simplistic and utilitarian the one script I copy to the most machines, buy a huge margin, is.
[17:07:11] *** Quits: gitly (~gitly@85.255.235.75) (Ping timeout: 250 seconds)
[17:07:15] <VaniaPy> Hello,i'm building  a multiple choice questionnaire in django. I'm a bit confused,should the back-end give the input or the front-end? To me it seems more legitimate the front end to make this
[17:07:53] *** Quits: luva (~luva@37.120.197.46) (Ping timeout: 264 seconds)
[17:08:22] *** Joins: luva (~luva@45.141.152.44)
[17:09:09] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com)
[17:09:23] *** Joins: gitly (~gitly@148.252.132.242)
[17:12:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:12:34] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[17:14:55] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:15:11] *** Joins: Auron (Auron956@user/auron)
[17:15:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:16:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[17:17:27] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:18:28] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[17:20:33] *** Joins: NeoCore (~neocore@37.120.204.164)
[17:22:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:22:11] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:49e4:96ed:79df:eb49) (Quit: Leaving)
[17:22:14] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:23:13] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 250 seconds)
[17:24:30] *** Joins: djapo (~archangel@user/djapo)
[17:25:04] *** Joins: ac_slater (~ac_slater@c-71-231-45-179.hsd1.wa.comcast.net)
[17:25:41] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[17:26:17] *** Joins: _xor (~xor@72.49.199.147)
[17:29:01] *** Joins: zeden (~zeden@user/zeden)
[17:29:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:30:32] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:57] *** Joins: Elzington (~Elzington@static-68-235-44-53.cust.tzulo.com)
[17:31:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:31:17] *** Joins: drew (~drew@user/drew)
[17:33:22] *** Quits: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi) (Read error: Connection reset by peer)
[17:34:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[17:35:06] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[17:36:30] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[17:37:04] *** Quits: ubert (~Thunderbi@ip5b405828.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:38:30] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[17:38:32] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[17:38:34] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[17:39:03] *** Joins: zommKa (~ccctttmat@2001:470:69fc:105::b947)
[17:39:09] *** Quits: Elzington (~Elzington@static-68-235-44-53.cust.tzulo.com) (Remote host closed the connection)
[17:39:18] *** Joins: palasso_ (~palasso@user/palasso)
[17:39:28] *** Joins: Elzington (~Elzington@static-68-235-44-53.cust.tzulo.com)
[17:39:32] *** Quits: rando25892 (~user@user/rando25892) (Read error: Connection reset by peer)
[17:39:58] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233)
[17:40:10] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[17:40:13] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[17:40:41] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 256 seconds)
[17:40:57] <han-solo> VaniaPy: input as in question and choices ?
[17:41:25] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[17:41:33] *** Joins: thiras (~thiras@user/thiras)
[17:41:38] *** Joins: iflema (~ian@user/iflema)
[17:41:40] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:41:40] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Client closed)
[17:42:11] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 245 seconds)
[17:42:16] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 268 seconds)
[17:42:26] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[17:42:42] *** Joins: pigweed (~pigweed@97.119.229.243)
[17:43:03] *** Quits: ATAD (~ATAD@user/atad) (Read error: Connection reset by peer)
[17:43:10] *** Joins: steam (~steam@user/steam)
[17:43:13] *** Joins: drew` (~drew@user/drew)
[17:43:53] *** Quits: drew (~drew@user/drew) (Ping timeout: 264 seconds)
[17:44:01] <VaniaPy> han-solo input as question
[17:44:07] *** Joins: ATAD (~ATAD@user/atad)
[17:44:26] *** drew` is now known as drew
[17:44:41] *** Joins: legola (~legola@46.235.101.181)
[17:44:59] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[17:45:15] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[17:45:20] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:46:17] <han-solo> wouldn't it be easier to let the backend provide them. Get the question and choices, render them ans give it to the client ?
[17:46:21] *** Joins: johnjay (~pi@192.142.100.50)
[17:46:42] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[17:47:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:47:21] <VaniaPy> hmm ok!
[17:47:30] <johnjay> with python is there a cool trick to send text from one pc to another on my LAN?
[17:47:48] <johnjay> i have python3.x on all my home computers so it would be a convenient way to share files or text
[17:47:58] <bjs> johnjay: no "cool trick",  just standard networking tools
[17:48:07] <rindolf> johnjay: networking
[17:48:19] <johnjay> ok. i thought about using nc but windows doesn't have it
[17:48:25] <johnjay> can i do something like that in python?
[17:48:34] <rindolf> johnjay: yes
[17:48:50] <grym> johnjay: https://docs.python.org/3/library/http.server.html  with the caveat that this is *really* not meant for prod
[17:48:59] <rindolf> johnjay: see tcp, http, etc
[17:49:00] <han-solo> VaniaPy: i suppose you could do it from the client too, but maybe the data will be static, or what are you going for ?
[17:49:01] *** Joins: argoneus (~argoneus@argoneus.com)
[17:49:03] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[17:49:05] *** Joins: drew` (~drew@user/drew)
[17:49:14] <johnjay> aha you got me grym
[17:49:21] <johnjay> i was also going to ask if emacs had a mode for it
[17:49:27] <johnjay> since i also have emacs on all my machines
[17:49:34] <grym> well, tramp of course :)
[17:49:35] <VaniaPy> han-solo both answers and questions are hard-coded
[17:49:39] *** Quits: drew (~drew@user/drew) (Ping timeout: 250 seconds)
[17:49:43] <grym> or restclient
[17:50:00] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[17:50:23] *** drew` is now known as drew
[17:50:42] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[17:50:55] <han-solo> VaniaPy: oh, Okay.
[17:51:17] *** Joins: darklands (~darklands@69.43.66.31)
[17:51:17] <han-solo> Then i don't see much reason
[17:51:45] *** Quits: darklands (~darklands@69.43.66.31) (Remote host closed the connection)
[17:51:47] <johnjay> grym: tramp is editing files right? so if i change a file on machine A, will it immediately refresh or warn for refresh in machine B?
[17:52:06] <johnjay> i think python and emacs are both using the "standard networking tools" in this situation
[17:53:42] <grym> i think so
[17:53:49] <grym> johnjay: tramp is ssh-in-emacs, more or less
[17:53:53] *** Joins: arinov (~arinov@213.194.126.155)
[17:53:59] <grym> so just pretend like you're doing ssh, because you are
[17:54:14] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.3)
[17:54:23] <Swayze> ./topic "just pretend like you're doing ssh, because you are"
[17:54:30] <Swayze> mind blown fr
[17:54:49] <Swayze> *exploding head gif*
[17:57:54] *** Parts: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (ERC 5.4.1 (IRC client for GNU Emacs 27.2))
[17:58:15] <johnjay> everything is ssh when you get down to it
[17:58:22] <johnjay> i'm typing to you over ssh right now
[17:58:33] *** Joins: keyehzh_ (~keyehzh@user/keyehzh)
[17:58:48] *** Quits: keyehzh_ (~keyehzh@user/keyehzh) (Remote host closed the connection)
[17:59:57] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[18:00:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 240 seconds)
[18:01:09] <grym> i sure am
[18:01:12] * grym hugs most
[18:01:13] * grym hugs mosh
[18:05:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:11:43] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[18:12:37] *** Joins: Mach (~Mach@86.121.208.210)
[18:16:32] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[18:17:14] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:17:44] *** Joins: Inline (~Inline@2a02:908:1252:7a80:ed70:ee41:8efa:21d0)
[18:19:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[18:19:25] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[18:20:05] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:22:20] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:22:40] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:24:37] *** Quits: daoudr__ (~daoudr@2a02:1205:c690:ca10:cc28:1113:28f4:cbb8) (Quit: Leaving)
[18:24:48] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[18:25:08] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[18:25:49] <xheimlich> So let's say I have a whole bunch of classes that have a "network" attribute that contains a networkx graph.
[18:25:49] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8401-b6bf-59da-e16a.res6.spectrum.com)
[18:26:09] *** Joins: spuz (~spuz@95.150.9.41)
[18:26:19] *** Joins: carl-- (~carl-@185.103.188.130)
[18:26:28] <xheimlich> Is it possible to create one class with graph drawing stuff, always expecting self.network and inherit from it?
[18:26:30] *** herme5 is now known as el_kevino
[18:26:51] <Kim^J> Yes?
[18:27:06] <grym> xheimlich: you could write a function that accepts a list of things, and assume that the elements of that list have a .network attribute
[18:27:32] <xheimlich> I usually just write functions like this outside classes and just expecting the thing (my_obj.network), not even my_obj itself.
[18:28:22] <xheimlich> but now I have something like a NetworkPartition class that has a list of Network classes (which has a fair amount of extra stuff compared to networkx classes)
[18:28:22] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[18:28:32] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 246 seconds)
[18:28:43] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:29:28] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[18:29:31] *** Quits: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:29:40] <xheimlich> anyway, I'm overthinking this.
[18:29:41] *** Joins: shad (~shad@user/shad)
[18:29:42] *** Joins: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de)
[18:29:59] *** Joins: Amnesia (~Amnesia@user/amnesia)
[18:30:00] <xheimlich> sorry for the interruption.
[18:30:07] <Amnesia> question, are there any freelancers here?
[18:30:10] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[18:30:22] <xheimlich> depends on what is being lanced.
[18:30:36] <Amnesia> backend / web development / IT consultancy
[18:30:53] <han-solo> https://www.python.org/community/jobs/howto/
[18:31:38] <Amnesia> han-solo: there's a shitton of middlemen..
[18:31:44] <Amnesia> have you had good results with ^?
[18:31:54] <xheimlich> I have some experience writing Python back-end APIs for "data science"/math stuff. But I'm generally quite isolated from the meat of web applications.
[18:32:25] <lericson> good for you xheimlich, stay away
[18:32:37] <Amnesia> ^ xD
[18:32:54] <xheimlich> Means I'm good with Docker though. If you tell me more about what exactly you´re doing, well, you might spend some time and get some free advice, but maybe I can help too.
[18:33:41] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Ping timeout: 264 seconds)
[18:33:44] <xheimlich> Docker kind of means that if you're in an actual microservices setting, no one needs to know what the hell you're doing.
[18:34:19] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Quit: Leaving)
[18:34:39] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[18:34:45] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-906d-cc0e-1f4e-892a.res6.spectrum.com) (Quit: Client closed)
[18:34:58] <spuz> xheimlich what do you mean?
[18:35:08] <xheimlich> I've been writing some loopy stuff in Rust and linking to Python. Moar performanz. Thing is, no one needs to know. You don't have to sell people on hey let me try prolog for this. But I digress.
[18:35:11] <han-solo> Amnesia: to be honest, i haven't tried, but thought that would be a good place
[18:35:16] <Amnesia> ack :)
[18:35:21] *** Joins: aztec (~Felipe@2804:2238:770:b900:fd61:6791:cd99:c91a)
[18:35:25] *** Joins: akk (~akk@75.161.146.115)
[18:35:32] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[18:35:38] <spuz> xheimlich I see, interesting :)
[18:35:49] <xheimlich> Deploy people are thrilled to receive Dockerfiles. Front-end people switch from react to next.js or whatever and expect devops to know how to build and deploy each little thing.
[18:35:57] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:36:23] <xheimlich> that's my experience anyway.
[18:36:32] *** Quits: ihristov (~ihristov@217.145.94.71) (Ping timeout: 240 seconds)
[18:36:37] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:36:56] <xheimlich> Anyway, I'm a mathematician and a philosopher and always looking for side hustles. Hit me up.
[18:37:43] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[18:38:31] <aztec> Hi, how can i become a coordinator of translations? There are several translations that were poorly translated and i cant fix them because they were given a "reviewed" status.
[18:39:04] *** Joins: nerus (~nerus@195.123.234.184)
[18:39:05] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[18:40:21] *** Quits: gregoryloscombe (~gregorylo@213.86.15.34) (Ping timeout: 250 seconds)
[18:40:46] *** Joins: gregoryloscombe (~gregorylo@ec2-176-34-75-169.eu-west-1.compute.amazonaws.com)
[18:40:53] *** Quits: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de) (Remote host closed the connection)
[18:42:31] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[18:42:32] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[18:42:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[18:42:51] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[18:42:56] *** Joins: falk689_ (~falk689-q@gateway/tor-sasl/falk689)
[18:43:15] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:43:18] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[18:43:32] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[18:45:05] *** Joins: xkuru (~xkuru@user/xkuru)
[18:48:39] *** Joins: pingpongball (~pingpongb@103.94.252.87)
[18:50:58] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:51:08] <pingpongball> How to use socket.io with axios?
[18:51:58] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[18:52:43] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:53:25] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[18:53:45] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[18:54:09] <supakeen> You've been told plenty of times that this is not the venue for your javascript questions pingpongball. Do you have a Python question?
[18:54:26] <pingpongball> :)
[18:54:27] *** falk689_ is now known as falk689
[18:54:31] *** Parts: pingpongball (~pingpongb@103.94.252.87) ()
[18:54:41] *** Joins: dld (~dld@73.61.8.213)
[18:54:52] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[18:55:26] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Client Quit)
[18:55:54] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[18:55:59] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:56:13] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[18:57:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:57:54] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:59:20] *** Joins: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi)
[18:59:35] <deniska> https://docs.python.org/3/library/itertools.html#itertools.pairwise omg, finally
[18:59:47] <supakeen> :)
[18:59:51] *** Joins: asthasr (~asthasr@162.210.28.151)
[19:00:02] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 246 seconds)
[19:00:10] <supakeen> No more `a, b = iter(a), iter(a)` and/or `(x, y for x, y in L, L[1:])`?
[19:00:23] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:00:50] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:00:55] <Wooble> but I was told itertools could never add anything useful if you could make it yourself in an ugly way.
[19:01:05] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:01:17] <deniska> supakeen: these two do different things
[19:01:27] <supakeen> deniska: I was paraphrasing.
[19:01:33] *** Joins: Klinda (~superleag@user/klinda)
[19:01:50] *** Joins: Macuser (~Macuser@216.30.159.201)
[19:02:14] <deniska> and it seems there's still no function for doing the former :)
[19:02:23] <supakeen> Yet!
[19:03:20] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[19:04:12] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 250 seconds)
[19:06:05] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 264 seconds)
[19:08:49] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[19:09:05] *** Quits: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi) (Ping timeout: 264 seconds)
[19:09:39] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:11:34] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[19:12:50] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (Ping timeout: 260 seconds)
[19:12:59] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.1)
[19:13:00] *** Joins: stdout (~stdout@216.163.21.11)
[19:13:30] *** Joins: teut (~teut@223.182.71.245)
[19:13:47] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[19:13:53] <teut> https://dpaste.org/HN3C  hi , can somebody give tips on how to refactor this chunk of code?
[19:15:00] *** Quits: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Quit: harpia)
[19:15:05] *** Joins: llh (~llh@user/llh)
[19:15:34] <teut> https://bpa.st/VFKA
[19:16:05] *** Joins: hexa- (~hexa-@juno.lossy.network)
[19:16:08] *** Quits: gitly (~gitly@148.252.132.242) (Ping timeout: 246 seconds)
[19:17:27] <Wooble> teut: "== True" is redundant
[19:17:48] <teut> everything is reduntant here
[19:17:51] <teut> d*
[19:17:56] *** Joins: soman (~soman@83.139.147.234)
[19:18:11] *** Joins: orange (~orangeext@user/orangeextract)
[19:18:37] <teut> total junk the previous employee wrote
[19:18:52] *** Joins: gitly (~gitly@185.69.145.131)
[19:19:06] <nicode> Says snippet not found...
[19:19:13] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:19:15] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-7564-321e-ff0d-0ba0.res6.spectrum.com)
[19:19:18] <teut> even on bpaste?
[19:19:40] <nicode> oh, I see that one.
[19:19:47] <teut> ok
[19:19:50] <grym> dpaste has this big fat "delete paste" button
[19:20:21] <teut> dpaste has more language options, therefore I use it
[19:20:36] <nicode> if it were me, I'd write tests first to basically define the spec of what it's doing. then start refactoring and make sure tests keep passing.
[19:20:49] <teut> ya I m doing the same
[19:21:15] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[19:21:16] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:21:39] <nicode> holy crap that looks like a fun re-factor project.
[19:22:11] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[19:22:14] <teut> ya, this code is written by some previous intern at this startup
[19:22:43] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:22:56] <teut> is it really good to modify the iterator in a for loop?
[19:23:07] <grym> teut: no
[19:23:08] <Wooble> got to love a function called checkSomething() that mutates one of its arguments. :(
[19:23:14] <jbe> wcgw
[19:23:25] <teut> ya its done there
[19:23:44] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:24:15] <Wooble> and that thing being named "temp" when it's the only non-temporary thing involved is umm something.
[19:24:19] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:24:32] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[19:24:52] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[19:26:22] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:26:34] <nicode> first thing I'd do is get rid of the magic numbers.
[19:26:42] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:27:21] <teut> magic numbers in which line?
[19:27:35] <teut> and idk that will help
[19:27:43] *** Joins: shad (~shad@user/shad)
[19:27:49] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:28:06] <teut> first thing is to resolve lines 112 beyond in my view
[19:29:01] <nicode> what does your sample data look like?
[19:29:03] <teut> but too many variables are being passed
[19:29:16] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[19:29:56] <nicode> I guess we all take different angles, my typical first step is to start to name things appropriately so I can make sense of things. Magic numbers is just low hanging fruit to get started.
[19:30:20] <amogorkon> Enum \o/
[19:30:23] <teut> https://bpa.st/VL6Q
[19:30:29] <nicode> e.g. if age == 1 means NOTHING to me.
[19:30:32] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[19:30:41] <teut> too many parameters are being passed heree
[19:31:18] <bjs> teut: what does each object mean?
[19:31:20] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:31:52] <teut> I just ve the json
[19:31:53] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[19:31:57] <bjs> Yes
[19:31:59] <teut> and a jupyter notebook
[19:32:14] <bjs> But what does it all mean though?  The data has lots of nulls in it
[19:32:17] <bjs> is that normal?
[19:32:27] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (Quit: phy1729)
[19:32:36] <teut> I really have no idea, WFH internship
[19:33:03] <teut> thats the problem, I cannot understand what the objects are
[19:33:15] <bjs> well where did they come from
[19:33:20] <grym> teut: debugger and notes.txt time
[19:33:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[19:34:17] *** Quits: gregoryloscombe (~gregorylo@ec2-176-34-75-169.eu-west-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[19:34:19] <teut> this startup generates health reports and the client(hospital) throws a json at it
[19:34:33] <teut> thats much only I know about their business
[19:34:52] <Wooble> is it theranos?
[19:34:56] <teut> lol
[19:35:05] <teut> it might be soon
[19:35:23] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[19:35:56] <teut> totally messed up system here, people are doing stuff manually what can be automated
[19:36:04] *** Joins: darksun (~darksun@user/darksun)
[19:36:07] *** Joins: gregoryloscombe (~gregorylo@213.86.15.34)
[19:37:33] <nicode> Where does old_start_age come from?
[19:37:39] *** Seto_Kaiba is now known as Hunterkll
[19:37:58] <nicode> And OrderedDict()
[19:37:58] *** Parts: aztec (~Felipe@2804:2238:770:b900:fd61:6791:cd99:c91a) (Leaving)
[19:38:11] *** Joins: nomic (~nomic@185.192.69.217)
[19:39:09] <nicode> and convert_test_name... too many un-defined things to me to look at this (oh and I also have my own work :))
[19:39:23] <nicode> I wish you good fun teut!
[19:40:04] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:40:53] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 264 seconds)
[19:41:04] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[19:43:52] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[19:44:00] *** Joins: lidless (sid523173@id-523173.tinside.irccloud.com)
[19:44:05] *** Joins: dohtem (uid524096@user/dohtem)
[19:44:57] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:45:53] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 246 seconds)
[19:46:17] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[19:46:43] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:48:24] *** Joins: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77)
[19:50:21] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:52:31] *** Joins: yaymukund (~yaymukund@user/yaymukund)
[19:52:42] <teut> ya , maybe it will be fun if I complete it, thanks nicode
[19:53:05] <teut> old_age_start,  thats a global
[19:54:44] *** Joins: hel0 (~hel0@user/redrum88)
[19:55:33] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[19:55:54] <shodan45> what's the 1 or 2 line snippet to start an interactive shell for debugging?
[19:56:08] <shodan45> iirc it uses the code module
[19:56:23] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:56:40] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:56:55] *** Parts: yaymukund (~yaymukund@user/yaymukund) ()
[19:57:07] <shodan45> nm, I found it: import code\ncode.interact(local=locals())
[19:57:18] *** Quits: shokohsc8 (~shokohsc@17.245.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[19:58:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[19:58:34] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[19:58:37] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:58:46] <Wooble> shodan45: can also use breakpoint() to get an actual debugger...
[19:59:32] *** Quits: gitly (~gitly@185.69.145.131) (Ping timeout: 240 seconds)
[20:00:43] *** Joins: gitly (~gitly@85.255.235.82)
[20:00:47] <teut> how do programming languages implement a repl?
[20:00:51] *** Joins: shokohsc8 (~shokohsc@17.245.204.77.rev.sfr.net)
[20:00:55] *** Joins: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de)
[20:01:15] <teut> thats not a command prompt , that I know now
[20:01:19] *** Joins: ravan (~ravan@user/ravan)
[20:01:48] *** Quits: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de) (Remote host closed the connection)
[20:02:19] *** Quits: grooverman_ (~grooverma@179.99.123.165) (Quit: bye)
[20:02:48] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:02:54] <bjs> teut: `while True: program_text = input("> "); print(eval(program_text))`
[20:02:55] <grym> teut: https://gist.github.com/lazywithclass/6af94f652cd59796e9592a5ea5772d17 :)
[20:03:08] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[20:03:18] *** Joins: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de)
[20:03:22] *** Joins: grooverman (~grooverma@177.102.119.40)
[20:03:23] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:03:55] <teut> nah it cant be that simple bjs
[20:03:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:03:59] <bjs> teut: why not?
[20:04:10] <Wooble> except in python's case it's more of a read-exec-print(repr()) loop
[20:04:17] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 264 seconds)
[20:04:23] <teut> yes , loops and multiline statements
[20:04:38] *** Joins: darksun (~darksun@user/darksun)
[20:04:55] <bjs> teut: well loops and multiline statements are not really about the "REPL" part but about reading-from-input, that's just fairly standard reading from stdin
[20:05:32] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[20:05:49] <bjs> teut: building a REPL at its core is very simple,  obviously you can make a REPL as complicated a program as you want with as many features as you want and those features can get as complicated as you want
[20:06:03] <han-solo> `import inspect,code; print(inspect.getsource(code))`
[20:06:23] <bjs> ("Sign in with Google to see previous REPLs and re-run them"  and stuff like that obviously get much more complicated, but the core "loop, run and print" is simple)
[20:06:25] <teut> ya, thanks I will try to make one
[20:06:40] <teut> for js probably in python
[20:07:10] <CrtxReavr> Is it wierd that I always do each import on its own line?
[20:07:22] <douglaswinship> bjs: but as you originally wrote it, your "reading from stdin" just takes a single line of input, no matter what that input is. An actual Python REPL has to sometimes take multiple lines of input before processing, and sometimes process after just a single line of input. And it has to decide that based on the content of the input. That's the part that's more complicated.
[20:07:35] <Wooble> CrtxReavr: most style guides suggest that, so no?
[20:07:48] <douglaswinship> CrtxReavr: I'm not sure I even realized you could put them on the same line.
[20:08:16] <bjs> douglaswinship: that's not that much more complicated,  you just replace input() with my_fancier_input() call
[20:08:24] <grym> CrtxReavr: if you `from foo import bar\nfrom foo import baz`, it's just as fine to `from foo import bar, baz
[20:08:29] <han-solo> CrtxReavr: i put imports from different module on their own line
[20:08:33] <grym> (and isort will optionally do that for you)
[20:08:38] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[20:08:42] <CrtxReavr> I knew you could do it comma-separated, and see it in quite a bit of code, but I always do them one per line, and try to orderthem by first use in the code.
[20:08:56] <douglaswinship> bjs: indeed. And we didn't say it had to be *much* more complicated. Just that it was more complicated. :D
[20:08:58] <grym> these days though i `black . &&  isort --profile black . ` and call it a day
[20:09:26] <CrtxReavr> I quite like black.
[20:09:36] <CrtxReavr> (With a few run-time tweaks.)
[20:09:41] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 264 seconds)
[20:09:47] <grym> isort plays well with it, and in much the same spirit
[20:09:56] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[20:09:58] <grym> "we've made some decisions; now you can stop caring"
[20:10:02] *** Joins: djapo (~archangel@user/djapo)
[20:10:02] <douglaswinship> I like Black too. It's very liberating being freed from having to make my own decisions.
[20:10:03] *** Quits: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[20:10:06] <douglaswinship> (And i'm not even kidding)
[20:10:15] <grym> douglaswinship: disregarding window dressing is very nice
[20:10:26] <CrtxReavr> alias black='black -l 79 -S'
[20:10:34] <bjs> I think that's a common thing I see here, people like black for that reason
[20:10:37] <douglaswinship> My brain is already full to the brim working out the logic. I don't need to be agonizing over formatting as well.
[20:11:26] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 246 seconds)
[20:11:34] <grym> bjs: it's The Selling Point, for me; evidence of which is that there are plenty of quibbles about black's choices but they're low-magnitude and everyone's got a different set, which is a good sign that black's style really is pretty much in the middle of the raod
[20:11:38] <grym> road, even
[20:12:39] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 250 seconds)
[20:12:53] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[20:13:44] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[20:13:49] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[20:13:57] *** Joins: jay-m1262 (~jay-m@154.72.160.199)
[20:14:28] *** Joins: rsx (~dummy@ppp-188-174-146-235.dynamic.mnet-online.de)
[20:14:49] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[20:14:57] *** Joins: darklands (~darklands@69.43.65.116)
[20:15:13] <douglaswinship> grym: I think I read that a major design decision was to keep diffs as simple as possible when someone changes the code. I'm a big fan of that idea too.
[20:15:18] *** Joins: cheater (~Username@user/cheater)
[20:15:32] <grym> douglaswinship: i feel like that's more aspirational than real, but it's a good thing to aspire to
[20:15:42] *** Joins: darksun (~darksun@user/darksun)
[20:16:00] <grym> i've been going that way lately with a codebase that isn't blackened, but my commits are: https://pypi.org/project/darker/
[20:16:02] <CrtxReavr> I like to observe 79 columns, plus I wasn't a fan of the way black enforced double quotes for strings as Lukasz desired, but the -S option corrects that.
[20:16:03] *** Joins: lastshell (~lastshell@user/lastshell)
[20:16:18] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[20:17:11] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[20:18:23] *** Quits: Armanzor (~Armanzor@user/armanzor) (Quit: Leaving)
[20:19:45] <phy1729> When using fastapi are there best practices around making the pydantic models and or the sqlalchemy models thick or keeping them thin and using a new class for logic?
[20:20:05] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[20:21:00] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[20:21:33] <grym> phy1729: i like endpoints that look like def foo(req:MyRequestObject): return do_work_with_foo(foo)
[20:21:39] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[20:21:45] *** Quits: darklands (~darklands@69.43.65.116) (Ping timeout: 250 seconds)
[20:21:49] <grym> phy1729: so that makes my models more than a plain dataclass, but not much more because i still like dataclass-and-functions
[20:22:02] *** Joins: CoolerX (~CoolerX@user/coolerx)
[20:22:33] *** Joins: alzgh (alzgh@user/alzgh)
[20:22:49] *** Quits: shokohsc8 (~shokohsc@17.245.204.77.rev.sfr.net) (Quit: Ping timeout (120 seconds))
[20:23:35] *** Quits: alzgh (alzgh@user/alzgh) (Remote host closed the connection)
[20:23:41] *** Joins: Akuli (~Akuli@213.216.211.233)
[20:24:12] *** Joins: servytor (uid525486@id-525486.hampstead.irccloud.com)
[20:24:22] <phy1729> I suppose the trouble in this case is I get to deal with pluggable modules and there's some shared logic that feels natural to put into a class
[20:24:34] *** Joins: shokohsc8 (~shokohsc@17.245.204.77.rev.sfr.net)
[20:24:57] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:25:05] *** Quits: jay-m1262 (~jay-m@154.72.160.199) (Ping timeout: 246 seconds)
[20:25:20] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:25:30] *** Joins: Linux77 (~Linux7_7@186.233.178.42)
[20:25:38] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 260 seconds)
[20:26:05] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:26:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:26:10] *** Joins: ner (~nerus@217.138.197.86)
[20:27:07] *** Joins: jay-m1262 (~jay-m@129.0.77.216)
[20:29:29] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[20:29:59] *** Quits: nerus (~nerus@195.123.234.184) (Ping timeout: 246 seconds)
[20:30:05] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ed70:ee41:8efa:21d0) (Ping timeout: 264 seconds)
[20:30:15] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[20:30:18] *** Joins: alzgh (~alzgh@user/alzgh)
[20:30:23] *** Joins: nerus (~nerus@195.123.234.184)
[20:30:32] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:30:56] *** Joins: emf (~emf@2620:10d:c090:400::5:b872)
[20:31:30] *** Quits: rsx (~dummy@ppp-188-174-146-235.dynamic.mnet-online.de) (Quit: rsx)
[20:32:32] *** Quits: shokohsc8 (~shokohsc@17.245.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[20:33:02] <tk> does anyone have any known advantage to writing: numpy.where(foo=bar, 'TRUE', 'FALSE') instead of 'TRUE' if foo=bar else 'FALSE' in a python3 codebase?
[20:33:29] *** Quits: ner (~nerus@217.138.197.86) (Ping timeout: 246 seconds)
[20:33:42] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:34:05] <tk> make that foo==bar not foo=bar
[20:35:02] *** Quits: vladoski (~vladoski@93-36-216-2.ip62.fastwebnet.it) (Remote host closed the connection)
[20:35:24] *** Quits: nerus (~nerus@195.123.234.184) (Quit: Leaving)
[20:35:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[20:35:37] <tdsmith> are foo and bar vectors or scalars
[20:35:54] <grym> if foo is a ndarray, np.where will be faster
[20:35:57] <grym> in general
[20:35:59] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[20:36:04] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:36:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[20:37:06] *** Quits: orange (~orangeext@user/orangeextract) (Quit: Leaving)
[20:37:53] *** Joins: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net)
[20:38:06] <elwoodpd> anyone knowledgeable about selenium here?
[20:38:30] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:38:44] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:39:07] *** dcaro is now known as dcaro_away
[20:39:15] *** Quits: computeiro (~Wender@189.15.137.242) (Quit: Leaving)
[20:39:24] <teut> yes, what in selenium?
[20:39:25] <elwoodpd> I am wondering about difference in result using it locally with firefox and on a vps with ice weasel
[20:39:31] *** Joins: BlueSky (~BlueSky@user/bluesky)
[20:39:31] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 250 seconds)
[20:39:35] <teut> no , I dont
[20:39:51] <elwoodpd> seems like more scrapes are failing remotely
[20:40:04] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[20:40:10] <elwoodpd> I have upped the wait time on the condition I set from 10s to 20s
[20:40:23] <elwoodpd> which has helped a bit, but not entirely
[20:40:29] <elwoodpd> is it worth trying chrome?
[20:41:04] <teut> i don't think so
[20:41:29] <elwoodpd> Do you have any ideas what could be causing it to fail more?
[20:41:33] <elwoodpd> or where I could look?
[20:41:56] <teut> internet speed I think
[20:42:08] <tk> foo is a string and bar is a string
[20:42:10] <tk> also it's a comparison
[20:42:15] <tk> numpy.where is getting a bool
[20:42:26] <elwoodpd> hmm
[20:42:35] *** Joins: anonymeowo (~anonymeow@5.34.180.230)
[20:42:44] <tk> tdsmith: grym: ^
[20:43:11] <tdsmith> that doesn't seem useful, then, no
[20:43:18] <elwoodpd> it is a pretty lightweight page (but admittedly sometimes slow to load)
[20:43:20] *** kenoba is now known as mango
[20:43:46] <teut> there can be other reasons like events on a particular element
[20:43:49] <elwoodpd> and we are talking like 3 scrapes per min
[20:43:56] <elwoodpd> so not heavy
[20:44:01] <grym> tk: i'm kind of leery of ndarrays whose dtype is object without further justification
[20:44:40] <teut> like the gmail 's input on load fires events, which changes it , on hover it overlapps a div
[20:45:01] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[20:45:19] *** mango is now known as remolej
[20:45:40] <teut> I wasted quite few days on logging to gmail, I tried EC and whatever waits and at the end time.sleep(10) only gave decent probabiility of it working
[20:46:11] *** Joins: tkazi (~tkazi@user/tkazi)
[20:46:48] <elwoodpd> annoying
[20:47:05] <elwoodpd> page I am scraping shouldn't even need javascript it is a right pain
[20:47:25] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[20:47:28] <teut> what are you trying to scrape?
[20:47:47] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[20:47:47] <teut> are you sure if an easier/better solution isnt available?
[20:48:44] *** Joins: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net)
[20:48:48] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[20:48:49] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 256 seconds)
[20:49:37] <akk> elwoodpd: I found selenium really unreliable for unattended scraping scripts, and recently found out that I could scrape the pages I was after by making a CookieJar copying the cookies from firefox.
[20:50:12] *** Joins: tobybl (~tobybl@213.31.135.91)
[20:50:38] <teut> or you can try scrapy with splash, I have heard its fast but I found it not so user friendly like selenium
[20:50:39] <akk> elwoodpd: With selenium, I had a lot of elaborate code trying three different ways to set timeouts (none of which worked reliably), and once it hit a timeout usually no further pages from that site would work, I'm not sure how to reset selenium so it can continue after a problem.
[20:50:57] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:51:08] <teut> there may be specific places only where selenium would be actually required
[20:51:19] *** Joins: n4000 (~orangeext@user/orangeextract)
[20:51:28] <teut> I use a mixed of selenium and requests
[20:51:30] <akk> If the JS on the page isn't important, I usually just use request + BeautifulSoup for scraping.
[20:51:38] <akk> requests
[20:51:49] <teut> but you need to login too often akk
[20:52:04] <akk> teut: If a login is required, that's where I use a CookieJar.
[20:52:12] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[20:52:56] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[20:52:59] *** Joins: magla (~gelignite@55d4ec6e.access.ecotel.net)
[20:53:07] <teut> CookieJar, is that different from logging in through browser manually and copying the cookies and using them in reqiests?
[20:53:20] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:53:20] <xsx> is the stack trace different when the exception is caught? traceback from `except` block shows only last trace but it doesn't start from the start
[20:53:54] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[20:53:57] <han-solo> how did you get the trace ?
[20:54:01] <akk> teut: No, that's what I'm doing, using an http.cookiejar.CookieJar
[20:54:06] <elwoodpd> akk, unfortunately I am pretty sure the page I am scraping requires more than that. It loads data through websockets
[20:54:17] <teut> ya , you can automate it
[20:54:56] <teut> in selenium once you login you can get the cookies  dict and populate requests cookies from there
[20:55:20] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[20:55:53] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 246 seconds)
[20:56:01] <xsx> han-solo: when i use traceback.print_stack() it prints everything, but sys.exc_info() gives different information depending if this happens in the except block or not
[20:56:25] <tk> so upon further information the types involved are: numpy.where(pandas.DataFrame == str, str, str)
[20:56:26] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[20:56:30] <tk> does this change anything?
[20:56:37] <tk> does pandas.DataFrame overload == somehow?
[20:56:50] *** Joins: Abrax- (~Abrax@user/abrax)
[20:56:51] <tk> or would it still just boil down to a numpy.where(bool, str, str) ?
[20:56:53] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[20:57:03] <akk> With selenium I just used the whole firefox profile, including the cookies.
[20:57:09] <elwoodpd> you can get cookies with just requests.py can't you...
[20:57:36] <han-solo> xsx: do you have an example i could try ?
[20:57:55] *** Joins: tkazi (~tkazi@user/tkazi)
[20:57:59] *** Quits: anonymeowo (~anonymeow@5.34.180.230) (Ping timeout: 246 seconds)
[20:58:00] *** Abrax- is now known as Abrax
[20:58:20] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[20:58:39] *** Quits: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Quit: Leaving)
[20:58:52] <xsx> han-solo: not really, but i can try to create it
[20:59:04] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[20:59:05] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[20:59:09] <teut> nope elwoodpd
[20:59:13] <akk> elwoodpd: As far as I could tell, there's no built-in solution for reading firefox cookies -- the MozillaCookieJar reads a format that was obsolete a decade ago, so you have to read the sqlite and then write it into a cookies.txt format so MozillaCookieJar can read it.
[20:59:14] <teut> how would you?
[20:59:17] *** Joins: Skyfire (~pyon@user/pyon)
[20:59:40] <xsx> han-solo: from the sys.exc_info: https://docs.python.org/3/library/sys.html#sys.exc_info - If the current stack frame is not handling an exception, the information is taken from the calling stack frame, or its caller, and so on until a stack frame is found that is handling an exception. Here, “handling an exception” is defined as “executing an except clause.” For any stack frame, only information
[20:59:46] <xsx> about the exception being currently handled is accessible.
[21:00:10] <xsx> han-solo: seems to be related?
[21:00:11] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[21:01:48] <njt> -parted /close
[21:01:56] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:02:16] <njt> -parted /close
[21:02:22] *** Quits: inomoz (~inomoz@176.59.125.26) (Quit: WeeChat 3.3)
[21:03:34] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:06:24] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:07:24] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:08:40] *** Joins: fikran (~fikran@user/fikran)
[21:09:37] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:09:57] <han-solo> xsx: shrug, i was trying to understand the problem by using the example ':)
[21:09:59] *** Joins: pycurious (~Adium@user/pycurious)
[21:10:10] *** Joins: arinov (~arinov@176.89.7.184)
[21:11:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:12:24] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:12:48] *** Quits: gregoryloscombe (~gregorylo@213.86.15.34) (Quit: WeeChat 3.2)
[21:13:04] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[21:13:16] <hexnewbie> xsx: Well, sys.exc_info() gives the *current* exception (obviously, the closest to where it is called) *if* one is present, and traceback.print_stack() prints the stack to the current line of code, so two very different things.
[21:14:48] *** Joins: alkino (~quassel@user/alkino)
[21:16:25] *** Joins: sazawal (~sazawal@2401:4900:51e0:9ed4:9fe3:b7a4:ced2:61ac)
[21:17:11] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[21:17:53] *** Quits: sazawal (~sazawal@2401:4900:51e0:9ed4:9fe3:b7a4:ced2:61ac) (Client Quit)
[21:18:02] *** Quits: n4000 (~orangeext@user/orangeextract) (Quit: Leaving)
[21:18:48] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[21:19:02] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[21:21:15] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[21:22:15] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[21:22:26] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[21:23:40] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:23:45] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:24:05] *** Joins: VSpike (~johncc@2001:bc8:47ac:1a22::1)
[21:27:10] *** Quits: Jefren1 (~Jefren@70.35.66.134) (Ping timeout: 260 seconds)
[21:29:12] *** Joins: Jefren1 (~Jefren@70.35.67.14)
[21:30:34] <jinsun> tk: DataFrame == str will give a DataFrame not bool, and you cannot change np.where to an if else expression in that case
[21:31:04] *** Joins: drizztbsd (~timothy@redhat/timothy)
[21:31:30] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:8874:ee5d:a4d:8468) (Quit: Textual IRC Client: www.textualapp.com)
[21:31:34] *** Joins: Nselm (~Nselm@p200300d56f367636b296f109a2363b7e.dip0.t-ipconnect.de)
[21:31:54] *** Quits: timothy (~timothy@redhat/timothy) (Ping timeout: 260 seconds)
[21:32:18] *** Quits: TML (~tml@user/tml) (Ping timeout: 260 seconds)
[21:33:49] <CrtxReavr> o_O
[21:34:10] <CrtxReavr> == is a test operator - how can it return a Dataframe?
[21:34:17] <grym> pandas tells it to
[21:34:27] <jinsun> you can overload `__eq__`
[21:35:00] <CrtxReavr> That sounds like a horrible practice.
[21:35:06] <grym> ok
[21:35:18] <BrenBarn> why?
[21:35:26] *** Quits: drizztbsd (~timothy@redhat/timothy) (Ping timeout: 246 seconds)
[21:35:45] <jinsun> and pandas and numpy both overload everything so that it is elementwise operation instead of the normal boolean returning thing
[21:35:47] <CrtxReavr> It's a foundational language component. . .
[21:35:57] <CrtxReavr> Why overwrite it?
[21:36:08] <BrenBarn> it's just an operator
[21:36:22] *** Joins: ttkpy (501@46-97-229-216.sr2.pon.net)
[21:36:46] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[21:36:54] * CrtxReavr shrugs.
[21:37:29] <CrtxReavr> I guess that's just indicative that I'm a systems and network admin that automates some stuff, vs. a programmer.
[21:38:08] <grym> if you're not in an ecosystem regularly its norms might look weird
[21:38:18] <grym> sometimes that's true and sometimes it's not
[21:38:47] *** Joins: Payam (~Payam@138.106.57.131)
[21:39:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[21:39:53] *** Joins: Enitin (~Enitin@82.102.22.84)
[21:40:17] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Ping timeout: 264 seconds)
[21:40:21] <Payam> Hi guys. I always get confused by nested loops. is this oneliner correct? https://bpa.st/JZ3A
[21:41:14] <Wooble> Payam: write them in the same order as you do without the comprehension
[21:41:36] <Payam> No I wana know how the comprehension would look like.
[21:41:45] <Payam> That is what I want to know :)
[21:41:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:42:01] <Wooble> Payam: hard to say since you're reusing `c`...
[21:42:02] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[21:42:23] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:42:27] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:42:34] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Ping timeout: 260 seconds)
[21:42:47] <Wooble> Payam: but [c for b in c for c in a] is the equivalent to your first thing.
[21:43:12] <Payam> https://bpa.st/J7QA
[21:43:12] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[21:43:21] <Payam> sorry I didnät realize it
[21:43:50] <Samian> Payam the for loops may run, but I've never seen anyone code a loop like that. It looks like you have some of your for loop variables backwards
[21:44:06] <Wooble> Payam: [d for b in c for d in b]; write the for parts in the same order
[21:45:00] <Payam> so d fin b comes last
[21:45:12] <Payam> in*
[21:45:31] <Wooble> yeah, only the thing you're appending to the list moves to the front, everything else stays in the same order.
[21:45:39] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) (Remote host closed the connection)
[21:45:58] <douglaswinship> Some good examples here: https://spapas.github.io/2016/04/27/python-nested-list-comprehensions/
[21:46:11] <Wooble> (and yes after many years it still feels backwards to me :) )
[21:46:15] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[21:46:19] <Samian> Payam think of [c for c in a for a in c] mentally as [{ for loop body}  (( parent for loop) for c in a)  ((inner for loop) for a in c)]
[21:46:34] <Payam> Thanks. It always makes me confused
[21:46:39] <grym> Wooble: it makes my head hurt enough that i generally just write the loop instead
[21:46:59] *** Joins: Enitin (~Enitin@82.102.22.86)
[21:47:11] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[21:47:17] <Wooble> grym: itertools.product is usually what I want if there are nested loops anyway :)
[21:47:34] <grym> well, that too
[21:48:57] *** Joins: timothy (~timothy@redhat/timothy)
[21:48:58] <jinsun> hmm https://bpa.st/KFOA not sure I understand
[21:49:05] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 246 seconds)
[21:49:37] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[21:50:58] <Wooble> jinsun: it's the same as tmp=[]; for b in c: for c in a; tmp.append(c); print(tmp)
[21:51:36] <Wooble> jinsun: (their example code would do the same thing, which probably isn't what anyone ever wants :) )
[21:51:53] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 250 seconds)
[21:52:09] <Payam> How would this one look like in a list comprehension? where would the conditions end up? https://bpa.st/W3WQ
[21:52:59] <jinsun> okay I get I think, c getting overwritten in the inner loop doesn't affect the outer loop it is sttill iterating over the original list
[21:53:41] <jinsun> I was thinking it might blow up in the 2nd iteration
[21:53:50] <CrtxReavr> Payam, I'm not sure a listcomp would be an improvement.
[21:53:52] <flower_> I'm working on my first python project, using Curses (ncurses). Maybe someone wants to have a look. I'm interested if I'm on the right track, or that I have some strange or 'wrong' ways of doing. No license yet.
[21:53:54] <flower_> https://github.com/avlap/curses-review/blob/main/manager/manager.py
[21:54:07] <Payam> CrtxReavr No I am just wondering.
[21:54:16] <flower_> https://github.com/avlap/curses-review
[21:54:39] <douglaswinship> Payam: I'm pretty sure you just need to chop of the bottom line, and replace it with a "d" at the beginning. Then delete all the colons, and delete all the line breaks. That's it.
[21:55:12] *** Quits: mei3 (~mei@user/mei) (Read error: Connection reset by peer)
[21:55:16] <douglaswinship> Payam: the list comprehension uses the same text, in the same order, you just put it all on one line and get rid of the colons, then move the final variable to the front.
[21:55:19] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[21:55:21] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[21:55:26] *** Joins: arseru (uid515527@user/arseru)
[21:55:36] <douglaswinship> Payam see the examples here: https://spapas.github.io/2016/04/27/python-nested-list-comprehensions/
[21:55:45] <douglaswinship> there's one with if statements
[21:56:22] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:56:49] <Wooble> flower_: you've already written a lot of code so you probably don't want to hear this, but urwid would have made that all a lot less horrible to write.
[21:56:52] *** Quits: Nselm (~Nselm@p200300d56f367636b296f109a2363b7e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:56:58] <Payam> douglaswinship awesome. thanks
[21:57:02] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[21:57:13] <douglaswinship> Payam: also variables like "b" and "d" are really confusing to read and work with. If you give things more descriptive names, then you make it much easier for the reader to follow.
[21:57:51] <flower_> Wooble, the nice thing about starting a project learning to code, is that you've at least learned a lot from it. So that's ok to hear. ;)
[21:58:02] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[21:58:29] <Payam> kudos to you douglaswinship
[21:58:29] <Wooble> (the curses API is notably horrible, which isn't surprising since it's extremely old.)
[21:58:32] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[21:58:34] <douglaswinship> Payam: for instance it's a lot easier to make sense out of a comprehension like this one: [passenger.name for train in trainList for carriage in train for passenger in carriage]
[21:58:39] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:58:49] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 250 seconds)
[21:58:51] <flower_> I knew about Urwid, but curses can be used with other languages as well
[21:58:55] <CrtxReavr> comprehensions should be quick & dirty though. . .  write your code to be read by human eyes.
[21:58:58] *** Quits: pro_z (~pro_z@37.214.56.218) (Ping timeout: 260 seconds)
[21:59:07] *** Joins: mei3 (~mei@user/mei)
[21:59:34] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[21:59:47] <Wooble> flower_: well, not a bad thing to learn it if you're going to move that knowledge to a language without better wrappers on top.
[22:00:00] <mefistofeles> https://github.com/willmcgugan/textual this one is nice for TUI, re: ncurses/urwid
[22:00:22] *** Joins: davegarath (~davegarat@net-93-66-98-230.cust.vodafonedsl.it)
[22:00:40] <Wooble> prompt-toolkit also seems nice, and is more cross-platform.
[22:00:44] <flower_> Wooble, actually, I spend a lot of time figuring things out, but codewise, a lot of things, Python helps with it. Using namedtuples etc. I can't say that the api is proven horrible actually.
[22:01:01] *** Joins: Nselm (~Nselm@p200300d56f36761676172b000163f7bc.dip0.t-ipconnect.de)
[22:01:19] <Wooble> flower_: well I mean it's bad enough that the nethack devteam gave up and made their own screen handling from scratch. :)
[22:01:56] <flower_> Wooble, what a total losers ;)
[22:02:27] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:03:09] *** Quits: Ergo^ (~ergo@91.238.59.144) (Ping timeout: 250 seconds)
[22:03:13] <flower_> Anyway, my question is more about my coding. I tried to apply as much as I learned from some books. But really designing a application with a event loop and such, is new for me.
[22:04:12] <flower_> I tried to avoid OOP as long as possible, everytime when I tried to do it in a more OOP way, it didn't make much sense to me.
[22:04:26] <flower_> I tried to let functions do one thing as much as possible.
[22:04:35] <flower_> split the data from gui / display stuff
[22:05:42] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[22:05:43] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[22:05:47] *** Joins: shokohsc8 (~shokohsc@227.245.204.77.rev.sfr.net)
[22:06:33] <flower_> For sure, there will be things that could be coded in one line or so. But I kept it a bit simple. Like making first 3 tuples and then later zip them together. I'm sure people can do that faster. But that's for later concern I think.
[22:07:33] <flower_> the 'match' functionality in python 3.10 helped my code quite a bit I think.
[22:08:32] <flower_> It will be hard to test for someone else, cause it needs quite some tools, normal people don't have installed or are just not available yet.
[22:09:29] <flower_> but I guess one can look at the code. All though I understand that reading someone elses code, especially from a beginner is hard.
[22:11:20] *** Joins: bloody (~bloody@user/bloody)
[22:12:53] <shodan45> zeep isn't putting an xmlns:ns0="https://foo" in the root tag of my request - any idea why?
[22:14:10] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:14:44] *** Quits: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net) (Quit: byyyyyyye)
[22:16:41] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[22:16:47] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[22:18:38] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:18:40] *** Parts: arseru (uid515527@user/arseru) ()
[22:18:54] *** Joins: mickey8 (~user@user/mickey)
[22:19:11] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 246 seconds)
[22:20:08] *** Quits: dvx (~dvx@5.181.92.64) (Read error: Connection reset by peer)
[22:20:23] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[22:21:33] *** Quits: Nselm (~Nselm@p200300d56f36761676172b000163f7bc.dip0.t-ipconnect.de) (Quit: Client closed)
[22:25:08] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[22:25:48] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[22:29:04] *** Joins: cheater (~Username@user/cheater)
[22:29:18] *** Joins: jazzy (~jaziz@user/jaziz)
[22:29:58] *** Joins: Harlin (~DonQixote@75-163-144-60.clsp.qwest.net)
[22:32:22] *** Quits: bitdex_ (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[22:32:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:33:18] *** Joins: inomoz (~inomoz@176.59.125.26)
[22:33:35] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2010:1f0c:b16:6a06)
[22:34:05] <flower_> I expected people to say, use OOP! it would improve your code. ;)
[22:34:34] <grym> flower_: eh, not always
[22:34:47] <grym> this channel is very ambivalent on the idea, i think
[22:34:53] <flower_> ok
[22:35:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:36:04] <flower_> most (beginner) books I've looked into, more or less advise against it, when not needed. namedtuples and dicts seems to help me quite a bit.
[22:36:52] <flower_> The question is, when it is needed of course. I didn't really felt the need, but that could be because I'm not familiar with it.
[22:37:15] *** Quits: magla (~gelignite@55d4ec6e.access.ecotel.net) (Quit: Stay safe!)
[22:39:05] <grym> namedtuples are ... more fraught
[22:39:18] <grym> (consider dataclasses as your struct-equivalent)
[22:39:32] <grym> unless you really do want _a tuple_, with names
[22:39:56] <grym> https://www.attrs.org/en/stable/why.html#namedtuples  covers the usual bases
[22:40:10] <flower_> thx
[22:40:21] <flower_> dataclasses, they sounded bloated to me ;)
[22:40:26] <grym> i tend to like @attr.s(frozen=True) and attr.evolve(...) as a pattern to feed one or more structs through functions
[22:40:28] *** Joins: lbracher (~lucas@94.105.106.159.dyn.edpnet.net)
[22:41:43] *** Quits: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[22:42:24] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[22:42:35] <flower_> grym, this is the kind of advises and considerations, I'm looking for, thx.
[22:42:49] *** Joins: jazzy (~jaziz@user/jaziz)
[22:43:01] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[22:43:17] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[22:43:48] <flower_> attrs, never heard of them
[22:44:44] <grym> very nice third party library for making lightweight classes.  pydantic is like a spiritual cousin to it
[22:45:07] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:27] * flower_ duckduckgos pydantic
[22:46:23] <xsx> why the assertion fails? https://bpa.st/G3QA - traceback for func1() starts/ends at line 6, i was expecting to have a trace to the line 14 as well
[22:47:26] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:47:44] *** Joins: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com)
[22:48:01] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:48:15] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:48:32] *** Joins: mickey8 (~user@user/mickey)
[22:50:54] *** Quits: mickey8 (~user@user/mickey) (Client Quit)
[22:51:07] <flower_> grym, but dataclass is in the standard library right, so prefer it above attrs?
[22:51:10] *** Joins: mickey8 (~user@user/mickey)
[22:51:47] *** Quits: arinov (~arinov@176.89.7.184) (Ping timeout: 256 seconds)
[22:51:49] <grym> flower_: not necessarily
[22:52:04] <grym> https://www.attrs.org/en/stable/why.html#data-classes
[22:52:28] *** Joins: greedom (~greedom@x59cc9b10.dyn.telefonica.de)
[22:52:41] *** Joins: Guddu (~Guddu@186.106.129.22)
[22:52:54] <grym> depends on if you want attrs features, have to deal with <=3.6 pythons, have dependencies already,etc...
[22:53:25] *** Quits: venmx (~bertie@host86-134-82-19.range86-134.btcentralplus.com) (Ping timeout: 250 seconds)
[22:56:37] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:56:46] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 268 seconds)
[22:57:26] <flower_> one of the reason I choose for namedtuples, was that they are light on resources, like tuples
[22:57:56] *** Joins: ravan_ (~ravan@user/ravan)
[22:58:12] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:59:12] <ChrisWarrick> they aren’t really, especially compared to @attr.s(slots=True)
[23:00:02] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[23:00:21] <SuperLag>  /join #github
[23:01:26] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[23:01:40] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[23:03:32] <theseb> flower_: whoa..timeout...you don't use python to save on "resources" ;)
[23:03:59] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 246 seconds)
[23:06:02] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[23:06:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:06:35] *** Joins: Hax0r (~Hax0r@128.127.222.243)
[23:07:29] <xsx> hexnewbie: thanks for the explanation. so why does sys.exc_info() show only a single trace, even if exception happened inside invoked function? i would expect to see the caller
[23:09:08] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[23:10:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:11:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:11:40] *** Quits: swensson (~swensson@213.88.131.10) (Ping timeout: 256 seconds)
[23:12:18] <jinsun> xsx: in the first case the call to func1 is not within the try: block, the traceback will have only the stuff inside try
[23:15:43] <theseb> anyone ever used Google Firebase or API Gateway?
[23:15:57] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:16:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[23:16:25] <flower_> for now I see little value in switching from namedtuple to dataclasses. But good to know them and think about it.
[23:17:40] *** Joins: CoolerX (~CoolerX@user/coolerx)
[23:18:03] *** Joins: fikran (~fikran@user/fikran)
[23:18:57] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:10fc:fe6e:4721:d309)
[23:19:36] <xsx> jinsun: indeed and this is what I'm trying to understand: do i need a try/except block to "start" tracking traces? it seems traces are only collected from the start of `try` block
[23:20:49] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[23:21:05] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:21:08] *** Joins: Mach` (~Mach@86.121.208.210)
[23:21:15] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:21:16] *** Joins: Gerula_ (~Gerula@user/gerula)
[23:21:16] *** Quits: Gerula (~Gerula@user/gerula) (Killed (platinum.libera.chat (Nickname regained by services)))
[23:21:16] *** Gerula_ is now known as Gerula
[23:21:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (osmium.libera.chat (Nickname regained by services)))
[23:21:18] <xsx> jinsun: when i remove try/except from the inside of func1, i receive full traceback for func1
[23:21:24] *** Joins: PJBoy (~PJBoy@user/pjboy)
[23:21:35] *** Joins: michele_ (~eraser@user/michele)
[23:21:37] *** Joins: Nei_ (~ailin@user/nemui)
[23:21:38] *** Joins: chele_ (~chele@user/chele)
[23:21:50] *** Joins: dhch3 (~dhch@185.213.154.168)
[23:21:52] *** Joins: nomic2 (~nomic@185.192.69.217)
[23:21:52] *** Joins: Gudddu (~Guddu@186.106.129.22)
[23:21:53] *** Joins: chatcat_ (chatcat@gateway/vpn/airvpn/chatcat)
[23:21:56] *** Joins: ravan__ (~ravan@user/ravan)
[23:22:00] *** Quits: java (~java@2406:da1c:87a:b700:ba4:9251:3d45:648d) (Quit: Kā kite ano i a koutou)
[23:22:10] *** Joins: gerty0 (~gerty@user/gerty)
[23:22:11] *** Joins: elmcrest3 (~elmcrest@static.48.211.217.95.clients.your-server.de)
[23:22:16] *** Joins: Cienisty6 (Cienisty@user/cienisty)
[23:22:16] *** Quits: Cienisty (Cienisty@user/cienisty) (Killed (platinum.libera.chat (Nickname regained by services)))
[23:22:16] *** Cienisty6 is now known as Cienisty
[23:22:21] *** Joins: frat3rius8 (~frat3rius@host-85.14.84.172.static.3s.pl)
[23:22:23] *** Joins: lifefir316 (~lifefir3@152.37.120.101)
[23:22:23] *** Joins: Duckle3 (~Duckle@user/duckle)
[23:22:24] *** Joins: manuels5 (~manuel@80.211.205.88)
[23:22:24] *** Joins: kn1001 (~kn100@wireguard/tunneler/kn100)
[23:22:25] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[23:22:26] *** Joins: thurs8060147 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[23:22:28] *** Joins: dzz0072 (~dzz007@user/dzz007)
[23:22:29] *** ravan__ is now known as ravan
[23:22:36] *** Joins: rMdes9 (~rmdes@my.armada.digital)
[23:22:37] *** Joins: rvgate3 (~rvgate@user/rvgate)
[23:22:44] *** Joins: asthasr_ (~asthasr@162.210.28.151)
[23:22:51] *** Joins: voidcat_ (~voidcat@user/voidcat)
[23:22:51] *** Joins: ATAD_ (~ATAD@user/atad)
[23:22:55] *** Joins: dece_ (~dece@dece.space)
[23:23:07] *** Quits: ATAD (~ATAD@user/atad) (Killed (NickServ (GHOST command used by ATAD_)))
[23:23:09] *** ATAD_ is now known as ATAD
[23:23:12] *** Joins: ihaveamac_ (~ihaveamac@ihaveahax.net)
[23:23:12] *** Joins: Yhg1s_ (sid387777@python/psf/thomas)
[23:23:14] *** Joins: vlm_ (~vlm@user/vlm)
[23:23:16] *** Joins: cyberjunkie_ (~cyberjunk@wireguard/tunneler/cyberjunkie)
[23:23:17] *** Joins: lunchd (launchd@bitbot/launchd)
[23:23:20] *** Joins: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[23:23:21] *** Joins: CrypticS_ (~CrypticS_@user/crypticsquared)
[23:23:21] *** Joins: Telvana (~capo@user/telvana)
[23:23:21] *** Joins: mcfrd (~mcfrdy@user/mcfrdy)
[23:23:23] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[23:23:25] *** Joins: polyrob_ (~rob@user/polyrob)
[23:23:25] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.29)
[23:23:29] *** Joins: MightyMu_ (~MightyMu@104.131.138.31)
[23:23:29] *** Joins: lk_ (sid504574@id-504574.ilkley.irccloud.com)
[23:23:31] *** Joins: meti_ (~meti@user/meti)
[23:23:36] *** Joins: AhmedAmerican_ (sid470527@id-470527.ilkley.irccloud.com)
[23:23:41] *** Joins: DerpGusta_ (~quassel@user/derpgusta)
[23:23:54] *** Joins: wils (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[23:23:56] *** Joins: Adrixan_ (~Adrixan@218.72.75.34.bc.googleusercontent.com)
[23:23:57] *** Joins: kostkon (~androirc@2a02:587:a115:613c:d067:8cf:12ba:3d42)
[23:24:00] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[23:24:07] *** Joins: magla (~gelignite@55d4ec6e.access.ecotel.net)
[23:24:17] *** Joins: cheater1__ (~Username@user/cheater)
[23:24:20] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[23:24:21] *** Joins: Trieste_ (T@user/pilgrim)
[23:24:42] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[23:25:18] *** Joins: Wulf4 (~Wulf@user/wulf)
[23:25:18] *** Joins: jfb4_ (~jfb4@178.62.2.68)
[23:25:21] *** Joins: mefistof1les (~mefistofe@user/mefistofeles)
[23:25:25] *** Joins: tudor_ (~tudor@tomka.hu)
[23:25:34] *** Joins: sgn_ (~sgn@user/sgn)
[23:25:41] *** Joins: reda_ (~reda@user/reda)
[23:25:43] *** Joins: iphone (~spiderman@user/spiderman)
[23:25:49] *** Joins: brelod_ (~me@90.244.150.142)
[23:25:50] *** Joins: irrgit_ (~irrgit@192.241.175.183)
[23:25:51] *** Joins: hexeme (~hexeme@user/hexeme)
[23:25:57] *** Joins: lz__ (l@gateway/vpn/protonvpn/lz/x-63480406)
[23:25:58] *** Joins: jbe_ (~jbe@lysator/root/jbe)
[23:26:00] *** Joins: dman777_alter (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[23:26:00] *** Joins: codifica1 (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[23:26:01] *** Joins: morrigan_ (~m0rr1gan@user/m0rr1gan)
[23:26:01] *** Quits: kjdf (~kjdf@ti0063q161-1126.bb.online.no) (Quit: leaving)
[23:26:02] *** Joins: baltazaar (~baltazar@178-164-254-231.pool.digikabel.hu)
[23:26:02] *** Joins: ezzieygu1wuf (~Unknown@user/ezzieyguywuf)
[23:26:11] *** Joins: erry_ (~erry@errietta.me)
[23:26:12] *** Joins: nvz_ (~user@nvz.farted.online)
[23:26:18] *** Joins: R0b0t1` (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[23:26:26] *** Joins: monchi_ (~joints@143.198.92.132)
[23:26:26] *** Joins: very_sneaky_ (~very_snea@user/very-sneaky/x-7432109)
[23:26:31] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[23:26:33] *** Joins: Echoz_ (~chris@user/echoz)
[23:26:51] *** Joins: deathspawn (deathspawn@user/poxifide)
[23:27:01] <flower_> grym, do you have also such nice background info for dicts vs dataclasses?
[23:27:52] *** Joins: LeoTal (~LeoTal@24.170.86.79.rev.sfr.net)
[23:27:57] *** Joins: Viewday7 (~Viewday@user/viewday)
[23:28:12] *** Joins: __Tritium__ (~tritium@toxin.sdamon.com)
[23:28:54] *** Joins: {HD}_ (~{HD}@86.106.121.213)
[23:29:10] <jinsun> xsx: yes, but when you try except then within that block the traceback will stop at the frame within the try block, because you don't care about what happened before (usually)
[23:29:23] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:29:23] *** Viewday7 is now known as Viewday
[23:30:00] <LeoTal> I want to rotate the hue and lower the saturation of an image, probably with Pillow. I know how to do that pixel-by-pixel. Is there a faster way to do it? Image.point() looks relevant but I only know how to apply it to luminosity or to an RGB band.
[23:30:21] *** Joins: edro (~edr@user/edr)
[23:30:27] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Killed (NickServ (GHOST command used by mefistof1les)))
[23:30:34] *** mefistof1les is now known as mefistofeles
[23:30:46] *** Quits: Hax0r (~Hax0r@128.127.222.243) (*.net *.split)
[23:30:46] *** Quits: ravan_ (~ravan@user/ravan) (*.net *.split)
[23:30:46] *** Quits: Guddu (~Guddu@186.106.129.22) (*.net *.split)
[23:30:46] *** Quits: cheater (~Username@user/cheater) (*.net *.split)
[23:30:46] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (*.net *.split)
[23:30:46] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (*.net *.split)
[23:30:46] *** Quits: pycurious (~Adium@user/pycurious) (*.net *.split)
[23:30:46] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[23:30:46] *** Quits: nomic (~nomic@185.192.69.217) (*.net *.split)
[23:30:46] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (*.net *.split)
[23:30:46] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (*.net *.split)
[23:30:46] *** Quits: Klinda (~superleag@user/klinda) (*.net *.split)
[23:30:46] *** Quits: asthasr (~asthasr@162.210.28.151) (*.net *.split)
[23:30:46] *** Quits: Mach (~Mach@86.121.208.210) (*.net *.split)
[23:30:46] *** Quits: zeden (~zeden@user/zeden) (*.net *.split)
[23:30:46] *** Quits: ac_slater (~ac_slater@c-71-231-45-179.hsd1.wa.comcast.net) (*.net *.split)
[23:30:46] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (*.net *.split)
[23:30:46] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[23:30:46] *** Quits: brelod (~me@90.244.150.142) (*.net *.split)
[23:30:46] *** Quits: chele (~chele@user/chele) (*.net *.split)
[23:30:46] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (*.net *.split)
[23:30:46] *** Quits: vit (~vit@chello085216193138.chello.sk) (*.net *.split)
[23:30:46] *** Quits: lifefir31 (~lifefir3@152.37.120.101) (*.net *.split)
[23:30:46] *** Quits: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406) (*.net *.split)
[23:30:46] *** Quits: thurs806014 (~thurs@ip68-225-209-147.ph.ph.cox.net) (*.net *.split)
[23:30:46] *** Quits: alex11 (~alex11@user/alex11) (*.net *.split)
[23:30:46] *** Quits: manuels (~manuel@80.211.205.88) (*.net *.split)
[23:30:46] *** Quits: michele (~eraser@user/michele) (*.net *.split)
[23:30:46] *** Quits: rvgate (~rvgate@user/rvgate) (*.net *.split)
[23:30:46] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[23:30:46] *** Quits: monchi (~joints@143.198.92.132) (*.net *.split)
[23:30:46] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (*.net *.split)
[23:30:46] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (*.net *.split)
[23:30:46] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[23:30:46] *** Quits: spiderman (~spiderman@user/spiderman) (*.net *.split)
[23:30:46] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[23:30:46] *** Quits: Tritium (~tritium@toxin.sdamon.com) (*.net *.split)
[23:30:46] *** Quits: jfb4 (~jfb4@178.62.2.68) (*.net *.split)
[23:30:46] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[23:30:46] *** Quits: roniez (~roniez@nixsec.se) (*.net *.split)
[23:30:46] *** Quits: ldlework (~hexeme@user/hexeme) (*.net *.split)
[23:30:46] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[23:30:46] *** Quits: dece (~dece@dece.space) (*.net *.split)
[23:30:46] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[23:30:46] *** Quits: Ninpo (~Ninpo@user/ninpo) (*.net *.split)
[23:30:46] *** Quits: tudor (~tudor@tomka.hu) (*.net *.split)
[23:30:46] *** Quits: tabakhase (~tabakhase@user/tabakhase) (*.net *.split)
[23:30:46] *** Quits: nvz (~user@nvz.farted.online) (*.net *.split)
[23:30:46] *** Quits: poxifide (~poxifide@user/poxifide) (*.net *.split)
[23:30:46] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (*.net *.split)
[23:30:46] *** Quits: gerty (~gerty@user/gerty) (*.net *.split)
[23:30:46] *** Quits: launchd (~launchd@bitbot/launchd) (*.net *.split)
[23:30:46] *** Quits: reda (~reda@user/reda) (*.net *.split)
[23:30:46] *** Quits: lk (sid504574@ilkley.irccloud.com) (*.net *.split)
[23:30:46] *** Quits: Socra (~Socra@206.217.216.27) (*.net *.split)
[23:30:46] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (*.net *.split)
[23:30:46] *** Quits: AhmedAmerican (sid470527@ilkley.irccloud.com) (*.net *.split)
[23:30:46] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (*.net *.split)
[23:30:46] *** Quits: Yhg1s (sid387777@python/psf/thomas) (*.net *.split)
[23:30:46] *** Quits: sgn (~sgn@user/sgn) (*.net *.split)
[23:30:46] *** Quits: Rob (~capo@user/telvana) (*.net *.split)
[23:30:46] *** Quits: Echoz (~chris@user/echoz) (*.net *.split)
[23:30:46] *** Quits: chatcat (~chatcat@ip-24-53-119-61.user.start.ca) (*.net *.split)
[23:30:46] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (*.net *.split)
[23:30:46] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[23:30:46] *** Quits: NoelFlantier (~Hubert@gifi.cassossie.net) (*.net *.split)
[23:30:46] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (*.net *.split)
[23:30:46] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (*.net *.split)
[23:30:46] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[23:30:46] *** Quits: DerpGusta (~quassel@user/derpgusta) (*.net *.split)
[23:30:46] *** Quits: meti (~meti@user/meti) (*.net *.split)
[23:30:46] *** Quits: mallkrampus (~mallkramp@172.93.207.86) (*.net *.split)
[23:30:46] *** Quits: MercilessDeth (~brad@136.49.59.177) (*.net *.split)
[23:30:46] *** Quits: rMdes (~rmdes@my.armada.digital) (*.net *.split)
[23:30:46] *** Quits: wasd (~wasd@user/axis) (*.net *.split)
[23:30:46] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[23:30:46] *** Quits: voidcat (~voidcat@user/voidcat) (*.net *.split)
[23:30:46] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (*.net *.split)
[23:30:46] *** Quits: Adrixan (~Adrixan@218.72.75.34.bc.googleusercontent.com) (*.net *.split)
[23:30:46] *** Quits: Trieste (T@user/pilgrim) (*.net *.split)
[23:30:46] *** Quits: Throgkt (~Throgkt@user/throgkt) (*.net *.split)
[23:30:46] *** Quits: jug (~jug@user/jug) (*.net *.split)
[23:30:46] *** Quits: Somni (~insomnia@77-88-237-24.gci.net) (*.net *.split)
[23:30:46] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (*.net *.split)
[23:30:46] *** Quits: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (*.net *.split)
[23:30:46] *** Quits: kop (~user@karlpinc-net.karlpinc.com) (*.net *.split)
[23:30:46] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[23:30:46] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (*.net *.split)
[23:30:46] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[23:30:46] *** Quits: dhch (~dhch@185.213.154.168) (*.net *.split)
[23:30:46] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[23:30:46] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[23:30:46] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[23:30:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (*.net *.split)
[23:30:46] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (*.net *.split)
[23:30:46] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (*.net *.split)
[23:30:47] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (*.net *.split)
[23:30:47] *** Quits: Pilate (~pilate@pilate.io) (*.net *.split)
[23:30:47] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (*.net *.split)
[23:30:47] *** Quits: baltazar (~baltazar@178-164-254-231.pool.digikabel.hu) (*.net *.split)
[23:30:47] *** Quits: {HD} (~{HD}@86.106.121.213) (*.net *.split)
[23:30:47] *** Quits: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[23:30:47] *** Quits: MightyMu (~MightyMu@104.131.138.31) (*.net *.split)
[23:30:47] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[23:30:47] *** Quits: irrgit (~irrgit@192.241.175.183) (*.net *.split)
[23:30:47] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (*.net *.split)
[23:30:47] *** Quits: Nei (~ailin@user/nemui) (*.net *.split)
[23:30:47] *** Quits: jbe (~jbe@lysator/root/jbe) (*.net *.split)
[23:30:47] *** guenhael1 is now known as guenhael
[23:30:47] *** lifefir316 is now known as lifefir31
[23:30:47] *** mcfrd is now known as mcfrdy
[23:30:47] *** vlm_ is now known as vlm
[23:30:47] *** Wulf4 is now known as Wulf
[23:30:47] *** __Tritium__ is now known as Tritium
[23:30:47] *** thurs8060147 is now known as thurs806014
[23:30:47] *** Duckle3 is now known as Duckle
[23:30:47] *** manuels5 is now known as manuels
[23:30:47] *** gerty0 is now known as gerty
[23:30:47] *** elmcrest3 is now known as elmcrest
[23:30:47] *** rMdes9 is now known as rMdes
[23:30:47] *** dhch3 is now known as dhch
[23:30:47] *** kn1001 is now known as kn100
[23:30:47] *** frat3rius8 is now known as frat3rius
[23:30:47] *** jfb4_ is now known as jfb4
[23:30:47] *** rvgate3 is now known as rvgate
[23:30:47] *** dzz0072 is now known as dzz007
[23:30:47] *** polyrob_ is now known as polyrob
[23:30:47] *** baltazaar is now known as baltazar
[23:30:47] *** Yhg1s_ is now known as Yhg1s
[23:30:47] *** lk_ is now known as lk
[23:30:48] *** AhmedAmerican_ is now known as AhmedAmerican
[23:30:54] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[23:30:55] *** cheater1__ is now known as cheater
[23:31:03] <mefistofeles> oh
[23:31:04] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[23:31:05] <akk> LeoTal: If pillow doesn't have calls for that, imagemagick probably does (and has python bindings).
[23:31:11] <Wooble> LeoTal: I think this is generally done by converting the image to a numpy array, broadcasting changes you want, then turn it back into an image
[23:31:21] *** monchi_ is now known as monchi
[23:31:21] *** Joins: Klinda (~superleag@user/klinda)
[23:31:28] *** Joins: zebrag (~chris@user/zebrag)
[23:31:31] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[23:31:33] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[23:31:39] *** Nei_ is now known as Nei
[23:31:41] *** Joins: alex11 (~alex11@user/alex11)
[23:31:42] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[23:31:43] *** Joins: MercilessDeth (~brad@136.49.59.177)
[23:31:45] <LeoTal> Thanks y'all. Probably less hassle to do it the stupid way then
[23:32:08] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[23:32:13] *** Quits: LeoTal (~LeoTal@24.170.86.79.rev.sfr.net) (Quit: Leaving.)
[23:32:14] <jinsun> flower_: the attrs page has a section about dicsts too https://www.attrs.org/en/stable/why.html#dicts
[23:32:17] <akk> LeoTal: Or one page I found suggests converting to a numpy array and using http://matplotlib.org/api/colors_api.html#matplotlib.colors.rgb_to_hsv
[23:33:03] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[23:33:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 246 seconds)
[23:34:04] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[23:34:17] *** Joins: waynew (~wayne@user/waynew)
[23:34:25] *** Joins: java (~java@3.105.31.94)
[23:34:37] *** Joins: Socra (~Socra@206.217.216.27)
[23:34:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2010:1f0c:b16:6a06) (Ping timeout: 256 seconds)
[23:35:00] <flower_> jinsun, merci
[23:35:12] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:35:24] <hsiktas[m]> Is there a good/default book recommendation for pandas/numpy? I already read the "Python Crash Course" book from Eric Matthes.
[23:36:05] *** Quits: amogorkon (~amogorkon@port-83-236-35-197.dynamic.as20676.net) (Quit: just use()!)
[23:36:17] <mefistofeles> hsiktas[m]: it is not a book, but I like the https://jakevdp.github.io/PythonDataScienceHandbook/
[23:36:41] *** Quits: dld (~dld@73.61.8.213) (Ping timeout: 264 seconds)
[23:36:57] *** nomic2 is now known as nomic
[23:37:00] *** Joins: greenbagels (~gb@user/greenbagels)
[23:37:11] *** Joins: koolazer (~koo@user/koolazer)
[23:37:15] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[23:37:19] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[23:37:24] *** Joins: mallkrampus (~mallkramp@172.93.207.86)
[23:37:43] <jinsun> mefistofeles: looks like a book
[23:37:45] *** Joins: jug (~jug@user/jug)
[23:38:00] <hsiktas[m]> Is this what I am looking for? https://jakevdp.github.io/PythonDataScienceHandbook/
[23:38:02] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[23:38:05] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[23:38:06] *** Joins: dld (~dld@2601:197:600:1210:1d51:fa28:794f:615f)
[23:38:18] *** Joins: ac_slater (~ac_slater@c-71-231-45-179.hsd1.wa.comcast.net)
[23:38:28] <lionslicer> can someone help me? I wanna know if this is the correct way of turning hours, minutes and seconds into seconds
[23:38:28] *** Joins: zeden (~zeden@user/zeden)
[23:38:38] <lionslicer> ex: 1h = 3600 seconds
[23:38:42] <lionslicer> https://bpa.st/5TKA
[23:39:02] <lionslicer> ex: 1h 0m 60s = 3660s
[23:39:14] <lionslicer> and so on
[23:39:41] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 246 seconds)
[23:40:05] <lionslicer> it's written in portuguese, I'm sorry
[23:40:17] *** Joins: kop (~user@karlpinc-net.karlpinc.com)
[23:40:18] <lionslicer> lemme rewrite it
[23:40:48] <Wooble> it's fine as long as the code is in python :)
[23:40:54] <lionslicer> kek
[23:40:54] <lionslicer> ok
[23:41:04] <jinsun> lionslicer: it is correct (except that you ask the same question for minutes and seconds)
[23:41:14] <hsiktas[m]> well...
[23:41:20] <hsiktas[m]> its Kindle version a bit expensive so I am glad that they uploaded the entire book online
[23:41:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[23:42:07] <lionslicer> jinsun: I don't think I understand you
[23:42:22] <lionslicer> what do you mean?
[23:42:36] <jinsun> line 6 and 7
[23:42:44] <lionslicer> I see
[23:42:50] <kop> nedbat: I believe I've an approach to your github/yaml problem, https://nedbatchelder.com/blog/202111/github_action_matrix_with_cog.html  I posted a comment.  (It took me forever to figure out how to quote the yaml.  Wouldn't hurt to describe
[23:42:58] <kop> how to blockquote.)
[23:43:08] *** Quits: sdfgsdfg (sdfgsdfg@user/sdfgsdfg) (Quit: BNC by #bnc4you)
[23:43:13] <lionslicer> let's suppose the train will arrive in 2hours 5 minutes and 30 seconds
[23:43:17] *** Joins: shokohsc86 (~shokohsc@244.106.204.77.rev.sfr.net)
[23:43:32] *** Quits: shokohsc8 (~shokohsc@227.245.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[23:43:40] <lionslicer> I have to know that in order to correctly turn everything into seconds
[23:43:41] *** shokohsc86 is now known as shokohsc8
[23:43:50] <jinsun> lionslicer: those 2 lines have the same thing inside input()
[23:43:56] <lionslicer> oh
[23:44:08] <lionslicer> my bad lol
[23:44:12] <jinsun> I expected the last word to change :)
[23:44:22] <lionslicer> I see what you mean now
[23:44:25] <jinsun> the calculation is fine
[23:44:33] <tk> jinsun: sorry, it's a DataFrame[string-index] == string
[23:44:52] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[23:44:56] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:45:10] *** Joins: mickey8 (~user@user/mickey)
[23:45:24] <lionslicer> sometimes I overthink stuff and think I'm being redundant
[23:45:30] <Wooble> (using `min` as a variable name is a slightly bad idea, since it's the name of a builtin function. granted you probably weren't going to use that function in this program anyway)
[23:45:37] <lionslicer> or I think that my thinking process is circular
[23:45:44] <jinsun> tk: what is the type of string-index? like a list of strings?
[23:45:56] <tk> it's just one string
[23:46:14] <jinsun> so then it is a column name
[23:46:17] <tk> it's literall numpy.match(data_frame_var['string'] == 'string', 'TRUE', 'FALSE')
[23:46:18] *** Quits: java (~java@3.105.31.94) (Ping timeout: 260 seconds)
[23:46:20] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:46:32] <jinsun> then it will give a Series instead of DataFrame
[23:46:34] <Wooble> lionslicer: I might just write seg = s + m * 60 + h * 60 * 60 but your way is fine.
[23:46:38] <jinsun> still not bool
[23:46:41] *** Joins: Klinda (~superleag@user/klinda)
[23:47:03] <tk> I'm really struggling to find documentation for this, pandas doesn't seem to document any metamethods aside from __iter__
[23:47:22] <xsx> jinsun: thx! so, the try/except "resets" the stack of traces. Is there any way to avoid it? Or to extract the outer traces while handling an exception?
[23:47:23] <tk> jinsun: so basically it's doing the operation on ALL elements of that column at the same time?
[23:47:44] <lionslicer> thanks, guys
[23:47:58] *** Quits: shokohsc8 (~shokohsc@244.106.204.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[23:48:43] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[23:49:29] <jinsun> tk: it is similar to numpy in that way, yes it will do the operation elementwise for all operators (well almost all, some cannot be overriden like the boolean ones and bitwise ones are used to implement elementwise boolean)
[23:50:32] <tk> such an unusual syntax
[23:50:49] <tk> surely lambdas would have been clearer, oh well, I imagine there's some performance reason for this
[23:51:49] <jinsun> xsx: maybe https://docs.python.org/3/library/traceback.html#traceback.extract_stack
[23:53:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:6c0:2b98:1609:4e92)
[23:53:35] *** Quits: ali1234 (~al@user/ali1234) (Quit: Leaving.)
[23:53:43] <Wooble> tk: R does the same thing (although I have no idea if they stole the idea from numpy :) )
[23:54:14] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:54:27] *** Joins: Betal (~Betal@user/betal)
[23:54:38] <Wooble> err, I guess not, R is older than numpy.
[23:55:47] *** Quits: jay-m1262 (~jay-m@129.0.77.216) (Ping timeout: 246 seconds)
[23:56:05] *** Joins: Viewday0 (~Viewday@user/viewday)
[23:56:46] *** Quits: emf (~emf@2620:10d:c090:400::5:b872) (Ping timeout: 245 seconds)
[23:56:55] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:57:08] *** Joins: Payam (~Payam@138.106.57.131)
[23:57:31] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:57:31] *** Viewday0 is now known as Viewday
[23:57:51] *** Quits: korros (korros@2600:3c03::f03c:92ff:febf:689a) (Quit: WeeChat 2.8)
[23:57:59] *** Joins: jay-m1262 (~jay-m@154.72.160.199)
[23:58:14] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:357d:3a4b:f5d4:bb2e)
[23:58:24] *** Joins: emf (~emf@2620:10d:c090:400::5:defd)
[23:58:41] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[23:59:06] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[23:59:29] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
