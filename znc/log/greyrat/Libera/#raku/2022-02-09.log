[00:21:07] *** Joins: timo (~timo@shells.aperture-labs.org)
[00:50:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:04:53] <tonyo>  
[01:05:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[01:05:52] <tonyo> leont: didn't see you asked here, responded on twitter but you could do something like `curl -s 360.zef.pm | jq '.[] | select(.provides|has("Fez::CLI"))` (changing `Fez::CLI` to whatever you're seeking) to find out what dists report that module provided
[01:13:50] <leont> That's barely easier than browsing the git repository
[01:14:07] <leont> But it dosen't solve the real problem: actually showing the documentation of the other modules in a dist
[01:14:56] <tonyo> leont: ah, i misread your gripe as how to _find_ what provides that module and not the other way round
[01:19:18] *** Joins: bdju (~bard@user/bdju)
[01:48:43] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[02:04:51] <leont> Is there any way to encode a unicode-normalized string? A Uni object doesn't have an encode method, and .Str.encode seems to undo the normalization (because NFG I assume)
[02:07:23] <leont> m: my $a = "√´"; say $a.NFC.Str.encode eq $a.NFD.Str.encode
[02:07:23] <camelia> rakudo-moar 34c938c58: OUTPUT: ¬´True‚ê§¬ª
[02:12:57] <gfldex> m: $*ENODOC++ for Parameter.new.constraint_list;
[02:12:58] <camelia> rakudo-moar 34c938c58: ( no output )
[02:13:33] <gfldex> lizmat++ # for cool code in cool module :)
[02:16:26] *** Quits: MasterDuke (~MasterDuk@94.0.188.131) (Quit: Connection closed)
[02:29:57] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[02:29:59] <gfldex> Thinking about it, this might actually be an ENOAPI.
[02:32:22] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:38:38] <leont> I've used it, but I suspect it isn't really api.
[02:50:07] *** Quits: lichtkind (~lichtkind@p200300feb71065c0bc98954dd898c405.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:02:07] *** Joins: curiosa (~curiosa@37.172.170.37)
[03:02:28] <curiosa> Hello
[03:02:50] <curiosa> how do I know the line number when emitting a warning while parsing using a grammar?
[03:04:16] <gfldex> curiosa: You have to use a counter in the rule that is parsing lines.
[03:04:55] <gfldex> A grammar doesn't really know what a line is, so it can't do that for you.
[03:11:42] *** Joins: MasterDuke (~MasterDuk@94.0.188.131)
[03:12:25] <curiosa> gfldex i'm not parsing lines but declarations
[03:12:44] <curiosa> a linebreak is a whitespace to me
[03:13:06] <curiosa> I would still like to put a warning with a line number in case of redeclaration of a symbol
[03:13:29] <curiosa> it's not about software but about the user
[03:14:34] <curiosa> I can imagine some weird workaround
[03:15:06] <MasterDuke> i'm not sure if it works in user grammars, but you could try experimenting with something like https://github.com/rakudo/rakudo/blob/master/src/Perl6/Grammar.nqp#L1009
[03:15:57] <curiosa> oh I will check it thanks MasterDuke
[03:16:33] *** Quits: curiosa (~curiosa@37.172.170.37) (Quit: Client closed)
[03:35:57] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:37:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[03:58:29] *** Quits: andinus (andinus@tilde.institute) (Remote host closed the connection)
[04:10:28] <tonyo> m: my \x = "line 1\nline 2\nline a\n"; grammar a { rule TOP { :my $*LINE = 0; ^ <line>+ $ }; token line { \s* "line" \s+ <number-or-fail> <nlr> }; regex number-or-fail { | \d+ | <.dieln> }; token nlr { ("\r\n" | "\n") {$*LINE++} }; token dieln { { die "Expected number on line $*LINE" } }; }; say a.parse(x)
[04:10:28] <camelia> rakudo-moar fa1f4a743: OUTPUT: ¬´Expected number on line 2‚ê§  in regex dieln at <tmp> line 1‚ê§  in regex number-or-fail at <tmp> line 1‚ê§  in regex line at <tmp> line 1‚ê§  in regex TOP at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[04:58:30] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:58:30] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:59:21] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[05:34:13] *** Joins: frost (~frost@user/frost)
[05:58:21] *** Joins: vasko (~vasko@137.220.91.123)
[06:02:24] <guifa> curiosa: if you're also going to be using the default whitespace, you'd redefine it similarly to what tonyo has
[06:02:26] <tellable6> guifa, I'll pass your message to curiosa
[06:54:33] *** Quits: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[07:00:55] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[07:15:41] *** Joins: mahafyi (~mahafyi@49.204.140.88)
[07:28:38] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:34:33] *** Joins: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net)
[07:49:32] *** Quits: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[07:51:37] *** Joins: andrea[m] (~andreanit@2001:470:69fc:105::1:28a8)
[07:54:50] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:58:27] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[08:27:25] <tonyo> very low magic example
[08:30:28] *** Joins: yonnybg (~yonnybg@45.32.191.75)
[08:36:22] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[08:49:41] <elcaro> hi tonyo. just used fez for the first time and got a little confused by 'Meta error: "auth" is absent or not a string'
[08:49:54] <elcaro> I fixed the error, and tried upload again, but kept getting the same error...
[08:50:03] <elcaro> ... because I hadn't actually committed my changes.
[08:50:59] <elcaro> maybe a clearer error might mention that the meta located at source url "blah" has an error
[08:55:57] *** Quits: jaguart (~jaguart@119-18-28-11.77121c.mel.static.aussiebb.net) ()
[09:09:57] *** Joins: mexen (uid495612@user/mexen)
[09:36:08] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:45:43] <Voldenet> m: say DateTime.new('2021-12-24T12:23:00.43Z').day-fraction;
[09:45:43] <camelia> rakudo-moar fa1f4a743: OUTPUT: ¬´0.5159772‚ê§¬ª
[09:45:59] *** Joins: frost (~frost@user/frost)
[09:58:30] <elcaro> that's an interesting method. 
[09:58:46] * elcaro wonders why there's no .year-fraction
[10:05:00] <Voldenet> well, it's relatively new api
[10:08:01] <lizmat> and month-fraction  :)
[10:08:17] <lizmat> and week-fraction for that matter  :-)
[10:16:18] <Voldenet> in fact, I wonder why those methods are available only on DateTime and not Dateish role
[10:16:30] <Voldenet> m: say now.Date.DateTime.julian-date
[10:16:30] <camelia> rakudo-moar fa1f4a743: OUTPUT: ¬´2459619.5‚ê§¬ª
[10:29:09] <lizmat> I guess that was an oversight
[10:38:46] <Voldenet> it makes sense when you look at the code, which uses .day-fraction
[10:45:59] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:45:59] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:46:57] *** Quits: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::49) (Ping timeout: 240 seconds)
[10:47:27] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[11:17:25] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:21:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[11:23:38] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:24:53] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:27:17] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[11:30:54] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 260 seconds)
[11:31:47] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[11:42:10] <Geth> ¬¶ doc: jaffa4++ created pull request #4026: Update nativecall.pod6
[11:42:10] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4026
[11:44:39] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:14:39] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:18:43] *** Joins: lichtkind (~lichtkind@p200300feb71065c0bc98954dd898c405.dip0.t-ipconnect.de)
[12:32:25] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:37:00] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:37:38] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[12:43:54] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[12:52:10] *** Quits: kybr (ky@2600:3c01::f03c:92ff:feb3:476f) (Ping timeout: 250 seconds)
[12:52:37] *** Joins: kybr (ky@2600:3c01::f03c:92ff:feb3:476f)
[12:54:17] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 240 seconds)
[13:05:44] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[13:25:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:39:11] *** Quits: mahafyi (~mahafyi@49.204.140.88) (Ping timeout: 256 seconds)
[13:56:30] <moritz> a recent discussion about perl made me notice that I had the implicit assumption that heredoc markers must be idneitfiers
[13:56:39] <moritz> both in perl and in raku, this is not the case
[13:57:19] <moritz> m: print q:to<!$ ?>;‚ê§just a string here‚ê§!$ ?
[13:57:19] <camelia> rakudo-moar 307ce9d82: OUTPUT: ¬´just a string here‚ê§¬ª
[13:58:07] <moritz> I hope y'all appreciate the beauty of terminating a heredoc by a single . on a line of its own :-)
[14:00:48] <nine> I wonder how many actually know where this comes from :)
[14:01:55] <lizmat> moritz: there was a time you could end a heredoc with an empty line in Per
[14:01:57] <lizmat> l
[14:05:58] <moritz> nine: you mean besides "from larry" or "from the shell"?
[14:41:56] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[14:45:41] *** Quits: lichtkind (~lichtkind@p200300feb71065c0bc98954dd898c405.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:48:52] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:05:50] *** Joins: lichtkind (~lichtkind@p200300feb7106570bc98954dd898c405.dip0.t-ipconnect.de)
[15:12:18] <Geth> ¬¶ ecosystem: 893c7828d9 | (Elizabeth Mattijsen)++ | META.list
[15:12:18] <Geth> ¬¶ ecosystem: Fix MIME::Base64 on github ecosystem to last commit
[15:12:18] <Geth> ¬¶ ecosystem: 
[15:12:18] <Geth> ¬¶ ecosystem: While we're working on moving it to the zef ecosystem
[15:12:18] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/893c7828d9
[15:23:14] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[15:36:52] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:11:10] <tbrowder> using a . instead of, say, HERE, is kinda like poetry vs a tech doc
[16:12:01] <tbrowder> i'll stick with HERE, but . would be cool for golfers
[16:12:38] <tbrowder> fore \.
[16:22:17] *** Quits: lichtkind (~lichtkind@p200300feb7106570bc98954dd898c405.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[16:26:21] <moritz> (I don't plan to use it, just found it curious)
[16:36:15] *** Quits: sena_kun (~koto@94.142.239.45) (Remote host closed the connection)
[16:36:35] *** Joins: sena_kun (~koto@94.142.239.45)
[16:38:46] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[17:00:50] <tbrowder> it is curious, and kind of neat
[17:02:04] <tbrowder> is it smtp or mail that uses a . to end a transmission?
[17:04:06] <moritz> smtp
[17:06:21] <lizmat> ah  doing SMTP in a telnet session...   the memories  :-)
[17:08:02] <clarkema> Is it possible to call one grammar from another mid-parse?  For example, suppose you're parsing a web page and have an HTML grammar and a separate one for CSS
[17:15:32] <moritz> that's possible, yes. Rakudo does that interleaving quotes and code and regexes etc.
[17:15:54] <moritz> I believe the syntax is <Other::Grammar::entry_regex>, but I could be mistaken
[17:19:45] *** Joins: Altai-man (~koto@94.142.239.45)
[17:21:10] <clarkema> \m/ it works! Thanks moritz 
[17:21:23] <clarkema> I was so close as well, I'd been guessing at something like <Other::Grammer.parse>
[17:21:36] <clarkema> doesn't really make sense now I think about it
[17:22:37] *** Quits: sena_kun (~koto@94.142.239.45) (Ping timeout: 240 seconds)
[17:30:22] <clarkema> looks like the two parsers end up both triggering methods in the action class assigned to the top parser; is it possible to disambiguate that somehow?
[17:30:27] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:30:32] <moritz> well, one could also argue that <Other::Grammar.entry_regex> would be more fitting, after all the :: denotes namespace nesting, and the regex isn't part of the namespace table (but of the method table)
[17:30:56] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[17:31:37] <moritz> re action methods, I don't know; passing a separate action class to the sub-grammar seems more sensible to me
[17:32:32] <clarkema> that would make the most sense if possible
[17:33:14] <moritz> you'd need to do this like  token call_other { { my $other-match = Other::Grammar.subparse($/.orig, :continue($/.to)); $m } } or so
[17:36:05] <moritz> I'm not entirely certain how to indicate the the outer grammar should be continue parsing where the inner left off
[17:39:19] <clarkema> hmm, yeah, i've got it parsing the inner grammar (using :pos($/.to)), but the outer grammer needs to be aware of what's been consumed in that case
[17:43:32] <moritz> in the worst case, you could have it followed by something like (.*?)<?{ $0.to == $inner_match.to }> 
[17:45:05] <clarkema> I'm having a look through the rakukdo source to see if I can find examples of this kind of madness
[17:49:21] <moritz> I suspect that rakudo uses some lower-level APIs, since its grammars are actually NQP grammars
[18:20:24] *** Joins: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net)
[18:20:35] *** Quits: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net) (Client Quit)
[18:27:56] <clarkema> something odd is going on
[18:28:13] <clarkema> I can skip over the consumed characters with (.*? <?{ $/.pos == $m.to }>)
[18:28:51] <clarkema> I thought I'd try to do something like    . ** { $inner.to - $/.pos }  but that fails
[18:29:18] <clarkema> .. at the same point (immediately after the inner match) also fails, and I know there is more than one character available
[18:30:17] <clarkema> . succeeds, matching a character that was a lookbehind match in the outer grammer, and the first character of the match in the inner grammar
[18:36:43] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[18:49:18] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:02:57] <clarkema> well, that was an adventure
[19:03:01] <clarkema> It works now, thanks moritz 
[19:22:02] <moritz> you're welcome
[19:23:25] *** Joins: curiosa (~curiosa@37.166.47.133)
[19:25:03] <curiosa> One difficulty I find when writing a Raku grammar is where should be the limit of using dynamic variables while parsing, and how much to put into Actions instead of the Grammar
[19:25:05] <tellable6> 2022-02-09T02:32:26Z #raku <guifa> curiosa: if you're also going to be using the default whitespace, you'd redefine it similarly to what tonyo has
[19:25:26] <curiosa> guifa: thank you I've done that way
[19:25:28] <tellable6> curiosa, I'll pass your message to guifa
[19:26:30] <curiosa> what I mean is that dynamic variables fit in extremely well in the design, and are extremely useful for instance to provide warnings or other feedback
[19:27:27] <curiosa> but then I am left wondering if I shouldn't just use them and load the info directly in match object, instead of replicating work in the Actions
[19:28:27] <moritz> the answer is pretty simple: dynamic variables are scoped to a rule and (recursively) all of its subrules. If that's the scope you need, a dynamic variable is almost always best
[19:29:13] <moritz> if you want to put data into the action object, ask yourself: can I still parse with this grammar in the absence of an action? If the answer is "no", that might not be the best approach
[19:30:26] <moritz> (this heuristic might not quite work when you parse something with declarations that influence the rest of the parse)
[19:30:29] *** Joins: andinus (andinus@tilde.institute)
[19:30:40] <curiosa> what would be the situation where you surely need an action to solve a parsing problem? Maybe I just didn't study the right science or I suffer from dunner gruger effect, but it feels to me that you can always parse without actions?
[19:32:06] <moritz> the prime example is raku itself: code like 'use MyModule; say 1 <+> 2'; can only be parsed successfully if you actually *execute* the 'use MyModule;' that imports the infix:¬´<+>¬ª operator
[19:33:02] <moritz> and to execute the 'use' statement, you have to actually run the code, which (in a sensible compiler design) happens in/through the actions, not the grammar itself
[19:33:36] <curiosa> ah, so actions can provide feedback to the grammar, how, through dynamic variables?
[19:34:00] <moritz> that's the easiest case
[19:34:08] <curiosa> more basic question: are actions called while parsing, or after it?
[19:34:32] <moritz> and there's crazy shit like mixing roles with additional rules/regexes/mutlis into the grammar while it's parsing
[19:34:42] <moritz> actions are called while parsing
[19:35:11] <moritz> if you have token a { <b> 'c' }, then the action for <b> is run before 'c' is parsed
[19:35:49] <curiosa> wow that's powerful
[19:35:49] * moritz promptly considers an "advanced" addenunm to his parsing book
[19:36:32] <curiosa> please do, I think that the current docs don't do the honors to Raku enough, but don't take it as a critics it is a lot of work I understand it
[19:38:23] <curiosa> if you read the docs you get the impression that actions are there as a convenient way to transverse the parse graph
[19:48:34] <moritz> that is indeed one of their functions
[19:51:13] *** Quits: curiosa (~curiosa@37.166.47.133) (Quit: Client closed)
[20:03:15] *** Joins: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::49)
[20:07:21] *** Quits: yonnybg (~yonnybg@45.32.191.75) (Ping timeout: 256 seconds)
[20:19:10] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0:713a:ad1d:dd0:bdcc) (Remote host closed the connection)
[20:19:28] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:980:dccb:621a:6731)
[20:28:54] *** Quits: [Coke] (~coke@172.58.238.172) (Ping timeout: 250 seconds)
[20:34:58] *** Joins: curiosa (~curiosa@37.166.47.133)
[20:42:04] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:46:24] *** Joins: [Coke] (~coke@172.58.236.16)
[20:55:56] *** Quits: curiosa (~curiosa@37.166.47.133) (Quit: Client closed)
[21:08:33] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 256 seconds)
[21:29:30] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2022/02/09/fuzzy-commands/
[21:38:06] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:39:35] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:29:05] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[22:41:14] *** Joins: Guest9360 (~Guest93@136.50.215.234)
[22:41:25] <Guest9360> I'm trying to install Raku on Linus per the instructions outlined at https://raku.guide/#_installing_raku and it breaks on the final step.¬† I receive this message:¬† Can't open perl script "Configure.pl": No such file or directory.¬† Any suggestions?
[22:43:21] <Guest9360> Should I try again, later?
[22:43:44] <El_Che> try maybe these linux packages https://github.com/nxadm/rakudo-pkg#os-repositories?
[22:44:38] <moon-child> Guest9360: I don't think Linus will appreciate that
[22:46:12] <ugexe> that is for building rakudo star, which you probably don't want to do
[22:46:33] <ugexe> Guest9360: ^
[22:46:47] *** Quits: Guest9360 (~Guest93@136.50.215.234) (Quit: Client closed)
[22:48:52] <ugexe> my preference is https://rakubrew.org/
[22:51:06] <ugexe> `rakubrew build moar-2020.10 && rakubrew switch moar-2020.10 && rakubrew build-zef`
[22:51:45] <ugexe> `rakubrew build moar 2020.10` rather
[22:52:17] <ugexe> my preference for building from source anyway
[23:00:17] <Geth> ¬¶ doc: f5f26bd447 | (JJ Merelo)++ | doc/Language/nativetypes.pod6
[23:00:17] <Geth> ¬¶ doc: Adds pointer to index, closes #4028
[23:00:17] <Geth> ¬¶ doc: 
[23:00:17] <Geth> ¬¶ doc: Also adds a bit of introduction
[23:00:17] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f5f26bd447
[23:00:20] <linkable6> Link: https://docs.raku.org/language/nativetypes
[23:01:09] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:03:28] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[23:04:09] <Geth> ¬¶ doc: 1fc1d1ebc4 | (JJ Merelo)++ | doc/Language/nativecall.pod6
[23:04:09] <Geth> ¬¶ doc: Fixes syntax error closes #4027
[23:04:09] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/1fc1d1ebc4
[23:04:12] <linkable6> Link: https://docs.raku.org/language/nativecall
[23:04:58] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:10:26] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::49)
[23:11:57] *** Quits: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::49) (Ping timeout: 240 seconds)
[23:14:37] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::49) (Ping timeout: 240 seconds)
[23:20:39] <Geth> ¬¶ doc: 48b3951f5c | (JJ Merelo)++ | 2 files
[23:20:39] <Geth> ¬¶ doc: This place is probably better for definition
[23:20:39] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/48b3951f5c
[23:22:51] <Geth> ¬¶ doc: 736519413f | (JJ Merelo)++ | doc/Language/nativetypes.pod6
[23:22:51] <Geth> ¬¶ doc: Add link
[23:22:51] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/736519413f
[23:35:38] <[Coke]> did JJ force push!?
[23:38:10] <[Coke]> ah, whew.
[23:41:49] <Geth> ¬¶ doc: 50f4853bef | Coke++ | doc/Language/nativetypes.pod6
[23:41:49] <Geth> ¬¶ doc: typo
[23:41:49] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/50f4853bef
