[13:04:07] * Orbstheorem uploaded an image: (4134KiB) < https://libera.ems.host/_matrix/media/r0/download/orbstheorem.ch/zduWRqRazroYtAqzfdoZEgET/img_20220121_103338.jpg >
[13:04:17] <Orbstheorem> I should start a collection...
[13:12:08] <Notkea> wtf
[13:17:01] <afontain[m]> haha
[13:17:05] <afontain[m]> and you still have the old one?
[13:20:57] <Orbstheorem> Yes
[15:09:49] <Orbstheorem> TIL: `sudo journalctl -u foo.service --since=-5min -f > $(tty) <&-`
[15:52:09] * Orbstheorem uploaded an image: (4229KiB) < https://libera.ems.host/_matrix/media/r0/download/orbstheorem.ch/vsfMOXearlZnyZHEDorWMBwF/img_20220121_132127.jpg >
[15:52:30] <Orbstheorem> Funny thing, my shirt has an NFC tag...
[15:54:32] * Orbstheorem uploaded an image: (51KiB) < https://libera.ems.host/_matrix/media/r0/download/orbstheorem.ch/MKWOrxncXvuCcFZZRRZBweFV/screenshot_20220121_132416_ch_thumbnail_1200.jpg >
[15:54:34] <Orbstheorem> nu: ^^
[15:54:49] <Notkea> <Orbstheorem> "TIL: `sudo journalctl -u foo...." <- what does this do?
[15:55:11] <Orbstheorem> Pipe logs to the current tty, while you keep using the console.
[15:56:30] <Orbstheorem> s/Pipe logs to the current tty, while you keep using the console./Pipe logs to the current tty in the background, allowing you to keep using the console and immediately see the logs on your screen./
[16:08:48] <Orbstheorem> Does anybody know how to make NFC tags?
[16:08:51] <Orbstheorem> afontain: maybe?
[16:15:08] <afontain[m]> nope
[18:15:23] <typedef[m]1> I finally got some time to try out borgmatic, and it looks great
[18:45:47] <LucasCrijns[m]> I am glad to hear that
[18:46:30] <LucasCrijns[m]> I really like the fact that you can transparently use multiple storage backends. Do you use the systemd timer?
[20:05:10] <Orbstheorem> How's the experience of backuping postgres?
[20:06:49] <typedef[m]1> <LucasCrijns[m]> "I really like the fact that..." <- I think I will
[20:07:12] <typedef[m]1> Orbstheorem: Good, as long as you don't use pg_dumpall like I used to do
[20:07:28] <Orbstheorem> Why?
[20:07:36] <typedef[m]1> Single threaded
