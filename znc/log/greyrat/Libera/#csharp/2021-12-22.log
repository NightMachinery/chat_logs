[00:00:30] *** Quits: Assault (~Assault@87-95-55-3.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[00:05:28] * MatthiasVance defused a virtual bomb today
[00:11:27] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:bcc0:c482:6957:eca1)
[00:16:47] * bomb commits an epic fart
[00:17:34] *** Joins: ezio (~ezio@user/ezio)
[00:21:24] <Ameisen> https://bit.ly/3J28GR8
[00:21:31] <Ameisen> I'm surprised by the differences in them, as they're all common paradigms...
[00:23:06] <bomb> L bit.ly
[00:23:11] <bomb> why?
[00:24:05] <jonp> Ameisen: wow, didn't expect M0() to be so yuge
[00:24:19] <jonp> note that M3() includes a `call`
[00:24:48] <jonp> Ameisen: what's `M4(string s) => string.IsNullOrEmpty(s)` do?
[00:26:49] <teegee> does anyone have feelings about prism library?
[00:26:57] <teegee> for wpf
[00:27:32] <bomb> I'd just use plain WPF
[00:27:56] <teegee> for wpf/mvvm
[00:28:26] <bomb> Am I joke to you?
[00:29:13] <teegee> no joke
[00:30:09] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[00:32:04] <teegee> what about the mvvm toolkit? surely you don't want to reinvent all the wheels it brings
[00:33:56] <bomb> WPF is just perfect as is
[00:34:07] <bomb> please don't add more complexity
[00:34:22] <bomb> “Simplicity is a great virtue but it requires hard work to achieve it and education to appreciate it. And to make matters worse: complexity sells better.”
[00:34:57] <teegee> I do appreciate simplicity
[00:39:36] <bomb> on the other hand, teegee
[00:39:50] <bomb> we know jonp here and jonp knows the maintainers of that Prism thing
[00:40:01] <jonp> i'm not familiar with Prism
[00:40:01] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[00:40:07] <bomb> if a problem occurs, we can directly call those people
[00:40:11] <MichaelLong> libraries, libraries, libraries.
[00:40:17] <bomb> or better, visit their homes.
[00:40:20] <jonp> turtles all the way dow
[00:40:22] <jonp> n
[00:41:06] <teegee> yeah, I'm totally on board with that! Merry Christmas, and can you fix my bug ;)
[00:41:09] <bomb> and I'm in dire need of a back scratching rake.
[00:41:50] <_Shurik_> bomb: try hair brush, you will thank me
[00:42:05] <bomb> _Shurik_ do I look like I have hair?
[00:43:08] <jonp> bomb: yes?
[00:43:15] <jonp> it's not like there are images on irc
[00:43:24] <bomb> not on my head, friend. not on my head
[00:46:44] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[00:48:20] <bomb> https://www.youtube.com/watch?v=mngtcfcaVrI
[01:05:44] <sysRPL> my 2007 dore 2 duo laptop is still a very good computer
[01:06:09] <_Shurik_> Dora the Explorer edition?
[01:06:14] <sysRPL> 2.5ghz, 8gb ram, ssd, 8600M 512MB Geforce integrated GPU
[01:06:29] <sysRPL> it runs starcraft 2 at 50fps solid
[01:07:47] <sysRPL> ah yes, core 2 duo
[01:09:30] <sysRPL> some liquidator sells this model brand new for $20 a pop
[01:09:46] <sysRPL> minus a few parts
[01:10:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:10:25] <sysRPL> but they are new never used 2007 sore 2 duo laptops still in plastic
[01:10:34] <sysRPL> sheesh .. core 2 duo
[01:10:43] <bomb> Core was a thing in 2007?
[01:10:47] <MichaelLong> great that old stuff still used reasonably
[01:11:02] <sysRPL> core 2 duo was a thing in 2007 yes
[01:11:30] <MichaelLong> I also still use my 2015 ThinkPad T460p
[01:11:39] <sysRPL> "The Core 2 processor line was introduced on July 27, 2006,[3] comprising the Duo (dual-core) and Extreme (dual- or quad-core CPUs for enthusiasts), and in 2007, the Quad (quad-core) and Solo (single-core) sub-brands.[4]"
[01:15:17] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 240 seconds)
[01:15:38] <bomb> nice
[01:15:48] <blez> I had a core2duo ultrabook
[01:15:58] <bomb> I believe I had a Core Duo in 2007 yeah. E2200 or something
[01:16:08] <bomb> then I bought an Asus eeePC with first gen Atom
[01:16:27] <blez> atom was such a waste back then
[01:17:01] <bomb> it was okay. I could even play GTA San Andreas on it
[01:17:15] <bomb> 10 hour battery life was something unheard of for laptops
[01:33:02] <blez> Fork is simply the best Git client I've used on windows
[01:33:09] <Inge> +1 fork
[01:34:48] <blez> and it's cool that it's a family project. The dude is making the mac app and his girl is doing the windows app
[01:36:02] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:36:35] <bomb> why they didn't name it "Merge" for extra confusion?
[01:37:21] <bomb> blez heh, I knew they're Russian
[01:37:29] <bomb> only Slavic chicks can code.
[01:43:37] *** Quits: kobo (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se) (Ping timeout: 240 seconds)
[01:44:17] <blez> bomb and chinese, I guess
[01:58:43] <brianonymous> i have an XPS M1730 downstairs that still works.. core 2 duo
[01:59:00] <brianonymous> 17lbs
[02:00:44] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:03:08] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:bcc0:c482:6957:eca1) (Ping timeout: 252 seconds)
[02:05:21] <bomb> blez that too yeah. rest are traps
[02:09:01] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:12:58] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[02:23:56] <bomb> MaNa2k your not to old! https://old.reddit.com/r/WeAreTheMusicMakers/comments/gvly9d/a_list_of_musicians_who_were_a_bit_older_when/
[02:27:13] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[02:28:10] *** Quits: ezio (~ezio@user/ezio) (Ping timeout: 256 seconds)
[02:29:58] <Lukky> *sigh*... people working on issue tracking are in reality zombies, whose primary reflex is to automatically deflect ANY responsability, even when it's clear that the issue is with the software... fortunately, I'm now off for the holidays... lalalala...
[02:32:50] <bomb> people are dying Lukky is that your concern??
[02:33:31] <Lukky> people have been dying for millions of years, so no, it's not my concern :-D
[02:37:03] <edcba> people are million years old ?
[02:37:07] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 268 seconds)
[02:37:23] <bomb> no, they're having a slow death of millions of years
[02:37:35] <bomb> long covid, I suppose.
[02:39:13] <edcba> no i mean humans are not that old
[02:39:33] <edcba> but yeah depending on how you define ppl million years looks ok
[02:41:22] *** Joins: lepe1 (~lepe@85-76-11-168-nat.elisa-mobile.fi)
[02:41:22] *** Quits: lepe1 (~lepe@85-76-11-168-nat.elisa-mobile.fi) (Changing host)
[02:41:22] *** Joins: lepe1 (~lepe@user/lepe)
[02:41:29] <bomb> archaic humans are that old
[02:43:59] *** lepe1 is now known as lepe
[02:45:08] <bomb> like JakeSays kekekeke
[02:56:11] *** Joins: ezio (~ezio@user/ezio)
[03:15:11] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[03:50:48] <bomb> I'm going to watch this movie: https://en.wikipedia.org/wiki/Beautiful_Noise_(film)
[03:53:56] <Ameisen> jonp: https://tinyurl.com/2p9h24t6
[03:54:03] <Ameisen> still inferior to comparing against the Length.
[03:54:28] <Ameisen> s == "" is one of the most common ways to check if a string is empty that I've seen, and the codegen there is just... atrocious.
[03:54:35] <jonp> kinda; M4() is superior if s can be null, and you don't want to NRE
[03:54:38] <Ameisen> It's bad enough that I really think I need to report it.
[03:54:45] *** Quits: bomb (~bomb@user/bomb) (Quit: <3)
[03:54:54] <jonp> nullable reference types kinda/sorta address that complaint, though
[03:55:02] <edcba> i thought M0 should compile to M1 ?
[03:55:11] <jonp> but i still find myself reaching for string.IsNullOrEmpty() often
[03:55:12] <jonp> edcba: nope
[03:55:28] <jonp> edcba: "" is a string constant, which is *per-assembly* (wee!)
[03:55:49] <jonp> while `string.Empty` *isn't* a string constant, it's a readonly value
[03:56:07] <edcba> hmm
[03:56:13] <jonp> though seems a tad odd that M1() doesn't pull in string.operator==()
[03:56:37] <Ameisen> jonp: https://tinyurl.com/2p8v3bmt - questionable.
[03:56:55] <Ameisen> I think that MN2's output is better than MN0
[03:57:19] <jonp> who writes MN1()?
[03:57:24] <Ameisen> I just did.
[03:57:26] <jonp> MN0 is the reference point
[03:57:26] <Ameisen> :P
[03:57:33] <edcba> anyway tomorrow is still not the day i care about that kind of perf
[03:58:04] <jonp> Ameisen: MN0 is shorter, code-wise
[03:58:08] <jonp> 13 bytes, not 15
[03:58:19] <Ameisen> edcba - I believe that in ME0, it's literally creating another string object to compare against...
[03:58:23] <jonp> odd that MN0 doesn't have a `ret` though
[03:58:33] <Ameisen> it does. It jmps backwards.
[03:58:54] <jonp> ah. missed that.
[03:59:14] <Ameisen> well, technically it jumps forwards... which confuses me
[03:59:28] <Ameisen> I'm guessing it is meant to be a negative value. That, or it's jumping into _another_ function.
[03:59:55] <Ameisen> oh, wait, my brain is dumb
[04:00:05] <Ameisen> I'm used to looking at raw assembly from other stuff. Those are line numbers/tags
[04:00:11] <Ameisen> :D
[04:00:33] <Ameisen> the better question: why is it performing a relative jump back to the return instruction instead of just returning
[04:00:59] <jonp> because some optimizer thought that was better
[04:01:08] <Ameisen> but... I cannot think of any time it would be better.
[04:01:22] <Ameisen> ret is a smaller instruction, and there's one less jump which is just a meaningless instruction
[04:01:43] <edcba> !(s is string t && t.Length >0)
[04:02:00] <Ameisen> that's basically what MN2 does - it's very similar (though not the same) but has a ret at the end
[04:02:45] <Ameisen> I'm not sure what would be faster, though - the conditional jump at L0009, or the sete at L0009.
[04:03:18] <Ameisen> edcba - that generates nearly the same code as MN2
[04:03:32] <Ameisen> but with a setle instead of a sete.
[04:03:55] <Ameisen> if you change it to t.Length != 0, it generates the _exact_ same code
[04:04:27] <edcba> well i don't want those negative length strings !
[04:04:42] <Ameisen> it's more efficient to do s.Equals("") than s == ""...
[04:04:49] <Ameisen> >:|
[04:09:24] <Ameisen> https://tinyurl.com/bdcn4a24
[04:10:00] <brianonymous> i think to truly say that, youd have to also include the further jmp code
[04:10:21] <Ameisen> that both jump to the same offsets, so they're calling the same methods
[04:11:01] <Ameisen> s.Equals("") just does a lot less work to get to that point
[04:11:50] <edcba> (""+s)==""
[04:12:13] <edcba> wait it's not #js here ?
[04:13:34] <Ameisen> I don't want to set up firefox or chrome to dump the JIT assembly for js :|
[04:16:08] <brianonymous> the fastest path for both those dawgs seems pretty similar
[04:17:21] <Ameisen> it is. I just want to know why there's a slow path
[04:17:36] <brianonymous> yeah, thats a pretty interesting question
[04:18:07] <Ameisen> the first three instructions make me think that... it's doing a value comparison against an empty string object at that address
[04:18:14] <brianonymous> i assume that 3020 val is just a pointer to some empty string?
[04:18:47] <brianonymous> yeah
[04:18:57] <Ameisen> when they're equal, they jump down, set the result register (a) to 1 (true), and jump to 1d... where they then add 8 to the stack pointer (alignment?) and then return.
[04:19:45] <brianonymous> yeah, looks like they are just discounting that first push
[04:19:55] <Ameisen> past anything else, checking if a string is empty is _such_ a common operation that I am flummoxed that these don't just have hardcoded optimized patterns in place
[04:20:25] <Ameisen> maybe that's why they won't add an Empty/IsEmpty property to String :P
[04:21:03] <brianonymous> so step one looks like a compare to a "".. the next seems to be a null test
[04:21:13] <Ameisen> line 10 is doing a null check, I believe
[04:21:17] <brianonymous> yeah
[04:21:45] <edcba> compare lengths, then compare length to 0
[04:21:48] <edcba> i guess
[04:21:57] <Ameisen> if it's null, it sets a to 0 (false), aligns the stack, and returns. OTHERWISE it does a bunch of other stuff against the empty string
[04:21:57] <sysRPL> what's wrong with IsNullOrWhiteSpace?
[04:22:06] <jonp> it does more work
[04:22:12] <Ameisen> yeah, L15 is the length compare to 0
[04:22:18] <sysRPL> IsNullOrWhiteSpace doesn't work?
[04:22:23] <Ameisen> L22 on is a bit odd.
[04:22:33] <Ameisen> I don't know what fields it is reading
[04:22:45] <Ameisen> it's comparing something to something in the empty string.
[04:23:15] <edcba> type ?
[04:23:52] <brianonymous> so yeah, seems like, "" test, null test, len test, and yeah, wtf is this doing
[04:24:16] <brianonymous> im making the assumption that the string data itself is rcx+0xc
[04:24:39] <sysRPL> has anyone here implemented their of IIdentity user class derived from ClaimsPrincipal?
[04:25:03] <brianonymous> and its sets r8 to the same spot
[04:25:08] <sysRPL> i long time ago i wrote my own User class for asp.net security and was reviewing it today
[04:25:43] <brianonymous> oh, and then it calls equal?
[04:25:56] <brianonymous> so "", null, len, equal?
[04:26:08] <Ameisen> so, the fast path is never going to be taken, though, unless s is actually the _same_ object
[04:26:17] <Ameisen> in fact... it will fail every test until the len test
[04:26:30] <bpmedley> sysRPL : public class BlahDbContext : IdentityDbContext<AccountEntity>  <-- Yes, this is basically what I do
[04:26:42] <brianonymous> and thats assuming rcx+8 = len
[04:26:52] <Ameisen> according to ME6 it is
[04:26:55] <brianonymous> ah
[04:27:17] <sysRPL> okay ... i start with this -> https://gist.github.com/sysrpl/970207520f509d70602b724d21262c76
[04:27:23] <Ameisen> there appears to be a pass missing to know that most of the tests are unnecessary
[04:27:43] <Ameisen> oh, wait
[04:27:48] <brianonymous> or, could it be that "" just resolves always to the same obj?
[04:28:06] <Ameisen> the heck...
[04:28:26] <sysRPL> and continue with this -> https://gist.github.com/sysrpl/b0b6ae751ba7cc9d88d21168226d2e73
[04:28:27] <Ameisen> so L15 compares the length to 0, and if it is zero, it then does the... weird huge comparison
[04:28:44] <Ameisen> so the case where it's an empty string but not the same object as ""... takes the slowest path
[04:29:08] <Ameisen> if it's not an empty string, it _just_ stops at L21.
[04:29:28] <sysRPL> and i rely upon HttpContext to pass the user between page class implementations and various components
[04:29:29] <brianonymous> do a dump of actually using it.. Im curious if it gets loaded from a mem constant (the "")
[04:29:33] <Ameisen> I am also suspicious of how predictable these branches are.
[04:30:17] <sysRPL> which also means i have to use .ConfigureServices(services => services.AddHttpContextAccessor())
[04:30:26] <sysRPL> is that bad?
[04:30:27] <Ameisen> o_O
[04:30:38] <edcba> hmm and why doesn't it do something like mov eax,1 je L001d instead of jumping everywhere ?
[04:30:44] <Ameisen> well, that test didn't work
[04:31:11] <Ameisen> if you just do string foo = "" and pass it to ME0... it just emits "mov eax, 1; ret"
[04:31:17] <Ameisen> yay for folding
[04:31:22] <brianonymous> lol
[04:31:23] <sysRPL> that is, if it's not clear, pages and other components need global access to the current HttpContext in order to check user rights
[04:31:49] <sysRPL> and it would seem microsoft doesn't think that is a good idea
[04:31:59] <Ameisen> https://tinyurl.com/yckmktyd
[04:32:00] <sysRPL> since they removed it
[04:32:01] <Ameisen> that one's odd.
[04:32:12] <Ameisen> I don't understand the reason why L0 and L2 exist in ME0Test
[04:32:25] <Ameisen> it jumps to a mov eax 1, then jumps to a ret
[04:32:37] <Ameisen> I'm keeping that because that's pathological bad codegen (so I can report it)
[04:32:55] <edcba> yeah so much asm for so few c#
[04:32:57] <brianonymous> if i was to guess, its probably some kinda template against literal bad code
[04:33:32] <brianonymous> cuz it is right at one level... eax will = 1
[04:34:11] <Ameisen> For fun and just to see what compilers would do, I actually took the AVR instruction set and wrote a really flat VM in C++, and the instructions all to interact with the registers in an array, just to see how well the compiler would optimize them away. It actually did surprisingly well.
[04:34:28] <Ameisen> It still did terribly, but it was able to still do folding, dead code elimination, and was able to remove expressions that had no side-effects
[04:34:31] <edcba> what is 0x00007ffcb0d4afa0 btw ?
[04:34:48] <Ameisen> a magical function or jumpboard that we know nothing about
[04:34:57] <brianonymous> edcba: probably object.equals
[04:35:02] <edcba> yeah
[04:35:02] <Ameisen> ^
[04:35:12] <Ameisen> that or an exception handler.
[04:35:18] <Ameisen> well, exception _thrower_
[04:35:27] <sysRPL> bpmedley: do you store user names and passwords in your database?
[04:36:14] <Ameisen> no, it's not exceptions. That actually uses int3
[04:36:18] <Ameisen> hmm
[04:36:31] <Ameisen> i've never actually looked at the codegen for C#'s exception throwing before. Neat.
[04:36:42] <edcba> yeah it's object.equals if you check where it is used
[04:36:43] <brianonymous> i wonder if the last stage of the me0 is just an unboxing method
[04:37:04] <bpmedley> sysRPL : Excuse me, I use a Policy based on Roles.  I got ClaimsPrincipal and IdentityDbContext mixed up.
[04:37:08] <brianonymous> especially considering lea
[04:37:32] <edcba> who cares about Lea, she isn't there anyway
[04:37:38] <brianonymous> :D
[04:37:52] <bpmedley> sysRPL : However, I do have experience storing login credentials in the database.
[04:37:56] <sysRPL> in my i have roles and page view and page action is is based on them roles
[04:38:12] <sysRPL> are you storing usnmaes and password in the db?
[04:38:16] <edcba> bpmedley: like sushi, raw !
[04:38:36] <bpmedley> sysRPL : Yes.  Via AspNetUser tables and friends.
[04:38:47] <sysRPL> you shouldn't store passwords
[04:39:00] <bpmedley> What should be done?
[04:39:08] <sysRPL> store hashes only
[04:39:12] <bpmedley> They are
[04:39:22] <bpmedley> I am not storing plaintext passwords..
[04:39:27] <Ameisen> Object.Equals is 0x00007ffcbd620420
[04:39:31] <sysRPL> it shouldn't be a password hash
[04:39:44] <sysRPL> i should be a weird things hash that includes the password
[04:40:21] <bpmedley> IdentityResult result = await UserManager.CreateAsync(account, dto.Password)
[04:41:12] <sysRPL> in my implementation the hash is a combination of the user name, the password, and a secret key, then run together through a hashing algorithm and stored somewhere
[04:41:26] <bpmedley> Which hashing algorithm?
[04:41:52] <sysRPL> just something to create a really long ass string ... klike sha-256
[04:42:28] <sysRPL> secret key is a long hash as well
[04:42:54] <sysRPL> but secret key is not stored in the dabase
[04:42:54] *** Quits: Kog (~kog@about/csharp/kog) (Remote host closed the connection)
[04:42:56] <bpmedley> https://dusted.codes/sha-256-is-not-a-secure-password-hashing-algorithm
[04:43:00] <edcba> use password aimed hash algotrithms
[04:43:04] <sysRPL> let me check my sha
[04:43:10] <jonp> use rot26
[04:43:11] <Ameisen> https://tinyurl.com/yxjtd4vq
[04:43:16] <Ameisen> that one includes object.Equals' address
[04:43:17] <sysRPL> i am using HMACSHA256
[04:43:17] *** Joins: Kog (~kog@about/csharp/kog)
[04:43:17] *** ChanServ sets mode: +v Kog
[04:43:29] <edcba> jonp: better twice than not !
[04:43:38] <jonp> it's twice as good as rot13!
[04:43:45] <Ameisen> it's _near_ it address-wise, but I don't know exactly what it is
[04:44:53] <bpmedley> sysRPL : Why do you care if the password has been tampered with?
[04:44:56] <sysRPL> i don't think anyone could break HMACSHA256 using billions of attempts per second
[04:45:20] <sysRPL> because they'd have to run those billions of attempts per second on my server to do that
[04:46:07] <sysRPL> and if they had my server in their possession trying to crack a password has would be counter productive
[04:46:20] <brianonymous> Ameisen: another thing i dont fully grok, is that after that final phase, the 'far' jump, it would set eax to 1 on that ret no matter what.. so wtf is going on there?
[04:46:34] <Ameisen> I don't know what the delegate* syntax is for an instance method
[04:47:24] <sysRPL> bpmedley: i don't have the password stored at all, do i don't care about anyone tampering with passwords
[04:47:26] <edcba> brianonymous: it's the return true
[04:47:32] <sysRPL> * so i don't
[04:47:33] <brianonymous> edcba: but it always would
[04:47:42] <brianonymous> wheres the branch
[04:48:03] <Ameisen> probably in wherever it jumped beforehand
[04:48:12] <Ameisen> that function can ret on its own. It's a jmp, not a call
[04:48:12] <edcba> val = false; L0053: val = true; return val;
[04:48:16] <Ameisen> so it's the same stack frame, etc
[04:48:37] <Ameisen> my VMs do the same trick
[04:48:52] <Ameisen> little code fragments you jump into which act sort of like procedural merging at runtime
[04:49:14] <brianonymous> yeah, i guess im just missing that jmp context
[04:49:22] <Ameisen> I just haven't figured out what that jmp _is_
[04:50:29] <brianonymous> i mean, its gotta be string equals at *some* level :)
[04:50:33] <edcba> jmp is a bool returning function :)
[04:50:51] <Ameisen> that or it jmps somewhere else.
[04:52:03] <edcba> now i don't know call conventions so we can't really say about args
[04:53:30] <Ameisen> I'm just guessing that it's Win64
[04:53:56] *** Joins: kobo (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se)
[04:55:39] <edcba> isn't rax saved on stack just to be trashed in every case ?
[04:56:04] <brianonymous> i think it gets unboxed at 37
[04:57:40] <brianonymous> theres a lot of weirdness in there that would only make sense with that jmp code
[04:58:19] <edcba> yeah that jmp prevents a lot of optimisations probably
[04:58:29] <edcba> they just hate ppl that use == ""
[04:59:03] <Ameisen> I think that ...fa0 is a virtual caall
[04:59:12] <Ameisen> but since I cannot figure out the syntax to investigate that...
[04:59:29] <Ameisen> (IntPtr)(delegate* <object, object, bool>)new object().Equals; doesn't work.
[04:59:32] <edcba> read the memory at that place and disassemble it
[04:59:41] <Ameisen> not sure how to capture delegate-ptr an instance method
[05:00:49] <Ameisen> however, it is jumping, so I'm assuming it's not jumping into a true function anyways (or it would have to be jumping _after_ the prologue or at least just before the stack increased
[05:00:52] <Ameisen> )
[05:03:41] <brianonymous> wonder if you could cheat with the marshaller
[05:04:03] <Ameisen> L22 appears to be doing some kind of vtable lookuip
[05:04:38] <Ameisen> it's getting the address at the object's 0xC offset
[05:05:02] <Ameisen> it's doing the same with the empty string.
[05:05:13] <brianonymous> thats what i was guessing is either the data or a pointer to the data of the string
[05:05:57] <Ameisen> 3b is getting the Length value again, because just fetching it once isn't enough
[05:06:16] <Ameisen> it then... adds it to itself for some reason?
[05:06:26] <brianonymous> thats why i was thinking its an unboxing stage
[05:06:29] <Ameisen> oh, because chars are 2 bytes?
[05:06:49] <Ameisen> I bet that that jmp is going to memcmp
[05:06:54] <brianonymous> ah, that sounds right.. x2
[05:06:59] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[05:07:21] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[05:08:40] <brianonymous> so like uhhh.. rdx = "" string meat, r8 = string meat, r8d = string meat len
[05:14:49] <Ameisen> hmm
[05:15:06] <Ameisen> memcmp is 0x00007ffcb0d4afa0
[05:15:59] <Ameisen> whichso, yup, that's a memcmp at L4e
[05:15:59] <brianonymous> thats unexpected
[05:16:12] <Ameisen> it's comparing the data
[05:16:27] <Ameisen> I tested that with public static bool CompareTest2(in ReadOnlySpan<char> a, in ReadOnlySpan<char> b) => MemoryExtensions.SequenceEqual(a, b);
[05:16:35] <brianonymous> oh, sorry i read that as memcopy
[05:16:42] <Ameisen> that generates a _Call_ to that address, though, not a jmp
[05:17:05] <Ameisen> but same thing here, effectively
[05:17:39] <Ameisen> ME0 is returning the result of memcmp, which makes sense. CompareTest2 is as well, though, so I dunno why it's doing more work. Looks like it just wants to clean up the stack
[05:18:17] <Ameisen> well, we've successfully analyzed 's == ""'
[05:18:34] <brianonymous> it was a lovely journey. still have questions tho
[05:18:44] <Ameisen> and have determined that if s is empty it takes a stupidly slow path
[05:18:55] <Ameisen> I love how it keeps going after determining that it's empty.
[05:19:15] <Ameisen> "Well, we know if it's not empty it's false, but if it is empty we better check the data against the empty string!"
[05:22:15] *** Quits: lepe (~lepe@user/lepe) (Read error: Connection reset by peer)
[05:22:30] <Ameisen> that is also the code it generates when you do a normal s == "" in a 'normal' function
[05:22:43] <Ameisen> where it cannot incredibly-trivially determine that s and "" are the same thing
[05:24:43] <brianonymous> now i wanna see the structure of a string object
[05:25:10] <brianonymous> the meaty one
[05:25:23] <jonp> "meaty one"?
[05:25:48] <brianonymous> its in memory representation
[05:28:40] *** Quits: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) ()
[05:28:46] <jonp> brianonymous: https://github.com/dotnet/runtime/blob/9a50493f9f1125fda5e2212b9d6718bc7cdbc5c0/src/coreclr/vm/object.h#L863-L960
[05:29:02] <jonp> see also: https://mattwarren.org/2016/05/31/Strings-and-the-CLR-a-Special-Relationship/
[05:29:48] <brianonymous> oh nice, thank you!
[05:30:04] <brianonymous> delicious information
[05:33:50] <jonp> brianonymous: though i think mono's impl is easier to understand, layout wise: https://github.com/dotnet/runtime/blob/9a50493f9f1125fda5e2212b9d6718bc7cdbc5c0/src/mono/mono/metadata/object-internals.h#L189-L193
[05:36:38] <brianonymous> yeah, thats a lot more straight forward
[05:44:08] <Ameisen> well, just looking at the output of that code, that's roughly what I expected.
[05:44:09] <brianonymous> it never crossed my mind that every object has a thread sync object..... until i think about lock()
[05:44:24] <jonp> which is arguably a mistake
[05:44:34] <Ameisen> string length is at offset 8, which is right after Object's PTR_MethodTable
[05:44:41] <jonp> yup
[05:45:20] <Ameisen> so, the string data itself is just... m_FirstChar, and then just whatever data happens to be past the object
[05:45:23] <Ameisen> which is UB as per C++
[05:45:51] <jonp> i don't think it's undefined per-se
[05:45:56] <jonp> you just need to be *really* careful with it
[05:46:04] <jonp> just like with "zero-length arrays"
[05:46:09] <Ameisen> it's undefined to even _have_ a pointer that is not at an object or one byte beyond it.
[05:46:13] <jonp> which is how mono represents the same idea
[05:46:16] <Ameisen> let alone dereference it.
[05:46:47] <Ameisen> I mean, the compiler will generally let you do it anyways because if they didn't, a lot of things would break.
[05:46:50] <jonp> the pointer is an object; it's the first char
[05:47:16] <Ameisen> Yes, and the only addresses that are not UB to even exist are the address of that char, and the element after it (whether it exists or not)
[05:47:31] <Ameisen> nothing else is known to the C++ (or C) abstract machine
[05:48:19] <Ameisen> now, I believe that it's fundamentally legal because they had to have allocated that memory, so the memory itself does exist (and is thus an object, likely a char array)
[05:48:41] <Ameisen> but accessing it like this would be UB because the abstract machine isn't aware that it is its own object, a part of StringObject (since m_FirstChar is part of it)
[05:49:24] <Ameisen> it's very confusing.
[05:49:45] <Ameisen> but accessing it as an array from m_FirstChar on would be UB.
[05:49:55] <Ameisen> but UB has never stopped anyone.
[05:50:35] <Ameisen> zero-length arrays at least tell the compiler what you're doing
[05:52:55] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Quit: Leaving)
[05:53:42] <brianonymous> thats why repeated manipulation of a string directly is naughtysauce
[05:55:49] <brianonymous> i think delphi followed a similar model
[05:56:16] <jonp> there's always BSTR's…
[05:56:35] <brianonymous> i havent seen one of those since activex
[05:56:51] <jonp> i'm thinking more the "memory layout" aspect of BSTRs
[05:57:56] <jonp> https://docs.microsoft.com/en-us/previous-versions/windows/desktop/automat/bstr#remarks
[05:58:16] <jonp> "even better", what `SysAllocString()` returns is a pointer *into* ^^
[05:58:35] <jonp> not the beginning; that's the length predfix.  It returns the pointer to the start of the Data string.
[05:58:59] <brianonymous> i kinda remember that.. so you could backup to len
[05:59:10] <jonp> you could, if you're mad. ;-)
[05:59:13] <brianonymous> lol
[05:59:17] <jonp> negative indexes are fun!
[06:09:07] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:16:31] *** Quits: Tazy (~Tazmainia@169-1-6-73.ip.airmobile.co.za) (Quit: Leaving)
[06:29:08] *** Joins: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[06:34:31] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:47:17] *** Quits: DIDAVISION (~dinowilli@168.194.162.252) (Ping timeout: 240 seconds)
[07:01:33] <JakeSays> BSTR's are just pascal strings
[07:09:12] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[07:12:20] <Ameisen> you're a Pascal String
[07:51:03] *** Joins: jinsun__ (~quassel@user/jinsun)
[07:51:20] *** Quits: jinsun__ (~quassel@user/jinsun) (Client Quit)
[07:52:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[08:04:37] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[08:07:28] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[08:37:19] <ezio> your mother was a hamster
[08:38:27] <ezio> Ameisen, that's extremely racist
[08:40:00] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:41:52] <Ameisen> I'll probably get around to filing a codegen report tomorrow
[08:42:07] <Ameisen> honestly, every way of checking if a string is empty should generate the same code - it should be a hardcoded pattern
[08:42:59] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[08:59:58] *** Quits: GunArm (~barrett@firewall.mitsi.com) (Read error: Connection reset by peer)
[09:01:13] *** Joins: GunArm (~barrett@firewall.mitsi.com)
[09:32:16] *** Joins: DiabloD3 (foobar@exelion.net)
[09:32:37] *** Quits: Diablo-D3 (foobar@exelion.net) (Ping timeout: 240 seconds)
[09:33:11] *** DiabloD3 is now known as Diablo-D3
[09:42:49] *** Joins: bomb (~bomb@user/bomb)
[10:08:59] *** Joins: _genuser_ (2fb823e8@67.205.143.82)
[10:09:02] <_genuser_> hey people.
[10:10:35] <bomb> yo
[10:10:57] *** Joins: Assault (~Assault@87-95-55-3.bb.dnainternet.fi)
[10:12:14] *** Quits: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) (Ping timeout: 268 seconds)
[10:13:34] <_genuser_> sup
[10:14:11] <bomb> I watched a movie about shoegaze
[10:23:56] *** Quits: ezio (~ezio@user/ezio) (Ping timeout: 268 seconds)
[10:26:20] <bomb> and my tongue burns due to citric acid overdose
[10:32:28] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:46:38] *** Joins: jinsun (~quassel@user/jinsun)
[10:50:40] <Ameisen> Has anyone ever proposed adding an 'IsEmpty' property to String, List, and such?
[10:53:27] <bomb> no
[11:00:40] <ki9a> String has String.IsNullOrEmpty & IsNullOrWhitespace
[11:00:56] <ki9a> ! list.Any() on enumerations.
[11:02:01] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Quit: Konversation terminated!)
[11:10:42] *** Joins: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[11:11:02] <bomb> moose https://i.imgur.com/gvIqATK.png
[11:11:21] *** Quits: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) ()
[11:11:24] <moose> Seems legit
[11:11:36] <moose> I've made more money since COVID started. I guess I am on the right side.
[11:11:56] * moose dives into a mountain of gold coins
[11:12:01] <bomb> are you a billionaire?
[11:12:04] <moose> Nope.
[11:12:20] <moose> But I am certainly not poor, broke, or whatever.
[11:12:22] <bomb> then you are not on the right side
[11:12:28] <bomb> you're still a worker
[11:12:36] <moose> I own multiple businesses.
[11:12:51] <moose> I am a full-time consultant for a company as well, my main job
[11:13:14] <bomb> yeah brag about that on IRC
[11:13:21] <bomb> we're all coconut farmers here
[11:13:27] <moose> It's not bragging, but I am not in the "worker" category IMO.
[11:13:40] <moose> Not that it's a bad thing. I am just saying I recognize that I am not being punished by COVID.
[11:13:57] <moose> Emotionally, socially, psychologically, sure... but not financially.
[11:14:10] <moose> Most people here make decent cash I assume, bomb.
[11:15:01] <bomb> I don't know moose that news article is all about you personally
[11:16:58] <moose> You seem triggered bomb
[11:17:27] <moose> It's not about me taking it personally, it's about me saying billionaires aren't the only ones doing better than poor people here.
[11:17:42] <moose> Society is divided. You are either broke as fuck or wealthy as shit it seems. No middle class in the US anymore.
[11:18:34] <moose> $60k / year used to be good now you are lucky if you can feel comfortable with basics. Either you live in an extremely expensive area and have no car or you live in a cheaper area have to fork out gas, insurance, car registration, tons of misc. taxes, and maintenance
[11:18:40] <bomb> no hard feelings. I'm just not interested in your narrow perspective
[11:18:55] <moose> It's actually a lot wider than your dogmatic approach to understanding the situation.
[11:19:18] <moose> Based on the stuff you're saying, it sounds like you think anyone who isn't a billionaire is suffering and broke.
[11:19:29] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[11:19:30] <moose> It's just not the case. I am sorry it doesn't fit your inflammatory agenda.
[11:20:52] <bomb> if we start putting words in each others mouths, it sounds like you're into farm animals
[11:21:52] <moose> How about you start speaking instead of just quacking and crying then.
[11:22:04] <moose> So much noise for a little goat but so little to offer.
[11:23:27] <bomb> I apologize I forgot you're dumb fuck
[11:25:20] <_genuser_> so that escalated fast guys.
[11:25:30] <moose> We're both just having fun with each other.
[11:25:42] <moose> Nobody is actually mad.
[11:26:13] <_genuser_> so apparently NY will try to make it a law that the gov can kidnap anybody not vaccinated.
[11:26:23] <_genuser_> rather arrest them in NY if they're not vaccinated.
[11:26:25] <_genuser_> indefinitely.
[11:26:36] <moose> I think the federal government already has such a procedure.
[11:26:48] <_genuser_> arresting people?
[11:26:49] <moose> But that'll be interesting to see it on a state level. More likely to get implemented and used.
[11:26:54] <bomb> riot time
[11:27:02] <moose> Yeah, the federal government can actually shoot people.
[11:27:14] <_genuser_> for not being vaccinated?
[11:27:32] <moose> They can work it that way, yes. If we declared a national cordon sanitaire, you wouldn't be allowed out of your house period. But they could make exemptions for vaccinated people.
[11:27:43] <bomb> not entire law enforcement are pro vaxx tho
[11:27:52] <moose> That's true.
[11:27:59] <_genuser_>  moose I see what you're saying. You're saying that existing laws can be used that way.
[11:28:14] <moose> _genuser_: Yeah. Not that there's a specific existing law that says it.
[11:28:24] <moose> Broad laws are quite flexible :p
[11:28:28] <_genuser_> this is specific to vaccines.
[11:28:35] <moose> Like, all vaccines, or just COVID?
[11:28:36] <moose> Got a link?
[11:28:45] <_genuser_> requiring vaccines for everything.
[11:28:50] <moose> That's sketchy
[11:29:24] <moose> I doubt most people will want to get an anthrax vaccine, but then also pneumonia... and so where's it stop? They'd have to make a mandated vaccine schedule for all people and then vary it by job types etc. Seems complex.
[11:29:38] <moose> Likely to just make everyone mad lmao
[11:30:39] <_genuser_> no, I meant requiring covid vaccine to do anything. public school, work, etc. etc.
[11:30:59] <_genuser_> I just saw it from someone in NY who posts in one of the trading rooms that I participate in.
[11:31:40] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:31:53] <bomb> Biontech guy said yesterday again that 3 dose not enough
[11:32:07] <_genuser_> https://www.nysenate.gov/legislation/bills/2021/a416
[11:32:12] <_genuser_> moose ^
[11:32:39] <bomb> you should better ignore the unvaccinated and focus on convincing the 4th dose
[11:32:50] <_genuser_> moose basically says "removal", so presumably you could remove people from public situation by either arresting them or quarantining them in their home.
[11:33:12] <_genuser_> without reading the whole thing, and probably after reading it too, I couldn't be sure. I just searched for the bill the guy mentioned.
[11:33:21] <moose> Thank you for the reputable link, it's really appreciated
[11:33:31] <moose> I was worried I'd see like "The End Times Magazine"
[11:33:42] <_genuser_> but we're in TX here, with a little bit more of a do it if you want type of approach. So I try not to get worked up over policy in other states.
[11:33:49] <_genuser_> moose lol the end times magazine.
[11:33:53] <bomb> > gov
[11:33:56] <bomb> > reputable
[11:34:13] <moose> Here's what I found when I tried to search the law
[11:34:15] <bomb> Trump was POTUS just a few months ago lol
[11:34:19] <moose> NOT REPUTABLE -> https://timenewsdesk.com/2021/12/arrests-of-the-unvaccinated-begin-in-new-york/
[11:34:51] <moose> This implies mass arrests and disappearances are occurring because they're not "showing their papers"
[11:35:07] <moose> bomb: Well he's not anymore, so it's like an uno reverse card!!1
[11:35:16] <moose> lol
[11:35:41] <_genuser_> Trump was POTUS over 11mo. ago. I wouldn't call it few.
[11:38:11] <_genuser_> so anybody seen the midnight sky? movie.
[11:38:21] <_genuser_> post apocalyptic something something.
[11:38:32] <moose> I think you mean he is still POTUS.
[11:38:34] <moose> Just not recognized.
[11:38:40] <moose> Because of the illegal Biden-controlled military coup.
[11:38:44] <moose> /s btw
[11:38:54] <_genuser_> lol, he said if runs in 2024, he might defeat the democrats a third time.
[11:38:59] <_genuser_> you're sounding along those lines, hehe.
[11:39:01] <moose> rofl that dude is delusional
[11:39:56] <moose> I swear he must have gotten hooked on 4chan and took that into his plan for becoming president.
[11:40:09] <moose> He is the embodiment of a supreme troll
[11:40:31] <_genuser_> don't mean to ruffle feathres, but given biden's focus, I kinda wish Trump was still running the show.
[11:40:57] <bomb> speaking of apocalypse, I think 200 years of revolution, democracy, nationalism, jingoism, fascism, communism, bla bla will end soon
[11:41:11] <bomb> we're all gonna be slaves and serfs for few feudal overlords
[11:41:12] <_genuser_> no way. If we get on blockchain, it will fix everything.
[11:41:17] <_genuser_> crypto gov't or something something.
[11:41:22] <bomb> except some peasant freemen like moose
[11:41:34] <_genuser_> oh moose will never let his freedman papers get lost.
[11:41:38] <moose> lol what bomb
[11:42:07] <moose> I am confused by what you mean feemen
[11:42:11] <bomb> with my luck track record, I'll probably end up being a property of moose's small farm
[11:42:34] <_genuser_> he'll gift you to his kids for christmas.
[11:42:45] <moose> bomb: I am very confused why you think I will become an overlord.
[11:42:53] <_genuser_> and you'll have to walk the dog and clean dog poop.
[11:43:02] <moose> I don't have pets.
[11:43:06] <moose> Pets are awful.
[11:43:18] <bomb> not overlord moose you're gonna be a free peasant
[11:43:25] <moose> What does that even mean
[11:43:42] <moose> Oh you mean in a feudal government scenario?
[11:43:42] <bomb> you're not belong to the landlord
[11:43:53] <bomb> instead you get to do farming your little farm
[11:43:54] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:44:02] <moose> I could be down with that. Farming is cool.
[11:44:06] <bomb> I think you need some caffeine
[11:44:11] <moose> I quit caffeine ages ago
[11:44:21] <bomb> I can tell
[11:44:33] <bomb> farming is cool indeed, I'd be a fucking serf
[11:45:19] <_genuser_> so moose will own a farm. with entrepreneurial luck, he'll probably find oil underneath the land too.
[11:45:39] <moose> bomb: Well that's rude to say that you can tell
[11:45:44] <moose> Why are you being so rude
[11:46:28] <bomb> on a second thought, being a serf is basically working out all day, right?
[11:46:44] <bomb> with enough nutrition and healthcare, that sounds like a quality living to me.
[11:47:10] <moose> That's the spirit
[11:47:43] <_genuser_> lol that's leadership. you just talked him into working day and night and being happy about it.
[11:48:40] <bomb> for real, I don't even need to do a good work
[11:48:57] <bomb> he owns me, what can he do? kill me? that's his loss
[11:49:17] <moose> As long as you farm enough food to feed more than yourself it's a win
[11:49:26] <_genuser_> he could assign you to cleaning the outhouse duties.
[11:49:57] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 240 seconds)
[11:50:46] <moose> Nobody wants to clean out the composting toilets
[11:51:51] <bomb> being hardworker won't save me from cleaning toilets anyway
[11:52:53] <bomb> you know what moose, as a reputable farm owner, you won't be able to enjoy the life as I will, because I won't have much social limitations
[11:53:24] <moose> At least I will be seen as useful by the dear leader and will receive the food when there are periods of rationing. You'll just be suffering with a higher work demand.
[11:53:36] <bomb> I can get drunk, have sex with fellow peasants, I don't know, smoke weed. I'm at the bottom of the social hierarchy after all
[11:53:45] <bomb> but you have too much to lose
[11:54:02] *** Joins: bin101 (~bin101@user/bin101)
[11:54:54] <_genuser_> lol you guys have easily settled into this post apocalyptic world role thing.
[12:09:47] <bpmedley> moose : Any of your businesses have landing pages?
[12:11:33] <moose> bpmedley: Two of them have websites and one is missing a landing page still lol
[12:11:46] <bpmedley> May I get urls?
[12:11:49] *** Joins: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[12:11:53] <moose> I avoid self-doxing on the IRC, sorry.
[12:12:11] <_genuser_> moose affiliate marketing?
[12:12:16] <_genuser_> or self-help guru?
[12:12:45] <moose> _genuser_: No. I run a health physics services company and a related materials recovery and consulting business.
[12:12:56] * _genuser_ googles "landing pages moose"
[12:13:32] <moose> I work with Ludlum Measurements and the NRC as a training provider as well.
[12:13:38] <_genuser_> lol, I just try consulting at my real job. apparently taking items off a backlog and finishing it in the sprint isn't called consulting.
[12:13:49] <moose> lol
[12:14:01] <bomb> nini
[12:14:03] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[12:14:33] <moose> Yeah, I say I consult for my main job because I move around a bit in teams.
[12:15:14] <_genuser_> oh wait I think I know you irl.
[12:15:18] <moose> Probably.
[12:15:26] <_genuser_> lol that was meant to create panic.
[12:15:33] <_genuser_> I can see you've mastered the basic level of zen.
[12:16:03] <moose> When I was in ##csharp like... ages ago... I actually was laughing about a professor I had in a class. He had done something crazy.
[12:16:10] <moose> Someone said "I am in your class" and they were just a few tables over.
[12:16:13] <moose> It was great.
[12:16:41] <_genuser_> I love the idea of consulting and being technology person, etc. etc. But I like the idea of having a 9-5 commitment only. Which if you're a real consultant, you can't do, not at least initially.
[12:16:55] <_genuser_> especially when you're growing your network and learning new things and finding project to do to create rep.
[12:18:38] <moose> Yeah I'm on call all the time
[12:18:47] <moose> Not for my regular job, but for my own businesses
[12:19:03] <moose> The work/life balance is ok, but I enjoy the work aspect of it a lot. The constant grind is enjoyable.
[12:19:33] <_genuser_> I thought about affiliate marketing for a bit. But mostly just been slack in getting it going. And the idea of it taking a while to pick up.
[12:20:55] <moose> Affiliate marketing can't be done profitably without getting green hat on it
[12:21:07] <_genuser_> green hat?
[12:21:08] <moose> and by that I mean using gray area techniques to profit heavily, almost illegal tactics
[12:21:39] <moose> I used to affiliate market when I was in college and I was spamming to achieve the things people say you can achieve out of it.
[12:22:08] <moose> I still know a lot of people who are into it, and they do things like automate account creation on dating apps to spam offers for pornhub trials and stuff.
[12:22:38] <moose> That's how you get the "earn thousands of dollars a day!" thing to become reality, but it's so hard and so competitive and you risk being sued
[12:24:19] *** Joins: Klinda (~superleag@user/klinda)
[12:24:25] <_genuser_> in fairness, I was thinking more along the lines of a content site. Where you post specific content (bad example - coding blog, this is already done heavily). And eventually put affiliate links and ads, etc.
[12:24:27] <_genuser_> the long way.
[12:24:46] <_genuser_> the proper way. take a good long while to build traffic. Which is why I said it wouldn't pay anything originally and I was just slack in even working on it.
[12:38:04] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:40:26] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[12:56:21] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[12:57:51] *** Joins: supajerm_ (~supajerm@gateway/vpn/pia/supajerm)
[12:58:20] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:59:10] *** Joins: lepe (~lepe@85-76-11-168-nat.elisa-mobile.fi)
[12:59:11] *** Quits: lepe (~lepe@85-76-11-168-nat.elisa-mobile.fi) (Changing host)
[12:59:11] *** Joins: lepe (~lepe@user/lepe)
[13:01:11] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Ping timeout: 268 seconds)
[13:11:29] <Nasp> https://twitter.com/kcimc/status/1473187106923028480/photo/1
[13:38:55] *** Quits: lepe (~lepe@user/lepe) (Read error: Connection reset by peer)
[13:55:22] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[14:02:52] *** Joins: Roughy (~mdaw45ns@user/roughy)
[14:32:26] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:11] *** Joins: csrf (~csrf@user/csrf)
[14:43:06] *** Quits: Assault (~Assault@87-95-55-3.bb.dnainternet.fi) (Read error: Connection reset by peer)
[14:55:18] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 260 seconds)
[14:58:18] <Tobbi_> Morning peasants.
[14:58:20] <Tobbi_> I overslept.
[15:00:04] <Tobbi_> People were actually looking for me.
[15:00:07] <Tobbi_> I'm impressed
[15:12:45] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:15:17] <MatthiasVance> I woke up at 7.30, then apparently fell asleep again?? At 8.30 my son woke up so I must've been midway through a cycle
[15:15:39] <MatthiasVance> Tobbi_: I'm also impressed that you overslept!
[15:16:46] <Tobbi_> :
[15:16:46] <Tobbi_> D
[15:16:53] <Tobbi_> Ah
[15:17:03] <Tobbi_> People sent me an e-mail asking me where I was.
[15:17:07] <Tobbi_> Luckily, no customers were looking for me.
[15:19:10] <MatthiasVance> "I was working remotely"
[15:26:44] <Tobbi_> That unfortunately does not work.
[15:26:52] <Tobbi_> We don't have VPN access anymore.
[15:26:56] <Tobbi_> Since moving
[15:33:18] <MatthiasVance> You don't have the Git repo locally?
[15:33:26] <Tobbi_> locally == my work PC.
[15:33:31] <MatthiasVance> ahh
[15:33:36] <Tobbi_> I try to separate work from my private life.
[15:34:00] <Tobbi_> I got enough trouble thinking about work in my free time already.
[15:34:16] <Tobbi_> I'm actually done for the year, task-wise.
[15:34:52] <Tobbi_> Well, okay, I need to discuss things with a colleague.
[15:34:55] <Tobbi_> But he's not there today.
[15:35:14] <Tobbi_> So I am blocked on that task.
[15:37:20] <Tobbi_> When I came here I had a song stuck in my head.
[15:37:34] <Tobbi_> And now I don't have it anymore
[15:37:35] <MatthiasVance> The things you think about in your free time, are they work-task related or work-people related?
[15:37:43] <Tobbi_> it depends.
[15:37:50] <Tobbi_> Also, it's gotten better.
[15:37:58] <Tobbi_> Most of the time I'd say work-people related.
[15:38:13] <Tobbi_> But also the occasional thought of "Let's hope I didn't fuck this up"
[15:38:48] <Tobbi_> I noticed that I've gotten a bit calmer now that I have the corner office.
[15:39:15] <MichaelLong> imagine, you're they guy how designed this log4j-behavior that's now called a bug
[15:39:21] <Tobbi_> :D
[15:39:29] <Tobbi_> Yeah, true
[15:39:32] <Tobbi_> I mean, shit happens.
[15:39:57] <Tobbi_> I just hope that people don't think less of me for making mistakes...or IDK
[15:45:05] <MatthiasVance> If they do, it's on them :)
[15:45:21] <Tobbi_> that is true
[15:46:32] <Tobbi_> In the old building, people walked by my office all the time, and there were glass windows so everyone could see me.
[15:46:48] <Tobbi_> It's had an impact on me.
[15:47:17] <MichaelLong> very distracting, hope don't get it in our new building
[15:47:41] <Tobbi_> Yes, it is, indeed.
[15:49:33] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 268 seconds)
[15:59:17] <MatthiasVance> If it bothered you, why didn't anyone (including you) solve that issue?
[15:59:30] <MatthiasVance> Like getting some window decoration or whatever
[15:59:59] <Tobbi_> I think I didn't realize.
[16:00:27] <Tobbi_> I just know that I can concentrate much better now.
[16:06:18] *** Joins: Tazy (~Tazmainia@169-1-6-73.ip.airmobile.co.za)
[16:07:16] <MatthiasVance> ahh
[16:20:03] *** Quits: Tazy (~Tazmainia@169-1-6-73.ip.airmobile.co.za) (Ping timeout: 256 seconds)
[16:42:36] *** Quits: Kog (~kog@about/csharp/kog) (Remote host closed the connection)
[16:43:03] *** Joins: Kog (~kog@about/csharp/kog)
[16:43:04] *** ChanServ sets mode: +v Kog
[16:58:38] <Tobbi_> ...and gitter is downl
[16:59:13] <Tobbi_> Or rather, the gitlab signin is down.
[17:15:56] <Nasp> We have huge windows that shines into everybody screens
[17:17:59] <MatthiasVance> Tobbi_: GitLab? GitHub?
[17:18:08] <Tobbi_> gitlab on gitter.im
[17:18:12] <Tobbi_> maybe it works again, hang on.
[17:19:37] <Nasp> Gitlab uses gitter?
[17:20:04] <Tobbi_> No, vice-versa
[17:21:39] <Nasp> What are you using gitter for?
[17:21:50] <Tobbi_> Blazor-Chat
[17:22:06] <Nasp> Official or ?
[17:22:22] <Nasp> I hate how disconnected open source are regarding chat
[17:23:11] <Tobbi_> I am not sure about official.
[17:29:07] <Nasp> I am so surprise how often developers contact technical support and just in their first email sends their username and password
[17:38:37] *** Quits: supajerm_ (~supajerm@gateway/vpn/pia/supajerm) (Ping timeout: 240 seconds)
[17:44:11] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[17:44:44] <MaNa2k> is there any quick way to export spesific data to file from mssql ?  ex. select * from blabla where id = 1234
[17:45:03] <MaNa2k> i know you can dump the whole this from "generate script"
[17:45:11] <MaNa2k> but i only need some spesific data
[17:46:44] <Nasp> Export as sv?
[17:46:53] <MaNa2k> sv ?
[17:46:54] <Nasp> OrcsV*
[17:46:56] <Nasp> csv*
[17:46:59] <Nasp> Fucking touchpad
[17:47:03] <MaNa2k> how
[17:47:25] <Nasp> Ohh well nvm
[17:47:28] <Nasp> Forgot who i was talking to
[17:47:29] <MaNa2k> right click => tasks => export data ?
[18:00:46] <Tobbi_> code errors all around me :D
[18:04:21] *** Joins: ezio (~ezio@user/ezio)
[18:08:25] <Inge> MaNa2k: if it isn't a lot of data, you can just mark it in the grid in query analyzer, copy with headers (right click) and paste straight into excel
[18:22:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[18:34:14] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:49:37] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[18:52:03] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[19:01:30] *** Joins: jinsun (~quassel@user/jinsun)
[19:17:39] <MaNa2k> i got it exported to csv
[19:17:43] <MaNa2k> was about 1mb
[19:17:51] <MaNa2k> out of 100mb
[19:34:37] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[19:45:10] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Quit: Leaving)
[19:48:24] <MatthiasVance> Anyone using Blazor and IndexedDB?
[19:54:37] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[19:58:10] *** Joins: bomb (~bomb@user/bomb)
[19:58:45] <bomb> I use the numpad every time I need to tyoe / * - + characters
[19:58:48] <bomb> is it ethically okay?
[20:01:24] <MichaelLong> "People who use the numpad have lost control over their lifes." - Karl Lagerfeld
[20:01:55] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[20:03:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:05:40] <brianonymous> anyone use sqllite.. what kinda load can that thing handle
[20:09:00] <bpmedley> brianonymous : Use WAL journal_mode.  WAL will help with more than one writer (although not very many) and multiple readers.  I'm building a side project with it and have used SQLite for years.
[20:09:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:09:58] <brianonymous> thank you for that... im not sure what ill be getting myself into
[20:10:03] <MichaelLong> hmm interesting, also planing on building a side-project with a smaller throw-away DB and EFCore
[20:10:03] <bpmedley> Also, Microsoft.EntityFrameworkCore.Sqlite works well
[20:10:39] <bpmedley> If you want, I could give a link of the project I'm using SQLite and EF Core with
[20:10:43] <MichaelLong> is sql compact or how their sqlite counter parts was named still a thing?
[20:11:08] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[20:11:30] <brianonymous> this will mainly be used to store about 15 million records for non-weby stuff
[20:11:42] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:11:46] <bpmedley> How many writers and readers, brianonymous ?
[20:11:50] <brianonymous> hmmm
[20:11:54] <brianonymous> 400?
[20:12:09] <bpmedley> How many simultaneous writers and readers?
[20:12:14] <brianonymous> 400
[20:12:22] <bpmedley> So, is that 400 writers and 400 readers?  400 writers at once?
[20:12:25] <brianonymous> sec
[20:12:27] <MichaelLong> brianonymous, 400 readers writers in parallel?? o_O
[20:16:08] <DevJohnC> 15 million records is a lot for SQLite, you'll get pretty slow write speeds when your db file gets larger than approx. 1GB
[20:16:34] <bomb> MichaelLong L0L
[20:16:56] <brianonymous> what if i broke it up into 400 dbs
[20:17:26] <MichaelLong> brianonymous, sounds terrible design choice
[20:17:45] <brianonymous> set almost out of meeting
[20:18:15] <brianonymous> well thats what im trying to figure out here.. im not a db guy and ive never used sqlite before
[20:18:42] <brianonymous> ideally, i have these 15million recs split out over 3 partitions
[20:18:45] <MichaelLong> brianonymous, check their page, they have details about their db limits
[20:18:51] <bomb> MichaelLong L0L
[20:19:00] <bomb> it's like 1 PB
[20:19:19] <bomb> per row!
[20:19:45] <brianonymous> and those 400 reader/writers are, you know, about as parallel as the hardware allows
[20:20:02] <brianonymous> but its definitely up to 400 independent engines reading/writing
[20:20:04] <MichaelLong> brianonymous, why 400 and not 482?
[20:20:09] <brianonymous> rough avg
[20:20:12] <MichaelLong> k
[20:20:16] <bpmedley> I have never done more than 4 or so writers at once with SQLite
[20:20:32] <brianonymous> it of course doesnt have to be 400
[20:20:36] <DevJohnC> brianonymous, it sounds like you need a rdbms if you really need a database to power it
[20:20:40] <brianonymous> i could serialize into it
[20:20:49] <bomb> since when sqlite threadsafe tho
[20:21:15] <bpmedley> bomb : https://www.sqlite.org/threadsafe.html <-- For years
[20:21:29] <bomb> okay
[20:21:33] <brianonymous> thats why maybe i was thinking instead of one massive table, i just let each engine have its own
[20:22:42] <MichaelLong> brianonymous, first step is, design your database relations, "one massive table" also does not really sound good
[20:22:52] <brianonymous> fortunately there are none
[20:23:04] <brianonymous> its literally going to be a dumpster of data
[20:23:28] <MichaelLong> probably a traditional db is not the correct data storage
[20:23:36] <bpmedley> bomb : Also, if you use DbContext https://docs.microsoft.com/en-us/ef/core/dbcontext-configuration/#avoiding-dbcontext-threading-issues
[20:24:08] <MichaelLong> I've seen sqlite database as config file replacements quite some time though
[20:24:50] <brianonymous> this will serve more as a replacement for what is now way smaller internal object lists
[20:25:33] <brianonymous> but now they need to be 300 times larger, and persist over shutdowns
[20:25:46] <MichaelLong> also keep in mind, somebody wants to consume that data in some way supposedly
[20:25:52] <brianonymous> i do
[20:29:42] <brianonymous> i guess the best way i could put this, i need something that will replace List<SomeObject> that currently exists to allow it to be way larger and persist over restart cycles
[20:30:27] <brianonymous> and the consensus locally is Sqlite as the new store
[20:31:40] <brianonymous> a very flat single table
[20:31:50] <DevJohnC> why not just read/write a json file?
[20:32:02] <DevJohnC> you can append to it quicker and read from it easily
[20:32:06] <bomb> bpmedley is that what this bad luck brian guy uses sqlite with?
[20:32:34] <DevJohnC> unless you're using SQL features you don't need an SQL engine
[20:32:45] <brianonymous> DevJohnC: we still have to do selects against it quickly, so we figured the sqlite would make that easier over the amount of records
[20:33:07] <bomb> relational data makes a lot sense for many situations, and SQLite is just awesome piece of software.
[20:33:19] <DevJohnC> brianonymous, against that many records you'd be better building your own indexed memory structure
[20:33:47] <brianonymous> i dont know if i have time to do that
[20:34:13] <DevJohnC> brianonymous, you don't have time to create a 15million record sqlite file :P it'll take a lot of time
[20:34:36] <brianonymous> that part comes from another system in batches.. or will.
[20:35:09] <DevJohnC> I built a web-crawler that saves pages in sqlite, it started taking 2 seconds per insert at about 1GB, and got worse from there
[20:35:26] <brianonymous> hm
[20:35:44] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[20:35:45] <DevJohnC> by the time I had about half a million records it was 5-6 seconds per insert
[20:35:56] <brianonymous> that definitely wouldnt do
[20:36:01] <DevJohnC> it's a problem that grows exponentially
[20:36:06] <DevJohnC> due to the nature of sqlite
[20:36:17] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[20:36:50] <brianonymous> plus on top of it, 400 records need to roll off of it every 10 seconds
[20:36:56] <brianonymous> ish
[20:37:03] <DevJohnC> just write a class to replace your List<Whatever> that can read/write from a json file and internally make it index on properties you need to with a Dictionary
[20:38:11] <brianonymous> now you have me all nervous
[20:38:37] <DevJohnC> well yeah, I keep repeating it: sqlite doesn't scale like that
[20:42:25] <bomb> just use postgres lol
[20:43:42] <irwiss> https://i.redd.it/1l3925ord4781.jpg
[20:44:14] <bomb> I didn't get the reference irwiss is that Hilary Duff?
[20:44:30] <irwiss> tbh i have no idea what her name is, but it's remake of the meme with 2 ladies and the cat
[20:44:41] <bomb> American sense of humor sucks balls
[20:46:29] <bomb> > The women in the meme are from the television program The Real Housewives of Beverly Hills where then-cast member Taylor Armstong was in an emotional confrontation with Camille Grammer as fellow housewife Kyle Richards attempted to calm her down.
[20:46:54] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[20:47:30] *** Joins: bomb (~bomb@user/bomb)
[20:47:35] <bomb> http://www.anthonybarthel.com/uploads/1/1/4/2/11425805/you-re-cat_orig.jpg
[20:48:58] <bomb> LOL http://www.anthonybarthel.com/uploads/1/1/4/2/11425805/murder_orig.jpg
[20:52:38] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[21:06:54] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:2546:cc91:ef22:afaa)
[21:12:16] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[21:13:04] *** Joins: bomb (~bomb@user/bomb)
[21:19:35] *** Parts: wallbroken (wallbroken@user/wallbroken) ()
[21:29:38] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 260 seconds)
[21:36:54] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[21:41:47] <lz_> wow the new auto complete for .net 6 is freaking me out
[21:41:54] <lz_> I guess it uses some kind of AI or sth
[21:42:38] <bomb> GitHub Copilot?
[21:43:17] <lz_> I have no idea what this is, I just created a new .net 6 project in vs2022
[21:43:24] <lz_> I suppose it's a new intellisense
[21:44:14] <bomb> don't you think it's weird that AI tech is evolving quickly, but we're still not getting handjobs by robots?
[21:44:35] <lz_> maybe I'll get used to it but for now I don't like it, it forces me to parse what it's autocompleting and I have to evaluate whether or not this is rubbish, which is more work
[21:49:12] <bomb> good programmers don't need intellisense. autocompletion is for replaceable drones writing C#/Java/JS code, or Python hobbyists.
[21:56:13] <MichaelLong> lz_, yeah thank for shoving it into my face. I learned that Visual Studio 2019 does not officially support .NET 6...
[21:57:04] <bomb> MichaelLong https://www.youtube.com/watch?v=3-jv7doUI8o
[22:13:07] <bomb> Blender is awesome
[22:13:08] <bomb> https://www.youtube.com/watch?v=eXldgzeuj1k
[22:18:28] *** Joins: lepe1 (~lepe@85-76-11-168-nat.elisa-mobile.fi)
[22:18:28] *** Quits: lepe1 (~lepe@85-76-11-168-nat.elisa-mobile.fi) (Changing host)
[22:18:28] *** Joins: lepe1 (~lepe@user/lepe)
[22:18:50] *** Quits: lepe1 (~lepe@user/lepe) (Client Quit)
[22:19:37] *** Quits: shoelaces (~shoelaces@pool-100-38-191-176.nycmny.fios.verizon.net) (Remote host closed the connection)
[22:19:56] *** Joins: bpmedley_ (~bpmedley@2600:1700:e2c:8410:a5a4:913:5017:f4d2)
[22:21:33] <bpmedley_> Not sure if anyone said anything.  I got disconnected..
[22:22:37] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:142d:c26f:6eb8:503) (Ping timeout: 240 seconds)
[22:22:50] <bomb> nah. lz was being a whiny bitch, and then I shared a video
[22:23:10] <bpmedley_> https://gist.github.com/brianmed/e2c776b8f4a92cb80c07bd76eb00848d  <-- DevJohnC , brianonymous : I am not seeing the slowdown mentioned.  I have inserted 15,000,000 rows in 40 minutes.  Much faster than 2 seconds per insert and the file is over 2 GB.
[22:23:42] <brianonymous> oh nice, thank you
[22:24:07] <bpmedley_> You're welcome.  I wonder what the difference is in my test and DevJohnC's code.
[22:24:22] <DevJohnC> bpmedley_, I'm curious if it's the journal mode or the fact you're using one db context for everything
[22:24:27] <brianonymous> im moving forward with at least creating the store class to see what happens
[22:25:25] <bpmedley_> DevJohnC : Understood.  Worth a revisit on your end, perhaps.  Just for clarity with future projects.
[22:25:42] <DevJohnC> I'd wager it's the WAL
[22:25:49] <DevJohnC> I'm reading on it now, I never knew about it :)
[22:25:59] <bpmedley_> Cool.  WAL is awesome..
[22:26:12] <brianonymous> that result gives me some hope
[22:26:44] <bpmedley_> Also, I did a few select * from Joy order by JoyId DESC limit 3 and they were fast.
[22:26:44] <brianonymous> is it worth while for me to use entity if my shit is so flat?
[22:26:59] <bpmedley_> Yes!  I love EF, even for small projects.
[22:27:08] <brianonymous> gotcha
[22:27:26] <bomb> sqlite has wal now?
[22:27:44] <bpmedley_> bomb : Yes, it's worth using.
[22:28:00] <bomb> that's cool
[22:28:09] <MichaelLong> hm looking forward to learning it again, couple of years ago I didn't liked it much
[22:28:12] <brianonymous> bpmedley_: im bookmarking your example, thank you muchly for taking the time. i owe you a beer
[22:28:25] <bpmedley_> https://www.sqlite.org/wal.html <-- bomb, this is it.  I think it may actually be the default now, but I was not sure.
[22:29:01] <bpmedley_> brianonymous : Thanks!! Or a vodka, I have only had one beer I like.  Tasted multiple.. :-0
[22:29:12] <brianonymous> potato alcohol it is
[22:30:12] <bomb> that's awesome bpmedley_ last time I used SQLite it was merely a "fopen alternative", obviously it progressed a lot in the last decade
[22:30:34] <bpmedley_> bomb : Very true.  It's gotten amazing in the last decade.
[22:31:05] <ki9a> sqlite still advertises itself as an fopen alternative.
[22:31:17] <brianonymous> heh heh
[22:31:24] <ki9a> (It's still on their site)
[22:31:40] <ki9a> that said, I wish there was something like sqlite but C# native with linq like operators
[22:31:50] <ki9a> skipping the -> sql -> operations
[22:32:06] <bomb> Apache Derby
[22:32:07] <ki9a> I used litedb at some point but lost data. maybe it's fixed since though
[22:32:09] <bomb> wait it was Java kekek
[22:32:48] <brianonymous> inproc is a big selling point for me
[22:32:59] <ki9a> ye
[22:33:06] <ki9a> (that said it might long be fixed, litedb)
[22:37:38] <sysRPL> ki9a: hi
[22:38:15] <sysRPL> ki9a: do you guys at remobjecst still offer a free command line version of the ocegene compiler? i was looking for it a few days ago and couldn't locate it
[22:38:27] *** Joins: ki9d (~ckchatcar@2001:470:69fc:105::4897)
[22:38:49] <sysRPL> * oxygene
[22:38:54] <Ameisen> Has anyone ever proposed adding an 'IsEmpty' property to String, List, and such?
[22:39:14] <Ameisen> I couldn't find a specific proposal on github, but my query might not have been specific enough
[22:39:15] <sysRPL> strign already has IsEmpty
[22:39:45] <Ameisen> ?
[22:39:56] <bomb> I'd like a full RemObjects bundle for free
[22:40:10] <bomb> with all the Swifts and Del[his and whatnot
[22:40:15] <sysRPL> string already has IsEmpty
[22:40:22] <Ameisen> But... it doesn't
[22:40:49] <bomb> IsNullOrEmpty
[22:41:01] <sysRPL> https://docs.microsoft.com/en-us/dotnet/api/system.string.isnullorempty?view=net-6.0
[22:41:03] <Ameisen> that checks if it's null or empty, and isn't a property but a static function
[22:41:09] <Ameisen> that's not the same as checking if it's empty
[22:41:33] <Ameisen> also its codegen kinda sucks compared to "s.Length == 0" - https://tinyurl.com/yxjtd4vq
[22:41:33] <sysRPL> so you want to throw an exception?
[22:41:47] <Ameisen> if I don't expect a null string? yeah.
[22:41:57] <sysRPL> s.Length == 0 throws and exception is null
[22:42:16] <Ameisen> Well, yeah. If I don't expect s to be null, that would make sense.
[22:42:17] <sysRPL> just use String.IsNullOrEmpty()
[22:42:40] <sysRPL> and stop whining
[22:43:07] <bomb> be nice, we're trying to be helpful here.
[22:43:25] <sysRPL> what you expect doesn't matter ... learn to program defensively
[22:43:26] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:43:57] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[22:44:05] <sysRPL> that is, writing code assuming arguments, parameters, or variables might not be valid
[22:44:09] <Ameisen> It seems odd to say "How dare you don't check for null here!" when I just want to check if a string is empty.
[22:44:47] <Ameisen> if it's null, I absolutely want an exception thrown _because I don't expect a null there_. I would rather have an exception pop up and be caught so I know that there was a logical problem.
[22:45:00] <sysRPL> i've worked with many fellow `programmers` that don't program defensively, and i don't consider them to be `programmers`
[22:45:05] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:32] <Ameisen> I've also worked with programmers who try to hide logical errors :)
[22:45:40] <Ameisen> They're usually Java programmers, though
[22:46:26] <bomb> talk trash about Java programmers again, and I will carve out your aorta out of your chest and wash my feet with your blood.
[22:47:03] <Ameisen> Threaten me with a good time.
[22:47:21] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:47:28] <MichaelLong> in the case of .NET you just have to know that there is String.IsNullOrEmtpy as sysRPL mentioned. That's it. Of course you can always catch the exception if you want to let it come that far.
[22:47:49] <Ameisen> In the context I care about, if the string is null, something absolutely horrible has happened.
[22:47:56] <Ameisen> And I absolutely want to know.
[22:48:16] <MichaelLong> totally understand, had that situation a few times.
[22:48:48] <Ameisen> It's defensive at a higher level - exceptions are caught and the system proceeds without that pass. But I want to know about the failure still so I can investigate. I don't see IsNullOrEmpty being 'defensive' in the general case - it hides problems.
[22:48:56] <sysRPL>  ArgumentNullException.ThrowIfNull(s);
[22:49:13] <Ameisen> but, as my testing has been, the general ways of checking if a string is empty have rather bad codegen (and aren't standardized).
[22:49:29] <sysRPL> bad codegen?
[22:49:38] <Ameisen> https://tinyurl.com/yxjtd4vq
[22:49:42] <MichaelLong> Ameisen, I don't get you about hiding. the method returns a bool, it let's you know, it does not hide anything
[22:49:56] <Ameisen> we investigated the JIT output for s == "" last night
[22:50:07] <Ameisen> it does... interesting stuff to determine if it's empty.
[22:50:24] *** Joins: Assault (~Assault@87-95-55-3.bb.dnainternet.fi)
[22:50:33] <Ameisen> s.Length == 0 does exactly what I'd assume.
[22:51:08] <Ameisen> IsNullOrEmpty is actually suboptimal as well (and I need to file a report for that)
[22:51:18] <Ameisen> it's not terrible, just needless jumps to ret
[22:52:21] <Ameisen> MichaelLong - I need to switch to using Nullable, since I mostly assume that at a higher level anyways.
[22:52:31] <sysRPL> Ameisen: you are misguided
[22:52:34] <Ameisen> the inputs end up sanitized.
[22:53:07] <MichaelLong> that's another approach, yes
[22:54:06] <Ameisen> There's one annoying area where I haven't yet fixed a potential exception, but I know how. It's just annoying (a library doesn't exist on the system, and an exception ends up getting thrown in the finalizer of an object in another assembly)
[22:54:13] <Ameisen> (an assembly that I do not own)
[22:54:33] <Ameisen> which is, ironically, happening _due to the pass_ to detect if the library exists and works.
[22:55:38] <Ameisen> sysRPL - I specialize in VMs and JITs. I believe it would make sense that I would investigate and report deficiencies in the JIT, and I have before.
[22:55:53] <Ameisen> Particularly in incredibly-common code patterns which usually should have hardcoded paths.
[22:55:57] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[22:56:02] <sysRPL> Ameisen: you are prioritizing almost no difference in optimization rather in a language not suitable for for writing things where those details make no difference
[22:56:24] <Ameisen> well, might as well not have a JIT, then
[22:56:32] <ki9d> The rules for string comparison is tricky.
[22:56:38] <ki9d> It involves cultures
[22:56:41] <sysRPL> is anyone using c# to system an operating system or syscalls? or using c# to write device drivers? no
[22:57:10] <ki9d> Cosmos
[22:57:14] <sysRPL> besides modern c# us ooo execution
[22:57:18] <ki9d> Not sure if that still exists
[22:57:23] <bomb> wasn't Windows Vista basically that?
[22:57:26] <sysRPL> or modern cpus for that matter
[22:57:37] <sysRPL> bomb: yes, then it fell over
[22:57:39] <ki9d> Looks like litedb is dead. At least no commits anymore.
[22:57:46] <Ameisen> ki9d - we investigated s == "" last night. It effectively: checks if the string is the same object as "". If it is not, it checks if the string is null. If it is not, it checks if the length is 0. If it _is_, it then does a memcmp against the string data and "" data.
[22:57:51] <sysRPL> bomb: and they started over again. i read an article from a ms dev about that
[22:58:11] <Ameisen> s.Length == 0 just checks if the length field of the string object (offset 8) is zero.
[22:58:13] <sysRPL> bomb: it was interesting reading between the lines
[22:58:39] <bomb> sysRPL I believe it was Sinofsky who blamed .NET for his shitty execution.
[22:58:45] <Ameisen> s.Equals("") generates better code overall, but still not great.
[22:59:01] <ki9d> Ameisen: less bad than I expected then. I expected a culture check too
[22:59:15] <ki9d> And yes. I'd use length in a critical path too.
[22:59:21] <Ameisen> I just found it funny that the length test was a part of it.
[22:59:28] <sysRPL> ki9d: do you guys at remobjecst still offer a free command line version of the oxygene compiler? i was looking for it a few days ago and couldn't locate it
[22:59:50] <Ameisen> but yeah, there's no culture check. The assembly shows that the double the length value of both strings, and then compare the data directly.
[22:59:59] <ki9d> Quick exit.
[23:00:14] <Ameisen> Yup, except the proper quick exit for against "" would be to just check the length.
[23:00:23] <bomb> is there anything FPC can't do that Oxygene compiler can?
[23:00:29] <Ameisen> My main issue is that very common patterns like that don't have specific patterns already hardcoded.
[23:00:39] <ki9d> sysRPL: Yeah pretty much the trial. Disable the vs integration.
[23:00:57] <sysRPL> bomb: they wya i heard it described was that a lot of people at ms were using dotnet to in pieces of the followup to XP, and it was described as a tower that as it grew taller began to lean and lean and eventually fall over
[23:00:57] <Ameisen> sysRPL - there are at least three projects (inactive or active) that use C# for OS development.
[23:01:22] <ki9d> bomb: haven't seen the fpc feature spec in a decade or so.
[23:02:01] <sysRPL> fpc still has lots of issue
[23:02:08] <bomb> sysRPL I heard it's just the cold war between WinDiv (C++ shop) and DevDiv (C# shop) at MS
[23:02:17] <Ameisen> and for what I'm doing, unless I want to build a native library for every architecture (and I have not had fun trying to do so for MacOS) I'm stuck trying to get low latency in C#.
[23:02:18] <ki9d> I guess swifrt, c#, java and go compilation would be a good start.
[23:02:19] <sysRPL> jsut the compiler, not including the language
[23:02:48] <Ameisen> And I'd still need C# interfaces anyways
[23:03:07] <Ameisen> ki9d: https://tinyurl.com/yxjtd4vq
[23:03:27] <ki9d> And fpc uses the pascal model of intf VS impl which has advantages and disadvantages
[23:03:35] <Ameisen> I validated that the final jump is a memcmp by doing a direct memory comparison of some ReadOnlySpans
[23:03:37] <Ameisen> same address
[23:03:52] <Ameisen> plus, I wasn't sure what else it would be. It's a memcmp (or, really, a memeq)
[23:04:10] <brianonymous> what i realized just now is that who memcpy path is probably the == operator itself
[23:04:20] <sysRPL> ki9d: i wish pascal had namespaces instead of units
[23:04:26] <brianonymous> er memcmp
[23:04:34] <Ameisen> brianonymous - only if it's doing a proper data comparison
[23:04:34] <ki9d> Nice.
[23:04:48] <Ameisen> I wouldn't expect the memequal to be generated for primitives, for instance
[23:04:53] <brianonymous> no, i wouldnt either
[23:04:57] <ki9d> That's what we did.
[23:05:12] <ki9d> I don't like how Delphi tried to solve namespaces.
[23:05:21] <brianonymous> its a bit weird that its generated at all in the ME0 case
[23:05:26] <sysRPL> yeah, unit names with dots is not namespaces imo
[23:05:32] <ki9d> That's why we went with project style compiling isntesd of file style.
[23:05:35] <Ameisen> brianonymous - I'd note that I believe it's a memequal (0 or 1 depending on whether they're equal) rather than a memcmp
[23:05:49] <Ameisen> because otherwise you'd get values that wouldn't be valid for true/false
[23:05:56] <ki9d> Memeq isn't generated for anything
[23:06:11] <ki9d> String equals would call it internally.
[23:06:25] <Ameisen> Well, it's the jump/call out to 0x00007ffcb0d4afa0. It has to be returning either 0 or 1, and it takes two pointers and two lengths.
[23:06:26] <ki9d> And that might be unlined.
[23:06:59] <ki9d> C# only does native compares for the few basic value types and pointers/refs.
[23:07:17] <Ameisen> memcmp returns an integer representing the difference, which would have to be normalized into 0/1, but there's no code to do that, so the procedure being called must be doing that.
[23:07:24] <ki9d> Or I should say the CLR.
[23:07:34] <Ameisen> thus I assume that that offset is effectively a memeq
[23:08:01] <Ameisen> we're investigating the JIT output, not the CIL
[23:08:26] <Ameisen> the CIL is not generating any direct data comparisons, correct
[23:08:27] <ki9d> sysRPL: not saying our solution is perfect. But it's one or the other.
[23:08:46] <ki9d> The jit inlines the body of equals.
[23:08:51] <ki9d> That's how you end up like this.
[23:09:03] <Ameisen> That makes sense.
[23:09:13] <sysRPL> i have a problem.  wanted to give my nice mail lady a cash christmas present, but she has been off on vacation for the past two weeks
[23:09:30] <Ameisen> As said, I'm just surprised that a common pattern like this doesn't have something hardcoded.
[23:09:39] <ki9d> Btw one of the trickiest things to do right. Automatically
[23:09:39] <Ameisen> sysRPL - get her a book on defensive programming techniques.
[23:09:41] <sysRPL> and i've different substitute mail persons during that time
[23:09:55] <ki9d> Inlining that is.
[23:09:58] <Ameisen> ki9d - i'm aware. There also isn't necessarily enough time to perform the same level of optimizations that, say, a C++ compiler does.
[23:10:20] <Ameisen> I'd just say "hey, that's the CIL pattern for string == "", let's just emit this thing we hand-wrote.
[23:10:21] <Ameisen> "
[23:10:35] <Ameisen> as it's a very common pattern
[23:10:39] <ki9d> It has a few code paths hardcodes though? Like equal ref, null, length mismatch
[23:10:48] <ki9d> Hardcoded
[23:11:25] <ki9d> It's discouraged by vs
[23:11:41] <ki9d> Use equals for anything that's not a constant empty.
[23:12:16] <Ameisen> comparison to null is certainly what I'd expect
[23:12:21] *** Quits: rhelic (uid188470@id-188470.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:12:34] <Ameisen> test rcx, rcx; sete al; movzx eax, al; ret
[23:13:02] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[23:14:17] <ki9d> This is actually something the c# compiler itself should optimize.
[23:14:26] <ki9d> Not the CLR.
[23:14:39] <Ameisen> the IL is: ldarg.0; ldnull; ceq; ret
[23:14:55] <Ameisen> which is the shortest way to write that, I believe, in CIL
[23:16:57] <Ameisen> I should note that every C++ compiler (g++, clang, msvc) would emit that as "xor eax, eax; test rcx, rcx; sete al; ret"
[23:17:35] <Ameisen> one byte smaller.
[23:18:56] <Ameisen> brianonymous - the JIT is missing the passes to be introspective enough to realize that the constraints that are valid for "" can be applied to the input string.
[23:19:46] * MichaelLong like String.Empty
[23:19:50] <MichaelLong> +s
[23:19:56] <Ameisen> though I cannot explain away the function that jumped to set the return value, then jumped to return
[23:20:08] <Ameisen> MichaelLong - codegen is marginally better than comparing against ""
[23:20:40] <brianonymous> L15 just doesnt make sense to me
[23:21:05] <Ameisen> it's checking if the length is 0
[23:21:11] <brianonymous> and then doing the compare
[23:21:16] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:21:20] <Ameisen> it's a short circuit in general for strings
[23:21:23] <Ameisen> if lengths don't match, return false
[23:21:32] <brianonymous> why would they bother
[23:21:34] <Ameisen> it's just not introspective enough to realize that that's all that's necessary.
[23:22:03] <brianonymous> that 0 should be the clue
[23:22:20] <Ameisen> If you spend more time optimizing (which JITs cannot), you'd end up inlining the memequal, seeing the loop is doing zero passes, elimiante the loop, eliminate the code setting up the loop, and then you'd end up just stopping at that comparison
[23:23:04] <brianonymous> at that point, its known its a non null string of len 0
[23:23:34] <Ameisen> Yeah, but the JIT doesn't have any logic for that special case (other than setting the comparison against 0 rather than loading the value)
[23:23:47] <Ameisen> and doesn't inline the loop and then start eliminating the additional code
[23:23:50] <brianonymous> yeah, im sure its just the operator taking over
[23:24:46] <brianonymous> much like ME1
[23:25:44] <Ameisen> It doens't have to load the size of "" before the memeq because it already asserted that they're the same length
[23:26:02] <Ameisen> but it does have to get the address of the data.
[23:26:20] <Ameisen> So, really, I think this could probably be 'helped' by just adding a test for a constant zero length?
[23:26:35] <Ameisen> That only works if the JIT is passing known constraints around
[23:27:21] <brianonymous> i think in terms of how often that pattern is used, it could be a rather significant collective-cycle optimization
[23:27:27] <Ameisen> right
[23:27:28] <Ameisen> that's my argument
[23:27:34] <Ameisen> it's a stupidly-common pattern, hardcode it.
[23:27:43] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[23:29:11] <brianonymous> i kinda wanna say that IsNullOrEmpty gets it right
[23:30:04] <brianonymous> which is nice for me cuz thats my goto :D
[23:30:33] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[23:35:01] *** Joins: Klinda (~superleag@user/klinda)
[23:39:04] <ki9d> I wonder if the CLR devirtualizes generic interface calls these days.
[23:39:48] <ki9d> Ie test<t>(x:t) where t : imyintf { x.haha():}
[23:40:13] <ki9d> Does it call the right haha or does it do intf dispatch
[23:42:04] <ki9d> It didn't use to
[23:58:40] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[23:58:55] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
