[00:05:55] <mdhughes> (Î» (x) (Î» (y) (+ x y))) does the same thing, more clearly and just as concisely. The problem is people continuing to use "lambda" to write Î»!
[00:08:10] <mdhughes> (All you have to do now is get every OS to provide a simple way to type Î»; on Mac I have it bound in terminals and text areas but it doesn't work in non-native contexts.)
[00:20:44] <Zipheir> mdhughes: If you're referring to the lambda* example, it's not the same thing.  You can't write ((Î» (x) (Î» (y) (+ x y))) 2 3) in standard Scheme.
[00:21:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[00:21:23] <Zipheir> If you could, the SRFI 219 notation would do almost everything.
[00:22:51] <sham1> \lambda
[00:23:00] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:24:25] <Zipheir> Is that a TeX macro?
[00:25:43] <sham1> Yes
[00:49:58] *** Joins: gproto23 (~gproto23@user/gproto23)
[01:01:10] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Read error: Connection reset by peer)
[01:20:09] <Oxyd> Would've been cool if R7RS specified that implementations that support the Î» character should also export Î» from (scheme base) with the same binding as lambda.
[01:25:59] <aeth> but why
[01:26:22] <aeth> I just configure my Emacs to turn lambda into Î» if it's a Common Lisp or Scheme file.
[01:27:00] <aeth> The only time this backfires and breaks indentation is if you do (lambda (foo\n
[01:27:08] <sham1> So one can always use Î»
[01:27:11] <aeth> But if you're going to have a lot of long, named arguments then it shouldn't be a lambda
[01:28:27] <aeth> Usually you just do (lambda () ...) or (lambda (x)\n or whatever and it doesn't make a difference to the formatting if you, locally, display the characters "lambda" as Î» even though the actual source file has it as "lambda"
[01:29:07] <aeth> It also means I can just type "lambda" (sort of like LaTeX) instead of using a compose key to type Î» (which of course I added manually).
[01:30:23] <aeth> In Emacs, one way to do this is a package called pretty-lambdada
[01:30:56] *** Joins: seninha (~seninha@user/seninha)
[01:32:50] <Zipheir> This is 2022 and we've had Unicode for a while.
[01:33:08] <aeth> And I don't want everyone who reads my code to suffer just because I think Î» looks cool in lambdas.
[01:33:10] <Zipheir> This "only ASCII in source files" thing has to end some day.
[01:33:58] <aeth> This is a rare case where my own local configuration can show Î», everyone else can see lambda unless they opt in, and absolutely nothing is broken because the specific place lambda shows in well-formatted Lisp/Scheme code prevents this
[01:34:37] <aeth> The problem isn't storing it in source files, it is as mdhughes says: typing it.
[01:35:13] <Zipheir> I agree it's a good idea for now, given that Î» will still break a lot of Lisps.
[01:35:48] <aeth> now, I mean, when everyone uses something like pretty-lambdada to turn "lambda" into Î» and they're really used to it, then in 10-15 years we can reconsider why we still do the ritual of typing "lambda" just to show it as "Î»"
[01:35:53] <aeth> But I don't think it's a common enough setup yet
[01:36:00] <Zipheir> I'm not arguing we should go all Agda or APL, but Unicode is the world we live in.
[01:36:20] <dpk> Zipheir: ever seen Raku fka Perl 6? ðŸ˜…
[01:36:39] <sham1> Type lambda and just turn it into U+03BB
[01:36:40] <Zipheir> dpk: Why yes, but I don't remember it having a lot of Unicode.
[01:36:41] <aeth> I mean, Î» is like + or âˆ‘ or whatever.
[01:36:56] <dpk> $xÂ² will literally square $x for you
[01:37:04] <sham1> Honestly, I'd like to see \Sigma (well, \sum) as an alternative for +
[01:37:22] <aeth> If keyboards had âˆ‘ (the Unicode summation, not quite the same as capital Sigma... this font even has them show up differently) then we'd use it like +, -, /, *, etc.
[01:37:32] <dpk> you can use any Unicode quotation mark characters to make a string literal
[01:37:34] <aeth> Since discrete summing is just *so* common in math as applied to programming
[01:37:54] <aeth> And it happens that if you're using a Lisp/Scheme, Î» is the same sort of thing
[01:38:05] <dpk> Ã· and Ã— of course are aliases for / and *, iirc
[01:38:16] <aeth> For the most part, longer names are better. But we tried languages that had you write "add" instead of "+" and rejected it. Some things are easier and more familiar when short
[01:39:19] <aeth> But, personally, I'd find it hard to find something other than Î» that would work shortened.
[01:39:35] <aeth> Perhaps -ref or define, but we don't have a symbol for those.
[01:39:50] <aeth> it's not like "save" where we have the arbitrary symbol ðŸ’¾
[01:40:05] <Zipheir> Haskell and friends use ! and variants like !! for ref.
[01:40:10] <aeth> yeah, that just doesn't work
[01:40:22] <sham1> Well floppy disk is just an arbitrary symbol for saving
[01:40:28] <aeth> +, -, /, and * work because we, more or less, expect this from our education
[01:40:30] <Zipheir> aeth: Good to know.  I'll let Simon know so he can change the standard. :p
[01:40:42] <aeth> Î» works if you're a math nerd because Greek stuff shows up all of the time in math (everyone knows pi at the very least)
[01:40:51] <aeth> but if you see ! in a math context, you think factorial
[01:40:54] <sham1> aeth: then again, from our education we don't expect +, -, / and * to be n-ary
[01:41:24] <aeth> Zipheir: I mean, it doesn't work as some kind of universal, clearer-than-words symbol that people will understand just from having a very, very basic background in math and/or comp sci
[01:42:10] <Zipheir> aeth: I agree, but then, you can't expect much from a very, very basic background.
[01:42:28] <Zipheir> aeth: I *would* say that Haskell's \ is my least favorite notation ever for lambda.
[01:42:35] <aeth> sham1: on the other hand, (+) and (*) are so natural when you think about it (0 and 1 respectively) that perhaps they are n-ary all along.
[01:42:44] <Zipheir> Everyone knows \ isn't a real character! :)
[01:43:20] <Oxyd> Speaking of \, #\c is probably my least favourite notation for characters.
[01:43:38] <Zipheir> It isn't lovely, no.
[01:43:43] <Zipheir> Characters should burn anyway.
[01:45:16] <sham1> Nothing wrong with characters
[01:45:29] <aeth> It's hard to think of a way to add syntax in general to Lisps/Schemes without putting a # in front, unfortunately
[01:45:56] <sham1> ##############extra-syntax
[01:45:56] <aeth> at least Î» isn't adding syntax, it's using Unicode
[01:46:04] <Zipheir> sham1: We could just use strings.  Characters aren't exactly well-defined anymore.
[01:46:13] <Zipheir> But, compatibility.
[01:46:13] <Oxyd> ^ That.
[01:46:22] <sham1> A character is very well defined. A Unicode codepoint
[01:46:57] <Zipheir> Should be a grapheme cluster, IIUC.
[01:51:11] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[01:56:18] *** Joins: ZombieChicken (~weechat@user/zombiechicken)
[01:56:41] <ZombieChicken> Hello. Anyone know of something like indent for scheme?
[02:03:12] <tristero> indent-region in Emacs scheme-mode?
[02:05:35] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 256 seconds)
[02:06:12] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[02:24:30] <ZombieChicken> I was hoping for a stand-alone program. I have my own weird project I'm working on
[02:24:36] <ZombieChicken> and emacs isn't a choice
[02:28:43] <wasamasa> what if not emacs for editing code
[02:28:56] <wasamasa> https://git.foldling.org/schematic/
[02:29:40] <Zipheir> Well, ed is the standard.
[02:39:36] <ZombieChicken> Zipheir: Funny you mention that...
[02:44:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[02:46:16] *** Quits: qhong (~qhong@rescomp-21-400677.stanford.edu) (Quit: ZNC 1.8.2 - https://znc.in)
[02:46:26] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[02:58:55] *** Joins: johnjaye (~pi@173.209.65.233)
[03:26:43] <ZombieChicken> wasamasa: Trying schematic. Apparently I'm getting an import error? 
[03:26:45] <ZombieChicken> Error: Unable to read indentation file: Invalid indentation rule: import
[03:27:02] <ZombieChicken> ...hmm. One minute
[03:27:34] <ZombieChicken> yeah, I have the two libs it says it needs
[03:27:46] <ZombieChicken> installed it via chicken-install schematic
[03:31:18] <ZombieChicken> nvm. I think I see the issue
[03:45:37] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 240 seconds)
[04:05:23] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[04:24:18] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[04:25:34] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[04:57:59] *** Joins: karlosz (~karlosz@47.151.136.69)
[05:03:43] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 256 seconds)
[05:17:13] *** Joins: livoreno (~livoreno@user/notzmv)
[05:25:37] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:29:31] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[05:32:37] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Remote host closed the connection)
[05:47:49] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:56:18] <mdhughes> Zipheir: I just have a tiny macro that changes Î» to lambda. It's SICP-compliant.
[06:00:13] <mdhughes> I think âˆ‘ is better as fold, but I never remember the order of operations in a fold so the typing isn't the problem.
[06:01:34] <mdhughes> I did consider using âˆ‘ as the name of my `for` macro, but it seemed excessive.
[06:17:40] *** Joins: klovett_ (~klovett@166.205.90.179)
[06:19:16] *** Quits: klovett (~klovett@166.205.90.179) (Ping timeout: 250 seconds)
[06:34:18] *** Quits: ZombieChicken (~weechat@user/zombiechicken) (Ping timeout: 276 seconds)
[07:11:47] *** Quits: vats (~vats@103.216.143.18) (Ping timeout: 256 seconds)
[07:12:32] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:44] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:20:00] <ns12> Zipheir: Do you use ed for writing Scheme? How is it like compared to vi or Emacs?
[07:20:44] <ns12> Zipheir: I normally favor vi over ed. Why do you use ed?
[07:21:44] <drakonis> wait, ed is actually used for regular editing scenarios?
[07:22:48] <ns12> drakonis: I use it to write/edit code over slow SSH connections.
[07:23:07] <drakonis> well, that does work.
[07:27:20] *** Joins: ouestbillie (~gallup@185.213.154.231)
[07:49:11] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 256 seconds)
[07:56:25] *** Joins: Darkcoal (~user@130.164.163.44)
[08:09:02] *** Quits: klovett_ (~klovett@166.205.90.179) (Quit: ZZZzzzâ€¦)
[08:11:16] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[08:51:53] *** Quits: Darkcoal (~user@130.164.163.44) (Ping timeout: 256 seconds)
[08:53:50] *** Joins: Darkcoal (~user@130.164.163.44)
[08:54:22] *** Joins: sonny (~user@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[08:54:57] <sonny> Is there a naming convention for a function that returns a list?
[08:57:26] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 250 seconds)
[09:00:11] *** Joins: Lumia (~Lumia@208.64.158.255)
[09:00:24] *** Joins: seninha (~seninha@user/seninha)
[09:04:11] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[09:10:21] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[09:12:24] <mdhughes> I also use ed when I'm just adding lines to a file, rather than cat >>file
[09:12:54] <mdhughes> But for any real editing I use vim or BBEdit.
[09:18:02] <ski> sonny : sometimes a plural form is used, i guess
[09:18:42] <sonny> yeah, I did something like that. I am parsing identifiers as a list of bytes, so I called the function id-bytes.
[09:20:36] *** Joins: vats (~vats@103.216.143.32)
[09:25:16] <ns12> BBEdit?! A closed source text editor?!
[09:26:02] <sonny> what's wrong with that?
[09:27:49] <ns12> It's been some time since I've seen someone use a text editor that requires a paid license.
[09:29:22] <mdhughes> Some of us actually want to enjoy nice things.
[09:30:31] <mdhughes> I also pay for nice food, instead of eating grass. And housing instead of a free cardboard box.
[09:32:33] <ski> (oh, when you said "want to enjoy nice things", i thought you meant an open source text editor)
[09:34:05] <mdhughes> Aside from vim, which is a fairly ugly, awful thing I'm just accustomed to, I'm not aware of any good open source editors.
[09:34:19] <sonny> ns12: I use sublime text
[09:34:20] <mdhughes> Atom's a giant blob. VSCode is Microsoft's spyware.
[09:34:47] <sonny> sadly, I find it useless for lisp style code :(
[09:34:57] <mdhughes> I did try subl, it's the next best thing to BBEdit but configuring JSON files is bullshit.
[09:34:58] <ns12> mdhughes: IIRC, you said you use Mac OS and FreeBSD. Would you say "I also pay for a nice OS, instead of using FreeBSD"?
[09:35:36] <mdhughes> Yes? FreeBSD is a fine server OS, it's zero effort in making the desktop/userland pleasant.
[09:35:55] <sonny> subl does everything well for the most part, but it is difficult to stray from the norm in it
[09:36:28] <sonny> I looked at the api and I couldn't really tell right away how I would get to handle indentation
[09:36:52] <sonny> the real sad thing is that you can't repeat macros ...
[09:37:05] <mdhughes> Oh, I wrote a couple plugins and it's so insane. Only reasonable choice is to grab the whole file as text, run an external script, paste back in.
[09:37:23] <sonny> but, it's fast and lightweight so I keep it open for text manipulation and viewing files
[09:37:59] <sonny> mdhughes: yeah, shame really
[09:38:33] <sonny> I think subl missed out ... they could have implemented the language server protocol ages ago
[09:38:56] <mdhughes> Meanwhile, the BBEdit interface is either pass to text filters in shell, or run AppleScript, which it does really well.
[09:39:18] <mdhughes> And it has language servers now, used to have its own wacky language packages.
[09:39:28] <sonny> they use some adhoc thing for syntax description ... I've realized it can technically be used as a parser, but it would be quite the exercise
[09:39:36] <sonny> so in other words ... it's useless
[09:39:55] <sonny> mdhughes: how is the language server?
[09:40:29] <mdhughes> BBEdit's is nice. Runs pretty fast, doesn't lose track of context like the old packages (basically regexing) did.
[09:40:44] <sonny> cool 
[09:41:06] <mdhughes> I haven't dug deep into doing any context-aware scripting with it, but supposedly that can be done.
[09:41:27] <sonny> subl is super quick, I really respect that. I'd wager it's just a c++ ide that they happen to start selling :P
[09:43:09] <sonny> I have considered making one so I can be comfortable editing [scheme] in a windows environment
[09:45:36] <sonny> ns12: distribution is hard ... proprietary software isn't that big a deal in this instance
[09:45:53] *** Joins: s-liao (~s-liao@101.86.96.21)
[09:47:10] <mdhughes> I've written editors a few times, and it's just such a endless rathole of fixing things. It's easier for me to live in the nicest one others make. Mr Blandings Builds His Dream House vs renting.
[09:49:21] <sonny> heh, yeah
[09:50:48] <sonny> there are some things like neovim and xi which are embeddable, that could reduce the effort
[09:51:08] <sonny> I can see how this could turn out to be a really complex task
[09:52:04] <sonny> text is a primary interface ... it would be nice to generalize it
[09:54:26] <mdhughes> What I keep thinking I'd like is an outliner like Frontier was, somewhat more technical friendly than OmniOutliner etc. and with an actual UI instead of emacs org-mode.
[09:55:11] <mdhughes> But my attempts to prototype one have been less than awesome. So I dunno if the idea works out.
[09:55:36] <mdhughes> That was the premise of Doug Englebart's NLS, of course, an outliner with scripting/active code elements.
[09:56:16] <mdhughes> It *should* be possible to make a Scheme-based equivalent. Just needs a better UI toolkit than anything I have currently.
[09:58:42] <sonny> that sounds interesting. what's the issue with the UI toolkit?
[09:59:15] *** Quits: Lumia (~Lumia@208.64.158.255) (Quit: ,-)
[09:59:59] <sonny> omnioutliner looks really nice
[10:07:28] <mdhughes> Well, the options are gtk which is hideous on every platform, or platform-specific code for each, which means only Mac's gonna get done if I'm doing it.
[10:08:04] <mdhughes> Or I guess I can write X11 again, again hideous everywhere.
[10:09:34] <sonny> javafx was "really nice" last time I checked
[10:10:21] <mdhughes> Bleh. I ain't do Java anymore. And hooking it into Scheme would be awful, even just writing Kawa puts me in too much contact with the JVM & APIs.
[10:10:39] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[10:10:59] <ns12> How about a Curses interface?
[10:11:10] *** Quits: skapata (~Skapata@user/skapata) (Quit: Äœis.)
[10:11:26] <sonny> I imagined the interpreter would be seperate, maybe communicate via ipc
[10:11:49] <sonny> but if you dislike Java, then I don't think there are much simple options left
[10:12:08] <sonny> the last reasonable option would be to make it with a game engine
[10:13:00] <mdhughes> Text mode won't work for what I want to do, I need finer control over fonts.
[10:13:07] <sonny> myself personnally, if I wanted to get to market or something, I'd use native or javafx
[10:13:33] <sonny> curses ... lol
[10:13:48] <mdhughes> I do my games in SDL, but that's just a bare window to draw in. You can't fake native UI interactions.
[10:14:23] <sonny> true, I didn't think about that
[10:14:32] <ns12> sonny: Why lol? :(
[10:14:59] <sonny> why use a terminal in 2022?
[10:15:49] <ns12> You don't use a terminal? I only use one terminal and one web browser.
[10:16:37] <sonny> right now, no. I've just been using emacs for a few weeks
[10:17:47] *** Quits: archenoth (~archenoth@2604:3d09:681:f00:c855:f596:5d07:923e) (Remote host closed the connection)
[10:21:15] <sonny> well, someone that likes terminals did make a new alternative to curses with fancy stuff ... so I guess one could go that route
[10:22:27] <sonny> terminals are functional ... but it always seems a little backwards
[10:22:55] <mdhughes> I always have a terminal (iTerm2), but there's a lot of tasks it's bad for.
[10:26:10] <sonny> I've considered porting some line based terminal software to a proper text interface, I don't think it would be difficult
[10:28:17] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:43:24] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:56:49] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[12:18:09] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[12:19:48] *** Quits: sonny (~user@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 250 seconds)
[12:39:57] *** Joins: sonny (~user@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[13:06:45] *** Joins: ManDay (~manday@user/manday)
[13:07:05] *** Quits: sonny (~user@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:42:02] *** Joins: seninha (~seninha@user/seninha)
[14:02:25] *** Quits: vats (~vats@103.216.143.32) (Ping timeout: 256 seconds)
[14:15:21] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[14:46:59] *** Joins: frost (~frost@user/frost)
[15:09:29] *** Quits: ManDay (~manday@user/manday) (Quit: TURBOquit (tm) - the fastest way to get out of an awkward situation)
[15:20:04] *** Joins: python476 (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[15:27:18] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[15:27:47] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:29:30] *** Parts: python476 (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) ()
[15:31:48] *** Joins: vats (~vats@103.216.143.14)
[15:37:01] *** Joins: frost (~frost@user/frost)
[16:29:58] *** Quits: amoe (~amoe@visarend.solasistim.net) (Quit: Lost terminal)
[16:41:57] *** Quits: vats (~vats@103.216.143.14) (Ping timeout: 240 seconds)
[16:45:34] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[16:51:01] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:51:38] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[16:53:27] *** Joins: frost (~frost@user/frost)
[16:55:58] *** Joins: notzmv (~zmv@user/notzmv)
[17:05:03] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:20:54] <Franciman> i don't understand a thing in complex numbers notation
[17:21:02] <Franciman> is `2 + 3 i` a valid complex number?
[17:21:12] <Franciman> or is it only `2+3i` that is valid?
[17:37:02] <ecraven> the latter
[17:37:08] <ecraven> the former is 4 things, 2, +, 3 and i
[17:37:25] <ecraven> two numbers and two symbols
[17:38:48] <Franciman> thanks ^^
[17:39:01] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[17:53:18] *** Joins: klovett (~klovett@166.205.90.179)
[18:09:15] *** Joins: civodul (~user@guix/contributor/civodul)
[18:18:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:6c38:610a:dd57:a9dc)
[18:18:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:6c38:610a:dd57:a9dc) (Changing host)
[18:18:20] *** Joins: skapata (~Skapata@user/skapata)
[18:21:02] *** Quits: psf (~pi@206.55.172.18) (Ping timeout: 240 seconds)
[18:22:54] *** Joins: psf (~pi@206.55.172.18)
[18:32:33] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[18:38:05] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[18:38:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:45:54] <s-liao> Anyone tried define-macro in Gambit. Like (define-macro (inc x) `(##fixnum.+ 1 ,x))
[18:46:52] <s-liao> *** ERROR IN (console)@17.1 -- Ill-placed 'define-macro'
[18:49:52] <s-liao> Gambit version is v4.9.3
[18:52:44] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[18:53:36] *** Joins: vats (~vats@103.216.143.56)
[19:06:18] <s-liao> It can be used. But ##fixnum.+ is not correct.
[19:07:02] <s-liao> The code is supposed to run on Gambit-C 3.0 system.
[19:07:12] <s-liao> But I am on v4.9.3
[19:08:28] <s-liao> The project is SSAX. Anyone have been trying it before.
[19:14:37] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:17:25] <s-liao> It is quite old version of Gambit.
[19:19:52] <s-liao> I have found out there is window version of Gambit-C 3.0 system.
[19:21:14] *** Quits: Darkcoal (~user@130.164.163.44) (Quit: Darkcoal)
[19:24:52] *** Joins: epony (epony@user/epony)
[19:28:55] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[19:31:03] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[19:31:19] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[19:38:01] <s-liao> But two things are quite interesting. One is the include and load seems like have different behave. The second one is that define can not be used like (define ss 1) can not work.
[19:39:14] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[19:46:39] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:06:44] <mdhughes> ? % gsi \n Gambit v4.9.4-1-g9c01e393 \n > (define ss 1) \n > ssv \n 1
[20:07:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[20:11:46] <mdhughes> And note if you've given an error, your prompt is 1>, which is not top-level where you can define macros or anything else useful.
[20:22:13] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[20:28:17] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[20:31:07] <tokie> Franciman: you implementing complex numbers?:P
[21:26:17] *** Quits: ouestbillie (~gallup@185.213.154.231) (Ping timeout: 240 seconds)
[21:28:20] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[21:41:07] *** Joins: neceve (~quassel@2.26.93.228)
[21:44:50] <Zipheir> ns12: I did actually write a significant chunk of the SRFI 178 bitvector library sample implementation in ed.
[21:46:49] *** Joins: shawnw (~shawn_w@152.44.212.188)
[21:47:48] <Zipheir> ns12: I admire ed's design and size, and I'm always frustrated when I try to understand some small part of other editors and find thousands and thousands of lines of code.
[21:48:03] <Zipheir> Even small-by-current-standards things like vis.
[21:51:05] <Zipheir> ns12: Related, in case you haven't read it: http://www.catb.org/~esr/writings/taoup/html/ch13s02.html
[21:52:36] *** Quits: vats (~vats@103.216.143.56) (Remote host closed the connection)
[22:00:41] *** ChanServ sets mode: +o Zipheir
[22:01:44] *** Joins: shawn (~shawn_w@152.44.212.188)
[22:02:48] <mdhughes> > Almost all Unix programmers have strayed from the path of austerity and minimalist virtue enough to normally use editors that at least present a roguelike, screen-oriented interface. However, the fact that the religion of ed persists[117] says a great deal that is worth noting about the Unix mindset.
[22:03:02] <mdhughes> Ah, yes, editors with random levels, permadeath, and ASCII monsters.
[22:03:12] <Zipheir> Hah.  The best kind.
[22:03:24] <mdhughes> If you die in ed, you die in real life.
[22:03:38] <Zipheir> Interestingly, 'roguelike' refers to the same program in both meanings, IIUC.
[22:04:24] <mdhughes> It does. IIRC, rogue's movement keys were based on cursor keys in another screen editor, and then vi adopted them from rogue, so it's true, but not exactly true.
[22:04:39] *** Quits: shawnw (~shawn_w@152.44.212.188) (Ping timeout: 256 seconds)
[22:07:43] <sham1> I'm sure someone has built a rogue clone on Emacs
[22:08:33] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[22:09:25] <Zipheir> Of course, https://xkcd.com/378/
[22:20:21] *** Quits: fancycade (~fancycade@2600:1700:eec0:8e80:8639:beff:fe6a:1bb3) (Ping timeout: 245 seconds)
[22:32:16] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[22:46:27] *** Joins: m455 (~m455@user/m455)
[23:13:07] <tristero> vi came first, then curses so it could run on more terminal types, then rogue was built using curses (see http://www.digital-eel.com/deep/A_Brief_History_of_Rogue.htm)
[23:16:03] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:21:51] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[23:32:46] *** ChanServ sets mode: -o Zipheir
[23:34:20] <mdhughes> That history is incorrect. https://en.wikipedia.org/wiki/Curses_%28programming_library%29
[23:35:19] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:37:09] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[23:51:23] <tristero> I guess vi continued to use termcap, rather than curses, but I don't see the contradiction. Rogue's keys came from vi's.
[23:54:17] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 240 seconds)
[23:56:32] *** Joins: johnjaye (~pi@173.209.65.233)
[23:58:57] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 240 seconds)
