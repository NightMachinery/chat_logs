[00:00:55] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[00:00:57] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[00:01:02] *** Joins: jumper149 (~jumper149@static.6.71.203.116.clients.your-server.de)
[00:01:39] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[00:01:54] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[00:04:13] <jumper149> Is blaze-html maintained properly? It seems like a few html tags aren't included.
[00:06:25] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[00:12:16] <Henson> I'm trying to run a file interactively using ghci, and I'm getting an error about "undefined symbol: __gxx_personality_v0".  The library in question is in pure Haskell, and doesn't depend on any C or C++ code.
[00:13:56] <geekosaur> I think libffi pulls that in, and is needed even for pure Haskell code because ultimately system calls go through libffi instead of the runtime trying to figure out how to call them directly (or, how linux decided to change their interface this week)
[00:14:49] <geekosaur> (even worse on windows since the only way to make a system call is a foreign dll call)
[00:16:28] <Henson> geekosaur: any idea on how to remedy it?  I'm building this in Nix, and something that just occurred to me is I haven't included the appropriate library in the shell.nix file.
[00:17:28] <Henson> geekosaur: hmm, maybe not a Nix problem, libstdc++ is in the gcc compiler package, which I've included.
[00:17:29] <geekosaur> that should be libstdc++.so (unless you mean nix on os x in which case it's probably libc++.dylib)
[00:18:10] <geekosaur> but I know little about nix
[00:18:41] *** Joins: ph88^ (~ph88@2a02:8109:9e00:71d0:1121:f5bd:b8b:ca33)
[00:20:11] <Henson> geekosaur: ok, I'll keep digging.  Thanks for the help
[00:20:20] <geekosaur> a quick check confirms it comes form libstdc++
[00:20:44] <geekosaur> beyond that, no clue especially if you have gcc exposed
[00:21:20] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[00:25:05] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[00:25:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[00:29:55] *** Joins: amk (~amk@109.255.169.126)
[00:30:20] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[00:32:35] *** Joins: acidjnk (~acidjnk@p200300d0c7271e256ce23fbe5bf2eea3.dip0.t-ipconnect.de)
[00:33:29] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:39:05] *** Joins: andbartol (~andbartol@dynamic-adsl-84-221-241-8.clienti.tiscali.it)
[00:39:11] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[00:40:18] *** Quits: andbartol (~andbartol@dynamic-adsl-84-221-241-8.clienti.tiscali.it) (Client Quit)
[00:40:52] *** Joins: andbartol (~andbartol@user/Bartol)
[00:41:33] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:41:54] *** Quits: andbartol (~andbartol@user/Bartol) (Client Quit)
[00:43:56] *** Joins: andbartol (~andbartol@user/Bartol)
[00:44:32] *** Quits: andbartol (~andbartol@user/Bartol) (Client Quit)
[00:44:39] *** Joins: andbartol (~andbartol@user/Bartol)
[00:46:52] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[00:49:00] *** Quits: cosimone (~user@93-47-231-231.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:50:38] *** Joins: ksqsf (~user@134.209.106.31)
[00:51:31] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:59:37] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[01:02:04] *** Quits: Bartol (~Bartol@user/Bartol) (Quit: Client closed)
[01:07:03] *** Quits: ph88^ (~ph88@2a02:8109:9e00:71d0:1121:f5bd:b8b:ca33) (Remote host closed the connection)
[01:07:18] *** andbartol is now known as Bartol
[01:10:38] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[01:10:39] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[01:12:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:12:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:12:12] *** Joins: wroathe (~wroathe@user/wroathe)
[01:12:34] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[01:13:06] *** Joins: acidsys (~LSD@2.lsd.systems)
[01:13:17] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[01:15:17] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[01:15:55] *** Joins: amk (~amk@109.255.169.126)
[01:17:21] *** Quits: kuribas (~user@ptr-25vy0i8itabkuxqpwp8.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[01:17:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:18:28] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[01:19:02] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[01:20:26] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[01:23:05] <Henson> geekosaur: I figured it out.  I was not including the various C libraries when compiling my library.  This was not a problem in the case of building the executable, because the necessary libraries were included in the build instructions for the executable, same as the test suite executable.  However, when trying to run the tests interactively using ghci, it was missing the libraries and failing.
[01:24:28] *** Joins: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk)
[01:24:51] *** Joins: cheater (~Username@user/cheater)
[01:25:17] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[01:26:21] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[01:28:55] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[01:30:41] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[01:31:02] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:b7fd:fa95:80d6:f41) (Ping timeout: 240 seconds)
[01:34:05] <mrianbloom> Is there any project out there that uses linear types to manage foreign pointers?
[01:34:09] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:34:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:34:30] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:34:30] *** Joins: wroathe (~wroathe@user/wroathe)
[01:34:33] <mrianbloom> I'm just trying to understand best practices.
[01:35:26] <geekosaur> I'm not sure there are any projects out there to speak of that use linear types, period
[01:35:42] <geekosaur> aside from Tweag
[01:36:40] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[01:37:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:499c:186d:f10d:6a24) (Ping timeout: 260 seconds)
[01:38:17] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[01:38:53] <mrianbloom> Hmmm... seems so promising.
[01:39:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[01:41:23] *** Joins: hololeap (~hololeap@user/hololeap)
[01:41:23] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:42:00] *** Joins: rusty (~rustyboy@82.77.225.165)
[01:42:13] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[01:42:34] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[01:44:18] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[01:44:46] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:d0f9:15ce:3995:401b) (Ping timeout: 260 seconds)
[01:45:10] *** Joins: ksqsf (~user@134.209.106.31)
[01:46:31] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Client Quit)
[01:47:14] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[01:47:37] *** Joins: amk (~amk@109.255.169.126)
[01:48:22] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[01:49:21] *** Joins: matthias1 (~igloo@cpe-76-170-236-166.socal.res.rr.com)
[01:50:02] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[01:51:50] *** Quits: matthias1 (~igloo@cpe-76-170-236-166.socal.res.rr.com) (Remote host closed the connection)
[01:52:39] *** Joins: matthias1 (~igloo@cpe-76-170-236-166.socal.res.rr.com)
[01:53:46] *** Quits: matthias1 (~igloo@cpe-76-170-236-166.socal.res.rr.com) (Remote host closed the connection)
[01:54:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:54:26] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[01:55:37] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[01:55:51] *** Joins: notzmv (~zmv@user/notzmv)
[01:58:28] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:58:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[02:00:29] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[02:01:42] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:1bce:ba7c:3f01:c9f3)
[02:06:58] *** Joins: amk (~amk@109.255.169.126)
[02:08:32] *** Quits: jumper149 (~jumper149@static.6.71.203.116.clients.your-server.de) (Quit: WeeChat 3.3)
[02:10:42] *** Joins: ksqsf (~user@134.209.106.31)
[02:11:10] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[02:13:37] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:13:41] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:14:22] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[02:14:24] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:14:35] *** Quits: ubert (~Thunderbi@p548c89c3.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:15:42] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[02:16:10] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[02:16:10] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:16:20] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:16:48] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[02:16:49] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:16:50] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:17:16] *** Joins: jeetelongname (~jeet@88-111-159-26.dynamic.dsl.as9105.com)
[02:21:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:21:49] *** Joins: Guest|47 (~Guest|47@c-73-221-44-172.hsd1.wa.comcast.net)
[02:23:40] <Guest|47> Prelude> curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
[02:23:41] <Guest|47> <interactive>:2:1: error: Variable not in scope: curl
[02:24:15] <Guest|47> This is the terminal message I get when I try to run the  haskell install package from: https://www.haskell.org/ghcup/#
[02:25:08] <geekosaur> you're running it from ghci instead of the shell. if you already have ghci, why do you need ghcup?
[02:26:01] <Guest|47> Wow, good catch. haha
[02:26:30] <Guest|47> I'm trying to update to GHCi from version 8.4.2
[02:27:08] <Guest|47> with end goal of downloading Euterpea and HSoM to work through "The Haskell School Of Music" book
[02:27:50] <yushyin> `ghcup tui'
[02:28:12] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[02:28:40] <Guest|47> >> curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
[02:28:41] <Guest|47> curl: (60) SSL certificate problem: certificate has expired
[02:28:41] <Guest|47> More details here: https://curl.haxx.se/docs/sslcerts.html
[02:28:53] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[02:28:53] <geekosaur> once you have ghcup, that is. mthen 'a' to show 8.4.2, since by default it shows only the latest release in any given series which will be 8.4.4 in your case
[02:29:41] <geekosaur> hm, chrome here thinks the cert is fine
[02:30:26] *** Quits: Bartol (~andbartol@user/Bartol) (Remote host closed the connection)
[02:31:03] <geekosaur> hm, you may have an old let's encrypt root certificate
[02:31:22] <geekosaur> the original expired back in august
[02:32:19] <geekosaur> I don't know how you would update your system's certificate store to get updated root certificates
[02:32:44] <Guest|47> I first updated cabal with "cabal install cabal-install"
[02:32:53] <Guest|47> Not sure if it is related to cabal though
[02:32:57] <geekosaur> it's not
[02:33:01] <geekosaur> this is related to curl
[02:33:55] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[02:34:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[02:34:20] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Quit: emf)
[02:34:49] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[02:36:48] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:84c9:5514:9bd3:b2f5) (Remote host closed the connection)
[02:41:11] *** Quits: max22- (~maxime@2a01cb0883359800cf3672742e8ded0b.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:41:39] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:41:43] <geekosaur> https://curl.se/ca/cacert.pem is the latest certificate store. you can download this using a browser and then add --cacert=cacert.pem after --tlsv1.2
[02:41:53] *** Joins: ksqsf (~user@134.209.106.31)
[02:42:46] <geekosaur> (if your browser doesn't put it in the current directory then you may need to point to it, e.g. --cacert=~/Downloads/cacert.pem)
[02:44:20] <hpc> i am surprised your os updates haven't already packaged the new cert
[02:44:44] <geekosaur> so am I tbh
[02:44:51] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:45:32] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[02:46:52] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[02:48:16] <Guest|47> Oh thanks for the help, I'll try that.
[02:48:26] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[02:48:39] <Guest|47> I just reinstalled Curl thinking that would do something positive - it did nothing
[02:49:01] <Guest|47> Then I tried:
[02:49:02] <Guest|47> HOMEBREW_FORCE_BREWED_CURL=1
[02:49:02] <Guest|47> also to no avail
[02:50:06] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 260 seconds)
[02:51:17] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[02:52:34] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:84c9:5514:9bd3:b2f5)
[02:52:43] <zero> i never remember how to set a constant inside a list compreension
[02:53:00] *** Quits: rusty (~rustyboy@82.77.225.165) (Quit: Leaving)
[02:53:10] <zero> [ (x,y) | x <- ss , y <- ss , let ss = [1..5] ] ?
[02:53:52] <geekosaur> hm, either one might be using apple's certs instead
[02:54:04] <geekosaur> although one would think apple would have updated by now, too
[02:54:34] <geekosaur> zero, should be, yes
[02:54:50] <geekosaur> > [ (x,y) | x <- ss , y <- ss , let ss = [1..5] ]
[02:54:51] <lambdabot>  error:
[02:54:51] <lambdabot>      • Variable not in scope: ss :: [a]
[02:54:51] <lambdabot>      • Perhaps you meant ‘s’ (imported from Debug.SimpleReflect)error:
[02:55:08] <geekosaur> mm, I think it's not in scope yet for those
[02:55:44] <zero> > [ (x,y) | let ss = [0..2] , x <- ss , y <- ss ]
[02:55:46] <lambdabot>  [(0,0),(0,1),(0,2),(1,0),(1,1),(1,2),(2,0),(2,1),(2,2)]
[02:55:55] <zero> ah that was it
[02:56:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[02:57:49] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:57:50] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:58:17] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:58:34] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:58:34] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:58:45] <sshine> > (,) <$> [0..2] <*> [0..2]
[02:58:46] <lambdabot>  [(0,0),(0,1),(0,2),(1,0),(1,1),(1,2),(2,0),(2,1),(2,2)]
[02:59:36] <sshine> > liftA2 (,) [0..2] [0..2]
[02:59:37] <lambdabot>  [(0,0),(0,1),(0,2),(1,0),(1,1),(1,2),(2,0),(2,1),(2,2)]
[03:00:57] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:01:22] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:01:26] *** Joins: foul_owl (~kerry@94.140.8.107)
[03:01:58] *** Joins: pfurla (~pfurla@2804:14d:5c5a:9a78:dc7f:5982:796e:a1e5)
[03:02:13] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 240 seconds)
[03:02:56] *** Joins: ksqsf (~user@134.209.106.31)
[03:04:10] <yin> i'm trying the Data.Graph.AStar from the astar library and it's SLOOOOWWW
[03:04:40] <yin> so slow
[03:04:45] <janus> yin: did you see that glguy wrote his own astar for aoc?
[03:04:55] <yin> no!
[03:05:05] <yin> i want to see it!
[03:05:29] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[03:05:56] <g> https://glguy.net/advent2021/lib/Advent-Search.html#v:astar click "source"
[03:06:06] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 268 seconds)
[03:06:32] <yin> that's it. if i have a son i'm naming him Eric
[03:07:37] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[03:13:10] *** Joins: ksqsf (~user@134.209.106.31)
[03:14:35] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[03:14:46] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[03:15:17] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[03:16:38] <jackdk> https://hackage.haskell.org/package/search-algorithms-0.3.1/docs/Algorithm-Search.html#v:aStar I like this library for search stuff
[03:16:45] <jackdk> haven't benchmarked it though
[03:21:19] *** Quits: Guest|47 (~Guest|47@c-73-221-44-172.hsd1.wa.comcast.net) (Quit: Connection closed)
[03:22:16] *** Joins: wolfshappen (~waff@irc.furworks.de)
[03:27:12] <EvanR> I copy pasted the Astar from wikipedia
[03:27:16] <EvanR> no idea how it works
[03:28:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:28:10] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:28:10] *** Joins: wroathe (~wroathe@user/wroathe)
[03:29:06] *** Quits: acidjnk (~acidjnk@p200300d0c7271e256ce23fbe5bf2eea3.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[03:30:37] *** Quits: chomwitt (~chomwitt@94.66.63.187) (Ping timeout: 240 seconds)
[03:31:23] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[03:31:42] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[03:33:20] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[03:38:29] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[03:38:57] *** Quits: slaydr (~seriley@45.131.194.254) (Quit: leaving)
[03:39:43] *** Joins: Guest4242 (~Guest4242@78.198.4.122)
[03:41:01] *** Joins: hololeap (~hololeap@user/hololeap)
[03:41:15] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:44:49] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[03:45:01] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:45:01] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:45:01] *** Joins: wroathe (~wroathe@user/wroathe)
[03:46:11] <EvanR> is there something weird about how defining equations sometimes require this idea of "what order do you try them in" to make sense
[03:46:12] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:1bce:ba7c:3f01:c9f3) (Ping timeout: 268 seconds)
[03:46:28] <EvanR> other times they don't
[03:46:57] <EvanR> in math they would call bullshit on such definitions
[03:47:26] <geekosaur> patternmatching can't be smart like humans, it has to rely on humans to order things
[03:49:12] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[03:54:03] <yin> EvanR: how long did it take you to calc part2 ?
[03:54:18] <EvanR> what day
[03:54:30] <yin> the pathfinding day
[03:54:33] <yin> huh..
[03:54:35] <yin> 15
[03:54:50] <EvanR> it took a second or two
[03:55:12] <yin> well i'm doing something wrong then
[03:56:06] <EvanR> oh part 2, it took a little longer, iirc
[03:56:30] <EvanR> not so long that I did this \o/ cancelled it and looked for some other solution
[03:56:39] <yin> tests ok for both parts, part1 is fast but part2 is going on 7 minutes and counting... i tried both libraries aStar and dijkstra
[03:56:41] <EvanR> which doesn't take long
[03:57:01] <EvanR> when stuff may take a while I make sure to put print out of progress somehow
[03:57:42] <EvanR> the performance of astar apparently depends on the quality of the h function
[03:57:50] <yin> tbf i'm on 32bit 1G Ram
[03:59:56] <dsal> My day 15 various timing things:  https://www.irccloud.com/pastebin/SFN8Et1K/day15.txt
[04:00:45] <dsal> c is A* Data.Graph.AStar where b is my own Dijkstra implementation.
[04:01:29] <dsal> (These tests are concurrent, so the timing interfere)
[04:01:37] *** Quits: jkaye (~jkaye@2601:281:8300:7530:e0f7:dc28:dd0d:f0d5) (Ping timeout: 240 seconds)
[04:02:36] <dsal> part 2 spoiler:  part2 = part1b . embiggen . gridToMap
[04:03:28] <dsal> I don't even remember this one.  I should sleep more.
[04:03:32] <EvanR> spoiler: print =<< solve =<< getData
[04:06:43] <monochrom> Haha that's like Feynman's method written in Haskell.
[04:06:48] <dsal> haha
[04:07:05] <monochrom> 1. Read the input carefully.  2. Compute very hard.  3. Print the output.
[04:07:16] <hpc> i have that on my whiteboard
[04:07:25] <zero> i suffer from aoc amnesia, where my memory resets every 2 stars
[04:07:37] <dsal> If I switch from lazy map to strict map, it goes from almost instantly to just hangs.
[04:07:38] <hpc> along with "every impossible problem has an impossible cause" and "asking for help is the original proof of work protocol"
[04:07:59] <dsal> zero: I keep seeing people say, "This is exactly probably X from year Y" and I don't even remember there being a year Y.
[04:08:27] <monochrom> Yeah if you use Map for lazy person's dynamic programming, it is imperative to use lazy Map.insert.
[04:08:57] <zero> dsal: that might be cause for concern
[04:09:15] <dsal> I'm just using Map.fromList with Map.! inside a list comprehension.
[04:09:21] <dsal> (for The Embiggening)
[04:09:55] <monochrom> Yeah, that.
[04:09:59] <dsal> I've wasted time trying to get lazy maps to do my bidding on a couple of these problems where there were loops.
[04:10:02] <zero> my embiggening: unions [ S.map (\((x,y),c) -> ((x + side * x',y + side * y'),iterate suc c !! (x'+y'))) g | let ss = [0..4] , x' <- ss , y' <- ss ]
[04:10:13] <monochrom> byorgey really likes to promote that simple trick.
[04:10:32] <dsal> zero: Mine's way more lines than yours.  I wrote a minivan.
[04:11:18] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[04:11:18] <zero> the trick is to own one wide screen
[04:16:24] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[04:16:37] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[04:19:58] *** Joins: Guest|47 (~Guest|47@c-73-221-44-172.hsd1.wa.comcast.net)
[04:23:32] *** Quits: pfurla (~pfurla@2804:14d:5c5a:9a78:dc7f:5982:796e:a1e5) (Quit: gone to sleep. ZZZzzz…)
[04:24:25] <EvanR> One Wide Trick
[04:24:47] <EvanR> your monitor will hate it
[04:27:15] <zero> i'm not too ashamed of my day 14 solution (protein insertion)
[04:27:17] <zero> https://paste.jrvieira.com/1640134606624
[04:28:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:30:20] *** Joins: pfurla (~pfurla@189.60.63.81)
[04:34:04] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:157f:fad:702e:d7a)
[04:40:17] *** Joins: ksqsf (~user@134.209.106.31)
[04:43:13] <EvanR> I feel like I'm playing clue or mastermind reading this pattern matching code
[04:43:37] <EvanR> https://paste.tomsmeding.com/Bcx0Usru after the first line, c is not Air... after the second d is not Air...
[04:45:18] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[04:46:30] <EvanR> I hope I'm accurately appreciating how much if then statements it's not
[04:48:32] *** Joins: mk-fg (~mk-fg@46.48.96.28)
[04:48:59] *** Joins: Axma99203 (~Axman6@user/axman6)
[04:49:37] *** Parts: mk-fg (~mk-fg@46.48.96.28) ()
[04:51:14] *** Joins: jkaye (~jkaye@2601:281:8300:7530:6da5:b4a4:e0e4:a76e)
[04:51:16] *** Quits: Axman6 (~Axman6@user/axman6) (Ping timeout: 260 seconds)
[04:52:12] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[04:52:14] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[04:53:27] <geekosaur> Guest|47, have you tried loading the URL curl can't open with a browser and saving it to a file?
[04:57:45] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[04:58:11] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[05:00:23] <Guest|47> geekosaur, I had updates on my OS turn off.
[05:00:24] <Guest|47> I just finished:
[05:00:25] <Guest|47> updating OS
[05:00:25] <Guest|47> installing haskell package with curl
[05:00:38] <Guest|47> ghcup tui does nothing in bash
[05:00:53] <geekosaur> did you add it to your PATH?
[05:01:10] <Guest|47> and  running ghci still shows version 8.4.2
[05:01:21] <geekosaur> export PATH=$HOME/.ghcup/bin:$PATH
[05:01:24] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[05:01:31] <Guest|47> I don't quite understand your question...
[05:02:28] <geekosaur> run the command I just gave you, in bash. the one starting with "export"
[05:02:31] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[05:02:31] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[05:02:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[05:02:55] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[05:02:56] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[05:03:38] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[05:03:38] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[05:03:52] <Guest|47> okay that worked
[05:04:40] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[05:04:40] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[05:04:44] <geekosaur> then you'll want to edit ~/.bash_profile to add that command to it, so future shells you open know about ghcup
[05:06:59] *** Quits: jeetelongname (~jeet@88-111-159-26.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[05:08:37] *** Quits: incertia (~incertia@d4-50-26-103.nap.wideopenwest.com) (Ping timeout: 240 seconds)
[05:08:37] <Guest|47> >> ~/.bash_profile
[05:08:37] <Guest|47> -bash: /Users/mainUser/.bash_profile: Permission denied
[05:09:28] <geekosaur> it's not generally runnable. you want to *edit* it
[05:09:56] *** Joins: incertia (~incertia@d4-50-26-103.nap.wideopenwest.com)
[05:09:59] *** Joins: ksqsf (~user@134.209.106.31)
[05:10:11] <Guest|47> okay i'll give it a go
[05:10:19] <yin> how do i tell ghc what i want my literal types to default to?
[05:11:09] <yin> `default Num Int` ?
[05:11:50] <geekosaur> `default (Int, Double)` or similar
[05:13:40] <zero> what does it mean?
[05:13:48] <geekosaur> Guest|47, open -e ~/.bash_profile
[05:14:19] <Guest|47> then paste,
[05:14:19] <Guest|47>  export PATH=$HOME/.ghcup/bin:$PATH
[05:14:20] <Guest|47> into the file?
[05:14:25] <geekosaur> yes
[05:14:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:84c9:5514:9bd3:b2f5) (Remote host closed the connection)
[05:14:58] <geekosaur> zero, it means, for any typeclass instance it has not yet managed to resolve to a type, first try Int, then Double
[05:15:20] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[05:15:29] <geekosaur> with various ghc extensions this list gets extended
[05:17:51] <geekosaur> https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-790004.3.4 discusses the default declaration
[05:18:18] *** Quits: angerman (sid209936@id-209936.ilkley.irccloud.com) ()
[05:18:51] <dsal> I usually just tell it what I want, but I can see a few places that might help.
[05:21:06] *** Quits: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk) (Remote host closed the connection)
[05:21:29] <Guest|47> geekosaur, can you recommend resource for better understanding the PATH business you led me through? How did you even come up with
[05:21:29] <Guest|47> "export PATH=$HOME/.ghcup/bin:$PATH"? was it a lucky guess?
[05:22:05] <geekosaur> I've been using systems like this for, uh, over 35 years :) and I know where ghcup installs itself
[05:22:14] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 260 seconds)
[05:22:19] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-169.elisa-laajakaista.fi) (Quit: Leaving.)
[05:22:51] <geekosaur> https://www.cs.purdue.edu/homes/bb/cs348/www-S08/unix_path.html is one resource
[05:23:20] *** Quits: ph88 (~ph88@ip5f5af068.dynamic.kabel-deutschland.de) (Quit: Leaving)
[05:23:53] <geekosaur> mm, actually I'm up to 40 years now
[05:24:11] <zero> thanks! dsal i just want various list of strings (show <$> [n..m]) and it get's annoying
[05:24:12] <Guest|47> Okay, experience is sensible reason. thanks for the extra resource though
[05:26:08] <pfurla-matrix> geekosaur: I got my first copy of Linux in 40 floppy disks in '95
[05:27:02] <zero> i copied the binary from a radio transmission in morse code
[05:27:06] <geekosaur> so did I. I started out on a dialup TRS-80 Model 16 running Xenix though
[05:28:18] <EvanR> 40 years ... dang so since the 60s
[05:28:20] <sm> Commodore PET and Sinclair ZX80 user checking in!
[05:28:33] <zero> EvanR: right?
[05:28:35] <EvanR> lol
[05:28:40] *** Quits: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) ()
[05:29:40] <geekosaur> mm?
[05:29:44] <geekosaur> > 2021 - 1981
[05:29:45] <lambdabot>  40
[05:30:01] <EvanR> forgot it was the future for a second
[05:30:09] <geekosaur> 60s would be when I was born :)
[05:30:19] <EvanR> :tron:
[05:30:31] *** Joins: ksqsf (~user@134.209.106.31)
[05:33:34] <EvanR> I also regularly think of the 80s when anyone says "20 years ago"
[05:33:44] <zero> > let _ !- y = 2000 - y in 2021 - 40
[05:33:46] <lambdabot>  1981
[05:34:00] <zero> > let _ !- y = 2000 - y in 2021 !- 40
[05:34:02] <lambdabot>  1960
[05:34:59] <EvanR> what in the
[05:35:07] <EvanR> math
[05:35:23] <dsal> Math and time were generally easier around 2000
[05:35:35] <zero> no no no
[05:35:38] <zero> Y2k
[05:35:44] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[05:36:07] <dsal> Yeah, that had a bit of an effect, I guess
[05:36:20] <zero> people arguing about when was it *really* the turn of the millennium
[05:36:33] <zero> was there year 0 ?
[05:36:42] <zero> did it really matter?
[05:36:51] <zero> all the calendar patches
[05:37:19] <zero> then somehow a single second was added to a random year
[05:37:20] <EvanR> lambdabot doesn't have Data.Time :(
[05:37:49] <zero> like wtf? i miss the 90s
[05:37:53] <zero> simpler times
[05:37:55] <EvanR> said no one ever
[05:38:10] *** Joins: ksqsf (~user@134.209.106.31)
[05:38:43] <zero> anyways it's now T-what? to Metaverse?
[05:39:15] <zero> maybe we should start cunting backwards
[05:39:34] <zero> counting
[05:39:48] <zero> damned 'o' key..
[05:39:53] <zero> i should shut up
[05:40:08] <Guest|47> Do the creators of haskell hang out here?
[05:40:26] <Guest|47> vague question
[05:40:48] <geekosaur> I don't think any of them are on IRC
[05:41:08] <Guest|47> Sounds like something a creator would say...
[05:41:31] <yin> lol what's happening today? :D
[05:41:44] * geekosaur didn't discover haskell until 2006
[05:42:26] <zero> > 2021 - 2006  -- just so you know
[05:42:27] <lambdabot>  15
[05:42:37] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[05:42:37] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::917a) (Ping timeout: 240 seconds)
[05:42:59] <EvanR> like 20 years ago
[05:43:16] <int-e> 20 years ago, 2006 was in the far future
[05:44:34] *** Guest|47 is now known as AlpacaPrince
[05:45:01] <int-e> . o O ( "far future" = "after the next general election" )
[05:45:37] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[05:46:04] * dsal sings “in the year two thousand…”
[05:46:29] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[05:48:49] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[05:49:36] *** Joins: euouae (~euouae@user/euouae)
[05:50:39] <yin> dsal: read my mind. love how he kept doing it years after
[05:51:07] <dsal> yin: ha, yeah, that just made it better
[05:52:17] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::917a)
[05:52:42] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:84c9:5514:9bd3:b2f5)
[05:54:57] *** Quits: jkaye (~jkaye@2601:281:8300:7530:6da5:b4a4:e0e4:a76e) (Ping timeout: 240 seconds)
[05:56:25] *** Joins: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk)
[05:59:42] <AlpacaPrince> upon updating haskell, the final prompt says:
[05:59:42] <AlpacaPrince> "If you are new to Haskell, check out https://www.haskell.org/ghcup/install/#first-steps"
[06:00:06] <AlpacaPrince> then:
[06:00:07] <dsal> AlpacaPrince: What does "updating haskell" mean?
[06:00:20] <AlpacaPrince> This will generate the following files:
[06:00:20] <AlpacaPrince> tree
[06:00:21] <AlpacaPrince> .
[06:00:22] <AlpacaPrince> ├── app
[06:00:22] <AlpacaPrince> │   └── Main.hs
[06:00:22] <AlpacaPrince> ├── CHANGELOG.md
[06:00:23] <AlpacaPrince> └── myfirstapp.cabal
[06:00:24] <AlpacaPrince> app/Main.hs is where your package’s code lives.
[06:00:42] <AlpacaPrince> by updating haskell I mean:
[06:00:43] <AlpacaPrince> curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
[06:01:06] <dsal> You mean installing ghcup?
[06:01:11] <zero> ha!
[06:01:20] <zero> AlpacaPrince: run ghcup tui
[06:01:51] *** Quits: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk) (Ping timeout: 268 seconds)
[06:01:52] <AlpacaPrince> Yes, only I already had it installed, so it felt more like updating to me- though computers don't share my sentiment of feelings.
[06:02:00] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[06:02:21] <AlpacaPrince> The point I'm getting at, is that my tree lacks app >> main.hs
[06:02:24] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[06:02:33] <zero> AlpacaPrince: it can be confusing having multiple installations of ghc or whatever in different places
[06:03:11] <AlpacaPrince> ...after running :
[06:03:11] <AlpacaPrince> cabal init -n
[06:03:12] <AlpacaPrince> ...that is
[06:03:18] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[06:04:03] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[06:05:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:06:33] <euouae> Are you saying that `cabal init` doesn't generate an app/Main.hs for you?
[06:06:58] *** Joins: ksqsf (~user@134.209.106.31)
[06:07:02] <AlpacaPrince> Yes.
[06:07:29] <EvanR> I think I've had that happen
[06:07:29] <zero> what's the -n flag?
[06:07:50] <euouae> zero just use `cabal init --help` and see for yourself 
[06:08:10] <AlpacaPrince> Also, I'm uncertain why ghcup prompts me to use `cabal init` when it is an overly complicated way to just save a text.hs and run that instead?
[06:08:12] <euouae> AlpacaPrince can you pastebin an example invocation? `mkdir foo; cd foo; cabal init; ls *`
[06:08:38] *** Joins: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[06:08:45] <zero> oops i was looking in the wrong place
[06:08:54] <euouae> Use https://paste.tomsmeding.com to paste
[06:12:00] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[06:12:36] <AlpacaPrince> euouae what do you want me to paste into that?
[06:13:02] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[06:13:03] <euouae> AlpacaPrince the output of the commands I wrote above
[06:13:52] *** Joins: ksqsf (~user@134.209.106.31)
[06:17:10] <AlpacaPrince> it says that foo is already in use by another package on Hackage
[06:17:29] <euouae> Please paste the output of the commands in the link
[06:17:47] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[06:18:07] *** Joins: fef (~thedawn@user/thedawn)
[06:18:25] *** Joins: khumba (~khumba@user/khumba)
[06:19:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:20:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:20:51] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[06:21:00] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[06:22:05] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:22:10] <AlpacaPrince> I did
[06:22:25] <euouae> and now you can share the generated link here
[06:23:22] <AlpacaPrince> https://paste.tomsmeding.com/DceZ4mht/raw/1
[06:23:53] <euouae> That's not the command I told you to run
[06:23:54] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[06:24:46] <AlpacaPrince> euouae 18:38:13
[06:24:47] <AlpacaPrince> AlpacaPrince can you pastebin an example invocation? `mkdir foo; cd foo; cabal init; ls *`
[06:25:02] *** Quits: xff0x (~xff0x@port-92-195-26-37.dynamic.as20676.net) (Ping timeout: 256 seconds)
[06:25:04] <euouae> There is no need to repeat messages on IRC
[06:25:21] <AlpacaPrince> good point.
[06:26:20] <AlpacaPrince> this command?cabal init --help
[06:26:38] <euouae> You used the -n flag and I did not include ti 
[06:26:44] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:7707:2a36:9641:195d)
[06:27:19] <euouae> In any case, you may delete the `foo` directory and instead do `mkdir foo665; cd foo665; cabal init; ls *` and paste the results as before in the website linked
[06:28:54] <AlpacaPrince> oh I see, I tried that too (without -n) and got:
[06:28:55] <AlpacaPrince> https://paste.tomsmeding.com/tnaJZ5pW/raw/1
[06:29:46] <int-e> pfffffffft, read the error
[06:31:51] <AlpacaPrince> Using cabal init seems like it over complicates learning to write haskell code. I don't want to blindly brush `cabal init` off as being "useless to me" before I know for sure that it is.
[06:31:51] <AlpacaPrince> Basically I'm just going through "learn you a haskell for great good" and for the first four chapters I was just making new .hs files for each chapter to practice code for easy execution, now I'm prompted by haskell  (after reinstallation, in hopes to be able to download Euterpea and HSoM libraries) to try this `cabal init' method that seems
[06:31:52] <AlpacaPrince> overly complicated with no benefit. Should I just continue with my clunky method of making .hs files and practicing haskell that way, or is cabal init something I should be using now?
[06:32:07] <int-e> oh, it's just a warning
[06:32:58] <int-e> what's the version of that cabal-install?
[06:33:13] <monochrom> Most favourite toy Haskell package name: foo.  Most favourite toy Unix program name: test.
[06:34:08] <euouae> AlpacaPrince if you plan to share a program with the world at some point, you need to do it through a distribution channel; those channels in the programming world are typically utilizing package managers and servers that packages may be uploaded/downloaded to/from. 
[06:35:22] <euouae> AlpacaPrince `Cabal is a system for building and packaging Haskell libraries and programs.` (from haskell.org/cabal) and https://hackage.haskell.org/ is the server where packages may be downloaded from and uploaded to
[06:36:09] <euouae> AlpacaPrince the fun of learning programming doesn't compare to the "fun" of learning how to share your code, and is obviously a more advanced topic. So you can be the judge of when it is necessary to learn these things.
[06:36:38] <int-e> (Works for me with cabal-install 3.6.2.0 on Linux.)
[06:37:38] <AlpacaPrince> >> cabal -V
[06:37:39] <AlpacaPrince> cabal-install version 3.6.2.0
[06:37:39] <AlpacaPrince> compiled using version 3.6.2.0 of the Cabal library
[06:39:47] <AlpacaPrince> thanks euouae, that makes it clear that I currently don't need the cabal service (despite it not making the app directory and main.hs like the main tutorial said it should).
[06:40:07] <euouae> It's because you're using a name that is already in use 
[06:40:35] <euouae> but since you don't need cabal, that's good.
[06:40:58] <int-e> Ah, no, it doesn't work for me. I suck at testing, evidently.
[06:41:24] <int-e> So that name clash is a fatal error.
[06:42:02] <int-e> well, that is ridiculous
[06:42:31] <AlpacaPrince> hmm, yeah I don't need it so I don't want to occupy available public names for the sake of practice.... but maybe now is the time to acquire AlpacaPrince while it's available...
[06:43:30] <AlpacaPrince> (...dry humor)
[06:43:51] <int-e> the thing is, it's not really difficult to rename a package after the fact. a bit annoying (you have to both rename and edit the .cabal file, and possibly other packages if you depend on it yourself)
[06:43:56] <euouae> int-e My main beef with languages and package managers is that there's no security framework in place for updates
[06:44:29] <euouae> so hijacking an account and pushing malware is possible in python, haskell, rust etc
[06:44:53] <AlpacaPrince> you mean false updates could happen?
[06:44:56] <int-e> Oh, I'm missing that the hackage package will conflict with build planning.
[06:44:58] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[06:45:38] <monochrom> Yeah, suppose you depend on xxx, and xxx depends on foo. Um, which foo again? :)
[06:45:50] <euouae> AlpacaPrince If you're interested in the topic, see https://theupdateframework.io/ 
[06:46:27] <int-e> So you wouldn't be able to depend on it anyway. Now who was the evil person to upload a package with that name... dons? :-/
[06:46:37] <euouae> I'm somewhat interested but I'm just learning about cryptography and related things, so I don't know how much I can involve myself in this stuff. But it's notable that the above languages lack mechanisms to ensure the esecurity of the users
[06:46:56] <int-e> (it's funny that uploader != author here)
[06:47:12] <monochrom> Perhaps someone should create https://hackage.haskell.org/package/test , too >:)
[06:48:03] <euouae> cybersquatting is fun and games until you can't compile your package
[06:48:03] <int-e> and bar and fred and barney and xyzzy and frotz and... uh... I forget what others
[06:48:13] <euouae> quux 
[06:48:40] <monochrom> Paper soccer. Interesting.
[06:48:46] <AlpacaPrince> so in layman terms, is cabal a pipeline for sharing and updating programs to publicly executable locations?
[06:48:56] *** Axma99203 is now known as Axman6
[06:49:24] *** Quits: td_ (~td@muedsl-82-207-238-131.citykom.de) (Ping timeout: 256 seconds)
[06:50:00] <euouae> AlpacaPrince they're called software repositories and they contain various peoples' programming projects. There's some automation for quickly downloading them and so on
[06:50:56] *** Joins: td_ (~td@94.134.91.68)
[06:50:57] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[06:51:22] <monochrom> No, Hackage is the software repository.
[06:51:47] <int-e> Ah, http://www.catb.org/jargon/html/M/metasyntactic-variable.html looks like a proper late 90s website.
[06:55:20] <int-e> Oh I didn't remember the jab at Python in there :)
[06:56:57] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[06:58:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:58:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:58:00] *** Joins: wroathe (~wroathe@user/wroathe)
[06:58:33] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[06:58:38] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[06:59:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:02:13] *** Joins: chozorho (~chozorho@2601:146:300:c30::d1a0)
[07:02:32] <AlpacaPrince> do you know how to exit this situation:
[07:02:32] <AlpacaPrince> >> cd "folder name with spaces               --forgot to add closing parentheses
[07:02:33] <AlpacaPrince> >                                                               -- now we are in nebulous single > territory...
[07:02:48] <AlpacaPrince> without closing terminal...
[07:03:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:03:03] *** Joins: lavaman (~lavaman@98.38.249.169)
[07:03:04] <EvanR> you could try control C
[07:03:22] <EvanR> or Escape
[07:03:22] <AlpacaPrince> That is the solution, thank you
[07:03:41] <AlpacaPrince> what is the point of:
[07:03:41] <AlpacaPrince> >
[07:04:00] <chozorho> It probably indicates that they're quoting somebody else's post
[07:04:09] <chozorho> wait
[07:04:14] <chozorho> maybe not
[07:04:18] <chozorho> forgive me, I'm new
[07:04:19] <AlpacaPrince> I mean inside of bash
[07:04:23] <dsal> > print "It's OK"
[07:04:24] <lambdabot>  <IO ()>
[07:04:26] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:04:29] <chozorho> ohh that's redirected output
[07:04:44] <chozorho> like... if instead of outputting stuff to stdout, you can redirect it to a file
[07:04:56] <euouae> bash is off topic and your answer is wrong chozorho 
[07:04:58] <AlpacaPrince> is <|O ()> and emoji?
[07:05:00] <chozorho> you can also use `tee` to -
[07:05:02] <AlpacaPrince> an*
[07:05:28] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:05:45] <chozorho> erm... I don't see how it's wrong but ok
[07:05:48] <EvanR> the shell... big topic
[07:06:20] <monochrom> No one reads the question, eh?
[07:07:07] <monochrom> In bash, the prompt > means bash thinks your previous line didn't finish your command, it now invites you to go on.
[07:07:08] <EvanR> AlpacaPrince, does your font really make <IO ()> look like <|O ()>
[07:07:10] <euouae> chozorho well it's wrong because the original issue was about multiline input, but it's also wrong that you participate in offtopic discussion... the original issue simply should not had been brought up here and the proper response is to point out that it is off topic
[07:07:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[07:07:54] <EvanR> shit the topic police showed up, run
[07:08:10] *** Parts: euouae (~euouae@user/euouae) ( )
[07:09:31] <AlpacaPrince> Monochrom that is enlightening, thank you. I'll be more cognizant of topic.
[07:10:03] <AlpacaPrince> EvanR, yes.
[07:10:37] *** Quits: jespada (~jespada@87.74.33.157) (Ping timeout: 240 seconds)
[07:10:37] <EvanR> you should fix your font, since I in IO is a capital I
[07:10:38] <monochrom> No worries, it was a fair question in the midst of using the "cd sakldjf; cabal init" idiom.
[07:10:41] <EvanR> um... Eye
[07:10:48] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:10:48] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:10:48] *** Joins: wroathe (~wroathe@user/wroathe)
[07:10:56] *** Joins: fef (~thedawn@user/thedawn)
[07:11:30] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[07:12:34] <AlpacaPrince> Well it is the brow of the emoji, but I now get your point. capital i, not a vertical bar.
[07:13:06] *** Joins: jespada (~jespada@87.74.33.157)
[07:13:06] <EvanR> also personally I didn't see any emoji
[07:13:28] <EvanR> unlike this one 😎
[07:13:52] <EvanR> some irc client friction going on I presume
[07:15:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[07:23:50] *** Joins: Erutuon (~Erutuon@user/erutuon)
[07:26:08] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[07:26:09] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[07:26:20] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:7707:2a36:9641:195d) (Ping timeout: 268 seconds)
[07:26:50] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:7789:5df4:4cdc:7899)
[07:28:53] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[07:28:53] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[07:31:32] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[07:34:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:35:06] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[07:35:06] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[07:44:56] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[07:47:19] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[07:47:57] *** Joins: notzmv (~zmv@user/notzmv)
[07:51:03] *** Joins: jinsun__ (~quassel@user/jinsun)
[07:51:20] *** Quits: jinsun__ (~quassel@user/jinsun) (Client Quit)
[07:51:37] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 240 seconds)
[07:52:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[07:54:42] *** Quits: yin (~yin@user/zero) (Ping timeout: 268 seconds)
[07:56:13] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[07:56:14] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 252 seconds)
[07:59:05] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[07:59:15] <AlpacaPrince> take 2 [1,13..]
[08:00:19] <pfurla-matrix> [1,13] 
[08:00:23] <AlpacaPrince> > take 2 [1,13..]
[08:00:24] <lambdabot>  [1,13]
[08:03:58] <ChaiTRex> Is there some nice way to do `filter ((== 8) . sum) . sequence` on a [[Word]] (i.e., everything is nonnegative) such that it short circuits lists that begin with a sum that's too high. Like if the elements produced by sequence are [1, 9, ...], when it sees 1, 9 are the first elements, it should stop processing elements that start with 1, 9 and go to some other starting two elements?
[08:04:39] <ChaiTRex> I could write a function to do it, but I was wondering if there's something built in that I don't know about.
[08:07:04] <EvanR> how would you ever write a function like that that will work from within the filter callback
[08:07:07] <EvanR> even*
[08:07:28] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[08:07:56] <EvanR> you mean it looks ahead before you even sum
[08:08:30] <ChaiTRex> I don't mean it has to use sequence or filter.
[08:09:27] <ChaiTRex> I mean to replace that with something that short circuits instead. It would look ahead. If the first element in the [Word]s produced by sequence is higher than 8, it throws away that first element.
[08:09:43] <ChaiTRex> If the first two elements sum to higher than 8, it goes to the next second element.
[08:09:50] *** Quits: obfusk (~quassel@a82-161-150-56.adsl.xs4all.nl) (Quit: No Ping reply in 180 seconds.)
[08:09:59] <ChaiTRex> Let me see if I can write the function.
[08:11:08] *** Joins: obfusk (~quassel@a82-161-150-56.adsl.xs4all.nl)
[08:16:16] <int-e> > map reverse $ filter ((== 8) . sum) . foldM (\b -> filter ((<= 8) . sum) . fmap (:b)) [] $ [[0,1,2],[0,2,4],[0,3,9]]
[08:16:17] <lambdabot>  [[1,4,3]]
[08:18:49] <EvanR> you can also just stick another filter in front
[08:18:56] <int-e> I don't know. I tend to write manual recursions for these things
[08:19:27] <int-e> which make it easier to stick in things like partial sums
[08:20:18] <int-e> also, for a fixed sum in particular I'd probably do some meet-in-the-middle stuff.
[08:20:35] <int-e> (if performance of that enumeration is critical)
[08:20:54] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[08:24:57] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 240 seconds)
[08:25:13] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[08:26:37] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:27:13] *** Joins: yauhsien (~yauhsien@2402:7500:5e5:1e81:bd32:4029:4cc:7e5a)
[08:28:53] <AlpacaPrince> Anyone here have experience with Euterpea or HSoM?
[08:30:11] <AlpacaPrince> As a new user to Haskell, I'm trying to figure out if these libraries are evening functioning/operational.
[08:39:17] *** Quits: yauhsien (~yauhsien@2402:7500:5e5:1e81:bd32:4029:4cc:7e5a) (Ping timeout: 240 seconds)
[08:41:06] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[08:41:40] *** Joins: acidsys (~LSD@2.lsd.systems)
[08:44:42] <ChaiTRex> int-e: Thanks! I was able to reduce the partial sum repeated calculations.
[08:44:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:44:50] <ChaiTRex> > map (reverse . tail) . filter ((== 8) . head) . foldM (\ (sum:ys) xs -> filter ((<= 8) . head) . fmap (\ x -> (sum + x):x:ys) $ xs) [0] $ [[0,1,2],[0,2,4],[0,3,9]]
[08:44:51] <lambdabot>  [[1,4,3]]
[08:46:35] <Square> could you write a standalone deriving statement for all members of a type family? 
[08:46:41] *** Joins: analognoise (~analognoi@185.202.221.238)
[08:49:03] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[08:55:32] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:55:32] *** Quits: statusbot4 (~statusbot@ec2-34-198-122-184.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[08:55:40] *** Joins: statusbot (~statusbot@ec2-34-198-122-184.compute-1.amazonaws.com)
[08:56:20] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 256 seconds)
[08:58:39] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[08:58:43] <lyxia> uh, you might want to be more specific because deriving is commonly associated with data, not type families.
[09:00:54] *** Joins: fizbin_ (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[09:01:35] <Square> lyxia, Atm, i feel unable to be more specific. Struggling with create a Show-like class and make it fly using generics and I somehow end up needing to specify things for the URec data family. =D 
[09:01:45] <Square> creating*
[09:01:49] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Read error: Connection reset by peer)
[09:02:22] <Square> specify things = provide instances
[09:03:08] *** Joins: pfurla_ (~pfurla@2804:18:5822:8094:5d30:a5f7:fbaf:167c)
[09:03:08] *** Quits: pfurla (~pfurla@189.60.63.81) (Ping timeout: 256 seconds)
[09:03:24] *** Quits: analognoise (~analognoi@185.202.221.238) (Quit: Leaving)
[09:04:16] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[09:08:07] *** Joins: analognoise (~analognoi@185.202.221.238)
[09:09:45] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:15:45] <int-e> ChaiTRex: oh abusing (:) as an ordered pair, nasty :P
[09:17:51] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:7789:5df4:4cdc:7899) (Ping timeout: 245 seconds)
[09:19:04] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:9996:3caa:8169:8a61)
[09:20:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:21:44] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[09:21:45] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[09:22:16] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[09:22:25] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[09:23:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:23:39] *** Joins: emf (~emf@2620:10d:c091:480::1:3408)
[09:23:43] *** Joins: pfurla (~pfurla@2804:14d:5c5a:9a78:1daa:99f1:8d08:c258)
[09:23:52] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:24:59] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:25:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:25:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:26:43] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[09:26:45] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[09:27:14] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[09:27:16] *** Joins: pfurla__ (~pfurla@2804:18:5822:8094:2d64:e7e1:c381:269f)
[09:27:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:27:18] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[09:27:43] *** Quits: dibblego (~dibblego@haskell/developer/dibblego) (Ping timeout: 250 seconds)
[09:27:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:27:49] *** Quits: pfurla_ (~pfurla@2804:18:5822:8094:5d30:a5f7:fbaf:167c) (Ping timeout: 268 seconds)
[09:28:37] *** Quits: pfurla (~pfurla@2804:14d:5c5a:9a78:1daa:99f1:8d08:c258) (Ping timeout: 240 seconds)
[09:29:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:29:37] *** Quits: emf (~emf@2620:10d:c091:480::1:3408) (Ping timeout: 240 seconds)
[09:29:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:30:03] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[09:30:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:31:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:31:32] *** Quits: pfurla__ (~pfurla@2804:18:5822:8094:2d64:e7e1:c381:269f) (Ping timeout: 240 seconds)
[09:31:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:33:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:33:49] *** Joins: pfurla (~pfurla@2804:14d:5c5a:9a78:74e3:e9be:881c:edd5)
[09:33:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[09:34:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:34:04] *** Joins: dibblego (~dibblego@122-199-1-30.ip4.superloop.com)
[09:34:04] *** Quits: dibblego (~dibblego@122-199-1-30.ip4.superloop.com) (Changing host)
[09:34:04] *** Joins: dibblego (~dibblego@haskell/developer/dibblego)
[09:35:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:36:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:37:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:38:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:39:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:40:15] *** Quits: phma (phma@2001:5b0:211f:1938:f16a:3063:a09d:1c4c) (Read error: Connection reset by peer)
[09:40:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:40:35] *** Joins: ksqsf (~user@134.209.106.31)
[09:41:09] *** Joins: phma (~phma@2001:5b0:210d:e448:bd04:4091:a4d4:4fae)
[09:41:15] *** Joins: dirtcastle (~dirtcastl@103.43.203.229)
[09:41:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:42:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:43:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:44:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:45:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:46:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:47:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:48:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:50:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:50:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:51:39] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[09:52:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:52:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:54:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:54:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:56:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:56:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:57:17] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[09:58:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:58:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:00:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:00:45] *** Quits: fizbin_ (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[10:00:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:02:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:02:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:03:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:04:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:04:32] *** Quits: dirtcastle (~dirtcastl@103.43.203.229) (Remote host closed the connection)
[10:05:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:08:14] *** Joins: mbuf (~Shakthi@171.61.232.157)
[10:08:19] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[10:08:32] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 240 seconds)
[10:09:12] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[10:09:47] *** Quits: khumba (~khumba@user/khumba) ()
[10:10:51] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:12:14] *** Quits: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) (Ping timeout: 268 seconds)
[10:12:20] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[10:15:50] *** Joins: zaquest (~notzaques@5.130.79.72)
[10:20:22] *** Joins: Erutuon (~Erutuon@user/erutuon)
[10:20:57] <AlpacaPrince> > xs = [(1,1), (1,2), (1,3)]
[10:20:57] <AlpacaPrince> >sumxs = [a+b | (a,b) <- xs]
[10:20:58] <lambdabot>  <hint>:1:4: error: parse error on input ‘=’
[10:22:05] <AlpacaPrince> I suppose lambda bot cannot have user defined variables...
[10:22:23] <AlpacaPrince> > foo = 7
[10:22:24] <AlpacaPrince> > foo
[10:22:25] <lambdabot>  <hint>:1:5: error: parse error on input ‘=’
[10:22:26] <lambdabot>  error:
[10:22:26] <lambdabot>      • Variable not in scope: foo
[10:22:26] <lambdabot>      • Perhaps you meant ‘for’ (imported from Data.Traversable)
[10:24:41] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[10:26:54] <AlpacaPrince> regarding pattern matching in list comprehension, "Learn you a haskell for great good" says:
[10:26:55] <AlpacaPrince> "Should a pattern match fail, it will just move on to the next element."
[10:26:55] <AlpacaPrince> so I try to put it to the test by putting a pair of strings in a list of pairs, and the module does not even load.
[10:27:15] <AlpacaPrince> ghci> let xs = [(1,3), (4,3), (2,4), (5,3), (5,6), (3,1)]
[10:27:16] <AlpacaPrince> ghci> [a+b | (a,b) <- xs]
[10:27:16] <AlpacaPrince> [4,7,6,8,11,4]
[10:28:37] <AlpacaPrince> that is the code that does work, but replace one pair from xs with (Char, Char) or even (Char, Int) and it does not run. It seems like it should just be a False pair and get skipped.
[10:29:20] <pavonia> The elements all still have to have the same type
[10:29:59] *** Quits: puke (~puke@user/puke) (Quit: puke)
[10:30:04] <pavonia> But try something like [ (a, 3) | (a, 3) <- xs ]
[10:31:33] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[10:31:41] *** Joins: puke (~puke@user/puke)
[10:32:00] *** Joins: pfurla_ (~pfurla@2804:14d:5c5a:9a78:6ce0:1b08:23ee:4eaf)
[10:33:14] <int-e> does this exist somewhere in base? xs <||> ys = if null xs then xs else ys
[10:33:34] <int-e> uh
[10:33:49] <int-e> I swapped xs and ys in the results: xs <||> ys = if null xs then ys else xs
[10:35:37] *** Quits: pfurla (~pfurla@2804:14d:5c5a:9a78:74e3:e9be:881c:edd5) (Ping timeout: 240 seconds)
[10:38:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:39:29] <AlpacaPrince> pavonia yes this seems to produce the effect the author indicates
[10:42:15] <AlpacaPrince> int-e I'm not sure how to even test your code. I did type it into ghci and it gave no error, but it also produced no return.
[10:42:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:43:56] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[10:45:09] <int-e> AlpacaPrince: that wasn't for you. but when you typed that into ghci, it defined an infix operator <||>, so for example :t (<||>) will print its type.
[10:45:40] <g> int-e: in readp it's like <++, biased choice
[10:45:56] <g> I think LogicT has an operator for it
[10:46:09] <int-e> > let xs <||> ys = if null xs then ys else xs in ([] <||> [1,2,3], [42] <||> [1,2,3])
[10:46:11] <lambdabot>  ([1,2,3],[42])
[10:46:38] *** Joins: jinsun (~quassel@user/jinsun)
[10:48:17] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 240 seconds)
[10:49:05] *** Joins: phma_ (~phma@2001:5b0:210d:e448:bd04:4091:a4d4:4fae)
[10:49:31] <int-e> Oh I guess I could cobble it together with Data.Monoid.First
[10:49:50] *** Quits: phma (~phma@2001:5b0:210d:e448:bd04:4091:a4d4:4fae) (Ping timeout: 260 seconds)
[10:50:12] *** Joins: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[10:51:56] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[10:51:57] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[10:53:36] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[10:54:46] *** Quits: deech` (~user@024-217-244-075.res.spectrum.com) (Ping timeout: 256 seconds)
[10:57:08] *** Joins: deech` (~user@024-217-244-075.res.spectrum.com)
[10:58:41] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[10:58:58] *** Joins: img (~img@user/img)
[11:00:13] <dsal> I'm always surprised when <|> or <!> don't do that.
[11:02:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[11:02:29] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[11:04:47] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:07:14] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 256 seconds)
[11:08:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[11:11:21] *** Quits: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) ()
[11:11:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 268 seconds)
[11:11:39] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[11:12:08] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[11:12:42] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 260 seconds)
[11:14:28] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[11:15:40] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:84c9:5514:9bd3:b2f5) (Remote host closed the connection)
[11:26:52] <int-e> > _2 (\x -> [x, x+1]) (1,2,3)
[11:26:54] <lambdabot>  [(1,2,3),(1,3,3)]
[11:29:58] *** Quits: pfurla_ (~pfurla@2804:14d:5c5a:9a78:6ce0:1b08:23ee:4eaf) (Ping timeout: 260 seconds)
[11:32:33] *** Joins: chomwitt (~chomwitt@ppp-2-85-245-134.home.otenet.gr)
[11:33:41] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[11:35:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:38:35] *** Joins: jonathanx (~jonathan@217-210-129-139-no2450.tbcn.telia.com)
[11:41:13] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:41:59] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[11:44:17] *** Joins: pfurla (~pfurla@2804:14d:5c5a:9a78:6ce0:1b08:23ee:4eaf)
[11:47:47] *** Quits: jonathanx (~jonathan@217-210-129-139-no2450.tbcn.telia.com) (Ping timeout: 252 seconds)
[11:51:19] *** Joins: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[11:51:52] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[11:51:57] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[11:57:45] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[12:01:02] *** Quits: darchitect (~darchitec@2a00:23c6:3584:df00:7dec:bf13:8fa:748c) (Ping timeout: 240 seconds)
[12:01:16] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[12:05:04] *** Quits: pfurla (~pfurla@2804:14d:5c5a:9a78:6ce0:1b08:23ee:4eaf) (Quit: gone to sleep. ZZZzzz…)
[12:05:17] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 240 seconds)
[12:15:51] *** Joins: neurocyte0132889 (~neurocyte@IP-045014189127.dynamic.medianet-world.de)
[12:15:51] *** Quits: neurocyte0132889 (~neurocyte@IP-045014189127.dynamic.medianet-world.de) (Changing host)
[12:15:51] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[12:16:04] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4)
[12:16:09] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:16:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:18:17] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 240 seconds)
[12:20:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4) (Ping timeout: 240 seconds)
[12:21:22] *** Joins: max22- (~maxime@2a01cb08833598002412bf121caf815d.ipv6.abo.wanadoo.fr)
[12:21:28] *** Quits: chozorho (~chozorho@2601:146:300:c30::d1a0) (Quit: WeeChat 3.0)
[12:27:53] *** Joins: darchitect (~darchitec@82-132-213-95.dab.02.net)
[12:29:47] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[12:31:35] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 268 seconds)
[12:33:57] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[12:35:38] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[12:36:29] *** Joins: cosimone (~user@93-47-230-208.ip115.fastwebnet.it)
[12:38:12] *** Joins: neurocyte0132889 (~neurocyte@IP-045014189127.dynamic.medianet-world.de)
[12:38:12] *** Quits: neurocyte0132889 (~neurocyte@IP-045014189127.dynamic.medianet-world.de) (Changing host)
[12:38:12] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[12:39:37] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 268 seconds)
[12:41:01] *** Joins: pfurla (~pfurla@2804:14d:5c5a:9a78:6ce0:1b08:23ee:4eaf)
[12:42:13] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[12:43:02] *** Quits: shriekingnoise (~shrieking@186.137.144.80) (Quit: Quit)
[12:43:02] *** Joins: dirtcastle (~dirtcastl@103.43.203.229)
[12:44:37] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[12:45:02] <AlpacaPrince> is there a way to convert a pair into a list?
[12:45:23] <AlpacaPrince> (1,3) into [1,3]
[12:46:06] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[12:46:47] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[12:47:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[12:47:50] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[12:47:53] *** allbery_b is now known as geekosaur
[12:50:17] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 240 seconds)
[12:51:19] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[12:52:32] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[12:52:57] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:57:31] *** Joins: acidjnk (~acidjnk@p200300d0c7271e256ce23fbe5bf2eea3.dip0.t-ipconnect.de)
[12:58:53] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[12:59:06] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[13:01:01] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:02:29] <carbolymer> AlpacaPrince: Not really, unless you mean type level list, then it should
[13:02:34] *** Joins: Bartol (~Bartol@user/Bartol)
[13:02:59] <carbolymer> AlpacaPrince: you'd need to make sure that all tuple elements are of the same type
[13:03:38] <carbolymer> AlpacaPrince: well... I assumed you don't want `[fst pair, snd pair`
[13:03:44] <carbolymer> ]
[13:04:17] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[13:04:57] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::917a) (Ping timeout: 240 seconds)
[13:05:14] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[13:05:54] <AlpacaPrince> carbolymer: that would probably work. I'm trying to pattern match with lists comprehension.
[13:06:31] <AlpacaPrince> carbolymer: basically trying to use x:xs in the case where xs is a list of pairs
[13:06:46] *** nckx is now known as nckxmas
[13:13:13] *** Quits: dirtcastle (~dirtcastl@103.43.203.229) (Quit: Quit)
[13:13:35] *** Joins: Erutuon (~Erutuon@user/erutuon)
[13:14:05] <AlpacaPrince> > zip [1..] [10,20..90]
[13:14:06] <lambdabot>  [(1,10),(2,20),(3,30),(4,40),(5,50),(6,60),(7,70),(8,80),(9,90)]
[13:14:28] <AlpacaPrince> into:
[13:14:29] <AlpacaPrince> > [[fst a, snd a] | a <- zip [1..] [10,20..90]]
[13:14:30] <lambdabot>  [[1,10],[2,20],[3,30],[4,40],[5,50],[6,60],[7,70],[8,80],[9,90]]
[13:16:22] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 260 seconds)
[13:19:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[13:33:01] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[13:35:20] <int-e> > zipWith (\a b -> [a,b]) [1..] "Hello"
[13:35:21] <lambdabot>  error:
[13:35:21] <lambdabot>      • No instance for (Num Char) arising from the literal ‘1’
[13:35:21] <lambdabot>      • In the expression: 1
[13:35:22] <int-e> :P
[13:35:28] <int-e> > zipWith (\a b -> [a,b]) [1..] [2,3,5]
[13:35:29] <lambdabot>  [[1,2],[2,3],[3,5]]
[13:41:51] *** Joins: irfan (~irfan@user/irfan)
[13:45:12] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[13:46:22] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[13:48:03] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[13:49:16] <xsperry> @pl (\a b -> [a,b])
[13:49:16] <lambdabot> (. return) . (:)
[13:49:22] <xsperry> ^_^
[13:49:24] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:49:38] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:50:31] <AlpacaPrince> From Learn you a haskell for great good:
[13:50:31] <AlpacaPrince> "If you want to bind, say, the first three elements to variables and the rest of the list to another variable, you can use something like x:y:z:zs. It will only match against lists that have three elements or more."
[13:50:44] <AlpacaPrince> what is a simple example of this?
[13:51:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:51:01] *** Lord_of_Life_ is now known as Lord_of_Life
[13:51:21] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-169.elisa-laajakaista.fi)
[13:52:01] <Taneb> > let shuffleFirstThree (x:y:z:zs) = (z:x:y:zs); shuffleFirstThree zs = zs in shuffleFirstThree "lpAacaPrince"
[13:52:02] <lambdabot>  "AlpacaPrince"
[13:52:58] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[13:53:22] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[13:58:48] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[13:59:00] <AlpacaPrince> Taneb
[13:59:01] <AlpacaPrince> *Main> zs = [7,8,9]
[13:59:01] <AlpacaPrince> *Main> shuffleFirstThree zs = zs in shuffleFirstThree
[13:59:02] <AlpacaPrince> <interactive>:110:27: error: parse error on input ‘in’
[13:59:36] <geekosaur> "let" is not optional if you're using "in"
[14:00:24] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[14:00:25] <AlpacaPrince> I first did:
[14:00:26] <AlpacaPrince> *Main> shuffleFirstThree (2:4:6:[7,8,9])
[14:00:26] <AlpacaPrince> [6,2,4,7,8,9]
[14:00:35] <AlpacaPrince> *Main> let shuffleFirstThree (x:y:z:zs) = (z:x:y:zs)
[14:00:56] <AlpacaPrince> let command was first in my order of operations
[14:01:57] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 240 seconds)
[14:03:33] <xsperry> either write that definition in a file, where you can use newlines, or copy/paste entire Taneb's line to ghci
[14:03:50] <geekosaur> "let <bindings> in <expression>" is an expression, not a command that can be split up like that
[14:04:16] <xsperry> this works too:
[14:04:24] <xsperry> GHCI> let shuffleFirstThree (x:y:z:zs) = (z:x:y:zs); shuffleFirstThree zs = zs
[14:04:29] <xsperry> GHCI> shuffleFirstThree [1,2,3,4]
[14:05:17] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[14:08:32] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[14:08:47] <AlpacaPrince> I see now, thanks.
[14:08:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:09:16] <AlpacaPrince> The part that i'm focusing on is:
[14:09:16] <AlpacaPrince> "x:y:z:zs. It will only match against lists that have three elements or more."
[14:09:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:10:15] *** Joins: kranius (~kranius@user/kranius)
[14:10:56] <geekosaur> % shuffleFirstThree (x:y:z:xs) = (z:x:y:zs)
[14:10:56] <yahb> geekosaur: ; <interactive>:220:39: error:; * Variable not in scope: zs :: [a]; * Perhaps you meant one of these: `z' (line 220), `xs' (line 220), `s' (line 206)
[14:11:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:11:04] <geekosaur> % shuffleFirstThree (x:y:z:xs) = (z:x:y:xs)
[14:11:04] <yahb> geekosaur: 
[14:11:18] <geekosaur> % shuffleFirstThree [1,2]
[14:11:18] <yahb> geekosaur: *** Exception: <interactive>:221:1-41: Non-exhaustive patterns in function shuffleFirstThree
[14:11:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:12:11] <geekosaur> to understand this, you have to understand that a list like [1,2,3] is internally represented as (1:2:3:[])
[14:13:01] <geekosaur> > 1 : [2,3]
[14:13:02] <lambdabot>  [1,2,3]
[14:13:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:13:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[14:14:54] <geekosaur> > (1:2:3:[])
[14:14:56] <lambdabot>  [1,2,3]
[14:15:00] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[14:15:05] <xsperry> AlpacaPrince, do you understand this function?  isZero 0 = True; isZero _ = False
[14:15:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:15:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:17:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:17:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:18:05] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4)
[14:18:08] <AlpacaPrince> I see they are both Bool
[14:18:36] <AlpacaPrince> They seem like a long way to write True and False
[14:18:52] <AlpacaPrince> xsperry
[14:19:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:20:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:21:24] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[14:21:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:22:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4) (Ping timeout: 240 seconds)
[14:22:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:23:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:24:25] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:24:39] <geekosaur> well, except (a) it's "backwards" (b) you cannot use a number in place of a Bool in Haskell
[14:24:58] <geekosaur> > if 1 then "a" else "b" -- type error
[14:24:59] <lambdabot>  error:
[14:24:59] <lambdabot>      • No instance for (Num Bool) arising from the literal ‘1’
[14:24:59] <lambdabot>      • In the expression: 1
[14:25:34] <geekosaur> (numbers are handled specially in Haskell so you get a slightly weird error)
[14:26:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:26:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:28:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:28:24] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[14:28:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:29:22] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 268 seconds)
[14:30:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:30:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:31:52] *** Quits: pfurla (~pfurla@2804:14d:5c5a:9a78:6ce0:1b08:23ee:4eaf) (Quit: gone to sleep. ZZZzzz…)
[14:32:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:32:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:33:18] *** Quits: m1dnight (~christoph@christophe.dev) (Quit: WeeChat 3.1)
[14:34:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:34:37] *** Joins: m1dnight (~christoph@christophe.dev)
[14:35:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:35:45] <xsperry> AlpacaPrince, it is a single function, not two functions. top definition is executed only if passed argument is 0, second matches everything else. pattern matching is checked from top to bottom
[14:36:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:37:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:37:24] <xsperry> s/executed/evaluated
[14:38:04] *** Joins: zardoz2 (~bc8147f2@cerf.good1.com)
[14:38:32] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:e954:6a22:3202:5b23)
[14:38:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:39:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:40:46] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[14:40:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:41:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:41:59] <AlpacaPrince> xsperry, I see, it is only false if order switches.
[14:43:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:43:17] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[14:43:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[14:44:15] <AlpacaPrince> I was expecting 1==True would evaluate True.
[14:45:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:45:16] <geekosaur> it's possible to arrange for that, but it just makes for more silent type mismatches without adding any useful functionality so we don't
[14:45:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:47:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:47:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:48:34] <AlpacaPrince> is isZero 0=True; isZero_ = False  useful outside of being instructional?
[14:48:40] <zardoz2> AlpacaPrince, yes isZero _  matches every value, so isZero 0 = True is never reached
[14:48:49] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 256 seconds)
[14:49:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:49:34] <zardoz2> the concept is. pattern matching is used all the time in haskell
[14:49:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:51:11] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:51:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:51:30] *** Joins: yin (~yin@user/zero)
[14:51:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:53:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:53:37] <geekosaur> note the space between "isZero" and "_"
[14:53:48] <geekosaur> the "_" is a wildcard pattern that matches anything
[14:53:51] <AlpacaPrince> geekosaur it was helpful to see (1:2:3:[4,5,6,7]), the parentheses solved some confusion.
[14:53:59] <AlpacaPrince> there is no space
[14:54:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:54:28] <geekosaur> [22 10:45:06] <xsperry> AlpacaPrince, do you understand this function?  isZero 0 = True; isZero _ = False
[14:54:50] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[14:55:16] <AlpacaPrince> oh I noticed it wrong
[14:55:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:56:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:56:18] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[14:57:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:58:16] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:59:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:00:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:01:00] <zero> True
[15:01:08] <AlpacaPrince> without a space it is just part of the function name, _
[15:01:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:02:23] <AlpacaPrince> xsperry i'm now prepared to answer your question.
[15:02:24] <AlpacaPrince> yes, I do understand this function.
[15:02:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:02:39] <zardoz2> AlpacaPrince try this: https://paste.tomsmeding.com/lQa26HTa
[15:02:56] <zardoz2> and then try putting line 3 (f x = "value is " ++ show 0) at the top
[15:03:24] <zardoz2> that should have been   f x = "value is " ++ show x
[15:04:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:04:08] *** Quits: kranius (~kranius@user/kranius) (Ping timeout: 252 seconds)
[15:04:21] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[15:04:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:05:52] *** Joins: jkaye (~jkaye@2601:281:8300:7530:6aeb:18f5:2700:2624)
[15:06:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:06:08] <AlpacaPrince> it would always be "value is 0"
[15:06:12] *** Joins: lavaman (~lavaman@98.38.249.169)
[15:06:21] *** Joins: machinedgod (~machinedg@24.105.81.50)
[15:06:22] <AlpacaPrince> Why can the x not be replaced with _
[15:06:29] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[15:06:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:06:44] <zardoz2> it can, but I wanted to write this:  f x = "value is " ++ show x
[15:06:48] <zardoz2> show x, not show 0
[15:06:53] <geekosaur> because _ is anonymous. you need to name it to use it
[15:07:10] <zardoz2> if you use the value you need a name
[15:07:19] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Client Quit)
[15:07:31] <AlpacaPrince> okay i'll try those things
[15:08:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:08:22] *** Quits: yin (~yin@user/zero) (Ping timeout: 260 seconds)
[15:08:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:10:13] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[15:10:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:10:17] *** Quits: jkaye (~jkaye@2601:281:8300:7530:6aeb:18f5:2700:2624) (Ping timeout: 240 seconds)
[15:10:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:10:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[15:12:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:12:37] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 240 seconds)
[15:12:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:14:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:14:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:15:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:16:56] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[15:17:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:17:44] <AlpacaPrince> is it possible to open the source code for the definition of _ in haskell?
[15:18:03] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[15:18:04] <AlpacaPrince> ...or any function for that matter.
[15:18:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:19:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:20:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:20:53] <sshine> AlpacaPrince, yes?
[15:21:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:21:21] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[15:21:31] <sshine> AlpacaPrince, _ isn't a function, but since it is defined in the compiler, you can find either the place it is defined as a syntactic element, or the places that refer to it in the process of compilation.
[15:22:04] <AlpacaPrince> zardoz2 https://paste.tomsmeding.com/eFgi1uCb/raw/1
[15:22:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:23:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:24:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:25:31] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:25:57] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:9996:3caa:8169:8a61) (Ping timeout: 240 seconds)
[15:26:03] <zardoz2> AlpacaPrince, ghci tells you that other two matches are redundant, because "g x" matches everything. put it at the bottom
[15:26:34] <AlpacaPrince> I've tried a bunch of variations on:
[15:26:34] <AlpacaPrince> :browse _
[15:26:35] <AlpacaPrince> and
[15:26:35] <AlpacaPrince> :def [_]
[15:27:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:27:13] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:5bd7:cadf:8543:27d3)
[15:27:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:27:59] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[15:29:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:29:25] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 240 seconds)
[15:29:36] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 256 seconds)
[15:29:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[15:29:53] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[15:30:25] *** Quits: jespada (~jespada@87.74.33.157) (Ping timeout: 268 seconds)
[15:31:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:32:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:32:35] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:32:49] <zardoz2> _ is a variable place holder name when you don't care about value, and just want to match everything. it avoids "unused variable" warning
[15:32:55] *** Joins: jespada (~jespada@87.74.33.157)
[15:33:13] <tomsmeding> AlpacaPrince: in haskell, patterns are tried from top to bottom. When calling e.g. `g 10`, we first try to match `10` against the pattern `x`; this succeeds, so we take that option. When calling `g 1`, we first try to match `1` against the pattern `x`; this succeeds, so we take that option.
[15:33:29] <tomsmeding> If you want the other two cases to take precedence, you have to put then above the `g x` case.
[15:33:31] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[15:33:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:34:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:34:20] <tomsmeding> and ghci is aware of this rule, and already sees that the `g 1` and `g 2` cases can never be reached in your code, because the `g x` case will already handle everything. So it gives you those warnings
[15:35:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:36:21] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:36:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:36:33] *** Joins: Vajb (~Vajb@2001:999:62:f3d1:4390:fbed:1f9b:9d03)
[15:37:38] *** Joins: mestre (~mestre@191.177.175.57)
[15:37:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:38:28] <AlpacaPrince> Got it. I was trying the variation of mismatching the order; putting the catch all at the top of the pattern. Interesting that Ghci gives warnings for the pattern being defined in the wrong order while still letting the program execute.
[15:38:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:38:43] <dminuoso> AlpacaPrince: Well its not defined in the "wrong order"
[15:39:03] *** Joins: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk)
[15:39:34] <dminuoso> In fact, there are some good reasons to have such "dead" code"
[15:40:03] <AlpacaPrince> The program still runs, it just never reaches any definitions past g x
[15:40:05] <AlpacaPrince> hmm
[15:40:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:40:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:40:42] <AlpacaPrince> so g x could be overridden in certain cases, then allowing g 1 and g 2 to be "discovered" by the code?
[15:41:23] <dminuoso> AlpacaPrince: Yeah. You could for example have some `f x | True = ... | otherwise = ...` style of code, where by commenting out the `| True` branch you alter the behavior for debugging.
[15:41:29] <dminuoso> (Or perhaps via a C macro)
[15:41:47] <dminuoso> Granted, for this particular usage we have a magical primitive to let GHC know not to report errors.
[15:42:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:42:31] <zardoz2> there's no way to reach g 1 and g 2, unless you comment out g x, or move it to the bottom
[15:42:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:42:47] <dminuoso> AlpacaPrince: Another thing is, pattern coverage checking has historically been very error prone because it's a very non-trivial problem, it was filled with false positives.
[15:42:59] <dminuoso> So by default promoting this to an error would cause a lot of grief
[15:43:20] <dminuoso> But since have drastically improved in recent GHC versions.
[15:44:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:44:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:46:03] *** Joins: tewrdh^ (~tewrdh@64.253.22.77)
[15:46:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:46:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:48:08] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 252 seconds)
[15:48:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:48:37] *** Quits: mestre (~mestre@191.177.175.57) (Remote host closed the connection)
[15:48:39] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[15:48:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:49:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:50:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:51:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:52:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:53:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:54:26] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[15:54:29] *** Quits: darchitect (~darchitec@82-132-213-95.dab.02.net) (Read error: Connection reset by peer)
[15:54:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:55:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:56:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:56:56] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 268 seconds)
[15:57:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:57:24] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[15:58:35] *** Quits: chomwitt (~chomwitt@ppp-2-85-245-134.home.otenet.gr) (Ping timeout: 252 seconds)
[15:58:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:59:04] *** Joins: benin (~benin@183.82.27.57)
[15:59:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:00:58] *** Joins: kuribas (~user@ptr-25vy0i6xaq2sd6gk5rt.18120a2.ip6.access.telenet.be)
[16:01:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:01:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:02:57] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:5bd7:cadf:8543:27d3) (Ping timeout: 240 seconds)
[16:03:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:03:37] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 240 seconds)
[16:03:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:03:52] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[16:03:55] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:cc0:4c26:7636:4d9e)
[16:04:59] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[16:05:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:05:37] *** Joins: danso (~danso@d67-193-121-2.home3.cgocable.net)
[16:05:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:07:24] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[16:07:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:07:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:08:08] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[16:09:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:09:57] *** Quits: danso (~danso@d67-193-121-2.home3.cgocable.net) (Ping timeout: 240 seconds)
[16:10:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:10:28] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[16:11:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:12:03] *** Joins: ubert (~Thunderbi@p200300ecdf0994cb1dfd4ca95c98fa37.dip0.t-ipconnect.de)
[16:12:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:13:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:14:17] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[16:14:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:16:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:16:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:18:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:18:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:19:44] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4)
[16:20:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:21:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:22:14] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.3)
[16:22:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:22:38] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[16:23:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[16:23:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4) (Ping timeout: 240 seconds)
[16:24:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:25:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:26:18] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:cc0:4c26:7636:4d9e) (Ping timeout: 260 seconds)
[16:26:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:27:08] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:a0e1:b3e2:3952:22f)
[16:27:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:29:00] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[16:29:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:29:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:29:58] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[16:30:15] *** Quits: max22- (~maxime@2a01cb08833598002412bf121caf815d.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[16:31:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:31:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:32:48] *** Joins: ub (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[16:33:04] *** Quits: ubert (~Thunderbi@p200300ecdf0994cb1dfd4ca95c98fa37.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:33:04] *** ub is now known as ubert
[16:33:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:33:27] *** Joins: sagax (~sagax_nb@user/sagax)
[16:34:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:35:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:36:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:37:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[16:37:37] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[16:37:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:38:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:39:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:40:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:40:54] *** Quits: coolnickname (uid531864@user/coolnickname) (Quit: Connection closed for inactivity)
[16:41:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:42:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:44:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:44:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:46:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:46:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:46:57] *** Quits: rembo10 (~rembo10@remulis.com) (Quit: ZNC 1.8.2 - https://znc.in)
[16:47:17] *** Joins: pfurla (~pfurla@2804:14d:5c5a:9a78:6ce0:1b08:23ee:4eaf)
[16:48:02] *** Joins: rembo10 (~rembo10@remulis.com)
[16:48:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:48:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:49:21] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 268 seconds)
[16:50:05] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 256 seconds)
[16:50:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:50:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[16:51:46] <AlpacaPrince> > :doc length
[16:51:47] <lambdabot>  <hint>:1:1: error: parse error on input ‘:’
[16:52:01] <AlpacaPrince> doc length
[16:52:11] <AlpacaPrince> : doc length
[16:52:19] <AlpacaPrince> >: doc length
[16:52:29] <AlpacaPrince> > :doc length
[16:52:30] <lambdabot>  <hint>:1:1: error: parse error on input ‘:’
[16:52:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:52:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:53:23] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[16:53:58] <dminuoso> AlpacaPrince: Use % instead
[16:54:28] <dminuoso> AlpacaPrince: > invokes lambdabot which is a rather custom thing. % invokes yahb on the other hand, which is an IRC client bolted onto GHCi
[16:54:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:54:43] <dminuoso> Also, you can use a direct message/query to talk to yahb directly for experimentation
[16:55:07] <AlpacaPrince> yahb %:doc length
[16:55:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:55:19] <AlpacaPrince> yahb % :doc length
[16:55:35] <AlpacaPrince> % :doc length yahb
[16:55:35] <yahb> AlpacaPrince: ; <interactive>:1:8: error: parse error on input `yahb'
[16:55:51] <AlpacaPrince> %:doc length yahb
[16:56:03] <AlpacaPrince> % >:doc length yahb
[16:56:03] <yahb> AlpacaPrince: ; <interactive>:227:1: error: parse error on input `>:'
[16:56:14] <AlpacaPrince> % :browse length yahb
[16:56:14] <yahb> AlpacaPrince: syntax: :browse <module>
[16:56:22] <dminuoso> % :doc length
[16:56:22] <yahb> dminuoso:  Returns the size/length of a finite structure as an 'Int'. The; default implementation just counts elements starting with the left-most.; Instances for structures that can compute the element count faster; than via element-by-element counting, should provide a specialised; implementation.; ==== __Examples__; Basic usage:; >>> length []; 0; >>> length ['a', 'b', 'c']; 3; >>> length [1..]; * H
[16:56:30] <AlpacaPrince> % :browse length yahb
[16:56:30] <yahb> AlpacaPrince: syntax: :browse <module>
[16:56:35] <dminuoso> AlpacaPrince: Try `/query yahb` to experiment without adding noise to the channel
[16:56:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:56:47] <dminuoso> Also consider using `ghci` instead :)
[16:56:53] <dminuoso> In your favourite terminal
[16:57:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:58:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:59:05] *** Joins: dan-so (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[16:59:09] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[16:59:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:01:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:01:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:03:03] *** Quits: irfan (~irfan@user/irfan) (Quit: leaving)
[17:03:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:03:17] *** Quits: dan-so (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 240 seconds)
[17:03:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:04:03] *** Joins: dan-so (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[17:04:49] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 256 seconds)
[17:05:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:05:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:06:02] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[17:06:53] *** Quits: rembo10 (~rembo10@remulis.com) (Quit: ZNC 1.8.2 - https://znc.in)
[17:07:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:07:58] *** Joins: rembo10 (~rembo10@remulis.com)
[17:07:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:09:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:09:52] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.3)
[17:10:05] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[17:10:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:11:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:12:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:13:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:14:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:15:01] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[17:16:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:16:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:18:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:18:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:19:42] *** Joins: max22- (~maxime@2a01cb088335980001474809897dc97d.ipv6.abo.wanadoo.fr)
[17:20:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:20:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:22:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:22:36] *** Quits: AlpacaPrince (~Guest|47@c-73-221-44-172.hsd1.wa.comcast.net) (Quit: Connection closed)
[17:22:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:24:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:24:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:26:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:26:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:28:04] *** Joins: Guest|47 (~Guest|47@c-73-221-44-172.hsd1.wa.comcast.net)
[17:28:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:29:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:29:10] *** Guest|47 is now known as pringlePie
[17:29:42] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:30:15] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[17:30:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:30:59] *** Quits: dan-so (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 252 seconds)
[17:31:11] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:31:22] *** Joins: dan-so (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[17:32:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:33:11] *** Quits: Vajb (~Vajb@2001:999:62:f3d1:4390:fbed:1f9b:9d03) (Read error: Connection reset by peer)
[17:33:12] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[17:33:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:33:19] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:33:50] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:34:30] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:34:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:35:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:36:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:37:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:38:13] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[17:38:20] *** Quits: zardoz2 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[17:39:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:39:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:39:56] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[17:39:57] <pringlePie> in the same way documentation can be called with
[17:39:58] <pringlePie> :doc ++
[17:39:58] <pringlePie> how can I add documentation for my own functions, that can be called by GHCi?
[17:40:02] *** Quits: dan-so (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 260 seconds)
[17:40:19] *** Joins: arjun (~arjun@user/arjun)
[17:40:29] *** Joins: dan-so (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[17:41:12] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[17:41:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:41:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:43:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:44:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:45:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:46:05] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 268 seconds)
[17:46:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:46:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:46:56] *** Quits: dan-so (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 252 seconds)
[17:47:09] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[17:47:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:47:53] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 256 seconds)
[17:48:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:49:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:50:22] *** Joins: yin (~yin@user/zero)
[17:50:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:52:59] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[17:54:14] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[17:54:41] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[17:54:57] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[17:55:53] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[17:58:42] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:58:53] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[18:00:37] *** Quits: yin (~yin@user/zero) (Ping timeout: 240 seconds)
[18:04:04] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[18:08:10] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[18:08:17] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[18:08:51] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 256 seconds)
[18:09:14] *** Quits: pringlePie (~Guest|47@c-73-221-44-172.hsd1.wa.comcast.net) (Quit: Connection closed)
[18:12:37] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[18:13:24] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[18:14:27] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[18:15:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:15:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:15:12] *** Joins: wroathe (~wroathe@user/wroathe)
[18:20:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:21:13] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[18:22:51] *** Joins: yin (~yin@user/zero)
[18:22:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[18:24:25] *** Quits: pfurla (~pfurla@2804:14d:5c5a:9a78:6ce0:1b08:23ee:4eaf) (Quit: Textual IRC Client: www.textualapp.com)
[18:25:25] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[18:28:08] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[18:28:26] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[18:29:34] *** Joins: dan-so (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[18:29:50] *** Quits: Guest4242 (~Guest4242@78.198.4.122) (Quit: Client closed)
[18:31:16] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[18:34:37] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:a0e1:b3e2:3952:22f) (Ping timeout: 240 seconds)
[18:37:21] *** Joins: darchitect (~darchitec@2a00:23c6:3584:df00:7dec:bf13:8fa:748c)
[18:37:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:39:06] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[18:39:59] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:a0e1:b3e2:3952:22f)
[18:40:59] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:42:12] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:45:30] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[18:49:37] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[18:49:58] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[18:49:59] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[18:50:29] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[18:50:53] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[18:52:03] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[18:53:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:55:55] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[18:56:36] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[19:00:08] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:00:36] *** Quits: yin (~yin@user/zero) (Ping timeout: 240 seconds)
[19:00:53] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[19:01:03] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[19:01:30] *** Joins: jinsun (~quassel@user/jinsun)
[19:07:20] *** Joins: evocatus (~evocatus@62.182.78.42)
[19:07:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:10:16] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:10:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:10:16] *** Joins: wroathe (~wroathe@user/wroathe)
[19:12:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[19:15:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:17:03] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:17:48] *** Joins: yin (~yin@user/zero)
[19:18:36] *** Quits: acidjnk (~acidjnk@p200300d0c7271e256ce23fbe5bf2eea3.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:21:42] <gentauro> so I need to build `network-3.1.1.1` which is broken in `https://www.stackage.org/lts-18.19` but fixed in `nightly`. Is there a way to specify this in `stack.yaml`?
[19:21:55] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:22:49] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[19:27:16] *** Quits: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk) (Remote host closed the connection)
[19:29:24] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[19:29:50] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[19:30:17] *** Quits: yin (~yin@user/zero) (Ping timeout: 240 seconds)
[19:31:43] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[19:31:44] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[19:32:22] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[19:32:23] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[19:32:51] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[19:32:51] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[19:35:00] *** Quits: phma_ (~phma@2001:5b0:210d:e448:bd04:4091:a4d4:4fae) (Read error: Connection reset by peer)
[19:36:08] *** Joins: phma_ (~phma@2001:5b0:210f:6808:2fd4:ecc8:b8ea:8fba)
[19:38:35] *** phma_ is now known as phma
[19:39:31] *** Joins: alfonsox (~quassel@103.92.42.192)
[19:44:03] *** Quits: jespada (~jespada@87.74.33.157) (Ping timeout: 256 seconds)
[19:44:20] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[19:44:51] *** Joins: ph88 (~ph88@ip5f5af068.dynamic.kabel-deutschland.de)
[19:45:27] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4)
[19:46:15] *** Joins: jespada (~jespada@87.74.33.157)
[19:49:50] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[19:49:50] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[19:53:59] *** Quits: arjun (~arjun@user/arjun) (Ping timeout: 252 seconds)
[19:54:37] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[19:55:01] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:55:23] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[19:55:37] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 240 seconds)
[19:57:50] *** Quits: mbuf (~Shakthi@171.61.232.157) (Quit: Leaving)
[19:59:55] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[19:59:55] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:00:22] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:01:55] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[20:02:38] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:02:55] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:03:03] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:03:36] *** Joins: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk)
[20:03:38] *** Quits: evocatus (~evocatus@62.182.78.42) (Quit: Leaving)
[20:05:35] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[20:06:14] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:06:14] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:06:54] *** Joins: timCF (~timCF@m91-129-100-224.cust.tele2.ee)
[20:07:20] *** Quits: timCF (~timCF@m91-129-100-224.cust.tele2.ee) (Client Quit)
[20:08:02] *** Quits: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[20:09:03] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[20:09:16] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:09:17] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:10:03] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:10:03] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:10:42] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[20:11:04] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[20:15:56] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[20:16:14] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[20:16:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:17:21] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:17:22] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:18:58] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:a0e1:b3e2:3952:22f) (Remote host closed the connection)
[20:19:15] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:1cc4:2a6e:2e3f:d394)
[20:19:38] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 268 seconds)
[20:20:14] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Changing host)
[20:20:14] *** Joins: kranius (~kranius@user/kranius)
[20:22:18] *** Joins: yin (~yin@user/zero)
[20:23:02] <sm> g'day all
[20:23:40] <sm> gentauro:
[20:23:40] <sm> extra-deps:
[20:23:40] <sm> - network-3.1.1.1
[20:23:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[20:24:51] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:25:34] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:25:35] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:26:51] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[20:26:59] *** Joins: chexum_ (~quassel@gateway/tor-sasl/chexum)
[20:26:59] *** Quits: alfonsox (~quassel@103.92.42.192) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:27:41] *** Quits: yin (~yin@user/zero) (Ping timeout: 256 seconds)
[20:29:21] <EvanR> is there a cool way to do a cross join of two lists, like a list comprehension, but exclude the middle diagonal and one of the halves
[20:29:42] <EvanR> ok middle is redundant
[20:31:26] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[20:31:40] <monochrom> Which half of [(x,y) | x<-[1,2], y<-['a', 'b', 'c']] do you want to receive?
[20:31:53] <EvanR> I guess x = y
[20:31:58] <EvanR> xs = ys
[20:32:08] <monochrom> But x==y is a type error.
[20:32:10] <EvanR> not two different lists
[20:32:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:32:19] <EvanR> same list with itself
[20:33:49] *** Quits: xff0x (~xff0x@2001:1a81:5290:1c00:1cc4:2a6e:2e3f:d394) (Ping timeout: 268 seconds)
[20:34:37] *** Joins: xff0x (~xff0x@2001:1a81:5290:1c00:84df:602d:a0a9:8535)
[20:35:14] *** Quits: kuribas (~user@ptr-25vy0i6xaq2sd6gk5rt.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[20:35:25] <int-e> > [(x,y) | x:xs <- tails [1,2,3], y <- xs]
[20:35:26] <lambdabot>  [(1,2),(1,3),(2,3)]
[20:35:48] <monochrom> Ah, nice.
[20:36:10] <EvanR> i will now steal that and then understand it, in that order
[20:36:17] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[20:39:41] *** Joins: yin (~yin@user/zero)
[20:40:30] *** Joins: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk)
[20:42:02] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 240 seconds)
[20:42:56] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[20:42:58] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:43:01] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:43:02] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:43:39] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[20:44:59] <glguy> I feel like today's problem deserves to be generalized to n-dimensions with a nice typed vector
[20:45:41] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:45:41] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:46:05] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:46:05] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:46:23] *** Quits: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[20:46:59] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[20:48:24] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:48:25] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:48:50] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[20:49:26] <EvanR> today's problem is kicking my ass
[20:50:33] *** Joins: jeetelongname (~jeet@88-111-159-26.dynamic.dsl.as9105.com)
[20:50:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:50:42] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:50:43] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:51:10] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[20:51:10] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[20:52:38] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[20:53:33] *** Joins: analognoise1 (~analognoi@ip98-176-154-48.sd.sd.cox.net)
[20:53:42] *** Quits: yin (~yin@user/zero) (Ping timeout: 260 seconds)
[20:55:32] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[20:57:03] *** Quits: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:57:53] *** Quits: analognoise (~analognoi@185.202.221.238) (Ping timeout: 268 seconds)
[20:58:40] *** Joins: analognoise (~analognoi@91.196.220.236)
[21:00:20] *** Joins: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[21:00:35] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[21:01:02] <sshine> can I, in any way, do pub const FOO: BigInt = ...? -- I feel like n.into() and BigInt::new(Sign::Plus, vec![n]) both complain about const-time allocation being a problem.
[21:01:35] <sshine> I've found this thing: https://gitlab.com/hjiayz/const_num_bigint -- but it doesn't come with a lot of explanation, I'm not sure it's a good approach.
[21:02:07] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:02:15] *** Quits: analognoise1 (~analognoi@ip98-176-154-48.sd.sd.cox.net) (Ping timeout: 256 seconds)
[21:02:15] <geekosaur> channel?
[21:02:17] <sshine> oops, wrong channel :)
[21:03:24] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[21:03:51] *** Joins: emf (~emf@2620:10d:c091:480::1:44aa)
[21:05:58] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[21:06:09] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:07:24] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4) (Remote host closed the connection)
[21:09:42] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[21:10:17] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-169.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[21:10:31] *** Joins: emf_ (~emf@2620:10d:c091:480::1:44aa)
[21:10:56] <glguy> OK, generalizing day 22 to n-dimensions actually made the program shorter
[21:11:12] <glguy> (and a tiny bit faster in my benchmark)
[21:11:13] <gentauro> sshine: what is that programming language?
[21:11:24] <glguy> https://glguy.net/advent2021/Day22/Main.html
[21:11:26] <gentauro> sshine: seems like a horrible syntax
[21:11:57] *** Quits: emf (~emf@2620:10d:c091:480::1:44aa) (Ping timeout: 240 seconds)
[21:12:48] <sshine> gentauro, it's Haskell.
[21:13:21] <gentauro> sshine: more like Hask-LEL
[21:13:37] <sshine> gentauro, you just need {-# LANGUAGE RustySyntax #-}
[21:13:55] *** Joins: BrokenClutch (~pioneer@2804:d41:c2a7:d800:e627:b00b:2c62:134)
[21:14:23] <gentauro> sshine: is that the PRAGMA that when used, God kills a kitten? :'(
[21:14:26] * gentauro GG kittens
[21:15:22] <BrokenClutch> After scheme, I've started to like these functional languages thingy. After haskell I'm actually addicted.
[21:15:22] <BrokenClutch> Does haskell works well with reactive functional programming?
[21:15:34] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[21:16:37] <EvanR> FRP's brand was stolen from the haskell sphere for nefarious purposes elsewhere, elm, etc
[21:17:56] <BrokenClutch> oh my god, almost learned Elm, thanks brother for keeping me away from heresy.
[21:18:04] <EvanR> lol
[21:18:59] <EvanR> https://github.com/gelisam/frp-zoo
[21:19:21] <gentauro> BrokenClutch: Do a Google on "Ivan Perez FRP" (he is currently a researcher at NASA)
[21:19:23] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:19:23] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Remote host closed the connection)
[21:19:24] <gentauro> ;)
[21:19:37] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[21:20:29] <gentauro> sm: `extra-deps: - network-3.1.1.1` why would this make any difference?
[21:21:59] <sm> gentauro, formatting may not have come through accurately. The stack user guide makes it clear
[21:22:41] <geekosaur> I do not understand "broken" vs. "fixed"
[21:22:57] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:22:57] <sm> in short, if you want a version other than the one in your chosen snapshot, listing a different version in extra-deps often works
[21:22:57] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:23:30] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[21:23:35] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:23:50] *** Joins: Akiva (~Akiva@user/Akiva)
[21:24:11] <BrokenClutch> EvanR: The guy has a fedora, should I trust him?
[21:24:37] *** Quits: emf_ (~emf@2620:10d:c091:480::1:44aa) (Ping timeout: 240 seconds)
[21:26:05] <gentauro> sm: but the version is *broken* for the `lts`
[21:26:11] <gentauro> but not for `nightly
[21:26:31] <gentauro> my question was, is it possible to use `lts` but for a single package use the package from `nightly`?
[21:26:34] <gentauro> :)
[21:26:35] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-214.elisa-laajakaista.fi)
[21:26:52] * gentauro perhaps point to a git repo or something like that?
[21:26:53] <geekosaur> the versions will be the same, unless something is especially perverse (and I'd expect it'd have been rejected in that case)
[21:27:10] <geekosaur> are you sure this brokenness is not because of compiler version?
[21:27:22] <gentauro> geekosaur: that could be as well
[21:27:51] <sm> not if it's broken.. what do you mean by that ?
[21:28:12] <gentauro> sm: `--  While building package network-3.1.1.1 (scroll up to its section to see the error) using:`
[21:28:24] <gentauro> like "not building" :)
[21:28:26] <geekosaur> hm, on hackage 3.1.1.1 is marked as deprecated
[21:28:43] <sm> you must be aware this is not enough information to help you :)
[21:28:59] <sshine> BrokenClutch, while there are FRP libraries in Haskell, I can't think of any killer libraries except perhaps Brick: https://github.com/jtdaugherty/brick
[21:29:02] <sm> @where paste
[21:29:02] <lambdabot> Help us help you: please paste full code, input and/or output at e.g. https://paste.tomsmeding.com
[21:29:38] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 260 seconds)
[21:31:07] <geekosaur> I would suggest putting 3.1.2.0 in extra-deps and adjusting any other dependencies as needed
[21:31:15] <gentauro> I have added `Latest on Hackage:3.1.2.5` instead of `https://www.stackage.org/lts-18.19/package/network-3.1.1.1` 
[21:31:21] <geekosaur> but yes, we need more information
[21:31:22] <gentauro> as an extra-dep
[21:31:34] <gentauro> pehaps that helps
[21:31:46] <EvanR> sshine, BrokenClutch there's reflex
[21:32:51] <geekosaur> I find it odd that a stackage lts depends on a deprecated package
[21:32:55] <gentauro> perhaps using `allow-newer: true` in the `stack.yaml` would go for the newest packages?
[21:33:29] *** Joins: emf (~emf@2620:10d:c091:480::1:44aa)
[21:33:59] <sm> geekosaur yes that seems unfortunate, I guess it was found buggy and deprecated after the lts
[21:34:13] <sm> I hit that too
[21:34:38] <sm> lts's can be updated, I think, maybe it just hasn't happened
[21:35:26] *** Joins: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk)
[21:36:54] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[21:37:08] *** Joins: BenSimms[m] (~simmsb@2001:470:69fc:105::1:55c3)
[21:37:08] *** Joins: econo (uid147250@user/econo)
[21:37:15] <gentauro> geekosaur: I don't think an LTS should be updated as such without `bumping` a minor version number right?
[21:37:35] <geekosaur> that's what I would expect
[21:37:44] <gentauro> `lts-18.19` with deprecated package -> `lts-18.20` without deprecated?
[21:37:45] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:38:17] <geekosaur> wondering if they got themselves stuck because nightly is already 9.0.1 which is buggy and probably going nowhere
[21:38:27] *** Joins: coolnickname (uid531864@user/coolnickname)
[21:38:47] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:39:22] <gentauro> is it `FP Complete` that decides over `stack` or is it "the community"?
[21:39:26] *** BenSimms[m] is now known as simmsb
[21:40:17] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[21:40:33] <geekosaur> the community, I gather, but they have specific guidelines as to how things are done
[21:40:47] <geekosaur> so a new package has to be tested in the nightlies before it gets promoted to an lts
[21:40:58] <geekosaur> but the nightly is stuck on 9.0.1
[21:40:59] <gentauro> go it
[21:41:11] <gentauro> I mean, "got it" :)
[21:41:15] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:41:15] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:41:25] *** Quits: benin (~benin@183.82.27.57) (Quit: The Lounge - https://thelounge.chat)
[21:42:28] *** Joins: analognoise1 (~analognoi@2600:8801:8c26:9e00:9810:dcc2:3d73:bd7a)
[21:42:34] <geekosaur> 8.10.5-8.10.7 really should never have happened
[21:43:08] <geekosaur> they were released after 9.0.1 and added a major new feature, and completely hosed versioning for everyone else
[21:43:26] *** Joins: benin (~benin@183.82.27.57)
[21:43:28] <sm> gentauro: there's a bunch of stackage maintainers, working in the stackage repo. It's somewhat, not very active. I think as geekosaur said they are somewhat blocked by the state of ghc
[21:43:28] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[21:43:43] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:43:43] <gentauro> sm: :o
[21:43:43] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:43:48] <gentauro> good to know
[21:44:12] <sm> and, the state of packages building with newer ghc.. it's kind of circular
[21:44:42] <sm> still, I'm sure there's a solution for your build issue. It might be to use a newer nightly instead of lts, for now
[21:46:07] *** Quits: analognoise (~analognoi@91.196.220.236) (Ping timeout: 250 seconds)
[21:47:34] *** Joins: analognoise (~analognoi@23.105.41.153)
[21:48:10] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:48:11] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:49:37] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:49:38] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:50:03] *** Joins: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net)
[21:50:29] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:50:30] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:50:53] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:50:53] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:50:57] *** Quits: analognoise1 (~analognoi@2600:8801:8c26:9e00:9810:dcc2:3d73:bd7a) (Ping timeout: 240 seconds)
[21:51:15] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:51:15] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:52:07] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:52:07] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:52:29] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:52:30] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:52:55] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:52:55] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:54:05] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:54:08] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:54:12] <jneira[m]> today i tried to use head.hackage with stack and no way, could be it even possible?
[21:54:57] *** Quits: yauhsien (~yauhsien@118-167-43-174.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[21:55:37] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:55:54] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:55:55] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:56:27] *** Quits: kranius (~kranius@user/kranius) (Ping timeout: 268 seconds)
[21:57:00] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:57:01] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:57:17] *** Quits: emf (~emf@2620:10d:c091:480::1:44aa) (Ping timeout: 240 seconds)
[21:57:34] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:57:35] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:57:42] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[21:57:52] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[21:58:11] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[21:58:17] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[21:58:18] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[21:59:17] <geekosaur> https://github.com/commercialhaskell/stack/issues/3844 does this look familiar?
[21:59:25] *** Joins: __monty__ (~toonn@user/toonn)
[21:59:37] <geekosaur> otherwise I think you'll have to show what you tried and what went wrong
[21:59:40] <geekosaur> @where paste
[21:59:41] <lambdabot> Help us help you: please paste full code, input and/or output at e.g. https://paste.tomsmeding.com
[22:01:10] *** Joins: phma_ (phma@2001:5b0:211c:9c18:ac13:6342:6a86:65e4)
[22:01:52] <jneira[m]> geekosaur: i tried something similar with 2 package indices, but stack told me you can use only one (although it is a list?)
[22:02:02] <jneira[m]> maybe i misinterpreted the error msg
[22:02:37] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 268 seconds)
[22:02:49] <jneira[m]> an then i rea in docs:
[22:02:49] <jneira[m]> > Since Stack 1.11, this field may only be used to specify a single package index, which must use the Hackage Security format
[22:02:50] <lambdabot>  <hint>:1:17: error: parse error on input ‘,’
[22:03:20] *** Quits: phma (~phma@2001:5b0:210f:6808:2fd4:ecc8:b8ea:8fba) (Read error: Connection reset by peer)
[22:04:02] <jneira[m]> if you set only head.hackage it does not find packages cause it is a overlay
[22:05:32] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[22:05:37] *** Joins: emf (~emf@2620:10d:c091:480::1:44aa)
[22:05:42] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::917a)
[22:06:26] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:07:38] *** Quits: jeetelongname (~jeet@88-111-159-26.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[22:08:37] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[22:09:31] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 250 seconds)
[22:10:28] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[22:13:47] *** Joins: pavonia (~user@user/siracusa)
[22:14:15] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[22:14:16] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[22:14:47] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 256 seconds)
[22:15:20] *** Joins: xkuru (~xkuru@user/xkuru)
[22:17:09] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:17:17] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[22:17:18] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[22:17:38] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[22:17:38] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[22:22:57] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[22:23:15] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[22:23:52] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[22:24:11] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:24:26] *** Joins: neurocyte0132889 (~neurocyte@IP-045014189127.dynamic.medianet-world.de)
[22:24:26] *** Quits: neurocyte0132889 (~neurocyte@IP-045014189127.dynamic.medianet-world.de) (Changing host)
[22:24:26] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:24:41] *** Joins: yin (~yin@user/zero)
[22:24:49] <jneira[m]> hmm maybe adding the src tarballs from the repo in extra-deps? will try
[22:26:04] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[22:26:44] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Changing host)
[22:26:44] *** Joins: kranius (~kranius@user/kranius)
[22:27:43] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[22:28:40] *** Quits: BrokenClutch (~pioneer@2804:d41:c2a7:d800:e627:b00b:2c62:134) (Quit: Leaving.)
[22:29:49] *** Joins: kaph (~kaph@net-2-47-236-216.cust.vodafonedsl.it)
[22:33:09] *** Quits: max22- (~maxime@2a01cb088335980001474809897dc97d.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[22:35:20] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[22:35:21] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[22:35:44] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: Replaced by new connection)
[22:35:45] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[22:36:41] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[22:37:00] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:43:57] *** Quits: yin (~yin@user/zero) (Ping timeout: 240 seconds)
[22:43:57] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[22:45:00] *** Quits: emf (~emf@2620:10d:c091:480::1:44aa) (Read error: Connection reset by peer)
[22:47:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:48:07] <energizer> ghci seems like a reasonable repl. i assume it's missing something important so people don't want to use it for serious repling like they do with lisps. what is it missing?
[22:48:56] <geekosaur> sane multiline handling, for one
[22:49:28] <monochrom> I don't use a Lisp REPL for multiline, either.
[22:49:35] <geekosaur> since haskell uses layout by default, you kinda want reasonable multiline input where you can use layout. ghci provides two ways to do this and both kinda suck
[22:49:51] <monochrom> In fact I challenge the premise. What data do you have that says people don't use ghci?
[22:49:51] <g> It's better to do multiple line stuff in an editor in both
[22:49:58] <geekosaur> in particular you can't arrow up and edit a previous line
[22:50:28] *** Joins: emf (~emf@2620:10d:c091:480::1:e0fe)
[22:50:35] <geekosaur> I use ghci but I use it on something I've entered using an editor instead of typing definitions directly into it
[22:51:06] <geekosaur> you also can't enter a bunch of definitions and then save the result to a file afterward
[22:51:12] <monochrom> REPLing is so commonly demanded that "cabal repl" and "stack repl" exist and were implemented with great pain.
[22:51:55] <energizer> geekosaur: yeah idk what the general name for "sending lines from editor to inferior repl process" is
[22:52:46] <monochrom> OK so this is an echo chamber "conversation"
[22:52:58] <energizer> monochrom?
[22:53:15] <monochrom> "I will ignore all doubts against my premise."
[22:53:49] <monochrom> Not the first time anyway.
[22:53:50] <energizer> monochrom: you made your point, give it a minute to settle before attacking please
[22:54:13] *** Joins: mimmy (~mimmy@69.174.8.146)
[22:55:57] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[22:56:49] * shapr awakens
[22:56:53] <shapr> people not being nice?
[22:56:56] <energizer> there are many livestreams of lisp/python/whatever developers interactively exploring data as part of their workflow. are there any such videos for haskell?
[22:56:58] * shapr hugs people
[22:57:37] <shapr> energizer: have you seen https://las.rs/blog/haskell-as-shell.html ? could be related?
[22:57:47] <geekosaur> possibly not, but that doesn't mean we don't do it
[22:58:11] <Cale> energizer: People use ghci constantly... I don't know why you'd expect otherwise.
[22:58:22] <shapr> I'd use GHCi for all my dev if I could easily file out definitions into a file, same as when I wrote python for a living.
[22:58:36] <geekosaur> was in a discussion earlier today elsewhere where it was pointed out that lisp/python/clojure/etc. folks always think they invented that idea
[22:58:46] <geekosaur> when it's been around for years
[22:59:19] <geekosaur> we just don't see any need to pretend we invented the idea and need to advertise it
[22:59:30] <shapr> energizer: does IHaskell fit into the repl box?
[23:00:09] <energizer> when was ghci released?
[23:00:20] *** Quits: kranius (~kranius@user/kranius) (Quit: leaving)
[23:00:34] <monochrom> IMO DrRacket, Mathematica notebooks, IPython, and IHaskell are no longer REPL. They exceed REPL by far.
[23:01:00] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[23:01:50] <monochrom> REPL is when you are confined to a VT100.
[23:01:58] *** Joins: max22- (~maxime@2a01cb0883359800bfc539327e2fa08b.ipv6.abo.wanadoo.fr)
[23:03:16] <energizer> shapr: that post is nice. i often wonder why people dont use haskell for their system shell. based on that post i think the answer is that there's no good syntax for it
[23:03:22] <monochrom> Mathematica already coined the name "notebook" for this, long before the rest of DrRacket and IPython IThis IThat. I say we can call this "notebook".
[23:03:24] <geekosaur> looks like ghci was introduced in ghc5
[23:03:39] <energizer> (which isn't the conclusion it arrives at but i do)
[23:04:20] <energizer> monochrom: that is a good point
[23:04:45] <monochrom> And exploring data during programming, I think it's already part of Jackson Structured Design way back.
[23:05:08] <shapr> energizer: last I looked into GHCi, it works by compiling pieces and dynamically loading them. That needs extra support, so is often not present on uncommon architectures
[23:05:08] <monochrom> No one is going to get the credit except Jackson.
[23:05:25] <monochrom> BTW fun fact, his full name is Michael Jackson, no joke.
[23:06:02] <monochrom> In 2000 I had the honour to meet him. Same summer school when SPJ gave the Awkward Squad lectures.
[23:06:07] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:06:34] <geekosaur> shapr, not quite. it compiles to bytecode by default, which works fine. what does not automatically work on weird architectures is anything that wants to load external libraries for FFI
[23:06:48] <shapr> ah, thanks for the details
[23:06:50] <monochrom> And stupid me, when I met him I failed to connect him to "wait, are you Jackson as in Jackson Structure Design/Programming?"
[23:07:32] <energizer> geekosaur: what happens to the bytecode?
[23:07:52] <shapr> energizer: seems reasonable to me that whitespace syntax makes multi-line repl difficult
[23:08:22] <shapr> as far as I know the curly brace and semicolon syntax is still supported, maybe that'd be more repl friendly?
[23:08:42] <geekosaur> it's executed and discarded. a way to save and load it has been a low priority ghc ticket for years; you can't even save source currently, what point is bytecode?
[23:09:15] <shapr> energizer: at least for me, I write functions in emacs, and hit C-c C-l to dump the open buffer into ghci, that works well
[23:09:18] <geekosaur> it's still supported but less familiar to most folks, especially since once you switch to it you can't stop using it
[23:09:32] <shapr> haskell-language-server makes everything easier, I don't need ghci or ghcid much at all
[23:09:36] <geekosaur> so you also have to use brace syntax with a let inside a do, for example
[23:09:38] <energizer> geekosaur: i mean is there a bytecode vm or does the bytecode get compiled to native
[23:09:47] <geekosaur> there is a bytecode vm
[23:09:56] <geekosaur> it's also used by template haskell
[23:10:41] <shapr> energizer: oh, have you tried haskell-language-server ? if not, it's really amazing
[23:12:20] <energizer> i guess what i'm trying to get at is, what about lisp/python/whatever is more suitable for interactive exploration than what haskell offers
[23:13:02] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[23:13:47] <shapr> I can't think of any reason that would be true?
[23:14:05] <geekosaur> neither can I
[23:14:08] <shapr> not saying it isn't, just seems like they're equally powerful to me?
[23:14:18] <geekosaur> do you have a reason to think they are?
[23:14:34] <shapr> I did ~20 years of professional python before doing professional Haskell, I'd prefer to use Haskell for data exploration for a variety of reasons
[23:14:50] <shapr> mind you, python has lots of libraries that Haskell doesn't
[23:14:53] <geekosaur> the only reasons I can think of are (a) compiled instead of interpreted by default (b) not dynamically typed
[23:15:01] <energizer> one is that in python the compiler won't fail to infer, it'll just go
[23:15:03] <geekosaur> but neither is actually a problem
[23:15:28] <geekosaur> python will also happily accept unexpected Nones
[23:15:34] <geekosaur> and give you garbage
[23:15:40] <shapr> energizer: I think 'just go' has caused me the most problems in my professional python career.
[23:15:54] <energizer> i'm not asking "why is haskell better for interactive" i'm asking "why is python better for interactive"
[23:16:00] * shapr thinks
[23:16:10] <shapr> I guess I'm not convinced it is?
[23:16:19] <shapr> What do you see that supports that hypothesis?
[23:16:23] <energizer> s/why/in what ways is/
[23:17:12] <shapr> I'd agree with what geekosaur just said
[23:17:22] <shapr> Python will give you possibly incorrect results with less work
[23:17:39] <energizer> that aint what im asking
[23:17:56] * shapr tries to read again
[23:18:05] <energizer> gimme the python pros column
[23:18:18] <energizer> not the python cons column
[23:18:34] <shapr> python pros: jupyter, lots of libraries, easy to find on stackoverflow
[23:18:57] <energizer> i'm not seeing how compiled/interpreted would matter
[23:19:14] <shapr> matters a bunch when your dataset is large
[23:19:40] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4)
[23:19:45] <energizer> geekosaur gave it as a python pro i think
[23:19:55] <monochrom> codeworld proves that python is not better for interactive.
[23:20:09] <geekosaur> why are you asking haskell folks why python is better?
[23:20:28] <energizer> cuz python folks dont know haskell
[23:20:38] <shapr> ha, good point
[23:21:01] <shapr> python has way more libraries for uncommon file formats and network protocols
[23:21:11] <monochrom> Well, DrRacket already proves that. But I want a statically typed proof.
[23:21:16] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:21:17] *** Quits: emf (~emf@2620:10d:c091:480::1:e0fe) (Ping timeout: 240 seconds)
[23:21:19] <shapr> that's the biggest python advantage I see
[23:21:58] <shapr> energizer: do you write both Python and Haskell?
[23:22:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:22:26] <shapr> Python was my favorite language for a long time, but Haskell has overtaken that
[23:22:27] <monochrom> And there is also an interactive website that provides even a dependently typed proof. It uses Lean the math theorem prover.
[23:23:13] <monochrom> https://leanprover.github.io/live/latest/
[23:23:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4) (Ping timeout: 240 seconds)
[23:24:09] <monochrom> Although, when I first googled "try lean", I discovered that now we also have an abused drug called "lean".
[23:24:16] <monochrom> What can't we have nice things.
[23:24:19] <shapr> energizer: personally, I want to get more differential dataflow support in my every day life. I it'll be a better tool for many things I do.
[23:24:43] <monochrom> You give a name to your hard-won theorem prover, now suddenly it is also the name of a drug.
[23:25:02] <energizer> my experience with theorem provers is that they require enormous work to get results
[23:26:13] <energizer> sure the results are correct but do i really need to cover all the cases in the first draft
[23:26:21] <geekosaur> proofs are never easy, that's why we have tools to help with them
[23:26:33] <monochrom> No no no...
[23:26:47] <monochrom> proofs are never easy, that's why we let only humans check them >:)
[23:26:52] <energizer> not needing a proof to get something running is even easier
[23:27:26] <monochrom> I mean, correct programs are never easy, that's why we are complacent with incorrect programs.
[23:27:39] <energizer> i think that's the answer to my question
[23:27:56] <monochrom> And Curry-Howard says why the two phenomena are the two sides of the same coin.
[23:27:57] *** Joins: deadmarshal (~deadmarsh@95.38.229.128)
[23:28:32] <geekosaur> and why dynamic typed systems that don't warn you about an unexpected nil/None/whatever are so popular, you can pretend errors don't exist (right up until they bite you in the butt)
[23:28:33] <energizer> when i'm developing interactively, i dont want to be interrupted by an annoying program asking for a proof of cases i dont care about
[23:28:48] <energizer> or proof that ive satisfied all the properties
[23:29:30] <energizer> i just want to roll, i'll clean it up after i verify i'm on the right track
[23:30:00] <shapr> in my experience, GHC checking for unhandled cases is a sweet spot between a proof and a dynamic language like Python
[23:30:02] <geekosaur> and then you never do because it works well enough
[23:30:13] <geekosaur> see also: there is nothing so permanent as a temporary hack
[23:31:01] <geekosaur> (is my sysadmin hat showing? :)
[23:31:38] <shapr> they quickly become load bearing hacks
[23:31:51] <pragma-> if it ain't broke
[23:31:53] <shapr> we have several of those in the work codebase
[23:32:17] *** Quits: deadmarshal (~deadmarsh@95.38.229.128) (Ping timeout: 240 seconds)
[23:32:20] <monochrom> A proof-heavy system is only as restrictive as what you promise it.
[23:32:31] <shapr> energizer: will you do a write-up of your findings? I'd be interested in reading it.
[23:32:51] <monochrom> So I relax that restriction by promising less at the beginning.  I can promise more when I am ready for more.
[23:33:18] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[23:33:55] <energizer> shapr: i'm sure i wont have any novel conclusions, i'm just trying to catch up 
[23:33:57] <monochrom> You don't want to prove that your function works for all cases?  Well don't promise "all cases" in the first place.
[23:34:07] <shapr> energizer: if you want to learn about languages further into proof land, agda is informative.
[23:35:00] <energizer> shapr: yeah the whole family of fancy type systems seems interesting
[23:35:15] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:35:15] <energizer> agda idris lean coq
[23:35:17] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[23:35:20] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:319d:53ed:6690:e5b4)
[23:35:56] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[23:36:35] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807) (Remote host closed the connection)
[23:37:07] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[23:37:52] *** Joins: juhp (~juhp@128.106.188.82)
[23:38:39] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[23:38:42] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.3)
[23:38:52] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[23:40:51] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807) (Remote host closed the connection)
[23:41:05] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[23:43:29] *** Joins: vicfred (~vicfred@user/vicfred)
[23:45:02] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[23:45:37] *** Joins: wolfshappen (~waff@irc.furworks.de)
[23:49:02] *** Joins: Guest|47 (~Guest|47@c-73-221-44-172.hsd1.wa.comcast.net)
[23:51:26] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[23:52:53] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[23:53:17] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[23:53:59] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[23:54:23] *** Guest|47 is now known as space_llama
[23:55:39] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
