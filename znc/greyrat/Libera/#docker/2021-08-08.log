[00:05:57] *** Joins: scrps (~scrps@gateway/tor-sasl/scrps)
[00:06:08] <brachamh> hey all, i just broke my nextcloud instance in a docker container...i know what i need to fix, but i need to access the filesystem of the stopped container. how do i do this again?
[00:06:35] *** Joins: oxum (~oxum@106.203.207.2)
[00:06:57] <brachamh> i know i've found the container filesystem on the host before, but it's been a while and i can't remember where i found it
[00:08:35] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[00:12:34] <tabakhase> brachamh made a volume? should be somewhere in /var/lib/docker - but thats rly not the way to access it... - but you can just start antoher container and attach that volume to it, then tar/docker cp from it as you like
[00:13:06] <Ryu945> I have a container with a volume.  I want to add a new volume to it.   I ran a compose file that has the new container but it is giving me the error that the new volume doesn't exist.  Ofcourse it shouldn't, I am adding it now.
[00:13:07] <tabakhase> (what you see in /var/lib/docker may only be half the truth as its unassembled layers in there...)
[00:13:48] <Ryu945> How do I tell it to create this volume 
[00:13:56] <tabakhase> from how you started it...
[00:14:16] <Ryu945> i tried docker-compose up
[00:14:31] <tabakhase> may even have a annon vol if it had a VOLUME line in the dockerfile *looking at you mysql :/* - check docker inspect XYZ i guess
[00:17:24] <Ryu945> In short, how do I add a new volume to an existing compose file.   
[00:18:03] <Ryu945> I have it placed in the file correctly.  The first time it added the volume find.  I had to delete it and start from an earlier database backup
[00:18:11] <Ryu945> Back before I created that volume
[00:18:23] <Ryu945> It will not recreate it like it did last time
[00:21:35] <Ryu945> Strange.  I had to reboot the computer for it to work
[00:23:31] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[00:24:11] <Activ8> the beauty of portainer lol
[00:37:43] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[00:38:58] *** Joins: Hackerpcs (~user@user/hackerpcs)
[00:39:07] <cim> maybe the container was still running
[00:39:55] <Ryu945> it was deleted which is what was so weird
[00:44:40] <cim> did you bring down the container then do a docker volume rm ? or was this all done in portainer
[00:52:52] *** Joins: Brainium (~brainium@user/brainium)
[00:54:54] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[00:56:03] <Activ8> I removed a container once n fetched up a new one not realizing it created a new volume luckily my data was there and I just stopped the container, copied over the volume and was good to go.
[01:01:50] *** Quits: TomTom (uid45892@id-45892.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:03:03] *** Quits: Bardon (~Bardon@user/Bardon) (Quit: ZNC - https://znc.in)
[01:04:15] *** Joins: Bardon (~Bardon@user/Bardon)
[01:06:43] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[01:10:01] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[01:13:44] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 272 seconds)
[01:15:15] <brachamh> tabakhase: it appears that the core part that includes /etc/ isn't in a volume
[01:16:14] <brachamh> so i'm just going to take this opportunity to rebuild and update anyway
[01:39:23] *** Quits: scrps (~scrps@gateway/tor-sasl/scrps) (Ping timeout: 244 seconds)
[01:46:14] *** Joins: foton (~foton@user/foton)
[01:46:36] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 258 seconds)
[01:56:54] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:00:16] *** Parts: foton (~foton@user/foton) (Bye, bye, ...)
[02:00:19] *** Quits: DeanGuss (~dean@user/deanguss) (Quit: buhbye)
[02:00:24] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Ping timeout: 258 seconds)
[02:02:00] *** Joins: i64_2 (i64@gateway/vpn/protonvpn/i64)
[02:02:23] *** Quits: i64 (i64@gateway/vpn/protonvpn/i64) (Ping timeout: 250 seconds)
[02:02:47] *** Joins: vidbina_ (~vid@x4db78e16.dyn.telefonica.de)
[02:07:18] *** Quits: vidbina_ (~vid@x4db78e16.dyn.telefonica.de) (Ping timeout: 258 seconds)
[02:09:20] *** Quits: Bardon (~Bardon@user/Bardon) (Quit: ZNC - https://znc.in)
[02:09:50] *** Joins: Bardon (~Bardon@user/Bardon)
[02:10:50] *** Quits: Bardon (~Bardon@user/Bardon) (Remote host closed the connection)
[02:11:25] *** Joins: Bardon (~Bardon@user/Bardon)
[02:18:48] *** Joins: thiras (~thiras@user/thiras)
[02:19:33] *** Joins: dobbicorp (~chipas@user/dobbicorp)
[02:22:44] <dobbicorp> in docker-compose i see such notation for volumes:    -www:${var}:cached    , is that a mistake? (usualy it is dir:dir and here it is dir:dir:dir) .  if it is not a mistake please give me a link to documentation (or a search term)
[02:24:04] *** onelegend is now known as [[OneLegend]]
[02:28:28] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[02:30:19] *** Joins: DeanGuss (~dean@user/deanguss)
[02:30:20] *** Joins: vidbina_ (~vid@x4db78e16.dyn.telefonica.de)
[02:43:01] <dobbicorp> looks like the third "octet" is for predefined "modificators" like :ro :cached :rw etc
[03:11:26] *** Quits: Ryu945 (~Ryu945@181.214.227.73) (Quit: Leaving)
[03:13:39] *** Quits: dalan6 (~dalan@27-32-30-220.tpgi.com.au) (Quit: dalan6)
[03:14:05] *** Quits: dobbicorp (~chipas@user/dobbicorp) (Quit: leaving)
[03:14:10] *** Joins: dalan6 (~dalan@27-32-30-220.tpgi.com.au)
[03:15:35] *** Joins: dobbicorp (~chipas@user/dobbicorp)
[03:25:03] *** Joins: zunino (~zunino@2804:7f5:f480:f013:c2e4:ee71:4e60:52dc)
[03:28:21] <zunino> I'm looking for suggestions for a solution on the following scenario: I wish to be able to remotely trigger the updating of my APP which is running in a Docker container (docker-compose is actually used to manage it on the host). I do not have direct access to that host and so, what I'm trying to come up with is a way I could remotely trigger an update when a newer version of the APP's image
[03:28:23] <zunino> becomes available.
[03:28:57] <zunino> I'm able to reach HTTP endpoints in the APP.
[03:29:04] <BtbN> If you don't have access to the dockerd, that's impossible.
[03:29:21] <BtbN> You can do a self-update internally to the application, but you cannot pull and run a new docker image.
[03:29:39] <zoredache> Do you update the image when a new version is released?  There are several tools that will watch a registry for newer versions of an image and restart with the newer image
[03:30:02] <zunino> There's no continuous delivery scheme in place, unfortunately.
[03:32:10] *** Quits: yksi (~kvirc@user/yksi) (Ping timeout: 240 seconds)
[03:32:21] <zunino> BtbN: I was trying to come up with some signaling mechanism; something like the APP receives the /upgrade request and then sends a signal to another process. But I have not been able to have a working solution.
[03:32:25] *** Joins: yksi (~kvirc@user/yksi)
[03:32:46] <zunino> Would binding the docker.sock potentially be a way to have container->host communication?
[03:33:24] <zunino> I have never done that before, but it seems to be a kind of backdoor some tools use to interact with and manipulate the docker daemon.
[03:33:30] *** Quits: vidbina_ (~vid@x4db78e16.dyn.telefonica.de) (Ping timeout: 240 seconds)
[03:33:42] <zoredache> Yes if you bind mount the docker.sock in the contianer you can  restart the container, create containers, and so on.
[03:33:56] <zoredache> keep in mind, that it is basically giving root access to the host, to that container
[03:35:00] <zunino> zoredache: I was gonna ask about that. In order to be able to use that route, would the particular container have to be given special priviledges?
[03:35:03] <zoredache> If you need some kind of remote management, you might want it in a separate container, with much stronger authentication, auditing and so on then what you have in your app
[03:36:14] <zoredache> if the docker.sock is mounted in the container, then any process with uid 0 or the uid of the docker user/group on the host will be able to communicate with the socket.
[03:37:08] <jochum> zunino: why not something event based?
[03:37:28] <jochum> We had the very same question some hours ago from someone else
[03:37:52] <zunino> jochum: Care to elaborate?
[03:38:59] <jochum> zunino: there are 3 ways doing so. 1) intercontainer communication some way of selfmade /upgrade, 2) docker.sock, 3) something like celery/nats/rabbitmq to send a message to containers.
[03:39:34] <jochum> exactly 12 hours ago cluelessperson wanted to know this
[03:40:13] <jochum> zunino: i forgot 4. way: have a shared mount on all containers and communicate over this
[03:41:37] <tabakhase> > I do not have direct access to that host --- puts thi all into ???? land...
[03:42:20] <jochum> tabakhase: all 4 ways are useless for zunino ?
[03:43:09] <zunino> jochum: Regarding 4), do you mean something like: upon receiving the /upgrade request, the app signals the event (e.g. writes "UPGRADE_TRIGGERED" to a file). A host-level process runs continuously and checks that file every t units of time and carries out the update.
[03:43:12] <tabakhase> and "binding docker-sock" is not just "kind of a backdor" - its the ultimate and makes you root - `docker run --privileged --pid=host -it alpine:3.8 nsenter -t 1 -m -u -n -i sh` and youre in :P
[03:43:40] * jochum needs to remember that command :)
[03:43:44] <wez> Lutin: Alane?
[03:44:03] <jochum> zunino: exactly
[03:44:14] <jochum> zunino: no wait
[03:44:32] <jochum> zunino: do you want to "upgrade" containers or its software inside?
[03:44:34] <zunino> tabakhase: When I said I don't have direct access to the server, I meant I can't SSH into it and make changes to it myself. Updates are currently carried out by third-parties, but the process is slow and error-prone.
[03:44:58] <tabakhase> if you just "blindly want the newest image" there are projects like watchtower...
[03:45:15] <jochum> yes
[03:46:21] <zunino> tabakhase: In practice, I'd be getting the latest image, but my original plan includes specifying the desired tag when invoking the protected endpoint /upgrade (e.g. a JSON body that could look like {"tag": "3.2.0-0"}
[03:46:32] <tabakhase> given "you" then also have no docker-daemon access, and they def. shouldnt give your --privi / the sock, its a "bring them to run watchtower for ya" i guess
[03:47:48] <tabakhase> container from "inside" cant change a thing (other than say, have your app-code sit in a volume and download a new version of this and kill the container (to get autorestarted with volume for new code) - but that aint "docker" anymore
[03:47:50] <jochum> zunino: I was wrong, I thought you need communication. Not container updates.
[03:48:02] <jochum> what about docker-in-docker ?
[03:48:14] <tabakhase> dind needs --privileged
[03:48:23] <jochum> the outer docker
[03:48:24] <wez> what does watchtower do?
[03:49:01] <tabakhase> https://github.com/containrrr/watchtower "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially."
[03:50:32] <jochum> zunino: can you get --privileged?
[03:50:40] <zunino> tabakhase: It looks promising. Though, it would require the IT people responsible for the host to install the service. Still, I might look into that option.
[03:51:42] <zunino> jochum: I don't think I can. I mean, I could ask, but I'm not sure they would concede.
[03:51:44] <tabakhase> zunino ye as said above, "bring them to run watchtower for ya" - in some golden-cage / managed hosting likely the most reasonable thing to end on...
[03:52:02] <tabakhase> and then have a ":deployed" tag that you use there and can move to wherever its needed
[03:53:01] <wez> nice
[03:53:03] <tabakhase> so your "go to 3.2.0-0"  translates to a "docker tag mine:3.2.0-0 mine:deployed && docker push mine:deployed" + waiting a few moments
[03:53:37] <jochum> zunino: another option maybe a script that does docker-compose down; curl docker-compose.yaml; docker-compose up -d ?
[03:54:04] <jochum> for the IT department 
[03:54:23] <tabakhase> i would not belive he has the power to update the compose file ;-) -- or were just back to running priv & nsenter the heck outa it :P
[03:56:38] <zunino> Guys, thank you for your suggestions and clarifications. I will bring watchtower to the table with the team on Monday and, eventually, try to persuade the remote team to have it installed.
[03:57:01] <zunino> You have a great weekend!
[03:57:24] *** Quits: zunino (~zunino@2804:7f5:f480:f013:c2e4:ee71:4e60:52dc) (Quit: WeeChat 3.0.1)
[03:58:16] <jochum> If i would be golden-cage hoster (whyever) I wouldn't install watchtower
[03:59:33] <jochum> But it seems the securest way for allowing auto-updates.
[03:59:49] <tabakhase> eh... its pretty okay, OSS not smth random with 5 backdoors so fairly clean from that point... - and it keeps all settings same everywhere else, just swaps out the image in the end
[04:00:45] <tabakhase> if thats some 3rd party thats happy to write a 1/2 tech-hour invoice on every image update - yea....
[04:01:10] <tabakhase> but "with the remote team on monday" may be company internal it, so worth a shot...
[04:23:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:23:44] *** Joins: flynn (~mcbloch@user/flynn)
[04:26:45] <dostoyevsky2> I plan to use a cronjob in my projects that just checks if a tag in the docker registry has changed/or maybe just if the Dockerfile in a git has changed ... and then rebuilds the dockercontainer and if that was successful will replace the running container with the newly created one
[04:28:09] <dostoyevsky2> (for updating images on servers which are difficult to ssh to)
[04:37:09] *** Joins: jazzy (~jaziz@2600:380:8562:6b2:9c1f:23c2:2ca2:238b)
[04:38:16] *** [[OneLegend]] is now known as OneLegend
[04:44:45] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Quit: Atum_)
[04:46:13] *** Joins: pvdp (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au)
[04:50:58] <Lyn> lol, alpine nginx image (22.85MB) didn't have bash, so I tried the normal image (133.18MB), but then I found a nice small command to get bash and now the image is 24.5MB
[04:58:42] <tabakhase> tried "sh"?...
[05:00:56] <Lyn> gave it a go too, that worked as well lol, all the hurdles I go through
[05:04:00] *** njka is now known as traderjoe
[05:20:04] *** Joins: baroobob (~jwbwater@98.215.243.94)
[05:20:36] *** traderjoe is now known as njka
[05:21:11] *** Joins: zakame (~zakame@user/zakame)
[05:22:28] *** Joins: lemonzest (~lemonzest@user/lemonzest)
[05:30:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[05:32:02] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:36:12] *** Joins: vlm (~vlm@user/vlm)
[05:53:58] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[05:59:29] *** Joins: OPK (~OPK@user/opk)
[06:00:21] *** Joins: c10l (~c10l@89.34.167.207)
[06:03:01] *** Joins: minimal (~minimal@user/minimal)
[06:06:35] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-f9c9-12c1-1bdd-7dd0.res6.spectrum.com)
[06:10:06] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-dd8f-ae40-8c90-f67d.res6.spectrum.com) (Ping timeout: 252 seconds)
[06:17:56] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[06:21:29] *** njka is now known as CaptainPeacock
[06:21:39] *** CaptainPeacock is now known as njka
[06:29:25] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[06:31:24] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-f9c9-12c1-1bdd-7dd0.res6.spectrum.com) (Quit: jarthur_)
[06:35:22] *** Quits: dobbicorp (~chipas@user/dobbicorp) (Quit: Lost terminal)
[06:37:20] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) (Remote host closed the connection)
[06:39:14] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[06:56:31] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[06:57:35] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[07:10:55] *** Quits: DefiantX (~DefiantN@user/defiantn) (Ping timeout: 250 seconds)
[07:15:44] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[07:17:36] *** Joins: DefiantX (~DefiantN@user/defiantn)
[07:36:47] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 245 seconds)
[07:43:06] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:24:54] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[09:00:27] *** Quits: setesat40 (~setesat@94.4.156.220) (Quit: Ping timeout (120 seconds))
[09:00:48] *** Joins: setesat40 (~setesat@94.4.156.220)
[09:18:38] *** Quits: lemonzest (~lemonzest@user/lemonzest) (Quit: Quitting)
[10:31:40] *** Quits: TheFatherMind (~TheFather@user/thefathermind) (Quit: I am NOT a QUITTER!)
[10:32:12] *** Joins: TheFatherMind (~TheFather@user/thefathermind)
[10:37:04] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Ping timeout: 256 seconds)
[11:13:47] *** Quits: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[11:15:24] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[11:15:33] *** Joins: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d)
[11:28:46] *** Quits: brachamh_ (~brachamh@user/brachamh) (Quit: Oops, I'll be back.)
[11:43:31] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[11:53:42] *** Quits: winstonsmith (~winstonsm@109.201.152.176) (Remote host closed the connection)
[11:54:31] *** Joins: winstonsmith (~winstonsm@109.201.152.177)
[11:57:08] *** Joins: RealKiller (~RealKille@103.134.20.216)
[12:01:48] *** Joins: Zelec26 (~Zelec@135-23-82-85.cpe.pppoe.ca)
[12:03:46] *** Quits: Zelec2 (~Zelec@135-23-82-85.cpe.pppoe.ca) (Ping timeout: 258 seconds)
[12:03:47] *** Zelec26 is now known as Zelec2
[12:04:41] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:17:26] *** Joins: igghibu (~igghibu@37.120.201.121)
[12:25:14] *** Joins: debayer (~debayer@2603-8000-cf00-0010-4dc2-efc1-b952-84db.res6.spectrum.com)
[12:36:46] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[12:39:19] *** Quits: igghibu (~igghibu@37.120.201.121) (Quit: Textual IRC Client: www.textualapp.com)
[12:42:23] *** Joins: Enissay (~Enissay@user/enissay)
[12:44:40] *** Joins: Lutin (~Lutin@user/lutin)
[12:44:48] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[12:47:22] *** Joins: Enissay (~Enissay@user/enissay)
[12:47:55] *** Quits: RealKiller (~RealKille@103.134.20.216) (Ping timeout: 246 seconds)
[12:48:54] *** Joins: oxum (~oxum@106.203.207.2)
[12:49:20] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[12:50:54] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[12:51:36] *** Joins: Enissay (~Enissay@user/enissay)
[13:06:29] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[13:09:40] <Lutin> morning!
[13:10:54] *** Joins: Enissay (~Enissay@user/enissay)
[13:11:48] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[13:17:17] *** Joins: Enissay (~Enissay@user/enissay)
[13:17:39] *** Joins: TomTom (uid45892@id-45892.charlton.irccloud.com)
[13:19:57] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[13:25:01] *** Joins: Enissay (~Enissay@user/enissay)
[13:25:43] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[13:29:08] *** Joins: Enissay (~Enissay@user/enissay)
[13:33:45] *** Joins: indigaz5 (~indigaz@c-73-168-117-231.hsd1.in.comcast.net)
[13:34:37] *** Quits: indigaz (~indigaz@c-73-168-117-231.hsd1.in.comcast.net) (Ping timeout: 258 seconds)
[13:34:38] *** indigaz5 is now known as indigaz
[13:35:19] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[13:38:21] *** Joins: Enissay (~Enissay@user/enissay)
[13:51:22] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: Lost terminal)
[13:51:49] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[13:54:04] *** Joins: Enissay (~Enissay@user/enissay)
[13:59:37] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[14:07:19] *** Joins: Enissay (~Enissay@user/enissay)
[14:07:59] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[14:12:47] *** Joins: Enissay (~Enissay@user/enissay)
[14:13:54] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[14:14:14] *** Joins: ada_- (~ada_@user/ada/x-9065485)
[14:14:15] *** ChanServ sets mode: +o ada_-
[14:15:07] *** Joins: SmokenatorZ4 (~Smokenato@189-46-177-3.dsl.telesp.net.br)
[14:15:07] *** Quits: Nightah (~Nightah@user/nightah) (Ping timeout: 245 seconds)
[14:15:29] *** Quits: momomo (~momomo@user/momomo) (Read error: Connection reset by peer)
[14:15:31] *** Joins: Nightah (~Nightah@user/nightah)
[14:15:32] *** Quits: SmokenatorZ (~Smokenato@189-46-177-3.dsl.telesp.net.br) (Ping timeout: 245 seconds)
[14:15:33] *** SmokenatorZ4 is now known as SmokenatorZ
[14:15:38] *** Quits: pstn (~nunyuhbiz@user/pstn) (Ping timeout: 252 seconds)
[14:16:01] *** Quits: Razva (sid17541@user/razva) (Ping timeout: 250 seconds)
[14:16:01] *** Joins: pstn (~nunyuhbiz@user/pstn)
[14:16:22] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 245 seconds)
[14:16:38] *** Quits: travisghansen (~travisgha@192.74.130.86) (Read error: Connection reset by peer)
[14:16:41] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[14:16:44] *** Joins: momomo (~momomo@user/momomo)
[14:16:47] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 245 seconds)
[14:16:47] *** Joins: travisghansen9 (~travisgha@192.74.130.86)
[14:16:56] *** Quits: yksi (~kvirc@user/yksi) (Ping timeout: 256 seconds)
[14:16:56] *** Quits: ada_ (~ada_@user/ada/x-9065485) (Ping timeout: 256 seconds)
[14:16:56] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[14:16:56] *** ada_- is now known as ada_
[14:17:12] *** Quits: i64_2 (i64@gateway/vpn/protonvpn/i64) (Ping timeout: 245 seconds)
[14:17:12] *** Quits: brachamh (~brachamh@user/brachamh) (Ping timeout: 245 seconds)
[14:17:17] *** Quits: mweckbecker (~matthias@weckbecker.name) (Ping timeout: 252 seconds)
[14:17:17] *** Quits: lebster (sid17131@id-17131.stonehaven.irccloud.com) (Ping timeout: 252 seconds)
[14:17:30] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 256 seconds)
[14:17:30] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[14:17:30] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 256 seconds)
[14:17:30] *** Quits: zoredache (sid295808@id-295808.brockwell.irccloud.com) (Ping timeout: 256 seconds)
[14:17:36] *** Joins: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[14:17:41] *** Joins: jazzy2 (~jaziz@2600:380:8562:6b2:9c1f:23c2:2ca2:238b)
[14:17:51] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[14:18:07] *** Joins: i64 (i64@gateway/vpn/protonvpn/i64)
[14:18:11] *** Quits: petris (sid19918@user/petris) (Ping timeout: 250 seconds)
[14:18:27] *** Quits: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle) (Ping timeout: 245 seconds)
[14:18:34] *** Joins: Razva (sid17541@user/razva)
[14:18:38] *** Quits: TomTom (uid45892@id-45892.charlton.irccloud.com) (Ping timeout: 256 seconds)
[14:18:38] *** Quits: setesat40 (~setesat@94.4.156.220) (Ping timeout: 256 seconds)
[14:18:45] *** Joins: Enissay (~Enissay@user/enissay)
[14:18:52] *** Quits: pfeilmann (~pfeilmann@c3po.mahr.pw) (Ping timeout: 245 seconds)
[14:18:52] *** Quits: JohnDoe2_ (~johndoe2@2001:470:1f07:89::dead:bead) (Ping timeout: 245 seconds)
[14:18:56] *** Quits: cmagina (sid286142@user/cmagina) (Ping timeout: 252 seconds)
[14:18:59] *** Joins: lebster (sid17131@id-17131.stonehaven.irccloud.com)
[14:19:09] *** Joins: pfeilmann (~pfeilmann@c3po.mahr.pw)
[14:19:13] *** Joins: r0bby (r0bby@user/r0bby)
[14:19:29] *** Quits: dskull (~dskull@user/dskull) (Ping timeout: 250 seconds)
[14:19:29] *** Joins: dskullz (~dskull@user/dskull)
[14:19:29] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (Ping timeout: 252 seconds)
[14:19:38] *** Quits: erri (~meow@52.8.199.178) (Ping timeout: 272 seconds)
[14:19:46] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 256 seconds)
[14:20:07] *** Quits: daddy (~ryan@hashbang/bdfl) (Ping timeout: 245 seconds)
[14:20:20] *** Joins: petris (sid19918@user/petris)
[14:20:25] *** Joins: TomTom (uid45892@id-45892.charlton.irccloud.com)
[14:20:40] *** Joins: OPK (~OPK@user/opk)
[14:20:43] *** Joins: cmagina (sid286142@user/cmagina)
[14:20:54] *** Quits: jazzy (~jaziz@2600:380:8562:6b2:9c1f:23c2:2ca2:238b) (Ping timeout: 256 seconds)
[14:20:57] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 245 seconds)
[14:20:58] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 245 seconds)
[14:20:58] *** Quits: jaskal (jaskal@user/jaskal) (Ping timeout: 245 seconds)
[14:21:03] *** dskullz is now known as dskull
[14:21:08] *** Quits: bugsy (~nunyuhbiz@user/cosanostra) (Ping timeout: 252 seconds)
[14:21:08] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[14:21:28] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Ping timeout: 256 seconds)
[14:21:32] *** Quits: michele (~eraser@user/michele) (Ping timeout: 272 seconds)
[14:21:39] *** Quits: Zelec2 (~Zelec@135-23-82-85.cpe.pppoe.ca) (Ping timeout: 250 seconds)
[14:21:39] *** Quits: syntaxman (~wade@li227-215.members.linode.com) (Ping timeout: 250 seconds)
[14:21:41] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 252 seconds)
[14:22:02] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 256 seconds)
[14:22:10] *** Quits: meyer (~nunyuh@user/cosanostra) (Ping timeout: 272 seconds)
[14:22:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Ping timeout: 256 seconds)
[14:23:44] *** Quits: phalanx (~thelounge@user/phalanx) (Ping timeout: 256 seconds)
[14:23:44] *** Quits: Bebef (sbreit@phobos.bebef.de) (Ping timeout: 256 seconds)
[14:24:26] *** Quits: Shaun (~soneil@user/shaun) (Ping timeout: 252 seconds)
[14:24:43] *** Quits: AsenM (~AsenM@78.90.248.234) (Read error: Connection reset by peer)
[14:24:45] *** Joins: Enissay (~Enissay@user/enissay)
[14:25:32] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 252 seconds)
[14:26:18] *** Quits: geirha (~geirha@user/geirha) (Ping timeout: 258 seconds)
[14:26:34] *** Quits: compuguy (ahall@user/compuguy) (Ping timeout: 256 seconds)
[14:27:02] *** Joins: compuguy (~ahall@user/compuguy)
[14:27:08] *** Quits: etienneme (~etienne@user/etienneme) (Ping timeout: 256 seconds)
[14:27:12] *** Quits: lightstalker (~BT@user/lightstalker) (Ping timeout: 245 seconds)
[14:28:28] *** Quits: Shapeshifter (~Shapeshif@parakeet.ifi.uzh.ch) (Ping timeout: 245 seconds)
[14:28:50] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 252 seconds)
[14:30:20] *** Joins: zoredache (sid295808@id-295808.brockwell.irccloud.com)
[14:30:41] *** Quits: Enissay (~Enissay@user/enissay) (Read error: Connection reset by peer)
[14:31:21] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[14:31:24] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[14:31:24] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Client Quit)
[14:31:35] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 252 seconds)
[14:31:40] *** Quits: compuguy (~ahall@user/compuguy) (Ping timeout: 256 seconds)
[14:31:52] *** Joins: tkazi (~tkazi@user/tkazi)
[14:31:58] *** Joins: Enissay (~Enissay@user/enissay)
[14:32:37] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 245 seconds)
[14:33:27] *** Quits: Hackerpcs (~user@user/hackerpcs) (Ping timeout: 245 seconds)
[14:33:42] *** Joins: Joel (~jjshoe@user/joel)
[14:33:50] *** Joins: compuguy (ahall@user/compuguy)
[14:33:53] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:33:58] *** Joins: tofran (~tofran@37.189.158.134)
[14:34:19] *** Joins: daddy (~ryan@hashbang/bdfl)
[14:34:22] *** Joins: michele (~eraser@user/michele)
[14:34:42] *** Joins: Shaun (~soneil@user/shaun)
[14:34:44] *** Joins: lightstalker (~BT@user/lightstalker)
[14:35:02] *** Joins: kenoba (~kenoba@user/kenoba)
[14:35:04] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[14:35:09] *** Joins: brachamh (~brachamh@user/brachamh)
[14:35:33] *** Joins: meyer (~nunyuh@user/cosanostra)
[14:35:37] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[14:35:47] *** Joins: etienneme (~etienne@user/etienneme)
[14:35:58] *** Joins: Zelec2 (~Zelec@135-23-82-85.cpe.pppoe.ca)
[14:36:46] *** Joins: Bardon (~Bardon@user/Bardon)
[14:36:48] *** Joins: erri (~meow@52.8.199.178)
[14:36:59] *** Joins: tazle (~tazle@kapsi.fi)
[14:37:36] *** Joins: Hackerpcs (~user@user/hackerpcs)
[14:37:37] *** Quits: Nightah (~Nightah@user/nightah) (Ping timeout: 245 seconds)
[14:37:42] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[14:38:50] *** Joins: Nightah (~Nightah@user/nightah)
[14:38:54] *** Joins: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle)
[14:40:58] *** Joins: bugsy (~nunyuhbiz@user/cosanostra)
[14:40:59] *** Joins: dlam (~dlam@dlam.me)
[14:41:47] *** Quits: jonifen (~jonifen@user/jonifen) (Ping timeout: 245 seconds)
[14:43:25] *** Joins: jonifen (~jonifen@user/jonifen)
[14:43:46] *** Joins: Shapeshifter (~Shapeshif@parakeet.ifi.uzh.ch)
[14:46:26] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 252 seconds)
[14:46:33] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[14:50:29] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[14:51:29] *** Joins: fearnothing (~fearnothi@82-68-82-102.dsl.in-addr.zen.co.uk)
[14:51:47] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[14:52:08] *** Joins: keypusher (keypusher@user/keypusher)
[14:53:36] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[14:53:48] *** Joins: geirha (~geirha@user/geirha)
[14:54:05] <fearnothing> hola folks, got some docker noob questions
[14:54:40] *** Joins: mei (~mei@user/mei)
[14:54:52] *** Joins: mweckbecker (~matthias@weckbecker.name)
[14:55:02] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[14:55:16] *** Joins: Enissay (~Enissay@user/enissay)
[14:55:57] <fearnothing> I'm writing an app which consists of a couple of components, a web UI and an agent to perform some tasks issued through the UI. I probably ought to get around to doing things the modern way and container this baby up... but that means I need to know what the right way to pass information around between the systems is
[14:57:05] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[14:57:46] <fearnothing> they're both written in Node, and the agent will be something which runs for a short time (maybe 10-30 seconds) and creates a file with a JSON dump of data plus a few associated items (image files, some metadata)
[14:58:50] <fearnothing> in theory it would probably be a good idea to make the system capable of running the agent on arbitrary hosts, not necessarily just the local one
[14:59:41] <fearnothing> so the question is: what methods of passing that data back to the web UI component should I be considering?
[14:59:53] <fearnothing> the general flow will be something like:
[15:00:02] <s17> TCP
[15:00:28] *** Joins: Enissay (~Enissay@user/enissay)
[15:01:17] <fearnothing> um, ok I realise my question is extremely nonspecific but that doesn't mean nonspecific answers are what I need :P
[15:01:40] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[15:02:44] <fearnothing> it means I need to know how to ask the question more specifically, but I don't know what it's even possible to ask
[15:03:12] <s17> that's a strange flow
[15:03:31] <fearnothing> you interrupted my flow :P
[15:03:53] <s17> https://duckduckgo.com/?q=docker+communicate+between+containers&ia=web
[15:04:04] *** Joins: Enissay (~Enissay@user/enissay)
[15:04:12] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[15:07:08] *** Joins: Enissay (~Enissay@user/enissay)
[15:07:52] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[15:09:21] *** Joins: vidbina_ (~vid@dynamic-078-054-135-042.78.54.pool.telefonica.de)
[15:09:40] <fearnothing> short version... user interacts with web UI to request a task, UI spins up an instance of the agent (probably a new container?), agent performs task and returns data to the web UI host which stores it into database/filesystem. Agent only exists for the duration of the task (about 10-30 seconds)
[15:13:58] *** Joins: Enissay (~Enissay@user/enissay)
[15:15:00] <fearnothing> if you do something like that all on one host and transfer the data via docker's networking, to what extent do you have to write your own security for the communication? like if I was doing it as a traditional web app it would need the APIs to validate the source when the agent returned the data, with a token or something
[15:15:35] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[15:20:23] *** Joins: Enissay (~Enissay@user/enissay)
[15:27:00] *** Joins: bencc1 (~bencc1@2a00:a040:197:3af:983c:1dac:9299:901b)
[15:28:00] *** Joins: bouncy (~ben@user/benoit)
[15:28:51] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[15:31:13] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 244 seconds)
[15:37:24] *** Quits: hendry (~hendry@210.23.22.2) (Quit: brb)
[15:39:42] *** Joins: hendry (~hendry@210.23.22.2)
[15:52:46] <Lyn> so is it right that docker-compose shouldn't really be used for production? maybe I should use Flightplan for building prod images and deploying, and have docker-compose.yml only for making dev images and testing
[15:53:36] <wez> Lyn: Yeah, Docker swarm doesn't support it, and a number of production frameworks don't either
[15:53:59] <wez> It is great for testing and getting something quick up, but I wouldn't use it for production.
[15:54:38] <wez> I mean you could use it to just build the images, but you can also script that too
[15:54:59] <Lutin> anyone able to check what kind of UUID their OS disk has with a cloudprovider ? I think it's the same over every VPS for the same version as it's an image.
[15:56:36] <Lyn> if I'm going to have scripts for deploying anyway, then I might as well use the deploying scripts to build the prod images too, so I can simplify the process, that is, by not having a separate docker-compose.yml for both prod and dev
[15:58:39] <akik> wez: docker swarm supports compose files with stack deploy
[15:59:40] <Lutin> Lyn why is docker-compose not for production ?
[15:59:54] <Lyn> I'm not the right person to ask that :p
[16:00:42] <Lyn> but I heard some do use it for production too (but afaik, for example, Docker Secrets require using Swarm anyway)
[16:01:37] <Lutin> Lyn compose is just what you use for firing up your containers...
[16:01:50] <Lutin> every other manager uses that
[16:01:58] <Lyn> have you heard of the Swarm though
[16:02:58] <Lutin> What has swarm todo with compose ?
[16:03:14] <Lyn> is it a yes or no
[16:03:29] <Lutin> swarm containers are deployed with compose files
[16:03:48] <Lyn> there's no use arguing if you don't know what Swarm is used for
[16:04:23] <Lutin> LOL, I run multuple Swarm clusters, it's nothing fancy compared to how you deploy a container
[16:05:13] <Lutin> you try to make a point that doesn't exist as it seems you don't know how things work or are used for
[16:05:34] <Lyn> alright, that's good to know -- again, I did say that I'm not the right person to ask lol
[16:06:17] <Lutin> so why are you telling me then the there is no arguing possibe when I don't use Swarm when you don't know yourself how it works ?
[16:06:38] * Lutin his keyboard lacks... I need to clean it :P
[16:07:25] <Lyn> sorry, in my pov it wasn't very clear that you even knew what swarm is, and if you hadn't known it, then looking into it would've been the right next step
[16:07:55] <Lutin> LO
[16:07:56] <Lutin> L
[16:08:07] <Lyn> what's so funny
[16:08:33] <Lutin> your perspective of how people may respond if you think they don't have knowledge
[16:08:43] <Lutin> first lesson in (IT) life... don't
[16:09:21] <Lyn> eh, that doesn't really convince me to not at least try to make sure that the other person knows things
[16:09:27] <Lutin> I know, lots of peope on IRC can't, but in this channel people can imagine a lot with a little info people give
[16:09:56] <Lutin> Lyn that is exactly your issue, fix it before it's to late... free advise... no offence
[16:10:01] <Lutin> *too
[16:10:13] <Lyn> we will have to agree to disagree here
[16:14:10] <Lutin> You will find out, everyone did
[16:14:46] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[16:14:51] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 258 seconds)
[16:16:56] *** Joins: zakame (~zakame@user/zakame)
[16:18:30] *** Joins: ectospasm (~ectospasm@user/ectospasm)
[16:26:56] *** Quits: XpineX (~XpineX@5.103.80.64.dhcp.fibianet.dk) (Ping timeout: 272 seconds)
[16:30:02] *** Joins: Enissay (~Enissay@user/enissay)
[16:32:15] *** Joins: XpineX (~XpineX@5.103.80.64.dhcp.fibianet.dk)
[16:33:22] *** Joins: lemonzest (~lemonzest@user/lemonzest)
[16:36:31] <Lutin> oh nice geo-replication bug is fixed :)
[16:36:49] <Lutin> Almost done with this stunning cluster
[16:39:54] *** Quits: tkob (~tkob@user/thekingofbandit) (Ping timeout: 240 seconds)
[16:40:18] *** Quits: XpineX (~XpineX@5.103.80.64.dhcp.fibianet.dk) (Ping timeout: 272 seconds)
[16:43:19] *** Quits: TomTom (uid45892@id-45892.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[16:46:14] *** Joins: tkob (tkob@user/thekingofbandit)
[16:50:42] *** Joins: terabyte (~terabyte@27.176-105-213.static.virginmediabusiness.co.uk)
[16:51:29] <terabyte> hey, i need to do a docker load command inside a gitlab runner but it keeps complaining that the docker daemon isn't running, i just need the image in the docker image cache, is there another tool that can do this?
[16:54:55] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[16:57:04] <tabakhase> show ya yaml
[17:03:10] *** Joins: Enissay (~Enissay@user/enissay)
[17:06:12] <BtbN> Aren't gitlab runners themselves docker images? If they had access to dockerd, that'd be... highly problematic for security
[17:09:25] <terabyte> i mean, yeah
[17:10:10] <terabyte> i have a whitesource security scanner which can check the docker cache for images, i have the tar archives of the images, and just want to do "docker image load" for each on and then point whitesource at it.
[17:16:19] <optimant> I imagine the runners are shared and you won’t be able to see the host’s cache at all 
[17:20:41] * Lutin shows his yaml to tabakhase
[17:23:01] <tabakhase> BtbN na, they use docker-machine and only run a single build before formating&reinstalling "the whole node"
[17:23:42] <tabakhase> and "you" dont use the hosts dockerD, but are supposed tro run dind (what obvs needs privil. so you could exploit to the host from therte if wanted)
[17:29:58] *** jazzy2 is now known as jazzy
[17:30:18] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[17:33:56] *** Quits: pvdp (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au) (Remote host closed the connection)
[17:35:29] *** Joins: nrg (~NRG@user/nrg)
[17:46:19] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[17:47:38] *** Joins: Atque (~Atque@user/atque)
[17:51:41] *** Quits: travisghansen9 (~travisgha@192.74.130.86) (Quit: The Lounge - https://thelounge.github.io)
[17:51:59] *** Joins: travisghansen (~travisgha@192.74.130.86)
[17:54:05] *** Parts: yaymukund (~yaymukund@user/yaymukund) ()
[17:58:00] *** Quits: debayer (~debayer@2603-8000-cf00-0010-4dc2-efc1-b952-84db.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:59:14] *** Joins: rsx (~dummy@ppp-188-174-157-141.dynamic.mnet-online.de)
[17:59:50] *** Joins: Enissay (~Enissay@user/enissay)
[18:00:22] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:00:57] <luvalon1> If I make a bridge network between 2 containers so that they can communicate, but in one of those I am using network-host:<VPN-container> and I want all connections to the outside go via a VPN, is it possible that somehow if the VPN fails it would use the second network to access internet?
[18:01:24] *** Joins: mossman93 (~quassel@user/mossman93)
[18:03:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:10:05] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[18:10:29] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[18:11:04] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Client Quit)
[18:12:36] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[18:46:08] *** Joins: goldfish (~goldfish@user/goldfish)
[19:08:52] *** DefiantX is now known as DefiantN
[19:09:00] *** Quits: DefiantN (~DefiantN@user/defiantn) (Quit: Leaving)
[19:09:15] *** Joins: DefiantN (~DefiantN@user/defiantn)
[19:17:13] <luvalon1> for example if I have a container that connects to a vpn, and then I use other containers with network-mode: vpn-container. Then set up a bridge network and bridge the vpn container network with another network. Will it be possible that the containers that should always connect only via vpn will be able to connect via a different network?
[19:31:08] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[19:31:26] *** Joins: goldfish (~goldfish@user/goldfish)
[19:37:21] *** OneLegend is now known as legend
[19:45:10] *** Joins: Shariff (~UserNick@starbase26.connected.by.freedominter.net)
[19:45:15] <Shariff> Hi there
[19:46:46] <Shariff> I attempted to load an organizr container, but it seems to fail.. it states in the logs that it cannot resolve a github.com address. I added a network_mode: host to the compose file, to see if that would solve it, but still no luck. And when I do a portscan for the port I specified it is closed.. what else can I do to troubleshoot or resolve this issue?
[19:50:30] <Shariff> In case anyone would want to see the docker-compose.yml file: https://pastebin.ubuntu.com/p/qCWVQzbWFK/
[19:57:44] *** Quits: fearnothing (~fearnothi@82-68-82-102.dsl.in-addr.zen.co.uk) (Changing host)
[19:57:44] *** Joins: fearnothing (~fearnothi@user/fearnothing)
[20:03:20] *** Quits: Shariff (~UserNick@starbase26.connected.by.freedominter.net) (Quit: Going offline, see ya! (www.adiirc.com))
[20:31:48] *** shrysr is now known as shr2
[20:35:01] *** Joins: shrysr (~shrysr@user/shrysr)
[20:50:00] <luvalon1> see what the logs say first and see if it even starts correctly
[20:50:24] <luvalon1> maybe ur host didnt have an internet connection while u tried to start the container
[20:51:10] *** Quits: nebiros (~nebiros@user/nebiros) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:53:21] *** Joins: nebiros (~nebiros@user/nebiros)
[20:59:20] *** Joins: me-sudoer-dentne (~Kundargi@45.112.144.181)
[21:08:06] *** Quits: jazzy (~jaziz@2600:380:8562:6b2:9c1f:23c2:2ca2:238b) (Ping timeout: 258 seconds)
[21:09:28] *** Quits: me-sudoer-dentne (~Kundargi@45.112.144.181) (Quit: Leaving)
[21:10:13] *** Joins: me-sudoer-dentne (~dentine@45.112.144.181)
[21:27:34] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[21:28:52] *** Quits: me-sudoer-dentne (~dentine@45.112.144.181) (Quit: Leaving)
[21:34:52] *** Joins: minimal (~minimal@user/minimal)
[21:36:52] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[21:47:39] *** Joins: yksi (~kvirc@user/yksi)
[21:55:57] *** Quits: vidbina_ (~vid@dynamic-078-054-135-042.78.54.pool.telefonica.de) (Ping timeout: 245 seconds)
[21:58:41] *** Joins: keypushe- (keypusher@user/keypusher)
[21:59:15] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[21:59:46] *** Joins: ses (uid38151@id-38151.stonehaven.irccloud.com)
[22:01:53] *** keypushe- is now known as keypusher
[22:03:51] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[22:09:26] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[22:22:34] *** Joins: Trieste_ (T@user/pilgrim)
[22:22:52] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[22:33:27] *** Joins: crazymax (~crazymax@user/crazymax)
[22:51:25] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 244 seconds)
[22:53:17] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:206b:36a9:2ccb:4d1b)
[22:56:48] *** Quits: rsx (~dummy@ppp-188-174-157-141.dynamic.mnet-online.de) (Quit: rsx)
[22:58:36] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[23:00:34] *** Joins: VaniaPy (~VaniaPy@79.103.24.224.dsl.dyn.forthnet.gr)
[23:12:08] *** Joins: fspy (~fspy@user/fspy)
[23:13:50] *** Quits: zoredache (sid295808@id-295808.brockwell.irccloud.com) ()
[23:14:50] *** Joins: zoredache (sid295808@id-295808.brockwell.irccloud.com)
[23:16:42] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 240 seconds)
[23:17:29] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Read error: Connection reset by peer)
[23:18:02] *** Quits: ses (uid38151@id-38151.stonehaven.irccloud.com) (Ping timeout: 245 seconds)
[23:19:39] *** Quits: kman (sid74249@id-74249.stonehaven.irccloud.com) (Ping timeout: 268 seconds)
[23:20:38] *** Quits: lebster (sid17131@id-17131.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[23:21:02] *** Joins: lebster (sid17131@stonehaven.irccloud.com)
[23:21:10] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[23:21:44] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[23:21:59] *** Quits: fspy (~fspy@user/fspy) (Quit: fspy)
[23:22:06] *** Joins: ses (uid38151@stonehaven.irccloud.com)
[23:26:31] *** Joins: fspy (~fspy@user/fspy)
[23:26:44] <Lutin> anyone running a cronjob in a container by bindmounting it ?
[23:28:41] <DoofusCanadensis> oh man, I have this sudden urge to run the bad_judgement role
[23:34:16] <Lutin> DoofusCanadensis ?
[23:39:17] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[23:39:19] *** Joins: goldfish_ (~goldfish@user/goldfish)
[23:40:41] *** Joins: lowcrash (~admin@84-255-205-230.static.t-2.net)
[23:53:37] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Quit: Leaving)
