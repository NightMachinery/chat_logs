[00:00:00] *** Joins: ur5us_ (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb)
[00:08:19] <cAMP> All right, even more complicated than I could imagine.
[00:09:13] <cAMP> So its an serialized frozen Roda app thats in App.freeze.app?
[00:10:06] <cAMP> Hm, thats probably not it.
[00:10:35] <adam12> cAMP: It's a Roda class that has had all it's internal objects frozen which prevent mutation.
[00:10:40] <cAMP> It must mean some objects are frozen at about request time to make some objects safe to render.
[00:11:32] <cAMP> adam12: right, so this freezing happens, for resource efficiency or?
[00:12:31] <adam12> Some objects are more efficient when frozen (ie, strings), but I _think_ Jeremy's opinion is that it prevents unwanted bugs.
[00:12:59] <adam12> You could ask in the Roda google group and Jeremy will probably provide clarification.
[00:14:21] <cAMP> kewl, thanks for insight
[00:14:48] <adam12> Cheers.
[00:40:49] *** Joins: cer-0 (~cer-0@189.228.157.58)
[00:44:47] *** Quits: cer-0 (~cer-0@189.228.157.58) (Client Quit)
[01:07:42] *** Joins: goldfish (~goldfish@user/goldfish)
[01:19:59] *** Quits: mollerup (~nmollerup@customer-2a00-7660-1612-0168-a4b9-f516-b86f-3341.ip6.gigabit.dk) (Remote host closed the connection)
[01:20:19] *** Joins: mollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk)
[01:31:47] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[01:39:55] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:44:48] *** Joins: markong (~kvirc@213.146.188.203)
[01:51:06] *** justHaunt is now known as justache
[01:58:31] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 260 seconds)
[02:17:59] *** Joins: roshanavand (~roshanava@194.36.25.10)
[02:21:10] *** Joins: motherr (~motherr@user/motherr)
[02:21:55] *** Quits: leonthemisfit (~Leon@user/leonthemisfit) (Remote host closed the connection)
[02:59:47] *** Quits: ur5us_ (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb) (Ping timeout: 264 seconds)
[03:06:54] *** Joins: Rounin (~david@84.212.130.215)
[03:24:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[03:45:59] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[03:51:12] *** Joins: roshanavand_ (~roshanava@185.209.196.136)
[03:52:06] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:54:16] *** Quits: roshanavand (~roshanava@194.36.25.10) (Ping timeout: 245 seconds)
[04:00:24] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[04:12:18] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[04:16:54] *** Joins: ur5us_ (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6)
[04:18:50] *** Quits: roshanavand_ (~roshanava@185.209.196.136) (Ping timeout: 260 seconds)
[04:25:12] *** ur5us_ is now known as ur5us
[04:39:22] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[05:16:20] *** Joins: leonthemisfit (~Leon@126.sub-174-198-194.myvzw.com)
[05:16:26] *** Quits: leonthemisfit (~Leon@126.sub-174-198-194.myvzw.com) (Changing host)
[05:16:26] *** Joins: leonthemisfit (~Leon@user/leonthemisfit)
[05:38:29] *** Joins: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net)
[06:16:54] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 260 seconds)
[06:18:38] *** Joins: quazimodo (~quazimodo@45.133.4.63)
[07:28:55] *** Quits: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net) (Ping timeout: 260 seconds)
[07:43:50] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[07:47:24] *** Joins: jpw (~jpw@user/jpw)
[07:55:11] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[07:56:30] *** Quits: waagrr (~stoutcho2@220.85.70.23) (Ping timeout: 258 seconds)
[08:00:43] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6) (Ping timeout: 258 seconds)
[08:00:51] *** Joins: waagrr (~waagrr@220.85.70.23)
[08:12:15] *** Joins: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net)
[08:12:16] *** Joins: dviola (~diego@user/dviola)
[08:17:27] *** Quits: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net) (Ping timeout: 260 seconds)
[08:24:33] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[08:34:10] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6)
[08:34:50] *** Quits: dviola (~diego@user/dviola) (Quit: WeeChat 3.3)
[08:35:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[08:39:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:51:49] *** Quits: kaivai (~kaivai@user/kaivai) (Ping timeout: 252 seconds)
[09:03:43] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:06:51] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Client Quit)
[09:07:09] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:07:23] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Client Quit)
[09:07:42] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:13:11] *** Joins: dviola (~diego@user/dviola)
[09:14:10] *** Joins: jpw (~jpw@user/jpw)
[09:30:11] *** Quits: ua_ (~ua@public-gprs224058.centertel.pl) (Ping timeout: 244 seconds)
[09:31:10] *** Joins: ua_ (~ua@public-gprs224058.centertel.pl)
[09:47:50] *** Joins: kaivai (~kaivai@user/kaivai)
[09:47:53] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[09:53:26] *** Quits: quazimodo (~quazimodo@45.133.4.63) (Ping timeout: 260 seconds)
[09:55:21] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[10:19:46] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[10:23:56] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[10:39:30] *** Parts: Sandlayth (sandlayth@2001:bc8:1200:511a::1) (WeeChat 3.0)
[11:00:16] *** Joins: roshanavand (~roshanava@194.36.25.55)
[11:05:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[11:06:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:08:38] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:12:42] *** Joins: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net)
[11:15:15] *** Quits: roshanavand (~roshanava@194.36.25.55) (Ping timeout: 260 seconds)
[11:17:47] *** Quits: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net) (Ping timeout: 264 seconds)
[11:22:44] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[11:26:16] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:36:17] *** Quits: waagrr (~waagrr@220.85.70.23) (Ping timeout: 265 seconds)
[11:40:41] *** Joins: waagrr (~waagrr@220.85.70.23)
[11:56:10] *** Joins: roshanavand (~roshanava@185.209.196.176)
[12:04:56] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6) (Remote host closed the connection)
[12:05:10] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb)
[12:05:58] *** Quits: roshanavand (~roshanava@185.209.196.176) (Ping timeout: 260 seconds)
[12:09:46] *** Quits: dviola (~diego@user/dviola) (Quit: WeeChat 3.3)
[12:10:35] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb) (Ping timeout: 264 seconds)
[12:11:13] *** Joins: goldfish (~goldfish@user/goldfish)
[12:16:35] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 264 seconds)
[13:14:00] *** Joins: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net)
[13:18:27] *** Quits: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net) (Ping timeout: 260 seconds)
[13:39:00] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:40:55] <nakilon> is there a simpler way to do this? require "open-uri"; (Gem::Version.new(RUBY_VERSION) < Gem::Version.new("2.5") ? Kernel : URI).open(
[13:41:25] *** Joins: reset (~reset@user/reset)
[13:46:54] *** Joins: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net)
[13:51:21] *** Quits: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net) (Ping timeout: 245 seconds)
[14:02:52] *** Joins: markong (~kvirc@213.146.188.203)
[14:10:47] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Quit: leaving)
[14:39:37] <adam12> nakilon: What's the change to `open` that you're trying to work around?
[14:42:18] *** Quits: waagrr (~waagrr@220.85.70.23) (*.net *.split)
[14:42:18] *** Quits: nakilon (~nakilon@user/nakilon) (*.net *.split)
[14:42:18] *** Quits: wmoxam (~wmoxam@li130-207.members.linode.com) (*.net *.split)
[14:42:18] *** Quits: gcd (~gcd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[14:42:18] *** Quits: jhass|off (znc@about/ruby/jhass) (*.net *.split)
[14:42:18] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (*.net *.split)
[14:42:18] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[14:42:18] *** Quits: gfawcett (~gfawcett@ns521973.ip-158-69-124.net) (*.net *.split)
[14:42:19] *** Quits: belak (~belak@user/belak) (*.net *.split)
[14:42:19] *** Quits: ged (~ged@deveiate.org) (*.net *.split)
[14:42:19] *** Quits: MachinShin__ (sid243317@helmsley.irccloud.com) (*.net *.split)
[14:42:19] *** Quits: peer (~null@fosshost/techops/peer) (*.net *.split)
[14:42:19] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[14:42:19] *** Quits: marahin (~marahin@3lab/marahin) (*.net *.split)
[14:42:19] *** Quits: tv- (~tv-@user/tv-) (*.net *.split)
[14:42:19] *** Quits: Cork (~Cork@user/cork) (*.net *.split)
[14:42:19] *** Quits: dannyAAM (~dannyAAM@saru.saru.moe) (*.net *.split)
[14:42:19] *** Quits: _axx (~axx@static.246.43.203.116.clients.your-server.de) (*.net *.split)
[14:45:30] *** Joins: waagrr (~waagrr@220.85.70.23)
[14:45:30] *** Joins: nakilon (~nakilon@user/nakilon)
[14:45:30] *** Joins: wmoxam (~wmoxam@li130-207.members.linode.com)
[14:45:30] *** Joins: gcd (~gcd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[14:45:30] *** Joins: jhass|off (znc@about/ruby/jhass)
[14:45:30] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[14:45:30] *** Joins: phenom (~primus@user/phenom)
[14:45:30] *** Joins: gfawcett (~gfawcett@ns521973.ip-158-69-124.net)
[14:45:30] *** Joins: belak (~belak@user/belak)
[14:45:30] *** Joins: ged (~ged@deveiate.org)
[14:45:30] *** Joins: MachinShin__ (sid243317@helmsley.irccloud.com)
[14:45:30] *** Joins: peer (~null@fosshost/techops/peer)
[14:45:30] *** Joins: Pixi (~Pixi@user/pixi)
[14:45:30] *** Joins: marahin (~marahin@3lab/marahin)
[14:45:30] *** Joins: tv- (~tv-@user/tv-)
[14:45:30] *** Joins: Cork (~Cork@user/cork)
[14:45:30] *** Joins: dannyAAM (~dannyAAM@saru.saru.moe)
[14:45:30] *** Joins: _axx (~axx@static.246.43.203.116.clients.your-server.de)
[15:07:36] *** Joins: motherr (~motherr@user/motherr)
[15:14:17] *** Joins: danjo3 (~danjo@ppp-88-217-40-73.dynamic.mnet-online.de)
[15:14:58] *** Joins: phryk_ (~totallyno@user/phryk)
[15:15:12] *** Joins: ollysmith_ (~ollysmith@2001:8b0:ca3:50e1:1e69:7aff:fe08:2b4f)
[15:15:24] *** Joins: Artea- (~Lufia@artea.com.pt)
[15:15:34] *** Joins: Andrew_ (~andrew@user/andrewyu)
[15:15:38] *** Joins: vigumnov (~victori@cpe-76-174-179-126.socal.res.rr.com)
[15:17:09] *** Joins: teclator_ (~quassel@85.155.180.70.dyn.user.ono.com)
[15:17:37] *** Joins: pookie (~pookie@snf-137798.vm.okeanos.grnet.gr)
[15:17:38] *** Joins: Garo__ (garo@kapsi.fi)
[15:17:52] *** Joins: ox1eef_ (~0x1eef@user/rg)
[15:18:18] *** Joins: finstern1s (~X@23.226.237.192)
[15:18:59] *** Joins: jmcgnh_ (~jmcgnh@wikipedia/jmcgnh)
[15:22:27] *** Joins: peder_ (4822@nidur.ifi.uio.no)
[15:22:27] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (*.net *.split)
[15:22:27] *** Quits: ua_ (~ua@public-gprs224058.centertel.pl) (*.net *.split)
[15:22:27] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (*.net *.split)
[15:22:27] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (*.net *.split)
[15:22:27] *** Quits: cAMP (csmr@kapsi.fi) (*.net *.split)
[15:22:27] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[15:22:27] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[15:22:27] *** Quits: peder (4822@nidur.ifi.uio.no) (*.net *.split)
[15:22:27] *** Quits: Garo_ (garo@kapsi.fi) (*.net *.split)
[15:22:27] *** Quits: AndrewYu (~andrew@user/andrewyu) (*.net *.split)
[15:22:27] *** Quits: lipoqil (~lipoqil@178.128.251.74) (*.net *.split)
[15:22:27] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[15:22:27] *** Quits: ollysmith (~ollysmith@33.136.187.81.in-addr.arpa) (*.net *.split)
[15:22:27] *** Quits: danjo (~danjo@ppp-88-217-40-73.dynamic.mnet-online.de) (*.net *.split)
[15:22:27] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[15:22:27] *** Quits: jidar (~jidar@yt-1300.fap.me) (*.net *.split)
[15:22:27] *** Quits: ox1eef (~0x1eef@user/rg) (*.net *.split)
[15:22:28] *** Joins: cAMP_ (csmr@kapsi.fi)
[15:22:28] *** danjo3 is now known as danjo
[15:22:29] *** Joins: lipoqil_ (~lipoqil@178.128.251.74)
[15:22:36] *** peder_ is now known as peder
[15:24:45] *** jmcgnh_ is now known as jmcgnh
[15:29:16] *** Joins: ringo__ (~ringo@157.230.117.128)
[15:29:33] *** Joins: ua_ (~ua@public-gprs224058.centertel.pl)
[15:30:28] *** Joins: jidar (~jidar@yt-1300.fap.me)
[15:30:51] <ringo__> is bitwise not in rb still ~ ? I tried to use it but it makes my output negative. ~0 yields -1 while ~1 yeilds -2. Im confused https://tio.run/##KypNqvz/v0BBw9BAU68kP75Yw0iTC8itQ@L//w8A
[15:36:29] *** Quits: kaleido (~adam@user/kaleido) (Ping timeout: 244 seconds)
[15:47:27] *** Joins: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net)
[15:49:05] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[15:52:17] *** Quits: crankharder (~crankhard@pool-71-121-213-14.bltmmd.fios.verizon.net) (Ping timeout: 264 seconds)
[15:59:34] *** phryk_ is now known as phryk
[16:03:41] <donofrio> mornin all if I wanted to update a index.html with hostname what would be in the erb?  I have so far only "im <%= node['hostname'] %>" but that doesn't update the index file that my nginx server it rendering?
[16:15:50] *** Joins: roshanavand (~roshanava@185.209.196.166)
[16:17:37] *** Quits: roshanavand (~roshanava@185.209.196.166) (Remote host closed the connection)
[16:17:47] <nakilon> ringo__ I would say it's .to_s who is doing something wrong; the bitwise negation should change the sign actually
[16:18:02] <nakilon> because sign is one of the bits
[16:20:59] *** Joins: roshanavand (~roshanava@194.36.25.55)
[16:27:43] <ccooke> I think the main issue is that to_s(2) doesn't know what sort of binary representation you want, and therefore can't produce a signed binary output.
[16:28:03] <ccooke> You would need to convert to a specific form (32-bit signed int, for instance)
[16:29:27] *** Artea- is now known as Artea
[16:30:36] <ccooke> >> [ 20 ].pack('s').unpack('B*')
[16:30:52] <ccooke> bah.
[16:31:08] <ccooke> but try that, and try [ ~20 ].pack('s').unpack('B*')
[16:32:32] <ccooke> Basically, normal negative integers in binary require a fixed bit width, because otherwise they are indistinguishable from a positive number with a higher bit width
[16:32:45] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[16:32:55] <ccooke> and the .to_s(2) form does not specify bits
[16:33:48] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[16:34:03] <ringo__> I see. Well even if I skip to_s, it still doesn't work the way I would expect it to. Taking very trivial example is flipping 0 and 1
[16:34:11] <quazimodo> anyone have an idea on how I can package up my ruby program to distribute for osx
[16:34:17] <ringo__> Intuitively NOT 0 == 1 and NOT 1 == 0
[16:34:24] <quazimodo> snap packages on linux make life so easy... 
[16:34:48] <quazimodo> ringo__: NOT'ing numbers feels  weird
[16:34:52] <quazimodo> NOT 0 means anything but 0
[16:35:00] <ringo__> yeah you're right
[16:35:26] <quazimodo> i'm rarely wrong
[16:35:31] <ringo__> lol
[16:36:03] <ringo__> well, even if I work on bytes and do ~0x0
[16:36:03] <quazimodo> i took the wrong woman, she wont argue with me
[16:36:07] <quazimodo> so, sometimes wrong
[16:36:11] <ringo__> sorry, ~0b0
[16:36:16] <ringo__> it still yields -1 :shrug:
[16:36:31] <ccooke> ringo__: it should
[16:36:35] <ringo__> mario's confused
[16:37:02] <ccooke> bitwise not is not the same thing as a logical not. It's not negating the entire object, it's flipping each bit in turn
[16:37:06] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:37:53] <ringo__> and because it's flipping each bit on int32, it flips "more than I would like to" and thus I end up with negative number?
[16:38:46] <ccooke> if you flip the bits on a signed integer, you will *always* get a negative number. 
[16:38:58] <ccooke> because you will flip the MSB, which is taken as a sign bit
[16:40:28] <sagax> how to convert "true" to true?
[16:40:46] <sagax> with native of ruby methods
[16:41:17] <ccooke> sagax: How are you getting 'true' as a string?
[16:41:22] <ccooke> (Where does it come from?)
[16:41:59] <ccooke> ringo__: if ~ is flipping more bits than you want it to, then you do not want to use a bitwise not. you want to use some other thing. What is it you actually need to *do*?
[16:42:16] <sagax> ccooke: from database, nosql
[16:43:37] <ccooke> sagax: that means you are probably storing it as a string in your database. Most databases (sql and nosql) have native methods of storing boolean values. Check your schema and the code that writes to the database and fix it so that you are storing the correct value
[16:43:59] <ringo__> ccooke: I'm doing a coding puzzle where I will need to do solve lots of logic gates so at some point I will have to flip 0's and 1's
[16:44:36] <ringo__> s/do solve/resolve/
[16:44:38] <sagax> ccooke: redis not have boolean type
[16:45:41] <sagax> my question not about databases
[16:45:50] *** Joins: roshanavand_ (~roshanava@185.209.196.146)
[16:46:16] <sagax> i have string "true" and i think - how i can got boolean True with right way
[16:46:54] <ringo__> ccooke: although I will be working *only* with 0's and 1's so I could work on a bit, not 32b, if I could
[16:47:01] <ccooke> sagax: `value == 'true'` will return true or false, if that's what you need.
[16:47:20] *** Quits: roshanavand (~roshanava@194.36.25.55) (Ping timeout: 268 seconds)
[16:48:09] <ccooke> ringo__: that won't work, really, because bitwise not is an operator on presumed signed integers
[16:48:35] <ringo__> :<
[16:48:38] <ccooke> ringo__: what you need is to use booleans - true and false - and then you can use !value to negate them
[16:49:13] <ccooke> remember, 0 and 1 are just conventional shorthands for true and false when dealing with logic gates
[16:49:16] *** Joins: crankharder (~crankhard@static-71-121-154-44.bltmmd.fios.verizon.net)
[16:49:28] <ringo__> yeah, well, sigh
[16:49:47] <ccooke> (or you could argue that everything is shorthand for "high voltage" and "Low voltage" if you want to get existentialist about it...)
[16:49:52] <ringo__> I can't make ruby treat my 0 or 1 as a bit and not int32?
[16:50:31] <ccooke> ringo__: I mean... there are a ton of ways you can do it, but they're not as "clean" as using real booleans
[16:50:36] <ringo__> i see
[16:50:59] <ringo__> well, looks like booleans work with (& | ^), but not ~, instead I'll use !
[16:53:09] <ccooke> sagax: yeah, if you're using redis it is limited. You *can* use booleans in it in a way (you can use SETBIT and GETBIT to set and get individual bit offsets in a key, which will return you a 0 or 1. But that's not as readable. 
[16:54:10] <sagax> ok, thanks, will looking for about typecasting from redis driver
[16:55:43] <ccooke> I would probably still use the SETBIT and GETBIT for this, since it's less fragile
[17:01:56] <nakilon> I gemified my thing for the terminal session interface and came up with this name https://github.com/Nakilon/shelenium -- included the helloworld example and a primitive bot that plays roguelike
[17:03:23] *** Quits: darkxploit (~jay@32.209.19.50) (Ping timeout: 260 seconds)
[17:15:31] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 260 seconds)
[17:19:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80:2de6:953c:45b8:6cf0)
[17:30:03] *** Andrew_ is now known as AndrewYu
[18:05:02] *** Quits: motherr (~motherr@user/motherr) (Quit: motherr)
[18:08:11] *** Quits: yossarian (~yossarian@user/yossarian) (Ping timeout: 264 seconds)
[18:11:58] *** Joins: yossarian (~yossarian@ool-44c5f2f7.dyn.optonline.net)
[18:11:59] *** Quits: yossarian (~yossarian@ool-44c5f2f7.dyn.optonline.net) (Changing host)
[18:11:59] *** Joins: yossarian (~yossarian@user/yossarian)
[18:12:35] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[18:12:51] *** Joins: Pixi (~Pixi@user/pixi)
[18:58:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:2de6:953c:45b8:6cf0) (Ping timeout: 264 seconds)
[19:05:27] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[19:19:20] *** Joins: RougeR (~rougex250@user/rouger)
[19:30:08] *** Quits: mewfree[m] (~mewfreema@2001:470:69fc:105::c904) (Quit: You have been kicked for being idle)
[19:34:35] *** Quits: roshanavand_ (~roshanava@185.209.196.146) (Ping timeout: 264 seconds)
[19:58:14] *** Joins: kaleido (~adam@havokworks.io)
[20:14:53] *** Joins: Tuor (~quassel@user/tuor)
[20:42:25] *** Quits: aesthetikx (~aesthetik@c-107-5-24-40.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[20:43:47] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:45:16] <sagax> we have TrueClass and FalseClass, but how i can declare just BooleanClass? (right way)
[20:48:15] <havenwood> sagax: There isn't a boolean class in Ruby. You can create one but the "right way" depends on what you're doing.
[20:48:57] <sagax> to declare methods for casting string to another type
[21:16:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:17:39] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:18:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:19:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:20:55] *** Joins: jpw (~jpw@user/jpw)
[21:22:36] *** Parts: Tuor (~quassel@user/tuor) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:27:35] *** Joins: roshanavand (~roshanava@193.27.14.152)
[21:34:30] *** Quits: roshanavand (~roshanava@193.27.14.152) (Quit: Leaving)
[21:34:31] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[21:37:11] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[21:38:23] *** Joins: justache (~justache@user/justache)
[21:47:31] <duds-> i
[21:48:07] <duds-> i'm a newbie, is there a method like chomp but for the beginning of a string? ;w;
[21:48:50] <duds-> i just want to remove x characters for it or a certain text
[21:49:27] <adam12> duds-: Maybe String.delete_prefix? It's not the same but similar enough.
[21:49:51] <duds-> it's perfect :]
[22:06:10] *** Joins: Rounin (~david@84.212.130.215)
[22:21:12] *** Joins: slightlypandaish (~slightlyp@2001:8a0:5613:3b00:99ab:f979:c09b:ae79)
[22:25:05] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:37:28] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[22:43:33] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[22:54:16] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[22:59:31] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[23:09:49] <nakilon> I would just reverse twice
[23:09:57] <nakilon> delete_prefix is an awful method name
[23:10:01] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[23:32:11] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[23:34:20] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[23:37:26] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[23:58:45] *** Quits: slightlypandaish (~slightlyp@2001:8a0:5613:3b00:99ab:f979:c09b:ae79) (Quit: Client closed)
[23:59:01] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb)
