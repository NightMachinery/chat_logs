[00:00:40] <TML> theprophet: Did you mean to be doing a binary '&' on the line that first assigns df_public?
[00:00:48] <theprophet> yes
[00:00:52] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[00:01:19] <dale> TML: I think that's due to how pandas overloads operators to let you compose... filter expressions or something?
[00:01:50] *** Joins: vaio (~gary@user/ghost)
[00:01:57] <dale> theprophet: I can't make heads or tails of this code, but it smells like you're trying to use an ndarray as a key in a dict, or putting it into a set?
[00:02:30] <theprophet> yes
[00:02:46] <TML> theprophet: if the two halves of that operator don't have the same shape, you'll see that "TypeError: unhashable type: 'numpy.ndarray'"
[00:03:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[00:03:07] <theprophet> what you mean two same shape?
[00:03:33] <theprophet> what is shape?
[00:03:52] <dale> OK TML seems to know way more than me here, disregard me.
[00:04:51] <TML> theprophet: e.g., np.array([[1,2,3],]).shape
[00:04:56] <theprophet> can you tel me how to fix this?
[00:05:18] <TML> That will show you the "shape" of your the array [[1,2,3],] as being (1,3)
[00:06:27] <jinsun> theprophet: can you paste the full traceback somewhere? just that one liine of error and images of code don't help much
[00:06:58] <TML> I cannot, unfortunately. You haven't really given enough context, as jinsun is suggesting.
[00:07:31] <dale> My kingdom for a line number.
[00:07:33] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[00:07:38] <TML> :)
[00:07:41] <TML> dale: 7
[00:07:49] <TML> Let's have it, then
[00:07:51] <dale> By god you found my bug!
[00:08:01] * dale gives TML all his NFT JPGs
[00:08:04] *** Quits: ThePhilgrim (~ThePhilgr@151.41.9.171) (Quit: ThePhilgrim)
[00:08:08] <TML> heh
[00:08:10] *** Joins: jazzy (~jaziz@user/jaziz)
[00:09:25] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[00:09:53] *** Joins: goncalo (~goncalo.g@154.61.65.190)
[00:10:10] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[00:11:10] *** Quits: trace987 (~trace@user/trace) (Ping timeout: 272 seconds)
[00:11:23] *** Quits: Avaris_ (~Avaris@avar.is) (Quit: http://avar.is)
[00:11:28] *** Joins: emf (~emf@2620:10d:c090:400::5:f613)
[00:11:36] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:12:00] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[00:12:11] *** Quits: extor (~xtor@192.99.217.240) (Ping timeout: 268 seconds)
[00:12:27] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[00:13:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:15:11] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:15:12] *** Joins: trace987 (~trace@user/trace)
[00:15:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:17:25] *** Quits: andreasbuhr (~quassel@p548ddf0a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:18:57] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[00:19:34] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[00:20:02] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:20:52] *** Quits: NeoCore (~neocore@195.200.221.224) (Quit: Leaving)
[00:21:25] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:15d1:c0b6:ba14:747) (Ping timeout: 240 seconds)
[00:22:21] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[00:27:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:27:08] *** Quits: jinsun (~jinsun@user/jinsun) (Read error: Connection reset by peer)
[00:28:49] *** Joins: ivii (~ivan@user/ivii)
[00:29:30] *** Joins: jinsun (~jinsun@user/jinsun)
[00:30:21] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[00:30:33] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[00:30:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:31:39] *** Quits: savolla (~quassel@95.10.207.236) (Remote host closed the connection)
[00:34:12] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::49) (Ping timeout: 240 seconds)
[00:39:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:39:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:41:03] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[00:41:29] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-0874-78d3-f683-7de6.res6.spectrum.com) (Read error: Connection reset by peer)
[00:42:00] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (Quit: The Lounge - https://thelounge.chat)
[00:42:05] *** Joins: kostkon_ (~androirc@2a02:587:a10f:c988:7978:f3ec:a9a9:427e)
[00:44:01] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:44:25] *** Joins: parv (~quass@user/parv)
[00:44:47] *** Quits: ivii (~ivan@user/ivii) (Ping timeout: 256 seconds)
[00:45:25] *** Joins: ivii (~ivan@user/ivii)
[00:46:19] <CrtxReavr> What happened to itertools.imap?
[00:46:21] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[00:46:59] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[00:47:17] <grym> CrtxReavr: it's just map()
[00:47:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:49:45] *** Joins: usickduck (~qooupapn@142.167.143.188)
[00:50:27] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:50:27] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[00:50:27] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[00:50:49] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[00:51:05] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-26.range86-150.btcentralplus.com) (Quit: Leaving.)
[00:53:08] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[00:53:13] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[00:53:50] *** Joins: mitrokov (~mitrokov@5.149.156.72)
[00:54:12] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 240 seconds)
[00:54:23] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[00:54:44] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 268 seconds)
[00:54:50] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Ping timeout: 252 seconds)
[00:56:08] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[00:58:12] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[00:58:49] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00e1e6a3a3205c88e6.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:58:57] *** Joins: maxzor (~maxzor@2a01cb04054faa00e1e6a3a3205c88e6.ipv6.abo.wanadoo.fr)
[00:59:38] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[00:59:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:59:59] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[01:00:12] *** Quits: mitrokov (~mitrokov@5.149.156.72) (Quit: Leaving)
[01:00:51] *** Quits: usickduck (~qooupapn@142.167.143.188) (Quit: quit)
[01:01:29] *** Joins: usickduck (~qooupapn@142.167.143.188)
[01:03:05] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[01:03:11] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.3)
[01:03:27] *** Joins: mitrokov (~mitrokov@5.149.156.78)
[01:03:47] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[01:04:08] *** Joins: extor (~xtor@192.99.217.240)
[01:04:20] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[01:04:43] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[01:04:53] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:05:01] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[01:05:28] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[01:05:59] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[01:06:14] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[01:06:22] *** Joins: thevar1able (~textual@77-60-58-74.biz.kpn.net)
[01:06:24] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[01:06:32] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:07:15] *** Quits: mitrokov (~mitrokov@5.149.156.78) (Client Quit)
[01:07:25] *** Joins: oriba (~oriba@dynamic-077-011-123-082.77.11.pool.telefonica.de)
[01:07:38] *** Joins: mitrokov (~mitrokov@5.149.156.78)
[01:07:50] *** Joins: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net)
[01:08:30] *** Quits: paul424 (~tom@ip-5-172-235-214.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[01:09:37] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[01:10:27] *** zmotaj_ is now known as zmotaj
[01:10:27] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[01:10:27] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[01:11:43] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[01:11:57] *** Quits: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[01:12:41] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:14:06] *** Quits: mitrokov (~mitrokov@5.149.156.78) (Quit: Leaving)
[01:14:06] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[01:19:19] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00e1e6a3a3205c88e6.ipv6.abo.wanadoo.fr)
[01:19:32] *** Quits: stockholm (~Andreas@p200300d2c72ae800a4f47e1c0982148c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:19:40] *** Quits: maxzor (~maxzor@2a01cb04054faa00e1e6a3a3205c88e6.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:21:21] *** Quits: usickduck (~qooupapn@142.167.143.188) (Quit: quit)
[01:22:25] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Ping timeout: 256 seconds)
[01:24:10] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[01:25:34] *** Joins: korg815 (~korg815@user/korg815)
[01:26:18] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:4d3e:ae3:d6a0:1183) (Read error: Connection reset by peer)
[01:27:24] *** Quits: trace987 (~trace@user/trace) (Ping timeout: 240 seconds)
[01:27:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:27:51] *** Joins: ivii (~ivan@user/ivii)
[01:29:06] *** Joins: trace987 (~trace@user/trace)
[01:29:27] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[01:29:52] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[01:30:20] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[01:30:49] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:30:55] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[01:31:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:31:17] *** Joins: Enitin (~Enitin@82.102.22.85)
[01:32:01] *** Joins: p3m (~quassel@2a02:908:f86:7ca0:634f:c512:caff:fa0b)
[01:32:24] *** Parts: dulanic (~dulanic@47.187.144.163) (The Lounge - https://thelounge.chat)
[01:33:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:34:09] *** Quits: p3m (~quassel@2a02:908:f86:7ca0:634f:c512:caff:fa0b) (Remote host closed the connection)
[01:35:24] *** Joins: lack (~lack@user/lack)
[01:36:11] *** Joins: akk (~akk@75.161.130.204)
[01:36:40] *** Quits: theo (~theo@user/theo) (Ping timeout: 272 seconds)
[01:38:18] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:38:47] *** Joins: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net)
[01:38:57] *** Quits: twice (~twice@173.82.153.50) (Quit: Ping timeout (120 seconds))
[01:39:00] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[01:39:09] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[01:39:25] *** Joins: twice (~twice@173.82.153.50)
[01:40:10] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 260 seconds)
[01:40:46] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[01:40:49] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Read error: Connection reset by peer)
[01:42:32] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[01:42:51] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[01:43:19] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:43:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:44:21] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[01:44:36] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[01:45:04] *** Joins: noteness (~noteness@user/noteness)
[01:46:56] *** Joins: aphysically (~aphysical@user/aphysically)
[01:47:26] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:48:19] * foo screenshots dale's NFTs and re-sells
[01:50:05] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[01:50:23] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:50:25] *** Quits: magla (~gelignite@55d47826.access.ecotel.net) (Quit: Stay safe!)
[01:53:01] *** Quits: onichomp (~onichomp@2806:264:4408:1be:c93f:1ef7:ef0a:d426) (Read error: Connection reset by peer)
[01:53:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:53:38] *** Joins: onichomp (~onichomp@2806:264:4408:1be:c93f:1ef7:ef0a:d426)
[01:56:47] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[01:57:02] *** Joins: wakeup (~wakeup@user/wakeup)
[01:57:12] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[01:57:45] <wakeup> hello. anyone here is familiar with linear programming in Python, i.e. knows how to formulate, e.g. in scipy.linprog a LP problem?
[01:57:58] <wakeup> I know the theoretical LP formulation
[01:58:21] <wakeup> how to model my problem in python
[01:58:35] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:58:55] <wakeup> because my objective function involves a sum
[01:59:09] <wakeup> I wanted to use scipy.linprog because I used scipy in the past
[01:59:24] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[01:59:35] *** Quits: OP-0 (~pca290122@178.23.88.224) (Ping timeout: 256 seconds)
[01:59:35] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[02:00:27] <wakeup> i guess the typical objective function is also a sum
[02:01:14] <wakeup> but my objective function also involves a min
[02:01:49] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:02:51] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:03:26] *** Joins: jamea (~jamea@177.239.81.39)
[02:03:52] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:05:01] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:05:19] *** Joins: zeden (~zeden@user/zeden)
[02:05:32] *** Joins: Pickchea (~private@user/pickchea)
[02:07:00] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[02:08:19] *** Quits: Allegretto (~allegrett@94-21-199-71.pool.digikabel.hu) (Ping timeout: 256 seconds)
[02:10:03] <Pi-sistance> "The local names in the function are drawn in a new frame" I cant find any definition of a new frame when I google?
[02:12:52] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[02:12:59] *** Joins: Siecje (~Siecje@97.111.200.32)
[02:13:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:16:10] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:18:08] *** Joins: jdmark2 (~jdmark@user/jdmark)
[02:18:13] *** Joins: Barones (~Barones@user/Barones)
[02:19:48] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:15d1:c0b6:ba14:747)
[02:21:05] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:21:29] <NeilRG> does anyone know how to merge the legends of two matplotlib plots that share an axis?
[02:21:39] <NeilRG> it seems that the second legend is overwriting the first
[02:21:41] *** Joins: Allegretto (~allegrett@94-21-199-71.pool.digikabel.hu)
[02:21:41] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 250 seconds)
[02:21:58] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:26:23] <arinov> why my os.scandir has the same items even if i create new files in directory?
[02:26:41] <arinov> when i use python interactive console it works as expected
[02:27:03] <arinov> but if i start flask application scandir ignores any new files in directory
[02:28:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:28:17] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[02:28:25] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:29:02] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[02:29:17] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[02:29:53] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[02:31:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:32:16] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[02:32:30] *** Quits: upsala (~zcb@185.209.196.139) (Quit: WeeChat 3.4)
[02:32:50] *** Quits: jdmark2 (~jdmark@user/jdmark) (Quit: Leaving)
[02:32:59] *** Quits: stella (~aoei@nethackscoreboard/aoei) (Ping timeout: 256 seconds)
[02:33:00] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Ping timeout: 240 seconds)
[02:34:21] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[02:36:20] *** Joins: Ergo^ (~ergo@91.238.59.144)
[02:36:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[02:36:42] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[02:37:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:37:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:37:31] *** Joins: medium_cool (~medium_co@136.36.128.48)
[02:37:56] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[02:38:47] *** Joins: wib_jonas (~wib_jonas@20014C4C1CB08400698BED21ECF32D3B.catv.pool.telekom.hu)
[02:39:39] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[02:40:53] *** Quits: wib_jonas (~wib_jonas@20014C4C1CB08400698BED21ECF32D3B.catv.pool.telekom.hu) (Client Quit)
[02:41:47] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-e428-cc41-f578-ae14.res6.spectrum.com)
[02:42:34] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:43:38] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:44:12] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-708c-1d1a-7204-62e1.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:45:00] <Siecje> arinov: When does os.scandir() run? When the application starts?
[02:45:15] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9123:34a9:7bc6:8825)
[02:47:07] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[02:50:28] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[02:50:50] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[02:52:50] <arinov> Siecje: application has import module with os.scandir function inside
[02:53:12] <Siecje> inside the view?
[02:53:28] <Siecje> Inside the function with @route()?
[02:53:40] <arinov> https://paste.centos.org/view/b29d5ffd
[02:53:50] <arinov> yes, in route()
[02:54:05] <Siecje> Where is load() called?
[02:54:25] <arinov> oh i think i understood
[02:54:35] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:55:01] <arinov> i guess i realized the problem is docker image which has the frozen directory structure when it runs
[02:55:05] <arinov> sorry
[02:55:46] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:55:47] <Siecje> arinov: What are you working on?
[02:55:54] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[02:56:14] <Siecje> I'm just curious about the project.
[02:56:16] <arinov> trying to make 3 column image viewer
[02:56:37] <Siecje> So you can compare two different filters at once?
[02:56:44] <arinov> practicing with flask
[02:57:39] <arinov> i think my mistake is to pack all app directory with static files in docker image and when i add some files in galery directory it has no reaction because i have no volumes mounted when docker image starts
[02:57:58] * arinov is going to check this out
[02:58:28] <Siecje> Are you using Docker to deploy?
[02:59:01] <arinov> i am using podman pod actually
[02:59:19] <arinov> pod with nginx router and gunicorn with flask app
[03:00:42] <arinov> i expected automated update filelist in flask, but forgot i am running docker image in pod without any volumes mounted
[03:01:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:02:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[03:02:52] <arinov> the project is to have galery which updates every time page reloads in browser using actual images list from filesystem
[03:02:57] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:03:21] *** Joins: stella (~aoei@nethackscoreboard/aoei)
[03:03:27] <TML> So use a bind mount volume to pass the images into the container
[03:03:53] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[03:04:03] <arinov> yeah, thanks, will do
[03:04:38] *** Quits: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net) (Quit: just use()!)
[03:05:12] <arinov> works now, sorry for disturbing
[03:06:12] <Siecje> What is podman?
[03:09:40] <TML> an alternative to docker for controlling containers
[03:10:10] <Siecje> Docker containers? Or linux containers?
[03:10:23] <TML> What's the difference?
[03:11:10] <TML> Docker and podman are alternative tools for controlling the same things
[03:13:15] <TML> There are probably a dozen other alternatives, too - k8s, rancher, lima, etc.
[03:13:58] <Siecje> TML: I don't know enough to explain it properly. LXC (linux containers) are low level and a Docker includes an environment and everything.
[03:14:05] <Siecje> rkt is an another
[03:14:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:14:27] <TML> Siecje: My point was that you're making an arbitrary distinction that need not be made.
[03:16:00] <foo> I wonder, how can I create a caldav file for someone to subscribe to with google calendar
[03:16:35] * foo looks at https://github.com/python-caldav/caldav
[03:17:54] <arinov> podman has own partically compatible with docker manifest model, its slower and have rootless mode to run apps
[03:18:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:18:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[03:18:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:18:37] <arinov> it also has pod abstraction which is similar to docker-compose, but with differencies in networking
[03:19:25] <arinov> i think its unready yet
[03:22:26] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 272 seconds)
[03:23:18] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:23:37] *** Joins: audio (~audio@user/audio)
[03:26:44] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[03:27:29] *** Joins: r3m (~launch@user/r3m)
[03:27:45] *** Quits: thevar1able (~textual@77-60-58-74.biz.kpn.net) (Quit: thevar1able)
[03:28:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:28:40] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[03:29:42] *** Joins: hiroshi_ (~freedom@151.35.217.24)
[03:30:02] *** Quits: waxfire6 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:21] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[03:30:39] *** Quits: qpdb (~qpdb@user/qpdb) (Quit: WeeChat 3.3)
[03:31:03] *** Quits: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[03:31:37] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[03:31:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:31:58] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:32:39] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:32:41] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:33:03] *** Joins: noteness_ (~noteness@user/noteness)
[03:33:36] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[03:34:28] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 272 seconds)
[03:35:01] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:35:03] *** Quits: oriba (~oriba@dynamic-077-011-123-082.77.11.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:35:21] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[03:36:07] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl488p6b0iz4mvkw4.ipv6.telus.net)
[03:36:09] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 256 seconds)
[03:37:27] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:39:02] *** Joins: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net)
[03:40:22] *** Joins: Telvana (~capo@user/telvana)
[03:40:46] *** Quits: dld (~davidlowr@73.61.8.214) (Ping timeout: 245 seconds)
[03:41:29] <toma> [text, parsing] Are there any python packages that you'd recommend that make parsing text files easier?
[03:41:30] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[03:41:49] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:41:49] <SnoopJ> toma, what's in the files?
[03:42:40] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[03:42:49] *** Joins: dld (~davidlowr@2601:197:600:1210:88cb:4d48:189:f8f8)
[03:42:56] <toma> a bunch of notes that I took from books. so a bunch of paragraphs, followed on the next line with a page and paragraph reference...
[03:43:26] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[03:43:35] <SnoopJ> toma, are the references relatively consistent in terms of their formatting?
[03:43:40] *** Joins: Wulf (~Wulf@user/wulf)
[03:43:40] <toma> yes
[03:43:49] *** Joins: ominionx (~ominionx@3.sub-174-250-16.myvzw.com)
[03:44:20] <toma> but there's no markup or separating values (other than the page and paragraph markers)
[03:44:46] <toma> I was thinking about regex but I read something about one problem becoming two.
[03:44:55] *** Quits: daddy (3645@hashbang/bdfl) (Quit: WeeChat 3.4 <:3)~)
[03:45:07] <SnoopJ> it may be a useful way to find the separations between entries, then. I don't have any library recommendations for you, though. I typically write some ad-hoc parsing for tasks like this.
[03:45:38] *** Joins: daddy (3645@hashbang/bdfl)
[03:45:51] <SnoopJ> regex can be a very helpful tool when parsing, but it is more of a building block than a complete tool for parsing
[03:46:21] <toma> cool thanks SnoopJ. btw, are you also SnoopJ123 on twitteer?
[03:46:28] <SnoopJ> nope
[03:46:41] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:47:00] <toma> :) thanks for always helping out.
[03:47:39] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[03:47:54] <SnoopJ> I try, with varying degrees of success :)
[03:48:03] *** Quits: blei (~blei@user/blei) (Ping timeout: 256 seconds)
[03:49:40] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[03:50:14] *** Joins: blei (~blei@user/blei)
[03:50:53] *** Quits: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net) (Ping timeout: 256 seconds)
[03:50:55] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 240 seconds)
[03:53:20] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:53:43] *** Quits: grimvar (~grimvar@i5C75FE61.versanet.de) (Ping timeout: 256 seconds)
[03:53:47] <SnoopJ> toma, so, to clarify how I'd approach your problem from what bits of it I can see in your description: I'd open the file, and then iterate, accumulating lines into a list until I see one that looks like a reference, then that's one "paragraph and its references" record, I can store that and start a fresh one, and repeat until I find the end of the file.
[03:55:16] <SnoopJ> although you might want to do some more fine-grained parsing on the paragraphs/references themselves, that sort of thing will depend on exactly what the data are like, but you might be surprised how few rules it takes to reign in text with some consistency. And if you save the weird/failed records and there aren't "too many" of them, you can always take a cleanup pass after the fact, especially for
[03:55:18] <SnoopJ> one-off tasks.
[03:55:26] *** Joins: grimvar (~grimvar@i5C75FEF1.versanet.de)
[03:55:28] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[03:57:11] *** Joins: Techcable (~Techcable@168.235.93.147)
[03:57:38] *** Joins: vaio (~gary@user/ghost)
[03:57:50] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[03:58:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[03:59:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:59:39] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[03:59:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:00:12] *** Quits: Kohe (~Kohe@79.103.22.84.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[04:01:04] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 272 seconds)
[04:01:55] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 240 seconds)
[04:02:58] *** Quits: hams (~hams@user/hams) (Ping timeout: 272 seconds)
[04:04:49] *** Joins: ymwm (~yingmanwu@117.26.69.135)
[04:04:49] *** Quits: ymwm (~yingmanwu@117.26.69.135) (Client Quit)
[04:05:28] *** Parts: vorap (~vorap@user/vorap) (WeeChat 3.4)
[04:07:14] <audio> how can i run multiple instances of the same script USING PYTHON
[04:07:44] <queue-> parallel
[04:07:49] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[04:10:44] <SnoopJ> multiprocessing can also be helpful if you can organize the "multiple instances" work around its interface
[04:11:22] *** Joins: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it)
[04:11:22] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:11:46] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:13:37] *** Quits: rickybob (~rickybob@35.143.255.39) (Ping timeout: 240 seconds)
[04:14:42] *** Joins: vaio (~gary@user/ghost)
[04:14:43] *** Quits: ominionx (~ominionx@3.sub-174-250-16.myvzw.com) (Quit: Leaving)
[04:15:24] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 265 seconds)
[04:15:48] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:19:28] <toma> SnoopJ: Thanks. Here's an example of the file https://bpa.st/SGKQ I think your approach will work really well. I was just thinking that I should also be looking for any line that is "short" that starts with either a number (either roman numeral, or arabic) or a line that is not in a language. I think it's easier than I'm thinking it might be... there'll be some problems with section titles, chapter titles, book names and
[04:19:28] <toma> ISBN but it shouldn't be that bad. I was then thinking about saving it in some type of xml...
[04:19:46] *** Joins: rvalue (~rvalue@user/rvalue)
[04:20:11] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:20:29] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[04:20:57] *** Parts: pabs3 (~pabs3@user/pabs3) (Don't rest until the streets are paved in poems.)
[04:21:03] *** Joins: brabrax (~brabrax@user/brabrax)
[04:21:09] *** Quits: Siecje (~Siecje@97.111.200.32) (Remote host closed the connection)
[04:21:33] <SnoopJ> toma, especially helpful here is that your references also appear to be always separated from a next paragraph by an empty line
[04:22:00] <toma> thank goodness for that bit of consistency :)
[04:22:14] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[04:22:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[04:22:51] *** Joins: cjp2 (cjp@121.165.225.167)
[04:23:05] *** Joins: brabrax (~brabrax@user/brabrax)
[04:23:23] <SnoopJ> It seems also that the references *often* do not contain whitespace, although this is not an exact rule, but the length of them compared to the prose is probably more useful
[04:23:46] <SnoopJ> little things like that can be helpful when you can't get entirely precise rules and need to start guessing, though :)
[04:24:16] <sveinse> Any simple tool available to quickly show the differences between two (complex) dicts. I.e. what pytest does on assert failures
[04:24:17] <toma> yeah for the most part they don't but I can remember a couple that have "notes" in them, and others that may not begin with a page number but they are relatively short.
[04:24:45] <SnoopJ> but yea, this looks like it would benefit from a two-state design: accumulate and check lines, digest accumulated stuff into complete records
[04:26:40] <toma> SnoopJ: one last q. should i be saving this into a json or xml? I don't really know what a json means but is one easier to work with?
[04:26:51] *** Joins: trace987 (~trace@user/trace)
[04:27:24] <toma> just looked up what a json is... it looks like either will do.
[04:27:27] <toma> sveinse: https://pypi.org/project/deepdiff/ ?
[04:28:00] <SnoopJ> toma, it depends on what you want to do with it after you've translated it from what you've got. XML has some extremely rich features but it's fairly clunky for human beings. JSON is (or can be, at least) highly legible to both humans and computers and can still do some relatively fancy stuff.
[04:28:33] <toma> well probably text -> either json, xml -> sqlite. figured it's a good learning experience.
[04:28:37] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[04:28:45] <SnoopJ> why the intermediate format?
[04:28:57] <toma> learn one more thing.
[04:29:02] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[04:29:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:29:06] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Ping timeout: 245 seconds)
[04:29:12] <toma> plus in the future probably default to xml/json when making the files.
[04:29:50] *** Quits: hiroshi_ (~freedom@151.35.217.24) (Quit: hiroshi_)
[04:29:56] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 245 seconds)
[04:30:18] <SnoopJ> fair enough. I'd probably choose JSON, personally. XML is relatiely rare for me, although this may be changing with all the Windows Installer stuff I've seen recently (it really likes XML, for good reasons)
[04:30:19] *** Parts: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it) ()
[04:30:42] <toma> thanks again.
[04:31:00] <toma> and thanks for pointing out when you think I might be making a mistake or choosing a difficult path.
[04:32:03] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[04:32:06] <SnoopJ> toma, I guess it's helpful to remember that the M in XML is "markup," i.e. the language is very much built around providing lots of context and structure do documents in a way you can eXtend, where JSON is "just" a way to write down an object with the types it allows out of the door
[04:32:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:32:18] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:32:51] <SnoopJ> but neither will leave your data stuck out in the cold, so it's fairly easy to change your mind later anyway
[04:32:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:33:23] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:33:33] *** Joins: cgrage (~cgrage@107.175.102.107)
[04:35:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:36:33] *** Quits: off^ (~off@50-202-219-146-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[04:37:32] *** cjp2 is now known as ryp
[04:37:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:38:17] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[04:38:58] *** Quits: ryp (cjp@121.165.225.167) ()
[04:39:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[04:40:03] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: I have gone to sleep. ZZZzzz…)
[04:41:11] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:42:52] *** Quits: flokuehn (~flokuehn@87.123.247.65) (Ping timeout: 272 seconds)
[04:42:54] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[04:44:11] *** Joins: flokuehn (~flokuehn@87.123.247.37)
[04:44:16] *** Quits: vbgunz_ (~vbgunz@35.141.71.47) (Read error: Connection reset by peer)
[04:44:19] *** Joins: nehsou^ (~nehsou@50-202-219-146-static.hfc.comcastbusiness.net)
[04:45:22] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[04:45:47] *** Joins: aknot (~aknot@2603:900a:1503:17bb:3378:dbf2:e069:d8a5)
[04:47:02] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[04:48:12] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[04:49:00] *** Joins: pabs3 (~pabs3@user/pabs3)
[04:49:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:49:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:50:01] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[04:51:06] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[04:51:15] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:51:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9123:34a9:7bc6:8825) (Ping timeout: 240 seconds)
[04:52:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[04:54:32] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:54:48] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[04:55:24] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[04:56:06] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:56:27] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[04:57:11] *** Quits: omantere (~pi@85-156-109-34.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[04:57:46] *** Joins: omantere (~pi@85-156-109-34.elisa-laajakaista.fi)
[04:58:29] *** Joins: Naan (~naan@user/naan)
[04:58:57] *** Quits: aknot (~aknot@2603:900a:1503:17bb:3378:dbf2:e069:d8a5) (Ping timeout: 240 seconds)
[04:59:13] <Pi-sistance> wait if im using the numpy zeroes function and make the array 10x10, why doesnt every element of the lower layer change; because arratys are mutable
[04:59:27] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:59:33] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:00:26] <Pi-sistance> hi itchy
[05:00:47] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[05:01:18] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[05:03:21] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Read error: Connection reset by peer)
[05:04:00] <[itchyjunk]> hello Pi-sistance
[05:05:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:05:19] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[05:06:02] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[05:06:26] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:06:32] *** Joins: tracey (~trace@user/trace)
[05:09:26] *** Joins: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net)
[05:09:28] *** Quits: trace987 (~trace@user/trace) (Ping timeout: 272 seconds)
[05:09:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:10:16] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:10:21] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:10:57] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:11:01] <nedbat> Pi-sistance: are you talking about the problem from lists of lists earlier?
[05:11:36] <Pi-sistance> yes nedbat, I googled and arrays are also mutable, so I dont why that method works
[05:11:54] <nedbat> Pi-sistance: can you say more about exactly what you did, and what surprised you?
[05:12:56] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[05:14:00] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Quit: Leaving)
[05:14:11] *** Quits: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[05:14:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[05:15:14] <Pi-sistance> perhaps its becasue of the way the zeroes function operates.I cant see exactly how it is defined, but perhaps it doesnt create the additional arrays by multiplying one initial array. im sorry i dont know the terminolgy. if its np.zeroes((10,10)), I mean the other lower layers arent constructed from referencing the original lower layer
[05:15:43] <Pi-sistance> becasue if the fuinction worked that way, due to arrays being mutable
[05:16:17] <Pi-sistance> theres no way that changin the first element of the first lower layer array wouldnt change the first element of each additional array
[05:16:22] *** Joins: psy1 (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net)
[05:16:46] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:16:46] <themill> Pi-sistance: numpy.zeros creates a new array. (and I have no idea what you mean by "lower layer")
[05:16:57] <Pi-sistance> dimension?
[05:17:48] <Pi-sistance> if its 10x10, the lower layer is each array of 10 elements and the higher layer is the entire array that holds all of them. I thought layer was the right terminoligy?
[05:18:04] <Pi-sistance> was told it was for lists at least.
[05:20:07] <Pi-sistance> foo=np.zeros((10, 10))    foo[0][0]=1, it cant be constructed by multiplying the first layer/dimension or whatever of 10 right? the zeeroes function. Otherwise more than one element would change.
[05:20:17] <Pi-sistance> ok i cant explain any clearer than that, sorry.
[05:20:27] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[05:20:55] <Repiphany> Numpy arrays aren't like python lists
[05:21:13] <Pi-sistance> arrays are still mutable though'
[05:21:28] <Repiphany> They're continguous blocks of memory fixed in size
[05:22:02] <Repiphany> You change elements in the array by modifying the address in memory
[05:22:26] <Repiphany> Python lists just point to other python objects
[05:24:04] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[05:24:08] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Client Quit)
[05:24:22] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[05:24:54] <Pi-sistance> ok.. the zeroes function  isnt  referencing the same initial sequence of 10 zeroes for the other 9 in the aforementioned example then?
[05:25:17] <Pi-sistance> im fine if thats true lol
[05:26:06] <Repiphany> Why would it do that
[05:26:22] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:26:50] <Pi-sistance> I cant see how it functions behind the hood
[05:27:31] <Pi-sistance> im just making sure my iunderstanding of mutability was alright, seems so.
[05:28:07] <Repiphany> Maybe go do some reading on the fundamentals of what a numpy array actually is
[05:28:29] <Pi-sistance> yes, will do, thanks.
[05:28:55] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:29:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:30:45] *** Quits: akk (~akk@75.161.130.204) (Quit: +++)
[05:31:29] <nedbat> Pi-sistance: a numpy array is not like a list of lists
[05:31:53] <nedbat> Pi-sistance: a list is only one-dimensional, so a list of lists is the only way to emulate a 2D array
[05:32:12] <nedbat> but numpy can make true 2D arrays: 10x10 is 100 memory locations allocated all at once.
[05:33:02] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:33:11] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 256 seconds)
[05:33:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:35:44] *** Joins: SallyAhaj_ (SallyAhaj@user/sallyahaj)
[05:36:06] *** Joins: ejjfunky (~ejjfunky@125.164.20.98)
[05:37:11] <SnoopJ> Pi-sistance, integers in numpy don't behave like integers in Python do, if that helps.
[05:38:17] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 256 seconds)
[05:39:30] <SnoopJ> In particular: an integer in numpy's view of the world is just an interpretation of some bytes. Both the interpretation and the bytes themselves are subject to change, which is very unlike Python's "integers are immutable" behavior.
[05:39:40] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[05:39:55] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[05:40:05] <maxtim> is it possible to change a variable passed to a class after it's been initialized?
[05:40:09] <sveinse> Sitting here washing my code of linter errors and warnings. At some point I start wondering if the linter is working for me, or if I'm working for the linter.... :D
[05:40:15] <SnoopJ> Both valid ways to look at integers, each with trade-offs, and it can be confusing if you don't realize that they mean something slightly different when they say "integer"
[05:40:39] <nedbat> maxtim: maybe.  Can you share some code we can talk about?
[05:40:50] <SnoopJ> +1
[05:41:38] <SnoopJ> sveinse, I like the term "washing" for that, it goes well with "linter" 😹
[05:42:03] <maxtim> nedbat,
[05:42:04] <maxtim> https://bpa.st/GOAA
[05:42:46] <nedbat> maxtim: you want to change var1.  when?
[05:43:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e12d:3059:2a81:a407)
[05:43:08] <maxtim> after it's been initialized
[05:43:20] <Repiphany> me = Test("diffString") should be an error because it's the wrong number of variables
[05:43:40] *** Quits: SallyAhaj_ (SallyAhaj@user/sallyahaj) (Quit: Leaving)
[05:43:43] <Pi-sistance> ok thanks snoopj and nedbat. I probably could have learnt that if I read some documentation, will try and jump in here less often on impulse. I read" Facts and myths about Python names and values" and "makign a gameboard". I understand it perfectly now, had to reread multiple times though. It turns out that there was one basic understanding that I
[05:43:43] <Pi-sistance> wasnt consciously aware of, I had somehow got so far on rote memory, and it was only with one of your last examples that I realized I hadnt firmly acknwledged a staggeringly basic rule.
[05:43:46] <Repiphany> Presumably you actually want `me.var1 = "diffString"`
[05:43:50] <nedbat> maxtim: after line 9, you can do:  me.var1 = "new value";   if you want.
[05:44:04] <maxtim> ah interesting
[05:44:16] <nedbat> Pi-sistance: you can come here with questions, it's fine
[05:44:22] <SnoopJ> Pi-sistance, it can be enough to understand that numpy is throwing out a lot of Python's rules for how values are represented, and that's what makes it good at what it does when you're crunching numbers.
[05:44:47] <SnoopJ> So when you see something that seems like it doesn't mesh with how Python does something, it's very possibly *because* they are built differently, for different tasks.
[05:45:29] <SnoopJ> I can highly recommend the NumPy documentation, though, it has some excellent reading.
[05:46:38] <SnoopJ> A good place to jump in would be: https://numpy.org/devdocs/user/absolute_beginners.html#what-is-an-array
[05:47:05] <SnoopJ> or perhaps https://numpy.org/devdocs/user/absolute_beginners.html#whats-the-difference-between-a-python-list-and-a-numpy-array is more apropos of your question
[05:49:16] <Pi-sistance> yes thanks that should do me for now. I should ahve guessed that a module written for more mathematically minded stuff at the very least wouldnt have the obvious drawbacks of a list. I wouldnt jhave guessed that the rules for mutability would work completely differently in comparison to lists.
[05:50:23] *** Joins: Jong (~Jong@2620:10d:c090:400::5:8bc7)
[05:53:20] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:53:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:54:58] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:55:00] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 240 seconds)
[05:58:33] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:59:45] *** Quits: Jong (~Jong@2620:10d:c090:400::5:8bc7) (Quit: Textual IRC Client: www.textualapp.com)
[05:59:46] <SnoopJ> NumPy as a library is basically interacting directly with memory to store and manipulate representations of numbers (mostly) and do it in a fast way. If you know how an array in C works, it's not far from that concept.
[06:04:47] *** Joins: Jong (~Jong@2620:10d:c090:400::5:8bc7)
[06:07:00] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[06:08:37] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[06:09:17] *** Parts: pabs3 (~pabs3@user/pabs3) (Don't rest until the streets are paved in poems.)
[06:09:17] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[06:10:07] <toma> thanks for the help. have a great evening.
[06:10:12] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9e12:6028:a9f5:a949:31b5)
[06:10:13] *** Joins: kosh_ (~kosh@user/kosh)
[06:10:24] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl488p6b0iz4mvkw4.ipv6.telus.net) (Quit: Leaving)
[06:10:36] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:c96d:948a:38af:d765) (Ping timeout: 240 seconds)
[06:10:36] *** Joins: justAstache (~justache@user/justache)
[06:12:22] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[06:13:17] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[06:16:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:17:39] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:18:11] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48akdkhw7go8d72.ipv6.telus.net)
[06:19:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:19:41] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[06:20:52] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[06:21:09] *** Joins: Roey (~Roey@user/Roey)
[06:21:09] *** Roey is now known as Unelected_Bourek
[06:21:24] *** Unelected_Bourek is now known as UnelectedBoureka
[06:21:30] *** UnelectedBoureka is now known as UnelectdBourekas
[06:21:40] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[06:21:50] <blei> found this in the parsimonious source self.re = re.compile(pattern, (ignore_case and re.I) | (locale and re.L) | (multiline and re.M) | (dot_all and re.S) | (unicode and re.U) | (verbose and re.X) | (ascii and re.A))        i'm getting TypeError: 'or' not supported between instances of 'Flag' and 'bool' but I've confirmed within parens, it's
[06:21:51] <blei> always True/False and Flag
[06:22:06] <blei> i'm not sure I know how to read the right-hand side there
[06:22:48] <exarkun> `True and x` is x.  `False and x` is False.
[06:23:14] <exarkun> `False | re.L` is a TypeError
[06:23:22] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[06:24:01] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48akdkhw7go8d72.ipv6.telus.net) (Quit: Leaving)
[06:24:28] <exarkun> re flags used to be ints. `False | 8` is fine (equals 8).
[06:24:49] <exarkun> Now they're a "Flag" type which doesn't support | with int
[06:25:03] <blei> that makes sense. I just removed six from this codebase
[06:25:26] <SnoopJ> blei, the re.* are integer flags that are ORed together to turn them all on if the boolean parts are truthy
[06:26:00] <SnoopJ> it's the point where the `parsimonious` API meets the `re` API and has to translate between the two ways of representing these behaviors.
[06:26:02] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[06:26:03] *** Joins: ejjfunky0 (~ejjfunky2@125.164.16.18)
[06:26:36] *** Joins: frost (~frost@user/frost)
[06:27:37] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[06:28:14] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:30:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:30:36] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[06:31:32] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[06:33:04] *** Quits: arinov (~arinov@45.86.202.135) (Ping timeout: 272 seconds)
[06:33:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:36:09] <blei> flags='|'.join(['re.I','re.DOTALL']) x_x
[06:36:24] <blei> flags=eval('|'.join(['re.I','re.DOTALL']))
[06:36:33] *** Quits: nomic (~nomic@185.192.69.129) (Quit: Leaving)
[06:36:55] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[06:38:14] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[06:38:24] *** Quits: JerryXia1 (~JerryXiao@user/jerryxiao) (Quit: Bye)
[06:38:37] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[06:42:16] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[06:42:35] *** Quits: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[06:43:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:43:11] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:43:11] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:43:11] *** finn_elija is now known as FinnElija
[06:43:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:47:43] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[06:48:06] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Quit: Leaving)
[06:49:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:50:32] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[06:52:02] *** Joins: data68 (~data@2a02:908:a65:3d80:d865:c924:e0e4:aeda)
[06:54:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[06:55:37] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:56:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:57:12] *** Joins: adeliktas9 (~adeliktas@i59F5F949.versanet.de)
[06:59:01] *** Quits: adeliktas (~adeliktas@i59F52DFA.versanet.de) (Ping timeout: 256 seconds)
[06:59:01] *** adeliktas9 is now known as adeliktas
[06:59:17] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:15d1:c0b6:ba14:747) (Ping timeout: 240 seconds)
[07:02:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:02:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:07:44] *** Joins: Azem (~haise01@user/haise01)
[07:10:55] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:12:27] *** Joins: audio (~audio@user/audio)
[07:14:20] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[07:15:12] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[07:15:12] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:87b2:598e:5ed5:8ca9) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:15:57] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[07:16:59] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:87b2:598e:5ed5:8ca9)
[07:17:55] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:21:22] <blei> that direction did not work out; how about this idiom in six? return iter(d.items(**kw))
[07:22:26] <blei> that's within an if PY3 block
[07:23:05] *** Joins: white2 (~mahengrui@user/mahengrui1)
[07:23:50] <blei> https://github.com/benjaminp/six/blob/master/six.py#L605
[07:23:55] *** Joins: matsaman (~matsaman@user/matsaman)
[07:25:30] <blei> that code, when specified as a function, actually works in the terminal. however, if you just run {}.items({'hi':'bye'})   it does not work, as items takes no args
[07:27:15] <jinsun> it should be `{'hi':'bye'}.items()`
[07:27:56] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[07:29:39] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:30:13] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:32:07] <blei> i don't follow
[07:32:22] *** Joins: OP-0 (~pca290122@178.23.88.224)
[07:32:24] <blei> **kw is going to be a dictionary IIRC
[07:32:38] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:59] <blei> why is dict.items(dict) even allowed, dict.items takes no arguments
[07:33:13] <blei> is that some sort of sugar?
[07:33:18] <KirkMcDonald> It's a method. It has a self parameter.
[07:33:20] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[07:34:08] <blei> how does that explain it though. the code does not work as a one liner. however, inside a function, the argument to items seems to be glossed oer
[07:34:12] <blei> *glossed oer
[07:34:19] <blei> *sigh* glossed over x_x
[07:34:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[07:34:43] *** Quits: wnssod (~wnssod@024-176-075-241.res.spectrum.com) (Ping timeout: 256 seconds)
[07:36:01] <KirkMcDonald> blei: The **kw is simply forwarding arguments to six's `iteritems` function, and almost certainly is not used.
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:21] <KirkMcDonald> kw being anything other than empty will be an error.
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:47] <blei> right.. so that it is ignored.. is basically a form of syntactic sugar
[07:37:03] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[07:37:06] <blei> honestly it looks bizarre. why did they write that code in the first place. it makes no sense.
[07:37:10] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 260 seconds)
[07:37:10] *** jmiehe1 is now known as jmiehe
[07:37:40] *** Quits: sreve (~quassel@p54a70d55.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[07:37:45] <blei> or is it not throwing an error because of lazy evaluation?
[07:37:56] *** Joins: sreve (~quassel@p4ff44127.dip0.t-ipconnect.de)
[07:39:00] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 240 seconds)
[07:41:32] <KirkMcDonald> blei: It doesn't throw an error when kw is empty, because in that case it doesn't pass anything.
[07:41:37] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:41:48] <KirkMcDonald> blei: I do not know why they wrote it this way.
[07:41:49] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[07:42:16] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:42:36] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 240 seconds)
[07:42:43] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[07:44:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[07:45:16] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 272 seconds)
[07:46:13] <mat001> Why am I getting "ConnectionError: Cannot send requests while disconnected" error here? https://bpa.st/OEYA
[07:46:16] <mat001> I can start the server, I get the phone form to enter the number, error occurs when i submit the number
[07:47:21] *** Joins: jamea (~jamea@177.239.81.39)
[07:52:01] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:52:21] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[07:52:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:54:55] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[07:55:09] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:55:56] *** Quits: leonardo (~leonardo@user/leonardo) (Quit: WeeChat 3.4)
[07:58:32] *** Joins: mcglk (~mcglk@131.191.49.120)
[07:59:05] *** Quits: mcglk_ (~mcglk@131.191.49.120) (Ping timeout: 256 seconds)
[08:01:51] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 250 seconds)
[08:02:45] *** Joins: mcglk_ (~mcglk@131.191.49.120)
[08:02:49] *** Joins: stoneware (~stoneware@user/stoneware)
[08:03:03] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 256 seconds)
[08:04:18] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:05:51] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Quit: Konversation terminated!)
[08:09:00] *** Joins: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net)
[08:10:57] *** Quits: mcglk_ (~mcglk@131.191.49.120) (Ping timeout: 240 seconds)
[08:11:14] *** Joins: Seto_Kaiba (~hunterkll@remote.kisaracorporation.com)
[08:12:11] *** Joins: rowbotz (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net)
[08:12:41] *** Quits: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net) (Ping timeout: 256 seconds)
[08:14:12] *** Quits: Yugi (~hunterkll@remote.kisaracorporation.com) (Ping timeout: 240 seconds)
[08:15:24] *** Quits: OP-0 (~pca290122@178.23.88.224) (Ping timeout: 240 seconds)
[08:16:04] *** Joins: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net)
[08:16:56] *** Quits: rowbotz (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net) (Ping timeout: 272 seconds)
[08:19:16] *** Joins: korg815 (~korg815@user/korg815)
[08:19:42] *** Joins: kts (~kts@103.73.237.194)
[08:24:45] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[08:27:01] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:27:39] *** Seto_Kaiba is now known as Hunterkll
[08:27:57] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 240 seconds)
[08:28:33] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 256 seconds)
[08:28:51] *** Joins: jrr (~jam@2001:19f0:5801:9ee:5400:2ff:fec7:76b9)
[08:29:28] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:30:14] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 272 seconds)
[08:30:50] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:31:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:31:31] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:48] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:32:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[08:33:16] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[08:33:26] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[08:34:04] *** Joins: NealRame (~a@89.187.163.193)
[08:34:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:39:54] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:8204:cc22:218f:40d9)
[08:39:57] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:40:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:44:57] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:45:26] *** Quits: r4ulrm (~raul@181.27.127.43) (Ping timeout: 272 seconds)
[08:45:54] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[08:46:29] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e12d:3059:2a81:a407) (Quit: Leaving)
[08:46:36] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[08:46:36] *** Joins: r4ulrm (~raul@181.27.127.43)
[08:46:47] *** Quits: lord_daemon (~lord_daem@187.36.203.244) (Quit: Leaving)
[08:46:54] *** Quits: WhiteKarura (~WhiteKaru@user/whitekarura) (Quit: Client closed)
[08:47:21] *** Joins: mcglk (~mcglk@131.191.49.120)
[08:48:56] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:49:49] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:50:01] *** Quits: jrr (~jam@2001:19f0:5801:9ee:5400:2ff:fec7:76b9) (Quit: WeeChat 3.4)
[08:51:26] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[08:53:04] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:54:10] *** Joins: jrr (~jam@2001:19f0:5801:9ee:5400:2ff:fec7:76b9)
[08:54:32] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:54:58] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:56:19] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:57:35] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[08:57:46] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:15d1:c0b6:ba14:747)
[08:58:44] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[08:59:23] *** jrr is now known as jambulance
[09:00:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:00:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:01:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:01:21] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[09:01:28] <blei> https://github.com/neogeny/TatSu  ❤️❤️_❤️❤️
[09:02:02] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[09:02:16] *** UnelectdBourekas is now known as UnexpctdBourekas
[09:04:47] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:05:45] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:06:20] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[09:06:38] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[09:06:52] *** Joins: rickybob (~rickybob@35.143.255.39)
[09:07:23] *** Joins: rampart (~rampart@3.sub-174-250-16.myvzw.com)
[09:08:34] *** Quits: audio (~audio@user/audio) (Remote host closed the connection)
[09:08:47] *** Joins: audio (~audio@user/audio)
[09:10:23] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[09:11:01] *** Joins: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net)
[09:11:04] *** Joins: widp (~user@124.123.107.171)
[09:11:23] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[09:11:35] *** Joins: ykska (~ykska@182.226.37.172)
[09:11:53] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:12:19] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[09:12:39] *** Joins: Joe[m]12 (~jsricemat@2001:470:69fc:105::1:b4ce)
[09:13:08] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[09:14:00] *** Quits: UnexpctdBourekas (~Roey@user/Roey) (Quit: Client exiting)
[09:14:15] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[09:14:46] *** Quits: kts (~kts@103.73.237.194) (Remote host closed the connection)
[09:15:12] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[09:15:53] *** Quits: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:17:25] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[09:18:01] <dale> mat001: I know nothing about "Quart" or "Telethon", but if I had to guess, I think Quart is calling your routes with the captured "client", but that client is already disconnected because you exited the "async with client" on line 5 by the time the handlers are getting called.  https://github.com/LonamiWebs/Telethon/issues/1376#issuecomment-835587467 hints at this problem.
[09:18:33] *** Joins: trafficjam (~qubes@2001:8004:1580:2f22:bd92:14f2:d1a5:fb76)
[09:18:59] <trafficjam> how do i evalulate using an integer id in my urls versus a uuid?
[09:19:02] <dale> mat001: I'd guess you need to "with client: ..." _inside_ the route handlers, not outside them, so that, for each HTTP request, you're going to connect the Telegram client.
[09:19:58] <trafficjam> e.g. "/foo/123" vs "/foo/ab82b244pm92"
[09:20:05] *** Joins: bahamas (~lucian@84.232.140.52)
[09:21:24] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[09:22:24] *** Joins: bluedust (~bluedust@103.148.21.74)
[09:22:50] *** Joins: scruz (~scruz@41.58.203.161)
[09:24:55] *** Parts: voidcat (~voidcat@user/voidcat) ()
[09:27:25] <Joe[m]12> is there a way to suppress using the current exception for arbitrary following statements like manually raising "from None" does? e.g. https://bpa.st/YWBA
[09:31:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:32:12] *** Joins: moose (~moose@user/moose)
[09:33:30] *** Quits: data68 (~data@2a02:908:a65:3d80:d865:c924:e0e4:aeda) (Quit: WeeChat 1.4)
[09:34:05] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Read error: Connection reset by peer)
[09:35:09] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:35:13] *** Quits: seanicus (sean@triton.blinkenshell.org) (Quit: leaving)
[09:36:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:38:11] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:38:29] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[09:39:02] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[09:39:10] *** Joins: han-solo (~han-solo@user/han-solo)
[09:39:16] *** Joins: rvalue (~rvalue@user/rvalue)
[09:39:41] *** Joins: Kohe (~Kohe@79.103.22.84.dsl.dyn.forthnet.gr)
[09:40:02] *** Joins: OP-0 (~pca290122@178.23.88.224)
[09:40:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:41:27] *** Joins: sertsa (~sertsa@209.140.9.178)
[09:41:30] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[09:41:50] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[09:41:57] *** Quits: brentaarnold (~brentaarn@24.112.56.42) (Ping timeout: 240 seconds)
[09:42:05] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[09:42:12] *** Quits: Jong (~Jong@2620:10d:c090:400::5:8bc7) (Ping timeout: 240 seconds)
[09:42:30] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[09:43:55] *** Quits: Duckle (~Duckle@user/duckle) (Ping timeout: 256 seconds)
[09:45:54] <widp> can tensorflow variables be reshaped?
[09:46:07] <widp> reshaped, inplace.
[09:46:48] *** Quits: ejjfunky0 (~ejjfunky2@125.164.16.18) (Quit: Leaving)
[09:47:10] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[09:47:25] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[09:49:01] *** Joins: Jong (~Jong@163.114.132.1)
[09:53:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:01:00] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[10:01:31] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[10:01:55] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:01:57] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:01:59] *** Joins: bahamas (~lucian@84.232.140.52)
[10:02:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[10:02:42] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:03:20] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:04:25] *** Joins: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net)
[10:04:36] *** Quits: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net) (Ping timeout: 272 seconds)
[10:06:35] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[10:07:15] *** Joins: ice99 (~ice9@user/ice9)
[10:07:43] *** Quits: scruz (~scruz@41.58.203.161) (Ping timeout: 256 seconds)
[10:07:56] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[10:08:08] *** Joins: bahamas (~lucian@84.232.140.52)
[10:08:15] *** Joins: blei (~blei@user/blei)
[10:08:36] *** Quits: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net) (Ping timeout: 240 seconds)
[10:10:51] *** Quits: rickybob (~rickybob@35.143.255.39) (Ping timeout: 256 seconds)
[10:11:25] *** Quits: Kohe (~Kohe@79.103.22.84.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[10:12:07] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:12:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[10:13:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:14:25] *** Quits: trafficjam (~qubes@2001:8004:1580:2f22:bd92:14f2:d1a5:fb76) (Quit: trafficjam)
[10:14:38] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[10:15:14] *** Joins: wyclif (~wyclif@user/wyclif)
[10:15:59] *** Joins: callq (~callq@2405:201:a000:dd06:5d1b:4acb:792f:2117)
[10:16:25] <callq> Hey I've got a dictionary of dictionaries, and I want to save it to disk (maybe csv), so I can reload it later. How do I go about that?
[10:16:38] <rvalue> i am running jupyter lab using docker on remote machine, i copied a notebook from my desktop machine to jupyter lab and i dont know why i cant edit the notebook cells but i can run them. i can create a new notebook on this jupyter and i can do everything  but not with the copied notebook. the copied notebook has 644 as file permissions and its owned by the user inside the container. what am i missing here to get to edit this copied notebook?
[10:18:26] *** Joins: jay-m126 (~jay-m@154.72.150.191)
[10:18:31] *** Joins: jay-m126_ (~jay-m@154.72.150.191)
[10:18:32] *** Joins: jay-m1261 (~jay-m@154.72.150.191)
[10:18:41] *** Joins: nkm (~nkm@103.255.6.4)
[10:19:13] <parv> callq, If you have only plain numbers & strings could use pickle; using pickle to save class instances apparently could put you in a pickle. Or, save to JSON (via "json" module)|CSV (I think it is "csv" module), then parse back to dict.
[10:19:24] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 240 seconds)
[10:19:46] *** Quits: nkm (~nkm@103.255.6.4) (Quit: Client closed)
[10:19:50] *** Joins: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net)
[10:20:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:20:11] *** Quits: rampart (~rampart@3.sub-174-250-16.myvzw.com) (Quit: Leaving)
[10:20:35] <parv> rvalue, Is the Docker instance writable?
[10:20:40] *** Joins: rampart (~rampart@2.sub-174-250-16.myvzw.com)
[10:20:59] *** Joins: wyclif (~wyclif@user/wyclif)
[10:21:04] *** Joins: upsala (~zcb@185.209.196.139)
[10:21:07] <rvalue> parv: meaning? i can create other notebooks and edit and run cells ok
[10:21:24] *** Joins: nkm (~nkm@103.255.6.4)
[10:21:33] <parv> rvalue, Oh right.
[10:21:55] <parv> Sorry I got nothing (else)
[10:21:57] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[10:22:02] *** Parts: nkm (~nkm@103.255.6.4) ()
[10:22:08] <rvalue> does it have to do signing notebooks
[10:22:21] <rvalue> i did do jupyter trust on the copied notebook
[10:22:37] <rvalue> not sure whats wrong
[10:23:37] *** Joins: hams (~hams@73.232.205.0)
[10:23:37] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[10:23:37] *** Joins: hams (~hams@user/hams)
[10:24:27] *** Quits: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net) (Ping timeout: 256 seconds)
[10:24:37] <callq> just not sure how to save it, then also read and parse the nested dict
[10:24:49] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[10:26:00] <Repiphany> callq: `import json; with open('nested_dict.json', 'w') as f: json.dump(nested_dict, f)`
[10:26:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[10:26:13] <callq> 'w' or 'wb' here? Repiphany
[10:26:27] *** Joins: wyclif (~wyclif@user/wyclif)
[10:26:32] <Repiphany> then `with open('nested_dict.json', 'r') as f: nested_dict = json.load(f)`
[10:26:38] <Repiphany> json is text
[10:28:36] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 240 seconds)
[10:28:57] *** Joins: noarb (~noarb@user/noarb)
[10:29:00] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Remote host closed the connection)
[10:29:10] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[10:30:03] <callq> perfect
[10:32:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:32:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:32:33] *** Joins: noarb- (~noarb@user/noarb)
[10:32:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:33:36] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[10:34:00] *** Joins: Kohe (~Kohe@79.103.22.84.dsl.dyn.forthnet.gr)
[10:34:05] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[10:34:56] *** Joins: mickey8 (~user@user/mickey)
[10:36:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[10:38:51] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[10:42:01] *** Joins: bluedust_ (~bluedust@89.238.130.70)
[10:45:41] *** Quits: bluedust (~bluedust@103.148.21.74) (Ping timeout: 256 seconds)
[10:46:35] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:46:56] <callq> So, I have an API object which I've declared in `if __name__ == '__main__':` block, but a function above is not able to see that variable. "not defined" error.
[10:47:40] <callq> Oh I did things in the wrong order. Nevermind.
[10:47:40] *** Quits: OP-0 (~pca290122@178.23.88.224) (Ping timeout: 272 seconds)
[10:47:57] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:48:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:49:29] *** Quits: sertsa (~sertsa@209.140.9.178) (Quit: Leaving)
[10:49:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:49:42] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[10:49:49] *** Joins: fef (~thedawn@user/thedawn)
[10:50:18] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:50:30] *** Quits: ykska (~ykska@182.226.37.172) (Read error: Connection reset by peer)
[10:50:39] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[10:51:58] *** Joins: sertsa (~sertsa@209.140.9.178)
[10:52:20] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[10:52:20] *** Joins: djapo (~archangel@user/djapo)
[10:53:19] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[10:53:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 256 seconds)
[10:54:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:55:00] *** Joins: Duckle (~Duckle@user/duckle)
[10:55:00] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Ping timeout: 240 seconds)
[10:55:31] *** Joins: manti7 (~manti7@176.10.104.94)
[10:55:41] *** Quits: sertsa (~sertsa@209.140.9.178) (Client Quit)
[10:55:50] *** Joins: rendar (~rendar@user/rendar)
[10:56:11] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:56:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[10:56:37] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:56:55] *** Joins: sertsa (~sertsa@209.140.9.178)
[10:57:20] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:57:24] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[10:57:35] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:58:41] *** Quits: upsala (~zcb@185.209.196.139) (Quit: WeeChat 3.4)
[10:58:43] *** Quits: Dotz0cat (~Dotz0cat@h246.117.90.75.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[10:59:49] *** Joins: bluedust (~bluedust@103.148.21.74)
[11:01:48] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:15d1:c0b6:ba14:747) (Ping timeout: 240 seconds)
[11:03:15] *** Quits: bluedust_ (~bluedust@89.238.130.70) (Ping timeout: 256 seconds)
[11:04:31] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[11:05:54] *** mcleuder_ is now known as mcleuder
[11:06:20] *** Joins: stockholm (~Andreas@p200300d2c739ee00d1cdf68af7712ed7.dip0.t-ipconnect.de)
[11:07:24] *** Joins: EGH (~EGH@185.25.195.104)
[11:07:47] *** Quits: sertsa (~sertsa@209.140.9.178) (Quit: Konversation terminated!)
[11:09:24] *** Joins: sertsa (~sertsa@209.140.9.178)
[11:09:40] *** Quits: bluedust (~bluedust@103.148.21.74) (Remote host closed the connection)
[11:10:56] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[11:14:12] *** Quits: jay-m126 (~jay-m@154.72.150.191) (Ping timeout: 240 seconds)
[11:14:28] *** Joins: jay-m126 (~jay-m@154.72.150.191)
[11:14:36] *** Quits: jay-m1261 (~jay-m@154.72.150.191) (Ping timeout: 240 seconds)
[11:14:36] *** Quits: jay-m126_ (~jay-m@154.72.150.191) (Ping timeout: 240 seconds)
[11:15:14] *** Joins: jay-m126_ (~jay-m@154.72.150.191)
[11:15:15] *** Joins: jay-m1261 (~jay-m@154.72.150.191)
[11:15:38] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[11:15:49] *** Joins: bahamas (~lucian@84.232.140.52)
[11:16:29] *** Quits: sertsa (~sertsa@209.140.9.178) (Quit: Leaving)
[11:17:57] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[11:19:09] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[11:20:39] *** Joins: tg (~tg@rockylinux/infra/tg)
[11:21:52] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[11:23:39] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 256 seconds)
[11:25:29] *** Joins: noarb (~noarb@user/noarb)
[11:27:32] *** Joins: OP-0 (~pca290122@178.23.88.224)
[11:27:43] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[11:29:01] *** Joins: kts (~kts@103.73.237.194)
[11:29:05] *** Joins: noarb- (~noarb@user/noarb)
[11:30:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[11:30:30] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[11:30:48] *** Quits: Maxt3r (~Maxt3r@128-76-167-194-static.dk.customer.tdc.net) (Quit: WeeChat 3.4)
[11:31:01] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:22] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:30] *** Joins: wyclif (~wyclif@user/wyclif)
[11:31:45] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:32:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:34:01] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[11:34:02] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:34:13] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 240 seconds)
[11:35:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:36:22] *** Joins: eson123 (~whatever@118.69.128.37)
[11:36:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:37:01] *** Joins: wyclif (~wyclif@user/wyclif)
[11:37:11] <eson123> is there any standard library the supports dict slicing ? for example i have a dict like this {1:2, 2:3, 4:5, 5:6} and i wanna slice it with an "n" amount, for example n =2, it will give me {1:2,2:3} and {4:5, 5:6}
[11:37:17] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:37:29] <eson123> if the dicts has 6 key:value and n = 3, it will be sliced in half and so on
[11:37:37] *** Quits: jay-m1261 (~jay-m@154.72.150.191) (Ping timeout: 240 seconds)
[11:37:37] *** Quits: jay-m126_ (~jay-m@154.72.150.191) (Ping timeout: 240 seconds)
[11:37:57] *** Quits: jay-m126 (~jay-m@154.72.150.191) (Ping timeout: 240 seconds)
[11:38:19] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:39:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:39:14] <Joe[m]12> eson123: comprehensions won't do it for ya? {k: v for k, v in d.items() if k <= 3}
[11:39:39] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:39:42] *** Joins: jay-m126 (~jay-m@129.0.76.219)
[11:39:49] *** Joins: jay-m126_ (~jay-m@129.0.76.219)
[11:40:03] *** Joins: jay-m1261 (~jay-m@129.0.76.219)
[11:40:32] <eson123> yea i had the same idea tho, just wondering if someone already invented the wheel
[11:40:44] <eson123> so i can just import it whenever i need and get over with
[11:40:49] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:40:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[11:41:17] *** Quits: Hunterkll (~hunterkll@remote.kisaracorporation.com) (Ping timeout: 240 seconds)
[11:41:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[11:42:32] *** Joins: wyclif (~wyclif@user/wyclif)
[11:43:11] <BrenBarn> dicts aren't really designed for order-based usage that way, even though the key order is now reliable
[11:43:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[11:43:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[11:43:46] <BrenBarn> you could probably use itemgetter with a range or something
[11:44:12] <BrenBarn> if the keys were in a different order, would you want to slice by key order, or by the numerical order of the keys?
[11:44:16] *** Quits: resmo_ (~resmo@214-52-239-77.dyn.cable.fcom.ch) (Read error: Connection reset by peer)
[11:44:24] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[11:44:35] <lericson> the only sane solution to this is to create an index over the keys
[11:44:36] *** Quits: jay-m1261 (~jay-m@129.0.76.219) (Ping timeout: 240 seconds)
[11:44:36] *** Quits: jay-m126_ (~jay-m@129.0.76.219) (Ping timeout: 240 seconds)
[11:44:36] *** Quits: jay-m126 (~jay-m@129.0.76.219) (Ping timeout: 240 seconds)
[11:44:40] *** Joins: noarb (~noarb@user/noarb)
[11:44:48] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:86cb:7359:4b05:dd55)
[11:44:53] <lericson> iow a list sorted by whatever you want to do comparisons over
[11:44:59] <BrenBarn> like you can do this: `operator.itemgetter(*range(1, 3))(x)`
[11:45:08] <BrenBarn> (where x is the dict)
[11:45:10] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[11:45:41] *** Joins: jay-m126 (~jay-m@129.0.76.208)
[11:45:44] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00e1e6a3a3205c88e6.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[11:45:45] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 256 seconds)
[11:45:46] *** Joins: jay-m126_ (~jay-m@129.0.76.208)
[11:46:27] *** Joins: maxzor (~maxzor@2a01cb04054faa00e1e6a3a3205c88e6.ipv6.abo.wanadoo.fr)
[11:47:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[11:47:48] *** Joins: wyclif (~wyclif@user/wyclif)
[11:49:20] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Ping timeout: 252 seconds)
[11:50:22] <callq> Okay, an API is returning a float value, like 1e-06, so I know that means 0.000001, but I need to count a number for the precision. It's already a float value. I know I could do str(val)[:-1]-1, but that doesn't seem very reliable. I need the value of the precision, so I can put it into a round() or trunc() function. Ideas?
[11:50:47] *** Joins: jay-m1261 (~jay-m@129.0.76.208)
[11:50:47] <lericson> Decimal
[11:51:09] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.101)
[11:51:17] <lericson> Decimal('1e-6').log10()
[11:51:21] <callq> It's sort of stuck in that scientific-notation form, and I just want a robust way to take both forms, decimal or sci
[11:51:27] <callq> Okay cool I will try that
[11:51:43] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[11:51:52] <lericson> there is also .as_tuple() which gives you the exponent exactly
[11:52:38] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[11:54:00] <eson123> Joe[m]12: No but actually it only seems to slice one, i think it's not good tho
[11:54:06] <eson123> i will try another way then
[11:54:18] *** Joins: bahamas (~lucian@84.232.140.52)
[11:55:57] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:56:19] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:56:42] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:57:54] *** Joins: jmd (~user@de.cellform.com)
[11:58:24] *** Joins: Researcher (ceo@blockchainore.com)
[11:58:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[11:58:31] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:58:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[11:58:43] <Joe[m]12> eson123: "partition" might be a helpful search term for you. "slicing" in python implies returning a subset
[11:59:09] <eson123> Joe[m]12: after a bit of testing, here is what i meant tho https://pastebin.com/NCi1b9AU,
[11:59:14] <eson123> the thing is i am not my algorithm is sufficient enough
[11:59:40] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:00:06] *** Joins: jmd (~user@de.cellform.com)
[12:00:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:00:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[12:00:57] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:01:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:01:50] <widp> why does this: for prev, current in zip(a, a[1:]):
[12:01:50] <widp>     ...    print("previous " + str(prev))
[12:02:02] <widp> 'prev' not print the last element
[12:02:38] <widp> a=[1,2,3,4,5] <- 5 is not printed as the prev variable
[12:03:12] *** Joins: palasso (~palasso@user/palasso)
[12:03:35] <Joe[m]12> widp: zip stops when any list runs out of items. a[1:] is shorter
[12:03:52] <widp> ahh, makes sense. thank you.
[12:04:13] *** Joins: pro_z (~pro_z@37.214.78.161)
[12:04:14] <jinsun> and what did you expect current to be if prev was 5?
[12:04:38] <widp> right, should have thought about that.
[12:05:02] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[12:05:33] <jinsun> you can use itertools.zip_longest to do what you want, but you will have to choose a fill value for the shorter iterable
[12:05:53] <jinsun> by default it would be None
[12:06:14] <Joe[m]12> <eson123> "Joe: after a bit of testing..." <- are you trying to partition into even sets based on n? or just any arbitrary condition like k <= 2?
[12:07:51] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:08:02] <eson123> Joe[m]12: even
[12:08:07] <eson123> like what i just did tho
[12:08:24] <eson123> the thing is it's either my algorithm isn't efficient enough or there is already an existing method that i can try instead
[12:08:37] *** Quits: stockholm (~Andreas@p200300d2c739ee00d1cdf68af7712ed7.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:11:16] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[12:13:00] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[12:13:33] <Joe[m]12> <eson123> "the thing is it's either my..." <- try something like d.setdefault(mod(i, n), {})[k] = v
[12:14:17] *** Quits: callq (~callq@2405:201:a000:dd06:5d1b:4acb:792f:2117) (Ping timeout: 240 seconds)
[12:14:28] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[12:14:30] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-7c6a-9926-88c8-8f4d.res6.spectrum.com) (Quit: jarthur)
[12:14:48] <Joe[m]12> you can also get a little fancy and use collections.defaultdict
[12:15:10] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[12:15:13] <eson123> what should i pass in that "i" ?
[12:15:33] <eson123> also also mod() doesn't seem to be a standard function
[12:16:05] <Joe[m]12> eson123: for i, (k, v) in enumerate(old_d.items())
[12:18:49] *** Joins: paul424 (~tom@ip-5-172-236-37.multi.internet.cyfrowypolsat.pl)
[12:20:56] <eson123> Joe[m]12: ok so how about mod() ?
[12:21:32] *** Parts: agireud (~agireud@user/agireud) ()
[12:21:35] *** Joins: ravan (~ravan@user/ravan)
[12:22:16] <Joe[m]12> eson123: as in what does it do? or what i and n are?
[12:22:21] *** Joins: agireud (~agireud@user/agireud)
[12:22:39] <eson123> Joe[m]12: more like what the earlier statement you sent me, "d.setdefault(mod(i, n), {})[k] = v"
[12:22:51] <eson123> it is not a builtin function here
[12:22:59] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:23:23] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:24:52] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[12:24:56] *** Joins: ejjfunky2 (~ejjfunky@125.164.17.87)
[12:25:02] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:7d02:fe87:c247:a37c)
[12:25:03] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:7d02:fe87:c247:a37c) (Client Quit)
[12:25:17] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:25:17] *** gentooclimax is now known as climax
[12:25:28] <Joe[m]12> my bad (i % n)
[12:26:18] *** Joins: ejjfunky3 (~ejjfunky@125.164.20.45)
[12:26:53] *** Quits: ejjfunky (~ejjfunky@125.164.20.98) (Ping timeout: 256 seconds)
[12:28:15] *** Quits: theprophet (~theprophe@212.58.102.155) (Ping timeout: 256 seconds)
[12:28:18] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[12:28:57] *** Joins: stockholm (~Andreas@p200300d2c739ee00d1cdf68af7712ed7.dip0.t-ipconnect.de)
[12:29:23] *** Quits: ejjfunky2 (~ejjfunky@125.164.17.87) (Ping timeout: 256 seconds)
[12:29:24] *** climax is now known as gentooclimax
[12:29:43] <eson123> Joe[m]12: i assume this is what you meant ? https://pastebin.com/AZZPx0wH
[12:29:49] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[12:29:52] <eson123> even tho it doesn't give me the output i kinda expected
[12:30:06] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (Quit: You have been kicked for being idle)
[12:30:12] *** Quits: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65) (Quit: You have been kicked for being idle)
[12:30:12] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Quit: You have been kicked for being idle)
[12:31:21] <Joe[m]12> what output do you want? list?
[12:32:08] *** Joins: noteness (~noteness@user/noteness)
[12:32:19] *** Joins: bahamas (~lucian@84.232.140.52)
[12:32:35] *** Quits: noteness_ (~noteness@user/noteness) (Ping timeout: 240 seconds)
[12:32:43] <lericson> eson123: why do you have a mapping of i: i + 1
[12:33:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:33:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:33:50] <eson123> Joe[m]12: it gave me "{0: {1: 2, 4: 5, 7: 8}, 1: {2: 3, 5: 6}, 2: {3: 4, 6: 7}}" and it divided things up wrong actually, i am not concerned if it's list or anything but as long as it gives me an evenly-divide set of key:value, it's good, here you can see it gives me three pair but each isn't evenly divided
[12:33:56] *** cp--- is now known as cp-
[12:34:15] <eson123> first one is "{1: 2, 4: 5, 7: 8}", second is "{2: 3, 5: 6}" which has only two pairs
[12:34:36] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[12:34:42] <eson123> lericson: i: i+1 ? where
[12:34:52] <lericson> 7 is not divisible by 3 my man
[12:35:31] <lericson> your d dict is just {i: i + 1 for i in range(1, 8)}
[12:36:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[12:36:27] <eson123> yes i know, in that case, it should give me three dict, the first two are evenly divide and the last one is only one
[12:36:30] <eson123> my previous codes did that
[12:36:44] *** Quits: OP-0 (~pca290122@178.23.88.224) (Quit: WeeChat 3.4)
[12:37:14] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:37:45] *** Joins: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it)
[12:37:53] <Joe[m]12> so 3, 3, 1 split for 7? 5, 5, 1 for 11?
[12:38:13] *** Joins: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net)
[12:38:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[12:38:34] *** Joins: arinov (~arinov@213.194.126.155)
[12:39:08] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[12:39:08] <eson123> Joe[m]12: yep
[12:39:14] <eson123> 5,5,2 for 12 also
[12:39:19] <lericson> groupby()
[12:39:35] <Joe[m]12> why not 4, 4, 4?
[12:39:50] <eson123> it can, if i specified n = 4
[12:39:58] <eson123> but if i specify n = 3, it's 5,5,2
[12:40:06] <eson123> lericson: ok let's me see
[12:40:06] <lericson> wut
[12:40:19] <lericson> your definition of n changes meaning
[12:40:19] <Joe[m]12> n is the max size of the group, not the number of partitions. lol
[12:40:41] <eson123> Joe[m]12: well yes that's what it is tho
[12:41:02] <Joe[m]12> that's fine. I just thought it was the other
[12:41:59] <Joe[m]12> is the data just bs sample data or is the dict always v = k +1?
[12:42:27] <Joe[m]12> like @lericson was asking about
[12:42:41] *** Quits: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net) (Ping timeout: 252 seconds)
[12:42:58] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[12:44:41] <eson123> just sample, in real life it  can be anything
[12:45:15] <eson123> i was too lazy to get a real sample so i did that since the key and val is consecutive on my keyboard :P
[12:45:36] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:45:58] <lericson> ok
[12:46:02] *** Joins: arinov_ (~arinov@194.169.217.31)
[12:46:07] <lericson> but why is it 5-5-2 and not 4-4-4
[12:46:07] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[12:46:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[12:47:07] <lericson> if n is the max size of each subset, then 5-5-2 makes no sense for n = 3
[12:47:11] <eson123> lericson: because it depends on the amount of group size that i specify, it can totally be 4-4-4 tho
[12:48:12] <Joe[m]12> try this https://pastebin.com/HGQcdJNd
[12:49:19] <rendar> let's say i have a class which has a string as an attribute, like `a = A(); a.the_string` ...how can i insert this 'a' object into a set, where a.that_string is the key?
[12:49:36] <lericson> rendar: by making a dict
[12:49:46] <rendar> lericson, huh?
[12:49:56] <rendar> no, i want to use __hash__
[12:49:56] <lericson> rendar: or by making A.__eq__ and A.__hash__ operate on the_string
[12:50:02] <rendar> exactly
[12:50:12] <lericson> sounds like you already know the answer then :p
[12:50:28] <lericson> notice that your object must be immutable
[12:51:20] <rendar> how can i ensure that?
[12:51:40] *** Joins: Ad1Tech (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl)
[12:51:43] <eson123> Joe[m]12: yea that seems to be better
[12:51:53] <eson123> but i have no  idea why u picked >= instead of == tho
[12:52:06] <Joe[m]12> habit
[12:52:19] <eson123> hm ok
[12:52:44] *** Joins: Z-cat (~Z-cat@user/z-cat)
[12:53:11] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[12:53:28] <Joe[m]12> cosmic background radiation could strike my n and make the loop continue forever
[12:53:33] *** Joins: rsx (~dummy@ppp-188-174-135-101.dynamic.mnet-online.de)
[12:53:59] <jinsun> rendar: make a frozen dataclass, that will automatically generate a hash method for you
[12:54:35] <rendar> jinsun, how exactly? can you show a snippet example of that?
[12:55:47] *** Quits: kmh (~kmh@2a00:6020:5004:6800:b805:34de:7020:2510) (Quit: Leaving)
[12:56:13] <jinsun> rendar: https://bpa.st/X63A
[12:57:51] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[12:58:17] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:58:27] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:15d1:c0b6:ba14:747)
[12:59:30] *** Quits: ejjfunky3 (~ejjfunky@125.164.20.45) (Quit: Leaving)
[13:00:03] <rendar> jinsun, thanks very interesting
[13:00:26] *** Joins: ejjfunky (~ejjfunky@125.164.16.97)
[13:03:32] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 240 seconds)
[13:04:04] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[13:05:35] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d52f:610b:c364:63c2)
[13:06:15] <rendar> i should use `__hash__(self) -> int:` with `int` as annotation, right?
[13:07:01] <jinsun> yes hash must be int
[13:09:02] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:8204:cc22:218f:40d9) (Remote host closed the connection)
[13:09:07] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:10:50] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[13:11:09] *** Joins: Atque (~Atque@user/atque)
[13:11:49] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:1d4f:159b:d421:a8bc)
[13:11:50] <lericson> Joe[m]12: you were joking but random bit flips do happen in space especially
[13:12:08] <lericson> the way around that is to run the same computations many times on many cpus
[13:12:11] <lericson> then take a quorum
[13:12:36] *** Joins: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net)
[13:12:51] <lericson> would be kind of interesting to look into, can you develop a cpu that is unreliable but much faster, then use that approach to make it deterministic again
[13:13:01] <Joe[m]12> yeah, but my use of >= is pretty good too
[13:13:20] *** Quits: psy1 (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net) (Ping timeout: 272 seconds)
[13:13:36] <lola> hey python
[13:13:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[13:13:46] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[13:13:57] <lola> any argparse masters out there?
[13:14:05] <lericson> argparser? i hardly know 'er
[13:14:15] <lericson> i wouldn't say i'm a master but i've read the source
[13:14:15] <lola> I wanted to do both a positional and flagable arg for the same argument
[13:14:33] <lola> how would one go about doing that?
[13:14:34] <lericson> and if there is a conflict?
[13:14:42] <lericson> --flag x y
[13:14:43] <lola> Cheers
[13:15:27] *** Joins: greedom (~greedom@p200300de674e070045df047e1dedd5de.dip0.t-ipconnect.de)
[13:15:47] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:16:09] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[13:17:01] *** Quits: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[13:18:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[13:18:44] <lola> I have a if else statement to avoid conflict and reask for argumentsto avoid that
[13:18:48] <lola> ;)
[13:21:03] *** Joins: thevar1able (~textual@77-60-58-74.biz.kpn.net)
[13:21:15] *** Quits: NealRame (~a@89.187.163.193) (Ping timeout: 256 seconds)
[13:21:51] *** Joins: charlie (~charlie@183.200.9.144)
[13:22:06] <charlie> ahhhhhh
[13:22:31] <charlie> anyone else?
[13:22:35] *** Quits: thevar1able (~textual@77-60-58-74.biz.kpn.net) (Client Quit)
[13:22:45] *** Joins: nomic (~nomic@185.192.69.129)
[13:23:14] *** Joins: M3troidman (~buttler@mobile-access-56734d-140.dhcp.inet.fi)
[13:23:45] *** Joins: data68 (~data@2a02:908:a65:3d80:9c91:5ac0:2381:828b)
[13:24:05] *** Quits: charlie (~charlie@183.200.9.144) (Client Quit)
[13:24:32] *** Quits: onichomp (~onichomp@2806:264:4408:1be:c93f:1ef7:ef0a:d426) (Read error: Connection reset by peer)
[13:24:42] *** Quits: M3troidman (~buttler@mobile-access-56734d-140.dhcp.inet.fi) (Client Quit)
[13:25:10] *** Joins: onichomp (~onichomp@2806:264:4408:1be:c93f:1ef7:ef0a:d426)
[13:25:29] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (Quit: WeeChat 2.8)
[13:26:35] *** Quits: onichomp (~onichomp@2806:264:4408:1be:c93f:1ef7:ef0a:d426) (Read error: Connection reset by peer)
[13:27:48] *** Quits: Kohe (~Kohe@79.103.22.84.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[13:28:50] *** Joins: scruz (~scruz@41.58.224.8)
[13:29:42] <tykling> is there a way to access nested dicts like foo.bar.baz instead of foo["bar"]["baz"]? could it be a PEP in the future?
[13:29:59] <lericson> this is a much larger problem than that
[13:30:26] *** Quits: kts (~kts@103.73.237.194) (Ping timeout: 260 seconds)
[13:30:28] *** Joins: kts_ (~kts@103.73.237.32)
[13:30:39] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:d6d8:77f:d540:d1a)
[13:30:45] <lericson> there is types.SimpleNamespace
[13:30:53] <lericson> it is not recursive like that though
[13:31:14] <lericson> however i guess you're deserializing json or something, if so, you can set the object constructor in json.laod
[13:31:17] <lericson> s/laod/load/
[13:31:46] <lericson> doc = json.load(file_obj, object_hook=types.SimpleNamespace)
[13:32:12] *** Joins: magla (~gelignite@d5364c1c.access.ecotel.net)
[13:32:56] *** Joins: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net)
[13:33:01] <tykling> I see
[13:33:16] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:33:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:33:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:33:57] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[13:34:17] *** Quits: txtsd (~txtsd@user/txtsd) (Read error: Connection reset by peer)
[13:34:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[13:35:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:35:05] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:35:19] *** Joins: ali12341 (~al@user/ali1234)
[13:35:20] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[13:35:35] *** Joins: kcrk (~kcrk@user/kcrk)
[13:35:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:36:11] *** Quits: kts_ (~kts@103.73.237.32) (Quit: Konversation terminated!)
[13:36:11] *** Quits: Dantali0n (~Dantali0n@2a10:3781:15ed::2003) (Ping timeout: 245 seconds)
[13:37:07] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[13:37:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[13:39:08] *** Joins: kts (~kts@103.73.237.32)
[13:39:27] *** Joins: fef (~thedawn@user/thedawn)
[13:40:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:40:42] *** Joins: bahamas (~lucian@84.232.140.52)
[13:42:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:43:41] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[13:44:18] *** Joins: Dantali0n (~Dantali0n@45-138-228-251.connected.by.freedominter.net)
[13:45:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[13:47:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:51:36] *** Quits: stockholm (~Andreas@p200300d2c739ee00d1cdf68af7712ed7.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[13:52:21] *** Joins: Ad1Tech_IT (~Ad1Tech@h104101.man.tk-internet.pl)
[13:52:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[13:52:40] *** Joins: aslicedbanjo (~aslicedba@host31-52-123-119.range31-52.btcentralplus.com)
[13:54:32] *** Quits: Ad1Tech (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl) (Ping timeout: 240 seconds)
[13:54:52] *** Joins: _Ad1Tech_ (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl)
[13:54:59] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[13:57:12] *** Joins: stockholm (~Andreas@p200300d2c739ee00d1cdf68af7712ed7.dip0.t-ipconnect.de)
[13:57:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[13:57:30] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:57:47] *** Quits: Ad1Tech_IT (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 256 seconds)
[13:59:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:00:18] *** Joins: Ox4 (~int@0x4.cx)
[14:00:21] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[14:00:27] *** Quits: jay-m1261 (~jay-m@129.0.76.208) (Read error: Connection reset by peer)
[14:00:28] *** Quits: jay-m126_ (~jay-m@129.0.76.208) (Read error: Connection reset by peer)
[14:00:30] *** Joins: xa0s (~xa0s@mab.sdf.org)
[14:00:31] *** Quits: jay-m126 (~jay-m@129.0.76.208) (Read error: Connection reset by peer)
[14:01:45] *** Joins: wyclif (~wyclif@user/wyclif)
[14:01:48] *** Joins: Kohe (~Kohe@79.103.22.84.dsl.dyn.forthnet.gr)
[14:03:35] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 240 seconds)
[14:03:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:04:42] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[14:04:58] *** Joins: jay-m126 (~jay-m@129.0.99.10)
[14:05:08] *** Joins: jay-m126_ (~jay-m@129.0.99.10)
[14:05:14] *** Joins: jay-m1261 (~jay-m@129.0.99.10)
[14:05:26] *** Joins: vaio (~gary@user/ghost)
[14:05:58] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:06:33] *** Quits: greedom (~greedom@p200300de674e070045df047e1dedd5de.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:07:07] *** Quits: eson123 (~whatever@118.69.128.37) (Quit: Leaving)
[14:08:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[14:09:12] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[14:12:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:12:47] *** Quits: jay-m1261 (~jay-m@129.0.99.10) (Ping timeout: 250 seconds)
[14:13:00] *** Quits: jay-m126 (~jay-m@129.0.99.10) (Ping timeout: 240 seconds)
[14:13:08] *** Quits: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it) (Quit: Leaving.)
[14:13:23] *** Quits: jay-m126_ (~jay-m@129.0.99.10) (Ping timeout: 256 seconds)
[14:13:28] *** Joins: eson123 (~whatever@118.69.128.37)
[14:13:42] *** Parts: eson123 (~whatever@118.69.128.37) ()
[14:14:12] *** Joins: programmar (~whatever@118.69.128.37)
[14:15:38] <programmar> guys question about sqlite3 please, so what i am intending to query something like this "SELECT ID FROM UTABLE WHERE ID NOT IN('19032','23201');" and here is what i tried https://pastebin.com/hVgWZ4V0 but it doesn't seem to work, any idea ?
[14:15:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:15:45] <programmar> sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type.
[14:16:13] <programmar> i mean i can .format() or %s it, but i am a bit scared it might leads to SQLi
[14:16:17] *** Joins: sn_fk_n (~snufkin@2.221.192.124)
[14:16:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:20:12] <deniska> programmar: sadly, in many python db drivers there's no good way to supply params for `in` clause, sqlite3 is one of them
[14:20:28] *** Quits: scruz (~scruz@41.58.224.8) (Ping timeout: 272 seconds)
[14:20:33] <programmar> :(
[14:20:56] <programmar> guess i have to do some manual sanitization then
[14:20:59] <deniska> programmar: either carefully use string formatting, or use a query builder like sqlalchemy to do it for you
[14:21:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[14:21:02] <dv^_^> you need the correct number of ?'s
[14:21:18] <programmar> HHmm, that could be a good idea
[14:21:19] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[14:21:22] *** Joins: scruz (~scruz@41.58.224.8)
[14:21:28] <nyuszika7h> if they're ints anyway, that should be easy to sanitize to avoid SQLi
[14:21:39] <programmar> yea but sadly in this case it's string
[14:21:47] <nyuszika7h> well, are they always numeric strings?
[14:21:57] <programmar> not always
[14:22:02] <programmar> that's why it's string
[14:22:07] <nyuszika7h> oh
[14:22:16] <jim> hi. I wonder if anyone here has a comment or two about "the django book"?
[14:22:28] <programmar> i think i can just increase the number of ? like dv^_^ told me
[14:22:32] <programmar> it could be good enough
[14:23:15] <deniska> `in` clause is kinda meant for adhoc queries anyway, many databases have arbitrary limits on how many values you can put in it
[14:23:37] *** Joins: bahamas (~lucian@84.232.140.52)
[14:23:46] *** Quits: devKathy (~devKathy@2600:1700:2990:d590:8445:8e4b:c691:8a3) (Quit: Client closed)
[14:24:03] <nyuszika7h> yeah this seems to work: >>> c.execute("SELECT * FROM foo WHERE id IN (?, ?)", [1, 2]).fetchall()
[14:24:03] *** Quits: ArtfulDodger (~ArtfulDod@81.126.81.79.rev.sfr.net) (Ping timeout: 250 seconds)
[14:24:12] <nyuszika7h> you could auto-generate the number of ?s if needed
[14:24:20] *** kosh_ is now known as kosh
[14:24:38] *** Joins: ArtfulDodger (~ArtfulDod@81.126.81.79.rev.sfr.net)
[14:25:03] *** Joins: Guest10 (~Guest10@d28-23-90-26.dim.wideopenwest.com)
[14:25:25] <nyuszika7h> c.execute(f"SELECT * FROM foo WHERE id IN ({', '.join('?' for _ in range(len(ids)))})", ids).fetchall()
[14:25:29] *** Joins: arinov (~arinov@213.194.126.155)
[14:25:39] <programmar> deniska: is there anyhow i cna check that limit ?
[14:25:59] <programmar> nyuszika7h: yea i was just trying that
[14:26:06] <programmar> it does work but as deniska said, there is a limit
[14:26:41] <deniska> programmar: I think in oracle it was 1500? Not sure about sqlite, maybe it has no limit
[14:26:49] <programmar> oh, nice then
[14:27:01] <programmar> i never used oracle also so i am not sure either
[14:27:14] <nyuszika7h> the limit seems to be 250000 for sqlite3
[14:27:20] *** Quits: arinov_ (~arinov@194.169.217.31) (Read error: Connection reset by peer)
[14:27:20] <nyuszika7h> based on trial and error
[14:27:20] *** Quits: Guest10 (~Guest10@d28-23-90-26.dim.wideopenwest.com) (Client Quit)
[14:27:26] <programmar> damn, that is nearly no limit anyway
[14:27:33] <programmar> i hardly ever pass 20
[14:28:04] *** Joins: andreasbuhr (~quassel@p549db2d8.dip0.t-ipconnect.de)
[14:28:09] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:28:27] <deniska> nyuszika7h: might be a limit on a total statement length which internet tells me is 1'000'000 by default
[14:28:40] <nyuszika7h> well, this is the error I get at 250001: sqlite3.OperationalError: too many SQL variables
[14:28:49] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[14:28:50] <deniska> or the amount of variables, yes :)
[14:29:20] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Ping timeout: 272 seconds)
[14:29:22] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:30:49] *** Quits: stockholm (~Andreas@p200300d2c739ee00d1cdf68af7712ed7.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:31:01] *** Joins: stockholm (~Andreas@p200300d2c739ee00d1cdf68af7712ed7.dip0.t-ipconnect.de)
[14:31:17] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[14:31:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[14:32:15] *** Quits: paul424 (~tom@ip-5-172-236-37.multi.internet.cyfrowypolsat.pl) (Quit: GG)
[14:32:47] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:33:00] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[14:33:48] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:33:54] *** Joins: theprophet (~theprophe@212.58.102.155)
[14:34:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:34:21] *** Joins: Ad1Tech_IT (~Ad1Tech@h104101.man.tk-internet.pl)
[14:34:55] *** Quits: Kohe (~Kohe@79.103.22.84.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[14:35:26] *** Joins: duckpunch (~duckpunch@d28-23-90-26.dim.wideopenwest.com)
[14:35:49] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[14:36:00] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 252 seconds)
[14:36:02] *** Joins: NealRame (~a@89.187.163.193)
[14:36:16] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:36:25] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[14:36:36] *** Joins: jochum (~quassel@user/jochum)
[14:37:11] *** Quits: _Ad1Tech_ (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl) (Ping timeout: 256 seconds)
[14:37:34] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[14:37:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:40:56] *** Quits: scruz (~scruz@41.58.224.8) (Quit: Leaving)
[14:41:48] *** Quits: aslicedbanjo (~aslicedba@host31-52-123-119.range31-52.btcentralplus.com) (Quit: Leaving.)
[14:42:12] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[14:44:17] *** Quits: duckpunch (~duckpunch@d28-23-90-26.dim.wideopenwest.com) (Ping timeout: 240 seconds)
[14:44:30] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[14:44:30] *** Joins: duckpunch (~duckpunch@103.sub-174-240-115.myvzw.com)
[14:45:03] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[14:45:13] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:46:05] *** Quits: kts (~kts@103.73.237.32) (Quit: Konversation terminated!)
[14:47:32] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 252 seconds)
[14:48:13] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:48:37] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[14:49:24] *** Joins: duckpunc1 (~duckpunch@79.sub-174-210-230.myvzw.com)
[14:49:39] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:49:48] *** Quits: duckpunch (~duckpunch@103.sub-174-240-115.myvzw.com) (Ping timeout: 240 seconds)
[14:50:37] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:50:55] *** Joins: duckpunch (~duckpunch@d28-23-90-26.dim.wideopenwest.com)
[14:52:05] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[14:53:48] *** Quits: duckpunc1 (~duckpunch@79.sub-174-210-230.myvzw.com) (Ping timeout: 240 seconds)
[14:54:09] *** Quits: widp (~user@124.123.107.171) (Read error: Connection reset by peer)
[14:54:40] *** Joins: widp (~user@124.123.107.171)
[14:56:08] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (Read error: Connection reset by peer)
[14:56:43] *** Joins: Atque (~Atque@user/atque)
[14:56:52] <duckpunch> s
[14:57:00] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 240 seconds)
[14:59:28] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:00:00] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:00:30] <rendar> if i have [(X,True), (Y,True), (Z,False), (A,True), (B,True), (C,False), (D,False)] what is the best way to group all True and False in the given order? e.g. having [[X,Y],[Z],[A,B],[C,D]] ... basically creating a new sublist when the True/False changes!
[15:00:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:00:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:01:24] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[15:01:48] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[15:02:32] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:15d1:c0b6:ba14:747) (Ping timeout: 240 seconds)
[15:02:36] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 240 seconds)
[15:03:02] *** Joins: Midjak (~Midjak@82.66.147.146)
[15:03:27] *** Joins: Naan (~naan@user/naan)
[15:03:29] *** Quits: stockholm (~Andreas@p200300d2c739ee00d1cdf68af7712ed7.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:04:23] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:05:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:06:45] <han-solo> rendar: `[[v[0] for v in grp] for _,grp in itertools.groupby(x, lambda x: x[1])]`
[15:09:29] *** Quits: nomic (~nomic@185.192.69.129) (Quit: Leaving)
[15:09:49] *** Quits: data68 (~data@2a02:908:a65:3d80:9c91:5ac0:2381:828b) (Ping timeout: 240 seconds)
[15:10:24] <sveinse> Is it frowned upon to use class as a grouping mechanism for constants (a namespace), and never make an instance of it? E.g. class A: record = 42 to be able to do A.record ?
[15:10:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[15:11:00] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[15:11:14] <han-solo> it is fine, imo
[15:11:32] <han-solo> maybe a frozen dataclass or attrs equivalent
[15:11:49] <han-solo> oh wait, no instance, so it may not matter
[15:13:12] <amazigh> sveinse: what about enums?
[15:15:40] <sveinse> amazigh: enums come around to much the same as above: `Class A(Enum): RECORD = 42` -- but granted it has repr and some helper methods that might be useful.
[15:19:06] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[15:19:16] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[15:20:40] *** Joins: portalrat (~portalrat@user/portalrat)
[15:22:09] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[15:22:15] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[15:22:39] <jinsun> I think it used to be frowned upon earlier, because classes were weird and built-in data structures used to be considered good enough for many things, so you would make a dict or a entire new module for that
[15:23:03] *** Parts: NyB (~archon@2a02:169:1d9::1:0:0) (WeeChat 3.0)
[15:23:27] <jinsun> but I think it is okay to do (I rarely do it though)
[15:24:30] *** Joins: cdown (~cdown@163.114.131.1)
[15:24:36] *** Joins: Klinda (~superleag@user/klinda)
[15:27:07] <sveinse> jinsun: There are some exceptions where "standard stuff" is not using the built-ins (dict) for variable data: E.g. ArgumentParser attr-ifies its data.
[15:27:47] <sveinse> That said, I don't really want to go to the JS object and Py attr vs item discussion. Not my point.
[15:28:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:28:43] *** Joins: Kohe (~Kohe@79.103.22.84.dsl.dyn.forthnet.gr)
[15:29:33] *** Quits: ArtfulDodger (~ArtfulDod@81.126.81.79.rev.sfr.net) (Read error: Connection reset by peer)
[15:29:35] *** Joins: ArtfulDodger_ (~ArtfulDod@81.126.81.79.rev.sfr.net)
[15:29:43] <jinsun> yes I'm not saying dicts are a good solution for this, they ar terrible really
[15:30:14] <jinsun> but like 10-15 years ago you would have a lot of people saying you should use dicts for this
[15:31:07] <sveinse> jinsun: heh, I think we sometime still have some that do
[15:34:23] *** Joins: kts (~kts@103.73.237.32)
[15:34:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:34:51] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:34] <newdimension> I have a script that runs different things and logs to console progress e.g. [1/25], [2/25]. This is all done through logging so it's new lines. I'd like to have a text based GUI that can show stuff like "current filename:" and an current progress. What is this type of thing called so I can search how to implement it?
[15:37:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:38:10] <bjs> newdimension: there's no real name, people call them TUI (text UIs).  Maybe you're looking for something like tqdm (for simple progress bars and similar) or urwid (implement whole complex interactive UIs in the terminal)
[15:38:22] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 272 seconds)
[15:38:25] <bjs> newdimension: (at least, that's what I assume you meant by "text based GUI")
[15:38:43] <lericson> i thought tui is terminal user interface
[15:39:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:39:07] <bjs> lericson: some people also use TUI to mean that
[15:39:17] *** Joins: lfs (~lfs@5.2.79.79)
[15:39:18] <bjs> but modern terminals can only show text so I don't really see the difference :P
[15:39:20] <lfs> hoy
[15:39:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:39:36] <lfs> whats the most pythonic way of mkdir if not exists? is it just using os?
[15:39:50] <lfs> or are there purer ways to do it?
[15:40:00] <newdimension> bjs: I'll look into these thank you!
[15:40:09] <han-solo> https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir
[15:40:31] <lfs> ty han-solo
[15:40:56] <han-solo> with `exist_ok=True` that is
[15:40:58] <lfs> hngggg skimmed path lib and hnggggg satisfies
[15:41:31] <lfs> ye or can use if(Path.exists(path)):
[15:41:35] <han-solo> er, maybe i should probably ask, what should it do if the dir already exists ?
[15:41:44] <lfs> skip the step
[15:41:50] <han-solo> great then
[15:41:52] <lfs> making linux from scratch
[15:41:57] <han-solo> cool
[15:42:05] <lfs> but making a python script that builds it
[15:42:08] <bjs> lfs: just `if path.exists():`  works fine
[15:42:22] <bjs> In Python you can just call the method on the object directly, you don't have to name the Path class.
[15:42:26] <lfs> and the finished "my own distro" will use python instead of bash
[15:42:34] <lfs> oh
[15:42:43] <lfs> nice
[15:42:55] <lfs> sorta knew that
[15:43:06] <lfs> ahh ye
[15:43:19] <lfs> prefer working with objects
[15:43:38] <newdimension> urwid seems to be more feature rich than I'm looking for. I'm not looking for any user input. Just looking to have a a static amount of lines in the terminal that shows a variable for current filename and progress. Right now, I just print stuff to terminal using logging
[15:43:49] <lfs> like i seen the "cpython internals" video how python is implemented in C
[15:43:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[15:43:52] <bjs> newdimension: then tqdm is probably what you want
[15:43:56] *** Quits: cdown (~cdown@163.114.131.1) (Remote host closed the connection)
[15:44:10] *** Joins: cdown (~cdown@163.114.131.1)
[15:44:13] <bjs> newdimension: it's for "progress bars" but a progress bar might be just a static line of text :)
[15:44:34] <han-solo> i used `rich` just for progress bars ':)
[15:44:41] <lfs> so gonna be a linux from scratch system but then the shell is gonna be written in python
[15:44:59] <lfs> so everything will be in python if u wanna compile a c program u have to do it from python
[15:45:00] <newdimension> bjs: right, tqdm would do the progress bars great, are you saying I can also use to show a variable like filename?
[15:45:14] <lfs> likewise if u wanna assemble stuff
[15:45:29] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[15:45:37] <bjs> newdimension: yes, it's very customizable. You can make the actual thing it prints out be whatever you want, you can put them on whatever line you want (including having multiple on different lines) etc
[15:46:17] *** Joins: sobkas (~sobkas@95.175.17.217)
[15:46:20] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[15:46:29] <lfs> added security kind of if everything is python cuz 0 buffer overflows atleast
[15:46:47] <lfs> but then again it will be doing eval() alot maybe
[15:47:36] <sveinse> lfs you certainly have an ambitious project ahead of you
[15:47:45] <lfs> ye im in the looney bin
[15:47:59] <lfs> might get out sooner than expected tho
[15:48:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[15:48:17] <lfs> the shrink thinks im delusional cuz of an immaginary russian threat
[15:48:22] <lfs> then bom
[15:48:37] <lfs> thank you putin you invaded JUST in my hour of need
[15:48:55] *** Joins: spnotaniousspar (~spnotanio@2001:16a2:c573:b500:3f5c:c16e:bf41:c30d)
[15:49:33] <lfs> but ye i got time on my hands and no drugs alcohol women or worldly pleasures beyond food
[15:49:43] <lfs> might aswell do some upkeep
[15:49:59] <lfs> taken backups of my $$$ projects
[15:50:27] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[15:50:37] <lfs> but its sunday
[15:51:07] <sveinse> lfs: There exists a #python-offtopic
[15:51:13] <lfs> oh
[15:51:45] <jinsun> not anymore
[15:51:47] <lfs> ye but point is once my lfs is done booting ur inside python
[15:51:52] <jinsun> ##python-offtopic now
[15:52:17] <sveinse> yeah, I noticed little bit too late
[15:52:23] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[15:53:34] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[15:54:00] *** Joins: sobkas (~sobkas@95.175.17.217)
[15:54:21] <lfs> think #python-offtopic redirects
[15:55:10] <jinsun> oh yeah now it redirects
[15:55:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[15:55:28] <jinsun> earlier you just used to get a banned message
[15:55:32] <lfs> OH
[15:55:33] <lfs> lol
[15:55:40] <lfs> thats what that was about..
[15:55:46] <lfs> thought i had been inscolant
[15:55:49] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[15:56:22] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[15:56:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:56:50] *** Joins: Ad1Tech (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl)
[15:57:22] *** Joins: portalrat_ (~portalrat@user/portalrat)
[15:57:37] <sveinse> inheriting Enum certainly has some surprises up its sleeve. If you define a dict as one of the enum values, its get stripped of access methods. Even a classmethod witin the Enum-class can access the dict.
[15:58:36] *** Quits: Ad1Tech_IT (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 240 seconds)
[15:58:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:58:57] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 250 seconds)
[15:59:18] <lfs> bah running old debian system with python2 as the default python interpreter
[15:59:50] <lfs> any urllib2 upgrade in python3?
[16:01:25] *** Joins: ice9 (~ice9@user/ice9)
[16:01:32] *** Quits: ice99 (~ice9@user/ice9) (Read error: Connection reset by peer)
[16:01:53] <lfs> ill try the obv and say urllib3
[16:02:21] <jinsun> sveinse: yeah enum is weird, .value will give you the actual object, it is okay only for simple C like enums with a bunch of ints or maybe strings
[16:03:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:03:28] <sveinse> jinsun: ah. thanks
[16:03:41] <lfs> sveinse
[16:03:52] <lfs> nice name
[16:04:35] <sveinse> lfs: uhm, thanks. Thank my mother
[16:04:39] <lfs> oh
[16:04:59] *** Joins: bluedust (~bluedust@103.148.21.74)
[16:05:37] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[16:05:45] *** Joins: Ad1Tech_IT (~Ad1Tech@static.248.64.63.178.clients.your-server.de)
[16:06:26] <jinsun> sveinse: I normally just make a normal dataclass and keep a global instance of it for use
[16:06:55] <jinsun> but just making a normal class with a bunch of class attributes should also be fine
[16:07:29] <sveinse> jinsun: yes, I would as well. Its fun to test out this enum thing too.
[16:07:30] <jinsun> better than enum certainly if you are keeping objects like dicts inside it
[16:07:48] *** Quits: rtsn (~nstr@user/rtsn) (Ping timeout: 240 seconds)
[16:08:17] *** Quits: Ad1Tech (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl) (Ping timeout: 240 seconds)
[16:08:22] <lfs> uhm urllib.request.urlopen(url) no such function defined :S
[16:09:23] <sveinse> jinsun: The dict is for serialization: name <-> enum, so I'll hide them in class methods anyways. The fact that enum don't directly gives you access to the dict is actually a good conincidence here.
[16:09:54] *** Joins: rtsn (~nstr@h-155-4-221-229.NA.cust.bahnhof.se)
[16:10:57] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[16:12:12] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:95ca:ec3f:c36c:93e9)
[16:13:44] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:15:04] *** Quits: rtsn (~nstr@h-155-4-221-229.NA.cust.bahnhof.se) (Changing host)
[16:15:04] *** Joins: rtsn (~nstr@user/rtsn)
[16:15:31] *** portalrat_ is now known as portalrat
[16:16:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:16:32] *** Joins: SanchoPanza (~rose@2a03:ef42:4:67d0:4c2c:bcb:18fb:a79)
[16:16:55] <SanchoPanza> Hi - Where can I find a collection of fullstack django projects to read?
[16:17:26] <SanchoPanza> on github or anywhere else
[16:18:47] <dsc_> the fullest of stacks
[16:18:53] <sveinse> Oh. Enums can't be used as a literal value, like any variable can. It needs to access .value to get that. That... kind of limits its use, as one needs to (*shivers*) to type checking when using an object that might be an enum value.
[16:19:20] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:19:48] *** Quits: cYmen (~simon@squint.a-oben.org) (Quit: bye)
[16:19:48] *** Quits: noent (~quassel@user/sven/x-0967695) (Quit: noent)
[16:20:00] *** Joins: noent (~quassel@squint.a-oben.org)
[16:20:01] *** Quits: noent (~quassel@squint.a-oben.org) (Changing host)
[16:20:01] *** Joins: noent (~quassel@user/sven/x-0967695)
[16:20:01] *** Joins: cYmen (~simon@squint.a-oben.org)
[16:20:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:20:09] <sveinse> Dataclass here I come
[16:20:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[16:20:27] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:22:34] *** Joins: bahamas (~lucian@84.232.140.52)
[16:22:47] *** Joins: wakeup (~wakeup@user/wakeup)
[16:24:00] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:7242)
[16:24:17] <wakeup> Is anyone here familiar with scipy's minimize function to solve a constrained optimization problem? In my case, I need to find a probability vector. The issue I am encountering is that some constrained is not ensured, although I am specifying it. Specifically, one probability is very close to 0 but it's negative. Of course, probabilities are all
[16:24:18] <wakeup> greater than or equal to zero
[16:24:33] <wakeup> *some constrain
[16:24:51] <Guest54> hey guys, quick question about click. I want to expose a flag with three options: "yes", "no", "maybe". So a command would look like python3 foo.py --yes, or python3 foo.py --maybe, etc
[16:25:04] <jinsun> sveinse: I liked pyright maintainer's recent comment about enums :D https://github.com/microsoft/pyright/issues/3077#issuecomment-1046108727
[16:25:14] <Guest54> anyone how to do this? Is there such a thing as triplet flags?
[16:25:41] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9e12:6028:a9f5:a949:31b5) (Read error: Connection reset by peer)
[16:26:04] <nedbat> Guest54: you would have to specify the options separately, and they deal with possible conflicts in your code. It sounds like you might want a subcommand instead?
[16:26:05] <sveinse> jinsun: haha, nice
[16:27:07] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:4931:2cf9:1cab:5daf)
[16:27:30] <Guest54> nedbat thanks for the feedback. Do you mean the python subcommand module? I know you can do things like click.option("--foo/--bar"), and i was hoping it was possible to extend to 3 options in that fashion
[16:28:11] <nedbat> Guest54: i meant subcommands in the click sense.  Can you tell us more about what this option does? What should happen if you don't specify any value for it?
[16:28:28] <Guest54> nedbat in not specified default to an option
[16:28:35] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[16:28:38] <Guest54> for eg, default to "yes"
[16:28:47] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[16:29:04] <Guest54> if*
[16:29:21] *** Quits: lfs (~lfs@5.2.79.79) (Quit: Reconnecting)
[16:29:27] *** Joins: lfs (~lfs@5.2.79.79)
[16:29:39] *** Quits: spnotaniousspar (~spnotanio@2001:16a2:c573:b500:3f5c:c16e:bf41:c30d) (Quit: Leaving)
[16:29:55] *** Quits: kts (~kts@103.73.237.32) (Quit: Konversation terminated!)
[16:30:30] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:30:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:31:23] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:31:31] <Guest54> Usage of SHC XDB instead of scuba
[16:31:35] <Guest54> shttps://click.palletsprojects.com/en/8.0.x/options/#choice-options
[16:31:39] <Guest54> seems relevant
[16:31:44] <Guest54> oops ignore the first message
[16:32:09] <nedbat> Guest54: that would give you --option=yes, --option=no, --option=maybe
[16:33:00] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:33:36] *** Joins: Barones (~Barones@user/Barones)
[16:33:37] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:33:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:34:58] <ChrisWarrick> Guest54: (out of curiosity, what behavior is maybe?)
[16:35:01] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:35:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:35:24] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:4931:2cf9:1cab:5daf) (Ping timeout: 240 seconds)
[16:35:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:35:56] <Guest54> ChrisWarrick ah that was just a simplified example:)  In reality I'm trying to write a program that gives user the option to select any 3 algorithms, with one being a default
[16:36:12] <ChrisWarrick> simplified examples are often misleading
[16:36:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[16:36:47] <ChrisWarrick> yes/no/maybe made me think of --option, --no-option, default from config file
[16:37:19] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[16:37:22] <nedbat> Guest54: i would use one option with three values
[16:37:32] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:37:40] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:4931:2cf9:1cab:5daf)
[16:38:38] <nedbat> sveinse, jinsun: every time i try using enums, I feel like i was better off with just named constants
[16:39:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[16:39:29] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[16:39:41] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:39:43] *** Joins: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net)
[16:40:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:40:26] <sveinse> nedbat: That is exactly what I expected enums to be
[16:40:44] <jinsun> me too, the only part I found useful was the Flags
[16:41:02] <nedbat> i fear that match/case will end up in the same bucket
[16:43:18] <jinsun> yeah haven't felt like I really needed match anywhere yet
[16:43:25] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[16:44:16] *** Joins: palasso (~palasso@user/palasso)
[16:44:52] *** Quits: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net) (Ping timeout: 272 seconds)
[16:45:24] <jinsun> like it came very late to the language, and python allows doing other stuff much easily compared to other languages where match seems more elegant
[16:45:52] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:46:18] *** Joins: pycode (~pycode3@2001:b07:5d28:551:3d20:2cad:65be:4049)
[16:46:43] <sveinse> I tend to use dicts when the number of cases becomes too many
[16:47:16] <jinsun> match not being O(1) and not being an expression also doesn't help it
[16:47:38] *** Parts: SanchoPanza (~rose@2a03:ef42:4:67d0:4c2c:bcb:18fb:a79) (WeeChat 2.8)
[16:47:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:47:57] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[16:48:12] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[16:48:38] <sveinse> I'm stuck on older py anyways, so I haven't really embraced it yet. Neither with walrus operators (yet I lack it many times)
[16:49:24] <lfs> same 3.7.1
[16:49:29] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[16:49:33] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:7242) (Quit: Client closed)
[16:50:23] <sveinse> Right now I'm working on a package which must retain py2(.7) and py3 compatibility for a little longer
[16:50:40] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[16:51:17] <sveinse> I'm crying for not being able to use f-strings
[16:52:07] <sveinse> About that: What exactly happens if a class does not inherit object in py 2.7 ?
[16:52:31] <jinsun> py2 has  str.format at least? or are you stuck with % formatting?
[16:53:02] *** Quits: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7) (Quit: Leaving)
[16:53:10] *** Joins: dignissimus (~dignissim@79-70-31-37.dynamic.dsl.as9105.com)
[16:53:23] <sveinse> jinsun: the package use % a lot, but yeah, format is available
[16:53:23] *** Joins: wakeup (~wakeup@user/wakeup)
[16:53:37] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[16:54:32] *** Joins: greedom (~greedom@p200300de674e070045df047e1dedd5de.dip0.t-ipconnect.de)
[16:54:42] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:dd10:779a:8f5a:8f40)
[16:54:42] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:dd10:779a:8f5a:8f40) (Changing host)
[16:54:42] *** Joins: skapata (~Skapata@user/skapata)
[16:56:11] <dignissimus> 2 questions. Firstly, with the garbage collector doe it make sense to delete objects manually when they're no longer used? Trying to make sure devices with low memory capacity are able to run the program. Secondly, with distributing web server applications and HTTPS, how do people normally want that to be handled and  what should I support? Right now I only support HTTP but HTTPS can be added
[16:56:13] <dignissimus> through nginx and the like
[16:56:26] <dignissimus> s/doe/does
[16:57:48] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.101) (Ping timeout: 240 seconds)
[16:57:49] <nedbat> dignissimus: it is very very rare to need to delete objects manually. you probably don't need to.
[16:58:11] <sveinse> dignissimus: for the first q: It is not customary (I'm not sure it has any effect on GC) to delete objects maually
[16:58:36] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[16:58:54] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac6e:b715:5594:89d4)
[16:59:33] *** gentooclimax is now known as climax
[17:02:16] <dignissimus> Thanks!
[17:03:57] *** Joins: mitrokov (~mitrokov@77.222.63.216)
[17:04:37] *** Joins: thevar1able (~textual@212.123.202.115)
[17:04:44] <sveinse> dignissimus: it is much better, and simpler, to let an external front-end systems such as ngnix to handle HTTPS termination
[17:05:22] *** climax is now known as gentooclimax
[17:06:32] *** Joins: Koje (~Kohe@46.12.229.55.dsl.dyn.forthnet.gr)
[17:07:49] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:08:05] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[17:08:22] *** Quits: Kohe (~Kohe@79.103.22.84.dsl.dyn.forthnet.gr) (Ping timeout: 260 seconds)
[17:09:37] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[17:10:24] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[17:10:48] *** Joins: pycurious (~Adium@user/pycurious)
[17:10:53] *** Joins: fef (~thedawn@user/thedawn)
[17:11:15] *** Quits: fef (~thedawn@user/thedawn) (Client Quit)
[17:11:56] *** Quits: Ad1Tech_IT (~Ad1Tech@static.248.64.63.178.clients.your-server.de) (Read error: Connection reset by peer)
[17:12:04] *** Joins: yotsuba (~yotsuba@89-138-112-148.bb.netvision.net.il)
[17:12:14] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:12:19] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[17:12:27] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[17:12:45] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[17:13:13] *** Joins: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7)
[17:13:20] *** Joins: Ad1Tech_IT (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl)
[17:13:51] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:14:10] *** Joins: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net)
[17:15:21] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 245 seconds)
[17:15:22] *** gentooclimax is now known as climax
[17:16:44] *** Joins: zisu8 (~textual@p200300eab7194c000d47e2d8007d98df.dip0.t-ipconnect.de)
[17:17:09] *** Joins: stockholm (~Andreas@p200300d2c739ee007d5fdb53f81e45cc.dip0.t-ipconnect.de)
[17:17:10] *** climax is now known as gentooclimax
[17:17:10] *** Quits: Dantali0n (~Dantali0n@45-138-228-251.connected.by.freedominter.net) (Ping timeout: 272 seconds)
[17:17:39] *** Joins: Dantali0n (~Dantali0n@2a10:3781:15ed::2003)
[17:18:57] *** Quits: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[17:20:04] <caveman> how to make argparse show program's copyright when it displays the help menu?
[17:20:17] *** Quits: dld (~davidlowr@2601:197:600:1210:88cb:4d48:189:f8f8) (Ping timeout: 240 seconds)
[17:20:41] <caveman> i.e. when `app --help` or `app --slkghad;lhd --bad --syntaxx`
[17:20:59] <grym> put it in the description= ?
[17:23:17] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:23:19] <caveman> oh.  that's a thing.
[17:23:38] *** Joins: Barones (~Barones@user/Barones)
[17:23:57] <nedbat> caveman: i like using the module docstring as the description:  parser = argparse.ArgumentParser(description=__doc__)
[17:24:39] *** Joins: plastico (~plastico@neomutt/plastico)
[17:27:25] *** Quits: greedom (~greedom@p200300de674e070045df047e1dedd5de.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:27:37] *** Joins: bahamas (~lucian@84.232.140.52)
[17:27:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[17:28:10] *** Joins: skapata (~Skapata@user/skapata)
[17:28:30] *** Joins: dld (~davidlowr@2601:197:600:1210:88cb:4d48:189:f8f8)
[17:29:48] *** Quits: mpmc (~mpmc@user/mpmc) (Ping timeout: 240 seconds)
[17:30:24] *** Joins: Elodin (~elodin@user/elodin)
[17:31:10] *** Joins: mpmc (~mpmc@user/mpmc)
[17:31:38] *** Joins: jnaj0001[m] (~jnaj0001m@2001:470:69fc:105::1:cc40)
[17:32:24] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[17:33:10] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[17:33:10] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[17:33:14] *** Quits: zisu8 (~textual@p200300eab7194c000d47e2d8007d98df.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:33:38] *** Joins: Elodin (~elodin@user/elodin)
[17:35:07] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[17:35:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:36:03] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:36:56] *** Joins: ymwm (~yingmanwu@117.26.69.52)
[17:37:47] *** Joins: shundread (~shundread@dsl-trebng12-b04891-103.dhcp.inet.fi)
[17:38:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:39:03] *** Quits: ymwm (~yingmanwu@117.26.69.52) (Max SendQ exceeded)
[17:39:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:39:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:39:31] *** Joins: ymwm (~yingmanwu@117.26.69.52)
[17:39:55] *** Quits: shundread (~shundread@dsl-trebng12-b04891-103.dhcp.inet.fi) (Client Quit)
[17:39:55] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:40:06] *** Quits: thevar1able (~textual@212.123.202.115) (Quit: thevar1able)
[17:40:22] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:40:40] *** Joins: pankid (~quassel@pankid.club)
[17:41:03] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[17:41:21] *** Joins: thevar1able (~textual@212.123.202.115)
[17:41:24] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[17:42:35] *** Joins: jamea (~jamea@177.239.81.39)
[17:43:22] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[17:44:03] *** Quits: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7) (Quit: Leaving)
[17:44:32] *** Joins: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7)
[17:45:36] *** Quits: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7) (Remote host closed the connection)
[17:46:33] *** Joins: fef (~thedawn@user/thedawn)
[17:46:58] *** Joins: Elodin (~elodin@user/elodin)
[17:47:14] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[17:47:22] *** Joins: weedmic (~weedmic@93-173-109-49.bb.netvision.net.il)
[17:48:08] *** Joins: pro_z_ (~pro_z@37.214.78.161)
[17:48:50] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[17:49:24] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:49:24] *** Quits: pro_z (~pro_z@37.214.78.161) (Read error: Connection reset by peer)
[17:49:36] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[17:49:57] *** Joins: nomic (~nomic@185.192.69.129)
[17:50:07] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[17:51:38] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[17:51:51] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:52:13] *** Joins: Sadale (~Sadale@user/sadale)
[17:53:07] *** Quits: thevar1able (~textual@212.123.202.115) (Quit: thevar1able)
[17:54:10] *** Joins: thevar1able (~textual@212.123.202.115)
[17:54:28] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:54:43] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:54:57] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:55:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:56:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:57:12] *** Joins: Elodin (~elodin@user/elodin)
[17:59:10] *** Quits: rampart (~rampart@2.sub-174-250-16.myvzw.com) (Remote host closed the connection)
[18:00:00] *** Joins: rampart (~rampart@2.sub-174-250-16.myvzw.com)
[18:01:23] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[18:01:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[18:02:20] <widp> I am trying to read a file with decimals using python
[18:02:32] <widp> when I do a f.readline(), I get values like so:
[18:02:45] <widp> 'ÿþ8\x004\x000\x008\x006\x004\x005\x005\x00.\x000\x001\x005\x006\x002\x005\x00\n'
[18:02:57] <widp> how do I read them as floats?
[18:03:04] *** Quits: MeanEYE (~Mladen@87.116.162.168) (Read error: Connection reset by peer)
[18:03:48] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:04:06] <deniska> widp: where did you get this file from?
[18:04:35] <widp> I wrote those values into it with powershell
[18:04:49] <queue-> so thats shell code
[18:04:54] <queue-> and if thats what is in the file
[18:05:02] <queue-> it's reading as normal, \n is a nature trailer
[18:05:05] <queue-> natural*
[18:05:14] <queue-> https://www.guru99.com/python-file-readline.html
[18:05:19] <deniska> that looks vaguely like utf-16
[18:05:29] <queue-> maybe the first 3 chars
[18:05:35] <queue-> looks like c+p from zsh or some shit
[18:05:36] <queue-> idk
[18:05:36] <queue-> lol
[18:05:42] <queue-> the rest looks like shell code
[18:05:48] <lfs> xorl %eax %Eax
[18:05:51] <nedbat> it's utf-16
[18:05:53] <lfs> pushl %Eax
[18:06:00] <deniska> widp: try opening the file with `encoding='utf-16'` param to open()
[18:06:39] <widp> yup works
[18:06:43] <widp> thank you!
[18:06:58] *** Joins: Wh0 (~V@103.249.234.123)
[18:07:12] *** Quits: weedmic (~weedmic@93-173-109-49.bb.netvision.net.il) (Quit: Konversation terminated!)
[18:07:18] <sveinse> Not to rant over Windows, but their insistance on utf-16 is facinating
[18:07:25] *** Joins: Elodin (~elodin@user/elodin)
[18:07:31] <deniska> sveinse: windows unicode support predates utf-8
[18:07:39] <nedbat> sveinse: they were an early unicode adopter, before we learned.
[18:07:52] <queue-> it supports it but it doesnt mean it handles it well especially when it comes in waves
[18:07:57] *** Joins: bluedust_ (~bluedust@185.248.85.10)
[18:08:07] <queue-> ever tried adiirc with someone spamming /dev/urand ?
[18:08:20] <queue-> idc how fast your pc is, you'll experience text lag and other bs
[18:08:35] <queue-> linux handles unicode much better but sometimes it just wont parse
[18:08:37] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:95ca:ec3f:c36c:93e9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:08:39] *** Joins: aknot (~aknot@2603:900a:1503:17bb:3303:9389:1e5e:4a98)
[18:08:44] <queue-> in terms of speed
[18:09:54] <queue-> i come from a long line of ascii pumpers
[18:09:58] *** Joins: drbeco (~beco@2804:351c:dd01:f000:c3d0:abfe:ba01:7c9c)
[18:10:00] <queue-> the struggle is real lol
[18:10:23] <sveinse> Thankfully differences between the platform starts to even out. Ever so slowly.
[18:11:01] *** Quits: bluedust (~bluedust@103.148.21.74) (Ping timeout: 240 seconds)
[18:11:40] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[18:11:58] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[18:12:13] *** Quits: mitrokov (~mitrokov@77.222.63.216) (Ping timeout: 256 seconds)
[18:12:24] <sveinse> Myself I'm an avid 2.5 decade old Linux user, but I'm sitting in Windows most of the time these days -- and are pretty happy as wsl is at my disposal. Times changes.
[18:12:50] *** Joins: ice9 (~ice9@user/ice9)
[18:14:06] <lfs> sveinse: oh?
[18:14:17] <lfs> good ol putty
[18:14:28] <lfs> i just need the linux terminal to get my fix
[18:14:41] <lfs> and linux ist exactly the gaming platform
[18:15:13] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[18:15:19] <queue-> i dual boot over to windows w/ wsl2 as well
[18:15:21] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[18:15:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:15:48] <queue-> not a big fancy deal there, it is a nice setup but theres nothing like arch linux (hardened) with zfs and i3wm
[18:15:50] <sveinse> The only rant I have with python is that it insists on using venv/Scripts when the other platforms use venv/bin, which is annoying as I need to program OS type awareness into my scripts :(
[18:15:57] <queue-> i use keyboard shortcuts all day
[18:16:29] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-24.range86-150.btcentralplus.com)
[18:16:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[18:17:06] *** Joins: gurkengl1s (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[18:17:13] *** Quits: yotsuba (~yotsuba@89-138-112-148.bb.netvision.net.il) (Quit: Leaving)
[18:17:42] *** Joins: Elodin (~elodin@user/elodin)
[18:17:44] <queue-> i know just as much powershell as i do bash
[18:17:52] <queue-> linux wins all day, less resources used
[18:18:09] <queue-> plus i can run rancher on here w/ my k3s setup using nerdctl/kubectl
[18:18:47] <sveinse> yeah, lets not digress into a OS comparison discussion here
[18:18:50] <queue-> you can run rancher desktop on windows but the amount of ram it takes to run is a lot
[18:19:12] <queue-> when im on windows im at roughly 50% ram usage at all times due to all the vm's and containers
[18:19:19] <queue-> on linux, im using 15%
[18:19:35] *** Quits: noent (~quassel@user/sven/x-0967695) (Quit: noent)
[18:19:42] <queue-> if i want to game, i COULD use proton on linux but
[18:19:47] <queue-> id just dual boot over to windows :}
[18:19:53] <queue-> gaming day? windows day.
[18:19:57] *** Joins: noent (~quassel@squint.a-oben.org)
[18:19:57] *** Quits: noent (~quassel@squint.a-oben.org) (Changing host)
[18:19:57] *** Joins: noent (~quassel@user/sven/x-0967695)
[18:20:27] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[18:20:41] <queue-> its difficult to bounce back and forth like that tho when u automate tv show downloads and 6 tv shows that u watch are coming in on that day
[18:20:42] <queue-> lol
[18:20:53] <lfs> mmmmm compiling python
[18:22:01] <queue-> ill be honest though, docker desktop && wsl2 && vscode worked beautifully together sveinse
[18:22:22] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[18:22:51] <queue-> only thing i didnt like about docker desktop is the inability  to use vmware workstation, well i can but the VM's run like shit cause no cpu performance counters or vt-x enabling
[18:23:17] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:23:32] <sveinse> queue-: agreed, except I cannot use docker desktop at work any more. But that's a different discussion. But I use VSCode for all editing, including python development, local and remote.
[18:24:07] <queue-> use rancher desktop then
[18:24:34] <queue-> idk how well it integrates with vscode
[18:24:38] <queue-> but it all worked so nicely on windows
[18:24:40] <queue-> w/ docker
[18:24:53] <queue-> the docker plugin for vscode is nicer than the remote ssh plugin
[18:25:11] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-7856-da4b-8042-847f.res6.spectrum.com)
[18:25:57] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[18:26:35] <sveinse> I've done a few nginx+uwsgi+python web apps with docker. It's really neat. Makes distribution and deployment a breeze.
[18:26:40] *** Joins: Pandadub (~Barones@user/Barones)
[18:26:42] *** Quits: Pandadub (~Barones@user/Barones) (Remote host closed the connection)
[18:26:55] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:27:07] *** Joins: Barones (~Barones@user/Barones)
[18:27:15] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:27:49] *** Quits: drbeco (~beco@2804:351c:dd01:f000:c3d0:abfe:ba01:7c9c) (Remote host closed the connection)
[18:27:53] *** Quits: cYmen (~simon@squint.a-oben.org) (Quit: bye)
[18:27:54] *** Quits: noent (~quassel@user/sven/x-0967695) (Quit: noent)
[18:27:56] *** Joins: Elodin (~elodin@user/elodin)
[18:28:06] *** Joins: noent (~quassel@squint.a-oben.org)
[18:28:06] *** Quits: noent (~quassel@squint.a-oben.org) (Changing host)
[18:28:06] *** Joins: noent (~quassel@user/sven/x-0967695)
[18:28:07] *** Joins: cYmen (~simon@squint.a-oben.org)
[18:28:08] *** Joins: drbeco (~beco@2804:351c:dd02:6800:8a6d:70bc:984:398e)
[18:28:20] <grym> it does
[18:28:25] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:28:25] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[18:29:01] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:29:43] *** Joins: fef (~thedawn@user/thedawn)
[18:29:45] <lfs> well my lfs project is getting shelved till the morning
[18:29:54] <lfs> that much is propably true
[18:30:03] <lfs> (ran out of free space on my vps)
[18:30:06] *** Quits: noent (~quassel@user/sven/x-0967695) (Client Quit)
[18:30:07] *** Quits: cYmen (~simon@squint.a-oben.org) (Client Quit)
[18:30:19] *** Joins: noent (~quassel@user/sven/x-0967695)
[18:30:22] *** Joins: cYmen (~simon@squint.a-oben.org)
[18:30:37] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[18:30:45] <lfs> should prolly just buy another vps anyhow given its outdated nature
[18:31:01] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[18:32:13] <sveinse> lfs: Familiar with Yocto? It's a lfs-ish system to build custom linux-es. We use that a lot at work for embedded systems. It's no small suite.
[18:32:16] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[18:33:11] <lfs> sveinse: nah im still at my first lfs build
[18:33:25] <lfs> but getting a few BIG sdcards tomorrow
[18:33:42] <lfs> but ye need a hardened lfs build for my embedded project anyhow
[18:33:47] <lfs> its a security device
[18:33:49] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[18:34:01] <lfs> but every security device can be used by an intruder against itself NO exception
[18:34:24] <lfs> saw a documentary about an ex burgular
[18:34:38] <lfs> and they asked him if an alarm system was smart
[18:34:39] *** Quits: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com) (Changing host)
[18:34:39] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[18:34:40] <lfs> he said no
[18:35:03] <lfs> he would trip the alarm on purpouse but dress up as the alarm company guy
[18:35:20] <lfs> and just "oh i happened to be just around the corner doing an install lucky you"
[18:35:30] <lfs> then he'd rob them blind
[18:35:39] *** Parts: cgrage (~cgrage@107.175.102.107) ()
[18:35:43] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[18:35:51] <lfs> im guessing he's incorporating the whole documentary into some heist
[18:35:54] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[18:36:05] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:36:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:36:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:36:18] <lfs> yocto hmm
[18:36:55] <lfs> nice ill give it a try
[18:37:48] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:3df8:cd30:3e5c:fc25)
[18:38:09] *** Joins: Elodin (~elodin@user/elodin)
[18:38:10] *** Quits: gurkengl1s (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Quit: leaving)
[18:38:32] *** Quits: cYmen (~simon@squint.a-oben.org) (Quit: bye)
[18:38:33] *** Quits: noent (~quassel@user/sven/x-0967695) (Quit: noent)
[18:39:38] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:39:40] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[18:39:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[18:40:13] *** Parts: yth (~yth@user/yth) ()
[18:41:08] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9e12:e479:e8f5:a3ab:d5e)
[18:41:19] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[18:41:20] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:42:38] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[18:42:41] *** Joins: whaley (~whaley@2603-6080-a301-33d1-b00a-caf2-c054-9cbb.res6.spectrum.com)
[18:43:02] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:43:03] *** Quits: tracey (~trace@user/trace) (Remote host closed the connection)
[18:43:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:4931:2cf9:1cab:5daf) (Ping timeout: 240 seconds)
[18:44:25] <otisolsen70> How can I escape { in doctext of a function?
[18:44:32] <otisolsen70> docstring
[18:44:49] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[18:44:52] <nedbat> otisolsen70: why does it need escaping? Are you using an f-string?
[18:45:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:45:11] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:45:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:45:33] <otisolsen70> I have a docstring in a function that contains the text {HTTP_HOST} and it should NOT be replaced. I also have some other template strings there like {foo} that I am replacing with the value of a variable 'foo'.
[18:45:50] <otisolsen70> Problem is, it now complains about KeyError on HTTP_HSOT
[18:45:53] <nedbat> otisolsen70: how are you doing the replacing?
[18:46:35] <otisolsen70> nedbat, https://0bin.net/paste/QwRGEIFf#Ybz18Q9nhPgflThRsxY8aRIffZWSpoSK-mA1AwpEbKi
[18:47:00] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[18:47:17] <otisolsen70> nedbat, I run func.__doc__.format()
[18:47:26] <nedbat> otisolsen70: two braces:  {{HTTP_HOST}}
[18:47:30] <otisolsen70> Ah!
[18:47:33] <otisolsen70> Thanks
[18:47:37] *** Quits: knkay (~knkay@213.190.30.120) (Quit: ZNC 1.8.2 - https://znc.in)
[18:48:24] *** Joins: Elodin (~elodin@user/elodin)
[18:48:36] <otisolsen70> What if I then want my variable to actually end up inside braces?
[18:48:47] <nedbat> otisolsen70: btw, you might like:  for step_no, step in enumerate(steps, start=1):
[18:48:57] <otisolsen70> E.g. if I want the value of foo to end up like {foo} ?
[18:49:10] <otisolsen70> nedbat, right!
[18:49:18] <nedbat> otisolsen70: do you have HTTP_HOST as a variable?
[18:49:38] <otisolsen70> nedbat, nope.
[18:49:41] <otisolsen70> nedbat, I have foo
[18:49:53] <otisolsen70> And need to replace it where it says {foo}
[18:49:55] <nedbat> otisolsen70: isn't {foo} already replaced with the value of foo?
[18:49:59] <otisolsen70> But I need braces outside of that
[18:50:09] *** Quits: drbeco (~beco@2804:351c:dd02:6800:8a6d:70bc:984:398e) (Quit: Leaving)
[18:50:43] <otisolsen70> nedbat, yes. But for example: RewriteCond %%{{HTTP_HOST}}   !^{sitename}\\.dk [NC]
[18:50:50] <nedbat> otisolsen70: "{{{x}}}".format(x=1)  -->  "{1}"
[18:50:59] <otisolsen70> OH.
[18:51:52] *** Joins: trace987 (~trace@user/trace)
[18:53:13] <otisolsen70> Works. Thanks! :D
[18:53:14] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[18:53:41] *** Joins: Elodin (~elodin@user/elodin)
[18:53:52] *** Joins: _Ad1Tech_ (~Ad1Tech@h104101.man.tk-internet.pl)
[18:55:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:55:42] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:56:43] *** Quits: Ad1Tech_IT (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl) (Ping timeout: 256 seconds)
[18:57:16] *** Joins: noent (~quassel@squint.a-oben.org)
[18:57:16] *** Quits: noent (~quassel@squint.a-oben.org) (Changing host)
[18:57:16] *** Joins: noent (~quassel@user/sven/x-0967695)
[18:57:17] *** Joins: cYmen (~simon@squint.a-oben.org)
[18:58:10] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[18:59:03] *** Joins: zisu8 (~textual@p200300eab7194c00b903ddbe7cdacccb.dip0.t-ipconnect.de)
[19:00:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:01:20] *** Joins: akk (~akk@75.161.130.204)
[19:02:11] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac6e:b715:5594:89d4) (Ping timeout: 252 seconds)
[19:03:02] *** Joins: bluedust (~bluedust@103.148.21.74)
[19:03:55] *** Joins: Elodin (~elodin@user/elodin)
[19:03:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[19:04:08] *** Joins: jdmark (~jdmark@user/jdmark)
[19:04:28] *** Joins: drbeco (~beco@2804:351c:dd02:6800:c024:382c:90ec:dcb6)
[19:04:32] *** Joins: BruceDoh (~BruceDoh@xplr-208-114-129-25.xplornet.com)
[19:05:52] <Omega037> morning yall
[19:06:03] *** Quits: whaley (~whaley@2603-6080-a301-33d1-b00a-caf2-c054-9cbb.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:06:44] *** Quits: bluedust_ (~bluedust@185.248.85.10) (Ping timeout: 272 seconds)
[19:07:05] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[19:08:25] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[19:10:04] *** Quits: zisu8 (~textual@p200300eab7194c00b903ddbe7cdacccb.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:10:43] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Quit: WeeChat 3.4)
[19:11:10] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[19:12:04] *** Joins: paul424 (~tom@ip-5-172-237-214.multi.internet.cyfrowypolsat.pl)
[19:12:59] *** Joins: whaley (~whaley@2603-6080-a301-33d1-b00a-caf2-c054-9cbb.res6.spectrum.com)
[19:13:38] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:ada7:381:fe8a:3c4d)
[19:14:09] *** Joins: Elodin (~elodin@user/elodin)
[19:16:43] *** Quits: widp (~user@124.123.107.171) (Remote host closed the connection)
[19:18:03] *** Joins: Dotz0cat (~Dotz0cat@h161.215.213.151.dynamic.ip.windstream.net)
[19:18:48] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[19:19:58] *** Joins: MeanEYE (~Mladen@87.116.177.143)
[19:20:02] *** Quits: ejjfunky (~ejjfunky@125.164.16.97) (Ping timeout: 240 seconds)
[19:20:27] *** Quits: ymwm (~yingmanwu@117.26.69.52) (Ping timeout: 250 seconds)
[19:22:49] *** Joins: wyclif (~wyclif@user/wyclif)
[19:23:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[19:23:24] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:24:03] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:d6d8:77f:d540:d1a) (Quit: pvergain)
[19:24:22] *** Joins: Elodin (~elodin@user/elodin)
[19:24:42] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[19:24:53] *** Joins: Auron (Auron956@user/auron)
[19:27:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:27:40] *** Joins: greedom (~greedom@p200300de674e070045df047e1dedd5de.dip0.t-ipconnect.de)
[19:28:04] *** Joins: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net)
[19:28:10] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[19:29:00] *** Joins: wyclif (~wyclif@user/wyclif)
[19:29:00] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[19:30:15] *** Quits: whaley (~whaley@2603-6080-a301-33d1-b00a-caf2-c054-9cbb.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:30:37] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:31:48] *** Quits: moog_ (~moog@107.126.53.115) (Remote host closed the connection)
[19:32:13] *** Joins: moog_ (~moog@107.126.53.115)
[19:32:26] *** Quits: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net) (Ping timeout: 252 seconds)
[19:32:35] *** Quits: nehsou^ (~nehsou@50-202-219-146-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[19:33:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[19:34:12] *** Joins: dsrt^ (~dsrt@50-202-219-146-static.hfc.comcastbusiness.net)
[19:34:31] *** Joins: wyclif (~wyclif@user/wyclif)
[19:34:35] *** Joins: Elodin (~elodin@user/elodin)
[19:35:01] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:35:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:36:19] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:36:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:37:14] *** Joins: kts (~kts@103.73.237.33)
[19:38:54] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[19:40:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:42:56] *** Joins: goldfish (~goldfish@user/goldfish)
[19:42:56] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:43:01] *** Joins: kisko (~kisko___@40.red-79-146-74.dynamicip.rima-tde.net)
[19:43:24] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[19:43:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:44:49] *** Joins: Elodin (~elodin@user/elodin)
[19:45:38] *** Joins: goldfish (~goldfish@user/goldfish)
[19:46:38] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[19:46:46] *** Joins: ice9 (~ice9@user/ice9)
[19:47:17] <gurkenglas> When I register a hook with a pytorch module I have to remove it later. This sounds like I should be using with statements instead.
[19:47:49] <gurkenglas> How might I make that happen?
[19:48:17] <gitesh> hi I feel like I don't deserve to be a django dev
[19:48:25] <gitesh> I'm reading django book but i will not probably do it myself
[19:48:41] <gitesh> *i will not be able to
[19:48:54] *** Quits: ArtfulDodger_ (~ArtfulDod@81.126.81.79.rev.sfr.net) (Ping timeout: 260 seconds)
[19:49:31] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[19:49:52] <lfs> gitesh: but its easy
[19:50:20] <lfs> well i do admit it has some learning curve but
[19:50:30] <lfs> after init learning curve its smooth sailing
[19:50:34] <lfs> very smooth
[19:50:41] <nedbat> gurkenglas: can you pastebin how you do it now?
[19:51:28] <gitesh> lfs: shall I continue reading book towards finishing and check if i will be able to do that or not?
[19:51:40] <lfs> not not
[19:51:57] <lfs> well just start coding a little
[19:51:57] <gitesh> also there are some features of python used to django which was not covered in the courses i took
[19:52:21] <lfs> just make ONE website like an example and build from there
[19:52:23] *** Joins: bahamas (~lucian@84.232.140.52)
[19:52:46] <lfs> after that its smooth sailing
[19:52:49] <gitesh> lfs: the book is project based but i am just typing code and stuff is happening
[19:52:56] <lfs> yes
[19:53:05] <lfs> keep doing that and eventually you will reach a peak
[19:53:17] <lfs> and its all downhill from there but you have a clear view of the land
[19:53:22] <lfs> i've been up that peak before
[19:53:22] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[19:53:29] <lfs> and the view is gorgeous
[19:53:44] <gitesh> lfs: i want to really explore django but i don't know if it's done in intial or later
[19:55:02] <lfs> idk only done one or 2 tutorials in django but i will use django to launch my projects
[19:55:02] *** Joins: Elodin (~elodin@user/elodin)
[19:55:26] <lfs> got like 1 company that is "DONE"
[19:55:31] *** Joins: summersault (~summersau@179.221.251.36)
[19:55:41] <lfs> well its never "DONE" but its done in the sense that it generates me a living
[19:55:52] *** Joins: xkuru (~xkuru@user/xkuru)
[19:55:54] <lfs> 1 is almost DONE
[19:56:02] <lfs> but almost done is as good as halfway done
[19:56:24] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:56:53] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c800:b907:a7af:3732)
[19:56:57] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Ping timeout: 240 seconds)
[19:57:03] <lfs> but i know where this path starts
[19:57:14] <lfs> i remember what it was like to be a beginner
[19:57:16] <lfs> wait i dont
[19:57:23] <lfs> i kind of forgot how hard it felt
[19:58:02] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[19:58:19] <lfs> gitesh: idk i never got to REALLY explore django but i feel most of it gets learned or you know what to do and how to do it once ur done with the first tutorial
[19:58:45] *** Joins: summersault (~summersau@179.221.251.36)
[19:59:01] <gitesh> ok
[19:59:20] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[19:59:20] <lesshaste> hi
[19:59:26] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[19:59:33] <lesshaste> how can I download https://github.com/dwyl/english-words/blob/master/words.txt directly in my python code into a list?
[20:00:06] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:00:42] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Quit: Leaving)
[20:00:47] <newdimension> In tqdm is there a way to have the time elapsed on a new line? i.e. have the bar on one line, and the time elapsed on the following one
[20:00:57] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:01:14] <nedbat> lesshaste: use requests to get this: https://raw.githubusercontent.com/dwyl/english-words/master/words.txt  then resp.text().split()
[20:01:51] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:02:01] *** Quits: kisko (~kisko___@40.red-79-146-74.dynamicip.rima-tde.net) (Quit: Leaving)
[20:02:26] *** Quits: giesen (~ggiesen@ego.giesen.me) (Ping timeout: 245 seconds)
[20:02:33] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:02:36] *** Joins: trampel (~trampel@2601:602:9a00:49d:49f1:a40f:2b6c:577a)
[20:02:46] *** Joins: foobaz2124317 (~foobaz212@109.249.187.66)
[20:02:53] *** Joins: crashrep (~crashrep@user/crashrep)
[20:02:57] *** Quits: foobaz2124317 (~foobaz212@109.249.187.66) (Client Quit)
[20:03:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[20:03:21] *** Joins: foobaz2124317 (~foobaz212@109.249.187.66)
[20:03:52] *** Quits: foobaz2124317 (~foobaz212@109.249.187.66) (Client Quit)
[20:03:58] <vlt> lesshaste: or .splitlines()
[20:04:29] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[20:05:17] *** Joins: Elodin (~elodin@user/elodin)
[20:05:39] *** Quits: jringstad__ (~Amadiro@31.11.55.179) (Ping timeout: 272 seconds)
[20:06:04] <gurkenglas> What do I do instead of "with contextlib.nested(*[Hook(m) for m in model.modules()]):" contextlib documentation says it's deprecated because it now works natively, but it doesn't actually say how to do it
[20:06:26] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[20:06:41] *** Joins: jringstad__ (~Amadiro@31.11.55.179)
[20:07:18] <lesshaste> nedbat
[20:07:25] <gurkenglas> it's not "with *[Hook(m) for m in model.modules()]:", it's not "with *(Hook(m) for m in model.modules()):", or either without the *. and i failed to google it up
[20:07:26] *** Joins: Cera (~Cera@user/Cera)
[20:08:03] *** Joins: freefall (~owner@2600:6c40:1600:39ec:75b0:f98:b9e9:5b76)
[20:08:17] <lericson> it's just a tuple gurkenglas?
[20:08:32] <freefall> ok need a life line.... https://bpa.st/R4KQ
[20:08:51] <freefall> im try to use a listbox and try to get the scroll bar to work and to fill out...
[20:09:11] <freefall> i cant use pack method nor can i use grid as it kill my buttons
[20:09:11] <gurkenglas> lericson: "with tuple([Hook(m) for m in model.modules()]):" also doesn't work, gives me AttributeError: __enter__
[20:09:22] <freefall> using tkinter
[20:09:38] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[20:10:38] <lesshaste> nedbat  that worked but I end up with bytes as in b'2'.  Is there a way to get strings instead?
[20:10:53] <lericson> gurkenglas: turns out that the syntax is not a tuple
[20:10:55] <lericson> just tuple syntax
[20:11:07] <nedbat> lesshaste: you used .text ?
[20:11:14] <lesshaste> nedbat ah I need .text.  Thanks
[20:11:15] *** Joins: giesen (~ggiesen@ego.giesen.me)
[20:11:19] <lesshaste> I used.content
[20:11:32] <lericson> gurkenglas: i guess ExitStack then
[20:11:36] <gurkenglas> lericson: i don't follow. "with Hook(m) for m in model.modules():" also didn't do it.
[20:11:48] <lericson> gurkenglas: i'm saying there is no way to do that
[20:12:06] <gurkenglas> lericson, but they deprecated contextlib.nested
[20:12:43] <lericson> idk what that is
[20:12:48] <gurkenglas> to the point where "with contextlib.nested(*[Hook(m) for m in model.modules()]):" throws an error
[20:12:56] <lericson> but you can use like i said contextlib.ExitStack
[20:13:31] <gurkenglas> you did?
[20:13:41] <lericson> 17:41 < lericson> gurkenglas: i guess ExitStack then
[20:14:12] <lericson> large size oof, no ruskie airplanes over the EU
[20:14:15] <lericson> sorry wrong channel
[20:14:18] <gurkenglas> oh there, irssi's "/sb search" didn't scroll so i thought there was no result <.<)
[20:14:36] *** gentooclimax is now known as climax
[20:14:41] <gurkenglas> disturbing oof :P
[20:14:49] <freefall> nedbat: can you help me again?
[20:15:36] *** Joins: Elodin (~elodin@user/elodin)
[20:15:55] <gurkenglas> fine ill write my own nested
[20:16:05] *** Joins: Enitin (~Enitin@82.102.22.85)
[20:16:08] *** Joins: Guest0 (~Guest0@79-68-168-166.dynamic.dsl.as9105.com)
[20:16:21] *** Quits: thevar1able (~textual@212.123.202.115) (Quit: thevar1able)
[20:17:11] *** Joins: ArtfulDodger (~ArtfulDod@147.210.204.164)
[20:17:14] *** Parts: Guest0 (~Guest0@79-68-168-166.dynamic.dsl.as9105.com) ()
[20:17:23] *** Quits: ArtfulDodger (~ArtfulDod@147.210.204.164) (Remote host closed the connection)
[20:17:34] *** Joins: thevar1able (~textual@212.123.202.115)
[20:18:57] *** Quits: Dotz0cat (~Dotz0cat@h161.215.213.151.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[20:19:25] <nedbat> freefall: i don't know that stuff :)
[20:19:32] <freefall> oh ok
[20:20:01] <freefall> for some reason pack, grid, and place cant play nice with each other
[20:20:25] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[20:20:47] *** Joins: Elodin (~elodin@user/elodin)
[20:22:33] <lfs> off
[20:23:10] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[20:23:47] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:23:54] *** Quits: freefall (~owner@2600:6c40:1600:39ec:75b0:f98:b9e9:5b76) (Quit: Leaving)
[20:25:38] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[20:26:00] *** Joins: Elodin (~elodin@user/elodin)
[20:26:17] *** Joins: Babar_ (~Babar@171.233.210.64)
[20:26:17] *** Quits: Babar (~Babar@171.233.210.64) (Killed (osmium.libera.chat (Nickname regained by services)))
[20:26:17] *** Babar_ is now known as Babar
[20:26:41] <lfs> yo
[20:28:05] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:28:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:28:22] *** Joins: upsala (~zcb@185.209.196.139)
[20:28:26] *** Quits: climax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 272 seconds)
[20:28:29] <newdimension> Anyone know how I can add a new line in tqdm's progress bar?
[20:28:59] <lfs> newdimension: yo
[20:29:41] *** Quits: thevar1able (~textual@212.123.202.115) (Quit: thevar1able)
[20:30:01] *** Joins: georgios (~georgios@user/georgios)
[20:30:24] *** Joins: widp (~widp@124.123.107.171)
[20:30:25] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[20:30:54] <bjs> newdimension: you mean one progress bar that takes up multiple lines, or having multiple "bars" ?
[20:31:03] *** Joins: thevar1able (~textual@212.123.202.115)
[20:31:08] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:31:49] <newdimension> bjs: I'm hoping to do it like so: {description} \n {bar} \n {elapsed}. So it's three lines
[20:32:01] *** Quits: pycode (~pycode3@2001:b07:5d28:551:3d20:2cad:65be:4049) (Ping timeout: 245 seconds)
[20:32:46] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:1d4f:159b:d421:a8bc) (Quit: Leaving)
[20:32:55] *** Quits: thevar1able (~textual@212.123.202.115) (Client Quit)
[20:33:29] *** Joins: thevar1able (~textual@212.123.202.115)
[20:33:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[20:34:39] *** Quits: andreasbuhr (~quassel@p549db2d8.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:34:53] <lfs> mofo
[20:35:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:35:15] *** Joins: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net)
[20:35:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:35:33] *** Joins: fanis30 (~anon@adsl-141.176.58.137.tellas.gr)
[20:35:35] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[20:35:44] <bjs> newdimension: hmm, I think you'd be best making 3 "bars"
[20:36:10] *** Quits: thevar1able (~textual@212.123.202.115) (Client Quit)
[20:36:13] *** Joins: Elodin (~elodin@user/elodin)
[20:36:47] *** Quits: kts (~kts@103.73.237.33) (Ping timeout: 252 seconds)
[20:37:05] *** Joins: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net)
[20:37:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:37:20] *** Joins: foobaz2124317 (~foobaz212@109.249.187.66)
[20:37:29] <lfs> fbi are evil
[20:38:23] <newdimension> bjs: How would that work for the time elapsed? Wouldn't it need to get the progress from the other bar?
[20:39:03] <bjs> newdimension: I mean if you make all 3 at the same time, wouldn't the time elapsed be the same for all of them?
[20:40:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[20:40:38] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[20:40:48] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:c8a0:f99f:92aa:2459)
[20:41:27] *** Joins: Thebigfatgiant (~Thebigfat@116.74.178.104)
[20:41:33] *** Quits: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:41:47] *** Parts: Thebigfatgiant (~Thebigfat@116.74.178.104) ()
[20:42:49] *** Quits: magla (~gelignite@d5364c1c.access.ecotel.net) (Quit: Stay safe!)
[20:43:44] <newdimension> bjs: valid point, but how would I attach 3 bars to one loop?
[20:44:26] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[20:45:37] <bjs> newdimension: well, the same way you attach it to one loop
[20:46:07] <bjs> newdimension: you can also do it manually by calling tqdm.tqdm() without an iterable argument.
[20:46:29] *** Joins: Elodin (~elodin@user/elodin)
[20:46:35] *** Quits: bluedust (~bluedust@103.148.21.74) (Remote host closed the connection)
[20:46:46] *** Joins: Guest50 (~Guest50@pool-71-125-47-57.nycmny.fios.verizon.net)
[20:47:25] <bjs> (and then calling update() manually)
[20:47:29] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 256 seconds)
[20:47:55] *** Joins: txtsd (~txtsd@user/txtsd)
[20:48:31] *** Quits: Guest50 (~Guest50@pool-71-125-47-57.nycmny.fios.verizon.net) (Client Quit)
[20:48:42] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[20:49:02] <newdimension> bjs: When I tried to nest the tqdms the inner loop printed multiple times https://dpaste.org/J44P
[20:50:01] <bjs> newdimension: what is "bar_format" ?
[20:51:00] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[20:52:57] *** Joins: zebrag (~chris@user/zebrag)
[20:52:59] <newdimension> bjs: bar_format = '[{n_fmt}/{total_fmt}] {bar} {percentage:3.0f}% Time Elapsed: {elapsed}'
[20:53:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[20:53:30] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:54:17] <bjs> newdimension: hmm, i think it should work (although it's weird you want to draw *two* bars)
[20:54:38] <bjs> newdimension: you can make the tqdm.tqdm() objects manually with a position and update() them.
[20:54:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:54:53] <schemanic[m]> Hi. I'm having a hard time understanding how to create an authenticated session to site X that allows login through Google
[20:54:59] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:55:00] <newdimension> bjs: I'm going to format the second bar to just show time elapsed
[20:55:33] <schemanic[m]> I keep seeing examples of how to do this with flask, and I'm not building a webapp - I'm building a script that's meant to log in and download things that are blocked by authentication
[20:55:51] <bjs> newdimension: afaik what you showed should work, so long as nothing is inserting a newline (no print()s) and you're not hitting return on your keyboard or anything
[20:55:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:56:41] <schemanic[m]> All I want to do is authenticate to google and then be able to start downloading things from patreons that I subscribe to.
[20:56:43] *** Joins: Elodin (~elodin@user/elodin)
[20:57:15] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Client closed)
[20:57:54] *** flooded is now known as _flood
[20:58:36] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 240 seconds)
[20:58:38] <newdimension> schemanic[m]: You either want requests or selenium. Not sure how Flask came into play
[20:59:11] <schemanic[m]> I'm already looking at those. I'm saying that all the examples I'm finding talk about doing it in flask
[20:59:13] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[20:59:19] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac6e:b715:5594:89d4)
[20:59:27] <newdimension> schemanic[m]: What keywords are you using to search?
[20:59:28] <schemanic[m]> I'm having a difficult time understanding what I need to do, because none of the examples show what I'm trying to do
[20:59:36] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:59:53] <schemanic[m]> 'log into website via google oauth'
[21:00:02] *** Quits: foobaz2124317 (~foobaz212@109.249.187.66) (Quit: Client closed)
[21:00:08] <schemanic[m]> They all seem to think I'm trying to do things with google and not with patreon
[21:00:10] <newdimension> bjs: It's printing the progress bar multiple times like dpaste shows :/. Guess I'll give up and keep it on one line
[21:00:14] <schemanic[m]> I need to auth to patreon THROUGH google
[21:00:18] *** Joins: foobaz2124317 (~foobaz212@109.249.187.66)
[21:00:23] *** Quits: foobaz2124317 (~foobaz212@109.249.187.66) (Client Quit)
[21:00:48] *** Joins: foobaz2124317 (~foobaz212@109.249.187.66)
[21:00:53] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Client Quit)
[21:00:58] <bjs> newdimension: what terminal/shell/os are you using out of interest?
[21:01:14] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[21:01:15] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[21:01:18] *** Quits: foobaz2124317 (~foobaz212@109.249.187.66) (Client Quit)
[21:01:20] <newdimension> bjs: Good question! That might be relevant. I'm running it in Pycharm
[21:01:24] *** Joins: NiD27 (~nid27@49.205.148.184)
[21:02:00] <newdimension> schemanic[m]: This might be relevant https://docs.python-requests.org/en/latest/user/authentication/
[21:02:03] *** Joins: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net)
[21:02:16] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[21:02:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:02:26] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[21:02:30] *** Joins: Sadale (~Sadale@user/sadale)
[21:05:14] <newdimension> schemanic[m]: See second answer here https://stackoverflow.com/questions/18014479/using-the-python-request-library-to-get-google-oauth2-tokens
[21:05:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:06:57] *** Joins: Elodin (~elodin@user/elodin)
[21:07:13] *** Joins: kts (~kts@103.73.237.18)
[21:07:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[21:07:57] *** Quits: NiD27 (~nid27@49.205.148.184) (Remote host closed the connection)
[21:09:14] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[21:09:45] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[21:10:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[21:10:45] *** Joins: bahamas (~lucian@84.232.140.52)
[21:11:00] *** Joins: lbracher (~lucas@ptr-178-51-244-105.dyn.mobistar.be)
[21:11:04] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489ay2lp44nhh5u.ipv6.telus.net)
[21:11:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[21:11:34] *** Joins: fldme (~fldme@178.49.152.151)
[21:12:02] <lbracher> Hi there! I have 4 possible exceptions that could happen on a try block, and the treatment is the same for all of them. Is it possible to declare the exceptions with an "or" operator or condense them? Thanks in advance!
[21:13:55] <nedbat> lbracher: `except (ValueError, TypeError, ZeroDivideError) as exc:`
[21:14:24] <lbracher> nedbat, thanks!
[21:14:57] *** Joins: arinov_ (~arinov@213.194.126.155)
[21:15:06] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[21:15:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[21:15:12] *** Joins: Elodin (~elodin@user/elodin)
[21:17:11] <schemanic[m]> Thank you newdimension, I appreciate the extra info
[21:17:31] *** Joins: jay-m126 (~jay-m@154.72.150.253)
[21:17:35] *** Joins: jay-m126_ (~jay-m@154.72.150.253)
[21:17:36] *** Joins: jay-m1261 (~jay-m@154.72.150.253)
[21:17:37] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:18:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:18:56] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[21:19:12] *** Joins: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it)
[21:19:27] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[21:20:25] *** Joins: theo (~theo@user/theo)
[21:20:50] <schemanic[m]> newdimension: are you saying that I don't acttually need to try and authenticate to patreon or the target site, what I need to do is end up with a session that is authenticated to Google, and then the permissions exchange that happened when I logged into Patreon manually will automatically be part of the session?
[21:21:46] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 260 seconds)
[21:22:03] *** Quits: Aaron_ (~Aaron@c-73-73-137-44.hsd1.il.comcast.net) (Ping timeout: 256 seconds)
[21:22:17] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[21:22:21] <newdimension> schemanic[m]: You definitely need to authenticate to Paterion. You mentioned that they use Google Auth. Learn how to authenticate with google auth and one of the steps is going to be to set the service you're authenticate with, and that'll be Patreion
[21:22:45] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[21:23:13] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[21:23:15] *** Quits: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it) (Client Quit)
[21:24:27] <schemanic[m]> Okay. So, is the material that I've been seeing in Patreon's documentation describing using Patreon as the identity provider or something, and what I really need to do is target Google as the identify provider and pass in something that says I'm trying to access Patreon?
[21:25:01] *** Joins: thevar1able (~textual@212.123.202.115)
[21:25:27] *** Joins: Elodin (~elodin@user/elodin)
[21:25:27] <newdimension> schemanic[m]: I've never done oauth, but there's a bunch of guides that explain how to do it. You're looking to learn how to authenticate using oauth. Authenticating to Paterion will be the same steps, but one of the urls pointing to them
[21:26:39] <schemanic[m]> Like I said, I'm getting a bunch of information about how to create an application which I want to allow other users to log in via google oauth.
[21:27:02] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[21:27:37] <schemanic[m]> almost every time I find an SO article that describes the situation I'm talking about, it's completely unanswered
[21:27:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[21:28:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:28:45] *** Quits: trampel (~trampel@2601:602:9a00:49d:49f1:a40f:2b6c:577a) (Quit: Leaving)
[21:29:20] *** Joins: not_no2 (~not_not@193.178.220.10)
[21:30:10] <not_no2> yow
[21:30:10] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[21:30:20] *** Joins: bloody (~bloody@user/bloody)
[21:30:36] *** not_no2 is now known as not_no3
[21:31:37] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:32:36] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[21:32:58] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[21:33:03] *** Quits: not_no3 (~not_not@193.178.220.10) (Client Quit)
[21:33:26] *** Quits: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net) (Ping timeout: 252 seconds)
[21:34:04] <schemanic[m]> yow?
[21:34:31] *** Joins: foobaz2124317 (~foobaz212@109.249.187.66)
[21:34:33] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:1484:c44b:e205:8211)
[21:35:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:35:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:35:41] *** Joins: Elodin (~elodin@user/elodin)
[21:36:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[21:36:28] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[21:36:33] <lfs> yow
[21:37:13] <orbisvicis> I'm trying to evaluate a function with intermediate values around math.e**100000
[21:37:24] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9e12:e479:e8f5:a3ab:d5e) (Ping timeout: 240 seconds)
[21:37:31] <orbisvicis> is there any way to workaround the overflow?
[21:37:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:37:36] *** Quits: foobaz2124317 (~foobaz212@109.249.187.66) (Client Quit)
[21:38:10] *** Joins: foobaz2124317 (~foobaz212@109.249.187.66)
[21:38:16] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[21:39:17] <lericson> orbisvicis: log representation?
[21:39:34] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[21:39:53] *** Joins: Elodin (~elodin@user/elodin)
[21:41:08] *** Joins: Narrat (~omnius@p200300df5f126b5206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:41:10] *** Quits: BruceDoh (~BruceDoh@xplr-208-114-129-25.xplornet.com) (Read error: Connection reset by peer)
[21:41:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[21:41:24] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:41:37] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[21:42:03] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[21:42:07] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[21:42:22] *** Joins: BruceDoh (~BruceDoh@xplr-208-114-129-25.xplornet.com)
[21:42:24] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:43:00] <orbisvicis> I'm afraid its not possible to simplify the function any further as the value is then processed with a non-elementary function
[21:43:06] <orbisvicis> I was hoping for a software solution
[21:43:28] *** Quits: kmh (~kmh@2a00:6020:5004:6800:d52f:610b:c364:63c2) (Quit: Leaving)
[21:43:38] <lericson> orbisvicis: Decimal?
[21:44:09] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[21:44:12] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[21:44:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:45:01] *** Joins: wyclif (~wyclif@user/wyclif)
[21:45:51] *** Quits: Koje (~Kohe@46.12.229.55.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[21:46:12] *** Quits: pro_z_ (~pro_z@37.214.78.161) (Ping timeout: 240 seconds)
[21:46:46] *** Joins: matsaman (~matsaman@user/matsaman)
[21:47:17] *** Joins: kmh (~kmh@2a00:6020:5004:6800:cc51:dafa:a805:1ab8)
[21:47:28] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:dd10:779a:8f5a:8f40)
[21:47:28] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:dd10:779a:8f5a:8f40) (Changing host)
[21:47:28] *** Joins: skapata (~Skapata@user/skapata)
[21:48:17] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[21:48:57] *** Quits: yac (~user@user/yac) (Ping timeout: 240 seconds)
[21:49:09] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c800:b907:a7af:3732) (Remote host closed the connection)
[21:49:34] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b54b:f8c3:ed3a:ac59)
[21:50:04] *** Joins: Elodin (~elodin@user/elodin)
[21:50:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[21:50:32] *** Joins: wyclif (~wyclif@user/wyclif)
[21:52:27] *** Quits: Wh0 (~V@103.249.234.123) (Quit: Leaving)
[21:54:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:54:36] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:3df8:cd30:3e5c:fc25) (Quit: CodePoint)
[21:54:37] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[21:54:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:55:10] *** Quits: thevar1able (~textual@212.123.202.115) (Quit: thevar1able)
[21:55:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[21:55:35] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b54b:f8c3:ed3a:ac59) (Ping timeout: 250 seconds)
[21:55:39] *** Joins: lbalhar (~lbalhar@host-77-242-86-231.ip.nej.cz)
[21:56:03] *** Joins: wyclif (~wyclif@user/wyclif)
[21:57:47] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[22:00:02] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[22:00:19] *** Joins: Elodin (~elodin@user/elodin)
[22:00:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[22:01:33] *** Joins: wyclif (~wyclif@user/wyclif)
[22:02:11] *** Quits: BruceDoh (~BruceDoh@xplr-208-114-129-25.xplornet.com) (Read error: Connection reset by peer)
[22:02:14] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[22:02:15] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[22:02:24] *** mcleuder_ is now known as mcleuder
[22:02:24] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[22:02:51] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[22:03:04] *** Joins: magla (~gelignite@d5364c1c.access.ecotel.net)
[22:04:17] *** Quits: neachdainn (~nate@c-73-231-32-43.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[22:04:17] *** Joins: BruceDoh (~BruceDoh@xplr-208-114-129-34.xplornet.com)
[22:04:36] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[22:04:36] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[22:05:35] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[22:06:17] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[22:06:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:07:05] *** Joins: wyclif (~wyclif@user/wyclif)
[22:07:07] *** Joins: thevar1able (~textual@212.123.202.115)
[22:08:12] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[22:08:13] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[22:08:21] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[22:08:34] *** Quits: thevar1able (~textual@212.123.202.115) (Client Quit)
[22:09:23] *** Joins: const (~const@user/const)
[22:10:18] <orbisvicis> lericson, might work, not sure if decimal can handle large enough values around asymptotes
[22:10:27] <orbisvicis> what's the difference between long and decimal?
[22:10:31] *** Joins: Elodin (~elodin@user/elodin)
[22:10:36] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[22:10:38] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[22:10:44] <orbisvicis> anyway I have to get this now Decimal function working with fsolve
[22:10:54] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[22:10:57] <lericson> spicy
[22:11:26] <lericson> sounds like you have a pretty weird optimization problem on hand
[22:11:26] <const> Is there anything obvious that tox does not isolate such that (using the same Python version, for a pure python package) unit tests would fail on github, but not locally?
[22:11:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:12:09] <exarkun> tox just uses pip, pip just works with python packages
[22:12:20] <exarkun> everything that is not a python package is a source of impurities
[22:12:36] *** Joins: wyclif (~wyclif@user/wyclif)
[22:12:59] <const> Yes - the weirdness here is that pretty much everything involved should be pure python, and the failures are coming from pure python packages.
[22:13:19] <const> It's possible that it's numpy-related, but it doesn't immediately leap out as being that.
[22:14:02] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[22:14:25] *** Joins: thevar1able (~textual@212.123.202.115)
[22:14:28] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[22:14:35] <exarkun> Your Python packages are probably the minority of the total software involved in running your unit tests
[22:14:45] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[22:14:46] <exarkun> Python itself is not a Python package, for example.
[22:14:52] *** Joins: portalrat (~portalrat@user/portalrat)
[22:14:58] *** Quits: foobaz2124317 (~foobaz212@109.249.187.66) (Quit: Client closed)
[22:15:11] *** Joins: foobaz2124317 (~foobaz212@109.249.187.66)
[22:15:17] <exarkun> Do you want us to guess which component is different, not knowing anything about what difference you observe or what your software is or does?
[22:15:27] *** Quits: foobaz2124317 (~foobaz212@109.249.187.66) (Client Quit)
[22:15:33] <const> I was primarily asking about isolation.
[22:15:46] *** Joins: foobaz2124317 (~foobaz212@109.249.187.66)
[22:15:55] <const> No, I was not asking about specific components, nor asking you to guess anything.
[22:16:11] <exarkun> Like I said, tox does not isolate very much.
[22:16:15] *** Quits: foobaz2124317 (~foobaz212@109.249.187.66) (Client Quit)
[22:16:50] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[22:16:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:19:56] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:20:44] *** Joins: Elodin (~elodin@user/elodin)
[22:20:56] *** Quits: thevar1able (~textual@212.123.202.115) (Quit: thevar1able)
[22:21:00] *** Joins: skapata (~Skapata@user/skapata)
[22:21:42] *** Quits: rsx (~dummy@ppp-188-174-135-101.dynamic.mnet-online.de) (Quit: rsx)
[22:22:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[22:22:30] *** lukedashjr is now known as luke-jr
[22:22:53] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:23:03] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:23:50] *** Joins: wyclif (~wyclif@user/wyclif)
[22:23:57] *** Joins: Enitin (~Enitin@82.102.22.85)
[22:24:12] *** Joins: junebug (~junebug@2600:1700:3db0:2540:dc7f:3b1b:9adc:b400)
[22:24:25] *** Joins: Atque (~Atque@user/atque)
[22:24:39] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:24:44] *** Joins: Barones (~Barones@user/Barones)
[22:24:58] *** Quits: lbalhar (~lbalhar@host-77-242-86-231.ip.nej.cz) (Ping timeout: 272 seconds)
[22:25:26] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[22:25:47] *** Joins: darksun (~darksun@user/darksun)
[22:26:17] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:27:01] *** Joins: thevar1able (~textual@212.123.202.115)
[22:27:04] *** Joins: onichomp (~onichomp@2806:264:4408:18f:74c0:9bee:8c77:cb65)
[22:27:13] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[22:27:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[22:27:51] *** Quits: thevar1able (~textual@212.123.202.115) (Client Quit)
[22:28:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[22:29:14] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[22:29:23] *** Joins: wyclif (~wyclif@user/wyclif)
[22:29:49] *** Quits: onichomp (~onichomp@2806:264:4408:18f:74c0:9bee:8c77:cb65) (Read error: Connection reset by peer)
[22:30:18] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Remote host closed the connection)
[22:30:19] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[22:30:26] *** Joins: onichomp (~onichomp@2806:264:4408:18f:74c0:9bee:8c77:cb65)
[22:30:59] *** Joins: thevar1able (~textual@212.123.202.115)
[22:31:02] *** Joins: Elodin (~elodin@user/elodin)
[22:31:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[22:31:22] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[22:31:28] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[22:31:34] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[22:31:38] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:31:43] *** Joins: agireud (~agireud@user/agireud)
[22:32:30] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:32:40] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[22:32:45] *** Quits: thevar1able (~textual@212.123.202.115) (Client Quit)
[22:33:25] *** Joins: yac (~user@user/yac)
[22:33:26] *** Joins: justsayingthisis (~justsayin@2001:470:69fc:105::1:cc85)
[22:33:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:34:36] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 240 seconds)
[22:34:37] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:34:51] *** Joins: wyclif (~wyclif@user/wyclif)
[22:34:57] *** Joins: jazzy (~jaziz@user/jaziz)
[22:35:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[22:35:02] *** lukedashjr is now known as luke-jr
[22:35:19] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:35:20] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[22:35:34] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:3df8:cd30:3e5c:fc25)
[22:35:54] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[22:37:46] *** Joins: thevar1able (~textual@212.123.202.115)
[22:38:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:40:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:40:36] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[22:41:06] *** Joins: newpy (~newpy@206.168.231.90)
[22:41:15] *** Joins: Elodin (~elodin@user/elodin)
[22:41:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:41:35] *** Joins: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks)
[22:42:05] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[22:42:30] *** Quits: jay-m1261 (~jay-m@154.72.150.253) (Ping timeout: 260 seconds)
[22:42:30] *** Quits: jay-m126_ (~jay-m@154.72.150.253) (Ping timeout: 260 seconds)
[22:42:30] *** Quits: jay-m126 (~jay-m@154.72.150.253) (Ping timeout: 260 seconds)
[22:42:50] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[22:43:08] *** Quits: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks) (Client Quit)
[22:43:20] <OliverUK> I need to make a script to loosely keep two systems in sync and I could do with a commentary on my approach before I start writing.
[22:44:47] <OliverUK> I query the first system and load the results into the script, I will be loading three pieces of information per record.  I was thinking of making a class for each record.
[22:45:03] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:45:40] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[22:45:40] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[22:45:46] <OliverUK> Then making a (method?) in that class like record.exists_in_2nd_system to see if it exists
[22:45:52] *** Joins: wyclif (~wyclif@user/wyclif)
[22:45:55] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[22:46:33] <OliverUK> If it doesn't then I can create it.  Does that sound like best practices, I've never used classes before and I am hoping to not use them incorrectly
[22:46:35] *** Joins: stealth[] (~stealth]@2001:9e8:36da:c400:477:3762:6e32:dbc7)
[22:47:50] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:48:59] *** Joins: jay-m126 (~jay-m@129.0.76.215)
[22:49:01] *** Joins: agumonkey (~user@88.163.231.79)
[22:49:09] *** Joins: jay-m126_ (~jay-m@129.0.76.215)
[22:49:11] *** Joins: jay-m1261 (~jay-m@129.0.76.215)
[22:49:25] *** Quits: lfs (~lfs@5.2.79.79) (Quit: Lost terminal)
[22:49:30] <exarkun> OliverUK: It depends.
[22:49:37] <OliverUK> :-(
[22:49:44] *** Quits: Veil (~Veil@user/Veil) (Quit: If one cut the source of flow.)
[22:49:44] <OliverUK> It always depends
[22:50:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:50:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:50:30] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489ay2lp44nhh5u.ipv6.telus.net) (Remote host closed the connection)
[22:50:40] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[22:50:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:50:50] <OliverUK> I mean, what I need to do to reduce the number of calls to each state is to load the list of records from system A into a list and the records of system B into a list and do the comparison within Python and then take actions where necessary
[22:50:52] *** Joins: Betal (~Betal@user/betal)
[22:50:55] <const> Are there 100 records? Ten million?
[22:51:24] *** Joins: wyclif (~wyclif@user/wyclif)
[22:51:28] *** Joins: Elodin (~elodin@user/elodin)
[22:51:47] <exarkun> What can cause the state on system A and system B to change?
[22:52:26] <exarkun> What are the systems, even?  Processes on the same host?  Processes on remote hosts?  Databases somewhere?
[22:52:29] <OliverUK> About 700
[22:52:41] *** Quits: jstevens (~nitestryk@98.42.49.72) (Remote host closed the connection)
[22:52:52] *** Quits: jringstad__ (~Amadiro@31.11.55.179) (Quit: Leaving)
[22:52:56] *** Quits: dignissimus (~dignissim@79-70-31-37.dynamic.dsl.as9105.com) (Quit: QUIT)
[22:53:09] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[22:53:48] <OliverUK> First system LDAP second is a monitoring system
[22:54:06] *** Quits: lbracher (~lucas@ptr-178-51-244-105.dyn.mobistar.be) (Ping timeout: 272 seconds)
[22:54:33] <OliverUK> Accounts can be renamed etc on LDAP, disabled, deleted.  Monitoring system must reflect these changes
[22:55:30] <exarkun> Why not just have the monitoring system ask LDAP whenever it needs to know something?
[22:55:50] <OliverUK> So, grab list of all LDAP accounts and grab a list of all monitoring hosts.  If host does not exist in monitoring system then create it.
[22:56:09] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[22:56:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:56:20] *** Joins: hellstabber (6635d6dbf8@knopi.disroot.org)
[22:56:21] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[22:56:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[22:56:41] <OliverUK> Iterate over monitored hosts, if name has been changed then change to reflect.  If account has been deleted then also delete
[22:56:52] <OliverUK> exarkun: Not quite what I need
[22:56:55] *** Joins: wyclif (~wyclif@user/wyclif)
[22:56:59] <exarkun> OliverUK: Why?
[22:57:13] *** Joins: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net)
[22:57:43] <OliverUK> Basically for each account in LDAP I need to create a host in the monitoring system so that I can monitor lots of things per account
[22:58:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:58:03] <OliverUK> But the accounts need to be in the monitoring system first
[22:58:20] <OliverUK> BUT, that's not a Python issue
[22:58:31] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:1484:c44b:e205:8211) (Remote host closed the connection)
[22:58:35] *** Quits: fldme (~fldme@178.49.152.151) (Quit: Client closed)
[22:58:43] <OliverUK> I'm just wondering about my approach to the Python script
[22:58:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:58:58] <exarkun> Is the Python issue "Can I have classes with methods?"  Yes, you can have classes with methods.
[22:59:05] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:ddd7:6df9:8dc6:cf6c)
[22:59:11] <exarkun> Is the Python issue "Should I have classes with methods?"  Sure, if you want, that's what they're there for.
[23:00:06] <exarkun> Is the Python issue "Are classes with methods best practice?"  Probably another "it depends" but maybe also "it is almost irrelevant compared to other parts of the solution".
[23:00:09] <OliverUK> Loading the LDAP account list into the script possibly using classes to represent each account (username, full name, e-mail address) and then use a method with that class that queries the second list of accounts to see if they exist
[23:00:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:00:46] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[23:01:10] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[23:01:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:01:42] *** Joins: Elodin (~elodin@user/elodin)
[23:02:04] <OliverUK> So I can loop over the first list and do something like if not account.exist_in_monitoring_system: create_host(username,name,e-mail)
[23:02:25] *** Joins: wyclif (~wyclif@user/wyclif)
[23:03:02] *** Quits: fanis30 (~anon@adsl-141.176.58.137.tellas.gr) (Quit: WeeChat 3.3)
[23:03:05] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[23:03:22] *** Joins: Atque (~Atque@user/atque)
[23:03:25] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac6e:b715:5594:89d4) (Ping timeout: 240 seconds)
[23:04:26] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 260 seconds)
[23:05:10] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[23:05:49] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[23:06:51] *** Joins: Ad1Tech_IT (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl)
[23:06:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:07:26] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Ping timeout: 245 seconds)
[23:07:55] *** Joins: wyclif (~wyclif@user/wyclif)
[23:08:19] <const> OliverUK: it would probably be much faster to use something as a key (eg, username) to a dict, rather than looping over a list.
[23:08:43] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[23:09:03] <OliverUK> I thought classes were the way to go rather than dicts
[23:09:43] *** Quits: _Ad1Tech_ (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 256 seconds)
[23:10:31] <const> There are two different questions here: (1) how do you represent each record, and (2) how do you store and lookup records?
[23:11:11] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:11:35] *** Joins: leonardo (leonardo@user/leonardo)
[23:11:40] <OliverUK> Yea
[23:11:53] <OliverUK> This is where my I experience shows
[23:11:55] *** Joins: Elodin (~elodin@user/elodin)
[23:12:02] *** Joins: voidcat (~voidcat@user/voidcat)
[23:12:06] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:12:28] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[23:12:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:13:14] *** Quits: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net) (Quit: leaving)
[23:13:26] *** Joins: wyclif (~wyclif@user/wyclif)
[23:14:33] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Read error: Connection reset by peer)
[23:14:37] <const> You can use a class (eg, the dataclasses module tends to be useful to simplify that type of class) to represent the record.
[23:14:40] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[23:14:45] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 268 seconds)
[23:15:20] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[23:15:56] <OliverUK> I suppose I also need to lookup items
[23:15:57] <const> But if you're storing these as a list, you'd need to loop over both lists, which wouldn't be great.
[23:15:57] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[23:16:02] <const> Yes.
[23:16:40] <exarkun> O(N**2) for a list of 700 elements is gonna be ... nearly impossible to observe compared to a request to your LDAP server, of course.
[23:17:13] <exarkun> Certainly it's nice to go for the O(N log N) solution ... you're just not gonna /notice/.
[23:17:35] *** Joins: brentaarnold (~brentaarn@24.112.56.42)
[23:17:46] <const> That's the problem with being an academic.
[23:17:47] *** Quits: onichomp (~onichomp@2806:264:4408:18f:74c0:9bee:8c77:cb65) (Read error: Connection reset by peer)
[23:17:48] <OliverUK> So I need to if record_in_sys_a in list_of_sys_b then check if a_record.name != b_record_name then make change
[23:17:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:18:24] *** Joins: onichomp (~onichomp@2806:264:4408:18f:74c0:9bee:8c77:cb65)
[23:18:37] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[23:18:56] *** Joins: wyclif (~wyclif@user/wyclif)
[23:19:25] *** Joins: cjb (~cjb@user/cjb)
[23:19:35] *** gentooclimax is now known as climax
[23:20:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:20:19] *** Quits: onichomp (~onichomp@2806:264:4408:18f:74c0:9bee:8c77:cb65) (Read error: Connection reset by peer)
[23:20:46] *** Quits: jay-m1261 (~jay-m@129.0.76.215) (Ping timeout: 245 seconds)
[23:20:46] *** Quits: jay-m126_ (~jay-m@129.0.76.215) (Ping timeout: 245 seconds)
[23:20:46] *** Quits: jay-m126 (~jay-m@129.0.76.215) (Ping timeout: 245 seconds)
[23:20:58] *** Joins: onichomp (~onichomp@2806:264:4408:18f:74c0:9bee:8c77:cb65)
[23:20:59] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:21:27] <const> OliverUK: What does `record_in_sys_a in list_of_sys_b` do here?
[23:21:43] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:c8a0:f99f:92aa:2459) (Quit: I have gone to sleep. ZZZzzz…)
[23:21:45] *** Joins: jay-m126 (~jay-m@129.0.76.215)
[23:21:49] *** Quits: zegalch (~zegalch@178.128.75.133) (Remote host closed the connection)
[23:21:50] *** Joins: jay-m126_ (~jay-m@129.0.76.215)
[23:22:01] *** Joins: summersault (~summersau@179.221.251.36)
[23:22:08] *** Quits: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[23:22:10] *** Joins: Elodin (~elodin@user/elodin)
[23:22:13] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[23:22:23] *** Joins: zegalch (~zegalch@178.128.75.133)
[23:22:34] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.3)
[23:22:51] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[23:23:09] <OliverUK> If record_in_sys_a in list_of_sys_b then check for names equal same
[23:23:41] <OliverUK> If does not exist then create in sys b
[23:23:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:24:40] *** Joins: wyclif (~wyclif@user/wyclif)
[23:26:04] *** Joins: lothar_m (~lothar_m@user/lothar-m/x-8875873)
[23:26:11] *** Joins: wakeup (~wakeup@user/wakeup)
[23:26:12] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[23:26:37] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[23:26:49] *** Joins: jay-m1261 (~jay-m@129.0.76.215)
[23:27:17] *** Quits: jay-m126_ (~jay-m@129.0.76.215) (Ping timeout: 252 seconds)
[23:27:17] *** Quits: jay-m126 (~jay-m@129.0.76.215) (Ping timeout: 252 seconds)
[23:28:45] *** Joins: jay-m126 (~jay-m@129.0.76.215)
[23:29:28] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:29:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:30:11] *** Joins: wyclif (~wyclif@user/wyclif)
[23:30:12] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 272 seconds)
[23:30:17] *** Joins: Enitin (~Enitin@82.102.22.84)
[23:31:36] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (Ping timeout: 250 seconds)
[23:32:10] <OliverUK> Perhaps a dict would be better
[23:32:21] *** Joins: Celeo (~znc-admin@user/celeo)
[23:32:24] *** Joins: Elodin (~elodin@user/elodin)
[23:32:57] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[23:33:17] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:33:27] *** climax is now known as gentooclimax
[23:33:42] <MacGyver> A class has the advantage that it's constrained in what it can hold, i.e. it *must* be written to represent the database scheme.
[23:33:52] <MacGyver> A class also has the *dis*advantage that it's constrained in what it can hold, i.e. it *must* be written to represent the database scheme.
[23:34:45] <MacGyver> But dataclasses are a newfangled thingy to kinda solve the disadvantage.
[23:34:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:35:19] <OliverUK> Thing is I will need to find an object l
[23:35:47] <OliverUK> So, if the record exists in the list then I need to grab the name for that object
[23:35:50] *** Joins: wyclif (~wyclif@user/wyclif)
[23:35:59] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[23:36:08] *** Joins: parv (~quass@user/parv)
[23:36:16] *** Joins: korg815 (~korg815@user/korg815)
[23:36:25] *** Joins: arinov (~arinov@77.67.133.10)
[23:36:50] <exarkun> OliverUK: Perhaps you should consider breaking your problem down into smaller pieces.  You may find those easier to solve.
[23:37:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:37:33] <exarkun> OliverUK: Try this.  Start with solving *only* "does user X exist in the monitoring system?"
[23:37:34] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[23:37:39] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[23:37:46] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[23:37:47] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[23:37:57] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[23:38:11] *** Joins: const1 (~const@user/const)
[23:38:34] <OliverUK> Yeah, I've been doing that
[23:38:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:38:39] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:39:02] *** Joins: jay-m126_ (~jay-m@129.0.76.215)
[23:39:02] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[23:39:24] *** Quits: const (~const@user/const) (Ping timeout: 252 seconds)
[23:40:03] *** Quits: const1 (~const@user/const) (Client Quit)
[23:40:12] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:41:36] *** Joins: Elodin (~elodin@user/elodin)
[23:42:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:42:51] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[23:43:28] *** gentooclimax is now known as climax
[23:44:12] *** Joins: lbracher (~lucas@ptr-178-51-244-105.dyn.mobistar.be)
[23:45:02] *** Quits: junebug (~junebug@2600:1700:3db0:2540:dc7f:3b1b:9adc:b400) (Ping timeout: 240 seconds)
[23:45:03] *** Joins: const (~const@user/const)
[23:45:40] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[23:47:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[23:48:27] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929)
[23:48:39] *** Quits: thevar1able (~textual@212.123.202.115) (Quit: thevar1able)
[23:49:14] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929) (Client Quit)
[23:49:25] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[23:49:56] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:50:38] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Remote host closed the connection)
[23:50:43] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[23:51:05] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[23:51:50] *** Joins: Elodin (~elodin@user/elodin)
[23:52:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[23:55:16] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:55:31] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[23:56:04] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[23:57:12] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[23:57:14] *** Joins: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[23:57:22] *** Joins: Techcable (~Techcable@168.235.93.147)
[23:57:29] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[23:57:46] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:58:27] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[23:58:59] *** Joins: Eryn83FL_Matrix[ (~eryn-1983@2001:470:69fc:105::7c74)
[23:59:31] <Eryn83FL_Matrix[> hey guys i am trying to figure out how to trap a pid in python and prevent a second instance of my script from running
