[00:00:53] <jdv> what is up with maxmind being ok with candidates in ny except nyc and yonkers?
[00:01:04] <jdv> i've never seen that before
[00:04:03] *** Quits: Peppard (~quassel@2001:470:1f0b:751:b1a9:e75:781a:1f8f) (Quit: No Ping reply in 180 seconds.)
[00:04:26] <ugexe> jdv: probably taxes
[00:05:09] *** Quits: Linux77 (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4) (Quit: Bye, nice, gratefull)
[00:05:13] *** Joins: Peppard (~quassel@2001:470:1f0b:751:176c:78ce:bb59:4c28)
[00:06:26] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[00:14:36] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[00:27:07] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc6-git-38f80f4-Pogorze-Karpackie-CUSTOM-KERNEL)
[00:27:09] <sivoais> simcop2387++ # those containers look great. Will look into what I can pull into PDL's CI workflows
[00:33:41] *** Quits: subie (~subie@2601:4c0:4080:bc0:94b7:81a0:d599:92e1) (Ping timeout: 245 seconds)
[00:37:07] *** Joins: ekathva (~ekathva@2001:999:53:4449:188a:48b1:2ca2:338c)
[00:37:31] *** Joins: subie (~subie@2601:4c0:4080:bc0:e0c1:bfaf:6629:1c90)
[00:38:10] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:a875:45d9:5bbc:7fa6)
[00:40:10] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[00:50:37] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[00:51:27] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c137:5b23:feaf:eefd) (Ping timeout: 256 seconds)
[00:56:17] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[00:58:09] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[00:58:29] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[00:59:53] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[01:04:43] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Ping timeout: 256 seconds)
[01:06:59] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[01:14:31] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:25:07] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:26:22] * GumbyPAN CPAN Upload: Net-OpenSSH-0.82 by SALVA https://metacpan.org/release/SALVA/Net-OpenSSH-0.82
[01:28:18] *** Quits: ekathva (~ekathva@2001:999:53:4449:188a:48b1:2ca2:338c) (Quit: Leaving)
[01:29:23] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[01:30:18] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[01:35:04] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[01:38:07] <simcop2387> sivoais: oh geeze i can't imagine what kind of issues pdl ends up with quadmath :)
[01:42:18] <simcop2387> the base images should be good for going off of right now, i'm still rebuilding the perl-tester ones that try to include some common modules for running test suites
[01:52:47] *** Joins: nickgaw (~nick@12.118.228.234)
[01:53:20] <nickgaw> Hi, If I check out the perl sources is the metaconfig .package files and other Configuration generation files in there?
[01:55:12] <simcop2387> yes, the main script is the Configure script there to build it.  no ide what you mean by metaconfig .package
[01:55:21] <nickgaw> I have cloned the perl sources into perl but no .package or other metaconfig files are in that source tree where are those stored?
[01:58:25] <nickgaw> The  metaconfig is the program that generated the Configure script and I was looking for those packaging files.
[02:00:21] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:a875:45d9:5bbc:7fa6) (Ping timeout: 245 seconds)
[02:00:48] <nickgaw> I thought this channel was for the developers of perl?
[02:02:15] <simcop2387> perl doesn't use metaconfig or autoconf, the Configure script it uses predates them by a decade or so and is hand written
[02:02:17] *** Joins: rgrinberg (~textual@187.223.170.172)
[02:02:27] <LeoNerd> Some of us hang around here, but the topic is mostly about people writing programs *in* Perl, rather than writing perl itself
[02:03:23] <rindolf> LeoNerd: sup?
[02:04:37] <nickgaw> Really as I thought it was using metaconfig?
[02:05:03] <simcop2387> Nope, hand written posix sh script originally started back in the 80s
[02:06:15] <nickgaw> So no templates exist then for it's complexity?
[02:06:24] <simcop2387> nope
[02:06:46] <simcop2387> all of it's source is there in source control though
[02:07:05] <nickgaw> Is it just the one Configure file or others?
[02:07:28] <simcop2387> mostly just that one file but it does use other hints files from the hints/ directory to tell it about some platforms
[02:07:50] <nickgaw> I was told on some irc channel that perl used metaconfig is it similar to it as from looking at it it looks like so?
[02:08:19] <simcop2387> it's possible that metaconfig based it's work off of perl's but perl's is all original otherwise
[02:08:45] <nickgaw> Is rcs still used or is it all now git?
[02:09:44] <simcop2387> ah given that the metaconfig manpage mentions Larray Wall it does look like it's based off perl's Configure script.  http://manpages.ubuntu.com/manpages/bionic/man1/metaconfig.1.html
[02:09:45] <Paperbot> Link title(s): [ Ubuntu Manpage:           metaconfig - a Configure script generator ]
[02:09:52] <simcop2387> nickgaw: all git now, https://github.com/perl/perl5/
[02:09:54] <Paperbot> Link title(s): [ GitHub - Perl/perl5: üê´ The Perl programming language ]
[02:10:50] <nickgaw> What c files contain the perl programming language?
[02:10:57] <simcop2387> all of them in that repo
[02:11:21] <nickgaw> I have it checked out but some just say that they contain the main function and other smaller portions.
[02:12:40] <simcop2387> you'll want to look in the subdirectories also, particularly the ext, dist, and cpan directories that contain the module code that comes with the language and then the main interpreter exists among the plain .c (and .h of course) files in the main root folder there.
[02:13:00] <dansan> Hello #perl!  Is there a CLI option that will cause perl to spew a backtrace on any warning?
[02:13:06] <nickgaw> So it is spread all over the source tree then?
[02:13:16] <simcop2387> yes
[02:13:38] <simcop2387> dansan: https://metacpan.org/pod/Carp::Always
[02:13:39] <Paperbot> Link title(s): [ Carp::Always - Warns and dies noisily with stack backtraces - metacpan.org ]
[02:13:48] <nickgaw> Are there compilers for perl scripts to turn them into normal exicutables?
[02:14:05] <nickgaw> So you don't have to always distribute the source?
[02:14:14] <dansan> hugs ((((simcop2387)))) Thank you!
[02:14:34] <dansan> nickgaw: hrm, mipsel supported? :)
[02:15:16] <nickgaw> You use mipsel I thought those were dead now?
[02:15:17] <simcop2387> nickgaw: compilers? no.  bundlers yes.  App::FatPacker and PAR::Packer.  they'll bundle the program into a single file (first one does a single perl script, second one can make an executable with the perl interpreter itself).  Neither will protect your source code
[02:15:24] <dansan> Actually, I don't think we're too worried about the sources being seen -- well, my boss would probably love it, but I'm one of those goddamn tree-hugging FOSSies
[02:16:04] <dansan> nickgaw: Well, I'm partially dead.  I got to Heaven, but was annoying, so they let me come back on a temporary programming permit.
[02:16:09] <nickgaw> Not that I need such a method just asking if it was possible?
[02:16:32] *** Joins: proller (~p@80.240.216.69)
[02:16:35] <simcop2387> not in any way that i'm aware of
[02:16:37] <nickgaw> Is mipsel even being made anymore or not?
[02:16:39] *** Quits: proller (~p@80.240.216.69) (Remote host closed the connection)
[02:16:50] <simcop2387> weirdly mipsel and similar still get used for consumer routers
[02:16:51] <dansan> nickgaw: Well, yes and no.  They little the landscape in routers
[02:17:24] <nickgaw> Are there mipsel compilers or desktops like the raspberry pi systems?
[02:17:40] <dansan> They are everywhere, but I believe MicroTek just killed the last one.  They haven't officially EOLed the mt7620, but they haven't made any recently and everybody that uses them started panic buying them.
[02:17:49] <dansan> Nickgaw: no
[02:18:06] <dansan> I mean, there are compilers aplenty, but you don't want to GUI on these
[02:18:11] <simcop2387> i'm hoping RISC-v starts taking over that area from consumer routers.
[02:18:41] <dansan> From what I've seen it's still holding it's market share, but companies seem to be moving to ARM
[02:19:10] <nickgaw> If I could get a system that was mipsel would it be only text based and how powerful would they be?
[02:19:15] <simcop2387> mips lived so long by being an open isa that any chip manufacturer could use.  most of the ones i know are wary of arm because of the licensing costs but that might also end up changing
[02:20:00] <dansan> Well this is causing major problems for my company, we've had to change our boards -- that and the chip shortage.
[02:21:16] <nickgaw> Are most cgi scripts written in perl still?
[02:21:22] <simcop2387> yea the shortage changes the equation a lot, even with arm costing more by default, if you can't get the ones you want then you're kinda shit for other choices
[02:21:26] <dansan> nickgaw: $10 for a descent processor, WiFi, ethernet switch, SPI, I2C, etc., etc. https://www.mediatek.com/products/home-networking/mt7620n-a 
[02:21:27] <Paperbot> Link title(s): [ MediaTek | MT7620N/A ]
[02:22:05] <simcop2387> dansan: yea, i'm hoping that some of the places like sifive can start making cost effective chips for that class with risc-v and prevent arm from taking over
[02:22:30] <dansan> I designed this awesome I/O board with dual CAN FD busses that was going to be getting produced this year.  The CAN chips were $4.50, but now they have a 52 week lead time.
[02:23:13] <simcop2387> 52 week lead time is just code for "lmao, who the fuck knows"
[02:23:21] <dansan> simcop2387: I kinda don't care what chip is under the hood, but I was finally getting used to MIPS assembly, so it will suck to have to learn a new arch.  I already know ARM somewhat
[02:23:27] <dansan> LO!L
[02:23:40] <dansan> Well, the auto manufacturers get first dibs
[02:23:51] <dansan> You can still buy them in small quantities, for about $35 each
[02:23:54] <simcop2387> yea, that's one reason why i think arm will probably end up being the replacement but i don't like it
[02:23:59] <nickgaw> Hopefully it is not that long as I think this chip shorage is a mess and not totally real.
[02:24:21] <dansan> Uh, it's real.  We can't get the chips we need
[02:24:41] <nickgaw> Desktops can still be bought as well as laptops and other devices like phones are you talking about raw processors?
[02:25:55] <dansan> 53 weeks now: https://www.mouser.com/ProductDetail/STMicroelectronics/STM32G431V8T6?qs=uwxL4vQweFPCRtP3Gn478Q%3D%3D
[02:26:01] <dansan> Just about every ST microcontroller
[02:26:04] <nickgaw> Fully built desktops and laptops do exist so if it is like raw processors I am not sure about that.
[02:26:13] <simcop2387> nickgaw: raw processors and other chips used to build boards.
[02:26:29] <dansan> You are talking about main-stream consumer CPUs and such -- that's not the only ICs
[02:26:45] *** Joins: proller (~p@80.240.216.69)
[02:27:13] <nickgaw> ok sorry as I thought that is what you were talking about.  What do you use this system for that is a micro controler?
[02:27:33] <simcop2387> that said the consumer computer hardware is being hit by it now that stocks are run down too.  prices have gone up and availablity is down, it's part of why places like AMD and NVIDIA can't keep GPUs in stock
[02:28:10] <dansan> and on TOP of all that, some massive amount of flash was manufactured and later discovered to all be bad -- something like an exabyte worth?  I forgot
[02:28:53] <nickgaw> I did not know that when was this found out and how did they find this out?
[02:30:35] <dansan> OK, this isn't the best source of the story, but here's one: https://www.popularmechanics.com/technology/gear/a39080271/flash-memory-storage-contaminated/
[02:30:36] <Paperbot> Link title(s): [ Factories Just Ruined 16 Billion Gigabytes of Flash Storage ]
[02:31:17] <nickgaw> Can they recycle it?
[02:31:43] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[02:32:21] <dansan> LOL!
[02:32:33] <simcop2387> nickgaw: nope, not really anyway.
[02:32:42] <dansan> Forgive me.  I don't think you understand how IC fabrication works.
[02:33:02] <dansan> The materials are a miniscule part of the process.
[02:33:05] <simcop2387> basically all the silicon that was processed there needs ot be completely thrown out and it's not reasonable cost-wise, or energy-wise to try to recover it and repurify it all
[02:33:27] *** Quits: pizdets (~pizdets@183.182.111.207) (Ping timeout: 256 seconds)
[02:33:33] <dansan> I do'nt think it would be even slightly POSSIBLE with our current technology
[02:33:37] <nickgaw> So none of it can be reused for anything?
[02:33:48] <dansan> This stuff is so small.  If it's bad, you mostly throw it out
[02:34:06] <simcop2387> dansan: you'd have to pull the silicon out, dissolve it, and recrystalize it.  technically doable but the scale of it is insane.
[02:34:14] *** Joins: pizdets (~pizdets@183.182.114.199)
[02:34:19] <dansan> nickgaw: Go watch some videos on IC fab instead of asking crazy questions -- no offense intended
[02:34:28] <nickgaw> How small is one flash chip as one sd card of mine that was dead that I had stuff backed up off of came apart and the flash chips were very small.
[02:34:44] <simcop2387> nickgaw: you're talking atoms small contamination
[02:35:04] <dansan> probably larger than singular atoms -- but I don't know for sure
[02:35:12] <simcop2387> inside those "chips" things are even smaller with bond wires to silicon dies that are just tiny
[02:35:31] <nickgaw> so inside those chips more parts exist?
[02:35:33] <simcop2387> dansan: yea they haven't given enough public info to really say but the amount of contamination isn't going to be much
[02:35:47] <dansan> nickgaw: some "bad" chips can be sold as an alternative product.  If a 4 core CPU has a defect that only effects a single core, they can usually disable it and sell it as a 3 core CPU
[02:36:08] <dansan> simcop2387: agree
[02:36:13] <simcop2387> nickgaw: yes, this is a good dig into some really old chips from polaroid cameras, http://www.righto.com/2022/02/a-look-inside-chips-that-powered.html
[02:36:14] <Paperbot> Link title(s): [ A look inside the chips that powered the landmark Polaroid SX-70 instant camera ]
[02:36:30] <simcop2387> Ken Shirriff does a lot of decapping and analysis of tiny vintage chips
[02:37:14] <dansan> I've seen some of those pictures -- it's SO amazing.
[02:37:30] <dansan> oh my, I'm supposed to be working.  lol!
[02:38:17] <dansan> Oh yeah, I need to buy a new SSD before the price spike hits the consumer market.  I hope I haven't waited too long already
[02:40:35] <dansan> nickgaw: Keeping contamination under control in wafer fab facilities is such a big deal that they built robotic mechanisms to ferry parts from one station to the next.   Because just walking to deliver something to your coworker produces a relatively massive amount of contamination from your shoes and the floor tearing particles off of each other.
[02:41:06] <nickgaw> interesting
[02:41:25] <dansan> You wear a bunny suit, you go through this decontaminiation process when you come to work where you're in a chamber where air is blasted on you, etc.
[02:41:36] <dansan> *decontamination
[02:43:32] *** Joins: Adoi (~Adoi@user/adoi)
[02:44:36] <nickgaw> Is perl version 6 ever going to come out?
[02:45:13] *** Joins: proller (~p@2a02:6b8:b081:8010::1:20)
[02:47:05] <El_Che> nickgaw: head to #raku
[02:47:25] <nickgaw> Why raku?
[02:47:40] <El_Che> why not?
[02:47:52] <nickgaw> I thought this is where perl is talked about?
[02:48:07] <El_Che> https://en.wikipedia.org/wiki/Raku_(programming_language)
[02:48:07] <Paperbot> Link title(s): [ Raku (programming language) - Wikipedia ]
[02:48:17] <El_Che> "Formerly known as Perl 6, it was renamed in October 2019"
[02:48:49] <nickgaw> I did not know that so perl 5 is the last version of perl ever then?
[02:48:55] <El_Che> no
[02:49:26] <El_Che> Perl "5" is the sole owner of the Perl name so it can use whatever versioning number it wants
[02:49:53] <nickgaw> From the git sources what is done to create a new perl version 5 release like are there releasing scripts that remove the git files and other files and package it up?
[02:51:13] <El_Che> I suppose the tagged release is releasable as is, but honestly I don't know
[02:52:38] <garo> 3
[02:52:43] <garo> sorry
[02:52:43] <nickgaw> Is perl still the normal language used in cgi scripts?
[02:54:30] *** Quits: rgrinberg (~textual@187.223.170.172) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:55:29] <El_Che> I don't think that's still a thing anymore
[02:55:58] <nickgaw> What is the newest thing called for web page applications that run on the server?
[02:56:06] <El_Che> and, if you must, you can write cgi in whatever language you want
[02:56:27] <nickgaw> So cgi scripting is dead?
[02:57:18] <El_Che> I think the paradadigm today is using a reverse proxy in front of your application, but they are modern replacement like FastCGI
[02:57:29] *** Quits: Trigon_ (~reuben@144.39.114.115) (Ping timeout: 256 seconds)
[02:58:02] <nickgaw> ok fastCGI can be written in any programming languages?
[02:58:24] <El_Che> pretty much
[02:58:29] <El_Che> if there are bindings
[03:02:32] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[03:02:46] <SpiceMan> nitpicking, but fastcgi is far from modern. it's almost as ancient as cgi itself
[03:02:55] *** Joins: rgrinberg (~textual@2806:101e:7:134:c52e:384:2f97:6256)
[03:03:14] <nickgaw> For modern applications what is the proper term called?
[03:03:19] <El_Che> put a "more" somewhere in my sentence
[03:03:32] <nickgaw> that run on the web server and interact with the browser content?
[03:04:13] <SpiceMan> common gateway interface. it's in the name, it's an interface
[03:04:21] <SpiceMan> so, it's language independent
[03:04:38] *** Joins: deadmarshal_ (~deadmarsh@95.38.115.28)
[03:04:45] <SpiceMan> nickgaw: proper term of what?
[03:04:59] <nickgaw> Someone said cgi was dead
[03:05:49] <SpiceMan> it isn't considered a best practice, yes
[03:06:36] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[03:06:45] <El_Che> nothing is really dead
[03:07:02] <buu> That which is dead may never die
[03:07:13] <nickgaw> Lets say you submit a form on a web page it does not go to a cgi script anymore?
[03:07:57] <El_Che> nickgaw: did you wake from a coma? This are not recent changes :)
[03:08:05] <El_Che> *these
[03:08:55] <nickgaw> What I am trying to find out is what is the proper term for this type of application that you interact with with a web browser as yes I do use forms on web pages often.
[03:09:16] *** Quits: deadmarshal_ (~deadmarsh@95.38.115.28) (Ping timeout: 272 seconds)
[03:13:46] *** iznogoud is now known as wd40
[03:20:20] <buu> nickgaw: "website"
[03:20:48] <nickgaw> So no different term for the scripting portion then like use to be?
[03:21:01] <buu> not really
[03:21:37] <nickgaw> so have you ever seen CGI still used on modern sites or is it all server side includes?
[03:21:46] <buu> For one thing it's so nearly ubiquitous that all websites are assumed to have some program on the backend
[03:21:59] <nickgaw> true
[03:22:07] <buu> nickgaw: ssi is even older and less used
[03:22:45] <buu> nickgaw: The problem is "cgi" is both a very specific technical term and a very generic way of referring to a web browser interacting with a program on a server
[03:22:47] <nickgaw> I have not seen a guest book on web sites in sometime now are those basically gone now?
[03:22:59] <buu> Yes, people just use facebook
[03:23:11] <buu> Or wordpress comments
[03:23:37] *** Joins: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net)
[03:23:39] <buu> But I worked professionally with a company/website that literally used apache + mod_cgi as recently as two years ago
[03:23:58] <buu> wordpress frequently runs in fastcgi mode
[03:25:29] <krismatrix> For the sake of debugging and understanding I want to look at the results of Data::Dumper. For me it is a big set of text. I don't have a way of collapsing and expanding sections. Do you guys have some method or tool to do that?
[03:26:16] <buu> krismatrix: I rarely bother but you could dump it as json and use a json browser
[03:27:34] <krismatrix> oh...how do you do that?
[03:27:45] <krismatrix> *looks for data dumper cpan*
[03:28:05] <buu> JSON::encode_json
[03:28:40] <krismatrix> encode_json(Dumper($obj))  ?
[03:28:50] <buu> no dumper
[03:29:08] <krismatrix> oh...so use encode_json over dumper ?
[03:29:12] <buu> yep
[03:29:31] <krismatrix> Maybe I should just do that instead of using Dumper all the time.
[03:30:12] <buu> Well, dumperoutput looks like perl already and handles some edge cases like self references a little more nicely
[03:30:22] <buu> Also you need more effort to make json pretty print
[03:30:31] <buu> but lots of people do
[03:32:13] <krismatrix> hmm...
[03:32:57] <krismatrix> mmm...the benefit Data::Dumper is that I can dump the obj and analyze it.
[03:33:07] <krismatrix> If i had to micromange json..it is less useful.
[03:33:55] <buu> I mean, what do you think the difference is?
[03:35:13] *** Quits: rgrinberg (~textual@2806:101e:7:134:c52e:384:2f97:6256) (Ping timeout: 256 seconds)
[03:35:22] <krismatrix> i don't follow your question.
[03:35:58] <buu> Well, they both turn a tree of array/hashes into text
[03:37:20] <krismatrix> yeah. I am saying i just want a simple way to compress and expand the data so that it is easier for me to study the contents of an object.
[03:37:25] *** Joins: whynot (~whynot@37.73.157.122)
[03:38:42] <buu> Well, you'd need some kind of gui, is the problem
[03:39:44] <buu> Maybe vim could do it
[03:39:51] <buu> using folds
[03:48:08] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Quit: Lost terminal)
[03:51:04] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:52:11] <krismatrix> hmm....i have used folds...but I hope we could do it in VS code. It is only for the poking around the data...i don't need it all the time.
[03:52:28] <krismatrix> Previous sentence was supposed to be 'i have not used folds'.
[03:53:34] <sivoais> perhaps dump as YAML and use fold-by-indent level?
[03:54:49] <sivoais> see ingy's XXX module for a memorable way of doing that
[03:56:18] *** Joins: rgrinberg (~textual@187.223.170.172)
[03:57:27] <krismatrix> i'll consider that idea.
[04:04:24] *** Joins: Croran (~Croran@71.231.214.173)
[04:11:48] <krismatrix> in mojo...is the default render status 200?
[04:20:54] *** Quits: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net) (Remote host closed the connection)
[04:22:20] *** Joins: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net)
[04:22:39] <krismatrix> sorry got disconnected in case any one responded on the render status 200.
[04:26:18] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[04:26:20] *** Quits: vrurg_ (~vrurg@45.74.95.181) (Read error: Connection reset by peer)
[04:26:49] *** Joins: vrurg (~vrurg@45.74.95.181)
[04:26:53] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[04:30:56] *** Quits: rgrinberg (~textual@187.223.170.172) (Read error: Connection reset by peer)
[04:31:32] *** Joins: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781)
[04:31:37] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Ping timeout: 240 seconds)
[04:40:15] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[04:47:35] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:53:13] *** Quits: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net) (Quit: Leaving)
[04:55:08] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[05:01:22] *** Quits: subie (~subie@2601:4c0:4080:bc0:e0c1:bfaf:6629:1c90) (Remote host closed the connection)
[05:01:41] *** Joins: subie (~subie@2601:4c0:4080:bc0:c8e6:677:293e:30f6)
[05:08:33] *** Joins: gast0n (~g4570n@user/gast0n)
[05:08:52] *** Quits: subie (~subie@2601:4c0:4080:bc0:c8e6:677:293e:30f6) (Remote host closed the connection)
[05:09:11] *** Joins: subie (~subie@2601:4c0:4080:bc0::5)
[05:13:46] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0::5)
[05:14:14] *** Joins: Manderson_ (~manderson@45.40.81.122)
[05:14:15] *** Quits: AI4AI (~subie@2601:4c0:4080:bc0::5) (Client Quit)
[05:15:07] *** Joins: Manderson__ (manderson@gateway/vpn/protonvpn/manderson)
[05:16:34] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 272 seconds)
[05:18:19] *** Joins: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net)
[05:18:54] *** Quits: Manderson_ (~manderson@45.40.81.122) (Ping timeout: 256 seconds)
[05:20:29] <krismatrix> I am trying to verify a webhook source. Stripe documentation say looks in headers. With mojos...can i print all header with $c->req->headers?
[05:23:41] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[05:33:44] *** Joins: geli (~gelignite@55d44ff4.access.ecotel.net)
[05:36:42] *** Quits: magla (~gelignite@55d44f73.access.ecotel.net) (Ping timeout: 250 seconds)
[05:43:17] *** Quits: KnoP (~KnoP@p4ff56db6.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:43:51] *** Quits: proller (~p@2a02:6b8:b081:8010::1:20) (Ping timeout: 256 seconds)
[05:56:28] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[06:06:34] *** Quits: geli (~gelignite@55d44ff4.access.ecotel.net) (Quit: Stay safe!)
[06:11:08] <krismatrix> when api documentation say HMAC sha256, they mean hmac_sha256_hex() right? not base64 or something else?
[06:12:36] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[06:21:52] * GumbyPAN CPAN Upload: App-Greple-wordle-0.06 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-Greple-wordle-0.06
[06:22:26] *** Quits: Su-Shee (~Susanne@p4ff4932f.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[06:23:22] *** Quits: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[06:23:47] *** Joins: Su-Shee (~Susanne@p4ffc7426.dip0.t-ipconnect.de)
[06:27:00] *** Quits: henry40408 (~henry4040@175.181.153.66) (Ping timeout: 240 seconds)
[06:27:05] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[06:28:34] *** Joins: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781)
[06:28:55] *** Joins: R2robot (~R2robot@user/r2robot)
[06:36:30] *** Quits: Peppard (~quassel@2001:470:1f0b:751:176c:78ce:bb59:4c28) (Ping timeout: 260 seconds)
[06:36:35] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[06:36:54] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:39:24] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:95fe:55b6:9eef:db1f) (Ping timeout: 240 seconds)
[06:41:04] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[06:46:38] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:51:16] *** Quits: fling (~fling@user/fling) (Ping timeout: 256 seconds)
[06:52:02] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 240 seconds)
[06:52:14] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:95fe:55b6:9eef:db1f)
[06:52:32] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0:ca0f:1d28:f742:47b5)
[06:54:36] *** Quits: subie (~subie@2601:4c0:4080:bc0::5) (Ping timeout: 240 seconds)
[07:06:57] * GumbyPAN CPAN Upload: CLASS-v1.1.5 by JDEGUEST https://metacpan.org/release/JDEGUEST/CLASS-v1.1.5
[07:08:10] *** Joins: frost (~frost@user/frost)
[07:10:11] *** Joins: Peppard (~quassel@2001:470:1f0b:751:176c:78ce:bb59:4c28)
[07:11:01] *** Joins: Trigon_ (~reuben@144.39.114.115)
[07:18:10] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 272 seconds)
[07:22:35] *** Joins: semeion (~semeion@user/semeion)
[07:23:06] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[07:24:32] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[07:30:12] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[07:34:40] *** Joins: vms14 (~user@29.red-79-153-202.dynamicip.rima-tde.net)
[07:34:53] <vms14> do you want to know what I like the most of Perl?
[07:35:03] <vms14> I have my own perldoc page 
[07:35:24] <vms14> https://perldoc.perl.org/perlvms
[07:35:25] <Paperbot> Link title(s): [ perlvms - VMS-specific documentation for Perl - Perldoc Browser ]
[07:35:51] <vms14> ahahaha I was amused first time I saw it
[07:36:00] *** Quits: nickgaw (~nick@12.118.228.234) (Quit: ircII EPIC5-2.0.1 -- Are we there yet?)
[07:37:10] *** Quits: Peppard (~quassel@2001:470:1f0b:751:176c:78ce:bb59:4c28) (Ping timeout: 260 seconds)
[07:37:41] *** AI4AI is now known as subie
[07:40:19] <krismatrix> How do i adjust the number of spaces in an indent when i use cpan module JSON or JSON::PP ?
[07:41:57] *** Joins: Martchus (~martchus@dynamic-077-009-038-030.77.9.pool.telefonica.de)
[07:42:26] *** Quits: Martchus_ (~martchus@2a01:c22:7227:9800:d250:99ff:fe49:3cce) (Ping timeout: 245 seconds)
[07:43:17] <corwin> krismatrix: $json->indent_length($number_of_spaces)
[07:43:18] *** Joins: semeion (~semeion@user/semeion)
[07:43:56] <krismatrix> thank you
[07:43:57] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[07:44:16] <corwin> :thumbsup:
[07:44:24] <krismatrix> where did you find the indent_length field in JSON Cpan? I don't see it
[07:44:48] <corwin> krismatrix: I think in the JSON::PP docs?
[07:45:12] <krismatrix> indeed. thank you.
[07:47:02] * GumbyPAN CPAN Upload: Module-Generic-v0.21.6 by JDEGUEST https://metacpan.org/release/JDEGUEST/Module-Generic-v0.21.6
[07:51:42] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:52:34] <krismatrix> corwin...would you know what they mean when the JSON::PP docs say $enable is true / false? Perl doesn't have booleans.
[07:52:45] *** Quits: lllh (~UPP@198.48.244.21) (Quit: :::: ( UPP ) ::::)
[07:52:59] <corwin> usually any non 0/''/undef value is "true"
[07:53:10] <krismatrix> 0 is true?
[07:53:13] <krismatrix> wow.
[07:53:14] <krismatrix> ok.
[07:53:16] <corwin> no..
[07:53:22] <corwin> maybe I said that badly.
[07:53:52] *** Quits: whynot (~whynot@37.73.157.122) (Quit: leaving)
[07:53:53] <corwin> The falsy values are generally: 0 undef ""
[07:54:43] <corwin> all else is "truthy" (which is said more commonly than "true", in the context of Perl, AFAIK)
[07:54:47] <krismatrix> JSON::PP->new->ascii->indent->indent_length(2)->space_before([1])->space_after([0])->allow_nonref;
[07:54:49] *** Joins: Peppard (~quassel@2001:470:1f0b:751:176c:78ce:bb59:4c28)
[07:55:10] <krismatrix> I tried that. I am expecting indentation that is 2 spaces. No space before ':' and space after ':'
[07:55:14] <corwin> what is [1] and [0]?  Probably just remove those brackets
[07:55:32] <krismatrix> but the docs say ([$enable])
[07:55:42] <corwin> that's saying that the value is optional.
[07:56:27] <corwin> ->space_before(1) ;;  do put a space before
[07:56:54] <corwin> ->space_before(0) ;; don't put a space before
[07:57:08] <corwin> ->space_before() ;; tell us if we are putting a space before
[07:57:08] *** Joins: frost (~frost@user/frost)
[07:57:18] <corwin> (but that's a guess, I can experiment to confirm, sec..)
[07:58:10] <zgu> then there's '0' which is a weird special case
[07:59:01] <krismatrix> yep. got it.
[08:00:43] <corwin> OK, I was wrong, it seems that no arg is the same as supplying a true one. no option returns something non-chainable
[08:01:03] <corwin> at least for space_before..
[08:01:44] <corwin> sweval: use JSON; print JSON->new->ascii->pretty->space_before(0)->encode({a=>1})
[08:01:46] <perlbot> corwin: ERROR: Bareword filehandle "JSON" not allowed under 'no feature "bareword_filehandles"' at (IRC) line 1. 
[08:02:42] <corwin> sweval: use JSON; print JSON::new(q(JSON))->ascii->pretty->space_before(0)->encode({a=>1})
[08:02:44] <perlbot> corwin: ERROR: Undefined subroutine &JSON::new called at (IRC) line 1. 
[08:02:59] <vms14> ahahah I like when the bot trolls you guys
[08:03:08] <corwin> :pepehands:
[08:03:44] <corwin> Anyway... https://bru.st/i/mintty_bQbbhrQWlK.png
[08:04:26] <zgu> you know you could just pastebin the text
[08:04:31] <zgu> also, ew, windows
[08:06:47] <corwin> sorry.  I'll try to let the linux users help people next time.
[08:07:07] *** Joins: deadmarshal_ (~deadmarsh@95.38.115.28)
[08:09:13] <krismatrix> I got it man. You helped me with the JSON problem i was having.
[08:09:26] <krismatrix> Sadly it didn't solve the stripe webhook problem I was having.
[08:09:40] <corwin> #highlyrelatable :shamrock:
[08:09:50] <vms14> krismatrix: this community is very friendly, be sure to cry here with your code
[08:09:54] <krismatrix> I am trying to implement my own webhook signature check (as they don't have a perl method)
[08:10:00] <vms14> as long as you use strict first xD
[08:10:07] <corwin> lol
[08:10:26] <krismatrix> https://l.perl.bot/p/uky6d2
[08:10:27] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[08:10:57] <vms14> I sometimes come here to cry and torture them with my code and they help me to improve it
[08:11:38] <krismatrix> I can't get the two values below to match (the paste bin is old. It should now replace my $req_body = $self->req->json; with 
[08:11:40] <krismatrix> my $json = JSON::PP->new->ascii->indent->indent_length(2)->space_before(0)->space_after(1)->allow_nonref;
[08:11:40] <krismatrix>   my $req_body = $json->encode($self->req->json);
[08:12:02] <krismatrix> (in my above setence it is not below but in the perl bot link)
[08:13:53] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:15:02] <corwin> krismatrix: I'm assuming this code works but the values don't, in fact, match?
[08:15:10] <krismatrix> correct
[08:16:03] <krismatrix> The instructions of what stripe wants me to do are in the comments but you can refer to the offical docs here:  https://stripe.com/docs/webhooks/signatures#prepare-payload should yo uwant to.
[08:16:05] <Paperbot> Link title(s): [ Check the webhook signatures | Stripe Documentation ]
[08:16:06] <corwin> I'm also assuming you are fairly confident that 'endpoint' in yer stash is really the signing secret.
[08:16:36] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:17:16] <krismatrix> yes..but let me double check..give me a moment.
[08:18:02] <krismatrix> ok verified. Yes. I certianly think so.
[08:20:14] *** Quits: Sleepy63 (~Sleepy63@user/sleepy63) (Ping timeout: 256 seconds)
[08:20:45] <corwin> krismatrix: can you show the actual value from your stripe-signature header?  I'm wondering if your regex could be too strict (but I guess you'd be getting warnings assuming you are running with strict/warnings).
[08:20:48] *** Quits: deadmarshal_ (~deadmarsh@95.38.115.28) (Ping timeout: 256 seconds)
[08:21:35] <krismatrix> do you mean you want me to print $stripe_sig ?
[08:21:40] <corwin> fwiw, to parse that type of thing (quick and dirty) I'd usually use something like: perl -MData::Dumper -le '$s = q(a=b,c=d); %h = map { split /=/ } split q(,), $s; print Dumper(\%h)'
[08:21:48] <corwin> krismatrix: yea
[08:22:43] <krismatrix> stripe_sig:t=1646542339,v1=bcd89ff867c462aa85a3c56843db714d1e9f6b965bd4bf09660286dd22404ccc,v0=39cfe6f423234834732d053bf617d4c6e092ff326e11513fd8da9d4b6362865a
[08:22:57] <krismatrix> everything after stripe_sig: is the string. 
[08:23:11] <krismatrix> t=1646542339,v1=bcd89ff867c462aa85a3c56843db714d1e9f6b965bd4bf09660286dd22404ccc,v0=39cfe6f423234834732d053bf617d4c6e092ff326e11513fd8da9d4b6362865a
[08:23:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:25:49] <corwin> krismatrix: did you double check that it's not matching the v0 sig, instead?  I'm wondering if you could be looking at a 'test mode event'
[08:26:08] <krismatrix> I did not. The docs seems to say to ignore v0
[08:26:51] <corwin> I'm looking at the comment on lines 7-8 of your paste.  I don't know what actual even you are working with here..
[08:27:50] <krismatrix> well..it doesn't match either v1 or v0
[08:29:36] <corwin> I'm... running low on ideas, m8.  Maybe someone around has worked with this API before; I haven't.  I can pick nits in your code but I doubt it would qualify as "help".
[08:29:39] <krismatrix> here is a full liteapp: https://l.perl.bot/p/lwk5ak
[08:29:40] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[08:29:57] <krismatrix> heh heh. Ya.
[08:31:18] <corwin> krismatrix: it would probably be good to add these to lines right after use JSON::PP;  =>  use strict;  use warnings;
[08:31:26] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:31:47] <krismatrix> My understanding was that they are not necessary. The mojolicious app has warnings and strict by default.
[08:31:54] <corwin> turning on the extra noise may help spot something that is used but not actually given a defined value, etc.
[08:32:13] <corwin> Ah, shows what I know.  coolio
[08:33:20] *** Joins: Sleepy63 (~Sleepy63@user/sleepy63)
[08:33:38] <krismatrix> It is a bit annoying when these api don't have code that does things manually. 
[08:35:38] <corwin> There are a couple of CPAN modules that look like they might be of interest.  https://metacpan.org/pod/Net::Stripe  and https://metacpan.org/pod/WebService::Stripe
[08:35:39] <Paperbot> Link title(s): [ Net::Stripe - API client for Stripe.com - metacpan.org ] [ WebService::Stripe - Stripe API bindings - metacpan.org ]
[08:37:04] <krismatrix> I know of the first one. It doesn't do webhooks. AND it has code for a far more detailed version of stripe usage. Mine is intended to be simpler.
[08:42:27] <corwin> I poked though the strip doc but it didn't give me more ideas. sry
[08:43:33] <krismatrix> no worries man.
[08:44:09] <krismatrix> I think the problem is either (1) format of the JSON body, (2) the choice of HMAC algorith, (3) or a flaw in my understanding of the algorithm 
[08:45:19] <corwin> Hmm.  You could try Digest::SHA256 instead of Digest::SHA
[08:46:24] <corwin> or hmm, no.  that won't give you hmac-sha?
[08:47:17] <corwin> krismatrix: I guess I'd try hmac_sha256_base64  (but not with a great deal of hope, or any understanding at all).
[08:47:35] <krismatrix> yeah..
[08:49:06] <krismatrix> ok..definitely not base64
[08:49:37] <krismatrix> at least...it give me confidence that (2) is probably not the problem.
[08:49:41] <corwin> definitive information, ftw :P
[08:57:56] <krismatrix> what is the match $1,$2 etc in regex called? 
[08:58:07] <krismatrix> I want to look up the similar concept in node.
[08:58:35] *** Quits: vms14 (~user@29.red-79-153-202.dynamicip.rima-tde.net) (Remote host closed the connection)
[08:58:42] <rindolf> krismatrix: captures
[08:58:49] <krismatrix> thank you
[08:59:02] <rindolf> perlbot: perlvar
[08:59:03] <perlbot> rindolf: Perl predefined variables - https://perldoc.pl/perlvar
[09:02:02] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[09:05:08] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! üëã)
[09:07:18] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[09:07:47] <rindolf> krismatrix: you're welcome 
[09:08:00] *** Joins: epony (epony@user/epony)
[09:15:37] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:95fe:55b6:9eef:db1f) (Ping timeout: 240 seconds)
[09:16:48] <krismatrix> corwin...i reimplemented the algorithm manually but this time in node. Got it working.
[09:17:16] <krismatrix> So i think we can eliminate (3). That is, I do understand the algorithm.
[09:17:33] <krismatrix> The problem must be (1). The format of the json as JSON::PP is providing.
[09:20:23] <buu> What's the problem?
[09:21:40] *** Quits: epony (epony@user/epony) (Remote host closed the connection)
[09:21:51] <krismatrix> you mean what is the problem with the JSON format?
[09:22:22] <krismatrix> Not a hundred percent sure.
[09:22:56] <krismatrix> I am noticing the node prints json with empty array into multiple lines, but perl keeps it in one line. 
[09:23:23] <krismatrix> for example "tax_ids": [\n\n]  in nodejs but "tax_ids": [] in perl
[09:24:18] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[09:26:10] *** Quits: pizdets (~pizdets@183.182.114.199) (Quit: pizdets)
[09:26:38] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[09:26:49] *** Joins: pizdets (~pizdets@183.182.114.199)
[09:27:11] * GumbyPAN CPAN Upload: Parallel-Queue-v4.0.4 by LEMBARK https://metacpan.org/release/LEMBARK/Parallel-Queue-v4.0.4
[09:29:09] <corwin> Wait.  Stripe is sending formatted JSON across the wire and that's what you are needing to decode then verify?  That seems quite brittle..
[09:29:43] <krismatrix> mmm...I don't know how to answer that.
[09:30:30] <krismatrix> Stripe is sending me json and a hash. When I use node to print the JSON in pretty format and use that to create the HMAC_SHA256, my hash matches the HMAC
[09:30:44] <corwin> I would generally expect that any non-significant whitespace should be removed in the JSON before sending.  Is that very obviously wrong?
[09:31:17] <krismatrix> Apparently not what is happenning.
[09:31:27] <corwin> Right I get it.  Bully for you getting it working with node, anyway.
[09:31:41] <krismatrix> well..it was the only way to dial the problem down.
[09:31:57] <krismatrix> Props for me for not being totally stupid.
[09:34:01] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Read error: Connection reset by peer)
[09:34:05] *** Quits: v^ (~v@user/ctrl) (Remote host closed the connection)
[09:34:23] *** Joins: deadmarshal_ (~deadmarsh@95.38.115.28)
[09:34:38] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[09:38:47] *** Quits: phenom (~primus@user/phenom) (Read error: Connection reset by peer)
[09:41:39] <krismatrix> I am wondering if I need to send stripe a service desk ticket. It seems like formatted json is probably not a smart decision on their part.
[09:44:52] *** Joins: phenom (~primus@user/phenom)
[09:47:15] <corwin> krismatrix: if it's working for a bunch of other platforms I'm assuming they are going to shrug but... ya, I would.
[09:48:09] <krismatrix> yeah...and if so...i need to figure out how to integrate node code into my app. That will be new.
[09:50:16] <buu> Er, isn't there a stripe perl module?
[09:50:37] <corwin> buu: several but none seem to handle creating webhooks
[09:50:40] <corwin> krismatrix: I might go as far as s/(\s*)\[]/\1[\n\n\1]/g to avoid introducing another tool.  Did you try manually hacking on the JSON at all?
[09:50:42] <buu> oh
[09:51:08] <buu> note that console.log will add whitespace
[09:51:41] *** Joins: epony (epony@user/epony)
[09:51:47] <buu> krismatrix: I'm guessing the problem is more likely to be the ordering of the json keys and so forth
[09:51:58] <buu> krismatrix: why don't you print the exact json you're trying to hash from both programs?
[09:52:02] <corwin> fair point.  I guess one way to be very certain could be to have both programs write the parsed JSON to files and then diff the files.
[09:52:07] <buu> yeah
[09:52:21] <buu> Do you need to parse it or sign new json?
[09:52:45] <buu> https://metacpan.org/pod/Net::API::Stripe::WebHook::Apache
[09:52:46] <Paperbot> Link title(s): [ Net::API::Stripe::WebHook::Apache - An Apache handler for Stripe Web Hook - metacpan.org ]
[09:52:46] <krismatrix> I cannot print the exact json. The json comes from stripe when testing.
[09:53:07] <krismatrix> I only know how to test one at a time.
[09:53:17] <corwin> krismatrix: I was thinking adding code to write the json to file into your test programs.
[09:53:40] <krismatrix> oh.
[09:54:17] <buu> wtf is this http://rest-examples.chilkat.io/stripe/perl/chilkat_47.cshtml
[09:54:17] <Paperbot> Link title(s): [ Perl Stripe: Retrieve an Event ]
[09:54:32] <krismatrix> I mean...if you want a sample of separate json but one with perl and one with node...i have those files already.
[09:54:58] <buu> krismatrix: Sorry, just to step back, you're getting json from stripe and you want to verify it by computing its hmac?
[09:55:16] <krismatrix> more complicated than that.
[09:55:34] <corwin> >  <krismatrix> here is a full liteapp: https://l.perl.bot/p/lwk5ak
[09:55:34] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[09:56:09] <krismatrix> stripe sends me a json payload. and also in the headers it sends me a time stamp and signature. The signature is a HMAC_SHA256 of the timestamp and the json payload.
[09:56:24] <krismatrix> I have to do the HMAC_SHA256 myself and compare with the same in the header.
[09:56:25] <buu> wow https://www.chilkatsoft.com/products.asp
[09:56:25] <Paperbot> Link title(s): [ Chilkat Components / Libraries for .NET, ActiveX, C++, Objective-C, IOS, Android, Ruby, Python, P... ]
[09:56:28] <buu> it's this whole little world
[09:57:59] <buu> er
[09:58:28] <buu> krismatrix: Why are you doing   my $req_body = $json->encode($self->req->json);
[09:58:31] <corwin> "And from this they make a living?"
[09:58:44] <buu> corwin: It's an impressive number of languages!
[09:58:52] <krismatrix> so that is old code. Let me give you a newer link.
[09:58:59] <krismatrix> https://l.perl.bot/p/lwk5ak
[09:58:59] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[09:59:41] <corwin> wait.
[09:59:50] <corwin> buu is right, I think.
[10:00:07] <buu> It's been known to happen
[10:00:13] <corwin> why is JSON parsing involved at all if the data is coming in as JSON already?
[10:00:49] <corwin> I'd guess you'd only need decode, and that only after you've confirmed the payload matches the sig
[10:00:59] <buu> yep
[10:01:27] <krismatrix> It is json..but the data that Mojo returns $self->req->json in a format without spaces or new lines.
[10:01:44] <krismatrix> that is not what node demo script that I wrote sees.
[10:01:53] <corwin> does mojo give you a way to get at the raw body?
[10:02:40] <krismatrix> hmm...interesting question...no idea.
[10:02:49] <buu> $c->req->body
[10:03:21] <krismatrix> let's try that.
[10:03:47] <buu> krismatrix: also write out the arguments you're passing to hmac_...
[10:04:18] <krismatrix> bingo...that worked.
[10:04:27] <corwin> buu++
[10:05:21] <krismatrix> f*** can't believe it was that. 
[10:06:13] <krismatrix> Thank you guys. I probably spent some 3+ hours trying to debug that.
[10:06:18] <buu> =[]
[10:06:40] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[10:06:55] <corwin> classic.  complex algra? 1-2hrs   debugging string processing?  days-weeks
[10:07:15] <buu> agreed
[10:07:32] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[10:08:24] <buu> assumptions are, you know, something
[10:08:39] <krismatrix> indeed
[10:08:54] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[10:09:09] *** Quits: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[10:12:31] *** Joins: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781)
[10:13:25] <krismatrix> off to bed. ill integrate the correction into main code tomorrw
[10:14:26] *** Quits: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net) (Quit: Leaving)
[10:18:46] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:20:09] *** Quits: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[10:23:30] *** Joins: rgrinberg (~textual@187.223.170.172)
[10:23:52] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:26:54] *** Quits: kevin-oculus (~kevin-ocu@c188-149-14-10.bredband.tele2.se) (Ping timeout: 272 seconds)
[10:29:55] *** Joins: ekathva (~ekathva@n14jozpbxtbgza7g9-1.v6.elisa-mobile.fi)
[10:36:54] *** Quits: bscan (~bscan@2600:380:8c39:7057:5167:6285:88a6:c32f) (Remote host closed the connection)
[10:41:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[10:41:37] *** Joins: bscan (~bscan@2600:380:8c39:7057:5167:6285:88a6:c32f)
[10:52:14] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:52:28] *** Joins: koox (~dev@213.133.91.246)
[11:01:22] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[11:06:10] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[11:07:26] <Grinnz> https://twitter.com/thingskatedid/status/1366547919285874694
[11:07:27] <Paperbot> Kate (@thingskatedid) 1y4d ago in reply to @baileythegreen #1366547658706411523: pcre stands for Perl Compatible Regular Expressions. it's called that because it's not compatible with perl, and they're not regular expressions
[11:08:37] <Grinnz> perlbot: pcre
[11:08:37] <perlbot> Grinnz: PCRE (the so-called "Perl-compatible regular expression" library) is not Perl.  It lacks several features of Perl regexes.  Don't bother asking for help with a PCRE pattern in a Perl channel as the answers will not be relevant.  Try #regex, or the channel for your language.  See also http://en.wikipedia.org/wiki/PCRE#Differences_from_Perl and LPBD.
[11:15:29] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:15:58] *** Joins: diskin_ (~diskin@31.23.45.31)
[11:15:59] *** diskin is now known as Guest7274
[11:15:59] *** diskin_ is now known as diskin
[11:16:23] * GumbyPAN CPAN Upload: App-DBBrowser-2.292 by KUERBIS https://metacpan.org/release/KUERBIS/App-DBBrowser-2.292
[11:18:50] *** Quits: Guest7274 (~diskin@87.117.63.140) (Ping timeout: 272 seconds)
[11:26:00] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:31:25] * GumbyPAN CPAN Upload: Dist-Zilla-PluginBundle-Author-AJNN-0.02 by AJNN https://metacpan.org/release/AJNN/Dist-Zilla-PluginBundle-Author-AJNN-0.02
[11:34:17] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[11:34:20] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:36:31] *** Joins: tim__ (~tim@cpe-174-109-69-154.nc.res.rr.com)
[11:37:16] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[11:40:06] *** Parts: tim__ (~tim@cpe-174-109-69-154.nc.res.rr.com) ()
[11:41:26] * GumbyPAN CPAN Upload: File-MimeInfo-0.32 by MICHIELB https://metacpan.org/release/MICHIELB/File-MimeInfo-0.32
[11:42:16] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Remote host closed the connection)
[11:57:01] *** Quits: ekathva (~ekathva@n14jozpbxtbgza7g9-1.v6.elisa-mobile.fi) (Ping timeout: 245 seconds)
[12:01:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[12:02:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[12:03:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:07:39] *** Joins: ekathva (~ekathva@85-76-69-134-nat.elisa-mobile.fi)
[12:07:41] *** Quits: ekathva (~ekathva@85-76-69-134-nat.elisa-mobile.fi) (Remote host closed the connection)
[12:10:41] *** Joins: epony (epony@user/epony)
[12:12:56] *** Quits: rgrinberg (~textual@187.223.170.172) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[12:12:57] *** Quits: bs338 (~pi@host86-170-55-212.range86-170.btcentralplus.com) (Ping timeout: 240 seconds)
[12:14:54] *** Joins: bs338 (~pi@host86-170-55-212.range86-170.btcentralplus.com)
[12:20:28] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:26:30] * GumbyPAN CPAN Upload: Test-File-Cmp-0.01 by AAHAZRED https://metacpan.org/release/AAHAZRED/Test-File-Cmp-0.01
[12:30:08] *** Quits: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2) (Quit: You have been kicked for being idle)
[12:32:10] *** Joins: Manderson (~manderson@45.40.81.122)
[12:33:04] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[12:34:12] *** Quits: Manderson__ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 240 seconds)
[12:35:02] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[12:35:33] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Remote host closed the connection)
[12:36:42] *** Joins: martinus__ (~martin@92.29.201.77.rev.sfr.net)
[12:36:48] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:36:56] *** Quits: Manderson (~manderson@45.40.81.122) (Ping timeout: 256 seconds)
[12:39:09] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[12:39:45] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[12:45:07] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[12:48:37] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:49:16] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[12:53:06] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[12:56:36] *** Quits: Starfoxxes (~Starfoxxe@ip-037-201-006-167.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:57:24] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:00:21] *** Quits: zhmylove (~zhmylove@178.252.127.211) (Quit: Leaving)
[13:00:35] *** Joins: zhmylove (~zhmylove@178.252.127.211)
[13:04:22] *** Joins: fling (~fling@user/fling)
[13:07:21] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[13:15:29] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[13:27:29] *** Quits: veesh (~veesh@77.137.130.85) (Ping timeout: 250 seconds)
[13:32:57] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[13:34:42] *** Joins: japhjobb (~japh@195-198-186-122.customer.telia.com)
[13:39:18] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 260 seconds)
[13:42:07] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 256 seconds)
[13:44:03] *** Joins: Pali (~pali@user/pali)
[13:44:30] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 272 seconds)
[13:46:37] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[13:47:46] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:49:09] *** Quits: japhjobb (~japh@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[13:55:31] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:57:14] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[14:02:31] *** Joins: japhjobb (~japh@host-78-78-219-137.mobileonline.telia.com)
[14:04:46] *** Quits: japh (~scp1@user/japh) (Ping timeout: 272 seconds)
[14:05:06] *** Joins: japh (~scp1@user/japh)
[14:11:29] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[14:11:41] * GumbyPAN CPAN Upload: Module-Generic-v0.21.7 by JDEGUEST https://metacpan.org/release/JDEGUEST/Module-Generic-v0.21.7
[14:12:22] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[14:16:42] * GumbyPAN CPAN Upload: CLASS-v1.1.6 by JDEGUEST https://metacpan.org/release/JDEGUEST/CLASS-v1.1.6
[14:32:13] *** Quits: Trigon_ (~reuben@144.39.114.115) (Ping timeout: 256 seconds)
[14:36:29] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:41:35] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[14:42:40] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[14:44:02] *** Quits: japhjobb (~japh@host-78-78-219-137.mobileonline.telia.com) (Ping timeout: 272 seconds)
[14:45:06] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Remote host closed the connection)
[14:50:40] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:02:36] *** Quits: japh (~scp1@user/japh) (Ping timeout: 240 seconds)
[15:03:22] *** Joins: magla (~gelignite@55d44ff4.access.ecotel.net)
[15:03:40] *** Joins: japhjobb (~japh@host-78-78-219-137.mobileonline.telia.com)
[15:04:51] *** Joins: japh (~scp1@user/japh)
[15:06:49] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[15:07:00] <xenu> one thing i really miss in firefox is builtin language translation
[15:07:32] <xenu> there are some addons that add that, but they basically just redirect to google translate and that doesn't work with websites that use js to load content
[15:08:04] <xenu> chrome and edge are smarter and they translate just text and replace it on the page client side
[15:08:29] *** Quits: japhjobb (~japh@host-78-78-219-137.mobileonline.telia.com) (Ping timeout: 256 seconds)
[15:09:16] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:11:01] <xenu> oh, apparently it's in the works and nightly versions have it
[15:11:18] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[15:12:43] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:16:48] * GumbyPAN CPAN Upload: Mail-Qmail-Filter-1.3.0 by FANY https://metacpan.org/release/FANY/Mail-Qmail-Filter-1.3.0
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:20] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[15:31:03] *** Joins: csrf (~csrf@user/csrf)
[15:43:22] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 256 seconds)
[15:51:43] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[15:54:51] *** Joins: proller (~p@80.240.216.69)
[15:56:31] <zhmylove> Hi everyone. I was just wondering, in https://docs.mojolicious.org/Mojo/Promise.txt under sub _all they're using $promises[0]->clone as a returning promise. Why don't they just use Mojo::Promise->new instead? Any thoughts clone() is better? Thanks!
[15:58:03] <zhmylove> The only reason I see is that clone is a shorter version of new + setting the same ioloop with the original one.
[15:59:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 260 seconds)
[15:59:50] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[16:01:08] *** Joins: Adoi (~Adoi@user/adoi)
[16:01:13] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[16:01:18] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 272 seconds)
[16:04:02] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[16:05:30] *** Joins: v` (~v@user/ctrl)
[16:10:53] *** wd40 is now known as dilfridge
[16:13:55] *** Joins: proller (~p@2a02:6b8:b081:31::1:27)
[16:16:00] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[16:17:01] *** Joins: veesh (~veesh@89.237.99.17)
[16:19:02] *** Quits: deadmarshal_ (~deadmarsh@95.38.115.28) (Ping timeout: 272 seconds)
[16:19:56] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[16:21:12] *** Quits: veesh (~veesh@89.237.99.17) (Remote host closed the connection)
[16:22:35] *** Joins: veesh (~veesh@89.237.99.17)
[16:30:55] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[16:34:56] *** Quits: Woodzy (~quassel@198.204.246.228) (Ping timeout: 256 seconds)
[16:35:09] *** Joins: Woodzy (~quassel@198.204.246.228)
[16:35:18] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:36:39] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Quit: polettix)
[16:37:13] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:37:25] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:37:51] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:38:12] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:38:44] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:38:59] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:39:20] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:39:46] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:40:10] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:40:17] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:40:32] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:40:55] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:41:19] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:41:49] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:42:06] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:42:27] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:42:52] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:43:25] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:43:40] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:44:00] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:44:26] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:44:57] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:45:13] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:45:34] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[16:45:59] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[16:49:26] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[17:07:00] * GumbyPAN CPAN Upload: Math-GMPz-0.54 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-GMPz-0.54
[17:14:48] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:14:58] *** Joins: interior_ocean (~lain@176-93-245-32.bb.dnainternet.fi)
[17:22:01] * GumbyPAN CPAN Upload: Hash-Typed-0.01 by LNATION https://metacpan.org/release/LNATION/Hash-Typed-0.01
[17:27:02] * GumbyPAN CPAN Upload: MarpaX-ESLIF-6.0.15 by JDDPAUSE https://metacpan.org/release/JDDPAUSE/MarpaX-ESLIF-6.0.15
[17:29:54] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[17:38:12] *** Quits: japh (~scp1@user/japh) (Ping timeout: 250 seconds)
[17:39:46] *** Joins: japhjobb (~japh@195-198-186-122.customer.telia.com)
[17:40:12] *** Joins: japh (~scp1@user/japh)
[17:42:26] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (Ping timeout: 260 seconds)
[17:44:16] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:c486:dc7e:8ce4:e6c9)
[17:44:39] *** Quits: japhjobb (~japh@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[17:48:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 260 seconds)
[17:48:22] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[17:58:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:59:22] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 256 seconds)
[18:09:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[18:10:37] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[18:15:14] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[18:18:19] *** Joins: michelle_ (~michelle@2407:8800:bc20:200a:cc1b:d05e:e093:6c3b)
[18:19:46] *** Quits: Shells (~michelle@203.206.128.220) (Ping timeout: 256 seconds)
[18:26:23] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[18:35:54] *** Quits: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Remote host closed the connection)
[18:39:49] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-543d-a065-e6d9-3062.res6.spectrum.com)
[18:39:49] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[18:40:59] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[18:45:49] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[18:52:02] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[18:52:11] * GumbyPAN CPAN Upload: App-SpamcupNG-0.013 by ARFREITAS https://metacpan.org/release/ARFREITAS/App-SpamcupNG-0.013
[18:57:35] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:58:52] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[19:05:45] <manjaroi3> would you prefer returning ref of array or values of array?
[19:06:11] <simcop2387> depends on the api in question, but i usually go for refs
[19:06:34] <manjaroi3> and sending as parameter too
[19:06:50] <simcop2387> always a ref when giving parameters.  fewer gotcha
[19:07:05] <manjaroi3> me too :>
[19:07:13] * GumbyPAN CPAN Upload: Hash-Typed-0.02 by LNATION https://metacpan.org/release/LNATION/Hash-Typed-0.02
[19:08:37] *** Quits: veesh (~veesh@89.237.99.17) (Ping timeout: 240 seconds)
[19:15:38] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[19:17:20] *** Parts: interior_ocean (~lain@176-93-245-32.bb.dnainternet.fi) ()
[19:25:40] <vanfanel64> Just took a look at freenode just of morbid curiosity of what it had become, and it feels like a ghost town. The only activity in any tech channel I found was on the topic of literal llama porn.
[19:27:41] <zgu> how is that a tech channel?
[19:29:24] *** TonyStone31 is now known as TonyStone
[19:29:47] <vague> It requires some technique to accomplish the feat
[19:38:22] <rindolf> sup y'all?
[19:39:01] <vanfanel64> zgu: That is just it, freenode evidently has tech channels in name only, at least from what I've checked. It feels like a total cesspool.
[19:41:45] <vanfanel64> Even their web site is just a weird blog now, cannot even find general server info like their used to be. The freenode we all knew truly seems to be gone (well, by name. By essence, we have libera of course)
[19:42:53] <vanfanel64> (Oh, now in a php channel there is a "discussion" on theories of flatulance... just great (and somewhat fitting in some ways, I must admit)
[19:43:48] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[19:44:18] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[19:47:41] <simcop2387> vanfanel64: yea even pissnet has more reputable tech channels now.  i blame the freenode crypto and nfts
[19:48:23] <LeoNerd> I suddenly feel sorry for anyone writing about NTFS, who might get caught up in typos
[19:50:32] <simcop2387> https://freenode.net/n/freenode/80/freenode-belongs-to-you # for anyone curious about my crypto snark there
[19:50:32] <Paperbot> Link title(s): [ freenode belongs to you |  freenode ]
[19:51:18] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[19:56:01] <aquanight> starting to think I'm not missing anything when I just dumped freenode outright when the great bailing happened.
[19:56:21] <manjaroi3> Is there any simple way to set INC for local dir?
[19:57:03] <aquanight> manjaroi3: couple of options
[19:57:13] <simcop2387> aquanight: aside from some early drama and popcorn moments, not really
[19:57:21] <aquanight> if you just want to set up a lib/ in your home directory for installing CPAN modules, look into https://metacpan.org/pod/local::lib
[19:57:22] <Paperbot> Link title(s): [ local::lib - create and use a local lib/ for perl modules with PERL5LIB - metacpan.org ]
[19:57:25] <simcop2387> perlbot: local::lib
[19:57:25] <perlbot> simcop2387: makes the process of installing modules in one's home directory (or anywhere other than the default) easy. Remember to start with the bootstrap install - that fixes the "I don't have local::lib yet" problem. http://p3rl.org/local::lib <3
[19:57:39] <simcop2387> perlbot: @INC
[19:57:39] <perlbot> simcop2387: To change @INC (perldoc perlvar), 'use lib' (perldoc lib), or use the -I option to perl (perldoc perlrun), or set the PERLLIB or PERL5LIB environment variables (perldoc perlrun), or recompile perl. See also local::lib for making installing modules to a custom @INC easier
[19:57:41] <aquanight> if you just need to pull some files from the same directory
[19:57:48] <simcop2387> that was the one i wanted for you
[19:59:06] <simcop2387> alright, i think i might finally be on the last base image rebuild needed for all the docker containers.  yay
[19:59:21] <aquanight> for pulling from the same directory, you might want something like use Cwd; use lib getcwd();
[19:59:46] <aquanight> ( do *not* just push "." into @INC, it has the downside of making your search path vulnerable to unexpected chdir()s
[20:00:14] <aquanight> it's fine for quickies, but for anything bigger, put a proper path in there, however you get said path)
[20:00:25] <manjaroi3> I will do all yours to find mine :> thanks
[20:02:05] *** Joins: SergeiZhmylev (~zhmylove@178.252.127.211)
[20:02:05] *** Quits: zhmylove (~zhmylove@178.252.127.211) (Read error: Connection reset by peer)
[20:11:19] * GumbyPAN CPAN Upload: Mac-Pasteboard-0.102_02 by WYANT https://metacpan.org/release/WYANT/Mac-Pasteboard-0.102_02
[20:13:10] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[20:15:31] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[20:19:08] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:23:24] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[20:23:40] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Remote host closed the connection)
[20:31:21] * GumbyPAN CPAN Upload: Parallel-Queue-v4.0.5 by LEMBARK https://metacpan.org/release/LEMBARK/Parallel-Queue-v4.0.5
[20:31:57] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[20:36:48] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[20:46:37] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 240 seconds)
[20:49:13] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:50:48] *** Joins: veesh (~veesh@77.137.131.142)
[20:52:12] *** Quits: SergeiZhmylev (~zhmylove@178.252.127.211) (Ping timeout: 256 seconds)
[20:56:24] * GumbyPAN CPAN Upload: perl-5.34.1-RC2 by SHAY https://metacpan.org/release/SHAY/perl-5.34.1-RC2
[21:11:01] *** Joins: willthechill (~willthech@67-198-50-210.static.grandenetworks.net)
[21:24:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[21:32:53] *** Joins: SergeiZhmylev (~zhmylove@146.120.76.72)
[21:33:30] *** Joins: deadmarshal_ (~deadmarsh@95.38.115.28)
[21:35:46] *** Joins: monkey_ (~user@190.104.116.153)
[21:38:41] *** Joins: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e)
[21:42:05] *** Joins: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[21:45:00] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Quit: polettix)
[21:47:17] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[21:47:34] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:47:35] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 252 seconds)
[22:05:56] *** Quits: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[22:07:57] *** Joins: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[22:13:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:15:24] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[22:21:49] *** Quits: monkey_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[22:23:42] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Quit: polettix)
[22:24:13] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:24:29] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:24:50] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:25:16] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:25:34] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[22:25:46] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:26:02] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:26:32] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:26:45] *** Quits: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[22:26:49] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:27:09] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:27:35] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:27:57] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:28:14] *** Joins: martinus__ (~martin@92.29.201.77.rev.sfr.net)
[22:28:22] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:28:45] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:29:09] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:29:31] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:29:50] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[22:29:55] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:30:18] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:30:42] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:31:03] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:31:29] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:31:51] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:32:15] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:32:36] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:33:02] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:33:07] *** Joins: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e)
[22:33:23] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:33:49] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:34:10] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:34:35] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:34:56] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:35:22] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:35:43] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:36:09] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:36:28] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:36:55] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:37:20] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:37:42] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Client Quit)
[22:38:03] *** Joins: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it)
[22:39:37] *** Quits: subie (~subie@2601:4c0:4080:bc0:ca0f:1d28:f742:47b5) (Ping timeout: 240 seconds)
[22:41:35] * GumbyPAN CPAN Upload: Git-CPAN-Patch-2.5.0 by YANICK https://metacpan.org/release/YANICK/Git-CPAN-Patch-2.5.0
[22:42:23] *** Joins: subie (~subie@c-68-35-254-134.hsd1.fl.comcast.net)
[22:42:24] *** Quits: polettix (~polettix@93-34-90-92.ip49.fastwebnet.it) (Ping timeout: 250 seconds)
[22:47:37] *** Quits: deadmarshal_ (~deadmarsh@95.38.115.28) (Ping timeout: 240 seconds)
[22:49:27] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[22:49:28] *** diskin is now known as Guest4296
[22:49:28] *** Quits: Guest4296 (~diskin@31.23.45.31) (Killed (strontium.libera.chat (Nickname regained by services)))
[22:49:28] *** diskin_ is now known as diskin
[23:17:40] *** Joins: Trigon_ (~reuben@144.39.114.115)
[23:25:48] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[23:26:26] *** Joins: zyweo (~Svew@user/zyweo)
[23:27:47] *** Joins: Adoi (~Adoi@user/adoi)
[23:31:05] *** Joins: EvanCarroll (~ecarroll@12.216.92.144)
[23:32:52] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[23:37:34] *** Quits: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e) (Ping timeout: 260 seconds)
[23:43:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:47:07] *** Joins: deadmarshal_ (~deadmarsh@95.38.115.28)
[23:51:52] *** Quits: deadmarshal_ (~deadmarsh@95.38.115.28) (Ping timeout: 272 seconds)
[23:53:57] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[23:58:50] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 272 seconds)
