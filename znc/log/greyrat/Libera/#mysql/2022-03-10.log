[00:19:28] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:19:44] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[00:39:22] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:2f9c) (Quit: Client closed)
[00:42:54] *** Joins: asdfa434t3 (~asdfa434t@ec2-54-219-254-232.us-west-1.compute.amazonaws.com)
[00:46:07] <asdfa434t3> hi, i have a db where each row has a numeric range, i.e. [low_num, high_num). i'm running many queries where, given a number, i want to find the row whose range contains it. the ranges are all mutually exclusive, meaning that once you find the row with largest low_num such that low_num <= num, you know that's the only candidate row and you just
[00:46:08] <asdfa434t3> have to check num < high_num. is there a way to index it to optimize it for this case?
[00:55:41] *** Quits: asdfa434t3 (~asdfa434t@ec2-54-219-254-232.us-west-1.compute.amazonaws.com) (Quit: Client closed)
[00:58:45] <lopid> an index on the two columns?
[01:16:19] *** Quits: bjsnider (~bjsnider@user/bjsnider) (Quit: Connection closed)
[01:18:37] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:18:50] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[01:44:16] *** Joins: dobbicorp (~chipas@user/dobbicorp)
[01:52:26] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:29:02] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[02:46:31] *** Joins: ferdna (~ferdna@user/ferdna)
[02:53:14] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:56:46] *** Quits: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz) (Ping timeout: 272 seconds)
[03:27:42] *** Joins: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[03:38:50] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:48:31] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Write error: Connection reset by peer)
[03:48:31] *** Quits: kevr (~kevr@user/kevr) (Write error: Connection reset by peer)
[03:48:56] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Ping timeout (120 seconds))
[03:49:11] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[03:49:27] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Quit: Ping timeout (120 seconds))
[03:50:27] *** Joins: kevr (~kevr@user/kevr)
[04:33:38] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:33:54] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[04:41:21] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:41:51] *** Joins: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz)
[04:51:26] *** Quits: dobbicorp (~chipas@user/dobbicorp) (Quit: Lost terminal)
[04:54:18] *** Quits: Kira (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:55:00] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[05:04:15] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[05:05:26] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[05:13:15] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:15:31] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[06:16:06] <sadtaco> I can't figure out why a query I have times out sometimes. It's a select where or. Making it select where is fast but I do need the or. https://paste.mozilla.org/FTkfhcvs
[06:17:57] <Xgc> sadtaco: 1) Don't use LIKE when you really want =
[06:18:50] <sadtaco> Yeah. I tried it with = too but doesn't seem to make a difference.
[06:19:24] <Xgc> sadtaco: Also: WHERE 'foo@gmail.com' IN (accounts.email, users.name)
[06:19:33] <sadtaco> ahh
[06:19:53] <Xgc> sadtaco: Replace the LEFT JOIN with JOIN.
[06:21:03] <sadtaco> Ohhh yeah the left join is probably the big reason why the or times out isn't it. Oops. But ty for the other issues too.
[06:21:06] <Xgc> sadtaco: Next, you can use UNION ALL instead.
[06:21:40] <sadtaco> I haven't used that before. I'll look up how it works.
[06:21:56] <Xgc> sadtaco: No need to have OR logic when you want one row and it can be either x = 'a' .... UNION ALL  ... y = 'a'
[06:22:17] <Xgc> sadtaco: That allows each to use a different index.
[06:33:25] <thumbs> there is a small cost to joining the union members, but it's easily offset by the gain from using individual indexes
[06:33:40] <thumbs> /21/21
[06:54:18] <ss23> !t me joins
[06:54:18] <ubiquity_bot> ss23: Very basic join information: https://hashmysql.net/wiki/Introduction_to_Joins
[06:54:28] <thumbs> !poke ss23
[06:54:49] <ss23> !t me db
[06:54:49] <ubiquity_bot> ss23: https://bot.hashmysql.net/ubiquity/
[06:55:01] <ss23> thumbs: ow!
[07:01:50] *** Joins: Sachiru (~Sachiru@120.29.69.24)
[07:03:24] <skyfall> When inside a MySQL shell, is there a way I can write the output of a query to a file? Like redirecting the STDOUT to STDIN of a newly created file.
[07:04:55] <skyfall> Sees like `SELECT .... INTO OUTFILE 'foo.txt';` does the job.
[07:07:16] *** Quits: Sachiru (~Sachiru@120.29.69.24) (Quit: Client closed)
[07:07:28] *** Joins: Sachiru (~Sachiru@120.29.69.24)
[07:10:40] <Sachiru> Any replication gurus here? We're migrating a single instance MySQL 8.0 database to a MySQL8+Galera cluster and the origin/production DB can't go down, so the idea was to seed the cluster with the original DB data, then turn on replication to one node in the cluster until it's all caught up. Galera is seeded with initial MySQL db data, but
[07:10:40] <Sachiru> replication seems stuck at "Waiting for source to send event", unsure if it's because it's parsing relay logs or I made a mistake.
[07:10:41] <Sachiru> How do I troubleshoot/diagnose this? Replica_IO_Running and Replica_SQL_Running appear OK, SHOW PROCESSLIST has a thread stuck at "connecting host" and "Waiting for source to send event", Replica_IO_State is stuck at "Waiting for source to send event",Â  Replica_SQL_Running_State is stuck at "Waiting for dependent transaction to commit" and
[07:10:41] <Sachiru> seconds_behind_master keeps increasing.
[07:28:16] *** Quits: Vacuity (~Vacuity@user/vovo) (Ping timeout: 256 seconds)
[07:29:58] *** Joins: Vacuity (~Vacuity@user/vovo)
[07:31:27] <Sachiru> Any way to trace what that dependent transaction is and see why it isn't committing?
[08:40:30] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[08:40:45] *** Joins: kevr (~kevr@user/kevr)
[09:33:16] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[09:47:44] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:39:18] *** Quits: Yoda-BZH (~yoda-bzh@2a01:e34:ecb0:2b10:e4a5:caa6:6f85:13ff) (Changing host)
[10:39:18] *** Joins: Yoda-BZH (~yoda-bzh@user/yoda-bzh)
[10:56:26] *** Joins: ferdna (~ferdna@user/ferdna)
[11:30:02] *** Joins: palasso (~palasso@user/palasso)
[11:40:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[12:37:57] *** Joins: supercool1 (supercool@2600:3c01::f03c:91ff:fee5:c75e)
[12:38:05] *** Quits: supercool (supercool@2600:3c01::f03c:91ff:fee5:c75e) (Remote host closed the connection)
[12:38:14] <sadtaco> I'm getting the same exact query time for both WHERE IN and UNION ALL. But both are very fast and like 300 times faster than how I had it before.
[13:45:00] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 240 seconds)
[14:40:18] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[15:03:58] *** Joins: tercaL (~tercaL@user/tercal)
[15:24:17] *** Quits: dupondje (~dupondje@artemis.dupie.be) (Quit: dupondje)
[15:27:15] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[15:27:41] <cart_> Is there a query I can run that will show me the last queries to hit the DB?
[15:30:01] *** Quits: karstensrage (~karstensr@user/karstensrage) (Quit: ZNC - http://znc.in)
[15:31:22] <Isotopp> yes, if you are on a sufficiently new mysql, and performance_schema is enabled.
[15:31:59] <Isotopp> you may want to ensure that
[15:31:59] <Isotopp> performance_schema_consumer_events_statements_current = ON
[15:31:59] <Isotopp> performance_schema_consumer_events_statements_history = ON
[15:32:00] <Isotopp> performance_schema_consumer_events_statements_history_long = ON
[15:32:02] <Isotopp> in your config.
[15:32:36] <Isotopp> events_statements_history_long holds the last 5000 statements or so that the database has seen
[15:32:46] <Isotopp> events_statements_history holds the last 5 ststements or so per connnection
[15:32:59] <Isotopp> a lot of software exists that picks this up and uses it for statistics
[15:33:30] <Isotopp> i once tried this here https://blog.koehntopp.info/2021/09/15/mysql-tracing-a-single-query-with-performanceschema.html
[15:33:33] <Isotopp> cart_: ^^
[15:49:17] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:49:36] *** Joins: mickey (~user@user/mickey)
[16:24:24] *** Quits: Sachiru (~Sachiru@120.29.69.24) (Quit: Client closed)
[17:06:16] *** Joins: nickodd (~nickodd@user/nickodd)
[17:15:24] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:7445)
[17:17:51] *** Joins: pmercado (~pmercado@186.107.36.19)
[17:19:51] *** Joins: adlternative (~adl@117.32.216.71)
[17:23:15] *** Quits: adlternative (~adl@117.32.216.71) (Client Quit)
[18:12:37] *** Joins: karstensrage (~karstensr@nibbler.warped.com)
[18:12:59] *** Quits: karstensrage (~karstensr@nibbler.warped.com) (Changing host)
[18:12:59] *** Joins: karstensrage (~karstensr@user/karstensrage)
[18:49:07] *** Quits: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz) (Remote host closed the connection)
[18:49:37] *** Joins: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz)
[19:10:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[19:10:56] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[19:12:26] *** Joins: Guest5410 (~Guest54@2620:10d:c092:400::4:7445)
[19:35:26] *** Quits: saint_ (~saint42@user/saint/x-0207335) (Ping timeout: 260 seconds)
[20:06:09] *** Quits: Guest5410 (~Guest54@2620:10d:c092:400::4:7445) (Ping timeout: 256 seconds)
[20:06:09] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:7445) (Ping timeout: 256 seconds)
[20:09:10] *** Parts: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Leaving)
[20:10:42] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[20:11:00] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Ping timeout: 256 seconds)
[20:22:14] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[20:24:45] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:7445)
[20:38:49] *** Joins: goddard (~goddard@user/goddard)
[20:39:12] <goddard> can i do a CONCAT_WS() LIKE ? OR LIKE ? or do i gotta repeat the whole CONTACT_WS?
[20:41:29] <Naktibalda> you have to repeat
[20:41:37] <Naktibalda> or use single pattern with REGEXP
[20:44:33] <Naktibalda> can't you use LIKE with individual fields, condition with expression can't use index
[20:47:32] <goddard> gotcha thanks
[20:49:34] *** Joins: whomp (~cahoots@186.97.175.34)
[20:52:31] *** supercool1 is now known as supercool
[21:03:10] <whomp> hi, i have a table where each row consists of library_name (string), start (number), end (number), and fn_name (string). given a list of (library_name, number) pairs, for each pair i want to return the fn_name for the row where start <= number < end. the table has 6 million rows. after grouping the pairs by library name, i have a query as such: "select * from table where (library_name = 'myLib' and ((start
[21:03:16] <whomp> <= 1234 and 1234 < end) or (start <= ...))) or library_name = ...". however, given 4,500 (library_name, number) pairs for a single query, it takes 55 seconds to finish. i currently have the table's primary index as (library_name, start). any ideas how i might speed this up further?
[21:14:32] <Naktibalda> you could replace each OR with UNION, then each part would be able to use index
[21:18:28] <Naktibalda> can't you simplify your query to SELECT * FROM table WHERE start BETWEEN x AND y  ?
[21:19:48] *** Joins: whomp2 (~whomp2@186.97.175.34)
[21:24:01] *** Quits: whomp (~cahoots@186.97.175.34) (Quit: leaving)
[21:28:53] *** Quits: whomp2 (~whomp2@186.97.175.34) (Ping timeout: 256 seconds)
[21:40:48] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Wink, Wink, nudge, nudge. Know what I mean?)
[21:40:49] *** Quits: potemgin (~gmh@c-73-244-192-129.hsd1.fl.comcast.net) (Quit: WeeChat 3.4)
[21:42:29] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:7445) (Ping timeout: 256 seconds)
[22:03:34] *** Joins: whomp (~cahoots@186.97.175.34)
[22:03:47] <whomp> Naktibalda, good point about "between", it helps a little with performance and simplifies the query. this union you mention, would it be something like "(select * from table where library_name = 'myLib' and ((0xf100 between start and end) and ...)) union (select * from table where library_name = 'myLib2' and ...)"?
[22:06:33] <whomp> ah i think i see. split it with "union" for each address lookup
[22:07:24] *** Joins: funhouse (~funhouse@user/funhouse)
[22:13:08] *** Joins: whomp2 (~whomp2@186.97.175.34)
[22:13:46] <whomp> seems to improve it a bit
[22:14:05] *** Quits: whomp2 (~whomp2@186.97.175.34) (Client Quit)
[22:14:08] *** Quits: whomp (~cahoots@186.97.175.34) (Quit: leaving)
[22:14:23] *** Joins: whomp2 (~whomp2@ec2-54-219-254-232.us-west-1.compute.amazonaws.com)
[22:18:50] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[22:32:30] *** Quits: whomp2 (~whomp2@ec2-54-219-254-232.us-west-1.compute.amazonaws.com) (Quit: Client closed)
[22:37:47] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[22:41:28] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[23:10:04] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[23:12:55] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Client Quit)
[23:27:32] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
