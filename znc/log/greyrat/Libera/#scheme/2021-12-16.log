[00:04:56] *** Joins: badkins (~badkins@136.56.92.199)
[00:06:31] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[00:14:32] *** Joins: xsperry (~xs@user/xsperry)
[00:20:31] *** Quits: light (~light@user/light) (Ping timeout: 252 seconds)
[00:21:01] *** Joins: light (~light@user/light)
[01:21:14] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[01:35:35] *** Quits: yewscion (~yewscion@52.94.133.131) (Quit: Connection closed)
[01:57:13] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:04:09] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:04:44] *** Joins: badkins (~badkins@136.56.92.199)
[02:07:04] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:07:12] *** Joins: badkins (~badkins@136.56.92.199)
[02:09:39] *** Quits: wnklmnn (~wnklmnn@2a02:908:4e2:9740:2d8:61ff:fef9:b4c2) (Quit: Leaving)
[02:12:56] *** Joins: zacts (~zacts@user/zacts)
[02:13:18] *** Joins: avidela (~textual@88.98.244.170)
[02:20:12] *** avidela is now known as zephyz
[02:22:46] <zephyz> Hi there, what is the correct way to extract the message out of an exception in chez-scheme? I tried exn-message but it says its unbound
[02:23:04] <wasamasa> I'd expect R6RS to cover that
[02:23:43] *** Joins: yewscion (~yewscion@52.94.133.131)
[02:25:56] <mdhughes> (condition-message x)
[02:26:50] <mdhughes> And (condition-who x) (condition-irritants x)
[02:28:13] *** Quits: zephyz (~textual@88.98.244.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:30:59] *** Joins: avidela (~textual@88.98.244.170)
[02:31:01] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 256 seconds)
[02:33:09] *** Quits: avidela (~textual@88.98.244.170) (Client Quit)
[02:47:03] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[02:47:54] *** Quits: yewscion (~yewscion@52.94.133.131) (Ping timeout: 260 seconds)
[02:50:07] *** Parts: kori1 (kori@2600:3c00::f03c:92ff:feb4:be75) ()
[02:50:16] *** Joins: kori (kori@user/kori)
[02:52:05] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 250 seconds)
[02:59:39] *** Joins: winningluser (~wl@2601:8c1:80:70d0::756)
[03:02:12] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:9876:dcfa:8764:8af) (Quit: Client closed)
[03:03:47] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[03:04:17] *** Joins: badkins (~badkins@136.56.92.199)
[03:08:59] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[03:13:02] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 240 seconds)
[03:13:06] *** Joins: notzmv (~zmv@user/notzmv)
[03:30:03] *** Quits: winningluser (~wl@2601:8c1:80:70d0::756) (*.net *.split)
[03:30:03] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (*.net *.split)
[03:30:03] *** Quits: schulze (~schulze@dynamic-077-001-062-038.77.1.pool.telefonica.de) (*.net *.split)
[03:30:03] *** Quits: theruran_ (uid11305@id-11305.hampstead.irccloud.com) (*.net *.split)
[03:30:03] *** Quits: zwr (~zwr@2804:d45:b966:fb00:3186:b42a:1a11:574d) (*.net *.split)
[03:30:03] *** Quits: mdhughes (~mdhughes@user/mdhughes) (*.net *.split)
[03:30:04] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[03:30:04] *** Quits: turlando (~turlando@user/turlando) (*.net *.split)
[03:30:04] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (*.net *.split)
[03:30:04] *** Quits: robin (~robin@user/terpri) (*.net *.split)
[03:30:04] *** Quits: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2) (*.net *.split)
[03:30:04] *** Quits: Lysandros (~Lysandros@user/lysandros) (*.net *.split)
[03:30:04] *** Quits: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com) (*.net *.split)
[03:30:04] *** Quits: sm2n (ae95cb1267@user/sm2n) (*.net *.split)
[03:30:04] *** Quits: axvr (757f658d76@2604:bf00:561:2000::e1) (*.net *.split)
[03:30:04] *** Quits: nytpu (5a8c9ec580@2604:bf00:561:2000::33) (*.net *.split)
[03:30:04] *** Quits: j0ni (c79e08d4b1@2604:bf00:561:2000::2a) (*.net *.split)
[03:30:04] *** Quits: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce) (*.net *.split)
[03:30:04] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[03:30:05] *** Quits: deltab (~deltab@user/deltab) (*.net *.split)
[03:30:05] *** Quits: Perryman (~perryman@user/perryman) (*.net *.split)
[03:30:05] *** Quits: Kooda (~kooda@natsu.upyum.com) (*.net *.split)
[03:30:05] *** Quits: sjamaan (~sjamaan@chicken/developer/sjamaan) (*.net *.split)
[03:30:05] *** Quits: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com) (*.net *.split)
[03:30:05] *** Quits: flatwhatson (~flatwhats@115-64-234-110.tpgi.com.au) (*.net *.split)
[03:30:05] *** Quits: wigust (~wigust@130.61.95.6) (*.net *.split)
[03:30:05] *** Quits: even4void (even4void@came.here.for-some.fun) (*.net *.split)
[03:30:06] *** Quits: phoebos (~phoebos@kisslinux/phoebos) (*.net *.split)
[03:30:06] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[03:30:06] *** Quits: Zipheir (~wcm@98.4.178.27) (*.net *.split)
[03:30:06] *** Quits: groomvy (sid62069@id-62069.hampstead.irccloud.com) (*.net *.split)
[03:30:06] *** Quits: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (*.net *.split)
[03:30:06] *** Quits: leah2 (~leah@vuxu.org) (*.net *.split)
[03:30:06] *** Quits: siiky (~siiky@2001:8a0:ff52:4b00:d65f:f081:77d0:63d8) (*.net *.split)
[03:30:06] *** Quits: lazr (~lazr@45.76.248.123) (*.net *.split)
[03:30:11] *** Joins: deltab (~deltab@95.154.230.49)
[03:30:12] *** Quits: deltab (~deltab@95.154.230.49) (Changing host)
[03:30:12] *** Joins: deltab (~deltab@user/deltab)
[03:30:14] *** Joins: j0ni (c79e08d4b1@2604:bf00:561:2000::2a)
[03:30:16] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[03:30:16] *** Joins: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce)
[03:30:16] *** Joins: nytpu (5a8c9ec580@2604:bf00:561:2000::33)
[03:30:25] *** Joins: Lysandros (~Lysandros@2a02:aa13:8100:7880:21a:a0ff:fea7:35e)
[03:30:34] *** Joins: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com)
[03:30:39] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[03:30:39] *** Joins: turlando (~turlando@user/turlando)
[03:30:42] *** Joins: Zipheir (~wcm@98.4.178.27)
[03:30:48] *** Joins: Kooda (~kooda@natsu.upyum.com)
[03:30:50] *** Joins: lazr (~lazr@45.76.248.123)
[03:31:10] *** Joins: theruran_ (uid11305@2a03:5180:f:4::2c29)
[03:31:30] *** Joins: groomvy (sid62069@hampstead.irccloud.com)
[03:31:39] *** Joins: s-liao (~s-liao@101.86.96.154)
[03:32:11] *** Joins: greaser|q (greaser@antihype.space)
[03:32:13] *** Joins: leah2 (~leah@vuxu.org)
[03:32:41] *** Joins: phoebos (~phoebos@kisslinux/phoebos)
[03:32:50] *** Joins: even4void (even4void@came.here.for-some.fun)
[03:33:42] *** Joins: flatwhatson (~flatwhats@115-64-234-110.tpgi.com.au)
[03:33:53] *** Joins: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2)
[03:33:56] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[03:33:56] *** Joins: greaser|q (greaser@user/greasemonkey)
[03:33:59] *** greaser|q is now known as GreaseMonkey
[03:34:07] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[03:34:18] *** Joins: sm2n (ae95cb1267@user/sm2n)
[03:34:22] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[03:34:32] *** Joins: wigust (~wigust@130.61.95.6)
[03:34:39] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[03:34:47] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[03:35:19] *** Joins: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com)
[03:35:26] *** Joins: sjamaan (~sjamaan@chicken/developer/sjamaan)
[03:35:27] *** Joins: zwr (~zwr@2804:d45:b966:fb00:a798:3719:6645:498)
[03:35:33] *** Joins: siiky (~siiky@2001:8a0:ff52:4b00:d65f:f081:77d0:63d8)
[03:36:17] *** Joins: livoreno (~livoreno@user/notzmv)
[03:36:40] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[03:45:41] *** Joins: winningluser (~wl@2601:8c1:80:70d0::756)
[03:48:55] *** Joins: badkins (~badkins@136.56.92.199)
[03:49:44] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[03:50:25] *** Joins: badkins (~badkins@136.56.92.199)
[04:23:45] <jcowan> Note however that condition-message only works if one of the types of the condition is &message.
[04:50:06] <mdhughes> Almost always the case at least in the ones I've caught, but you can (if (message-condition? x) (condition-message x) "error") if you're paranoid enough.
[04:52:00] *** Joins: klovett_ (~klovett@107.127.24.145)
[04:53:15] *** Quits: klovett (~klovett@107.115.32.161) (Ping timeout: 256 seconds)
[04:53:53] * jcowan nods
[05:05:39] *** Quits: curium (~curium@mail.clouded.monster) (Remote host closed the connection)
[05:07:07] *** Joins: curium (~curium@mail.clouded.monster)
[05:08:51] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[05:17:05] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[05:18:15] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[05:21:00] *** Joins: livoreno (~livoreno@user/notzmv)
[05:21:48] *** Quits: akarle (~akarle@user/akarle) (Remote host closed the connection)
[05:22:51] *** Joins: akarle (~akarle@user/akarle)
[05:30:43] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[05:32:28] *** Joins: badkins (~badkins@136.56.92.199)
[05:53:11] *** Quits: klovett_ (~klovett@107.127.24.145) (Quit: ZZZzzz…)
[05:54:30] *** Joins: klovett (~klovett@107.127.24.145)
[05:54:35] *** Quits: klovett (~klovett@107.127.24.145) (Client Quit)
[06:03:24] <daviid> related to the recent discussion here about lisp dialects, clojure ... absolutely just fwiw -  https://git.sr.ht/~rlb/lokke
[06:28:38] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 260 seconds)
[06:33:21] *** Joins: mason0 (~bc8147f2@cerf.good1.com)
[06:50:25] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 250 seconds)
[06:51:07] *** Quits: mason0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC)
[06:51:21] *** Joins: mason0 (~bc8147f2@cerf.good1.com)
[06:51:29] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[06:53:39] *** Joins: s-liao (~s-liao@101.86.96.154)
[06:54:44] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Quit: WeeChat 3.3)
[06:56:00] *** Joins: robin (~robin@user/terpri)
[07:01:15] *** Joins: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[07:02:21] *** Quits: s-liao (~s-liao@101.86.96.154) (Ping timeout: 256 seconds)
[07:10:13] *** Joins: s-liao (~s-liao@101.86.96.154)
[07:13:31] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[07:18:47] *** Quits: s-liao (~s-liao@101.86.96.154) (Ping timeout: 256 seconds)
[07:23:24] *** Joins: s-liao (~s-liao@101.86.96.154)
[07:28:37] *** Joins: klovett (~klovett@107.127.24.145)
[07:36:07] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:36:41] *** Parts: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (dave's not here)
[07:40:08] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[08:39:14] *** Joins: s-liao (~s-liao@101.86.96.154)
[08:51:58] *** Joins: badkins (~badkins@136.56.92.199)
[08:58:06] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[08:59:56] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 245 seconds)
[09:00:39] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[09:01:55] *** Joins: aeth (~aeth@user/aeth)
[09:04:26] *** Joins: X-Scale` (~ARM@206.46.158.5.rev.vodafone.pt)
[09:07:38] *** Quits: X-Scale (~ARM@31.22.202.86) (Ping timeout: 265 seconds)
[09:07:38] *** X-Scale` is now known as X-Scale
[09:39:41] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 252 seconds)
[09:51:56] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[09:55:19] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:06:18] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[10:16:38] <amazigh> Go 1.18 will come with generics, ref: https://go.dev/doc/tutorial/generics
[10:19:06] <Zipheir> They must have locked Ken and Rob in a closet.
[10:19:50] <amazigh> why is that? They dislike generics? why?
[10:20:40] <Zipheir> Too complicated, I suppose.
[10:20:57] <Zipheir> The syntax is very wonky, IMO.
[10:21:58] <Zipheir> It's like an implicit sum type or something... "V int | float".
[10:29:47] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[10:30:02] *** Joins: madage (~madage@user/madage)
[10:57:47] *** Joins: s-liao (~s-liao@101.86.96.154)
[11:01:28] <mdhughes> Give a coder strong typing, they're gonna be on your ass for generics and templates forever. Give a coder dynamic typing, they can put pigs in catapults forever on their own.
[11:14:31] *** Quits: s-liao (~s-liao@101.86.96.154) (Ping timeout: 256 seconds)
[11:16:16] *** Joins: schulze (~schulze@dynamic-077-008-148-223.77.8.pool.telefonica.de)
[11:22:43] *** Quits: winningluser (~wl@2601:8c1:80:70d0::756) (Quit: nyaa~)
[11:31:40] *** Joins: civodul (~user@guix/contributor/civodul)
[11:33:53] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:35:38] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[11:51:02] *** Quits: siiky (~siiky@2001:8a0:ff52:4b00:d65f:f081:77d0:63d8) (Ping timeout: 240 seconds)
[12:08:15] *** Quits: tripfandango (~tripfanda@5.29.44.90) (Ping timeout: 250 seconds)
[12:12:16] <sham1> Well having parametric polymorphism does make sense and a "modern language" like Go not having them for the longest time was very weird indeed
[12:21:14] <Franciman> lol
[12:21:18] <Franciman> go is a language from 1980
[12:22:18] <Franciman> imho it's the best argument both in favour and against programming language theory
[12:22:34] <Franciman> on one side it sucks so badly, that you think, ok research must be done
[12:22:49] <Franciman> on the other side, so many people use it that you think, uhm maybe we already solved most of the problems?
[12:24:52] <sham1> Even though paramteric polymorphism was a thing in the 80s. Functional languages, sure, but still
[12:26:27] <Franciman> lol yeah
[12:26:37] <Franciman> it's just the average 1980 language
[12:26:41] <Franciman> not a cutting edge one either
[12:26:43] <Franciman> auhahaha
[12:26:54] <Franciman> well they only have their channels thing and goroutines
[12:28:45] <sham1> Erlang did it first
[12:29:03] <sham1> And others as well, but Erlang is especially notable
[12:29:11] <Franciman> it was cutting edge in the 80s, I suppose
[12:29:20] <Franciman> isn't erlang from 90s, tho?
[12:29:57] <river> erlang also supports live code reloading
[12:30:15] <sham1> Yeah, but Erlang had big influence on the CSP model
[12:30:57] <Franciman> oh nono no doubt on that
[12:31:08] <Franciman> I just said go is from the 80s except for channels and goroutines
[12:31:10] <Franciman> :P
[12:32:23] <sham1> Mmm
[12:32:48] <sham1> The intriquing thing about Go of course is that it had parametric polymorphism before, but it just wasn't exposed to the user. Maps and the aforementioned channels were generic
[12:33:21] <sham1> Making it so that user-defined data structures and such were in a way 2nd class citizens
[12:33:41] *** Joins: s-liao (~s-liao@101.86.96.154)
[12:34:14] <Franciman> the programmer is also a II class citizen
[12:34:27] <Franciman> because she is forced to use whatever google decides is the way to use go
[12:34:41] <Franciman> you can't do much more than just write the code they decided you have to write
[12:34:59] <Franciman> in a way this is interesting
[12:35:04] <Franciman> it is a form of newspeak
[12:35:12] <Franciman> but for coders
[12:36:59] <Franciman> they put all the architectural patterns in place for you. You just need to think in that box and match things
[12:37:09] <Franciman> that's a great resource for companies, because the language is not hard
[12:37:25] <Franciman> and there is no risk on depending on few people and their strange out of the world abstractions
[12:37:40] <Franciman> but hell if I'd enjoy spending my free time using it
[12:37:45] <Franciman> I'd die 
[12:41:22] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:c02b:5de5:860a:1e36:4823)
[12:42:26] *** Quits: theruran_ (uid11305@2a03:5180:f:4::2c29) (Quit: Connection closed for inactivity)
[12:54:51] *** Joins: badkins (~badkins@136.56.92.199)
[12:57:09] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:810:1845:6e56:75cc)
[12:59:27] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[13:13:32] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:c02b:5de5:860a:1e36:4823) (Ping timeout: 240 seconds)
[13:30:06] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:30:26] *** Quits: mason0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[13:36:44] *** Joins: Oshawott (~archenoth@2604:3d09:681:f00:8991:6d48:b770:3c11)
[13:40:35] *** Quits: archenoth (~archenoth@2604:3d09:681:f00:9a0:b063:c52e:debb) (Ping timeout: 252 seconds)
[13:43:33] *** Quits: s-liao (~s-liao@101.86.96.154) (Ping timeout: 256 seconds)
[13:45:50] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:810:1845:6e56:75cc) (Quit: Client closed)
[13:49:11] *** Joins: s-liao (~s-liao@101.86.96.154)
[14:01:29] <river> i actually really like go
[14:01:43] <river> i never understood this kind of criticism
[14:02:22] <Franciman> river: sure, why?
[14:02:37] <river> basically i don't like python and php and stuff
[14:02:48] <wasamasa> but you like go
[14:02:55] <river> and go fills the niche of easily put together a webapp
[14:02:57] <river> for me
[14:02:59] *** Quits: leah2 (~leah@vuxu.org) (Quit: trotz alledem!)
[14:03:09] *** Joins: leah2 (~leah@vuxu.org)
[14:03:13] <river> in that respect, it's a big step up
[14:03:27] <wasamasa> ¯\_(ツ)_/¯
[14:03:33] <wasamasa> I'd like something like bottle in scheme
[14:03:54] <Franciman> river: that's a great thing indeed
[14:04:02] <Franciman> as I said, I just don't like it for my own tinkering
[14:04:24] <river> yeah
[14:04:30] <river> i wouldn't use it for much outside that niche
[14:10:11] *** Quits: s-liao (~s-liao@101.86.96.154) (Ping timeout: 256 seconds)
[14:12:57] *** Joins: siiky (~siiky@2001:8a0:ff52:4b00:d65f:f081:77d0:63d8)
[14:23:20] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[14:25:09] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[14:30:41] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:30:54] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[14:33:24] <amazigh> rejoice river is back :)
[14:33:55] <river> :) how are you amazigh 
[14:34:00] <amazigh> neat
[14:34:06] <amazigh> and you
[14:34:26] <river> today my head is fuzzy, not woken up yet :P
[14:34:43] <amazigh> I left #chez, trying to focus on few channels (but I still have 28 buffers :|)
[14:35:00] <river> it's so distracting when in too many
[14:36:02] <amazigh> yeah, but the problem to join / close, is that I think people have less patience with those people
[14:36:37] <amazigh> poping in channel, and asking a question, ime, leads to a long delay before a response.
[14:38:06] *** Joins: genieliu (~genieliu@103.37.140.24)
[14:43:09] <amazigh> river: what is you favorite OS? I am using alpine at this time, thinking about moving to gentoo
[14:43:22] <river> alpine is really nice
[14:43:25] <river> i use arch normally
[14:43:43] <river> but i also have nixos to experiment with
[14:44:06] <river> its too much to learn and the language is ugly but the concepts are cool
[14:45:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:1de0:ae4d:2639:9c8e)
[14:45:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:1de0:ae4d:2639:9c8e) (Changing host)
[14:45:25] *** Joins: skapata (~Skapata@user/skapata)
[14:45:34] *** Joins: mason0 (~bc8147f2@cerf.good1.com)
[14:55:06] <amazigh> +1
[14:55:11] <amazigh> arch is source based?
[14:55:17] <river> no
[14:55:31] <amazigh> why do people say arch is difficult?
[14:55:42] <river> im not sure, it has been more stable for me than debian
[14:55:46] <sham1> Because to install it, you need to read a page
[14:55:50] <river> maybe it was bad in the past
[14:55:53] <amazigh> I mean the meme goes along the line "arch user never finish their setup"
[14:56:26] <amazigh> arch rely on systemd?
[14:56:45] *** Quits: genieliu (~genieliu@103.37.140.24) (Ping timeout: 256 seconds)
[14:56:51] <sham1> Yes
[14:59:37] <wasamasa> like pretty much all distros at this point
[15:25:01] *** Joins: genieliu (~genieliu@103.37.140.38)
[15:39:25] *** Quits: genieliu (~genieliu@103.37.140.38) (Ping timeout: 240 seconds)
[15:41:56] *** Joins: genieliu (~genieliu@103.37.140.24)
[15:44:50] <edgar-rft> arch isn't difficult, it is archward :-)
[15:46:55] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[15:47:44] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:47:56] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[15:49:54] *** Joins: s-liao (~s-liao@101.86.96.154)
[16:00:47] *** Joins: seninha (~seninha@user/seninha)
[16:14:23] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[16:27:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[16:28:37] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[16:31:57] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[16:40:53] *** Joins: badkins (~badkins@136.56.92.199)
[16:55:24] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:03:19] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Remote host closed the connection)
[17:03:36] *** Joins: taiju (~taiju@240b:253:ec40:2400:19c3:7b50:512d:d28)
[17:11:13] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (Quit: WeeChat 2.9)
[17:18:04] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[17:24:05] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[17:27:46] *** Joins: s-liao (~s-liao@101.86.96.154)
[17:28:37] *** Quits: genieliu (~genieliu@103.37.140.24) (Ping timeout: 256 seconds)
[17:29:20] <amazigh> emoji test: 
[17:29:24] <amazigh> 😬
[17:29:26] <amazigh> meh
[17:35:14] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:42:01] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[17:43:39] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 250 seconds)
[17:43:48] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:46:10] <amazigh> it works!
[17:47:38] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:51:51] *** Joins: deltab (~deltab@user/deltab)
[17:52:35] *** Joins: xsperry (~xs@user/xsperry)
[17:54:41] <amazigh> I bought 2 month back or something a logitech mechanical keyboard, apparantly it is gamer thingy...
[17:54:49] <amazigh> two keycaps jumped outside their home, I could put them back..
[17:55:23] <amazigh> And two other keycaps are loosing their black painting :(
[17:55:42] <amazigh> it is still useable so far but...
[17:56:13] <amazigh> never buy logitech mechanical keyboards
[17:56:41] <sjamaan> s/mechanical //
[17:56:56] <amazigh> ^^'
[17:57:03] <sjamaan> I broke the spacebar on a normal logitech keyboard at my previous job after a year or so
[17:57:27] <amazigh> a year is good, my dell keyboard lasted 6 months, two times in a row
[17:57:27] *** Joins: m455 (~m455@user/m455)
[17:57:48] <sjamaan> That's *really* bad
[17:58:21] <amazigh> I mean same dell keyboard model, I bought two as a backup, both broke after 6 months
[18:06:18] *** Quits: Lysandros (~Lysandros@2a02:aa13:8100:7880:21a:a0ff:fea7:35e) (Changing host)
[18:06:18] *** Joins: Lysandros (~Lysandros@user/lysandros)
[18:17:44] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:810:1845:6e56:75cc)
[18:31:17] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[18:33:30] *** Joins: aeth (~aeth@user/aeth)
[18:41:53] *** Joins: notzmv (~zmv@user/notzmv)
[18:56:55] <gwatt> that's appalling. I've never had a keyboard break that quickly.
[18:58:19] <wasamasa> hm
[19:01:02] <wasamasa> I still need to replace my mechanical keyboard at work
[19:01:12] <wasamasa> I returned after a year of homeoffice or so and it just ceased working
[19:02:15] <gwatt> stopped working how? no longer registers as a device?
[19:03:23] <wasamasa> yeah
[19:03:28] <wasamasa> it's dead
[19:04:02] <wasamasa> my working theory is that it has been assassinated by cleaning staff
[19:04:08] <wasamasa> the perfect crime
[19:07:09] <gwatt> could be. If you're feeling bold, it's possible the cable is bad and a replacement would fix the keyboard
[19:11:38] <wasamasa> I've swapped out the cable and found it works
[19:11:51] <wasamasa> the cable, not the keyboard
[19:17:18] <amazigh> gwatt: what is your keyboard?
[19:18:53] <gwatt> I've got a kinesis split and when I was in the office used a TEK.
[19:19:14] <river> i have kenesis freestyle 2
[19:19:16] <river> love it
[19:19:20] <gwatt> though these days I'm mostly typing on a macbook keyboard.
[19:21:56] <amazigh> maybe that my typing habit that is bad
[19:22:11] <amazigh> I very often hit C-x C-s in emacs
[19:22:26] <amazigh> and the x key jumped out of its home
[19:39:57] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:810:1845:6e56:75cc) (Quit: Client closed)
[19:40:04] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[19:44:27] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[19:44:46] *** Joins: m455 (~m455@user/m455)
[19:48:00] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[19:48:35] *** Joins: badkins (~badkins@136.56.92.199)
[19:53:37] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[19:53:38] *** Joins: sonny (~sonny@8.6.144.252)
[20:08:09] *** Joins: badkins (~badkins@136.56.92.199)
[20:08:31] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:810:1845:6e56:75cc)
[20:08:34] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:21:01] <sonny> how would I implement a game board in scheme? it is a n*n matrix where each element is a number, and can be marked or unmarked
[20:22:28] <wasamasa> vectors are a thing
[20:22:47] <wasamasa> there's some SRFIs for providing variations on them
[20:23:14] <wasamasa> for example you could do a space optimization by using homogenous integer vectors
[20:23:21] <wasamasa> like SRFI-4 or such
[20:24:22] <wasamasa> but then you couldn't store additional metadata in the vector
[20:24:29] <sonny> good call, trying to do this with lists has been tricky
[20:24:52] <wasamasa> you could use lists, but it's rather inefficient
[20:25:05] <sonny> I was just going to have two matrices, on with the numbers and the other with mark, umarked
[20:25:24] <sonny> s/on/one
[20:26:46] <gwatt> srfi 25 has N-dimensional arrays
[20:32:33] <sonny> ok, great
[20:40:30] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[20:40:49] *** Joins: m455 (~m455@user/m455)
[20:41:42] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[20:52:56] *** Quits: klovett (~klovett@107.127.24.145) (Quit: ZZZzzz…)
[20:53:56] *** Joins: Bi[m] (~bimatrixo@2001:470:69fc:105::109a)
[20:56:53] <mdhughes> I made a GridMap record with size, properties (hashtable), 2D array of grids, and functions to loop over every grid, etc.
[20:58:13] <mdhughes> Makes it really easy to build mini-games, or just use for things like AoC puzzles
[21:01:31] <wasamasa> it's stupid to use a hash table as an extensible game grid, but whatever, it works
[21:02:38] <gwatt> wasamasa: I think mdhughes meant the gridmap included a hashtable for properties, not for the actual gameboard
[21:03:47] <mdhughes> Correct, the board is a 1D vector I compute the index for. The hashtable's just for metadata. I always need to stuff weird data about each map somewhere.
[21:05:15] <mdhughes> hashtable can be useful for a sparse grid, tho. If say 10% of grids are non-default, a hashtable keyed on a pair or 2-vector point would be better.
[21:06:18] <Franciman> awesome
[21:06:20] <mdhughes> A big MMO I worked on long long ago did that. Allowed us to have maps a few thousand across.
[21:06:32] <Franciman> anybody working on a garbage collector?
[21:07:11] <river> I wrote a couple in the past
[21:07:29] <Franciman> i don't know how to ask the os for more memory
[21:07:32] <Franciman> when it's exhausted
[21:07:41] <Franciman> like I start with 4kib, then do gc 
[21:07:43] <Franciman> and if it's full
[21:07:51] <Franciman> I may ask the os for another 4kib of memory
[21:08:16] <river> you don't want to use malloc?
[21:08:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[21:08:26] <Franciman> i wanted to use mmap
[21:08:31] <Franciman> to request a full page of memory
[21:08:32] <river> yes that could be good
[21:08:34] <Franciman> to manage myself
[21:08:54] <river> so when your page is done get another with another mmap call?
[21:09:09] <Franciman> but it's not contigous i think
[21:09:12] <Franciman> what I mean is
[21:09:22] <Franciman> i know it's not phisically contigous either way, but the virtual addresses are
[21:11:20] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[21:12:07] *** Joins: aportnoy (~aportnoy@user/aportnoy)
[21:12:50] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Remote host closed the connection)
[21:14:44] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[21:14:56] <gwatt> yeah, if you have disparate pages you'll need to maintain a list of each of them rather than a single pointer + capacity
[21:17:33] *** Quits: aportnoy (~aportnoy@user/aportnoy) (Ping timeout: 256 seconds)
[21:18:02] <Franciman> rip
[21:18:29] <river> > The mapping established by mmap() shall replace any  previous  mappings  
[21:18:31] <river> it says this
[21:19:06] <river> so I wonder if you can just do a larger mmap covering your original one
[21:19:36] <Franciman> there is also https://linux.die.net/man/2/mremap
[21:19:38] <Franciman> hmm
[21:22:33] <jcowan> Franciman: There is also Strandh's Law: never write in a language without a 3rd party language standard, for you are at the mercy of the vendor.
[21:23:17] <nytpu> mremap is not portable, it's only in linux and glibc
[21:23:56] <Franciman> ah this hurts
[21:24:01] <Franciman> requiescat in pace 
[21:24:16] <gwatt> you could mmap a larger, contiguous, region and memcpy the old mapping over. That should be portable enough
[21:24:53] <Franciman> i could also just mmap 8gb
[21:24:54] <Franciman> :P
[21:24:56] <Franciman> ahahah
[21:25:11] <Franciman> bad Franciman is greedy
[21:25:26] <Franciman> i mean i can also keep a list of pages 
[21:25:37] <Franciman> maybe the algorithm is harder then
[21:25:41] <Franciman> yes it is
[21:25:43] <Franciman> lol kek
[21:27:01] <Franciman> gwatt's idea seems tasty
[21:27:03] <Franciman> ^^
[21:27:14] <Franciman> thanks
[21:28:30] <nytpu> it'd probably be inefficient to memcpy a whole page but it should be relatively rare to do so, so i'd go with that probably
[21:29:17] <Franciman> i am doing a copying garbage collector
[21:29:26] <Franciman> so it would amount to a step of garbage collection lol
[21:29:32] <Franciman> in a sense
[21:29:37] <Franciman> not very precise ok
[21:29:55] <Franciman> but you don't have a mark phase
[21:30:06] <Franciman> you copy all the used objects
[21:30:17] <Franciman> and when the memory is full, you copy them all
[21:31:22] <Franciman> i could do a mark phase
[21:31:27] <Franciman> and then copy things over
[21:31:46] <Franciman> no this is slow af
[21:35:35] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:42:48] <jcowan> Here are the languages with standards that I know of: Ada, APL, APT (numerical control), Basic, C, C++, Cobol, Common Lisp, Dibol, Forth, Fortran, ISLisp, Mumps (aka M), PANCM, Pascal, PL/B (aka Databus), PL/I, Prolog, Rexx, Scheme, Smalltalk, SML (de facto), SQL.
[21:43:31] <Franciman> jcowan: which do you suggest for writing an interpreter?
[21:43:37] <Franciman> an high quality and super fast interpreter
[21:43:50] <mdhughes> PILOT has a standard, but it's no longer accessible because IEEE is where standards go to die alone in the dark.
[21:44:37] <jcowan> I forgot that one.  ESR wrote an implementation of it.  Still, IEEE Scheme has not died in the dark.
[21:44:49] <mdhughes> It's never been updated, and needs it.
[21:45:12] <jcowan> ESR has a rant about that too.
[21:46:34] <mdhughes> I've written a couple PILOTs, and got another incomplete (in Scheme). But I just ignored the spec, used Dr Starkweather's articles and Atari PILOT for a standard.
[21:48:05] <mdhughes> But for someone who wants to write an interpreter, PILOT's about the simplest. BASIC is maybe the most useful/historically important. REXX already has 3+ good impls.
[21:48:41] <mdhughes> I don't know of any good, current PL/I, ALGOL-60, or Ada impls.
[21:49:30] <sonny> C# has an iso and ecma I think
[21:49:44] <sonny> mdhughes you don't like gcc ada?
[21:50:06] <mdhughes> Ada especially is interesting, but incredibly frustrating. I can't get any of them without a bootstrap that doesn't exist.
[21:50:18] <Franciman> is ada usable?
[21:51:10] <sonny> anything is with enough effort :P
[21:51:19] <mdhughes> I think it's just a "better Pascal", but not as much better as Turbo/Free Pascal, Modula-2, or Oberon... but the lack of a good impl makes it hard to know.
[21:51:40] <sham1> GNAT is good
[21:52:10] <sham1> It's the de facto thing you use, and it's also what Adacore's stuff is based on, and they do develop it and push stuff into it
[21:52:16] <sham1> So for Ada, you get the best Ada stuff
[21:52:41] <sonny> ada is too big, but yeah it's designed well I must admit
[21:52:44] <mdhughes> When I tried, I couldn't find any of the impls that ran on Mac OS >10.4 or some such.
[21:52:48] <sonny> as for the implementations idk
[21:53:09] <sham1> As a language Ada is very interesting
[21:53:21] <gwatt> mdhughes: not even gnu? that's surprising
[21:53:31] <mdhughes> gnu-ada needs another Ada to bootstrap.
[21:53:42] <mdhughes> Which if I had that…
[21:53:46] <sham1> I mean, gcc and g++ requires another C++
[21:53:50] <gwatt> lmao
[21:54:11] <sonny> sham1: yeah but it can just be an older gcc
[21:54:18] <mdhughes> The smart strategy would be to make a "pre-Ada" in C, which compiles just enough to get the compiler up.
[21:54:53] <sonny> mdhughes what are you looking for?
[21:55:21] <gwatt> I'm surprised nothing in macports / brew / etc had a prebuilt gnat
[21:55:47] <nytpu> there's some people on the fediverse that are working on a new portable ada compiler but they haven't made much progress so far iirc
[21:55:53] <mdhughes> Well, what I'd want is to `sudo port install ada` and get a working compiler.
[21:56:09] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[21:56:23] <mdhughes> That runs on MacOS Big Sur or later, x86 and ARM.
[21:56:44] *** Joins: badkins (~badkins@136.56.92.199)
[21:56:47] <mdhughes> I can install a Linux VM if I really hate myself, but that's a last desperate option.
[21:56:51] <Franciman> what's a good alternative to C, in your opinion?
[21:57:00] <Franciman> in terms of lowest level of overhead per operations
[21:57:12] <sonny> forth
[21:57:13] <gwatt> well, probably rust in that case
[21:57:26] <gwatt> assuming you want a good bitbanging language
[21:57:52] <nytpu> C is the best alternative to C
[21:57:53] <Franciman> rust forces me into its ways
[21:57:58] <Franciman> C lacks generics
[21:57:59] <sonny> rust does seem to have overhead, zig is a candiate but it's not ready yet
[21:58:04] <nytpu> zig is really good but i cannot recommend it be used until it reaches 1.0
[21:58:07] <Franciman> zig is awesome
[21:58:08] <mdhughes> For what task? Low-level OS/compiler bootstrap should be in C.
[21:58:27] <Franciman> but yeah it lacks a standard
[21:58:35] <nytpu> and absolute no in rust, *especially* for systems programming where it's just shit (not portable, near-impossible to bootstrap, no spec, etc)
[21:58:41] <sonny> why do you want such low overhead?
[21:58:47] <Franciman> I am writing an interpreter
[21:58:54] <Franciman> very close to metal
[21:59:06] *** Joins: klovett (~klovett@107.127.24.145)
[21:59:09] <mdhughes> In 10,000 years, core OS functions will still be in C. Just give up hope. Build the least infrastructure you can in C, then do your good work in a nice language on top.
[21:59:10] <sonny> ok, so the code size shouldn't really be of interest to you
[21:59:10] <sham1> A near-metal interpreter
[21:59:15] <gwatt> You should probably write an interpreter first and then make it fast
[21:59:23] <sham1> JIT in time
[22:00:01] <Franciman> i already have gwatt 
[22:00:04] <Franciman> i wrote it in haskell
[22:00:04] <mdhughes> Lots of Schemes are made with C underneath. It's fine. Makes them easily portable.
[22:00:08] <Franciman> and have reaced a point of saturation
[22:00:13] <Franciman> so I need a lower level, more manual language
[22:00:15] <Franciman> lol
[22:00:18] <Zipheir> Ada.
[22:00:18] <gwatt> ah, ok. fair enough
[22:00:34] <mdhughes> "And that is why we NEED Eddie Van Halen!"
[22:00:39] <Zipheir> Anything with better semantics than C.
[22:00:42] <sonny> i don't get it
[22:00:43] <nytpu> need a lowest-but-not-assembly level, manual language but somehow C doesn't fit that?
[22:00:45] <Franciman> lol
[22:00:56] <Franciman> C fits, but i want generics too T.T
[22:00:57] <sonny> are you making an os?
[22:01:01] <Zipheir> nytpu: C is very much a high-level langugae.
[22:01:05] <Zipheir> *language
[22:01:08] <Franciman> yep that's true
[22:01:11] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[22:01:23] <Zipheir> nytpu: Try compiling Scheme to C and *then* say C is "portable assembly"!
[22:01:23] <mdhughes> https://www.youtube.com/watch?v=tx02tY8ABfA is the best circular argument ever.
[22:01:46] <jcowan> Loko is a metal compiler
[22:02:03] <sonny> yeah, that's a cool project
[22:02:41] <sonny> Franciman do you want big banging operations or just performance improvements?
[22:03:06] <Franciman> i want big banging operations
[22:03:10] <Zipheir> Franciman: Again, Ada?
[22:03:10] <sonny> ohhh
[22:03:17] <Franciman> Zipheir: i can try
[22:03:22] <Franciman> thanks
[22:03:36] <sonny> gcc supports modula-2 btw
[22:03:41] <Zipheir> I guess Rust is the cool 2020s kid's Ada...
[22:03:47] <Franciman> lol
[22:03:52] <Franciman> modula-2
[22:03:57] <Zipheir> Or that3.
[22:04:06] <sonny> seems like what you want
[22:04:16] <mdhughes> One strategy is to build your VM in C, and then write your next-step-up compiler/interpreter against that VM, which if you pick good instructions should be pretty easy.
[22:04:44] <Franciman> hmm i just realised I have used 0 generics in my code so far
[22:04:46] <Franciman> uhm
[22:04:52] <Franciman> maybe i don't need them
[22:04:59] <Franciman> and I can use C
[22:05:02] <gwatt> hahaha
[22:05:07] <Franciman> loool
[22:05:13] <Franciman> btw zig is really cool, ppl
[22:05:14] <Franciman> really
[22:05:21] <gwatt> C has generics, though. Look up _Generic(...)
[22:05:29] <Franciman> it's not parametric polimorphism tho
[22:05:38] <sham1> Write your interpreter in your interpreted language, compile that into machine code, and run that
[22:05:38] <Franciman> it's overloading
[22:05:52] <Franciman> top
[22:06:09] <Zipheir> Polytypy, as I guess Meertens would call it.
[22:07:17] <sonny> as far as I can tell, you just need bit banging plus access to system functions so that's a decent list of languages I think
[22:07:48] <Zipheir> I have seen a bottom-up Prolog in Pascal.  C is not the only game in town.
[22:08:13] <sonny> I don't think pascal helps your point but yeah :P
[22:08:17] <Zipheir> (https://spivey.oriel.ox.ac.uk/corner/PicoProlog)
[22:08:28] <Zipheir> sonny: Why not?  It's a brilliant language IMHO.
[22:09:08] <mdhughes> Pascal's not a disaster, but it's not as portable as C. I'd much rather (and have) write application level code in Pascal, tho.
[22:09:25] <sonny> I've heard of it's limitations but I'm not sure what happened between back then and now, freepascal is a good implementation
[22:09:56] <Zipheir> If you're thinking of Kernighan/ESR's complaints, that's ancient.
[22:09:58] <mdhughes> FreePascal in TP mode works well, compiles nicely everywhere.
[22:09:59] <mdhughes> I've had nothing but trouble with their Lazarus IDE & GUI, but the low-level stuff works perfectly.
[22:10:02] <mdhughes> (oddly parallel conversation in fediverse): 
[22:10:18] <sonny> you can use C# for this project afaict
[22:11:07] <Zipheir> The entire ALGOL line is about the best we've seen in imperative languages, IMO.
[22:11:27] <sonny> wirth you mean?
[22:11:34] <sonny> but I guess it's all the same
[22:12:03] <Zipheir> Wirth is Pascal, Modula-2, Oberon.
[22:12:13] <Zipheir> Hey, it's all ways to manipulate a register machine.
[22:12:14] <sonny> also algol
[22:12:36] <Franciman> what's the difference between modula-2 and pascal?
[22:12:42] <Zipheir> Just as all this functional stuff is a more compact way to write λ-calculus.  It's all Church or Turing at the bottom.
[22:13:23] <sonny> I think modula-2 has safe modules or something, also modules
[22:14:23] <Zipheir> Arguably unification-based systems are another beast.
[22:14:25] <gwatt> I wish C had modules. I feel like it shouldn't be too hard to get something
[22:14:36] <Zipheir> Yes, C needs modules badly.
[22:15:06] *** Joins: badkins (~badkins@136.56.92.199)
[22:15:28] <Franciman> c++23 has modules iiuc
[22:15:30] <Franciman> ah no
[22:15:32] <Franciman> c++20 already
[22:15:47] <sonny> but would't that have a big impact on compilation? might be to big a change
[22:16:35] <gwatt> Franciman: do C++ modules work with C?
[22:16:42] <sonny> funny, I wonder what we would complain about if oberon was called pascal 2
[22:17:09] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[22:17:37] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Reconnecting)
[22:17:56] *** Joins: badkins (~badkins@136.56.92.199)
[22:18:15] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[22:18:33] <Franciman> gwatt: i hardly believe so
[22:18:52] <sham1> C++ modules do not work in C
[22:18:54] <gwatt> well, I want C to have modules
[22:20:21] <Zipheir> Presumably it's been too hard to add, or otherwise one of the C standards of the 30 years would have done it.
[22:20:30] <Zipheir> *of the last
[22:21:39] <gwatt> I suspect the biggest stumbling block is the presence of the pre-processor
[22:22:00] <sham1> How would modules work without any kind of namespacing
[22:22:26] <Zipheir> That's essentially what a module system has to provide.
[22:22:27] <gwatt> sham1: they would presumably add namespaces
[22:22:33] <sham1> eww gross no
[22:23:14] <Zipheir> No one complains about naming in Scheme's module system.
[22:23:38] <gwatt> I imagine it would look like "module_name.other_identifier"
[22:23:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[22:23:58] <sham1> Name mangling would probably get annoying
[22:24:18] <gwatt> you could have the generated symbols be "module_name.other_identifier"
[22:24:27] <sonny> yeah
[22:24:33] <gwatt> since dots are valid in assembly labels but not C identifiers
[22:24:58] <sham1> That depends on the assembler I suppose
[22:25:00] <sham1> But fine
[22:25:30] <gwatt> I think most assemblers support dots. It's pretty common for compilers to generate labels starting with dots so that they can't conflict with C identifiers
[22:25:52] <sham1> Unrelatedly, NASM doesn't seem to support dashes
[22:26:42] <gwatt> do other assemblers support dashes?
[22:26:50] <mdhughes> I expect people do complain about Scheme's namespacing all the time, but (only) (rename) etc. helps a lot.
[22:27:36] <gwatt> CL'ers who stop to think aobut scheme seem to complain about scheme's namespacing
[22:27:36] <sham1> I very much like the whole idea where (names are made of separate words)
[22:27:59] <mdhughes> Even then, I have to (import (only (srfi 1 lists) <50 names>) because of conflicts.
[22:28:32] <gwatt> at that point I would probably use prefix.
[22:28:57] <mdhughes> Probably, but srfi-1 is too fundamental.
[22:30:39] <Zipheir> That seems like the vanilla problem of all module systems, not specifically Scheme's.
[22:31:27] <mdhughes> Java drove me insane with java.awt.List and java.collections.List
[22:31:44] <gwatt> other module systems I've used allow qualified names, so you can epxlicitly reference which name you want
[22:32:10] <sham1> Well R7 does that too
[22:32:14] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Read error: Connection reset by peer)
[22:33:07] <gwatt> I mean that in java if I have "import java.awt" and "import java.collections" you can specify "awt.List" or "collections.List" as you like.
[22:33:34] <sham1> 1st, it's java.util.List, and second of all, yeah that's annoying
[22:33:55] <gwatt> well, I was copying what mdhughes had written
[22:35:18] * Zipheir needs to read more about the flavors of module system out there.
[22:35:23] <gwatt> but my point stands that other modules allow a way to specify which ambiguous name you want at specific usage sites by qualifying with the package name.
[22:35:35] <gwatt> s/modules/module systems/
[22:35:58] <mdhughes> Is it util? Wow, I'd forgotten how bad that whole namespace was.
[22:36:45] <sham1> Yeah
[22:36:50] <sham1> Guess who has to work with that namespace
[22:37:40] *** Joins: X-Scale` (~ARM@31.22.167.4)
[22:38:08] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[22:39:01] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 240 seconds)
[22:39:01] *** X-Scale` is now known as X-Scale
[22:40:22] <mdhughes> Trying to find the Javadocs, Oracle (ack, spit) has really broken the thing. Now there's "modules" which contain the old packages.
[22:40:23] <mdhughes> https://docs.oracle.com/en/java/javase/17/docs/api/index.html
[22:41:10] <mdhughes> And they took out the frame view, one of the few places where frames were ever good.
[22:51:31] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:810:1845:6e56:75cc) (Ping timeout: 256 seconds)
[22:52:37] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:f57f:31c9:ce36:5095)
[22:53:43] *** Quits: sonny (~sonny@8.6.144.252) (Quit: Going offline, see ya! (www.adiirc.com))
[23:02:51] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:f57f:31c9:ce36:5095) (Ping timeout: 256 seconds)
[23:12:54] <gwatt> you can still use frames
[23:34:21] *** Joins: badkins (~badkins@136.56.92.199)
[23:35:26] <taylan> gwatt: if you want modules in C you might be interested in some of the C alternatives that popped up over the years, like Zig or Nim
[23:38:39] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[23:48:03] <gwatt> taylan: yeah, I guess I should investigate some of them. Right now it's mostly an idle wish since I don't work in C.
