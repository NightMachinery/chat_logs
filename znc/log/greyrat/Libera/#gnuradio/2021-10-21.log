[00:02:39] *** Joins: Acinonyx (~acinonyx@user/acinonyx)
[00:04:22] *** Quits: cuoops (~cuoops@user/cuoops) (Quit: kthxbye)
[00:12:03] *** Joins: cuoops (~cuoops@user/cuoops)
[00:13:10] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:119c:15db:ee8d:bb0b) (Quit: uros)
[00:19:25] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:24:42] <BarryDuggan[m]> is there a way to concatenate two PDU messages other than a Python block?
[00:34:20] <Jacob[m]12> Concatenation is tricky as you are now introducing stateful behavior to asynchronous message handlers. 
[00:52:03] <BarryDuggan[m]> There's always PDU to Tagged Stream -> Tagged Stream Mux -> Tagged Stream to PDU, but that's pretty messy
[00:53:28] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:119c:15db:ee8d:bb0b)
[01:03:23] *** Quits: cuoops (~cuoops@user/cuoops) (Ping timeout: 264 seconds)
[01:04:01] *** Joins: cuoops (~cuoops@user/cuoops)
[01:04:45] <flash[m]> <flash[m]> "is there a way at runtime to see..." <- I asked last night, but I think everyone was out. I know *someone* downstream is holding up the output buffer, but can I get a list of who is connected?
[01:13:40] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[01:28:51] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 245 seconds)
[01:33:18] <BarryDuggan[m]> what has replaced the 'Polyphase_Clock_Sync' in 3.9?
[01:36:22] <drmpeg> supersat: That's the symbol rate of the clip. 1.38 Msyms/s.
[01:39:33] <drmpeg> Also be aware that gr-dvbs2 is a special version of the DVB-S2 transmitter that implements frame by frame modulation/coding changes or VCM (Variable Coding and Modulation).
[01:40:54] *** Quits: DaViruz (~daviruz@host-90-232-217-171.mobileonline.telia.com) (Ping timeout: 265 seconds)
[01:41:04] <drmpeg> The regular CCM (Constant Coding and Modulation) DVB-S2 transmitter is built-in to GNU Radio.
[01:43:14] <BarryDuggan[m]>  * what has replaced the 'Polyphase_Clock_Sync' in 3.9?
[01:43:14] <BarryDuggan[m]> I found it: Symbol Sync
[01:46:44] <drmpeg> Those 3 clips for gr-dvbs2 have been specially crafted to work with the total symbol rate of 6 Msyms/s. 2.76 + 1.84 + 1.38 = 6.0
[01:47:57] <drmpeg> That way, just a simple round robin scheduler works in the BBHeader block.
[01:51:02] <drmpeg> If you want to change any code rate or modulation parameter, you have to go through a somewhat complex calculation to split the symbol rate properly.
[01:52:38] <drmpeg> In the real world, a better scheduler would be needed. So gr-dvbs2 is just a VCM showcase for now.
[01:53:18] *** Joins: DaViruz (~daviruz@host-78-78-157-98.mobileonline.telia.com)
[01:53:47] <drmpeg> For actual applications, you should be using the built-in CCM transmitter.
[01:55:02] <drmpeg> If you need multiple streams, then multi program Transport Streams can be used. Much easier to deal with.
[02:03:38] <supersat> ahhh okay
[02:03:40] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[02:03:59] <supersat> we had a test DVB-S2 transmission bouncing off a satellite from a hackrf >_>
[02:04:19] <supersat> muxed various streams together with tsduck, fed it into gnu radio, and it just worked
[02:05:13] <drmpeg> Cool.
[02:06:43] <drmpeg> The DVB-S2 transmitter has seen a lot of testing with commercial receivers. It's also known to be bit perfect with the DVB Validation and Verification streams.
[02:06:53] *** Quits: nkiz (~nao@xdsl-188-155-146-133.adslplus.ch) (Quit: Leaving)
[02:09:44] <drmpeg> I'll have to see how compliant TSDuck is.
[02:17:41] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:119c:15db:ee8d:bb0b) (Ping timeout: 258 seconds)
[02:19:13] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:28:59] *** Joins: sch1z0_c0d3 (~anarkiddy@156.67.18.13)
[02:48:37] *** Joins: dreamerchrisMO[m (~dreamerch@2001:470:69fc:105::795c)
[03:00:06] *** Quits: supersat (~mrsaturn@2607:4000:200:1d:5ea:2f8f:6020:a111) (Ping timeout: 245 seconds)
[03:02:55] *** Quits: Pajor (~Pajor@8-220.ptpg.oregonstate.edu) (Ping timeout: 258 seconds)
[03:03:17] *** Joins: supersat (~mrsaturn@2607:4000:200:1d:5ea:2f8f:6020:a111)
[03:04:01] <drmpeg> Wow, that is a big pile of code.
[03:11:23] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:13:15] *** Joins: Pajor (~Pajor@8-220.ptpg.oregonstate.edu)
[03:21:47] <flash[m]> can anyone think of a reason why a copy block would have an input buffer significantly more full than its output buffer?
[03:28:24] <drmpeg> supersat: What exactly does TSDuck do? I don't get it.
[03:33:08] <patchvonbraun[m]> flash: because whatever is downstream from the copy block is not that perform at?
[03:34:01] <flash[m]> that explains the output buffer being full. It doesn't explain the input buffer being fuller
[03:34:24] <flash[m]> I'm seeing something like in: 75% out: 47%
[03:35:44] <flash[m]> I would expect the copy to efficient shovel samples from in to out. Trying to wrap my head around the apparent inefficiency
[03:36:35] *** Quits: UwRHwZL (~UwRHwZL@user/uwrhwzl) (Quit: Disconnected)
[03:36:47] *** Joins: UwRHwZL (~UwRHwZL@user/uwrhwzl)
[03:37:11] *** Quits: UwRHwZL (~UwRHwZL@user/uwrhwzl) (Client Quit)
[03:37:26] *** Joins: UwRHwZL (~UwRHwZL@user/uwrhwzl)
[03:37:35] *** Quits: UwRHwZL (~UwRHwZL@user/uwrhwzl) (Client Quit)
[03:38:05] *** Joins: UwRHwZL (~UwRHwZL@user/uwrhwzl)
[03:38:11] <patchvonbraun[m]> Dunno. The scheduler likely has some weird emergent properties.
[03:38:28] *** Quits: UwRHwZL (~UwRHwZL@user/uwrhwzl) (Client Quit)
[03:38:41] *** Joins: UwRHwZL (~UwRHwZL@user/uwrhwzl)
[03:40:54] *** Quits: UwRHwZL (~UwRHwZL@user/uwrhwzl) (Client Quit)
[03:41:39] <flash[m]> I have a container of object pointers; every second I cycle through the container and print pc_input_buffers_full(0) and pc_output_buffers_full(0).
[03:42:17] <flash[m]> after the graph is populated, I call dot_graph() on it. I'm able to verify that I'm tracking the blocks that consume my upstream
[03:42:49] <flash[m]> but in the periodic status dump, output full of one block doesn't always match input full of the downstream
[03:42:55] <flash[m]> 'tis a puzzlement
[03:44:53] <drmpeg> Isn't it an "atomic" problem? You can't read each buffer fullness at the exact same time.
[03:45:35] <flash[m]> certainly a possibility. And depending on how quickly work() is able to consume samples, it might make a big difference
[03:47:15] <drmpeg> I tried to do a buffer analysis in the past. Too painful. Gave up on it.
[03:49:43] <drmpeg> I can do better with htop and pinning threads to a CPU.
[03:52:57] <flash[m]> I got substantial improvement (initially) by increasing the buffer size
[03:53:35] <flash[m]> but it isn't enough, because eventually it backs up. I have one block that is particularly troubling, but I'm still trying to understand it
[03:55:36] <drmpeg> If that block goes 100% on a CPU, you're hosed no matter what.
[04:08:13] <flash[m]> my suspicion is scheduler starvation, but I haven't proven it yet. I think I have some blocks that are poorly conceived, and that aren't keeping the spice flowing
[04:32:24] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:48:30] *** Joins: pcero (~pcero@187.135.226.93)
[05:15:52] *** Joins: Guest51 (~Guest51@2601:5c0:c280:8da0:1838:1f04:1a4e:a873)
[05:17:34] <Guest51> Looking for some resources on how to control CIC Filters in the DDC and DUC of FPGA inside the USRP B210/N210. Can anyone please share or direct to resources? 
[05:42:58] *** Quits: pcero (~pcero@187.135.226.93) (Quit: Konversation terminated!)
[05:48:47] *** Joins: pcero (~pcero@187.135.226.93)
[05:53:55] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:59:49] *** Quits: sch1z0_c0d3 (~anarkiddy@156.67.18.13) (Ping timeout: 265 seconds)
[06:03:44] *** Joins: horseface (~horseface@user/horseface)
[06:04:38] *** Quits: Guest51 (~Guest51@2601:5c0:c280:8da0:1838:1f04:1a4e:a873) (Quit: Client closed)
[06:26:21] <patchvonbraun[m]> @Guest51:libera.chat: the source code for the FPGA and the host side libraries are freely available.
[06:33:57] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[06:35:53] *** Joins: horseface (~horseface@user/horseface)
[07:31:42] *** Quits: pcero (~pcero@187.135.226.93) (Ping timeout: 260 seconds)
[07:42:07] *** Quits: koma (~koma@user/koma) (Quit: Arc)
[07:45:13] *** Joins: koma (~koma@user/koma)
[08:30:42] *** Joins: saba4ka-mumu (~efsearfc@176.59.55.58)
[08:52:32] *** Joins: linext__ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[08:54:46] *** Quits: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Ping timeout: 260 seconds)
[09:37:36] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[09:38:05] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[10:34:56] *** Joins: ravan (~ravan@user/ravan)
[10:42:08] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[11:00:45] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:119c:15db:ee8d:bb0b)
[11:01:06] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[11:21:39] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[11:43:26] *** Joins: danidubok777[m] (~danidubok@2001:470:69fc:105::1:1fad)
[12:00:49] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[12:20:45] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[12:30:09] *** Quits: tiborkiss[m] (~tiborkiss@2001:470:69fc:105::fd3d) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: sp5los[m] (~sp5losgnu@2001:470:69fc:105::ec1c) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: knight[m] (~knightgnu@2001:470:69fc:105::eae4) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: tdsepsilon[m] (~tdsepsilo@2001:470:69fc:105::ec3a) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: ash_beigi[m] (~ashbeigig@2001:470:69fc:105::fc18) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: crc-one[m] (~crc-onegn@2001:470:69fc:105::fcdd) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: mhennerich[m] (~mhenneric@2001:470:69fc:105::fcfb) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: OscarEkholm[m] (~oscekhgnu@2001:470:69fc:105::e18b) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: rwhite77802[m] (~rwhite778@2001:470:69fc:105::fd2a) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: ddomonoske[m] (~ddomonosk@2001:470:69fc:105::fd35) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: aallam3[m] (~aallam3gn@2001:470:69fc:105::fd38) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: ooiioo[m] (~ooiioognu@2001:470:69fc:105::e18a) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: mrszb[m] (~mrszbgnur@2001:470:69fc:105::fd4d) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: lxdengar[m] (~lxdengarg@2001:470:69fc:105::fd5b) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: achaudhari[m] (~achaudhar@2001:470:69fc:105::e6ec) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: lok[m] (~lokgnurad@2001:470:69fc:105::fd43) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: sjkelly[m] (~sjkellyma@2001:470:69fc:105::fd4c) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: johm-msft[m] (~johm-msft@2001:470:69fc:105::fd6a) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: rajb245[m] (~rajb245gn@2001:470:69fc:105::fd60) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: VictorCai[m] (~victorjca@2001:470:69fc:105::fd62) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: jeremiahsimpson[ (~jeremiahs@2001:470:69fc:105::fd6b) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: jackalak[m] (~jackalakg@2001:470:69fc:105::fd79) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: bk201n[m] (~bk201ngnu@2001:470:69fc:105::fd74) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: claudhg9[m] (~claudhg9g@2001:470:69fc:105::e772) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: arthurlobo[m] (~arthurlob@2001:470:69fc:105::fd80) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: gopman[m] (~gopmangnu@2001:470:69fc:105::fd83) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: cbosso[m] (~quantus25@2001:470:69fc:105::ebc4) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: lbauer[m] (~lbauergnu@2001:470:69fc:105::fd20) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: RoyceConnerley[m (~roycegnur@2001:470:69fc:105::fd64) (Quit: You have been kicked for being idle)
[12:41:12] *** Quits: yesno (~yesno@109.98.151.179) (Quit: Leaving)
[13:04:02] *** Joins: harish_ (~harish@27.125.135.173)
[13:06:46] *** Quits: harish__ (~harish@158.140.144.42) (Ping timeout: 260 seconds)
[13:26:52] *** Quits: harish_ (~harish@27.125.135.173) (Ping timeout: 252 seconds)
[13:50:47] *** Quits: rigid (~rigid@user/rigid) (Ping timeout: 250 seconds)
[13:56:28] *** Joins: rigid (~rigid@user/rigid)
[13:58:08] *** Joins: harish_ (~harish@158.140.144.42)
[14:07:32] *** Joins: yesno (~yesno@109.98.151.179)
[14:21:05] *** Quits: miaoski (~miaoski@2001-b011-0001-6a1a-9474-96af-8392-2c3b.dynamic-ip6.hinet.net) (Ping timeout: 264 seconds)
[14:26:47] *** Quits: rigid (~rigid@user/rigid) (Ping timeout: 264 seconds)
[14:28:30] <jemius> Is this all I need in the grc-yaml to pass a list of real filtertaps?
[14:28:31] <jemius> https://pastebin.com/UFcW2eMT
[14:33:36] *** Joins: miaoski (~miaoski@2001-b011-0001-6a1a-7450-0059-4046-0bf9.dynamic-ip6.hinet.net)
[14:38:29] *** Joins: Vonter (~Vonter@user/vonter)
[14:39:36] *** Joins: harish__ (~harish@27.125.135.173)
[14:39:53] *** Quits: harish_ (~harish@158.140.144.42) (Read error: Connection reset by peer)
[14:41:03] *** Joins: harish_ (~harish@158.140.144.42)
[14:41:36] *** Joins: rigid (~rigid@user/rigid)
[14:42:54] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[14:44:11] *** Quits: harish__ (~harish@27.125.135.173) (Ping timeout: 264 seconds)
[15:16:30] *** Joins: UwRHwZL (~UwRHwZL@user/uwrhwzl)
[15:25:10] *** Joins: ravan (~ravan@user/ravan)
[15:42:09] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[15:42:22] *** Joins: horseface (~horseface@user/horseface)
[15:49:29] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[15:51:00] *** Joins: horseface (~horseface@user/horseface)
[16:10:09] *** Joins: electrolytic (~electroly@gateway/tor-sasl/electrolytic)
[16:28:55] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 252 seconds)
[16:44:41] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[16:45:56] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[16:51:51] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:08:02] *** Joins: johncc3 (~johncc3@181.93.22.118)
[17:09:55] <johncc3> Hello guys, I re-compiled and installed gnuradio yesterday, and found that I don't have the 'Instrumentation' tools anymore. How can I diagnose the reason? I can't seem to find any error message.
[17:10:39] <funkylab[m]> your build probably disabled qtgui
[17:11:05] <funkylab[m]> you need to run cmake .. again to figure out whether that is the case and check the output where it disables gr-qtgui
[17:12:16] <johncc3> funkylab[m], that's what I suspected. I'm using Slackware and a script to create the executable, I'll try to find out how to do it manually.
[17:14:27] <Macuser> is it true that you would need to use the most up to date gps ephemeris files in order to spoof gps signal? Or does any ephemeris file do?
[17:15:07] <Macuser> shouldn't matter
[17:27:20] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 258 seconds)
[17:29:46] <johncc3> funkylab[m], I re-ran cmake, and got 'Python checking for PyQt4 - found', then 'Dependency QT4_FOUND = FALSE'?
[17:30:23] <funkylab[m]> ah Slackware
[17:30:27] <funkylab[m]> that's very special
[17:31:06] <funkylab[m]> also, QT4 indicates that this might be a rather old GNU Radio on a rather old dependency setting?
[17:32:02] <funkylab[m]> PyQt4 can be found without the C++ Qt4 headers and libraries being found
[17:32:09] <funkylab[m]> this sounds like it's very distro-specific if it happens to you :(
[17:32:15] <funkylab[m]> not quite sure we can be of much help
[17:33:04] <johncc3> :) Have been using it for 25-odd years. The version is 3.7.12. Is it possible to indicate the use of Qt5 there? Or do I have to go to 3.8/3.9?
[17:36:21] <funkylab[m]> Debian patches made using 3.7+Qt5 possible a while ago. But honestly, 3.7 is kind of a "legacy users only" release series, and 3.7.12 is *very* old
[17:36:22] <funkylab[m]> so I don't think 3.7.12 + Qt5 will work
[17:36:43] <funkylab[m]> 3.7.13.5 or 3.7.14.0 might, from the grimey back of my head
[17:36:59] <funkylab[m]> but then there's still very much distro-specific struggling to do...
[17:37:24] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:119c:15db:ee8d:bb0b) (Quit: uros)
[17:37:42] *** Joins: duude__ (~duude__@user/duude/x-4676560)
[17:38:18] <johncc3> Installing 3.8 with cmake and forcing it to install to /usr/lib64 is a pain with cmake I'll try.
[17:38:34] <johncc3> Does 3.8 use qt5?
[17:41:22] <funkylab[m]> yes
[17:41:28] <funkylab[m]> johncc3: never had any pain :)
[17:44:49] *** Joins: viktorivan (~viktoriva@189.254.226.82)
[17:48:48] *** Joins: ravan (~ravan@user/ravan)
[17:53:02] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:55:51] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:59:55] *** Quits: saba4ka-mumu (~efsearfc@176.59.55.58) (Ping timeout: 260 seconds)
[18:03:26] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) ()
[18:12:44] *** Joins: saba4ka-mumu (~efsearfc@94.25.169.98)
[18:16:08] <Macuser> interesting... with GNSS-SDR even if you comment out the SignalSource.freq line in the config file, it still demodulates...
[18:16:15] <Macuser> that doesn't seem right
[18:16:40] <Macuser> oh wait... the signal source is a file so it gets the frequency from that already.
[18:16:54] <Macuser> I think
[18:18:14] <geraman21[m]> Macuser: We also define a GPS L1 type, so LO frequency can be deduced from there as well
[18:18:31] <Macuser> ah
[18:18:51] <Macuser> so... if I were to go into gps-sdr-sim.h and modify the carrier to be 2.4GHz, could it work
[18:18:56] <Macuser> and regenerate the file.
[18:19:00] <Macuser> and adjust the SignalSource.freq
[18:19:39] <geraman21[m]> Macuser: No clue, the only way to find out is to try xD
[18:19:44] <Macuser> yeah I was just about to
[18:19:47] <Macuser> gotta recompile :)
[18:21:27] <Macuser> i mean it appears to work so far... 
[18:22:25] <Macuser> but if i change SignalSource.freq back to 1575.42GHz then it still works...
[18:22:32] *** Quits: tkob (tkob@2607:5300:60:21b::1) (Ping timeout: 258 seconds)
[18:22:57] <Macuser> oh wait
[18:23:02] <Macuser> forgot to regenerate the .bin
[18:23:03] <Macuser> oof
[18:23:23] * Macuser sips coffee
[18:23:24] *** Joins: tkob (tkob@shell.xshellz.com)
[18:25:30] <Macuser> yeah it's still working.
[18:27:54] <Macuser> that don't make no sense.
[18:29:42] <geraman21[m]> Macuser: there is a GNSS-SDR channel in matrix, maybe people there could help !
[18:29:47] <Macuser> oh awesome
[18:29:59] <geraman21[m]> Macuser: https://matrix.to/#/#gnss-sdr:gnuradio.org
[18:30:03] <Macuser> thanks so much
[18:38:29] *** Quits: koma (~koma@user/koma) (Read error: Connection reset by peer)
[18:40:59] *** Joins: koma (~koma@user/koma)
[18:51:51] *** Joins: theproxy[m] (~theproxyg@2001:470:69fc:105::1:1ff9)
[18:53:16] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Quit: Leaving)
[19:00:48] <Macuser> drmpeg do GPS ephemerides need to be current in order for a device to accept them? Or can you use any old RINEX file
[19:04:46] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[19:05:29] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[19:10:33] *** Joins: brettgilio (~brettgili@x-node.gq)
[19:19:03] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[19:19:31] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:119c:15db:ee8d:bb0b)
[19:24:09] *** Quits: koma (~koma@user/koma) (Read error: Connection reset by peer)
[19:24:15] *** Quits: cuoops (~cuoops@user/cuoops) (Ping timeout: 258 seconds)
[19:24:47] *** Joins: horseface (~horseface@user/horseface)
[19:26:57] *** Joins: pcero (~pcero@187.135.226.93)
[19:27:28] *** Joins: koma (~koma@user/koma)
[19:27:41] *** Joins: cuoops (~cuoops@user/cuoops)
[19:30:08] *** Quits: reald[m] (~realdgnur@2001:470:69fc:105::ebcd) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: scarRodrguez[m] (~oscarrodr@2001:470:69fc:105::eb92) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: gdev-ni[m] (~gdev-nign@2001:470:69fc:105::f931) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: goradio[m] (~goradiogn@2001:470:69fc:105::fc24) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: adamb[m] (~adambgnur@2001:470:69fc:105::e6ef) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: crazidrumer319[m (~crazidrum@2001:470:69fc:105::fd23) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: burberry[m] (~burberryg@2001:470:69fc:105::fe0a) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: mcb[m] (~mcbgnurad@2001:470:69fc:105::fe4f) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: zafarqos[m] (~zafarqosg@2001:470:69fc:105::fe1d) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: dswasey[m] (~dswaseygn@2001:470:69fc:105::fe1f) (Quit: You have been kicked for being idle)
[19:34:57] *** Quits: koma (~koma@user/koma) (Read error: Connection reset by peer)
[19:37:04] *** Joins: koma (~koma@user/koma)
[20:03:58] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:119c:15db:ee8d:bb0b) (Ping timeout: 252 seconds)
[20:19:22] <sammp[m]> @room **(Virtual) GNU Radio Hackfest 2021 **... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/90c271187f42b184245c352c056681d3650422c5)
[20:23:19] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:26:30] *** Quits: johncc3 (~johncc3@181.93.22.118) (Remote host closed the connection)
[20:43:46] *** Quits: Keshl (~Purple@idlerpg/player/Keshl) (Read error: Connection reset by peer)
[20:44:00] *** Joins: Keshl (~Purple@idlerpg/player/Keshl)
[20:46:44] <JoshMorman[m]> Project call streaming now: https://www.twitch.tv/gnuradio
[21:03:26] <RyanVolz[m]> > @room **(Virtual) GNU Radio Hackfest 2021 **... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/d85ad770eb70d967c54d6b022c9f7e6636c4ff03)
[21:08:35] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[21:08:53] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[21:09:15] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[21:32:47] *** Quits: cuoops (~cuoops@user/cuoops) (Ping timeout: 264 seconds)
[21:40:08] *** Joins: cuoops (~cuoops@user/cuoops)
[21:42:23] *** Quits: UwRHwZL (~UwRHwZL@user/uwrhwzl) (Ping timeout: 264 seconds)
[21:44:22] *** Joins: UwRHwZL (~UwRHwZL@user/uwrhwzl)
[21:50:04] *** Quits: viktorivan (~viktoriva@189.254.226.82) (Quit: Leaving)
[22:28:16] *** Joins: jemius (~imperator@2001:16b8:2d20:dc00:dcd9:5bb2:cad9:6841)
[22:35:22] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:119c:15db:ee8d:bb0b)
[22:36:17] *** Quits: jemius (~imperator@2001:16b8:2d20:dc00:dcd9:5bb2:cad9:6841) (Quit: Leaving)
[23:25:29] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[23:27:48] *** Joins: horseface (~horseface@user/horseface)
[23:34:10] *** Quits: pcero (~pcero@187.135.226.93) (Ping timeout: 260 seconds)
