[00:00:42] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057) (Client Quit)
[00:01:04] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057)
[00:01:13] *** Joins: mossman93 (~quassel@user/mossman93)
[00:01:50] *** Joins: SirScott9 (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[00:02:12] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057) (Client Quit)
[00:02:44] *** Joins: nehsou^ (~nehsou@128-092-164-034.biz.spectrum.com)
[00:03:02] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[00:03:02] *** SirScott9 is now known as SirScott
[00:07:30] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[00:08:04] *** Joins: linux_dream (~isaac@37.166.208.6)
[00:08:20] *** Quits: Allegretto (~allegrett@178-164-171-16.pool.digikabel.hu) (Remote host closed the connection)
[00:09:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:10:21] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:10:41] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[00:10:46] *** Joins: Allegretto (~allegrett@178-164-171-16.pool.digikabel.hu)
[00:11:08] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Read error: Connection reset by peer)
[00:11:48] *** Joins: ivii (~ivan@user/ivii)
[00:12:01] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:8844:e45a:1aab:92c2) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:12:24] *** Joins: yaalon (~yaalon@2806:109f:14:5f5:b93f:f79d:69d9:cefb)
[00:12:32] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[00:12:42] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[00:12:43] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:13:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:14:49] *** Joins: zumba_addict60 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[00:14:58] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[00:15:10] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:16:40] *** Stench is now known as Staunch
[00:16:44] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[00:16:46] *** Joins: Naan` (~Naan@user/naan)
[00:17:13] *** gentooclimax is now known as climax
[00:18:57] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1)
[00:19:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[00:19:52] *** climax is now known as gentooclimax
[00:20:31] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[00:20:44] *** Joins: devish (~devish@205.251.233.182)
[00:22:16] <SnoopJ> I think the answer to my PyInstaller question is that yes, .py files will be included if a module is collected, unless you specify otherwise. I think I just need to filter out the result of collect_datas() for myself :|
[00:22:35] <SnoopJ> collect_data_files()*  (as called by collect_all())
[00:22:54] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[00:22:55] <SnoopJ> you can specify include_py_files=False but this also skips .pyc files which I *do* want in my bundle.
[00:25:17] *** Quits: y04nn (~y04nn@92.223.89.196) (Ping timeout: 240 seconds)
[00:25:49] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:26:37] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[00:27:36] *** Joins: Betal (~Betal@user/betal)
[00:30:26] *** Joins: thiras (~thiras@user/thiras)
[00:30:33] <SnoopJ> Hmm, yea, that seems to do what I want. Kind of annoying that I have to, but at least PyInstaller invokes the compiler for me.
[00:30:35] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:31:10] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[00:31:36] *** Joins: parv (~quass@user/parv)
[00:32:20] <SnoopJ> `tmp_ret = collect_all('metrics'); nopy_datas = [item for item in tmp_ret[0] if not item[0].endswith(".py")]; tmp_ret = (nopy_datas, *tmp_ret[1:])` is what I ended up with
[00:32:29] *** Joins: bixo (~bixo@190.200.253.127)
[00:34:53] *** Joins: mojtaba (~mojtaba@142.59.165.199)
[00:35:04] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[00:35:33] *** Quits: linux_dream (~isaac@37.166.208.6) (Quit: WeeChat 3.4)
[00:35:41] <mojtaba> Hello, does anybody know how to post data to an angular form? I know how to use requests module. But I am not sure how to use it to post data to that form.
[00:37:26] <SnoopJ> mojtaba, if you want to interact directly with the angular UI, you will probably need more than just requests, because angular is rendered by the client. You might want to run a headless browser with selenium, for instance.
[00:37:44] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[00:37:52] <SnoopJ> If you just want to submit some data to the same place the angular UI does, you'll need to examine the code to see where it's POSTing its data and use the same URL
[00:37:59] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[00:38:13] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[00:38:33] *** Quits: MrC (Ben@mrbenc.net) (Ping timeout: 250 seconds)
[00:38:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:39:14] <mojtaba> SnoopJ: Imagine I want to get the list of the doctors from this website (https://www.ratemds.com/on/toronto/)
[00:39:31] * SnoopJ imagines that
[00:39:46] <mojtaba> SnoopJ: I am not sure how to post the data to that form.
[00:39:58] <mojtaba> :)
[00:40:23] <mojtaba> SnoopJ: Should I still use selenium?
[00:41:10] *** Joins: cjb (~cjb@user/cjb)
[00:41:28] *** Quits: zumba_addict60 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[00:42:17] <Staunch> mojtaba: most forms do a POST request to an endpoint with form data. Using Python's requests module, you can post the key/value dict using `requests.post(data=formdata)`
[00:42:21] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[00:42:33] <Staunch> (with whatever the API endpoint's URL is, of course)
[00:42:47] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[00:43:03] <Staunch> mojtaba: to find that endpoint, you can submit the form like you normally would while you have the Network tab of the devtools open, and see what API request was made
[00:43:29] <Staunch> mojtaba: does that help?
[00:43:30] *** Joins: ivii (~ivan@user/ivii)
[00:43:41] *** Quits: yaalon (~yaalon@2806:109f:14:5f5:b93f:f79d:69d9:cefb) (Remote host closed the connection)
[00:44:03] <mojtaba> Staunch: Thanks. Let me see.
[00:44:27] <mojtaba> Staunch: I will come back with more questions if it did not help ;)
[00:44:33] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[00:44:40] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: leaving)
[00:44:40] <mojtaba> Staunch: SnoopJ: Thanks for your help.
[00:44:46] *** Joins: yaalon (~yaalon@2806:109f:14:5f5:b93f:f79d:69d9:cefb)
[00:44:50] <Staunch> we'll be here, mojtaba! Happy to help.
[00:45:02] <mojtaba> Staunch: thumbs up
[00:45:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:45:26] <SnoopJ> it seems like that button is mostly letting angular know something is up, so it'll require some study of the angular code to see where the eventual POST goes. Looking at the network tab could be a good shortcut
[00:45:34] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[00:45:42] *** Quits: magla (~gelignite@55d4be51.access.ecotel.net) (Quit: Stay safe!)
[00:45:48] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[00:47:24] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[00:47:42] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[00:48:00] *** Joins: nomic (~nomic@185.192.69.3)
[00:48:11] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[00:49:09] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[00:49:34] <mojtaba> Staunch: The GET data in the Network tab is this: https://htlb.casalemedia.com/cygnus?s=190311&v=7.2&ac=j&sd=1&r={"id":"29d081d5bc4c9dc","site":{"ref":"https://www.ratemds.com/on/toronto/","page":"https://www.ratemds.com/best-doctors/on/toronto/rheumatologist/"},"ext":{"source":"prebid","ixdiag":{"msd":0,"msi":0,"mfu":0,"bu":3,"iu":0,"nu":0,"ou":0,"allu":3,"ren":false,"version":"5.6.0","userIds":[]}},"imp":[{"id":"308419d1e92a85a8","bann
[00:49:34] <mojtaba> er":{"topframe":1,"format":[{"w":728,"h":90,"ext":{"siteID":"190311","sid":"728x90"}}]}},{"id":"31d1f8bd44266d28","banner":{"topframe":1,"format":[{"w":300,"h":250,"ext":{"siteID":"190310","sid":"300x250"}}]}},{"id":"3242bff327f5afd8","banner":{"topframe":1,"format":[{"w":300,"h":600,"ext":{"siteID":"190314","sid":"300x600"}}]}}]}
[00:50:07] <mojtaba> should I directly use this in python with the requests module?
[00:50:13] *** Joins: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net)
[00:50:41] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:50:55] <mojtaba> There is a lot of traffic on the network tab, even when I do not interact with the website.
[00:51:10] <mojtaba> Makes it more difficult to find the one that is I am looking for.
[00:51:52] <Staunch> mojtaba: oh, even better, i didn't realize you posted the URL. Yeah, this looks like the form is actually just crafting a URL with query params.
[00:51:53] <jr_web_dev> so im kinda fresh to flask and python.  I have some input fields in html.  i want to take those input fields and send it to my Python functions to run those python function calls.. not sure how to do that
[00:52:35] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 268 seconds)
[00:52:43] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[00:52:47] <mojtaba> Staunch: Can you figure out what is the exact url?
[00:52:52] *** Quits: ekathva (~ekathva@2001:999:51:be01:2799:25be:c992:870) (Remote host closed the connection)
[00:53:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:54:13] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[00:54:14] *** Joins: ekathva (~ekathva@2001:999:51:be01:4809:6feb:a1f2:4aa3)
[00:54:39] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[00:54:51] <Staunch> mojtaba: looks like there is an API request that gets you lists of doctors, but it's a GET and the URL has all the data
[00:55:10] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[00:55:23] <Staunch> it looks like it might follow the format like this: https://www.ratemds.com/best-doctors/{province}/{city}/{specialty}/?json=true
[00:55:33] <Staunch> mojtaba: for example:  https://www.ratemds.com/best-doctors/on/toronto/acupuncturist/?json=true
[00:55:33] <mojtaba> Staunch: let me see
[00:56:13] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8574-14f1-3c77-025b.res6.spectrum.com) (Read error: Connection reset by peer)
[00:57:08] <mojtaba> Staunch: You found it in the network tab?
[00:57:17] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[00:57:28] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[00:57:58] <mojtaba> Staunch: I tried to call it using requests.get('url').json(), but it throws exception.
[00:58:09] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[00:58:20] <SnoopJ> did you actually run `get('url')` or is that a short-hand?
[00:58:23] <Staunch> mojtaba: yeah, when i submit the form on the results page (after the URL you linked)
[00:58:27] *** gentooclimax is now known as climax
[00:58:41] <Staunch> they might have some CSRF token stuff going on to prevent, uh, what you're doing. :P
[00:59:18] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[00:59:21] <mojtaba> SnoopJ: Yes I did call get and then I ran response.json()
[00:59:31] *** Quits: ominionx (~ominionx@172.58.136.5) (Ping timeout: 256 seconds)
[00:59:37] <SnoopJ> mojtaba, get('url') is definitely going to be an error because the string 'url' is not a URL
[00:59:54] <mojtaba> SnoopJ: What should I use then?
[01:00:08] <SnoopJ> mojtaba, the URL you want to get(). Can you share the complete error report on https://bpa.st ?
[01:00:23] <mojtaba> SnoopJ: This is the line: response = requests.get("https://www.ratemds.com/best-doctors/on/toronto/acupuncturist/?json=true")
[01:00:27] <mojtaba> just a sec
[01:00:34] *** Joins: millido (~millido@84.210.150.128)
[01:00:44] <SnoopJ> okay, so a short-hand after all. just making sure :)
[01:01:00] *** Quits: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net) (Quit: WeeChat 2.8)
[01:01:33] <mojtaba> SnoopJ: This is the output: https://bpa.st/EFDA
[01:01:49] *** Quits: ekathva (~ekathva@2001:999:51:be01:4809:6feb:a1f2:4aa3) (Remote host closed the connection)
[01:02:05] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:1c:1ad4:20cd:fc87)
[01:02:05] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:1c:1ad4:20cd:fc87) (Changing host)
[01:02:05] *** Joins: skapata (~Skapata@user/skapata)
[01:02:24] <SnoopJ> mojtaba, yea, I just tried grabbing that URL with cURL and it looks like we're both getting sent to a CloudFlare CAPTCHA designed to prevent pretty much exactly this.
[01:02:39] <mojtaba> SnoopJ: hmm
[01:02:44] <mojtaba> Any idea?
[01:03:33] *** climax is now known as gentooclimax
[01:04:08] <Staunch> mojtaba: captchas are pretty much developed to specifically stop people from using automated tools to hit those resources, so that's probably the end of the line :P
[01:04:10] <SnoopJ> you could try to trick your way around the CAPTCHA, it's probably thinking your request looks suspicious because of header fields like User-Agent and so on.
[01:04:44] <nedbat> can i just say that i am tired of getting bug reports from people who say they can't share the code because it's private?  What's the big secret!?
[01:04:46] <SnoopJ> *Just* changing User-Agent here doesn't seem to work, though. I don't know what else I'd be fiddling with here
[01:05:14] <Wooble> nedbat: someone might steal their billion dollar idea that doesn't work.
[01:05:23] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[01:05:34] <SnoopJ> hehe
[01:05:37] <mojtaba> SnoopJ: hmm.
[01:05:47] <nedbat> Wooble: they won't even send it to me privately to help them avoid an infinite recursion that no one can explain
[01:06:10] <SnoopJ> mojtaba, I can say that if you were automating a headless browser here, it might avoid the issue because a headless browser is...well, a browser.
[01:06:14] *** Joins: ominionx (~ominionx@172.58.136.5)
[01:06:15] *** Joins: ivii (~ivan@user/ivii)
[01:06:19] <SnoopJ> But it's not a guarantee that you won't get served a CAPTCHA, of course
[01:06:28] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:06:58] <mojtaba> SnoopJ: I will try it to see what will happen :)
[01:07:02] <mojtaba> Thanks
[01:07:02] <Staunch> nedbat: tell them to download more RAM, that oughta do it
[01:07:39] <SnoopJ> or just tell them the truth: "I'm not really able to do much without a reproduction, this will be low priority"
[01:07:44] <Wooble> I don't think adding ram increases the stack size to infinity
[01:07:57] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[01:07:58] <NoImNotNineVolt> depends how much ram
[01:08:01] <SnoopJ> (neither of which prevents the reports from being *filed* though)
[01:08:04] *** Joins: y04nn (~y04nn@92.223.89.196)
[01:08:37] *** Joins: d00gy (~tonberry@user/d00gy)
[01:09:19] <nedbat> Staunch: i just closed the bug report as cant-reproduce
[01:09:39] <nedbat> SnoopJ: it's not even low priority. it's a dead end.
[01:09:45] *** odinsban1 is now known as odinsbane
[01:09:55] *** Quits: yaalon (~yaalon@2806:109f:14:5f5:b93f:f79d:69d9:cefb) ()
[01:10:07] <SnoopJ> nedbat, I've never been in a position of receiving that kind of report, but I assume it's why projects that adopt "you must submit a reproduction" policies do this.
[01:10:12] *** Joins: c4017w (~c4017@209.52.68.8)
[01:11:02] *** Joins: Auron (Auron956@user/auron)
[01:11:02] <SnoopJ> that kind of report with that kind of volume*
[01:11:08] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[01:11:59] *** Quits: devish (~devish@205.251.233.182) (Ping timeout: 256 seconds)
[01:13:41] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:14:35] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Quit: バイバイ)
[01:14:53] *** karlnashville is now known as karl_AFK
[01:16:43] <Wooble> although apparently one of the 2 people with similar problems just needed 50% more stack :/
[01:17:18] <SnoopJ> reminds me of that "the missile has a memory leak, so we added enough memory to last as long as the missile has fuel" story
[01:17:57] <nedbat> Wooble: honestly, that is the strangest part: 1500 frames was enough to avoid the error, so it wasn't actually an infinite recursion!?
[01:18:08] *** Joins: smrtz (~smrtz@user/smrtz)
[01:18:13] *** Quits: Linux77 (~LinuMage@186.233.182.173) (Ping timeout: 256 seconds)
[01:18:19] *** Joins: MrC (~Ben@mrbenc.net)
[01:18:30] <Wooble> nedbat: maybe their code has a mccabe score between 1000 and 1500 and ast was legitimately trying to parse it recursively. but wow.
[01:19:22] <Wooble> (half that even, since the recursion looks like 2 functions calling each other)
[01:19:24] <llanhmod> mojtaba: https://bpa.st/FJZA <got via option 1) 'solving the challenge'.
[01:20:32] *** Parts: dademurphy (~dademurph@45.63.16.83) ()
[01:20:41] <foo> err, call it old news, but apparently arrow replaced .replace() with .shift().
[01:20:43] * foo missed that
[01:20:51] <Wooble> nedbat: I mean that would sound ridiculous if they weren;t saying they generated the code from huge .xsd schemas
[01:22:04] *** Joins: dademurphy (~dademurph@45.63.16.83)
[01:22:05] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[01:22:14] *** Quits: Jong (~Jong@2620:10d:c090:400::5:97ac) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:22:25] *** Joins: audiobirb (~audio@user/audio)
[01:22:56] <Wooble> nedbat: the original bug seems a lot more interesting since the recursion seems to actually be in coverage.py; the ast one... well, if their syntax is really that bad it makes sense.
[01:23:03] *** Joins: parv (~quass@user/parv)
[01:23:43] <Wooble> and to be fair it looks like OP vanished rather than refusing to share code; maybe they'll come back.
[01:23:48] *** Quits: raxor2k (~raxor2k@78.158.252.35) (Remote host closed the connection)
[01:25:25] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[01:25:42] <mojtaba> llanhmod: Could you please explain how did you get it?
[01:26:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[01:26:38] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:26:54] *** Joins: roguelazer (~jbrown@sietchtabr.roguelazer.net)
[01:27:19] *** Joins: ctk (~calimero@ctkarch.org)
[01:28:26] <llanhmod> mojtaba: nothing special, just used the response you posted in the browser and solved the challenge.  It's Cloudflare..gonna be hard or impossible to bypass. I dont know if they use Simple trigger + CAPTCHA or Active fingerprinting + CAPTCHA on the site. I also use a vpn so it would really be a long journey for me to find a solution other than to solve the challenge.
[01:28:32] *** Quits: ctk (~calimero@ctkarch.org) (Changing host)
[01:28:32] *** Joins: ctk (~calimero@user/calimeroteknik)
[01:28:39] *** ctk is now known as CalimeroTeknik
[01:28:45] *** Quits: Tykling (~tykling@irc.tyknet.dk) (Quit: leaving)
[01:29:45] <llanhmod> might be someone smart enough to know...perhpas using Selenium somehow... and/or Puppet something... I think.
[01:29:51] <llanhmod> Puppeteer?
[01:29:55] <mojtaba> llanhmod: Do you know any method to bypasss that?
[01:30:21] <llanhmod> short of machine learning (which I have no experience with)... not really.
[01:30:36] <foo> Can someone help me understand... I think python arrow's shift() adjusts the time, eg. +1/-1 days whereas replace will set it. Correct?
[01:30:48] <llanhmod> mojtaba: https://proxyway.com/guides/how-to-bypass-captcha  < may offer some hints.
[01:30:49] *** Joins: CoolerX (~CoolerX@user/coolerx)
[01:31:26] *** Quits: ntropy (~ntropy@146.70.21.20) (Ping timeout: 268 seconds)
[01:31:50] <mojtaba> llanhmod: Thanks. I will look in to them.
[01:32:09] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:32:23] *** Quits: ominionx (~ominionx@172.58.136.5) (Ping timeout: 256 seconds)
[01:33:32] <llanhmod> Sure, no prob. The issue caught my eye because I actually bypassed a reCAPTCHA once...for Slack.com. Though I reported the issue to them and submitted a video how I did it. That issue is fixed for them now.
[01:33:37] *** Joins: jinsun__ (~quassel@user/jinsun)
[01:34:16] <llanhmod> mojtaba: But again, that was via the browser..... not headless
[01:35:21] <mojtaba> llanhmod: So using full browser gives better results than headless?
[01:36:01] <llanhmod> mojtaba: when it comes to those type of challenges...I think so.
[01:36:13] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[01:36:14] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[01:36:47] <mojtaba> llanhmod: Thanks
[01:37:05] <mojtaba> llanhmod: have you used pyppeteer? Is it better than selenium?
[01:37:32] <meejah> i'm looking at doing "Selenium-like things" to a PyQt5 application .. is there anything besides "pytest-qt" / qtbot to look at? (That seems "too low-level" in many ways...)
[01:38:54] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:39:50] *** Quits: axisys_ (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (Remote host closed the connection)
[01:40:10] <nedbat> Wooble: it doesn't feel good to care more about the bug than the people it's affecting.
[01:40:28] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[01:41:22] *** bixo is now known as bixo_
[01:41:34] *** bixo_ is now known as bixo
[01:41:50] <llanhmod> mojtaba: I've used Selenium, but not pypetteer. Cannot say.
[01:42:48] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:43:45] *** gentooclimax is now known as climax
[01:44:45] *** Joins: tykling (~tykling@irc.tyknet.dk)
[01:44:57] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e9:d728:806d:5f85:194:5a3e)
[01:45:27] *** climax is now known as gentooclimax
[01:46:00] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-51.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:46:15] *** Joins: ominionx (~ominionx@172.58.136.5)
[01:46:51] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:246f:2937:1ec0:9b42) (Ping timeout: 268 seconds)
[01:46:51] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 268 seconds)
[01:48:20] <llanhmod> perhaps I should specify using the Selenium webdrivers in particular. for '(python, java, c# and js)' heh, pretty much all except Ruby.
[01:49:16] <mojtaba> llanhmod: Thanks, I will try to use selenium.
[01:49:27] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:49:36] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[01:50:12] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Quit: harpia)
[01:50:58] <llanhmod> might be inaccurate, but I'd dare to say the comparison of puppetter and Selenium is like comparing jinja2 to Django. maybe, maybe-not.
[01:51:21] <llanhmod> mojtaba: good luck though.
[01:52:04] *** karl_AFK is now known as karlnashville
[01:52:45] <zerosum> hey all, if I have a list of dictionaries and I want to append another key,value pair for each item what's the best way of doing it?
[01:53:15] <zerosum> should I just iterate over them and append or create a new dictionary?
[01:54:19] <mojtaba> llanhmod: Thanks alot
[01:54:41] <mojtaba> zerosum: try to use defaultdict
[01:54:51] <mojtaba> defaultdict(list)
[01:55:03] <mojtaba> and the append to the list of the values for each key
[01:56:15] <SnoopJ> zerosum, iterate the list and modify each dict as you go: `for d in list_of_dict: d[key] = newval`
[01:56:19] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:58:40] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[01:59:52] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:00:23] *** Joins: crashrep (~crashrep@user/crashrep)
[02:02:18] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[02:03:46] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:04:50] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[02:05:11] *** Quits: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e) (Quit: = "bye bye")
[02:05:21] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e9:d728:806d:5f85:194:5a3e) (Ping timeout: 268 seconds)
[02:05:31] <llanhmod> mojtaba: perhaps you've already found this: https://stackoverflow.com/questions/58872451/how-can-i-bypass-the-google-captcha-with-selenium-and-python ? Seems useful. Okay I'm really getting back to my work now. Good luck again.
[02:06:00] <EtherMan> Are there any python native ways to get the pid of a process on a *nix system? I'm finding lots of answers on google for how to but they all seem to rely on subprocess/check_output or parsing /proc, both of which seem like really bad ideas :/
[02:06:11] *** Joins: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e)
[02:06:23] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:06:35] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[02:06:41] *** Joins: argument (~0ptions@90.249.16.86)
[02:06:41] *** Quits: argument (~0ptions@90.249.16.86) (Changing host)
[02:06:41] *** Joins: argument (~0ptions@user/argument)
[02:06:51] <TML> EtherMan: Python would have to interrogate the OS to get the pid, which means either reading /proc yourself or reading the output of a tool which reads /proc
[02:07:03] <zerosum> SnoopJ thanks that did it
[02:07:29] <hexnewbie> EtherMan: psutil is a cross-platform module to get that information, but it would still parse /proc on Linux, since that's how that information is exposed
[02:07:56] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[02:09:06] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[02:09:11] <hexnewbie> Although I'm not sure if psutil can search for a process by string. You can certainly loop over the result and find it, but that might actually be both more code and slower than looping over glob.glob('/proc/[0-9]*/cmdline'), and checking the name. But it will be cross-platform, it will work on Windows, etc.
[02:10:19] <AhmedAmerican> graingert: https://stackoverflow.com/questions/70299059/what-content-decoding-does-response-aiter-bytes-have what the difference here?
[02:10:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:11:21] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:11:42] <graingert[m]> I assume gzip decoding?
[02:11:57] <AhmedAmerican> using `httpx` if am streaming the response in order to save `PDF` file, what should i use in this case ? `aiter_bytes` or `aiter_raw`
[02:11:59] <EtherMan> So much code just to just get a pid >_<   if only the program in question behaved properly with its .pid file I'd be much more confident in simply reading that... But opening /proc files just seems like a recipe for disaster with my level >_<
[02:12:04] *** karlnashville is now known as karl_AFK
[02:12:29] <EtherMan> And psutil sadly doesn't seem to exist for OpenATV 6.5 >_<
[02:12:36] *** Joins: humberto1 (~humbertow@187.202.179.144)
[02:13:01] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[02:13:01] *** Quits: humberto1 (~humbertow@187.202.179.144) (Read error: Connection reset by peer)
[02:13:07] *** Joins: humberto2 (~humbertow@187.202.179.144)
[02:13:45] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[02:13:50] *** Quits: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:14:17] *** Quits: humbertowoody (~humbertow@189.236.19.103) (Ping timeout: 240 seconds)
[02:14:36] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:04] <AhmedAmerican> graingert[m]: so in my case , do i need to use content decoding ?
[02:15:16] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[02:15:59] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:15:59] <graingert[m]> AhmedAmerican: Probably always aiter_bytes. I don't think there's much use for aiter_raw
[02:16:11] *** Quits: humberto2 (~humbertow@187.202.179.144) (Read error: Connection reset by peer)
[02:16:53] <TML> OpenATV - I assume that's a Linux for your 4 wheeler?
[02:17:06] *** Joins: humberto2 (~humbertow@187.202.182.205)
[02:17:20] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Remote host closed the connection)
[02:17:29] *** Joins: zebrag (~chris@user/zebrag)
[02:17:32] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[02:18:46] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:18:49] <EtherMan> TML: It's one of many systems built on top of Enigma2, which is a distribution for STBs. So sat, tv, cable and such.
[02:19:14] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[02:19:19] <TML> EtherMan: you don't have a c compiler for OpenATV?
[02:19:22] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:19:50] *** karl_AFK is now known as karlnashville
[02:19:51] <EtherMan> TML: Not that I know of.
[02:20:02] <TML> O.O
[02:20:03] *** PJBoy is now known as Guest7020
[02:20:03] *** Quits: Guest7020 (~PJBoy@user/pjboy) (Killed (tantalum.libera.chat (Nickname regained by services)))
[02:20:12] *** Joins: PJBoy (~PJBoy@user/pjboy)
[02:21:01] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[02:21:07] *** Quits: argument (~0ptions@user/argument) (Ping timeout: 256 seconds)
[02:21:49] <EtherMan> It should be noted that even if you can change the flavour (so OpenATV instead of say DreamboxUI), the kernel for this box is fixed. So it's still running a super old 3.4 kernel
[02:22:19] <EtherMan> So I'm not really sure anyone besides Dreambox themselves have a compatible compiler.
[02:22:22] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1) (Ping timeout: 250 seconds)
[02:22:36] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:23:19] <TML> So build one
[02:23:30] <TML> GCC can bootstrap itself
[02:24:05] <ammar2> EtherMan: what process's pid are you trying to find?
[02:24:06] <EtherMan> I'm quite a number of years away from being anywhere even remotely close to the skill level for doing something like that :)
[02:24:16] <EtherMan> ammar2: the pid of oscam.
[02:24:20] *** Joins: Barones (~Barones@user/Barones)
[02:24:48] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[02:25:29] <EtherMan> But I guess parsing /proc is the way to go. I'm just gonna have to hope I don't screw it up >_<
[02:25:48] <ammar2> EtherMan: is there a pidof/ps command on that box?
[02:26:03] <EtherMan> ammar2: Both
[02:26:20] <ammar2> you might be better off calling into one of those and parsing their output rather than parsing /proc yourself
[02:27:11] <ammar2> `subprocess.check_output(['pidof', 'oscam'])`
[02:27:27] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:27:34] *** gentooclimax is now known as climax
[02:28:41] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:29:02] *** Joins: nicode (~nic@45.72.195.35)
[02:29:49] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0:bc3f:ae22:7b02:63e) (Quit: Leaving)
[02:30:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[02:30:38] *** Joins: zumba_addict11 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[02:30:43] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[02:33:00] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[02:33:11] *** Joins: ska (~ska@user/ska)
[02:33:35] <ska> How do I prevent breakpoint() from printing all the scoped variables at that point?
[02:33:53] <ska> When it breaks that is.
[02:34:13] *** Joins: crashrep (~crashrep@user/crashrep)
[02:35:20] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:35:22] *** Quits: emf_ (~emf@163.114.132.4) (Ping timeout: 250 seconds)
[02:36:11] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 268 seconds)
[02:36:48] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 268 seconds)
[02:37:01] *** Quits: humberto2 (~humbertow@187.202.182.205) (Quit: WeeChat 3.4)
[02:37:43] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Ping timeout: 250 seconds)
[02:37:56] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:38:25] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl488hvigrqfwufcy.ipv6.telus.net)
[02:38:48] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[02:39:13] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:ac63:f3f7:89ad:2997) (Quit: Leaving)
[02:39:21] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[02:40:50] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[02:40:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[02:41:24] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[02:41:34] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 260 seconds)
[02:41:44] *** Joins: Oddity (~Oddity@user/oddity)
[02:41:49] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Client Quit)
[02:42:37] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Ping timeout: 240 seconds)
[02:42:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:42:54] *** Joins: pepper (~pepper@user/pepper)
[02:43:13] *** Joins: emf (~emf@2620:10d:c090:400::5:7499)
[02:43:34] *** Lord_of_Life_ is now known as Lord_of_Life
[02:43:35] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[02:43:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:43:54] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[02:44:16] *** climax is now known as gentooclimax
[02:45:05] *** Joins: infernix (~nix@spirit.infernix.net)
[02:45:57] *** Quits: gbear605_ (~gbear605@user/gbear605) (Ping timeout: 250 seconds)
[02:46:29] *** Quits: erry (~erry@errietta.me) (Quit: WeeChat 2.5)
[02:47:32] *** Joins: erry (~erry@errietta.me)
[02:47:39] *** Joins: KombuchaKip (~kip@192.252.230.5)
[02:49:10] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[02:49:57] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:50:08] *** Joins: crashrep (~crashrep@user/crashrep)
[02:51:22] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[02:52:51] *** Joins: analoq (~yashi@user/dies)
[02:52:51] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:53:17] *** Joins: Linux77 (~LinuMage@186.233.182.143)
[02:53:35] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[02:53:44] *** Joins: oprypin (~irc@pryp.in)
[02:54:46] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[02:54:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:55:25] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[02:57:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:58:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:59:39] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[03:01:56] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:02:12] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:06:33] <Helenah> What's the best way to code a coordinate grid with zero in the centre? I intend for this to be a server where "coord GridID X Y Z" is passed. The first ID will set focus on a grid, the X, Y and Z figures will navigate around that focused grid. Google keeps coming up with "matplotlib", it isn't want I want. This is simply a server. The coordinates the client sends will be stored as "current
[03:06:35] <Helenah> coordinates" for the logged in user of that client.
[03:06:58] <Helenah> I'm trying to make a game.
[03:07:26] <Helenah> The server is non-graphical, matplotlib is more for plotting visual graphs.
[03:07:30] <zumba_addict11> Hi all. Is it possible to show version of a remote package using pip?
[03:10:28] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[03:11:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:13:08] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[03:14:43] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[03:14:51] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:15:06] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[03:15:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:15:12] *** Joins: cjb` (~cjb@user/cjb)
[03:15:28] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[03:15:45] <SnoopJ> zumba_addict11, by "remote package" do you mean the versions of the package available on the index you're talking to?
[03:16:06] *** cjb` is now known as cjb
[03:16:16] *** Quits: M3troidman (~buttler@196.244.191.46) (Ping timeout: 268 seconds)
[03:16:17] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[03:16:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Quit: WeeChat 3.4)
[03:16:43] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:16:53] <zumba_addict11> yes
[03:16:59] <zumba_addict11> i would like to know what's out there
[03:17:06] <zumba_addict11> before installing it, SnoopJ
[03:17:12] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:17:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:18:01] <SnoopJ> zumba_addict11, does `pip index versions some_package` provide the information you are looking for?
[03:18:14] <SnoopJ> (note: this subcommand is experimental)
[03:19:00] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[03:19:09] *** Joins: M3troidman (~buttler@196.244.191.46)
[03:19:17] <zumba_addict11> let me try
[03:19:33] <zumba_addict11> yay!
[03:19:35] <zumba_addict11> Thanks a lot!
[03:20:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Client Quit)
[03:21:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:21:42] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:22:08] <dre> so I have a file of classes defined; class Foo: pass    class Bar: pass    etc.
[03:22:54] <dre> and I have a list somewhere that contains a list of all those classes, which are used one by one for some process. Is there a way I can automatically check that all of the classes in the file are in the list?
[03:23:14] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[03:23:21] <dre> I don't know how hacky it would be to use AST or something? or is there something simpler?
[03:24:52] <SnoopJ> dre, you can import the module that file defines, then use `inspect` to find all the classes defined in the module. something like: `import yourfile; classes = {name: obj for name,obj in inspect.getmembers(yourfile) if inspect.isclass(obj)}`
[03:25:16] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[03:25:54] <dre> neat, thanks
[03:26:30] <SnoopJ> note that this only handles classes defined at the module level (no nesting) and it doesn't distinguish between stuff defined there and names brought in from elsewhere. If you truly need to know just the things for which you did `class Foo: ...`, you probably need ast
[03:27:51] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:30:27] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[03:31:27] *** Joins: redbear (~redbear@12.246.229.170)
[03:33:56] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:36:31] *** Joins: Jong (~Jong@163.114.132.5)
[03:37:14] *** gentooclimax is now known as climax
[03:38:28] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 268 seconds)
[03:39:26] *** Joins: d1cor (~diego@179.63.242.120)
[03:39:52] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:40:08] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:40:27] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[03:41:02] *** climax is now known as gentooclimax
[03:41:06] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[03:41:07] *** Joins: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35)
[03:41:10] *** Joins: falk689_ (~falk689-q@gateway/tor-sasl/falk689)
[03:42:09] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[03:42:23] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:43:43] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[03:44:25] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:44:40] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[03:47:21] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:48:15] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[03:49:02] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 250 seconds)
[03:49:37] *** karlnashville is now known as karl_AFK
[03:49:45] *** Quits: redbear (~redbear@12.246.229.170) (Quit: Client closed)
[03:50:48] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[03:51:08] *** Joins: dbristow (~dbristow@user/dbristow)
[03:51:36] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[03:53:27] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[03:54:03] *** Quits: y04nn (~y04nn@92.223.89.196) (Ping timeout: 256 seconds)
[03:56:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 268 seconds)
[03:56:21] *** Joins: zeden (~zeden@user/zeden)
[03:56:25] *** Quits: wymiller_ (~wymiller@2600:6c4a:407f:f501:781d:f1b9:7c42:1265) (Quit: wymiller_)
[03:56:44] *** Quits: MrCollinsGA (~MrCollins@38.21.140.217) (Read error: Connection reset by peer)
[03:58:01] *** Quits: amazoniantoad (~jr@pool-71-114-43-42.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[03:58:12] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 268 seconds)
[04:01:01] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:02:02] *** Quits: causasui (~causasui@2001:558:6007:9e:3410:6aad:1bd3:95fd) (Ping timeout: 250 seconds)
[04:03:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:06:06] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:07:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[04:08:50] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[04:08:53] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[04:09:02] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[04:09:07] *** Joins: panella32 (~panella32@185.198.243.150)
[04:09:59] *** Joins: sw (~sw@user/sw)
[04:10:25] *** Joins: Wulf (~Wulf@user/wulf)
[04:10:36] *** Quits: jw_dungeon (~quassel@2601:44:4380:4a10:f36d:42d5:7cfb:b8af) (Remote host closed the connection)
[04:10:42] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:11:51] *** Joins: jwdungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34)
[04:11:52] *** karl_AFK is now known as karlnashville
[04:11:53] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:11:54] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:13:53] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[04:13:58] *** Joins: nomic (~nomic@185.192.69.3)
[04:14:06] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 256 seconds)
[04:14:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl - moving to 'caveman' nick.)
[04:15:28] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[04:15:46] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[04:15:48] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[04:16:57] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[04:19:02] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[04:19:26] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1)
[04:19:58] *** Parts: sw (~sw@user/sw) ()
[04:20:13] *** Quits: grimvar (~grimvar@i5C75F404.versanet.de) (Ping timeout: 250 seconds)
[04:21:16] *** Quits: Auron (Auron956@user/auron) ()
[04:22:12] *** Joins: grimvar (~grimvar@i5C75FE64.versanet.de)
[04:22:52] *** Quits: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net) (Ping timeout: 268 seconds)
[04:23:20] *** Joins: causasui (~causasui@c-68-60-125-205.hsd1.mi.comcast.net)
[04:26:20] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[04:28:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:29:17] *** Joins: crashrep (~crashrep@user/crashrep)
[04:30:37] *** Quits: emf (~emf@2620:10d:c090:400::5:7499) (Ping timeout: 240 seconds)
[04:30:48] *** Joins: fikran (~fikran@user/fikran)
[04:31:41] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:31:52] *** karlnashville is now known as karl_AFK
[04:33:58] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[04:34:06] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:34:06] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:34:51] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:35:00] *** Joins: brabrax (~brabrax@user/brabrax)
[04:35:06] *** Joins: califax (~califax@user/califx)
[04:36:45] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[04:37:01] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:37:03] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[04:38:54] *** Quits: dfkfs (~dfkfs@178.49.152.151) (Quit: Client closed)
[04:41:09] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:41:35] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:42:07] *** karl_AFK is now known as karlnashville
[04:42:44] *** Joins: junebug (~junebug@2600:1700:3db0:2540:cc4d:865d:c875:a5d1)
[04:42:47] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:43:23] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:43:55] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:44:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:45:20] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[04:45:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:45:45] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[04:45:45] *** Quits: junebug (~junebug@2600:1700:3db0:2540:cc4d:865d:c875:a5d1) (Client Quit)
[04:46:01] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[04:46:28] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[04:46:31] *** Quits: luva (~luva@45.141.152.62) (Quit: Ping timeout (120 seconds))
[04:46:31] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: Ping timeout (120 seconds))
[04:46:37] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[04:46:37] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: Ping timeout (120 seconds))
[04:46:52] *** Quits: Duckle (~Duckle@user/duckle) (Quit: Ping timeout (120 seconds))
[04:46:55] *** Quits: causasui (~causasui@c-68-60-125-205.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[04:46:55] *** Joins: causa_sui (~causasui@2001:558:6007:9e:3410:6aad:1bd3:95fd)
[04:46:55] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:46:57] *** Joins: tomg (~tomg@user/tomg)
[04:46:58] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:46:59] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[04:47:00] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[04:47:07] *** Joins: luva (~luva@45.141.152.62)
[04:47:08] *** Quits: nehsou^ (~nehsou@128-092-164-034.biz.spectrum.com) (Read error: Connection reset by peer)
[04:47:09] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[04:47:13] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Quit: ZNC 1.8.2 - https://znc.in)
[04:47:14] *** Joins: Duckle (~Duckle@user/duckle)
[04:47:25] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[04:47:25] *** Quits: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:47:27] *** Quits: fury_ (~fury@znc.codexterous.com) (Quit: bye)
[04:47:36] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Remote host closed the connection)
[04:47:37] *** Quits: astiak_ (~astiak@ownage.biz) (Quit: Goodbye...)
[04:47:42] *** Joins: fury_ (~fury@znc.codexterous.com)
[04:47:45] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[04:47:46] *** Joins: astiak (~astiak@ownage.biz)
[04:47:46] *** Quits: towel_ (~towel@user/towel) (Quit: ZNC - https://znc.in)
[04:47:49] *** Quits: oz4ga (~tim@hator.sunsite.lv) (Quit: ZNC 1.8.2 - https://znc.in)
[04:47:54] *** Joins: nehsou^ (~nehsou@128-092-164-034.biz.spectrum.com)
[04:47:55] *** Quits: nashimus (~nashimus@137.117.139.142) (Excess Flood)
[04:47:55] *** Quits: Byteflux (~byte@byteflux.net) (Remote host closed the connection)
[04:47:57] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[04:47:57] *** Quits: nrg (~NRG@user/nrg) (Remote host closed the connection)
[04:48:00] *** Joins: towel (~towel@user/towel)
[04:48:03] *** Quits: w0rp (~w0rp@w0rp.com) (Quit: GONE)
[04:48:08] *** Quits: Celelibi (celelibi@user/celelibi) (Remote host closed the connection)
[04:48:11] *** Joins: nrg (~NRG@user/nrg)
[04:48:14] *** Joins: yitz (~yitz@exercism/yitz)
[04:48:14] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[04:48:14] *** Joins: onur (~onur@user/onur)
[04:48:14] *** Joins: Byteflux (~byte@byteflux.net)
[04:48:16] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[04:48:23] *** Joins: w0rp (w0rp@2a01:7e00::f03c:91ff:fedb:589)
[04:48:29] *** Quits: DerpGusta_ (~quassel@user/derpgusta) (Quit: No Ping reply in 180 seconds.)
[04:48:30] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:48:37] *** Quits: Guest9955 (az@stable.bnc.by.bnc4you.xyz) (Quit: Stable ZNC by #bnc4you)
[04:48:46] *** Quits: panella32 (~panella32@185.198.243.150) (Ping timeout: 268 seconds)
[04:48:46] *** Quits: dbbr (~dbbr___@2804:5f80:70a0:3700:6c79:57b3:8002:f705) (Ping timeout: 268 seconds)
[04:48:47] *** Quits: Fossil (~Fossil@95.85.23.165) (Quit: Bye)
[04:48:53] *** Joins: zebrag (~chris@user/zebrag)
[04:49:00] *** Joins: Fossil (~Fossil@95.85.23.165)
[04:49:07] *** Quits: mncheckm (~mncheck@193.224.205.254) (Remote host closed the connection)
[04:49:16] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[04:49:16] *** Joins: DerpGusta (~quassel@user/derpgusta)
[04:49:18] *** Joins: mncheckm (~mncheck@193.224.205.254)
[04:49:19] *** Joins: oz4ga (~tim@hator.sunsite.lv)
[04:49:20] *** Joins: duuude (~user@user/duuude)
[04:49:45] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[04:50:00] *** Quits: jjhoo (~jahakala@user/jjhoo) (Ping timeout: 268 seconds)
[04:50:00] *** Quits: Saxtheowl (~roro@78.192.226.182) (Ping timeout: 268 seconds)
[04:50:04] *** Quits: moose (~moose@user/moose) (Quit: System has requested shutdown due to maintenance.)
[04:50:35] *** Joins: Saxtheowl (~roro@78.192.226.182)
[04:50:37] *** Quits: cp--- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 268 seconds)
[04:50:37] *** Quits: fredrikh1 (~fhl@myrsnipa.uio.no) (Ping timeout: 268 seconds)
[04:50:37] *** Quits: raukadah (~chandanku@51.159.58.174) (Ping timeout: 268 seconds)
[04:50:40] *** Joins: jjhoo (~jahakala@user/jjhoo)
[04:51:10] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[04:51:10] *** Joins: raukadah (~chandanku@51.159.58.174)
[04:51:11] *** Joins: cp--- (~cp-@b157153.ppp.asahi-net.or.jp)
[04:51:16] *** Joins: nashimus (~nashimus@137.117.139.142)
[04:51:37] *** Quits: vsantana (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com) (Quit: vsantana)
[04:52:56] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:53:30] *** Joins: Celelibi (celelibi@user/celelibi)
[04:53:56] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[04:53:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:54:22] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[04:55:05] *** Quits: berong91 (~noob4ever@75.154.235.153) (Ping timeout: 250 seconds)
[04:55:20] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[04:55:26] <foo> We have the option to process a CSV - dozens of columns hundreds to thousands of rows, on the frontend or the backend. A dev said: "Or frontend will convert CSV into JSON and send to backend as JSON. This will free up some load on backend. While utilizing user’s computer/phone to take some of the work of converting CSV file." ... he wants to do frontend, I think the backend is more
[04:55:32] <foo> predictable/controllable... can I get a quick vote here - would you do this on the frontend or backend?
[04:55:38] *** Joins: az (az@stable.bnc.by.bnc4you.xyz)
[04:55:59] *** Joins: cliluw (~cliluw@47.147.73.223)
[04:56:02] *** az is now known as Guest1199
[04:56:55] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:56:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:57:11] <SnoopJ> foo, my instinct would be to transmit the user's data (the CSV, I assume?) to the backend and do processing there, unless there was a compelling reason to do it on the frontend.
[04:57:22] <foo> SnoopJ: there isn't, other than he's advocating for it.
[04:57:26] <foo> He's suggesting https://www.papaparse.com
[04:57:32] <SnoopJ> Even if the frontend does it, you're kinda on the hook for validating it, so...
[04:57:37] <SnoopJ> you == backend
[04:58:25] *** Joins: MatthewG (~foo@user/foo/x-8763512)
[04:58:38] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 268 seconds)
[04:59:25] *** Joins: Nact (~l@host-149-154-250-116.dynamic.voo.be)
[05:00:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:00:13] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:89a7:25cc:df2a:3b33) (Read error: Connection reset by peer)
[05:00:48] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:01:56] <grym> foo: maybe if you go csv->json on the frontend, then the user gets a faster response whether or not the CSV is valid for use in your application; but, then, you'll have to keep both the frontend and the backend in sync on what "valid" means
[05:02:35] <grym> (if it's no slower to validate on the backend, then he's really got a weak case i thin)
[05:03:02] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[05:03:03] <grym> i'm with SnoopJ, i'd be inclined to do this in one place too
[05:03:10] <SnoopJ> I don't think it's good design to ever not-validate on the backend: the remote is not necessarily *your* client code
[05:03:45] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[05:04:31] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:04:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:05:17] *** Joins: epony (epony@user/epony)
[05:05:38] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:07:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:10:30] *** Joins: thorbw (~tw@46.230.130.50)
[05:11:14] *** Joins: pycurious (~Adium@user/pycurious)
[05:11:54] <pycurious> How do I search for a string…and the next <pre> … capture … </pre>. I tried pat = re.compile("FixedStringSubset*<pre>(*)</pre>") - that doesnt work.
[05:13:03] <Repiphany> pycurious: t* matches 0 or more 't's, you want .* to match any character
[05:13:08] *** Quits: njt (~njt@zaph.org) (Quit: bye)
[05:13:27] *** Joins: njt (~njt@zaph.org)
[05:14:44] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:15:04] <foo> grym / SnoopJ - genuinely appreciate your thoughts, I've shared with him. He says he'll "side with the team's preference." Would that bother you if a developer told you that? Maybe I'm overreacting. I want to be with people who act with logic and understanding... not siding just because.
[05:16:12] <pycurious> Repiphany: thanks. No match now
[05:16:37] <pycurious> pat = re.compile("FixedStringSubset.*<pre>(.*)</pre>", re.M) —> mo = re.match(pat, req.text) —> no match
[05:16:52] <grym> foo: knowing nothing else i read that response as 'i'm not invested in this one way or another; whatever's fine with me"
[05:16:54] *** Joins: tristan_ (~tristan@223.62.219.48)
[05:17:04] <pycurious> Repiphany: I want the first <pre> </pre> to capture after I match the Fixed String
[05:17:11] <phy1729> That looks suspiciously like attempting to parse HTML with regex
[05:17:21] <grym> foo: so i'd avoid the "i dunno, where do YOU wanna eat? " problem and just decide :)
[05:17:22] <pycurious> phy1729: Indeed it is.
[05:17:26] <SnoopJ> foo, as long as there's a clear understanding of which part of the stack is responsible for what (and an understanding how that affects the business) I'm usually an easy customer. But then, our shop is very much "product managers make a lot of decisions"
[05:17:47] <phy1729> You shouldn't do that. HTML is not a regular language, so regular expressions aren't powerful enough to properly parse it.
[05:17:49] *** karlnashville is now known as karl_AFK
[05:18:05] <foo> grym / SnoopJ - thanks, I'm open to me overreacting. Maybe I'm too invested in this. And I want to work with people who have a "I care attitude" rather than a "meh, sure, whatever dude" attidue.
[05:18:09] <foo> attitdue.
[05:18:09] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:18:28] <SnoopJ> foo, take some notes about how you feel about it now, and come back to them in a few hours/tomorrow
[05:18:31] <pycurious> phy1729: Any code snippets that would find me the <pre>…</pre> content after a fixed string matches?
[05:18:32] <phy1729> foo: I think siding with the team is often a useful way to avoid bikeshedding
[05:18:45] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Client Quit)
[05:19:17] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[05:19:31] <phy1729> I would see if I could use the document structure and xpath rather than string matching
[05:19:57] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: rebooting...)
[05:20:16] <Repiphany> pycurious: What is req.text
[05:20:25] <SnoopJ> foo, we do have very similar conversations about which things our frontend team does/does not do. It's gotten more complicated now that we have a desktop application that shares a lot of code with the web UI.
[05:20:29] <Repiphany> re.match only tries to match the start of the string
[05:20:42] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[05:21:09] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:21:12] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[05:21:53] <t4nk_freenode> folks, https://postimg.cc/gallery/k5b4c3V  here you see bCNC being fired up, no menus, no text, everything seems missing. No error messages either. if I specify a filename when opening, it seems to load and display as in the second picture...
[05:21:58] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:22:10] <SnoopJ> foo, for instance, one of our core feature is shuffling/balancing customer data to find good training orders. That's always struck me as something the backend could do well, but I'm not devastated that it's in the frontend.
[05:22:32] *** Joins: crashrep (~crashrep@user/crashrep)
[05:22:54] <t4nk_freenode> https://postimg.cc/xcxGX0m8 this is in my ini file.. now, I can't see sans-serif listed in plasma font management, but it does not seem to matter if I try an existing font
[05:23:13] <SnoopJ> I think that preference might just be because the research team frequently puts code into the backend. They basically never put code in the frontend, at least not unless it goes through a translation/re-implementation.
[05:23:42] <t4nk_freenode> does the look of this app somehow seem like a familiar python issue to anyone?
[05:23:53] <pycurious> Repiphany: https://dpaste.org/Mm0x - this is what I am trying to parse
[05:25:07] <SnoopJ> t4nk_freenode, seems like it's "just" not finding the font. I don't know of any reason that would be related to Python, though.
[05:25:46] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c444:55ef:22e9:885) (Ping timeout: 268 seconds)
[05:25:46] <pycurious> Repiphany: pat = re.compile(r"""FixedString(.*?)<pre>(.*?)</pre>""", re.M) \n mo = re.findall(pat, teststring) - no luck
[05:26:04] *** Quits: M3troidman (~buttler@196.244.191.46) (Ping timeout: 256 seconds)
[05:26:14] <SnoopJ> t4nk_freenode, have you been running this program from a terminal? If so, is it producing useful warning/error messages you could share with us?
[05:26:21] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[05:26:27] <SnoopJ> or perhaps it has a logging feature
[05:26:28] <t4nk_freenode> no errors, like I said
[05:26:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:26:38] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[05:26:38] * SnoopJ wasn't sure if that included terminal errors or not
[05:26:45] <t4nk_freenode> yeah, sorry
[05:27:12] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[05:27:25] <t4nk_freenode> it's been puzzling me
[05:28:00] <Repiphany> pycurious: You also need re.DOTALL if you want to match newlines
[05:28:52] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:28:54] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:28:59] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[05:29:00] <SnoopJ> t4nk_freenode, have you poked around in the project's issues on GitHub?
[05:29:51] <t4nk_freenode> yep.. nothing there.. I'm now looking if there's some kind of additional logging that can be done though, upon your suggestion
[05:30:00] * SnoopJ doesn't know if Tkinter makes use of only 'bundled' fonts or if it talks to something that would be external to this application
[05:30:14] <t4nk_freenode> ah... does it do that?
[05:30:18] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:43] <t4nk_freenode> that would explain why it has always worked without me having sans-serif in plasma font management
[05:31:21] *** Quits: auctus (~auctus@user/auctus) (Remote host closed the connection)
[05:31:24] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[05:31:46] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[05:31:51] *** Joins: redbear (~guy@2601:642:c000:2c38:d131:170c:a68f:a966)
[05:32:49] *** Joins: vlm (~vlm@user/vlm)
[05:33:11] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[05:33:40] <t4nk_freenode> nah... all the mentioned 'log files' are just from the console
[05:33:47] <redbear> I need help writing to an excel column using variables. I wrote a script that find the next open cell and stores the values in cellnum, and I have a number of samples stored in variable num, I need to write info into excel column B based on sheet[b cellnum: b cellnum+num] but am not getting it to work, how do I accomplish this?
[05:34:21] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[05:35:07] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:35:42] *** Quits: tristan_ (~tristan@223.62.219.48) (Ping timeout: 256 seconds)
[05:36:11] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[05:37:17] *** Quits: telboon (~telboon@user/telboon) (Ping timeout: 240 seconds)
[05:39:48] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[05:40:03] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[05:40:20] *** Joins: tomg (~tomg@user/tomg)
[05:41:26] *** Quits: dibas_ (~dibas@wild.uberspace.de) (Quit: Leaving...)
[05:41:35] *** Joins: dibas (~dibas@wild.uberspace.de)
[05:41:35] *** Quits: dibas (~dibas@wild.uberspace.de) (Changing host)
[05:41:35] *** Joins: dibas (~dibas@user/dibas)
[05:41:36] *** Joins: bluedust (~bluedust@117.207.237.207)
[05:41:46] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[05:42:10] *** Joins: tomg (~tomg@user/tomg)
[05:43:44] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[05:44:36] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[05:44:50] <t4nk_freenode> darn... would have been nice if I understood anything about python, and the structure of things; could have gone in and try to create some dialogs myself perhaps. I know c++ pretty well, but I'm at a complete loss when it comes to python
[05:45:33] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:46:08] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:46:49] <foo> grym / SnoopJ / phy1729 - thanks again for your help.
[05:46:54] <foo> phy1729: how do you define bikeshedding?
[05:47:07] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[05:47:51] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[05:50:13] *** Quits: therufuser (~therufuse@p5b02e236.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:51:45] *** Joins: therufuser (~therufuse@p5b001fd0.dip0.t-ipconnect.de)
[05:52:31] <parv> https://orange.bikeshed.org/
[05:53:01] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:d8fb:9942:649a:910e)
[05:53:03] <phy1729> I'd prefer https://green.bikeshed.org/
[05:53:35] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[05:53:36] *** Joins: califax- (~califax@user/califx)
[05:53:39] <foo> haha
[05:53:39] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[05:53:45] <foo> parv / phy1729 - thanks
[05:53:51] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[05:54:17] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:54:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:54:23] * parv goes to find one in color of blood, his favorite shade of red ...
[05:54:24] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[05:54:55] <foo> phy1729: I appreciate that comment. I might be too invested in this project, too meticulous. My only intent is to share the reasoning behind our decisions rather than "hey you, do it this way, because." I like to work with people who learn and grow and agree and challenge ideas." Whereas my read on this was, "meh, sure, if that's what the team wants." I've since asked him a better question and we've "made up"
[05:55:02] <foo> (and I acknowledge what I learned about that moment)
[05:56:18] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:56:18] *** califax- is now known as califax
[05:56:29] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:56:36] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[05:56:40] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[05:56:54] *** brabrax_ is now known as brabrax
[05:57:16] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[05:57:35] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[05:57:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:58:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 268 seconds)
[05:59:20] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl488hvigrqfwufcy.ipv6.telus.net) (Remote host closed the connection)
[06:00:25] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[06:01:35] *** Joins: bluedust_ (~bluedust@103.160.194.110)
[06:02:48] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[06:04:57] *** Quits: bluedust (~bluedust@117.207.237.207) (Ping timeout: 256 seconds)
[06:04:59] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:06:05] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[06:06:55] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:07:13] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[06:08:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:08:17] *** Joins: kostkon (~androirc@2a02:587:a116:f212:49a:579d:8418:895c)
[06:10:03] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[06:10:39] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:11:02] <pycurious> "2018-11-13T20:45:43.572Z" - what is an easy way to parse this in python into date/time?
[06:11:15] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:11:24] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 268 seconds)
[06:12:15] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[06:13:57] <phy1729> datetime.strptime %Y-%m-%dT%H:%M:%S.%f%z  iirc
[06:14:54] <pycurious> dateparser.parse("2018-11-13T20:45:43.572Z") - this does it - should i try strptime?
[06:15:07] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[06:15:43] *** Quits: nicode (~nic@45.72.195.35) (Ping timeout: 256 seconds)
[06:15:50] <phy1729> I like to stick to stdlib when I can
[06:16:27] *** Joins: pyevery__ (~pyeveryth@c-73-38-4-158.hsd1.ma.comcast.net)
[06:16:37] *** Joins: M3troidman (~buttler@196.196.203.108)
[06:16:42] <grym> pendulum.parse will also handle that
[06:17:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:17:32] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[06:17:34] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[06:17:43] <pycurious> grym: looking into that
[06:21:07] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:22:30] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1) (Ping timeout: 268 seconds)
[06:24:36] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:26:29] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[06:26:58] <pycurious> grym: Thanks for the pointer!
[06:27:01] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:29:20] *** Joins: Vonter (~Vonter@user/vonter)
[06:29:32] *** Joins: novapy (~chronos@12.71.10.20)
[06:29:43] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:31:25] *** Joins: telboon (~telboon@user/telboon)
[06:31:42] *** Joins: frost (~frost@user/frost)
[06:32:17] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[06:33:02] *** Quits: frost (~frost@user/frost) (Client Quit)
[06:33:13] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:34:11] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[06:34:12] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Read error: Connection reset by peer)
[06:34:31] *** Joins: Vonter (~Vonter@user/vonter)
[06:35:10] *** Quits: dtux (~dtux@2601:646:8f00:3f2:67a4:3701:f910:3c83) (Quit: dtux)
[06:35:29] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:36:37] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[06:37:43] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:38:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:38:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:39:10] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:39:18] *** Joins: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net)
[06:39:36] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[06:39:36] *** Joins: mickey80 (~user@user/mickey)
[06:39:46] *** Quits: causa_sui (~causasui@2001:558:6007:9e:3410:6aad:1bd3:95fd) (Ping timeout: 268 seconds)
[06:40:09] *** Joins: fikran (~fikran@user/fikran)
[06:40:16] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:40:16] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:40:16] *** finn_elija is now known as FinnElija
[06:41:48] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[06:41:48] *** mickey80 is now known as mickey8
[06:42:12] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[06:43:32] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[06:47:47] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 268 seconds)
[06:49:41] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[06:50:25] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:50:55] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Read error: Connection reset by peer)
[06:51:57] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[06:52:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:52:48] *** Joins: fef (~thedawn@user/thedawn)
[06:53:20] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[06:53:52] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[06:54:11] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[06:54:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:55:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[06:55:23] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:56:05] *** Quits: uuair (~quassel@user/uuair) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:56:57] *** Quits: treefrob (~treefrob@p57a967da.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:57:52] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[06:58:16] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 268 seconds)
[06:58:40] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[06:58:46] *** Joins: uuair (~quassel@user/uuair)
[06:58:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[06:59:34] *** Quits: M3troidman (~buttler@196.196.203.108) (Ping timeout: 256 seconds)
[06:59:34] *** Quits: bixo (~bixo@190.200.253.127) (Ping timeout: 256 seconds)
[07:00:08] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:00:11] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[07:00:19] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[07:00:31] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[07:01:38] *** Joins: raym (~raym@user/raym)
[07:03:20] *** Joins: adeliktas71 (~adeliktas@i59F52538.versanet.de)
[07:04:04] *** Joins: M3troidman (~buttler@196.196.203.108)
[07:04:04] *** Joins: maryo (~Maryo@user/maryo)
[07:04:46] *** Joins: Celeo (~Celeo@user/celeo)
[07:04:54] *** Quits: adeliktas (~adeliktas@i59F4D64A.versanet.de) (Ping timeout: 250 seconds)
[07:04:54] *** adeliktas71 is now known as adeliktas
[07:04:55] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:07:24] *** Joins: pepper (~pepper@user/pepper)
[07:07:31] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[07:09:33] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[07:10:14] *** Quits: zumba_addict11 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[07:10:38] *** Joins: treefrob (~treefrob@p57a96ba4.dip0.t-ipconnect.de)
[07:10:48] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:12:14] *** Quits: Roedy (Roedy@user/roedy) (Ping timeout: 260 seconds)
[07:12:58] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[07:17:42] *** Joins: Elodin (~elodin@user/elodin)
[07:17:42] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Read error: Connection reset by peer)
[07:19:15] *** Quits: Elodin (~elodin@user/elodin) (Client Quit)
[07:19:27] *** Joins: Elodin (~elodin@user/elodin)
[07:22:10] *** Quits: DerpGusta (~quassel@user/derpgusta) (Quit: No Ping reply in 180 seconds.)
[07:22:11] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:8a15:fe0a:f586:b560)
[07:22:26] *** Joins: DerpGusta (~quassel@user/derpgusta)
[07:22:30] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[07:23:08] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[07:23:42] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[07:24:10] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[07:27:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:27:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:28:29] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[07:28:39] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:28:49] *** Quits: telboon (~telboon@user/telboon) (Ping timeout: 256 seconds)
[07:29:00] *** Joins: bluedust (~bluedust@89.238.143.238)
[07:29:00] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Read error: Connection reset by peer)
[07:29:28] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:29:28] *** Joins: bytehackr (~Sandipan@43.252.250.126)
[07:29:41] *** Joins: Elodin (~elodin@user/elodin)
[07:29:43] *** Joins: sorandom199 (~blah@cpe-70-95-182-183.san.res.rr.com)
[07:30:01] *** Quits: sorandom199 (~blah@cpe-70-95-182-183.san.res.rr.com) (Client Quit)
[07:30:08] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:10] *** Quits: thorbw (~tw@46.230.130.50) (Ping timeout: 256 seconds)
[07:30:14] *** karl_AFK is now known as karlnashville
[07:31:15] *** Joins: bluedus__ (~bluedust@117.207.237.207)
[07:31:59] *** Quits: seabre (~seabre@user/seabre) (Quit: ZNC 1.8.2 - https://znc.in)
[07:32:12] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Quit: Leaving.)
[07:32:13] *** Quits: bluedust_ (~bluedust@103.160.194.110) (Ping timeout: 256 seconds)
[07:32:17] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:23] *** Quits: emerent (~quassel@p200300cd57044321ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:32:29] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[07:32:34] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[07:32:34] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[07:32:45] *** Joins: canurabus (~canurabus@ip-24-156-182-149.user.start.ca)
[07:33:01] *** Joins: emerent (~quassel@p200300cd57044339ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:33:15] *** Joins: seabre (~seabre@user/seabre)
[07:33:16] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Client Quit)
[07:34:05] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[07:34:37] *** Joins: duds- (~duds-@146.70.31.116)
[07:34:39] *** Quits: bluedust (~bluedust@89.238.143.238) (Ping timeout: 268 seconds)
[07:35:59] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:09] *** Quits: waveform (~quassel@waveform.plus.com) (Read error: Connection reset by peer)
[07:36:31] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:54] *** Quits: cliluw (~cliluw@47.147.73.223) (Quit: Leaving)
[07:37:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:37:41] *** Quits: smqra (~rooba@208.110.85.44) (Quit: WeeChat 3.5-dev)
[07:38:46] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[07:39:56] *** Joins: Elodin (~elodin@user/elodin)
[07:40:09] *** Quits: sreve (~quassel@p4ff44c8e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:40:40] *** Joins: sreve (~quassel@p549d734b.dip0.t-ipconnect.de)
[07:41:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:42:02] *** Quits: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net) (Quit: WeeChat 2.8)
[07:42:02] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:6e8:39d8:3639:31ff)
[07:44:06] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[07:45:32] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:46:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:48:27] *** Joins: amazoniantoad (~jr@pool-71-114-43-42.washdc.fios.verizon.net)
[07:48:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[07:50:09] *** Joins: Elodin (~elodin@user/elodin)
[07:50:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[07:51:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:51:22] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[07:51:47] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[07:52:03] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[07:52:21] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[07:52:53] *** Joins: ov3rmind|2 (~LinuMage@186.233.179.225)
[07:55:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:56:08] *** Quits: dre (~dre@2001:8003:c932:c301:9978:1feb:26d8:cb0f) (Quit: Leaving)
[07:56:14] *** Quits: Linux77 (~LinuMage@186.233.182.143) (Ping timeout: 268 seconds)
[07:56:48] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[07:57:11] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[07:57:35] *** Quits: amazoniantoad (~jr@pool-71-114-43-42.washdc.fios.verizon.net) (Quit: Lost terminal)
[07:58:42] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[07:59:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:59:04] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:59:24] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[07:59:41] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:00:39] *** Joins: fef (~thedawn@user/thedawn)
[08:02:53] *** Quits: bluedus__ (~bluedust@117.207.237.207) (Remote host closed the connection)
[08:04:06] *** Quits: maxzor (~maxzor@2a01cb04054faa00b9bbe250a19ea907.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[08:04:22] *** Joins: Elodin (~elodin@user/elodin)
[08:05:44] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[08:06:03] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:06:47] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:08:56] *** ov3rmind|2 is now known as Linux77
[08:09:01] *** Joins: bluedust (~bluedust@117.207.237.207)
[08:09:26] *** Joins: dre (~dre@2001:8003:c932:c301:77c0:cff4:f6dd:6abf)
[08:10:32] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[08:11:47] *** Joins: RingtailedFox (~BoingBoin@2001:1970:5d2a:c500:7471:dedd:49c8:e483)
[08:13:07] <RingtailedFox> https://bpa.st/YMKA my python 3 in stall is located at C:\Python3-x64\... pip works when run as admin, but not as a regular user...
[08:13:47] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[08:18:46] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1)
[08:19:03] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[08:19:03] *** Quits: greknod282 (~grek@120.88.171.98) (Ping timeout: 268 seconds)
[08:20:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:23:33] <RingtailedFox> i don't have any virtual environments configured.. could that be why?
[08:24:08] <jinsun__> didn't you solve this already few days back with a reinstall? or maybe I'm remembering wrong
[08:27:04] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[08:27:31] <jinsun__> see if you can make folders in C:\\Users\\User\\AppData\\Local\\Temp without admin rights
[08:27:58] <RingtailedFox> no, i didn't resolve it
[08:28:09] <RingtailedFox> i got frustrated, took a break, then cooked dinner and forgot about it all
[08:28:31] *** Joins: nomic (~nomic@185.192.69.3)
[08:29:14] <RingtailedFox> hrmmmm, the folder's currently in use...
[08:29:16] <RingtailedFox> lemme see what's using it
[08:29:38] *** Quits: bluedust (~bluedust@117.207.237.207) (Remote host closed the connection)
[08:29:54] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:29:59] *** [_] is now known as [itchyjunk]
[08:31:09] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:31:48] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:32:57] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 240 seconds)
[08:33:18] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:33:25] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[08:33:26] *** Joins: Guest45 (~Guest45@static-176-158-225-112.ftth.abo.bbox.fr)
[08:33:43] <RingtailedFox> i seem to already have ownership of the folder
[08:33:58] *** Quits: Guest45 (~Guest45@static-176-158-225-112.ftth.abo.bbox.fr) (Client Quit)
[08:34:01] <RingtailedFox> yeah i made a test folder in tehre just fine
[08:34:02] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[08:34:20] *** Joins: jazzy (~jaziz@user/jaziz)
[08:36:03] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[08:36:15] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[08:37:37] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[08:37:58] <jinsun__> hmm, well the error comes from not being able to find a temp folder, and the logic for that is simple, it just tries making a random file with small amount of data 100 times and if it fails all the time it raises that error
[08:38:45] <jinsun__> so that's why my first guess was that windows is not allowing it to make any files in the temp folder
[08:39:35] *** Joins: Elodin (~elodin@user/elodin)
[08:40:35] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[08:41:15] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 268 seconds)
[08:41:42] *** Joins: guest1 (~anon@50-27-60-176.mdlncmtk01.res.dyn.suddenlink.net)
[08:41:58] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[08:42:11] *** Parts: guest1 (~anon@50-27-60-176.mdlncmtk01.res.dyn.suddenlink.net) (Leaving)
[08:42:38] *** Joins: analoq (~yashi@user/dies)
[08:43:55] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[08:44:36] <jinsun__> maybe try checking permissions from python
[08:44:47] <jinsun__> import os; os.access("C:\\Users\\ss\\AppData\\Local\\Temp", os.W_OK)
[08:45:00] *** Quits: hyiltiz_ (~quassel@31.220.5.250) (Quit: hyiltiz_)
[08:45:16] *** Joins: hyiltiz (~quassel@31.220.5.250)
[08:45:26] *** karlnashville is now known as karl_AFK
[08:45:37] *** Joins: alxndr (~alexander@ybti.net)
[08:47:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:47:41] *** Quits: moog (~moog@107.126.53.88) (Read error: Connection reset by peer)
[08:48:42] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:49:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:49:30] *** Joins: fikran (~fikran@user/fikran)
[08:49:49] *** Joins: Elodin (~elodin@user/elodin)
[08:50:50] *** Quits: redbear (~guy@2601:642:c000:2c38:d131:170c:a68f:a966) (Quit: Leaving)
[08:50:59] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 256 seconds)
[08:53:07] *** Joins: hyiltiz (~quassel@31.220.5.250)
[08:54:13] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[08:55:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:56:43] *** Joins: eyepeetee (~aa@user/eyepeetee)
[08:57:11] <RingtailedFox> i can make a temp folder in C:\..
[08:57:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[08:58:16] <jinsun__> but can you do it without admin rights?
[08:58:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[08:58:23] <eyepeetee> hi, how is everyone today... i have a question: why is it that `' '.join(some_string.split())` will collapse all consecutive whitespace to a single space each, but `'\n'.join(some_string.split('\n'))` does not collapse consecutive newlines to one newline each?
[08:58:43] <eyepeetee> *and can i accomplish the latter in a similar manner?
[08:58:49] *** Joins: bluedust (~bluedust@117.207.237.207)
[08:59:27] <RingtailedFox> yes
[08:59:36] <RingtailedFox> huh. deleted the old TEMP folder, made the new one and now it works
[08:59:40] <Repiphany> regex replace newlines
[08:59:42] <RingtailedFox> holy crap if it was that simple i would have done that last week
[08:59:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[08:59:57] <leduyquang753> Check out `help("".split)`.
[09:00:02] *** Joins: Elodin (~elodin@user/elodin)
[09:01:29] <Repiphany> eyepeetee: Could also do `'\n'.join(filter(None, some_string.split('\n')))` or the equivalent comprehension
[09:01:29] <jinsun__> eyepeetee: split does the special thing only when you give no arguments
[09:03:03] <eyepeetee> jinsun__ it sounds like the easiest and hackish-seeming way to accomplish what i want, then, is to replace all spaces with some non-space character that doesn't exist in the data, then do the no arguments then, then replace back to spaces
[09:03:26] <eyepeetee> no arguments thing*, then replace the non space character back to spaces
[09:03:51] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:03:55] <Repiphany> Consecutive newlines just become empty strings after .split('\n') so just filter them out
[09:04:29] <RingtailedFox> now to figure out whhy IDLE whines about not being able to make file C:\Users\User\.idlerc\recentfiles.lst...
[09:04:30] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[09:04:42] <Repiphany> `'\n'.join(line for line in some_string.split('\n') if line)` if you don't like filter
[09:04:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:05:37] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[09:06:37] <eyepeetee> Repiphany i like that solution better, definitely cleaner
[09:06:40] <eyepeetee> thank you
[09:06:45] *** Joins: maxzor (~maxzor@2a01cb04054faa002eb932dcfc1ca4dd.ipv6.abo.wanadoo.fr)
[09:07:10] <eyepeetee> smacking myself now for not realizing it myself too
[09:07:45] *** Quits: canurabus (~canurabus@ip-24-156-182-149.user.start.ca) (Quit: Leaving)
[09:08:19] *** Joins: Roedy (Roedy@user/roedy)
[09:08:36] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[09:10:21] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:10:22] *** Joins: Elodin (~elodin@user/elodin)
[09:10:35] <whatsupdoc> what's the dfiference between @lru_cache and @lru_cache(cache)?
[09:13:14] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[09:13:16] <t4nk_freenode> I've narrowed things down now, https://postimg.cc/w7fkmNM8
[09:13:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:13:44] <t4nk_freenode> there is no text visible in my output, I don't understand what's going on
[09:15:25] <jinsun__> whatsupdoc: not clear from the docs? https://docs.python.org/3/library/functools.html#functools.lru_cache
[09:18:25] *** Quits: bluedust (~bluedust@117.207.237.207) (Remote host closed the connection)
[09:18:39] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[09:18:52] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[09:19:15] *** Joins: ekathva (~ekathva@2001:999:51:be01:cc59:a999:376f:a526)
[09:19:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:19:54] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[09:20:36] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[09:20:58] <whatsupdoc> nope
[09:24:38] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:25:34] *** Joins: Elodin (~elodin@user/elodin)
[09:25:37] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:d8fb:9942:649a:910e) (Read error: Connection reset by peer)
[09:27:03] <kungp> i want to select a color from ~10 or so derived from any number, i guess some sort of hash
[09:27:08] <kungp> any pointers?
[09:28:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:28:08] <kungp> so any int -> 0 <= 9
[09:28:40] <BrenBarn> I mean you could just take it mod 10
[09:29:05] <BrenBarn> if you don't care about it being evenly distributed
[09:29:13] <kungp> oh, sorry, i do
[09:29:35] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:30:18] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[09:30:33] *** Joins: y04nn (~y04nn@92.223.89.196)
[09:30:43] <parv> kungp, Do you want to randomly select or when given a number?
[09:31:16] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[09:32:38] <parv> If you want random selection, check if "random" module says anything about even distribution
[09:32:39] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ...enter the matrix...)
[09:33:03] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[09:33:28] <jinsun__> whatsupdoc: okay, well, @lru_cache is using lru_cache as the decorator, @lru_cache(cache) is using the result of lru_cache(cache) as the decorator
[09:33:41] <kungp> so i have a lot of labels displaying data (tkinter), and each one is associated with an id. i want the labels with the same id to have the same color, and also be the same every time
[09:33:41] <BrenBarn> you could hash it and convert the hash to an int and then mod that
[09:33:51] <kungp> i might be overthinking it, it's very early
[09:34:04] *** Joins: redgloboli (~redglobol@user/redgloboli)
[09:35:06] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[09:35:28] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:35:38] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[09:35:51] *** Joins: cheater (~Username@user/cheater)
[09:35:54] *** Quits: abeyer (~abeyer@23.252.60.124) (Quit: Client closed)
[09:36:11] <kungp> i guess mod would work when i think about it..
[09:36:39] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[09:37:19] <kungp> i want it to be as quick as possible for someone using it a lot to find the label they're looking for without a search function
[09:37:35] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[09:37:40] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:38:26] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[09:40:06] *** Yugi is now known as Hunterkll
[09:42:16] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[09:43:46] *** Quits: jazzy (~jaziz@user/jaziz) (Remote host closed the connection)
[09:44:14] *** Joins: upsala (~zcb@185.213.155.232)
[09:45:40] *** Joins: jazzy (~jaziz@user/jaziz)
[09:45:40] *** Quits: \mSg (mSg@user/msg/x-0285936) ()
[09:46:40] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[09:46:47] *** Joins: ravan_ (~ravan@42.201.198.151)
[09:46:47] *** Quits: ravan_ (~ravan@42.201.198.151) (Changing host)
[09:46:47] *** Joins: ravan_ (~ravan@user/ravan)
[09:50:02] *** Joins: bluedust (~bluedust@103.160.194.110)
[09:50:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:50:26] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:51:44] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 250 seconds)
[09:53:26] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[09:53:49] *** Joins: Jigsy (~Jigsy@user/jigsy)
[09:55:01] *** Quits: Jong (~Jong@163.114.132.5) (Ping timeout: 256 seconds)
[09:55:11] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: No Ping reply in 180 seconds.)
[09:55:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:55:21] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 245 seconds)
[09:55:42] *** Joins: kevr` (~kevr@user/kevr)
[09:55:52] *** Quits: Ekho (~Ekho@user/ekho) (Quit: CORE ERROR, SYSTEM HALTED.)
[09:56:09] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 256 seconds)
[09:56:16] *** Joins: mven9 (~mven@ip68-104-39-54.lv.lv.cox.net)
[09:56:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:56:26] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71)
[09:56:27] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[09:56:42] *** Joins: kadobanana (~mud@user/kadoban)
[09:56:43] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[09:56:43] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 256 seconds)
[09:56:43] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 256 seconds)
[09:56:43] *** mven9 is now known as mven
[09:56:52] *** kevr` is now known as kevr
[09:57:15] *** Joins: jochum (~quassel@user/jochum)
[09:57:15] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[09:57:17] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 256 seconds)
[09:57:27] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[09:57:41] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[09:58:02] *** Joins: djapo (~archangel@user/djapo)
[09:58:48] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[09:59:15] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[09:59:42] *** Joins: ravan (~ravan@42.201.198.151)
[09:59:42] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[09:59:42] *** Joins: ravan (~ravan@user/ravan)
[10:00:07] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 256 seconds)
[10:00:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:00:16] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:00:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:00:30] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[10:01:56] *** Quits: elbit0r (~viktor@195.32.87.115) (Remote host closed the connection)
[10:02:47] *** Joins: Elodin (~elodin@user/elodin)
[10:03:38] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.39)
[10:04:08] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.39) (Max SendQ exceeded)
[10:04:36] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.39)
[10:05:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:05:18] *** Joins: Oddity (~Oddity@user/oddity)
[10:07:03] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[10:08:03] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[10:09:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:09:40] *** Joins: Ekho (~Ekho@user/ekho)
[10:13:12] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:14:22] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[10:15:18] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[10:15:19] *** Joins: manti7 (~manti7@176.10.104.94)
[10:16:29] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:17:48] *** Joins: jpodivin__ (~jpodivin@cgnat44-pool3-69-77.poda.cz)
[10:18:28] *** Joins: ksynwa (~ksynwa@5.45.111.57)
[10:18:59] <ksynwa> Is there a command to tell pdb to not stop at breakpoints anymore?
[10:19:18] <ksynwa> Basically assume `continue` if a breakpoint is encoutered
[10:20:10] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[10:21:18] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[10:21:46] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:22:51] *** Quits: jpodivin__ (~jpodivin@cgnat44-pool3-69-77.poda.cz) (Quit: Leaving)
[10:22:57] *** Quits: r3m (~launch@user/r3m) (Read error: Connection reset by peer)
[10:23:17] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[10:23:34] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[10:24:32] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-77.poda.cz)
[10:25:27] *** Joins: r3m (~launch@user/r3m)
[10:29:50] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[10:30:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Client Quit)
[10:32:21] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[10:32:38] *** Joins: mickey8 (~user@user/mickey)
[10:32:46] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[10:34:41] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[10:35:07] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:36:40] *** Quits: califax (~califax@user/califx) (Quit: ZNC 1.8.2 - https://znc.in)
[10:36:53] *** Joins: califax (~califax@user/califx)
[10:38:33] <jinsun__> you can modify sys.breakpointhook, something like `sys.breakpointhook = lambda: None`
[10:39:04] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[10:41:28] *** Joins: ravan (~ravan@42.201.198.151)
[10:41:28] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[10:41:28] *** Joins: ravan (~ravan@user/ravan)
[10:42:33] *** Joins: ericlee_ (~ericlee@23-120-34-97.lightspeed.sntcca.sbcglobal.net)
[10:43:20] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[10:43:58] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 268 seconds)
[10:45:17] *** Quits: ericlee (~ericlee@2600:1700:5450:41e0::30) (Ping timeout: 240 seconds)
[10:45:59] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:47:25] *** Joins: thevishy (~Nishant@2405:201:f005:c007:f4c6:4183:fabe:3b64)
[10:47:32] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[10:48:16] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:48:37] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[10:49:26] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:49:41] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[10:49:41] *** Joins: wowi4213 (~wowi42@46.252.181.67)
[10:49:50] *** Quits: wowi4213 (~wowi42@46.252.181.67) (Remote host closed the connection)
[10:51:11] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[10:51:31] *** Quits: wowi421 (~wowi42@185.42.117.170) (Quit: Going to hibernate)
[10:51:47] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[10:51:49] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[10:52:06] *** Joins: djapo (~archangel@user/djapo)
[10:52:12] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[10:53:02] *** Joins: wowi4213 (~wowi42@185.42.117.170)
[10:54:16] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:54:40] *** Quits: y04nn (~y04nn@92.223.89.196) (Read error: Connection reset by peer)
[10:55:19] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[10:55:28] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[10:55:51] *** Joins: dvx (~dvx@5.181.92.64)
[10:56:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:56:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:58:50] *** Joins: fikran (~fikran@user/fikran)
[11:00:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:01:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:02:59] *** Quits: ekathva (~ekathva@2001:999:51:be01:cc59:a999:376f:a526) (Remote host closed the connection)
[11:05:13] *** Joins: someuser (~user@197.54.43.98)
[11:05:50] *** Joins: ekathva (~ekathva@2001:999:51:be01:f430:4edc:7521:6563)
[11:05:53] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e9:d728:5b6:beb2:e041:1ca2)
[11:06:21] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[11:06:22] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e9:d728:5b6:beb2:e041:1ca2) (Read error: Connection reset by peer)
[11:06:28] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10e9:d728:e4a7:d8a0:e8d2:754b)
[11:06:30] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[11:07:33] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:07:57] *** Joins: mrwick (~mrwick@user/mrwick)
[11:08:37] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[11:09:21] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[11:10:39] *** Quits: Nact (~l@host-149-154-250-116.dynamic.voo.be) (Quit: Konversation terminated!)
[11:10:40] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[11:10:41] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[11:11:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:11:25] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:11:43] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[11:13:09] *** Quits: dude-x (~textual@72.76.74.165) (Read error: Connection reset by peer)
[11:13:20] *** Joins: dude-x_ (~textual@72.76.74.165)
[11:13:22] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[11:14:31] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:14:55] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[11:18:42] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[11:18:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:19:38] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[11:22:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[11:22:41] <Swayze> nice
[11:22:59] <Swayze> thats super elegant
[11:23:02] <Swayze> gg
[11:23:27] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:23:42] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:24:18] *** Joins: bluedust_ (~bluedust@117.207.237.207)
[11:26:15] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 256 seconds)
[11:26:51] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:26:57] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:27:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:28:22] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1) (Ping timeout: 268 seconds)
[11:29:35] *** Joins: palasso (~palasso@user/palasso)
[11:33:01] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[11:34:37] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:35:17] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[11:35:36] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[11:35:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:36:25] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:36:50] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Client Quit)
[11:37:31] *** Joins: Major_Biscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl)
[11:37:31] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[11:37:40] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:40:02] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[11:40:35] *** Joins: Babar_ (~Babar@2405:4803:ff4d:98d0:6029:2ed5:d24a:8f68)
[11:40:35] *** Babar is now known as Guest7072
[11:40:35] *** Quits: Guest7072 (~Babar@2405:4803:ff4d:98d0:61b3:1016:cefd:49d1) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[11:40:35] *** Babar_ is now known as Babar
[11:40:44] *** Joins: rendar (~rendar@user/rendar)
[11:41:19] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 268 seconds)
[11:41:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:45:30] *** Joins: kosh (~kosh@user/kosh)
[11:46:00] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[11:49:19] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:50:25] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:50:34] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[11:53:06] *** jazzy2 is now known as jazzy
[11:53:07] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:54:15] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:54:38] *** Joins: jay-m126 (~jay-m@129.0.76.31)
[11:54:42] *** Joins: jay-m126_ (~jay-m@129.0.76.31)
[11:54:43] *** Joins: jay-m1261 (~jay-m@129.0.76.31)
[11:55:09] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:55:39] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.29)
[11:57:17] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[11:57:17] *** Joins: node1 (~hex@user/node1)
[11:57:20] *** Joins: RiFo (~RiFo@user/rifo)
[11:57:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:58:05] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[11:58:12] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.39) (Ping timeout: 256 seconds)
[11:58:35] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[11:58:47] *** Joins: chele (~chele@user/chele)
[11:58:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:59:04] *** Joins: scruz (~scruz@41.58.232.218)
[11:59:09] *** Joins: alius (~alius@2001:861:4444:49c0:e87f:e40d:4365:7d5d)
[11:59:32] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:59:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:00:57] *** Quits: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[12:01:03] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[12:01:57] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 240 seconds)
[12:03:17] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[12:04:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:07:50] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[12:08:11] *** Joins: frost (~frost@user/frost)
[12:08:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[12:08:40] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:09:08] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Remote host closed the connection)
[12:11:22] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[12:11:35] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[12:11:35] *** Joins: menace (~someone@user/menace)
[12:12:00] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:12:09] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 268 seconds)
[12:12:26] *** Quits: sawk (~quassel@151.81.119.74) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:12:39] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[12:12:44] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[12:12:51] *** Joins: sawk (~quassel@151.81.119.74)
[12:12:52] *** Joins: mcpackey (~pm0001@p5dc1cbe5.dip0.t-ipconnect.de)
[12:14:22] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[12:15:54] *** Joins: Auron (Auron956@user/auron)
[12:16:23] <scruz> does anyone use graphene-sqlalchemy 3.0b1? the latest stable release (2.3) doesn't work with graphene 3
[12:16:52] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[12:18:21] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[12:19:16] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:19:23] *** Joins: cebor (~cebor@user/cebor)
[12:19:36] *** Joins: programmar (~whatever@118.69.128.37)
[12:20:06] <programmar> question, if i have some stupid codes like this https://pastebin.com/tqhZKLpV, and i request /, will at some points ( like a few hours maybe ), the browser will automatically timeout ?
[12:20:17] <programmar> or it will keep on loading until either the client or the server closes ?
[12:21:30] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:21:46] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[12:22:00] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[12:22:03] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[12:22:11] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[12:22:24] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[12:22:30] <mrwick> programmar: browsers have their own timeouts built in, if a page does not finish loading it will eventually stop loading it.
[12:22:33] <deniska> programmar: flask doesn't impose any timeouts of its own by default
[12:23:00] <mrwick> depends on the browser most likely
[12:23:04] <programmar> mrwick: i assume a few hours ?
[12:23:29] <mrwick> programmar: more likely minutes, why not give it a try?
[12:23:40] *** Joins: andreasbuhr (~quassel@p549db65a.dip0.t-ipconnect.de)
[12:23:42] <programmar> i did on firefox, and after half an hour, it still loads
[12:24:05] <scruz> trying to avoid using schema-first libraries like ariadne
[12:24:16] <programmar> i interrupted it tho since i can't wait any longer
[12:24:29] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[12:25:24] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[12:26:32] <mrwick> programmar: probably the next step is to sniff the packets and see what flask is sending. http connections can stay open for many reasons
[12:26:43] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:27:09] <mrwick> programmar: finally, if it's just an experiment that's fine, but there is really no use case for this
[12:27:51] <programmar> yea ok, let's me start my wireshark
[12:28:24] <deniska> and if you ever want something to wait for a while, put time.sleep(1) in there or something, `while True: pass` just hammers a CPU and heats up the universe
[12:28:58] <programmar> yea i know but since this is just a test, i am too lazy to import time just to paste it to pastebin :P
[12:29:25] <mrwick> import time
[12:29:29] <mrwick> time.sleep(1)
[12:29:35] <programmar> now i am adding it
[12:29:43] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:29:59] <mrwick> programmar: was just making up for your laziness ;)
[12:30:16] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:17] *** Quits: Fingel (~fingel@user/fingel) (Ping timeout: 256 seconds)
[12:31:02] <programmar> thk but manually typing always feel faster than Ctrl - V and rearrage tho :P
[12:31:20] *** Joins: Fingel (fingel@user/fingel)
[12:31:23] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:31:31] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:31:34] *** Joins: dtux_ (~dtux@2601:646:8f00:3f2:ca4d:c18b:77e8:457)
[12:31:40] *** Joins: arinov (~arinov@213.194.126.155)
[12:31:51] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[12:31:54] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[12:31:58] *** dtux_ is now known as dtux
[12:32:27] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:32:47] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[12:32:58] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[12:34:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:34:21] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[12:35:40] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[12:35:54] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[12:38:00] *** Joins: Furai (~Furai@furai.pl)
[12:39:39] <programmar> mrwick: hm, so far wireshark capture some Keep-alive packets
[12:39:44] <programmar> for every 5 seconds
[12:40:23] <wyre> hi guys, I'm trying to package a custom python library in .deb but ... debuild runs some tests and I have not some dependencies system-wide installed
[12:40:33] <wyre> so ... could I skip this test stage?
[12:41:00] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[12:41:02] <mrwick> programmar: http keep alive? (probably not tcp keep alive)
[12:41:19] *** Joins: nomic (~nomic@185.192.69.3)
[12:42:12] <programmar> mrwick: seem like TCP to me : https://ibb.co/5r2fn69
[12:42:23] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[12:43:08] *** Joins: Sadale (~Sadale@user/sadale)
[12:43:12] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[12:43:13] *** Joins: backes (~backes@dslb-002-205-023-016.002.205.pools.vodafone-ip.de)
[12:43:13] *** Joins: shad1 (~shad@user/shad)
[12:44:50] <backes> hey, my package needs to download data from external resources. Where should I store it? On linux I would probably use XDG_DATA_HOME, but the package should work on any OS.
[12:44:51] <zamba> when using a bare except, how can i output which error it is?
[12:45:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:45:27] *** Joins: bluedust (~bluedust@185.248.85.10)
[12:45:35] <deniska> zamba: 1) don't use bare except, 2) traceback module may have some useful functions
[12:46:25] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:46:32] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:9d7e:f68:f87d:737)
[12:46:50] <zamba> deniska: i know, but i need to know what to catch first :)
[12:47:06] *** Quits: bluedust (~bluedust@185.248.85.10) (Remote host closed the connection)
[12:47:06] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[12:48:37] *** Quits: bluedust_ (~bluedust@117.207.237.207) (Ping timeout: 240 seconds)
[12:50:12] *** Joins: Sadale (~Sadale@user/sadale)
[12:50:28] <jinsun__> except BaseException will do the same thing as bare except
[12:50:42] <jinsun__> and you can do except BaseException as e
[12:50:45] <grawity> backes: the `appdirs` module is cross-platform
[12:51:21] <grawity> backes: though actually `platformdirs` seems to be its new replacement
[12:54:49] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[12:55:04] *** Quits: Major_Biscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[12:56:34] <DPA> I just had the DNS module I'm using for DNS zone updates in my acme2 chalange solver fail to resolve localhost: https://github.com/Daniel-Abrecht/DPA-ACME2/blob/master/challenge_solvers/dns-01/zone-update.py#L59 https://bpa.st/HOCQ
[12:56:34] <DPA> I'm currently working around it by using 127.0.0.1 instead. But I should probably make a bug report for this, does anyone know where the right bug tracker for this is?
[12:57:07] *** Joins: jmd (~user@de.cellform.com)
[12:57:31] *** Joins: MajorBiscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl)
[12:57:43] <grawity> DPA: are you sure the server parameter even takes hostnames there?
[12:57:50] <grawity> it looks a bit like it might be IP-address-only
[12:57:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:58:01] <backes> grawity: that looks like what I need, thanks
[12:58:06] <grawity> but well the tracker would be https://github.com/Daniel-Abrecht/DPA-ACME2/issues
[12:58:11] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[12:58:12] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:58:19] *** Joins: Jong (~Jong@163.114.132.5)
[12:58:23] *** Joins: waveform (~quassel@waveform.plus.com)
[12:59:01] *** Joins: jmd (~user@de.cellform.com)
[12:59:27] <DPA> No, that's my project's bug tracker. I need to file it at whoever maintains the DNS module. Also, it used to work with a hostname for years, only broke somewhere during recent updates.
[12:59:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:59:52] *** Quits: duuude (~user@user/duuude) (Read error: Connection reset by peer)
[12:59:53] <grawity> ah, yeah I think I saw that change in dnspython 2.2 then
[13:00:39] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[13:01:15] <backes> DPA: https://github.com/rthalley/dnspython probably
[13:01:40] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:01:50] <backes> https://github.com/rthalley/dnspython/issues/760
[13:02:29] <backes> not resolving localhost is by design
[13:02:30] *** Joins: duuude (~user@user/duuude)
[13:03:26] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[13:04:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:05:03] *** Quits: onichomp (~onichomp@2806:264:4408:2eb:410f:5bec:f929:db56) (Quit: onichomp)
[13:06:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:06:37] *** Quits: linuxdaemon_ (linuxdemon@bnc.linuxdemon.xyz) (Ping timeout: 240 seconds)
[13:07:23] *** Joins: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz)
[13:07:41] *** Quits: M3troidman (~buttler@196.196.203.108) (Ping timeout: 256 seconds)
[13:07:50] *** Joins: Nigma (~magnus@87.61.126.226)
[13:08:00] <DPA> Oh, I see. That sucks... Now I need to think about how to handle that problem. I don't really want to resolve them myself, though, it just doesn't feel right... I guess I'll just keep it like this, and refer people to that issue if someone notices and asks...
[13:08:11] *** Joins: fikran (~fikran@user/fikran)
[13:08:29] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[13:10:30] *** Joins: M3troidman (~buttler@196.196.203.108)
[13:11:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[13:12:47] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[13:12:51] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[13:12:58] *** Joins: lakrass (~lakrass@user/lakrass)
[13:14:57] *** Joins: plastico (~plastico@neomutt/plastico)
[13:15:52] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:16:33] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:18:31] <DPA> Yea, I'll only update my documentation. Anyway, thanks. Another problem solved
[13:18:44] <tm007> cheers
[13:18:47] *** Joins: bluedust (~bluedust@194.37.96.158)
[13:22:49] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.29) (Read error: Connection reset by peer)
[13:23:08] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.29)
[13:23:12] *** Quits: M3troidman (~buttler@196.196.203.108) (Ping timeout: 256 seconds)
[13:24:55] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[13:24:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:25:09] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d)
[13:25:28] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: No route to host)
[13:26:04] *** Joins: M3troidman (~buttler@196.196.203.108)
[13:26:13] *** Joins: Guest3 (~Guest3@2001:8003:a8a7:fd00:c983:1e6:85a1:442c)
[13:27:04] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[13:28:39] *** Joins: duuude (~user@user/duuude)
[13:28:52] *** Joins: callq (~callq@2409:4062:2d1d:d8fc:fde0:d86a:c786:7f79)
[13:29:41] <callq> Does anyone have experience using trading exchange APIs and creating JSON requests? I'm doing something wrong, because i keep a 400 error response. Anyone knows about this?
[13:29:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:29:51] *** Quits: backes (~backes@dslb-002-205-023-016.002.205.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[13:29:51] *** Quits: eyepeetee (~aa@user/eyepeetee) (Ping timeout: 268 seconds)
[13:30:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:31:00] *** Joins: backes (~backes@dslb-002-205-023-016.002.205.pools.vodafone-ip.de)
[13:31:00] *** Quits: backes (~backes@dslb-002-205-023-016.002.205.pools.vodafone-ip.de) (Client Quit)
[13:31:47] <Nigma> 400 is usually bad request, are you missing some parameter it requires? Perhaps it tells you in the response
[13:32:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:32:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[13:32:45] *** Joins: Pickchea (~private@user/pickchea)
[13:32:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:32:59] *** Joins: revolve (~u0_a227@82-132-237-109.dab.02.net)
[13:33:40] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[13:34:04] <Pickchea> Hey, can anyone explain to me why type(pandas.DataFrame([])) is <class 'pandas.core.frame.DataFrame'> and not <class 'pandas.DataFrame'>?
[13:35:23] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Read error: Connection reset by peer)
[13:35:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:35:29] <Pickchea> I mean, the definition is in pandas/core/frame.py, OK.
[13:35:57] <Pickchea> So is pandas.DataFrame just an alias or how does that work?
[13:36:08] *** Joins: nomic (~nomic@185.192.69.3)
[13:36:14] *** Joins: xa0s (~xa0s@mab.sdf.org)
[13:37:08] *** Quits: node1 (~hex@user/node1) (Remote host closed the connection)
[13:37:09] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[13:37:19] <Pickchea> Is it because the __init__.py imports DataFrame from a subpackage?
[13:37:32] <deniska> Pickchea: yes
[13:37:39] <Pickchea> deniska, thanks!
[13:38:48] *** Joins: Sadale (~Sadale@user/sadale)
[13:39:40] *** Joins: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[13:39:44] *** Joins: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:6e8:39d8:3639:31ff)
[13:39:47] *** Joins: yhsiveht (~Nishant@2405:201:f005:c007:f4c6:4183:fabe:3b64)
[13:39:56] *** Joins: Fl1pFl0p (~FlipFlop@user/fl1pfl0p)
[13:39:58] *** Joins: Babar_ (~Babar@2405:4803:ff4d:98d0:6029:2ed5:d24a:8f68)
[13:39:58] *** Babar is now known as Guest3071
[13:39:58] *** Quits: Guest3071 (~Babar@2405:4803:ff4d:98d0:6029:2ed5:d24a:8f68) (Killed (calcium.libera.chat (Nickname regained by services)))
[13:39:58] *** Babar_ is now known as Babar
[13:39:59] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.29) (Ping timeout: 256 seconds)
[13:40:11] *** Joins: LimeOn (~user@user/limeon)
[13:40:14] *** Joins: archimedesx (~archimed3@2a00:23c5:dab6:a501:fcea:373d:260:a443)
[13:40:19] *** Joins: saribro (~swinnenb@user/swinnenb)
[13:40:21] *** Joins: _sgen (~sgen@2607:fea8:7ce1:c8e0:ec63:8eee:4635:2aa8)
[13:40:37] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[13:40:37] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[13:40:37] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (Ping timeout: 240 seconds)
[13:40:37] *** Quits: hardwire (sid415742@id-415742.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[13:40:37] *** Quits: agireud (~agireud@user/agireud) (Ping timeout: 240 seconds)
[13:40:37] *** Quits: bloodElk (~bloodElk@user/bloodelk) (Ping timeout: 240 seconds)
[13:40:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d) (Ping timeout: 240 seconds)
[13:40:57] *** Quits: Fingel (fingel@user/fingel) (Ping timeout: 240 seconds)
[13:40:57] *** Quits: frodl (sid527064@user/frodl) (Ping timeout: 240 seconds)
[13:40:57] *** Quits: angular_mike_ (sid45533@id-45533.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[13:40:57] *** Quits: Speed2u (Speed2u@bnc.speed2u.nu) (Ping timeout: 240 seconds)
[13:40:57] *** Quits: gildarts (16abab341f@user/gildarts) (Ping timeout: 240 seconds)
[13:41:07] *** Joins: gildarts (16abab341f@user/gildarts)
[13:41:07] *** Joins: agireud (~agireud@user/agireud)
[13:41:10] *** Joins: nhanb_ (522d4a25ea@2604:bf00:561:2000::13b)
[13:41:11] *** Joins: dale_ (~dale@user/dale)
[13:41:12] *** Joins: ztrawhcse_ (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[13:41:17] *** Quits: callq (~callq@2409:4062:2d1d:d8fc:fde0:d86a:c786:7f79) (Ping timeout: 240 seconds)
[13:41:17] *** Quits: Pr0phet (sid505706@id-505706.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[13:41:17] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Ping timeout: 240 seconds)
[13:41:17] *** Quits: Lightsword (~Lightswor@user/lightsword) (Ping timeout: 240 seconds)
[13:41:36] *** Joins: susam_ (~susam@user/susam)
[13:41:37] *** Quits: alxndr (~alexander@ybti.net) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: dld (~davidlowr@2601:197:600:1210:9050:7c1d:b33c:2fa8) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: ravioli (sid83460@donger/pasta) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: sharksauce (sharksauce@user/sharksauce) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: dale (dale@user/dale) (Ping timeout: 240 seconds)
[13:41:37] *** Joins: josh_h_ (sid301834@id-301834.helmsley.irccloud.com)
[13:41:38] *** Joins: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[13:41:38] *** Joins: angular_mike_ (sid45533@id-45533.ilkley.irccloud.com)
[13:41:38] *** Joins: Pr0phet (sid505706@id-505706.hampstead.irccloud.com)
[13:41:38] *** Joins: km_ (znc@user/km)
[13:41:39] *** Joins: bloodElk (~bloodElk@user/bloodelk)
[13:41:40] *** Joins: ravioli_ (sid83460@donger/pasta)
[13:41:40] *** Joins: dab21_ (~dab21@pistis.amyanddavid.net)
[13:41:41] *** Joins: Speed2u (~Speed2u@bnc.speed2u.nu)
[13:41:42] *** Joins: Lightsword (~Lightswor@user/lightsword)
[13:41:43] *** Joins: w0rp_ (~w0rp@w0rp.com)
[13:41:44] *** Joins: Fingel (fingel@user/fingel)
[13:41:46] *** Joins: sokan_ (~sokan@85.73.227.251)
[13:41:48] *** Joins: frodl (sid527064@user/frodl)
[13:41:51] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[13:41:52] *** Joins: truckasaurus_ (sid457088@id-457088.helmsley.irccloud.com)
[13:41:56] *** Joins: hardwire (sid415742@id-415742.uxbridge.irccloud.com)
[13:41:57] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:6e8:39d8:3639:31ff) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: beaky (~beaky@2a03:b0c0:0:1010::1e:a001) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: sokan (~sokan@2a02:587:9e0a:f500:227:eff:fe16:865d) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: skipper (~whatsupbo@user/scobydoo) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: kehn (quassel@2600:3c03::f03c:92ff:fe9a:ad08) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: sean345 (~sean345@2601:281:8700:4b6f:b991:989f:6b07:27eb) (Ping timeout: 240 seconds)
[13:41:59] *** dale_ is now known as dale
[13:42:03] *** Joins: vakera_pingveno_ (~dan@2600:1700:21f9:b150::40)
[13:42:08] *** Joins: r0bby (r0bby@user/r0bby)
[13:42:09] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:4d9a:102c:1aff:7bf8)
[13:42:11] *** sokan_ is now known as sokan
[13:42:13] *** Joins: Telvana (~capo@user/telvana)
[13:42:17] *** Quits: shad1 (~shad@user/shad) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: dtux (~dtux@2601:646:8f00:3f2:ca4d:c18b:77e8:457) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: thevishy (~Nishant@2405:201:f005:c007:f4c6:4183:fabe:3b64) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: uuair (~quassel@user/uuair) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: w0rp (w0rp@2a01:7e00::f03c:91ff:fedb:589) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: jwdungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Ping timeout: 240 seconds)
[13:42:17] *** w0rp_ is now known as w0rp
[13:42:17] *** Quits: karl_AFK (~karl@2601:482:4280:4cf0:4d9a:102c:1aff:7bf8) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: olasd (~olasd@softwareheritage/olasd) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: SnoopJ (~snoopj@user/snoopj) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: nhanb (522d4a25ea@2604:bf00:561:2000::13b) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: susam (~susam@user/susam) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: mrlemke (~quassel@2604:a880:4:1d0::394:0) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: grawity (grawity@star.nullroute.lt) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: hays (rootvegeta@fsf/member/hays) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: Peng_ (~mnordhoff@user/Peng) (Ping timeout: 240 seconds)
[13:42:18] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[13:42:18] *** ztrawhcse_ is now known as ztrawhcse
[13:42:36] *** Joins: Vision-_- (~Vision@097-087-115-181.res.spectrum.com)
[13:42:37] *** Quits: x4rchimedes (~archimed3@2a00:23c5:dab6:a501:fcea:373d:260:a443) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: truckasaurus (sid457088@id-457088.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:297f:fa61:535f:aa91) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: Fl0pFl1p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: josh_h (sid301834@id-301834.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: km (znc@user/km) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: remexre (~remexre@user/remexre) (Ping timeout: 240 seconds)
[13:42:37] *** truckasaurus_ is now known as truckasaurus
[13:42:37] *** josh_h_ is now known as josh_h
[13:42:50] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824)
[13:42:56] *** Joins: uuair (~quassel@user/uuair)
[13:43:00] *** Joins: hays (rootvegeta@fsf/member/hays)
[13:43:04] *** Joins: jwdungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34)
[13:43:04] *** Joins: greaser|q (greaser@antihype.space)
[13:43:11] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[13:43:12] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[13:43:13] *** Joins: holgersson (~quassel@user/holgersson)
[13:43:13] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[13:43:13] *** Joins: kehn (quassel@2600:3c03::f03c:92ff:fe9a:ad08)
[13:43:16] *** Joins: remexre (~remexre@user/remexre)
[13:43:33] *** Joins: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net)
[13:43:36] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Ping timeout: 260 seconds)
[13:43:38] *** Joins: alxndr (~alexander@ybti.net)
[13:43:51] *** Joins: sharksauce (sharksauce@user/sharksauce)
[13:43:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[13:43:57] *** Quits: dibas (~dibas@user/dibas) (Ping timeout: 256 seconds)
[13:43:58] *** Joins: dld (~davidlowr@2601:197:600:1210:9050:7c1d:b33c:2fa8)
[13:44:05] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:117c:703e:db5f:c029)
[13:44:08] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[13:44:08] *** Joins: sean345 (~sean345@2601:281:8700:4b6f:b991:989f:6b07:27eb)
[13:44:09] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[13:44:19] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[13:44:21] *** Joins: skipper (~whatsupbo@user/scobydoo)
[13:44:27] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:44:30] *** Joins: shad1 (~shad@user/shad)
[13:44:31] *** Quits: Auron (Auron956@user/auron) (Ping timeout: 256 seconds)
[13:44:31] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[13:44:31] *** Quits: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 256 seconds)
[13:44:31] *** Quits: Fossil (~Fossil@95.85.23.165) (Ping timeout: 256 seconds)
[13:44:31] *** ayusta is now known as ayustae
[13:44:36] *** Joins: Auron956 (Auron956@user/auron)
[13:44:39] *** Joins: marienz (~marienz@libera/staff/marienz)
[13:44:48] *** Joins: dibas (~dibas@wild.uberspace.de)
[13:44:48] *** Quits: dibas (~dibas@wild.uberspace.de) (Changing host)
[13:44:48] *** Joins: dibas (~dibas@user/dibas)
[13:44:48] *** Joins: susam (~susam@user/susam)
[13:44:50] *** Joins: brabrax (~brabrax@user/brabrax)
[13:44:51] *** Joins: bluedust_ (~bluedust@194.37.96.158)
[13:44:51] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[13:44:55] *** Joins: fury__ (~fury@znc.codexterous.com)
[13:45:00] *** jwdungeon is now known as jw_dungeon
[13:45:05] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[13:45:05] *** Quits: bluedust (~bluedust@194.37.96.158) (Ping timeout: 256 seconds)
[13:45:05] *** Quits: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz) (Ping timeout: 256 seconds)
[13:45:05] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 256 seconds)
[13:45:05] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[13:45:05] *** Quits: therufuser (~therufuse@p5b001fd0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[13:45:05] *** Quits: astiak (~astiak@ownage.biz) (Ping timeout: 256 seconds)
[13:45:05] *** Quits: fury_ (~fury@znc.codexterous.com) (Ping timeout: 256 seconds)
[13:45:17] *** Joins: astiak (~astiak@ownage.biz)
[13:45:20] *** Joins: Peng_ (~mnordhoff@user/Peng)
[13:45:35] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[13:45:39] *** Quits: revolve (~u0_a227@82-132-237-109.dab.02.net) (Ping timeout: 256 seconds)
[13:45:39] *** Quits: lakrass (~lakrass@user/lakrass) (Ping timeout: 256 seconds)
[13:45:39] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 256 seconds)
[13:45:39] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[13:45:39] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Ping timeout: 256 seconds)
[13:45:39] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 256 seconds)
[13:46:00] *** Parts: Nigma (~magnus@87.61.126.226) ()
[13:46:04] *** Joins: cheater (~Username@user/cheater)
[13:46:13] *** Quits: susam_ (~susam@user/susam) (Ping timeout: 256 seconds)
[13:46:13] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[13:46:13] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 256 seconds)
[13:46:13] *** Quits: novapy (~chronos@12.71.10.20) (Ping timeout: 256 seconds)
[13:46:16] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[13:46:23] *** Joins: revolve (~u0_a227@82-132-237-109.dab.02.net)
[13:46:29] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[13:46:39] *** Quits: Guest3 (~Guest3@2001:8003:a8a7:fd00:c983:1e6:85a1:442c) (Quit: Client closed)
[13:46:41] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:46:52] *** Joins: xx (~xx@user/xx)
[13:46:54] *** Quits: efil4cri_ (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 276 seconds)
[13:46:55] *** Joins: therufuser (~therufuse@p5b001fd0.dip0.t-ipconnect.de)
[13:47:04] *** Joins: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz)
[13:47:16] *** Joins: lakrass (~lakrass@user/lakrass)
[13:47:26] *** Joins: tg (~tg@rockylinux/infra/tg)
[13:47:52] *** Joins: novapy (~chronos@12.71.10.20)
[13:47:57] *** Quits: marienz_ (~marienz@libera/staff/marienz) (Ping timeout: 600 seconds)
[13:48:42] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[13:48:51] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[13:49:07] *** jazzy is now known as Guest819
[13:49:09] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[13:49:16] *** jazzy2 is now known as jazzy
[13:49:21] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[13:49:35] *** Quits: Guest819 (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[13:49:49] *** Joins: vaio (~gary@user/ghost)
[13:50:36] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:51:02] *** Quits: yhsiveht (~Nishant@2405:201:f005:c007:f4c6:4183:fabe:3b64) (Quit: Leaving)
[13:51:12] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[13:52:38] *** Quits: tomaw (tom@libera/staff/tomaw) (Ping timeout: 608 seconds)
[13:53:17] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[13:53:18] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[13:54:19] *** Joins: Oddity (~Oddity@user/oddity)
[13:55:01] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[13:55:04] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[13:55:08] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[13:55:13] *** Joins: SnoopJ (~snoopj@user/snoopj)
[13:55:14] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[13:55:16] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Ping timeout: 250 seconds)
[13:55:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:55:39] *** Joins: HenryG (~quassel@180.ip-158-69-198.net)
[13:55:59] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[13:56:07] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[13:56:15] *** Joins: olasd (~olasd@softwareheritage/olasd)
[13:56:31] *** Joins: duuude (~user@user/duuude)
[13:56:44] *** Joins: grawity (grawity@star.nullroute.lt)
[13:58:20] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[13:58:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:58:34] *** Joins: Pickchea (~private@user/pickchea)
[13:58:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:56] *** Joins: tomaw (tom@libera/staff/tomaw)
[14:00:06] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:00:25] *** Quits: scruz (~scruz@41.58.232.218) (Quit: Leaving)
[14:00:28] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:01:47] *** Joins: ubert1 (~Thunderbi@p200300ecdf09945c0ca179bca462169c.dip0.t-ipconnect.de)
[14:02:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[14:02:43] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:02:57] *** Joins: Z-cat (~Z-cat@user/z-cat)
[14:03:52] *** Joins: Adoi (~Adoi@user/adoi)
[14:04:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:04:27] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[14:04:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:04:57] *** Joins: Klinda (~superleag@user/klinda)
[14:08:01] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[14:08:21] *** Quits: falk689_ (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[14:08:59] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[14:10:01] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:10:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[14:12:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[14:12:24] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Ping timeout: 268 seconds)
[14:13:13] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[14:13:22] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[14:13:44] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[14:14:31] *** Joins: kostkon__ (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03)
[14:15:11] *** Quits: megaTherion (~therion@unix.io) (Ping timeout: 250 seconds)
[14:15:11] *** Joins: han-solo (~hanish@user/han-solo)
[14:15:37] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (Ping timeout: 250 seconds)
[14:15:37] *** Quits: jposer (sid132110@id-132110.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[14:15:46] *** Joins: user3456_ (user3456@user/user3456)
[14:15:47] *** Joins: agronholm_ (sid403424@id-403424.helmsley.irccloud.com)
[14:15:52] *** Joins: jposer (sid132110@id-132110.uxbridge.irccloud.com)
[14:15:59] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:16:01] *** Joins: daex (~daex@user/daex)
[14:16:03] *** Quits: daex_ (~daex@user/daex) (Ping timeout: 250 seconds)
[14:16:03] *** Joins: kl1n3 (~freedom0@libera/staff/kline)
[14:16:06] *** Joins: sengy (~sangy@archlinux/trusteduser/sangy)
[14:16:09] *** Joins: mexen_ (uid495612@user/mexen)
[14:16:13] *** Joins: roniez_ (~roniez@2a02:c206:2057:5765::1)
[14:16:15] *** Joins: peac_ (sid344662@id-344662.hampstead.irccloud.com)
[14:16:16] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[14:16:29] *** Quits: mexen (uid495612@user/mexen) (Ping timeout: 250 seconds)
[14:16:29] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Ping timeout: 250 seconds)
[14:16:29] *** Quits: peac (sid344662@2a03:5180:f:4::5:4256) (Ping timeout: 250 seconds)
[14:16:29] *** peac_ is now known as peac
[14:16:29] *** mexen_ is now known as mexen
[14:16:32] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 240 seconds)
[14:16:33] *** Joins: jayray_ (~jayray@user/jayray)
[14:16:35] *** Joins: megaTherion (~therion@unix.io)
[14:16:37] *** Joins: arash- (arash@thinks.life.is-a.beauty)
[14:16:40] *** Joins: themill_ (~stuart@debian/stuart)
[14:16:44] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[14:16:46] *** Joins: fef (~thedawn@user/thedawn)
[14:16:55] *** Quits: agronholm (sid403424@id-403424.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[14:16:55] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 250 seconds)
[14:16:55] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Ping timeout: 250 seconds)
[14:16:55] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 250 seconds)
[14:16:55] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 250 seconds)
[14:16:55] *** Quits: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3) (Ping timeout: 250 seconds)
[14:16:55] *** Quits: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed) (Ping timeout: 250 seconds)
[14:16:55] *** Quits: Riviera (Riviera@user/riviera) (Ping timeout: 250 seconds)
[14:16:55] *** Quits: sangy (~sangy@archlinux/trusteduser/sangy) (Ping timeout: 250 seconds)
[14:16:55] *** Quits: arash (arash@thinks.life.is-a.beauty) (Ping timeout: 250 seconds)
[14:16:55] *** agronholm_ is now known as agronholm
[14:17:14] *** Joins: cosimone` (~user@93-47-231-100.ip115.fastwebnet.it)
[14:17:15] *** Joins: slav0nic (slav0nic@python.su)
[14:17:21] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: OlaNys (onm@irccore.ofelbar.se) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: dnns01 (~quassel@2a02:c207:3003:651::1) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: kostkon_ (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: interestingname[ (~throwaway@2001:470:69fc:105::1:6560) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: dstufft (~dstufft@shitbird.caremad.io) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: baloona (~baloona@mail.baloona.de) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: rich (~rich@2a03:4000:3f:f1:b859:16ff:fe45:e87f) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: Quietus (~quietus@2a04:52c0:101:181::) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: explodes (~explodes@user/explodes) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: mumixam (~m@user/mumixam) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: zeus (~user@user/kamyl) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: m42e (~m42e@pb42.de) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: themill (~stuart@debian/stuart) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: dirtwash (~dirtwash@user/dirtwash) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: roniez (~roniez@2a02:c206:2057:5765::1) (Ping timeout: 250 seconds)
[14:17:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:17:26] *** Joins: dnns01_ (~quassel@2a02:c207:3003:651::1)
[14:17:28] *** Joins: Quietus_ (~quietus@2a04:52c0:101:181::)
[14:17:28] *** Joins: SoniEx2 (~quassel@autistic.space)
[14:17:42] *** Joins: OlaNys (onm@irccore.ofelbar.se)
[14:17:43] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:17:59] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[14:18:10] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 256 seconds)
[14:18:21] *** Joins: dirtwash (~dirtwash@2a01:4f8:c010:b7e6::1)
[14:18:21] *** Joins: explodes (~explodes@user/explodes)
[14:18:22] *** Joins: m42e (~m42e@pb42.de)
[14:18:26] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[14:18:30] *** Joins: baloona (~baloona@mail.baloona.de)
[14:18:40] *** Joins: de-facto_ (~de-facto@user/de-facto)
[14:19:24] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[14:19:24] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[14:19:47] *** Joins: launchd (~launchd@bitbot/launchd)
[14:19:51] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[14:20:13] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Ping timeout: 256 seconds)
[14:20:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 256 seconds)
[14:20:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:20:57] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:9d7e:f68:f87d:737) (Quit: Konversation terminated!)
[14:21:06] *** Quits: l (launchd@bitbot/launchd) (Ping timeout: 260 seconds)
[14:21:16] *** Joins: user3456 (user3456@user/user3456)
[14:21:18] *** Joins: mennoh_ (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:21:21] *** Quits: user3456_ (user3456@user/user3456) (Ping timeout: 256 seconds)
[14:21:21] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Ping timeout: 256 seconds)
[14:21:21] *** Quits: HenryG (~quassel@180.ip-158-69-198.net) (Ping timeout: 256 seconds)
[14:21:34] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:21:40] *** Joins: dstufft (~dstufft@shitbird.caremad.io)
[14:21:49] *** Joins: jayray (~jayray@user/jayray)
[14:21:55] *** Quits: jayray_ (~jayray@user/jayray) (Ping timeout: 256 seconds)
[14:21:58] *** Joins: HenryG (~quassel@180.ip-158-69-198.net)
[14:22:00] *** de-facto_ is now known as de-facto
[14:22:14] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[14:22:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:22:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[14:22:59] *** Quits: kline (~freedom0@libera/staff/kline) (Ping timeout: 612 seconds)
[14:23:34] *** mennoh_ is now known as Bronto22
[14:24:00] *** Joins: zeus (~user@user/kamyl)
[14:24:27] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:25:13] *** Joins: Vonter (~Vonter@user/vonter)
[14:25:34] *** Joins: bluedust (~bluedust@117.207.237.207)
[14:25:46] *** Quits: LucaTM (~LucaTM@user/lucatm) (Client Quit)
[14:26:53] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:27:05] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[14:28:48] *** Joins: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55)
[14:29:16] *** Joins: Riviera (Riviera@user/riviera)
[14:29:40] *** Quits: bluedust_ (~bluedust@194.37.96.158) (Ping timeout: 268 seconds)
[14:29:40] *** Joins: rich (~rich@2a03:4000:3f:f1:b859:16ff:fe45:e87f)
[14:29:48] *** Joins: mumixam (~m@user/mumixam)
[14:30:10] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:bdfb:9112:456:1616)
[14:30:22] *** Joins: interestingname[ (~throwaway@2001:470:69fc:105::1:6560)
[14:30:38] *** Quits: baltazar (~baltazar@84-236-21-114.pool.digikabel.hu) (Ping timeout: 256 seconds)
[14:30:47] *** Joins: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb)
[14:31:54] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:32:18] *** Joins: baltazar (~baltazar@94-21-182-186.pool.digikabel.hu)
[14:32:26] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[14:32:37] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[14:33:45] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[14:33:59] *** Quits: jay-m1261 (~jay-m@129.0.76.31) (Ping timeout: 268 seconds)
[14:33:59] *** Quits: jay-m126_ (~jay-m@129.0.76.31) (Ping timeout: 268 seconds)
[14:33:59] *** Quits: jay-m126 (~jay-m@129.0.76.31) (Ping timeout: 268 seconds)
[14:34:01] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[14:35:18] *** Joins: jay-m126 (~jay-m@129.0.99.157)
[14:35:18] *** Joins: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed)
[14:35:29] *** Joins: jay-m126_ (~jay-m@129.0.99.157)
[14:35:30] *** Joins: jay-m1261 (~jay-m@129.0.99.157)
[14:35:39] *** Joins: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3)
[14:36:00] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[14:37:14] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[14:37:50] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[14:38:14] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[14:39:35] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[14:39:36] *** Joins: parazyd (~parazyd@devuan/developer/parazyd)
[14:40:01] <parazyd> Hey, does anyone know if there's a way to convert a dict/json string into a javascript object?
[14:40:08] <parazyd> This means the keys would have to be without quotes
[14:40:30] <parazyd> I don't need any evaluation after conversion, so it's possible to work with strings only.
[14:40:42] *** Joins: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6)
[14:42:24] <jinsun__> javascript object or python object?
[14:42:37] <Yhg1s> parazyd: A 'json string' is *by definition* a javascript object
[14:43:02] <Yhg1s> parazyd: so it sounds to me you just want to use the json module here.
[14:43:15] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[14:43:27] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[14:43:29] <parazyd> Yhg1s: Somewhat, but I can't think of a regex to remove quotes from keys
[14:43:40] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[14:43:55] <Yhg1s> parazyd: that sounds like you have a completely different problem then. And also a misunderstanding about what 'javascript object' means :)
[14:43:56] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:44:21] <Yhg1s> parazyd: because 'JSON' stands for 'JavaScript Object Notation'. If you need to mangle it, you're not using JavaScript or you're doing something else wrong.
[14:44:28] *** Joins: cdown (~cdown@163.114.131.1)
[14:45:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:45:15] <parazyd> No sir
[14:45:18] <parazyd> https://medium.com/@alifabdullah/never-confuse-json-and-javascript-object-ever-again-7c32f4c071ad
[14:45:40] <parazyd> >JavaScript objects do not contain single or double quote marks around the keys when no spacing is used in the key name
[14:46:13] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[14:46:42] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[14:47:26] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:47:37] <Yhg1s> parazyd: I have a number of issues with that particular page just from looking at it, but nevermind. How about you tell us about what you're *doing*, rather than how you're trying to do it?
[14:47:47] *** Joins: aphysically (~aphysical@user/aphysically)
[14:47:54] <Yhg1s> parazyd: are you trying to generate JavaScript code? What are you doing and how is it failing?
[14:48:00] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[14:49:07] <parazyd> As I'm saying. I have an OrderedDict, e.g. {"foo": "bar"}, and when I do json.dumps() I get: {"foo": "bar"}, but I would like to get {foo: "bar"}
[14:49:07] *** Joins: ano (~ano@user/ano)
[14:49:33] <parazyd> So I'm thinking using the json module is wrong in the first place probably
[14:49:37] <Yhg1s> parazyd: okay, then you will have to do it manually. Not using the json module at all.
[14:49:41] <parazyd> Or I could use json, and then whip up some regex
[14:49:44] <parazyd> Right
[14:49:54] <Yhg1s> parazyd: because you're not trying to produce JSON. However, it's still not clear to me _why_ you think you need to do this.
[14:50:17] <Yhg1s> parazyd: since you talked about JavaScript objects, it sounds like you really just want to use JSON. Are you not actually trying to produce JavaScript objects?
[14:50:25] <parazyd> Because I'm trying to generate an AST for some other project I have no control of.
[14:50:46] <Yhg1s> okay, so something else needs the input without the quotes?
[14:50:51] <parazyd> Yes
[14:50:52] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[14:51:11] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:51:18] <Yhg1s> And what if some of the keys contain spaces, just to grab an example from the page you linked to?
[14:51:36] *** Quits: shad1 (~shad@user/shad) (Ping timeout: 250 seconds)
[14:51:47] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[14:51:59] <parazyd> Yhg1s: They never do
[14:52:11] *** Joins: dbbr (~dbbr___@2804:5f80:70a0:3700:18f0:2297:dd6d:368a)
[14:53:32] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:54:13] <Yhg1s> parazyd: no particular solution comes to mind, sorry, other than writing your own serialiser that produces this format.
[14:54:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:54:50] <Yhg1s> Or, you know, just leveraging JavaScript to decode the JSON for you.
[14:55:48] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[14:55:56] <parazyd> Yeah, perhaps
[14:55:58] <parazyd> Thanks
[14:56:42] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[14:56:43] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:58:50] *** Joins: Naan (~Naan@user/naan)
[14:58:54] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[14:58:55] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Read error: Connection reset by peer)
[14:59:00] <Yhg1s> parazyd: I am still tempted to ask you how this other project thinks '{foo: "bar"}' and '{"foo": "bar"}' actually differ in JavaScript, but if you've actually tried to do the regular thing and it failed, and you can't fix this other project, it's probably not worth looking into.
[14:59:54] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:00:18] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:6467:c9ec:5037:de45)
[15:00:55] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:01:31] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[15:01:51] *** Joins: nunggu (~q@user/nunggu)
[15:01:59] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:02:09] <parazyd> Yhg1s: Yeah, I wouldn't bother with it. Unfortunately the situation is like that, so no luck :/
[15:02:21] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:03:35] *** Quits: lola (~irelativi@2001:470:69fc:105::f015) (Quit: Bridge terminating on SIGTERM)
[15:03:35] *** Quits: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: whiterabbit[m] (~whiterabb@2001:470:69fc:105::1:61cb) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: kyle[m]12 (~kylematri@2001:470:69fc:105::1:73e8) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: capra[m] (~capramatr@2001:470:69fc:105::1:2280) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: Simon[m]12 (~srwalker1@2001:470:69fc:105::1:64ea) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac) (Quit: Bridge terminating on SIGTERM)
[15:03:36] *** Quits: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496) (Quit: Bridge terminating on SIGTERM)
[15:03:37] *** Quits: james[m]1 (~jamesjame@2001:470:69fc:105::1:5aa1) (Quit: Bridge terminating on SIGTERM)
[15:03:37] *** Quits: pikabell[m] (~pikabellm@2001:470:69fc:105::1:6125) (Quit: Bridge terminating on SIGTERM)
[15:03:37] *** Quits: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1) (Quit: Bridge terminating on SIGTERM)
[15:03:37] *** Quits: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4) (Quit: Bridge terminating on SIGTERM)
[15:03:37] *** Quits: e_i00[m] (~ei00matri@2001:470:69fc:105::1:6bd9) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: Vipulk (~vipulk@user/vipulk) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: miique (~miiquemat@2001:470:69fc:105::1:6901) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: Alabama[m] (~ingfix-2m@wikipedia/-Alabama-) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Bridge terminating on SIGTERM)
[15:03:38] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: mdk[m] (~mdk@python/psf/mdk) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: Tardar (~tardar@2001:470:69fc:105::1:4b40) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: ktosiek (~ktosiek@2001:470:69fc:105::87ab) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: Dominik[m] (~ddunglmat@2001:470:69fc:105::1:7799) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: Hist (~histausse@2001:470:69fc:105::b91) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Quit: Bridge terminating on SIGTERM)
[15:03:40] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: interestingname[ (~throwaway@2001:470:69fc:105::1:6560) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (Quit: Bridge terminating on SIGTERM)
[15:06:00] *** Joins: exalt (~exalt@231-232-145-85.ftth.glasoperator.nl)
[15:07:20] *** Joins: Alexer (~alexer@alexer.net)
[15:07:54] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 268 seconds)
[15:09:32] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[15:09:46] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[15:10:59] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 268 seconds)
[15:11:34] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[15:11:55] *** Joins: holgersson (~quassel@user/holgersson)
[15:12:07] <nedbat> today's coverage.py mystery: on GitHub Actions, installing 6.3 from PyPI causes segfaults, but installing it from github does not. So something is wrongish about how it was built?
[15:12:12] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[15:12:12] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[15:12:12] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[15:12:20] *** Quits: sn_fk_n (~snufkin@2.221.192.124) (Quit: Lost terminal)
[15:12:24] *** Joins: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab)
[15:12:36] *** Joins: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55)
[15:12:36] *** Joins: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c)
[15:12:36] *** Joins: Alabama[m] (~ingfix-2m@2001:470:69fc:105::1:6ca2)
[15:12:48] *** Joins: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be)
[15:13:02] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[15:13:15] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:13:16] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[15:13:30] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[15:13:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[15:13:34] *** Joins: sn_fk_n (~snufkin@2.221.192.124)
[15:13:40] *** Quits: sn_fk_n (~snufkin@2.221.192.124) (Client Quit)
[15:13:44] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[15:13:58] *** Joins: ktosiek (~ktosiek@2001:470:69fc:105::87ab)
[15:14:12] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[15:14:12] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[15:14:12] *** Joins: psydroid (~psydroid@user/psydroid)
[15:14:22] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:14:25] <kosh> nedbat, is there a c extension as part of it? if you install it from github does it compile it locally vs using a precompiled from one pypi?
[15:14:25] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[15:14:26] *** Joins: allegary (~allegary@apache/committer/gjm)
[15:14:27] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[15:14:27] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[15:14:28] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[15:14:28] *** Joins: jinsun_ (~jinsun@user/jinsun)
[15:14:34] <nedbat> kosh: yes, there's a C extension
[15:14:37] *** Joins: sn_fk_n (~snufkin@2.221.192.124)
[15:14:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:14:41] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10e9:d728:e4a7:d8a0:e8d2:754b) (Ping timeout: 268 seconds)
[15:14:51] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[15:14:51] *** Joins: Vipulk (~vipulk@user/vipulk)
[15:15:03] <nedbat> oh, maybe it isn't using the extension at all, let me check
[15:15:17] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[15:15:19] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[15:15:19] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[15:15:19] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[15:15:32] <nedbat> it is compiling the extension locally in the action.
[15:15:34] *** Joins: Hist (~histausse@2001:470:69fc:105::b91)
[15:15:39] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:15:41] *** Joins: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a)
[15:15:41] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:15:44] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[15:15:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[15:16:07] *** Joins: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c)
[15:16:07] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[15:16:09] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[15:16:23] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[15:16:50] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[15:17:14] *** Joins: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb)
[15:17:19] *** Joins: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831)
[15:17:32] *** Joins: fikran (~fikran@user/fikran)
[15:17:41] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Remote host closed the connection)
[15:17:41] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Write error: Connection reset by peer)
[15:17:42] *** Quits: Hist (~histausse@2001:470:69fc:105::b91) (Remote host closed the connection)
[15:17:42] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Remote host closed the connection)
[15:17:42] *** Quits: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb) (Remote host closed the connection)
[15:17:42] *** Quits: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c) (Remote host closed the connection)
[15:17:42] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Write error: Connection reset by peer)
[15:17:42] *** Quits: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55) (Remote host closed the connection)
[15:17:42] *** Quits: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c) (Write error: Connection reset by peer)
[15:17:42] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Remote host closed the connection)
[15:17:42] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Remote host closed the connection)
[15:17:42] *** Quits: ktosiek (~ktosiek@2001:470:69fc:105::87ab) (Remote host closed the connection)
[15:17:42] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Read error: Connection reset by peer)
[15:17:42] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Read error: Connection reset by peer)
[15:17:42] *** Quits: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be) (Read error: Connection reset by peer)
[15:17:42] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Remote host closed the connection)
[15:17:42] *** Quits: Vipulk (~vipulk@user/vipulk) (Read error: Connection reset by peer)
[15:17:42] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (Remote host closed the connection)
[15:17:42] *** Quits: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab) (Read error: Connection reset by peer)
[15:17:42] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Read error: Connection reset by peer)
[15:17:42] *** Quits: allegary (~allegary@apache/committer/gjm) (Read error: Connection reset by peer)
[15:17:42] *** Quits: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831) (Write error: Connection reset by peer)
[15:17:42] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Read error: Connection reset by peer)
[15:17:42] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Remote host closed the connection)
[15:17:42] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Write error: Connection reset by peer)
[15:17:42] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[15:17:42] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Read error: Connection reset by peer)
[15:17:43] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (Write error: Connection reset by peer)
[15:17:43] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Write error: Connection reset by peer)
[15:17:43] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Read error: Connection reset by peer)
[15:17:43] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Read error: Connection reset by peer)
[15:17:43] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Remote host closed the connection)
[15:17:43] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Remote host closed the connection)
[15:17:43] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Remote host closed the connection)
[15:17:43] *** Quits: psydroid (~psydroid@user/psydroid) (Remote host closed the connection)
[15:17:43] *** Quits: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) (Write error: Connection reset by peer)
[15:17:43] *** Quits: jinsun_ (~jinsun@user/jinsun) (Read error: Connection reset by peer)
[15:17:45] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (Remote host closed the connection)
[15:17:45] *** Quits: Alabama[m] (~ingfix-2m@2001:470:69fc:105::1:6ca2) (Read error: Connection reset by peer)
[15:17:45] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Read error: Connection reset by peer)
[15:18:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:20:36] *** Joins: bixo (~bixo@190.200.253.127)
[15:21:33] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:21:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:21:59] *** Quits: sn_fk_n (~snufkin@2.221.192.124) (Ping timeout: 256 seconds)
[15:22:46] *** Joins: defiant (~defiant@user/defiant)
[15:23:49] *** Joins: sn_fk_n (~snufkin@2.221.192.124)
[15:24:17] *** gentooclimax is now known as climax
[15:26:21] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[15:28:46] *** Quits: climax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[15:28:55] *** Joins: Babar_ (~Babar@2405:4803:ff4d:98d0:6029:2ed5:d24a:8f68)
[15:28:55] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:6029:2ed5:d24a:8f68) (Killed (osmium.libera.chat (Nickname regained by services)))
[15:28:55] *** Babar_ is now known as Babar
[15:31:03] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:31:13] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[15:32:09] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[15:32:24] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[15:32:43] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Remote host closed the connection)
[15:32:49] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[15:33:06] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:33:12] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:33:14] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[15:33:23] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Ping timeout: 250 seconds)
[15:33:26] *** Quits: maryo (~Maryo@user/maryo) (Read error: Connection reset by peer)
[15:33:30] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[15:33:48] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 268 seconds)
[15:33:52] *** Joins: maryo (~Maryo@user/maryo)
[15:33:52] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:35:36] <nedbat> i think this is because i used an internal field, and the PyPI kit is compiled with alpha.2, and the field moved.
[15:35:52] *** spithash is now known as phobos
[15:35:52] *** Quits: kurisumakise (~kurisumak@xmpp.chinwag.im) (Remote host closed the connection)
[15:35:58] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:b018:fec8:a7e4:5428)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:36] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:37:44] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:38:35] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[15:38:42] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[15:39:16] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d)
[15:39:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:40:27] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:40:39] *** Quits: menace (~someone@user/menace) (Quit: menace)
[15:41:14] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71)
[15:41:49] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (Ping timeout: 256 seconds)
[15:41:59] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[15:42:26] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[15:44:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:44:58] <Gustavo6046> I hear today is guido day
[15:45:00] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[15:45:00] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[15:45:01] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[15:45:08] <Gustavo6046> or perhaps it was yesterday
[15:45:15] *** Joins: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab)
[15:45:15] *** Joins: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55)
[15:45:15] *** Joins: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c)
[15:45:15] *** Joins: Alabama[m] (~ingfix-2m@2001:470:69fc:105::1:6ca2)
[15:45:27] *** Joins: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be)
[15:45:41] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[15:45:41] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[15:45:49] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[15:46:01] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[15:46:04] <nedbat> Gustavo6046: what does that mean?
[15:46:16] *** Joins: ktosiek (~ktosiek@2001:470:69fc:105::87ab)
[15:46:28] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[15:46:28] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[15:46:28] *** Joins: psydroid (~psydroid@user/psydroid)
[15:46:28] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[15:46:28] *** Joins: allegary (~allegary@apache/committer/gjm)
[15:46:29] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[15:46:29] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[15:46:29] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[15:46:29] *** Joins: jinsun_ (~jinsun@user/jinsun)
[15:46:29] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[15:46:29] *** Joins: Vipulk (~vipulk@user/vipulk)
[15:46:43] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[15:46:44] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[15:46:46] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[15:46:46] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[15:46:46] *** Joins: Hist (~histausse@2001:470:69fc:105::b91)
[15:46:46] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:46:46] *** Joins: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a)
[15:46:46] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[15:46:58] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[15:46:58] *** Joins: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c)
[15:46:58] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[15:46:58] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[15:47:12] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[15:47:13] *** Joins: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb)
[15:47:13] *** Joins: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831)
[15:47:25] *** Joins: Dominik[m] (~ddunglmat@2001:470:69fc:105::1:7799)
[15:47:25] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[15:47:37] *** Joins: whiterabbit[m] (~whiterabb@2001:470:69fc:105::1:61cb)
[15:47:38] *** Joins: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8)
[15:47:38] *** Joins: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf)
[15:47:38] *** Joins: lola (~irelativi@2001:470:69fc:105::f015)
[15:47:39] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[15:47:39] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[15:47:54] *** Joins: kts (~kts@103.73.237.89)
[15:47:54] *** Joins: james[m]123 (~jamesjame@2001:470:69fc:105::1:5aa1)
[15:48:08] *** Joins: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba)
[15:48:13] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[15:48:13] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[15:48:13] *** Joins: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65)
[15:48:13] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[15:48:13] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[15:48:16] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:48:26] *** Joins: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496)
[15:48:26] *** Joins: Tardar (~tardar@2001:470:69fc:105::1:4b40)
[15:48:38] *** Joins: capra[m] (~capramatr@2001:470:69fc:105::1:2280)
[15:48:50] *** Joins: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6)
[15:49:02] *** Joins: shad1 (~shad@user/shad)
[15:49:08] *** Joins: Simon[m]123 (~srwalker1@2001:470:69fc:105::1:64ea)
[15:49:20] *** Joins: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4)
[15:49:23] *** Joins: zeden (~zeden@user/zeden)
[15:49:33] *** Joins: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed)
[15:49:47] *** Joins: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3)
[15:49:47] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[15:49:59] *** Joins: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535)
[15:50:00] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[15:50:15] <Gustavo6046> nedbat, can't you figure? hinty hinty, it's a day pertinent to van Rossum himself!
[15:50:16] *** Joins: interestingname[ (~throwaway@2001:470:69fc:105::1:6560)
[15:50:16] *** Joins: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d)
[15:50:28] *** Joins: pikabell[m] (~pikabellm@2001:470:69fc:105::1:6125)
[15:50:28] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[15:50:28] *** Joins: miique (~miiquemat@2001:470:69fc:105::1:6901)
[15:50:28] *** Joins: kyle[m]12 (~kylematri@2001:470:69fc:105::1:73e8)
[15:50:28] *** Joins: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4)
[15:50:29] <Gustavo6046> I'm sure you can string the pieces together from there :)
[15:50:37] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:50:41] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[15:50:43] *** Joins: e_i00[m] (~ei00matri@2001:470:69fc:105::1:6bd9)
[15:50:55] *** Joins: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1)
[15:50:55] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[15:50:55] *** Joins: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac)
[15:51:39] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:51:57] *** Quits: Strom (strom@fedora/strom) ()
[15:52:19] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:52:31] <BtbN> The hell is that spam-wave of [m] users?
[15:52:54] <nedbat> Gustavo6046: it was yesterday (Jan 31)
[15:52:56] *** Joins: bluedust_ (~bluedust@86.106.136.222)
[15:53:03] <colo_work> BtbN, probably some kind of protocol bridge?
[15:53:11] <nedbat> BtbN: [m] means matrix bridge
[15:53:33] <BtbN> Seems like that bridge is in dire need of fixing.
[15:54:01] *** Joins: Strom (strom@fedora/strom)
[15:54:15] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[15:54:27] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[15:55:16] <Gustavo6046> oh, alright
[15:55:24] <Gustavo6046> BtbN, I agree, it has been ongoing for a while already
[15:55:30] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[15:55:43] *** Quits: bluedust (~bluedust@117.207.237.207) (Ping timeout: 250 seconds)
[15:56:33] *** Quits: bluedust_ (~bluedust@86.106.136.222) (Remote host closed the connection)
[15:57:39] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[15:57:50] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:58:28] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[15:58:57] <lola> o/ python
[15:59:05] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 268 seconds)
[15:59:06] <lola> our redminewiki git remote work is moving along nicely
[15:59:26] <lola> it seams is feature complete
[15:59:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:00:15] <lola> some teaks and error solving needed for the git part
[16:00:39] <lola> but I would like to know if anyone would like to review our small codebase
[16:00:48] <lola> is only 200 lines long
[16:01:01] *** Joins: mat001 (~mat001@213.143.69.121)
[16:01:41] <lola> all people on replicant project and even redmine or any others that might benefit from this work would really appreciate you time and energy on it ;)
[16:01:41] *** Joins: d1cor (~diego@179.63.242.120)
[16:01:47] <lola> Cheers Irelativism
[16:02:08] <lola> https://git.replicant.us/contrib/irelativism/wiki-migration-scripts/log/?h=main
[16:02:46] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[16:02:47] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Ping timeout: 268 seconds)
[16:03:05] *** Quits: Alabama[m] (~ingfix-2m@2001:470:69fc:105::1:6ca2) (Quit: Client limit exceeded: 20000)
[16:03:14] *** Quits: Vipulk (~vipulk@user/vipulk) (Quit: Client limit exceeded: 20000)
[16:03:15] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 20000)
[16:03:19] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[16:03:21] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[16:03:34] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[16:03:50] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Client limit exceeded: 20000)
[16:04:12] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Quit: Client limit exceeded: 20000)
[16:04:12] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Client limit exceeded: 20000)
[16:04:18] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[16:04:40] *** Quits: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c) (Quit: Client limit exceeded: 20000)
[16:04:45] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Quit: Client limit exceeded: 20000)
[16:04:50] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Quit: Client limit exceeded: 20000)
[16:04:51] *** Quits: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831) (Quit: Client limit exceeded: 20000)
[16:04:53] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[16:05:13] *** Joins: mat001 (~mat001@72.28.108.216)
[16:05:21] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[16:05:25] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Client limit exceeded: 20000)
[16:05:28] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Client limit exceeded: 20000)
[16:05:34] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Client limit exceeded: 20000)
[16:05:35] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Client limit exceeded: 20000)
[16:05:48] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (Quit: Client limit exceeded: 20000)
[16:06:00] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Quit: Client limit exceeded: 20000)
[16:06:08] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[16:06:17] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Quit: Client limit exceeded: 20000)
[16:06:17] *** Quits: mdk[m] (~mdk@python/psf/mdk) (Quit: Client limit exceeded: 20000)
[16:06:20] *** Quits: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf) (Quit: Client limit exceeded: 20000)
[16:06:29] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 268 seconds)
[16:06:33] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Client limit exceeded: 20000)
[16:06:34] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Client limit exceeded: 20000)
[16:06:35] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Client limit exceeded: 20000)
[16:06:36] *** Quits: miique (~miiquemat@2001:470:69fc:105::1:6901) (Quit: Client limit exceeded: 20000)
[16:06:42] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Quit: Client limit exceeded: 20000)
[16:06:44] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Quit: Client limit exceeded: 20000)
[16:06:46] *** Quits: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d) (Quit: Client limit exceeded: 20000)
[16:06:46] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Quit: Client limit exceeded: 20000)
[16:06:55] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Quit: Client limit exceeded: 20000)
[16:06:56] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Quit: Client limit exceeded: 20000)
[16:07:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:07:05] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (Quit: Client limit exceeded: 20000)
[16:07:38] *** Joins: georgios (~georgios@user/georgios)
[16:08:24] *** Joins: holgersson (~quassel@user/holgersson)
[16:08:57] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 268 seconds)
[16:10:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[16:10:34] <nedbat> lola: "sumarry" is a typo for "summary"
[16:10:35] *** Joins: elias117 (~elias117@host-24-224-142-233.public.eastlink.ca)
[16:10:35] *** Quits: elias117 (~elias117@host-24-224-142-233.public.eastlink.ca) (Changing host)
[16:10:35] *** Joins: elias117 (~elias117@user/elias117)
[16:10:35] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[16:10:35] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[16:10:35] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[16:10:35] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 20000)
[16:10:36] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[16:10:36] *** Joins: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c)
[16:10:36] *** Joins: Alabama[m] (~ingfix-2m@2001:470:69fc:105::1:6ca2)
[16:10:36] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[16:10:36] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[16:10:45] *** Quits: Tardar (~tardar@2001:470:69fc:105::1:4b40) (Quit: Client limit exceeded: 20000)
[16:10:46] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:10:52] *** Joins: allegary (~allegary@apache/committer/gjm)
[16:10:52] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[16:10:53] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[16:11:08] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[16:11:08] *** Joins: jinsun_ (~jinsun@user/jinsun)
[16:11:08] *** Joins: Vipulk (~vipulk@user/vipulk)
[16:11:09] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[16:11:24] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[16:11:28] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[16:11:29] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[16:11:29] *** Joins: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a)
[16:11:30] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[16:11:30] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[16:11:30] *** Joins: boris[m]12 (~borisruna@2001:470:69fc:105::32f3)
[16:11:30] *** Joins: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831)
[16:11:30] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[16:11:30] *** Joins: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf)
[16:11:30] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[16:11:30] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[16:11:30] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[16:11:32] *** Joins: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d)
[16:11:32] *** Joins: miique (~miiquemat@2001:470:69fc:105::1:6901)
[16:11:32] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[16:11:32] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[16:11:35] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[16:11:44] *** Joins: Tardar (~tardar@2001:470:69fc:105::1:4b40)
[16:11:44] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[16:11:46] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[16:11:51] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:11:51] *** Quits: exalt (~exalt@231-232-145-85.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[16:12:10] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[16:14:51] *** Quits: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65) (Quit: Client limit exceeded: 20000)
[16:14:59] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Quit: Client limit exceeded: 20000)
[16:15:12] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[16:16:20] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Quit: Client limit exceeded: 20000)
[16:16:35] *** Quits: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8) (Quit: Client limit exceeded: 20000)
[16:16:59] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Quit: Client limit exceeded: 20000)
[16:17:17] *** Quits: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4) (Quit: Client limit exceeded: 20000)
[16:17:17] *** Quits: kyle[m]12 (~kylematri@2001:470:69fc:105::1:73e8) (Quit: Client limit exceeded: 20000)
[16:18:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:19:29] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:19:47] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:20:00] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:20:58] *** Quits: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab) (Quit: Client limit exceeded: 20000)
[16:21:10] *** Joins: esther (~esther@2607:fb90:5fe4:2a3b:f813:2a0e:fb01:b45f)
[16:21:12] *** Quits: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55) (Quit: Client limit exceeded: 20000)
[16:21:28] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Quit: Client limit exceeded: 20000)
[16:22:11] *** Quits: archimedesx (~archimed3@2a00:23c5:dab6:a501:fcea:373d:260:a443) (Remote host closed the connection)
[16:22:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[16:23:53] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Quit: Client limit exceeded: 20000)
[16:24:05] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:bdfb:9112:456:1616) (Ping timeout: 250 seconds)
[16:24:46] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[16:24:49] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[16:24:50] *** Quits: Hist (~histausse@2001:470:69fc:105::b91) (Quit: Client limit exceeded: 20000)
[16:25:07] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[16:25:15] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:25:17] *** Quits: esther (~esther@2607:fb90:5fe4:2a3b:f813:2a0e:fb01:b45f) (Ping timeout: 240 seconds)
[16:25:49] *** Joins: Pickchea (~private@user/pickchea)
[16:25:51] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:27:11] *** phobos is now known as spithash
[16:27:52] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10e9:d728:9d88:f54e:72ef:9b28)
[16:30:33] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[16:30:42] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:32:36] *** Joins: badsektor (~badsektor@user/badsektor)
[16:33:58] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[16:34:01] *** Joins: pabed (~Thunderbi@89.37.15.34)
[16:34:32] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[16:34:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:35:11] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[16:35:38] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Changing host)
[16:35:38] *** Joins: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106)
[16:36:05] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[16:36:27] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[16:36:53] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[16:37:12] *** Joins: Averna (Averna@gateway/vpn/protonvpn/averna)
[16:37:30] *** Quits: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106) (Quit: Reconnecting)
[16:37:45] *** Joins: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a)
[16:38:24] *** Joins: pepper (~pepper@user/pepper)
[16:38:51] *** shad1 is now known as shad
[16:39:00] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[16:39:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[16:39:11] *** Quits: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be) (Quit: Client limit exceeded: 20000)
[16:39:26] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[16:42:50] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[16:44:51] *** Quits: dibas (~dibas@user/dibas) (Quit: Leaving...)
[16:44:59] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[16:45:20] *** Joins: mat001_ (~mat001@213.143.69.121)
[16:45:34] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 250 seconds)
[16:46:05] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:46:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[16:49:13] *** Quits: bixo (~bixo@190.200.253.127) (Ping timeout: 250 seconds)
[16:50:31] *** MILDEC is now known as NickSerc
[16:50:35] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:b018:fec8:a7e4:5428) (Remote host closed the connection)
[16:50:51] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:b018:fec8:a7e4:5428)
[16:50:57] *** Quits: ekathva (~ekathva@2001:999:51:be01:f430:4edc:7521:6563) (Remote host closed the connection)
[16:51:10] *** Joins: ekathva (~ekathva@2001:999:51:be01:fca5:59f2:6173:4a62)
[16:52:12] *** Joins: dbristow (~dbristow@user/dbristow)
[16:52:22] *** Joins: telboon (~telboon@user/telboon)
[16:52:40] *** Joins: dibas (~dibas@user/dibas)
[16:53:43] *** Joins: bixo (~bixo@190.200.253.127)
[16:54:53] *** NickSerc is now known as jiggawatt
[17:00:12] *** Quits: M3troidman (~buttler@196.196.203.108) (Quit: uptime reset)
[17:01:25] *** Joins: M3troidman (~buttler@196.196.203.84)
[17:01:38] *** Quits: kts (~kts@103.73.237.89) (Quit: Konversation terminated!)
[17:02:02] *** Joins: somlis (~somlis@user/somlis)
[17:03:20] *** Joins: euouae (~euouae@user/euouae)
[17:03:54] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[17:04:20] <euouae> Hello I'm trying to run `poetry install` and I get https://bpa.st/DBIQ and I was wondering if this is an error because I'm missing a non-python dependency? (swig?)
[17:04:33] *** Joins: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab)
[17:04:33] *** Joins: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55)
[17:04:47] *** Joins: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be)
[17:04:47] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[17:04:47] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[17:04:47] *** Joins: Hist (~histausse@2001:470:69fc:105::b91)
[17:04:47] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[17:04:47] *** Joins: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8)
[17:04:47] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[17:04:47] *** Joins: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65)
[17:04:47] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[17:04:47] *** Joins: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8)
[17:04:47] *** Joins: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4)
[17:05:15] <grym> euouae: yep, you don't have swig
[17:05:20] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[17:05:26] <euouae> ah great, thank you grym
[17:06:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:07:45] *** Joins: Nigma (~magnus@87.61.126.226)
[17:08:37] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:08:44] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[17:08:45] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:09:10] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:11:34] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:11:53] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[17:11:55] *** Quits: telboon (~telboon@user/telboon) (Ping timeout: 256 seconds)
[17:11:57] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Changing host)
[17:11:57] *** Joins: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106)
[17:13:31] *** Joins: Sushi (~romuald@user/sushi)
[17:14:10] *** Joins: dbristow_ (~dbristow@user/dbristow)
[17:14:54] <Sushi> Hi there. Looking at the python documentation: https://docs.python.org/3/library/typing.html#callable the documentation is for the typing module, but the examples are using collections.abc
[17:14:57] *** Joins: pycurious (~Adium@user/pycurious)
[17:15:13] <Sushi> Is that an oversight?
[17:15:25] *** Joins: telboon (~telboon@user/telboon)
[17:15:34] *** Joins: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it)
[17:15:46] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:15:57] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.29)
[17:16:14] *** Joins: mattfoxxx (~mattfoxxx@200116b822e2ba004292197b605f8185.dip.versatel-1u1.de)
[17:16:34] *** Quits: dbristow (~dbristow@user/dbristow) (Ping timeout: 260 seconds)
[17:16:36] *** BSaboia_ is now known as BSaboia
[17:16:44] *** Joins: dbristow__ (~dbristow@user/dbristow)
[17:18:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[17:18:17] *** Joins: rvalue (~rvalue@user/rvalue)
[17:18:17] *** Quits: cosimone` (~user@93-47-231-100.ip115.fastwebnet.it) (Ping timeout: 240 seconds)
[17:18:22] *** Quits: dbristow_ (~dbristow@user/dbristow) (Ping timeout: 256 seconds)
[17:18:59] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[17:19:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[17:19:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:19:59] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:20:00] *** Joins: Kruppt (~Kruppt@50-111-49-4.drhm.nc.frontiernet.net)
[17:20:32] <euouae> Sushi, I don't think so, https://docs.python.org/3/library/collections.abc.html
[17:20:38] *** Quits: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[17:20:40] *** Quits: mattfoxxx (~mattfoxxx@200116b822e2ba004292197b605f8185.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[17:20:40] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[17:20:43] <jinsun__> Sushi: no, see the slightly confusing Deprecation message there "Deprecated since version 3.9: collections.abc.Callable now supports []. See PEP 585 and Generic Alias Type."
[17:21:26] <Sushi> ah, thanks
[17:22:00] *** Joins: bluedust (~bluedust@185.248.85.47)
[17:22:27] *** Joins: mattfoxxx (~mattfoxxx@200116b822e2c300ae7c305570064fab.dip.versatel-1u1.de)
[17:22:54] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:23:38] <Wooble> Callable being in collections is weird.
[17:24:17] *** Quits: mcpackey (~pm0001@p5dc1cbe5.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:24:32] <Sushi> Yes, from a user POV, typing makes more sense to me
[17:24:33] <Julian> where else would it be, the whole module should really move but that'd just create churn
[17:24:38] <Julian> (to typing)
[17:25:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[17:25:11] *** Quits: ekathva (~ekathva@2001:999:51:be01:fca5:59f2:6173:4a62) (Ping timeout: 250 seconds)
[17:25:55] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[17:26:16] <euouae> Is there some way to find out what the dependencies of https://github.com/Yubico/yubikey-manager/ are? I am on Fedora and they only talk of debian packages in https://github.com/Yubico/yubikey-manager/blob/main/doc/Development.adoc
[17:26:20] <Wooble> Julian: but they already created typing.Callable; why not deprecate the one in collections that has nothing to do with collections?
[17:26:38] *** Joins: vaio (~gary@user/ghost)
[17:26:44] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[17:26:53] *** Joins: fikran (~fikran@user/fikran)
[17:26:55] <Julian> Is typing.Callable an abc
[17:26:57] <euouae> I'm struggling to build it with `poetry install`. Is there some configuration file that lists external dependencies?
[17:27:03] <Sushi> Wooble: because the one in collections is already deprecated in favor of the one in collections.abc ^^
[17:28:09] <Wooble> I enjoy that 3.10 added new features to typing.Callable *after* it was deprecated.
[17:28:32] <jinsun__> euouae: [tool.poetry.dependencies] in pyproject.toml https://github.com/Yubico/yubikey-manager/blob/main/pyproject.toml#L29
[17:29:20] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 250 seconds)
[17:29:27] *** Joins: rah (rah@verain.settrans.net)
[17:29:32] *** Joins: exalt (~exalt@109.36.144.16)
[17:29:38] <euouae> jinsun__ are you sure those are external dependencies? `click` should be installable by pip right?
[17:29:40] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:30:25] <jinsun__> ah external, not they are not external
[17:30:29] *** Quits: telboon (~telboon@user/telboon) (Quit: Leaving)
[17:30:49] <euouae> OK no worries. I will try to install a bunch of packages and see what makes it work
[17:30:50] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:7cc:70dd:bb0:247b)
[17:31:04] <euouae> I was hoping for a precise trick but I guess it'll do
[17:31:56] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[17:32:01] *** Quits: M3troidman (~buttler@196.196.203.84) (Quit: uptime reset)
[17:32:07] <rah> I'm trying to install a specific version of windows python, 3.6.5, into a specific directory, C:\Python36-32; there's already a C:\Python36 directory containing a python install but there's nothing listed in the "Programs and Features" in control panel and yet the 3.6.5 installer tells me "A newer version of Python 3.6 is already installed." and refuses to continue
[17:32:22] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[17:32:23] <rah> how can I remove the existing installation?
[17:32:59] <Wooble> euouae: if you figure it out, maybe submit a patch to the docs with the rhel-ish deps. usually the names are pretty close to the debian ones, with s/dev/devel/
[17:33:15] <jinsun__> euouae: yeah there isn't a standard place to put the external deps, so just reverse engineeer from the errors
[17:33:21] <euouae> Wooble patch to yubikey-manager?
[17:33:22] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[17:33:31] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[17:33:43] <zamba> is there a way to create an alias function inside a class in python?
[17:33:56] <zamba> i basically need to support both function names for a period, but one of them should be obsoleted
[17:34:11] <bjs> zamba: `class C: def f(self): ...;  g = f`
[17:34:13] <bjs> like that?
[17:34:18] <Wooble> euouae: yeah, having the yum (or whatever you folks use these days) command right under the apt command in that doc would help others in the future
[17:34:21] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:34:44] <euouae> Wooble yes indeed +1, I will do. I'm in fact trying to get it to work so that I can add some stuff
[17:34:59] *** Joins: Barones (~Barones@user/Barones)
[17:35:47] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.125)
[17:35:48] <zamba> bjs: oh, that's all?
[17:35:54] <zamba> bjs: but where inside the class should i define that?
[17:35:56] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[17:36:07] <bjs> zamba: well after defining `f`
[17:36:32] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:37:04] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 256 seconds)
[17:37:25] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.29) (Ping timeout: 256 seconds)
[17:38:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[17:38:41] *** Joins: M3troidman (~buttler@196.196.203.142)
[17:40:04] <Wooble> zamba: maybe consider def g(self): warnings.warn(DeprecationWarning, ...); self.f()
[17:40:35] *** Quits: jay-m1261 (~jay-m@129.0.99.157) (Ping timeout: 250 seconds)
[17:40:35] *** Quits: jay-m126_ (~jay-m@129.0.99.157) (Ping timeout: 250 seconds)
[17:40:35] *** Quits: jay-m126 (~jay-m@129.0.99.157) (Ping timeout: 250 seconds)
[17:40:47] *** Joins: jay-m126_ (~jay-m@129.0.76.209)
[17:40:48] *** Joins: jay-m1261 (~jay-m@129.0.76.209)
[17:40:48] *** Joins: johnjaye (~pi@173.209.65.233)
[17:40:48] <jinsun__> euouae: the installation section mentions few things (pcscd+permissions, swig, and PCSC lite) https://github.com/Yubico/yubikey-manager#installation
[17:41:39] *** Joins: jay-m126 (~jay-m@129.0.76.209)
[17:41:42] *** Joins: ekathva (~ekathva@2001:999:51:be01:35a5:6efe:4821:a5c8)
[17:42:24] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:42:26] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d) (Ping timeout: 245 seconds)
[17:43:00] <euouae> jinsun__ the permissions have to do with use I think, I have all the dependencies required I think
[17:43:11] <euouae> jinsun__ the error I'm getting stuck at is related to pyscard
[17:43:42] <euouae> pyscard claims it only requires gcc, swig, and pcsc-lite, and I have them all
[17:43:54] <rah> I'm trying to install a specific version of windows python, 3.6.5, into a specific directory, C:\Python36-32; there's already a C:\Python36 directory containing a python install but there's nothing listed in the "Programs and Features" in control panel and yet the 3.6.5 installer tells me "A newer version of Python 3.6 is already installed." and refuses to continue; how can I remove the existing installation?
[17:44:08] <rah> alternatively, is there a windows-specific python IRC channel?
[17:44:20] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[17:44:42] <euouae> rah, use the command line version of the installer script and read its options
[17:44:50] <euouae> it should have an option about the installation directory
[17:46:15] *** Quits: jay-m126_ (~jay-m@129.0.76.209) (Read error: Connection reset by peer)
[17:46:15] <euouae> rah, does this help? https://www.freecodecamp.org/news/installing-multiple-python-versions-on-windows-using-virtualenv/
[17:46:43] <Wooble> i'm very skeptical of that title
[17:46:45] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[17:46:51] <euouae> Why?
[17:47:21] <Wooble> virtualenv has nothing at all to do with having multiple python versions.
[17:47:34] <euouae> yeah you're right, I'm sorry
[17:47:45] <euouae> it's the first result that popped up and I doubted myself
[17:47:54] *** A_Dragon is now known as NotAFurry
[17:47:58] *** Quits: jay-m126 (~jay-m@129.0.76.209) (Ping timeout: 250 seconds)
[17:48:06] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[17:48:11] *** Quits: jay-m1261 (~jay-m@129.0.76.209) (Ping timeout: 256 seconds)
[17:48:19] <Wooble> "install virtualenv" coming before "install python" is umm, something.
[17:48:25] <jinsun__> bad title, but atleast it doesn't say pip install python inside :D, gives the correct way to download
[17:48:45] <euouae> rah, use this https://docs.python.org/3/using/windows.html#installing-without-ui
[17:49:00] <euouae> with TargetDir, the one you want
[17:49:23] *** Joins: jay-m126 (~jay-m@129.0.99.22)
[17:49:29] *** Quits: Trashlord (~trash@user/trashlord) (Remote host closed the connection)
[17:49:58] *** Joins: jay-m126_ (~jay-m@129.0.99.22)
[17:50:02] <euouae> jinsun__ I'm going to contact the maintainers to ask my questions on the packages!
[17:50:06] *** Quits: Kruppt (~Kruppt@50-111-49-4.drhm.nc.frontiernet.net) (Read error: Connection reset by peer)
[17:50:07] *** Joins: jay-m1261 (~jay-m@129.0.99.22)
[17:50:42] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[17:51:04] <jinsun__> yeah opening an issue would be a good idea
[17:51:48] <Wooble> rah: FWIW, the 3.6.5 32-bit installer doesn't seem to care that I have 3.6 already.
[17:52:07] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[17:52:12] *** Quits: exalt (~exalt@109.36.144.16) (Quit: Client closed)
[17:52:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[17:53:00] <rah> euouae: wouldn't that need the same version of the installer to uninstall?
[17:53:02] <Wooble> (granted I didn't have a newer *32 bit* 3.6)
[17:53:34] <euouae> rah, I think so
[17:53:47] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.125) (Ping timeout: 250 seconds)
[17:54:41] <jinsun__> euouae: here is how arch builds it, those depends and makedepends might help https://github.com/archlinux/svntogit-community/blob/packages/yubikey-manager/trunk/PKGBUILD#L12
[17:54:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:54:53] *** NotAFurry is now known as A_Dragon
[17:55:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:55:08] <Wooble> rah: err, also I'm dumb and I only had an *older* version of 3.6 on this machine.
[17:55:08] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:55:10] <euouae> I've kind of rounded it down to being unable to build pyscard I think
[17:55:12] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[17:55:14] <rah> how can I determine whether a windows python installation is 32-bit or 64-bit?
[17:55:33] <euouae> and https://github.com/archlinux/svntogit-community/blob/packages/python-pyscard/trunk/PKGBUILD#L12 only gives python and pcsclite which I both have...
[17:55:38] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[17:55:43] <Wooble> rah: if you run it, the message you get on startup includes that
[17:56:04] <Wooble> e.g. "[MSC v.1900 64 bit (AMD64)] on win32"
[17:56:06] <rah> "Python 3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)] on win32"
[17:56:25] <PJBoy> `python -VV` if you don't want the repl
[17:56:32] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[17:56:34] <rah> "MSC v.1916 64 bit (AMD64)" is presumably 64-bit but "win32" is 32-bit, so which is it? :-)
[17:56:36] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[17:56:50] <Wooble> rah: it's 64 bit. "win32" is the name of the platform.
[17:56:59] <rah> thank you
[17:57:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Client Quit)
[17:57:02] <Wooble> rah: (yes, even the 64-bit windows platform.)
[17:57:22] <PJBoy> python -VV doesn't include the win32 bit :D
[17:57:34] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:57:58] <Wooble> PJBoy: weird, you'd think it would just give the same output.
[17:58:03] *** Joins: davegarath (~davegarat@net-93-66-98-230.cust.vodafonedsl.it)
[17:58:13] <PJBoy> yeah I would
[17:58:20] <PJBoy> but I'm not complaining
[17:58:47] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:59:23] <jinsun__> ipython also doesn't show it
[17:59:28] *** Parts: Sushi (~romuald@user/sushi) (WeeChat 3.0)
[18:00:34] <rah> euouae: didn't do anything :-/
[18:00:48] <rah> python-3.6.8-amd64.exe /quiet /uninstall TargetDir=C:\Python36
[18:01:04] <euouae> You said you wanted to /install/ something, but now you're running an uninstall command?
[18:01:15] <rah> windows asks if I want to allow it to make changes to my computer, which I say yes to, and then nothing happens
[18:01:25] <rah> euouae: I want to uninstall what's there
[18:01:31] *** Joins: pro_z_ (~pro_z@37.214.55.61)
[18:01:35] <rah> (so I can install something else)
[18:01:38] <euouae> No, you just said that
[18:01:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:01:41] <euouae> You've never mentioned it before
[18:01:52] <rah> 14:13 < rah> I'm trying to install a specific version of windows python, 3.6.5, into a specific directory, C:\Python36-32; there's already a C:\Python36 directory containing a python install but there's nothing listed in the "Programs
[18:01:55] <hrob> o/  I'm working with some ORM data classes, and am kinda inclined to apply inheritance (although not much of a fan),
[18:01:56] <rah>  and Features" in control panel and yet the 3.6.5 installer tells me "A newer version of Python 3.6 is already installed." and refuses to continue; how can I remove the existing installation?
[18:02:18] <rah> euouae: I asked explicitly "how can I remove the existing installation?"
[18:02:31] <hrob> I am wondering if I can create a base class copy() constructor, which then also works for children classes?   See  https://bpa.st/UKPA
[18:02:32] <Wooble> rah: are you customizing installation and choosing the non-existing Python36-32 directory as the location?
[18:02:37] <euouae> You are right, I missed it rah. Download the installer of that version and remove it
[18:02:46] <rah> euouae: how?
[18:02:48] <jinsun__> why do you need 3.6.5 btw?
[18:02:52] <rah> just run the installer?
[18:02:57] <euouae> If you run the installer, doesn't it tell you to uninstall?
[18:03:15] <jinsun__> you should use 3.7+ now
[18:03:22] <rah> euouae: no, it doesn't
[18:03:33] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:03:56] <euouae> rah, does this help? https://docs.python.org/3/using/windows.html#modifying-an-install
[18:03:56] <Wooble> jinsun__: I mean also you should use the latest 3.6 if you need 3.6 for <$reasons> but presumably they have a reason :P
[18:04:05] <rah> as I said, 'there's nothing listed in the "Programs and Features" in control panel
[18:04:23] <rah> euouae: hope
[18:04:26] <rah> err
[18:04:28] <rah> euouae: nope
[18:04:35] <euouae> How was python installed?
[18:04:40] <rah> I don't know
[18:04:53] <rah> it was already installed before I got the machine
[18:05:00] <Wooble> rah: I think if you delete the installer after using it, programs and features won't have it either.
[18:05:19] <Wooble> you can *probably* just drag c:/python36 to the recycle bin
[18:05:28] *** Joins: bluedust_ (~bluedust@59.89.212.127)
[18:05:58] <Wooble> (might leave some $PATH and registry key stuff around, but unlikely to be a problem.)
[18:06:04] <euouae> There's also %LocalAppData%\Programs\PythonXX
[18:06:15] <rah> does anybody know what the installer does to check whether there's an existing version of python installed?
[18:06:18] *** Joins: Phase (~phase@user/phase)
[18:06:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:06:44] <Wooble> rah: I can't even get the installer to give me that message, and I now have 8 python installations :)
[18:06:44] <euouae> It should be opensource
[18:06:59] <jinsun__> it does put some stuff in registry https://www.python.org/dev/peps/pep-0514/
[18:07:11] <jinsun__> so you would have to remove those too I guess
[18:07:35] <rah> euouae: of course
[18:07:49] <rah> but can anyone save me some time before I go off looking?
[18:08:15] <euouae> well, got to go
[18:08:18] *** Parts: euouae (~euouae@user/euouae) (good luck! thanks for the help)
[18:08:31] *** Quits: bluedust (~bluedust@185.248.85.47) (Ping timeout: 250 seconds)
[18:08:56] *** gentooclimax is now known as climax
[18:09:00] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[18:09:19] <hrob> any suggestions on this question?   https://bpa.st/UKPA
[18:09:45] *** Joins: nomic (~nomic@185.192.69.3)
[18:09:53] <Wooble> hrob: I'm not seeing a question
[18:10:44] <rah> it seems I was wrong, the old version has disappeared
[18:11:12] <Wooble> rah: does that make the installer happy?
[18:11:19] <rah> presumably it was deleting things in the background
[18:12:06] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:12:29] *** Quits: M3troidman (~buttler@196.196.203.142) (Quit: uptime reset)
[18:13:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:14:02] *** Joins: jazzy (~jaziz@user/jaziz)
[18:14:13] <hrob> Wooble, sorry Im wondering about creating a shallow copy method, that still works on children classes
[18:14:40] <hrob> although being explicit is not a bad thing, but wondering about this introspection in python
[18:16:39] <SnoopJ> hrob, dataclasses.dataclass provides some helpful machinery for this, it collects the known fields into an attribute (but then, it also effectively solves this problem, too)
[18:17:09] *** Roey is now known as whoreberries
[18:17:11] *** Joins: bluedust (~bluedust@81.92.206.10)
[18:17:32] *** whoreberries is now known as CatchyDespot
[18:17:46] *** Joins: M3troidman (~buttler@196.196.203.84)
[18:18:13] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:18:26] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:18:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[18:18:51] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[18:19:14] *** kl1n3 is now known as kline
[18:19:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:21:03] *** Quits: bluedust_ (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[18:21:34] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:21:49] <hrob> SnoopJ  this is wonderfully neat -- hope it doesnt conflict with sqlalchemy -- looks like pydantic probably uses this
[18:22:06] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8574-14f1-3c77-025b.res6.spectrum.com)
[18:22:30] <SnoopJ> hrob, Pydantic does similar things to what dataclasses does. Is Base actually a subclass of BaseModel?
[18:22:52] *** Joins: programmar (~whatever@118.69.128.37)
[18:23:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:25:17] <hrob> SnoopJ  no not in this case for me... but seriously considering using pydantic
[18:25:28] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[18:25:59] <SnoopJ> it's a nice library with a lot more features (and correspondingly a lot more quirks) than dataclasses. attrs is also worth mentioning since dataclasses is diet-attrs
[18:26:06] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[18:26:24] <hrob> SnoopJ  ok so added dataclass  decorator, it doesnt seem to build a copy() method automatically, but perhaps it provides something else like   MyData( some_instance_of_mydata)
[18:27:14] <jinsun__> sqlmodel is the thing I think if you need sqlalchemy and pydantic combined https://sqlmodel.tiangolo.com/
[18:28:43] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[18:28:54] <jinsun__> hrob: dataclasses.replace will make a copy (if you don't provide any changes)
[18:29:05] <SnoopJ> dataclasses instances will also be copyable by copy.copy()
[18:29:46] <hrob> jinsun_  hm ok I was probably adding a custom __init___ I just remove that then
[18:30:40] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[18:31:27] <Deneb> I raised this question last night but didn't manage to resolve the problem so apologies for posting again. I have a python script that opens a serial port and waits (in a loop) for data. As soon as a byte is received it reads all of the incomming data into a byte array and returns it as a byte array. This is then passed to another functon to display. The problem I have have is that when this is used in a tkinter GUI, the function no longer seems
[18:31:27] <Deneb> to wait but moves directly to the next line of the program without any data being returned. I am not sure how to deal with this. The data being sent over serial is initiated by the user pressing a button on the instrument, so the program has to wait until something is received.
[18:31:37] *** Joins: Fiji (~Fiji@user/fiji)
[18:32:23] <hrob> jinsun_  thats great...  getting to be a pain to have two data models one for API another for sqlalchemy
[18:32:27] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[18:32:42] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Quit: Client closed)
[18:32:46] <lola> "... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/df0739b9e832b427c91f499b10df729ee5aee428)
[18:33:31] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:33:40] <hrob> Deneb  it sounds like you may need to await receiving the whole data,  how are you reading data from tcp?
[18:34:02] <hrob> sorry serial port
[18:34:21] *** Quits: M3troidman (~buttler@196.196.203.84) (Quit: uptime reset)
[18:35:20] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[18:35:30] *** Joins: M3troidman (~buttler@196.196.203.108)
[18:35:36] <hrob> Deneb I mean are you using an async to read the data?
[18:37:07] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[18:37:43] <Deneb> hrob: it is being read using the pyserial library. I tried various things, but in the end setting a long timout (e.g. 1hr) worked. The program first issues a ser.read(1) and just sits waiting until a byte is received. The timeout is then changed to something quite short and the program goes into a loop to collect the incomming data into a byte array. At the end of the loop the function returns the byte array. Am I using an async? Not that I am
[18:37:43] <Deneb> aware of and it works just fine from the command line. Not sure whether pyserial wraps async into it somehow though.
[18:38:48] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Remote host closed the connection)
[18:39:07] *** dbristow__ is now known as dbristow
[18:39:35] <Deneb> this is the working command line script: https://bpa.st/SUCQ
[18:39:56] *** Joins: davor_ (~davor@user/davor)
[18:40:22] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[18:40:22] *** Joins: hlauk (~hlauk@176.33.108.116)
[18:40:38] *** Joins: d0ku (~d0ku@178.43.19.180.ipv4.supernova.orange.pl)
[18:40:39] *** Quits: davor (~davor@user/davor) (Ping timeout: 268 seconds)
[18:41:05] <hrob> Deneb hm   read(timeout = None):   wait forever / until requested number of bytes are received    should be blocking and waiting
[18:41:18] <NoImNotNineVolt> so, i have a dict with an optionally present key. the key, if present, will have a value consisting of a string of comma-separated values.
[18:42:16] <NoImNotNineVolt> d.get('key').split(',') raises an exception if key is missing, but d.get('key', '').split(',') gives [''] if the key is missing...
[18:42:52] <NoImNotNineVolt> what's a pythonic way of doing this so that i get None if they key is missing, and a list consisting of the comma-separated items if it's not?
[18:44:58] <NoImNotNineVolt> seems like i'll need to write it out the long way... https://stackoverflow.com/questions/18150390/python-string-split-on-possible-none-value
[18:45:03] *** Quits: revolve (~u0_a227@82-132-237-109.dab.02.net) (Read error: Connection reset by peer)
[18:45:19] <jinsun__> a slighlty ugly walrus way `None if (v:=d.get("key")) is None else v.split(",")`
[18:45:43] * NoImNotNineVolt plays with that
[18:45:46] <NoImNotNineVolt> thanks :)
[18:47:00] *** Joins: revolve (~u0_a227@82-132-245-69.dab.02.net)
[18:48:54] *** Joins: exalt (~exalt@231-232-145-85.ftth.glasoperator.nl)
[18:49:35] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:49:40] <Deneb> hrob: hmm, ser.read(timeout = None) returns 'got unexpected keyword argument 'timeout'. I think because its expecting a number of bytes. However, setting ser.timeout = None then ser.read(1) does work.
[18:49:45] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[18:50:11] <hrob> Deneb sorry, didnt read the docs right,   got set timeout=None in the config,, yeah read only accepts num bytes.
[18:50:12] <Deneb> hrob: at least it does in the command line version. The function still runs on in the GUI version.
[18:50:50] <Deneb> hrob: no worries. The idea was sound and likely better than some random long interval.
[18:50:52] <hrob> seems like docs say you should indeed use the timeout,
[18:51:10] <hrob> nah I guess you do want a timeout there
[18:51:21] <hrob> timeout=None is forever it says
[18:51:50] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[18:52:00] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[18:52:04] *** Joins: JanC (~janc@user/janc)
[18:52:06] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[18:52:38] <hrob> sounds like you rubber-ducket the problem
[18:52:53] <Deneb> hrob: yes, I will be sticking with that, just don't know why it doesn't work when called from the gui. Last night someone said this is because the gui was async.
[18:52:58] *** Joins: palasso_ (~palasso@user/palasso)
[18:53:02] <Deneb> rubber-ducket problem?
[18:53:11] *** Joins: callq (~callq@2409:4062:2d1d:d8fc:dd53:71b9:2283:727d)
[18:53:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[18:54:15] <hrob> Deneb:  https://www.greenm3.com/gdcblog/2018/4/27/applying-rubber-duck-debugging-idea-to-modeling-projects
[18:54:39] *** Joins: spetrosi (~spetrosi@ip-86-49-242-134.net.upcbroadband.cz)
[18:54:40] <Deneb> ah, I see, atriculating it out loud
[18:55:13] <hrob> yeah often one asks the question, then finds the answer
[18:55:16] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Ping timeout: 256 seconds)
[18:55:33] *** Quits: Nigma (~magnus@87.61.126.226) (Ping timeout: 250 seconds)
[18:55:37] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 240 seconds)
[18:55:50] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:55:55] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[18:56:13] <hrob> even if a rubber duck is being asked :)
[18:56:15] *** Joins: lakrass (~lakrass@user/lakrass)
[18:56:27] <jinsun__> what is 1.3 here? https://github.com/python/cpython/blob/v3.10.2/Lib/xml/etree/ElementTree.py#L620
[18:56:33] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[18:57:51] <Wooble> jinsun__: I think etree started as an external project with its own versioning
[18:58:06] <jinsun__> yeah, the blame seems to suggest there was an external ElementTree package https://github.com/python/cpython/commit/f15351d938e76c4b2a42a638825d67f108685140
[18:58:06] *** Joins: millido (~millido@84.210.150.128)
[18:58:22] <Wooble> jinsun__: and indeed still has VERSION="1.3.0" on line 93
[18:58:49] <jinsun__> does that external thing exist anywhere now? hard to search
[18:59:03] <Wooble> (which is somewhat odd since that line's been there for 12 years and there have been a ton of changes to the code.
[18:59:18] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:59:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:59:39] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:b018:fec8:a7e4:5428) (Remote host closed the connection)
[18:59:48] <hrob> lol,  coders are afraid of changing existing things, but happy to add things
[18:59:58] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:b018:fec8:a7e4:5428)
[18:59:58] *** Quits: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it) (Read error: Connection reset by peer)
[19:00:27] *** Joins: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it)
[19:00:57] <Wooble> "we'll fix this bug if we ever change the version number, which we won't do no matter how many other bugs are fixed"
[19:01:19] <jinsun__> :D
[19:01:23] *** Joins: gusto (~Augustus@109.255.100.54)
[19:02:01] <KirkMcDonald> Yes, ElementTree was a third-party library that got pulled into the standard library in Python 2.5: https://docs.python.org/release/2.5/whatsnew/modules.html#SECTION0001420000000000000000
[19:02:36] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[19:02:41] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[19:03:02] <KirkMcDonald> Or perhaps that link should be: https://docs.python.org/3/whatsnew/2.5.html#the-elementtree-package
[19:03:21] *** Joins: kli (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[19:03:38] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[19:04:11] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:04:41] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:b018:fec8:a7e4:5428) (Ping timeout: 256 seconds)
[19:04:45] <Wooble> I don't get how ElementTree escaped the Great Python 3 Module Renaming
[19:05:11] <hrob> am I safe to assume that   dataclasses.replace( mydataclass_object )   is a shallow copy?
[19:05:13] *** Joins: rsx (~dummy@ppp-188-174-129-84.dynamic.mnet-online.de)
[19:05:47] <jinsun__> would be good to see the history of that package, I wanted to see the commit that added that warning, but the cpython commit is not very informative
[19:06:14] <KirkMcDonald> Wooble: It wasn't a very comprehensive renaming.
[19:06:27] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:07:24] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:b018:fec8:a7e4:5428)
[19:10:15] <Wooble> KirkMcDonald: well I mean they did get every single uppercase module directly in Lib/
[19:10:36] <Wooble> I guess doing it recursively would have been slightly more effort
[19:11:50] <Deneb> hrob: yes, have had that experience where sometime in articulating the problem or being prompted by discussion to articulate it the answer then comes to mind.
[19:11:56] *** Quits: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it) (Ping timeout: 252 seconds)
[19:14:16] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:15:08] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:15:20] <KirkMcDonald> It is still a little wild to me how inconsistent the Python standard library is about names.
[19:15:26] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:15:53] <mefistofeles> KirkMcDonald: I think it's because history, isn't it? But would you like to share a specific example? I'm curious about these things
[19:16:03] *** Parts: mojtaba (~mojtaba@142.59.165.199) ()
[19:16:31] <mefistofeles> oh well, other than ElementTree, I guess
[19:16:36] <KirkMcDonald> It is absolutely about history.
[19:16:49] <Deneb> I haven't yet figured out how to deal with this serial capture problem synchronously in a GUI that is inherently async. Someone pointed out the asyncio library yesterday but I'm still reading up and trying to figure out what it does and how it works.
[19:17:17] <KirkMcDonald> But, e.g. decimal.Decimal, fractions.Fraction, datetime.datetime
[19:17:22] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[19:17:35] <KirkMcDonald> Singular? Plural? Capitalized types? Lower-case types?
[19:18:45] <Wooble> look PEP 8 says consistency is a hobgoblin so it would be a violation to *not* have it like that. :)
[19:19:01] <KirkMcDonald> My favorite has got to be the collections module, which jumbles up capitalized and uncapitalized types in one place.
[19:19:30] *** Quits: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:19:53] <t4nk_freenode> hrob, SnoopJ, ... after I found, after making a small example prog, that the problem was with tkinter, and with kde-plasma; it still is, but I've tried wayland again and the tkinter problem is gone. plasma/x11 won't show any text with tkinter
[19:19:58] *** Joins: vanessa (~vanessa@103.160.128.7)
[19:20:16] <mefistofeles> KirkMcDonald: you have to remember that PEP8 are guidelines and specially for stdlib, but still it is not that strict
[19:20:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:20:43] <Wooble> "In particular: do not break backwards compatibility just to comply with this PEP!" -- proceed to rename a ton of stuff in py3 :)
[19:20:58] <KirkMcDonald> mefistofeles: Mostly it's an accumulation of history, a result of different people with different attitudes about these things (or whose attitudes changed over time) adding things over decades.
[19:21:06] <mefistofeles> Wooble: hah, that's true
[19:21:30] <Wooble> I mean to be fair your program was probably going to break anyway but still.
[19:22:01] <Wooble> (well, a good amount of tkinter code might just need the import fixed)
[19:22:07] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[19:23:03] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 250 seconds)
[19:23:22] <t4nk_freenode> hrob, still in wayland, I found that my troubles with flatcam still persist, but I'm getting more info here, most notably 'Failed to initialize EGL display 3001' That also gives me a better chance of solving the problem
[19:23:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:23:57] <t4nk_freenode> heh... so shiver me timbers.. ehhh tkinters
[19:24:04] <t4nk_freenode> that darned plasma ;)
[19:24:31] *** Quits: d0ku (~d0ku@178.43.19.180.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[19:26:19] *** Quits: palasso_ (~palasso@user/palasso) (Read error: Connection reset by peer)
[19:27:56] *** Joins: palasso (~palasso@user/palasso)
[19:28:43] *** Joins: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it)
[19:28:47] *** Joins: Barones (~Barones@user/Barones)
[19:30:10] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[19:30:11] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[19:30:13] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:30:25] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[19:30:37] *** Joins: bindu (~bindu@user/bindu)
[19:30:43] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[19:30:47] *** Joins: fef (~thedawn@user/thedawn)
[19:31:17] *** Joins: nunggu (~q@user/nunggu)
[19:31:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:32:03] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[19:32:33] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[19:32:34] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[19:33:37] *** Quits: remedan (~remedan@octo.cafe) (Ping timeout: 240 seconds)
[19:33:48] *** Joins: kts (~kts@103.73.237.82)
[19:34:00] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[19:34:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:36:14] *** Joins: fikran (~fikran@user/fikran)
[19:36:53] *** Joins: remedan (~remedan@octo.cafe)
[19:37:59] *** Quits: dirtwash (~dirtwash@2a01:4f8:c010:b7e6::1) (Changing host)
[19:37:59] *** Joins: dirtwash (~dirtwash@user/dirtwash)
[19:39:47] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d)
[19:40:02] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[19:40:46] *** Quits: bluedust (~bluedust@81.92.206.10) (Remote host closed the connection)
[19:41:11] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:42:26] <callq> Hey so PyCharm by default uses this kind of setup for main
[19:42:29] <callq> if __name__ == "__main__":
[19:42:43] <KirkMcDonald> A common idiom.
[19:42:50] <novapy> yup
[19:43:10] <callq> But it results in annoying "x shadows x from outer scope", so do you recommend I just do "def main():" and will that help this?
[19:43:24] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[19:43:31] <novapy> callq: yep
[19:43:32] <callq> Or should all the variables of my functions use different names...
[19:44:00] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:2d1a:1acb:f1e6:80e4)
[19:44:00] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:2d1a:1acb:f1e6:80e4) (Changing host)
[19:44:00] *** Joins: skapata (~Skapata@user/skapata)
[19:44:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:44:08] <novapy> callq: You should just define the main process of your program in main()
[19:44:27] <KirkMcDonald> callq: Yes, I do recommend defining a main() function, and calling it from the `if __name__ == "__main__":` block.
[19:44:28] <callq> Okay, I will do def main():. should I remove this __main__ if statement then and simply call main() at the very end of my script?
[19:44:36] <callq> Oh there you go, answered.
[19:45:20] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[19:45:59] <novapy> Defining it in main() follows similarities from other languages: ie, c++ is also main() {}
[19:45:59] *** Joins: shad (~shad@user/shad)
[19:46:07] *** Joins: bloody (~bloody@user/bloody)
[19:46:39] <callq> scopes
[19:47:18] *** Joins: palasso (~palasso@user/palasso)
[19:47:22] <novapy> If I'm not mistaken, it also does some special thing with calling other stuff
[19:47:48] <KirkMcDonald> Mostly it just introduces a new scope.
[19:48:04] <KirkMcDonald> Which an if statement does not.
[19:48:41] *** karlnashville is now known as karl_AFK
[19:48:45] <novapy> Q: When using ipython, or python -i mode, how to I specify that the help() function should not use /usr/bin/less but instead use a different path
[19:50:00] *** Joins: upsala (~zcb@185.213.155.232)
[19:50:24] *** Joins: greasybyte (~greasybyt@pool-98-116-192-195.nycmny.fios.verizon.net)
[19:52:47] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[19:53:01] *** Joins: Guest48 (~Guest48@196.196.216.208)
[19:53:37] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[19:53:42] <ToAruShiroiNeko> Hello, I am trying to modify the individual strings in a pandas column such that I remove the 'foo/' in 'foo/bar'
[19:53:52] <KirkMcDonald> novapy: The PAGER environment variable should control it.
[19:54:06] *** Joins: paul424 (~tom@ip-5-172-235-255.multi.internet.cyfrowypolsat.pl)
[19:54:20] <Guest48> Питон для геев
[19:54:20] <novapy> KirkMcDonald: Ah thanks!
[19:54:32] <ToAruShiroiNeko> I tried df['col'] = df['col'].str.replace but my regex is not working.
[19:54:57] <ToAruShiroiNeko> basically I only want the bar part to remain, the only thing consistent is the /
[19:55:26] <Wooble> callq: for one thing, if you keep the if __name__ block, pycharm will helpfully add a Run green triangle to that line. It also makes your script importable without running it.
[19:55:30] <KirkMcDonald> ToAruShiroiNeko: I don't know about pandas, but if that's the builtin str.replace method, that does not use a regular expression.
[19:56:04] <han-solo> novapy: i think, it can be set using `PAGER` env
[19:56:30] <novapy> han-solo: I got it. Thanks!
[19:56:32] <han-solo> callq: https://docs.python.org/3/library/__main__.html#idiomatic-usage
[19:56:57] <ToAruShiroiNeko> https://pandas.pydata.org/docs/reference/api/pandas.Series.str.replace.html
[19:57:02] <han-solo> er, already answered
[19:57:18] *** Quits: Guest48 (~Guest48@196.196.216.208) (Quit: Client closed)
[19:57:31] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:8a15:fe0a:f586:b560) (Quit: pvergain)
[19:57:33] <gambl0re> hey any postgrs users in here can help me out
[19:57:39] *** Quits: sus (zero@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[19:58:13] *** Joins: sus (zero@user/zeromomentum)
[19:58:41] <Wooble> gambl0re: as always, best to just ask your real question
[19:58:53] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[19:59:32] <jinsun__> ToAruShiroiNeko: .str.extract might be better, for example `pd.Series(["foo/bar"]).str.extract(".*/(.*)")`
[20:01:25] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[20:01:33] *** Quits: mat001_ (~mat001@213.143.69.121) (Remote host closed the connection)
[20:03:25] *** Joins: dtux (~dtux@2601:646:8f00:3f2:ca4d:c18b:77e8:457)
[20:03:36] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[20:04:17] *** Joins: kts_ (~kts@103.73.237.158)
[20:04:45] *** Quits: kts (~kts@103.73.237.82) (Ping timeout: 256 seconds)
[20:05:28] <ToAruShiroiNeko> jinsun_ it did not work, by the way my slash is reversed so it is \
[20:07:15] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:07:30] *** Quits: revolve (~u0_a227@82-132-245-69.dab.02.net) (Ping timeout: 250 seconds)
[20:07:38] <jinsun__> ToAruShiroiNeko: `pd.Series(["foo\\bar"]).str.extract(r".*\\(.*)")`
[20:07:49] *** Parts: rah (rah@verain.settrans.net) ()
[20:08:14] <jinsun__> the r before the string is important
[20:09:01] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[20:09:09] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:11:07] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[20:12:07] *** Quits: Linux77 (~LinuMage@186.233.179.225) (Ping timeout: 256 seconds)
[20:12:08] *** Joins: aniketgm (~aniketgm@49.36.60.105)
[20:13:51] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[20:14:01] *** Quits: rsx (~dummy@ppp-188-174-129-84.dynamic.mnet-online.de) (Quit: rsx)
[20:15:14] *** Joins: bluedust (~bluedust@59.89.212.127)
[20:15:17] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[20:15:34] *** Joins: mat001 (~mat001@213.143.69.121)
[20:16:05] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:16:54] <hrob> dataclasses.dataclass is amaaaazing!
[20:17:31] *** Joins: maryo87 (~Maryo@user/maryo)
[20:17:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 250 seconds)
[20:17:55] <hrob> dont have to bother with writing __init__ or __repr__   :)       Im however wondering it doesnt seem to work for me to add @dataclass  to a baseclass hoping the children will behave as such
[20:17:55] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:18:03] *** Joins: duuude (~user@user/duuude)
[20:18:12] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[20:18:36] <jinsun__> you have to decorate the child classes too
[20:19:04] <hrob> jinsun__ is there any point in decorating the baseclass then ?
[20:19:21] *** Quits: korros (korros@2600:3c03::f03c:92ff:febf:689a) (Quit: WeeChat 2.8)
[20:19:26] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:19:30] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[20:20:16] *** Joins: mat001 (~mat001@72.28.108.216)
[20:20:21] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 245 seconds)
[20:20:22] <jinsun__> yes decorate both base and child (unless you want to manually do the work of dataclass in the base)
[20:20:23] <ToAruShiroiNeko> jinsun_ thank you! It did the trick!
[20:20:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:21:02] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[20:21:03] *** Joins: nitro25 (~nitro25@137.21.80.5)
[20:21:29] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:21:47] <hrob> jinsun__  wonderful,  works even for me to add     def copy(self): return dataclass.replace(self)       on the baseclass,   but yeah so I just decorate all :)
[20:21:47] <gambl0re> Wooble: yea just dont want to get kkicked/banned for asking unrelated question
[20:22:28] <hrob> jinsun__   I took it that  dataclass.replace()   is essentially shallow copy,  at least works great
[20:22:44] <hrob> sorry   dataclasses.replace()
[20:23:08] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[20:23:19] <jinsun__> yup it doesn't do deepcopy
[20:23:21] <hrob> happy this stuff is in stdlib... and sqlalchemy doesnt complain about it
[20:23:32] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[20:24:35] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:24:53] <SnoopJ> gambl0re, if the question is about Python, it is on-topic in this channel.
[20:25:27] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 250 seconds)
[20:25:48] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[20:26:38] *** Quits: kostkon (~androirc@2a02:587:a116:f212:49a:579d:8418:895c) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:26:43] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 268 seconds)
[20:26:50] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[20:26:57] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:27:12] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:27:23] <InPhase> SnoopJ: Ok.  How many Python programmers does it take to change a lightbulb?
[20:27:48] <SnoopJ> InPhase, I'll bite: how many?
[20:27:59] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[20:28:01] <InPhase> ...  Two.  One to write the bulbchange library, and the second to import it and use it.
[20:28:32] <InPhase> And if I keep practicing, the next Python joke might also be funny.  :)
[20:28:38] <grym> ssssss
[20:28:40] <grym> sssssssssss
[20:29:17] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:30:01] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 250 seconds)
[20:30:20] *** Joins: wac (~wac@user/wac)
[20:30:24] <mefistofeles> three for th guy porting it to C++, if you want it to be efficient
[20:30:28] <mefistofeles> let the flame war begin
[20:30:42] <hrob> InPhase  the one the comes more to mind is,  "None, it's a hardware problem"
[20:30:44] <RingtailedFox> yeah.. so, pip now works just fine... but IDLE keeps bitching about C:\Users\User Profile\.idlerc\recent-files.list not being writable... when it very much *is*... i wonder is this due to my user account having a space in the name?
[20:30:45] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[20:31:09] <mefistofeles> hrob: oh, that's a good one haha!
[20:31:13] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[20:31:16] <InPhase> mefistofeles: But pypy will soon support indoor lighting and then that will all be irrelevant.
[20:31:20] <mefistofeles> haha
[20:31:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[20:31:59] <grym> mefistofeles: itym rust ofc
[20:32:11] <grym> RingtailedFox: probably, yes.
[20:32:15] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:32:21] <RingtailedFox> it doesn't whine when i run idle as admin thoguh...
[20:32:38] *** Quits: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[20:32:42] <RingtailedFox> well, ic an't exactly change the folder name for my user account... not without massively screwing up windows anyway lol
[20:33:00] *** Joins: Masterphi (~textual@user/masterphi)
[20:33:43] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[20:34:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[20:34:09] *** climax is now known as gentooclimax
[20:34:26] *** Quits: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it) (Ping timeout: 256 seconds)
[20:34:47] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[20:36:36] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[20:37:16] *** Quits: jay-m1261 (~jay-m@129.0.99.22) (Ping timeout: 256 seconds)
[20:37:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[20:37:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:38:15] *** Joins: duuude (~user@user/duuude)
[20:38:39] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Remote host closed the connection)
[20:38:41] *** Joins: zoooz (~zoooz@204.43.236.168)
[20:39:01] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[20:39:01] *** Joins: Gurkenglas_ (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[20:39:06] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 260 seconds)
[20:40:02] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[20:40:07] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[20:40:36] <callq> So, I have a 'numpy.float64'. Can I use this the same way I would use any other float? I want to truncate the value and convert it to a string.
[20:40:45] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[20:40:49] *** Quits: dtux (~dtux@2601:646:8f00:3f2:ca4d:c18b:77e8:457) (Quit: dtux)
[20:41:17] <zumba_addict> Good morning all. We're trying to rebuild an old project. However, we can't figure out what is causing the failure. Can someone please give us a hint what this error is? Thanks in advance! https://bpa.st/LDHA
[20:41:35] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 256 seconds)
[20:41:35] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10e9:d728:9d88:f54e:72ef:9b28) (Read error: Connection reset by peer)
[20:41:44] *** Quits: jay-m126 (~jay-m@129.0.99.22) (Ping timeout: 250 seconds)
[20:41:47] <SnoopJ> callq, most functionality should work as if you had an instance of float() yes
[20:41:51] *** Joins: ntropy (~ntropy@90-227-49-94-no88.tbcn.telia.com)
[20:41:56] <callq> ok
[20:41:56] *** Joins: humbertowoody (~humbertow@187.202.255.156)
[20:42:00] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[20:42:09] *** Quits: jay-m126_ (~jay-m@129.0.99.22) (Ping timeout: 256 seconds)
[20:42:31] <KirkMcDonald> If nothing else, you can just pass it to float() to get an actual float with the same value.
[20:42:39] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[20:43:10] <KirkMcDonald> But you shouldn't need to.
[20:43:17] *** Quits: Averna (Averna@gateway/vpn/protonvpn/averna) (Ping timeout: 256 seconds)
[20:43:18] <SnoopJ> yea, float64 should be convertible just fine. note that this would be dangerous if you had a float128
[20:43:18] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[20:43:31] <KirkMcDonald> String formatting, including f-strings, should work just fine with a numpy.float64.
[20:43:43] <SnoopJ> +1
[20:45:58] *** Quits: Gurkenglas_ (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Quit: Leaving)
[20:47:13] *** Quits: ntropy (~ntropy@90-227-49-94-no88.tbcn.telia.com) (Read error: Connection reset by peer)
[20:47:32] *** Joins: ntropy (~ntropy@146.70.21.20)
[20:47:43] *** Joins: palasso (~palasso@user/palasso)
[20:49:48] *** Joins: jancoow (~jancoow@user/jancoow)
[20:50:03] <zumba_addict> I searched our project but I didn't find the code `raise InvalidVersion(f"Invalid version: '{version}'")`
[20:50:08] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[20:50:29] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[20:52:12] <zoooz> can anyone help me with this?
[20:52:12] <zoooz> https://www.hackinscience.org/exercises/print-even-numbers
[20:52:53] <SnoopJ> zumba_addict, the error isn't being raised in your project, it's coming from the `packaging` library (by way of `setuptools`). As the error says, "26eacd---Static_Analysis" is an invalid version. See PEP 440 for a description of what is valid.
[20:53:26] <zumba_addict> oh
[20:53:29] <jinsun__> by the way of setuptools_scm
[20:53:37] <zoooz> https://www.hackinscience.org/exercises/print-even-numbers
[20:53:42] <jinsun__> so you have a weird git tag maybe
[20:53:42] *** karl_AFK is now known as karlnashville
[20:53:46] <zumba_addict> let me check PEP 440
[20:53:48] *** Joins: Moosadee (~Moosadee@198.248.96.43)
[20:54:25] <SnoopJ> yes sorry setuptools_scm
[20:54:39] <zumba_addict> where did the value 26eacd---Static_Analysis come from?
[20:54:55] <SnoopJ> have you checked your setup.py?
[20:54:56] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:55:04] *** Quits: Masterphi (~textual@user/masterphi) (Quit: Masterphi)
[20:55:04] <SnoopJ> (I don't have you code in front of me)
[20:55:07] <SnoopJ> your*
[20:55:20] <zumba_addict> no, let me see. This code was built by another developer long time ago. One sec
[20:55:29] *** Joins: crashrep (~crashrep@user/crashrep)
[20:55:57] <zumba_addict> here it is - https://bpa.st/47XA
[20:56:15] <zumba_addict> it is there, line 13. What should i do?
[20:56:26] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:7cc:70dd:bb0:247b) (Ping timeout: 252 seconds)
[20:56:45] <jinsun__> setuptools_scm will get the version from the latest git tag (or whatever version control thing you use)
[20:56:51] <jinsun__> so check your tags
[20:57:08] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[20:57:13] <zumba_addict> so is setuptools_scm built internally?
[20:57:19] <zumba_addict> i've never seen this before
[20:57:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[20:57:27] <SnoopJ> and see also the setuptools_scm docs that describe how to configure the `use_scm_version` feature
[20:57:33] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 268 seconds)
[20:57:37] <zumba_addict> k
[20:57:40] <jinsun__> https://pypi.org/project/setuptools-scm/
[20:57:57] <zumba_addict> oh it's a third party
[20:58:23] *** Joins: Masterphi (~Masterphi@user/masterphi)
[20:58:26] <SnoopJ> third-ish party, it's a PyPA library
[20:58:49] *** Quits: alius (~alius@2001:861:4444:49c0:e87f:e40d:4365:7d5d) (Quit: Leaving)
[20:59:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[20:59:23] <zumba_addict> I see we have use_scm_version=True in the setup.py
[21:00:01] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 268 seconds)
[21:00:15] *** Joins: hyiltiz (~quassel@31.220.5.250)
[21:00:18] <SnoopJ> right, the version of the package is being provided by setuptools_scm and as jinsun__ suggests it's probably something to do with your tags causing the version to come out all lumpy in a non-PEP 440 format. You'll want to help it along and transform it to something that is compliant
[21:00:22] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[21:00:56] <zumba_addict> i'm confused about the tags. Tags of which project?
[21:01:04] <jinsun__> you can export SETUPTOOLS_SCM_PRETEND_VERSION=1.2.3 to prevent it looking for the tags
[21:01:19] <jinsun__> tags of your project
[21:01:23] <zumba_addict> got it
[21:01:31] <zumba_addict> let me check tags in this project in git
[21:01:31] <novapy> is there a python alternative ffmpeg?
[21:01:32] *** Joins: Alexer (~alexer@alexer.net)
[21:01:34] *** Joins: et_ (~et@user/et)
[21:01:42] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[21:01:50] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[21:01:57] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[21:02:02] *** et_ is now known as et
[21:02:14] <SnoopJ> zumba_addict, setuptools_scm is a package that helps you manage package versions using the tags in your source control management (SCM) software, like git. You should read its documentation to understand its role in your project here.
[21:02:25] <SnoopJ> novapy, there are Python bindings *to* ffmpeg, does that count?
[21:02:38] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:02:40] <zumba_addict> I see the tag now in the git project
[21:02:57] <zumba_addict> that's why it was failing
[21:03:01] <zumba_addict> i'll add a new one
[21:03:07] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:03:12] <novapy> SnoopJ: No, I'm looking for a something to replace what ffmpeg does
[21:03:27] <novapy> I cannot get ffmpeg on my system
[21:03:32] *** Joins: fanis30 (~anon@adsl-236.37.6.163.tellas.gr)
[21:03:37] <SnoopJ> novapy, ffmpeg does about a trillion things. Can you be more specific?
[21:03:39] <han-solo> i doubt there's a ffmpeg written in python
[21:04:01] <novapy> any video format fixing stuff though?
[21:04:27] <Wooble> why can't you get ffmpeg?
[21:04:35] <zumba_addict> Thank you SnoopJ and jinsun_! I'm running a new build now :)
[21:04:40] <zumba_addict> I created a new tag
[21:04:47] <SnoopJ> There are bindings to gstreamer, but gstreamer is substantially more complex.
[21:04:47] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:05:00] *** Joins: Sadale (~Sadale@user/sadale)
[21:05:05] *** Quits: ubert1 (~Thunderbi@p200300ecdf09945c0ca179bca462169c.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:05:05] <zoooz> https://www.hackinscience.org/exercises/print-even-numbers
[21:05:12] <zoooz> what is wrong with my code?
[21:05:16] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:05:18] <zoooz> def print_even_numbers (start, stop):
[21:05:19] <zoooz>         for i in range(start, stop):
[21:05:19] <zoooz>      if i % 2 == 0:
[21:05:20] <zoooz>         print(i)
[21:05:20] <zoooz> print_even_numbers(0,100)
[21:05:37] <SnoopJ> zoooz, please don't paste code in the channel, use https://bpa.st
[21:05:39] <han-solo> https://bpa.st/+python # for future
[21:05:39] <ammar2> PyAV has bindings to ffmpeg and the wheels include a compiled ffmpeg afak
[21:05:50] <SnoopJ> ammar2, neat
[21:05:52] <zumba_addict> so weird, it's still using the old tag that was invalid
[21:05:53] <zoooz> k sorry
[21:06:19] <zoooz> like this?
[21:06:20] <zoooz> def print_even_numbers (start, stop):
[21:06:20] <zoooz>         for i in range(start, stop):
[21:06:21] <zoooz>      if i % 2 == 0:
[21:06:21] <zoooz>         print(i)
[21:06:22] <zoooz> print_even_numbers(0,100)
[21:06:22] *** litharge sets mode: +q *!*@204.43.236.168
[21:06:32] <novapy> Wooble: can't compile or install binary
[21:06:35] <Wooble> zoooz: your code isn't supposed to do the last part.
[21:06:53] *** litharge sets mode: -q *!*@204.43.236.168
[21:06:58] <zoooz> what do you mean
[21:07:12] <Wooble> zoooz: it says write a function, not write a function and then call it.
[21:07:29] <zoooz> so take out the print part?
[21:07:55] <Wooble> delete print_even_numbers(0,100)
[21:08:04] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[21:08:09] <zoooz> I did it didn't work
[21:08:29] <Wooble> works for me.
[21:08:55] <zoooz> can you show your code to me?
[21:09:00] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[21:09:21] <novapy> zoooz: https://bpaste.net/3TBA
[21:09:21] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:09:42] <zerosum> hey all, so I have this dictionary with the following ifelse statement https://bpa.st/KATA but for whatever reason it's not working, my description at the end end ups being None instead of the string "Free" what am i doing wrong?
[21:10:20] <zoooz> It odesnt' work for me
[21:10:25] *** Joins: magla (~gelignite@55d4daf5.access.ecotel.net)
[21:10:25] <Wooble> it's your code https://imgur.com/a/79PDw82
[21:10:34] *** Joins: waynew (~wayne@user/waynew)
[21:10:38] <novapy> zoooz: did you try what I pasted?
[21:10:48] <zoooz> yes
[21:10:52] <zoooz> it didn't work
[21:10:57] <novapy> wym?
[21:11:11] *** Joins: Sadale (~Sadale@user/sadale)
[21:11:13] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:11:16] <novapy> what about it did not work?
[21:11:30] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[21:11:47] <zoooz> it says import error
[21:11:53] *** Joins: redbear (~redbear@12.246.229.170)
[21:11:57] *** Quits: paul424 (~tom@ip-5-172-235-255.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[21:12:05] *** Joins: msalvatore (~msalvator@c-174-60-145-36.hsd1.pa.comcast.net)
[21:12:09] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:12:23] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[21:12:45] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[21:12:47] <Wooble> can you bpaste the actual error message?
[21:12:52] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:13:07] <Wooble> you shouldn't be importing anything.
[21:13:28] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[21:13:28] <TML> zoooz: you should only have 4 lines of code total
[21:13:42] *** karlnashville is now known as karl_AFK
[21:13:43] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[21:13:53] <redbear> Hi all, I need help with using variables to write to a column b of a spreadsheet. I wrote a script to find the next open cell in column B and store that in variable cellnum, and I have another variable called samplecount. I need to write cells in some way to sheet[Bcellnum:Bcellnum+samplecount] but don't know how to make this work, can anyone
[21:13:53] <redbear> please help?
[21:13:57] <Wooble> oddly, even if you *do* call print_even_numbers(0,100) on line 5, it still accepts it.
[21:13:59] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[21:14:01] *** Quits: Alabama[m] (~ingfix-2m@2001:470:69fc:105::1:6ca2) (Changing host)
[21:14:01] *** Joins: Alabama[m] (~ingfix-2m@wikipedia/-Alabama-)
[21:14:25] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[21:14:35] *** Joins: CoolerX (~CoolerX@user/coolerx)
[21:14:45] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:15:14] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:15:41] <TML> redbear: it's been a long time since I manipulated a spreadsheet with python, but post what you have at https://bpa.st/+python and I can take a look, see if I can knock the rust off that skillset enough to assist you
[21:15:42] <han-solo> zerosum: could you make reproducible code snippet ? it's hard to see from what you have. Maybe the `if` condition already satified, we can't see the `if` condition
[21:16:04] <msalvatore> Could someone please explain why this descriptor example doesn't result in infinite recursion? https://docs.python.org/3/howto/descriptor.html?highlight=descriptor#complete-practical-example
[21:16:19] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:16:21] <zoooz> wooble: i had an indentation errror
[21:16:28] <TML> zoooz: You could also do it in just 2 lines: the def line, and `[print(i) for i in range(start, stop) if i%2==0]`
[21:16:46] <zoooz> what is the plus sign in python?
[21:17:03] <Wooble> addition?
[21:17:18] <zoooz> yes
[21:17:27] <zoooz> https://www.hackinscience.org/exercises/sum-of-even-numbers-below-100
[21:17:34] <Wooble> (depends on the types of the operands, though). +, same as everwhere else.
[21:17:34] <han-solo> msalvatore: may i ask why you think it would result in infinite recursion ?
[21:17:37] *** Joins: Sadale (~Sadale@user/sadale)
[21:17:42] *** Quits: ntropy (~ntropy@146.70.21.20) (Ping timeout: 250 seconds)
[21:17:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:18:01] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10e9:d728:9d88:f54e:72ef:9b28)
[21:18:08] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[21:18:42] * SnoopJ just noticed that Raymond Hettinger's email in that guide is @rcn.com
[21:18:42] <Wooble> zoooz: although sum() is a builtin function too
[21:19:00] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 250 seconds)
[21:19:11] <zoooz> ok
[21:19:24] *** Joins: paul424 (~tom@ip-5-172-235-255.multi.internet.cyfrowypolsat.pl)
[21:19:26] <TML> zoooz: you could look at my previous line of code and combine that with sum to get a simple solution there
[21:19:49] <msalvatore> han-solo: `__set__()` gets called when `__init__()` attempts to set `self.name`. `__set__()`, then calls `setattr()`, which according to the documentation, "setattr(x, 'foobar', 123) is equivalent to x.foobar = 123." Why doesn't the assignment by `setattr()` cause `__set__()` to be invoked again?
[21:19:52] <Wooble> SnoopJ: doesn't even seem to be a thing anymore
[21:20:17] *** Joins: smrtz (~smrtz@user/smrtz)
[21:20:31] <SnoopJ> Wooble, yea idk what that's about, they switched domains sometime in the last few months
[21:21:22] <SnoopJ> ...but all the emails still say rcn.com ¯\_(ツ)_/¯
[21:21:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:21:53] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[21:22:09] <mike18> hi is there a way to call the func without recreating a new dataframe? df[metrics] = df[metrics].apply(pd.to_numeric, errors="coerce")
[21:22:18] *** Joins: nunggu (~q@user/nunggu)
[21:22:35] *** karl_AFK is now known as karlnashville
[21:22:41] *** Quits: Qriist (~Qriist@c-68-33-19-83.hsd1.dc.comcast.net) (Remote host closed the connection)
[21:23:01] <redbear> Hi all, I need help with using variables to write to a column b of a spreadsheet. I wrote a script to find the next open cell in column B and store that in variable cellnum, and I have another variable called samplecount. I need to write cells in some way to sheet[Bcellnum:Bcellnum+samplecount] but don't know how to make this work, can anyone
[21:23:01] <redbear> please help?
[21:23:11] <TML> redbear: it's been a long time since I manipulated a spreadsheet with python, but post what you have at https://bpa.st/+python and I can take a look, see if I can knock the rust off that skillset enough to assist you
[21:23:21] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:23:38] <han-solo> msalvatore: you are referring to https://docs.python.org/3/howto/descriptor.html?highlight=descriptor#practical-application right ?
[21:23:58] <msalvatore> han-solo: Yep!
[21:24:09] <SnoopJ> mike18, no, apply() will always create a new DataFrame or Series object (although I'm not certain about whether you might get views over some of that data)
[21:24:14] <SnoopJ> it's one of the many reasons apply() is terrible
[21:24:31] *** Joins: d00gy (~tonberry@user/d00gy)
[21:24:33] <mike18> SnoopJ: any other way to avoid it?
[21:24:42] *** Quits: fanis30 (~anon@adsl-236.37.6.163.tellas.gr) (Quit: WeeChat 3.4)
[21:24:55] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[21:25:04] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[21:25:42] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:26:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:26:11] *** Joins: fef (~thedawn@user/thedawn)
[21:26:12] *** Quits: zoooz (~zoooz@204.43.236.168) (Quit: Client closed)
[21:26:15] <redbear> TML I don't really have anything bc I don't know how to write it
[21:26:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:26:26] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:26:46] <TML> redbear: You said you "wrote a script to find the next open cell in column B"
[21:26:48] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[21:26:49] <TML> redbear: Paste that
[21:26:52] <jinsun__> msalvatore: it is doing setattr for _name right? not name, and _name is not a descriptor
[21:26:56] <SnoopJ> mike18, not really, you do have to make a new Series object if you want to change the dtype
[21:27:14] <vbgunz> hello world, how exactly should I annotate a function that returns a dictionary with strings for keys, and a custom object for the values? Is it any of the following? -> {str: customObject} OR dict[str, customObj] ...
[21:27:14] <SnoopJ> which is all that apply() should be making here if I'm not mistaken
[21:27:29] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:27:29] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 256 seconds)
[21:27:43] <msalvatore> jinsun__: Ah! Yes, I see. Thank you.
[21:27:44] <zerosum> han-solo gotta jump on a call but yes you're right, will paste full code in a bit
[21:28:12] <redbear> TML https://bpa.st/TBUA
[21:28:16] *** Quits: sleepingforest (~sleepingf@pool-108-39-234-208.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[21:28:23] *** Joins: dtux (~dtux@2601:646:8f00:3f2:ca4d:c18b:77e8:457)
[21:28:24] <han-solo> msalvatore: it is not setting the `name` of the component, but a `_private_name` of the descriptor
[21:28:31] <The-Compiler> vbgunz: dict[str, customObj] indeed (will need "from __future__ import annotations" for Python 3.7/3.8)
[21:28:46] <SnoopJ> mike18, `df[metrics] = df[metrics].astype(float, errors='coerce')` might avoid some of the waste of apply() by getting rid of some calls, though.
[21:28:54] <SnoopJ> (or whatever dtype you want)
[21:29:04] <msalvatore> Thanks, han-solo.
[21:29:12] <The-Compiler> vbgunz: the former would define a new dictionary literal with types as key/values, but that's not a valid annotation
[21:29:24] *** Quits: MajorBiscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[21:29:41] <SnoopJ> mike18, hmm, or maybe not, looks like astype() doesn't take 'coerce', but there might be a way around that depending on your actual data
[21:29:51] <zerosum> han-solo here it is: https://bpa.st/PWBA
[21:30:03] <han-solo> msalvatore: so it is not doing `self.name` there but `self.f'_{name}'` kinda
[21:30:13] *** Quits: mbeierl (~mbeierl@canonical/mbeierl) (Ping timeout: 240 seconds)
[21:30:39] <msalvatore> Yeah, I see it. I'm generally having some difficulties with the mechanics of class variables, so I was doubly confused. But I get what's going on in this instance.
[21:30:53] *** Quits: callq (~callq@2409:4062:2d1d:d8fc:dd53:71b9:2283:727d) (Quit: callq)
[21:30:54] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 260 seconds)
[21:31:13] <vbgunz> The-Compiler: thanks. I'm thinking my PyCharm is just acting up. I can always get either a key or the value but not both with exactly -> dict[str, customObject] but I'll stick with the annotation, thanks again <3
[21:31:21] <msalvatore> I thought I understood class variables until I came across PEP 526 (https://www.python.org/dev/peps/pep-0526/#class-and-instance-variable-annotations). I would have expected `captain` and `damage` to be class variables, but, I guess, because they're annotated they're instance variables? It's as clear as mud to me. Any help is appreciated.
[21:32:29] <msalvatore> Or is it just that because they're immutable, they're safe to use this way?
[21:32:43] <jinsun__> msalvatore: that is guidance for how type checkers should treat them, not saying what happens at runtime
[21:32:46] <msalvatore> Assignments result in self.captain referencing a different object?
[21:34:11] <The-Compiler> msalvatore: https://mypy.readthedocs.io/en/stable/class_basics.html might be a better overview
[21:34:24] *** Joins: JordiGH (~jordi@redsquarecaviar.com)
[21:34:24] *** Quits: JordiGH (~jordi@redsquarecaviar.com) (Changing host)
[21:34:24] *** Joins: JordiGH (~jordi@user/jordigh)
[21:34:28] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:34:39] *** Joins: d1cor (~diego@179.63.242.120)
[21:35:25] *** Quits: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:6e8:39d8:3639:31ff) (Quit: Leaving)
[21:35:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:35:35] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:35:39] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10e9:d728:9d88:f54e:72ef:9b28) (Ping timeout: 250 seconds)
[21:36:07] <msalvatore> jinsun__: Interesting. This seems weird to me. You're taking something that is one thing and pretending it's not. I'll read The-Compiler's link and maybe that will give me a more informed opinion.
[21:36:32] *** Quits: theo (~theo@user/theo) (Ping timeout: 240 seconds)
[21:36:39] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:36:48] <msalvatore> But then you have a special annotation to say, "This thing is actually a class variable." It just seems weird to need a special annotation to indicate that something is what it is.
[21:37:12] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Remote host closed the connection)
[21:37:16] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[21:37:32] <msalvatore> I feel like I'm missing some fundamental concept.
[21:37:42] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Remote host closed the connection)
[21:37:44] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[21:37:44] *** Joins: menace (~someone@user/menace)
[21:37:56] *** menace is now known as Deknos
[21:38:02] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[21:38:09] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[21:39:02] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[21:39:04] <jinsun__> at runtime if you assigned to the variable inside class definition it is a class attribute, but it can be accessed from the instance too
[21:39:06] *** Quits: duuude (~user@user/duuude) (Ping timeout: 245 seconds)
[21:39:16] <TML> msalvatore: You don't have to have any special annotation to say "This thing is actually a class variable."
[21:39:18] <han-solo> zerosum: wouldn't `elif dict_item_x["site"] == "Free" or dict_item_x["site"] == "unknown" and dict_item_x["comments"] is None:` in line 51 satisfies the condition ? so hence it is setting `ip_v4_dict["description"] = dict_item_x["description"]` which is `None` ?
[21:39:34] <jinsun__> msalvatore: but if you annotate it as ClassVar then type checkers won't allow you to acces it from the instance
[21:39:43] *** Joins: Telvana (~capo@user/telvana)
[21:39:46] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:40:43] *** Joins: vlas (~vlas@109.86.229.110)
[21:41:02] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[21:41:10] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[21:41:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:41:23] *** Joins: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net)
[21:41:25] <TML> msalvatore: I don't know where you got that idea, but you don't have to annotate class variables in Python. Now, if you CHOOSE to do so, as jinsun__ points out, that can offer useful signals to tools other than Python itself, such as a type checker
[21:41:29] *** Joins: naranja (~orange@user/orangeboxcutter)
[21:41:45] *** Joins: emf (~emf@162.218.217.186)
[21:42:54] *** karlnashville is now known as karl_AFK
[21:43:11] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d) (Ping timeout: 252 seconds)
[21:43:22] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[21:43:29] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[21:43:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:44:02] *** Quits: vlas (~vlas@109.86.229.110) (Client Quit)
[21:44:43] <msalvatore> TML: I realize you're not forced to annotate them.
[21:45:35] *** Joins: fikran (~fikran@user/fikran)
[21:45:49] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[21:46:24] *** Quits: emf (~emf@162.218.217.186) (Ping timeout: 256 seconds)
[21:46:46] *** Joins: emf (~emf@2620:10d:c090:400::5:b471)
[21:46:47] *** Quits: redbear (~redbear@12.246.229.170) (Quit: Client closed)
[21:46:49] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:46:50] <msalvatore> But annotations generally tell you what is allowed, not what's disallowed. I don't write `def fn(a: not object, not str, not float...)` in order to try and express that `a` is allowed to be an int. If the rational is that you mark something as ClassVar so the type checker disallows it's use from the instance, that seems backwards.
[21:46:58] <vbgunz> When you would like to annotate an object but without actually trying to import that object, you can use a string representation, no? e.g., dict[str, "requests.models.Response"] ... that should work? OR should I just import requests and do dict[str, requests.models.Response] ... the second example works **but** I don't like the idea of litering the namespace :/
[21:47:13] *** Quits: bluedust (~bluedust@59.89.212.127) (Remote host closed the connection)
[21:47:26] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[21:47:39] *** Quits: spetrosi (~spetrosi@ip-86-49-242-134.net.upcbroadband.cz) (Quit: Leaving)
[21:48:01] <SnoopJ> vbgunz, it seems weird to call it litter if you're actually using those objects to annotate
[21:48:07] <jinsun__> msalvatore: the annotation is there just so that you can prevent youself from making mistakes like assigning to an attribute and overriding the class attibute, when you didn't want to
[21:48:09] <han-solo> i don't know why class var's can't be accessed by instance ?
[21:48:18] <han-solo> ah, assigning
[21:48:25] <vbgunz> yeah but just for annotating
[21:48:35] <SnoopJ> so what?
[21:48:38] <msalvatore> TML, jinsun__: I think the key takeaway is that PEP526 doesn't specify runtime behavior, just the typechecker's behavior.
[21:48:42] <msalvatore> Thank you!
[21:50:10] *** Joins: califax- (~califax@user/califx)
[21:50:19] <msalvatore> jinsun__: I'm just arguing that the default behavior should be for the type checker to prevent those mistakes, and I can annotate something as an InstanceVar if I want to allow access from the instance. But this is a fruitless debate; I'm not going to propose changes to the PEP. It works how it works and anything else is my opinion.
[21:50:30] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[21:50:32] *** karl_AFK is now known as karlnashville
[21:50:33] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:51:14] *** califax- is now known as califax
[21:51:20] <jinsun__> it would be annoying for pydantic if that was the default behavior
[21:51:26] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[21:51:29] <TML> msalvatore: Unfortunately, that would make the type checker's behaviour the opposite of Python's behaviour
[21:51:51] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:51:59] <msalvatore> jinsun__: It would probably be annoying for developers, too, since it would probably mean a lot of extra typing.
[21:52:53] <jinsun__> you'd have to annotate everything as InstanceVar always, ClassVar is rarely required, so it is more convenient that that requires a explct annotation
[21:53:14] *** Joins: aslicedbanjo (~aslicedba@host86-148-108-224.range86-148.btcentralplus.com)
[21:53:31] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:53:40] *** Quits: ubert (~Thunderbi@141.98.252.232) (Ping timeout: 250 seconds)
[21:53:40] *** Joins: ub (~Thunderbi@141.98.252.252)
[21:53:57] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:54:32] <msalvatore> TML: Ok, I suppose that makes sense. I think the comments in the PEP threw me for a loop. it says "# instance variable with default". But it's not an instance variable, it's a class variable that may be accessed from the instance in accordance with python's default behavior. This is probably the source of a lot of my confusion.
[21:54:33] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:54:42] <vbgunz> SnoopJ: it feels wrong to import objects just for annotations. the module doesn't exactly need it, (it's using something else that returns request objects). I just want to get the annotations right without having to import them into the namespace. Also I run pipreqs and now it wants to add requests to my requirements. I'm not objecting if this is correct but it feels wrong
[21:54:58] *** Quits: Moosadee (~Moosadee@198.248.96.43) (Ping timeout: 250 seconds)
[21:55:14] <han-solo> i haven't done much typing, but `Final` ought to fix this ClassVar issue right ?
[21:55:17] *** Joins: d1rewolf[m] (~d1rewolfm@2001:470:69fc:105::1:74f2)
[21:55:23] <SnoopJ> vbgunz, it's correctly a requirement if you're importing it for the annotation, but I don't really understand the objection to doing that.
[21:55:33] <han-solo> i would like to access class attributes using instance as well
[21:55:59] *** ub is now known as ubert
[21:56:09] <jinsun__> han-solo: Final won't allow you to assign to it even from the class
[21:56:31] <han-solo> ah, Okay
[21:56:53] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:57:00] <jinsun__> but yeah Final is related to ClassVar, the pep says that if there is a Final annotated thing that is assigned to, it should be assumed a ClassVar too
[21:57:10] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:58:19] *** Joins: Naan (~Naan@user/naan)
[21:58:31] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[21:59:01] *** Joins: Algernon666 (~Algernon6@i19-lef01-t2-89-85-247-5.ft.lns.abo.bbox.fr)
[22:00:47] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[22:00:48] *** Joins: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:00:52] *** Joins: Guddu (~Guddu@59.88.90.189)
[22:01:05] *** Joins: ano (~ano@user/ano)
[22:01:13] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[22:01:27] <vbgunz> SnoopJ: my objection was I don't want to add objects to the namespace that aren't meant to be used from that namespace. my requirements depends on something else that depends on requests. let that other namespace depend on it, I just want to get my annotations correct
[22:01:34] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[22:01:48] <SnoopJ> vbgunz, my point is that annotation with the objects *is* use
[22:02:16] <jinsun__> vbgunz: you depend on requests too if you put that in the annotation
[22:02:48] <SnoopJ> type checkers might understand the stringy form, but if requests isn't actually a dependency, there's the possibility it won't be resolveable at check time if requests isn't present (which is probably a small edge, but...)
[22:02:58] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[22:03:01] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:04:06] <JayDoubleu> If I have a list with only two items in it. And I want to check if those to items are the same. Whats the best way to check for it ? I thought about just adding it to set() and checking if I only have one item
[22:04:14] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:04:18] <han-solo> jinsun__: i see
[22:04:46] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 268 seconds)
[22:05:11] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[22:06:46] <han-solo> `l[0] == l[1]` # ?
[22:06:50] *** Joins: jay-m126 (~jay-m@154.72.167.222)
[22:06:55] *** Joins: jay-m126_ (~jay-m@154.72.167.222)
[22:06:56] *** Joins: jay-m1261 (~jay-m@154.72.167.222)
[22:07:25] <vlt> JayDoubleu: I recently built a one armed bandit and that was exactly what I did. is_jackpot() was len(set(...)) == 1
[22:07:29] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[22:07:45] *** xavie is now known as xcombelle
[22:10:06] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[22:10:26] *** Quits: Batzy (~quassel@user/batzy) (Quit: No Ping reply in 180 seconds.)
[22:10:48] <jinsun__> with just 2 items though it is a bit unnecessary, simple equality check would be faster and work for non hashable stuff too
[22:11:19] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:11:52] *** Joins: Batzy (~quassel@user/batzy)
[22:11:57] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[22:12:03] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:13:00] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:13:36] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:13:38] *** Joins: pepper (~pepper@user/pepper)
[22:13:44] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:13:47] <SnoopJ> yea, set() is gonna be doing the equality check *anyway*
[22:13:50] *** Quits: Algernon666 (~Algernon6@i19-lef01-t2-89-85-247-5.ft.lns.abo.bbox.fr) (Ping timeout: 260 seconds)
[22:14:10] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[22:14:16] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[22:14:31] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[22:14:38] *** Quits: kli (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[22:15:09] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:16:06] <mike18> hi im using a thread pool in python - can i use timeit.default_timer() - start inside a thread in python or will it cause issues and what to avoid it?
[22:16:34] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:18:46] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[22:20:39] <bjs> mike18: timeit.default_timer is just time.perf_counter and yes you should be able to call perf_counter whenever you want
[22:21:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:22:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:23:48] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[22:24:00] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[22:24:42] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[22:25:04] *** Joins: luva2 (~luva@45.141.152.62)
[22:25:17] *** Quits: bixo (~bixo@190.200.253.127) (Ping timeout: 256 seconds)
[22:25:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[22:25:51] *** Quits: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[22:25:54] <mike18> bjs: can timeit.default_timer do acurate measurements of how long it takes to execute a function?
[22:25:59] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[22:26:22] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:26:25] *** Quits: luva (~luva@45.141.152.62) (Ping timeout: 256 seconds)
[22:26:25] *** luva2 is now known as luva
[22:27:37] *** Joins: greedom (~greedom@p200300de671a4800578aa727440fe621.dip0.t-ipconnect.de)
[22:29:20] *** Quits: aniketgm (~aniketgm@49.36.60.105) (Quit: leaving)
[22:29:34] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[22:29:38] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[22:29:45] *** Joins: mickey8 (~user@user/mickey)
[22:30:22] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:30:27] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:31:22] *** Joins: Moosadee (~Moosadee@198.248.96.43)
[22:31:33] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 250 seconds)
[22:31:44] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:32:02] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:32:16] <zumba_addict> How do I debug a package being reported by pip-compile that is not even in requirements.txt?
[22:32:40] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8574-14f1-3c77-025b.res6.spectrum.com) (Read error: Connection reset by peer)
[22:32:54] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48bb4dg3tj94j5l.ipv6.telus.net)
[22:32:55] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[22:33:49] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:34:14] <grym> zumba_addict: a transitive dependency?
[22:34:17] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:34:24] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 250 seconds)
[22:34:25] <Wooble> mike18: it's just a clock, so sure.
[22:34:44] <grym> what's to debug
[22:34:51] *** Quits: Moosadee (~Moosadee@198.248.96.43) (Remote host closed the connection)
[22:35:09] *** Joins: Moosadee (~Moosadee@198.248.96.43)
[22:35:29] *** Joins: luva9 (~luva@37.120.197.54)
[22:35:31] *** Joins: pycurious (~Adium@user/pycurious)
[22:35:40] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:36:25] <aphysically> I managed to break the treesitter parsing of pattern matching :D
[22:36:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:36:36] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5964:9756:f802:18c2)
[22:36:53] <aphysically> unfortunately it wasn't very much of an edge case, but I reported it
[22:37:22] <zumba_addict> hi grym. This is the error I see. Could not find a version that matches gosecrets==0.10.7,==0.10.8 (from artist==130->-r requirements.txt (line 5)) and line number 5 in requirements.txt points to artist. I am not sure if pip is pulling ours or if there is an external package named artist
[22:37:24] *** Quits: luva (~luva@45.141.152.62) (Ping timeout: 256 seconds)
[22:37:46] <zumba_addict> gosecrets is a package built my old employee
[22:37:49] <grym> zumba_addict: well, there's https://pypi.org/project/artist/
[22:37:52] <zumba_addict> my/by
[22:37:59] <zumba_addict> ah
[22:38:10] <grym> but that's almost certainly not the right package
[22:38:11] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[22:38:16] <zumba_addict> maybe that could be why it's not finding it
[22:38:28] <grym> probably
[22:38:29] <xheimlich> apparently joblib.Memory and joblib.Parallel can't whistle and skip rope at the same time?
[22:38:40] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[22:38:59] <grym> xheimlich: most multiprocessing things can't
[22:39:11] <aphysically> cpython looks like it's unblocked now
[22:39:15] <zumba_addict> oh, looks like artist is saying 130 above
[22:39:21] <zumba_addict> but i think icreated a 131
[22:39:32] <rvalue> I made this to solve 11 character worddle(https://hellowordl.net/?random) https://gist.github.com/rvalue/de0b651abbcabb9f92cd736a3f4e79fb . i would love to hear any improvements
[22:39:40] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[22:39:47] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[22:39:59] <xheimlich> I figured joblib.Memory could do its thing after the whole parallel loop is finished and its results gathered.
[22:40:05] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[22:40:20] *** Quits: Moosadee (~Moosadee@198.248.96.43) (Remote host closed the connection)
[22:40:33] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:40:34] *** Joins: Nutte35 (~Nutte@202.153.81.130)
[22:40:38] *** Joins: Moosadee (~Moosadee@198.248.96.42)
[22:41:11] *** Quits: luva9 (~luva@37.120.197.54) (Ping timeout: 245 seconds)
[22:41:47] *** Joins: ivii (~ivan@user/ivii)
[22:43:12] <zumba_addict> what is the pip command to show the latest tag of a package?
[22:43:31] *** Joins: Telvana (~capo@user/telvana)
[22:43:48] *** Quits: paul424 (~tom@ip-5-172-235-255.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[22:43:49] <xheimlich> pip freeze | grep mypack | cut -d = -f 2?
[22:44:01] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:44:08] <sco1> Rolls right off the tongue
[22:44:17] *** Quits: dbristow (~dbristow@user/dbristow) (Quit: Leaving)
[22:44:50] <xheimlich> I know way too much about `cut`. This because I wasn't smart enough to "pick up" awk.
[22:44:58] *** Joins: Pickchea (~private@user/pickchea)
[22:45:07] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:22] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:45:46] <zumba_addict> sorry, remote tag version
[22:45:58] <zumba_addict> that command will be local
[22:46:12] <SnoopJ> zumba_addict, `pip index versions yourpkg | grep -i latest`
[22:46:37] <SnoopJ> (i.e. it's listed in the command we told you yesterday)
[22:46:40] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:46:59] <zumba_addict> ah I didn't have the grep
[22:47:12] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:47:15] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:47:23] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:47:36] *** Joins: dbristow (~dbristow@user/dbristow)
[22:47:36] *** Joins: luva9 (~luva@45.141.152.54)
[22:47:53] *** Joins: octav1a (~quassel@173.195.145.98)
[22:47:56] *** Joins: Guest66 (~Guest66@2a01:8b81:7c02:bc56:68d0:15d2:d9de:d5c2)
[22:48:25] *** Quits: Guest66 (~Guest66@2a01:8b81:7c02:bc56:68d0:15d2:d9de:d5c2) (Client Quit)
[22:49:02] <novapy> What would be the easiest way to extract links from html?
[22:49:13] *** luva9 is now known as luva
[22:49:21] <novapy> or should I use js?
[22:49:34] <Wooble> SnoopJ: doesn't work for me in pip 22.0.2; maybe they changed the format as the message printed to stderr suggests they might?
[22:49:56] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 245 seconds)
[22:50:30] <Wooble> novapy: https://docs.scrapy.org/en/latest/topics/link-extractors.html#scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor maybe?
[22:50:44] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:50:55] <SnoopJ> Wooble, hm, maybe, I tried it on 21.3.1
[22:50:59] <jwhisnant> I tend to pip install pkg==foobar (the response lists the versions available)
[22:51:07] <octav1a> Does anyone know in numpy, how to combine slices for indexing? Say I have a = np.array([1,2,3,4,5,6])  . I can do a[slice(0, 2)] which gives "[1,2]" and a[slice(4,6)] to get "[5,6]" , but how can I do a[<both slice objects>] to get "[1,2,5,6]" ?
[22:51:21] *** Quits: pro_z_ (~pro_z@37.214.55.61) (Ping timeout: 256 seconds)
[22:51:21] <SnoopJ> Wooble, nope, seems to be on stdout on 22.0.2 as well
[22:51:32] <jwhisnant> or any other non-sensical version ...
[22:51:46] <octav1a> novapy: just use lxml / beautifulsoup
[22:52:03] <Wooble> SnoopJ: I'm not seeing "latest" in the output at all
[22:52:03] *** Joins: zebrag (~chris@user/zebrag)
[22:52:09] <SnoopJ> Wooble, not sure why. https://bpa.st/WOWA
[22:52:10] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:52:38] <SnoopJ> the command is experimental so I guess it could be jank related to that status
[22:52:40] <novapy> Searching regex for https://blahblahblah won't work?
[22:52:57] <Wooble> SnoopJ: I was even using numpy :/
[22:53:04] <novapy> or wait, that's only going to give me external links right?
[22:53:23] <SnoopJ> octav1a, you would have to convert your slices to sequences of integers. Note that this guarantees a copy.
[22:53:24] <sco1> latest is only there if you have the package installed
[22:53:31] <SnoopJ> aha
[22:53:37] <SnoopJ> that's...confusing
[22:53:42] <SnoopJ> cc zumba_addict ^
[22:54:01] <novapy> beautifull soup doesn't work for python3?
[22:54:03] <SnoopJ> I guess you'll have to parse the available versions and pick out the latest one
[22:54:06] <SnoopJ> novapy, it does
[22:54:22] <novapy> getting an error trying to install it with pip
[22:54:38] <Wooble> novapy: you asked for the easiest way, but sure, go ahead and parse html with regex.
[22:54:49] <zumba_addict> back
[22:54:49] <Wooble> SnoopJ: https://bpa.st/P6GQ
[22:54:55] <zumba_addict> SnoopJ what did I miss?
[22:55:03] <novapy> Wooble: trying to install beautifulsoup
[22:55:20] <KirkMcDonald> octav1a: np.concatenate((a[0:2], a[4:6]))
[22:55:20] <SnoopJ> zumba_addict, the "latest" field is only reported if the package is installed. You shouldn't rely on it if you can't guarantee that it is.
[22:55:34] <zumba_addict> ah got it, it worked though. I see the latest version
[22:55:47] <KirkMcDonald> octav1a: Alternatively, make a list of the indexes you want, and index the array with that.
[22:55:54] <Wooble> SnoopJ: I assume the bit in () is the latest version in my output
[22:56:18] <zumba_addict> However, there is a command in Dockerfile that runs `pip-compile requirements.txt`. I'm trying it locally but it looks like i have to install it. It's my first time seeing pip-compile
[22:56:25] <KirkMcDonald> octav1a: a[[*range(0, 2), *range(4, 6)]]
[22:56:35] <SnoopJ> Wooble, hmm, yea
[22:56:55] <Wooble> SnoopJ: it doesn't explictly say that but what else could it be? :)
[22:57:00] <octav1a> The thing I'm getting the slices from returns slice objeects.
[22:57:21] <zumba_addict> which package is pip-compile part of?
[22:57:22] <octav1a> so a slice of (1,1000) would need to made a list 1000 entries long?
[22:57:33] <sco1> zumba_addict: pip-tools
[22:57:39] <SnoopJ> octav1a, there is not a way to do what you want directly with slice objects, except KirkMcDonald's concatenate() spelling, which is fine.
[22:57:45] <zumba_addict> thank you sco1
[22:57:54] <SnoopJ> it does make some additional intermediate ndarray objects, but they will be views on the original data and therefore pretty cheap.
[22:58:00] <jinsun__> Wooble: the code names it latest too https://github.com/pypa/pip/blob/22.0.2/src/pip/_internal/commands/index.py#L137
[22:58:30] <KirkMcDonald> octav1a: This operation implies a copy in any case.
[22:58:31] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:58:32] <zumba_addict> I was able to recreate the issue I saw in jenkins into my machine
[22:58:48] <zumba_addict> Could not find a version that matches gosecrets==0.10.7,==0.12.0 (from artist==1.131->-r requirements.txt (line 5))
[22:58:48] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[22:58:56] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:59:16] <SnoopJ> yea, you're stuck copying data at some point here because the desired data is noncontiguous
[22:59:18] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:59:27] <octav1a> KirkMcDonald: I don't see why, it's in a generator function, just pulling out specific slices of the array
[22:59:40] <zumba_addict> line 5 is artist==1.131 and 1.131 is the one I deployed that has gosecrets 0.12.0
[22:59:40] <octav1a> I guess I'll just use a for loop
[22:59:53] <KirkMcDonald> octav1a: But if the result you want is the combination of *multiple* slices, then a copy is implied.
[23:00:09] <SnoopJ> unless the slices happen to refer to a contiguous range which is a pretty small edge case
[23:00:30] <KirkMcDonald> Yes, unless the multiple slices can be combined into a single slice. Which is a different problem.
[23:00:32] <zumba_addict> now this doesn't return anymore pip index versions gosecrets | grep -i latest
[23:00:58] <SnoopJ> zumba_addict, latest will only be there ***if the package is already installed***, did you understand that from the above discussion?
[23:01:04] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[23:01:14] <SnoopJ> you will need to parse the output that is there even when the package is not installed if you want to handle that case
[23:01:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[23:01:20] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:551:c2e6:db21:385c)
[23:01:33] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 256 seconds)
[23:01:42] *** Quits: emf (~emf@2620:10d:c090:400::5:b471) (Ping timeout: 250 seconds)
[23:01:47] *** jiggawatt is now known as boolshit
[23:01:48] <zumba_addict> maybe beecause I have execute pip install requirements.txt yet?
[23:02:19] *** Joins: ivii (~ivan@user/ivii)
[23:02:28] *** Joins: vicfred (~vicfred@user/vicfred)
[23:03:19] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[23:03:25] <zumba_addict> though in the Dockerfile, I don't see pip install requirements.txt before pip-compile
[23:04:14] <monkeyPlus> hey,im getting invalid syntax on variable assignment. im using continuation lines...why?  https://bpa.st/L37A
[23:04:43] *** Joins: emf (~emf@2620:10d:c090:400::5:b471)
[23:04:57] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:05:25] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:05:46] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[23:05:51] <monkeyPlus> i could use (), but i want to know why its wrong (Since in c i have the same problem)
[23:05:57] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 240 seconds)
[23:06:04] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[23:06:18] *** Quits: Moosadee (~Moosadee@198.248.96.42) (Ping timeout: 256 seconds)
[23:06:30] *** Joins: Barones (~Barones@user/Barones)
[23:06:51] <KirkMcDonald> monkeyPlus: You cannot split an integer literal in this way.
[23:07:16] <monkeyPlus> ah ok..why not? can i split with () ?
[23:08:08] <monkeyPlus> how do i represent large integers?
[23:08:20] <KirkMcDonald> Because Python's lexical rules are defined thus. And no, () won't do it, either.
[23:08:32] <monkeyPlus> ok so..how to represent?
[23:08:49] <jinsun__> there is no column limit
[23:08:57] <jinsun__> just stuff it all in one line
[23:08:58] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:09:05] *** Joins: Moosadee (~Moosadee@198.248.96.42)
[23:09:07] *** Parts: octav1a (~quassel@173.195.145.98) (~Called off to Sentinal the Sand Temple~)
[23:09:14] <KirkMcDonald> I suppose one option is to put it in a string literal (which can be spread across multiple lines in various ways) and convert it immediately into an integer.
[23:09:14] <monkeyPlus> ok ...that way is harder to read..there isnt any other way?
[23:09:32] <monkeyPlus> i would prefer not, extra function
[23:09:42] <jinsun__> I doubt it would be easier to read even if you split
[23:10:22] <jiffe> what happened to pyenv.run ?
[23:10:36] <monkeyPlus> ok...thks
[23:10:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:11:03] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:11:28] *** Quits: greedom (~greedom@p200300de671a4800578aa727440fe621.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:11:40] <jinsun__> writing in hex may make it more readable
[23:11:52] <jinsun__> and will shorten it too
[23:13:02] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[23:13:02] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:13:05] *** greaser|q is now known as GreaseMonkey
[23:13:07] *** Joins: cside (sid479702@id-479702.uxbridge.irccloud.com)
[23:13:30] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:14:10] *** Joins: Midjak2 (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[23:14:33] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[23:14:35] *** Quits: exalt (~exalt@231-232-145-85.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[23:15:00] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[23:15:05] *** Quits: Midjak2 (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Remote host closed the connection)
[23:15:21] <zumba_addict> So `pip install gosecrets==0.12.0` works properly on my machine. However, when I execute `pip-compile requirements.txt`, it fails at line 5 from this requirements.txt file https://bpa.st/AWVQ  The exact error is `Could not find a version that matches gosecrets==0.10.7,==0.12.0 (from artist==1.131->-r requirements.txt (line 5))` I am not sure why
[23:15:22] <zumba_addict> it cannot find it. When I install artist==1.131, gosecrets 0.12.0 gets installed properly. What am I doing wrong or missing?
[23:15:26] *** Joins: Midjak2 (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[23:15:43] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 256 seconds)
[23:15:46] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:15:55] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[23:16:10] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:16:11] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 245 seconds)
[23:16:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:16:53] <zumba_addict> Any clues SnoopJ jinsun_ grym?
[23:17:38] *** Quits: jay-m1261 (~jay-m@154.72.167.222) (Ping timeout: 256 seconds)
[23:17:38] *** Quits: jay-m126_ (~jay-m@154.72.167.222) (Ping timeout: 256 seconds)
[23:17:43] <jinsun__> it is trying to find gosecrets==0.10.7,==0.12.0 (not gosecrets==0.12.0)
[23:18:01] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[23:18:10] <novapy> how do I make something that can read from a pipeline, ie `curl "https://example.com"| python thing.py
[23:18:12] *** Quits: jay-m126 (~jay-m@154.72.167.222) (Ping timeout: 256 seconds)
[23:18:15] <jinsun__> which will obviosly never be found, the version has to be equal to two things at the same time
[23:18:21] <bjs> novapy: you read from sys.stdin
[23:18:35] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[23:18:52] *** Joins: mickaelviey__ (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[23:19:40] *** Quits: mickaelviey__ (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Remote host closed the connection)
[23:19:41] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[23:19:46] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:19:49] <zumba_addict> I'm confused jinsun_
[23:20:11] <zumba_addict> it's looking for the whole string "0.10.7,==0.12.0"
[23:20:14] *** Joins: greedom (~greedom@p200300de671a4800578aa727440fe621.dip0.t-ipconnect.de)
[23:20:26] <zumba_addict> like that?
[23:20:55] *** Joins: mickaelviey__ (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[23:21:11] <Wooble> (probably don't use curl like that :P )
[23:21:23] *** Quits: Midjak2 (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 256 seconds)
[23:21:56] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Read error: Connection reset by peer)
[23:22:00] <zumba_addict> my impression on that message was that pip was recursing thru that list 0.10.7 and 0.12.0
[23:22:06] *** Quits: mickaelviey__ (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Remote host closed the connection)
[23:22:09] * SnoopJ pipes curl in to Wooble
[23:22:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:22:31] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 256 seconds)
[23:22:40] <sco1> where is artist even coming from? Do you have a private index?
[23:22:42] <zumba_addict> ok, I will have to find out why it's doing that kind of request
[23:23:10] *** Joins: kli (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[23:23:13] <zumba_addict> I don't see anything in the project though which makes it so confusing
[23:23:36] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:23:49] <Wooble> SnoopJ: that's an acceptable use; I don't already have a perfectly good http libary
[23:23:55] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:24:04] <SnoopJ> there are perfect HTTP libraries? :)
[23:24:18] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:24:51] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:24:58] <zumba_addict> so why would pip make that kind of request? doubled concatenated version?
[23:25:23] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[23:25:34] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 256 seconds)
[23:25:40] <sco1> What is artist?
[23:25:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:25:55] <sco1> Because it doesn't appear to be what's on PyPI
[23:25:58] <zumba_addict> it's a tool built by JFrog for uploading
[23:26:09] <zumba_addict> it's only internally for us
[23:26:16] <sco1> So you're using an internal package index?
[23:26:21] <zumba_addict> yes
[23:26:25] *** Quits: synic (~squish@li74-118.members.linode.com) (Quit: WeeChat 3.3)
[23:26:28] <sco1> What is the requirements file for artist then?
[23:26:30] <zumba_addict> which is why pip install artist==0.12.0 works
[23:26:35] <zumba_addict> let me check
[23:26:57] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:26:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:27:05] <zumba_addict> sharing now
[23:27:15] *** Joins: KombuchaKip (~kip@192.252.230.5)
[23:27:15] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:27:22] <zumba_addict> https://bpa.st/ZG7A
[23:28:47] *** Joins: synic (~squish@li74-118.members.linode.com)
[23:29:18] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:29:27] <zumba_addict> sco1 do you see anything wrong? Previously, gosecrets was blank. I had to add 0.12.0 because artist was failing. When I added that, build was successful
[23:29:44] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:30:18] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[23:30:34] *** Joins: bixo (~bixo@190.200.253.127)
[23:31:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:31:46] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:31:48] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[23:31:53] *** Joins: jay-m126 (~jay-m@154.72.167.222)
[23:31:58] *** Joins: jay-m126_ (~jay-m@154.72.167.222)
[23:32:40] *** Joins: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:33:08] <sco1> I'm not sure, I was hoping I could recreate it myself but I don't seem to be able to with the missing internal packages
[23:33:15] *** Joins: ttys000 (~ttys000@user/ttys000)
[23:34:01] *** Joins: pepper (~pepper@user/pepper)
[23:34:06] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:34:38] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[23:35:41] *** Quits: Wooble (~Wooble@107.170.27.240) (Changing host)
[23:35:41] *** Joins: Wooble (~Wooble@user/Wooble)
[23:36:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:36:22] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 250 seconds)
[23:36:26] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:36:42] *** Joins: ntropy (~ntropy@146.70.21.22)
[23:36:54] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[23:36:56] <zumba_addict> k
[23:37:00] *** Joins: jay-m1261 (~jay-m@154.72.167.222)
[23:37:10] <zumba_addict> no other ideas I can check?
[23:38:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:39:39] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:40:23] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d)
[23:40:32] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:40:35] <sco1> search your dependencies and see if one specifies gosecrets==0.10.7
[23:40:39] <sco1> Maybe in a setup.py?
[23:40:47] <sco1> I'm not very familiar with how pip-compile works
[23:40:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:41:00] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[23:41:57] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[23:42:13] *** Quits: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[23:42:22] <zumba_addict> k
[23:42:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:42:39] <jinsun__> you have lots of other problems too
[23:42:40] *** Joins: tomg (~tomg@user/tomg)
[23:42:53] <jinsun__> jsonschema==2.6.0 in the fisrt requirements file
[23:43:08] <jinsun__> jsonschema==3.2.0 in the second one
[23:43:14] *** Joins: meltedbrain_y2k (~tekserf@87.125.156.8)
[23:43:17] <zumba_addict> let me look
[23:43:29] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[23:43:40] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[23:43:46] <zumba_addict> oh yeah, they're different
[23:44:07] *** Quits: Batzy (~quassel@user/batzy) (Quit: No Ping reply in 180 seconds.)
[23:44:16] <jinsun__> why are these so constrained anyway, none of those should be == I think
[23:44:18] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[23:44:31] <jinsun__> that is pip-compile's job
[23:44:49] <jinsun__> just put >= or <=
[23:44:59] <zumba_addict> i didn't build this project. Inherited only.
[23:45:08] <zumba_addict> So never pin versions?
[23:45:33] *** Joins: Batzy (~quassel@user/batzy)
[23:45:59] <jinsun__> you rarely need ==, usually you want some range
[23:46:00] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:4d9a:102c:1aff:7bf8) (Quit: Konversation terminated!)
[23:46:10] <jinsun__> like >=1.0,<=2.0
[23:46:18] <zumba_addict> so what i did artist==1.131 was bad
[23:46:26] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Remote host closed the connection)
[23:46:32] *** Joins: moog (~moog@107.126.53.56)
[23:46:45] <theseb> At the risk of stating the obvious i had an epiphany yesterday that "variable" = "key value pair" !!! if you think about it a variable actually represents TWO things....its name (the key) and what it is = to (the value) !!! they are the same thing! surprising?
[23:46:53] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[23:46:54] <Wooble> there's an argument to be make for pinning versions you've actually tested on before deploying, but only if you're going to keep up to date with changes in deps and re-test frequently
[23:47:10] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[23:47:29] <zumba_addict> I updated requirements line 5 from artist==1.131 to artist only, pip-compile failed with the same message above
[23:48:34] <jinsun__> that artist== might have been fine, I'm saying all those =='s combined is wrong
[23:48:38] <Wooble> theseb: not surprising, and namespaces are just dicts behind the scenes, largely.
[23:48:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:49:05] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[23:49:25] <theseb> Wooble: yea...that's beautiful too
[23:49:26] *** Joins: x_kuru (~xkuru@user/xkuru)
[23:49:42] <bjs> theseb: yeah it's neat :)
[23:49:44] *** Joins: tomg (~tomg@user/tomg)
[23:50:00] *** Joins: audiobirb (~audio@user/audio)
[23:50:16] *** Joins: shad (~shad@user/shad)
[23:51:21] <zumba_addict> does `python -m pip show mypackage` only work for locally installed packages?
[23:51:25] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[23:51:28] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:51:44] <jinsun__> yes
[23:51:59] *** Joins: defn (~n0b0dy@user/defn)
[23:52:09] <zumba_addict> thanks
[23:52:33] <SnoopJ> zumba_addict, note that this is stated rather clearly in the --help for that subcommand
[23:52:35] <zumba_addict> oh, how do we know if a package is remote our something we built?
[23:52:44] <zumba_addict> will do, i'll check it
[23:53:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:54:04] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:54:05] *** Quits: nitro25 (~nitro25@137.21.80.5) (Quit: END OF LINE.)
[23:54:36] <Wooble> zumba_addict: pip freeze will show the local path for local projects
[23:54:44] *** Parts: bixo (~bixo@190.200.253.127) (Leaving)
[23:54:55] *** Joins: fikran (~fikran@user/fikran)
[23:55:05] <gjvc> theseb a variable is just the value at a given time.  you really want to think in terms of time and events as well to model the actions of the real world.
[23:55:16] <SnoopJ> `pip freeze --help` -> "Description: Output installed packages in requirements format."
[23:55:57] <theseb> gjvc: hmmm..that might get a little too advanced for my brain...you're suggesting we should think about key value pairs that evolve in time....not sure how the json world deals with that
[23:57:12] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[23:57:36] <gjvc> a message is just a structure which exists in memory, and json is a serialisation format for such structures.  a message represents the reification of an event.
[23:57:37] *** Joins: tomg (~tomg@user/tomg)
[23:57:55] <zumba_addict> this is so weird, I ran pip install and this message `Collecting botocore<1.24.0,>=1.23.2` kept repeating for like 50 times now. It's been downloading all botocore
[23:58:11] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:58:26] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[23:58:37] <gjvc> think of a key-value pair bundle containing different values (perhaps different sets of values) which evolve over time as you say
[23:58:39] <zumba_addict> I had to cancel it now since it's like 70-80messages and downloading it everytime, 8mb each
[23:58:56] *** Joins: bomb-on_ (~bomb-on@194.144.47.113)
[23:58:59] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[23:59:43] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:59:48] *** Joins: skapata (~Skapata@user/skapata)
