[00:03:39] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[00:12:43] *** Quits: troller (~p@2a02:6b8:b081:1211::1:6) (Ping timeout: 268 seconds)
[00:15:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:16:21] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[00:16:35] *** Quits: Tokamak (~Tokamak@172.58.191.20) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[00:18:16] *** Quits: zmt00 (~zmt00@user/zmt00) (Client Quit)
[00:18:17] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[00:19:44] *** Quits: andreasbuhr (~quassel@p549db547.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:23:24] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:24:24] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9863:10db:b7d4:d519) (Ping timeout: 250 seconds)
[00:24:41] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:25:04] *** Joins: troller (~p@2a02:6b8:b081:a416::1:19)
[00:26:28] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:28:35] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:30:02] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8197:3478:1c75:15c6)
[00:33:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d190:13e6:b518:cdac) (Ping timeout: 268 seconds)
[00:39:06] *** Joins: MatSharrow (~matthew@169.99.9.51.dyn.plus.net)
[00:48:25] *** Quits: sonic (~sonic@user/sonic) (Quit: WeeChat 3.3)
[00:49:00] *** Quits: paul424 (~tom@ip-5-172-237-88.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:49:10] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[00:50:13] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4)
[00:53:38] *** Joins: Tokamak (~Tokamak@172.58.191.20)
[00:56:07] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[00:57:02] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:7cf1:f47c:7f9a:dfa1)
[00:57:02] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:7cf1:f47c:7f9a:dfa1) (Changing host)
[00:57:02] *** Joins: RoKenn (~RoKenn@user/rokenn)
[01:01:45] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:02:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[01:04:31] *** Joins: manjaro-user (~manjaro-u@199-7-158-233.eng.wind.ca)
[01:04:50] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:08:31] *** Quits: manjaro-user (~manjaro-u@199-7-158-233.eng.wind.ca) (Remote host closed the connection)
[01:08:58] *** Joins: manjaro-user (~manjaro-u@199-7-158-233.eng.wind.ca)
[01:09:44] <ashafq> How do I call protected member's constructor from derived class? Or is that a bad idea?
[01:10:59] <kalven> the protected member of a base class?
[01:12:31] *** Joins: seninha (~seninha@user/seninha)
[01:13:26] *** Joins: Rayke (rayke@user/rayke)
[01:13:43] <ashafq> kalven: yes
[01:13:52] <kalven> you can't
[01:14:04] <ashafq> oof ‚òπÔ∏è
[01:14:44] <ashafq> So I guess I will have to write a constructur for the base class that initializes those protected members? ¬Ø\_(„ÉÑ)_/¬Ø
[01:15:05] <kalven> yes, it's the job of a constructor to initialize/setup the members of that class
[01:16:03] <ashafq> True, but it's got a lot of parameters...
[01:20:07] <ashafq> kalven: Thanks for the help
[01:20:20] <kalven> any time, ashafq!
[01:23:50] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:24:03] *** Quits: PJBoy (~PJBoy@user/pjboy) (Client Quit)
[01:25:23] *** Quits: robod34 (~Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:26:58] *** Joins: sbrothy (~sbrothy@192038130004.mbb.telenor.dk)
[01:27:53] *** Joins: markong (~kvirc@213.146.188.203)
[01:29:42] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:32:07] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:36:15] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:36:19] <kalven> is there an active proposal to add coroutine helpers to the standard library, like std::generator and such?
[01:39:11] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d190:13e6:b518:cdac)
[01:39:29] *** Joins: chozorho (~chozorho@2601:146:300:c30::349b)
[01:40:06] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:40:30] <rpav> those weren't part of the coroutines TS?
[01:40:37] *** Quits: manjaro-user (~manjaro-u@199-7-158-233.eng.wind.ca) (Ping timeout: 240 seconds)
[01:40:45] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[01:41:20] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:29] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:29] *** ChanServ sets mode: +v npaperbot
[01:43:48] <ashafq> One more question: if I want to change a int* to void*, is that a static_cast or reinterpret_cast?
[01:44:44] <kalven> that conversion is implicit, but static_cast if you must
[01:48:25] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:52:16] *** Joins: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[01:52:31] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:53:09] *** Joins: chris64 (~chris@user/chris64)
[01:53:40] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:54:47] *** Joins: hexingb (~hexingb@36.155.28.143)
[02:00:20] *** Joins: HvszrStykp (~X@81.171.62.86)
[02:12:55] <BurumaSerafuku> weird nick
[02:22:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:23:07] *** Quits: magla (~gelignite@55d4db0b.access.ecotel.net) (Quit: Stay safe!)
[02:39:42] *** Quits: Simplar (~Simplar@188.163.93.76) (Quit: Going offline, see ya! (www.adiirc.com))
[02:46:04] <ashafq> Another question: for a pure virtual function, we don't need "override" correct?
[02:48:32] <kalven> you never *need* to write override
[02:48:57] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 240 seconds)
[02:51:28] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d190:13e6:b518:cdac) (Quit: Quit)
[02:53:28] <RandomReader> the purpose of "override" is to get messages on mistakes: if you expect it to be a virtual override, but it doesn't match an existing base virtual function
[02:54:05] <RandomReader> without it, C++ just behaves automatically: if it matches a virtual function it's an override, if not it's a new non-virtual function
[02:56:56] *** Quits: chris64 (~chris@user/chris64) (Ping timeout: 250 seconds)
[02:58:59] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:8197:3478:1c75:15c6) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:06:54] *** Quits: foul_owl (~kerry@174-21-143-101.tukw.qwest.net) (Ping timeout: 250 seconds)
[03:09:49] *** Quits: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca) (Quit: Leaving)
[03:15:05] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:16:46] *** Joins: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[03:17:37] *** Quits: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca) (Client Quit)
[03:18:49] *** Joins: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[03:19:24] <xkoncek> you actually don't need to say "virtual" when overriding
[03:20:09] <ashafq> Also I think I made a mistake using templates for base class üòï
[03:20:55] <ashafq> How the *eff* will I have a list of base class with derived class if I have template types on baseclass!? ‚òπÔ∏è
[03:21:54] <RandomReader> right, it's rare to mix template and virtual, since they are sort of opposite in the kind of adaptation they do
[03:22:12] *** Joins: foul_owl (~kerry@94.140.8.106)
[03:22:51] <ashafq> I guess I'll go for a walk and figure it out.
[03:22:53] <RandomReader> if you're building a dynamic polymorphic hierarchy, with virtual, the point is to *not* have specific types .. but templates are all about creating types
[03:23:48] <RandomReader> I usually find it's good to start with how you want to use it, and then work backwards to create it
[03:24:14] <RandomReader> so maybe imagine what the ideal using-code would look like, and see if that gives a useful direction
[03:27:21] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[03:28:02] *** Quits: troller (~p@2a02:6b8:b081:a416::1:19) (Ping timeout: 240 seconds)
[03:33:55] *** Joins: HvszrStykp (~X@81.171.62.82)
[03:34:40] *** Joins: ferdna (~ferdna@user/ferdna)
[03:36:41] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:39:01] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[03:41:14] *** Joins: proller (~p@80.240.216.69)
[03:43:57] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[03:46:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[03:48:23] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:51:39] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[03:52:01] *** Joins: proller (~p@2a02:6b8:b081:8013::1:b)
[03:53:57] *** Quits: MatSharrow (~matthew@169.99.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[03:54:17] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 240 seconds)
[03:55:09] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[04:07:12] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[04:11:39] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[04:14:57] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[04:15:52] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[04:19:31] *** Quits: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6806) (Quit: Leaving)
[04:20:04] *** Joins: KombuchaKip (~kip@192.252.230.5)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:28:35] <kevr> Hmm.. This is a bit of a weird problem (it's weird problem o'clock) and i'm not sure this is even a good place to ask. I'm using vim-lsp with asyncomplete[-lsp].vim with clangd, and i'm using ale on top of that to display floating previews. Diagnostics and previews are all fine. In autocompletion, it doesn't show me the return type of the symbols being listed; anybody know of a way to
[04:28:37] <kevr> configure lsp/ale to show the return types on autocomplete?
[04:28:58] <kevr> Previews do show me the return type, so clearly it's possible.
[04:36:36] *** Quits: emerent (~quassel@p200300cd5704433bba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:37:02] *** Joins: emerent (~quassel@p200300cd5704431fba27ebfffed28a59.dip0.t-ipconnect.de)
[04:38:41] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[04:52:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:03:34] *** Quits: xkoncek (xkoncek@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[05:06:10] *** Joins: xkoncek (xkoncek@lounge.fi.muni.cz)
[05:07:35] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:17:47] *** Joins: hexingb (~hexingb@36.155.28.143)
[05:24:18] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[05:25:32] *** Joins: eck (~root@user/eck)
[05:26:37] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[05:37:38] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[05:38:25] *** Quits: Tokamak (~Tokamak@172.58.191.20) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[05:38:39] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:39:09] *** Joins: hexingb (~hexingb@36.155.28.143)
[05:41:20] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:27] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:27] *** ChanServ sets mode: +v npaperbot
[05:42:09] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:42:26] *** Joins: Tokamak (~Tokamak@172.58.191.20)
[05:43:26] *** Joins: unyu (~pyon@user/pyon)
[05:47:16] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[05:50:42] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 250 seconds)
[05:51:11] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:51:42] *** Joins: PJBoy (~PJBoy@user/pjboy)
[05:52:26] *** Quits: Tokamak (~Tokamak@172.58.191.20) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[05:52:37] *** Joins: hexingb (~hexingb@2409:8902:7bc3:cd1c:c03f:b70a:5d9e:ab04)
[05:52:57] *** Joins: Tokamak (~Tokamak@172.58.191.20)
[05:54:36] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[05:55:02] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:2fa:9603:e9a8:8ca1) (Remote host closed the connection)
[05:56:33] <rpav> template -> virtual can be pretty useful but you want to set it up with a non-template base, and then template-derive
[05:57:25] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[05:57:49] <rpav> you can implement your own type info and tons of other stuff that way .. and keep in mind "non-template base," as it's sometimes useful to have even _without_ virtuals, if you're implementing some specializations and want to share some code
[05:58:11] <rpav> since specializations don't "inherit" from the "original template"
[05:59:27] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:03:02] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:05:57] *** Quits: hexingb (~hexingb@2409:8902:7bc3:cd1c:c03f:b70a:5d9e:ab04) (Ping timeout: 240 seconds)
[06:07:08] *** Joins: hexingb (~hexingb@36.155.28.143)
[06:13:37] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[06:15:14] *** Joins: pulse (~pulse@user/pulse)
[06:20:39] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46)
[06:22:24] *** Joins: hexingb (~hexingb@180.212.209.125)
[06:34:28] *** Quits: hexingb (~hexingb@180.212.209.125) (Ping timeout: 256 seconds)
[06:36:56] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[06:38:48] *** Joins: hexingb (~hexingb@36.155.28.143)
[06:43:56] *** Joins: arch-angel (~arch-ange@2001:e68:5400:628:98f4:a0ee:dd7:976f)
[06:44:35] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:55:37] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[06:59:51] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:01:40] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:69e9:eb2c:8129:f7b2)
[07:06:01] *** Quits: HvszrStykp (~X@81.171.62.82) (Ping timeout: 256 seconds)
[07:06:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:69e9:eb2c:8129:f7b2) (Ping timeout: 268 seconds)
[07:07:38] *** Joins: williampiv_ (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:07:57] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Ping timeout: 240 seconds)
[07:10:32] *** Quits: williampiv_ (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[07:11:52] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:12:49] *** Quits: sbrothy (~sbrothy@192038130004.mbb.telenor.dk) (Ping timeout: 256 seconds)
[07:13:05] *** Joins: adeliktas4 (~adeliktas@i59F5F1AF.versanet.de)
[07:14:57] *** Quits: adeliktas (~adeliktas@i59F4DB7C.versanet.de) (Ping timeout: 240 seconds)
[07:14:57] *** adeliktas4 is now known as adeliktas
[07:15:45] *** Quits: jsbach (~jsbach@2a01:c23:610a:7100:c7f6:ccd9:af55:8916) (Ping timeout: 268 seconds)
[07:16:22] *** Quits: skapate (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[07:22:33] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[07:23:52] *** Quits: Tokamak (~Tokamak@172.58.191.20) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[07:35:26] *** Joins: wlperdue (~wlperdue@ip24-254-86-223.sb.sd.cox.net)
[07:37:11] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[07:43:42] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[07:45:06] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:14:16] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[08:16:37] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 240 seconds)
[08:17:49] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[08:21:05] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[08:26:16] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[08:34:56] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[08:56:16] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[08:58:31] *** Quits: AmR (~AmREiSa@156.199.9.4) (Quit: Konversation terminated!)
[09:00:57] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 240 seconds)
[09:03:09] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[09:10:53] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:12:00] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[09:25:37] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[09:27:01] *** Joins: hexingb (~hexingb@111.32.64.41)
[09:36:56] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) (Ping timeout: 256 seconds)
[09:39:36] *** Joins: ferdna (~ferdna@user/ferdna)
[09:41:21] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:29] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:29] *** ChanServ sets mode: +v npaperbot
[09:46:02] *** Quits: Kakurady_ (~nekoyasha@2607:f2c0:eac8:3297:4498:af79:9c16:5928) (Ping timeout: 240 seconds)
[09:48:15] *** Quits: tesuji (~quassel@2a02:908:180:9500:64dc:7373:6d3:d9e5) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:48:30] *** Joins: tesuji (~quassel@2a02:908:180:9500:ccb5:e540:a362:3cbf)
[09:50:32] *** Quits: nshire_ (~nshire@47.146.41.156) (Read error: Connection reset by peer)
[09:55:07] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[10:13:15] *** Joins: Burgundy (~NA@86.121.143.206)
[10:16:26] *** Joins: toverna (~uni@93-81-60-93.broadband.corbina.ru)
[10:25:49] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:30:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:39:46] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Remote host closed the connection)
[10:47:22] *** Joins: ravan (~ravan@user/ravan)
[11:03:44] *** Quits: toverna (~uni@93-81-60-93.broadband.corbina.ru) (Quit: Konversation terminated!)
[11:08:43] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:12:00] *** Joins: rg (~r-g@51.159.55.86)
[11:19:48] *** Parts: lpapp_ (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[11:21:31] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:91db:6f74:934d:8f8e)
[11:33:57] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[11:46:27] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:49:00] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d190:13e6:b518:cdac)
[11:49:21] *** Quits: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net) (Ping timeout: 256 seconds)
[11:50:06] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:52:46] *** Quits: chozorho (~chozorho@2601:146:300:c30::349b) (Quit: be back later)
[11:58:24] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:58:32] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[11:58:54] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:00:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[12:02:57] *** Joins: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net)
[12:04:34] *** L30n4rdu5 is now known as leonardus
[12:13:21] *** AbleBacon_ is now known as AbleBacon
[12:22:46] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:84e4:2585:d887:c726:2569) (Remote host closed the connection)
[12:23:32] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 240 seconds)
[12:25:37] *** Joins: p-i- (~Ohmu@2403:6200:8978:84e4:2585:d887:c726:2569)
[12:26:20] *** Quits: ville (~ville@user/ville) (Quit: ville)
[12:26:22] *** Joins: robod34 (~Username@79.113.195.239)
[12:26:45] *** Joins: ville (~ville@user/ville)
[12:31:36] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[12:42:01] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:55:56] *** Joins: xkuru (~xkuru@user/xkuru)
[12:57:02] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[13:06:08] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[13:09:37] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[13:09:45] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[13:21:56] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[13:24:15] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:25:41] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[13:40:26] *** Quits: hexingb (~hexingb@111.32.64.41) (Ping timeout: 250 seconds)
[13:41:21] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:41:29] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:29] *** ChanServ sets mode: +v npaperbot
[13:49:29] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:50:20] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:52:35] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Client Quit)
[13:53:44] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:58:44] *** Joins: MatSharrow (~matthew@169.99.9.51.dyn.plus.net)
[14:16:36] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[14:18:16] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:28:25] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:84e4:1d38:ac8a:29cb:1b9)
[14:29:24] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[14:29:57] *** Joins: hexingb (~hexingb@36.155.28.143)
[14:31:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:84e4:2585:d887:c726:2569) (Ping timeout: 240 seconds)
[14:33:50] *** Joins: DSpider (~DSpider@82.79.237.57)
[14:34:35] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:38:17] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[14:49:28] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca)
[14:50:28] *** Joins: HvszrStykp (~X@81.171.62.81)
[14:54:50] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca) (Ping timeout: 256 seconds)
[15:08:24] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[15:12:12] *** Joins: paul424 (~tom@ip-31-0-124-226.multi.internet.cyfrowypolsat.pl)
[15:13:38] *** Joins: markong (~kvirc@213.146.188.203)
[15:19:33] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[15:22:56] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:24:40] *** Quits: fruitypunk1 (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (Quit: WeeChat 3.3-dev)
[15:26:21] *** Joins: jsbach (~jsbach@dynamic-077-183-033-034.77.183.pool.telefonica.de)
[15:27:33] <ville> https://www.youtube.com/watch?v=ATzVPVNp1qA that was pretty good video and why current painting programs are less than ideal
[15:28:03] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[15:29:42] <ville> related paper https://scrtwpns.com/mixbox.pdf
[15:35:30] *** Quits: jsbach (~jsbach@dynamic-077-183-033-034.77.183.pool.telefonica.de) (Remote host closed the connection)
[15:36:04] *** Quits: paul424 (~tom@ip-31-0-124-226.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:36:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[15:37:33] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:38:23] *** Joins: Xardas (~Xardas@149.233.51.127)
[15:39:48] *** Joins: jsbach (~jsbach@2a01:c22:356c:6000:f381:f9a3:7962:cff9)
[15:47:53] *** Joins: p-i- (~Ohmu@2403:6200:8978:84e4:4039:6898:4b54:b14d)
[15:48:01] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:51:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:51:37] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:84e4:1d38:ac8a:29cb:1b9) (Ping timeout: 240 seconds)
[15:59:15] *** Joins: seninha (~seninha@user/seninha)
[16:00:52] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[16:07:37] *** gentooclimax is now known as climax
[16:24:50] *** Joins: CaCode (~CaCode@user/cacode)
[16:33:04] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[16:35:04] *** Joins: fluter (~fluter@user/fluter)
[16:35:06] *** Joins: jwillikers (~jwilliker@2604:2800:2:a401:45e7:7e6b:1111:1b5c)
[16:35:13] <fluter> hi, any recommendations of a c++ reflection library?
[16:35:20] <fluter> i tried to use boost::pfr, but it doesn't give the ability of print field names
[16:35:28] <fluter> it only prints values
[16:35:39] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[16:38:22] *** Joins: plastico (~plastico@neomutt/plastico)
[16:40:33] *** Quits: jwillikers (~jwilliker@2604:2800:2:a401:45e7:7e6b:1111:1b5c) (Remote host closed the connection)
[16:42:39] *** Joins: jwillikers (~jwilliker@2604:2800:2:a401:45e7:7e6b:1111:1b5c)
[16:46:14] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[16:46:30] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[16:51:01] *** Joins: irrenhaus3 (~xenon@ip-046-005-003-049.um12.pools.vodafone-ip.de)
[16:51:15] *** Joins: Simplar (~Simplar@188.163.93.76)
[16:56:00] <ville> not really. i just write the export/import for whatever the data format is
[17:01:37] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Ping timeout: 240 seconds)
[17:18:25] *** climax is now known as gentooclimax
[17:33:16] <fluter> ville: any code sample please?
[17:37:37] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[17:41:22] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:29] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:29] *** ChanServ sets mode: +v npaperbot
[17:53:38] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[17:56:34] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[17:57:05] *** Joins: pulse (~pulse@user/pulse)
[17:57:54] *** Quits: p-i- (~Ohmu@2403:6200:8978:84e4:4039:6898:4b54:b14d) (Remote host closed the connection)
[17:58:23] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:58:34] *** Quits: proller (~p@2a02:6b8:b081:8013::1:b) (Remote host closed the connection)
[17:59:09] *** Quits: jwillikers (~jwilliker@2604:2800:2:a401:45e7:7e6b:1111:1b5c) (Remote host closed the connection)
[18:05:28] *** Joins: p-i- (~Ohmu@2403:6200:8870:4cbe:39e1:1962:a775:e52c)
[18:19:32] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[18:20:21] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 256 seconds)
[18:22:00] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[18:30:30] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:9850:4c31:3544:119b)
[18:30:30] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:9850:4c31:3544:119b) (Changing host)
[18:30:30] *** Joins: skapata (~Skapata@user/skapata)
[18:36:55] <ville> fluter: not really. not entirely sure what that would net you as it always changes based on what the format is
[18:38:08] <ville> and it always ends up looking bit "horrible" anyways. lots of ifs and such the closer the format is something humans like to read rather than just binary
[18:53:29] <amosbird> Hi! Does this getMetadata function always return not-null shared_ptr and is thread-safe? I suspect it contains a race condition but cannot be sure. https://wandbox.org/permlink/dEMIKIqxGyK2MVRJ
[18:54:59] *** Joins: ibenn (~benn@2a02:8071:45af:1700:e6e7:ae2b:daf0:a595)
[18:57:11] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[19:00:17] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[19:06:38] *** Joins: chozorho (~chozorho@2601:146:300:c30::652e)
[19:06:48] <ville> amosbird: if(auto x = it->second.lock()) { return x; }?
[19:08:43] <ville> and yes your thread may be scheduled off right after .expired() returns
[19:10:19] *** Quits: p-i- (~Ohmu@2403:6200:8870:4cbe:39e1:1962:a775:e52c) (Remote host closed the connection)
[19:13:51] *** Joins: AmR (~AmREiSa@156.199.9.4)
[19:13:57] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:14:15] *** Joins: p-i- (~Ohmu@2403:6200:8978:84e4:c925:9f94:861e:6fbb)
[19:17:05] *** Joins: paul424 (~tom@ip-31-0-125-105.multi.internet.cyfrowypolsat.pl)
[19:18:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:84e4:c925:9f94:861e:6fbb) (Ping timeout: 240 seconds)
[19:20:53] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:20:57] *** Joins: p-i- (~Ohmu@2403:6200:8978:84e4:c925:9f94:861e:6fbb)
[19:24:52] <amosbird> ville: Yeah, I thought the same. Thanks
[19:36:18] *** gentooclimax is now known as climax
[19:39:25] *** climax is now known as gentooclimax
[19:41:52] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[19:43:14] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[19:52:48] *** Joins: ferdna (~ferdna@user/ferdna)
[19:53:10] *** Joins: Tokamak (~Tokamak@172.58.191.20)
[19:55:29] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[20:00:32] <great_taste> if you have a std::pair, is this the best way to do a for loop on it `for (auto elem : std::array{pair.first, pair.second}) { ... }`?
[20:02:37] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[20:04:03] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Ping timeout: 256 seconds)
[20:04:07] <ville> which attributes are being measured to deterine best-ness?
[20:04:53] <great_taste> simplicity
[20:05:06] <great_taste> least amount of code
[20:12:12] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:13:32] <Shell> it is generally weird to use tuples/pairs like that.
[20:14:29] <great_taste> heh, ok
[20:17:28] *** Quits: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com) (Remote host closed the connection)
[20:19:58] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[20:21:37] <Alipha> great_taste: typically, you'd create a function and simply call it twice, foo(pair.first); foo(pair.second);
[20:21:54] <Alipha> Perhaps foo may be a lambda
[20:25:29] <Alipha> And std::pair shouldn't even exist, imo. a struct with appropriately-named members is always better, rather than "first" and "second"
[20:30:22] *** Quits: arch-angel (~arch-ange@2001:e68:5400:628:98f4:a0ee:dd7:976f) (Ping timeout: 250 seconds)
[20:37:25] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[20:38:03] *** gentooclimax is now known as climax
[20:39:00] <lxsameer> hey folks, I have a target in cmake that generates a binary called `abc`. how can I use it with `add_custom_command`?
[20:41:49] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[20:48:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[20:48:30] <TinoDidriksen> If your target is called T, then you can get the output filename with $<TARGET_FILE:T>
[20:48:48] *** climax is now known as gentooclimax
[20:50:07] <lxsameer> TinoDidriksen: thank you
[21:03:32] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[21:05:02] *** gentooclimax is now known as climax
[21:08:43] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[21:19:09] *** climax is now known as gentooclimax
[21:40:51] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[21:41:22] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:31] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:31] *** ChanServ sets mode: +v npaperbot
[21:51:21] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:56:25] *** Quits: paul424 (~tom@ip-31-0-125-105.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[22:00:19] *** Quits: ibenn (~benn@2a02:8071:45af:1700:e6e7:ae2b:daf0:a595) (Quit: Leaving)
[22:00:22] *** gentooclimax is now known as climax
[22:00:42] <AmR> Can I build qt 5.6.3 with openssl 1.1.1 ?
[22:01:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:01:26] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:03:35] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:08:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[22:11:14] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:11:51] *** Joins: seninha (~seninha@user/seninha)
[22:13:43] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[22:14:10] <CarloWood> Any have good ideas on how to write the parse() function in this: https://wandbox.org/permlink/tSNOSNWjuzt6iDdc
[22:16:48] *** Joins: proller (~p@80.240.216.69)
[22:17:25] *** Joins: xkuru (~xkuru@user/xkuru)
[22:19:35] <kalven> nice one
[22:20:21] <xkoncek> does anyone remember the distinction between a thread and a core? afaik a thread doesn't have a custom (either stack or registers i can't remember) but those are shared between all threads in a core
[22:20:31] <xkoncek> CPU core
[22:25:21] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[22:26:30] <kalven> the smt threads present themselves as separate cpus, but share resources (register file, execution units etc) within a core.
[22:29:37] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[22:35:58] <Alipha> Are we talking about hyperthreading?
[22:36:34] <kalven> right
[22:36:44] <ville> that's intel's name for smt/hardware threads
[22:36:54] *** Quits: jackblasted_ (~quassel@45.131.194.235) (Ping timeout: 250 seconds)
[22:38:58] <ville> xkoncek: the details vary between cpu manufacturers and even their processor lineup what's shared and what's not
[22:39:16] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:39:59] <xkoncek> i thought there is some shared notation from the OS point of view
[22:40:59] *** Quits: autark (~autark@ti0048a400-0869.bb.online.no) (Read error: Connection reset by peer)
[22:43:29] *** Joins: proller (~p@2a02:6b8:b081:8810::1:1c)
[22:43:51] *** Joins: autark (~autark@ti0048a400-0869.bb.online.no)
[22:44:34] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[22:44:52] <kalven> in what way?
[22:50:37] *** Quits: proller (~p@2a02:6b8:b081:8810::1:1c) (Ping timeout: 268 seconds)
[22:53:49] <kalven> reading the reflection proposal be like [:^i:] = [:^[]{ return J; }():];
[22:55:00] <CarloWood> How c++ slowly changed into brainfuck...
[22:55:29] *** Joins: ferdna (~ferdna@user/ferdna)
[22:55:49] <sprout_> +1
[22:57:17] <sprout_> wasn't to happy about pattern matching either.  what I need for my compiler is something which pattern matches against the return of a method of a class (named `split``
[22:57:17] <sprout_>  in my case)
[22:58:09] <sprout_> I mean,  it's fine to pattern match against structs,  but I want to pattern match against a part of a state of an object.  not everything
[22:59:08] <InPhase> New C++ emoji mascot.  [:^[]
[23:02:53] *** climax is now known as gentooclimax
[23:20:07] *** Quits: Tokamak (~Tokamak@172.58.191.20) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[23:21:52] *** gentooclimax is now known as climax
[23:31:07] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:34:16] *** Joins: Tokamak (~Tokamak@172.58.191.20)
[23:36:12] *** Joins: Terminus- (~null@user/terminus)
[23:36:15] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 268 seconds)
[23:37:42] *** Quits: Tokamak (~Tokamak@172.58.191.20) (Client Quit)
[23:49:12] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[23:50:00] *** Joins: Tokamak (~Tokamak@172.58.191.20)
[23:51:21] <Alipha> xkoncek: from what I understand of Intel's hyperthreading, each pair of "cores" shares everything except registers and instruction pipeline. So the computer may advertise 8 cores, but only have 4 ALUs, 4 FPUs, 4 caches, etc. Which means while the computer may technically be able to run 8 threads concurrently, there's a high level of contention between pairs of cores, so a lot of waiting ends up
[23:51:23] <Alipha> happening. The OS doesn't really care--it sees it can run 8 threads at once--but it will tend to try to run threads from the same process on both cores in a pair because then there is less likely to have as much contention than if threads from separate processes were running on the cores in the pair (namely, threads in a process are more likely to be accessing the same memory, so there's less cache
[23:51:25] <Alipha> contention). Even on cpus that don't have hyperthreading, pairs of cores are likely to share L1 and/or L2 caches, and so it makes sense to try to schedule threads from the same process on such cores.
[23:55:00] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[23:57:16] <CarloWood> Now I need a function that find the first occurrence in a string_view, of the form "VkPipeline 0x44695a0000000071[m_graphics_pipeline [0x555556eb60f0]]". The first word is a C identifier, followed by a space, followed by a hexadecimal number followed by '[', followed by theoretically anything - but it may be assumed that any '[' and balanced with a ']' - followed by a space, followed by a '[', followed by a hex address,
[23:57:16] <CarloWood> followed by "]]".
[23:58:37] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:58:41] <CarloWood> A regular expression would work I guess, if I knew how to search for matching [ ... ], skipping any nested ones.
