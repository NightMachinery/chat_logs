[00:00:05] *** Joins: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net)
[00:01:24] *** Joins: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[00:01:29] *** Quits: vinitkme (~capella-d@182.70.69.189) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:01:35] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[00:02:28] *** Joins: xsperry (~as@user/xsperry)
[00:03:19] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[00:03:21] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 264 seconds)
[00:03:31] <ablegreen> 1/
[00:04:07] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Ping timeout: 268 seconds)
[00:04:37] *** Joins: danielkullmann (~Guest46@2a02:3032:3:a799:450e:c1bf:eb85:105)
[00:05:53] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[00:07:37] *** Quits: eyepeetee (~aa@096-032-003-075.res.spectrum.com) (Ping timeout: 244 seconds)
[00:08:01] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[00:08:14] *** Joins: wyclif (~wyclif@user/wyclif)
[00:08:43] *** Joins: brownan (~brownan@136.56.4.163)
[00:08:56] *** Joins: Nact (~l@host-85-27-120-155.dynamic.voo.be)
[00:10:33] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[00:11:05] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[00:12:51] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Client Quit)
[00:13:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:13:37] *** Joins: lagdinu (~kris@89-72-212-82.dynamic.chello.pl)
[00:13:47] *** Joins: P1RATEZ (piratez@user/p1ratez)
[00:15:07] *** Joins: WeblordPepe (~pepe@104.248.83.14)
[00:15:20] *** Quits: brownan (~brownan@136.56.4.163) (Ping timeout: 245 seconds)
[00:15:24] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[00:17:09] *** Quits: lagdinu (~kris@89-72-212-82.dynamic.chello.pl) (Quit: leaving)
[00:17:29] *** Quits: danielkullmann (~Guest46@2a02:3032:3:a799:450e:c1bf:eb85:105) (Quit: Client closed)
[00:18:29] *** Quits: hexeme (~hexeme@ec2-54-188-57-39.us-west-2.compute.amazonaws.com) (Quit: co'o ro do)
[00:19:20] *** Joins: hexeme (~hexeme@ec2-54-188-57-39.us-west-2.compute.amazonaws.com)
[00:20:55] *** Quits: sql (~sql@user/sql) (Quit: Client closed)
[00:21:22] *** Joins: remedan (~remedan@balak.me)
[00:22:51] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[00:23:08] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 272 seconds)
[00:23:51] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[00:25:25] *** Joins: DXR (~lyrical@46.246.236.246.dsl.dyn.forthnet.gr)
[00:25:49] *** Joins: foresto (~foresto@user/foresto)
[00:25:57] *** Quits: foresto (~foresto@user/foresto) (Quit: Leaving)
[00:26:37] *** Joins: wyclif (~wyclif@user/wyclif)
[00:27:25] *** Joins: AlexSwensen (~AlexSwens@2601:8a:502:5c10:e8aa:6764:f0a4:ac4d)
[00:28:30] *** Joins: darksun (~darksun@user/darksun)
[00:28:40] <foo> huh. pip._vendor.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='files.pythonhosted.org', port=443): Read timed out.
[00:29:44] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[00:30:09] *** Joins: sunyour (~sunyour@129.226.182.99)
[00:30:56] *** Joins: imode (~imode@user/imode)
[00:30:57] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[00:31:03] <foo> ah, now it worked
[00:31:30] *** Joins: unautre (~unautre@user/unautre)
[00:32:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:32:04] *** Joins: BobC (~BobC@cpe-70-95-182-244.san.res.rr.com)
[00:32:14] *** Parts: unautre (~unautre@user/unautre) ()
[00:33:34] *** Quits: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (Remote host closed the connection)
[00:33:52] *** Parts: bn_work (uid268505@id-268505.highgate.irccloud.com) ()
[00:33:57] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 264 seconds)
[00:34:03] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[00:34:33] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[00:35:13] *** Joins: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[00:35:58] <jinsun> what is the difference between callable(f) and isinstance(f, collections.abc.Callable)?
[00:36:41] *** Quits: AlexSwensen (~AlexSwens@2601:8a:502:5c10:e8aa:6764:f0a4:ac4d) (Quit: Textual IRC Client: www.textualapp.com)
[00:36:49] *** Quits: tete_ (~John@2a02:168:859e::c60) (Remote host closed the connection)
[00:37:25] *** Quits: cactusfrog (~Guest76@2601:200:c180:1320:4c9a:a20e:6e01:bb2a) (Quit: Client closed)
[00:37:42] *** Quits: hexeme (~hexeme@ec2-54-188-57-39.us-west-2.compute.amazonaws.com) (Quit: co'o ro do)
[00:37:52] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247)
[00:38:35] <Akuli> jinsun, there's no difference :)
[00:38:50] <Akuli> callable(f) was originally removed in python 3.0, but they added it back because people wanted it
[00:39:23] <SnoopJ> there's a difference in implementation but they do effectively the same thing: check if the object can be called
[00:40:06] *** Parts: gustaf (~gerikson@user/gerikson) (WeeChat 2.8)
[00:41:04] <BobC> One of my favorite Python resources, Python Morsels, has this to say: https://www.pythonmorsels.com/topics/duck-typing/
[00:42:39] *** Joins: dorukcan (~Guest9@188.119.60.247)
[00:42:40] <BobC> With more detail here: https://treyhunner.com/2019/04/is-it-a-class-or-a-function-its-a-callable/
[00:43:17] <jinsun> Akuli: ok thanks, callable is a bit more convenient I guess, one less import
[00:43:53] <jinsun> SnoopJ: what is the implementation difference?
[00:43:55] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[00:44:10] *** Joins: SebastianM (~seba@user/sebastianm)
[00:44:23] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[00:44:42] *** Joins: entuland_ (~entuland@user/entuland)
[00:45:05] *** Quits: Haxxa (~Haxxa@122.199.47.41) (Quit: Haxxa flies away.)
[00:45:20] *** Joins: wyclif (~wyclif@user/wyclif)
[00:45:32] <nedbat> The original 3.0 removal of callable() said, if you want to know if it's callable, just call it.  This seemed surprisingly naive. I must have misunderstood something.
[00:46:07] *** Quits: dorukcan (~Guest9@188.119.60.247) (Quit: Client closed)
[00:46:11] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 245 seconds)
[00:46:11] *** entuland_ is now known as entuland
[00:46:35] *** Joins: dorukcan (~dorukcan@188.119.60.247)
[00:46:47] *** Joins: sql (uid504248@user/sql)
[00:47:31] *** Joins: Haxxa (~Haxxa@122.199.47.41)
[00:47:32] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[00:47:50] *** Quits: dorukcan (~dorukcan@188.119.60.247) (Client Quit)
[00:48:11] *** Quits: coneill (~Guest11@c-69-253-199-78.hsd1.pa.comcast.net) (Quit: Client closed)
[00:49:43] *** Quits: superboot (agentgasma@user/superboot) (Ping timeout: 272 seconds)
[00:50:13] <jinsun> is guess stuff like this is why people were not swittching from 2 to 3 initially
[00:50:17] <bjs> nedbat: I dislike this approach because then you have to delegate the check to the point of use
[00:50:32] *** Parts: imode (~imode@user/imode) (WeeChat 3.1)
[00:50:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:50:38] <nedbat> bjs: right, when you might want the information a lot earlier
[00:50:39] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:50:40] <bjs> which can be exceedingly awkward in some callback apis
[00:51:18] *** Quits: Snyp (~rksht@49.207.218.69) (Quit: WeeChat 3.1)
[00:51:25] <bjs> nedbat: I guess this was the reason it was put back :P
[00:51:58] *** Joins: superboot (agentgasma@user/superboot)
[00:52:03] <bjs> targetting 3.0 <= x < 3.3  was a point of a pointless exercise
[00:52:36] *** Joins: Trashlord (~trash@user/trashlord)
[00:52:54] *** Joins: grey-area (~grey-area@84.65.140.141)
[00:54:05] *** Joins: biozz_ (~biozz@static.211.203.216.95.clients.your-server.de)
[00:54:22] *** Joins: Foucault (~Foucault@user/foucault)
[00:54:30] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 245 seconds)
[00:55:00] *** Quits: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se) (Quit: WeeChat 2.8)
[00:55:11] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[00:56:26] *** Parts: shreyanavigyan (~shrey@user/shreyanavigyan) (Leaving. Will come back later.)
[00:56:30] *** Quits: AquaL1te_ (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:57:02] *** Quits: grey-area (~grey-area@84.65.140.141) (Client Quit)
[00:57:20] *** Quits: biozz (~biozz@static.211.203.216.95.clients.your-server.de) (Ping timeout: 272 seconds)
[00:58:42] *** Joins: zeenk (~zeenk@188.26.30.39)
[01:00:50] <deniska> jinsun: until u-strings were added to py3, it was quite hard to write code which would run for both, which for a while was an important thing for library writers
[01:01:18] *** Joins: darksun (~darksun@user/darksun)
[01:03:42] *** Quits: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net) (Quit: pbryan)
[01:05:00] *** Joins: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net)
[01:05:05] *** Joins: wyclif (~wyclif@user/wyclif)
[01:06:24] *** Quits: greedom (~greedom@2001:16b8:3268:d600:ca90:db4f:9a0b:c383) (Remote host closed the connection)
[01:07:27] *** Quits: superboot (agentgasma@user/superboot) (Ping timeout: 272 seconds)
[01:07:41] *** Joins: Metalloid (~metalloid@190.98.33.194)
[01:08:05] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[01:09:36] *** Joins: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se)
[01:09:36] *** Joins: dme86 (~dan@user/dan86)
[01:09:39] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[01:09:47] *** Joins: stwe (~sw@p5b0637a6.dip0.t-ipconnect.de)
[01:09:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:10:19] *** Joins: tremblane (~tremblane@71.69.199.107)
[01:10:45] *** Quits: stwe (~sw@p5b0637a6.dip0.t-ipconnect.de) (Client Quit)
[01:11:47] *** Joins: schumaml (~schumaml@dslb-178-002-190-100.178.002.pools.vodafone-ip.de)
[01:11:52] *** Joins: duso (~duso@130.102.13.110)
[01:11:53] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[01:12:49] *** Joins: a152280 (~user@66.119.118.5)
[01:13:35] *** Joins: Learry (~fabio@h-158-174-22-66.NA.cust.bahnhof.se)
[01:14:39] *** Quits: Learry (~fabio@h-158-174-22-66.NA.cust.bahnhof.se) (Remote host closed the connection)
[01:14:54] *** Joins: Learry (~fabio@h-158-174-22-66.NA.cust.bahnhof.se)
[01:15:37] *** Joins: greedom (~greedom@2001:16b8:3268:d600:ca90:db4f:9a0b:c383)
[01:15:44] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[01:16:30] *** Joins: superboot (agentgasma@user/superboot)
[01:16:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:17:47] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:18:13] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[01:20:43] *** Quits: jro (~textual@76-242-56-248.lightspeed.cicril.sbcglobal.net) (Quit: Textual IRC Client: www.textualapp.com)
[01:21:22] *** Quits: departed_egg (~the_egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Quit: Konversation terminated!)
[01:21:53] *** Joins: wyclif (~wyclif@user/wyclif)
[01:22:29] *** Quits: Metalloid (~metalloid@190.98.33.194) (Quit: Leaving)
[01:22:55] *** Joins: c10l (~c10l@89.34.167.207)
[01:23:01] *** Joins: kerafyrm (sid97751@id-97751.brockwell.irccloud.com)
[01:23:07] <kerafyrm> hi
[01:23:49] <nedbat> kerafyrm: hi there
[01:25:38] *** Joins: Vonter (~Vonter@user/vonter)
[01:25:43] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[01:25:49] *** Quits: tallmtt (~tallmtt@2600:1702:2d40:a50:e1e7:e553:a409:73c6) (Quit: Konversation terminated!)
[01:26:31] *** Quits: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se) (Quit: WeeChat 2.8)
[01:26:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:28:35] *** Quits: Evolver (sid32215@user/evolver) ()
[01:28:40] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 245 seconds)
[01:29:11] *** Joins: xenu (~xenu@carychium-tridentatum.xenu.pl)
[01:30:31] *** Quits: greedom (~greedom@2001:16b8:3268:d600:ca90:db4f:9a0b:c383) (Remote host closed the connection)
[01:31:35] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 245 seconds)
[01:32:07] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Read error: Connection reset by peer)
[01:32:19] *** Joins: badsektor (~badsektor@user/badsektor)
[01:32:41] *** Joins: strobelight_ (~quassel@c-69-180-7-202.hsd1.ga.comcast.net)
[01:32:44] *** Parts: xenu (~xenu@carychium-tridentatum.xenu.pl) ()
[01:33:03] *** Quits: strobelight (~quassel@c-69-180-7-202.hsd1.ga.comcast.net) (Killed (sodium.libera.chat (Nickname regained by services)))
[01:33:04] *** strobelight_ is now known as strobelight
[01:33:35] *** Joins: theelous3 (~theelous3@109.255.56.189)
[01:33:59] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[01:34:20] *** Joins: entuland_ (~entuland@user/entuland)
[01:34:30] *** Joins: Seiryu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[01:34:37] *** Quits: ali1234[m] (~ali1234@user/ali1234) (Read error: Connection reset by peer)
[01:34:38] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Read error: Connection reset by peer)
[01:34:38] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Read error: Connection reset by peer)
[01:34:38] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Read error: Connection reset by peer)
[01:34:38] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[01:34:39] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Read error: Connection reset by peer)
[01:34:40] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Write error: Connection reset by peer)
[01:34:40] *** Quits: jepler (~jepler@2001:470:69fc:105::70f) (Write error: Connection reset by peer)
[01:34:40] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Write error: Connection reset by peer)
[01:34:40] *** Quits: codemouse92__ (~codemouse@user/codemouse92) (Read error: Connection reset by peer)
[01:34:40] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Write error: Connection reset by peer)
[01:34:42] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Read error: Connection reset by peer)
[01:34:55] *** Joins: comerijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:35:02] *** Joins: ssbr` (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[01:35:08] *** Joins: tone06 (~tone@071-011-252-111.res.spectrum.com)
[01:35:16] *** Joins: blinux3 (~blinux@pool-108-51-228-58.washdc.fios.verizon.net)
[01:35:18] *** Joins: waxfire27 (~waxfire@65.119.2.240)
[01:35:22] *** Joins: Karloku (~karloku@114.84.213.83)
[01:35:31] *** Joins: badsektur (~badsektor@user/badsektor)
[01:35:42] *** Joins: seednode3 (~seednode@user/seednode)
[01:35:50] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[01:35:53] *** Joins: jdmark2 (~jdmark@67.8.137.130)
[01:35:57] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Read error: Connection reset by peer)
[01:35:57] *** Quits: jsdallas (~jsdallas@ec2-52-26-176-9.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[01:35:57] *** Quits: jthistle (~james@user/jthistle) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: Techcable (~Techcable@168.235.93.147) (Read error: Connection reset by peer)
[01:35:57] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: Learry (~fabio@h-158-174-22-66.NA.cust.bahnhof.se) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: Haxxa (~Haxxa@122.199.47.41) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: doc (~doc@user/doc) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: binarymutt (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-118.range86-150.btcentralplus.com) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: milosz (~milosz@user/milosz) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: telboon (~telboon@user/telboon) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 245 seconds)
[01:35:57] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[01:35:59] *** seednode3 is now known as seednode
[01:35:59] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[01:35:59] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[01:36:00] *** Quits: emberie (~emberie@pool-100-34-233-102.phlapa.fios.verizon.net) (Remote host closed the connection)
[01:36:02] <[O-O]> uhoh
[01:36:04] *** Joins: jesse-s (sid98646@id-98646.stonehaven.irccloud.com)
[01:36:09] *** Joins: xakan2 (~xakan@ns354170.ip-91-121-101.eu)
[01:36:10] *** Quits: schumaml (~schumaml@dslb-178-002-190-100.178.002.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[01:36:11] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 245 seconds)
[01:36:12] <bancroft_> did everyone just get booted?
[01:36:12] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[01:36:13] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[01:36:14] *** Joins: jinsun_ (~quassel@user/jinsun)
[01:36:20] *** Joins: nac8 (~nac@user/nac)
[01:36:22] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[01:36:26] *** Joins: strobelight_ (~quassel@c-69-180-7-202.hsd1.ga.comcast.net)
[01:36:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[01:36:33] *** Joins: cheater (~Username@user/cheater)
[01:36:36] *** Quits: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 245 seconds)
[01:36:36] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 245 seconds)
[01:36:36] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[01:36:36] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 245 seconds)
[01:36:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Ping timeout: 245 seconds)
[01:36:36] *** Joins: geli (~gelignite@55d4cfda.access.ecotel.net)
[01:36:41] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Read error: Connection reset by peer)
[01:36:41] *** Quits: njt (~njt@zaph.org) (Ping timeout: 252 seconds)
[01:36:41] *** Quits: richrd (~wavi@thelounge/maintainer/wavi) (Read error: Connection reset by peer)
[01:36:41] *** Quits: P1RATEZ (piratez@user/p1ratez) (Ping timeout: 252 seconds)
[01:36:41] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Ping timeout: 252 seconds)
[01:36:41] *** Quits: supakeen (~user@python/site-packages/supakeen) (Ping timeout: 252 seconds)
[01:36:41] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 252 seconds)
[01:36:41] *** Quits: fabs (~fabs@samba.ethz.ch) (Ping timeout: 252 seconds)
[01:36:41] *** Quits: Superstars111 (~jared@li227-215.members.linode.com) (Ping timeout: 252 seconds)
[01:36:42] *** Quits: arza (arza@arza.us) (Ping timeout: 252 seconds)
[01:36:42] *** Quits: et (~et@user/et) (Read error: Connection reset by peer)
[01:36:42] *** Quits: Mysteria (~Mysteria@v2202101139540140656.hotsrv.de) (Read error: Connection reset by peer)
[01:36:42] *** Quits: Nei (~ailin@user/nemui) (Remote host closed the connection)
[01:36:46] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[01:36:47] *** Quits: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net) (Read error: Connection reset by peer)
[01:36:47] *** Quits: strobelight (~quassel@c-69-180-7-202.hsd1.ga.comcast.net) (Killed (copper.libera.chat (Nickname regained by services)))
[01:36:47] *** strobelight_ is now known as strobelight
[01:36:48] *** Quits: Jormungandr89 (~brad@136.49.61.2) (Remote host closed the connection)
[01:36:48] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: justBull (~justache@user/justache) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: waxfire2 (~waxfire@65.119.2.240) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: byzandula (~byzandula@beerbq.net) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: nepeat (~nepeat@79.110.170.62) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: alissa (~ryan@hashbang/bdfl) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: u4t (~chat@78.ip-139-99-236.net) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: meti (~meti@user/meti) (Ping timeout: 252 seconds)
[01:36:49] *** Quits: meejah (~meejah@rutas.meejah.ca) (Ping timeout: 252 seconds)
[01:36:54] *** Joins: milosz (~milosz@user/milosz)
[01:36:54] *** Joins: meti_ (~meti@user/meti)
[01:36:54] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Remote host closed the connection)
[01:37:00] *** Quits: DXR (~lyrical@46.246.236.246.dsl.dyn.forthnet.gr) (Ping timeout: 245 seconds)
[01:37:01] *** Quits: Betal (~Beta@user/betal) (Ping timeout: 245 seconds)
[01:37:01] *** Joins: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[01:37:04] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[01:37:05] *** Joins: Nei (~ailin@user/nemui)
[01:37:14] *** Joins: u4t (~chat@78.ip-139-99-236.net)
[01:37:15] *** Joins: richrd (~wavi@thelounge/maintainer/wavi)
[01:37:21] *** Quits: a152280 (~user@66.119.118.5) (Ping timeout: 252 seconds)
[01:37:21] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Ping timeout: 252 seconds)
[01:37:22] *** Quits: jootoi (~jootoi@130.61.158.197) (Ping timeout: 252 seconds)
[01:37:22] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 252 seconds)
[01:37:22] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 252 seconds)
[01:37:22] *** Quits: BillyZane (~BillyZane@193.160.245.142) (Ping timeout: 252 seconds)
[01:37:22] *** Quits: habnabit_ (~habnabit@python/site-packages/habnabit) (Ping timeout: 252 seconds)
[01:37:22] *** Quits: az_ (~az0@user/az0) (Ping timeout: 252 seconds)
[01:37:22] *** Quits: xakan (~xakan@ns354170.ip-91-121-101.eu) (Ping timeout: 252 seconds)
[01:37:22] *** Quits: Mathisen (mathisen@about/windows/mathisen) (Ping timeout: 252 seconds)
[01:37:22] *** xakan2 is now known as xakan
[01:37:30] *** Joins: justBull (~justache@user/justache)
[01:37:40] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:37:43] *** Joins: jootoi (~jootoi@130.61.158.197)
[01:37:45] *** Joins: Jormungandr89 (~brad@136.49.61.2)
[01:37:54] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[01:37:54] *** Quits: nac (~nac@user/nac) (Ping timeout: 252 seconds)
[01:37:54] *** Quits: geli (~gelignite@55d4cfda.access.ecotel.net) (Client Quit)
[01:37:55] *** nac8 is now known as nac
[01:37:59] *** Joins: byzandula (~byzandula@beerbq.net)
[01:38:04] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[01:38:06] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[01:38:07] *** Joins: Dantalion (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[01:38:15] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[01:38:24] *** Joins: m4v (~znc@ubuntu/member/m4v)
[01:38:27] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[01:38:29] *** Joins: doc (~doc@user/doc)
[01:38:32] *** Joins: waxfire2 (~waxfire@65.119.2.240)
[01:38:35] *** Joins: dalan6 (~dalan@110-175-186-185.tpgi.com.au)
[01:38:37] *** Joins: alissa (~ryan@hashbang/bdfl)
[01:38:39] *** Quits: int3l (~int3l@78-83-124-208.spectrumnet.bg) (Quit: WeeChat 3.1)
[01:38:44] *** Joins: Trieste_ (T@user/pilgrim)
[01:38:51] *** Joins: dkmueller (~dkmueller@2a01:c22:6e41:3300:38d2:735e:6d5:e659)
[01:38:52] *** Joins: AquaL1te_ (~AquaL1te@user/aqual1te)
[01:38:53] *** Joins: jstein_ (~jstein@gentoo/developer/jstein)
[01:38:53] *** Joins: BigShip6 (~BigShip@user/bigship)
[01:38:54] *** Joins: BillyZane (~BillyZane@193.160.245.142)
[01:38:57] *** Joins: sgn (~sgn@user/sgn)
[01:38:59] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[01:39:01] *** Joins: xcm_ (~xcm@user/xcm)
[01:39:09] *** Joins: slowButP1esent (~slowButPr@user/slowbutpresent)
[01:39:10] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[01:39:16] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:39:21] *** Joins: njt (~njt@zaph.org)
[01:39:21] *** Joins: KernelPanic (~KernelPan@user/kernelpanic)
[01:39:22] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Quit: leaving)
[01:39:24] *** Joins: Sadale_ (~Sadale@user/sadale)
[01:39:25] *** Joins: fxrs_ (~fxrs@192.227.212.130)
[01:39:27] *** Joins: kenoba1 (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[01:39:29] *** Joins: N3X15_ (~nexis@mail.nexisonline.net)
[01:39:29] *** Joins: cmagina_ (~cmagina@user/cmagina)
[01:39:29] *** Joins: LordKalma_ (~LordKalma@2a01:4f9:c010:78d8::1)
[01:39:36] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[01:39:37] *** Joins: Betal (~Beta@user/betal)
[01:39:42] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[01:39:42] *** Joins: henbruas_ (~henbruas@ti0003a400-3211.bb.online.no)
[01:39:44] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-118.range86-150.btcentralplus.com)
[01:39:56] *** Joins: habnabit_ (habnabit@python/site-packages/habnabit)
[01:40:04] *** Joins: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com)
[01:40:11] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[01:40:15] *** Joins: Auron956 (~Auron956@user/auron)
[01:40:28] *** Joins: cdown (~cdown@89.32.122.5)
[01:40:29] *** Joins: FLHerne_ (flh@flherne.uk)
[01:40:29] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[01:40:29] *** Joins: xnbq8 (~xnbq@user/xnbq)
[01:40:37] *** Joins: supakeen_ (~user@python/site-packages/supakeen)
[01:40:38] *** Joins: schumaml (~schumaml@dslb-178-002-190-100.178.002.pools.vodafone-ip.de)
[01:40:40] *** Joins: dvu (~danielvu@168.235.66.22)
[01:40:49] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[01:40:58] <grym> bancroft_: netsplit
[01:41:00] <nedbat> bancroft_: more likely just a normal netsplit, but I can understand why everyone is jumpy
[01:41:02] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:41:04] *** Joins: simone3 (~nya@user/sx)
[01:41:07] *** Joins: Dotz0cat_ (~Dotz0cat@h66.174.40.162.dynamic.ip.windstream.net)
[01:41:08] *** Joins: entuland__ (~entuland@user/entuland)
[01:41:08] *** Joins: dodo__ (~dodo@user/dodo)
[01:41:10] *** Joins: arza (arza@arza.us)
[01:41:11] *** Joins: seednode4 (~seednode@user/seednode)
[01:41:22] *** entuland__ is now known as entuland
[01:41:24] *** Joins: Superstars111 (~jared@li227-215.members.linode.com)
[01:41:26] *** Joins: Haxxa (~Haxxa@122.199.47.41)
[01:41:26] *** Joins: stoneware7 (~stoneware@user/stoneware)
[01:41:31] *** Joins: abhixec_ (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[01:41:38] *** Joins: galen (~gaken@user/galen)
[01:41:40] *** Joins: dieth_ (~dieth@user/dieth)
[01:41:40] *** Joins: driib (~driib@193.138.218.160)
[01:41:43] *** Joins: _zware (~zach@python/psf/zware)
[01:41:48] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-118.range86-150.btcentralplus.com) (Client Quit)
[01:41:49] *** Joins: Liexei- (Liexei@user/liexei)
[01:41:50] *** Joins: very_sneaky_ (~very_snea@user/very-sneaky/x-7432109)
[01:41:51] *** Quits: dieth (~dieth@user/dieth) (Killed (NickServ (GHOST command used by dieth_)))
[01:41:54] *** dieth_ is now known as dieth
[01:41:55] *** Joins: roniez_ (~roniez@nixsec.se)
[01:41:58] *** Joins: jpaa_ (~jpaa@87.118.126.66)
[01:42:00] *** Joins: thoas_ (~thoas@167.71.76.85)
[01:42:03] *** Joins: tudor_ (~tudor@tomka.hu)
[01:42:03] *** Joins: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152)
[01:42:05] *** Joins: SuperL4g (~akulbe@user/superlag)
[01:42:06] *** Joins: nigelb_ (~nigel@zeus.nigelb.me)
[01:42:09] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[01:42:10] *** Joins: fredrikh1 (~fhl@myrsnipa.uio.no)
[01:42:11] *** Joins: fflam_ (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[01:42:14] *** Joins: ba (~ba@cpc93788-hari17-2-0-cust405.20-2.cable.virginm.net)
[01:42:15] *** Joins: ali1234[m] (~ali1234@user/ali1234)
[01:42:15] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[01:42:15] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[01:42:15] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[01:42:15] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[01:42:15] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[01:42:15] *** Joins: codemouse92__ (~codemouse@user/codemouse92)
[01:42:15] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[01:42:15] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[01:42:15] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[01:42:15] *** Joins: jepler (~jepler@2001:470:69fc:105::70f)
[01:42:18] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[01:42:24] *** Joins: comerijn_ (~merijn@83-160-49-249.ip.xs4all.nl)
[01:42:25] *** Joins: Ulti_ (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[01:42:26] *** Joins: FunkyBob_ (~curtis@vhost3.tinbrain.net)
[01:42:26] *** Joins: ulif_ (~nick@user/ulif)
[01:42:29] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[01:42:30] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[01:42:31] *** Joins: foo_ (~foo@user/foo/x-8763512)
[01:42:32] *** Joins: jthistle (~jthistle@user/jthistle)
[01:42:32] *** Joins: chilvers1 (~chilversc@user/chilversc)
[01:42:35] *** Joins: TML_ (~TML-prv@ec2-52-32-188-68.us-west-2.compute.amazonaws.com)
[01:42:39] *** Quits: AltReality (~altrealit@99-57-74-231.lightspeed.frokca.sbcglobal.net) (Killed (NickServ (GHOST command used by Alter-Ego)))
[01:42:39] *** Joins: research (~unknown@lulzsec.co.uk)
[01:42:43] <bancroft> what the heck is going on?
[01:42:45] *** Joins: JTL1 (~irc@user/jtl)
[01:42:48] *** Joins: nuala5 (~nuala@user/nuala)
[01:42:48] *** Joins: KirkMcDo1ald (~Kirk@python/site-packages/KirkMcDonald)
[01:42:48] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Quit: Ping timeout (120 seconds))
[01:42:49] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: Trieste (T@user/pilgrim) (Quit: Be well!)
[01:42:49] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Remote host closed the connection)
[01:42:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: zaquest (~notzaques@5.128.210.178) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: theelous3 (~theelous3@109.255.56.189) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: badsektor (~badsektor@user/badsektor) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: NeoCore (~neocore@138.199.47.158) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: blinux2 (~blinux@pool-108-51-228-58.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: magla (~gelignite@55d4cfda.access.ecotel.net) (Ping timeout: 272 seconds)
[01:42:49] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 272 seconds)
[01:42:49] *** henbruas_ is now known as henbruas
[01:42:55] *** Joins: lxdr8 (~lxdr@user/lxdr)
[01:43:00] *** slowButP1esent is now known as slowButPresent
[01:43:03] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[01:43:07] *** Joins: yolo_ (~xxiao@159.89.184.51)
[01:43:09] *** Joins: et (~et@user/et)
[01:43:28] <kerafyrm> nedbat: any tutorials you can recommend for javascript programmer switching to python?
[01:43:29] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[01:43:29] *** dodo__ is now known as dodo
[01:43:30] *** Joins: Mathisen (mathisen@about/windows/mathisen)
[01:43:32] <JavaBean> irccloud just got nuked by freenode, about an hour ago now.  may be that everyone is getting "transferred" over by irccloud
[01:43:53] <kerafyrm> i switched over bc i was banned on freenode (for some reason)
[01:43:53] *** Joins: AltReality (~altrealit@99-57-74-231.lightspeed.frokca.sbcglobal.net)
[01:43:53] <nedbat> JavaBean: i thought that happened longer ago
[01:43:59] *** Joins: s1b1_ (~s1b1@user/s1b1)
[01:44:06] *** Joins: vansloot (~cantpitch@2601:444:8300:9bd0:6574:4ad:d6f0:d7c8)
[01:44:13] *** Joins: dlam1 (~dlam@dlam.me)
[01:44:14] <randall> bancroft: Google "IRC netsplit" and you'll understand what is happening. Or you won't even notice it if you have JOIN/PART/QUIT on ignore.
[01:44:19] *** vansloot is now known as cantpitch
[01:44:20] *** Joins: jimm (~jim@about/linux/staff/jim)
[01:44:25] *** Joins: KindOne_ (kindone@user/kindone)
[01:44:43] <ali1234> nedbat: it happened again (post your exit), this time apparently not an accident
[01:44:47] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[01:44:47] *** Quits: blinux3 (~blinux@pool-108-51-228-58.washdc.fios.verizon.net) (Remote host closed the connection)
[01:44:47] *** Quits: badsektur (~badsektor@user/badsektor) (Remote host closed the connection)
[01:44:47] *** Quits: BigShip (~BigShip@user/bigship) (Quit: Ping timeout (120 seconds))
[01:44:47] *** Quits: tone06 (~tone@071-011-252-111.res.spectrum.com) (Client Quit)
[01:44:47] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: fxrs (~fxrs@192.227.212.130) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: zegalch (~zegalch@178.128.75.133) (Quit: Ping timeout (120 seconds))
[01:44:47] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (Quit: Goodbye)
[01:44:47] *** Quits: reset (~reset@user/reset) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: cowza (~spam@67-200-179-130.static.logixcom.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: KeiraT (~unknown@lulzsec.co.uk) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: simone (~nya@user/sx) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: t2mkn (~t2mkn@user/t2mkn) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Ekho (~Ekho@user/ekho) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: dlam (~dlam@107.170.218.37) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Kingsy (~chris@209.250.224.131) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: tudor (~tudor@tomka.hu) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Karloku (~karloku@114.84.213.83) (Read error: Connection reset by peer)
[01:44:47] *** Quits: jdmark2 (~jdmark@67.8.137.130) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: waxfire27 (~waxfire@65.119.2.240) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: ssbr` (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Seiryu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: entuland_ (~entuland@user/entuland) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Guddu (~Guddu@117.222.84.65) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: mdk (~mdk@python/psf/mdk) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: jpaa (~jpaa@87.118.126.66) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: JTL (~irc@user/jtl) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: gaken_ (~gaken@user/galen) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: foo (~foo@user/foo/x-8763512) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: nuala4 (~nuala@user/nuala) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: noyb (~noyb@user/noyb) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Dotz0cat (~Dotz0cat@h66.174.40.162.dynamic.ip.windstream.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: _0ne (~one@user/0ne/x-2101768) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: comerijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: zeenk (~zeenk@188.26.30.39) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: acegallagher (~Ace@71-211-253-134.hlrn.qwest.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: squirrel (~sq@host-2-99-74-45.as13285.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: vbgunz_ (~vbgunz@35.141.71.47) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: tbcr (~tbcr@user/tbcr) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: dalan (~dalan@110-175-186-185.tpgi.com.au) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: dsl (~dsl@ppp59-167-120-76.static.internode.on.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: nigelb (~nigel@zeus.nigelb.me) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: FunkyBob (~curtis@vhost3.tinbrain.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: TML (~TML-prv@ec2-52-32-188-68.us-west-2.compute.amazonaws.com) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: JPT (~jpt@classified.name) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: nullheroes (~danielvu@168.235.66.22) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: FLHerne (flh@flherne.uk) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: lxdr (~lxdr@user/lxdr) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-27.dsl.bell.ca) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: zware (~zach@python/psf/zware) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: kushal (~hopless@dgplug/kushal) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: meridion (~meridion@punt.hetgrotebos.org) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: thoas (~thoas@167.71.76.85) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: ulif (~nick@user/ulif) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: cmagina (~cmagina@user/cmagina) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: salparadise (~salparadi@129.146.17.140) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Lunatrius (~Lunatrius@77.38.22.128) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Madda (~Madda@208.249.9.51.dyn.plus.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Auron (~Auron956@user/auron) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: KernelPa- (~KernelPan@user/kernelpanic) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: Liexei (Liexei@user/liexei) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: xnbq (~xnbq@user/xnbq) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: yolo (~xxiao@159.89.184.51) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: amoe (~amoe@visarend.solasistim.net) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: simon8162 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: The-Compiler (~compiler@the-compiler.org) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: KindOne (kindone@user/kindone) (Read error: Connection reset by peer)
[01:44:47] *** Quits: s1b1 (~s1b1@user/s1b1) (Ping timeout: 264 seconds)
[01:44:47] *** Quits: combinare (~Eric@129.146.172.252) (Ping timeout: 264 seconds)
[01:44:47] *** Liexei- is now known as Liexei
[01:44:48] *** seednode4 is now known as seednode
[01:44:48] *** Dotz0cat_ is now known as Dotz0cat
[01:44:48] *** lxdr8 is now known as lxdr
[01:44:48] *** stoneware7 is now known as stoneware
[01:44:48] *** kenoba1 is now known as kenoba
[01:44:48] *** cmagina_ is now known as cmagina
[01:44:48] *** N3X15_ is now known as N3X15
[01:44:48] *** simone3 is now known as simone
[01:44:48] *** xnbq8 is now known as xnbq
[01:44:48] *** s1b1_ is now known as s1b1
[01:45:00] *** Joins: reset (~reset@user/reset)
[01:45:00] <JavaBean> my client reports netsplits... this isn't a netsplit
[01:45:01] *** Joins: MONEINMATT44 (~MONEINMAT@node-1w7jra26n40ovtqzj3xd9hod7.ipv6.telus.net)
[01:45:02] *** FLHerne_ is now known as FLHerne
[01:45:04] <nedbat> ali1234: "freenode: building community one k-line at a time"
[01:45:06] *** Joins: Bato (~Bato@2001:bc8:182c:b39::1)
[01:45:07] *** Joins: Madda (~Madda@208.249.9.51.dyn.plus.net)
[01:45:08] *** Joins: dsl (~dsl@ppp59-167-120-76.static.internode.on.net)
[01:45:10] *** Joins: The-Compiler (~compiler@the-compiler.org)
[01:45:11] *** Joins: meejah (~meejah@rutas.meejah.ca)
[01:45:11] *** Joins: jinsun (~quassel@user/jinsun)
[01:45:12] *** Joins: jph53 (~textual@2a00:23c6:4a07:b900:54b:3f7f:8945:8fec)
[01:45:13] <kerafyrm> nedbat: any tutorials you can recommend for javascript programmer switching to python?
[01:45:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:45:22] *** nuala5 is now known as nuala
[01:45:23] <deniska> kerafyrm: the official tutorial ( https://docs.python.org/3/tutorial/ ) is fine, it kinda assumes that you are already familiar with programming concepts
[01:45:25] *** Joins: nrg (~NRG@user/nrg)
[01:45:27] <bancroft> JavaBean: what client is that?
[01:45:32] <kerafyrm> ty deniska
[01:45:33] *** Joins: Auron (~Auron956@user/auron)
[01:45:36] <nedbat> kerafyrm: hi, sorry.  you could try the tutorial at docs.python.org
[01:45:38] <nedbat> (oops)
[01:45:55] *** Joins: Mattiasl_ (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[01:46:02] *** Joins: zegalch (~zegalch@178.128.75.133)
[01:46:02] <JavaBean> bancroft: kvirc
[01:46:04] *** Joins: BillyZane2 (~BillyZane@193.160.245.142)
[01:46:08] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[01:46:22] *** KindOne_ is now known as KindOne
[01:46:23] *** Joins: Koffa (jkohvakk@user/koffa)
[01:46:25] *** supakeen_ is now known as supakeen
[01:46:42] *** Quits: cantpitch (~cantpitch@2601:444:8300:9bd0:6574:4ad:d6f0:d7c8) (Quit: Client closed)
[01:46:43] *** Joins: Nei_ (~ailin@user/nemui)
[01:46:54] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[01:46:55] *** Joins: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:46:55] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:46:57] *** Joins: xy (~icy@user/icy)
[01:46:59] *** Joins: BigShip (~BigShip@user/bigship)
[01:47:22] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[01:47:22] *** Quits: ham (~ham4@user/ham) (Read error: Connection reset by peer)
[01:47:26] *** Joins: Zer0xFF_ (michael@matrix.michaelsasser.org)
[01:47:28] <JavaBean> bancroft this insanity is NOT happening in every channel on liberachat
[01:47:34] *** Joins: xcm (~xcm@user/xcm)
[01:47:35] *** Joins: Karloku (~karloku@114.84.213.83)
[01:47:38] *** Joins: nac7 (~nac@user/nac)
[01:47:45] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[01:47:58] <bancroft> JavaBean: it's happening in all the ones i'm in lol
[01:48:00] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 272 seconds)
[01:48:07] *** Joins: agentgasmask_ (agentgasma@user/superboot)
[01:48:07] *** Joins: duso_ (~duso@130.102.13.110)
[01:48:10] <ali1234> JavaBean: most channels arent this large, it's happening in the big ones
[01:48:23] *** Joins: nickodd (~nickodd@user/nickodd)
[01:48:25] *** Joins: milosz_ (~milosz@user/milosz)
[01:48:26] *** Joins: tone02 (~tone@071-011-252-111.res.spectrum.com)
[01:48:29] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[01:48:40] *** Joins: xakan5 (~xakan@ns354170.ip-91-121-101.eu)
[01:48:43] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[01:48:50] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[01:49:07] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[01:49:08] *** Joins: pacbard_ (~pacbard@user/pacbard)
[01:49:09] *** Joins: Trieste (T@user/pilgrim)
[01:49:10] *** Joins: meti (~meti@user/meti)
[01:49:14] *** Joins: jootoi_ (~jootoi@130.61.158.197)
[01:49:21] *** Joins: njt_ (~njt@zaph.org)
[01:49:23] *** Quits: Akuli (~Akuli@82-203-167-90.bb.dnainternet.fi) (Quit: Leaving)
[01:49:25] *** Joins: henbruas_ (~henbruas@ti0003a400-3211.bb.online.no)
[01:49:26] *** Joins: ham (~ham4@user/ham)
[01:49:27] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[01:49:29] *** Joins: tf_ (~tf@user/tf)
[01:49:30] *** Joins: pmcnabb8 (~pmcnabb@user/pmcnabb)
[01:49:31] *** Joins: SpydarOO7 (~spydar007@user/spydar007)
[01:49:37] *** Joins: yano1 (~yano@ircpuzzles/staff/yano)
[01:49:42] *** Joins: richrd6 (~wavi@thelounge/maintainer/wavi)
[01:49:42] *** lightbulbjim is now known as lightbulbjim_
[01:49:43] *** Joins: infobob_ (~infobob@python/bot/infobob)
[01:49:43] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[01:49:44] *** Quits: jesse-s (sid98646@id-98646.stonehaven.irccloud.com) (Ping timeout: 264 seconds)
[01:49:44] *** Quits: stigz (sid371747@id-371747.tinside.irccloud.com) (Ping timeout: 264 seconds)
[01:49:45] *** Quits: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (Ping timeout: 265 seconds)
[01:49:45] *** Quits: acid (~acid@user/acid) (Ping timeout: 265 seconds)
[01:49:45] *** Quits: nem (sid113421@user/nem) (Ping timeout: 265 seconds)
[01:49:45] *** Quits: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net) (Ping timeout: 265 seconds)
[01:49:45] *** Quits: OMGOMG_ (~bobrobert@poppy.ifi.uio.no) (Ping timeout: 265 seconds)
[01:49:45] *** Quits: Spydar007 (~spydar007@user/spydar007) (Ping timeout: 265 seconds)
[01:49:45] *** Quits: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (Ping timeout: 265 seconds)
[01:49:45] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (Ping timeout: 265 seconds)
[01:49:45] *** Quits: visl (sid453966@user/visl) (Ping timeout: 265 seconds)
[01:49:45] *** Quits: shrysr (~shrysr@2600:3c04::f03c:91ff:fece:e233) (Ping timeout: 265 seconds)
[01:49:46] *** Quits: infobob (~infobob@python/bot/infobob) (Ping timeout: 265 seconds)
[01:49:46] *** Quits: tf (~tf@user/tf) (Ping timeout: 265 seconds)
[01:49:46] *** Quits: roppert (~roppert@inb4.se) (Ping timeout: 265 seconds)
[01:49:46] *** Quits: strudl (~strudl@user/strudl) (Ping timeout: 265 seconds)
[01:49:46] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Ping timeout: 265 seconds)
[01:49:49] *** Joins: Techcable_ (~Techcable@168.235.93.147)
[01:49:52] *** Joins: dalan (~dalan@110-175-186-185.tpgi.com.au)
[01:49:52] *** Joins: seanBE_ (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[01:49:58] *** Joins: matiss_ (~matiss@almalinux/web/matiss)
[01:50:10] *** Joins: ntdll_ (~ntdll@user/ntdll)
[01:50:15] *** lightbulbjim_ is now known as _lightbulbjim
[01:50:17] *** Joins: WeblordP1pe (~pepe@104.248.83.14)
[01:50:18] *** Joins: slowButP1esent (~slowButPr@user/slowbutpresent)
[01:50:19] *** Joins: boxeleph1nt (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[01:50:21] *** infobob_ is now known as infobob
[01:50:21] *** Joins: waxfire27 (~waxfire@65.119.2.240)
[01:50:28] *** _lightbulbjim is now known as lightbulbjim
[01:50:39] *** Joins: strudl (~strudl@user/strudl)
[01:50:39] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[01:50:41] *** Joins: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[01:50:54] *** Joins: stigz (sid371747@id-371747.tinside.irccloud.com)
[01:50:56] *** Joins: mossman93 (~quassel@user/mossman93)
[01:50:57] *** Quits: comerijn_ (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[01:51:02] *** Joins: nem (sid113421@user/nem)
[01:51:02] *** Joins: lesihctej (jetchisel@user/jetchisel)
[01:51:11] *** Joins: strudl (~strudl@user/strudl)
[01:51:11] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[01:51:13] *** Joins: d3fn (~n0b0dy@user/defn)
[01:51:14] *** Joins: sah (~sah@user/sah)
[01:51:17] *** Joins: jvalleroy_ (~quassel@user/jvalleroy)
[01:51:21] *** Joins: strobelight_ (~quassel@c-69-180-7-202.hsd1.ga.comcast.net)
[01:51:22] *** Joins: sgn- (~sgn@user/sgn)
[01:51:22] *** Joins: pie__bnc (~pie_bnc@user/pie/x-2818909)
[01:51:36] *** Joins: acid (~acid@user/acid)
[01:51:42] *** Joins: strudl (~strudl@user/strudl)
[01:51:42] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[01:51:43] *** Quits: strobelight (~quassel@c-69-180-7-202.hsd1.ga.comcast.net) (Killed (mercury.libera.chat (Nickname regained by services)))
[01:51:43] *** strobelight_ is now known as strobelight
[01:51:53] *** Joins: cache (~cache@user/cacheyourdreams)
[01:51:54] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 264 seconds)
[01:51:56] *** Joins: mpmc_ (~mpmc@user/mpmc)
[01:52:01] *** Joins: jor_ (~jor@jor.link)
[01:52:02] *** Quits: Vision (~Vision@047-034-097-066.res.spectrum.com) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: hirish_ (~hirish@ip85.ip-137-74-20.eu) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: khs9ne (~xxwa@khs9ne.mempool.co) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: cacheyourdreams (~cacheyour@user/cacheyourdreams) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: Unode (~Unode@194.94.44.220) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: mossman93_ (~quassel@user/mossman93) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: pie_bnc (~pie_bnc@user/pie/x-2818909) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: matiss (~matiss@almalinux/web/matiss) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: altendky (sid135382@id-135382.stonehaven.irccloud.com) (Ping timeout: 265 seconds)
[01:52:02] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 265 seconds)
[01:52:02] *** Joins: marienz__ (~marienz@libera/staff/marienz)
[01:52:04] *** Quits: mpmc (~mpmc@user/mpmc) (Ping timeout: 265 seconds)
[01:52:04] *** Quits: graingert (sid128301@2a03:5180:f::1:f52d) (Ping timeout: 265 seconds)
[01:52:04] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 265 seconds)
[01:52:04] *** Quits: webknjaz (sid330617@ansible/staff/Webknjaz) (Ping timeout: 265 seconds)
[01:52:06] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[01:52:06] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[01:52:14] *** Joins: strudl (~strudl@user/strudl)
[01:52:15] *** matiss_ is now known as matiss
[01:52:16] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[01:52:27] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[01:52:29] *** Joins: Anon-kun (sid190642@id-190642.highgate.irccloud.com)
[01:52:40] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[01:52:42] *** Quits: octav1a (~quassel@173.195.145.98) (Ping timeout: 265 seconds)
[01:52:42] *** Quits: Ninpo (~Ninpo@charlton.qap.la) (Ping timeout: 265 seconds)
[01:52:42] *** Quits: notevil (~notevil@user/notevil) (Ping timeout: 265 seconds)
[01:52:44] *** Joins: doc|home (~doc@user/doc)
[01:52:51] *** Joins: cheater1__ (~Username@user/cheater)
[01:52:55] *** mpmc_ is now known as mpmc
[01:52:57] *** Joins: webknjaz (sid330617@ansible/staff/Webknjaz)
[01:53:02] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:53:08] *** Quits: pieguy128_ (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (Ping timeout: 265 seconds)
[01:53:08] *** Quits: jor (~jor@jor.link) (Ping timeout: 265 seconds)
[01:53:24] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[01:53:28] *** Joins: notevil (~notevil@user/notevil)
[01:53:36] *** Joins: altendky (sid135382@id-135382.stonehaven.irccloud.com)
[01:53:39] *** Joins: wyclif (~wyclif@user/wyclif)
[01:53:42] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Remote host closed the connection)
[01:53:49] *** Quits: offbyone (sid910@id-910.brockwell.irccloud.com) (Ping timeout: 265 seconds)
[01:53:49] *** Quits: computerquip (sid423484@user/computerquip) (Ping timeout: 265 seconds)
[01:53:51] *** Joins: byzandula1 (~byzandula@beerbq.net)
[01:53:55] *** Joins: libussa (~libussa@libussa.net)
[01:54:00] *** Joins: Rain2 (~Rain@li958-238.members.linode.com)
[01:54:19] *** Joins: meridion (~meridion@punt.hetgrotebos.org)
[01:54:22] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Ping timeout: 265 seconds)
[01:54:22] *** Quits: Rain (~Rain@li958-238.members.linode.com) (Read error: Connection reset by peer)
[01:54:22] *** Rain2 is now known as Rain
[01:54:44] *** Parts: Anon-kun (sid190642@id-190642.highgate.irccloud.com) ()
[01:54:51] *** Quits: libussa_ (~libussa@libussa.net) (Ping timeout: 265 seconds)
[01:54:52] *** SpydarOO7 is now known as Spydar007
[01:54:53] *** Quits: Auron956 (~Auron956@user/auron) (*.net *.split)
[01:54:53] *** Quits: AltReality (~altrealit@99-57-74-231.lightspeed.frokca.sbcglobal.net) (*.net *.split)
[01:54:53] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (*.net *.split)
[01:54:53] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (*.net *.split)
[01:54:53] *** Quits: njt (~njt@zaph.org) (*.net *.split)
[01:54:53] *** Quits: ba (~ba@cpc93788-hari17-2-0-cust405.20-2.cable.virginm.net) (*.net *.split)
[01:54:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (*.net *.split)
[01:54:53] *** Quits: xcm_ (~xcm@user/xcm) (*.net *.split)
[01:54:53] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (*.net *.split)
[01:54:53] *** Quits: sgn (~sgn@user/sgn) (*.net *.split)
[01:54:53] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (*.net *.split)
[01:54:53] *** Quits: BillyZane (~BillyZane@193.160.245.142) (*.net *.split)
[01:54:53] *** Quits: jstein_ (~jstein@gentoo/developer/jstein) (*.net *.split)
[01:54:53] *** Quits: Trieste_ (T@user/pilgrim) (*.net *.split)
[01:54:53] *** Quits: BigShip6 (~BigShip@user/bigship) (*.net *.split)
[01:54:53] *** Quits: dalan6 (~dalan@110-175-186-185.tpgi.com.au) (*.net *.split)
[01:54:53] *** Quits: doc (~doc@user/doc) (*.net *.split)
[01:54:53] *** Quits: waxfire2 (~waxfire@65.119.2.240) (*.net *.split)
[01:54:53] *** Quits: Dantalion (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[01:54:53] *** Quits: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) (*.net *.split)
[01:54:53] *** Quits: jvalleroy (~quassel@user/jvalleroy) (*.net *.split)
[01:54:53] *** Quits: alissa (~ryan@hashbang/bdfl) (*.net *.split)
[01:54:53] *** Quits: byzandula (~byzandula@beerbq.net) (*.net *.split)
[01:54:53] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[01:54:53] *** Quits: c4017w__ (~c4017@209.52.68.8) (*.net *.split)
[01:54:54] *** Quits: u4t (~chat@78.ip-139-99-236.net) (*.net *.split)
[01:54:54] *** Quits: richrd (~wavi@thelounge/maintainer/wavi) (*.net *.split)
[01:54:54] *** Quits: Nei (~ailin@user/nemui) (*.net *.split)
[01:54:54] *** Quits: fbiagent (~fbiagent@user/fbiagent) (*.net *.split)
[01:54:54] *** Quits: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (*.net *.split)
[01:54:54] *** Quits: milosz (~milosz@user/milosz) (*.net *.split)
[01:54:54] *** Quits: meti_ (~meti@user/meti) (*.net *.split)
[01:54:54] *** Quits: m4v (~znc@ubuntu/member/m4v) (*.net *.split)
[01:54:54] *** Quits: Techcable (~Techcable@168.235.93.147) (*.net *.split)
[01:54:54] *** Quits: justBull (~justache@user/justache) (*.net *.split)
[01:54:54] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (*.net *.split)
[01:54:54] *** Quits: cheater (~Username@user/cheater) (*.net *.split)
[01:54:54] *** Quits: jinsun_ (~quassel@user/jinsun) (*.net *.split)
[01:54:54] *** Quits: nac (~nac@user/nac) (*.net *.split)
[01:54:54] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (*.net *.split)
[01:54:54] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (*.net *.split)
[01:54:54] *** Quits: xakan (~xakan@ns354170.ip-91-121-101.eu) (*.net *.split)
[01:54:54] *** Quits: superboot (agentgasma@user/superboot) (*.net *.split)
[01:54:54] *** Quits: duso (~duso@130.102.13.110) (*.net *.split)
[01:54:54] *** Quits: xsperry (~as@user/xsperry) (*.net *.split)
[01:54:54] *** Quits: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net) (*.net *.split)
[01:54:54] *** Quits: manti7 (~manti7@176.10.104.94) (*.net *.split)
[01:54:54] *** Quits: icy (~icy@user/icy) (*.net *.split)
[01:54:54] *** Quits: jetchisel (jetchisel@user/jetchisel) (*.net *.split)
[01:54:54] *** Quits: tg (~tg@rockylinux/infra/tg) (*.net *.split)
[01:54:54] *** Quits: pacbard (~pacbard@user/pacbard) (*.net *.split)
[01:54:54] *** Quits: WeblordPepe (~pepe@104.248.83.14) (*.net *.split)
[01:54:54] *** Quits: ntdll (~ntdll@user/ntdll) (*.net *.split)
[01:54:54] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[01:54:54] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (*.net *.split)
[01:54:54] *** pmcnabb8 is now known as pmcnabb
[01:54:54] *** tone02 is now known as tone0
[01:54:54] *** richrd6 is now known as richrd
[01:54:55] *** Lord_of_Life_ is now known as Lord_of_Life
[01:54:55] *** henbruas_ is now known as henbruas
[01:54:55] *** njt_ is now known as njt
[01:54:55] *** waxfire27 is now known as waxfire2
[01:54:55] *** xakan5 is now known as xakan
[01:54:57] *** cheater1__ is now known as cheater
[01:54:58] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[01:55:02] *** Joins: runciter (~runciter@user/runciter)
[01:55:03] *** nac7 is now known as nac
[01:55:09] <JavaBean> and now we have netsplit
[01:55:21] *** Quits: Henry151 (~bishop@user/henry151) (Ping timeout: 265 seconds)
[01:55:26] *** Joins: m4v (~znc@ubuntu/member/m4v)
[01:55:40] *** Joins: Ekho- (~Ekho@user/ekho)
[01:55:43] *** Nei_ is now known as Nei
[01:55:43] *** Joins: u4t (~chat@78.ip-139-99-236.net)
[01:55:49] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 265 seconds)
[01:55:53] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[01:55:59] *** Joins: computerquip (sid423484@user/computerquip)
[01:56:04] *** Joins: offbyone (sid910@id-910.brockwell.irccloud.com)
[01:56:04] *** Joins: justBull7 (~justache@user/justache)
[01:56:19] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[01:56:21] *** Joins: visl (sid453966@user/visl)
[01:56:26] *** slowButP1esent is now known as slowButPresent
[01:56:33] *** cache is now known as cacheyourdreams
[01:57:04] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[01:57:41] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[01:57:44] *** Joins: vicfred (~vicfred@user/vicfred)
[01:57:58] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[01:58:05] *** Joins: alissa (~ryan@hashbang/bdfl)
[01:58:08] *** Quits: CatKiller (~CatKiller@78.152.251.215) (Quit: Leaving...)
[01:58:14] *** Quits: koltrast (a9957fa2@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 265 seconds)
[01:58:14] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[01:58:15] *** Quits: AquaL1te_ (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[01:58:30] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[01:58:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:59:01] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[01:59:08] *** Joins: jesse-s (sid98646@id-98646.stonehaven.irccloud.com)
[01:59:17] *** Joins: xsperry (~as@user/xsperry)
[02:00:39] *** Quits: blackop (~ocloud@user/blackop) (Ping timeout: 265 seconds)
[02:01:03] *** Joins: blackop (~ocloud@user/blackop)
[02:01:08] *** Quits: leosilva (~leosilva@canonical/leosilva) (Ping timeout: 265 seconds)
[02:01:08] *** Quits: sjk (~sjk@user/sjk) (Ping timeout: 265 seconds)
[02:01:08] *** Quits: d1b (~db@user/d1b) (Ping timeout: 265 seconds)
[02:01:23] *** Joins: d1b (~db@user/d1b)
[02:02:16] *** Joins: leosilva (~leosilva@canonical/leosilva)
[02:02:19] *** Quits: ionface (~ionface@user/ionface) (Read error: Connection reset by peer)
[02:02:33] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[02:03:14] *** Quits: biozz_ (~biozz@static.211.203.216.95.clients.your-server.de) (Remote host closed the connection)
[02:03:19] *** Quits: jthistle (~jthistle@user/jthistle) (Quit: WeeChat 2.8)
[02:03:35] *** Joins: jthistle (~jthistle@user/jthistle)
[02:03:50] *** Joins: biozz (~biozz@static.211.203.216.95.clients.your-server.de)
[02:03:54] *** Joins: koltrast (c668e330@h77-53-57-114.cust.a3fiber.se)
[02:04:28] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[02:05:17] *** Joins: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net)
[02:05:32] *** Quits: Karloku (~karloku@114.84.213.83) (Ping timeout: 272 seconds)
[02:05:40] <axisys> is there multiplication operator like sum? sum([1,2,3,4]) works.. so looking for a to multiply all elements together in a list. I can loop, but wondering if there is an operator as well
[02:05:40] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:06:05] *** justBull7 is now known as justBull
[02:06:07] <ezzieyguywuf> if I have some binary data that I want to store in a tarfile under the path "a/b/file.txt", how would I go about doing that?
[02:06:11] <axisys> I can lambda and reduce as well..
[02:06:19] <ezzieyguywuf> I'd prefer to avoid writing it to disk first
[02:06:46] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[02:06:53] <grym> axisys: math.prod, in 3.8+
[02:07:11] <axisys> grym: thanks
[02:07:18] *** Joins: bjwest (~johnny@191.96.67.5)
[02:07:24] *** Joins: Thermoriax (denn@user/thermoriax)
[02:07:25] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:08:00] *** Joins: Elodin (~weechat@user/elodin)
[02:08:09] *** Joins: mdk (~mdk@python/psf/mdk)
[02:08:15] *** Quits: biozz (~biozz@static.211.203.216.95.clients.your-server.de) (Ping timeout: 245 seconds)
[02:08:18] <deniska> ezzieyguywuf: you probably can pass io.BytesIO to tarfile
[02:08:26] *** Joins: _0ne (~one@user/0ne/x-2101768)
[02:08:32] <Tashtari> ezzieyguywuf: use TarInfo.frombuf, then .add that TarInfo object to the TarFile object.
[02:08:36] *** KirkMcDo1ald is now known as KirkMcDonald
[02:08:44] <deniska> ezzieyguywuf: or just use tarfile if your goal is to have a tar file on the disk
[02:08:48] *** Joins: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net)
[02:09:31] <ezzieyguywuf> yes I do want a tarfile on disk
[02:09:44] <ezzieyguywuf> but I want to add many different files to it from binary data, to particular paths
[02:10:08] *** Joins: a152280 (~user@66.119.118.5)
[02:10:11] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[02:10:42] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:10:52] *** Joins: anon219387 (~anon12387@bij50.neoplus.adsl.tpnet.pl)
[02:11:00] <ezzieyguywuf> i.e. if I have `myData = [bin1, bin2, bin3, bin4, etc...]` I want to do something like `for binData in myData: targetPath = getPath(); tarfile.writeFile(binData, targetPath)`
[02:11:18] <ezzieyguywuf> so bin1 may be stored as `a/b/c.txt`, bin2 may be stored as 'd/e/f.txt', etc.
[02:12:02] <ezzieyguywuf> fromBuf says specifically it needs a 'string buffer', but I don't think all my binary data are strings
[02:12:06] <bbear> hello everyone, how do you do ?
[02:12:19] *** Quits: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net) (Quit: Lost terminal)
[02:12:26] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Quit: Leaving)
[02:12:46] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[02:13:00] <bbear> I have a question about sqlalchemy, I am currently building a mapping over an existing schema, and I want to know if there is a clear, standard way to jsonify the objects I can retrieve from the database.
[02:13:00] <ezzieyguywuf> and `help(tarinfo)` says "Construct a TarInfo object from a 512 byte bytes object.", which is even more confusing
[02:13:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[02:13:24] <Tashtari> ezzieyguywuf: Those that aren't, you can write to an io.BytesIO object, which you can then turn into a TarInfo.
[02:13:26] *** Parts: fbiagent (~fbiagent@user/fbiagent) ()
[02:13:30] *** Joins: wyclif (~wyclif@user/wyclif)
[02:13:55] <ezzieyguywuf> Tashtari: hrm, I'll look at that
[02:13:57] <Tashtari> But if your data's in the form of a bytes object, that should be fine
[02:14:03] <ezzieyguywuf> I have no idea _what_ the data is, I just know it's data lol
[02:14:57] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[02:15:16] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[02:15:28] <deniska> ezzieyguywuf: you can always print(type(data)) to now what it is
[02:15:30] <Tashtari> That's probably the first thing you want to answer, then.  But anyway, once you've got your TarInfo object, you can set whatever properties on it you want (.name would be a good idea) and then add it, and you won't have to use an intermediate file.
[02:15:36] <deniska> know
[02:15:43] *** Joins: Praise (~Fat@user/praise)
[02:17:19] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[02:17:22] *** Quits: jph53 (~textual@2a00:23c6:4a07:b900:54b:3f7f:8945:8fec) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:17:23] <ezzieyguywuf> it's a LOT of data
[02:17:29] <ezzieyguywuf> likes 10,000's files, lol
[02:17:33] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[02:18:06] <ezzieyguywuf> hrm, so I HAVE to know what kind of data it is to write it to the tar thingy?
[02:18:24] <Tashtari> ezzieyguywuf: Aaactually, wait, I'm talking out of my ass.
[02:18:27] <Tashtari> Hang on.
[02:18:31] <ezzieyguywuf> currently, I just do `open(myTargetPath, 'wb')` and it Just Works™
[02:18:33] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[02:18:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[02:19:10] <deniska> well, if you have 10000 of something, presumably you got all them in the same way in a loop, so they all have the same type :)
[02:19:11] *** Joins: A-KO (~ako@user/a-ko)
[02:19:47] <ezzieyguywuf> deniska: nah, I'm downloading them from a server
[02:19:59] <ezzieyguywuf> and, in fact, I'm downloading binary "blobs", and then extracting the files from each blob
[02:20:04] <ezzieyguywuf> it's kind of a mess, but it works, lol.
[02:20:29] *** Quits: runciter (~runciter@user/runciter) (Remote host closed the connection)
[02:20:31] *** Joins: nepeat (~nepeat@79.110.170.62)
[02:22:07] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:22:45] *** Joins: badsektor (~badsektor@user/badsektor)
[02:23:18] *** Joins: abedegno (~abedegno@90.242.128.21)
[02:23:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[02:23:41] <Tashtari> ezzieyguywuf: https://bpa.st/CHGQ
[02:23:58] <Tashtari> I did this once before, it was more cumbersome than I remembered, but that code should do what you want.
[02:24:26] *** Joins: tmp3434535345435 (~tmp343453@179-70-51-68.user3p.veloxzone.com.br)
[02:26:02] <Tashtari> Sorry for getting it completely ass-backwards the first time.  :D
[02:26:19] <ezzieyguywuf> Tashtari: many thanks, this looks helpful
[02:26:41] <Tashtari> _o>
[02:26:44] *** Quits: abedegno (~abedegno@90.242.128.21) (Quit: Client closed)
[02:26:59] *** Quits: p-i- (~Ohmu@node-bho.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[02:27:41] *** Joins: p-i- (~Ohmu@node-47d.pool-118-172.dynamic.totinternet.net)
[02:27:47] *** Joins: sjk (~sjk@user/sjk)
[02:27:48] *** Joins: sivoais (~zaki@199.19.225.239)
[02:28:08] *** SuperL4g is now known as SuperLag
[02:28:32] *** Quits: nfultz (~nfultz@cpe-72-134-119-53.natsow.res.rr.com) (Quit: leaving)
[02:29:05] *** Quits: tremblane (~tremblane@71.69.199.107) (Quit: Client closed)
[02:29:11] <ezzieyguywuf> is there a way to turn gzip compression on this way? or will I jsut need to do that as a separate step?
[02:30:19] *** Joins: wyclif (~wyclif@user/wyclif)
[02:30:23] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[02:32:05] *** Lando-HoloNet is now known as Lando-SpacePimp
[02:32:06] <anon219387> I guess you can, just open a file with `w:gz`.
[02:32:06] *** Quits: sgn- (~sgn@user/sgn) (Ping timeout: 264 seconds)
[02:32:11] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:32:22] *** Quits: dkmueller (~dkmueller@2a01:c22:6e41:3300:38d2:735e:6d5:e659) (Quit: WeeChat 3.1)
[02:32:26] <anon219387> https://docs.python.org/3/library/tarfile.html#tar-examples
[02:32:40] *** Joins: dkmueller (~dkmueller@2a01:c22:6e41:3300:38d2:735e:6d5:e659)
[02:33:12] *** Quits: th0th (uid499569@id-499569.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[02:33:43] *** Joins: sgn- (~sgn@user/sgn)
[02:35:15] <ezzieyguywuf> ah hah, I thought I saw that
[02:35:17] <ezzieyguywuf> thanks!
[02:35:39] *** Quits: dkmueller (~dkmueller@2a01:c22:6e41:3300:38d2:735e:6d5:e659) (Client Quit)
[02:35:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:35:44] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[02:35:55] *** Joins: n3wham (~n3wham@31.205.199.148)
[02:35:55] <ezzieyguywuf> I was referring to this documentation which doesn't mention it for some reason https://docs.python.org/3.8/library/tarfile.html#tarfile.TarFile
[02:35:56] *** Joins: dkmueller (~dkmueller@2a01:c22:6e41:3300:38d2:735e:6d5:e659)
[02:37:07] <anon219387> You're welcome. I can see this option in the 3.8 documentation that you just pasted. ;)
[02:37:46] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[02:37:47] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:38:12] <ezzieyguywuf> lol, I see it now too
[02:38:12] <JavaBean> bancroft, did you manage to survive that?
[02:38:14] <ezzieyguywuf> just further up
[02:38:22] <ezzieyguywuf> I guess I was "lost in the weeds" further down
[02:38:23] <bancroft> JavaBean: yup lol
[02:42:04] *** Joins: taeaad (~taeaad@user/taeaad)
[02:44:45] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Quit: Going offline, see ya! (www.adiirc.com))
[02:46:40] <NightMonkey> Howdy. Naive question here: can I chain venvs? Like, can I have a base venv, and then have other venvs piggyback on that base?
[02:47:00] *** Quits: DaNeenjah (~jake@40.sub-72-106-103.myvzw.com) (Quit: WeeChat 3.1)
[02:47:15] *** Joins: isagalaev (~Thunderbi@2601:600:a280:42f0:f220:8c96:b66d:184b)
[02:47:48] *** Quits: jthistle (~jthistle@user/jthistle) (Quit: WeeChat 2.8)
[02:48:07] <NightMonkey> I have this idea to have a venv for 'iac' code, for projects like ansible, and then have more application-centric venvs that piggyback on the 'iac' venv.
[02:48:19] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[02:48:29] *** Joins: eax (~eax@146-115-91-35.s4631.c3-0.sbo-ubr1.sbo.ma.cable.rcncustomer.com)
[02:48:39] *** Quits: agentgasmask_ (agentgasma@user/superboot) (Ping timeout: 272 seconds)
[02:49:26] *** Quits: BobC (~BobC@cpe-70-95-182-244.san.res.rr.com) (Ping timeout: 272 seconds)
[02:50:43] *** Joins: jazzy (~jaziz@2600:380:4547:d128:c41c:b096:5cc5:1cd0)
[02:50:43] <deniska> NightMonkey: venvs are easily recreatable given a list of packages produced e.g. by `pip freeze`. You can freeze one venv, and use it to create a new one, and then you can install additional packages in it
[02:51:38] *** Quits: isagalaev (~Thunderbi@2601:600:a280:42f0:f220:8c96:b66d:184b) (Client Quit)
[02:51:46] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[02:51:56] *** Joins: wyclif (~wyclif@user/wyclif)
[02:52:37] *** Joins: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net)
[02:53:17] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[02:53:59] *** Joins: mraag (~mraag@37.156.73.27)
[02:54:08] <NightMonkey> deniska: Thank you. Yah, I was thinking more of less 'wasted space' from duplication. But I could see doing this could make the code behind venv very complex and brittle.
[02:54:49] <deniska> NightMonkey: you can probably hack python into doing what you want, but as you said, it'll probably be brittle :)
[02:55:03] *** Joins: ibejohn (~jhardy@104.4.30.169)
[02:55:13] <NightMonkey> deniska: Well, thanks for thinking through it with me. :)
[02:55:22] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[02:55:27] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[02:55:46] <deniska> doing funky things with .pth files or adding "base" env to sys.path… and that all sounds bad unless you are actually running out of a disk space
[02:55:49] <anon219387> there is one other overly complex solution: docker images with layers
[02:56:31] <anon219387> technically, you could prepare the base image with all of the dependencies for your `iac` needs
[02:56:39] <anon219387> and then extend it for other projects
[02:56:44] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[02:56:57] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[02:56:59] <NightMonkey> anon219387: Ah, yes. Thanks. And probably that's already something I could piggyback on out there.
[02:57:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:58:17] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[02:58:19] *** Joins: Ninpo (~Ninpo@charlton.qap.la)
[02:59:25] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[03:00:23] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.1)
[03:00:25] *** Quits: mraag (~mraag@37.156.73.27) (Remote host closed the connection)
[03:00:30] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:01:19] *** Joins: Anders (~Anders@user/anders)
[03:01:43] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[03:02:25] *** Joins: hexeme (~hexeme@ec2-54-188-57-39.us-west-2.compute.amazonaws.com)
[03:02:41] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 252 seconds)
[03:02:56] *** Quits: n3wham (~n3wham@31.205.199.148) (Quit: Client closed)
[03:03:35] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:04:11] *** Joins: darksun (~darksun@user/darksun)
[03:04:13] <cluelessperson> Hi there.
[03:04:21] <cluelessperson> how do you include external assets with your python project?
[03:04:29] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[03:04:34] <cluelessperson> for example, protobufs.
[03:04:59] <cluelessperson> they may exist in a git repo and subdirectory
[03:05:08] <cluelessperson> I need to build them and use them with python.
[03:06:03] *** Joins: Deep6 (~Deep6@fixed-189-203-231-160.totalplay.net)
[03:06:12] <anon219387> NightMonkey: Visual Studio Code should have rather seamless integration for development inside containers. I have never tried it out though.
[03:07:04] *** Joins: Evolver (~Evolver@user/evolver)
[03:07:23] *** Parts: tmp3434535345435 (~tmp343453@179-70-51-68.user3p.veloxzone.com.br) ()
[03:07:32] <anon219387> cluelessperson: in case of protobufs, then I guess, just copy them to your project's repository
[03:07:33] <SuperLag> it does
[03:07:44] *** Joins: tmp3434535345435 (~tmp343453@179-70-51-68.user3p.veloxzone.com.br)
[03:07:50] *** Parts: tmp3434535345435 (~tmp343453@179-70-51-68.user3p.veloxzone.com.br) ()
[03:08:22] <SuperLag> anon219387: NightMonkey: See the "Remote: Containers" extension
[03:08:39] <anon219387> yes, this is what I was referring to
[03:08:55] *** Joins: lesihctej (~jetchisel@user/jetchisel)
[03:08:58] <anon219387> documentation says it works, but I didn't check it out in practice, so... can't tell
[03:09:12] <SuperLag> I can confirm it does work. :)
[03:09:26] <anon219387> Cool!
[03:09:44] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[03:10:13] *** Joins: wyclif (~wyclif@user/wyclif)
[03:11:02] *** Joins: tmp3434535345435 (~tmp343453@179-70-51-68.user3p.veloxzone.com.br)
[03:11:42] *** Parts: tmp3434535345435 (~tmp343453@179-70-51-68.user3p.veloxzone.com.br) ()
[03:12:09] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[03:12:19] <cluelessperson> anon219387, that's the thing, I don't want to just copy them.
[03:12:21] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[03:12:46] <cluelessperson> what if I want to provide iconography across repos, sharing the same images?
[03:12:49] *** Joins: jthistle (~jthistle@user/jthistle)
[03:12:55] *** Joins: Vornotron (~Vornicus@cpe-23-243-151-111.socal.res.rr.com)
[03:13:12] *** Joins: cjb (~cjb@user/cjb)
[03:13:29] <anon219387> idk, use git submodule?
[03:14:01] *** Joins: vimart (~vimart@85.255.233.173)
[03:14:14] *** Joins: karelian (~karelian@user/karelian)
[03:14:28] <anon219387> In general, it depends on your use case. (As always. xD)
[03:14:33] *** Joins: brownan (~brownan@108-253-231-43.lightspeed.rlghnc.sbcglobal.net)
[03:14:37] *** Quits: ntdll_ (~ntdll@user/ntdll) (Ping timeout: 272 seconds)
[03:14:37] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-cc00-ba0e-0ca7-233b.res6.spectrum.com) (Ping timeout: 272 seconds)
[03:15:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:16:09] <anon219387> There is no just one perfect way to handle everything. For instance, big tech companies (e.g. Google) use monorepo, whereas if you just need one file (protobuf) to use API of another project, then copying that file seems just fine.
[03:16:48] *** Parts: karelian (~karelian@user/karelian) (WeeChat 2.8)
[03:17:14] *** Quits: dieth (~dieth@user/dieth) (Ping timeout: 244 seconds)
[03:18:17] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[03:18:48] *** Joins: p3r3grin (~kevin@user/p3r3grin)
[03:19:56] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[03:20:57] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[03:22:14] *** Joins: thiras (~thiras@user/thiras)
[03:22:34] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:23:15] *** Quits: Anders (~Anders@user/anders) (Quit: Leaving)
[03:23:42] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 264 seconds)
[03:25:27] *** Joins: eichin (sid27120@id-27120.tinside.irccloud.com)
[03:25:49] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[03:26:32] *** Joins: salpynx (~salpynx@121.73.84.248)
[03:27:44] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[03:27:56] *** Joins: jant (~jant@pavlov.tiddo.net)
[03:28:11] *** Quits: p3r3grin (~kevin@user/p3r3grin) (Quit: WeeChat 3.1)
[03:28:23] <cluelessperson> Well similarly, I would like this to be an installable package with pip
[03:28:25] *** Joins: p3r3grin (~kevin@user/p3r3grin)
[03:28:28] *** JTL1 is now known as JTL
[03:28:31] *** Quits: dkmueller (~dkmueller@2a01:c22:6e41:3300:38d2:735e:6d5:e659) (Ping timeout: 264 seconds)
[03:28:32] *** Joins: wyclif (~wyclif@user/wyclif)
[03:28:46] <cluelessperson> I need to make pip get the protobufs, build them, and use it with the installed library.
[03:29:31] *** Quits: abra (~abra@2001:a61:afd:1001:4112:e2a7:1526:a527) (Quit: Client closed)
[03:29:44] *** Joins: dieth (~dieth@user/dieth)
[03:32:50] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[03:32:53] *** Quits: jvalleroy_ (~quassel@user/jvalleroy) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:33:03] *** Quits: zamba (~marius@5.226.162.54) (Ping timeout: 244 seconds)
[03:33:47] *** Quits: p3r3grin (~kevin@user/p3r3grin) (Quit: WeeChat 3.1)
[03:33:57] *** Joins: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com)
[03:34:02] *** Joins: p3r3grin (~kevin@user/p3r3grin)
[03:34:02] *** Quits: p3r3grin (~kevin@user/p3r3grin) (Client Quit)
[03:34:24] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[03:34:40] *** Joins: rama (~rama@2601:641:400:423:c578:df6a:7d1d:cf6f)
[03:34:42] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[03:35:30] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[03:35:34] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[03:35:41] *** Joins: p3r3grin (~kevin@user/p3r3grin)
[03:35:46] *** Quits: Narrat (~omnius@p200300df5f016ecf06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:36:09] *** Joins: cliluw (~cliluw@47.147.80.149)
[03:36:39] *** Quits: user3456 (user3456@user/user3456) (Quit: ZNC - https://znc.in)
[03:36:48] *** Joins: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030)
[03:36:54] *** Quits: brownan (~brownan@108-253-231-43.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 264 seconds)
[03:37:39] *** Joins: Thanatos (~Thanatos@197.210.28.27)
[03:38:06] *** Quits: bjwest (~johnny@191.96.67.5) (Ping timeout: 268 seconds)
[03:38:09] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[03:38:38] *** Joins: user3456 (user3456@user/user3456)
[03:40:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[03:40:12] *** Joins: dkmueller (~dkmueller@2a01:c22:6e41:3300:38d2:735e:6d5:e659)
[03:41:11] *** Quits: rama (~rama@2601:641:400:423:c578:df6a:7d1d:cf6f) (Ping timeout: 252 seconds)
[03:41:36] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[03:42:05] *** Joins: tanner (~tanner@tilde.town)
[03:43:38] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[03:46:02] *** Joins: ZedHedTed (~ZedHedTed@pool-98-118-47-241.bstnma.fios.verizon.net)
[03:46:06] <Soni> supakeen: btw https://github.com/pygments/pygments/issues/1771 do you think you could update your pygments?
[03:46:47] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[03:47:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[03:47:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:48:16] *** Quits: p3r3grin (~kevin@user/p3r3grin) (Quit: WeeChat 3.1)
[03:48:18] <ZedHedTed>  /connect -ssl irc.rainynight.club 6637
[03:48:26] <ZedHedTed>  /connect -ssl irc.rainynight.club 6637
[03:48:34] <ZedHedTed> what the
[03:48:36] <mefistofeles> lol
[03:48:37] <ZedHedTed> sorry
[03:48:43] <ZedHedTed> extra space
[03:48:56] *** Joins: ElisaElectron (~elisa_ele@2a01:cb1d:88f0:c600:6b9d:2248:effd:485b)
[03:51:45] *** Quits: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net) (Remote host closed the connection)
[03:51:54] *** Joins: audiocat (~audio@2603-8081-1800-0062-3a58-4f24-2a15-fa9e.res6.spectrum.com)
[03:52:09] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[03:54:07] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[03:54:58] *** Joins: c10l (~c10l@89.34.167.207)
[03:56:07] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:56:11] *** Quits: Nact (~l@host-85-27-120-155.dynamic.voo.be) (Quit: Konversation terminated!)
[03:57:01] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:57:18] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 264 seconds)
[03:59:15] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:59:15] *** Wulf4 is now known as Wulf
[03:59:30] *** pizzaiolo is now known as pizza
[03:59:58] *** Joins: CrankyOldBugger (~CrankyOld@172.83.47.158)
[04:00:00] *** Quits: ElisaElectron (~elisa_ele@2a01:cb1d:88f0:c600:6b9d:2248:effd:485b) (Quit: WeeChat 2.3)
[04:00:43] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[04:01:54] *** Joins: ElisaElectron (~elisa_ele@2a01:cb1d:88f0:c600:6b9d:2248:effd:485b)
[04:02:05] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 252 seconds)
[04:02:18] *** Joins: tijuco (~tijuco@user/tijuco)
[04:02:40] *** Joins: wyclif (~wyclif@user/wyclif)
[04:03:23] *** Joins: srhm (~ascii@user/srhm)
[04:05:44] *** Joins: _till_ (~till@user/till/x-8616149)
[04:07:31] *** fjmorazan_ is now known as fjmorazan
[04:07:36] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:07:58] <Neoon> this stuff supposed to be bulletproof?
[04:07:59] <Neoon> https://pastebin.com/gikrKE1m
[04:08:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[04:08:16] <Neoon> To 100% make sure that all processes did finish?
[04:08:31] *** Quits: anon219387 (~anon12387@bij50.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[04:11:01] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:12:21] *** Joins: machine (~machine@user/steam)
[04:12:37] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:12:42] *** Quits: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030) (Ping timeout: 250 seconds)
[04:12:44] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[04:13:28] *** vdamewood is now known as Guest3662
[04:13:28] *** vinleod is now known as vdamewood
[04:15:54] *** Quits: Guest3662 (~vdamewood@fedora/vdamewood) (Ping timeout: 264 seconds)
[04:17:04] *** Joins: Gerula (~Gerula@user/gerula)
[04:18:54] *** Joins: death916 (~death916@user/death916)
[04:19:30] *** Joins: ssbr` (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[04:19:36] *** Quits: CrankyOldBugger (~CrankyOld@172.83.47.158) (Quit: Client closed)
[04:19:55] *** Joins: wyclif (~wyclif@user/wyclif)
[04:21:15] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 272 seconds)
[04:21:19] *** Quits: frostschutz (~frostschu@2a01:c22:d02c:8000:cca7:50b2:cc8c:ac87) (Remote host closed the connection)
[04:21:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[04:21:50] *** Joins: easior (~easior@115.239.231.140)
[04:23:59] *** Joins: easior_ (~easior@115.239.231.138)
[04:24:10] *** Quits: dkmueller (~dkmueller@2a01:c22:6e41:3300:38d2:735e:6d5:e659) (Quit: WeeChat 3.1)
[04:24:25] *** Quits: tachoknight (~tachoknig@73.9.246.255) (Quit: Some random bits)
[04:24:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:26:37] *** Joins: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030)
[04:27:24] *** Quits: MONEINMATT44 (~MONEINMAT@node-1w7jra26n40ovtqzj3xd9hod7.ipv6.telus.net) (Quit: Client closed)
[04:27:35] *** Quits: easior (~easior@115.239.231.140) (Ping timeout: 272 seconds)
[04:27:48] *** Joins: Trashlord (~trash@user/trashlord)
[04:29:48] *** Joins: superboot (~agentgasm@user/superboot)
[04:30:10] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:18] *** Quits: machine (~machine@user/steam) (Quit: machine)
[04:30:30] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:30:33] *** Joins: socomm (~Guest90@047-041-018-199.res.spectrum.com)
[04:32:15] *** FunkyBob_ is now known as FunkyBob
[04:34:51] *** Parts: a152280 (~user@66.119.118.5) (rcirc on GNU Emacs 26.3)
[04:35:06] *** Quits: superboot (~agentgasm@user/superboot) (Ping timeout: 264 seconds)
[04:35:19] *** Joins: superboot (agentgasma@user/superboot)
[04:35:51] *** Joins: wyclif (~wyclif@user/wyclif)
[04:36:04] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[04:38:00] *** Joins: zogg (~Guest47@165.73.240.44)
[04:38:25] *** Quits: jonfen (~jonfen@65-130-223-169.slkc.qwest.net) (Quit: WeeChat 2.8)
[04:39:24] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:40:19] *** Quits: socomm (~Guest90@047-041-018-199.res.spectrum.com) (Quit: Client closed)
[04:40:28] *** Quits: superboot (agentgasma@user/superboot) (Killed (mercury.libera.chat (Nickname regained by services)))
[04:40:35] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[04:40:43] *** Joins: agentgasmask_ (agentgasma@user/superboot)
[04:41:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:41:12] *** Joins: jess (~jess@libera/staff/jess)
[04:41:35] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[04:41:59] *** Joins: wyclif (~wyclif@user/wyclif)
[04:48:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[04:55:30] *** Joins: zebrag (~chris@user/zebrag)
[04:57:18] *** Joins: easior__ (~easior@115.239.231.138)
[04:58:30] *** Quits: easior_ (~easior@115.239.231.138) (Ping timeout: 244 seconds)
[04:59:12] *** Joins: rapfaria (~doxem@179.99.180.104)
[04:59:59] *** Quits: cosmicennui (~cosmicenn@c-73-34-75-186.hsd1.co.comcast.net) (Quit: WeeChat 2.8)
[05:00:01] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[05:00:07] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 268 seconds)
[05:00:25] *** Joins: foozle (~foozle@2001-b011-c001-1cf5-b64c-4c26-1696-9595.dynamic-ip6.hinet.net)
[05:02:14] *** Quits: ssbr` (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[05:02:36] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[05:03:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:03:14] *** Quits: ibejohn (~jhardy@104.4.30.169) (Quit: WeeChat 3.2-rc1)
[05:05:11] *** Joins: darksun (~darksun@user/darksun)
[05:06:25] *** Quits: Vornotron (~Vornicus@cpe-23-243-151-111.socal.res.rr.com) (Read error: Connection reset by peer)
[05:06:40] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[05:09:54] *** Joins: pierrepaul (uid504261@id-504261.highgate.irccloud.com)
[05:10:11] *** Joins: alaudet (~al@161.216.164.9)
[05:10:15] *** Quits: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[05:10:30] *** Joins: jhardy (~jhardy@104.4.30.169)
[05:10:58] *** Quits: samhain (~samhain@user/samhain) (Quit: ZNC - https://znc.in)
[05:11:06] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[05:11:15] *** Joins: samhain (~samhain@user/samhain)
[05:11:48] *** Quits: alaudet (~al@161.216.164.9) (Client Quit)
[05:12:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[05:13:12] *** Quits: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com) (Ping timeout: 272 seconds)
[05:13:12] *** Joins: adinfinitum (~user@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[05:13:25] *** Joins: normic (~normic@p57bcd98d.dip0.t-ipconnect.de)
[05:13:51] *** Joins: wyclif (~wyclif@user/wyclif)
[05:14:07] <ali1234> Neoon: not really. there's so many edge cases, and it is different on every OS too
[05:14:12] *** Quits: easior__ (~easior@115.239.231.138) (Read error: Connection reset by peer)
[05:14:12] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:14:32] *** Joins: easior__ (~easior@115.239.231.138)
[05:14:35] <ali1234> the biggest problem by far is handling exceptions and crashes
[05:14:40] *** Quits: foozle (~foozle@2001-b011-c001-1cf5-b64c-4c26-1696-9595.dynamic-ip6.hinet.net) (Quit: Leaving)
[05:15:06] <ali1234> like you might try using with: but nope, even that can get confused and leave orphans
[05:15:41] *** Joins: mastardet (~Guest80@189.4.73.42)
[05:16:16] *** Parts: mastardet (~Guest80@189.4.73.42) ()
[05:16:18] *** Joins: dude-x_ (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[05:16:46] *** Joins: marnold (~matt@cpe-67-249-113-244.twcny.res.rr.com)
[05:17:04] *** Joins: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[05:18:45] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[05:18:54] *** Quits: dtux (~dtux@2600:1700:22f0:37bf:9d44:8485:16f2:1951) (Ping timeout: 264 seconds)
[05:19:07] *** Quits: adinfinitum (~user@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Quit: WeeChat 3.0.1)
[05:19:30] *** Joins: mambang (~mambang@user/mambang)
[05:23:00] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[05:24:48] *** Quits: Evolver (~Evolver@user/evolver) (Quit: Leaving)
[05:25:34] *** Joins: Evolver (~Evolver@user/evolver)
[05:28:34] *** Joins: bjwest (~johnny@191.96.67.196)
[05:29:39] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:29:55] *** Joins: Henry151 (~bishop@user/henry151)
[05:30:09] <Henry151> howdy folks!
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:42] *** Evolver is now known as Evolver_
[05:32:54] *** Evolver_ is now known as Evolver
[05:34:41] *** Joins: Flux (~Fluxx@user/fluxx)
[05:35:41] *** Joins: jamwil (~igloo@d23-17-44-99.abhsia.telus.net)
[05:37:16] <nedbat> Henry151: hey
[05:37:32] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[05:38:36] *** Quits: Evolver (~Evolver@user/evolver) (Quit: Leaving)
[05:38:56] *** Joins: Evolver (~Evolver@user/evolver)
[05:39:29] *** Joins: areicogi (~koning@c-24-5-121-76.hsd1.ca.comcast.net)
[05:39:31] *** jimm is now known as jim
[05:41:21] *** Quits: Thanatos (~Thanatos@197.210.28.27) (Read error: Connection reset by peer)
[05:41:57] *** Quits: jamwil (~igloo@d23-17-44-99.abhsia.telus.net) (Quit: Igloo IRC: https://iglooirc.com)
[05:42:11] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[05:43:22] *** Joins: jamwil (~jamwil@d23-17-44-99.abhsia.telus.net)
[05:44:04] *** Joins: jsnd (~jasond@ip68-4-206-65.oc.oc.cox.net)
[05:46:37] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 272 seconds)
[05:48:24] *** Quits: jamwil (~jamwil@d23-17-44-99.abhsia.telus.net) (Remote host closed the connection)
[05:49:18] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:51:29] *** Joins: Praise- (~Fat@user/praise)
[05:51:41] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 272 seconds)
[05:53:10] *** Joins: Snyp (~rksht@49.207.218.69)
[05:53:26] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[05:57:27] *** Joins: skapata (~Skapata@user/skapata)
[05:57:58] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[05:59:25] *** Joins: rock2X (~rock@c-69-181-4-101.hsd1.ca.comcast.net)
[05:59:42] *** Joins: vlm (~vlm@user/vlm)
[06:00:34] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[06:01:03] *** Joins: c10l (~c10l@89.34.167.207)
[06:03:28] *** Joins: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[06:03:58] *** Joins: GuuberMT (~guubermt@dsl-74-83-194-229.fuse.net)
[06:03:59] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:13:28] *** Quits: Evolver (~Evolver@user/evolver) (Quit: Leaving)
[06:13:47] *** Joins: Evolver (~Evolver@user/evolver)
[06:15:41] *** Parts: meltingwax (sid429936@id-429936.stonehaven.irccloud.com) (WeeChat 2.3)
[06:16:46] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[06:17:33] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 244 seconds)
[06:17:49] *** Quits: duso_ (~duso@130.102.13.110) (Quit: Lost terminal)
[06:17:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:18:18] *** Joins: rchon (~rchon@74.215.5.189)
[06:18:22] *** Joins: electrolytic (~electroly@gateway/tor-sasl/electrolytic)
[06:19:33] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[06:20:37] *** Quits: jsnd (~jasond@ip68-4-206-65.oc.oc.cox.net) ()
[06:22:17] *** Joins: lumgwada (~lumgwada@101.181.126.104)
[06:25:51] *** Sadale_ is now known as Sadale
[06:27:52] *** Quits: vimart (~vimart@85.255.233.173) (Quit: WeeChat 2.8)
[06:30:53] *** Joins: driib1 (~driib@185.65.135.232)
[06:33:15] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:9174:21e5:e9f1:fa54) (Quit: Leaving)
[06:34:05] *** Quits: driib (~driib@193.138.218.160) (Ping timeout: 244 seconds)
[06:34:05] *** driib1 is now known as driib
[06:36:49] *** MelMalik is now known as Ellenor
[06:37:05] *** Quits: rchon (~rchon@74.215.5.189) (Quit: Textual IRC Client: www.textualapp.com)
[06:37:09] *** Joins: BobC (~BobC@cpe-70-95-182-244.san.res.rr.com)
[06:37:53] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[06:44:57] *** Quits: abhixec_ (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[06:45:47] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[06:46:06] *** Quits: zogg (~Guest47@165.73.240.44) (Ping timeout: 250 seconds)
[06:46:28] *** Joins: molzy (~molzy@user/molzy)
[06:47:20] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:52:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[06:56:19] *** Joins: eskatonic (~eskatonic@user/eskatonic)
[06:56:31] *** Joins: knipster (~knipster@ool-435056ea.dyn.optonline.net)
[07:00:46] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:00:46] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (tungsten.libera.chat (Nickname regained by services)))
[07:00:46] *** finn_elija is now known as FinnElija
[07:02:13] *** Quits: bjwest (~johnny@191.96.67.196) (Ping timeout: 268 seconds)
[07:02:23] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[07:02:57] *** Joins: bjwest (~johnny@102.165.16.193)
[07:06:40] *** Joins: darksun (~darksun@user/darksun)
[07:07:22] *** Joins: dez (uid92154@user/dez)
[07:10:34] *** Ekho- is now known as Ekho
[07:11:13] *** Quits: Mrokii (mrokii@gateway/vpn/airvpn/mrokii) (Ping timeout: 252 seconds)
[07:12:05] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[07:14:53] *** Joins: wei2912 (~wei2912@112.199.250.21)
[07:19:02] *** Quits: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030) (Ping timeout: 250 seconds)
[07:19:40] *** Joins: cosmicennui (~cosmicenn@c-73-34-75-186.hsd1.co.comcast.net)
[07:20:05] *** Quits: mambang (~mambang@user/mambang) (Quit: Leaving)
[07:20:22] *** Quits: boxeleph1nt (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Quit: leaving)
[07:20:41] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[07:21:06] <audiocat> hello
[07:24:08] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[07:25:32] *** Joins: Mrokii (mrokii@gateway/vpn/airvpn/mrokii)
[07:28:48] *** Joins: pigeonhands (~smc@219-89-117-211.adsl.xtra.co.nz)
[07:29:17] *** Joins: Fiji (~Fiji@user/fiji)
[07:29:44] <pigeonhands> 1
[07:30:11] *** Quits: pigeonhands (~smc@219-89-117-211.adsl.xtra.co.nz) (Quit: leaving)
[07:30:38] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 272 seconds)
[07:30:41] *** Joins: Vonter (~Vonter@user/vonter)
[07:32:21] *** Joins: pigeonhands (~smc@219-89-117-211.adsl.xtra.co.nz)
[07:34:30] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[07:36:33] *** Joins: ssbr` (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[07:36:47] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[07:37:15] *** Quits: pigeonhands (~smc@219-89-117-211.adsl.xtra.co.nz) (Quit: leaving)
[07:37:15] *** Joins: euouae (~user@user/euouae)
[07:37:44] <drew> I am trying to print local vars of a program while it is running. I did python -m pdb program.py, then pdb> c
[07:37:59] <drew> the program runs, but then I lose access to the pdb shell to do something like locals()
[07:38:18] <euouae> drew: you can add a breakpoint() at an appropriate line of your code to enter pdb
[07:38:28] *** Parts: molzy (~molzy@user/molzy) ()
[07:38:44] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[07:39:18] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[07:39:38] <euouae> Question: How can I allow for a user directory (say ~/.local/share/fooapp/plugins/) where the user can store python scripts that my application loads?
[07:39:47] <euouae> In particular what mechanism allows for the load of such a script?
[07:40:01] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[07:41:35] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[07:43:17] *** Joins: darksun (~darksun@user/darksun)
[07:45:40] <vdamewood> euouae: Is your app written in Python, or are you using the C API?
[07:46:22] *** Joins: moonface (~conor@45.132.224.91)
[07:47:34] <euouae> vdamewood: in Python
[07:48:23] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[07:48:44] *** Quits: liberaTor (~Asmodee@gateway/tor-sasl/asmodee) (Quit: Teleporting ...)
[07:49:14] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[07:49:14] *** Quits: agentgasmask_ (agentgasma@user/superboot) (Ping timeout: 252 seconds)
[07:49:31] <vdamewood> euouae: Add the directory to the PYTHONPATH environment variable.
[07:50:11] <vdamewood> euouae: You can then import from that location, which is basically how you would run another module in a Python application.
[07:50:26] <Soni> hmm can you actually parse b"0\t1\n" into (0, 1) in python in less than 33 lines, without using regex and without making any errors that are impossible to recover from? (bonus points for wrapping the relevant errors, and only the relevant errors, into a custom error)
[07:50:33] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[07:50:40] *** Joins: agentgasmask_ (~agentgasm@user/superboot)
[07:51:34] <Soni> hmm wonder if habnabit_ is around...
[07:51:38] <vdamewood> You can use importlib.import_module ti import a module by a string, such as one read from a configuration file or a directory listing.
[07:51:53] <euouae> vdamewood: okay, 1) is there a module that takes care of the XDG standard & Windows defaults and Mac? 2) I read in setuptools that the entry points can be used as a plugin mechanism. Is this relevant?
[07:52:07] *** Joins: biozz (~biozz@178.57.22.163)
[07:52:58] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:53:13] <vdamewood> 1: Not that I know of; 2: I'd probably have to see what you read to understand what it means.
[07:53:42] *** Joins: SebastianM (~seba@user/sebastianm)
[07:53:46] <euouae> vdamewood: for the plugins, https://setuptools.readthedocs.io/en/latest/userguide/entry_point.html#advertising-behavior
[07:54:57] <euouae> See the first paragraph
[07:55:06] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[07:55:41] *** Joins: biozz (~biozz@static.211.203.216.95.clients.your-server.de)
[07:56:34] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[07:59:40] <vdamewood> euouae: That wouldn't allow you to have a private section of plugins. These would be packages installed in Python's normal search path.
[07:59:52] <vdamewood> (or modules)
[07:59:59] <euouae> Ah got it, thank you
[08:01:58] *** Joins: pigeonha1ds (~smc@219-89-117-211.adsl.xtra.co.nz)
[08:02:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[08:02:22] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:03:47] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[08:04:26] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[08:04:39] *** Joins: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net)
[08:04:53] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[08:05:47] *** Joins: zogg (~zogg@156-155-160-150.ip.internet.co.za)
[08:06:37] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[08:08:25] *** Joins: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030)
[08:08:42] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[08:11:20] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Remote host closed the connection)
[08:14:19] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 244 seconds)
[08:14:42] *** Joins: cliluw (~cliluw@47.147.80.149)
[08:17:26] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[08:18:22] <NightMonkey> SuperLag: Belated thank you.
[08:20:06] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 264 seconds)
[08:20:14] *** Joins: darksun (~darksun@user/darksun)
[08:20:55] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[08:22:22] *** Quits: pigeonha1ds (~smc@219-89-117-211.adsl.xtra.co.nz) (Quit: leaving)
[08:23:03] *** Joins: pigeonhands (~pigeonhan@219-89-117-211.adsl.xtra.co.nz)
[08:24:08] *** Quits: mikkel (~mike@208.110.120.167) (Ping timeout: 244 seconds)
[08:25:35] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[08:26:57] *** Quits: euouae (~user@user/euouae) (Quit: ERC (IRC client for Emacs 26.3))
[08:29:38] *** Joins: Lindisfarne (~l@user/lindis)
[08:30:20] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[08:32:08] *** Quits: A-KO (~ako@user/a-ko) (Remote host closed the connection)
[08:33:37] *** Quits: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net) (Quit: leaving)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[08:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:23] *** Joins: hooop (~hooop@1.186.118.177)
[08:39:53] *** Quits: biozz (~biozz@static.211.203.216.95.clients.your-server.de) (Remote host closed the connection)
[08:42:44] *** Quits: BobC (~BobC@cpe-70-95-182-244.san.res.rr.com) (Ping timeout: 268 seconds)
[08:47:17] *** Quits: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[08:48:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:50:35] *** Quits: hexeme (~hexeme@ec2-54-188-57-39.us-west-2.compute.amazonaws.com) (Changing host)
[08:50:35] *** Joins: hexeme (~hexeme@user/hexeme)
[08:51:22] *** Joins: mikkel (~mike@208.110.120.167)
[08:51:44] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[08:51:57] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:52:01] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:53:04] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 244 seconds)
[08:55:28] *** Quits: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030) (Quit: Client closed)
[08:55:56] *** Joins: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030)
[08:56:02] *** roniez_ is now known as roniez
[08:56:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:56:49] *** Joins: viktorivan (~ivan@187.223.103.108)
[09:00:37] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 244 seconds)
[09:01:46] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[09:01:47] *** Joins: saagaar59 (~saagaar@2400:1a00:bd11:651e:447c:8099:3840:441f)
[09:02:20] *** Joins: heco (~redrum@user/redrum88)
[09:02:31] *** Quits: srhm (~ascii@user/srhm) (Read error: Connection reset by peer)
[09:02:59] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:04:44] *** Joins: lethu (~lethu@196.117.96.27)
[09:06:18] *** Quits: hooop (~hooop@1.186.118.177) (Quit: Quit)
[09:07:07] *** Joins: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au)
[09:09:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[09:10:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:11:06] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[09:12:13] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[09:12:29] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[09:13:23] *** Quits: agentgasmask_ (~agentgasm@user/superboot) (Ping timeout: 252 seconds)
[09:14:33] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:14:59] *** Joins: agentgasmask_ (agentgasma@user/superboot)
[09:19:01] *** Joins: a1 (~ekaj@user/ekaj)
[09:20:38] *** Parts: Lindisfarne (~l@user/lindis) ()
[09:20:48] *** Quits: rock2X (~rock@c-69-181-4-101.hsd1.ca.comcast.net) (Quit: Lost terminal)
[09:23:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[09:24:40] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:25:06] *** Quits: bjwest (~johnny@102.165.16.193) (Quit: Konversation terminated!)
[09:26:39] *** Quits: cjb (~cjb@user/cjb) (Read error: Connection reset by peer)
[09:27:16] *** Quits: agentgasmask_ (agentgasma@user/superboot) (Remote host closed the connection)
[09:27:52] *** Quits: pigeonhands (~pigeonhan@219-89-117-211.adsl.xtra.co.nz) ()
[09:32:05] *** Quits: _till_ (~till@user/till/x-8616149) (Ping timeout: 252 seconds)
[09:32:45] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:49] *** Joins: vaio (~gary@user/ghost)
[09:36:16] *** Quits: Snyp (~rksht@49.207.218.69) (Quit: WeeChat 3.1)
[09:38:22] *** Quits: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Quit: dtux)
[09:39:28] *** Joins: yupyup (sid228030@id-228030.brockwell.irccloud.com)
[09:40:04] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:41:06] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[09:42:25] *** Quits: lethu (~lethu@196.117.96.27) (Remote host closed the connection)
[09:42:36] *** doc|home is now known as doc
[09:44:07] *** Joins: kohokia (~sam@2600:8802:5b18:8900::a118)
[09:44:37] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) ()
[09:45:23] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[09:45:41] *** Quits: andi_ (~andi@email.soapsurfer.de) (Changing host)
[09:45:41] *** Joins: andi_ (~andi@user/andi/x-3467420)
[09:45:52] *** Joins: n0cto (~n0cto@37.19.210.87)
[09:47:34] *** Joins: fannagoganna (~tanim@c-98-37-1-250.hsd1.ca.comcast.net)
[09:49:20] *** Joins: justyb11 (~justyb@2601:483:500:3ea:b934:dac8:1b5d:c03d)
[09:50:03] *** Joins: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se)
[09:50:47] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:53:11] *** Parts: moonface (~conor@45.132.224.91) ()
[09:53:12] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[09:54:53] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[09:55:45] *** Joins: kosh (~kosh@user/kosh)
[09:56:42] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[09:57:39] *** Quits: kohokia (~sam@2600:8802:5b18:8900::a118) (Quit: WeeChat 3.2)
[09:58:40] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[09:59:28] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2)
[09:59:45] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[10:00:17] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Client Quit)
[10:00:53] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:02:17] *** Joins: johnny_ (sid481967@id-481967.stonehaven.irccloud.com)
[10:02:32] *** Quits: viktorivan (~ivan@187.223.103.108) (Remote host closed the connection)
[10:03:05] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[10:03:54] *** Quits: areicogi (~koning@c-24-5-121-76.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[10:04:11] *** Quits: cosmicennui (~cosmicenn@c-73-34-75-186.hsd1.co.comcast.net) (Quit: WeeChat 2.8)
[10:07:19] *** Joins: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[10:08:35] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[10:09:32] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 244 seconds)
[10:09:46] *** Quits: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030) (Ping timeout: 250 seconds)
[10:09:56] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[10:09:58] *** Joins: darksun (~darksun@user/darksun)
[10:10:21] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[10:11:04] *** Quits: ssbr` (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[10:12:07] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 244 seconds)
[10:12:38] *** marienz__ is now known as marienz_
[10:14:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:15:51] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[10:17:38] *** Joins: popcorn (~popcorn@mobile-107-77-208-158.mobile.att.net)
[10:18:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[10:22:18] *** Quits: popcorn (~popcorn@mobile-107-77-208-158.mobile.att.net) (Quit: Client closed)
[10:22:35] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:23:41] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:24:58] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[10:26:41] *** Joins: aaguilera (~aaguilera@185.41.96.12)
[10:30:30] *** Joins: wyclif (~wyclif@user/wyclif)
[10:30:45] *** Joins: emerent_ (~quassel@p200300cd5703bb6bba27ebfffed28a59.dip0.t-ipconnect.de)
[10:30:45] *** Quits: emerent (~quassel@p200300cd5703bb62ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (iridium.libera.chat (Nickname regained by services)))
[10:30:45] *** emerent_ is now known as emerent
[10:31:31] *** Joins: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01)
[10:33:45] *** Joins: TheVasily (~Sheepdog1@pool-108-48-37-171.washdc.fios.verizon.net)
[10:34:14] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:38:35] *** Quits: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01) (Ping timeout: 272 seconds)
[10:39:17] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[10:39:36] *** Quits: Evolver (~Evolver@user/evolver) (Quit: Leaving)
[10:39:58] *** Joins: Evolver (~Evolver@user/evolver)
[10:41:49] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[10:42:26] *** Joins: gusto (~Augustus@109.255.100.54)
[10:46:40] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:17] *** Joins: seednode (~seednode@user/seednode)
[10:47:28] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[10:52:18] *** Joins: Schnouki (~schnouki@user/schnouki)
[10:54:06] *** Joins: rendar (~rendar@user/rendar)
[10:55:46] *** Joins: eck0 (~Android@047-007-119-133.res.spectrum.com)
[10:58:32] *** Quits: d1b (~db@user/d1b) (Quit: the cake is a lie!)
[10:58:45] *** Joins: d1b (~db@user/d1b)
[10:59:28] *** Joins: reset (~reset@user/reset)
[11:04:37] *** Joins: masoudd (~masoudd@user/masoudd)
[11:04:45] *** Joins: dme86 (~dan@user/dan86)
[11:07:52] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[11:07:54] *** Joins: zaquest (~notzaques@5.128.210.178)
[11:08:43] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:09:54] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 264 seconds)
[11:10:07] *** Quits: spithash (~spithash@user/spithash) (Quit: leaving)
[11:12:12] *** Joins: bjelleklang (~c@user/chha)
[11:12:18] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 264 seconds)
[11:13:56] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[11:15:08] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:15:35] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[11:15:40] *** Parts: ali1234[m] (~ali1234@user/ali1234) ()
[11:16:26] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:16:27] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:17:04] *** Joins: sodimel (~co@31.32.214.113)
[11:17:04] *** Joins: greedom (~greedom@2001:16b8:2e81:4f00:f9a3:2562:5fe:46e4)
[11:18:46] *** Joins: Julian (~tos9@151.66.53.132)
[11:19:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:21:47] *** Joins: bla (~bla@89-67-84-220.dynamic.chello.pl)
[11:22:03] *** Joins: rk04 (~rk04@user/rajk)
[11:22:37] *** Joins: biozz (~biozz@178.57.22.163)
[11:22:45] *** Joins: menace (~someone@user/menace)
[11:23:54] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[11:24:08] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[11:24:30] *** Joins: aam (~aaguilera@camins-142.upc.edu)
[11:24:43] *** Joins: biozz (~biozz@static.211.203.216.95.clients.your-server.de)
[11:25:11] *** Joins: manti7 (~manti7@176.10.104.94)
[11:26:21] *** Joins: Learry (~fabio@h-155-4-43-218.NA.cust.bahnhof.se)
[11:27:02] *** Quits: aaguilera (~aaguilera@185.41.96.12) (Ping timeout: 244 seconds)
[11:28:22] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:29:13] *** Joins: chele (~chele@user/chele)
[11:29:34] *** Joins: Pajus (~Pajus@user/pajus)
[11:32:16] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[11:32:35] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[11:33:14] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[11:33:21] *** Quits: greedom (~greedom@2001:16b8:2e81:4f00:f9a3:2562:5fe:46e4) (Remote host closed the connection)
[11:35:57] *** Joins: daveo (~user@99.196.100.165)
[11:37:31] *** Joins: michaelis (~michaelis@193.183.209.17)
[11:37:53] *** Quits: p-i- (~Ohmu@node-47d.pool-118-172.dynamic.totinternet.net) (Remote host closed the connection)
[11:38:03] *** Joins: slav0nic (slav0nic@python.su)
[11:39:27] *** Parts: daveo (~user@99.196.100.165) (ERC (IRC client for Emacs 26.3))
[11:40:07] *** Joins: spithash (~spithash@user/spithash)
[11:40:24] *** Joins: NanoCoaster (~NanoCoast@p200300e127264d001d3a04d52b588e67.dip0.t-ipconnect.de)
[11:42:18] *** Quits: wyclif (~wyclif@user/wyclif) (Read error: Connection reset by peer)
[11:42:22] <zweimer> Hey. I have a pandas dataframe with 3 columns: "X", "Y" and "Value" and would like to create a heatmap out of it. In order to do that, I need to create a 2D Array out of my data, where each column is a "X" value and each row a "Y" value. How could I do that?
[11:44:36] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 244 seconds)
[11:47:50] *** Joins: tracey (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[11:48:28] *** tracey is now known as trace
[11:48:42] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[11:48:57] *** Quits: drew (~drew@user/drew) (Ping timeout: 252 seconds)
[11:51:46] *** Joins: thiras (~thiras@user/thiras)
[11:52:18] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:52:20] *** Joins: cqi (~cqi@2408:8207:2527:5f40:9cc5:6c87:132e:880d)
[11:52:30] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 264 seconds)
[11:53:08] *** Joins: zamba (~marius@5.226.162.54)
[11:53:29] *** Joins: rk04 (~rk04@user/rajk)
[11:53:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[11:56:28] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[11:56:45] *** Quits: easior__ (~easior@115.239.231.138) (Ping timeout: 264 seconds)
[11:56:57] *** Quits: cqi (~cqi@2408:8207:2527:5f40:9cc5:6c87:132e:880d) (Client Quit)
[11:57:28] *** Quits: Julian (~tos9@151.66.53.132) (Quit: leaving)
[12:00:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:02:10] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 244 seconds)
[12:05:14] *** Joins: feriman (~feriman@188.163.113.127)
[12:07:49] *** Joins: easior (~easior@115.239.231.138)
[12:08:27] *** Joins: falx (~falx@user/falx)
[12:11:20] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[12:11:29] *** Joins: darksun (~darksun@user/darksun)
[12:11:38] *** Joins: easior_ (~easior@115.239.231.142)
[12:12:16] *** Quits: n0cto (~n0cto@37.19.210.87) (Ping timeout: 272 seconds)
[12:12:50] *** Joins: Veticus9 (~Veticus@84.238.78.218)
[12:13:25] *** Joins: zeenk (~zeenk@188.26.30.39)
[12:14:20] *** Quits: easior (~easior@115.239.231.138) (Ping timeout: 252 seconds)
[12:14:24] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[12:16:38] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 244 seconds)
[12:16:42] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 272 seconds)
[12:17:06] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 264 seconds)
[12:17:24] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[12:18:41] *** Joins: dme86 (~dan@user/dan86)
[12:19:29] *** Joins: logithack (~logithack@p200300cfbf21a1002e19c68949c6f8c4.dip0.t-ipconnect.de)
[12:20:21] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:21:49] *** Joins: roelj (~user@2001:1c02:b21:6200:c9cf:5ac8:4ac9:c58e)
[12:22:31] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:22:53] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[12:22:53] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 268 seconds)
[12:23:13] *** Joins: dcaro (~dcaro@user/dcaro)
[12:24:17] *** Joins: betuxy34 (~betuxy@158.181.77.59)
[12:24:19] *** Joins: etienneme (~etienne@176-149-215-214.abo.bbox.fr)
[12:25:06] *** Quits: Learry (~fabio@h-155-4-43-218.NA.cust.bahnhof.se) (Remote host closed the connection)
[12:25:25] <betuxy34> Hey, has someone experience with pymsteams? I am trying to get some text beside a picture instead of above or underneath
[12:26:58] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 244 seconds)
[12:27:17] *** Joins: expix (~1@amontpellier-658-1-18-253.w83-201.abo.wanadoo.fr)
[12:27:37] *** Joins: Juhaz (juhaz@hilla.kapsi.fi)
[12:27:53] *** Joins: Adoi (~Adoi@user/adoi)
[12:28:09] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[12:29:16] *** Joins: darksun (~darksun@user/darksun)
[12:29:54] *** Joins: Adois (~Adoi@user/adoi)
[12:30:14] *** Quits: easior_ (~easior@115.239.231.142) (Quit: Leaving)
[12:30:55] *** Joins: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030)
[12:31:10] *** Joins: Tas-sos (~Tas-sos@ppp079167217163.access.hol.gr)
[12:31:19] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:32:10] *** Quits: Tas-sos (~Tas-sos@ppp079167217163.access.hol.gr) (Client Quit)
[12:32:39] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[12:35:16] *** Joins: euouae (~euouae@user/euouae)
[12:36:04] *** Joins: Guddu (~Guddu@117.222.84.65)
[12:36:55] *** Joins: easior (~easior@115.239.231.142)
[12:37:29] <Guddu> Does visual studio allow for code formatting as per pep8 if i need to format a selection?
[12:37:38] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[12:37:40] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:49] *** Quits: BillyZane2 (~BillyZane@193.160.245.142) (Read error: Connection reset by peer)
[12:40:04] *** Joins: ter0 (~ter0@user/ter0)
[12:40:09] *** Joins: BillyZane2 (~BillyZane@193.160.245.142)
[12:40:11] *** Joins: easior_ (~easior@115.239.231.142)
[12:40:29] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:41:12] <euouae> Guddu: You can select a formatter like autopep8 or black
[12:41:26] <euouae> and you can format a selection
[12:41:43] *** Joins: gaboo (~gaboo@2a01:e0a:21d:8230:1eba:66c4:8734:6b03)
[12:42:05] *** Joins: Falc (~ldt@2a02:2788:1008:562:69b2:ceee:55d9:e1ec)
[12:42:12] *** Quits: ter0 (~ter0@user/ter0) (Client Quit)
[12:42:56] *** Quits: shreyanavigyan (~shrey@user/shreyanavigyan) (Ping timeout: 252 seconds)
[12:43:30] *** Quits: easior (~easior@115.239.231.142) (Ping timeout: 264 seconds)
[12:45:18] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[12:45:54] *** Quits: Evolver (~Evolver@user/evolver) (Ping timeout: 272 seconds)
[12:46:38] *** Joins: nichlas (nichlas@gateway/vpn/protonvpn/nichlas)
[12:47:01] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Remote host closed the connection)
[12:47:02] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[12:47:12] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[12:48:52] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:48:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:49:59] *** Joins: frostschutz (~frostschu@2a01:c22:d42f:e800:5ea6:851c:4f43:dc77)
[12:52:26] *** Joins: ionface (~ionface@user/ionface)
[12:52:48] *** Quits: shreyanavigyan (~shrey@user/shreyanavigyan) (Ping timeout: 272 seconds)
[12:54:06] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[12:57:25] *** Joins: neolem (~neolem@user/neolem)
[12:58:00] <Guddu> Thanks euouae
[12:58:37] *** Joins: easior__ (~easior@115.239.231.138)
[12:58:48] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[12:59:44] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[13:00:19] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 264 seconds)
[13:00:38] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[13:01:06] *** Joins: Vonter (~Vonter@user/vonter)
[13:01:38] *** Quits: easior_ (~easior@115.239.231.142) (Ping timeout: 252 seconds)
[13:01:38] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:02:11] *** Quits: kesara (~kesara@2404:440c:17e5:c300:8192:ea22:50cd:a030) (Quit: Client closed)
[13:02:49] *** Joins: p-i- (~Ohmu@node-47d.pool-118-172.dynamic.totinternet.net)
[13:02:51] *** Joins: easior_ (~easior@115.239.231.138)
[13:03:19] *** Quits: Guddu (~Guddu@117.222.84.65) (Read error: Connection reset by peer)
[13:03:34] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[13:04:10] *** Joins: f1se4 (~f1se4@213.195.98.55)
[13:04:47] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:05:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:06:02] *** Quits: easior__ (~easior@115.239.231.138) (Ping timeout: 252 seconds)
[13:06:38] *** Joins: n0cto (~n0cto@2605:a601:ac07:4100:ed39:190b:f6ab:81f1)
[13:06:54] *** Quits: jhardy (~jhardy@104.4.30.169) (Ping timeout: 264 seconds)
[13:07:19] *** Joins: gtristan (~tristan@110.11.238.155)
[13:07:59] <gtristan> Hi, so I'm having some more issues with static type checking... ---> https://bpa.st/MOEA
[13:08:16] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247)
[13:08:28] <gtristan> Here I'm using a TypeVar('_T', bound=Record), and this works very well for the first `lookup` method
[13:08:31] <Neoon> ali1234, well I have a problem that one thread apparently did not finish and the main thread does proceed anyway
[13:08:34] <Neoon> no error or crash
[13:08:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:09:33] <gtristan> But the second one is tough, mypy has either one or the other problem (A) It doesnt "get it" that after the assertion of those two subtypes of Record, that the types will definitely have a `tests` attribute
[13:10:14] <gtristan> Or, as written above which is much more verbose, it complains for some reason at the `constraints.append(record)` that it is not a `_T`
[13:11:24] <gtristan> This is strangely the case even if I change the append line to append the already typed system_constraint or controller_constraint values to the return list
[13:13:26] *** Joins: iflema (~ian@user/iflema)
[13:14:24] <mgedmin> mypy is not too smart
[13:16:37] <lavadonut> lavaman, fight me
[13:16:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:17:34] <lavaman> man v donut hardly seems fair
[13:17:51] <lavadonut> :))
[13:18:29] <lavaman> unless you're the giant donut on that store in LA, then I don't have a chance lol
[13:18:52] *** Quits: gaboo (~gaboo@2a01:e0a:21d:8230:1eba:66c4:8734:6b03) (Quit: Konversation terminated!)
[13:19:05] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[13:20:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:21:26] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[13:23:04] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[13:23:42] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 264 seconds)
[13:25:01] *** Quits: shreyanavigyan (~shrey@user/shreyanavigyan) (Read error: Connection reset by peer)
[13:25:04] <euouae> lavaman: bothered by 'unless', both fights are unfair
[13:25:12] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 252 seconds)
[13:26:59] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[13:27:29] *** Quits: shreyanavigyan (~shrey@user/shreyanavigyan) (Client Quit)
[13:27:54] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 264 seconds)
[13:28:35] *** Joins: unyu (~pyon@user/pyon)
[13:31:12] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[13:33:11] *** Quits: easior_ (~easior@115.239.231.138) (Ping timeout: 268 seconds)
[13:33:16] <graingert> gtristan: can you make a mypy-play.net ?
[13:33:36] <gtristan> never heard of that
[13:33:52] *** Joins: gareppa (~gareppa@user/gareppa)
[13:34:02] <gtristan> but I *just* figured out a workaround, I simplified things by creating a common subclass
[13:34:42] <gtristan> https://bpa.st/T6IQ <-- that seems to work
[13:35:28] * gtristan sees mypy-play.net, seems like an interesting tool
[13:37:48] *** Quits: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se) (Quit: WeeChat 2.8)
[13:38:03] *** Joins: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se)
[13:39:29] *** research is now known as KeiraT
[13:39:43] *** Quits: f1se4 (~f1se4@213.195.98.55) (Ping timeout: 272 seconds)
[13:39:44] *** Joins: zerok (~zerok@user/zerok)
[13:41:35] *** Joins: iflema (~ian@user/iflema)
[13:41:35] *** Joins: gossie (~gossie@2a10:3781:328:1:e1d:50cc:c868:ca94)
[13:41:36] *** Quits: logithack (~logithack@p200300cfbf21a1002e19c68949c6f8c4.dip0.t-ipconnect.de) (Quit: Leaving)
[13:42:33] *** Joins: kryptec (~elmo@S0106b81619ea25e4.cg.shawcable.net)
[13:43:18] *** Quits: kryptec (~elmo@S0106b81619ea25e4.cg.shawcable.net) (Client Quit)
[13:44:10] *** Joins: kryptec (~elmo@S0106b81619ea25e4.cg.shawcable.net)
[13:46:54] *** Joins: dme86 (~dan@user/dan86)
[13:48:11] *** Joins: f1se4 (~f1se4@213.195.98.55)
[13:51:04] *** Quits: unyu (~pyon@user/pyon) (Read error: Connection reset by peer)
[13:51:42] <Neoon> so any idea how I make sure that all threads are done?
[13:51:43] *** Quits: spinningCat (~spinningc@about/web/muscles) (Read error: Connection reset by peer)
[13:51:54] <Neoon> my current method seems not to work for some reason
[13:52:06] <Neoon> https://pastebin.com/gikrKE1m
[13:54:59] *** Joins: easior_ (~easior@115.239.231.140)
[13:57:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:58:14] *** Joins: unyu (~pyon@user/pyon)
[13:58:25] <euouae> Neoon: what is not working?
[13:58:27] <Yhg1s> Neoon: what threads?
[13:58:53] <Neoon> processes
[13:58:55] <Neoon> not threads
[13:59:22] <Neoon> it does happen that one process is not finished and the main proceeds anyway
[13:59:29] *** Joins: Crassus (~Crassus@user/crassus)
[13:59:36] <Neoon> and then crashes due to a missing file because it did not wait
[13:59:58] <Yhg1s> Neoon: that isn't what the code would do, unless you're catching and ignoring exceptions somewhere up from that join. However, it's possible one of the processes spawns a new process and exits.
[14:00:35] <Neoon> the process did run fine no crash or such but it never finished
[14:00:45] <Neoon> the main thread then decides to continue even when it never finished
[14:01:01] <Yhg1s> Neoon: how do you know it never finished?
[14:01:11] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[14:01:44] <Neoon> lemme explain I have 53GB of raw data in json files, one thread takes to long, so I launch multiple processes and split the amount of files
[14:01:54] <Neoon> each of the process will parse them and put them into a tmp file
[14:02:00] <Neoon> at the end they will be combined
[14:02:02] *** Quits: f1se4 (~f1se4@213.195.98.55) (Ping timeout: 244 seconds)
[14:02:16] <euouae> Sounds like you can use a Pool
[14:02:18] <Neoon> if a tmp file is missing it crashes
[14:02:49] <Neoon> hence I know the main thread did not wait
[14:03:02] <Neoon> the last I have seen is that the process was loading a json file
[14:03:08] <Neoon> no error or anything else
[14:03:12] <euouae> So main crashes if the tmp file is not generated?
[14:03:23] <Neoon> because it expect it to be generated
[14:03:28] <Neoon> and it should be generated
[14:03:37] <Neoon> if its not something is wrong
[14:03:46] <Yhg1s> Neoon: okay, that doesn't really mean the process didn't crash and didn't exit. You need to debug this. Log which processes are started for what files and what output they produce, and then see what files are missing and what happened to the processes.
[14:04:15] <Yhg1s> Neoon: perhaps the process terminated unexpectedly. perhaps the process has a bug and isn't processing the files you expect it to. perhaps it's not producing the output file you expected to.
[14:04:20] <Neoon> if I do multiprocessing I should get a error message or such on crash?
[14:04:33] <Neoon> but not if its terminated?
[14:04:38] <Neoon> for some reason
[14:04:38] <Yhg1s> Neoon: maybe. multiprocessing is... not terribly predictable or reliable.
[14:05:08] *** Joins: encukou (~quassel@nat-pool-brq-t.redhat.com)
[14:05:20] <euouae> Neoon: are you sure that you will improve execution time by using processes?
[14:05:27] <Neoon> yes
[14:05:33] <Neoon> It went down from 2 hours+ to 15 minutes
[14:05:49] <euouae> You would probably benefit from using threads even more
[14:05:55] <euouae> Processes are bulky
[14:06:00] <Neoon> threads are bound to the same core
[14:06:05] <Neoon> which is my issue
[14:06:10] <Neoon> processes are not
[14:06:20] <euouae> Really? That's the first I've heard of that
[14:06:21] <Yhg1s> I assume you mean because of the GIL, in which case it really depends on the processing you're doing.
[14:06:39] <Neoon> well by parsing the file the cpu core is maxed out
[14:07:09] <Neoon> euouae, I tested it with threading, I would rather like to use threading but it takes as long as with one thread
[14:07:14] <Neoon> since only 1 core is used
[14:07:20] <Neoon> and the application is cpu bound
[14:07:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[14:08:20] <graingert> Neoon: Are you using a process pool executor?
[14:08:37] <graingert> Or multiprocessing.get_context("spawn").Pool ?
[14:08:38] *** Joins: Excidium (Excidium@203.220.81.59)
[14:08:44] <euouae> Yhg1s: depends in which way?
[14:08:48] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 272 seconds)
[14:08:58] <Yhg1s> euouae: whether it's doing things that require the GIL to be held.
[14:09:17] <euouae> Yhg1s: yeah but what holds GIL?
[14:09:25] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[14:09:34] <Neoon> graingert, no, I just have a list append a thread start and join
[14:09:34] <euouae> Yhg1s: can functional stuff be computed in parallel or not?
[14:09:57] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[14:10:00] <Yhg1s> euouae: what 'functional stuff'?
[14:10:03] <graingert> Neoon: Use a multiprocessing spawn pool
[14:10:10] <Yhg1s> euouae: anything that touches Python objects needs to hold the GIL.
[14:10:14] <spithash> Don't you guys think the reference to Leenode should be removed from this page? https://www.python.org/community/irc/
[14:10:23] <Yhg1s> spithash: no.
[14:10:44] <euouae> Yhg1s: without side effects is what I meant
[14:10:49] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:11:10] <mgedmin> spithash: see also https://github.com/python/pythondotorg/issues/1777
[14:11:11] <Yhg1s> euouae: it's not about side-effects, no. It's about all data in Python being shared, and about code also being data, and about how threads react to shared data.
[14:11:35] <spithash> mgedmin: oh thanks
[14:11:56] <Yhg1s> https://www.python.org/community/irc/ is different from https://www.python.org/community though.
[14:12:37] <graingert> The Spanish one is still on freenode?
[14:12:44] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[14:14:46] *** Quits: unyu (~pyon@user/pyon) (Read error: Connection reset by peer)
[14:15:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:15:57] *** Joins: nrg (~NRG@user/nrg)
[14:16:21] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[14:16:21] <euouae> Yhg1s: are processes the only way out then?
[14:17:02] *** Joins: biozz_ (~biozz@178.57.22.163)
[14:17:13] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:17:29] <Neoon> well, it makes no sense, thread 1 is the longest, since it also handles the left over files that can't be even split and python waits for thread 1 first
[14:17:46] <Neoon> *process
[14:17:49] <Neoon> I am sorry yet again
[14:18:12] <Neoon> must be really that this one process just dies lonely in a corner
[14:18:13] <Neoon> sad
[14:18:43] <euouae> Yhg1s: I found a lot of things on https://wiki.python.org/moin/ParallelProcessing but I still don't understand why the stdlib has that issue
[14:18:57] <euouae> or rather CPython?
[14:19:31] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 264 seconds)
[14:19:38] <Yhg1s> euouae: CPython, yes. I'm not sure what's unclear. Everything in Python is shared between all threads, so all access needs to be synchronised, just in case it's being accessed from multiple threads at once.
[14:20:02] <Yhg1s> euouae: Python uses a global lock instead of the much, much more inefficient approach of a per-object or per-operation lock.
[14:20:12] *** Quits: biozz (~biozz@static.211.203.216.95.clients.your-server.de) (Ping timeout: 272 seconds)
[14:20:39] <euouae> Yhg1s: that much is understood, what I don't understand is how can pp, ray, celery solve this problem then?
[14:20:42] *** Quits: easior_ (~easior@115.239.231.140) (Read error: Connection reset by peer)
[14:20:58] <Yhg1s> they don't use threads.
[14:21:19] <euouae> What do they use?
[14:21:26] *** Joins: aslicedbanjo (~aslicedba@host86-148-108-225.range86-148.btcentralplus.com)
[14:21:54] *** Joins: unyu (~pyon@user/pyon)
[14:22:28] <gloomy_desktop> Hi, can someone explain to me why these two ways of importing behave differently (with one of them giving an error)? https://bpa.st/JQTQ
[14:23:13] *** Quits: unyu (~pyon@user/pyon) (Read error: Connection reset by peer)
[14:23:19] <gloomy_desktop> https://github.com/biopython/biopython/tree/master/Bio/Entrez <- code for the module I'm trying to import
[14:24:16] *** Quits: nichlas (nichlas@gateway/vpn/protonvpn/nichlas) (Quit: WeeChat 3.1)
[14:24:54] *** Joins: lightbulbjim (~chris@203-123-115-173.ip4.superloop.com)
[14:24:59] <gloomy_desktop> Oh, sorry, it looks like it does work - it's only the language server that shows an error. Still, why is that?
[14:25:51] *** Quits: lightbulbjim (~chris@203-123-115-173.ip4.superloop.com) (Client Quit)
[14:26:11] *** Joins: easior_ (~easior@61.155.142.70)
[14:26:46] *** Joins: lightbulbjim (~chris@203-123-115-173.ip4.superloop.com)
[14:27:43] <Yhg1s> euouae: generally speaking, separate processes, but it depends on the exact problem.
[14:27:52] <Yhg1s> euouae: they could also use threads but not touch any Python objects.
[14:28:29] *** Quits: lightbulbjim (~chris@203-123-115-173.ip4.superloop.com) (Client Quit)
[14:28:36] <Yhg1s> gloomy_desktop: I would guess because this language server doesn't know about packages, or doesn't know about the Entrez module in the Bio packages.
[14:28:37] <euouae> Yhg1s: but isn't everything an object?
[14:28:40] <Yhg1s> eh, Bio package.
[14:28:47] <Yhg1s> euouae: everything in Python code, yes.
[14:28:53] *** Joins: easior (~easior@61.155.142.67)
[14:29:03] <euouae> I don't understand, how do you avoid using python objects in python code
[14:29:15] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[14:29:29] *** Joins: fabs (~fabs@samba.ethz.ch)
[14:29:33] <Yhg1s> euouae: you wouldn't do it in Python code.
[14:29:54] <euouae> Alright
[14:30:10] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:30:18] <gloomy_desktop> Hmm, alright, looks like a bug. The language server is pylance. Submitted an issue.
[14:30:18] <euouae> Well then that advice about using threads because processes are bulky was bad!
[14:30:56] *** Joins: Nact (~l@host-85-27-126-227.dynamic.voo.be)
[14:30:58] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[14:31:14] <ali1234> euouae: processes are also bad for this though, just for different reasons
[14:31:36] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[14:31:41] *** Joins: unyu (~pyon@user/pyon)
[14:32:11] <ali1234> the only good solution is write all your CPU bound code in a different language, and then call it from python (making sure to drop the GIL while you do)
[14:32:46] <euouae> ali1234: ray looks so impressive, can it really be that bad
[14:32:52] *** Quits: kryptec (~elmo@S0106b81619ea25e4.cg.shawcable.net) (Ping timeout: 272 seconds)
[14:33:31] <ali1234> frameworks like ray only work for certain types of task
[14:33:42] *** Joins: cthulchu (~Cthulchu@88.155.75.1)
[14:33:59] <Yhg1s> except that's *also* not a particularly good solution.
[14:34:00] <euouae> Hm, it also mentions that the power comes from multiple machines, not powerful machines
[14:34:23] *** Joins: kryptec (~elmo@198.161.230.105)
[14:34:40] <ali1234> the only problem with that solution is the effort required to implement it
[14:34:46] *** Joins: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01)
[14:35:30] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[14:35:46] <Yhg1s> In so much as "the effort" is a whole slew of different problems, sure.
[14:35:47] *** Joins: entuland (~entuland@user/entuland)
[14:36:14] <ali1234> what i mean is that the problems are for the developer, not the user
[14:36:24] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[14:36:28] <ali1234> with the other two the problems affect the user, not the developer
[14:37:06] <Yhg1s> I have no idea what distinction you're making there, sorry.
[14:37:39] <ali1234> if i write a program that uses a process pool for concurrency i also have to tell my users "oh, btw, this program doesn't work properly on windows, sorry about that, nothing i can do about it"
[14:37:55] <ali1234> or i can write it for windows and tell them it doesn't work on linux
[14:38:01] *** Quits: unyu (~pyon@user/pyon) (Read error: Connection reset by peer)
[14:38:28] *** Joins: easior_ (~easior@61.155.142.70)
[14:38:29] <Yhg1s> I don't know why you would need to tell users that, but okay.
[14:38:33] *** Joins: ctk (~calimero@user/calimeroteknik)
[14:38:36] *** Joins: easior__ (~easior@61.155.142.67)
[14:38:38] <Yhg1s> That isn't the kind of problem I was talking about.
[14:38:39] <ali1234> where as if i write my program in C, it takes more effort, but the user is unnaffected by that
[14:38:41] *** Joins: dez (uid92154@user/dez)
[14:39:25] *** Quits: aam (~aaguilera@camins-142.upc.edu) (Quit: Leaving)
[14:39:47] *** Quits: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01) (Ping timeout: 268 seconds)
[14:40:47] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[14:41:09] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[14:41:09] <zamba> i want to divide a file into equally large parts.. the number of parts should be mod 4.. each part shouldn't exceed 5GB
[14:41:12] *** Joins: SebastianM (~seba@user/sebastianm)
[14:41:14] <zamba> any suggestions on how to do that?
[14:41:25] <zamba> i guess this is a bit OT.. as it's not a python question
[14:41:42] <thm_> split -b
[14:41:43] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[14:41:52] <zamba> so it should be either 4, 8, 12, 16 .. and so on.. parts
[14:42:09] <euouae> zamba: how is the data split? sequentially? Get the file size, divide by 4, careful not to loose any bytes, read and write...
[14:42:10] <zamba> and also as close to 5GB as possible
[14:42:32] <euouae> Well, you can divide the file size with 5GB and see how many parts you'll need
[14:42:43] <ali1234> number of parts mod 4, not part size
[14:42:46] <zamba> euouae: if the file is 50GB, then each segment will be 12.5GB which violates the no bigger segment than 5GB rule
[14:43:03] *** Veticus9 is now known as Veticus
[14:43:16] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[14:43:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[14:43:26] <ali1234> so take file size, divide by 5GB, then round up to mod 4, then divide again to get the true size
[14:43:47] <zamba> ali1234: how do i do the round up to mod 4-part?
[14:44:03] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[14:44:05] <ali1234> n = (y // 4) + 4
[14:44:16] *** Joins: unyu (~pyon@user/pyon)
[14:44:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:44:55] *** Quits: SebastianM (~seba@user/sebastianm) (Read error: Connection reset by peer)
[14:44:58] *** Quits: easior_ (~easior@61.155.142.70) (Quit: Leaving)
[14:45:04] <ali1234> sorry y // (5GB)
[14:45:41] <ali1234> where 5GB = (2**30)
[14:46:05] <ali1234> eh, i think that's still wrong :(
[14:46:34] <zamba> yeah, i believe it is :)
[14:46:34] *** Joins: easior (~easior@61.155.142.70)
[14:48:00] *** Quits: lumgwada (~lumgwada@101.181.126.104) (Quit: leaving)
[14:48:19] <ali1234> x = size/(2**30); n_parts = x - (x%4) + 4
[14:48:43] *** Quits: easior (~easior@61.155.142.70) (Client Quit)
[14:48:44] <zamba> let's try
[14:48:55] <ali1234> size//(2**30) - double // for integer division
[14:49:20] *** Joins: lumgwada (~lumgwada@101.181.126.104)
[14:50:43] *** Quits: biozz_ (~biozz@178.57.22.163) (Remote host closed the connection)
[14:51:22] *** Joins: qzd (uid237765@id-237765.tooting.irccloud.com)
[14:51:26] <Neoon> now it works again https://pastebin.com/FBGqGFJ7
[14:51:27] <Neoon> seriously
[14:51:55] <ali1234> concurrency is like that
[14:52:20] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1005)
[14:52:30] <zamba> ali1234: ah! thanks!
[14:52:50] *** ctk is now known as CalimeroTeknik
[14:53:30] *** Joins: jenhsun (uid342237@id-342237.stonehaven.irccloud.com)
[14:54:21] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[14:54:38] *** Joins: SebastianM (~seba@user/sebastianm)
[14:55:00] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[14:55:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:55:19] *** Joins: om_henners (~om_henner@202-63-66-15.ip4.superloop.com)
[14:55:46] *** Quits: roelj (~user@2001:1c02:b21:6200:c9cf:5ac8:4ac9:c58e) (Ping timeout: 244 seconds)
[14:56:03] *** Quits: om_henners (~om_henner@202-63-66-15.ip4.superloop.com) (Client Quit)
[14:56:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:56:23] *** Quits: euouae (~euouae@user/euouae) (Quit: WeeChat 3.2-rc1)
[14:59:51] *** Joins: biozz (~biozz@178.57.22.163)
[15:01:31] *** Quits: jenhsun (uid342237@id-342237.stonehaven.irccloud.com) ()
[15:01:37] *** erry is now known as reel
[15:02:00] *** reel is now known as erry
[15:02:05] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 252 seconds)
[15:02:36] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 268 seconds)
[15:04:14] *** Joins: jenhsun (uid342237@id-342237.stonehaven.irccloud.com)
[15:04:52] *** Joins: Kingsy (~chris@kingsy.co.uk)
[15:04:58] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:05:01] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:05:26] *** Joins: vince (~vince@modemcable028.229-81-70.mc.videotron.ca)
[15:05:43] <Kingsy> how can I debug if pip crashes when installing requirements on this -> INFO: pip is looking at multiple versions of fastjsonschema to determine which version is compatible with other requirements. This could take a while., it follows up after several minutes with this error -> pip._vendor.resolvelib.resolvers.ResolutionTooDeep: 2000000
[15:06:03] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[15:06:18] *** Quits: kmh (~kmh@p200300df5f2f6b00b05a0be1bb89517c.dip0.t-ipconnect.de) (Quit: Leaving)
[15:06:44] <Yhg1s> Kingsy: which version of pip?
[15:06:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:07:00] *** Joins: dme86 (~dan@user/dan86)
[15:07:43] <gloomy_desktop> hi again. currently I have a generator function that yields some stuff. If I want to have information on "how far along" it is, do I need to change that function into an Iterator class? or is there a simpler way?
[15:07:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:08:29] <gloomy_desktop> (generator? generator function? not sure what the right word is. A function with "yield xxx" in it.)
[15:08:29] <graingert> gloomy_desktop: Show your code?
[15:08:41] <Yhg1s> gloomy_desktop: a generator is an iterator. You could have it yield a tuple of 'how far along it is' and whatever data you want it to produce.
[15:08:45] *** Joins: windragon (~alvinhoch@user/alvinhochun)
[15:08:52] <graingert> gloomy_desktop: people use the terms interchangably
[15:08:56] <Yhg1s> gloomy_desktop: you could also store that information somewhere else.
[15:09:10] <graingert> gloomy_desktop: it depends what's consuming the progress information?
[15:09:14] <raek> gloomy_desktop: is the total number of values known in advance?
[15:09:16] <graingert> pbar? tqdm?
[15:09:36] *** Joins: browniebroke (uid501792@id-501792.tinside.irccloud.com)
[15:09:50] <gloomy_desktop> https://bpa.st/O44Q
[15:10:17] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[15:10:45] <gloomy_desktop> raek: no, that's the issue - I don't know what the total amount is before running that function, and I don't know how to pass that information to the outside world (and yes the point would be to use it with tqdm)
[15:11:42] <gloomy_desktop> I guess I could also refactor it into two functions - one to get the amount of ids, and one to actually get the ids.
[15:11:44] <Kingsy> Yhg1s: 21.1.1
[15:12:06] *** Quits: baltazar (~baltazar@94-21-242-21.pool.digikabel.hu) (Ping timeout: 244 seconds)
[15:12:20] <raek> I see. tricky.
[15:12:48] <graingert> gloomy_desktop: Btw you might like to use contextlib.closing
[15:13:00] <graingert> So you don't have to remember to .close() things
[15:13:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:13:12] <gloomy_desktop> Thanks, will look at that in a second
[15:13:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:13:39] <graingert> It looks like you didn't close your ids_handle
[15:13:44] <raek> gloomy_desktop: is it important for you to separate the code that does the looping and generating and the code that produces the progressbar?
[15:14:04] *** Joins: baltazar (~baltazar@84-236-29-252.pool.digikabel.hu)
[15:14:04] <Yhg1s> Kingsy: well, you can get pip to provide you more information about what it's doing with '-v'. That error usually means you have version restrictions on fastjsonschema and/or things that depend on fastjsonschema or that fastjsonschema depends on, and pip can't figure out how to satisfy all those requirements.
[15:14:19] <Yhg1s> Kingsy: it's still a bug that it produces that error instead of something more obvious, though.
[15:14:46] <graingert> Kingsy: What deps are you installing
[15:14:47] <Yhg1s> gloomy_desktop: or you can just have your generator yield status as well as the value.
[15:15:02] <Neoon> graingert, looks like I went OOM
[15:15:05] <Neoon> not python to blame here
[15:15:14] <Neoon> and the OS killed one process
[15:15:39] <gloomy_desktop> not really sure what the best design is. but this generator is the first step of a relatively long pipeline (consisting of several other generators), so it seems like it's the one that should provide progress information to the "outside world"...?
[15:15:40] *** Joins: Tas-sos (~Tas-sos@ppp079167217163.access.hol.gr)
[15:15:45] <graingert> Neoon: multiprocessing spawn pool handles that better
[15:18:04] <gloomy_desktop> It's the first time I try using lazy evaluation in python so not sure what the standard approaches are
[15:18:20] <graingert> gloomy_desktop: Where's this progress consumed?
[15:18:21] *** Joins: nyah (~nyah@90.221.186.180)
[15:18:25] <betuxy34> hey guys, I need a way to format strings so i have a tidy output of key value pairs evenly lined up. right now it looks like this: https://hastebin.com/raw/siyikefuza
[15:18:33] *** Joins: iflema (~ian@user/iflema)
[15:19:18] <graingert> betuxy34: Rich
[15:19:47] *** Quits: audiocat (~audio@2603-8081-1800-0062-3a58-4f24-2a15-fa9e.res6.spectrum.com) (Ping timeout: 272 seconds)
[15:19:58] <graingert> betuxy34: from rich.table import Table
[15:20:34] <Kingsy> Yhg1s: thankyou! tbh since you mentioned pip. I upgraded it to latest and it seems to be working now
[15:20:42] *** Quits: kryptec (~elmo@198.161.230.105) (Ping timeout: 264 seconds)
[15:20:45] <Kingsy> graingert: ^ thats for responding! Appreciate it
[15:20:59] <graingert> ?
[15:21:05] <gloomy_desktop> graingert: I'm not sure :D what's the typical way to pipe lots of generators? (as in what you'd do in the shell -  `generator_1 | generator_2 | generator_3 | ...`)
[15:21:10] <supakeen> betuxy34, get the max length of the key field and then `print(f"{key:max} {value}")`.
[15:21:39] <Yhg1s> gloomy_desktop: the typical way is to pass iterables around. those can be generators.
[15:21:44] <graingert> gloomy_desktop: I mean like tqdm?
[15:21:59] <graingert> gloomy_desktop: aiostream has those operators
[15:22:09] <gloomy_desktop> The answer to "how I want to consume progress" depends on that  (but yes, in the end, I want a tqdm progress bar)
[15:22:26] <graingert> It's tricky if you filter
[15:22:43] *** Joins: kryptec (~elmo@S0106b81619ea25e4.cg.shawcable.net)
[15:23:05] <gloomy_desktop> Yhg1s: so something like `g1 = get_generator_1(); g2 = get_generator_2(g1); g3 = get_generator_3(g2); ...`?
[15:23:19] <graingert> But yeah you'll need to create a `tuple[int, Generator [T, None, None]`
[15:23:34] <graingert> The int to capture the length
[15:23:37] <betuxy34> supakeen: thanks that was it!
[15:23:58] *** Parts: vince (~vince@modemcable028.229-81-70.mc.videotron.ca) (Leaving)
[15:24:07] <Yhg1s> gloomy_desktop: yes, no, maybe. if it's just like that, you'd probably do get_generator_3(get_generator_2(get_generator_1())) or something.
[15:24:47] <graingert> gloomy_desktop: You can also pass the tqdm context into your first generator function
[15:24:59] <graingert> And set the total items and progress status as you discover them
[15:25:36] <gloomy_desktop> Yhg1s: alright, thanks.
[15:26:24] <gloomy_desktop> graingert: hmmm so going for your tuple solution, that means my function should return *another* generator function, instead of yielding directly?
[15:27:47] <gloomy_desktop> https://bpa.st/EGYQ something like this?
[15:28:11] <graingert> gloomy_desktop: yeah, you've got to be *extra* careful with closing contexts then too
[15:28:39] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 272 seconds)
[15:29:32] <gloomy_desktop> ok, trying that, thanks.
[15:30:02] *** Joins: vince (~vince@75.127.14.76)
[15:31:16] <gloomy_desktop> graingert: the danger being a memory leak or is there something else?
[15:31:25] <graingert> eg you can set the total after entering the context with ctx.total = size
[15:31:42] <graingert> gloomy_desktop: eg you could close your handle when you return the first function
[15:31:43] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:31:52] <graingert> or you could level the handle open if your second function isn't called
[15:31:56] <graingert> leave *
[15:32:23] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[15:32:24] <graingert> so I'd probably do this the manual way
[15:32:42] <graingert> eg start with an undefined total progress bar, then set the total when you find it
[15:32:56] <graingert> then update progress when you yield a new item
[15:33:33] <nomic> i want float32  x = numpy.array((1, 2, 3, 4), float)   how do i create this <- with dtype = float32
[15:34:16] <nomic> i access an numpyy array and i see    [0.        ]], dtype=float32)   .. whats the dtype .. i mean .. it shows up .. ebcause it is a non standard dtype?
[15:35:00] <nomic> ok there is dtype
[15:35:53] *** Joins: easior__ (~easior@61.155.142.70)
[15:36:03] <gloomy_desktop> What's the difference between these two? https://bpa.st/3LBA
[15:36:39] <gloomy_desktop> In the first one I would need to call the returned function before using it as an iterator?
[15:36:44] <jinsun> nomic: float32 is defined in numpy, you can replace float with numpy.float32 in your code to get a float32 array
[15:36:58] <graingert> gloomy_desktop: I prefer this one: https://bpa.st/3LBA#1L6
[15:37:20] <nomic> ok
[15:37:49] <nomic> i just don't get it that i reference a np array in pdb .. i see ,dtype=float32 .. its confusing.
[15:38:06] <graingert> gloomy_desktop: looks like the latest tqdm supports __length_hint__
[15:38:14] <gloomy_desktop> so typing-wise the second one returns an Iterator[int], while the first one returns... what?
[15:38:31] <gloomy_desktop> *the second one returns a Tuple[int, Iterator[int]]
[15:38:41] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Remote host closed the connection)
[15:39:04] <gloomy_desktop> Callable[None, Tuple[int, Iterator[int]]] ?
[15:39:14] <gloomy_desktop> uh, not
[15:39:27] <gloomy_desktop> Tuple[int, Callable[None, Iterator[int]]]?
[15:39:35] <Yhg1s> nomic: numpy's arrays repr() like that to make it easier to read.
[15:39:43] <nomic> what is repr() please
[15:39:58] <graingert> tuple[int, Callable[[], Generator[T, None, None]]
[15:40:00] <Yhg1s> nomic: https://docs.python.org/3/library/functions.html#repr
[15:40:02] <graingert> gloomy_desktop: ^
[15:40:24] <nomic> so the .. dtype= is just for hepful .. it isnt "data2
[15:40:31] <nomic> its showing what the data is
[15:40:36] <graingert> ah if you know it's an int, then it's: tuple[int, Callable[[], Generator[int, None, None]]
[15:40:45] <nomic> cos i outp ut something i don't want helpful .. if i want to see something i do "type" etc
[15:41:08] <nomic> having ,dtype=value .. @ end o f display of data  is confusing (it looks like data)
[15:41:09] <nomic> imo
[15:41:11] <Yhg1s> nomic: okay, then don't print the array? That's how numpy arrays print. if you want different output, format it yourself.
[15:41:23] <nomic> im ok with it.. noww i know
[15:41:38] <gloomy_desktop> graingert: ok, thanks a lot!
[15:41:42] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Quit: Leaving)
[15:43:30] *** Joins: Repiphany (~Repiphany@user/repiphany)
[15:46:10] *** Joins: Bato_ (~quassel@2001:bc8:182c:b39::1)
[15:46:35] *** Quits: Bato (~Bato@2001:bc8:182c:b39::1) (Quit: changing bncs)
[15:46:42] *** Bato_ is now known as Bato
[15:48:00] <gloomy_desktop> ah, but wait. This way  "progress" is going to be each time something is yielded - but I want the progress to advance also for ignored elements, since there's no way for me to know how many non-ignored elements there are until I'm done processing. So probably the only way ie Yhg1s's yielding a tuple (progress, element) or using tqdm's context...?
[15:48:44] *** Joins: manti7 (~manti7@176.10.104.94)
[15:48:51] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 268 seconds)
[15:49:06] <gloomy_desktop> https://bpa.st/5EIQ <- simple example
[15:50:30] *** Joins: unyu (~pyon@user/pyon)
[15:51:53] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[15:53:36] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[15:55:04] <nomic>  x = np.array((1, 2, 3, 4), float32)
[15:55:04] <nomic> *** NameError: name 'float32' is not defined   :(
[15:55:25] <gloomy_desktop> x = np.array((1, 2, 3, 4), dtype="float32")
[15:55:27] <nomic>  x = np.float32.array((1, 2, 3, 4), float32)
[15:55:32] <nomic> ok
[15:55:40] <nomic> y u got float
[15:55:43] <nomic> and "float32"?
[15:55:47] <nomic> dtype =
[15:56:09] <nomic>  x = np.array((1, 2, 3, 4), float)  works but ,float32 . i would xpect .. i use dtype="float32"
[15:56:10] <nomic> k
[15:56:11] *** Joins: brickfat (~brickfat@user/brickfat)
[15:56:24] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[15:56:32] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[15:56:35] <nomic> this is ok
[15:56:56] <nomic> thanks gloomy_desktop
[15:57:12] *** NanoCoaster is now known as NanoC
[15:57:39] <gloomy_desktop> float is a python type, and I'm not sure using it that way works as you'd expect. float32 is one of numpy's types, so python doesn't know about it and gives you an error. Hence you need to pass it as a string ("float32" instead of float32)
[15:57:58] *** Joins: mantiX (~manti7@176.10.104.94)
[15:58:01] <nomic> ok
[15:59:07] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:59:35] <nomic> is nn training data . why has he made it float32
[15:59:36] <rinzewind> What I do is np.array([1, 2, 3, 4], dtype = np.float32)
[16:00:11] <nomic> ok i get it .. they gotta be accurate (floats)
[16:00:25] <nomic> values like        [0.1015625 ], = float32.
[16:00:40] <nomic> they say python isn't typed
[16:00:43] <nomic> it is
[16:00:44] <nomic> typed
[16:00:47] <ChrisWarrick> python isn’t numpy
[16:00:48] <nomic> where it matters
[16:00:49] *** Joins: wert (~wert@user/wert)
[16:00:49] <nomic> ok
[16:01:04] <Yhg1s> and yes, Python is typed. When people say 'python isn't typed', they mean it's dynamically typed.
[16:01:35] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 272 seconds)
[16:01:46] <nomic> imo decent programmers are aware of types .. must be aware of types. even in a lang that isn't strongly typed . a competent programmer will recognise, follow, types
[16:02:03] <Yhg1s> Python is also strongly typed, yes.
[16:04:14] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[16:04:15] *** Joins: kmh (~kmh@p200300df5f2f6b00f95c138a6a3b3b6a.dip0.t-ipconnect.de)
[16:04:30] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[16:05:00] <ali1234> is it even possible to have a programming language with no types? other than lambda calculus?
[16:05:12] <erry>  /13
[16:05:36] *** Quits: lesihctej (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:05:36] <mgedmin> machine code?  types are encoded in the instructions, not in memory locations
[16:06:26] *** Quits: gtristan (~tristan@110.11.238.155) (Ping timeout: 252 seconds)
[16:06:36] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Remote host closed the connection)
[16:06:52] <d3x> https://en.wikipedia.org/wiki/B_(programming_language) - this guy is typeless
[16:07:00] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[16:07:36] <graingert> B is typeless, or more precisely has one data type: the computer word.
[16:07:55] <graingert> it's pretty tricky to be typeless as all values have a type
[16:07:59] <graingert> so you have to be valueless
[16:08:06] <mgedmin> does tcl have types?  afaik everything is represented as strings in tcl
[16:08:27] *** Joins: cdown_ (~cdown@163.114.131.1)
[16:09:02] *** Quits: Excidium (Excidium@203.220.81.59) (Remote host closed the connection)
[16:09:04] <graingert> probably wang tiles are typeless and valueless?
[16:09:06] *** Joins: easior_ (~easior@61.155.142.70)
[16:09:12] <graingert> like 111 code has Cells and State
[16:10:43] *** Joins: Crassus (~Crassus@user/crassus)
[16:11:02] <graingert> mgedmin: currently having the tiling redone for the flooring in a house, and the contractor promised that he can do *any* tiling pattern
[16:11:12] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 244 seconds)
[16:11:42] *** Quits: easior_ (~easior@61.155.142.70) (Read error: Connection reset by peer)
[16:11:58] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[16:12:21] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[16:12:26] *** Joins: easior_ (~easior@61.155.142.67)
[16:12:36] <graingert> mgedmin: https://www.smbc-comics.com/comic/bins
[16:14:37] *** Joins: easior__ (~easior@61.155.142.67)
[16:15:11] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[16:15:22] *** Quits: Bato (~quassel@2001:bc8:182c:b39::1) (Ping timeout: 268 seconds)
[16:17:50] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 268 seconds)
[16:17:55] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 244 seconds)
[16:18:44] *** Joins: easior (~easior@61.155.142.73)
[16:19:25] *** Joins: argento (~argent0@168-227-96-51.ptr.westnet.com.ar)
[16:20:09] *** Joins: Bato (~quassel@2001:bc8:182c:b39::1)
[16:21:14] <bbear> hi !
[16:21:18] <bbear> how do you do ?
[16:21:18] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 264 seconds)
[16:21:35] *** Joins: azidhaka (~azidhaka@gateway.videnov.bg)
[16:22:01] <bbear> I want to know basically if you know some good dict comparison library that would work with pytest ?
[16:22:14] <bbear> My issue is that comparing payloads is tedious, especially with nested objects
[16:22:20] *** Joins: easior_ (~easior@61.155.142.70)
[16:22:23] *** Quits: kmh (~kmh@p200300df5f2f6b00f95c138a6a3b3b6a.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[16:23:34] <betuxy34> Hey, how can i convert 2021-06-11T09:51:33.157Z into something like 11.06.2021:09:51:33 ?
[16:25:36] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[16:26:08] <Wulf> datetime.datetime.strptime("2021-06-11T09:51:33.157Z", "%Y-%m-%dT%H:%M:%S").strftime("%d.%m.%Y:%H:%M:%S") ?
[16:26:35] *** Joins: easior__ (~easior@61.155.142.73)
[16:27:13] <Wulf> "%Y-%m-%dT%H:%M:%S.%fZ"  sorry
[16:27:33] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[16:27:36] *** Quits: wert (~wert@user/wert) (Quit: Konversation terminated!)
[16:27:54] <Wulf> betuxy34: or you can use some better 3rd party library.
[16:28:20] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[16:29:26] <Wulf> e.g. pendulum
[16:29:44] <betuxy34> thanks Wulf, that will do :)
[16:29:59] *** Quits: Bato (~quassel@2001:bc8:182c:b39::1) (Quit: Quasselquit)
[16:30:10] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 268 seconds)
[16:30:14] <Wulf> pendulum.parse("2021-06-11T09:51:33.157Z").strftime("%d.%m.%Y:%H:%M:%S")
[16:32:40] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[16:33:55] *** Quits: cthulchu (~Cthulchu@88.155.75.1) (Read error: Connection reset by peer)
[16:35:13] *** Joins: TwoNines99 (~Ap4654334@pool-96-244-186-245.bltmmd.fios.verizon.net)
[16:35:27] *** Joins: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:39] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:52] *** Joins: brownan (~brownan@136.56.137.143)
[16:37:00] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[16:37:47] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:40:25] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[16:41:06] *** Quits: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01) (Ping timeout: 264 seconds)
[16:41:37] *** Joins: iflema (~ian@user/iflema)
[16:43:41] *** Joins: vrt3 (~vrt3@d54c5733d.access.telenet.be)
[16:44:27] *** Joins: kmh (~kmh@p200300df5f2f6b00ddb09957c69dbac2.dip0.t-ipconnect.de)
[16:46:49] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[16:47:45] *** Joins: dvx (~dvx@185.63.97.64)
[16:47:55] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[16:48:27] *** Joins: Vonter (~Vonter@user/vonter)
[16:48:37] *** Quits: easior__ (~easior@61.155.142.73) (Quit: Leaving)
[16:52:20] <Ninpo> +1 pendulum
[16:52:38] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 252 seconds)
[16:52:42] *** LordKalma_ is now known as LordKalma
[16:53:05] *** Joins: Bato (~quassel@2001:bc8:182c:b39::1)
[16:53:18] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:55:49] <nomic> i don't like using strf formatting much
[16:55:51] <nomic> too fiddly
[16:55:52] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Quit: Leaving)
[16:56:25] *** Joins: easior (~easior@61.155.142.70)
[16:56:26] *** Joins: Ironman3000 (~Guest3@2a02:908:212:b020:5877:c5aa:6bdb:249e)
[16:56:30] *** Joins: thiras (~thiras@user/thiras)
[16:56:33] *** Joins: VaniaPy (~VaniaPy@46.12.111.76.dsl.dyn.forthnet.gr)
[16:56:46] <kosh> lots of ways of doing string formatting
[16:56:54] *** Joins: InlandTaipan (~Guest66@cpe-70-124-166-77.austin.res.rr.com)
[16:57:23] *** Quits: bjelleklang (~c@user/chha) (Read error: Connection reset by peer)
[16:57:38] <VaniaPy> Hi all,how can i set the cbc solver to the PATH on linux?
[16:58:32] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[16:58:51] *** Quits: easior (~easior@61.155.142.70) (Client Quit)
[16:58:58] *** Parts: dsl (~dsl@ppp59-167-120-76.static.internode.on.net) ()
[16:58:58] *** Joins: doev (~doev@p549d7f33.dip0.t-ipconnect.de)
[16:59:44] <doev> Hi, does this channel moved to libera.chat too? I got no information on freenode.
[16:59:47] *** Quits: Flux (~Fluxx@user/fluxx) (Ping timeout: 252 seconds)
[17:00:05] <Yhg1s> doev: it was deleted by freenode admins, so, yeah, it moved to libera. See www.pound-python.org
[17:00:31] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:00:33] <Yhg1s> doev: or, say, https://nedbatchelder.com/blog/202106/goodbye_freenode.html
[17:00:58] <Yhg1s> (you should run, as fast as you can, from freenode. don't be on freenode. it's not good.)
[17:01:15] <doev> ok, I am not so frequently on freenode, so I found a silent channel with no hint :)
[17:01:20] <Ironman3000> Hi all, I am trying to use json within python code. I can add data to the json file when it is empty. But I
[17:01:20] <Ironman3000>  cant append data to the json file when it is not empty. "json.load" doesnt work and I dont know why. Could you help me? Heres the code: https://bpa.st/LW6A
[17:02:21] <doev> So I have to copy my message: Hello everybody! I have read in a xml-schema to an object instance. Now I can browse the schema, for ex. elements, attributes, ans. But I can't see the advantages. I want to build an xml-string that is valid for the schema. How dows xmlschema helps with understanding the document format? Why is it better than just open
[17:02:21] <doev> the schema-definition in an texteditor and read i?
[17:02:48] *** Joins: Smyger (~82edea51@ircip2.mibbit.com)
[17:04:36] <Yhg1s> Ironman3000: 'w' and 'w+' both erase any data that's already there. You should open it for reading, read in all the data, *then* open it for writing and write the data. Or, open it for reading and open a *new file* for writing, then when you're done writing, rename the new file to the old name.
[17:05:27] <Yhg1s> Ironman3000: also, line 9 is better written as 'os.chmod(pfad, 0o777)', and line 15 as 'if os.path.getsize(pfad) == 0'.
[17:06:13] <Ironman3000> Thank you. I will try this out
[17:06:48] <Yhg1s> Ironman3000: I'm not sure why you're running os.mknod here, but it also takes the mode.
[17:07:04] *** Joins: sstory (~sstory@075-130-120-018.biz.spectrum.com)
[17:07:22] *** Joins: zebrag (~chris@user/zebrag)
[17:07:24] <Ironman3000> It should create a json file if there's not already one
[17:07:39] *** yano1 is now known as yano
[17:08:01] <Yhg1s> Ironman3000: that's not what os.mknod does. It creates a special type of file.
[17:08:20] <Yhg1s> if you just want to create the file, open it for writing or appending.
[17:08:24] <graingert> bbear: testfixtures is nice
[17:08:27] *** Parts: sstory (~sstory@075-130-120-018.biz.spectrum.com) ()
[17:09:12] <graingert> bbear: https://testfixtures.readthedocs.io/en/latest/comparing.html#comparison-objects
[17:09:13] <Ironman3000> Yhg1s: Oh...I will have a look
[17:10:17] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Quit: Connection closed)
[17:10:32] *** Joins: sstory (~sstory@075-130-120-018.biz.spectrum.com)
[17:10:37] *** Parts: sstory (~sstory@075-130-120-018.biz.spectrum.com) ()
[17:10:37] *** Quits: TwoNines99 (~Ap4654334@pool-96-244-186-245.bltmmd.fios.verizon.net) (Ping timeout: 244 seconds)
[17:10:38] *** Joins: sstory (~sstory@075-130-120-018.biz.spectrum.com)
[17:10:44] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[17:10:54] *** Parts: sstory (~sstory@075-130-120-018.biz.spectrum.com) ()
[17:11:26] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[17:11:51] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[17:12:05] *** Joins: ano (~weechat@user/ano)
[17:12:47] *** Joins: badsektor (~badsektor@user/badsektor)
[17:13:15] *** Quits: jenhsun (uid342237@id-342237.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[17:13:23] *** Joins: dme86 (~dan@user/dan86)
[17:14:58] *** Quits: badsektor (~badsektor@user/badsektor) (Client Quit)
[17:15:20] *** Joins: dambuster (~dambuster@185.193.170.225)
[17:15:44] *** Joins: boney (~ian@58.252.0.109.rev.sfr.net)
[17:16:18] *** Quits: boney (~ian@58.252.0.109.rev.sfr.net) (Quit: leaving)
[17:16:47] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[17:20:50] *** Joins: roelj (~user@2001:1c02:b21:6200:c9cf:5ac8:4ac9:c58e)
[17:20:54] *** Quits: qzd (uid237765@id-237765.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[17:21:52] *** Joins: IHasFinger (~JJ_@2a02:c7f:fc54:ba00:84f5:ae4b:1204:83b2)
[17:23:05] <Ironman3000> Yhg1s: Holy, it works now. Thank you!!!
[17:23:08] *** Quits: Smyger (~82edea51@ircip2.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[17:23:45] <IHasFinger> Hi guys, please using terminal how can I make python or linux keep a script open and call a method in the script every 5 minutes. I do not want it to run the whole screen every 5 minutes because it will reset the variables in the which I dont want
[17:24:26] *** Quits: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com) (Ping timeout: 268 seconds)
[17:25:35] <CrtxReavr> YOu have a few options.
[17:25:48] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[17:26:01] <CrtxReavr> YOu can back ground a process, or run it in a utility like screen or tmux.
[17:26:11] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[17:26:36] <CrtxReavr> YOu can also execute it via a crontab, and store its state in a file, or database.
[17:27:05] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 272 seconds)
[17:28:25] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[17:28:35] <IHasFinger> i have something like this
[17:28:37] <IHasFinger> https://bpa.st/JYCQ
[17:28:48] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[17:29:05] <IHasFinger> its more complex than that but hopefully you get the idea
[17:29:43] *** Joins: HaMsTeRs (~mx@14-0-169-035.static.pccw-hkt.com)
[17:30:18] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 264 seconds)
[17:30:28] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:47] <CrtxReavr> So is this like a one time task, an occasional thing you need to set running, or something you need to configure to run every five minutes from now until the end of time?
[17:31:27] *** Quits: azidhaka (~azidhaka@gateway.videnov.bg) (Quit: Leaving)
[17:32:22] <grawity> sounds like you want an extremely basic "event loop"? if the only requirement is "do it approx. every 5 minutes or so", then it's just `while True: self.run(); time.sleep(5*60)`
[17:32:24] *** Quits: Nact (~l@host-85-27-126-227.dynamic.voo.be) (Quit: Konversation terminated!)
[17:32:29] *** Joins: vsantana (~vsantana@fttx-17713614824.usr.predialnet.com.br)
[17:32:41] *** Joins: IanWizard (~ianwizard@user/ianwizard)
[17:32:42] <grawity> though that won't be exactly /every/ 5 minutes
[17:33:01] <VaniaPy> Hi,does anyone know how to solve this? pyomo.common.errors.ApplicationError: No executable found for solver 'cbc'
[17:33:27] *** Joins: boxelephant (~boxelepha@209.143.87.130)
[17:33:27] <VaniaPy> on windows i should set the solver as ENV variable
[17:33:30] *** Joins: cdown (~cdown@89.32.122.5)
[17:33:35] <VaniaPy> on linux i'm not sure
[17:34:23] <CrtxReavr> How have you tried setting the varialbe in linux?
[17:34:49] *** Quits: InlandTaipan (~Guest66@cpe-70-124-166-77.austin.res.rr.com) (Quit: Client closed)
[17:35:33] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[17:35:53] <CrtxReavr> IHasFinger, also, make sure you indent consistently. . . that snippet you pasted has a mix of two & three space indents.
[17:36:10] <CrtxReavr> Hurts my soul.
[17:36:54] <IHasFinger> CrtxReavr, again not the real code :)
[17:37:15] <bjs> CrtxReavr: two, three and five space!
[17:37:27] <bjs> IHasFinger: did you have a question about it
[17:37:31] <CrtxReavr> bjs, you're not helping!
[17:37:34] <bjs> or did i miss something
[17:37:35] <bjs> CrtxReavr: sorry
[17:37:36] <IHasFinger> grawity, the sleep will work but is it possible to make it like 05,10,15,20,25,30,35,40,45,50,55,00
[17:37:46] <bjs> :)
[17:38:09] *** Joins: combinare (~Eric@129.146.172.252)
[17:38:20] <grawity> well, there is async-cron for asyncio...
[17:38:25] <CrtxReavr> IHasFinger, that would likely need to be done externally - the crontab method.
[17:38:34] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:39:02] <Repiphany> time.sleep(-time.time()%300) will resume every 5th minute
[17:39:20] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:39:25] *** Joins: zeden (~zeden@user/zeden)
[17:40:02] *** Joins: easior (~easior@61.155.142.73)
[17:40:29] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 252 seconds)
[17:40:49] *** Quits: jthistle (~jthistle@user/jthistle) (Quit: BNC died... goodbye!)
[17:41:00] *** EWDurbin_ is now known as EWDurbin
[17:42:07] *** Joins: jthistle (~jthistle@user/jthistle)
[17:42:18] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 264 seconds)
[17:42:48] <CrtxReavr> Repiphany seems unlikely you'd catch 0.00000000000 with that method.
[17:43:29] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[17:44:03] <Repiphany> Seems unlikely whatever he's doing needs that kind of precision
[17:45:08] <CrtxReavr> Perhaps. . . but I think the result of time.time() would need a bit more processing that that.
[17:45:17] *** Joins: njw_ (~njw@58.182.164.99)
[17:45:45] *** Quits: asd (~noname@user/asd) (Ping timeout: 244 seconds)
[17:45:51] <habnabit_> Repiphany, 'he'? ;)
[17:46:07] <Repiphany> it
[17:46:18] * CrtxReavr cringes.
[17:46:27] <habnabit_> Repiphany, just say 'they' if you're not sure
[17:46:32] *** Quits: njw_ (~njw@58.182.164.99) ()
[17:46:40] *** Quits: argento (~argent0@168-227-96-51.ptr.westnet.com.ar) (Ping timeout: 272 seconds)
[17:47:23] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:47:28] *** Joins: asd (~noname@user/asd)
[17:47:39] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[17:47:43] <theseb> nedbat: ping
[17:47:52] <nedbat> theseb: pong
[17:48:07] <theseb> nedbat: i saw your freenode article on reddit! you're an irc legend dude!
[17:48:08] <theseb> ;)
[17:48:34] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[17:49:11] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[17:49:16] <nedbat> theseb: i guess legend means "gets you k-lined by the new bad guys" :)
[17:49:26] <CrtxReavr> Made the front page of /. too.
[17:49:33] *** Joins: python_wrangler (~Guest9211@d31128.smhi.se)
[17:49:50] <CrtxReavr> nedbat, wear it proudly.
[17:50:54] *** Joins: jwodder (~jwodder@2601:89:c600:f150:cc6b:a697:c7b0:7134)
[17:51:08] *** Quits: saagaar59 (~saagaar@2400:1a00:bd11:651e:447c:8099:3840:441f) (Quit: Client closed)
[17:51:19] *** Quits: python_wrangler (~Guest9211@d31128.smhi.se) (Quit: Client closed)
[17:52:00] * nedbat is proud to be a poster child for the k-lined
[17:52:03] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Remote host closed the connection)
[17:52:24] <jwodder> What would cause coverage to suddenly stop collecting data for a program's run?  The only changes to the program were moving code around.  The coverage command is still the same (`coverage run --source tinuous --branch -m tinuous fetch`).  I believe all the package & Python versions are the same.
[17:53:09] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[17:54:00] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[17:54:00] <nedbat> jwodder: try using --debug=trace to see the decisions coverage is making about what to trace
[17:54:24] *** Joins: edr (~edr@user/edr)
[17:54:31] *** Joins: dyslexic1t (~dyslexica@212.253.59.190)
[17:54:47] <n00b101> i'm trying to run a django app in port 80, when i do `python manage.py runserver 0.0.0.0:80` and run it says `module not found django`
[17:54:48] <Wulf> theseb: link?
[17:54:59] <n00b101> without sudo its working
[17:55:07] <jwodder> I see "Not tracing '/Users/jwodder/dartmouth/tinuous/repo/.tox/py39/lib/python3.9/site-packages/tinuous/__init__.py': falls outside the --source spec".  Why would that be a problem now when it wasn't before?
[17:55:12] <n00b101> problem is only when running with sudo
[17:55:26] <Wulf> n00b101: are you using a virtual env?
[17:55:31] <theseb> Wulf: https://www.reddit.com/r/Python/comments/nyx6ok/goodbye_freenode/
[17:55:32] <n00b101> no
[17:55:35] <Wulf> n00b101: do so!
[17:55:40] *** Quits: yogoyo (~yogoyo@p200300def74a01b7f3d3d6cc79e15b01.dip0.t-ipconnect.de) (Quit: bbl)
[17:55:49] <Falc> n00b101: using sudo changes your environment variables and could change your python version or where it looks for packages
[17:56:06] <n00b101> what if i sudo pip install
[17:56:10] <n00b101> that works i guess
[17:56:11] *** Quits: easior (~easior@61.155.142.73) (Quit: Leaving)
[17:56:22] *** Parts: dyslexic1t (~dyslexica@212.253.59.190) ()
[17:56:24] <n00b101> this is a rasbpberry pi for running this app only
[17:56:26] <Wulf> n00b101: please DO NOT do that
[17:56:34] <n00b101> so, not creating a venv
[17:56:41] *** Joins: PdimH (~pdimh@user/pdimh)
[17:56:44] *** Joins: pneff (~pneff@81.6.40.205)
[17:57:02] <Falc> n00b101: slightly less alarmist than Wulf: it's not the greatest of ideas and might one day backfire
[17:57:43] <nedbat> jwodder: looks like you are now testing installed code rather than your working tree.  did you change your tox.ini?
[17:57:44] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 268 seconds)
[17:57:54] <Wulf> n00b101: you could use systemd to create the socket and start your app.
[17:57:56] <n00b101> so, i create a new venv as `sudo python -m pipenv env` and sudo install everything into it?
[17:58:21] <jwodder> nedbat: I was always testing installed code.  tox.ini wasn't changed.
[17:58:30] <Falc> n00b101: I would start by checking a few things first
[17:58:36] <jwodder> n00b101: No sudo
[17:58:37] <nedbat> jwodder: did you add the --source option?
[17:58:45] <jwodder> nedbat: Yes, and that worked.
[17:59:00] <nedbat> jwodder: i mean, did you recently add it? Could that be what broke it?
[17:59:09] <jwodder> nedbat: No, never had it.
[17:59:13] <nedbat> jwodder: it might be time for a git bisect
[17:59:20] *** Quits: eck0 (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 272 seconds)
[17:59:26] <nedbat> jwodder: wait: you have source= somewhere now
[17:59:47] <Falc> n00b101: like, for example, run the python REPL as yourself, import sys, print sys.path
[18:00:13] <Falc> n00b101: and then repeat this but using "sudo python" to run the REPL
[18:00:14] <jwodder> nedbat: The only source = in my tox.ini is in [coverage:paths].
[18:00:16] *** Quits: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[18:00:39] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[18:01:01] <nedbat> jwodder: coverage thinks you have a source option. Can you add --debug=config,sys to see?
[18:01:14] *** Quits: GuuberMT (~guubermt@dsl-74-83-194-229.fuse.net) (Ping timeout: 272 seconds)
[18:01:14] <Falc> n00b101: this should inform you of why your two invocations behave differently and you can decide from that how to best proceed
[18:01:29] *** Joins: yogoyo (~yogoyo@p200300def74a0197e33b90f9f98684f3.dip0.t-ipconnect.de)
[18:02:23] <jwodder> nedbat: Without an explicit --source option, I see "source: tinuous".  There is no "tinuous" in my $PWD.
[18:02:49] *** Joins: c10l (~c10l@89.34.167.207)
[18:03:16] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[18:03:31] *** Joins: cdown (~cdown@89.32.122.5)
[18:04:32] *** Joins: argento (~argent0@168-227-96-51.ptr.westnet.com.ar)
[18:04:36] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Quit: The Lounge - https://thelounge.chat)
[18:04:40] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[18:04:41] <jwodder> nedbat: Is there a shortcut for specifying `--source=<some sys.path element>/tinuous` without having to know the exact path the code is installed at?  Just to keep things simple and portable.
[18:04:57] <nedbat> jwodder: your source option is from your command line:  coverage run --source tinuous --branch -m tinuous fetch
[18:05:07] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[18:05:48] <jwodder> OK, I may be confused about exactly what the --source option does.
[18:06:04] <jwodder> But I swear it used to work with that exact command line.
[18:06:11] <nedbat> jwodder: --source means: only measure files in this tree, and also find completely unexecuted files in that tree.
[18:06:18] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 264 seconds)
[18:06:23] *** combinare is now known as combinare_
[18:06:39] <nedbat> jwodder: git bisect is amazing for solving mysteries like this.
[18:06:57] *** combinare_ is now known as combinare
[18:07:01] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:07:13] <jwodder> That would be a little complicated in this exact situation.  There were breaking changes to a config file in another repo that the tests rely on.
[18:07:28] *** Joins: lethbir (~lethbir@190.192.186.27)
[18:08:02] <jwodder> nedbat: So if I'm testing an installed package, do I always have to give the full install path in --source, or is there another way?
[18:08:27] <nedbat> jwodder: if there isn't a tinuous directory, it should find it as an installable name
[18:09:12] <nedbat> jwodder: can you pastebin the output of --debug=sys,config ?
[18:10:36] <jwodder> I think I may have found the problem.  Somehow, a tinuous submodule got added to the wrong repo.
[18:10:37] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:11:03] *** Joins: driib5 (~driib@185.195.233.168)
[18:13:25] *** Quits: lethbir (~lethbir@190.192.186.27) (Quit: Client closed)
[18:13:53] *** Joins: fuzzygeorge (~fuzzygeor@office.computeam.com)
[18:15:00] *** Quits: driib (~driib@185.65.135.232) (Ping timeout: 268 seconds)
[18:15:00] *** driib5 is now known as driib
[18:15:17] *** Joins: Xaroth (~Xaroth@022-139-128-083.dynamic.caiway.nl)
[18:15:56] *** Joins: srhm (~ascii@user/srhm)
[18:16:29] <jwodder> Looks like some new version of Git changed how it handles repositories inside other repositories.
[18:16:42] *** Joins: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com)
[18:17:15] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 252 seconds)
[18:17:19] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:17:30] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) (Excess Flood)
[18:17:44] <grym> sub(modules,trees) are always kind of painful
[18:19:17] *** Joins: JavaBean (~JavaBean@user/javabean)
[18:19:23] <jwodder> nedbat: Thanks for your help!
[18:19:34] *** Joins: dkmueller (~dkmueller@dynamic-095-117-104-218.95.117.pool.telefonica.de)
[18:20:20] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[18:20:20] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) (Excess Flood)
[18:20:29] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[18:20:33] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:20:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:21:15] *** Quits: driib (~driib@185.195.233.168) (Read error: Connection reset by peer)
[18:21:35] *** Joins: driib (~driib@185.195.233.168)
[18:23:20] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[18:23:40] *** Joins: SamuelMarks (~samuel@203-194-51-42.static.tpgi.com.au)
[18:23:41] <SamuelMarks> hi
[18:23:49] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:23:49] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[18:24:18] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[18:24:29] <SamuelMarks> I keep getting annoying double escaped paths in Windows. How do I fix?   -  'foo\\\\bar' rather than 'foo\\bar'
[18:24:39] <lesshaste> I have a long list of strings. How can I make a histogram of the counts of all 2-grams, that is pairs of letters?
[18:24:50] * SamuelMarks doesn't want to hack some `str.replace(path.sep*2)` solution
[18:25:00] * SamuelMarks doesn't want to hack some `str.replace(path.sep*2, path.sep)` solution
[18:25:12] <jwodder> SamuelMarks: What are you writing in your source, and what do you want it to equal?
[18:25:16] <SnoopJ> SamuelMarks, are you sure you're looking at the actual string and not the repr?
[18:25:31] <SamuelMarks> jwodder: I am comparing strings to see if the directory one represents matches the one in the string
[18:25:35] <habnabit_> SamuelMarks, 'getting'? how are you examining these strings?
[18:25:49] <SamuelMarks> (although in this scenario there is no filesystem; it's doing a dry run on repr'd output)
[18:25:50] *** Joins: jw_ (~njw@58.182.164.99)
[18:25:54] <bjs> SamuelMarks: remember that the string "a\\b" only contains 1 slash
[18:26:04] <bjs> (and contains no quote characters)
[18:26:13] <SamuelMarks> \the\great\escape
[18:26:31] *** Joins: lethbir (~lethbir@190.192.186.27)
[18:26:37] <SamuelMarks> Oh wait maybe repr is what's causing the problem here
[18:26:46] <SamuelMarks> (too much not too little)
[18:26:49] <bjs> it doesn't sound like there's a problem at all, not necessarily
[18:26:59] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[18:27:21] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[18:27:22] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Remote host closed the connection)
[18:27:24] * SamuelMarks notes his tests are running
[18:27:57] <grym> SamuelMarks: use pathlib and then ignore the repr
[18:27:57] *** Quits: dkmueller (~dkmueller@dynamic-095-117-104-218.95.117.pool.telefonica.de) (Ping timeout: 268 seconds)
[18:28:10] <SnoopJ> jinsun, the difference in implementation is that the isinstance(obj, collections.abc.Callable) version does a bunch of reflection, but the callable(obj) version just checks if the tp_call slot is populated. The answer is the same, but the latter has access to some 'privileged' information I guess is how you'd say it
[18:28:20] *** Quits: jwodder (~jwodder@2601:89:c600:f150:cc6b:a697:c7b0:7134) (Quit: My work here is done.)
[18:28:59] *** Quits: jepler (~jepler@2001:470:69fc:105::70f) (Ping timeout: 244 seconds)
[18:28:59] *** Quits: codemouse92__ (~codemouse@user/codemouse92) (Ping timeout: 244 seconds)
[18:28:59] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Ping timeout: 244 seconds)
[18:28:59] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 244 seconds)
[18:29:01] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Read error: Connection reset by peer)
[18:29:05] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Read error: Connection reset by peer)
[18:29:05] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Read error: Connection reset by peer)
[18:29:05] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[18:29:05] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Read error: Connection reset by peer)
[18:29:05] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Read error: Connection reset by peer)
[18:29:05] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[18:29:14] *** Parts: VaniaPy (~VaniaPy@46.12.111.76.dsl.dyn.forthnet.gr) ()
[18:29:32] *** Quits: eskatonic (~eskatonic@user/eskatonic) (Quit: Textual IRC Client: www.textualapp.com)
[18:29:57] <SamuelMarks> So I think it's about comparing a `repr` with a non `repr`. I just tried converting both to `repr` but ran into some trouble. What's the inverse of `repr`?
[18:30:29] *** Joins: st4nd (~st4nd@user/st4nd)
[18:30:38] <Yhg1s> SamuelMarks: there isn't a good, general inverse.
[18:30:44] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[18:30:45] <bjs> SamuelMarks: why are you converting to repr at all, didn't you say you had a dictionary?
[18:30:48] <grym> SamuelMarks: in general there isn't on..
[18:30:49] <grym> oh
[18:31:07] <bjs> uh directory* sorry
[18:31:09] <habnabit_> SamuelMarks, repr isn't a type or a category. why are you involving it at all?
[18:31:12] <bjs> muscle memory :)
[18:32:28] <SamuelMarks> bjs - no dict
[18:32:35] *** Quits: pneff (~pneff@81.6.40.205) (Quit: WeeChat 3.1)
[18:32:40] <bjs> SamuelMarks: yes I mean directory,  a path
[18:32:44] <SamuelMarks> yep
[18:32:45] <bjs> why do you need repr
[18:32:51] *** Quits: Falc (~ldt@2a02:2788:1008:562:69b2:ceee:55d9:e1ec) (Quit: Leaving)
[18:32:55] <CrtxReavr> r'\\' contains two /s
[18:33:00] <SamuelMarks> I am outputting in repr and comparing that repr to a non repr
[18:33:01] <CrtxReavr> whoops
[18:33:06] <CrtxReavr> r'\\' contains two \s
[18:33:07] <habnabit_> SamuelMarks, why?
[18:33:09] <SamuelMarks> just rewrote it all to not ouptut in repr
[18:33:11] <bjs> SamuelMarks: okay but why are you using repr?
[18:33:13] <bjs> SamuelMarks: okay
[18:33:14] *** Joins: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com)
[18:33:23] <SamuelMarks> but that same problem is still recurring… hmm
[18:33:42] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[18:33:46] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[18:33:49] <habnabit_> SamuelMarks, what problem?
[18:33:52] <SamuelMarks> Anyway you guys suggest I don't use `repr` representation for my stdout?
[18:34:06] <SamuelMarks> habnabit_ oh it's some list index out of range or some such, not related
[18:34:14] <habnabit_> SamuelMarks, without seeing your code, i don't know what you think it means
[18:34:55] <SamuelMarks> habnabit_ `os.makedirs(directory)` but if `--dry-run` then `print("mkdir {!r}".format(directory))`
[18:35:16] <bjs> SamuelMarks: okay,  and you're trying to write a test?
[18:35:26] <Yhg1s> SamuelMarks: I hope you realise !r is repr().
[18:35:26] <vrt3> SamuelMarks: you can use `repr` for manual inspection of the data, but for comparisons just compare the values themselves
[18:35:29] <SamuelMarks> You are suggested that I use `print("mkdir '{!s}'".format(directory))` instead?
[18:35:34] <habnabit_> SamuelMarks, sure, that's generally fine. for windows paths that's going to double any \'
[18:35:36] <habnabit_> SamuelMarks, sure, that's generally fine. for windows paths that's going to double any \
[18:35:48] *** Joins: fluiD (~fluiD@66.186.209.60)
[18:35:52] *** Quits: trace (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:35:55] <habnabit_> SamuelMarks, no. i would write the !r version but the output will probably be confusing on windows
[18:35:56] <Yhg1s> SamuelMarks: no, using repr is fine. You just have to understand what it will do with backslashes.
[18:36:10] <mgedmin> not using repr would be more friendly
[18:36:11] <SamuelMarks> Ok cool I'll revert my changes to the !r and stick to !r
[18:36:11] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d953-b9e5-6f49-1ce5.res6.spectrum.com)
[18:36:15] <ApostleInTriumph> Hello. I've an array where I'd like to double its size by repeating K numbers
[18:36:23] <ApostleInTriumph> how do I proceed?
[18:36:27] <SamuelMarks> ApostleInTriumph: itertools
[18:36:30] <mgedmin> on windows print(f'mkdir "{directory}"') should be safe enough, windows filenames aren't allowed to contain ' or "
[18:36:30] <bjs> SamuelMarks: well {!r} is going to print the repr,  you'll get some output like  "a\\b\\c"  on stdout  (that is, a quote, a, 2 backslash, a b, etc)
[18:36:48] <ApostleInTriumph> SamuelMarks do you have a solution in numpy?
[18:36:50] <Yhg1s> ApostleInTriumph: K numbers from the array, or do you have K numbers in another array?
[18:36:50] <bjs> SamuelMarks: using repr like this is ok, so long as you understand what you're actually getting. But what's the problem here?
[18:37:05] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[18:37:05] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[18:37:05] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[18:37:05] *** Joins: codemouse92__ (~codemouse@user/codemouse92)
[18:37:05] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[18:37:05] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[18:37:05] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[18:37:05] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[18:37:05] *** Joins: jepler (~jepler@2001:470:69fc:105::70f)
[18:37:05] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[18:37:17] <SamuelMarks> ApostleInTriumph: yeah they have similar names in numpy, is it a 1D array?
[18:37:19] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[18:37:24] <mgedmin> it would be nice if Python had a standard way to quote pathnames for readability
[18:37:32] <ApostleInTriumph> np.repeat(a, 2) just stacks the same array. But i'd like to do it for k numbers at a time. i.e [1,2,3,4], if k=2, [1,1,2,2,3,3,4,4]
[18:37:37] <SamuelMarks> bjs - I then patch the stdout and check the output
[18:37:41] <SamuelMarks> in a unittest
[18:37:44] <ApostleInTriumph> SamuelMarks 2d array
[18:37:46] <vrt3> SamuelMarks: You could use ast.literal_eval as the inverse of repr, but actually I think you're far better of not using repr in this case. Just print the paths with quotes around them.
[18:37:49] <bjs> mgedmin: well there's pathlib that makes handling paths nicely
[18:38:01] <ApostleInTriumph> Yhg1s it's just one array, but you can think of k as group within
[18:38:05] *** fluiD is now known as colorado
[18:38:08] <SamuelMarks> vrt3 - Are there edge cases to consider, like if it has an internal ' in the filename?
[18:38:09] *** colorado is now known as fluid
[18:38:12] <bjs> SamuelMarks: okay,  so what's the problem?  if you compare the repr() of the path with what came from the output it will work fine
[18:38:19] <habnabit_> mgedmin, i think !r for this makes sense and is perfectly friendly but it is confusing for windows paths
[18:38:22] <Yhg1s> ApostleInTriumph: okay, how does K relate to the array you have?
[18:38:31] <vrt3> SamuelMarks: yes, that's a problem
[18:38:33] <mgedmin> !r is friendly when your target audience is python programmers
[18:38:36] <SamuelMarks> bjs - Yes yes, but now I'm asking a different question: should I use repr to print it out
[18:38:43] <bjs> SamuelMarks: sure I guess
[18:38:43] <ApostleInTriumph> Yhg1s not sure I understand the relation, but the length of array is strictly divisible by k
[18:39:01] *** Joins: mkellis (~Calibellu@68.235.43.165)
[18:39:13] <SnoopJ> ApostleInTriumph, np.repeat() does not "stack" anything (stacking produces a new axis, *always*), and in this case it produces exactly the output you are asking for. Are you sure it's not what you want? https://bpa.st/HDQQ
[18:39:14] <bjs> SamuelMarks: it's perhaps not the most nice looking thing, and frankly most users would prefer to see the actual path they can copy/paste
[18:39:17] <bjs> rather than the repr
[18:39:18] <bjs> but it's not bad
[18:39:25] *** Parts: windragon (~alvinhoch@user/alvinhochun) (Leaving)
[18:39:59] *** Quits: lethbir (~lethbir@190.192.186.27) (Quit: lethbir)
[18:40:19] *** Joins: bluss (~bluss@c83-254-130-19.bredband.tele2.se)
[18:40:43] <Yhg1s> ApostleInTriumph: I'm trying to figure out *what you actually want* :) You said you wanted to double it by repeating K numbers. Do you mean you want to repeat a slice of the array, or what? Does the order matter?
[18:41:23] <ApostleInTriumph> SnoopJ yes it seems so! I missed the axis and ended up with a flat array. thanks!
[18:41:48] <SnoopJ> "missed the axis...?"
[18:42:06] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[18:42:12] <ApostleInTriumph> Yhg1s yes, it's my bad that i phrased it wrongly. what I meant was i'd like to double by repeating each row first and not repeating the entire array.
[18:42:18] <vrt3> SamuelMarks: actually: just use double quotes (") around the paths; those are invalid characters in windows path names
[18:42:27] <ApostleInTriumph> SnoopJ yes, I have a 2d array, so repeat produced a 1d output
[18:42:31] <SamuelMarks> Ah ok I can do that vrt3
[18:42:32] <ApostleInTriumph> without axis^
[18:42:52] * SamuelMarks was just looking at the numpy docs; they've improved quite a bit since last he looked
[18:42:57] *** Joins: rcm62 (~rcm62@35.142.228.196)
[18:43:05] <habnabit_> vrt3, iff you're printing paths on windows yeah
[18:43:07] *** Quits: bluss (~bluss@c83-254-130-19.bredband.tele2.se) (Changing host)
[18:43:07] *** Joins: bluss (~bluss@user/bluss)
[18:43:08] <bjs> SamuelMarks: if your paths are strings, I'd probably just print(path) in the dry-run case
[18:43:17] <SnoopJ> ApostleInTriumph, ah, yes, as the documentation says you must pass `axis` in this case or it will flatten() first.
[18:43:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[18:43:49] <bjs> SamuelMarks: then in python `if path_str == test_process_stdout.read()` or whatever would work fine.
[18:43:50] <vrt3> habnabit_: True, I was under the assumption that SamuelMarks was working in Windows from his use of backslashes
[18:44:26] *** Quits: rcm62 (~rcm62@35.142.228.196) (Client Quit)
[18:44:26] *** Joins: fofoni (~fofoni@user/fofoni)
[18:44:48] <bjs> SamuelMarks: or even better is to use pathlib somewhere in there, to check that they are actually the same path, not just check if they are the same string of characters.
[18:45:19] <habnabit_> bjs, i think this is in the context of writing a test for the stdout of the process
[18:45:38] <bjs> habnabit_: it is,  but your original program should print(some_pathlib_path)
[18:45:48] <habnabit_> which, well, again highlights the virtues of structured logging
[18:45:48] *** Joins: jepler_ (~jepler@afk.unpythonic.net)
[18:47:02] <jepler_> I converted a script from old optparse to click, and I like it!  I had a weird need, though, to support exactly 4 or 5 positional arguments.  Didn't figure out a great way to do it.
[18:47:15] *** Joins: Evolver (~Evolver@user/evolver)
[18:47:19] <habnabit_> jepler_, make 4 required and give the last one a default?
[18:47:28] <SnoopJ> or use a callback
[18:47:33] <jepler_> yeah I did use a callback
[18:47:43] *** Joins: mborus (~mborus@37.228.144.15)
[18:47:44] <IHasFinger> CrtxReavr, sorry
[18:48:00] <habnabit_> jepler_, or do you mean it's logically a sequence?
[18:48:35] *** Quits: HaMsTeRs (~mx@14-0-169-035.static.pccw-hkt.com) (Quit: Konversation terminated!)
[18:48:38] <jepler_> It was to match the historical behavior of the program, 5 arguments are year-month-day-hour-minute and 4 arguments are year-dayofyear-hour-minute.
[18:48:44] *** Quits: SamuelMarks (~samuel@203-194-51-42.static.tpgi.com.au) (Ping timeout: 272 seconds)
[18:49:02] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Leaving)
[18:49:04] <jepler_> then I added 1 argument being "anything that dateutil.parser.parse can handle" and that's much better
[18:49:15] <habnabit_> hah
[18:49:26] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:49:26] <habnabit_> that does feel like logically a sequence, so a callback makes sense to me
[18:49:56] <IHasFinger> grawity, you said " async-cron for asyncio" will this run the same class method each 5 minutes or will it run the full class as if its is starting again every 5 minutes?
[18:50:08] *** Quits: bluss (~bluss@user/bluss) (Quit: leaving)
[18:50:49] *** Joins: feriman (~feriman@188.163.113.127)
[18:51:14] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[18:51:25] <grawity> uh, literally depends on what you tell it to run
[18:51:33] *** Quits: mborus (~mborus@37.228.144.15) (Quit: Client closed)
[18:52:01] *** Joins: mborus (~mborus@2001:16b8:6f0a:5400:cc86:2f5c:3ce8:34a3)
[18:52:31] <grawity> you give it callable, it calls that callable
[18:54:05] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:54:11] *** Quits: Pharyngeal (~Pharynx@larynx.ventricle.us) (Ping timeout: 252 seconds)
[18:54:31] *** Joins: masoudd_ (~masoudd@user/masoudd)
[18:55:05] *** Joins: HaMsTeRs (~mx@14-0-169-035.static.pccw-hkt.com)
[18:56:32] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 244 seconds)
[18:57:08] *** Joins: cellofellow (~user@166.70.50.58)
[18:57:41] *** Joins: hegleran (~hegleran@c-68-42-98-140.hsd1.mi.comcast.net)
[18:57:46] <SnoopJ> jepler_, the callback is definitely a little inelegant, but if it's cluttering the decorations you could maybe capture it to a name: `SPECIAL_OPTION = click.option(...);  @SPECIAL_OPTION def mycmd(...): ...`
[18:57:49] *** Joins: bjwest (~johnny@154.3.250.184)
[18:58:02] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 252 seconds)
[18:58:27] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[18:58:29] <jepler_> SnoopJ: it feels just fine to me. @click.argument("timespec", type=str, nargs=-1, callback=parse_timespec)
[18:59:18] *** Joins: zeden (~zeden@user/zeden)
[18:59:23] <SnoopJ> no problem then :)
[18:59:30] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[19:00:18] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 264 seconds)
[19:01:17] *** Joins: Luyin (~daisy@user/luyin)
[19:02:28] *** Quits: redkrieg (~redkrieg@user/redkrieg) (Quit: leaving)
[19:02:38] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:02:48] *** Joins: redkrieg (~redkrieg@user/redkrieg)
[19:03:59] *** Joins: wyclif (~wyclif@user/wyclif)
[19:05:26] *** Joins: heco (~redrum@user/redrum88)
[19:06:19] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-8815-2cb8-7761-b8f0.res6.spectrum.com)
[19:06:19] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[19:09:18] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:10:13] *** Joins: dme86 (~dan@user/dan86)
[19:10:32] *** Joins: node1 (~node1@user/node1)
[19:10:41] *** Joins: jw_ (~njw@58.182.164.99)
[19:11:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[19:11:53] *** Joins: dicajo (~dicajo@072-186-122-186.res.spectrum.com)
[19:12:41] *** Joins: Intruder777 (~Intruder7@ppp-109-104-160-59.wildpark.net)
[19:12:42] *** Quits: HaMsTeRs (~mx@14-0-169-035.static.pccw-hkt.com) (Remote host closed the connection)
[19:13:03] *** Quits: hegleran (~hegleran@c-68-42-98-140.hsd1.mi.comcast.net) (Quit: WeeChat 2.3)
[19:13:35] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:13:44] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[19:14:34] *** Joins: meatballs (~owentanti@2001:470:69fc:105::633)
[19:15:32] *** Joins: CobraK (uid144971@stonehaven.irccloud.com)
[19:15:57] *** Quits: Ironman3000 (~Guest3@2a02:908:212:b020:5877:c5aa:6bdb:249e) (Quit: Client closed)
[19:16:22] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[19:18:37] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[19:19:01] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[19:19:06] *** Joins: NoImNotNineVolt (~ninevolt@c-73-248-207-98.hsd1.nj.comcast.net)
[19:19:08] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[19:19:08] *** Joins: wattux (~wattux@2a02:810a:1140:4b6c::f428)
[19:19:14] *** Quits: vbgunz_ (~vbgunz@35.141.71.47) (Read error: Connection reset by peer)
[19:19:19] *** Joins: KevinX (~KevinX@94.140.8.68)
[19:19:56] *** Quits: adios (~adios@244.92.151.186.static.intelnet.net.gt) (Quit: Client closed)
[19:20:32] *** Joins: gareppa (~gareppa@user/gareppa)
[19:20:32] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[19:21:20] *** Joins: nicxz (~nicxz@user/nicxz)
[19:22:24] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[19:23:07] *** Quits: fannagoganna (~tanim@c-98-37-1-250.hsd1.ca.comcast.net) (Quit: leaving)
[19:25:26] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:27:25] *** Joins: jphaynes66 (~TerraFirm@97-118-109-179.hlrn.qwest.net)
[19:30:24] *** Quits: jphaynes66 (~TerraFirm@97-118-109-179.hlrn.qwest.net) (Quit: Bye y'all.)
[19:32:57] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[19:33:06] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Remote host closed the connection)
[19:33:15] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[19:33:36] *** arti_ is now known as arti
[19:33:42] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[19:34:32] *** Quits: masoudd_ (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[19:34:33] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[19:34:57] *** Joins: cliluw (~cliluw@47.147.80.149)
[19:38:03] *** Joins: m0nkey_ (~quassel@user/m0nkey/x-3352227)
[19:38:53] *** Quits: ionface (~ionface@user/ionface) (Quit: ionface)
[19:41:29] *** Quits: jazzy (~jaziz@2600:380:4547:d128:c41c:b096:5cc5:1cd0) (Ping timeout: 252 seconds)
[19:43:18] *** Joins: skeld_ (~skeld@2601:148:200:ac70:1027:a3de:b0d:be8c)
[19:43:21] *** Quits: node1 (~node1@user/node1) (Ping timeout: 244 seconds)
[19:43:28] *** Joins: audiocat (~audio@2603-8081-1800-0062-c757-0b84-a6f0-26c2.res6.spectrum.com)
[19:44:39] *** Quits: skeld_ (~skeld@2601:148:200:ac70:1027:a3de:b0d:be8c) (Client Quit)
[19:45:06] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[19:46:28] *** Joins: skeld (~skeld@2601:148:200:ac70:1027:a3de:b0d:be8c)
[19:49:13] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:50:58] *** Joins: torandu (~sean@94.7.66.19)
[19:51:49] *** Quits: torandu (~sean@94.7.66.19) (Client Quit)
[19:52:07] *** Joins: torandu (~sean@94.7.66.19)
[19:52:18] *** Quits: zeenk (~zeenk@188.26.30.39) (Quit: Konversation terminated!)
[19:53:50] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[19:54:00] *** Quits: torandu (~sean@94.7.66.19) (Client Quit)
[19:54:27] *** Joins: torandu (~sean@94.7.66.19)
[19:54:53] *** Joins: Tiago_Paolini (sid172748@id-172748.stonehaven.irccloud.com)
[19:56:48] *** Joins: jds (rpc@2600:3c00::f03c:91ff:fed5:10aa)
[19:56:49] *** Joins: saagaar (~saagaar@2400:1a00:bd11:651e:447c:8099:3840:441f)
[19:57:04] *** Joins: jw_ (~njw@58.182.164.99)
[19:59:34] *** Quits: argento (~argent0@168-227-96-51.ptr.westnet.com.ar) (Ping timeout: 244 seconds)
[20:01:34] *** Quits: mantiX (~manti7@176.10.104.94) (Ping timeout: 272 seconds)
[20:01:34] *** Parts: yogoyo (~yogoyo@p200300def74a0197e33b90f9f98684f3.dip0.t-ipconnect.de) (bbl)
[20:02:32] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[20:03:13] *** Joins: vladoski (~vladoski@2001:b07:add:d406:41a:eadb:debb:abd)
[20:03:29] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[20:03:49] <vladoski> if I want to remove something for a list, does .remove() cycle through the whole list?
[20:03:56] <vladoski> is there a way to remove by using the index?
[20:04:30] <mborus> to remove by index, try the `del`command
[20:04:39] <vladoski> okay
[20:04:44] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[20:04:48] <vladoski> is removing by index more efficient>
[20:04:49] <vladoski> ?
[20:05:02] <mborus> no idea
[20:05:02] *** Joins: ntdll_ (~ntdll@user/ntdll)
[20:05:21] <SnoopJ> vladoski, the answer to "is X more efficient than Y" is usually "measure it"
[20:05:22] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[20:05:28] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.1)
[20:05:43] *** Parts: jds (rpc@2600:3c00::f03c:91ff:fed5:10aa) (WeeChat 1.9.1)
[20:06:46] <nedbat> vladoski: it might be that you want a different data structure.  What's in the list, and why do you want to remove some of it?
[20:06:49] <ApostleInTriumph> vladoski i'd recommend using index to create a new array with those elements that you'd need
[20:06:56] *** Joins: madrak (~user@user/madrak0)
[20:07:07] <vladoski> nedbat, a list of db rows that I've fetch using sqlalchemy
[20:07:19] <nedbat> vladoski: ok, why remove elements?
[20:08:22] *** Joins: someara (sid19135@id-19135.tinside.irccloud.com)
[20:09:30] *** Joins: viktorivan (~ivan@187.223.103.108)
[20:10:02] <SnoopJ> I think any removal is going to require resizing the list (in CPython anyway), so I would expect the various spellings to be about the same
[20:10:30] *** Parts: Luyin (~daisy@user/luyin) (bye bye)
[20:11:11] *** Quits: vrt3 (~vrt3@d54c5733d.access.telenet.be) (Quit: Leaving)
[20:12:56] *** Quits: jw_ (~njw@58.182.164.99) (Read error: Connection reset by peer)
[20:13:04] <Neoon> eh how do I get the return data out of a queue? It seems like I get nothing after waiting the processes to end and pullin queue.get() gives me nothin
[20:13:31] *** Quits: audiocat (~audio@2603-8081-1800-0062-c757-0b84-a6f0-26c2.res6.spectrum.com) (Ping timeout: 244 seconds)
[20:14:28] *** Joins: binarymutt (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net)
[20:16:09] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[20:17:28] *** Joins: feriman (~feriman@188.163.113.127)
[20:18:40] *** Joins: bluss (~bluss@user/bluss)
[20:19:35] *** Joins: superboot (agentgasma@user/superboot)
[20:19:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[20:20:39] *** Joins: biozz (~biozz@static.211.203.216.95.clients.your-server.de)
[20:21:00] *** Joins: roro (~roro@user/roro)
[20:21:25] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[20:21:38] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-17-174-91-212-25.dsl.bell.ca) (Ping timeout: 252 seconds)
[20:22:17] *** Joins: drew (~drew@user/drew)
[20:22:28] <bancroft> when I script an ssh command, I can do `-t` to get colourful output. What's the equivalent in paramiko?
[20:22:39] <bancroft> and hopefully it's available in fabric2
[20:24:58] <Neoon> I see you pass a different queue to return the data, magnificent
[20:25:16] *** Joins: areicogi (~koning@c-24-5-121-76.hsd1.ca.comcast.net)
[20:25:59] *** Quits: roro (~roro@user/roro) (Quit: roro)
[20:26:17] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[20:28:09] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:28:23] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:29:13] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:32:28] *** Quits: saagaar (~saagaar@2400:1a00:bd11:651e:447c:8099:3840:441f) (Ping timeout: 250 seconds)
[20:33:01] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[20:33:11] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[20:33:11] *** Joins: seachdamh (~kvirc@user/seachdamh)
[20:34:45] *** Quits: sodimel (~co@31.32.214.113) (Quit: Konversation terminated!)
[20:35:01] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[20:35:17] *** Joins: ddavis (~user@24.98.77.213)
[20:35:38] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:35:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[20:35:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[20:36:35] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[20:36:39] *** Joins: alguien (~alguien@user/alguien)
[20:37:05] *** Quits: NanoC (~NanoCoast@p200300e127264d001d3a04d52b588e67.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[20:37:19] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:37:21] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[20:37:40] *** Quits: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net) (Ping timeout: 250 seconds)
[20:38:22] *** Quits: vladoski (~vladoski@2001:b07:add:d406:41a:eadb:debb:abd) (Remote host closed the connection)
[20:38:37] *** Joins: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net)
[20:38:46] *** Joins: vimart (~vimart@185.69.145.222)
[20:38:58] *** Quits: ElisaElectron (~elisa_ele@2a01:cb1d:88f0:c600:6b9d:2248:effd:485b) (Quit: WeeChat 2.3)
[20:40:16] <rendar> if i have this string, '\nhello how are?\n+\ndfd\n+etr+eeld+dd\n+\n++dlfldlkf\n+ll\n+\n', and i do: `[x.strip() for x in a.split("+") if len(x) > 0]` shouldn't that skip all the empty string arguments? but it doesn't -- how?
[20:42:15] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 244 seconds)
[20:42:17] <SnoopJ> rendar, if `a` is the string, that comprehension will iterate the string one character at a time. Otherwise you need to show us more context
[20:42:32] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 252 seconds)
[20:42:53] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[20:43:49] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:44:23] <bjs> rendar: len(x) > 0  doesn't take into account the strip(),   so you may see some empty strings in the final output if there was only whitespace in x
[20:44:54] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:45:34] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 252 seconds)
[20:45:35] *** Joins: noarb (~noarb@user/noarb)
[20:45:43] <rendar> i see
[20:45:55] *** Joins: goepsilongo (~goepsilon@2806:263:c404:87b3:c40e:9b90:fdf2:228c)
[20:46:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:46:04] <rendar> can i erase all len==0 strings inside the comprehension?
[20:46:24] <bjs> rendar: you are doing it, you just want to get rid of the len(x.strip()) == 0 ones not just the len(x) == 0 ones
[20:46:25] *** Joins: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01)
[20:46:42] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[20:46:47] <rendar> yeah, but in doing that, i'd call .strip() 2 times!
[20:46:54] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:46:56] <bjs> rendar: well you can choose to write it in a way that calls strip once
[20:47:07] <rendar> bjs: inside the comprehension?
[20:47:40] <bjs> rendar: like:  `[y for x in a.split("+") if len(y := x.strip()) > 0]` or `[x for t in a.split("+") for x in [t.strip()] if len(x) > 0]` or something
[20:47:45] <bjs> rendar: or outside the comprehension if it's easier
[20:47:55] *** Joins: tabakhase (tabakhase@user/tabakhase)
[20:48:00] <baltazar> rendar: you could also use a map then a filter: filter(len, map(str.strip, a.split('+')))
[20:48:00] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[20:48:13] <rendar> ok
[20:48:14] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[20:48:36] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[20:48:37] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Remote host closed the connection)
[20:48:58] <baltazar> (passing just len to the filter is kinda cheeky but it works, since any nonzero number is true, but writing out a lambda where you're explicitly comparing it to something might be more readable)
[20:50:01] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:50:22] <alguien> Hi. Is anyone familiar with backoff? How is it possible that SlackApiError is _not_ caught having been produced the 2nd time around by this call: https://github.com/singer-io/tap-slack/blob/master/tap_slack/client.py#L119
[20:51:19] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:51:30] *** Joins: cdown (~cdown@163.114.131.1)
[20:51:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[20:51:46] <vimart> I've been just said about an error which pop up from tutorials on geeksforgeeks. So, to take few inputs there's  line: x, y = input("Enter a two value: ").split() .  I've just check on my machines and error comes up. Did it work on some previous Python version?
[20:52:00] *** Joins: wyclif (~wyclif@user/wyclif)
[20:52:18] <vimart> BTW: I've checked with Py3.8 and Py3.9
[20:52:45] <alguien> Notice that the giveup function only throws in a certain case. That case is not met. I have a breakpoint in wait, where it raises the exception, and it does not get hit. Yet, the program crashes
[20:52:46] <dicajo> Intruder777: what the result of this "firewall-cmd --list-all-zones | grep -A 10 trusted"
[20:52:55] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:52:59] <baltazar> vimart: this will fail if the user only gives one value, but seems to work if I give it two
[20:53:15] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:56:03] *** Joins: lazr47 (~kvirc@69-58-32-213.kresanet.org)
[20:56:18] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Client Quit)
[20:56:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[20:57:08] *** Joins: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net)
[20:57:13] <baltazar> vimart: if you want the second to be optional, you can do a hack like this but it's pretty ugly imo: (input("Enter two values: ").split() + [None])[:2]
[20:57:41] *** Quits: lazr47 (~kvirc@69-58-32-213.kresanet.org) (Read error: Connection reset by peer)
[20:58:35] <rama> Is there a way to compute the symmetric difference between sets but have the return not be one set combined, rather (a-b), (b-a)?
[20:59:13] *** Joins: mokulus (~mokulus@user/mokulus)
[20:59:19] <rama> mhm maybe i should just stick to differences, rather then symmetric differences.
[20:59:46] <bjs> rama: you want to return a pair of sets?
[20:59:52] *** Quits: mokulus (~mokulus@user/mokulus) (Client Quit)
[20:59:54] <baltazar> rama: if you want (a-b), (b-a), just write (a-b), (b-a) ?
[21:00:12] <bjs> yeah if you want to return the pair of differences then just do that
[21:01:04] *** Quits: zogg (~zogg@156-155-160-150.ip.internet.co.za) (Ping timeout: 250 seconds)
[21:01:27] *** Quits: frostschutz (~frostschu@2a01:c22:d42f:e800:5ea6:851c:4f43:dc77) (Quit: Leaving)
[21:02:28] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[21:03:01] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[21:03:09] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:03:54] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:04:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:04:59] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 244 seconds)
[21:05:34] *** Joins: cliluw (~cliluw@47.147.80.149)
[21:05:40] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:06:00] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[21:06:59] *** Joins: EekTheCat (~EekTheCat@207.141.246.2)
[21:07:34] *** Quits: doev (~doev@p549d7f33.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:07:35] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Quit: dd if=/dev/urandom of=/dev/sda)
[21:07:53] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[21:08:05] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 244 seconds)
[21:08:06] *** Joins: kosh (~kosh@user/kosh)
[21:09:03] *** Quits: browniebroke (uid501792@id-501792.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:09:46] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[21:09:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[21:10:01] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Client Quit)
[21:10:19] *** Joins: wyclif (~wyclif@user/wyclif)
[21:11:41] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[21:12:33] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[21:12:48] *** Joins: audiocat (~audio@2603-8081-1800-0062-98de-2a06-70cb-20cf.res6.spectrum.com)
[21:13:25] *** Joins: DuduTT (~EduardoTT@186.205.27.37)
[21:13:29] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Client Quit)
[21:13:50] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[21:14:29] *** Quits: Dotz0cat (~Dotz0cat@h66.174.40.162.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[21:18:22] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[21:19:43] *** Joins: trace (~trace@dynamic-002-247-248-216.2.247.pool.telefonica.de)
[21:19:50] *** Quits: dicajo (~dicajo@072-186-122-186.res.spectrum.com) (Quit: WeeChat 2.3)
[21:21:30] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:21:48] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[21:22:29] *** Joins: bosspotato_ (~bosspotat@user/bosspotato)
[21:22:42] *** Parts: bosspotato_ (~bosspotat@user/bosspotato) (Leaving)
[21:24:57] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[21:25:51] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[21:26:22] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 244 seconds)
[21:26:55] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[21:26:56] *** Quits: aslicedbanjo (~aslicedba@host86-148-108-225.range86-148.btcentralplus.com) (Quit: Leaving.)
[21:27:14] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[21:28:12] *** Quits: roelj (~user@2001:1c02:b21:6200:c9cf:5ac8:4ac9:c58e) (Remote host closed the connection)
[21:28:24] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[21:29:18] *** Joins: SebastianM (~seba@user/sebastianm)
[21:29:28] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[21:29:30] <vimart> baltazar: I've not uderstand the guy or he explained it wrongly because I was thinking about few inputs like. Indeed as you've said works with inputs in lines separated with space
[21:30:02] *** Joins: dme86 (~dan@user/dan86)
[21:30:39] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[21:31:02] *** Quits: justyb11 (~justyb@2601:483:500:3ea:b934:dac8:1b5d:c03d) (Quit: Leaving)
[21:31:27] *** Joins: st4nd1 (~st4nd@user/st4nd)
[21:31:39] *** Joins: alguien (~alguien@user/alguien)
[21:32:45] *** Joins: justyb11 (~justyb@2601:483:500:3ea:290a:dd6f:71bb:1a39)
[21:33:08] *** Joins: larkfisherman (~larkfishe@178.77.35.251)
[21:33:27] *** Joins: Paul (~Paul@user/paul)
[21:33:41] *** Quits: larkfisherman (~larkfishe@178.77.35.251) (Remote host closed the connection)
[21:34:07] *** Quits: EekTheCat (~EekTheCat@207.141.246.2) (Quit: Connection closed)
[21:34:24] *** Joins: l554 (~l554@172.58.220.121)
[21:34:40] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[21:35:20] *** Quits: st4nd (~st4nd@user/st4nd) (Ping timeout: 252 seconds)
[21:35:36] *** Joins: mantiX (~manti7@176.10.104.94)
[21:36:00] *** Joins: anp (~anp@135.0.169.86)
[21:36:30] *** Quits: audiocat (~audio@2603-8081-1800-0062-98de-2a06-70cb-20cf.res6.spectrum.com) (Ping timeout: 244 seconds)
[21:37:40] *** Quits: st4nd1 (~st4nd@user/st4nd) (Quit: Leaving)
[21:37:56] *** Joins: st4nd (~st4nd@user/st4nd)
[21:38:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:38:19] *** Joins: badsektor (~badsektor@user/badsektor)
[21:38:20] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[21:42:16] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 272 seconds)
[21:42:16] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 272 seconds)
[21:42:23] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 244 seconds)
[21:42:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 244 seconds)
[21:43:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[21:44:27] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:45:31] *** Quits: anp (~anp@135.0.169.86) (Changing host)
[21:45:31] *** Joins: anp (~anp@user/anp)
[21:46:08] *** Joins: DXR (~lyrical@46.246.236.246.dsl.dyn.forthnet.gr)
[21:47:54] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Quit: ZNC 1.8.2 - https://znc.in)
[21:48:13] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[21:48:47] *** Parts: l554 (~l554@172.58.220.121) ()
[21:49:29] *** Quits: kryptec (~elmo@S0106b81619ea25e4.cg.shawcable.net) (Quit: WeeChat 1.9.1)
[21:50:13] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Read error: Connection reset by peer)
[21:51:40] *** Joins: jphaynes66 (~TerraFirm@97-118-109-179.hlrn.qwest.net)
[21:52:39] *** Quits: ddavis (~user@24.98.77.213) (Remote host closed the connection)
[21:53:15] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:53:34] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[21:55:51] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[21:58:37] *** Quits: fflam_ (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.1)
[21:59:05] *** Joins: Betal (~Beta@user/betal)
[21:59:10] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[21:59:30] <rama> baltazar , bjs: yeah when i read the question i typed out it made more sense to do that.
[21:59:36] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:01:16] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 272 seconds)
[22:01:43] *** Joins: Akuli (~Akuli@87-94-111-8.bb.dnainternet.fi)
[22:02:34] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:02:58] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:04:24] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[22:06:36] *** Joins: fofoni_ (~fofoni@user/fofoni)
[22:07:16] *** Joins: binarymutt_ (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net)
[22:07:53] *** Joins: nerdraven (~nerdraven@196.45.51.47)
[22:07:56] *** Joins: jenhsun (uid342237@id-342237.stonehaven.irccloud.com)
[22:08:11] *** Joins: hegleran (~hegleran@c-68-42-98-140.hsd1.mi.comcast.net)
[22:08:14] *** Quits: binarymutt (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net) (Ping timeout: 272 seconds)
[22:09:15] *** Quits: fofoni (~fofoni@user/fofoni) (Ping timeout: 244 seconds)
[22:09:23] *** Parts: hegleran (~hegleran@c-68-42-98-140.hsd1.mi.comcast.net) ()
[22:09:34] *** Joins: vicfred (~vicfred@user/vicfred)
[22:10:35] *** Quits: fofoni_ (~fofoni@user/fofoni) (Client Quit)
[22:10:46] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:11:04] *** Quits: jenhsun (uid342237@id-342237.stonehaven.irccloud.com) (Client Quit)
[22:13:39] *** Joins: teut (~teut@182.69.85.39)
[22:13:52] *** Quits: wattux (~wattux@2a02:810a:1140:4b6c::f428) (Ping timeout: 250 seconds)
[22:14:06] *** Quits: mkellis (~Calibellu@68.235.43.165) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:14:32] *** Joins: Dotz0cat (~Dotz0cat@h9.242.19.98.static.ip.windstream.net)
[22:14:42] *** Quits: rendar (~rendar@user/rendar) ()
[22:15:15] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 244 seconds)
[22:15:51] <sybariten> Hey, is the pallet channel here the best place to ask about flask things? I dont really know what pallet is in relation to flask
[22:16:29] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1005) (Quit: Leaving)
[22:17:08] <philipp64|work> Does Flask support HTTP 1.1?  Or 2.0?
[22:17:26] *** Quits: trace (~trace@dynamic-002-247-248-216.2.247.pool.telefonica.de) (Remote host closed the connection)
[22:17:32] <Wulf> sybariten: pallets is some kind of group/organization that created+maintains flask
[22:17:51] *** Joins: Julian (~tos9@151.66.53.132)
[22:17:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:18:15] <sybariten> Wulf: gotcha!
[22:18:44] <supakeen> philipp64|work, Flask speaks WSGI, your webserver might speak either or both of those.
[22:19:21] <SnoopJ> sybariten, questions about pallets projects are certainly relevant in #python, though
[22:19:52] *** Joins: ssbr (~ssbr@2620:15c:10f:203:ec66:dab9:e3ca:687e)
[22:20:31] <philipp64|work> right now I’m prototyping on MacOS, so whatever Flask uses out of the box there…
[22:21:03] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: Lost terminal)
[22:21:08] *** Joins: kst (~user@cpe-70-95-182-43.san.res.rr.com)
[22:22:23] *** Joins: fofoni (~fofoni@user/fofoni)
[22:23:25] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[22:23:40] *** Quits: Julian (~tos9@151.66.53.132) (Quit: leaving)
[22:25:01] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[22:25:55] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[22:26:04] <sybariten> SnoopJ: okay
[22:26:58] <raek> what is Pallet?
[22:27:11] *** Joins: feriman (~feriman@188.163.113.127)
[22:27:14] <supakeen> Read up 10 lines, raek.
[22:27:30] <supakeen> philipp64|work, if you are using the 'development server' it speaks HTTP/1.1.
[22:28:12] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:28:54] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[22:29:21] *** Joins: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net)
[22:29:28] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Client Quit)
[22:29:46] *** Joins: Lapsa (~kani@2603-6080-f201-3400-54a5-cc7d-27c2-6ff9.res6.spectrum.com)
[22:30:14] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:30:24] <sed> Hi I am looking at coding questions and it asks this: Write a one-line Python generator expression that provides an infinite stream of unique integers that are evenly divided by any of the ascii values for the characters in “close”. 4440, 4444, 4455 are examples of numbers in this stream.
[22:31:13] <supakeen> Sounds like a super practical thing to want.
[22:31:19] <supakeen> What have you tried and what isn't working, etc.
[22:31:44] <sed> i have no idea since i don't see how it is possible in 1 line
[22:31:49] * SnoopJ isn't clear what "evenly divided by any of the ascii values for the characters in “close”" means
[22:32:14] <sed> yea that is what i am wondering too
[22:32:22] <teut> then write in multiple lines and then ask for help
[22:32:27] *** Joins: qlixed (~qlixed@181.44.129.1)
[22:32:36] <sed> yea no big deal but wanted to see your thoughts
[22:32:39] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:33:05] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[22:33:17] <SnoopJ> None of those examples are divisible by *all* of [ord(c) for c in "close"], but they're all divisible by at least one
[22:33:42] <bjs> SnoopJ: it does say any
[22:34:01] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Client Quit)
[22:34:13] <SnoopJ> bjs, my reading was that they integer is evenly divided by any of them
[22:34:17] <SnoopJ> the* integer
[22:34:54] <bjs> SnoopJ: so 4450 is there because 4450 % ord("o") == 0
[22:35:08] <SnoopJ> right, I guess this must be what the problem means
[22:35:45] <SnoopJ> sed, are you allowed to import things from the standard library?
[22:35:51] <bjs> but 4455 doesn't work :)
[22:36:02] <sed> it says assume everything is already imported
[22:36:03] *** Joins: greyltc (~greyltc@user/greyltc)
[22:36:04] *** Parts: expix (~1@amontpellier-658-1-18-253.w83-201.abo.wanadoo.fr) ()
[22:36:13] <sed> but i am curious what you would import
[22:36:14] <SnoopJ> bjs, 4455/99 == 45.0
[22:36:16] <bjs> oh no it does
[22:36:19] *** Quits: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se) (Quit: WeeChat 2.8)
[22:36:21] <bjs> I can't ascii
[22:36:23] <bjs> SnoopJ: :)
[22:36:34] *** Joins: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se)
[22:36:37] <bjs> sed: itertools to get an infinite stream
[22:36:47] <sed> ah that makes sense
[22:36:55] <SnoopJ> sed, I would do this: https://bpa.st/C2YA
[22:37:11] <Wulf> sed: I'd import itertools.count
[22:37:16] *** Joins: aslicedbanjo (~aslicedba@host86-148-108-225.range86-148.btcentralplus.com)
[22:37:19] *** Joins: argento (~argent0@168-227-96-51.ptr.westnet.com.ar)
[22:37:22] <SnoopJ> maybe you want count(1) if 0 should be excluded :)
[22:37:24] <sed> yea good idea
[22:37:39] *** Tiago_Paolini is now known as Sunwalker
[22:38:14] *** Sunwalker is now known as Tiago_Paolini
[22:39:39] *** Joins: sozuba (~sozuba@user/sozuba)
[22:40:00] *** Joins: Julian (~tos9@151.66.53.132)
[22:40:00] *** Quits: Julian (~tos9@151.66.53.132) (Client Quit)
[22:40:00] <supakeen> it's like (i for i in itertools.count() if not any(i % c for c in b"close")))))))))))))))))))))))))))
[22:40:02] <supakeen> Or something.
[22:40:14] <ali1234> that's an awful way to do it
[22:40:26] <SnoopJ> supakeen, I think that's the Lisp spelling :)
[22:40:32] *** Quits: qlixed (~qlixed@181.44.129.1) (Ping timeout: 272 seconds)
[22:40:45] <supakeen> (cdr
[22:40:46] *** Quits: seachdamh (~kvirc@user/seachdamh) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[22:41:16] <bjs> cdr wdr shdr
[22:41:26] <supakeen> wait did we write the exact same thing
[22:41:28] *** Joins: qlixed (~qlixed@2800:810:471:2f8::1b7)
[22:41:30] <supakeen> i should click on pastes more often
[22:41:47] <SnoopJ> pretty much the same yea
[22:41:55] <supakeen> close enough any ways
[22:42:04] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[22:42:10] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: PdimH)
[22:42:13] <ali1234> i mean it works but... why not generate the products directly?
[22:42:40] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[22:42:50] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 244 seconds)
[22:42:51] <SnoopJ> that's another option, sure
[22:42:55] <teut> and how will you sort them then?
[22:43:06] *** Joins: int0x1C8 (~int0x1C8@user/int0x1c8)
[22:43:07] <ali1234> it doesn't ask you to sort them, does it?
[22:43:18] <ali1234> they only have to be unique
[22:43:19] <SnoopJ> teut, using the amazing property of numbers that they can be ordered
[22:43:25] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[22:43:28] *** Joins: darksun (~darksun@user/darksun)
[22:44:20] <ali1234> hmm also isn't this actually justa  more complicated version of fizzbuzz?
[22:44:32] <supakeen> i suppose the entire point of such a question is that you can always say 'why didnt you use product' or if you did 'why didnt you just filter'
[22:44:34] <greyltc> anyone have experience with the `cmd` module?
[22:44:42] <habnabit_> greyltc, let's say yes
[22:44:43] <SnoopJ> greyltc, let's assume the answer is yes, ask the next question
[22:44:52] * SnoopJ owes habnabit_ a soda
[22:44:55] <habnabit_> heh
[22:45:11] <greyltc> I'd like to use it with a command where the user will enter a password into an interactive shell
[22:45:13] *** Quits: vimart (~vimart@185.69.145.222) (Ping timeout: 244 seconds)
[22:45:16] <greyltc> to authenticate them
[22:45:30] <sed> well thanks all thought that was a good little brain teaser that we could all learn from
[22:45:31] <ali1234> supakeen: that's a very good point. i'm pretty sure i'd answer that with "checking every number is really inefficient"
[22:45:36] <Wulf> greyltc: there is getpass
[22:45:54] <greyltc> yeah. i could do that
[22:45:58] <p-i-> How to round 1234567 down to 1230000 (i.e. 3 sig figs)?
[22:46:01] <ali1234> then they'd say "did you benchmark it?" and i'd say "no"
[22:46:06] <SnoopJ> generating the desired integers using the known divisors is a good way to go, it's just going to result in a much less legible solution when it's constrained to one line
[22:46:14] <SnoopJ> if you're dying to see that solution, I encourage you to write it
[22:46:15] <greyltc> figured it would be more secure if my code never gets the password
[22:46:20] *** Joins: node1 (~node1@user/node1)
[22:46:28] <int0x1C8> what's this about integers?
[22:46:31] <teut> whats the equivalent of      `net localhost 25000` on windows?
[22:46:35] <ali1234> i'd put the multiline version in a comment :)
[22:46:42] <SnoopJ> int0x1C8, they aren't to be trusted
[22:46:58] <Wulf> teut: What does that do?
[22:46:59] <SnoopJ> ali1234, the problem is explicitly one-line, but you are free to write whatever non-compliant code you want
[22:47:01] <teut> `nc localhost 25000`   *
[22:47:06] <int0x1C8> I'm a mathematician and I take offense to that!
[22:47:09] <node1> How to convert epoch time into UTC time? using command line?
[22:47:21] <SnoopJ> int0x1C8, found the algebraist! :)
[22:47:37] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[22:47:45] *** Quits: qlixed (~qlixed@2800:810:471:2f8::1b7) (Ping timeout: 272 seconds)
[22:47:46] <Wulf> node1: datetime.datetime.utcfromtimestamp
[22:48:06] <teut> well that is used to send data to the socket
[22:48:09] <habnabit_> greyltc, that's a good thought to have, but where should the password be routed for the aunth?
[22:48:13] <habnabit_> authn
[22:48:32] <teut> https://www.youtube.com/watch?v=MCs5OvhV9S4&t=297s  I just copied David Beazely's code
[22:48:39] <teut> but here I m stuck
[22:48:40] <node1> Wulf, Thank's actually i have asked into wrong channel. :D i need to ask this in bash or Linux since i was looking for command line options.
[22:49:01] <habnabit_> node1, command line options to a program you're writing?
[22:49:07] <greyltc> habnabit_: I thougth the interactive shell that the 'cmd' module can make would handle that (magic)
[22:49:32] <node1> habnabit_, Well it's bash script.
[22:49:38] <habnabit_> greyltc, yes, but i'm asking: handle _what_? who will authenticate the password?
[22:49:46] <habnabit_> node1, oh. why? write it in python
[22:49:47] *** Joins: dld (~davidlowr@2601:197:600:1210:38c6:8918:615d:1c02)
[22:50:15] <int0x1C8> maybe he's just authenticating internally?
[22:50:25] <habnabit_> int0x1C8, 'he'? ;)  but yes, this is why i'm asking
[22:50:40] <greyltc> habnabit_: the command is `kinit user@REALM.EDU` issuing that prompts for the user's password and the exit code tells me if the password is good or not
[22:50:45] <habnabit_> greyltc, ahhh kerberos
[22:50:53] <int0x1C8> xe, whatever
[22:50:57] <greyltc> yep
[22:51:14] *** Joins: trench (trench@user/trench)
[22:51:28] <habnabit_> int0x1C8, just say 'they' if you don't know :)
[22:51:52] <node1> habnabit_, Yes i will write in Python.
[22:51:57] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Quit: Leaving)
[22:51:59] <int0x1C8> linguistic habits die hard
[22:52:09] <SnoopJ> yep, takes practice
[22:52:24] <habnabit_> int0x1C8, sure. i have sympathy for that, which is why i gently nudge people in the right direction when i see it
[22:52:43] *** Joins: badsektor (~badsektor@user/badsektor)
[22:52:44] <Wulf> p-i-: I'm sure there are nicer ways. int(re.sub(r"^(\d{3})(\d+)$", lambda x: x.group(1) + '0' * len(x.group(2)), str(1234567)))
[22:53:35] <habnabit_> greyltc, i'm no kerberos expert, but afaik you can just use subprocess.run to call kinit and it'll read the password interactively from the user itself
[22:53:41] <int0x1C8> hell I should just go full mathematician and replace all pronouns with {x | forall: x in ACCEPTABLE_PRONOUNS}
[22:54:38] <kevr> is there a way to both set a variable to a conditional and test that conditional at the same time?
[22:54:50] <Wulf> kevr: :=
[22:54:52] <kevr> something like `if (t = (a == b)):
[22:54:55] <kevr> oh shit?
[22:55:27] <Wulf> kevr: no, it's called "walrus operator"
[22:55:29] <SnoopJ> kevr, the "walrus" operator is useful for that, a frequent use is: `if (m := re.match(...)): do_something(w)`
[22:55:38] <kevr> perfect!
[22:55:47] <SnoopJ> (the parentheses there are optional but I like the visual distinctness)
[22:56:07] <kevr> same
[22:56:15] <kevr> man, that's beautiful. jesus.
[22:56:16] <kevr> all along.
[22:56:20] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[22:56:24] <int0x1C8> do you mean do_something(m) at the end?
[22:56:25] <kevr> thank you two
[22:56:27] <kevr> <3
[22:56:36] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[22:56:40] <no_gravity> Good Evening
[22:56:46] <no_gravity> When writing a new module that caches urls, would you guys call the file "url_cache.py"?
[22:56:58] <ssbr> no_gravity: sure, that sounds fine.
[22:57:11] <SnoopJ> that's a pretty clear name for it, sure
[22:57:53] <ali1234> trying to figure out if this avoids duplicates or not: (prod(x, *s) for s in powerset(factors) for x in count(1) if x not in factors)
[22:57:58] <kevr> god, that things makes _SO_ great for breaking loops that can break to save calc time.
[22:58:08] <no_gravity> ssbr, SnoopJ: Thanks. I still have a hard time with using lowercase and underscore. It feels so strange because in PHP and JS I would call it UrlCache.
[22:58:09] <kevr> -1 line
[22:58:29] <habnabit_> kevr, are you billed per line
[22:58:45] <kevr> i am. they charge me fifteen billion for each extra line.
[22:58:52] <kevr> i only have about 200 trillion to work with
[22:59:20] <int0x1C8> isn't camel case acceptable in python as well?
[22:59:32] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[22:59:53] *** Quits: DuduTT (~EduardoTT@186.205.27.37) (Quit: Client closed)
[23:00:02] <kevr> int0x1C8: any style is allowed in Python. However, PEP-8 defines some style guidelines that PEP wants people to use. That doesn't mean that your project has to use it, but it will make your project cohere with others more in terms of style.
[23:00:07] *** Joins: qlixed (~qlixed@host60.181-13-74.telecom.net.ar)
[23:00:10] *** Joins: docphees (~sorrow@ip-94-114-45-57.unity-media.net)
[23:00:25] <kevr> so in general, people do migrate toward PEP-8
[23:00:29] <kevr> but not in all places.
[23:00:34] *** Quits: IHasFinger (~JJ_@2a02:c7f:fc54:ba00:84f5:ae4b:1204:83b2) (Read error: Connection reset by peer)
[23:00:37] <SnoopJ> the language doesn't really care (it follows UAX #31 for identifiers in general), the convention given by PEP 8 is that CamelCase (sic) is for classes and snake_case is for variables in general
[23:00:57] <no_gravity> int0x1C8: Not sure. I am trying to set up the codebase so that new developers find it easy to join in.
[23:01:03] * SnoopJ prefers to call this PascalCase since camelCase isn't necessarily opinionated about the leading character
[23:01:04] <int0x1C8> I've always gone by "do whatever, but at least be consistent about it"
[23:01:05] <ssbr> module names have a separate rule that sometimes discourages underscores: https://www.python.org/dev/peps/pep-0008/#package-and-module-names
[23:01:10] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Remote host closed the connection)
[23:01:16] <habnabit_> SnoopJ, UpperCamelCase lowerCamelCaes
[23:01:18] <kevr> int0x1C8: but you have to choose a concistency
[23:01:20] <ssbr> int0x1C8: consistency with the python community would be to use module_name
[23:01:24] <kevr> ^
[23:01:48] <SnoopJ> habnabit_, shrug
[23:01:58] <kevr> int0x1C8: or you can just go like some projects and just review when people submit pull requests
[23:02:00] *** Joins: magla (~gelignite@55d4986c.access.ecotel.net)
[23:02:11] <kevr> some people do this, and it works. but, it is a big waste of time most times.
[23:02:20] <kevr> if it was defined somewhere for the project, people would already know ahead of time.
[23:02:41] <kevr> CONTRIBUTING.md or whatever
[23:02:42] <int0x1C8> I haven't worked on any big projects, so haven't run into any of that yet :)
[23:02:45] <SnoopJ> a good choice of formatter/linter can make the issue fade into the background
[23:02:48] *** Parts: kr0nk (~kr0nk@user/kr0nk) ()
[23:02:56] <SnoopJ> (although then the trick becomes being consistent with *those*)
[23:03:05] <kevr> :)
[23:03:06] <deepy> or let them automatically reformat the code
[23:03:53] <int0x1C8> also when was the walrus operator added? I've never heard of it
[23:04:07] <kevr> int0x1C8: as with all software, opinions are opinions. those opinions being consistent make projects easier to work with, but it is no way an enforcement from the "Gods" or anything like that.
[23:04:20] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[23:04:25] <kevr> You should do what you feel is most appropriate for your project and the contributors to it
[23:04:38] <SnoopJ> int0x1C8, the formal name is "assignment expression," they were added in 3.8 https://docs.python.org/3/reference/expressions.html#assignment-expressions
[23:05:03] <SnoopJ> in fairly dramatic fashion heh
[23:05:19] *** Quits: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net) (Remote host closed the connection)
[23:05:19] <int0x1C8> ah, so relatively new then
[23:05:24] <SnoopJ> yes
[23:06:45] <greyltc> habnabit_: I'll try subprocess.run, thanks!
[23:06:46] *** Joins: jl- (~kl@c-98-216-12-250.hsd1.ma.comcast.net)
[23:07:06] <jl-> whats up homies
[23:07:13] <jl-> new server
[23:07:14] <kevr> what up, homie
[23:07:51] <kevr> I'm very glad they added that assignment operator. it is so very useful.
[23:08:00] <kevr> and nice looking, imo :P
[23:08:17] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[23:08:36] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[23:08:36] <int0x1C8> coincidentally it corresponds with the same behavior in mathematica
[23:08:56] <SnoopJ> isn't it deferred evaluation in WolfLang?
[23:09:23] <jl-> any recommendations for tailing a logfile in python?
[23:09:39] <jl-> tail it and do something when certain phrases or words are detected
[23:09:55] <int0x1C8> SnoopJ, yeah, you use it to define symbolic functions and such
[23:10:05] <SnoopJ> int0x1C8, there's no deferral in Python's assignment expression
[23:11:11] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[23:11:26] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[23:11:30] <int0x1C8> right, in mathematica there's no deferred assignment, just evaluation
[23:12:29] <int0x1C8> in the python use, the assignment is made, then evaulated on the RHS, so the difference is irrelevant
[23:12:46] <SnoopJ> that is exactly backwards
[23:13:39] <bjs> int0x1C8: `x := <expr>` is the same as `<expr>` with the side-effect of assigning the value to `x` once the expression is evaluated
[23:13:49] <SnoopJ> (you can't assign the result of the RHS until you've evaluated it)
[23:13:54] <bjs> basically, "the obvious semantics"
[23:14:08] <SnoopJ> yea, it really is "just" an assignment that's allowed to occur in an expr
[23:14:38] <greyltc> habnabit_: interesting that I get permissions errors unless i use shell=True --> `subprocess.run('kinit user@REALM.EDU', shell=True)`
[23:15:14] <bjs> greyltc: what command did you run without shell=True
[23:15:40] <habnabit_> greyltc, subprocess.run(['kinit', 'user@REALM.EDU'])
[23:15:40] <greyltc> bjs: `subprocess.run('kinit user@REALM.EDU')`
[23:15:52] <int0x1C8> well I'm wrong ignmore me
[23:15:53] <bjs> greyltc: you need to pass a list like ["cmd", "arg0", "arg1", ...]
[23:15:58] <bjs> without shell=True
[23:16:13] *** Joins: clf59 (~clf59@user/clf59)
[23:16:37] <greyltc> ah..
[23:16:39] *** Quits: clf59 (~clf59@user/clf59) (Client Quit)
[23:17:17] <greyltc> works now!
[23:17:26] <int0x1C8> f[x_]:=x^2 sets a symbolic expression in mathematica, so you can do f[a] and it'll display a^2, or f[3] and it'll give 9, so I guess they are different
[23:17:45] <SnoopJ> yes, very
[23:18:03] <neilthereildeil> hi all. I am trying to debug a semaphore leak issue when a part process uses multiprocessing to spawn many children. THen I kill the paretn process, i see a few child processes stuck with the following callstack. why are the processes stuck? https://paste.debian.net/1201212/
[23:18:26] *** Quits: sah (~sah@user/sah) (Read error: Connection reset by peer)
[23:18:29] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[23:18:30] <SnoopJ> sympy might have something more directly analogous
[23:19:02] <neilthereildeil> i have 184 child processes and am leaking about 10 semaphores, so im looking at any anomalous processes that dont exit when i kill the parent multiprocess.
[23:19:21] <neilthereildeil> i late attached to the process using gdb python plugin and ran py-bt
[23:19:32] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[23:21:06] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[23:21:24] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[23:21:29] *** Joins: cellofellow (~user@166.70.50.58)
[23:21:39] <neilthereildeil> hi all. I am trying to debug a semaphore leak issue when a part process uses multiprocessing to spawn many children. THen I kill the paretn process, i see a few child processes stuck with the following callstack. why are the processes stuck? https://paste.debian.net/1201212/
[23:22:06] *** Joins: kr0nk (~quassel@user/kr0nk)
[23:22:23] *** Joins: cloudeng (~cloudeng@136.56.42.219)
[23:22:53] <neilthereildeil> are processes supposed to be blocked with this call stack?
[23:28:20] *** Joins: m3th0d1c4L (~m3th0d1c4@184-14-107-44.dsl1.chtn.wv.frontiernet.net)
[23:29:39] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[23:30:14] *** Joins: dme86 (~dan@user/dan86)
[23:31:13] *** Quits: nerdraven (~nerdraven@196.45.51.47) (Quit: leaving)
[23:31:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: Lost terminal)
[23:32:31] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 272 seconds)
[23:32:35] <ali1234> hmm
[23:32:39] *** Quits: docphees (~sorrow@ip-94-114-45-57.unity-media.net) (Quit: Leaving)
[23:34:32] <ali1234> i don't think it is actually possible to solve this puzzle without using %
[23:34:47] *** Joins: nichlas (nichlas@gateway/vpn/protonvpn/nichlas)
[23:35:01] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[23:35:13] <no_gravity> Is it possible to add something to a regex submatch? Say the regex is '([0-9]+) Euro' and the result I want is '39.00' when the input is '39 Euro'. Is that possible?
[23:35:15] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[23:35:25] <habnabit_> no_gravity, no
[23:35:38] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Ping timeout: 272 seconds)
[23:36:11] <Wulf> no_gravity: m.group(1) + ".00"
[23:36:43] <ali1234> ah! i know how to do it :)
[23:36:43] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[23:36:51] <no_gravity> Wulf: I want it to be part of the regex. As the regex comes from a config file and it would be nice if the 'add .00' could be part of the config.
[23:37:34] <Wulf> no_gravity: what habnabit_ said.
[23:37:39] *** Joins: docphees (~doc_phoos@ip-94-114-45-57.unity-media.net)
[23:38:42] *** Joins: sadg (~odd@45.83.220.210)
[23:39:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:39:09] *** Quits: qlixed (~qlixed@host60.181-13-74.telecom.net.ar) (Ping timeout: 244 seconds)
[23:39:15] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[23:39:30] *** Joins: ATAD (~ATAD@c-73-227-128-98.hsd1.ma.comcast.net)
[23:39:59] <ali1234> you know actually within the terms of the puzzle you can just say (ord("c") * x for x in count(1)) - it doesn't say you have to use all the letters, it says "any" :)
[23:40:54] *** Joins: mkellis (~Calibellu@68.235.43.85)
[23:41:29] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[23:42:30] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:44:02] *** Quits: m3th0d1c4L (~m3th0d1c4@184-14-107-44.dsl1.chtn.wv.frontiernet.net) (Remote host closed the connection)
[23:44:24] *** Joins: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29)
[23:47:38] *** Quits: Lapsa (~kani@2603-6080-f201-3400-54a5-cc7d-27c2-6ff9.res6.spectrum.com) (Quit: Client closed)
[23:47:48] <Payam> Do you guys know any exercise for me to do some Trio?
[23:48:40] *** Joins: Naan (~naan@user/naan)
[23:48:47] *** Quits: goepsilongo (~goepsilon@2806:263:c404:87b3:c40e:9b90:fdf2:228c) (Quit: Textual IRC Client: www.textualapp.com)
[23:49:17] <Payam> or do you know some dummy files tha tI can download with python?
[23:49:23] <Payam> safe files
[23:50:12] *** Quits: ssbr (~ssbr@2620:15c:10f:203:ec66:dab9:e3ca:687e) (Ping timeout: 272 seconds)
[23:50:28] *** Quits: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se) (Quit: WeeChat 2.8)
[23:50:31] *** Quits: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29) (Remote host closed the connection)
[23:51:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[23:51:21] <tpr> speedtest files? wikipedia dumps? openstreetmap archives?
[23:51:56] <tpr> the latter two are not dummy tho, but maybe there is something interesting to do with that data :)
[23:51:59] <graingert> Payam: placekitten
[23:52:14] <graingert> Payam: https://placekitten.com/
[23:52:17] <tpr> archive.org and commoncrawl also host large data sets
[23:52:24] <Payam> graingert,  thanks
[23:52:42] <graingert> Payam: you might like https://gitter.im/python-trio/general
[23:53:06] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[23:53:25] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[23:54:01] <Payam> graingert, is theregod tutorials except the docs on trio?
[23:54:25] <graingert> Payam: Not really
[23:55:16] *** Quits: ali1234 (~al@user/ali1234) (Ping timeout: 272 seconds)
[23:56:39] *** Joins: ali1234 (~al@user/ali1234)
[23:56:44] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[23:57:33] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:58:06] *** Joins: noarb (~noarb@user/noarb)
[23:58:49] *** Parts: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Leaving)
