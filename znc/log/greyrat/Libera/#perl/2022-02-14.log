[00:04:51] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[00:09:36] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:09:57] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:16:23] *** Quits: magla (~gelignite@d536720f.access.ecotel.net) (Quit: Stay safe!)
[00:22:39] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:25:00] *** Joins: monkey_ (~user@190.104.116.153)
[00:26:55] *** Joins: keir (~keir@user/keir)
[00:32:08] <corwin> Are there known issues trying to upload to GNU FTP servers using Net:FTP?
[00:32:21] <corwin> I get a 550 from /d/perl/perl/bin/perl -MNet::FTP -Mstrict -Mwarnings -e'my $ftp = Net::FTP->new(q(alpha.gnu.org), Debug => 1); $ftp->login("anonymous") || print $ftp->message; print $ftp->message unless $ftp->cwd(q(/incoming/alpha))'
[00:33:08] * corwin jogs over to a GNU/Linux box to see if Windows/MingGW could be the problem.
[00:36:05] <ology> https://gist.github.com/ology/3d9550cc35aa90393f1d5092cff831a3
[00:36:05] <Paperbot> Link title(s): [ corwin - no error on my mac · GitHub ]
[00:36:15] *** Quits: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Remote host closed the connection)
[00:36:34] <ology> Whoops. I'm a dork.
[00:36:34] <corwin> huhump.  thanks for checking.  same for me from > Linux gw6 4.19.0-5-amd64 #1 SMP Debian 4.19.37-5 (2019-06-19) x86_64 GNU/Linux
[00:36:49] <ology> 550 there it is. My eyes, they fail me.
[00:37:31] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[00:37:38] <corwin> I have no troubles manually doing the cwd, e.g. with ftp(1) and various other tools.  But if I wanted to manually upload the files I wouldn't be playing with Net::FTP :P
[00:38:45] <corwin> It's good bet that we've got something wonky with these FTP servers vs anything wrong with Net::FTP.  I guess I'll wonder over to #savannah
[00:38:57] <corwin> TYVM for confirming.
[00:39:34] <LeoNerd> Is it 1995 again?
[00:43:24] *** Parts: toralf (~quassel@gentoo/developer/toralf) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:45:57] <xenu> it's been a while since the last time i used savannah, but aren't you supposed to use scp?
[00:45:58] *** Joins: Trigon (~reuben@73.127.1.41)
[00:53:49] *** Joins: Markow (~Markow@176.122.215.103)
[00:57:20] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 272 seconds)
[01:00:58] *** Joins: whynot (~whynot@37.73.154.65)
[01:01:46] *** Quits: keir (~keir@user/keir) (Quit: I've gone)
[01:03:00] <corwin> problem solved.  uploads (for either ftp or alpha) go to ftp server different sub-domain *blush*
[01:04:04] <corwin> xenu: no, afaik all GNU packages distributed via FTP are uploaded via FTP.  They are just uploaded to a different FTP server that triages them and puts them in the right place (after verifying our GPG keys, etc).
[01:04:30] <corwin> Some detail here: https://www.gnu.org/prep/maintain/html_node/Automated-FTP-Uploads.html#Automated-FTP-Uploads
[01:04:30] <Paperbot> Link title(s): [ Automated FTP Uploads (Information for Maintainers of GNU Software) ]
[01:07:17] *** Quits: KnoP (~KnoP@p4ff564d0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:16:55] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[01:17:01] * GumbyPAN CPAN Upload: Quiq-1.199 by FSEITZ https://metacpan.org/release/FSEITZ/Quiq-1.199
[01:21:04] *** Joins: keir (~keir@user/keir)
[01:22:08] *** Quits: keir (~keir@user/keir) (Remote host closed the connection)
[01:32:34] *** Joins: keir (~keir@user/keir)
[01:37:41] *** Quits: keir (~keir@user/keir) (Quit: I've gone)
[01:38:56] *** Joins: keir (~keir@user/keir)
[01:39:26] *** Quits: keir (~keir@user/keir) (Remote host closed the connection)
[01:40:18] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:45:48] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[01:45:58] *** Joins: keir (~keir@user/keir)
[01:46:27] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[01:47:12] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933)
[01:47:57] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[01:51:15] *** Quits: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com) (Read error: No route to host)
[01:53:42] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 272 seconds)
[01:57:05] * GumbyPAN CPAN Upload: Math-Sequence-DeBruijn-2022021301 by ABIGAIL https://metacpan.org/release/ABIGAIL/Math-Sequence-DeBruijn-2022021301
[01:59:31] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[02:01:07] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[02:01:28] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[02:01:28] *** ChanServ sets mode: +v perlbot
[02:01:59] *** Joins: perldoc (~perldoc@24.88.46.213)
[02:03:01] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[02:07:01] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[02:07:38] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 272 seconds)
[02:08:31] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[02:22:11] <simcop2387> perlbot: hi
[02:22:18] <perlbot> simcop2387: END OF LINE
[02:27:09] * GumbyPAN CPAN Upload: name-v0.0.1 by GRAF https://metacpan.org/release/GRAF/name-v0.0.1
[02:33:22] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[02:33:34] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:33:42] *** Joins: pizdets (~pizdets@183.182.111.175)
[02:34:14] *** Quits: pizdets_ (~pizdets@183.182.115.101) (Ping timeout: 272 seconds)
[02:36:10] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:52:07] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[02:53:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[02:57:01] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[02:57:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:57:25] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:58:08] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[03:00:25] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933)
[03:07:32] *** Quits: samcv (~samcv@194.233.102.77) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:08:00] *** Quits: p71 (~p71@096-042-034-230.res.spectrum.com) (Quit: ZNC 1.7.5 - https://znc.in)
[03:08:05] *** Joins: samcv (~samcv@194.233.102.77)
[03:08:48] *** Joins: p71 (~p71@096-042-034-230.res.spectrum.com)
[03:09:13] <simcop2387> perlbot: hi
[03:09:15] <perlbot> simcop2387: hi
[03:10:01] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (Ping timeout: 250 seconds)
[03:26:50] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[03:26:58] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[03:28:34] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[03:29:01] *** Quits: samcv (~samcv@194.233.102.77) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:31:26] *** Joins: samcv (~samcv@194.233.102.77)
[03:33:46] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 272 seconds)
[03:40:56] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[03:51:18] * GumbyPAN CPAN Upload: YAOO-0.04 by LNATION https://metacpan.org/release/LNATION/YAOO-0.04
[03:51:31] *** Joins: Adura (~Adura@user/adura)
[03:52:04] <dg_dg> LeoNerd, do you mean the logs at install time of Tickit ?
[04:01:21] *** Joins: monkey_ (~user@190.104.116.153)
[04:03:38] *** Joins: Trigon (~reuben@73.127.1.41)
[04:07:25] *** Quits: whynot (~whynot@37.73.154.65) (Quit: leaving)
[04:08:07] *** Quits: Adura (~Adura@user/adura) (Quit: Quit)
[04:16:44] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:23:14] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[04:25:15] <ology> "Collect up *all* the logs of everything" is not clear?
[04:27:36] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 272 seconds)
[04:28:48] *** Joins: Trigon (~reuben@73.127.1.41)
[04:30:25] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 256 seconds)
[04:31:32] *** Quits: perldoc (~perldoc@24.88.46.213) (Ping timeout: 256 seconds)
[04:31:51] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 256 seconds)
[04:31:51] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 256 seconds)
[04:31:51] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Ping timeout: 256 seconds)
[04:32:07] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 256 seconds)
[04:36:22] * GumbyPAN CPAN Upload: PDL-Graphics-Gnuplot-2.020 by ETJ https://metacpan.org/release/ETJ/PDL-Graphics-Gnuplot-2.020
[04:36:28] *** Joins: anthk_ (~anthk_@92.176.105.30)
[04:36:49] *** Quits: bmeneg_ (~bmeneg@2001:1284:f01c:5bfa:2ce1:3e04:3c68:a3c4) (Quit: Leaving)
[04:36:56] <dg_dg> ology, if it was for me, why should i ask ? So what is your answer ?
[04:38:37] <dg_dg> ology, please, if your idea is not to help but to be ironic, just not answer is far better.
[04:39:57] <dg_dg> My question is very clear: Do you want the log of installation of Tickit or some other things logs more ?
[04:43:26] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[04:43:28] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[04:43:28] *** ChanServ sets mode: +v perlbot
[04:44:04] *** Quits: Pali (~pali@user/pali) (Ping timeout: 272 seconds)
[04:44:13] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[04:46:00] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[04:46:30] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[04:47:02] <ology> dg_dg: Settle down.
[04:47:27] <dg_dg> ??? thank you for your help...
[04:50:32] *** Joins: perldoc (~perldoc@24.88.46.213)
[04:51:15] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[04:51:32] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[04:54:12] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[04:54:27] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:55:30] <dg_dg> ok, I'm tired with the haughty and ironic behavior of some who undoubtedly show how superior they think (or are on some aspects) and allow themselves to be de facto: overwhelming (which is not appreciated). It would be enough to help and stop imagining negative stuff. However, I am not a psychologist and do not intend to redo your education you allow yourself (some) freely, a deliberately aggressive and superior behavior. Too bad... you live 
[04:55:30] <dg_dg> with it on a daily basis, but I don't intend to experience this kind of socially deviant behavior. Sincere greetings.
[04:55:34] *** Parts: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Leaving)
[04:55:46] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc3-git-f4bc5bb-Pogorze-Karpackie-CUSTOM-KERNEL)
[04:57:53] *** Joins: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com)
[05:03:56] *** Quits: subie (~subie@2601:4c0:4080:bc0:f537:c15e:d47f:4c5b) (Remote host closed the connection)
[05:05:10] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[05:05:28] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[05:11:46] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 256 seconds)
[05:23:32] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[05:27:04] *** Quits: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com) (Ping timeout: 256 seconds)
[05:27:57] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[05:30:47] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[05:33:19] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[05:39:00] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-c0be-54b3-db2c-85e9.res6.spectrum.com) (Remote host closed the connection)
[05:41:06] *** Joins: Adura (~Adura@user/adura)
[05:48:49] *** Quits: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (Ping timeout: 250 seconds)
[05:50:13] *** Joins: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[05:56:51] *** Quits: Su-Shee (~Susanne@p4ff49ce4.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:58:18] *** Joins: Su-Shee (~Susanne@p50894207.dip0.t-ipconnect.de)
[06:10:27] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[06:13:34] *** Joins: txtsd (~txtsd@user/txtsd)
[06:15:25] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:20:16] <rindolf> dg_dg shud read http://shlomifishswiki.branchable.com/Encourage_criticism_and_try_to_get_offended/
[06:20:17] <Paperbot> Link title(s): [ Encourage criticism and try to get offended ]
[06:21:04] * rindolf has become immune to most criticism
[06:27:19] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-5c4e-92cc-80de-49d9.res6.spectrum.com)
[06:33:37] *** Joins: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[06:36:47] *** Joins: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com)
[06:40:51] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-5c4e-92cc-80de-49d9.res6.spectrum.com) (Remote host closed the connection)
[06:42:24] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[06:44:26] *** Joins: frost (~frost@user/frost)
[06:45:32] *** dansan_ is now known as dansan
[06:56:10] *** Quits: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw) (Read error: Connection reset by peer)
[06:59:28] *** Joins: henry40408 (~henry4040@175.182.178.138)
[07:04:28] *** Quits: XV9 (~XV8@2601:5cb:c001:50:e0f2:76b6:d7e0:55b) (Quit: Textual IRC Client: www.textualapp.com)
[07:06:46] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:06:46] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:06:46] *** finn_elija is now known as FinnElija
[07:09:45] *** Quits: henry40408 (~henry4040@175.182.178.138) (Read error: Connection reset by peer)
[07:11:34] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:14:59] <dansan> Hello!  When mixing perl's sysread and reading lines via perl's file buffer, how can I flush that buffer?
[07:16:49] <dansan> So for example, I do my $data = <MYFILE>; but then I want throw out anything left in that buffer before I start using sysread
[07:18:22] <leont> That's not how IO works in general
[07:18:23] <dansan> Well, I'm actually going to do a tcflush, but I need to flush perl's buffer too.
[07:18:38] <dansan> IO or perl IO?
[07:18:43] <leont> Yes
[07:19:02] <leont> Or better said, it's not how reading works, this would have worked fine with writing
[07:19:05] <dansan> LOL
[07:19:16] <leont> Once data is read, you can't really unread it
[07:19:37] <dansan> OK, so I understand how system IO works I understand how buffered IO works, I'm new to perl's buffering, that's all
[07:19:50] <leont> It would be the same with C's stdio, really
[07:19:53] <dansan> Actually you can in some cases!
[07:20:28] <dansan> https://pubs.opengroup.org/onlinepubs/9699919799/functions/ungetc.html
[07:20:28] <Paperbot> Link title(s): [ ungetc ]
[07:20:29] <leont> You can seek back when reading from a filehandle. Won't work on streams (like pipes and sockets)
[07:20:43] <leont> Yes, ungetc is buffered IO
[07:20:51] <dansan> Yes, I know.
[07:21:04] <leont> Buffered IO can do this easily. PerlIO can even unread arbitrary amounts
[07:21:09] <leont> But system IO can't
[07:21:16] <dansan> while(<MYFILE>) is also buffered IO, is it not?
[07:21:20] <leont> Yes
[07:21:37] <dansan> sweet, we're talking sane then!  Thanks! :)
[07:22:10] <dansan> So is there a way I can ask perl to flush it's input buffer for a file (?) or stream (?)  I'm not sure what the proper name for this mechanism is
[07:23:13] <leont> If it's a file, you can seek sysseek to the buffered location
[07:23:18] <leont> That should work
[07:23:25] <leont> On a stream you're out of luck
[07:23:37] <dansan> Also, I guess I'm presuming that once I start using <MYFILE> I don't end up with some background thread reading from the file when I'm not looking like *some* other languages might do (I'm thinking of Go)
[07:23:52] <dansan> hrmmm
[07:23:56] <leont> I'm rather wondering why you need this anyway. Usually you really only want one of the two kinds of IO
[07:24:06] <dansan> I know :(
[07:24:46] <dansan> Well, it's kind-of a mess.  I inherited some code and to fix one problem I used sysreads/syswrites with select, but another part of the code is doing this buffered reading.
[07:25:27] <leont> That experience sounds very familiar actually. Lots of pain.
[07:25:41] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[07:25:45] <dansan> I'm wondering if I should just implement my own "read a line and keep the extra characters in this array" function and eliminate the mixed usage.
[07:25:52] <dansan> LOL!! Yes!! SO much pain!
[07:26:01] <dansan> But on the bright side, I've learned a LOT of perl!
[07:26:36] <dansan> Trying to not re-invent any wheels, while still making sure the program behaves.
[07:28:16] <leont> Making a synchronous application asynchronous is always painful. See also the last 2 years at my previous job -_-
[07:28:44] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:28:50] <dansan> Actually, there would be an up-side to that.  I would love to optimize the function that uses the buffered reading because it's doing a non-blocking read, and then if we don't have what we want, sleeping for 25ms and then trying again.  It would be better to select on the file.
[07:29:05] <dansan> leont: :(
[07:29:39] <dansan> It's an "expect" type of thing for interacting with a modem.
[07:30:06] <dansan> I never learned expect scripts, but the original author apparently implemented their own expect-like mechanism.
[07:30:19] *** Joins: henry40408 (~henry4040@175.181.177.116)
[07:33:10] *** Joins: txtsd (~txtsd@user/txtsd)
[07:34:54] * ology is tired of dg_dg 's stupid attitude.
[07:35:18] <ology> it left anyway
[07:35:48] <rindolf> dansan: hi, sup?
[07:39:14] <dansan> rindolf: hello
[07:39:51] <dansan> Trying to figure out if there's a way to clear/flush the line buffer when reading a file via <MYFILE>
[07:40:26] <dansan> Not finding much on the topic, starting to think I just need to implement my own line buffering if I'm going to mix buffered reads with sysread
[07:40:44] <dansan> I guess it can't be that bad.
[07:42:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[07:42:38] <rindolf> perlbot: async
[07:42:39] <perlbot> rindolf: Asynchronous event-driven IO is awesome in Perl with POE, IO::Async, IO::Lambda, Mojo::IOLoop, Reflex among others; made nicer using Future, Mojo::Promise, or Promises
[07:43:00] <rindolf> dansan: ^^^
[07:45:00] <dansan> Interesting.  I don't really need async IO though, just need to be able to clean up if modem goes bonkers and such.
[07:45:12] <rindolf> https://www.youtube.com/watch?v=tG-wl2qqD7Y
[07:45:12] <Paperbot> YouTube video linked by rindolf: I Sing The Body Electric- Fame - published by yaddayaddayoooou
[07:46:19] *** Joins: Martchus_ (~martchus@dynamic-077-002-086-122.77.2.pool.telefonica.de)
[07:47:00] <dansan> Hey, I have to work!  Stop sending me cool poetry :)
[07:47:06] *** Quits: Martchus (~martchus@dynamic-077-009-120-110.77.9.pool.telefonica.de) (Ping timeout: 272 seconds)
[07:47:07] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[07:47:20] <ology> https://gist.github.com/ology/732e87d435e4d84214552ac60483ddf6
[07:47:21] <Paperbot> Link title(s): [ dg_dg · GitHub ]
[07:58:51] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:02:15] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-d449-2685-1032-d72e.res6.spectrum.com)
[08:06:45] * GumbyPAN CPAN Upload: PDL-Drawing-Prima-0.14 by DCMERTENS https://metacpan.org/release/DCMERTENS/PDL-Drawing-Prima-0.14
[08:09:42] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[08:12:15] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[08:15:05] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[08:26:00] *** Quits: randir (~randir@2.92.196.208) (Remote host closed the connection)
[08:26:33] *** Joins: randir (~randir@2.92.196.208)
[08:30:41] *** Quits: randir (~randir@2.92.196.208) (Ping timeout: 250 seconds)
[08:30:56] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[08:39:02] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[08:39:51] *** Joins: randir (~randir@93.159.239.42)
[08:56:23] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:57:07] *** Joins: Core9332 (~bscan@2600:380:5869:966b:1d8b:91e7:c6b0:20ad)
[08:57:34] *** Quits: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[08:58:24] *** Joins: ekathva (~ekathva@n3k05e951yzy0eo5x-1.v6.elisa-mobile.fi)
[09:01:27] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[09:01:51] * GumbyPAN CPAN Upload: PINE64-PCF8574-0.1 by CREDO https://metacpan.org/release/CREDO/PINE64-PCF8574-0.1
[09:03:51] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[09:07:57] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[09:09:23] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Quit: leaving)
[09:11:03] *** Joins: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[09:12:57] *** Quits: Core9332 (~bscan@2600:380:5869:966b:1d8b:91e7:c6b0:20ad) (Ping timeout: 240 seconds)
[09:14:23] *** Quits: Michelle (~michelle@203.206.128.220) (Quit: Leaving)
[09:15:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[09:21:46] *** Quits: neilb___ (sid492745@id-492745.ilkley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: ranguard (sid496095@id-496095.lymington.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: TitanOfOld (titan@gentoo/developer/TitanOfOld) (*.net *.split)
[09:21:46] *** Quits: Affliction (affliction@idlerpg/player/affliction) (*.net *.split)
[09:21:46] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (*.net *.split)
[09:21:46] *** Quits: henry40408 (~henry4040@175.181.177.116) (*.net *.split)
[09:21:46] *** Quits: Su-Shee (~Susanne@p50894207.dip0.t-ipconnect.de) (*.net *.split)
[09:21:46] *** Quits: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[09:21:46] *** Quits: perldoc (~perldoc@24.88.46.213) (*.net *.split)
[09:21:46] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (*.net *.split)
[09:21:46] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (*.net *.split)
[09:21:46] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (*.net *.split)
[09:21:46] *** Quits: p71 (~p71@096-042-034-230.res.spectrum.com) (*.net *.split)
[09:21:46] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (*.net *.split)
[09:21:46] *** Quits: csrf (~csrf@user/csrf) (*.net *.split)
[09:21:46] *** Quits: CycoCid (Kulrak@n122-109-114-101.rdl1.qld.optusnet.com.au) (*.net *.split)
[09:21:46] *** Quits: veesh (~veesh@5.28.147.93) (*.net *.split)
[09:21:46] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (*.net *.split)
[09:21:46] *** Quits: zakame (~zakame@user/zakame) (*.net *.split)
[09:21:46] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (*.net *.split)
[09:21:46] *** Quits: eseyman (~manu@lfbn-idf1-1-393-122.w86-242.abo.wanadoo.fr) (*.net *.split)
[09:21:46] *** Quits: zamanf (~dev@user/zamanf) (*.net *.split)
[09:21:46] *** Quits: laidback_01 (~jax@98.97.66.6) (*.net *.split)
[09:21:46] *** Quits: victori (~victori@cpe-76-89-139-69.socal.res.rr.com) (*.net *.split)
[09:21:46] *** Quits: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (*.net *.split)
[09:21:46] *** Quits: speskk (~speskk@user/speskk) (*.net *.split)
[09:21:46] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[09:21:46] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[09:21:46] *** Quits: Zubin (~rubin@ender.afternet.org) (*.net *.split)
[09:21:46] *** Quits: GumbyPAN (~cpanbot@jingo.bingosnet.co.uk) (*.net *.split)
[09:21:46] *** Quits: nshp (~hi@45.79.184.145) (*.net *.split)
[09:21:46] *** Quits: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523) (*.net *.split)
[09:21:46] *** Quits: sysdef (~sysdef@user/sysdef) (*.net *.split)
[09:21:46] *** Quits: maettu (~mbloch@guardian.werft22.net) (*.net *.split)
[09:21:46] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[09:21:46] *** Quits: Richlv (~rich@nakts.net) (*.net *.split)
[09:21:46] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[09:21:46] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: mason (~mason@redhat/mason) (*.net *.split)
[09:21:46] *** Quits: perlmaros (~perlmaros@master.k-1.com) (*.net *.split)
[09:21:46] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[09:21:46] *** Quits: shaldannon (william@208.79.82.66) (*.net *.split)
[09:21:46] *** Quits: skyl4rk (~tlvb@user/tlvb) (*.net *.split)
[09:21:46] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[09:21:46] *** Quits: DrHyde (~david@bytemark.barnyard.co.uk) (*.net *.split)
[09:21:46] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (*.net *.split)
[09:22:06] *** Joins: TitanOfOld (titan@gentoo/developer/TitanOfOld)
[09:22:24] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[09:22:24] *** Joins: henry40408 (~henry4040@175.181.177.116)
[09:22:24] *** Joins: Su-Shee (~Susanne@p50894207.dip0.t-ipconnect.de)
[09:22:24] *** Joins: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[09:22:24] *** Joins: perldoc (~perldoc@24.88.46.213)
[09:22:24] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[09:22:24] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[09:22:24] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[09:22:24] *** Joins: p71 (~p71@096-042-034-230.res.spectrum.com)
[09:22:24] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:22:24] *** Joins: csrf (~csrf@user/csrf)
[09:22:24] *** Joins: CycoCid (Kulrak@n122-109-114-101.rdl1.qld.optusnet.com.au)
[09:22:24] *** Joins: veesh (~veesh@5.28.147.93)
[09:22:24] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[09:22:24] *** Joins: zakame (~zakame@user/zakame)
[09:22:24] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[09:22:24] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[09:22:24] *** Joins: eseyman (~manu@lfbn-idf1-1-393-122.w86-242.abo.wanadoo.fr)
[09:22:24] *** Joins: zamanf (~dev@user/zamanf)
[09:22:24] *** Joins: laidback_01 (~jax@98.97.66.6)
[09:22:24] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[09:22:24] *** Joins: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[09:22:24] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[09:22:24] *** Joins: DrHyde (~david@bytemark.barnyard.co.uk)
[09:22:24] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:22:24] *** Joins: skyl4rk (~tlvb@user/tlvb)
[09:22:24] *** Joins: shaldannon (william@208.79.82.66)
[09:22:24] *** Joins: kolcon (~kolcon@v.kolouch.org)
[09:22:24] *** Joins: perlmaros (~perlmaros@master.k-1.com)
[09:22:24] *** Joins: mason (~mason@redhat/mason)
[09:22:24] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[09:22:24] *** Joins: blinky42 (~quassel@user/blinky42)
[09:22:24] *** Joins: Richlv (~rich@nakts.net)
[09:22:24] *** Joins: webstran- (~webstrand@user/webstrand)
[09:22:24] *** Joins: maettu (~mbloch@guardian.werft22.net)
[09:22:24] *** Joins: sysdef (~sysdef@user/sysdef)
[09:22:24] *** Joins: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523)
[09:22:24] *** Joins: nshp (~hi@45.79.184.145)
[09:22:24] *** Joins: GumbyPAN (~cpanbot@jingo.bingosnet.co.uk)
[09:22:24] *** Joins: Zubin (~rubin@ender.afternet.org)
[09:22:24] *** Joins: overrider (~overrider@user/overrider)
[09:22:24] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[09:22:24] *** Joins: speskk (~speskk@user/speskk)
[09:22:24] *** erbium.libera.chat sets mode: +v perlbot
[09:22:25] *** Quits: Repaster_ (~Repaster@perlbot/bot/grinnz/repaster) (Excess Flood)
[09:22:28] *** Quits: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot) (Excess Flood)
[09:22:32] *** Joins: ranguard (sid496095@2a03:5180:f:2::7:91df)
[09:22:33] *** Joins: Repaster_ (~Repaster@dsl-50-5-168-166.fuse.net)
[09:22:36] *** Joins: Paperbot (~Paperbot@dsl-50-5-168-166.fuse.net)
[09:22:36] *** Quits: Paperbot (~Paperbot@dsl-50-5-168-166.fuse.net) (Changing host)
[09:22:36] *** Joins: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot)
[09:22:37] *** Joins: neilb___ (sid492745@2a03:5180:f:3::7:84c9)
[09:22:57] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[09:23:14] *** Repaster_ is now known as 038AA96K4
[09:23:25] *** 038AA96K4 is now known as Repaster
[09:23:26] *** Quits: Repaster (~Repaster@dsl-50-5-168-166.fuse.net) (Changing host)
[09:23:26] *** Joins: Repaster (~Repaster@perlbot/bot/grinnz/repaster)
[09:23:51] *** Quits: Repaster (~Repaster@perlbot/bot/grinnz/repaster) (Excess Flood)
[09:24:03] *** Joins: Repaster (~Repaster@dsl-50-5-168-166.fuse.net)
[09:24:03] *** Quits: Repaster (~Repaster@dsl-50-5-168-166.fuse.net) (Changing host)
[09:24:03] *** Joins: Repaster (~Repaster@perlbot/bot/grinnz/repaster)
[09:24:28] *** Joins: Michelle (~michelle@203.206.128.220)
[09:24:38] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:25:03] *** Quits: shadowpaste (~shadowpas@kitty.scsys.co.uk) (*.net *.split)
[09:25:03] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[09:25:03] *** Quits: jjatria (~jjatria@68.183.32.235) (*.net *.split)
[09:25:03] *** Quits: ether (~ether@perl/cpan-druid/ether) (*.net *.split)
[09:25:10] *** Joins: ether (~ether@vps-6c71e929.vps.ovh.net)
[09:25:10] *** Quits: ether (~ether@vps-6c71e929.vps.ovh.net) (Changing host)
[09:25:10] *** Joins: ether (~ether@perl/cpan-druid/ether)
[09:25:15] *** Joins: jjatria (~jjatria@68.183.32.235)
[09:25:24] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[09:26:09] *** Joins: shadowpaste (~shadowpas@kitty.scsys.co.uk)
[09:28:58] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (*.net *.split)
[09:28:58] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[09:28:58] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (*.net *.split)
[09:30:25] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:33:57] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 250 seconds)
[09:34:12] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:34:19] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[09:51:56] * GumbyPAN CPAN Upload: PDL-Graphics-ColorSpace-0.200 by ETJ https://metacpan.org/release/ETJ/PDL-Graphics-ColorSpace-0.200
[09:51:56] * GumbyPAN CPAN Upload: Finance-AMEX-Transaction-0.005 by THINC https://metacpan.org/release/THINC/Finance-AMEX-Transaction-0.005
[10:00:08] *** Joins: k8yun (~k8yun@user/k8yun)
[10:10:52] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:12:19] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[10:15:42] *** Joins: Trigon (~reuben@144.39.114.115)
[10:21:59] * GumbyPAN CPAN Upload: PDL-Graphics-ColorSpace-0.201 by ETJ https://metacpan.org/release/ETJ/PDL-Graphics-ColorSpace-0.201
[10:23:32] *** Quits: diskin (~diskin@87.117.50.106) (Ping timeout: 272 seconds)
[10:45:30] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[10:47:01] * GumbyPAN CPAN Upload: Lang-HL-5.009 by RAJ https://metacpan.org/release/RAJ/Lang-HL-5.009
[10:51:22] *** Quits: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Remote host closed the connection)
[10:53:13] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:55:31] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:57:00] *** Joins: mexen (uid495612@user/mexen)
[10:57:51] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[10:58:50] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[11:02:32] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[11:07:45] *** Joins: diskin (~diskin@185.3.32.18)
[11:08:25] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[11:08:34] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[11:09:30] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[11:10:30] *** Joins: txtsd (~txtsd@user/txtsd)
[11:13:15] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[11:15:23] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[11:19:16] *** diskin is now known as Guest2239
[11:19:16] *** Quits: Guest2239 (~diskin@185.3.32.18) (Killed (lead.libera.chat (Nickname regained by services)))
[11:19:16] *** Joins: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[11:25:57] *** Quits: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru) (Ping timeout: 250 seconds)
[11:26:36] *** Joins: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru)
[11:32:12] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 240 seconds)
[11:34:13] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[11:38:24] *** Joins: art1 (~romeyke@p200300ccdf0aef009fc07f072fc62ba2.dip0.t-ipconnect.de)
[11:40:12] *** Joins: frost (~frost@user/frost)
[11:43:34] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:47:51] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[11:49:22] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[11:53:39] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[12:03:14] *** Joins: Pali (~pali@user/pali)
[12:14:18] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[12:31:25] *** Joins: Manderson_ (~manderson@45.40.81.122)
[12:32:54] *** Joins: Manderson__ (manderson@gateway/vpn/protonvpn/manderson)
[12:34:20] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 256 seconds)
[12:36:13] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[12:36:32] *** Quits: Manderson_ (~manderson@45.40.81.122) (Ping timeout: 272 seconds)
[12:39:46] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:40:03] *** Joins: frost (~frost@user/frost)
[12:42:14] * GumbyPAN CPAN Upload: Getopt-EX-debug-1.01 by UTASHIRO https://metacpan.org/release/UTASHIRO/Getopt-EX-debug-1.01
[12:48:58] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[12:50:03] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[12:52:44] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:54:27] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 252 seconds)
[12:59:29] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[13:06:18] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[13:10:36] *** Quits: laidback_01 (~jax@98.97.66.6) (Ping timeout: 256 seconds)
[13:11:43] *** Joins: laidback_01 (~jax@98.97.66.6)
[13:16:17] * GumbyPAN CPAN Upload: Groonga-HTTP-0.07 by HORIMOTO https://metacpan.org/release/HORIMOTO/Groonga-HTTP-0.07
[13:20:33] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[13:25:57] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[13:26:18] * GumbyPAN CPAN Upload: Text-Minify-XS-v0.5.6-TRIAL by RRWO https://metacpan.org/release/RRWO/Text-Minify-XS-v0.5.6-TRIAL
[13:44:08] *** Quits: jink (mrjink@chat.jink.net) (Quit: brb)
[13:45:47] *** Joins: jink (mrjink@chat.jink.net)
[13:51:28] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[14:02:21] <Altreus> morning
[14:02:28] <Botje> hi
[14:02:37] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:02:55] <Botje> I spent an hour this morning convincing an applicatin team to add an index to their Db
[14:03:15] <Botje> I still don't think they understand what an index is or does.
[14:03:34] <lopid> maybe they considered write performance
[14:04:05] <El_Che> in Sovjet Russia all columns are indexed
[14:04:05] <Botje> I wish they got that far
[14:04:08] <El_Che> :)
[14:04:18] <Botje> (also no, it's a 100+:1 read/write ratio)
[14:04:41] <El_Che> if you want DBs to add indexes send them a few million unindexed queries their way
[14:04:52] <lopid> i had the opposite problem: notifying a team that they had three of the same index, just named differently
[14:05:05] <Botje> El_Che: that's what that team did, and we're eating the cost in cosmosdb charges
[14:05:18] <Botje> lopid: this team actively thinks indexes "slow everything down"
[14:05:25] <El_Che> Botje: it sounds like real life IT allright
[14:05:46] <lopid> your request slows them down :)
[14:06:31] <El_Che> simcop2387: you as the HW guy, do you have strong opinions about wall vs ceiling mounted Access Points (thinking unifi AUP-AC-Pro, what I already have)?
[14:06:31] <Botje> lopid: .. except they've been trying to "fix" the issue for months now
[14:06:38] <Botje> moving work back to the app server isntead of the db
[14:06:40] <Altreus> When I started in this field, there were people employed specifically to understand databases
[14:06:51] <Altreus> They would command us to do things properly
[14:06:57] <lopid> yeah
[14:06:59] <huf> they were a myth even then
[14:07:04] <Altreus> No, I was working with one!
[14:07:08] <huf> lárifári
[14:07:09] <Botje> and nobody stopped to think "this server is doing 27 requests per second, why is it costing EUR5000/month")
[14:07:13] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[14:07:16] <Altreus> At the same time David Cross came in as a contractor to teach us DBIC
[14:07:29] <Botje> until I came in and said "excuse me wtfrudoin"
[14:07:43] <Botje> (that is not a typo btw. 27 requests per second. all full table scans)
[14:12:59] <El_Che> Botje: just wow
[14:13:00] <Altreus> nice
[14:13:10] <El_Che> that must be frustating as hell
[14:13:21] <Altreus> Then again, we need a bit of redistribution of wealth ... although, I'm not sure that's the right direction
[14:19:49] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 256 seconds)
[14:23:24] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[14:33:01] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[14:33:16] <El_Che> :)
[14:33:38] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[14:34:12] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[14:34:20] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 272 seconds)
[14:37:48] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[14:39:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[14:42:21] <ilmari> Botje: the only good thing about that kind of situation is being able improve performance by orders of magnitude with a simple `create index` or two
[14:42:29] <ilmari> which is very satisfying
[14:48:44] *** Joins: txtsd (~txtsd@user/txtsd)
[14:55:00] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:55:05] <tm604> if those requests are hitting the same table, presumably they're all just joining the existing full-table scan?
[14:55:15] <tm604> ... in which case you could claim that it's a scalable system that doesn't really need fixing, save the index for an emergency performance boost in future \o/
[14:55:31] <Altreus> mercenary
[14:57:26] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:03:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:05:24] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:06:18] <ilmari> tm604: if you're lucky enough to run a db with synchronised table scans
[15:12:59] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Read error: Connection reset by peer)
[15:18:40] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 272 seconds)
[15:20:49] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:27:27] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:53] <Botje> ilmari: also a 100x cost reduction (see remark about €5000/month above)
[15:31:02] *** Joins: csrf (~csrf@user/csrf)
[15:31:15] <ilmari> yeah
[15:32:19] *** Joins: bmeneg (~bmeneg@2001:1284:f01c:5bfa:e1d7:4e15:9c92:8462)
[15:42:06] *** Joins: anylogin (~Thomas@lmontsouris-659-1-70-103.w80-11.abo.wanadoo.fr)
[15:43:00] <anylogin> Hello. I want to set an array’s value to (1..5,2) but '1..5,2' should be stored in a scalar variable. How to achieve that?
[15:43:56] <SpiceMan> sweval: my @ar = eval '1..5,2'; \@ar
[15:44:05] <perlbot> SpiceMan: [1,2,3,4,5,2]
[15:46:33] <rindolf> perlbot: parser
[15:46:35] <perlbot> rindolf: for complex grammars, use a parser generator such as Parser::MGC, Marpa::R2, Regexp::Grammars, Pegex or one of these: http://www.nntp.perl.org/group/perl.module-authors/2009/09/msg7844.html ; or a specialized parser such as an HTML, XML, JSON or CSV parser ; also see http://perl-begin.org/uses/text-parsing/
[15:48:20] <anylogin> SpiceMan: `perl -mData::Dumper -e 'use Data::Dumper; my $str='1..5,4'; my @int=eval "$str"; print Dumper(@int);'` doesn’t make it. Do I have a typo?
[15:49:14] <SpiceMan> define "doesn't make it"
[15:49:38] <SpiceMan> eval $str is fine, no need to quote it
[15:49:40] <anylogin> there is no output to that code.
[15:50:48] <anylogin> `perl -e 'use Data::Dumper; my $str="1..5,4"; my @int=eval $str; print Dumper(@int);'` is good
[15:50:59] <SpiceMan> you need to escape the 's in the shell
[15:51:02] <anylogin> Thank you very much. I am rewriting `cut` in Perl
[15:52:35] <choroba> https://metacpan.org/pod/PerlPowerTools#cut-select-portions-of-each-line-of-a-file
[15:52:35] <Paperbot> Link title(s): [ PerlPowerTools - BSD utilities written in pure Perl - metacpan.org ]
[15:55:03] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[15:55:24] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[15:56:44] <anylogin> This is cool! Thanks
[16:01:01] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[16:10:51] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[16:11:35] * GumbyPAN CPAN Upload: Lang-HL-5.010 by RAJ https://metacpan.org/release/RAJ/Lang-HL-5.010
[16:11:53] *** Joins: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com)
[16:13:44] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[16:17:40] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:17:44] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[16:22:38] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[16:25:48] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[16:34:21] *** Quits: Woodzy (~quassel@198.204.246.228) (Ping timeout: 256 seconds)
[16:34:56] *** Joins: Woodzy (~quassel@198.204.246.228)
[16:38:04] *** Joins: jplesnik_ (jplesnik@nat-pool-brq-t.redhat.com)
[16:40:12] *** Quits: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com) (Ping timeout: 240 seconds)
[16:43:50] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[16:51:46] *** Quits: anylogin (~Thomas@lmontsouris-659-1-70-103.w80-11.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[17:09:58] <Botje> slow day today; people recovery from a heavy weekend?
[17:12:16] <lopid> innodb recovery
[17:16:45] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:20:41] *** Joins: kjetilho (~kjetilho@irssi/user/kjetilho)
[17:21:46] <kjetilho> hi!  I'm trying to use WWW::Mechanize to log into a very simple old-skool site.  just a form and cookie - I think!  but it's not working for some reason.  is there a way to increase debugging, e.g., to see what it posts?
[17:22:10] <kjetilho> or would you recommend a different module?
[17:24:21] <Botje> https://metacpan.org/pod/LWP::ConsoleLogger seems to be the modern way of inspecting LWP requests/responses
[17:24:23] <Paperbot> Link title(s): [ LWP::ConsoleLogger - LWP tracing and debugging - metacpan.org ]
[17:25:08] <kjetilho> interesting!
[17:26:45] <Botje> alternatively route everything through a simple logging HTTP proxy
[17:26:52] <simcop2387> Paperbot: https://perl.bot/
[17:26:53] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[17:26:59] <simcop2387> ok good i didn't screw that up last night
[17:27:39] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:34:55] *** Joins: diskin (~diskin@87.117.50.106)
[17:35:46] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:44:25] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[17:44:25] *** Quits: diskin (~diskin@87.117.50.106) (Killed (lead.libera.chat (Nickname regained by services)))
[17:44:25] *** diskin_ is now known as diskin
[17:46:42] *** Joins: monkey_ (~user@190.104.116.153)
[17:48:42] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[17:49:24] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[17:49:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:51:47] * GumbyPAN CPAN Upload: Lang-HL-5.011 by RAJ https://metacpan.org/release/RAJ/Lang-HL-5.011
[17:52:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[17:53:18] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:55:03] <aquanight> sweval: sub foo { }; foo 1 .. 5; ofo 1 .. 5;
[17:55:06] <perlbot> aquanight: Number found where operator expected at (IRC) line 1, near "ofo 1" 	(Do you need to predeclare ofo?) ERROR: syntax error at (IRC) line 1, near "ofo 1" 
[17:55:17] <aquanight> sweval: sub foo { }; foo(1 .. 5); ofo(1 .. 5);
[17:55:20] <perlbot> aquanight: ERROR: Undefined subroutine &main::ofo called at (IRC) line 1. 
[17:55:28] <aquanight> why are these two different errors
[17:55:49] <LeoNerd> NAME(...)  is clearly unambiguously a function call, so it can be compiled as such and wait until runtime to see if a &NAME exists
[17:56:14] <LeoNerd> Without the parens the compiler isn't sure;  NAME EXPR  needs to consult the symbol table to see what named functions exist
[17:58:13] <aquanight> so basically if I want compile time spellchecking of subs I should never use ()
[17:58:26] <LeoNerd> Mmmm
[17:58:31] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[17:58:31] <aquanight> so damn annoying
[17:58:38] <LeoNerd> Yeah it's annoying that strict 'subs' doesn't actually do this
[17:58:40] <LeoNerd> We need stricter subs
[17:58:56] <LeoNerd> It's related to AUTOLOAD
[17:59:04] *** Joins: randir (~randir@93.159.239.42)
[17:59:10] <aquanight> it should require & for this crap
[17:59:17] <LeoNerd> The idea that maybe functions will be created at runtime, so before it complains there's no function it first checks to see if AUTOLOAD exists
[17:59:53] <aquanight> that's fine for Package->name which has to be runtime searched because @ISA
[18:00:07] <aquanight> even if I'm of the opinion that even Package->name could be compile-time checked if we wanted
[18:00:26] <LeoNerd> AUTOLOAD definitely works for regular subs
[18:00:31] <aquanight> yes
[18:00:35] <LeoNerd> Several constant-ish modules make use of it. Annoyingly so
[18:00:55] <LeoNerd> use Socket 'AF_MOONLASER';  print "The moonlaser constant is ", AF_MOONLASER;
[18:00:58] <LeoNerd> might even
[18:01:30] <aquanight> here's my solution to this: if AUTOLOAD exists then Package::name in that package can be left floating. No AUTOLOAD => compile-time checked even with ()
[18:01:38] <aquanight> also
[18:01:41] <LeoNerd> What if AUTOLOAD gets injected later/
[18:01:49] <LeoNerd> *Socket::AUTOLOAD = sub { ... };
[18:02:56] <aquanight> well in the specific case of Socket
[18:03:00] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 240 seconds)
[18:03:02] <aquanight> it should be doing this crap in import
[18:03:28] <LeoNerd> Yeah there's a lot of historic baggage here.. Do you know *why* AUTOLOAD is called AUTOLOAD? It's a quite odd name for what it does
[18:03:56] <aquanight> gonna guess it's some kind of awk thing
[18:04:00] <LeoNerd> Not even..
[18:04:15] <aquanight> but probably more to do with AutoLoader.pm or something
[18:04:29] <aquanight> iirc that pulls in .al files on the fly or something?
[18:04:38] <LeoNerd> So,.. back in the 1990s or so, CPUs were slow. Which meant parsers/compilers were slow. It's slow to have to load and parse/compile all of a big .pm file containing lots of utility functions even if you're only going to use one or two of them
[18:05:03] <LeoNerd> So, why bother? Leave them all as text, and compile them on-demand the first time any of them are actually called. Then you don't have to precompile most of the functions that aren't used
[18:05:10] <aquanight> see that sounds more like an argument for selective imports rather than autoloading.
[18:05:28] <LeoNerd> So huge amounts amounts of weirdness, like stub-coderefs or AUTOLOAD, exist basically just to allow this mechanism
[18:05:34] <LeoNerd> s/amounts //
[18:05:40] <aquanight> and by "selective imports" i mean using the arguments to import to pull in specific parts into the package, not the current export/import nonsense
[18:05:51] <Botje> do modern perl distributions still ship autosplit-ed files?
[18:06:09] <LeoNerd> I don't think anyone has used autosplit in anger for a long time now
[18:06:18] <LeoNerd> CPUs are muuuuuch faster, as compared disks
[18:06:41] <Botje> haha
[18:06:42] <aquanight> anyway so help me if I have to start doing shit like
[18:06:45] <LeoNerd> Now, by far the slowest part of loading a module is slurping the bytes off the spinning metal oxide, and into the silicon dioxide
[18:06:51] <Botje> exactly one module in debian still does so: https://packages.debian.org/search?searchon=contents&keywords=.al&mode=path&suite=stable&arch=any
[18:06:52] <Paperbot> Link title(s): [ Debian -- Package Contents Search Results -- .al ]
[18:06:55] <aquanight> use constant printformat => \&Irssi::printformat;
[18:07:09] <LeoNerd> By the time you've touched the disk *at all* you might as well just compile the whole thing on the CPU
[18:07:12] <aquanight> BEGIN { defined(printformat) or die }
[18:07:45] <LeoNerd> Yeah I've often pondered on some sort of (anti)feature bit to say "I promise I don't rely on AUTOLOAD, so hoist a bunch more runtime checks into compiletime please"
[18:07:49] <aquanight> by the time I'm done there will not be a single ENTERSUB/GV in my code
[18:07:53] <aquanight> it will always be ENTERSUB/CONST
[18:08:04] <LeoNerd> I sometimes want a  legacy.pm  just so we can `no legacy qw( a bunch of crap we don't care about any more )`
[18:08:06] <aquanight> sorry
[18:08:10] <aquanight> ENTERSUB/RV2GV/CONST
[18:08:13] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[18:08:14] <aquanight> ..
[18:08:19] <aquanight> RV2CV/CONST
[18:08:23] <LeoNerd> no legacy qw( indirect formats autoload ... );    would be nice
[18:08:36] <aquanight> no feature ......
[18:08:42] <aquanight> but yeah
[18:08:58] <aquanight> (don't we already have no feature 'indirect'? just need to add the rest)
[18:09:19] <LeoNerd> Mmm.. so in my mind "features" are things that are currently opt-in but at some point you'll get them in `use VERSION` and eventually they'll just be a basic part of the language
[18:09:32] <LeoNerd> Whereas "legacy" would be more about things that are currently in the language but we want to eventually get rid of
[18:10:05] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:10:25] <LeoNerd> Even if technically they're all controlled by the same mechanism - and maybe they're all just features bits - it's helpful to keep in mind where it's going in the future
[18:11:05] <aquanight> true
[18:11:11] *** Joins: haj1 (~haj@95.91.235.152)
[18:11:40] <aquanight> but now I want to make 'no symbolic::subs;' pragmata a thing. Just do a postcompile check for ENTERSUB/GV and nuke the compile.
[18:11:48] *** Quits: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[18:11:59] <LeoNerd> Yeah that one probably isn't too hard to check for
[18:12:05] <aquanight> the only problem is that using coderef constants I think doe snot allow prototypes/callcheckers
[18:12:15] <LeoNerd> If you can wait a few weeks I can give you a spare hints bit to make a  use strict 'stricter_subs';
[18:12:36] <aquanight> so many things I want to add to strict.pm
[18:12:40] <LeoNerd> Yuhhhhuh
[18:12:49] <LeoNerd> First thing that needs adding: version tags
[18:13:08] <LeoNerd> So  use v5.34;  implies   use strict ':5.34';   so we can add new ones later without breaking everything
[18:13:39] <aquanight> packages => qualified names must exist in their package before they can be used outside of it.
[18:14:28] <aquanight> actually that would've fixed my most recent headache
[18:14:35] <aquanight> more than any other sub name thing
[18:14:47] <aquanight> well it basically is the sub name thing just more broad
[18:26:01] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[18:26:46] *** Quits: haj1 (~haj@95.91.235.152) (Ping timeout: 272 seconds)
[18:29:06] *** Joins: randir (~randir@2.92.196.208)
[18:30:49] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[18:31:53] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[18:33:48] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[18:35:00] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[18:36:02] <haarg> aquanight: https://metacpan.org/pod/Sub::StrictDecl
[18:36:02] <Paperbot> Link title(s): [ Sub::StrictDecl - detect undeclared subroutines in compilation - metacpan.org ]
[18:37:09] <LeoNerd> Oh that looks like my B::LintSubs
[18:37:11] <LeoNerd> Same idea
[18:40:30] *** Quits: jplesnik_ (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[18:43:32] *** Joins: haj (~haj@95.91.235.152)
[18:47:19] *** Quits: japh (~scp1@user/japh) (Ping timeout: 250 seconds)
[18:47:38] *** Joins: japh (~scp1@user/japh)
[19:01:54] * GumbyPAN CPAN Upload: Etcd-Lock-0.01 by EBRUNI https://metacpan.org/release/EBRUNI/Etcd-Lock-0.01
[19:02:59] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[19:03:36] <LeoNerd> Ugh.. Another subtle bug that would have been obvious with  no feature 'indirect';
[19:03:43] <LeoNerd> I can't wait for the day when we can  use v5.36;
[19:05:06] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Client Quit)
[19:11:55] * GumbyPAN CPAN Upload: DBD-Pg-3.15.1 by TURNSTEP https://metacpan.org/release/TURNSTEP/DBD-Pg-3.15.1
[19:28:22] <xenu> no if $] >= 5.032, 'feature', 'indirect';
[19:28:32] <LeoNerd> OHsure I know I could write that
[19:28:43] <LeoNerd> But it'd be nice to   use v5.36;  and just get *everything* nice at once
[19:30:05] <xenu> that reminds me, have we ever removed a feature? will that code break if indirect syntax is completely removed from perl?
[19:30:12] *** Quits: haj (~haj@95.91.235.152) (Ping timeout: 240 seconds)
[19:30:32] <LeoNerd> I imagine that feature.pm will keep a list of features that no longer exist, so it can ignore requests to turn them off
[19:32:13] *** Joins: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net)
[19:32:17] *** Quits: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net) (Client Quit)
[19:35:10] *** Joins: haj (~haj@95.91.235.152)
[19:35:48] *** Quits: japh (~scp1@user/japh) (Ping timeout: 272 seconds)
[19:37:05] *** Joins: japh (~scp1@user/japh)
[19:37:09] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 250 seconds)
[19:39:23] *** Joins: lispy (~lispy@user/lispy)
[19:41:58] * GumbyPAN CPAN Upload: Term-CLI-0.055002 by SBAKKER https://metacpan.org/release/SBAKKER/Term-CLI-0.055002
[19:47:37] *** Quits: GEttR (~GEttR@user/gettr) (Ping timeout: 240 seconds)
[19:50:13] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:56:55] <Altreus> all of a sudden zsh has started complaining about HEAD^
[19:56:59] * GumbyPAN CPAN Upload: Etcd-Lock-0.02 by EBRUNI https://metacpan.org/release/EBRUNI/Etcd-Lock-0.02
[19:57:05] <Altreus> I found an option to fix it but I have no idea why it was set
[19:57:09] <Altreus> or rather unset
[19:57:20] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[19:58:11] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[20:07:36] *** Quits: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Remote host closed the connection)
[20:08:45] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[20:09:21] *** Joins: bscan (~bscan@2600:380:5823:8ccf:c8cc:a26d:806:aaf0)
[20:12:02] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Quit: SureVoIP: http://www.surevoip.co.uk)
[20:12:24] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[20:13:30] *** Joins: magla (~gelignite@55d42258.access.ecotel.net)
[20:18:55] *** Manderson__ is now known as Manderson
[20:22:27] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[20:23:14] *** Joins: Trigon (~reuben@144.39.114.115)
[20:24:37] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[20:27:02] * GumbyPAN CPAN Upload: Parser-MGC-0.20 by PEVANS https://metacpan.org/release/PEVANS/Parser-MGC-0.20
[20:30:10] <rindolf> https://www.deviantart.com/artbyjrc/art/Rock-hyrax-906984159 - hyraxes
[20:30:11] <Paperbot> Link title(s): [ Rock hyrax by artbyjrc on DeviantArt ]
[20:31:43] *** Joins: anthk_ (~anthk_@92.176.105.30)
[20:33:03] <speskk> Can anyone link any documentation for the Perl equivalent of a lambda. I know ther are anonymous subroutines, is that what I need to be using here? I'd like to do a variable assignment based on the return of a function defined as part of the assignment? IIRC this is possible in Perl I'm just forgetting the exact invocation
[20:35:03] <choroba> yes, Python lambdas can be replaced by sub {} in Perl
[20:35:28] <speskk> I think I answered my own question -- it looks like it's not possible in the exact same way as lisp. I need to assign the sub to /something/ and then call it, I can just have it exist in the scope of the assignment. No worries.
[20:36:22] <speskk> I was thinking more like Lisp choroba. I can assign a sub to a scalar but I can't do for example my $foo = sub { return "bar" } and have $foo = "bar", correct?
[20:36:46] <rewt> eval: [ sub { return 42 }->() ]
[20:36:48] <perlbot> rewt: [42] 💑
[20:36:58] <speskk> rewt: There it is! Thank you!
[20:37:02] <choroba> $foo->() eq 'bar'
[20:37:09] <speskk> Thank you choroba
[20:37:19] <speskk> That's what I was forgetting. Thanks vm folks.
[20:38:23] <rewt> or maybe you can just use a do block
[20:39:22] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[20:39:40] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Remote host closed the connection)
[20:42:24] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[20:46:58] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:47:21] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 250 seconds)
[20:47:44] <LeoNerd> There's usually little point in constructing an anonymous sub then *immediately* calling it. You can usually do what you want with a `do {}` block
[20:49:48] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[20:51:52] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[20:54:36] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 240 seconds)
[21:00:55] *** Joins: e1f (~user@141.117.1.130)
[21:01:35] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[21:01:53] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[21:10:34] *** Quits: haj (~haj@95.91.235.152) (Quit: Leaving.)
[21:10:54] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:dcfd:93ee:4384:4372)
[21:18:10] *** Parts: art1 (~romeyke@p200300ccdf0aef009fc07f072fc62ba2.dip0.t-ipconnect.de) ()
[21:23:02] *** Joins: sokan_ (~sokan@athedsl-303940.home.otenet.gr)
[21:23:16] *** Quits: sokan (~sokan@2a02:587:9e0b:9500:227:eff:fe16:865d) (Ping timeout: 245 seconds)
[21:23:24] *** sokan_ is now known as sokan
[21:24:18] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 252 seconds)
[21:26:00] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 272 seconds)
[21:27:36] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:27:53] <jdv> LeoNerd: return
[21:28:05] <jdv> usually why i do that
[21:28:16] <LeoNerd> Yeah, that can be handy
[21:32:35] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Read error: Connection reset by peer)
[21:34:10] *** Joins: jayray (~jayray@user/jayray)
[21:34:58] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[21:36:02] <LeoNerd> Quite slow though so it's not so good for performance-critical stuff
[21:37:12] *** Joins: Wh0 (~V@103.240.204.159)
[21:38:54] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[21:39:08] <speskk> Thanks for all the insight folks
[21:50:18] <jdv> yeah, that's always been "that's too bad..."
[21:52:40] <ilmari> LeoNerd: it was common in js before `let`/`const`, because it was the only way to get a new scope
[21:54:01] <LeoNerd> Yah.. I suspect given how common, they likely found ways to implement it really efficiently there
[21:54:15] <LeoNerd> Scheme too.. since basically everything is a lambda, they make lambdas really lightweight
[21:54:22] <jdv> it even has a name - https://en.wikipedia.org/wiki/Immediately_invoked_function_expression
[21:54:22] <Paperbot> Link title(s): [ Immediately invoked function expression - Wikipedia ]
[21:54:49] <LeoNerd> Ohsure.. I'm saying it's not common in Perl - it might be very common in some other languages. Scheme especially
[21:55:19] *** Joins: Perun696 (~perun@xaphon.chao5.net)
[21:55:21] <Perun696> hi all
[21:55:22] *** choroba is now known as choroba_
[21:55:42] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:55:49] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[21:56:01] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[21:56:17] <Perun696> I've such string ip/domain example: 1.2.3.4/bla.foo.bar, how can I match ip only with reg exp?
[21:56:54] <vague> my ($ip) = split '/', $str;
[21:56:56] <LeoNerd> Surely just: Whatever's before the "/". I'd consider just using split fot that.
[21:57:00] <LeoNerd> what vague just said :)
[21:57:09] <SpiceMan> ilmari: IIFEs were also used to await functions on the global scope (they fixed that kinda recently)
[21:57:31] <LeoNerd> SpiceMan: Ahyes; did that in F-AA too until I added toplevel await.
[21:58:10] <SpiceMan> F-AA?
[21:58:13] <Perun696> I need a regexp :)
[21:58:21] <LeoNerd> SpiceMan: Future::AsyncAwait
[21:58:27] <LeoNerd> Perun696: Whyso? Is this not a Perl question?
[21:59:16] *** Joins: rgrinberg (~textual@187.194.14.9)
[22:01:14] <SpiceMan> Perun696: https://metacpan.org/pod/Regexp::Common::net#$RE%7Bnet%7D%7BIPv4%7D
[22:01:15] <Paperbot> Link title(s): [ Regexp::Common::net - provide regexes for IPv4, IPv6, and MAC addresses. - metacpan.org ]
[22:01:35] <LeoNerd> I'm not sure even that is necessary. The question wasnt' very clear
[22:01:45] <LeoNerd> Is this a *validation* exercise, or merely a string-cutting-up exercise?
[22:01:55] <LeoNerd> If you just want to extract "whatever is before the first /" then just do that
[22:03:13] <SpiceMan> LeoNerd: I see.
[22:03:18] *** Joins: ens (~ens@yoke.ch0wn.org)
[22:03:26] <SpiceMan> I have to admit, I've never used promises/futures/whatever in perl
[22:03:46] <LeoNerd> They're the same as JavaScript ones
[22:03:53] *** Joins: Trigon (~reuben@144.39.114.115)
[22:03:57] <LeoNerd> (or about 6 other languages)
[22:04:22] <ens> if i have: values { ... }->%*
[22:04:28] <ens> what does the ->%* bit mean?
[22:04:37] <LeoNerd> dereference a hashref
[22:04:41] <LeoNerd> It's the same as  %{ ... }
[22:04:50] <SpiceMan> the same as %{ ..  that
[22:05:16] <LeoNerd> It splats the values back out.. Though it's kinda odd to see it directly applied to an inline hashref constructor like that...
[22:05:42] <LeoNerd> { one => 1, two => 2 }->%*  would just yield the four-element list  ( one => 1, two => 2 )   so you could really just write that directly
[22:06:08] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[22:07:52] <ens> is there a manpage for @* or %* ?
[22:07:54] <SpiceMan> LeoNerd: sure. but javascript forces you to used them, and in perl you have to make that decision yourself. I never did :P
[22:08:03] <SpiceMan> *use them
[22:08:22] <LeoNerd> ens: Likely somewhere in perlop
[22:08:55] <SpiceMan> ens: and perldoc perlref
[22:09:21] <LeoNerd> Oh, yah there
[22:09:32] <SpiceMan> "Postfix Dereference Syntax"
[22:12:01] <ens> thanks
[22:15:48] *** Joins: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-16-76-68-64-112.dsl.bell.ca)
[22:21:44] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[22:22:53] <ether> postderef++
[22:27:15] * GumbyPAN CPAN Upload: App-perlimports-0.000034 by OALDERS https://metacpan.org/release/OALDERS/App-perlimports-0.000034
[22:33:10] *** Quits: anthk_ (~anthk_@92.176.105.30) (Quit: nyaa~)
[22:33:35] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[22:47:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:47:48] *** Quits: vrurg (~vrurg@45.74.95.181) (Remote host closed the connection)
[22:48:20] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[22:48:20] *** Joins: vrurg (~vrurg@45.74.95.181)
[22:48:38] *** Quits: vrurg (~vrurg@45.74.95.181) (Remote host closed the connection)
[22:48:50] *** Joins: vrurg (~vrurg@45.74.95.181)
[22:48:59] *** Quits: vrurg (~vrurg@45.74.95.181) (Remote host closed the connection)
[22:49:31] *** Joins: vrurg (~vrurg@45.74.95.181)
[22:49:48] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 240 seconds)
[22:51:02] <dansan> leont: ah hah!  Now that I've already written my select/sysread implementation of a readln, I think I found the answer I was looking for yesterday.  MYFILE->flush();
[22:51:48] <gordonfish> sweval: \(\(\(\(\(\(\(\(\(\{ one => 1, two => 2 }->%*)->%*)->%*)->%*)->%*)->%*)->%*)->%*)->%*)->%*;
[22:51:50] <perlbot> gordonfish: {two => 2,one => 1}
[22:53:05] <dansan> Oh, what, uuh pretty code gordonfish....
[22:54:26] * SpiceMan sends gordonfish to #lisp (?(
[22:55:07] * gordonfish drowns in the parenthesea
[22:56:25] <dansan> lol!
[22:56:36] *** Quits: vrurg (~vrurg@45.74.95.181) (Ping timeout: 240 seconds)
[22:58:57] *** Quits: Wh0 (~V@103.240.204.159) (Quit: Leaving)
[23:03:37] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:04:14] <mmlj4> #lithp
[23:07:02] <corwin> Is there a way to automatically read __DATA__ without also reading POD?  I tried having both __END__ and __DATA__ (in either order) and didn't get what I hoped for (data without the POD), so I'm assuming I need to write something to discard what I read from __DATA__ once I see __END__.
[23:22:37] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:22:43] *** Quits: rgrinberg (~textual@187.194.14.9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:25:04] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[23:25:40] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[23:29:38] <gordonfish> corwin: Can you give an example of what you're working with and what you're trying to do?
[23:30:13] <Botje> corwin: SelfLoader.pm reports fighting against the same issue. looks like you have to detect __END__ yourself, yes
[23:31:11] <SpiceMan> isn't DATA just a regular filehandle fseeked to the next line?
[23:31:36] * SpiceMan doesn't get the "without also reading POD" part
[23:31:52] <gordonfish> Same here
[23:32:40] <Botje> I believe corwin has a file of the form __DATA__ (stuff here) __END__ (POD here)
[23:32:41] <alh> Imagine: __END__ =head1 ... =cut __DATA__ some lines here
[23:32:46] <alh> <DATA> wills tart reading at __END__
[23:32:52] <alh> For backcompat reasons, apparently
[23:33:30] <SpiceMan> that's why I don't document my source 
[23:33:32] * SpiceMan runs
[23:34:43] <alh> corwin: Sounds like you need to stop reading when you hit POD yourself
[23:35:55] <alh> SelfLoader.pm does while(defined($line = <$fh>) and $line !~ m/^__END__/) { # (where $fh is basically DATA)
[23:36:01] <gordonfish> { Re: <alh> <DATA> wills tart reading at __END__ } <DATA> should start reading after __DATA__ up to EOF or __END__, iirc
[23:36:18] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 252 seconds)
[23:36:43] <alh> No it'll read right past __END__
[23:36:58] <gordonfish> That doesn't sound right
[23:37:36] <alh> ¯\_(ツ)_/¯
[23:37:56] <gordonfish> basheval: printf 'print while <DATA>;\n__DATA__\nfoo\nbar\nbar\n__END__=pod\nSome\nPOD\n' > x.pl; perl x.pl
[23:37:58] <perlbot> gordonfish: foo␤bar␤bar␤__END__=pod␤Some␤POD␤ 💑
[23:38:00] * gordonfish stands corrected
[23:38:54] <gordonfish> Ah, it makes sense actually, since __END__ and pod, at that point, is just part of the content of __DATA__
[23:39:32] <SpiceMan> basheval: printf 'print while <DATA>;\n__END__\nfoo\nbar\nbar\n__DATA__=pod\nSome\nPOD\n' > x.pl; perl x.pl
[23:39:34] <perlbot> SpiceMan: foo␤bar␤bar␤__DATA__=pod␤Some␤POD␤
[23:42:19] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:5c57:7f45:b808:8adb)
[23:45:39] <gordonfish> And since it is the contents of <DATA> it can be argued that it's not really POD then (though I wouldn't be surprised if some pod parsers still pick it up.)
[23:45:53] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:dcfd:93ee:4384:4372) (Ping timeout: 250 seconds)
[23:48:55] <corwin> Thanks for the discussion and tips.  In my case I can drop back to here-doc and punt :D
[23:49:21] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[23:50:23] <corwin> Push comes to shove, it's more important to me that the documentation stay with the program in a tidy way than it is that future authors of fixes^Dimprovements to my program can easily snarf out the data block from the end of the file.
[23:51:33] <corwin> I'm also somewhat compelled by the argument that once perl sees __DATA__ it has no business assuming it owns any future __END__ that might be there.  I can see perlpod as being a special case of extration from the data secion.
[23:51:53] <corwin> anyway. tyvm
[23:52:08] <gordonfish> You could just place the pod any place before __DATA__, like:
[23:52:09] <gordonfish> basheval: printf 'print while <DATA>;\n=pod\nSome\nPOD\n=cut\n__DATA__\nfoo\nbar\nbar\n' > x.pl; perl x.pl
[23:52:10] <Grinnz> corwin: i usually solve this by putting __DATA__ after everything else iirc
[23:52:11] <perlbot> gordonfish: foo␤bar␤bar␤
[23:52:27] <gordonfish> And just keep in mind that anything after __DATA__ is part of DATA's contents.
[23:52:29] <Grinnz> corwin: __DATA__ is a giant hack to begin with i try not to stress it out too much :)
[23:53:12] <gordonfish> I do like how __DATA__ is leveraged for having templates in the same file in Mojo lite apps.
[23:53:46] <corwin> gordonfish: that's a great idea.  my goal here was to keep the data at the bottom of the file for use by people who only care about (read: can make sense of) that part.  Moving the POD above __DATA__ and removing __END__ makes all sorts of sense.
[23:53:54] <gordonfish> (Nice for testing things before making many templates files and small projects.)
[23:54:33] <Grinnz> corwin: __END__ is also super weird and works subtly different in scripts vs modules. ball of hacks
[23:54:41] <gordonfish> corwin: That good, as __DATA__ is supposed to be the last section of the file when it is present.
[23:54:43] <corwin> (my data just so happens to be template, FWIW)
[23:54:50] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:89c:f82b:eb69:d057)
[23:55:19] *** Joins: vrurg (~vrurg@12.49.101.162)
[23:55:20] *** Quits: vrurg (~vrurg@12.49.101.162) (Client Quit)
[23:56:40] <ology> corwin: How many lines is your __DATA__ btw? If it's huge, you could use https://metacpan.org/pod/File::ShareDir
[23:56:40] <Paperbot> Link title(s): [ File::ShareDir - Locate per-dist and per-module shared files - metacpan.org ]
[23:57:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:57:37] <corwin> ology: oh! need to check that, ty.  (In this case it's tiny, in fact.  A four line template, I'm embarrassed to say).
[23:58:05] <ology> File::ShareDir would possibly be overkill then.
[23:58:21] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:58:42] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:89c:f82b:eb69:d057) (Client Quit)
[23:59:27] <corwin> I think so, yes.  Also I need to operate on jrandom build system, in the context of manual builds by GNU package maintainers.  The script automates building directives for upload to GNU for FTP distribution.
[23:59:55] <corwin> I can assume perl is there, because it's needed for autoconf, but not much else.
