[00:01:26] *** Joins: simendsjo (~user@84.211.91.241)
[00:26:22] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (Quit: WeeChat 3.3)
[00:26:47] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[00:28:16] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 245 seconds)
[00:43:05] *** Quits: yewscion (~yewscion@ec2-44-193-71-234.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[00:45:09] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[00:57:14] *** Joins: yewscion (~yewscion@72-21-196-66.amazon.com)
[01:01:23] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[01:02:27] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[01:05:24] *** Quits: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0) (Read error: Connection reset by peer)
[01:05:24] *** Quits: yitzi (~yitzi@2001:470:69fc:105::fafd) (Write error: Connection reset by peer)
[01:08:09] *** Joins: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0)
[01:32:49] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[01:43:30] *** Joins: yitzi (~yitzi@2001:470:69fc:105::fafd)
[01:48:12] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[02:02:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[02:04:08] *** Joins: aeth (~aeth@user/aeth)
[02:08:17] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 240 seconds)
[02:14:42] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) ()
[02:27:07] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[02:30:27] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[02:33:38] *** Quits: yewscion (~yewscion@72-21-196-66.amazon.com) (Ping timeout: 260 seconds)
[02:45:50] <dto> hi borodust 
[02:59:01] *** Quits: ogamita (~pjb@2a01:cb11:8036:90c2:c18:ddd:1a74:88e2) (Ping timeout: 240 seconds)
[03:53:35] *** Quits: dthompson (~user@pool-72-74-40-206.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[04:03:14] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[04:17:30] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[04:20:46] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[04:27:10] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[04:44:55] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[06:02:12] *** Quits: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net) (Quit: brb)
[06:04:37] *** Joins: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net)
[06:24:40] *** Joins: Pixel_Outlaw (~ryan@2600-6c67-5e3f-ed1c-0000-116e-f3f8-28e4.res6.spectrum.com)
[07:12:10] *** Quits: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net) (Quit: brb)
[07:13:03] *** Joins: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net)
[07:17:49] *** Quits: ecraven (~ecraven@user/nex) (Ping timeout: 240 seconds)
[07:19:00] *** Joins: ecraven (ecraven@user/nex)
[08:10:36] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[08:11:31] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[08:15:00] *** Quits: [w] (~w]@2601:8c1:80:70d0::4b06) (Quit: nyaa~)
[08:45:03] *** Quits: Pixel_Outlaw (~ryan@2600-6c67-5e3f-ed1c-0000-116e-f3f8-28e4.res6.spectrum.com) (Quit: Leaving)
[09:25:32] <borodust> hello dto
[09:32:51] *** Joins: artchad (~user@public-gprs220372.centertel.pl)
[09:56:54] <|3b|> artchad: there are 3 things to look at for getting textures oriented correctly: how you store it in memory, how GL interprets it when you upload it, and how the texcoords are interpreted in GL
[09:57:22] <|3b|> usually you (or your image loading lib) store images with the top left pixel first
[09:57:55] <|3b|> when textures are uploaded, GL expects data to start with the /lower/ left pixel
[09:58:29] <|3b|> and the origin of GL texture coordinates is 0,0 at lower left
[09:59:18] <|3b|> so you need to make sure you get all 3 of those matching correctly to have things always work right
[09:59:43] *** Joins: Oddity (~Oddity@user/oddity)
[10:01:32] <|3b|> it is common to get 2 wrong, for example sending a top-left-first image to GL, then using texcoords as if origin were upper right, which will tend to mostly look right, but you will probably eventually run into problems, so better to just fix them both
[10:05:15] <|3b|> (and all that interacts with the transformation of geometry coordinates on the way to the screen, so if your geometry is simple enough you can also get that inverted without noticing and cancel out one error in the texture part)
[10:13:37] <dto> hi artchad 
[10:19:06] <artchad> yo
[10:19:59] <dto> hows it going? 
[10:20:14] *** Joins: rtypo (~alex@user/rtypo)
[10:20:35] <artchad> |3b|: thanks. I
[10:20:38] <artchad> I
[10:20:41] <artchad> ...
[10:21:21] <artchad> I've heard that opengl expects the (0/0) to be at the lower left of the texture, while the rest of the world uses the top left.
[10:22:05] <artchad> dto: It's going alright.
[10:22:23] <artchad> I'm slowly but surely getting a hand of opengl and sdl2 in common lisp.
[10:22:39] <dto> awesome!
[10:22:44] <artchad> I'm still wondering how I would use specific regions of a texture.
[10:22:51] <artchad> I guess I just use different UVs
[10:22:59] <dto> yes
[10:23:05] <dto> i did that for spritesheets
[10:23:13] <artchad> that's what I want to do.
[10:23:23] <dto> i could show the code but it's for Immediate Mode. but it could be helpful. 
[10:23:27] <artchad> I want to port my game DMOMD to sdl2 with opengl 2.1
[10:23:46] <artchad> I'm still in the learning phase. I know what I need to do. 
[10:24:00] <artchad> it's just that the work needs to be put in
[10:24:32] <dto> what does DMOMD stand for
[10:24:49] <artchad> Decent Magician Of the Moldy Dungeon
[10:25:04] <dto> nice :)
[10:25:05] <artchad> dto, if you know how to handle window resize events in CL-SDL2, I would be interested.
[10:25:19] <dto> i only know SDL1 at this point. 
[10:25:25] <artchad> alright.
[10:25:40] <artchad> I just find the idea cool of having a game that nicely works with a tiling window manager
[10:26:00] <artchad> For that I would probalby also need to hande WMevents
[10:26:29] <dto> hmm. i'm not sure. i would think that normal resizeTheWindow type events would be exactly what the tiling wm uses
[10:26:46] <artchad> maybe. I don't know.
[10:26:51] <|3b|> yeah, sprites in a spritesheet are just ranges of UV coords
[10:26:53] <artchad> I'm just speculating about the future.
[10:26:58] <dto> cool
[10:27:00] <dto> hi |3b| !
[10:27:22] <|3b|> 'lo
[10:27:37] <artchad> When teaching someone OpenGL, I think people should stress the importance of glOrtho()
[10:27:49] <artchad> and that it decides how you will think about world space
[10:28:08] <artchad> and that you can flip the projection by swapping the left and right or top and bottom or near and far
[10:29:11] <|3b|> well, it is no different from any other matrix transform :)
[10:29:24] <|3b|> you could just as easily write it as a translate and scale yourself
[10:31:26] <|3b|> so what you really want is a series of (probably interactive) images explaining how the untransformed coordinate space behaves, and what you can do from there
[10:32:44] <|3b|> (and note that glOrtho and the projection in general are gone in 'modern' gl API, since they are a pretty much arbitrary abstraction and you can implement them yourself trivially if it happens to be a good abstraction for a particular task)
[10:33:57] <artchad> animated images are the best way to learn!
[10:34:10] <artchad> at the very least for this very visual topic of OpenGL
[10:34:47] <|3b|> (and also, not everyone cares about 2d, and would much rather you stress gluPerspective or gluLookAt :p )
[10:35:27] <artchad> glu is still window system independent?
[10:35:55] <artchad> so much to learn
[10:35:57] <|3b|> glu is also outdated and probably shouldn't be used
[10:36:18] <artchad> I'm living 12 years in the past btw
[10:36:49] <artchad> Everyone here is living like thirty years in the past when it comes to communication
[10:36:56] <|3b|> yeah, "shouldn't be used" in the same sense as glOrtho :)
[10:37:10] <|3b|> though even if using outdated GL i'd probably still replace them
[10:38:09] <|3b|> can be nice to not be limited to the single stack model you get from GL
[10:38:24] <|3b|> and replace it with a tree or forest or whatever
[10:39:02] <artchad> I don't know about anything single stack related in opengl. Maybe you're talking about the way the state machine behaves.
[10:39:14] <|3b|> for example a separate 'stack' for your UI stuff and for world stuff, without having to deal with swapping them out in the single matrix stack
[10:39:52] <artchad> yeah, but GL doesn't have an API for something like that as far as I know.
[10:39:59] <|3b|> glOrtho etc all operate on a stack of matrices
[10:40:51] <|3b|> glOrtho replaces the current top of active matrix stack with result of multiplying previous value by an ortho projection matrix
[10:41:52] <|3b|> gl gives you 2 of those stacks for transforming model positions, the projection and modelview stacks
[10:42:22] <|3b|> with a fixed way of composing them for use
[10:43:28] <|3b|> a lot of graphics tends to be specified as a hierarchy of transformations, so that is a reasonable model
[10:44:15] <artchad> Yay! I kind of understand the projection and modelview matrices, so I can follo.w hahaha
[10:44:27] * artchad feels like a graphics pro.
[10:44:53] <|3b|> for a traditional example, you have a car at some position and rotation, then onto that transform you add a "a bit forwards and left" to get position of a wheel, with it's own rotation around its axis, then pop back to car position and add "a bit forwards and right" for other wheel, and so on
[10:44:54] <artchad> I didn't know they're independent though
[10:45:40] <artchad> yeah, that's the whole thing of moving the origin
[10:45:56] <artchad> or maybe moving objects relative to the origin, depending on how you view things
[10:46:04] <artchad> I like to think of moving the origin
[10:46:30] <|3b|> or for UI, you have a window at X,Y, then onto that you draw a button at some position within window, then that draws some text at a position within the button etc
[10:47:21] <|3b|> with GL, you are stuck with having to recreate the whole tree if you want to swap between drawing car and ui parts for some reason
[10:47:48] <|3b|> while if you manage the matrices yourself, you can just save your state in whichever and come back to it later
[10:50:10] <|3b|> or maybe you know you are just doing very simple 2d, but a /lot/ of it and you would rather just pass around 2d offsets to avoid the extra calculations and storage of maintaining full matrix, so write your shaders to use that and be done :)
[10:50:26] <artchad> |3b|: You're kind of thinking like a lisp programmer, because you want more flexibility. It seems to me that in OpenGL you would have two independent routines. One for drawing the world, and a separate for the UI.
[10:51:25] <artchad> but in the end one can always build abstrations on top. The question is just how much overhead they produce.
[10:52:26] <|3b|> right, but with the more modern GL APIs, it is more building abstractions beside rather than on top :)
[10:53:33] <|3b|> they lowered the level of the abstraction, so you can put the previous high-level one back on top of it, but you don't have to
[10:53:43] <|3b|> and if you do, you can make some changes pretty much for free
[10:53:54] <artchad> I'll still be using 2.1 for now. :p
[10:53:55] <artchad> Was fun talking. I need to get outside and chop some wood. See you around.
[10:56:55] *** Quits: artchad (~user@public-gprs220372.centertel.pl) (Read error: Connection reset by peer)
[10:58:39] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[11:25:58] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:37:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[11:39:50] *** Joins: aeth (~aeth@user/aeth)
[12:18:24] *** Quits: flatwhatson (~flatwhats@220.253.110.95) (Ping timeout: 250 seconds)
[12:19:06] *** Joins: flatwhatson (~flatwhats@118-208-196-1.tpgi.com.au)
[12:19:28] *** Quits: rando25892 (~homefame@user/rando25892) (Quit: enemy at the gate)
[12:28:01] *** Joins: crumpo (~crumpo@user/crumpo)
[12:32:39] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Ping timeout: 256 seconds)
[12:40:02] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Read error: Connection reset by peer)
[12:40:29] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[13:00:58] *** Joins: ogamita (~pjb@pop.92-184-124-124.mobile.abo.orange.fr)
[13:08:46] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[13:09:04] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[13:14:19] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[13:14:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[13:23:02] *** Joins: notzmv (~zmv@user/notzmv)
[13:30:51] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[14:00:37] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[14:11:49] *** Joins: treflip (~user@user/treflip)
[14:32:27] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[14:46:10] *** Joins: artchad (~user@public-gprs220372.centertel.pl)
[14:56:20] *** Quits: crumpo (~crumpo@user/crumpo) (Remote host closed the connection)
[14:56:40] *** Joins: crumpo (~crumpo@user/crumpo)
[15:58:27] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:59:04] *** Joins: dthompson (~user@pool-72-74-40-206.bstnma.fios.verizon.net)
[15:59:04] *** ChanServ sets mode: +o dthompson
[16:05:56] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[16:07:00] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[16:09:45] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Remote host closed the connection)
[16:10:05] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[16:13:41] *** Joins: crumpo (~crumpo@user/crumpo)
[16:35:33] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[17:17:03] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[17:17:41] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[17:45:39] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[17:51:01] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[18:06:54] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[18:15:09] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[18:18:18] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[18:21:31] *** Joins: humasect (~humasect@d24-235-181-179.home1.cgocable.net)
[18:26:35] *** Quits: humasect (~humasect@d24-235-181-179.home1.cgocable.net) (Ping timeout: 256 seconds)
[18:56:09] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[19:00:17] *** Joins: yewscion (~yewscion@52.94.133.128)
[19:06:37] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[19:23:24] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[19:37:21] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[19:42:02] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Ping timeout: 240 seconds)
[19:46:48] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[19:59:06] *** Joins: humasect (~humasect@d24-235-181-179.home1.cgocable.net)
[20:10:25] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[20:23:57] *** Quits: humasect (~humasect@d24-235-181-179.home1.cgocable.net) (Quit: Leaving...)
[20:32:39] *** Quits: ogamita (~pjb@pop.92-184-124-124.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[21:20:09] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[21:40:22] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[21:54:24] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[21:57:01] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[22:25:09] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[22:25:20] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[22:32:32] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[22:34:05] *** Joins: aeth (~aeth@user/aeth)
[22:34:53] *** Quits: treflip (~user@user/treflip) (Quit: good night)
[23:39:24] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
