[00:03:26] <FromDiscord> <randyr> `int32.high`
[00:09:11] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[00:18:26] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[00:23:35] <FromDiscord> <ITR> I hate when libraries go, like, "This string needs to be which algorithm you want to use" then don't list which algorithms are available :|
[00:25:17] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @\_discord\_135818050027913216\:t2bot.io , thx
[00:29:21] <PMunch> @ITR, that does indeed suck
[00:34:39] <FromDiscord> <dom96> yeah, we need an m1 choosenim 🙂
[00:37:47] <federico3> dom96: switched to opencollective :)
[00:38:09] <FromDiscord> <dom96> awesome 🙂
[00:46:11] <FromDiscord> <gerwy> dom96, i will try to make my teacher make us learn about nim, or at least make a lesson about it (as a metaprogramming topic for example)
[00:47:24] <FromDiscord> <ITR> is there a hyperneat implementation in nim?
[00:49:07] <FromDiscord> <dom96> In reply to @Life Sucks "dom96, i will try": brilliant, happy to help any way I can, feel free to put me in touch with your teacher
[00:50:47] <FromDiscord> <gerwy> well if he agrees, he is pretty strict about our learning material (he teached us github only recently because we didn't get time for that, after 2 years of learning coding)↵and also its the end of the school for me, so need to wait for it after holidays
[00:50:50] <PMunch> Ditto! I've been wanting to make a meta-programming course for a while
[00:51:24] <FromDiscord> <Elegant Beef> Damn pmunch we're in the same boat 😛
[00:51:50] <FromDiscord> <λ🐡> N
[00:51:58] *** Joins: Guest37 (~Guest37@cpe-23-241-28-66.socal.res.rr.com)
[00:52:01] <FromDiscord> <Elegant Beef> I do think a teacher is actually teaching Nim to their class considering the amount of Nim repo's with similar code/logic
[00:52:16] <FromDiscord> <Elegant Beef> lambda fish, interesting name
[00:52:26] <FromDiscord> <Elegant Beef> Is that turbofish's cousin?
[00:52:34] <PMunch> @Elegant, example?
[00:52:37] <FromDiscord> <gerwy> We have Python in our learning plan, so i guess after we learn it (i already know it) we could make some lessons about Nim, because of the similarities and try to use C++ libraries we already know with it
[00:53:23] <FromDiscord> <Elegant Beef> Example of those repos?
[00:53:29] <PMunch> Yeah
[00:57:08] <FromDiscord> <Sochika Basil> image.jpeg https://media.discordapp.net/attachments/371759389889003532/856268952991694909/image.jpeg
[00:58:27] <FromDiscord> <Victoria Guevara> Guise. How about making chat useable again ?
[00:58:40] <FromDiscord> <Elegant Beef> I cannot find it atm pmunch
[00:58:59] <PMunch> Hmm, bummer
[00:59:08] <PMunch> And @Victoria, what do you mean by useable?
[00:59:41] <FromDiscord> <Elegant Beef> There were a few repo's with very similar code so then i read the forum that someone was teaching Nim, so assumed they were related
[01:00:41] <FromDiscord> <Elegant Beef> https://github.com/nim-lang/Nim/pull/18267#discussion_r651737117
[01:00:49] <FromDiscord> <Elegant Beef> Close enough 😛
[01:00:52] <FromDiscord> <gerwy> i mean, the problem is that teacher doesn't know Nim ,so its harder to teach it if you don't know it↵but i can help hehe, i don't know it that well but i can learn along with classmates and i have some projects i want to make in Nim
[01:02:14] <FromDiscord> <Elegant Beef> "some" is an odd way to write "all"
[01:02:16] <FromDiscord> <dom96> ask them to learn it over the summer 😄
[01:02:17] <PMunch> Aah, it's Ziatom teaching
[01:03:24] *** Quits: Guest37 (~Guest37@cpe-23-241-28-66.socal.res.rr.com) (Quit: Client closed)
[01:03:40] <FromDiscord> <gerwy> In reply to @dom96 "ask them to learn": i can try to make one friend learn it, but the problem is... that we had horrible teacher which made everyone in class hate python and they can kinda associate it with it
[01:04:24] <FromDiscord> <Elegant Beef> Well good that they hate python, that's the first step
[01:04:34] <FromDiscord> <gerwy> noo why :<
[01:05:03] <FromDiscord> <Elegant Beef> Well I hate python but ended up here, so has to be relation right? 😛
[01:05:30] <FromDiscord> <gerwy> i could try to explain to teacher that using nim could make learning algorithms easier ↵But unfortunately we need to learn those languages that we will have on the final exam
[01:05:52] <FromDiscord> <gerwy> In reply to @Elegant Beef "Well I hate python": well... i love python and i ended up here, so it probably has no relation
[01:06:16] <FromDiscord> <dom96> Tell the teacher it's a great way to teach some compiler concepts, i.e. with metaprogramming you learn about the AST which is the building block of all compilers
[01:06:17] <federico3> making people hate Python is quite difficult
[01:07:12] <FromDiscord> <gerwy> Ooooh its too earlier for them to learn compiler stuff haha↵they learned OOP like month ago
[01:07:59] <FromDiscord> <Elegant Beef> See learning OOP they're a lost cause... maybe i'll eventually quit joking around today
[01:08:00] <FromDiscord> <Elegant Beef> Maybe it's just time before you see the light 😀
[01:08:01] <FromDiscord> <gerwy> In reply to @federico3 "making people hate Python": yeah exactly, but that guy was horrible and he doesn't teach us anymore, but that left a bad taste to python for them
[01:08:47] <FromDiscord> <gerwy> also the teacher is fun of C# and thinks it should be first language, soo it can be even harder
[01:09:46] <FromDiscord> <gerwy> (edit) "fun" => "fan"
[01:10:13] <FromDiscord> <Elegant Beef> Hmmm is there a way to make a typedesc for only inherited objects, dont suppose a concept would work
[01:10:21] <FromDiscord> <gerwy> ugh im making so many typos today... its probably from the heat, it was 37C today
[01:15:32] <FromDiscord> <Elegant Beef> Hmm, dont know if that'd work will have to try
[01:15:32] <FromDiscord> <vindaar> you can make a concept that calls a macro that performs checks on the type. Maybe that way you can check for that
[01:15:35] <FromDiscord> <vindaar> I do that here\: https://github.com/SciNim/Unchained/blob/master/src/unchained/units.nim#L326-L346
[01:15:45] <FromDiscord> <Elegant Beef> Right now i'm using `ref object` for this oop library, so that's sweet
[01:16:05] <FromDiscord> <Elegant Beef> Well thanks for that, makes this more idiot proof
[01:30:18] <FromDiscord> <Hugo Ribeiro> From my perspective it&#x27;s flooded https://m.youtube.com/watch?v=gTv7rijY2Vg↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[01:35:37] <FromDiscord> <dom96> I guess you preferred no bridge to Discord?
[01:35:56] <FromDiscord> <Bung> how to profile a web server ?
[01:35:59] <FromDiscord> <Dominik Picheta (dom96)> Is it not useable with the bridge?
[01:40:29] <PMunch> Certainly a lot more traffic with the IRC/Discord community added to the Telegram one
[01:57:43] <FromDiscord> <Varriount> Can anyone recommend a C library that is likely to have the most understandable source code?
[01:58:01] <FromDiscord> <Elegant Beef> Hello world
[01:58:01] <FromDiscord> <randyr> Maybe Redis?
[01:58:05] <FromDiscord> <Varriount> (C standard library)
[01:58:15] <FromDiscord> <randyr> musl?
[01:59:36] <FromDiscord> <Varriount> In reply to @Randall "musl?": Thanks! This is actually quite understandable: https://github.com/bminor/musl/blob/cfdfd5ea3ce14c6abf7fb22a531f3d99518b5a1b/src/process/posix_spawn.c
[02:01:52] <FromDiscord> <Varriount> Anyone know what reasonable platforms might not have posix_spawn available?
[02:02:19] <FromDiscord> <Varriount> I'm trying to determine if it's worth re-implementing posix_spawn in Nim for this subprocess module.
[02:03:23] <FromDiscord> <Elegant Beef> I feel like that's gotta be a rather common implemented procedure, but speaking out my arse here
[02:04:02] <FromDiscord> <Varriount> Hm... I think I'll leave it up to whoever actually needs to use a platform without it first.
[02:04:16] <FromDiscord> <Elegant Beef> Anyone got any more bright ideas to add to oopsie? https://nimdocs.com/beef331/oopsie/oopsie.html
[02:05:07] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[02:06:18] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[02:06:24] <FromDiscord> <Varriount> What is it?
[02:06:35] <FromDiscord> <Elegant Beef> An oop helper library
[02:06:43] <FromDiscord> <Bung> looks cool
[02:07:23] <FromDiscord> <Bung> can copy use `=` instead?
[02:07:25] <FromDiscord> <Varriount> How does `inherits` work?
[02:07:27] <FromDiscord> <Elegant Beef> I did want to add a `base` or similar which would convert it to the underlying type from a parent type, but that was prohibitively ugly to solve
[02:07:52] <FromDiscord> <Elegant Beef> AST traversal of the typedef
[02:08:21] <FromDiscord> <Victoria Guevara> I will probably pass.
[02:08:58] <FromDiscord> <Varriount> In reply to @Elegant Beef "AST traversal of the": Sorry, I mean, how does one use it?
[02:09:41] <FromDiscord> <Elegant Beef> `if a.inherits: echo "This object inherits"` it's mostly just for the concept but it seemed like it could help being exported
[02:10:24] <FromDiscord> <Elegant Beef> I suppose `when a.inherits` makes more sense
[02:11:05] <FromDiscord> <Elegant Beef> Although I could export the concept so it's `when a is Inherits`
[02:11:35] <FromDiscord> <Elegant Beef> So ya dom, better cutoff the telegram people and maybe make a secondary "bridged nim" channel they can opt into if they want 😛
[02:13:59] <FromDiscord> <Dominik Picheta (dom96)> Why?
[02:14:42] <FromDiscord> <Elegant Beef> I dont know if it can, overriding `=` has a strict set of rules afaik↵(@Bung)
[02:15:47] <FromDiscord> <Elegant Beef> `Error: signature for '=' must be proc[T: object](x: var T; y: T)`
[02:16:32] <PMunch> It's been a different community for what, 2-3 years now? Feels a bit weird to just suddenly merge them with this channel
[02:17:09] <FromDiscord> <Elegant Beef> Yea atleast forcefully, like i suggested prior to the merge probably best to make a bridge/unbridged channel
[02:17:49] <FromDiscord> <Elegant Beef> I can understand why they wouldnt want to be apart of this, afterall i'm here
[02:18:33] <PMunch> I thought about suggesting to merge them when Discord was added, but decided against it myself because they feel like separate communities
[02:18:39] <FromDiscord> <gavr> what???
[02:18:40] <FromDiscord> <gavr> image.jpeg https://media.discordapp.net/attachments/371759389889003532/856289475352854548/image.jpeg
[02:18:52] <FromDiscord> <gavr> sent a code paste, see https://play.nim-lang.org/#ix=3qB6
[02:18:55] <FromDiscord> <Elegant Beef> `flags`
[02:19:00] <FromDiscord> <gavr> ou, hmm
[02:19:02] <FromDiscord> <Elegant Beef> do {} around your flag
[02:19:28] <FromDiscord> <Elegant Beef> Atleast i assume it's a alias for `set[FileCopyFlag]`
[02:19:28] <FromDiscord> <gavr> thanks!
[02:20:12] <FromDiscord> <gavr> do u also code gtk apps on nim?
[02:20:18] <FromDiscord> <Elegant Beef> Nope
[02:20:25] <FromDiscord> <Elegant Beef> I make games and libraries no one touches
[02:20:57] <FromDiscord> <Elegant Beef> Sorry i lied, pmunch touches my game
[02:21:17] <PMunch> I touch them real good
[02:21:55] <FromDiscord> <Elegant Beef> Who else would, you're the only one here that can stand me 😛
[02:22:05] <PMunch> @gavr, I guess that was just a lucky guess from Elegant, flags are typically represented by sets, so for Flag vs. Flags it was a good guess
[02:22:19] <PMunch> I am?
[02:22:31] <FromDiscord> <Elegant Beef> There is no luck involved!
[02:22:50] <PMunch> Haven't played Linerino in quite a while though, any new cool stuff I've missed?
[02:22:55] <FromDiscord> <Elegant Beef> I used my skills to paint a picture that assumed whoever made that library writes good code
[02:23:29] <FromDiscord> <Elegant Beef> Uhh it's mostly "done" so havent done much but added a few more handcrafted levels in a while, was unmotivated for a while, but started on a new game recently
[02:23:43] <FromDiscord> <Elegant Beef> But again havent worked on that new game for a while but it's another fun/cute puzzle game
[02:23:44] <PMunch> Oh cool, what kind?
[02:23:53] <PMunch> Ah right, neat
[02:24:35] <FromDiscord> <Elegant Beef> If you want to see a level being played https://streamable.com/xx0y93
[02:24:45] <PMunch> I was actually thinking about doing a small game/simulation as a teaching aid for military maneuvers after the exercise I took part of last week
[02:26:03] <FromDiscord> <Elegant Beef> The biggest worry i have with this new project is that the puzzles arent difficult enough, but i havent made many levels cause it takes time and hell i spent like 30mins to an hour on the first "complex" level
[02:26:22] <PMunch> Aah, like a mix of Tetris and Linerino
[02:26:50] <FromDiscord> <Elegant Beef> military exercize... interesting
[02:27:16] <FromDiscord> <Elegant Beef> Shh dont mention tetris that's how a lawsuit appears
[02:27:36] <PMunch> I mean that's the great thing about Linerino which was a huge inspiration for my Seiðr game, just create an algorithm that can easily create a challenge and then find complex patterns through playing those
[02:27:43] <FromDiscord> <Elegant Beef> They wouldnt get any money but it'd be cool, i'd have a poster from "the tetris company"
[02:28:07] <FromDiscord> <Elegant Beef> Yea linerinos procgen is deceptively intelligent
[02:28:09] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[02:28:23] <PMunch> Yeah we have a system of mandatory military training, which starts with a full year, then yearly exercises until you're something like 43
[02:28:46] <FromDiscord> <Elegant Beef> Interesting
[02:29:31] <PMunch> I mean Seiðr is literally just create a random board and then remove pieces to create a puzzle :P
[02:29:36] <FromDiscord> <Elegant Beef> Had to check and yea the level generation itself is \~100 loc
[02:29:38] <PMunch> It's really quite simple
[02:30:17] <FromDiscord> <Elegant Beef> Yea i mean i just drunken walk with linerino, always starting in the center with some rules for special tiles and where you should walk
[02:30:40] <FromDiscord> <Elegant Beef> I think one of my rules is like "Dont walk to any tile that has 2 neighjbours"
[03:10:39] <FromDiscord> <Bung> @ElegantBeef then copy is fine .
[03:44:55] *** Quits: max22- (~maxime@2a01cb08833598002e27d7fffeabcac8.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:48:18] <saem[m]> anyone know how to get typed varargs working with a conversion proc? https://play.nim-lang.org/#ix=3qBq
[03:49:41] <saem[m]> d'oh, wrong one
[03:49:50] *** Quits: PMunch (~PMunch@178.74.36.198) (Quit: leaving)
[04:01:17] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:39:14] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[04:56:01] <FromDiscord> <shadow.> how can i find the value of capture groups after match in re?
[04:56:56] <FromDiscord> <Elegant Beef> What procedure are you using?
[04:57:11] <FromDiscord> <shadow.> In reply to @Elegant Beef "What procedure are you": `re.match`
[04:57:21] <FromDiscord> <shadow.> i can use any i just wanna be able to see capture groups lol
[04:57:41] <FromDiscord> <shadow.> oh nvm, you pass the matches
[04:57:41] <FromDiscord> <shadow.> lol
[04:57:50] <FromDiscord> <Elegant Beef> There or two overloads which will copy the matches
[04:58:48] <FromDiscord> <shadow.> yep i saw it after asking, thanks
[04:58:51] <FromDiscord> <shadow.> matchTuple when? :p
[04:59:02] <FromDiscord> <Elegant Beef> I dont like regex, so never
[05:09:01] *** Joins: SebastianM (~seba@user/sebastianm)
[05:09:15] <FromDiscord> <Varriount> @ElegantBeef Regex is one of those necessary evils.
[05:09:33] <FromDiscord> <Varriount> It's ugly and unreadable, but it gets the job done quickly.
[05:09:53] <FromDiscord> <Varriount> (also, readability can be improved by use of the `x` flag)
[05:10:14] <FromDiscord> <Elegant Beef> I dont often need it, i just vastly prefer iterative/scanf, but they're of course usable
[05:10:15] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[05:23:15] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[06:03:19] <FromDiscord> <Zachary Carter> I've been playing around with CPS today
[06:04:12] <FromDiscord> <Zachary Carter> Came up with a simple example to help my understanding of the semantics of continuations
[06:04:27] <FromDiscord> <Zachary Carter> https://gist.github.com/zacharycarter/0a3b8f893ed903fe6d8feaa3d0906cda
[06:04:49] <FromDiscord> <Zachary Carter> So I think now I have enough understanding to actually replace all the make_fcontext and jump_fcontext assembly calls in my code
[06:04:59] <FromDiscord> <Zachary Carter> (edit) "make_fcontext" => "`make_fcontext`" | "jump_fcontext" => "`jump_fcontext`"
[06:14:46] *** Joins: vicfred (~vicfred@user/vicfred)
[06:24:00] *** Quits: fputs (~evan@67.59.83.166) (Quit: WeeChat 3.2)
[06:24:32] <FromDiscord> <aleclarson> Why does this not compile until I remove `| string`  from the generic type?↵https://play.nim-lang.org/#ix=3qBT
[06:25:23] <FromDiscord> <aleclarson> sent a code paste, see https://play.nim-lang.org/#ix=3qBU
[06:25:48] <FromDiscord> <Rika> Open array is still kinda buggy I believe?
[06:27:08] <FromDiscord> <Elegant Beef> Think it's best to just use a concept here as such https://play.nim-lang.org/#ix=3qBV
[06:28:06] <FromDiscord> <Elegant Beef> I'm a dummy with that concept \:D
[06:28:37] <FromDiscord> <Elegant Beef> Excuse me while i go self flagellate
[06:29:03] <FromDiscord> <Rika> What are you a bacterium
[06:29:20] <FromDiscord> <Elegant Beef> > ↵> To whip or flog; scourge.↵>
[06:30:52] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:31:14] <FromDiscord> <Elegant Beef> Have i redeemed myself any? https://play.nim-lang.org/#ix=3qBY
[06:31:43] <FromDiscord> <Elegant Beef> Though that means something like `array[1..2, string]` fails, so nope
[06:32:35] <FromDiscord> <aleclarson> @ElegantBeef are concepts documented at all?
[06:33:01] <FromDiscord> <Elegant Beef> They're "experimental", but work for many things 😀
[06:33:18] *** Joins: fputs (~fputs@67.59.83.166)
[06:33:23] <FromDiscord> <Elegant Beef> Added support for those mixed bag arrays with this https://play.nim-lang.org/#ix=3qBY hopefully this is helping and not just frustrating telegram
[06:33:40] <FromDiscord> <Elegant Beef> https://nim-lang.org/docs/manual_experimental.html#concepts documentation for them
[06:35:13] <FromDiscord> <Elegant Beef> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/856353575926890536): Added support for those mixed bag arrays with this https://play.nim-lang.org/#ix=3qC0 hopefully this is helping and not just frustrating telegram
[06:39:15] <FromDiscord> <Zachary Carter> Has an issue already been reported for the openArray issue?
[06:43:41] <FromDiscord> <Elegant Beef> This might be related https://github.com/nim-lang/Nim/issues/16153
[06:43:43] <FromDiscord> <aleclarson> In reply to @Elegant Beef "https://nim-lang.org/docs/manual_experimental.html#": thx Elegant ^^
[06:44:26] <FromDiscord> <Elegant Beef> No problem, concepts look mighty confusing at first, but they're a better way to handling stuff than the compiler magic from things like `openArray` imo atleast
[06:45:58] <FromDiscord> <exelotl> I'm liking concepts quite a bit now that I've found a reason to use them, but I'm scared because the new design seems more limited and I don't understand it
[06:46:27] <FromDiscord> <Elegant Beef> Well the new design empowers macros for other things
[06:47:00] <FromDiscord> <Elegant Beef> I think they can coexist, but dont know if they can in the same block
[06:47:52] <FromDiscord> <exelotl> Simple things like "this type needs to be an enum" or "this  type needs a field `x: int` aren't possible with the new design right?
[06:47:55] <FromDiscord> <Elegant Beef> Like hell i have a proof of concept impl of interfaces using new macros cause it was simple enough to reason about
[06:48:03] *** Joins: vicfred_ (~vicfred@fixed-187-191-48-110.totalplay.net)
[06:48:41] <FromDiscord> <Elegant Beef> I dont quite know, i try not to depend on devel, so havent tested them much
[06:49:12] <FromDiscord> <exelotl> (edit) 04removed "" | "int`" => "int`""
[06:49:42] <FromDiscord> <leorize> no they are not possible↵(@exelotl)
[06:50:16] *** Quits: vicfred_ (~vicfred@fixed-187-191-48-110.totalplay.net) (Client Quit)
[06:51:02] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 265 seconds)
[06:51:26] *** Quits: fputs (~fputs@67.59.83.166) (Remote host closed the connection)
[06:51:35] <FromDiscord> <exelotl> So for maximum future proofing I guess I should only make concepts with rules like `foo(a) is int`
[06:53:15] <FromDiscord> <Elegant Beef> Also thanks to talking about new macros I now see i missed someones PR from march \:(
[06:53:56] <FromDiscord> <Elegant Beef> But this type of logic is easier since the entire procdef is inside the concept https://github.com/beef331/constructor/blob/master/tests/timplements.nim
[07:23:11] <FromDiscord> <exithead> Is there an example for flatty?
[07:53:41] <FromDiscord> <Zachary Carter> sent a long message, see http://ix.io/3qCg
[07:54:31] <FromDiscord> <Rika> Wonder if someone can base a web server on this lol
[08:04:37] <FromDiscord> <Elegant Beef> @exithead\: an example for what?
[08:05:10] <FromDiscord> <Zachary Carter> In reply to @Rika "Wonder if someone can": well, I need to finish it and add comments but yeah I think it's pretty cool stuff
[08:05:33] <FromDiscord> <Zachary Carter> it has its own drawbacks, some of which I think will be alleviated with moving to continuations
[08:05:41] <FromDiscord> <Zachary Carter> and CPS
[08:06:00] <FromDiscord> <Zachary Carter> but it definitely beats a threadpool appraoach
[08:08:47] <FromDiscord> <Elegant Beef> Also this matrix bridge is pretty cool, linked to the gamedev channel for the matrix channel with your discord channel mention 😀
[08:09:23] <FromDiscord> <exithead> @ElegantBeef https://github.com/treeform/flatty
[08:09:50] <FromDiscord> <Elegant Beef> Yea i've used flatty before which is why i'm asking what you need an example for
[08:10:15] <FromDiscord> <Elegant Beef> Hell i might even be a contributor to flatty for all i recall 😛
[08:11:10] <FromDiscord> <exithead> How do you output the "flatty"Ed data to the System? I've used fileWrite but can't open it again with fileRead?
[08:12:43] <FromDiscord> <Elegant Beef> sent a code paste, see https://play.nim-lang.org/#ix=3qCi
[08:15:12] <FromDiscord> <Elegant Beef> Tested and it did
[08:15:50] <FromDiscord> <Elegant Beef> https://play.nim-lang.org/#ix=3qCj full usage
[08:15:54] <FromDiscord> <exithead> That's about what I did but I had multiple objects so I ".add" them on to an empty string and read them back by newline? Would that have tripped it up
[08:17:12] <FromDiscord> <Elegant Beef> Yea since `\n` is a valid character in the binary stream adding one would mess it up
[08:17:27] <FromDiscord> <Elegant Beef> flatty isnt a stream impl
[08:17:30] <FromDiscord> <exithead> Wait why am I even doing that, I could write the whole seq as a flatty couldn't I?
[08:17:37] <FromDiscord> <Elegant Beef> Yep
[08:18:04] <FromDiscord> <exithead> Thank you for helping me answer my real question. I appreciate it man!
[08:24:20] *** Joins: rockcavera (~rc@192.12.115.214)
[08:24:20] *** Quits: rockcavera (~rc@192.12.115.214) (Changing host)
[08:24:20] *** Joins: rockcavera (~rc@user/rockcavera)
[08:26:02] <FromDiscord> <aleclarson> is there an easy way to check if a file exists, if i don't care about race conditions
[08:26:15] <FromDiscord> <Elegant Beef> `os.fileExists`
[08:26:33] <FromDiscord> <aleclarson> gratzi ^^
[08:26:42] <FromDiscord> <aleclarson> i was looking in `io` docs
[08:27:03] <FromDiscord> <Elegant Beef> Also wouldnt be a race condition more of a toctou error
[08:28:39] <FromDiscord> <Rika> Isn’t that just a kind of race condition
[08:28:53] <FromDiscord> <Elegant Beef> I guess it does say so on the wiki
[08:30:04] *** Joins: tiorock (~rc@192.12.115.214)
[08:30:05] *** Quits: tiorock (~rc@192.12.115.214) (Changing host)
[08:30:05] *** Joins: tiorock (~rc@user/rockcavera)
[08:30:05] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (sodium.libera.chat (Nickname regained by services)))
[08:30:05] *** tiorock is now known as rockcavera
[08:38:16] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[08:39:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[08:40:37] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[09:25:11] <FromDiscord> <dankey> it&#x27;s just a bit hard to read
[09:28:07] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:29:31] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:31:43] *** Quits: elph (uid286227@id-286227.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:04:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[10:05:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:37:30] *** Joins: beeswax (~knightshr@i5E86B3C0.versanet.de)
[10:40:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 264 seconds)
[10:45:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:03:32] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[11:18:41] <FromDiscord> <hamidb80> In reply to @Zachary Carter "but it definitely beats": why?
[11:20:25] <FromDiscord> <hamidb80> i thought it's not possible in nim to implement fibres
[11:20:35] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (Remote host closed the connection)
[11:20:48] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[11:20:51] *** Joins: Epsilon- (~Epsilon@user/epsilon)
[11:21:51] *** Quits: Epsilon (~Epsilon@user/epsilon) (Quit: Quit)
[11:26:00] <FromDiscord> <Zachary Carter> well I don't think it's possible to implement fibers in Nim
[11:26:03] *** Quits: beeswax (~knightshr@i5E86B3C0.versanet.de) (Ping timeout: 265 seconds)
[11:26:07] <FromDiscord> <Zachary Carter> but you can implement fibers in assembly 🙂
[11:26:27] <FromDiscord> <Zachary Carter> and I guess you really can implement fibers with Nim using CPS and continuations
[11:26:37] <FromDiscord> <Zachary Carter> since that's what I'm going to eventually replace the assembly with
[11:31:46] <FromDiscord> <Rika> Why do you need to go down to assembly to implement fibers
[11:45:39] *** Joins: PMunch (~PMunch@178.74.36.198)
[11:50:29] <FromDiscord> <hamidb80> i remember Dominik was talking about Nim in Fossdem
[11:51:38] <FromDiscord> <hamidb80> at the end of the talk someone asked him
[11:52:08] <FromDiscord> <hamidb80> why Nim doesn't support Fibers like Crystal?
[11:52:24] <FromDiscord> <hamidb80> and he said that fibers requiers a Rumtime to manager them
[11:52:52] <PMunch> Similar to how async requires a runtime
[11:52:53] <FromDiscord> <hamidb80> (edit) "that fibers" => ""fibers" | "them" => "them""
[11:55:13] <PMunch> I don't see why it would be impossible to implement them in Nim thought
[11:58:03] <FromDiscord> <Rika> Which is probably why they will become possible with CPS
[11:58:17] <FromDiscord> <Rika> I assume Nim just didn’t have the primitives to easily make the runtime?
[11:58:19] *** Joins: beeswax (~knightshr@i5E86B3C0.versanet.de)
[11:58:52] <FromDiscord> <Zachary Carter> yes
[11:59:02] <FromDiscord> <Zachary Carter> maybe it could have been done with closure iterators too
[11:59:24] <FromDiscord> <Zachary Carter> I'm not sure if closure iterators can do everything you need to support a fiber
[11:59:39] <PMunch> Probably, I implemented a work stealing algorithm at one point using closure iterators
[11:59:52] <PMunch> That could steal half-completed jobs across threads
[12:00:11] <FromDiscord> <Zachary Carter> what I should have said is - I didn't think it was possible until I learned about CPS and closure iterators 🙂
[12:00:20] <FromDiscord> <Zachary Carter> PMunch: nice!
[12:00:48] <FromDiscord> <Zachary Carter> but yeah - fibers and continuations are quite different
[12:01:03] <FromDiscord> <Zachary Carter> fibers require a st[12:04:30] <FromDiscord> <Zachary Carter> I think I describe it a bit in that link I posted earlier to the gist, but basically there's a job selector proc that runs on each thread, including the main one
[12:05:04] <FromDiscord> <Zachary Carter> so when a job is dispatched the semaphore will get signaled, and the selector proc will select a job from the job pool
[12:06:17] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[12:06:20] <FromDiscord> <Zachary Carter> otherwise the job selector function will wait for one to be available
[12:06:36] <PMunch> Aah right, this kinda works the other way. Each thread has its own queue, then when one thread runs out of tasks they steal half of all tasks from another thread
[12:06:57] <PMunch> So as long as there are enough work available there is no communication overhead
[12:08:37] <FromDiscord> <Zachary Carter> gotcha, yeah I've heard about those types of work stealing job system implementations before
[12:08:50] <FromDiscord> <Zachary Carter> awesome you made one, I wasn't aware haha. I probably would have asked you for it 🙂
[12:08:56] <FromDiscord> <Zachary Carter> oh but boehm yeah...
[12:09:39] <PMunch> I'm still annoyed that I've managed to lose it.. Would be interesting to see if it would work with ARC/ORC instead of boehm
[12:09:53] <FromDiscord> <Zachary Carter> yeah! I'd be curious as well
[12:10:16] <FromDiscord> <Elegant Beef> This is why you dont store work in `/tmp/` 😛
[12:11:32] <FromDiscord> <Rika> What? You were working on stuff in temp???
[12:11:37] <FromDiscord> <Rika> Why?
[12:11:55] <PMunch> Haha, I think it was just stored on my laptop at the time or something like that :P
[12:12:21] <PMunch> I'm always testing out things in /tmp, means I don't have to name a project and make a folder under my projects directory
[12:12:37] <FromDiscord> <vindaar> I also often do that. I use it for short tests and snippets. And rarely I end up writing more than I initially think. Haven't managed to lose anything though 😅↵(@Rika)
[12:13:02] <PMunch> I've managed to turn off the computer by accident a couple times..
[12:13:08] <FromDiscord> <Rika> I have a “scratch” directory for small stuff like that
[12:13:22] <PMunch> But then you'd need to clean it
[12:13:45] <FromDiscord> <Rika> I’m a bit of a data hoarder so I hate making stuff then deleting them
[12:14:20] <PMunch> Same, that's why I have my computer delete them for me :P
[12:14:41] <PMunch> I have even set up my browser now to give me a clean slate each time I open it
[12:15:06] <FromDiscord> <Rika> I know if the computer will delete it so I’m still wary of that, the tactic won’t work for me
[12:15:50] <FromDiscord> <vindaar> happens on my laptop frequently, because I sometimes (but not always!) need to press the powerbutton to get it out of sleep. But if I press it too early it just shuts down↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[12:16:58] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:16:59] <FromDiscord> <Elegant Beef> To be fair i've also started to use `/tmp/` after pmunch's incident it inspired me to have heartbreak
[12:17:42] <PMunch> Wait, you started using /tmp after you saw me lose my work? :P
[12:18:58] <FromDiscord> <Elegant Beef> Yep
[12:24:27] <FromDiscord> <Rika> Beef is a masochist
[12:26:17] <FromDiscord> <Elegant Beef> Nah just i test a lot of code so helps to not fill my drive
[12:28:34] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[12:31:28] *** Joins: ozzz (~oz@46.49.41.80)
[12:35:57] *** Joins: Schnouki (~schnouki@user/schnouki)
[12:40:27] <FromDiscord> <bung87 (Bung)> So what’s the recommand way use async and threads?
[12:59:28] <FromDiscord> <bolino> Hi here, I have a quick Nim-noob question.
[12:59:36] <FromDiscord> <bolino> Hi here, I have a quick Nim-noob question.
[12:59:48] <FromDiscord> <bolino> Hi here, I have a quick Nim-noob question.
[13:01:05] <FromDiscord> <Elegant Beef> Hi there i have a quick answer...
[13:04:37] <PMunch> Why is everyone on Discord sudd