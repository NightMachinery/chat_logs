[00:00:07] *** Quits: arrowd (~arr@2.94.236.140) ()
[00:02:22] *** Quits: kremovtort (~kremovtor@broadband-77-37-212-157.ip.moscow.rt.ru) (Ping timeout: 268 seconds)
[00:25:16] <mjrosenb> ahh, it looks like the thing that I'm using just grabs the binaries that haskell-language-server produces
[00:31:46] <mjrosenb> how do yinz build the binaries for 8.6.5? can I get the list of packages that are used?
[00:54:58] <jneira[m]> mjrosenb: are you using nix? just in case, have you take a look to the nix config of the repo: https://github.com/haskell/haskell-language-server/blob/master/flake.nix ?
[01:03:57] <mjrosenb> I am using nix.  I saw flake.nix for the first time today.
[01:04:46] <mjrosenb> it looks like that only supports 8.8.4 and up.
[01:10:20] <mjrosenb> ok, looks like I can build it with `cabal install haskell-language-server`.  
[01:14:00] <mjrosenb> ghc-lib-8.10.7.20210828-pNEu4SAZ7SDWf89VCGwyl depends on
[01:14:00] <mjrosenb> ghc-lib-8.10.7.20210828 which failed to install.
[01:14:10] <mjrosenb> why did I think that was going to work?
[01:19:01] <mjrosenb> maybe it is built with stack?
[01:19:09] <mjrosenb> I was not planning on learning how to use stack today
[01:19:23] <mjrosenb> but I'm already like 5 yaks deep on this
[01:25:09] <jneira[m]> hmmm
[01:26:27] <jneira[m]> in ci we are building with cabal and ghc downloaded with ghcup in a ubuntu box
[01:27:26] <jneira[m]> not sure if it could help you but the ci config file describing the steps is here: https://github.com/haskell/haskell-language-server/blob/master/.github/workflows/build.yml
[01:29:47] <jneira[m]> and the nix one is next to; https://github.com/haskell/haskell-language-server/blob/f47bb47e976539065f0a53c9d42b0ae0a78a5cf2/.github/workflows/nix.yml#L72-L114
[01:31:14] <jneira[m]> s/;/:/
[01:31:51] <mjrosenb> the nix bits don't build for ghc-8.6.5, right? (that would make my life way too easy :-p)
[01:33:02] <jneira[m]> oh, didnt know that, my knowlege about nix is very limited
[01:40:55] <mjrosenb> ghcup is offering to install haskell-language-server for me :-p
[01:48:28] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[01:54:30] <mjrosenb> 'exe:hls' which matches exe:hls (unknown-component), :pkg:exe:lib:exe:file:hls
[01:54:33] <mjrosenb> (unknown-file)
[01:54:53] <mjrosenb> that's what I got when I tried the command that (I belive) is being run by github's CI
[01:55:05] <mjrosenb> can I see the output of github's CI?
[02:00:35] <mjrosenb> interesting: https://app.circleci.com/pipelines/github/haskell/haskell-language-server/5360/workflows/d648f608-f92f-4d17-9772-6560f65568b3/jobs/44976 makes it look like it is using stack to build?
[02:03:01] <sooch> jneira[m]: yes, Iâ€™m touching up the ghcide root directory issue I ran into a few days ago. Will check that out afterwards
[02:07:18] <mjrosenb> ahh, I missed the part of the build steps where it renames haskell-language-server to hls in the cabal file.
[02:18:22] <mjrosenb> oh, I bet that's for the per-push builds, as opposed to the release builds?
[02:18:41] <mjrosenb> anyhow, cabal installed via stack seems to be working, whereas cabal from nix did not
[02:18:48] <mjrosenb> but I don't know which ghc it is using.
[02:18:55] <mjrosenb> I guess strings or ldd will tell me that.
[02:22:09] <mjrosenb> ahh, yup
[02:22:11] <mjrosenb> wrong ghc
[02:22:12] <mjrosenb> Linking /home/mjrosenb/src/haskell-language-server/dist-newstyle/build/x86_64-linux/ghc-8.10.7/haskell-language-server-1.5.1.0/x/haskell-language-server/build/haskell-language-server/haskell-language-server ...
[02:27:41] <mjrosenb> [9 of 9] Compiling HieDb.Run        ( src/HieDb/Run.hs, /home/mjrosenb/src/haskell-language-server/dist-newstyle/build/x86_64-linux/ghc-8.6.5/hiedb-0.4.1.0/build/HieDb/Run.o )
[02:27:45] <mjrosenb> looking better.
[03:22:15] <mjrosenb> ok, it still isn't working.  Is there a way to specify which target I want it to look at? my cabal file specifies 3-4 targets, but I only care about one right now.
[03:22:30] <mjrosenb> I guess this is what that hie.yaml file is for?
[03:27:43] * mjrosenb opted to comment out that seciont of my .cabal file
[03:27:49] <mjrosenb>   Multi Cradle: No prefixes matched
[03:27:49] <mjrosenb>   pwd: /home/mjrosenb/projects/match-rex
[03:27:49] <mjrosenb>   filepath: /home/mjrosenb/projects/match-rex/src/jsaddle/Platform.hs
[03:27:54] <mjrosenb> WELP.
[03:29:18] <mjrosenb> guess it is time for me to go back to the debugging page.
[03:47:36] <mjrosenb> P!
[03:47:50] <mjrosenb> P is for Progress: Completed (49 files worked, 39 files failed)
[03:48:06] <mjrosenb> P is for PEBKAC
[03:50:38] <mjrosenb> Message:  parse error on input â€˜-- | if x' = a(t) * x + b(t), then affine returns (a(t), b(t))â€™
[03:51:00] <mjrosenb> that is a comment... why is it giving me a parse error in a comment?
[03:51:18] <mjrosenb> oh, it is a documentation comment, and I'm not using the right format for it?
[03:58:55] <mjrosenb> ok, well, I'm definitely getting code errors from the command line that I'm not getting from emacs, so the saga continues.  now to find out why 39 files failed.
[04:12:47] <mjrosenb> it looks like it is mostly complaining about files that are not part of this build.
[04:12:59] <mjrosenb> that shouldn't prevent the server from working correctly, I hope.
[04:51:45] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[05:32:09] <mjrosenb> well, this is odd.  When I run haskell-language-server src/View.hs, it tells me "no prefixes matched", but when I just run haskell-language-server, it has no problems with src/View.hs
[06:26:47] <mjrosenb> http://dpaste.com//HYJPY2M7S -- that's the log from the server that emacs is using
[06:32:49] <mjrosenb> the log from running it manually is 330k, too large for dpaste (and probably most pastebin services).  Is there anything in particular I should paste from it?
[06:33:36] <mjrosenb> Files that failed: * /home/mjrosenb/projects/match-rex/src/mjrosenb@ultron.233021:1640656082
[06:33:39] <mjrosenb> Completed (81 files worked, 1 file failed)
[06:34:07] <mjrosenb> that's the end of it.  I have no clue what that mjrosenb@ultron file is.  It isn't actually on the dist after the process finishes.
[07:13:11] *** Quits: teto (~teto@2a01:cb14:11ac:8200:e346:3f21:c89:ec72) (Ping timeout: 252 seconds)
[08:32:32] <mjrosenb> oh, 233021 looks like it could be a port or pid?
[08:32:35] <mjrosenb> LSP :: Connected to [lsp-haskell:233032/starting].
[08:32:36] <mjrosenb> LSP :: lsp-haskell:233032 initialized successfully in folders: (/home/mjrosenb/projects/match-rex)
[08:33:43] <mjrosenb> so somehow, the existing lsp server process is interfering with the command line process?
[10:27:32] <mjrosenb> ok, and last bit of good news, it looks like I got it working everywhere.  I just had to remove all of the conditional lines from my .cabal file
[10:28:18] <mjrosenb> now to figure out how to get it working with them added back in :-)
[10:53:43] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[10:54:36] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Client Quit)
[12:37:03] *** Joins: arrowd (~arr@2.94.236.140)
[13:33:20] *** Joins: teto (~teto@2a01:cb14:11ac:8200:bc9f:4508:fc7c:9f93)
[13:52:57] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[14:48:41] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[15:49:04] <jneira[m]> michaelpj: the LSP pr broke the nix build
[15:49:08] <jneira[m]> ðŸ˜•
[15:49:32] <jneira[m]> we have to revise the conditions of the build workflow
[15:49:45] <michaelpj[m]> jneira: yeah, not surprising. Same issue as I pointed out before, bleeding edge hackage stuff
[15:49:53] <michaelpj[m]> I do think it shouldn't be blocking
[15:50:06] <michaelpj[m]> I can try and fix it but honestly I'm not that motivated (and I'm a nix user!)
[15:50:28] <jneira[m]> hmm I thought it was due the LSP bump
[15:50:51] <jneira[m]> so making it use last hackage version would work
[15:51:26] <michaelpj[m]> Nixpkgs won't have the new lsp version
[15:51:33] <michaelpj[m]> And we need it now, so it won't work without it
[15:51:46] <jneira[m]> I would make fail earlier or remove it tbh
[15:52:14] <jneira[m]> michaelpj[m]: ugh, so you need a tweak to make it use lastedt hackage version?
[15:52:26] <michaelpj[m]> Yes
[15:52:30] <michaelpj[m]> Which is a pain
[16:00:41] <jneira[m]> * ugh, so you need a tweak to make it use last hackage version?
[16:02:18] <jneira[m]> ok so it is matter of waiting for nixpkg reach that index, and it will fix itself?
[16:21:47] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[16:23:21] *** Joins: hololeap (~hololeap@user/hololeap)
[16:35:50] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[16:42:54] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[18:00:42] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[18:12:06] <michaelpj[m]> We'd have to update nixpkgs also but probably
[18:46:34] *** Joins: shapr` (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[18:47:38] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[18:50:31] *** Quits: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz) (Quit: leaving)
[18:51:14] *** shapr` is now known as shapr
[19:00:56] *** Joins: kremovtort (~kremovtor@broadband-77-37-212-157.ip.moscow.rt.ru)
[19:05:32] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Remote host closed the connection)
[19:05:45] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[19:30:06] *** Quits: nh2[m] (~nh2matrix@2001:470:69fc:105::3ae7) (Quit: You have been kicked for being idle)
[19:46:59] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 268 seconds)
[20:23:29] *** Joins: Morrow (~quassel@5.28.131.86)
[21:07:50] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[21:23:44] <mjrosenb> I'm guessing that maintaining a small overlay ontop of nixpkgs with the updated packages that hls needs is a bad idea?
[22:37:26] <michaelpj[m]> mjrosenb: yes we can do exactly that, it's just work that doesn't seem worth it
[22:57:17] *** Quits: Morrow (~quassel@5.28.131.86) (Ping timeout: 240 seconds)
[23:03:09] <mjrosenb> so, is there something that I can do with hie.yaml to be able to put the conditional compilation stuff back into my cabal file?
[23:10:46] *** Quits: arrowd (~arr@2.94.236.140) ()
[23:33:39] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[23:35:02] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 240 seconds)
[23:35:24] <michaelpj[m]> mjrosenb: maybe, have a look at https://github.com/haskell/hie-bios
[23:38:58] *** Joins: juhp (~juhp@128.106.188.82)
