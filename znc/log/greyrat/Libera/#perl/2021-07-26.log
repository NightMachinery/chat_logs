[00:12:16] *** Joins: ghoust (~ghoust@95.47.200.2)
[00:15:23] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[00:16:16] *** Quits: magla (~gelignite@55d4d566.access.ecotel.net) (Quit: Stay safe!)
[00:28:49] <shlomif> ehuelsmann[m]: simcop2387 : i hate copyright-based censorship: https://www.youtube.com/watch?v=gdVjVtpr55M :(
[00:28:49] <Paperbot> YouTube video linked by shlomif: [OFFICIAL VIDEO] The Sound of Silence - Pentatonix - published by PTXofficial
[00:29:58] <ehuelsmann[m]> shlomif: I wasn't talking of copyright. I was talking of mischievous behaviour between adults and children, if you want me to be that explicit.
[00:35:56] <shlomif> ehuelsmann[m]: ok, sorry for misunderstanding. \o/
[00:37:20] *** Quits: ghoust (~ghoust@95.47.200.2) (Quit: ghoust)
[00:37:37] <ehuelsmann[m]> it's ok. I'll just quickly forget what people were using the site for again.
[00:38:16] * ehuelsmann[m] thinks he removed all references to that by filtering all 300k posts on the site.
[00:38:56] *** Quits: mout (~mout@li1502-46.members.linode.com) (Quit: ZNC 1.9.x-git-141-9cd36055 - https://znc.in)
[00:40:23] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 255 seconds)
[00:42:06] *** Parts: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry) (-)
[00:44:28] <simcop2387> ehuelsmann[m]: fun thing i found in the db while sorting through spam and false positives for proper training data.  some bot had been sending this as the "langauge" field on the form.  cGVybC5ib3Qv');print(238947899389478923-34567343546345);//
[00:46:17] <simcop2387> ehuelsmann[m]: yea that's one reason why when i make something that allows for more access/sharing of stuff i plan on doing some light encryption and also require an account from some other system to do it (oauth via github, gitlab, etc.) where i can get an email or some other already verified identification that i can send along if needed.
[00:46:37] <simcop2387> with it just being text and simple stuff it's not got the target on it yet for that
[00:46:40] <simcop2387> thankfully
[00:49:51] <simcop2387> hrm someone pasted C++ code, should i consider it to be spam?
[00:50:33] <simcop2387> xenu: you apparently got a crapton of your stuff hit by the filter.
[00:50:58] <simcop2387> i blame power shell
[00:53:48] <shlomif> simcop2387: this c++ posting may have been a mistake.
[00:53:59] <simcop2387> c++ is always a mistake :)
[00:54:06] <ehuelsmann[m]> lol
[00:54:52] <shlomif> simcop2387: heh! simcop2387++
[00:55:21] <simcop2387> i should train gpt-3 on the spam and see what happens
[00:56:25] <simcop2387> interesting.  just found some content that's from an ip that is both real looking and also spammed during the same time.  must have been someone with an infected browser
[00:57:24] <simcop2387> OO, i had an offbrand leonerd spam me too, "Hi,  this is Leonrad.    Today I have good news for you, witch you can get $30 free bonus in a minute.  ..."
[00:58:44] <ehuelsmann[m]> people trying to mimic what's already on the site?
[00:59:09] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 276 seconds)
[00:59:29] *** Joins: mout (mout@2a01:7e01::f03c:92ff:fe71:e75a)
[01:02:40] <simcop2387> xenu: xenu.tk? did you point that at perl.bot at somepoint?
[01:02:56] <simcop2387> ehuelsmann[m]: it's not indexable so no idea
[01:03:01] *** Quits: Bossi_ (~quassel@p4fc2272c.dip0.t-ipconnect.de) (Quit: No Ping reply in 180 seconds.)
[01:03:09] <xenu> simcop2387: i own that domain but i believe i only use it as an email alias
[01:03:22] <xenu> why are you asking?
[01:03:29] <simcop2387> "Hello, After reviewing xenu.tk across multiple analytics tools, we became interested in potentially adding your website to our portfolio. Our typical website acquisition ranges ..."
[01:03:53] <xenu> it was probably pasted by me, sharing the spam i received
[01:04:01] <simcop2387> ah that might be
[01:04:21] <simcop2387> there are other pastes from the ip that aren't spam
[01:04:33] <simcop2387> this would also be why you're getting hit by the spam filters so much :)
[01:05:34] *** Joins: Bossi (~quassel@p4fc2272c.dip0.t-ipconnect.de)
[01:11:06] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 240 seconds)
[01:14:54] *** Quits: Trigon (~Thunderbi@73.127.1.41) (Remote host closed the connection)
[01:18:29] <xenu> tbh i believe that spamfiltering is a fool's errand, just 1. hide the pastes from google to make them a worthless spam target 2. honor takedown requests
[01:19:36] <perlbot> simcop2387 pasted a new file at https://perl.bot/p/ufsdnr - some spam data
[01:20:01] <simcop2387> xenu: that's already how it works, still get 15%ish percent spam.
[01:20:13] <xenu> well, you can always ignore it :P
[01:20:24] <xenu> i think that is what the big paste sites do
[01:20:28] <xenu> at least it seems so
[01:20:45] <xenu> the only problem is paste announcements i guess
[01:20:48] <simcop2387> i have for a long time but it's picked up again so i'm going one more step to prevent the announcements from happening as easily.  that way it's more useful to us with me doing less overall
[01:22:00] <simcop2387> once this is done i'll be able to have the normal pastebinadmin commands on the bot help train it more.  and add a command for marking ham.  then it's 99% less work for me since i don't have to go out of irc to do it
[01:28:25] <ology> proper laziness++
[01:29:56] <simcop2387> the advantage here is that human language generally looks so different to code that it should be very bimodal statistically.  very little overlap
[01:36:39] <simcop2387> looks like i've got a misconfig on the search config and need to fix it.  https://perl.bot/p/s9cr6t
[01:36:40] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[01:36:49] <simcop2387> stopwords shouldn't be in there
[01:52:10] <simcop2387> alright this looks better now
[01:52:43] <simcop2387> top 20 words in each list, https://perl.bot/p/i1ks3x
[01:52:43] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[01:53:21] <simcop2387> alright now to code up a small AI::NaiveBayes calculation function
[01:54:02] <ehuelsmann[m]> simcop2387: maybe you don't need to repeat those in "ALL" in HAM/SPAM ? 
[01:54:10] <ehuelsmann[m]> if I understand the meaning of "ALL" correctly.
[01:54:59] <simcop2387> all is just for my own use, it's the collection of trained and untrained
[01:55:09] <simcop2387> won't be used in the filter itself
[01:55:17] <ehuelsmann[m]> ah. ok.
[01:55:33] <simcop2387> it's to help sanity check, like finding out that i'm including stop words accidentally :)
[01:56:25] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 258 seconds)
[01:56:27] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[01:56:46] <simcop2387> so i'll drop the banword functionality and keep the ip/asn functionality.  that'll let us ban isps/vpns easier while also training it.
[01:56:46] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[01:57:26] <ehuelsmann[m]> check.
[01:57:31] <ehuelsmann[m]> well, that's it for me for today.
[01:57:32] <ehuelsmann[m]> later!
[01:58:33] <simcop2387> sleep well
[02:01:30] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[02:04:13] <v`> https://d2w9rnfcy7mm78.cloudfront.net/9631055/original_f49ede18db725b9c6f1dba9d3ebce514.png?1606224437?bc=0
[02:10:12] *** Quits: adherzog (uid387168@id-387168.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[02:10:42] *** Joins: whynot (~whynot@37.73.4.178)
[02:19:50] <v`> i haven't watched a moment of this summer olympics, is that weird
[02:20:33] <v`> it's like, with covid, with the pandemic, i'm unconsciously not into the olympics right now
[02:20:39] <v`> u know what i mean?
[02:21:02] <v`> i can't really explain it
[02:31:25] *** Quits: gce108 (~gce@user/gce108) (Read error: Connection reset by peer)
[02:31:26] *** Joins: gce108__ (~gce@64-250-5-223.gvec.net)
[02:31:29] *** Joins: scp1 (~scp1@host-95-197-3-90.mobileonline.telia.com)
[02:31:29] *** Quits: scp1 (~scp1@host-95-197-3-90.mobileonline.telia.com) (Changing host)
[02:31:29] *** Joins: scp1 (~scp1@user/japh)
[02:32:01] *** Joins: XV8 (~XV8@2601:5cb:c001:50:ae69:13da:1cb2:afc9)
[02:34:56] *** Quits: japh (~scp1@user/japh) (Ping timeout: 265 seconds)
[02:47:47] *** Quits: bobsy (~bobsy@eth122.vic.adsl.internode.on.net) (Ping timeout: 258 seconds)
[02:47:57] *** Joins: bobsy (~bobsy@eth122.vic.adsl.internode.on.net)
[02:53:44] <simcop2387> I barely watched them before, now its even less
[03:00:10] *** Quits: brtastic (~bartosz@185.24.91.138) (Ping timeout: 240 seconds)
[03:01:49] * GumbyPAN CPAN Upload: Lang-Go-Mod-0.001 by BCLAWSIE https://metacpan.org/release/BCLAWSIE/Lang-Go-Mod-0.001
[03:20:13] *** Joins: whynot_ (~whynot@88.155.80.214)
[03:20:27] *** Quits: whynot (~whynot@37.73.4.178) (Killed (NickServ (GHOST command used by whynot_!~whynot@88.155.80.214)))
[03:20:37] *** whynot_ is now known as whynot
[03:55:52] <Grinnz> "My name is Maria Juarez from Landscape Magnamed Tecnologia S/A, Our company is interested in your product We request you to provide us with the best possible price,Specifications and delivery time for us to proceed further on our order ."
[03:55:58] <Grinnz> sent about perldoc.perl.org, of course
[04:06:39] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[04:12:20] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:12:25] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[04:15:30] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[04:18:08] *** Quits: nirnam (~nirnam@1.47.30.178) (Ping timeout: 256 seconds)
[04:24:03] <ology> Take your time. "best possible"
[04:26:34] <xenu> https://news.ycombinator.com/item?id=27952135
[04:26:34] <Paperbot> Link title(s): [ 16/30 Google results for PHP tutorials contain SQL injection vulnerabilities | Hacker News ]
[04:26:51] <xenu> apparently we aren't the only ones who suffer from the bad tutorials problem
[04:28:19] <simcop2387> Grinnz: i've always been tempted to send a response that it'll take 10 years and cost 32 billion dollars and see what they send back
[04:28:30] <simcop2387> xenu: or bad official docs
[04:29:12] <genio> 86f inside the house at almost 8pm. Sigh
[04:29:18] <simcop2387> Grinnz: and then if they argue about the time line, start bringing up stuff from timecube
[04:29:32] <simcop2387> hrm, a gpt-* over trained on timecube
[04:29:56] <genio> Clothes dryer and AC just died in the same weekend
[04:30:08] <Grinnz> ooh, if we can make the AIs text to speech convincingly, we could automate the kitboga approach
[04:30:53] <simcop2387> genio: that sucks.  you'll need to wash the clothes less if you replace the ac first
[04:31:45] <simcop2387> Grinnz: the real problem is the speech to text speed, nothing that does "streaming" recognition is all that accurate still.  though i suppose that's not an issue for that use
[04:32:01] <Grinnz> yeah, realtime is hard
[04:32:55] <simcop2387> this is one of the best that's open at least, from google.  https://github.com/google/live-transcribe-speech-engine
[04:32:56] <Paperbot> Link title(s): [ GitHub - google/live-transcribe-speech-engine: Live Transcribe is an Android application that pro... ]
[04:33:13] <simcop2387> there's some non-FAANG ones out there but they're also not very great either as i understand
[04:34:14] <Grinnz> apoparently kitboga has thought of this https://www.bbc.com/news/av/technology-56458267
[04:34:14] <Paperbot> Link title(s): [ Kitboga: How AI is helping me waste scammers’ time - BBC News ]
[04:34:32] <simcop2387> that doesn't surprise me at all
[04:34:54] <genio> Ugh. Gonna be a loooing night
[04:34:59] <simcop2387> if there wasn't so much lag, Twitch Scams a scammer.  vote for responses generated by ai
[04:35:04] <genio> Long too. Sheesh
[04:35:46] <simcop2387> genio: i can't remember, are you in FL with basically 100% humidity 365/24/7?
[04:36:13] <simcop2387> if not a swamp cooler might help for a much cheaper price while your AC is dead
[04:39:03] *** Quits: blinky42 (~quassel@user/blinky42) (Quit: No Ping reply in 180 seconds.)
[04:39:53] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:40:22] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[04:40:22] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[04:40:22] *** Joins: blinky42 (~quassel@user/blinky42)
[04:42:08] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[04:45:35] *** Joins: metasintactic (~thunder@37.120.152.148)
[04:45:44] *** Quits: metasintactic (~thunder@37.120.152.148) (Changing host)
[04:45:44] *** Joins: metasintactic (~thunder@user/thunder)
[04:45:44] *** Quits: thunder (~thunder@user/thunder) (Killed (mercury.libera.chat (Nickname regained by services)))
[04:45:44] *** metasintactic is now known as thunder
[04:51:02] <v`> is swamp cooler the kind where u put bags of ice in it and fans blow air across the bags of ice
[04:51:14] *** klysm is now known as klys
[04:52:15] <simcop2387> v`: sort of, you use cold water not ice.  the idea is to encourage the water to evaporate and it'll steal heat out of the air to do it.
[04:52:23] <simcop2387> doesn't work in 100% humidity though
[04:52:29] <simcop2387> also, meteor.  https://twitter.com/dexcash/status/1419080071621619715?s=21
[04:52:30] <Paperbot> adressami (@dexcash) 1d42m ago: #METEORITT#Larvik#Tesla
[04:53:26] <simcop2387> v`: here's a 30 minute rabbit hole on the topic, https://www.youtube.com/watch?v=2horH-IeurA
[04:53:26] <Paperbot> YouTube video linked by simcop2387: Personal "air conditioners" aren't what they seem - published by Technology Connections
[05:00:56] *** Parts: yaya (~yaya@user/yaya) ()
[05:04:39] *** Joins: nirnam (~nirnam@1.46.147.125)
[05:05:07] <genio> simcop2387: yep
[05:12:29] <genio> About to ice bucket it up
[05:33:13] *** Quits: DrJaneyDoe (~johndoe@S01069050ca4e3573.cg.shawcable.net) (Quit: Lost terminal)
[05:46:58] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[05:52:16] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:52:33] *** Joins: YaoNai (~YaoNai@user/yaonai)
[05:58:06] *** Quits: whynot (~whynot@88.155.80.214) (Quit: leaving)
[05:59:11] *** Joins: gast0n (~g4570n@user/gast0n)
[06:01:39] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[06:15:07] *** Joins: Su-Shee (~Susanne@p4ff49f86.dip0.t-ipconnect.de)
[06:18:16] *** Quits: Su-Shee_ (~Susanne@p4ffc7509.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:22:11] * GumbyPAN CPAN Upload: DNS-Unbound-0.24_01 by FELIPE https://metacpan.org/release/FELIPE/DNS-Unbound-0.24_01
[06:32:12] * GumbyPAN CPAN Upload: DNS-Unbound-0.24_02 by FELIPE https://metacpan.org/release/FELIPE/DNS-Unbound-0.24_02
[06:32:44] *** Quits: nirnam (~nirnam@1.46.147.125) (Ping timeout: 255 seconds)
[06:34:34] *** Joins: nirnam (~nirnam@1.46.138.159)
[06:42:13] * GumbyPAN CPAN Upload: PLS-0.893 by MREISNER https://metacpan.org/release/MREISNER/PLS-0.893
[06:46:09] *** summerisle is now known as eof
[06:56:24] <simcop2387> BLAKE3 is now 1.0, https://github.com/BLAKE3-team/BLAKE3/releases/tag/1.0.0 faster than sha-1
[06:56:24] <Paperbot> Link title(s): [ Release 1.0.0 · BLAKE3-team/BLAKE3 · GitHub ]
[06:57:08] <simcop2387> ok faster is an understatement, see graph, https://github.com/BLAKE3-team/BLAKE3
[06:57:08] <Paperbot> Link title(s): [ GitHub - BLAKE3-team/BLAKE3: the official Rust and C implementations of the BLAKE3 cryptographic ... ]
[06:57:15] * GumbyPAN CPAN Upload: PLS-0.894 by MREISNER https://metacpan.org/release/MREISNER/PLS-0.894
[07:00:28] <simcop2387> i might try to make an ffi platypus module for using it
[07:00:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[07:00:56] *** FinnElija is now known as Guest7424
[07:00:56] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:00:56] *** Quits: Guest7424 (~finn_elij@user/finn-elija/x-0085643) (Killed (iridium.libera.chat (Nickname regained by services)))
[07:00:56] *** finn_elija is now known as FinnElija
[07:01:49] <xq> will that require a rust toolchain during module install?
[07:05:42] <simcop2387> there's a c version so i'd probably use that for simplicity
[07:08:08] *** Joins: tabris_ (~northman@c-107-4-92-118.hsd1.mi.comcast.net)
[07:11:13] <xq> what is this "cpb" unit they use in figure 3 that shows single threaded performance benchmark?
[07:11:28] <xq> cycles per byte or something?
[07:12:06] *** Quits: tabris (~northman@mobile-107-92-121-144.mycingular.net) (Ping timeout: 256 seconds)
[07:13:59] <xq> so the single threaded version is between 3 and 12 times faster than sha-512 depending on input size
[07:19:38] <xq> the github page contains a note that this hash function should not be used for password hashing
[07:20:20] <xq> and in my experience any hashing that will be performed on a result of an IO operation (like hashing a file) is going to be bottlenecked by this IO operation
[07:20:34] <xq> so not sure what the immediate usefulness of BLAKE3 is
[07:22:15] <pragma-> fast hasing
[07:22:17] <pragma-> hashing
[07:22:27] <xq> what will you be hashing?
[07:22:38] <pragma-> any keys
[07:22:51] <xq> anything more specific?
[07:22:57] <pragma-> no because i'm not using it
[07:23:02] <pragma-> but anything you'd use a hash for...
[07:27:30] <xq> the only use case other than the above two that I can think of is checksumming some kind of streamed network contents
[07:28:20] <xq> and for this case it would be interesting to see a benchmark of this against crc32 assembly instruction in i5/i7 processors
[07:29:23] *** Quits: PonyBlocks (ponyblocks@user/ponyblocks) (Ping timeout: 252 seconds)
[07:29:23] *** Quits: Pny (pny1312@user/pny) (Ping timeout: 252 seconds)
[07:31:37] <pragma-> I'm no expert on the differences between the hashing algorithms, but I was thinking it could be used for, e.g., hashing files for git instead of sha256 or whatever it uses now. git hashes need to be fast and non-collisiony.
[07:32:31] <pragma-> if blake3 is as non-collisiony as sha256 (or whatever git uses)
[07:32:34] <xenu> blake3 is cryptographcially secure. and you *do* want a fast hashing algorithm
[07:32:48] <pragma-> not having collisions is a bit more important than being fast, in git's case
[07:32:49] <xenu> you don't, however, want to use a hashing algorithm for passwords
[07:32:52] <xq> as I mentioned above, hashing a file will most likely be bottlenecked by reading said file from the disk
[07:33:00] <xq> not by the algorithm speed
[07:33:07] <pragma-> indeed, you want very slow algorithms for passwords
[07:37:30] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[07:50:19] *** Joins: Martchus (~martchus@2a01:c22:6fd6:f700:d250:99ff:fe49:3cce)
[07:51:13] *** Quits: Martchus_ (~martchus@2a01:c22:76eb:9200:d250:99ff:fe49:3cce) (Ping timeout: 250 seconds)
[07:55:59] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 258 seconds)
[07:56:21] * GumbyPAN CPAN Upload: App-efm_perl-0.05 by DELPHINUS https://metacpan.org/release/DELPHINUS/App-efm_perl-0.05
[08:01:21] * GumbyPAN CPAN Upload: Curses-1.38 by GIRAFFED https://metacpan.org/release/GIRAFFED/Curses-1.38
[08:30:49] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:31:25] * GumbyPAN CPAN Upload: Module-Generic-v0.15.5 by JDEGUEST https://metacpan.org/release/JDEGUEST/Module-Generic-v0.15.5
[08:34:54] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[08:36:25] * GumbyPAN CPAN Upload: App-efm_perl-0.06 by DELPHINUS https://metacpan.org/release/DELPHINUS/App-efm_perl-0.06
[08:37:30] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[08:39:57] *** Joins: Pny (pny1312@2605:6400:c847:1985::5891)
[08:47:14] <shlomif> Mon 26 Jul 07:17:14 IDT 2021
[08:47:47] <shlomif> manic monday
[09:00:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:03:27] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 258 seconds)
[09:06:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[09:06:29] *** Quits: nirnam (~nirnam@1.46.138.159) (Read error: Connection reset by peer)
[09:06:51] *** Joins: nirnam (~nirnam@1.46.138.159)
[09:16:29] * GumbyPAN CPAN Upload: App-ansicolumn-1.10 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-ansicolumn-1.10
[09:21:30] * GumbyPAN CPAN Upload: PDL-2.053 by ETJ https://metacpan.org/release/ETJ/PDL-2.053
[09:27:35] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[09:28:49] *** Quits: Jonno_FTW (~come@api.carswap.me) (Quit: Reconnecting)
[09:28:56] *** Joins: Jonno_FTW (~come@api.carswap.me)
[09:29:16] *** Joins: PonyBlocks-_- (ponyblocks@2605:6400:c847:1478::8741)
[09:30:30] *** Quits: Jonno_FTW (~come@api.carswap.me) (Changing host)
[09:30:30] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[09:30:34] *** Quits: Md (~md@libera/staff/md) (Quit: I ♥ Unicode)
[09:32:06] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[09:40:25] *** Quits: ignarps (~iggy@user/ignarps) (*.net *.split)
[09:40:25] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[09:40:25] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[09:40:25] *** Quits: castaway (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[09:40:25] *** Quits: marcus (~marcus@mojo/viking/marcus) (*.net *.split)
[09:40:25] *** Quits: batman (~batman@50.31.137.146) (*.net *.split)
[09:40:25] *** Quits: ether (~karene@user/ether) (*.net *.split)
[09:40:25] *** Quits: dg (~dgl@dg.wtf) (*.net *.split)
[09:40:25] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (*.net *.split)
[09:40:25] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:40:25] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[09:40:25] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[09:40:26] *** Quits: Botje- (~Botje@mang.sgaap.be) (*.net *.split)
[09:40:26] *** Quits: polettix_ (~polettixx@linode.polettix.it) (*.net *.split)
[09:40:26] *** Quits: jayray (~jayray@user/jayray) (*.net *.split)
[09:40:26] *** Quits: saorge (~saorge@ns378138.ip-5-196-67.eu) (*.net *.split)
[09:40:26] *** Quits: Getty (getty@stardestroyer.de) (*.net *.split)
[09:40:26] *** Quits: nicomen (~nicolas@178.124.223.35.bc.googleusercontent.com) (*.net *.split)
[09:40:26] *** Quits: skyl4rk (~tlvb@user/tlvb) (*.net *.split)
[09:40:26] *** Quits: huf (~huf@user/huf) (*.net *.split)
[09:40:26] *** Quits: Nowaker (~quassel@188.116.38.80) (*.net *.split)
[09:40:27] *** Joins: nowaker_ (~quassel@188.116.38.80)
[09:40:28] *** Joins: ether_ (~karene@vps-6c71e929.vps.ovh.net)
[09:40:28] *** Joins: Botje-_ (~Botje@mang.sgaap.be)
[09:40:28] *** Joins: nicomen_ (~nicolas@178.124.223.35.bc.googleusercontent.com)
[09:40:30] *** Quits: ether_ (~karene@vps-6c71e929.vps.ovh.net) (Changing host)
[09:40:30] *** Joins: ether_ (~karene@user/ether)
[09:40:30] *** Joins: dgl (~dgl@dg.wtf)
[09:40:31] *** Joins: saorge_ (~saorge@ns378138.ip-5-196-67.eu)
[09:40:32] *** Joins: Getty (getty@stardestroyer.de)
[09:40:33] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[09:40:33] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[09:40:33] *** Joins: bleb_ (~cm@user/bleb)
[09:40:34] *** Joins: polettix (~polettixx@linode.polettix.it)
[09:40:43] *** Joins: castaway (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[09:40:45] *** Joins: huf (~huf@user/huf)
[09:40:53] *** Joins: skyl4rk (~tlvb@tlvb.se)
[09:40:59] *** Quits: skyl4rk (~tlvb@tlvb.se) (Signing in (skyl4rk))
[09:40:59] *** Joins: skyl4rk (~tlvb@user/tlvb)
[09:41:00] *** Joins: jayray (~jayray@user/jayray)
[09:41:01] *** Joins: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net)
[09:41:05] *** Joins: marcus (~marcus@mojo/viking/marcus)
[09:41:20] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:41:26] *** Joins: ignarps (~iggy@user/ignarps)
[09:41:49] *** Joins: batman (~batman@50.31.137.146)
[09:42:07] *** Quits: batman (~batman@50.31.137.146) (Remote host closed the connection)
[09:42:30] *** Joins: batman (~batman@50.31.137.146)
[09:42:56] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[09:43:36] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (*.net *.split)
[09:43:36] *** Quits: waltman (waltman@2601:4a:701:4451:ec64:4591:840f:1886) (*.net *.split)
[09:43:37] *** Quits: Bluewind (~Bluewind@user/bluewind) (*.net *.split)
[09:43:37] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (*.net *.split)
[09:43:37] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (*.net *.split)
[09:43:37] *** Quits: f3ew (~f3ew@2a01:4f9:4b:3b57::2) (*.net *.split)
[09:43:47] *** Joins: waltman (waltman@2601:4a:701:4451:1fb5:8c3c:72c7:f34f)
[09:43:53] *** Joins: f3ew (~f3ew@2a01:4f9:4b:3b57::2)
[09:43:58] *** Joins: Bluewind (~Bluewind@user/bluewind)
[09:44:16] *** Joins: Ekho (~Ekho@user/ekho)
[09:46:03] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[09:48:01] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[09:48:49] *** Joins: seoul_man (~meh@097-080-088-148.res.spectrum.com)
[09:49:09] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[09:49:09] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[09:55:51] *** Quits: nowaker_ (~quassel@188.116.38.80) (Quit: No Ping reply in 180 seconds.)
[09:58:08] *** Joins: Nowaker (~quassel@188.116.38.80)
[10:15:23] *** Quits: mout (mout@2a01:7e01::f03c:92ff:fe71:e75a) (Quit: ZNC 1.9.x-git-141-9cd36055 - https://znc.in)
[10:22:25] *** Joins: Adura (~Adura@user/adura)
[10:23:30] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 240 seconds)
[10:25:19] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:36:51] *** Joins: habamax (~habamax@user/habamax)
[10:48:33] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[10:51:39] * GumbyPAN CPAN Upload: App-efm_perl-1.0.0 by DELPHINUS https://metacpan.org/release/DELPHINUS/App-efm_perl-1.0.0
[10:59:03] *** Joins: mout (mout@2a01:7e01::f03c:92ff:fe71:e75a)
[11:03:44] *** Quits: mout (mout@2a01:7e01::f03c:92ff:fe71:e75a) (Client Quit)
[11:05:47] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[11:06:41] *** Joins: ethoxy (~root@echelon.lucif3r.ru)
[11:08:22] *** Joins: horsepatat (~horsepata@80.89.73.99)
[11:08:58] *** Quits: randir (~randir@95-26-230-72.broadband.corbina.ru) (Remote host closed the connection)
[11:11:07] *** Joins: tejr (~tejr@user/tejr)
[11:19:50] *** Joins: randir (~randir@93.159.239.42)
[11:32:11] *** Quits: horsepatat (~horsepata@80.89.73.99) (Ping timeout: 258 seconds)
[11:34:46] *** Joins: ufobat (~martin@dynamic-095-117-055-226.95.117.pool.telefonica.de)
[11:36:06] <shlomif> hi all! happy manic monday
[11:46:22] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 268 seconds)
[11:50:14] *** Joins: Pali (~pali@user/pali)
[11:50:27] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:50:42] *** Joins: randir_ (~randir@95-26-230-72.broadband.corbina.ru)
[11:51:15] *** dgl is now known as dg
[11:55:00] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 276 seconds)
[12:02:34] *** Joins: brtastic (~Thunderbi@185.24.91.138)
[12:06:47] *** Joins: art1 (~romeyke@p200300ccdf072b00abef75335fc460d5.dip0.t-ipconnect.de)
[12:20:29] *** Joins: choroba (~E.Choroba@88.146.255.106)
[12:27:56] *** Joins: kensanata (~user@user/kensanata)
[12:30:01] *** Joins: ome7Wi5S (~Ruw6Uhei@dynamic-193-228-164-37.ppp.kmv.ru)
[12:30:06] <art1> Moin, Which of the SAML modules would you recommend (and why, if applicable)? Net::SAML, Net::SAML2, … others
[12:30:10] <art1> Background: I want to authenticate as a client against a SAML instance
[12:35:26] *** Quits: Pali (~pali@user/pali) (Ping timeout: 258 seconds)
[12:36:08] <Botje-_> err
[12:36:23] <Botje-_> are you a service provider or a resource provider?
[12:36:39] <Botje-_> (probably getting the terminology wrong here)
[12:36:55] *** Botje-_ is now known as Botje
[12:37:10] <Botje> Because "authenticate as a client" is explicitly not part of the SAML spec.
[12:37:37] <Botje> you may be asked to do so as part of the SAML login flow, but you do not need any SAML modules for that. Clients just see HTTP redirects
[12:37:58] <Botje> you only need SAML modules if you are a resource provider asking clients to authenticate to access you
[12:41:26] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:41:50] <art1> Botje: Until now, I used web services and had to authenticate via PDS beforehand, and then passed the PDS token to the web services.
[12:41:50] <art1> Now the web service provider has switched to SAML authentication. Since the web API has hardly changed, it looks like a SAML token is used instead of the PDS token.
[12:41:50] <art1> I would like to get the token somehow. Ideas?
[12:44:44] <Botje> figure out who the saml identity provider is
[12:45:31] <art1> Botje: The identity provider is a MS Active Directory server
[12:45:33] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[12:49:00] *** Joins: horsepatat (~horsepata@80.89.73.99)
[12:50:00] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 258 seconds)
[12:51:59] <Botje> I really cannot find examples of SAML flows that end up with you, the client, having a token in hand.
[12:52:21] <Botje> it is always initiated by a resource provider too.
[12:52:44] <Botje> suggest you contact the owners of the web service and ask them how you're supposed to obtain a token.
[12:53:39] <art1> Botje: Thanks.
[12:54:10] <El_Che> There is no token in the flow
[12:54:54] <El_Che> your client app (service provider) need to be registered by the Identity Provider and it will be added to the metadata
[12:55:48] <El_Che> the security is done by protecting the registered endpoint and additionally a certificate (can be self-signed) for signing and encryptiong (the cert is part of the registration)
[12:58:50] <huf> .... is the leenode drama just .. over?
[12:58:56] <huf> no more delicious drama?
[13:00:10] *** Quits: ome7Wi5S (~Ruw6Uhei@dynamic-193-228-164-37.ppp.kmv.ru) (Quit: WeeChat 3.2)
[13:00:38] <El_Che> huf, you could write a bot
[13:01:44] <huf> :)
[13:11:16] *** Joins: randir (~randir@93.159.239.42)
[13:15:18] *** Quits: randir_ (~randir@95-26-230-72.broadband.corbina.ru) (Ping timeout: 258 seconds)
[13:16:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 258 seconds)
[13:18:29] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[13:18:44] *** Quits: horsepatat (~horsepata@80.89.73.99) (Ping timeout: 256 seconds)
[13:21:55] *** Joins: horsepatat (~horsepata@80.89.73.99)
[13:23:11] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 268 seconds)
[13:33:07] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:41:31] <shlomif> huf: El_Che : alohapaca! sup?
[13:42:34] *** Quits: horsepatat (~horsepata@80.89.73.99) (Ping timeout: 240 seconds)
[13:45:41] *** Quits: XV8 (~XV8@2601:5cb:c001:50:ae69:13da:1cb2:afc9) (Ping timeout: 250 seconds)
[13:48:41] *** Joins: mattil (~mattilinn@87-92-202-252.rev.dnainternet.fi)
[13:48:51] *** Joins: mattilinnanvuori (~mattilinn@87-92-202-252.rev.dnainternet.fi)
[14:07:25] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[14:10:51] *** Joins: anthk_ (~anthk_@92.176.105.30)
[14:12:47] *** Parts: mattilinnanvuori (~mattilinn@87-92-202-252.rev.dnainternet.fi) (Leaving)
[14:30:53] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:32:47] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:31] *** Joins: csrf (~csrf@user/csrf)
[15:08:03] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[15:22:13] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:33:38] *** Joins: mout (~mout@li1502-46.members.linode.com)
[15:34:34] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 240 seconds)
[15:36:23] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:49:41] *** Joins: diskin_ (~diskin@31.23.24.77)
[15:49:41] *** Quits: diskin (~diskin@87.117.53.109) (Killed (mercury.libera.chat (Nickname regained by services)))
[15:49:41] *** diskin_ is now known as diskin
[16:15:19] <LeoNerd> A question for data-visualisation folks: I'm looking for the name of this type of graph - https://twitter.com/cpan_pevans/status/1419618753801818116   Any suggestions?
[16:15:19] <Paperbot> Paul Evans (@cpan_pevans) 24m19s ago: Data visualisation folks: Is there a standard name for the sort of graph that shows both a rate and the related gauge at the same time? For example this one: it's showing rate of rainfall (in mm/hour) and the total cumulative amount of rain (in mm).
[16:17:59] <BinGOs> "a graph"
[16:18:25] <LeoNerd> well, sure ;)  but I know dataviz people moreso than most, tend to have fancy names for -eeeverything-
[16:18:30] <LeoNerd> e.g. yesterday I learned what a "carpet plot" is
[16:18:39] <LeoNerd> So I'm 99.9% sure this kind of graph will have a name
[16:23:10] *** Quits: diskin (~diskin@31.23.24.77) (Remote host closed the connection)
[16:25:11] <BinGOs> it looks like a layered area chart
[16:25:53] <LeoNerd> I don't think that captures the essence of what I have here
[16:26:36] <LeoNerd> My chart shows two fundamentally different kinds of things (a rate, and a gauge), on two separate Y axes.. they just happen to overlap on the same plot area. The critical point is that the gauge is just the integral of the rate...
[16:26:38] <BinGOs> then we have reached the limit of my knowledge and interest in charts
[16:26:57] <LeoNerd> That latter part is the key fact I want to convey in the name
[16:27:50] *** Quits: nirnam (~nirnam@1.46.138.159) (Remote host closed the connection)
[16:35:21] *** Joins: kensanata (~user@user/kensanata)
[16:46:34] *** Quits: surfist (surfist@gateway02.insomnia247.nl) (Ping timeout: 265 seconds)
[16:48:38] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[16:49:36] *** Joins: woei (~woei@144.248.22.115)
[16:49:51] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[16:49:53] <Botje> LeoNerd: https://en.wikipedia.org/wiki/Pareto_chart
[16:49:53] <Paperbot> Link title(s): [ Pareto chart - Wikipedia ]
[16:50:05] <Botje> The left vertical axis is the frequency of occurrence, but it can alternatively represent cost or another important unit of measure. The right vertical axis is the cumulative percentage of the total number of occurrences, total cost, or total of the particular unit of measure. 
[16:57:37] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:04:13] <LeoNerd> Oooh! Excellent :)
[17:04:58] <LeoNerd> Hrmm... Ah; that's sortof it. My one is showing a continuous time across the X axis, rather than a few discrete categories. But that's very similar yes
[17:05:27] <Botje> just take bins of 1 s *ducks*
[17:06:09] <LeoNerd> Basically I want a name for it so I can claim "It is impossible to make ${charts} in prometheus/grafana", so as to provoke people into telling me how to make them
[17:07:19] <Botje> :P
[17:07:35] <LeoNerd> (because, currently I do think it's impossible)
[17:08:47] *** Joins: xenial-user10 (~androirc@20014C4C17E1D20040DA145DF5E27516.catv.pool.telekom.hu)
[17:09:53] <Botje> I should re-learn promql
[17:10:04] <Botje> sucks that I don't have an excuse to use it at work
[17:10:27] <LeoNerd> I'm using it for my weather station
[17:10:38] <LeoNerd> I find these sorts of personal projects help with that motivation
[17:14:18] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:20:14] *** Joins: XV8 (~XV8@2601:5cb:c001:50:c741:f518:eec7:c236)
[17:24:18] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 240 seconds)
[17:25:01] <Mandevil> Hm, sub signatures not work as expected with Moo methods...
[17:25:20] <Mandevil> add($self, @fields), then callsed as $instance->add(@something) fails
[17:26:01] <LeoNerd> That should be fine
[17:26:07] <haarg> how does it fail?
[17:26:18] <Mandevil> It fails to match the method name.
[17:26:25] <Mandevil> It thinks it's not there at all.
[17:26:42] <LeoNerd> Er.. that sounds like something big is wrong. Can you show some code?
[17:27:38] <haarg> Moo doesn't do anything that would interfere with that, so the problem is probably elsewhere. but showing code would help.
[17:28:09] <Mandevil> Method declaration: https://f.perl.bot/p/ckc221
[17:28:09] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[17:29:00] <Botje> Mandevil: why are you poking at @_ instead of @fields?
[17:29:17] <Botje> also, what do you hope to accomplish with y/10/12/?
[17:29:50] <Mandevil> Replace 0 with 2
[17:29:57] <haarg> also, why shift into $key if you are already using signatures
[17:30:14] <Mandevil> haarg: I want to remove the leftmost element of the @fields array.
[17:30:21] <Mandevil> And put it into $key
[17:30:24] <haarg> https://perlbot.pl/p/twdnm2 possibly this is what you want
[17:30:25] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[17:30:49] <haarg> that's all irrelevant to a method not found error though
[17:30:58] *** Joins: gareppa (~gareppa@user/gareppa)
[17:31:07] <Mandevil> https://f.perl.bot/p/w75h27 invocation and error
[17:31:07] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[17:31:10] <ilmari> y/// is tr/// not s///, which is probably what you want
[17:31:21] * GumbyPAN CPAN Upload: TOML-Tiny-0.13 by JEFFOBER https://metacpan.org/release/JEFFOBER/TOML-Tiny-0.13
[17:31:46] <haarg> you've stringified your object somehow
[17:31:50] <ilmari> Mandevil: $h2 is the stringified form of the reference to your object, not the actual reference
[17:31:50] <Botje> Mandevil: error states that you accidentally stringified $h2
[17:32:14] <Mandevil> Huh... now i see it
[17:32:22] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (Quit: WeeChat 2.3)
[17:32:23] <LeoNerd> .oO(  use strict 'strings';  to the rescue ;) )
[17:32:30] <Botje> eval: my $x = bless {}, "Spam::Host"; $x->add_host()
[17:32:32] <perlbot> Botje: ERROR: Can't locate object method "add_host" via package "Spam::Host" at (IRC) line 1. 
[17:32:37] <Botje> is what you would normally get
[17:32:41] <Botje> hurray for rubber ducking
[17:33:13] <Botje> Mandevil: also note the "2x55a..." there at the end. 
[17:33:26] <Botje> Mandevil: that's because you y///'ed @_[0]
[17:33:35] <Mandevil> Hm
[17:33:45] <Botje> which is an alias to $self
[17:33:54] <Mandevil> Of course
[17:33:56] <Mandevil> I'm dumb.
[17:33:59] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[17:34:29] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[17:34:31] <Mandevil> Yeah, that y/// should be done on $fields[], not $_
[17:34:41] <Mandevil> I'm refactoring old code and missed this
[17:34:59] <haarg> are you sure you want y/// ?
[17:35:16] <Mandevil> SNMP ifOperStatus has 1 as up and 2 as down.
[17:35:22] <Mandevil> And I want to store down as 0 and up as 1
[17:35:24] <Mandevil> In db.
[17:35:42] <haarg> y/10/12/ could be written as y/0/2/
[17:35:53] <Mandevil> Yeah, this code is so old.
[17:36:03] <Mandevil> So it's mostly quite bad.
[17:36:23] <haarg> so my paste is probably what you want then
[17:36:26] <Mandevil> Yup
[17:36:40] <Mandevil> Thanks guys, got it sorted.
[17:37:04] <Mandevil> I'm just modularizing big monolithic chunk of code.
[17:40:14] *** Joins: surfist (surfist@gateway02.insomnia247.nl)
[17:44:06] <ilmari> you can do `tr/2/0/ for @fields[0, 10];` to simplify it a bit more
[17:44:22] <ilmari> but that might be getting a bit close to the golfcourse
[17:45:34] *** Quits: xenial-user10 (~androirc@20014C4C17E1D20040DA145DF5E27516.catv.pool.telekom.hu) (Remote host closed the connection)
[17:45:52] *** Joins: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[17:45:53] <Mandevil> What's the diff between tr/// and y///?
[17:46:21] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:46:24] <haarg> one is spelled tr and one is spelled y
[17:46:37] <Mandevil> Oh, it's the same...
[17:46:42] <haarg> yep
[17:47:18] <ilmari> like for and foreach
[17:47:45] <ilmari> «For sed devotees, "y" is provided as a synonym for "tr".» - perldoc -f tr
[17:48:50] <Mandevil> Refactoring my own code from two decades back is quite a ride... :-I
[17:50:22] *** Joins: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d)
[17:52:46] *** Joins: gryphn (~gryphon@102.129.145.153)
[17:53:03] *** Joins: habamax_ (~habamax@vpn.avast.com)
[17:54:12] *** Quits: habamax_ (~habamax@vpn.avast.com) (Changing host)
[17:54:12] *** Joins: habamax_ (~habamax@user/habamax)
[17:54:12] *** habamax is now known as Guest6939
[17:54:12] *** habamax_ is now known as habamax
[17:56:40] *** Quits: Guest6939 (~habamax@user/habamax) (Ping timeout: 258 seconds)
[18:00:54] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[18:02:38] *** Joins: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[18:09:03] *** Joins: horsepatat (~horsepata@212.3.197.214)
[18:12:29] <Mandevil> Um, optional named argument must have explicitly state default?
[18:12:41] <Mandevil> Ie not ($arg=) but ($arg=undef) ?
[18:12:46] *** Quits: ufobat (~martin@dynamic-095-117-055-226.95.117.pool.telefonica.de) (Ping timeout: 258 seconds)
[18:13:43] <shlomif> Mandevil: ah, refactoring old code
[18:14:27] <Grinnz> $arg= is short for $arg=undef
[18:14:40] <Mandevil> But it doesn't work for me...
[18:15:08] <Mandevil> "Optional parameter lacks default expression"
[18:15:20] <ilmari> sweval: sub foo ($bar=) { say 0+defined $bar } foo()
[18:15:22] <perlbot> ilmari: ERROR: Optional parameter lacks default expression at (IRC) line 1, near "=) " 
[18:15:34] <ilmari> the value is only optional for unnamed parameters
[18:15:38] <Grinnz> oh right
[18:19:33] *** Joins: thunder (~thunder@user/thunder)
[18:21:22] <shlomif> Mandevil: some advice: https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#what-are-some-best-practices-in-programming-that-i-should-adopt
[18:21:23] <Paperbot> Link title(s): [ Freenode-programming-channel-FAQ/FAQ_with_ToC__generated.md at master · shlomif/Freenode-programm... ]
[18:23:00] <Mandevil> Point 1... check
[18:23:05] <Mandevil> (using git ;-)
[18:23:28] <Mandevil> I think this was actually the first project I used git with.
[18:23:46] <Mandevil> First commit in Apr 2014
[18:24:13] <Mandevil> Cannot imagine how the hell was I working without git.
[18:24:16] <Mandevil> It was a mess
[18:24:36] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Quit)
[18:24:41] <choroba> We had SVN and CVS!
[18:24:58] <Mandevil> But I wasn't using these.
[18:25:36] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[18:25:46] *** Joins: bit4bit_ (~bit4bit@190.128.123.78)
[18:26:12] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[18:26:25] *** Quits: mattil (~mattilinn@87-92-202-252.rev.dnainternet.fi) (Remote host closed the connection)
[18:26:58] <Mandevil> choroba: One SCM I'm using today is.... RCS!
[18:27:55] * choroba shudders
[18:28:40] <Mandevil> Released in 1982.
[18:28:46] <Mandevil> Yay, that's an old one.
[18:29:32] <gchristensen> one step above `cp`
[18:29:41] <gryphn> There are worse things. Like 'mv'.
[18:36:28] * GumbyPAN CPAN Upload: Text-Tabs+Wrap-2021.0726 by ARISTOTLE https://metacpan.org/release/ARISTOTLE/Text-Tabs+Wrap-2021.0726
[18:36:35] *** Joins: gast0n (~g4570n@user/gast0n)
[18:50:11] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[18:53:12] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 265 seconds)
[18:59:56] *** Joins: nirnam (~nirnam@1.46.138.159)
[19:06:12] <Mandevil> Is possible to "booby trap" a variable? Ie. if something tries to use it, an exception is thrown.
[19:07:17] <LeoNerd> yes but why?
[19:07:35] <Mandevil> Refactoring, moving to different interface...
[19:07:45] <Botje> presumably getting rid of global variables
[19:08:45] <Mandevil> If I have tree made of hashrefs.
[19:08:52] <Mandevil> If something accesses it, it won't break.
[19:09:01] <Mandevil> It will give a warning at best.
[19:09:09] <Mandevil> Probably not even that if there is a value.
[19:10:53] *** Joins: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-25-184-147-14-206.dsl.bell.ca)
[19:11:47] *** Joins: magla (~gelignite@55d45626.access.ecotel.net)
[19:12:07] <Botje> Mandevil: 'no autovivification'?
[19:13:09] *** Quits: habamax (~habamax@user/habamax) (Quit: leaving)
[19:21:55] *** Joins: taeaad (~taeaad@user/taeaad)
[19:27:16] *** bleb_ is now known as bleb
[19:29:44] <taeaad> I have a CSV file that was just dumped carelessly with spaces.
[19:30:20] <taeaad> Can I insert a comma on each line at a specific position? I think that would be better than my current silly iterating comma strings trying to wrap each field.
[19:30:36] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d) (Quit: = "")
[19:31:15] <taeaad> If I can do a: perl -pi.bak -e '<something>' sillyFile.csv, then that <something> can perhaps just replace the letter at positions x,y,z, etc with ','?
[19:33:12] <LeoNerd> Yup
[19:33:31] <LeoNerd> substr($_, 10, 1) = ",";  for instance, will set the 10th character to comma
[19:34:12] <taeaad> Apparently, sed can do this with:
[19:34:14] <taeaad> sed -i 's/./&,/22;s/./&,/8;s/./&,/4' ./*.txt
[19:34:30] <taeaad> Positions are 22 8 and 4 in this example
[19:39:30] *** Joins: thrig (~thrig@65.113.153.50)
[19:40:33] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[19:42:30] *** Quits: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-88.dsl.bell.ca) (Ping timeout: 265 seconds)
[19:45:49] *** Quits: bit4bit_ (~bit4bit@190.128.123.78) (Quit: Leaving)
[19:48:26] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:57:23] *** Joins: ufobat (~martin@dynamic-095-117-055-226.95.117.pool.telefonica.de)
[20:00:48] *** Quits: horsepatat (~horsepata@212.3.197.214) (Read error: Connection reset by peer)
[20:03:26] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[20:04:13] *** Joins: justache (~justache@user/justache)
[20:06:44] *** Quits: ufobat (~martin@dynamic-095-117-055-226.95.117.pool.telefonica.de) (Ping timeout: 256 seconds)
[20:10:32] *** Joins: randir (~randir@95-26-230-72.broadband.corbina.ru)
[20:14:58] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 240 seconds)
[20:21:39] * GumbyPAN CPAN Upload: Koha-Contrib-Tamil-0.066 by FREDERICD https://metacpan.org/release/FREDERICD/Koha-Contrib-Tamil-0.066
[20:21:39] * GumbyPAN CPAN Upload: Net-Saml2-0.40 by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Net-Saml2-0.40
[20:27:31] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[20:28:40] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[20:28:44] <zgu> apparently Path::Tiny is too ::Tiny to have a symlink method
[20:28:55] *** Joins: Md (~md@libera/staff/md)
[20:29:18] <thrig> well it is tiny
[20:29:53] <Botje> wouldn't cry 'false advertising' ;)
[20:31:51] <zgu> i guess the only thing it could optimize over the built in symlink function would be emulating ln(1)'s behavior when the target is a directory (auto fill new file with same basename)
[20:32:01] <Grinnz> it attempts a modicum of windows compatibility, which is difficult for symlinks
[20:32:18] <Grinnz> yes, and also throwing an exception, like its other simple wrappers
[20:32:21] <zgu> but i just realized in this case i'm going to modify the name anyway
[20:32:33] <xenu> symlinks work on windows since 5.34!
[20:32:39] <Grinnz> sometimes
[20:33:08] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:33:19] <xenu> yeah, you need admin privileges or dev mode enabled 
[20:33:41] <zgu> now why isn't Text::Balanced::extract_quotelike doing what i thought it was supposed to do
[20:34:20] <zgu> eval: use Text::Balanced qw/extract_quotelike/; print extract_quotelike('"text here"');
[20:34:21] <perlbot> zgu: "text here""text here"
[20:35:37] <zgu> eval: use Text::Balanced qw/extract_quotelike/; [extract_quotelike('"text here"')]
[20:35:38] <perlbot> zgu: ["\"text here\"","","","","\"","text here","\"","","","",""]
[20:36:40] * GumbyPAN CPAN Upload: Mojo-Leds-0.01 by EBRUNI https://metacpan.org/release/EBRUNI/Mojo-Leds-0.01
[20:40:01] *** Joins: xenial-user10 (~androirc@20014C4C17E1D20040DA145DF5E27516.catv.pool.telekom.hu)
[20:40:38] <zgu> oh... wait... what?
[20:42:27] <zgu> oh the synopsis just shows it returning two elements but it actually returns 11. and [5] is what i want
[20:49:39] <ilmari> zgu: the full list is documented at https://metacpan.org/pod/Text::Balanced#extract_quotelike
[20:49:39] <Paperbot> Link title(s): [ Text::Balanced - Extract delimited text sequences from strings. - metacpan.org ]
[20:50:02] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[20:50:32] <zgu> yeah that's what i found eventually. i just expected the example in the synopsis to be closer to what i was doing, which it's not
[20:52:14] *** Quits: tabris_ (~northman@c-107-4-92-118.hsd1.mi.comcast.net) (Ping timeout: 255 seconds)
[21:00:29] *** Joins: furrymcgee (~devuan@31.179.186.66)
[21:02:23] <pragma-> Can I use parent 'A'; use parent 'B'; use parent 'C'; on distinct lines, or must I use parent qw/A B C/; on one line?
[21:02:58] <pragma-> s/lines/statements/
[21:04:02] *** Joins: tabris (~northman@mobile-166-170-20-45.mycingular.net)
[21:04:14] <pragma-> I guess I can look at the source for use parent
[21:04:19] *** Joins: e1f (~user@141.117.1.155)
[21:04:48] <pragma-> maybe I'll juse use @ISA directly
[21:06:43] * GumbyPAN CPAN Upload: Math-GSL-0.43 by HAKONH https://metacpan.org/release/HAKONH/Math-GSL-0.43
[21:07:18] <Grinnz> pragma-: there's no difference
[21:07:27] <Grinnz> if you use @ISA, you have to manually load those modules
[21:07:49] *** Joins: ABLomas (abl@78-58-248-227.static.zebra.lt)
[21:07:49] <pragma-> so I can use parent multiple times and it doesn't create its own BEGIN blocks per each use parent or something weird
[21:08:06] * pragma- squints at use base and use parent
[21:08:09] <Grinnz> it's just a use, parent is like 5 lines of code
[21:08:15] <ilmari> each use statement is its own BEGIN block
[21:08:20] <ilmari> but that doesn't matter
[21:08:22] <pragma-> huh.
[21:08:31] <pragma-> okay, multiple use parents it is!
[21:08:33] <pragma-> thanks
[21:08:41] <ilmari> and the parent docs say it's equivalent to push @ISA, ...
[21:09:32] * ilmari would prefer a single `use parent qw(...)`
[21:09:45] <pragma-> I'm about to use 6 parents though.
[21:09:48] *** Quits: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-25-184-147-14-206.dsl.bell.ca) (Quit: Konversation terminated!)
[21:09:49] <ilmari> well, I'd _actually_ prefer not using multiple inheritance in the first place
[21:09:52] <pragma-> each one on its own line looks a bit better
[21:09:52] <ilmari> so?
[21:09:54] <Grinnz> dear god
[21:09:57] <ilmari> use parent qw(
[21:09:58] <ilmari>    foo
[21:10:00] <ilmari>    bar
[21:10:01] <ilmari> );
[21:10:24] <Grinnz> do you have a moment to speak about our lord and savior Role::Tiny?
[21:10:42] <ilmari> is the form I use (but with `with` instead, because roles are vastly superior to multiple inheritance)
[21:11:11] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[21:11:26] <thrig> Role::Tiny, also, does not support symlinks
[21:13:35] *** Quits: samir (~samir@pool-173-48-82-26.bstnma.fios.verizon.net) (Quit: leaving)
[21:13:46] *** Quits: xenial-user10 (~androirc@20014C4C17E1D20040DA145DF5E27516.catv.pool.telekom.hu) (Ping timeout: 272 seconds)
[21:14:14] <ilmari> wat
[21:15:05] <ilmari> symlinks are a filesystem feature, invisible to require and friends
[21:16:56] *** Joins: mattil (~mattilinn@87-92-245-166.rev.dnainternet.fi)
[21:17:34] <genio> Multiple inheritance makes me sad
[21:19:52] *** Quits: brtastic (~Thunderbi@185.24.91.138) (Ping timeout: 268 seconds)
[21:21:44] * GumbyPAN CPAN Upload: Lang-Go-Mod-0.002 by BCLAWSIE https://metacpan.org/release/BCLAWSIE/Lang-Go-Mod-0.002
[21:26:22] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 245 seconds)
[21:28:30] <pragma-> hm, Role::Basic mandates one `with` statement otherwise the latter `with` statements ignore conflicts with the first.
[21:30:01] <pragma-> I have no intention of using method modifiers, which is why I'm looking at Role::Basic instead
[21:30:38] <gryphn> Using Role::Tiny doesn't require you to use method modififers.
[21:30:57] <gryphn> Modifiers. Oy. Can't type. Need more coffee.
[21:32:04] <pragma-> I'm assuming the benefit of using a Role class instead of use parent is that the Role class will die if I fail to provide a definition or if there's a conflict of multiple definitions?
[21:33:13] * pragma- squints at "SUPER:: bug"
[21:33:37] <LeoNerd> SUPER:: is resolved at compiletime, so it doesn't behave properly for roles
[21:34:01] <LeoNerd> Which is generally what before/after/around et.al. are for
[21:34:16] <Grinnz> Role::Basic is from 2012 and nobody uses it, you probably should just use Role::Tiny
[21:34:23] <pragma-> oy.
[21:34:57] <Grinnz> the benefit of roles is that they compose methods into your class, and the role no longer interacts with the inheritance tree after that
[21:35:06] <pragma-> I kind of just want to use `use parent` but I don't want to be surprised by "undefined behavior" when two classes provide the same method 
[21:35:25] <thrig> CLOS is a thing
[21:35:28] <Grinnz> if you compose them in the same with call, it will die if multiple roles compose the same method
[21:36:04] <LeoNerd> thrig: Object::Pad is a thing ;)
[21:36:18] <Grinnz> also, roles can require methods to exist in the class they compose into, which will also die at compose time if unsatisfied
[21:36:39] <Grinnz> which is useful for both abstract base class type roles, and methods that the role's methods depend on
[21:37:54] <pragma-> *heavy sigh* It's looking like I'm going to be moving away from my "pure Perl only" mindset with blessed objects and `use parent` and instead start shifting to Object::Pad and Role::Tiny and such
[21:38:11] <pragma-> I'm really not sure how I feel about this at all
[21:38:13] <LeoNerd> Role::Tiny is pureperl
[21:38:20] <pragma-> I was a big advocate of "pure Perl"
[21:38:24] <pragma-> well, I mean "no CPAN" 
[21:38:30] <LeoNerd> If you are using Object::Pad then that already provides roles, so you do'nt need Role::Tiny
[21:38:31] <thrig> no CPAN is silly
[21:38:39] <pragma-> oh?
[21:38:42] <LeoNerd> Also the stuff that's in Object::Pad will become core perl at some point soon anyway
[21:38:52] <pragma-> Yeah, that's a big plus in favor of Object::Pad
[21:38:54] <LeoNerd> So avoiding Object::Pad is also rather silly
[21:38:57] <pragma-> (in my mindset)
[21:39:01] <Grinnz> yes, Object::Pad handles both inheritance and roles for you
[21:39:06] <Grinnz> they're features
[21:39:22] <ilmari> and only single inheritance (this is a feature)
[21:39:25] * pragma- closes Role::Tiny tab and reopens Object::Pad tab.
[21:40:10] <Grinnz> it doesn't implement method modifiers, but you said you don't want those anyway
[21:40:15] <pragma-> true
[21:40:56] <pragma-> I'm on the fence about method modifiers. I see the benefits but it also seems... I don't know how to say it...
[21:41:11] <Grinnz> yes, they're very much a hack but also very useful
[21:41:35] <pragma-> They seem "surprsing" and also seem like potential to wrap a method very deeply and sub-calls are  rather expensive, no?
[21:41:51] <Grinnz> depends on what you're comparing it to
[21:42:27] <genio> getting hot in this house
[21:42:31] <pragma-> It seems like it would lend people to just add more around, before, after, before, around, after, after, before to a method until it has 15 wrappers and it just seems ineffecient.
[21:42:45] <Grinnz> pretty much any mechanism by which an object provides a way to hook into its methods without method modifiers will involve similar sub call overhead
[21:42:49] <pragma-> It seems like it would cause people to prefer to be lazy and use wrappers...
[21:43:04] <pragma-> And then you have a bazillion wrappers everywhere in your code base
[21:43:06] <Grinnz> i've never really seen anyone use more than 2 wrappers for a single method
[21:43:41] <Grinnz> i thnk you're kind of imagining problems that don't happen
[21:43:45] <pragma-> perhaps
[21:44:01] <pragma-> Maybe I'm imagining what I would do if I could just toss a method wrapper arond a function instead of editing the function
[21:44:12] <Grinnz> the real hacky part of method modifiers is they're necessarily ordered, and role composition kind of isn't
[21:44:37] <Grinnz> well, you can't edit functions of cpan modules
[21:44:42] *** Parts: art1 (~romeyke@p200300ccdf072b00abef75335fc460d5.dip0.t-ipconnect.de) ()
[21:45:02] <Grinnz> also you migh thave two parts of code that want to use the same method, but slightly differently
[21:45:12] <pragma-> I thought Role::Basic said the opposite: Consider a "before" modifier which multiplies a value by 2 and another before modifier which divides a value by 3. The order in which those modifiers are applied becomes extremely important. and role-consumption is no longer entirely declarative, but becomes partially procedural
[21:45:23] <Grinnz> yes
[21:45:30] <Grinnz> method modifiers force it to be ordered
[21:45:42] <Grinnz> where normally it doesn't need to be
[21:45:46] <pragma-> Oh, "they ruin the un-orderedness"
[21:45:49] <Grinnz> basically
[21:46:11] <Grinnz> also that's a terrible example because order doesn't matter to that example lol
[21:46:19] * pragma- gestures at the docs!
[21:46:27] <pragma-> I am learning from these docs!
[21:46:37] <pragma-> Are they teaching me wrongly as a joke?
[21:46:51] <pragma-> (kung pow reference)
[21:46:53] <Grinnz> anyway, Role::Basic is written by ovid who is also the person designing Corinna of which Object::Pad is an implementation, so that's why it doesn't have method modifiers yet
[21:48:59] <pragma-> Okay, maybe it'll help if I just state what I want instead of trapping myself in a XY-problem. I want to make a class A that imports classes B and C. B and C have methods like B::do_thing and C::do_other_thing and I want to be able to call them directly as A::do_thing and A::do_other_thing
[21:49:46] <pragma-> Is this sensible?
[21:49:58] <Grinnz> do you ever make an object that's only B or C?
[21:50:10] <pragma-> I want B and C to be directly supporting classes for A but I don't want to have to do A::B::do_thing, I want toj ust do A::do_thing
[21:50:15] <pragma-> no
[21:50:17] <pragma-> they are only for A
[21:50:18] <Grinnz> then yes, those are roles
[21:51:11] <pragma-> hm, alrighty
[21:55:06] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[21:55:34] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[21:55:39] * ehuelsmann[m] wonders what "correct" behavior would be for method modifiers when methods are bound to objects, like they are in Corinna (very much unlike how methods work in Common  Lisp)
[21:55:47] <gryphn> Is there a D that consumes B but not C?
[21:56:35] <LeoNerd> ordering problems are always annoying
[21:56:47] <LeoNerd> I'm battling one today
[21:56:48] <alh> they yes are
[21:57:12] <LeoNerd> I can't currently work out how to make  has $x :weak :Trigger(foo);  has $y :Trigger(foo) :weak;  work properly, and not rely on order :/
[21:57:19] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[21:59:11] <alh> What's the problem? 
[22:01:59] <alh> oic
[22:03:55] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 258 seconds)
[22:06:36] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[22:07:14] <LeoNerd> The problem is it would be nice for the value to have been weakened by the time the trigger method runs, in both cases
[22:07:21] <LeoNerd> I.e. to not depend on the order the attributes were declared in
[22:08:35] <Grinnz> i wouldn't know anything about plugin ordering problems /me sideyes Paperbot 
[22:15:01] *** Joins: ufobat (~martin@dynamic-095-117-055-226.95.117.pool.telefonica.de)
[22:20:30] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[22:24:24] *** Joins: YaoNai (~YaoNai@user/yaonai)
[22:25:07] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[22:25:32] <pragma-> LeoNerd: should I prefer "does" instead of "implements". I'm more familiar with extends/implements than isa/does, from Java and others.
[22:25:46] <pragma-> "isa" especially seems weird to me.
[22:25:51] <LeoNerd> 'does' is more perlish, and matches the (proposed) operator name
[22:26:02] <LeoNerd> 'isa' matches the existing operator name
[22:26:06] <pragma-> true
[22:27:05] <pragma-> just not what I learned first, is all.
[22:28:03] <pragma-> Well, when in Rome...
[22:28:08] <thrig> isa presumably to be followed by pci and agp
[22:28:14] * pragma- tries to get used to isa/does while writing Perl.
[22:29:14] <pragma-> I was tempted to use extends/implements since this seems more main-stream but it's probably more likely to be other Perl devs that look at my code, if anyone does.
[22:30:07] <pragma-> On the other hand, having a mainstream common vocabulary isn't a bad thing either.
[22:30:38] <pragma-> Only I'm not entirely certain what is really mainstream after all. Java is certainly very popular...
[22:30:43] <LeoNerd> They're exact synonyms
[22:31:05] <pragma-> Yeah, but only if you know they're synonyms. :p
[22:31:13] <LeoNerd> I don't intend to make a distinction between them. I originally made it with the Java-like names, and then the Corinna design picked more perl-shaped ones
[22:31:18] <LeoNerd> I believe it is documented as such
[22:31:24] <Grinnz> it's just another instance of telling people that "last" in perl is "break" in java
[22:31:35] <Grinnz> very easy to convey
[22:31:43] <pragma-> Yeah, you have to waste time explaining that they're synonyms...
[22:32:08] <Grinnz> you also have to waste time explaining that operators are numeric or stringy, not values
[22:32:13] <Grinnz> such is different languages
[22:32:23] <pragma-> They take 5 minutes to come to you asking you "what is `last`?" when they could have spent that 5 minutes reading the rest of the code.
[22:32:35] <Grinnz> or you could tell them to search perldoc.perl.org
[22:32:39] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: Textual IRC Client: www.textualapp.com)
[22:32:52] <pragma-> Or all these various languages could agree on a common standard for keywords :p
[22:32:52] <thrig> then they get mad at you for telling them to RTFM
[22:38:50] <pragma-> LeoNerd: recommend changing "Classes not derived from a non-Object::Pad base class will pick native" to "Classes derived from an Object::Pad base class..." so it parses in one pass instead of having to rescan the double-negatives :p
[22:39:16] <LeoNerd> Ah, yah
[22:40:24] *** Joins: metasintactic (~thunder@37.120.152.116)
[22:40:27] *** Quits: metasintactic (~thunder@37.120.152.116) (Changing host)
[22:40:27] *** Joins: metasintactic (~thunder@user/thunder)
[22:40:29] *** Quits: thunder (~thunder@user/thunder) (Killed (osmium.libera.chat (Nickname regained by services)))
[22:40:29] *** metasintactic is now known as thunder
[22:42:53] *** Joins: tabris_ (~northman@c-107-4-92-118.hsd1.mi.comcast.net)
[22:44:43] <lopid> i don't recommend you keep it
[22:44:50] *** Joins: sverzel (~sverzel@2001:9b1:26fc:8d00:6d9:f5ff:fe82:7f8f)
[22:45:12] *** Quits: ufobat (~martin@dynamic-095-117-055-226.95.117.pool.telefonica.de) (Ping timeout: 265 seconds)
[22:46:22] *** Quits: tabris (~northman@mobile-166-170-20-45.mycingular.net) (Ping timeout: 245 seconds)
[22:48:15] *** Joins: anthk_ (~anthk_@92.176.105.30)
[22:54:58] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[22:57:56] <perlbot> Anonymous pasted a new file at https://l.perl.bot/p/ocxcwb - 
[22:58:44] <Adura> At least it's Perl.
[22:58:52] <thrig> without strict
[22:59:22] <ABLomas> hi, need suggestion. Used Parallel::ForkManager with linux utilities - all good. Year ago i wrote simple program which SHOULD do what i want, but it does not work in a way i want and i probably need to rewrite it: https://l.perl.bot/p/ocxcwb
[22:59:22] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[22:59:26] <ABLomas> what is wrong:
[23:00:18] <ABLomas> a) it does not work in docker/kubernetes/etc (and this is by design) - it spawns zombies and because parallel::forkmanager uses waitpid - childs do not count as "dead"
[23:00:49] <ABLomas> b) it does not work properly on normal system, too, as after a hour or so "children" aren't cleaned, etc
[23:00:55] <Grinnz> adding strict would be a first step to any update
[23:01:32] <Grinnz> but that sounds like some process management problems
[23:01:55] * GumbyPAN CPAN Upload: Alien-GSL-1.05_01 by PLICEASE https://metacpan.org/release/PLICEASE/Alien-GSL-1.05_01
[23:01:55] * GumbyPAN CPAN Upload: DNS-Unbound-0.24_03 by FELIPE https://metacpan.org/release/FELIPE/DNS-Unbound-0.24_03
[23:01:56] <ABLomas> so, i was reading about AnyEvent and few other modules which help to manage processes. I need to spawn few thousands of external processes and respawn them if they die. Or respawn if process lifetime exceeds hour, for example
[23:01:57] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[23:02:08] <Grinnz> we don't recommend anyevent, but see IO::Async::Process
[23:02:28] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[23:03:13] <ABLomas> looks good at first look into docs, can it exec() (in other words - spawn another child without creating new process) in place of earlier process?
[23:03:40] <LeoNerd> What? That question doesn't make sense. When processes die, they exit. They don't exist any more
[23:03:52] <LeoNerd> You fork+exec a new one to replace it
[23:04:02] <ABLomas> another question - if it uses waitpid (as forkmanager does) it will fail in the same way (sub on_finish())
[23:04:25] <Grinnz> waitpid is the normal correct way to manage this 
[23:04:36] <Grinnz> just depends how you use it
[23:05:13] <ABLomas> LeoNerd: they exit in "classic" system, but not kubernetes pod, docker instances and so on. In those system, even if you use pause/tini/whatever init0 replacement - zombies (process leftovers) are cleaned only if you kill top-parent of process (entire script, in this case)
[23:05:14] <pragma-> hm
[23:06:07] <ABLomas> problem "a" described above is not critical, i can run those processes on VM/bare metal, small problems with management but ok
[23:06:50] *** Joins: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu)
[23:06:51] <pragma-> LeoNerd: I made a role A and role B where role A provides "do_A_thing" and role B provdes "do_B_thing" and to test the error messages, I changed role B's method to "do_A_thing" to see how it'd report the conflict with role A.
[23:07:01] <pragma-> LeoNerd: the error produced is "Method 'do_A_thing' clashes with the one provided by role A".
[23:07:22] <pragma-> LeoNerd: I was wondering if it could say "Method `do_A_thing` provided by role B clashes with the one provided by role A" instead, or something?
[23:07:32] <ABLomas> but forkmanager (as in code above) works with short timeouts well (seconds, 10 minutes and so on) but glitches a lot if processes run hour or more. IO::Async::Process looks good, i will try, any other alternatives to check?
[23:07:57] *** Joins: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net)
[23:08:46] <LeoNerd> pragma-: yah probably a oneline change
[23:09:36] <Grinnz> ABLomas: nothing as comprehensive that i know of
[23:09:55] <Grinnz> ABLomas: MCE is another option similar to Parallel::ForkManager, which manages the whole loop for you
[23:10:06] <ABLomas> MCE? Googling now
[23:10:09] <Grinnz> the advantage of IO::Async::Process is you can use the loop for things other than processes
[23:10:31] <Grinnz> same thing for anyevent, though its author is not great to rely on
[23:10:54] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[23:11:04] <pragma-> Other than that, Object::Pad seems to be working well for me
[23:11:21] <pragma-> Slightly annoyed that I don't have syntax highlighting for `class` and `method` and stuff now though :p
[23:11:30] <LeoNerd> Do you use vim?
[23:11:32] <pragma-> Yes
[23:11:38] <LeoNerd> use my syntax file then :)
[23:11:41] <pragma-> right on
[23:11:50] <ABLomas> well, not much going on outside of process spawning, checking available resources and spawning as many as possible processes, that's all ;-) But yeah, MCE looks good, also, reading now
[23:11:55] * GumbyPAN CPAN Upload: PDL-2.054 by ETJ https://metacpan.org/release/ETJ/PDL-2.054
[23:12:25] *** Joins: WinterStar (~IceLight@user/icelight)
[23:12:44] <Grinnz> IO::Async::Function is also an abstraction within IO::Async that works more like MCE/Parallel::ForkManager
[23:13:03] <Grinnz> with worker subprocesses and queued concurrency
[23:13:04] <ABLomas> main problem, as i said is that processes are not respawning when they die with Forkmanager, not so big change to try other modules and see, maybe they will notice better when children die
[23:14:53] <pragma-> LeoNerd: do I always have to put methods in a block following class; or can I have an "open" class? like instead of `class X { method ... }` can I do `class X; method a { ... } method b { ... }` so I don't have to indent my methods?
[23:15:29] <LeoNerd> You can write a unit class, yes
[23:15:56] <LeoNerd> https://metacpan.org/dist/Tickit-Widgets/source/lib/Tickit/Widget/Button.pm  -- a random example of one of mine
[23:15:56] <Paperbot> Link title(s): [ lib/Tickit/Widget/Button.pm - metacpan.org ]
[23:16:56] * GumbyPAN CPAN Upload: Data-Record-Serialize-0.21 by DJERIUS https://metacpan.org/release/DJERIUS/Data-Record-Serialize-0.21
[23:17:32] <ilmari> pragma-: «As with package, an optional block may be provided. If [one is] not, it sets the class as the package context of following keywords and definitions.» - https://metacpan.org/pod/Object::Pad#class
[23:17:32] <Paperbot> Link title(s): [ Object::Pad - a simple syntax for lexical slot-based objects - metacpan.org ]
[23:18:43] <pragma-> Okay, I now have a role B that has `require do_B_thing` in it, but I instead defined do_C_thing. The error is: class X does not provide a required method named 'do_B_thing'.  I feel like the error should instead be: role B does not provide a required method 'do_B_thing' because it's the role B that is missing the required method, no?
[23:18:53] <pragma-> requires, not require
[23:20:08] <ilmari> it's the class that you're composing the role into that is missing the method
[23:20:14] <pragma-> hm
[23:20:28] <pragma-> but it's role B that requires it and doesn't have it defined?
[23:20:34] <ilmari> the role requires that the class provides that method, either itself, by composing some other role, or by inheritance
[23:20:48] <xenu> sadly, the pre-RFC for Corinna does require that stupid block
[23:21:12] <ilmari> pragma-: `requires` is for methods that the role uses but doesn't provide itself
[23:21:33] <pragma-> Oh, I thought it was methods the role provided.
[23:21:44] <ilmari> no. providing is the opposite of requiring
[23:21:44] <pragma-> Alright, so that's my misunderstanding then?
[23:21:48] <ilmari> words. they mean things.
[23:21:54] <pragma-> Words are hard for me.
[23:21:56] * GumbyPAN CPAN Upload: Data-Record-Serialize-0.22 by DJERIUS https://metacpan.org/release/DJERIUS/Data-Record-Serialize-0.22
[23:21:58] <pragma-> They mean too many things.
[23:22:03] * pragma- points at the overloaded words.
[23:23:05] <Grinnz> right. the methods the role provides are the methods defined in it
[23:23:13] <Grinnz> plus the required methods, since it will require that something provides them
[23:23:57] <pragma-> I'm goign to have to read these docs a few more times for it to click.
[23:24:04] <pragma-> I'll probably say a few more stupid things in the meantime.
[23:25:38] <pragma-> Okay, so if I use a unit class, I have to return a true value after all.
[23:26:11] <Grinnz> files have to return true values for require, the method of class declaration doesn't matter
[23:26:25] <pragma-> Au contraire, the class {} block returns a true value.
[23:26:44] <Grinnz> sure, that provides it
[23:26:47] <pragma-> I meant, I had to explicitly add a return statement to return a true value.
[23:26:51] <Grinnz> if you're using a recent version
[23:27:06] <LeoNerd> it's supposee to but it doesn't always work
[23:27:14] <pragma-> Using class X; method ...; instead of class X { method ... }, perl insisted I add return 1 to the end.
[23:27:48] <pragma-> I don't mind.
[23:27:53] <pragma-> I'm already used to putting a 1; at the end.
[23:28:05] <pragma-> I expected to have to do it for class {} and was surprised I didn't.
[23:28:32] <pragma-> I think that's progress. The 1; at the end there is a bit weird. :)
[23:29:04] <pragma-> I noticed that some people like to get cute and use 42 or some hexadecimal constant.
[23:29:22] <Adura> '0 but true'
[23:29:33] <LeoNerd> I usually put 0x55AA
[23:29:41] <pragma-> That does 0x55AA mean?
[23:29:44] <pragma-> what
[23:30:18] <Grinnz> a true value, is all that matters
[23:30:23] <pragma-> boot signature of IBM PCs
[23:30:38] <LeoNerd> Bingo :)
[23:31:19] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 258 seconds)
[23:32:49] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[23:33:06] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 276 seconds)
[23:34:50] <Grinnz> why is dbus still confusing in 2021
[23:35:18] <Grinnz> you can't sudo su - someuser -c 'systemctl --user ...' because it can't reach that user's dbus
[23:35:37] <Grinnz> it's a login shell why the fuck can't it reach that user's dbus
[23:36:58] * GumbyPAN CPAN Upload: Test-Simple-1.302186 by EXODIST https://metacpan.org/release/EXODIST/Test-Simple-1.302186
[23:38:21] <Grinnz> there's apparently something called machinectl which sets up dbus correctly for the other user, but it doesn't exist anymore
[23:38:23] <Grinnz> so that's useful
[23:38:45] <pragma-> hrm. so I should move my requires statements to the class {} instead of the role {} ... but ah, is there a way to error if a role doesn't provide a method? like a `provides` statement inside the role {}?
[23:38:57] <pragma-> or am I thinking about roles wrong?
[23:39:19] <Grinnz> no, only roles can require methods
[23:39:45] <Grinnz> classes resolve methods via inheritance on demand
[23:39:51] <pragma-> so requires belongs inside roles?
[23:39:58] <Grinnz> yes, only for what the role requires
[23:40:06] <pragma-> this is so new and foreign to me
[23:40:17] <Grinnz> the class specifies what it requires by composing the role which is expected to provide certain things
[23:40:32] <pragma-> so why doesn't the class use requires and the roles use provides?
[23:40:38] <Grinnz> because that's not what it does
[23:40:48] <pragma-> right, I'm still not getting it yet. i'll keep reading.
[23:41:06] <Grinnz> what the role provides consists of the methods in the role
[23:41:13] <Grinnz> there's no specifier for it
[23:41:58] * GumbyPAN CPAN Upload: Test2-Tools-EventDumper-0.000013 by EXODIST https://metacpan.org/release/EXODIST/Test2-Tools-EventDumper-0.000013
[23:41:59] <Grinnz> composing a role consists of roughly: 1. checking that everything the role requires is provided by the class it's being composed into, 2. composing all existing methods of the role into the class
[23:42:22] <Grinnz> (methods required by roles can also be provided via inheritance as normal)
[23:42:44] <pragma-> so, if the class doesn't have a method then the role provides its own method?
[23:42:51] <Grinnz> no
[23:42:51] <pragma-> otherwise it uses the class's method?
[23:42:58] <Grinnz> we're talking about requires
[23:43:07] <Grinnz> those are methods not provided by the role
[23:43:12] <Grinnz> but required by the role
[23:43:21] <pragma-> I think I'm confusing Roles::Basic and Roles::Tiny and Object::Pad. I think they said slightly different things; or I simply cannot comprehend what I'm trying to read.
[23:43:45] <Grinnz> if a role has a method and the class already provides that method, it won't be composed
[23:43:54] <Grinnz> (the class, or a parent class)
[23:44:06] <Grinnz> but this is unrelated to requires
[23:45:25] *** Quits: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[23:46:48] <Grinnz> https://github.com/systemd/systemd/issues/7451#issuecomment-346787237
[23:46:49] <Paperbot> Link title(s): [ pam_systemd(su:session): Cannot create session: Already occupied by a session · Issue #7451 · sys... ]
[23:46:57] <Grinnz> oh so it's leonard's fault (not LeoNerd's though)
[23:47:05] <Grinnz> lennart*
[23:49:09] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[23:49:29] *** Quits: magla (~gelignite@55d45626.access.ecotel.net) (Quit: Stay safe!)
[23:51:59] * GumbyPAN CPAN Upload: Test2-Suite-0.000141 by EXODIST https://metacpan.org/release/EXODIST/Test2-Suite-0.000141
[23:51:59] * GumbyPAN CPAN Upload: Playwright-0.009 by TEODESIAN https://metacpan.org/release/TEODESIAN/Playwright-0.009
[23:52:09] *** Quits: gryphn (~gryphon@102.129.145.153) (Quit: kthxbye)
[23:52:51] <ehuelsmann[m]> uxjckxbegkjxtjbpkcpug.khyijk
[23:52:56] <ehuelsmann[m]> jjjjjjdygbgyugb.yuxyg.utcxgxyynpdnhbpkxkuxub
[23:54:11] <Adura> Cat? Seizure?
[23:54:49] <ehuelsmann[m]> sorry. neither: yubikey accidentally touched.
[23:55:33] <pragma-> I would have totally said cat instead :p
[23:55:39] *** Quits: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu) (Ping timeout: 252 seconds)
[23:56:51] * pragma- contemplates the payoff/effort ratio of figuring out where ehuelsmann[m]'s yubikey gets used and if there would be any buyers for it in ehuelsmann[m]'s area.
[23:57:44] <ehuelsmann[m]> pragma-: I don't think these codes help much: They're OTPs.
[23:57:47] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:57:50] <pragma-> oh
[23:59:02] <pragma-> smh, I haven't changed my main email password (that all my password resets get sent to) in a few years now.
[23:59:17] * pragma- living dangerously.
