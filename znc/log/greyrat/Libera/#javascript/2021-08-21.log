[00:00:29] <ljharb> dostoyevsky2: it definitely can do it better, and you definitely should be using rAF
[00:00:50] <ljharb> dostoyevsky2: setInterval is inaccurate for time - setTimeout is better - but rAF is accurate for both time and "when the user is looking at it"
[00:01:25] <ljharb> also 100ms is a VERY short time window
[00:01:27] <jaawerth> anddam: you can use MutationObserver to detect changes to the style and class attributes of an element, but if - say - CSS rules that match the element is loaded on the page, it wouldn't trigger since the element wasn't directly modified
[00:01:45] <earendel> https://gist.github.com/paulirish/5d52fb081b3570c81e3a -- what causes repaint reflow
[00:01:57] <ljharb> dostoyevsky2: so you're basically doing that 10 times a second, and if it takes longer than 1/10th of a second, then it'll pile up and you'll easily see high cpu usage
[00:03:33] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:03:56] <dostoyevsky2> ljharb: with a nested setTimeout I could prevent that, right?  As the next iteration would be scheduled after the current has finished
[00:04:22] <earendel> of course it also depenmds on the function you call
[00:04:22] <earendel> the performance
[00:06:16] <dostoyevsky2> earendel: it depends on many things, also how busy your browser is...  if lots of pages are loading in other tabs I can easily get 100-10000ms timediff for a interval of 100ms on my machine
[00:06:20] <jaawerth> dostoyevsky2: yep, a recursive setTimeout would avoid pile-up, and doing rAF on top of that has a good chance of making it smoother on top of that as it will sync it up with the actual refresh rate of the browser at a given time
[00:06:57] <anddam> jaawerth: no, it's done via actual style property change
[00:07:16] *** Joins: inom (~inom@176.59.111.80)
[00:07:25] <ljharb> dostoyevsky2: yes, you could. but rAF will always be more efficient
[00:07:26] <earendel> it's definitely possible to even draw with DOM elements by manipulating stylesheets with at supringsingly good performance just to give you a clue: https://t.co/33mZ5OxMb2?amp=1
[00:07:31] <ljharb> dostoyevsky2: there's no excuse to use setTimeout here
[00:07:44] *** Quits: inom (~inom@176.59.111.80) (Client Quit)
[00:08:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[00:09:21] <dostoyevsky2> document.querySelector("#player-status .pos") // I wonder if querySelector calls might also be a problem as they take more time with larger doms.... so might be better to just cache the node pointers directly
[00:09:30] *** Quits: cantelope (~cantelope@mail.whitehotrobot.com) (Remote host closed the connection)
[00:09:36] <systemfault> Well... for sure.
[00:09:48] <systemfault> Nobody should be doing node selections in a "loop"
[00:10:01] <systemfault> (I use a very broad definition of loop here)
[00:10:04] <ljharb> dostoyevsky2: and yes that is something react will do WAY more efficient than you can
[00:10:20] <ljharb> dostoyevsky2: but you can almost get there by writing a bunch of annoying code to intelligently cache all your DOM elements
[00:11:10] <jaawerth> anddam: then MutationObserver will work!
[00:11:26] <jaawerth> !mdn MutationObserver @anddam
[00:11:27] <jellobot> anddam, MutationObserver - The MutationObserver interface provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature, which was part of the DOM3 Events specification. https://mdn.io/mutationobserver
[00:12:36] *** Joins: inom (~inom@176.59.111.80)
[00:12:59] <earendel> in the example hundreds of elements are modified via stylesheet at a rate of 60fps.. creating an  animation. it works on outdated hardware even
[00:13:11] <dostoyevsky2> If react's dom-updating is so good when will it be builtin into the browser?  Like they took over most of the cool stuff from jQuery back then
[00:13:36] <earendel> have you tried the profiler in the dev tools of your browser?
[00:13:47] <dostoyevsky2> is there already a reacitified ECMA script standard in the works?
[00:14:02] <earendel> reacts performance is crap.
[00:14:04] <ljharb> dostoyevsky2: it wouldn't be ecmascript, since it's not part of the language
[00:14:06] <ljharb> earendel: no, it's not
[00:14:19] <ljharb> dostoyevsky2: and browsers are trying to do web components, which suck for many other reasons
[00:15:40] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[00:18:04] <jaawerth> dostoyevsky2: ECMAScript and DOM are separate things - js is the language, DOM is the browser api. but yes there are some browser native features in ongoing development to allow native equivalents, like the webcomponents ljharb mentioned. it's been slow going, though features like html template elements that are being leveraged effectively by some neat lightweight frameworks like svelte and
[00:18:06] <jaawerth> lit-html
[00:18:14] <jaawerth> react is still the standard atm though
[00:18:22] <jaawerth> but it depends on what you're doing, ofc
[00:18:25] <earendel> web components are still in an experimental stage. and have been in such for long. uhtml or hyperhtml are examples of what can be done so far. but the api provided by DOM is not complete or mature yet
[00:18:34] *** Quits: tmm88 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9) (Quit: Client closed)
[00:18:48] <earendel> yep
[00:19:00] <jaawerth> tbh I'd rather they go slow than make something that immediately turns into cruft so I'm fine with them taking their time haha
[00:19:12] <earendel> right
[00:19:29] <ljharb> web components are a mistake, they need to scrap them and start over, but they won't
[00:20:03] *** Quits: inom (~inom@176.59.111.80) (Quit: WeeChat 3.2)
[00:20:04] <jaawerth> re react performance, it can be both fantastic AND shit, there's a lot of nuances :P
[00:20:42] <earendel> ok. :>
[00:20:51] <jaawerth> well, mostly "how much diffing is gonna happen?"
[00:23:00] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[00:23:09] <dostoyevsky2> earendel: I keep seeing slow react apps, alas... prime example patreon's home page... it just becomes slower and slower, the more items you are loading.  I guess they are not using key properties to prevent dom rerendering properly.
[00:23:21] <earendel> that's where hyperhtml hits hard, with that levensthein algo. it really even reflects in the dev tools. you can watch the html code rewritten only where actual changes happen.  there are comparable libs, but afaik its fastest so far.
[00:23:52] <ljharb> dostoyevsky2: that's got nothing to do with react tho
[00:24:01] *** Joins: nomic (~nomic@185.217.117.52)
[00:24:02] <ljharb> dostoyevsky2: sites like that are likely to be slow no matter what they're built in
[00:24:24] <earendel> dostoyevsky2: im really not the one to talk about react much. i think it's usually in fact a ton of other things people use to bloat their pages with dragging performance down.
[00:24:49] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:25:27] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[00:25:59] <earendel> the main purpose however is not performance, but templating. the architecture offers a model that escapes many things you can do wrong, especially with little experience in webdev.
[00:26:21] <earendel> of course they all cook with water. so water outperforms everything.
[00:27:38] <rustyshackleford> picking good variable and function names is hard
[00:27:52] <rustyshackleford> this function searches for a user first. If that user does not exists, then it creates the user
[00:28:21] <rustyshackleford> at the end, return that existing user, or newly created user
[00:28:28] <rustyshackleford> I can do better than getUser() lol
[00:28:52] <dostoyevsky2> rustyshackleford: I usally use "ensure" for such functions: ensure_user("bla")
[00:29:41] <dostoyevsky2> I guess that's my very own convention... but I use that patter all over the place
[00:29:56] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[00:34:06] <dostoyevsky2> rename_file(tempfilename, ensure_base_dir(target_filename))
[00:35:50] <Anonamy> hi, I am trying to set up a Bootstrap datatable notes list,
[00:36:14] <Anonamy> Like this   https://paste.ubuntu.com/p/n3FcKmXmjd/
[00:36:27] <Anonamy> I keep getting an error "bootstrap datatable missing : after property id"
[00:37:00] <Anonamy> I have tried using quotes around the two lines table-layout: fixed, and word-wrap: break-word,
[00:37:29] *** Quits: sudomann (~sudomann@50.238.46.18) (Ping timeout: 248 seconds)
[00:37:37] <Anonamy> This removes the error message, but it breaks the datatable and the word-wrap and column width stop working,
[00:39:00] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Quit: bye)
[00:39:36] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[00:40:28] *** Joins: Naan (~naan@user/naan)
[00:40:58] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:dd7b:f98c:4c1d:121e) (Quit: Textual IRC Client: www.textualapp.com)
[00:41:02] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[00:42:04] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 250 seconds)
[00:43:17] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:46:40] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[00:50:53] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[00:52:27] <GreenJello> Anonamy, do you have docs for this?
[00:53:01] <GreenJello> maybe you specify them in camel case, or specify them somewhere else
[00:53:05] <GreenJello> or both
[00:53:41] <harpia> Do you use fetch directly or wrap it in a function? There are some things I have been unable to do with pure fetch, for example: https://github.com/github/fetch/issues/203#issuecomment-266034180
[00:54:45] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[00:55:58] <GreenJello> harpia, it's a bit low level to use in application level code. It's good as a building block in your http client
[00:56:27] <GreenJello> also, the code in that comment is really bad. Don't copy/paste that
[00:57:05] <harpia> I couldn't find anything better that achieves the same result :/
[00:57:15] <harpia> do you know anything that serves as a good example?
[00:57:46] <harpia> i guess I just have to search for an "http client"
[00:58:46] <GreenJello> here's a simple example from a project of mine: https://github.com/brigand/ject.dev/blob/master/src/api.js
[01:01:14] <GreenJello> of course modify it to fit your needs. If you want it configurable with a custom host, or to add auth headers, or to handle retries on 503, you can do any/all of those
[01:01:36] *** Joins: netameta_ (~netameta@2a00:a040:193:50fe:45a6:e3dd:9ed0:38d)
[01:01:58] <GreenJello> (retries are necessary, I just haven't gotten around to it yet)
[01:02:18] <harpia> Interesting. It looks simple enough I might try to build my own function with what I learn from it.
[01:02:34] <GreenJello> or you can use something like axios that is designed to be configured in these ways
[01:02:56] <harpia> i was about to mention axios... it looks robust.
[01:03:43] <systemfault> It's definitely battle-tested.
[01:04:10] *** Quits: netameta (~netameta@2a00:a040:193:50fe:954c:9cfb:eebe:17d3) (Ping timeout: 240 seconds)
[01:04:54] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[01:07:09] *** Joins: WishBoy (~WishBoy@user/wishboy)
[01:09:29] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 248 seconds)
[01:09:58] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:8419:e600:4f7e:6af)
[01:12:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:14:55] <anddam> jaawerth: thx
[01:16:58] *** Quits: cth (~Cthulchu@213.174.21.101) (Read error: Connection reset by peer)
[01:17:04] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[01:17:25] *** Joins: cth (~Cthulchu@213.174.21.101)
[01:23:40] <anddam> is there any merit in using    const foo = function () { […] }    in place of    function foo () { […] }   ?
[01:23:49] <anddam> cfr. https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver
[01:24:44] <theskillwithin> you mean const foo = () => {}   vs   function foo() {}   ?
[01:24:46] <ljharb> anddam: yes
[01:24:57] <ljharb> !fe vs fd @ anddam
[01:24:57] <jellobot> anddam, A function declaration `function declared() {}` & a function expression e.g. `var bar = function expressed() {}`: the former is !hoisted, the latter can be immediately invoked (see !iife) and can be anonymous (eg can omit the name "expressed"). "function" as the first word of a statement at global scope or directly inside a function starts a function declaration; otherwise, it starts a function expression.
[01:25:05] <theskillwithin> the const version doesn't hoist
[01:25:09] <ljharb> anddam: altho you'd always want to name the function - ie, `const foo = function bar() {}`
[01:26:06] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[01:27:07] <theskillwithin> ljharb huh?
[01:27:20] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[01:27:27] <theskillwithin> ljharb you mean const foo = () => {}  ?
[01:27:40] <ljharb> theskillwithin: no, i do not
[01:27:43] <ljharb> a normal function, with a name
[01:27:52] <ljharb> arrow functions never have explicit names, and it's worse for debugging to overuse them
[01:28:02] <austincheney> anddam, const foo = function bar () {};  In this code "foo" is a variable assigned a function as its value but the function's name is "bar".  Internally, a function body is aware of its name, but nothing external without scope traversal.  A function is only known by its name which is internally important to an application such as stack traces and profilers
[01:28:36] <theskillwithin> ljharb well the name of the function is foo, u can see that in debugging
[01:28:47] <ljharb> theskillwithin: the inferred name. it still doesn't have an explicit one.
[01:28:55] <jaawerth> ljharb: still shows up in stacktraces though
[01:28:58] <ljharb> sure
[01:29:05] <ljharb> when the inference kicks in, which isn't all the places you expect it to
[01:29:24] <ljharb> theskillwithin: either way comparing a function declaration to a function expression should not involve an arrow, because those are much more different.
[01:29:32] <jaawerth> I guess I just haven't seen much in the way of real-world scenarios where it causes problems to overuse arrows or non-explicitly-named functions
[01:29:35] <theskillwithin> im just surprised, cuz I have never seen it done that way
[01:29:57] *** Joins: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net)
[01:30:04] <ljharb> theskillwithin: it's the way it was always done before arrows existed
[01:30:08] <jaawerth> I buy that it's not as bulletproof as being explicit everywhere but it seems to me like a problem that has for the most part gone away as legacy support drops
[01:30:16] <ljharb> jaawerth: nah, it's still a problem
[01:30:22] <ljharb> jaawerth: object properties don't impart a name
[01:30:36] <ljharb> jaawerth: also `const foo = React.forwardRef(() => {})` doesn't put "foo" on the arrow or on the forwardRef.
[01:30:45] <jaawerth> true. and better to get people to build a habit so they don't repeat it where they shouldn't, so fair enough there
[01:30:47] <theskillwithin> also with the const foo = () =>   this bubbles up usually to window or global
[01:30:48] <ljharb> relying on inference is a bad idea forever, unrelated to legacy stuff.
[01:30:55] <ljharb> theskillwithin: what? no
[01:31:02] <ljharb> theskillwithin: the default is "in a module", so there wouldn't be any of that
[01:31:13] <ljharb> if you're talking about a world where you don't have modules then you probably don't have arrows either
[01:31:26] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[01:31:30] <theskillwithin> arrows are native in browser
[01:31:40] <ljharb> so are modules
[01:31:56] <ljharb> thus, in modern code *nothing* "bubbles up to window or global", that's a legacy thing
[01:36:30] <anddam> I see my question sparked a debate, and I still don't even know what "hoist" means. Gotta hit the web
[01:37:21] <theskillwithin> hoisting basically means, you don't need to care about what order you declared your functions in.  if you call something declared after when ur using it, it will still work if its hoisted.   arrow functions are not hoisted
[01:38:36] <theskillwithin> ljharb i was just saying it treats this differently, thats a fact.  i wasn't saying i use this
[01:38:45] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:43:21] *** Joins: dachi_ (~dachinat@37.232.98.166)
[01:45:14] <anddam> ok I attached to observer to the targets, I will tune this later
[01:45:33] <anddam> thank you all
[01:46:25] *** Quits: dachinat (~dachinat@37.232.98.166) (Ping timeout: 268 seconds)
[01:46:45] <theskillwithin> ljharb anyways, I think I lead us down the wrong path here, cuz i thought they meant arrow vs non arrow.  but really they were just saying assigned function vs declaring function
[01:47:09] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[01:49:08] <theskillwithin> ljharb in which case, both should be named of course
[01:49:32] *** Joins: ferdna (~ferdna@user/ferdna)
[01:50:26] <theskillwithin> assigning anonymous function*
[01:52:40] <ThePendulum> n> 'test'.match(undefined)
[01:52:40] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 240 seconds)
[01:52:41] <jellobot> (okay) [ '', index: 0, input: 'test', groups: undefined ]
[01:52:43] <ljharb> theskillwithin: right
[01:52:44] <ThePendulum> well that just bit me in the ass
[01:52:49] <ljharb> !hoisting @ anddam
[01:52:49] <jellobot> anddam, http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet https://snek.dev/blag/2019-07_js_hoisting
[01:53:08] <ThePendulum> n> ['test'.match(undefined), 'test'.match(null)]
[01:53:09] <jellobot> (okay) [ [ '', index: 0, input: 'test', groups: undefined ], null ]
[01:53:11] <ThePendulum> does that make sense or is that a bit quirky
[01:53:32] *** Joins: jetchisel (jetchisel@user/jetchisel)
[01:54:08] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[01:54:57] <ljharb> ThePendulum: undefined triggers defaults, null doesn't
[01:55:15] <ljharb> n> ['test'.match(undefined), 'test'.match(RegExp.prototype)] @ ThePendulum
[01:55:16] <jellobot> ThePendulum, TypeError: Method RegExp.prototype.exec called on incompatible receiver [object Object]
[01:55:28] <ljharb> n> ['test'.match(undefined), 'test'.match(new RegExp(RegExp.prototype))] @ ThePendulum
[01:55:28] <jellobot> ThePendulum, [ [ '', index: 0, input: 'test', groups: undefined ], [ '', index: 0, input: 'test', groups: undefined ] ]
[01:55:31] <ljharb> there we go
[01:55:34] <ThePendulum> ahh
[02:01:39] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[02:01:42] *** Joins: CrowX- (~CrowX-@185.167.46.134)
[02:01:48] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[02:02:01] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:02:10] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:03:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[02:04:00] *** Gustavo6046_ is now known as Gustavo6046
[02:04:22] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:2489:d8ec:6e6c:e38b) (Quit: Textual IRC Client: www.textualapp.com)
[02:05:18] <ThePendulum> thanks
[02:08:55] *** Quits: carlino3 (~carlino3@user/carlino3) (Ping timeout: 246 seconds)
[02:10:10] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[02:11:52] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:8e0c:4a06:cef7:ee9c)
[02:12:17] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:8e0c:4a06:cef7:ee9c) (Changing host)
[02:12:17] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[02:12:39] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[02:13:20] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Quit: bye)
[02:13:36] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[02:13:46] <dostoyevsky2> Energy Impact went down from 21 to 1-2 just by caching calls to document.querySelector()
[02:16:22] <anddam> ljharb: I see the function definition vs. expression in that johnkpaul.com article
[02:17:35] <ljharb> ok
[02:19:34] <theskillwithin> if someones using bootstrap and jquery, idk how much i trust them.  personal bias
[02:20:03] *** Joins: Quackles (~Quackles@184.71.5.142)
[02:21:24] <Quackles> I have an array of objects of the same type that is sorted by one property of , call it “t”. If I have some value, what’s the most efficient way to find the object in the array that has the closest “t” to the value?
[02:21:37] <Quackles> This may have to run repeatedly many times, so performance is kind of important.
[02:22:18] <dostoyevsky2> theskillwithin: how about people who call themselves html programmer?
[02:22:34] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[02:22:38] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:22:48] <GreenJello> Quackles, assuming a non-tiny array, a basic binary search is in theory the most efficient
[02:24:03] <Quackles> I figured (the array will be about ~2500 data points, but the search will take place ~3000 times, to match each point in that array with objects stored in a second one.).
[02:24:16] <Quackles> But there’s not, like, an ES6 function that can do that or anything, is there?
[02:24:26] <GreenJello> array.find
[02:24:50] <GreenJello> do a benchmark comparing it to a binary search with your real data
[02:24:55] <Quackles> Ah. And would that be more efficient than if I wrote my own binary search, or...?
[02:24:58] <Quackles> Also, it occurs to me that...
[02:25:01] <GreenJello> unclear
[02:25:05] <Quackles> the two arrays I’m trying to match up are both sorted.
[02:25:14] <Quackles> By the same metric (time).
[02:25:55] <theskillwithin> wait theres two arrays now
[02:25:56] <theskillwithin> ?
[02:26:11] <Quackles> Basically, the search of the first array, which I’ll call, uh, “points”...
[02:26:29] <Quackles> is needed to populate a second array, which I’ll call “widgets”.
[02:26:43] <Quackles> Each widget in the widgets array needs to be associated with the closest point in the points array.
[02:26:52] <Quackles> Both arrays are sorted by time, which is also what’s being searched on.
[02:27:28] <Quackles> I suppose what I’m really doing is finding a mapping between the two arrays.
[02:28:35] <GreenJello> then it might be more efficient to pair them incrementally
[02:28:48] <Quackles> Probably. O(n-ish) instead of O(n^2).
[02:28:53] *** Joins: s0ullight (~s0ullight@ip-193-121-29-153.dsl.scarlet.be)
[02:29:15] <Quackles> Thanks. That helps a lot.
[02:29:23] <GreenJello> O(n log n), but yeah
[02:29:43] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[02:29:45] <GreenJello> O(n log m)*
[02:29:57] <Quackles> …how do you get N log M out of it?
[02:30:18] <GreenJello> binary search is logarithmic
[02:30:24] <s0ullight> how can I name objects in an array?
[02:30:28] <Quackles> Yeah, but I wouldn’t be doing binary search at this point.
[02:30:33] <Quackles> I’d just be doing a linear scan.
[02:30:38] <Quackles> Set a pointer at the start of both arrays.
[02:30:58] <Quackles> Move the pointer forward until a match is found in the points array, confirm it, then move the widgets pointer forward one place.
[02:31:07] <Quackles> Continue with the next widget, and so on.
[02:31:23] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:31:40] <theskillwithin> s0ullight you can't, arrays are based on index
[02:31:58] <theskillwithin> s0ullight but you can put a name inside each object
[02:32:31] <theskillwithin> ie [{ name: 'yay' }]
[02:32:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[02:33:28] *** Gustavo6046_ is now known as Gustavo6046
[02:37:53] *** Quits: s0ullight (~s0ullight@ip-193-121-29-153.dsl.scarlet.be) (Quit: Client closed)
[02:38:10] *** Joins: s0ullight (~s0ullight@ip-193-121-29-153.dsl.scarlet.be)
[02:38:49] <s0ullight> theskillwithin so basically I can't put together a list of object that when stringified results in: ["object 1": {color: "blue"}, "object 2": {color: "yellow"}]
[02:39:54] <theskillwithin> correct, you can't do that
[02:40:04] *** Quits: Quackles (~Quackles@184.71.5.142) (Quit: IM OUT)
[02:45:06] <s0ullight> what about the other way around, would JSON.parse work on that string?
[02:47:23] <systemfault> No.
[02:47:49] <systemfault> [] are for arrays in JS... not "whatever your format is"
[02:49:00] <systemfault> You would have to do some string replaces... and then eval() the result..
[02:49:56] <systemfault> Maybe you don't want an array? Just an object that you can use a key/value structure...
[02:51:03] *** Quits: jess (~jess@libera/staff/jess) ()
[02:51:17] <theskillwithin> !xy
[02:51:18] <jellobot> theskillwithin, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[02:53:55] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:2489:d8ec:6e6c:e38b)
[02:59:02] *** Joins: TASM (~TASM@51.36.92.157)
[02:59:35] <jaawerth> this confusion is usually less of an xy problem and more related to someone caming from, like, php where arrays can be used as both a list and a dictonary rather than having dedicated data structures for each
[03:02:05] <ljharb> s0ullight: in JS, an array is a list, and an object is a dictionary of key-value pairs. you can't really mix the two.
[03:02:21] <jaawerth> well.. nevermind, that will just confuse things more
[03:02:57] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Quit: rewrit3)
[03:04:04] <ljharb> jaawerth: lol hush, don't bring up arrays with expandos
[03:04:19] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[03:04:43] <jaawerth> expandos is a fun word for it
[03:04:51] <jaawerth> also :D
[03:07:34] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[03:07:53] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[03:08:05] <cis> javascript is stretchy, like a rubber band
[03:08:05] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:08:13] <cloudbender> I lied ... I have one more question for this week ...
[03:08:26] <cloudbender> https://dpaste.org/LxuK
[03:09:08] <cloudbender> lines 9,10, the authoer is using commas not semicolons
[03:09:24] <cloudbender> are the implications in this form ?
[03:09:31] <cloudbender> ... are there
[03:09:33] <ljharb> cloudbender: no
[03:09:38] <ljharb> cloudbender: it's just a dumb coding style
[03:09:46] <cloudbender> ok good to know
[03:09:47] <ljharb> cloudbender: they should be semicolons
[03:09:59] <ljharb> but it's identical since the entire comma sequence is in statement position.
[03:10:09] <cloudbender> I thought maybe there was some new-famgled paralleling notation I missed
[03:10:21] <cloudbender> one never knows
[03:10:56] <ljharb> nope, JS remains single-threaded, thankfully
[03:11:06] <cloudbender> yes
[03:11:57] *** Quits: jetchisel (jetchisel@user/jetchisel) (Remote host closed the connection)
[03:13:33] <cloudbender> I need to take a week away from coding and read the spec 2022
[03:13:36] <jaawerth> what an odd codin style
[03:14:11] <cloudbender> I can post the entire module but it would piss you off, on a friday, so no.
[03:14:16] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:14:22] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:14:25] <cloudbender> It's not my code
[03:15:06] <cloudbender> <<< trying to learn webGL
[03:15:12] <cloudbender> have a great weekend all
[03:15:19] <jaawerth> oh I know! there's just not even a consistent style to it, so it's an odd choice
[03:15:22] <jaawerth> like, the pointless commas, the fact that there ARE a couple semis, but they aren't even there because they have to be to avoid parser errors, they're just there
[03:16:40] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[03:16:50] <cloudbender> The code flow looks alot like what one would see in Erlang
[03:17:00] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:17:10] <cloudbender> I write python that looks like javascript
[03:17:20] <cloudbender> and I get yelled at
[03:17:52] <cloudbender> o/
[03:18:01] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[03:19:40] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[03:19:43] <c4017w> wow, TIL that ?? is a thing
[03:20:20] <c4017w> previously I used || but of course that also accepts other falsy things
[03:21:06] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 250 seconds)
[03:22:10] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[03:22:32] <seed0> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator
[03:22:38] *** Quits: junktext (~junktext@77.247.181.209) (Ping timeout: 268 seconds)
[03:22:50] *** Joins: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs)
[03:23:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:24:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:25:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:27:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:28:07] *** Quits: killown (~killown@user/killown) (Quit: Leaving)
[03:28:18] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:28:44] <cis> c4017w: yeah, it's useful... there's also https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment
[03:28:53] *** Quits: TASM (~TASM@51.36.92.157) (Quit: Client closed)
[03:29:06] <cis> "nullish coalescence" sounds like some arcane theological tenet
[03:29:18] <ljharb> coalescing
[03:29:32] <cis> ljharb: only in the present tense
[03:29:36] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:29:46] <ljharb> it's an adverb, it has no tense
[03:29:54] <ljharb> it's coalescing now, yesterday, and tomorrow
[03:30:14] <cis> see? very metaphysical
[03:30:22] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[03:30:24] <Maxdamantus> "coalescing" there is an adjective, not an adverb.
[03:30:48] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:31:11] <Maxdamantus> (or a "gerund", but grammatically it's adjectival, definitely not adverbial)
[03:31:45] <Maxdamantus> (adjectives also don't have tense)
[03:32:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:32:18] <ljharb> gerund, that's the word i was looking for, ty
[03:32:34] <ljharb> diagramming sentences was a long time ago
[03:33:20] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:35:00] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:36:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:36:20] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[03:36:23] <cis> Maxdamantus: isn't nullish the adjective, and coalescing the present participle?
[03:37:06] <Maxdamantus> cis: yes, "present participle" I guess would actually be more accurate there than "gerund", and participles are functionally adjectives.
[03:37:31] *** Quits: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:37:54] <Maxdamantus> though in "nullish coalescence", there is no participle. "nullish" is an adjective and "coalescence" is a noun.
[03:37:55] <c4017w> oh ??= is even more useful! I had only heard of ?. (or .? i can never remember) before this
[03:38:30] <ashnur> interesting how it is called "present" participle after someone saying it's also past
[03:38:34] <Maxdamantus> if you refer to the act of "nullish coalescing", that is a gerund.
[03:38:54] <Maxdamantus> (which is functionally a noun)
[03:39:00] <ashnur> but then if it's an act, then it's a verb :D
[03:39:01] <cis> c4017w: ?. is optional chaining, also very useful
[03:39:37] <Maxdamantus> Not necessarily. "act" itself in your sentence is an act, and it's not a verb.
[03:39:53] <cis> well I was only joking about it sounding theological, but since we're already arguing about interpretations I'm convinced of it!
[03:39:59] <ashnur> acting is not a noun, unless you make it one :D
[03:41:28] <ashnur> damn, acting is like 5 different adjective
[03:42:00] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[03:42:07] *** Joins: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs)
[03:42:20] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[03:43:22] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 252 seconds)
[03:44:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:44:20] *** Quits: nomic (~nomic@185.217.117.52) (Quit: Leaving)
[03:50:04] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:50:10] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[03:52:20] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:54:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:54:44] <buu> I am calling the same function with the same inputs in two different spots and getting two different outputs augh I am going insane
[03:55:19] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:56:39] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:58:05] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:02:08] *** Quits: CrowX- (~CrowX-@185.167.46.134) (Remote host closed the connection)
[04:03:30] *** Quits: onizu (uid373383@highgate.irccloud.com) (Quit: Connection closed for inactivity)
[04:04:16] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[04:05:35] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:06:08] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:09:09] <ljharb> buu: the function must be stateful
[04:11:55] *** Joins: nomic (~nomic@185.217.117.52)
[04:12:25] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[04:14:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:15:54] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:15:54] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:17:29] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:18:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:19:16] *** Quits: nomic (~nomic@185.217.117.52) (Quit: Leaving)
[04:20:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:20:28] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[04:21:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:22:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:24:22] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[04:24:38] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:24:39] *** Joins: nomic (~nomic@185.217.117.52)
[04:26:08] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:27:02] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[04:27:26] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:28:44] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:29:40] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:30:00] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:31:44] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[04:32:00] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:35:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:36:14] <Guest67> hello javascript gods
[04:36:39] <Guest67> so i am wondering something that i have found strange
[04:37:13] <Guest67> when i remove this entire js code, my server code prints stuff to my terminal as expected, but when i add this javascript code, it ignores the server code
[04:38:04] <Guest67> https://dpaste.org/8ozU
[04:38:32] <Guest67> any ideas why?
[04:38:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:38:42] <Guest67> https://github.com/TwilioDevEd/voice-javascript-sdk-quickstart-python
[04:38:48] <Guest67> this is the tutorial i am following
[04:39:21] <Guest67> when i enter a number, the javascript does send to twilio and it makes a browser call
[04:39:31] <Guest67> but my server side stuff gets completely ignored
[04:39:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:41:01] <robertmaxrees> gonna guess it's doing everything client-side.
[04:41:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:41:56] <Guest67> it is just strange though it even ignores the voice() function in my server which the tutorial includes but they use flask i use django
[04:42:19] <Guest67> i would think it should use bits of each
[04:42:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:44:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:45:32] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:46:09] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:46:49] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:52:34] <Guest67> ok i found a hacky way
[04:52:46] <Guest67> to submit the form through js when i make the call
[04:52:59] <Guest67> for some reason it would not submit itself
[04:53:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[04:53:21] <Guest67> oh wait that didn't work
[04:53:41] <Guest67> it would call then submit / refresh the page
[04:53:49] <Guest67> and the call would get dropped
[04:54:03] <Guest67> is there a way to submit without refreshing the page?
[04:54:59] <cis> Guest67: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API
[04:55:05] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:55:18] <theskillwithin> e.preventDefault()
[04:56:12] <Guest67> can you show me through this function? https://github.com/TwilioDevEd/voice-javascript-sdk-quickstart-python/blob/main/static/quickstart.js#L105-L124
[04:56:19] <Guest67> my form id is 'phoneform'
[04:56:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:57:01] <Guest67> button id is button-call
[04:57:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:57:53] <theskillwithin> Guest67 are you doing an onClick on the button, or an onSubmit on the form the button is in?
[04:58:25] <Guest67> https://github.com/TwilioDevEd/voice-javascript-sdk-quickstart-python/blob/main/static/index.html
[04:58:42] <Guest67> looks like neither?
[04:58:53] <cis> you can listen for the submit event, use e.preventDefault() like theskillwithin said, and then send whatever request & data you want with fetch
[04:58:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:59:00] <Guest67> i copied pretty much both code snippets in those links directly
[04:59:30] <cis> Guest67: https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit_event
[04:59:49] <robertmaxrees> why do you need to hit your server at all tho?
[05:00:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:00:39] <Guest67> to run this https://github.com/TwilioDevEd/voice-javascript-sdk-quickstart-python/blob/main/app.py#L61-L82
[05:00:39] <theskillwithin> Guest67 should put  type="button" on those buttons.  <button type="submit" id="...>
[05:00:53] <cis> robertmaxrees: probably to avoid any private API keys being exposed on the frontend
[05:01:14] <Guest67> currently i have that code and it seems to be ignored i blanked it out and the js still makes a browser call
[05:01:36] <Guest67> but you wonder how it makes a call without me telling which numbers to use...
[05:01:56] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[05:01:58] <Guest67> i tell it through the form and i guess the js picks it up
[05:02:09] <robertmaxrees> Guest67 yeah - it's all client-side.  does it function properly now?
[05:02:17] <robertmaxrees> without hitting your server, that is.
[05:02:22] <Guest67> but i need to configure the incoming / outgoing calls server side i would think?
[05:02:29] <Guest67> how does it know which one is which?
[05:03:19] <Guest67> if i open 2 different browsers with the same url, and i try calling 1 user from the other user, i get a quick ring and the call disconnects automatically
[05:03:35] <Guest67> if i just use 1 tab and enter a number, it calls and i get a voicemail message
[05:03:58] <Guest67> the 2 browsers are to test for incoming calls which don't seem to work
[05:04:36] <Guest67> outgoing works (1 tab only) i guess since i get a message like "thank you for using your demo account, please upgrade to a paid account to remove this message"
[05:05:53] <Guest67> i wanted to tell my server if the call button was clicked, perform an outgoing call otherwise listen for incoming just like the voice() function does in one of the links
[05:06:02] *** Joins: p4rpc (~przemek@89-69-17-47.dynamic.chello.pl)
[05:06:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[05:09:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:14:07] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 252 seconds)
[05:15:28] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[05:16:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:17:05] <theskillwithin> Guest67 why are you taking a tutorial on twilio?
[05:17:17] <Guest67> i need a phone for my business to make calls
[05:17:46] <Guest67> i dont make a lot of calls so it is cheaper to pay for what i use vs a fixed cost of $40 a month unlimited
[05:18:38] <Guest67> at this point i might just say screw it and give up and have someone nerdier than me do it and pay themn
[05:19:24] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[05:19:28] <Guest67> plus it would be nice to scale it to create a call center or something
[05:20:15] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[05:20:35] <Guest67> plus i love how all the twilio tutorials are in flask not django lol
[05:20:56] <Guest67> i say that sarcastically
[05:23:29] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[05:24:53] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:26:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[05:27:28] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:28:33] <theskillwithin> well theres probably a lot of flasks in a call center room
[05:28:48] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[05:33:55] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[05:34:03] <Guest67> nah before the pandemic at my job i saw how they used twilio for each sales rep to make calls through the browser
[05:34:08] <Guest67> that is what i want to replicate
[05:36:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:36:28] <Guest67> i wish twilio used irc like stripe does
[05:36:30] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[05:39:14] *** Quits: s0ullight (~s0ullight@ip-193-121-29-153.dsl.scarlet.be) (Quit: Ping timeout (120 seconds))
[05:39:24] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[05:39:25] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:40:31] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[05:42:10] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[05:43:06] *** Joins: Naan (~Naan@user/naan)
[05:43:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:44:05] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Remote host closed the connection)
[05:45:50] *** Quits: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:46:26] <buu> ljharb: Turns out I'm not (that) insane both calls were returning the same thing I just didn't notice
[05:49:01] *** Joins: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs)
[05:49:28] <buu> well
[05:49:30] <buu> that was stupid
[05:49:44] <buu> I blame npm to be honest
[05:54:42] *** Joins: jazzy (~jaziz@2600:380:863a:4889:5425:f710:b04a:de02)
[05:55:10] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[05:57:35] <buu> It turns out the actual solution was to upgrade to the latest version of the module, of course I had previously run npm update; but of course that doesn't..
[06:05:02] *** Joins: pycurious (~Adium@user/pycurious)
[06:05:08] <pycurious> can anyone point me to a responsive html page that has one image centered that works well on most devices? So that I can just replace the image and text on the page? Preferably css+html on the same page?
[06:06:58] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[06:10:13] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 252 seconds)
[06:19:20] *** Joins: kmh (~kmh@p200300df5f365c009493f11912ec5635.dip0.t-ipconnect.de)
[06:21:22] *** Quits: kmh_ (~kmh@p200300df5f08f1000d0a33b4e315afb6.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:21:42] *** Joins: gggp__ (~gggp@li1772-101.members.linode.com)
[06:27:44] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[06:32:15] *** Joins: sudomannn (~sudomann@86.106.143.76)
[06:32:59] <sickdyd> have you guys taken a look to Remix? I don't understand why I should use that (and btw, pay for it)
[06:34:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[06:36:30] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[06:36:30] *** Joins: Rockwood (~Rocky@user/rocky)
[06:36:30] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 240 seconds)
[06:36:30] *** Quits: andreas3- (andreas303@ip227.orange.bnc4free.com) (Ping timeout: 252 seconds)
[06:36:44] *** Quits: biggusnickus (~biggusdic@user/biggusdickus) (Ping timeout: 252 seconds)
[06:36:44] *** Quits: GreenJello (~GreenJell@user/greenjello) (Ping timeout: 252 seconds)
[06:36:50] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[06:36:51] *** Joins: LiftLeft (~LiftLeft@172.83.47.105)
[06:37:00] *** Joins: GreenJello (~GreenJell@user/greenjello)
[06:37:00] *** Joins: biggusnickus (~biggusdic@user/biggusdickus)
[06:37:10] <sickdyd> it seems that they bundled nicely together tools that I can install by myself separately
[06:37:10] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:37:12] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Ping timeout: 245 seconds)
[06:37:20] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:38:05] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[06:38:09] <LiftLeft> will AbortController cancel a request with fetch that in the process of uploading? If so is there a good way to have timeout without canceling uploading?
[06:38:31] <LiftLeft> Is fetch a bad api?
[06:38:38] <LiftLeft> for uploading
[06:38:54] <LiftLeft> should I just do it the old way?
[06:42:21] <GreenJello> AbortController is for when you want to abort the request. If you're not interested in responses after a period of time, then race the fetch promise against a timer promise
[06:43:07] <GreenJello> not sure what the old way would be here
[06:43:29] <LiftLeft> the xml request api
[06:43:35] <LiftLeft> or whatever it's called
[06:43:56] <GreenJello> the old way of implementing a timeout
[06:44:20] <LiftLeft> I want to upload a file and I don't the request being canceling during upload
[06:44:26] <LiftLeft> *canceled
[06:44:29] <GreenJello> then don't abort it
[06:45:22] <LiftLeft> does the fetch have a built timeout for connections that won't connect?
[06:45:30] <LiftLeft> *built-in
[06:48:12] <LiftLeft> ok I tried it on some random ip, It seems to wait forver
[06:49:40] <LiftLeft> garbage api
[06:49:51] <LiftLeft> I'll use the xml request api instead
[06:49:58] <LiftLeft> this is just a bad api
[06:50:23] <LiftLeft> who approved this?
[06:50:25] <LiftLeft> smg
[06:51:23] <LiftLeft> ok it doesn't spin forever
[06:51:55] <LiftLeft> still garbage api
[06:52:10] <systemfault> XHR has timeout?
[06:52:22] <LiftLeft> pretty sure
[06:52:43] <LiftLeft> unless I'm wrong
[06:53:04] <LiftLeft> it does
[06:53:10] <LiftLeft> just looked it up
[06:53:50] <systemfault> Not sure it's a connection timeout though
[06:53:53] <systemfault> Hmm
[06:54:21] <systemfault> From the doc, it looks like a request timeout (Maybe I'm wrong)
[06:55:03] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[06:55:46] <LiftLeft> I want to timeout the time it takes to connect to the server, not the whole request.
[07:00:19] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 268 seconds)
[07:02:54] *** Joins: zebrag (~chris@user/zebrag)
[07:11:13] <LiftLeft> ok working
[07:11:20] <LiftLeft> no weird side-effects now
[07:11:39] <theskillwithin> 🎉
[07:14:12] *** Quits: nomic (~nomic@185.217.117.52) (Quit: Leaving)
[07:14:30] *** Joins: nomic (~nomic@185.217.117.52)
[07:15:40] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[07:17:20] *** Joins: kill (~killown@user/killown)
[07:24:57] <Rockwood> theskillwithin, o/ h r u?
[07:25:30] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[07:25:56] <theskillwithin> 👋
[07:26:01] <theskillwithin> good
[07:27:54] <Rockwood> i am looking up rating buttons :D
[07:28:01] <Rockwood> and good rating for you
[07:28:15] <sheetjs> the legend responded at 3 AM
[07:28:35] <Rockwood> 3 AM where?
[07:28:39] <sheetjs> the official answer was "We don’t touch the legacy codepage behaviors, so this remains unchanged."
[07:28:58] <sheetjs> aka the mistake remains and there's no future here, so we gotta come up with our own number
[07:31:09] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:31:15] <theskillwithin> sheetjs what are you talking about?
[07:32:06] <sheetjs> oh yesterday came across a bug that boiled down to a discrepancy between apple and microsoft
[07:32:19] <sheetjs> https://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/ROMAN.TXT is apple's official roman encoding
[07:32:34] <sheetjs> http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/MAC/ROMAN.TXT is microsoft's understanding of apple's official roman encoding
[07:33:12] <sheetjs> apple's first release was 1995
[07:33:25] <sheetjs> and in slot 0xBD they used the ohm sign
[07:33:30] <sheetjs> n> "\u2126"
[07:33:31] <jellobot> (okay) 'Ω'
[07:33:40] <sheetjs> microsoft copied that in 1996
[07:33:52] <sheetjs> then in 1997 apple realized the error in their ways and corrected it to the actual omega
[07:33:58] <sheetjs> n> "\u03a9"
[07:33:58] <jellobot> (okay) 'Ω'
[07:34:08] <Rockwood> sheetjs, do you have any idea to create rating buttons by html or css?
[07:34:21] <sheetjs> fast forward to 2021, excel is using apple's encoding instead of microsoft's and that was leading to some strange errors
[07:34:40] *** Quits: sudomannn (~sudomann@86.106.143.76) (Ping timeout: 240 seconds)
[07:34:46] <sheetjs> you mean like those 5 star things?
[07:35:00] <sheetjs> https://css-tricks.com/five-methods-for-five-star-ratings/
[07:35:29] <sheetjs> theskillwithin: so i wanted to get some history and see if microsoft fixed the error.  there's an email in the microsoft doc
[07:35:31] <sheetjs> shawn steele
[07:35:45] <sheetjs> so i reached out, not really expecting anything since that email is 25 years old
[07:36:08] <sheetjs> but he replied! and the answer is that it wasn't touched and microsoft does not plan to touch it
[07:36:41] <theskillwithin> https://codepen.io/theskillwithin/pen/XWXZMKw
[07:36:44] <sheetjs> id compare the situation to someone copying a wrong answer from stackoverflow
[07:36:58] <sheetjs> the answer may be fixed later, but the copier may not go back and fix it
[07:38:07] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[07:39:01] <sheetjs> 54337 is unused and may be a good choice for this correct apple roman encoding
[07:40:45] <theskillwithin> lol thats kinda funny
[07:41:56] *** Quits: nomic (~nomic@185.217.117.52) (Quit: Leaving)
[07:44:01] *** Quits: wintersky (uid453465@id-453465.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[07:48:41] *** Joins: cth (~Cthulchu@213.174.21.101)
[07:49:13] <sheetjs> sad part is
[07:49:20] <sheetjs> in 24 years not one person looked into or asked about it
[07:55:55] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[07:56:55] *** Quits: ckdCreations (~ckdCreati@147.55.130.33) (Read error: Connection reset by peer)
[07:57:04] <theskillwithin> sheetjs is a modern day indiana jones
[07:57:08] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:59:05] *** Quits: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs) (Quit: Textual IRC Client: www.textualapp.com)
[08:00:27] <ljharb> sheetjs: for all you know someone asked about it every week, and got the same answer
[08:00:44] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 268 seconds)
[08:01:19] *** Quits: LiftLeft (~LiftLeft@172.83.47.105) (Ping timeout: 252 seconds)
[08:01:31] <sheetjs> nah he said no one looked into it
[08:02:07] <sheetjs> if someone did, there would either have been a codepage change or a new codepage
[08:03:20] <theskillwithin> or they all ended up dead because they knew too much
[08:04:30] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 250 seconds)
[08:07:55] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Ping timeout: 252 seconds)
[08:18:20] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[08:20:36] <wroathe> So I'm digging into styled-components for the first time, and my first impression of it is that it has the potential to encourage LOTS of duplicate CSS within a codebase. Has anyone here used it at scale? Did that match your experience?
[08:21:46] *** Joins: mei (~mei@user/mei)
[08:23:25] <sheetjs> yes and thats the point
[08:23:37] <ljharb> wroathe: i think one of the biggest downsides is that by inventing its own DSL inside template literals, it breaks all syntax highlighting and static analysis tools
[08:23:41] <ljharb> it seems super dumb to me
[08:24:00] <wroathe> sheetjs: Can you elaborate?
[08:24:14] <theskillwithin> i think sheetjs was being snarky
[08:24:26] <sheetjs> css styling is global
[08:25:03] <sheetjs> to make it "scoped" or "sane", either there must be duplication or shared base styles
[08:25:14] <wroathe> sheetjs: Oh, right. It sounds like we're in agreement then.
[08:25:22] <wroathe> I see that as being a very bad thing at scale.
[08:25:47] <theskillwithin> its the same concept with css modules, wroathe have u used that b4?
[08:25:58] <sheetjs> correct, it makes development easier but production worse
[08:26:00] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:26:32] <wroathe> theskillwithin: I looked at that. That doesn't necessarily have the same problem. Multiple components can import one CSS module.
[08:26:57] <theskillwithin> multiple components can import a styled component
[08:27:16] <ljharb> lol does wroathe have me on ignore
[08:27:25] <theskillwithin> no?
[08:27:59] <wroathe> theskillwithin: Indeed. It's possible to reuse code with both. My concern is what the design goals of each project are, and how they market it in documentation.
[08:28:37] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[08:28:40] <wroathe> styled-components is clearly oriented around the idea that a component owns it's own styles in isolation
[08:28:57] <ljharb> that idea is good
[08:29:02] <theskillwithin> so does css modules
[08:29:05] <ljharb> a component should always own its own styles and should NEVER be styleable from without
[08:29:15] <ljharb> a component that accepts `className` or `style` props is a badly designed one
[08:29:29] <wroathe> theskillwithin: Not necessarily. CSS modules isn't even tied to react, for instance.
[08:30:10] <wroathe> So I can have a main folder of CSS modules, and encourage code reuse by having components import them and use the classes that they need.
[08:30:18] <theskillwithin> wroathe i mean css modules in the sense where its tied to the element.  ie import styles from './styles.module.css'    <div className={styles.foo}
[08:30:46] <ljharb> "a component owns its own styles in isolation" has no bearing on reusability.
[08:31:23] <wroathe> theskillwithin: The point is that styles.foo doesn't carry around a component hierarchy as baggage. It's just a reference to a CSS class.
[08:31:28] <sheetjs> styled-components evolved from making react CSS stuff easier
[08:31:28] <ljharb> theskillwithin: lol see what i mean
[08:31:57] <theskillwithin> wroathe anyways, styled-components is pretty awesome.  but if you don't like styled components, id go for some sort of postcss css modules setup
[08:32:07] <wroathe> theskillwithin: I'm leaning towards the latter.
[08:32:14] <wroathe> theskillwithin: Still evaluating, though.
[08:32:15] <ljharb> css-in-js is awesome. styled-components is not.
[08:32:25] <wroathe> theskillwithin: Have you used styled-components at scale?
[08:33:06] <theskillwithin> currently ya, more specifically emotionjs,  but im not really sure how much that differs from styled-components. either are good
[08:33:13] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[08:34:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[08:34:06] <theskillwithin> ljharb ya that syntax highlighting, and sometimes autocomplete stuff breaks a lot with that stuff.
[08:34:09] <ljharb> i've used it at scale, but since wroathe is ignoring me, i guess he'll never get my valuable knowledge for free
[08:34:27] *** Quits: venue (~venue@user/venue) (Quit: adios)
[08:34:29] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[08:34:36] <ljharb> have fun learning the hard way! that's the smart way to learn things.
[08:35:14] <ljharb> the fun part is if there's ever any op business with someone and they ignore an op, they get insta-banned for eternity :-) `/ignore` is a dangerous game to play.
[08:35:28] <wroathe> theskillwithin: This also meets my requirements: https://www.npmjs.com/package/@emotion/css
[08:35:32] <wroathe> theskillwithin: Thanks for the recommendation.
[08:37:45] <cis> ljharb: what do you prefer over styled-components?
[08:38:07] <ljharb> cis: my current employer is slowly migrating everything over to linaria
[08:38:18] <sheetjs> hand-crafted artisanal sheets
[08:38:22] <ljharb> cis: my favorite tho was aphrodite via https://npmjs.com/react-with-styles, when at airbnb
[08:38:29] <cis> ljharb: interesting, I'll check that one out
[08:38:36] <ljharb> the best part is that if you want to change your styling method, you can do it in one place
[08:38:46] <ljharb> so you're never tightly coupled to any particular, potentially losing, implementation
[08:39:15] <theskillwithin> I think I heard about linaria, its still a bit fresh tho
[08:39:23] <sheetjs> Write CSS in JS, but with zero runtime, CSS is extracted to CSS files during build
[08:39:46] <cis> that is pretty nice
[08:39:50] <ljharb> theskillwithin: not sold on it yet tbh
[08:39:53] <ljharb> sheetjs: yes, exactly
[08:40:18] <ljharb> cis: the best part is that open source react components can be authored with react-with-styles and then EVERYONE can use them, not just "the people using your particularly trendy flavor of styling"
[08:40:51] <theskillwithin> i think its supposed to be better, but they have some bugs and stuff to work out
[08:41:36] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[08:42:51] <wroathe> I suppose ultimately this comes down to whether you continue components to be the sole source of code reuse within your application or not. You can make the argument that components should be styled in isolation, and that reuse should be structured around reusable components. I see that as being an extension of the web components philosophy that Google and friends were trying to push back around the
[08:42:57] <wroathe> release of Polymer. It's a gateway drug to other non-DOM styles of components too (like the idea of an "effects" component that Greenjello and I were discussing a few days ago in here)
[08:43:01] <wroathe> whether you consider* components
[08:43:21] <sheetjs> so there was a serious thought about getting a unicode NFT but that seems like a waste
[08:43:33] <wroathe> I remember looking on in horror when they gleefully demoed an "AJAX" web component that would sending an AJAX request for you.
[08:43:49] <cis> sheetjs: did you settle on an emoji?
[08:43:51] <sheetjs> instead, that money is better used to support some open source projects
[08:44:05] *** Joins: WizJin (~z0rbaznc@78.141.221.79)
[08:44:15] <sheetjs> nah instead of $5K for some NFT nonsense, might as well spread the wealth to some cool projects
[08:44:15] <wroathe> I was personally horrified by that idea (the idea of wrapping what would be potentially complex imperative code in a declarative API)
[08:44:29] <sheetjs> so pick one of these css libraries
[08:44:52] <wroathe> sheetjs: Was that last line for me?
[08:45:06] <sheetjs> the group, pick one and we'll make a donation
[08:45:07] <theskillwithin> of course you can take reusable too far sometimes, then a junior dev changes one thing, and unknowingly breaks 10 other things
[08:45:45] <wroathe> sheetjs: I personally think the ones that aren't necessarily tied to React have the potential to have a broader impact on the community.
[08:46:02] <wroathe> sheetjs: For what that's worth in making your determination
[08:46:10] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 240 seconds)
[08:46:35] <wroathe> theskillwithin: Indeed. It's a balance between autonomy and maintainability.
[08:47:03] <wroathe> theskillwithin: I've worked on one too many large projects that have prioritized the former at the expense of the latter.
[08:47:11] <sheetjs> theskillwithin: you mentioned emotion
[08:47:30] <theskillwithin> ya  emotion.sh
[08:48:53] <sheetjs> you like it?
[08:49:44] <theskillwithin> ya, altho, i haven't used all the different flavors of these sorta styled component css in js libraries. so i can't say its the best.  but ya I like it
[08:50:18] <theskillwithin> the closest one is styled-components, which is very close
[08:50:26] <sheetjs> is it tied to react?
[08:50:56] <sheetjs> "There are two primary methods of using Emotion. The first is framework agnostic and the second is for use with React."
[08:51:25] <theskillwithin> i pretty much only do react, so not sure
[08:52:01] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[08:53:04] <wroathe> sheetjs: So what do you typically set up your CSS stack on an application?
[08:53:17] <sheetjs> hand-crafted
[08:53:26] <sheetjs> even the sheetjs logo is hand-crafted css
[08:53:45] <wroathe> sheetjs: Right. Carefully curated CSS classes that get reused throughout the application. Old trusty.
[08:53:47] <sheetjs> https://sheetjs.com/cfb-editor/logo.svg you can view source
[08:54:01] <sheetjs> for generated stuff, like HTML tables
[08:54:25] <sheetjs> there's trusty inline styling as well as attribute-specific classes
[08:55:17] <wroathe> sheetjs: I like the idea of CSS modules for their potential to reduce bugs due to class name misspelling
[08:56:00] <sheetjs> postcss has module support
[08:56:11] <wroathe> sheetjs: Yup
[08:56:47] <wroathe> Well, thanks for the debate gents. Time to hit the hay.
[09:09:22] *** Quits: unixcat64 (thelounge@fedora/hyperreal) (Quit: the lounge - https://webirc.envs.net)
[09:12:01] *** Joins: unixcat64 (thelounge@envs.net)
[09:22:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[09:24:31] *** Quits: hax (~hax@user/hax) (Quit: Leaving)
[09:30:44] *** Quits: p4rpc (~przemek@89-69-17-47.dynamic.chello.pl) (Ping timeout: 250 seconds)
[09:35:34] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[09:35:34] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:38:32] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[09:42:22] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[09:44:38] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[09:46:02] <Guest67> ok people i decided not to give up on twilio
[09:46:05] <Guest67> i made good progress
[09:46:46] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 250 seconds)
[09:47:09] <Guest67> line 54 https://dpaste.org/bk1h
[09:48:02] <Guest67> i want to replace resp.dial('+12345678909', caller_id='+19876543212', action='/phone/voice/', method='GET') with resp.dial(FORM_PHONE_NUMBER, caller_id='+19876543212', action='/phone/voice/', method='GET')
[09:48:26] <Guest67> where FORM_PHONE_NUMBER is the number i type into the form
[09:49:02] <Guest67> https://github.com/TwilioDevEd/voice-javascript-sdk-quickstart-python/blob/main/app.py#L75
[09:49:09] <Guest67> flask uses this...
[09:49:31] <Guest67> i asked the django channel but idk if any javascript stuff is needed
[09:59:21] *** Joins: mikkel (~mike@208.110.120.167)
[10:05:25] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[10:05:40] *** Joins: cth (~Cthulchu@213.174.21.101)
[10:11:23] <cis> Guest67: you'll need JS for whatever you want to do on the frontend
[10:13:29] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[10:16:51] <Guest67> yes i know but this twilio js code seems to ignore when the form gets submitted via a POST
[10:21:01] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 252 seconds)
[10:23:40] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[10:23:51] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:28:22] <theskillwithin> Guest67 this is not a python channel
[10:28:34] <Guest67> yes i know sorry
[10:29:09] *** Joins: Akimb (~Akimb@86.100.13.100)
[10:30:15] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[10:34:09] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[10:34:10] <banana_> we talk about regex though
[10:34:30] <banana_> so just do the / <regex pattern/ in here and youre all good
[10:35:46] *** Joins: Junxter (~Junxter@121.237.61.175)
[10:37:52] *** Joins: silly (~silly@user/silly)
[10:38:00] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[10:38:20] *** Joins: pycurious (~Adium@user/pycurious)
[10:47:29] *** Quits: mei (~mei@user/mei) (Quit: mei)
[10:48:36] *** Joins: mei (~mei@user/mei)
[11:07:01] *** Joins: l__q (~modinfo@user/modinfo)
[11:07:54] *** Joins: WishBoy (~WishBoy@user/wishboy)
[11:09:47] <l__q> Hmm, from where we all can this rythmus? https://mikr.mirkochat.pl/pukanie.mp4
[11:10:00] <l__q> Have this a title?
[11:10:22] *** Quits: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[11:11:05] <l__q> I created this sound for myself becouse I dont even know what is titled, but whole world can this sound, but why?
[11:18:09] *** Joins: vysn (~vysn@user/vysn)
[11:20:09] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 248 seconds)
[11:30:33] *** Quits: WishBoy (~WishBoy@user/wishboy) (Remote host closed the connection)
[11:31:38] *** Joins: WishBoy (~WishBoy@user/wishboy)
[11:38:00] *** Joins: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net)
[11:40:41] *** Joins: _banana_ (~banana_@2603-6000-b500-9ce3-e414-4f67-5716-3b45.res6.spectrum.com)
[11:43:02] *** Quits: krishna (~krishna@76.14.21.109) (Ping timeout: 245 seconds)
[11:43:06] *** Quits: silly (~silly@user/silly) (Quit: Leaving)
[11:43:40] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[11:47:02] *** Joins: mexen (uid495612@user/mexen)
[11:47:17] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[11:49:33] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[11:53:44] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 250 seconds)
[11:54:45] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[11:54:52] <random-jellyfish> do you guys know any good playing cards library I can use to make a card game?
[11:56:13] *** Quits: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[11:57:23] <l__q> im used package "cards" from npm to create my own online maumau card game
[11:57:29] <l__q> but its only a deck
[11:57:43] <l__q> with shuffles
[11:57:51] <l__q> give cards
[11:57:56] <l__q> its perfect
[11:58:33] <l__q> deal cards*
[11:59:15] <theskillwithin> what about blackjack?
[12:00:17] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:7b1c:c7fd:37c9:2b2a)
[12:09:41] *** Joins: Rockwood (~Rocky@user/rocky)
[12:20:40] *** Joins: dsrt^ (~dsrt@209.65.131.194)
[12:27:12] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Read error: Connection reset by peer)
[12:28:05] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[12:28:30] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[12:29:22] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[12:32:24] *** Joins: sri19 (uid477846@id-477846.charlton.irccloud.com)
[12:32:31] *** Joins: ErskaConti (~ErskaCont@mobile-access-5672c0-254.dhcp.inet.fi)
[12:35:46] *** Joins: CiaoSen (~Jura@p200300c957490d002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[12:36:05] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:22] *** Quits: ErskaConti (~ErskaCont@mobile-access-5672c0-254.dhcp.inet.fi) (Client Quit)
[12:36:41] *** Joins: ErskaConti (~ErskaCont@mobile-access-5672c0-254.dhcp.inet.fi)
[12:38:00] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:40] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[12:40:27] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[12:44:01] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[12:44:10] *** Quits: CiaoSen (~Jura@p200300c957490d002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:45:01] *** Joins: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de)
[12:48:55] *** Joins: wintersky (uid453465@id-453465.brockwell.irccloud.com)
[12:55:33] *** Joins: gggp_ (~gggp@li1772-101.members.linode.com)
[12:58:52] *** Quits: gggp__ (~gggp@li1772-101.members.linode.com) (Ping timeout: 252 seconds)
[12:59:40] *** Joins: gggp (~textual@60.10.23.160)
[13:02:10] *** Quits: gggp_ (~gggp@li1772-101.members.linode.com) (Ping timeout: 252 seconds)
[13:05:29] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:05:53] *** Joins: TASM (~TASM@95.185.40.254)
[13:06:28] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe)
[13:06:40] *** Quits: TASM (~TASM@95.185.40.254) (Client Quit)
[13:08:10] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[13:20:52] *** Quits: gggp (~textual@60.10.23.160) (Ping timeout: 252 seconds)
[13:21:42] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Ping timeout: 250 seconds)
[13:26:24] *** Joins: gggp (~textual@60.10.23.165)
[13:28:33] *** Joins: dsrt^ (~dsrt@209.65.131.194)
[13:32:03] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[13:40:40] *** Quits: gggp (~textual@60.10.23.165) (Ping timeout: 240 seconds)
[13:45:41] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:46:42] *** Quits: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[13:48:08] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe) (Ping timeout: 250 seconds)
[13:49:02] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[13:49:20] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Remote host closed the connection)
[13:49:41] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe)
[13:50:25] *** Quits: _banana_ (~banana_@2603-6000-b500-9ce3-e414-4f67-5716-3b45.res6.spectrum.com) (Ping timeout: 258 seconds)
[13:53:31] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe) (Remote host closed the connection)
[13:59:10] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:59:10] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[13:59:10] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[14:03:21] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[14:04:56] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[14:08:28] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[14:09:25] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[14:13:59] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[14:16:13] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 246 seconds)
[14:18:17] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 248 seconds)
[14:18:45] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 268 seconds)
[14:20:20] *** Joins: _xxoxx (~Junxter@121.237.61.175)
[14:23:14] *** Quits: Junxter (~Junxter@121.237.61.175) (Ping timeout: 250 seconds)
[14:33:24] *** Joins: codebam (~codebam@user/codebam)
[14:35:07] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[14:35:35] *** Quits: penthief (~penthief@user/penthief) (Quit: ZNC - https://znc.in)
[14:39:03] *** Joins: gggp (~textual@45.8.158.107)
[14:39:40] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[14:47:46] *** Quits: gggp (~textual@45.8.158.107) (Ping timeout: 252 seconds)
[14:48:19] *** Joins: gggp (~textual@45.8.158.107)
[14:48:20] *** Joins: silly (~silly@user/silly)
[14:48:34] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:bc9b:b99f:be00:5e72) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:54:15] *** Quits: ErskaConti (~ErskaCont@mobile-access-5672c0-254.dhcp.inet.fi) (Quit: Leaving)
[14:55:57] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[15:05:27] *** Quits: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Remote host closed the connection)
[15:06:21] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[15:10:28] *** Joins: l__q (~modinfo@user/modinfo)
[15:14:28] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[15:20:46] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 252 seconds)
[15:22:36] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[15:24:19] *** Joins: vysn (~vysn@user/vysn)
[15:35:51] *** Joins: p4rpc (~przemek@89-69-17-47.dynamic.chello.pl)
[15:37:41] *** Quits: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Remote host closed the connection)
[15:38:35] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[15:41:40] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[15:43:27] *** Joins: codebam (~codebam@user/codebam)
[15:44:17] *** Joins: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de)
[15:44:58] *** Quits: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Remote host closed the connection)
[15:45:55] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[15:50:16] *** Joins: Rockwood_ (~Rocky@user/rocky)
[15:52:04] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 250 seconds)
[15:57:42] *** Quits: gggp (~textual@45.8.158.107) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:58:12] *** Joins: gggp (~textual@45.8.158.107)
[16:00:24] *** Quits: gggp (~textual@45.8.158.107) (Remote host closed the connection)
[16:01:29] *** Joins: gggp (~textual@60.10.194.48)
[16:06:55] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[16:09:11] *** Quits: eqw (~eqw@31.134.178.99) (Ping timeout: 258 seconds)
[16:09:18] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:09:46] *** Joins: eqw (~eqw@31.134.178.99)
[16:12:33] *** Quits: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Remote host closed the connection)
[16:16:11] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[16:18:27] *** Joins: Heraes (~Heraes@user/romarain)
[16:19:06] *** Quits: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Remote host closed the connection)
[16:21:30] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[16:22:09] *** Quits: sri19 (uid477846@id-477846.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[16:29:51] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[16:31:25] *** Parts: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Leaving)
[16:35:54] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[16:40:31] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[16:41:00] *** Quits: CoJaBo (~aztec@user/CoJaBo) (Ping timeout: 258 seconds)
[16:45:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:49:45] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[16:52:04] *** Joins: mexen (uid495612@user/mexen)
[16:52:44] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[16:56:35] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[16:58:58] *** Joins: pulse (~pulse@user/pulse)
[17:00:52] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 252 seconds)
[17:03:34] *** Quits: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:05:40] *** Joins: codebam (~codebam@user/codebam)
[17:11:58] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[17:15:16] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:15:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:16:43] *** Joins: velix (~velix@user/velix)
[17:17:06] <velix> Does "preload" in <link> have anything to do with the preloading (push) feature of http2 ?
[17:19:10] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (Ping timeout: 240 seconds)
[17:20:47] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[17:22:04] <velix> yes, it does. https://symfony.com/doc/current/web_link.html
[17:22:07] <velix> thansk
[17:22:12] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[17:22:19] *** Quits: dachi_ (~dachinat@37.232.98.166) (Remote host closed the connection)
[17:22:32] *** Joins: dachi_ (~dachinat@37.232.98.166)
[17:23:00] *** Joins: WishBoy (~WishBoy@179.111.92.5)
[17:23:00] *** Quits: WishBoy (~WishBoy@179.111.92.5) (Changing host)
[17:23:00] *** Joins: WishBoy (~WishBoy@user/wishboy)
[17:24:41] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[17:27:49] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[17:28:25] *** Joins: tkob (tkob@user/thekingofbandit)
[17:40:04] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[17:40:26] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:7b1c:c7fd:37c9:2b2a) (Quit: Leaving)
[17:43:16] *** Joins: ferdna (~ferdna@user/ferdna)
[17:48:26] *** Quits: ___Rockwood__ (~Rocky@user/rocky) (Quit: The Time is Over)
[18:00:50] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[18:02:38] *** Joins: entuland (~entuland@user/entuland)
[18:03:28] <entuland> hello there everyone, anyone has any pointer or link about "client" as a protocol scheme? I refer to this: "Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, client, chrome-untrusted, https."
[18:03:34] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[18:05:26] <entuland> I wonder if it could be used to work around the dumb CORS error on chrome / chromium when trying to load JS scripts as modules for local files (yep, I know, I can use a local static server, but I'm trying to find a solution for an embedded browser without having to also add an embedded webserver)
[18:06:37] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[18:07:09] <entuland> "client" doesn't appear here: https://en.wikipedia.org/wiki/List_of_URI_schemes
[18:08:30] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[18:09:32] *** Joins: codebam (~codebam@user/codebam)
[18:09:45] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7092:49:a60f:f7cb)
[18:10:13] *** Quits: paulman (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[18:11:36] *** Joins: ArchNoob (~maotora@user/archnoob)
[18:13:39] *** Joins: thiras (~thiras@user/thiras)
[18:14:11] *** Joins: voltage_ (voltage@user/voltage)
[18:21:46] *** Joins: mattil (~mattil@87-92-153-0.rev.dnainternet.fi)
[18:22:52] *** Joins: jess (~jess@libera/staff/jess)
[18:26:15] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:27:13] *** Joins: kakashiAL (~kakashi@188.111.42.10)
[18:28:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[18:30:40] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[18:31:09] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[18:32:12] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[18:33:25] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:6fa4:9aff:db69:8cff)
[18:36:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:37:07] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[18:39:02] *** Quits: p_stampy (~p_stampy@user/p-stampy/x-2915953) (Quit: Ping timeout (120 seconds))
[18:39:24] *** Joins: p_stampy (~p_stampy@user/p-stampy/x-2915953)
[18:40:01] *** Joins: __xxoxx (~Junxter@121.237.61.175)
[18:40:41] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[18:42:48] *** Quits: _xxoxx (~Junxter@121.237.61.175) (Ping timeout: 250 seconds)
[18:42:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 258 seconds)
[18:43:05] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[18:44:56] *** Gustavo6046_ is now known as Gustavo6046
[18:48:16] *** Joins: keypusher (keypusher@user/keypusher)
[18:49:41] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[18:50:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:52:20] <ThePendulum> man karma decay has the worst possible SEO
[18:52:49] *** Joins: keypusher (keypusher@user/keypusher)
[18:53:08] <ThePendulum> if you google it doesn't come up with irrelevant results, it comes up exclusively with references to their actual site, but it won't show karmadecay.com, thought they'd gone offline, but nope
[18:55:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[19:02:04] *** Joins: sept (~user1@24-52-239-66.cable.teksavvy.com)
[19:02:07] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:02:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[19:04:18] *** Quits: flameboi (dgw@user/flameboi) (Quit: Ping timeout (120 seconds))
[19:04:38] *** Joins: flameboi (dgw@user/flameboi)
[19:06:18] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[19:12:24] *** Joins: Naan (~naan@user/naan)
[19:16:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[19:18:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:19:14] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:23:01] *** Joins: nuncanada (~dude@181.213.52.63)
[19:23:37] *** Quits: nuncanada (~dude@181.213.52.63) (Remote host closed the connection)
[19:28:20] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[19:33:25] <sept> Hi, I'm trying to use github as a WebRTC signaling system. That means I want to save a string (the SDP) to github somehow (it doesn't need to be a file, maybe it could be a title?), and be able to download it from github. I'm a beginner to both Javascript and Git.
[19:33:45] <sept> I'm in the browser.
[19:34:31] <sept> I was thinking maybe saving the SDP string as the title of some file, and then downloading that title to the other browser.
[19:35:23] <sept> My understanding is that you can only save strings to the localStorage (unless you use Chrome and the File API, I'm guessing).
[19:38:41] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:41:47] <sept> the SDP is a string with less than 800 characters (including spaces).
[19:49:19] *** Joins: richardwhiuk (richardwhi@46.235.228.120)
[19:49:29] *** Joins: nomic (~nomic@185.192.69.192)
[19:55:00] *** Joins: CoJaBo (~aztec@user/CoJaBo)
[19:55:23] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[19:56:56] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[19:57:14] *** Joins: nomic (~nomic@185.192.69.192)
[19:57:55] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 268 seconds)
[19:59:32] <ljharb> sept: you can’t save anything to GitHub from the web without a webserver to do it
[20:00:17] <ljharb> sept: iow such a signaling system requires a logicful webserver, that you almost certainly will have to pay for
[20:00:52] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[20:02:26] *** Joins: voltage (voltage@user/voltage)
[20:02:34] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[20:02:37] *** voltage is now known as voltagE_
[20:02:46] *** Joins: mikrosis (~mikrosis@dynamic-046-114-175-021.46.114.pool.telefonica.de)
[20:02:51] *** voltagE_ is now known as voltage_
[20:03:42] <sept> ljharb: Ok, let's say there's a JSON file already in the github repo. I'm assuming that Javascript in the browser can download JSON using the URL of that file?
[20:04:16] <ljharb> only if the server provides the right headers - I’m not sure if GitHub pages does, but I’d hope so
[20:04:33] <ljharb> let’s assume that works tho, it’s still read-only
[20:05:02] <sept> ljharb: Yes. I only need the other peer to read and load the file without modifying it.
[20:05:40] <ljharb> why do you need webrtc for that? They can all just reference a URL
[20:06:39] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:6fa4:9aff:db69:8cff) (Quit: Leaving)
[20:07:48] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:07:59] <sept> ljharb: I'm not sure what you mean by that. I'm trying to establish a connection with a peer I know and will be communicating with from time to time. I want to update my IP:port using a stun server just in case it changes from one day to the next.
[20:08:06] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:6fa4:9aff:db69:8cff)
[20:08:11] <sept> port
[20:08:54] <sept> In other words, I want a URL that has the most up-to-date IP port info.
[20:09:06] <ljharb> right but how will that be kept up to date?
[20:09:17] <sept> ljharb: manually.
[20:09:20] <sept> for now.
[20:09:25] <sept> Until I learn more.
[20:09:33] <ljharb> ok, then sure, just sticking a json file somewhere works
[20:09:58] <ljharb> be aware tho that JS on the web is much harder than most kinds of dev and can’t just be casually dipped into
[20:10:05] <ljharb> !eloquent @ sept
[20:10:05] <jellobot> sept, Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
[20:11:07] <sept> thanks jellobot: I have that book already. Thanks for reminding me about it. I will take a look at it again.
[20:11:23] <sept> oops. Thanks ljharb
[20:11:29] <sept> that's a bot... my bad.
[20:14:42] <gggp> is there lib like guava of java
[20:16:57] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[20:18:12] <banana_> ljharb: yeah or the definitive guide
[20:18:39] <banana_> eloquent JavaScript though too
[20:34:16] *** Joins: jazzy2 (~jaziz@172.58.35.245)
[20:34:31] *** jazzy is now known as Guest6196
[20:34:39] *** jazzy2 is now known as jazzy
[20:37:02] *** Quits: p4rpc (~przemek@89-69-17-47.dynamic.chello.pl) (Quit: Konversation terminated!)
[20:37:10] *** Quits: Guest6196 (~jaziz@2600:380:863a:4889:5425:f710:b04a:de02) (Ping timeout: 240 seconds)
[20:37:27] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[20:41:58] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[20:48:46] *** Joins: nomic (~nomic@185.192.69.192)
[20:49:57] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[20:51:30] <cloudbender> consider ing   <script src ="demoscript.js" defer></script>
[20:51:44] <cloudbender> can I defer/asyn on images and other resources also ?
[20:52:55] *** Parts: sept (~user1@24-52-239-66.cable.teksavvy.com) ()
[20:56:03] <cloudbender> nevermind
[20:56:10] <cloudbender> scripts only per docs
[20:56:54] <cloudbender> everthing else is handled during the page parsing
[20:57:05] *** Joins: muhblockchain (~muhblockc@user/muhblockchain)
[20:57:55] <muhblockchain> are there tools that allow to have a database saved as simple JSON files (to have database in texts files), and allow to load/edit/save such database?  my goal is to have an editable database stored in text files with simple format (in order to keep that in version control system)
[20:58:34] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[20:58:51] *** Joins: nomic (~nomic@185.192.69.192)
[20:58:59] <cloudbender> use ndj files for persistence, and write persist/depersist methods
[20:59:11] <cloudbender> 'newline-delimited jason'
[20:59:18] <cloudbender> er, json
[21:01:23] <muhblockchain> cloudbender: hm? what I'm looking for, is a tool to use as user, e.g. a ready program (ideally - on Debian) to use.  (not tools to develop it)
[21:01:35] <cloudbender> ok
[21:01:46] *** Quits: jazzy (~jaziz@172.58.35.245) (Ping timeout: 252 seconds)
[21:02:38] <cloudbender> there are tons of usable database engines out there, postgres, couchbase, reddis are very popular
[21:02:42] <ljharb> banana_: nope, pretty sure i didn’t recommend that one
[21:02:59] <ljharb> gggp: dunno, wtf is guava
[21:03:10] <muhblockchain> cloudbender: but they do not save data in form of text files like json files?
[21:03:16] <ljharb> muhblockchain: yes but why, that’s what SQLite is
[21:03:33] <cloudbender> ^^^
[21:03:36] <ljharb> muhblockchain: who cares if it’s in text form? nobody will be reviewing those diffs
[21:03:47] <muhblockchain> ljharb: i will. that is my use case
[21:03:50] <ljharb> if you need review then just use directories and normal text files to organize it
[21:03:57] <ljharb> muhblockchain: elaborate? It seems like an xy priblem
[21:04:15] <ljharb> like what are you actually doing, as opposed to how you think you can do it
[21:04:24] <muhblockchain> ljharb: sometimes xy problem is that user really decided on using x tool and that's it. in my case  it's I want  db in text files, to be kept in git
[21:04:44] <ljharb> nah, that’s never how xy problems go :-)
[21:04:49] <ljharb> why do you think you want that tho
[21:04:55] * muhblockchain sighs
[21:05:06] <muhblockchain> <muhblockchain> database of files, with tracked, checksummed, and optionally signed changes.  and few other things    <muhblockchain> Blondie101010: git log -p for deletions. CSV tools to find records.  I do not how ever work much with old changes, just need a log to exist with checksums (against gitrot) and signatures  <muhblockchain> Blondie101010: what I like in git, is the ideal tracking/log: all is checksummed, all can
[21:05:09] <ljharb> “deciding on x tool” is stupid if it’s not actually the best tool for the job
[21:05:13] <muhblockchain> be signed. no file damage will happen, and all changes can be (if needed) reviewed (e.g. why/when/how this data was changed)
[21:05:16] <ljharb> muhblockchain: right but what data is in there
[21:05:32] <ljharb> databases already solved the problem of corruption and review decades ago
[21:05:37] <cloudbender> don't use csv, use json
[21:05:39] <muhblockchain> ljharb: not in a way that satisfies me
[21:05:40] <ljharb> audit logs are a long-understood thing
[21:05:54] <ljharb> muhblockchain: then explain what is insufficient with the current solutions and why?
[21:06:09] <ljharb> “i don’t know <thing that satisfies everyone else on the planet>” is not sufficient explanation :-)
[21:06:14] <muhblockchain> of course, that COULD be done in any sql
[21:06:15] <ljharb> s/know/like
[21:06:26] <muhblockchain> one could re-invent same tools, to store each edit, and it's digital signature
[21:06:41] <muhblockchain> but also, this precludes me from using already existing tools, that I like
[21:06:55] <ljharb> those tools already do that tho
[21:07:16] *** Quits: kill (~killown@user/killown) (Ping timeout: 252 seconds)
[21:07:18] <ljharb> so again can you explain in plain English what you’re doing, as opposed to how you’re trying to solve it from a technical perspective?
[21:07:28] <ljharb> like, what concrete real world requirements are driving this desire
[21:07:38] <muhblockchain> ljharb: how will I see what was the title on last 3 edits to dastabase, who done them, and are these edits gpg signed, in text console on linux
[21:07:53] <cloudbender> with ndj records, each line can have it's own easily parseable structure
[21:07:55] <ljharb> muhblockchain: MySQL has been able to do that for decades
[21:08:02] <muhblockchain> because in csv+git it's git log -p --show-signatures
[21:08:06] <ljharb> muhblockchain: i built that in MySQL in like 2007, it’s trivial
[21:08:20] <ljharb> git isn’t scalable if you use it in this way
[21:08:32] <ljharb> your git commands will start taking minutes to complete, eventually.
[21:08:36] <cloudbender> each record can have a valid checsum property, or no checksum property
[21:08:50] <ljharb> git is not the right tool for the job here, ever
[21:08:54] <muhblockchain> ljharb: that would be ok, and the database is not that large
[21:09:11] <muhblockchain> ljharb: how do I change field "age" to 25 in table "spare-parts", in console
[21:09:47] <ljharb> muhblockchain: everything done with sql is done in a console so i don’t understand your question. Are you unaware that databases primarily have a textual interface?
[21:09:54] <muhblockchain> I am for storing everything in text files, and saving it with git, then one tool solves all my backup+integrity+accountability+synchronization needs
[21:10:07] <ljharb> that isn’t a benefit tho, if it’s the wrong tool for the job
[21:10:19] <ljharb> SQLite in git gives you everything you want without badly reinventing wheels
[21:10:59] <muhblockchain> ljharb: how do you commit change in sqlite while signing it with your private key?  how will other 2 users obtain this change?
[21:11:38] <ljharb> you can sign the commit that includes the SQLite changes, not that that’s a useful thing to do
[21:11:53] <ljharb> and they’ll obtain it via git fetch, same as your whackadoodle approach
[21:11:56] <muhblockchain> you mean, commiting entire sqlite binary file into git?
[21:12:02] <ljharb> yes
[21:12:08] <muhblockchain> ugh, now that is a terrible idea
[21:12:20] <ljharb> there’s nothing inherently valuable about being able to browse the database with git commands
[21:12:21] <muhblockchain> because  it will afair be like x1000 times bigger in amount of data
[21:12:29] <ljharb> i doubt it, SQLite is small
[21:12:36] <ljharb> the diffs might be bigger tho, true
[21:12:54] <muhblockchain> well each file will be different and saved anew not as a small diff
[21:13:06] <muhblockchain> it it like O(n^2) instead of O(n) kind of bad
[21:13:22] <muhblockchain> exactly, even
[21:14:11] <ljharb> lol but it’s a small amount of data, you said, so who cares about O(n^2) for small n
[21:14:16] <muhblockchain> I have a ready workflow to do everything with my data in git.  I just want database files to be easy to diff to have this O(n) and human readable diffs/logs instead O(n^2)
[21:14:17] <ljharb> if that’s a problem then the data is too large to store in git
[21:14:31] <muhblockchain> it works very nice with csv+git, how ever with more advanced data then 1 table it's not so nice
[21:14:44] <ljharb> so which is it, big O doesn’t matter so SQLite is fine? Or it does matter so storing in git won’t work?
[21:14:56] <ljharb> note how none of the sensible choices are what you asked for
[21:15:04] <muhblockchain> ljharb: O(n^2) is just bad craftsmanship ;)
[21:15:50] <muhblockchain> O(n^2) performance of sqlite+git is not the problem in it self, it is just a sloppy and I would say noob way of solving this problem
[21:16:49] <muhblockchain> is we save tables in .json, then we have ideally human readable diffs and so on.  how to use this format with some tools available in JS (or any other tool that would work on debian - offtopic)
[21:18:29] <muhblockchain> I can invent table.json format right now, and write tools for it in some language, just hoped it's a solved problem.
[21:20:13] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[21:20:14] <ario> hehe i guess ican't do Object.assign({}, ...some_object_array).keys() :P
[21:20:48] <GreenJello> Object.keys
[21:21:19] <ario> I want to chain them
[21:27:03] <cloudbender> (Object.assign...).keys() ?
[21:27:20] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[21:28:00] *** Joins: onosendi (~onosendi@user/onosendi)
[21:28:01] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[21:30:56] <ario> cloudbender that doesn't work hmmm
[21:31:38] *** Joins: cthulchu (~Cthulchu@94.153.37.190)
[21:32:35] <GreenJello> it's not a method of all objects. There's no way to chain it like this (aside from with a single item array or similar)
[21:32:50] *** Joins: incognito (~relativit@user/incognito)
[21:33:09] <GreenJello> [Object.assign({}, ...some_object_array)].map(Object.keys).pop()
[21:35:17] <muhblockchain> ljharb: fyi, found one possible solution: format is "recfiles".  has basic relations, and basic tools on all platforms
[21:37:19] *** Quits: cisme_ (~cisme_@user/cisme/x-1186982) (Ping timeout: 258 seconds)
[21:37:37] <ario> thanks, yeah looks like it, was hoping for a nice readable chaining :P
[21:38:20] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[21:39:59] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[21:40:00] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:3087:e821:49f1:180a) (Read error: Connection reset by peer)
[21:41:13] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:41:28] *** Joins: nomic (~nomic@185.192.69.192)
[21:41:46] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[21:43:20] *** Joins: Guest18 (~Guest18@p200300c8cf227600860ccaf7d271a7f2.dip0.t-ipconnect.de)
[21:43:52] *** Joins: kill (~killown@user/killown)
[21:52:43] *** Joins: Betal (~Betal@user/betal)
[21:52:43] *** Quits: __xxoxx (~Junxter@121.237.61.175) (Quit: Leaving)
[21:53:01] *** Joins: Junxter (~Junxter@121.237.61.175)
[21:53:44] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[21:54:54] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[21:56:23] *** Quits: gggp (~textual@60.10.194.48) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:59:16] *** Joins: killown (~killown@user/killown)
[22:00:46] <ljharb> muhblockchain: i mean using "not a database" for your database is a noob way of solving any problem :-) but good luck
[22:00:57] *** Joins: codebam (~codebam@user/codebam)
[22:01:16] *** Quits: kill (~killown@user/killown) (Ping timeout: 250 seconds)
[22:05:10] *** Joins: pavonia (~user@user/siracusa)
[22:05:15] *** Joins: tester (~Thunderbi@2600:1700:7e41:2c10:c1d9:b723:6144:d2ad)
[22:07:14] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:09:39] *** Joins: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net)
[22:09:51] *** Joins: pycurious (~Adium@user/pycurious)
[22:13:02] *** Quits: Anonamy (~Anonamy@node-1w7jr9qgfucx13fyrpxrlwog9.ipv6.telus.net) (Ping timeout: 245 seconds)
[22:14:16] *** Quits: cthulchu (~Cthulchu@94.153.37.190) (Ping timeout: 250 seconds)
[22:19:42] *** Joins: Anonamy (~Anonamy@d23-16-69-165.bchsia.telus.net)
[22:20:30] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[22:24:41] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[22:29:01] *** Joins: krishna (~krishna@76.14.21.109)
[22:29:40] *** Parts: tester (~Thunderbi@2600:1700:7e41:2c10:c1d9:b723:6144:d2ad) ()
[22:40:10] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[22:42:08] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[22:45:02] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[22:46:46] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 250 seconds)
[22:47:33] *** Joins: sudomannn (~sudomann@86.106.143.206)
[22:48:09] *** Joins: codebam (~codebam@user/codebam)
[22:51:13] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[22:59:28] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[23:03:19] *** Quits: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[23:05:45] *** Quits: byanka (~byanka@78.137.43.40) (Ping timeout: 248 seconds)
[23:09:23] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Quit: Lost terminal)
[23:11:09] *** Joins: Rockwood (~Rocky@user/rocky)
[23:12:21] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[23:12:50] <Rockwood> in a few i am going to back
[23:13:02] <Rockwood> to sleep
[23:13:16] <Rockwood> cya people
[23:13:28] <Rockwood> good night
[23:15:08] <GreenJello> you don't need to tell us every time you go to sleep
[23:16:55] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[23:22:56] *** Joins: hanaan (~naan@user/naan)
[23:26:12] *** Quits: Naan (~naan@user/naan) (Ping timeout: 250 seconds)
[23:26:18] *** Joins: yaalon (~yaalon@201.170.112.29.dsl.dyn.telnor.net)
[23:34:00] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[23:36:52] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[23:38:03] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:43:18] *** Joins: s0ullight (~s0ullight@ip-193-121-29-153.dsl.scarlet.be)
[23:45:43] *** Quits: yaalon (~yaalon@201.170.112.29.dsl.dyn.telnor.net) (Remote host closed the connection)
[23:45:50] <s0ullight> hey, I'm looking at the documentation of this: https://www.npmjs.com/package/react-native-calendars and looking at what markedDates takes as input, I'm not sure how I can generate that programmatically.
[23:47:19] <s0ullight> afaik you can't have a variable name start with a number
[23:48:04] <GreenJello> these are property names, not variables
[23:51:11] <s0ullight> property names can start with numbers?
[23:51:21] <GreenJello> they can be any string
[23:52:21] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[23:54:18] <GreenJello> there are lots of ways to build objects, and the implementation depends on your input and logic
[23:54:34] *** Joins: yaalon_ (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[23:54:50] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Read error: Connection reset by peer)
[23:58:14] *** Quits: yaalon_ (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Client Quit)
