[00:00:01] *** Joins: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[00:00:18] *** Joins: Shanzem_ (~Shanzem@86.31.109.147)
[00:00:24] *** Quits: keir (~keir@user/keir) (Quit: keir)
[00:00:38] <NRK[m]> ah, didn't know that seq isn't posix
[00:00:56] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 250 seconds)
[00:00:57] *** Quits: Shanzem_ (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[00:01:00] <earnestly> Yet csplit is
[00:01:40] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net)
[00:02:37] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 245 seconds)
[00:03:15] *** Quits: greta (~androirc@vps-1946c2f8.vps.ovh.ca) (Quit: greta)
[00:03:23] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[00:03:35] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net) (Client Quit)
[00:09:47] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Read error: Connection reset by peer)
[00:10:02] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[00:10:46] *** Joins: Liblx (~Alex@2a02:810c:280:59c:3857:86d3:45aa:2f3e)
[00:14:11] *** Quits: Kruppt (~Kruppt@50.111.20.14) (Quit: Leaving)
[00:15:04] *** Joins: austin987 (~null@172.58.99.188)
[00:15:12] *** Quits: Darkfoe1 (~chuck@drunk.serverfail.party) (Ping timeout: 276 seconds)
[00:15:40] *** Quits: kofany (j@gandalf.whitewizard.hu) (Ping timeout: 240 seconds)
[00:16:59] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[00:17:18] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[00:17:51] *** Quits: aead (~aead@user/aead) (Ping timeout: 244 seconds)
[00:21:20] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Changing host)
[00:21:20] *** Joins: Helmholtz (~leibnizma@user/helmholtz)
[00:24:33] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7c79:4e14:5357:7ce1)
[00:27:57] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:91dd:369e:8b04:c6be) (Ping timeout: 245 seconds)
[00:30:52] *** Joins: keir (~keir@user/keir)
[00:31:27] *** Quits: Left_Turn (~Matthew@31.124.100.167) (Ping timeout: 240 seconds)
[00:31:33] <Liblx> Hello, how could I delete all files in a folder but not the last x (last = time)? It's for a little and simple backup.
[00:32:26] <greycat> Can you determine the "last" file by its name alone, or do you have to use mtimes?
[00:33:01] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[00:33:20] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[00:34:02] <Liblx> greycat: I couldn't explain it right. last = time, this meant the last ones in time.
[00:34:23] <greycat> So you *cannot* tell by the name?
[00:34:33] <emanuele6> Liblx: it's easier if you can tell using the filename
[00:34:42] <greycat> In that case, you need something like...
[00:34:44] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:91dd:369e:8b04:c6be)
[00:34:44] <greycat> !latest
[00:34:44] <greybot> Find the latest modified file in a directory: latest() { local file latest; for file in "${1:-.}"/*; do [[ $file -nt $latest ]] && latest=$file; done; printf '%s\n' "$latest"; } ## Usage: latest [dir]
[00:34:47] <Liblx> ls -tr | tail -n 10
[00:34:51] <Liblx> these
[00:34:52] <emg> i.e. have the timestamp in the filename e.g.   2021-09-01-thelog
[00:34:59] <emanuele6> example "backup2021-06-21", "backup2021-06-22", ...
[00:35:08] <earnestly> Liblx: In the ideal case you would name your files in iso8601 format, those can then be sorted lexicographically
[00:35:09] <greycat> ls is *not* good.  not with those options anyway.
[00:35:40] <Liblx> Okay, I see. The naming is a good point, earnestly!
[00:36:02] <emanuele6> if that is not the case, you can use check by mtime, but if the naming is lexicographically sortable it's easier
[00:36:03] <greycat> if you don't control the filenames, and if they aren't useful, then you need a loop like the bot's, or you need some tool other than "ls -tr"
[00:36:11] <earnestly> Otherwise you can use GNU find with `find . -type f -printf '%Ts %p\0' | sort -nz' or so
[00:36:42] <earnestly> Liblx: This is the import thing about iso8601 or https://datatracker.ietf.org/doc/html/rfc3339 is that they are sortable as "characters"
[00:36:55] <Liblx> Ok. And then loop them with 'rm'?
[00:37:25] <Liblx> earnestly: yes, i know. they are in that format. but i thought to complicated.
[00:37:26] <greycat> That's one way.
[00:37:28] <earnestly> Whatever you want
[00:37:32] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[00:37:35] <Liblx> Thanks!
[00:37:50] <greycat> there are others, like find . ! -name "$latestfile" -delete  and so on
[00:38:01] <earnestly> Yeah I like that approach
[00:38:04] <earnestly> Personally
[00:38:10] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[00:38:24] <emg> Liblx: wait, you said "they are in that format" do you mean that they _are_ or _are not_ in a format with the date in the name?
[00:38:36] <greycat> can you *show* us one of the filenames?
[00:38:37] <earnestly> Liblx: Or use a CAS based backup system (e.g. WORM) that doesn't use more storage space for unchanged blocks
[00:38:51] <Liblx> emg: they have the time format sortable by characters.
[00:39:09] <earnestly> Liblx: You may want to show one so people can confirm that
[00:39:20] <earnestly> Otherwise they might be giving you bad ideas
[00:39:35] <Liblx> greycat: 2021-09-01_120002.xml
[00:40:01] <greycat> that looks promising.
[00:40:36] <greycat> files=(*.xml) latestfile=${files[@]:(-1)}
[00:40:48] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[00:41:10] <earnestly> Things are so nice when inputs are delightful
[00:41:49] *** Quits: austin987 (~null@172.58.99.188) (Ping timeout: 252 seconds)
[00:42:21] <Liblx> :D
[00:42:55] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[00:42:58] *** Joins: tradar (~tradar@user/tradar)
[00:44:10] <Liblx> Thanks for your fast help and ideas - as always! :)
[00:45:00] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[00:45:10] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[00:47:19] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[00:48:18] <emg> Liblx: and to answer you quesiton, delete all except the last:    files=(*.xml); rm "${files[@]::${#files[@]}-1}"      # not sure if there's a cleaner way
[00:49:01] <greycat> files=(*.xml) n=${#files[@]}; unset 'files[n-1]'; rm -- "${files[@]}"
[00:49:25] <greycat> or, ...; unset; printf %s\\0 "${files[@]}" | xargs -0 rm --
[00:49:31] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[00:49:42] <greycat> or use the ! -name "$latestfile" approach from before
[00:53:22] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Read error: Connection reset by peer)
[00:55:25] *** Joins: austin987 (~null@rrcs-71-40-74-150.sw.biz.rr.com)
[00:56:42] *** Joins: greta (~androirc@vps-1946c2f8.vps.ovh.ca)
[00:56:52] <greta> list javascript
[00:56:57] <greta> lol
[00:57:01] <greta> oops.
[00:58:14] <emanuele6> printf '%s\n' *.js
[00:59:08] <phy1729> You know js devs are going to be the wackos that put newlines in their filenames
[00:59:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[00:59:29] <greta> i was just looking for js chans
[00:59:29] <greycat> Probably not, because they're on Windows.
[00:59:36] <emanuele6> but if you list them, you don't care
[00:59:53] <emanuele6> i mean, you could use %q for readability i guess
[00:59:58] <emanuele6> printf '%q\n' *.js
[00:59:59] <phy1729> greycat: no that's java devs; front end devs are hip and use macos
[01:01:36] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:02:24] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[01:04:11] <Liblx> emg, greycat: Oh, thanks. That's really kind of you!
[01:06:41] <Liblx> What do those 2 '--' mean after rm?
[01:06:49] <Liblx> !rm
[01:06:49] <greybot> Don't override the rm command. You'll teach yourself bad habits and lose data some day when you use a different machine or login account. If you must back up files when deleting them, make a new command: del() { mv "$@" ~/.backup/; } or similar.
[01:06:51] <phy1729> !--
[01:06:51] <greybot> The special option -- means "end of options" to every POSIX command except echo and test, and to many other commands. E.g. «mv -- *.png /somedir» (in case one of the filenames begins with "-"). See <http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02> and <http://wiki.bash-hackers.org/dict/terms/end_of_options>
[01:07:47] <Liblx> phy1729: Thx!
[01:08:45] *** Joins: bgpepi (~quassel@ip-83-134-114-91.dsl.scarlet.be)
[01:09:29] <Fernando-Basso> Where is \ documented to unalias a command?
[01:09:58] <Fernando-Basso> I mean, to skip the alias and run the original command, for instance \ls will not run my alias ls='ls --color=auto --classify'
[01:10:33] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:10:43] <phy1729> It doesn't unalias a command; it just means the alias no longer applies
[01:10:51] <greycat> It's simply a side effect of aliases not triggering if they're not a whole word.
[01:10:54] <phy1729> you could   alias '\ls'=... if you're evil
[01:11:19] <greycat> unicorn:~$ alias foo='echo foo'
[01:11:19] <greycat> unicorn:~$ "foo"
[01:11:19] <greycat> bash: foo: command not found
[01:11:26] <greycat> It's no different from that.
[01:11:44] *** Quits: bgpepi (~quassel@ip-83-134-114-91.dsl.scarlet.be) (Client Quit)
[01:11:46] *** Joins: bgpepi_ (~bgpepi@ip-83-134-114-91.dsl.scarlet.be)
[01:11:54] *** Joins: bgpepi (~bgpepi@ip-83-134-114-91.dsl.scarlet.be)
[01:12:19] <Fernando-Basso> Thanks!
[01:12:36] *** Quits: bgpepi_ (~bgpepi@ip-83-134-114-91.dsl.scarlet.be) (Read error: Connection reset by peer)
[01:13:06] *** Quits: bgpepi (~bgpepi@ip-83-134-114-91.dsl.scarlet.be) (Read error: Connection reset by peer)
[01:13:25] *** Joins: bgpepi (~bgpepi@ip-83-134-114-91.dsl.scarlet.be)
[01:13:25] <earnestly> Fernando-Basso: \ is a quote, it quotes characters as literal
[01:13:51] <earnestly> Fernando-Basso: And when quoting it doesn't run the alias because it doesn't match, e.g. 'ls' would work too
[01:13:55] <earnestly> Or "ls"
[01:14:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[01:14:19] *** Quits: sazawal (~sazawal@122.162.80.16) (Quit: Leaving)
[01:14:23] <xx> how can I deceive a program into thinking stdout is a tty when it is a file?
[01:14:23] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[01:14:36] *** Quits: bgpepi (~bgpepi@ip-83-134-114-91.dsl.scarlet.be) (Read error: Connection reset by peer)
[01:14:43] *** Joins: ravan (~ravan@42.201.198.151)
[01:14:44] <earnestly> Fernando-Basso: (I only mention this to try and help break the idea that \ is an "escape" like it is elsewhere)
[01:14:45] <Fernando-Basso> earnestly: Thank you too!
[01:14:55] *** Joins: bgpepi (~bgpepi@ip-83-134-114-91.dsl.scarlet.be)
[01:15:02] <earnestly> xx: script(1) (or unbuffer from expect)
[01:15:27] <xx> that could work, thanks
[01:15:41] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:16:06] *** Quits: bgpepi (~bgpepi@ip-83-134-114-91.dsl.scarlet.be) (Read error: Connection reset by peer)
[01:17:12] <Fernando-Basso> earnestly: Yes. “There are  three  quoting  mechanisms:  the  escape  character,  single quotes, and double quotes.”
[01:19:01] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[01:19:10] *** Quits: austin987 (~null@rrcs-71-40-74-150.sw.biz.rr.com) (Ping timeout: 240 seconds)
[01:19:19] <phy1729> Also $'
[01:19:28] <emanuele6> and $"
[01:19:42] <phy1729> We don't mention that token here
[01:19:55] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:20:11] <Fernando-Basso> Yeah, $' and $" have different purpose than \ '', and "", no?
[01:20:27] <emanuele6> $' not really
[01:20:38] <wwilliam> Hello how do i remove all the 0's and leave just the last name?
[01:20:40] <wwilliam> 0.0000000000000000000000000000JEFFREY
[01:20:49] <wwilliam> amount of 0 varies.
[01:20:56] <emanuele6> 0's and dots?
[01:21:05] <emanuele6> is this in a variable or the output of a command?
[01:21:13] <wwilliam> Yes please.
[01:21:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[01:21:17] *** Lord_of_Life_ is now known as Lord_of_Life
[01:21:26] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[01:21:29] <emanuele6> wwilliam: variable or output of command?
[01:21:39] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[01:22:09] <wwilliam> is one file 5000 records like the one above.
[01:23:43] <emanuele6> wwilliam: sed 's,[.0]*,,' filename
[01:24:00] <wwilliam> Thank you checking....
[01:24:17] <wwilliam> Thank you so much!!
[01:25:06] <emanuele6> oops, there is a mistake
[01:25:15] <emanuele6> wwilliam: sed 's,^[.0]*,,' filename
[01:25:31] <wwilliam> but the first one worked.
[01:25:50] <emanuele6> the first one does: "something0.000000000hi" -> "somethinghi"
[01:26:06] <emanuele6> the second one does: "something0.000000000hi" -> "something0.000000000hi"
[01:26:15] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[01:26:36] <greycat> !quotes > Fernando-Basso 
[01:26:36] <greybot> Fernando-Basso: https://mywiki.wooledge.org/Quotes
[01:26:48] <emanuele6> maybe it's irrelevant because of the input format, but i think the second one is more correct
[01:27:07] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[01:27:24] <wwilliam> Ok emanuele6 Thank you so much for your time.
[01:27:46] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:27:54] * greycat waits for wwilliam to say that some of the lines have digits other than 0
[01:28:00] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[01:28:23] <wwilliam> Not this time.
[01:28:59] *** Quits: magla (~gelignite@55d4b5be.access.ecotel.net) (Quit: Stay safe!)
[01:28:59] <emanuele6> or stuff like 0.0000000000.THOMAS
[01:29:13] <greycat> or a space, etc.
[01:29:27] *** Quits: keir (~keir@user/keir) (Quit: keir)
[01:29:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[01:29:45] <emanuele6> wwilliam: should "0.0000000000.THOMAS" become "THOMAS" or ".THOMAS"?
[01:30:02] <wwilliam> THOMAS.
[01:30:13] *** Quits: greta (~androirc@vps-1946c2f8.vps.ovh.ca) (Ping timeout: 252 seconds)
[01:30:15] <emanuele6> wwilliam: sed 's,^0.0*,,' filename
[01:30:38] <emg> no you need to move the dot to the end apparently...
[01:30:48] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[01:30:53] <emanuele6> it means remove "0." and then any number of 0's from the start of the line
[01:30:53] <geirha> so just zero with varying amounts of decimals? sounds useful...
[01:31:26] <emanuele6> the one before meant remove all the 0's and .'s from the start of the line
[01:31:45] <emanuele6> (up to the first character that is not a 0 or a .)
[01:32:05] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[01:32:15] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[01:32:17] <wwilliam> ok Thank you emanuele6
[01:32:48] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:33:22] *** Quits: travaldo (~travaldo@159.203.88.148) (Ping timeout: 245 seconds)
[01:33:28] *** Joins: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479)
[01:34:02] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:34:25] <greycat> How can someone who's been in #bash for like 5 years straight still have no idea how a simple regex like ^[0.]* works?
[01:34:26] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:34:53] <greycat> It's a puzzle.
[01:35:07] *** Joins: Shanzem__ (~Shanzem@86.31.109.147)
[01:35:52] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:36:49] *** Joins: Shanzem_ (~Shanzem@86.31.109.147)
[01:37:25] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[01:39:12] *** Quits: Shanzem__ (~Shanzem@86.31.109.147) (Ping timeout: 245 seconds)
[01:39:13] *** Quits: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Quit: The Lounge - https://thelounge.chat)
[01:39:25] <OMGOMG> it is a mystery how spoonfeeding someone the answer to every question doesn't lead to learning
[01:40:28] *** Quits: graudre (~graudre@2607:fea8:560:7f20:6095:b4a5:1340:80b1) (Quit: graudre)
[01:41:17] *** Quits: Shanzem_ (~Shanzem@86.31.109.147) (Ping timeout: 245 seconds)
[01:41:40] *** Joins: kofany (j@gandalf.whitewizard.hu)
[01:42:04] *** Joins: greta (~androirc@vps-1946c2f8.vps.ovh.ca)
[01:42:55] *** Joins: uc50ic4more (~uc50ic4mo@dyn216-8-172-151.ADSL.mnsi.net)
[01:43:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:43:46] <wwilliam> In bash every month is a year  :)
[01:43:50] *** Joins: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[01:44:56] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:45:06] * e36freak got forkfed
[01:45:12] <e36freak> not cool enough for spoons
[01:48:50] <earnestly> Each year they respawn
[01:48:55] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[01:49:09] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:49:13] <earnestly> Apparently posix_spawn can produce some fairly nice results compared to fork
[01:49:17] <earnestly> Or fork+exec
[01:49:20] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:91dd:369e:8b04:c6be) (Quit: Leaving)
[01:49:25] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:49:55] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[01:50:16] *** Quits: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Quit: The Lounge - https://thelounge.chat)
[01:50:41] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:54:59] *** Joins: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[01:55:31] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[01:57:34] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 244 seconds)
[01:59:55] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 252 seconds)
[02:01:35] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:01:48] *** Joins: LiftLeft (~LiftLeft@172.83.47.138)
[02:03:06] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:03:39] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:03:45] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Remote host closed the connection)
[02:06:12] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:06:12] *** Quits: nik (~nik777@vpn-users-dip-pool164.dip.cf.ac.uk) (Quit: Leaving)
[02:09:25] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[02:10:55] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 252 seconds)
[02:12:45] *** Joins: austin987 (~null@100.42.98.196)
[02:14:05] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[02:16:20] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Remote host closed the connection)
[02:19:55] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[02:23:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[02:24:45] *** Quits: steven_saus (~steven_sa@cpe-74-131-36-220.kya.res.rr.com) (Read error: Connection reset by peer)
[02:24:54] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:25:42] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[02:26:00] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[02:26:17] *** Quits: kofany (j@gandalf.whitewizard.hu) (Quit: leaving)
[02:26:30] *** Joins: arinov (~arinov@213.194.126.155)
[02:28:14] *** Joins: cliluw (~cliluw@47.147.80.149)
[02:30:40] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 240 seconds)
[02:31:00] *** Joins: steven_saus (~steven_sa@cpe-74-131-36-220.kya.res.rr.com)
[02:34:52] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:36:42] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[02:37:11] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[02:37:13] *** Quits: Lunatrius (~Lunatrius@77.38.92.228) (Read error: Connection reset by peer)
[02:37:28] *** Joins: Lunatrius (~Lunatrius@77.38.92.228)
[02:37:57] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[02:38:49] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[02:42:49] *** Quits: greta (~androirc@vps-1946c2f8.vps.ovh.ca) (Ping timeout: 252 seconds)
[02:45:30] *** Joins: Atque (~Atque@user/atque)
[02:48:28] *** Joins: Weather7774 (~Weather77@124-170-121-245.dyn.iinet.net.au)
[02:49:26] *** Joins: greta (~androirc@vps-1946c2f8.vps.ovh.ca)
[02:55:51] *** Joins: tangyQED (tangy@user/tangy)
[02:56:01] *** Quits: tangy (tangy@user/tangy) (Ping timeout: 252 seconds)
[02:56:52] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[02:57:52] *** Joins: son0p (~ff@181.136.122.143)
[03:02:55] *** Joins: thyriaen (~thyriaen@x4db75db3.dyn.telefonica.de)
[03:07:19] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[03:08:07] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[03:12:12] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[03:13:00] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[03:16:27] *** Quits: Liblx (~Alex@2a02:810c:280:59c:3857:86d3:45aa:2f3e) (Quit: WeeChat 3.2)
[03:21:25] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:22:58] *** Inhonion is now known as TastyWiener95
[03:23:06] *** TastyWiener95 is now known as Inhonion
[03:23:20] *** Inhonion is now known as TastyWiener95
[03:29:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:31:01] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:33:00] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:33:28] *** Joins: jsrnop (~mark@user/jsrnop)
[03:38:05] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[03:38:49] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[03:39:58] *** Quits: darkxploit (~jay@32.209.19.50) (Quit: darkxploit)
[03:48:40] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 240 seconds)
[03:48:41] *** Quits: xx (~xx@user/xx) (Quit: xx)
[03:48:49] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 252 seconds)
[03:50:37] *** Quits: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com) (Quit: Leaving...)
[03:51:30] *** Joins: et_ (~et@user/et)
[03:52:01] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[03:52:01] *** et_ is now known as et
[03:56:28] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[03:56:31] *** Quits: Bit_MCP (~Bit_MCP43@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[04:00:01] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[04:00:25] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:03:51] *** Quits: tangyQED (tangy@user/tangy) (Quit: Quit)
[04:04:16] *** Joins: caterfxo (~caterfxo@user/tangy)
[04:04:25] *** Joins: et_ (~et@user/et)
[04:05:11] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (Ping timeout: 244 seconds)
[04:05:19] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[04:05:19] *** et_ is now known as et
[04:05:55] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[04:08:01] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:08:43] *** Quits: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Quit: The Lounge - https://thelounge.chat)
[04:08:48] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 244 seconds)
[04:09:41] *** Joins: Wulf (~Wulf@user/wulf)
[04:13:23] *** Joins: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[04:13:26] *** Quits: uc50ic4more (~uc50ic4mo@dyn216-8-172-151.ADSL.mnsi.net) (Quit: uc50ic4more)
[04:13:53] <FreeBDSM> Hi again. So does anyone have a solution for reaping zombies? disown didn't help.
[04:14:10] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[04:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:15:57] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 245 seconds)
[04:16:08] *** Joins: coroner (~Jasper@2600:8800:ff0d:400:3524:fac9:3f62:b108)
[04:18:15] *** Joins: dob1 (~dob1@user/dob1)
[04:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:21:29] <phogg> FreeBDSM: the parent has to clean them up
[04:22:07] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 245 seconds)
[04:22:16] *** Joins: tp43_ (~ndeem@2001:1970:502b:d701:a199:1a3e:abd1:ac4c)
[04:22:30] <FreeBDSM> phogg: parent is a bash script. It then needs to run another script (and clean its process once it finishes) and exec another.
[04:23:09] <phogg> FreeBDSM: once it exec's the new image is the parent
[04:23:23] <phogg> FreeBDSM: you can try to tell the parent SIGCHLD and see what it does
[04:23:53] <phogg> I believe bash will reap children automatically so long as it lives and is not busy
[04:24:12] * phogg is speculating based on experience, not an authoritative source
[04:24:42] <FreeBDSM> phogg: does it mean that if I somehow prefix the script-to-be-exec'ed with 'disown' it will work?
[04:24:46] *** Joins: Jenmin (~Jenmin@183.199.207.146)
[04:25:03] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:25:07] <FreeBDSM> I reliably get a zombie, can't kill it
[04:25:07] *** Quits: greta (~androirc@vps-1946c2f8.vps.ovh.ca) (Ping timeout: 252 seconds)
[04:25:22] *** Joins: greta (~androirc@vps-1946c2f8.vps.ovh.ca)
[04:25:22] <phogg> No. Why would that help?
[04:25:37] <FreeBDSM> because it's the new parent?
[04:25:39] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:25:44] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[04:25:47] <phogg> are you saying "exec" as in "cause to be executed" or as in the exec builtin?
[04:26:19] <FreeBDSM> I mean literal `exec entrypoint.sh`
[04:26:29] <phogg> pretty sure 'disown exec anything' is pointless, but again I am not authoritative
[04:26:40] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[04:27:02] <emg> FreeBDSM: don't use exec and then your problem is solved?
[04:27:10] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:27:22] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:27:25] <greycat> Bash reaps children quite aggressively.  Before you call "wait".  If you wanted the child to be a zombie until you could wait, too bad.  You can't do it in bash.
[04:27:30] <phogg> yeah, if you just background and disown the new script you can allow the old one to wait for children, reap, and exit
[04:28:16] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[04:29:18] <phogg> FreeBDSM: The scenario I think I'm hearing is a script which starts up, starts some long-running background jobs, and then exec's another script. The background jobs eventually exit, but then hang around as zombies. Is that the scenario?
[04:29:53] <FreeBDSM> phogg: exactly
[04:30:27] <phogg> There are really only two ways to deal with zombies. The first is to SIGCHLD the parent and have it reap them, the second is to remove the head or destroy the brain.
[04:30:39] <phogg> FreeBDSM: emg's answer is probably best
[04:30:40] *** Joins: sublim20 (~sublim20@user/sublim20)
[04:31:17] <FreeBDSM> https://paste.sh/TklBdGDn#8Ig5ZTTmBNMNtxEYQWsyq7l8
[04:31:27] *** Joins: igemnace (~ian@user/igemnace)
[04:31:34] <phogg> nohup AND disown? fancy
[04:31:48] <FreeBDSM> nothing fancy, just tried different combos
[04:31:51] <emg> another old trick for zombies: double fork. when you reap your child the grandchild will be adopted by init
[04:32:02] <phogg> what I mean is not "fancy" so much as "why would you do that"
[04:32:38] <phogg> it isn't very obvious how you double forking from bash
[04:32:39] <FreeBDSM> phogg: 'tias if it helps'. Sometimes it's easier to mindlessly just try something and see if it helps.
[04:32:49] <phogg> s/how you/how you do/
[04:33:08] <phogg> FreeBDSM: sure
[04:33:36] <phogg> FreeBDSM: if the goal is to not modify the original script then you are stuck with the original's bugs
[04:33:37] <FreeBDSM> I can't remember why I cannot NOT use exec
[04:33:52] <phogg> FreeBDSM: sounds like there's no reason you can't!
[04:34:23] <FreeBDSM> no, it's just I don't remember the reason
[04:34:41] <FreeBDSM> probably it has to do with logs not being output to &1
[04:34:56] <phogg> FreeBDSM: so you dup the fd, too. Problem solved
[04:35:48] <FreeBDSM> or variables sourced as envs (`set -a; source .envs; set +a` trick you guys told me just a few days ago) not being passed to the entrypoint.sh
[04:36:02] <FreeBDSM> phogg: dup?
[04:36:24] *** Quits: coroner (~Jasper@2600:8800:ff0d:400:3524:fac9:3f62:b108) (Quit: Leaving)
[04:36:34] <FreeBDSM> could you show what you mean?
[04:36:44] <emg> entrypoint.sh? is this a docker question?
[04:37:31] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[04:37:49] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[04:39:41] <FreeBDSM> I avoided using that word
[04:40:01] <FreeBDSM> knowing the hate of this channels for awesome containerization techs
[04:40:04] <emg> :-D
[04:40:07] <emg> !docker
[04:40:08] <greybot> https://xkcd.com/1988/ The fad of the month (as of June 2018) is Docker. It's always Docker. Why are they doing it THAT WAY? Because Docker.
[04:41:48] <emg> I highly recommend trying the simple options and if they don't work for reasons, then document those reasons in comments so you don't end up in this position again
[04:42:11] <emg> I know earlier in my career I often thought "well that definitely won't work I just don't remember why" and it turned out I was wrong :'(
[04:42:27] <phogg> emg++
[04:42:38] <phogg> if you don't remember why it doesn't work, it probably works. Try it again
[04:42:39] <FreeBDSM> there should be >< command to prepend lines to files
[04:42:45] <phogg> if it doesn't work you can write it down this time
[04:42:56] <phogg> FreeBDSM: prepend is complicated
[04:43:12] <emg> FreeBDSM: send a patch to chet!
[04:43:21] <FreeBDSM> `echo def > myfile; echo abc >< myfile; cat myfile # abcdef`
[04:43:43] <phogg> hard to be efficient
[04:44:19] <phogg> you could call it a flaw in the Unix file model, or a flaw maybe in reality
[04:44:46] <FreeBDSM> step 1. make it just work; step 2. optimize
[04:44:55] *** Quits: humky (~humky@user/humky) (Ping timeout: 252 seconds)
[04:45:00] <emg> agreed
[04:45:05] <FreeBDSM> if it's not a problem - you can't optimize it; so, first, make it a problem
[04:45:12] <phogg> the danger of that approach is only that people may try and use it between 1 and 2, with mixed results
[04:45:48] <FreeBDSM> most of the time having a non-optimally (HORRENDOUSLY!) working feature is better than not having one at all
[04:46:06] <phogg> yes and no
[04:46:08] *** Joins: humky (~humky@user/humky)
[04:46:37] <phogg> that's sometimes true, but depending on the scenario it might be better to have it be obviously missing rather than appear to be present but not be reliable
[04:46:57] <phogg> or worse, be present, designed incorrectly, but impossible to fix without breaking existing users.
[04:47:56] <FreeBDSM> I disagree
[04:48:13] *** Quits: tp43_ (~ndeem@2001:1970:502b:d701:a199:1a3e:abd1:ac4c) (Ping timeout: 252 seconds)
[04:48:29] <FreeBDSM> it's still better to have to cope with breaking (sometimes even painful) updates from time to time than not having some feature at all
[04:48:35] <phogg> reasonable people could disagree
[04:48:40] <phogg> it's a matter of perspective
[04:49:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[04:49:32] <phogg> FreeBDSM: imagine the scenario where the flawed but "working" solution *now*, actually *prevents* the correct solution from ever being implemented
[04:50:06] <phogg> in that scenario it would have been better to wait, if waiting could have still lead to understanding what the better solution looks like
[04:50:07] <FreeBDSM> no one is forced to use a poorly coded feature
[04:50:22] <FreeBDSM> but everyone is forced NOT to use it if it's not coded at all
[04:50:51] <phogg> no matter how many warnings and caveats you attach to something the reality is that if it exists people will use it, no matter how ill-advised
[04:51:01] <greycat> !b6
[04:51:01] <greybot> When given a choice of solutions, the newbie will always choose the wrong one.
[04:51:25] <phogg> you don't need force to fall victim to the law of averages
[04:51:48] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:51:51] <FreeBDSM> newbie will have something done
[04:52:01] <FreeBDSM> or newbie will have it not done
[04:52:05] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:52:07] <FreeBDSM> what a hard choice
[04:52:21] <phogg> I was trying to look up a clever bash solution for "remove repeating prefix character" today and I found it quite difficult. I think I probably saw it in here.
[04:52:51] <FreeBDSM> sed + regex with + or * quanitifier?
[04:53:09] *** Quits: bonestormii_ (~branr@c-71-57-43-158.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[04:53:17] <phogg> pure bash of course, sed is cheating
[04:53:23] *** Quits: rkta (~kt@62.113.246.111) (Read error: Connection reset by peer)
[04:53:32] *** Joins: rkta (~kt@62.113.246.111)
[04:53:33] <emg> use extglob plus parameter expansion
[04:53:38] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[04:53:46] *** Joins: humky (~humky@user/humky)
[04:54:01] <emg> I think, let me test
[04:54:11] <FreeBDSM> aren't glob just for paths?
[04:54:13] <phogg> I thought that was it, but couldn't get it working the way I remembered. The only negative is I failed to look as cool in front of a newbie as I could have.
[04:54:24] <phogg> FreeBDSM: no, globs are so much more!
[04:54:30] <phogg> but yes mostly for paths
[04:54:34] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[04:54:50] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Client Quit)
[04:55:25] <FreeBDSM> also, to respond to your "sed is cheating" one could probably say "with a hammer in your hand - everything starts to look like a nail"
[04:55:39] <phogg> sed is definitely that kind of a hammer
[04:55:50] <phogg> but if I was going with a hammer I'd get a bigger one and use perl for everything
[04:55:58] <FreeBDSM> regex is 'native' for sed/awk. not for bash.
[04:56:15] <FreeBDSM> well, I didn't know globs are not just for paths.
[04:56:16] <phogg> it's as native as it can get for bash
[04:56:26] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[04:56:28] <FreeBDSM> I still don't know how to use them for anything else.
[04:57:15] <phogg> FreeBDSM: compgen -W 'one two three four five' -X '!t*'
[04:57:28] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Client Quit)
[04:57:41] <FreeBDSM> man compgen
[04:57:48] <phogg> nope, help compgen
[04:58:04] <phogg> but help does not help (age old story), you want the full bash manual
[04:58:19] <FreeBDSM> zsh: command not found: help. kekeke.
[04:58:35] <emg> # var=aaaaaaaabcd; echo "${var##+(a)}"
[04:58:37] <shbot> emg: bcd
[04:58:41] <emg> phogg: that?
[04:58:51] <phogg> emg: yeah! That was the thing
[04:59:05] <phogg> the irritating part is, now that you mention it, I was nearly there when I gave up
[04:59:06] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[04:59:15] <FreeBDSM> ooh, regexps-in-vars, I 'member them
[04:59:24] <phogg> I will have to pass this along tomorrow
[04:59:28] <emg> not regexp, glob
[04:59:58] <FreeBDSM> glob is a poor man's regexp
[05:01:26] <phogg> not always, sometimes it's the other way around
[05:02:24] *** Joins: coroner (~Jasper@2600:8800:ff0d:400:3524:fac9:3f62:b108)
[05:05:09] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[05:05:53] <greycat> extended globs are technically regular expressions, just with a syntax that doesn't align with BRE/ERE/PCRE
[05:10:02] <FreeBDSM> so I tried to send signals 17, 18 and 20 to parental process, it doesn't reap defunct process :(
[05:11:37] <emg> if it's not a program that spawns children it probably isn't written to reap children
[05:11:45] <emg> you could patch it
[05:11:52] *** Quits: cark (~cark@91.110.54.102) (Ping timeout: 252 seconds)
[05:11:59] <emg> or avoid it needing to deal with children
[05:12:41] <FreeBDSM> https://paste.sh/TklBdGDn#8Ig5ZTTmBNMNtxEYQWsyq7l8 it was explained here
[05:13:23] <emg> 1) why are you using both nohup and disown?
[05:13:35] <FreeBDSM> that was explained above too
[05:13:46] <emg> why not just do   entrypoint.sh; wait    instead of exec?
[05:13:47] <phogg> the answer is "no reason, just guessing randomly"
[05:14:05] <FreeBDSM> phogg: semi-randomly, I insist.
[05:14:06] <emg> err,   entrypoint.sh& wait
[05:14:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:14:20] *** Joins: cark (~cark@31.127.240.151)
[05:14:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:14:54] <FreeBDSM> emg: why &? why wait?
[05:15:06] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7c79:4e14:5357:7ce1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:15:37] <emg> run entrypoint in the background, then make the shell wait for and reap all children, it'll reap the first one you ran, and then just sit around waiting until entrypoint finishes, but it'll reap that child for you
[05:15:57] <emg> oh wait, you disowned, then it probably won't reap
[05:16:05] <emg> yeah, don't disown
[05:16:19] <emg> also since this is docker the idea of being orphaned to init and reaped there probably doesn't fit
[05:16:23] <phogg> I would background the first child, disown the one you're exec'ing now, then wait.
[05:16:41] <phogg> when the first exits its children will be reapted, then the original shell will exit. The new script will continue undisturbed.
[05:16:43] <emg> but then the current process will finish, which is different from exec 
[05:17:07] <emg> my guess is there's some "because docker" reason why the initial process can't exit, and if it does, things don't work
[05:17:10] <emg> but it's a guess
[05:17:26] *** Joins: superboot (~agentgasm@user/superboot)
[05:17:33] <superboot> Hi all. /c
[05:19:14] <phogg> emg: docker doesn't have to be used stupidly
[05:19:41] <superboot> # x=abc123; y='-3'; echo ${x:$y}
[05:19:43] <shbot> superboot: 123
[05:19:52] <superboot> # x=abc123; echo ${x:-3}
[05:19:53] <shbot> superboot: abc123
[05:20:03] <greycat> I think the people who use docker correctly and intelligently do it somewhere other than #bash.
[05:20:17] <greycat> superboot: (-3) or use a space
[05:20:19] <emg> superboot: you need a space or paren there so it doesn't think it's :-
[05:20:24] <emg> !:-
[05:20:25] <greybot> ${parameter:-word} Use Default Values. If parameter is unset or null, the expansion of word is substituted. Otherwise, the value of parameter is substituted.
[05:20:35] <superboot> Ah, ok, thanks.
[05:21:57] *** Quits: superboot (~agentgasm@user/superboot) (Client Quit)
[05:23:18] *** Joins: rs (~rs@user/rs)
[05:23:40] <ormaaj2> I am too dumb to understand docker. Or I have never seen the problem that docker is a good solution to.
[05:23:50] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:23:58] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[05:24:51] <phogg> ormaaj2: have you ever created a cron job to kill and re-start a process every 10 minutes "just in case it might have died"? Docker is the better version of that + some sandboxing.
[05:25:13] <emg> ...
[05:25:14] * phogg is being needlessly reductive, of course
[05:27:35] <FreeBDSM> so removing exec completely of course solves the zombie problem but now my pid=1 is my init.sh, not java :(
[05:27:46] <ormaaj2> i don't believe I have. :). If I need that I'll run it in a loop or use some kind of supervisor tool like autossh.
[05:28:11] <FreeBDSM> docker is very awesome
[05:29:12] <FreeBDSM> but it brings its own philosophy of 1 container = 1 main process + adopting code written by others in a chained+layered style
[05:29:22] <ormaaj2> funnily I'm a long-time lxc user and have used all kind of sandboxish things yet fail to grok docker. :D
[05:29:24] <FreeBDSM> and that raises some new problems/limitations
[05:29:35] <emg> FreeBDSM: why do you care what your pid=1 is?
[05:30:27] <FreeBDSM> emg: that's not big of a problem now, but it may break someone's "experience"
[05:30:34] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:47] <FreeBDSM> like maybe someone is used to sending signals to pid 1 blindly 
[05:31:21] <phogg> ormaaj2: docker really isn't special, it's just "one man's point of view" on sandboxing
[05:31:49] <phogg> ormaaj2: But then Unix is like that. The shared delusion for either one is pretty widespread by now.
[05:32:35] *** Quits: thyriaen (~thyriaen@x4db75db3.dyn.telefonica.de) (Remote host closed the connection)
[05:33:45] <FreeBDSM> docker is highly popular and  mainstream, that's very valuable
[05:35:54] *** Joins: darkxploit (~jay@32.209.19.50)
[05:43:13] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Ping timeout: 252 seconds)
[05:44:20] <FreeBDSM> https://stackoverflow.com/questions/1251999/how-can-i-replace-a-newline-n-using-sed this is ridiculously overcomplexed
[05:49:31] <FreeBDSM> a simple problem: 'append line `abc` right after the 1st occurrence of a line that consists of just `set -e`'
[05:54:13] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[06:00:37] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:01:55] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[06:03:54] *** Joins: lq (~lq@116.228.78.178)
[06:03:59] *** Quits: coroner (~Jasper@2600:8800:ff0d:400:3524:fac9:3f62:b108) (Quit: Leaving)
[06:04:34] *** Quits: lq820105 (~lq@210.72.8.204) (Read error: Connection reset by peer)
[06:05:04] <phogg> FreeBDSM: the problem there is "using sed." That's not the right tool for this.
[06:09:35] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[06:11:43] *** Joins: vysn (~vysn@user/vysn)
[06:15:12] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[06:15:59] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[06:18:22] <mute> Ed, man! !man, ed: Ed is the standard text editor...
[06:18:26] <mute> # printf %s\\n 'set -e' 'set -e' | sed -e '0,/set -e/s//&\nabc/'
[06:18:28] <shbot> mute: set -e
[06:18:28] <shbot> mute: abc
[06:18:28] <shbot> mute: set -e
[06:19:00] <mute> well maybe some anchors for "just" 'set -e'
[06:20:37] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[06:23:33] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:23:34] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[06:24:17] <FreeBDSM> what's  `0,` part?
[06:24:20] <FreeBDSM> line 0?
[06:24:43] <FreeBDSM> phogg: then what is?
[06:24:53] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[06:24:59] <phogg> FreeBDSM: tr, see the next answer on that page
[06:25:30] *** Joins: coroner (~Jasper@2600:8800:ff0d:400:3524:fac9:3f62:b108)
[06:27:28] <mute> yeah but technically lines start at 1
[06:28:38] <FreeBDSM> phogg: no?
[06:29:13] <FreeBDSM> # printf "abc\nghi\n" > x; tr 'abc' 'abc\ndef' <x
[06:29:14] <shbot> FreeBDSM: abc
[06:29:14] <shbot> FreeBDSM: ghi
[06:29:16] <mute> think the \n may not be posix there an \ followed by literal newline works
[06:30:07] <phogg> FreeBDSM: that's not how tr works either
[06:30:27] <FreeBDSM> phogg: tr is for characters, the task was to 'append line with text "x" after line with text "y"'
[06:30:37] <phogg> # printf %s\\n hello world | tr '\n' ' '
[06:30:38] <shbot> phogg: hello world
[06:30:55] <mute> he changed it from the problem in the link...
[06:31:01] <phogg> the task (from the stackoverflow post) was to replace newline with space
[06:31:14] <FreeBDSM> > a simple problem: 'append line `abc` right after the 1st occurrence of a line that consists of just `set -e`' <
[06:31:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:32:23] *** Joins: ferdna (~ferdna@user/ferdna)
[06:33:55] <phogg> FreeBDSM: in that case mute has the right approach
[06:33:57] <FreeBDSM> oh, you merely commented solution provided on stackoverflow for the problem described there, not mine problem, got it
[06:34:03] <phogg> although I would use a not s
[06:34:29] <phogg> # printf %s\\n 'set -e' 'set -e' | sed -e '0,/^set -e$/{a'$'abc\n}'
[06:34:31] <shbot> phogg: set -e
[06:34:31] <shbot> phogg: abc
[06:34:31] <shbot> phogg: set -e
[06:34:45] <phogg> cheating by using $'' to make the newline easier, but you get the idea
[06:35:30] <mute> what
[06:35:55] <FreeBDSM> I don't even see $''
[06:36:08] <FreeBDSM> oh, wait, now I see
[06:36:14] <phogg> in any case mine is buggy, do it mute's way
[06:37:15] <FreeBDSM> so you basically have value for -e option being a value that consists of 2 parts: '0,/^set -e$/{a'    and    $'abc\n}'    ?
[06:37:32] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[06:37:33] *** Quits: greknod2 (~grek@124-169-193-167.dyn.iinet.net.au) (Quit: -)
[06:37:47] <phogg> yes, concatenated together
[06:37:56] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[06:38:07] <FreeBDSM> can a space go between concats?
[06:38:16] <FreeBDSM> it'd be a bit more obvious that way
[06:38:26] <mute> yah that would append after each line before a 'set -e'
[06:38:42] *** Joins: greknod2 (~grek@124-169-193-167.dyn.iinet.net.au)
[06:39:07] <phogg> mute: it's too late at night for me to be using sed (-:
[06:39:21] <mute> # printf %s\\n '#!/bin/sh' 'set -e' 'set -e' > f; printf %s\\n '1,/set -e/s//&\' 'abc/' w Q | ed -s f; cat f
[06:39:25] <mute> but Ed!
[06:39:27] <shbot> mute: #!/bin/sh
[06:39:27] <shbot> mute: set -e
[06:39:27] <shbot> mute: etc... ( http://ix.io/3xH6 )
[06:39:48] <phogg> ed is easier than sed, really
[06:40:15] <FreeBDSM> is it also a ~universally present tool?
[06:40:40] <mute> you'd hope. believe i had to put it in my redhat kickstart at work
[06:40:42] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[06:40:43] *** Joins: kr1x (~kriket@170.249.0.122)
[06:40:47] <phy1729> ed is POSIX; sed -i is not
[06:40:56] <phy1729> EL is stupid, so yeah use ex there
[06:41:06] <FreeBDSM> I proclaim posix dead
[06:41:23] <phy1729> Ah a linux user
[06:41:32] <mute> if ed is missing, install it. obviously the OS team made a mistake.
[06:41:52] <FreeBDSM> mute: yeah, right, bloat mah images
[06:41:52] <phogg> # printf %s\\n '#!/bin/sh' 'set -e' 'set -e' > f; printf '/^set -e$/\na\nabc\n.\nw\nq\n' | ed -s f; cat f
[06:41:58] <shbot> phogg: set -e
[06:41:58] <shbot> phogg: #!/bin/sh
[06:41:58] <shbot> phogg: etc... ( http://ix.io/3xH7 )
[06:42:12] <phogg> the resulting file has the right content, even if you get some extra echo'd out
[06:42:48] <phogg> mute: lots of Linux distros ship without ed in the default install
[06:42:53] <phogg> truly we live in the darkest timeline
[06:42:57] <FreeBDSM> by mistake, probably
[06:43:03] *** Quits: daoistmonk (~daoistmon@113.90.179.18) (Quit: Leaving)
[06:43:05] <phogg> FreeBDSM: no, by hubris
[06:43:07] <mute> obviously they don't understand it's the standard editor
[06:43:08] <FreeBDSM> you can't even quit from it via ctrl+c, lol
[06:43:11] <mute> ?
[06:43:22] <phogg> mute: spoken like a dinosaur
[06:43:30] <mute> ^C
[06:43:32] <mute> ?
[06:43:34] <mute> heheh
[06:43:57] <FreeBDSM> you gotta give it some D
[06:44:14] <Psi-Jack> Some Domination?
[06:44:27] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 256 seconds)
[06:44:51] <phogg> modern, fancy people use H
[06:44:55] *** Quits: greta (~androirc@vps-1946c2f8.vps.ovh.ca) (Quit: greta)
[06:45:07] <phogg> you can't even quit from it via ctrl+c
[06:45:07] *** Joins: greta (~androirc@vps-1946c2f8.vps.ovh.ca)
[06:45:11] <phogg> er, oops.
[06:45:23] *** Quits: greta (~androirc@vps-1946c2f8.vps.ovh.ca) (Client Quit)
[06:45:23] <phogg> X clipboard is not cooperating again
[06:45:29] <phogg> H
[06:45:29] <phogg> ^C
[06:45:29] <phogg> ?
[06:45:29] <phogg> Interrupt
[06:45:33] <mute> ah ed -v
[06:45:34] <phogg> see, WAY more helpful
[06:46:50] *** Quits: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net) (Remote host closed the connection)
[06:46:59] <mute> gotta be careful with ed and nonmatching...
[06:47:04] <mute> # printf %s\\n '#!/bin/sh' 'exit' > f; printf '/^set -e$/\na\nabc\n.\nw\nq\n' | ed -s f; cat f
[06:47:10] <shbot> mute: ?
[06:47:10] <shbot> mute: #!/bin/sh
[06:47:10] <shbot> mute: etc... ( http://ix.io/3xH8 )
[06:48:05] <phogg> ed is for people who know what's in their files
[06:48:32] *** Joins: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net)
[06:49:16] <phy1729> ed is the one true EDitor
[06:50:02] <phogg> ed is the standard text editor!
[06:50:09] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[06:51:33] <FreeBDSM> ed is old money
[06:52:29] <mute> "Ed is for those who can *remember* what they are working on."
[06:53:06] *** Quits: jos1 (~jos3@dyndsl-178-142-070-022.ewe-ip-backbone.de) (Ping timeout: 244 seconds)
[06:53:39] <phogg> ed is for anyone with a low bitrate terminal
[06:53:56] <FreeBDSM> Pepperidge farm remembers
[06:55:49] <mute> when my parents split my dad took the pc. i used the commodore 64 and a 1200 baud modem to dial in to a BSD shell.
[06:55:55] <mute> know what editor I used?
[06:56:00] <mute> fucking pico lol
[06:56:23] <phogg> that must have been a chore
[06:56:31] <phogg> still, there are worse choices
[06:56:38] <mute> i was young. i didn't know the nirvana that is Ed.
[06:56:40] <phogg> vi would have been worse
[06:57:27] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[07:02:06] <jetchisel> ed FTW!
[07:03:36] *** Joins: psyc0ld (~psyc0ld@192.222.194.121)
[07:04:59] *** Quits: Naib (~j@2.216.75.3) (Ping timeout: 244 seconds)
[07:05:25] *** Joins: jos1 (~jos3@dyndsl-178-142-067-077.ewe-ip-backbone.de)
[07:06:33] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 256 seconds)
[07:09:01] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[07:10:34] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[07:12:09] *** Quits: coroner (~Jasper@2600:8800:ff0d:400:3524:fac9:3f62:b108) (Remote host closed the connection)
[07:13:37] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[07:13:52] *** Joins: totenkoph (~scythe@user/totenkoph)
[07:15:38] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[07:18:16] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:18:55] *** Joins: Naib (~j@2.216.75.3)
[07:20:13] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:20:33] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[07:23:52] *** Joins: seninha (~seninha@user/seninha)
[07:28:47] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:28:49] *** Joins: cdown_ (~cdown@163.114.131.1)
[07:32:04] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[07:32:10] *** cdown_ is now known as cdown
[07:33:05] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:33:46] *** kevr is now known as scumbag
[07:34:19] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[07:35:47] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:35:57] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 245 seconds)
[07:36:02] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:39:20] *** Joins: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com)
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:21] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:44:13] *** Quits: Naib (~j@2.216.75.3) (Ping timeout: 252 seconds)
[07:53:17] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[07:58:10] *** Joins: Naib (~j@2.216.75.3)
[08:01:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:03:10] *** Quits: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu) (Ping timeout: 240 seconds)
[08:03:47] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[08:07:08] *** Joins: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu)
[08:12:16] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[08:12:19] *** Joins: pystardust (~pystardus@223.226.38.41)
[08:18:19] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[08:19:05] *** Quits: psyc0ld (~psyc0ld@192.222.194.121) (Remote host closed the connection)
[08:19:42] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:22:13] *** Joins: remirol (~lorimer@user/lorimer)
[08:22:13] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[08:22:21] *** remirol is now known as lorimer
[08:23:31] *** Quits: Jenmin (~Jenmin@183.199.207.146) (Ping timeout: 244 seconds)
[08:26:49] *** Joins: gnoo (~gnoo@user/gnoo)
[08:27:11] <cim> BA$H
[08:28:12] *** Quits: gnoo (~gnoo@user/gnoo) (Client Quit)
[08:29:41] *** Joins: gnoo (~gnoo@user/gnoo)
[08:32:22] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[08:32:51] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:37:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[08:37:46] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[08:38:04] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[08:38:39] *** Joins: Mo (~Mo@dynamic-095-112-246-182.95.112.pool.telefonica.de)
[08:43:40] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 240 seconds)
[08:46:13] *** Joins: kurahaupo (~kurahaupo@pa49-195-178-6.pa.nsw.optusnet.com.au)
[08:47:29] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[08:52:57] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[08:54:31] *** Quits: kurahaupo (~kurahaupo@pa49-195-178-6.pa.nsw.optusnet.com.au) (Ping timeout: 244 seconds)
[09:04:41] *** Quits: rando25892 (~sthk@user/rando25892) (Ping timeout: 248 seconds)
[09:05:04] *** Quits: wwilliam (~afernande@user/wwilliam) (Ping timeout: 252 seconds)
[09:06:10] *** Quits: timj (~timj@user/timj) (Ping timeout: 252 seconds)
[09:09:35] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[09:15:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[09:16:02] *** Joins: MercilessDeth (~brad@136.49.61.2)
[09:22:55] *** Joins: timj (~timj@user/timj)
[09:23:30] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:23:39] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:23:59] *** Joins: coroner (~Jasper@2600:8800:ff0d:400:3524:fac9:3f62:b108)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:17] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:35:58] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[09:35:58] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Client Quit)
[09:36:12] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[09:39:23] <ormaaj2> 10 print "world"
[09:39:23] <ormaaj2> 5 print "hello "
[09:39:23] <ormaaj2> LIST
[09:42:52] *** Joins: mei (~mei@user/mei)
[09:43:30] *** Quits: mei (~mei@user/mei) (Client Quit)
[09:45:54] *** Quits: carlos (~pum@user/carlos) (Remote host closed the connection)
[09:50:05] *** Joins: mei (~mei@user/mei)
[09:54:25] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.2)
[09:55:52] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[09:55:59] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[09:57:21] *** Quits: coroner (~Jasper@2600:8800:ff0d:400:3524:fac9:3f62:b108) (Quit: Leaving)
[10:05:46] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[10:09:01] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:17:50] *** stevenm_ is now known as stevenm
[10:17:54] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Changing host)
[10:17:54] *** Joins: stevenm (~stevenm@user/stevenm)
[10:21:31] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[10:24:27] *** Joins: fortuno51_ (~fortuno51@78.10.204.186)
[10:26:28] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Read error: Connection reset by peer)
[10:27:20] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[10:29:13] *** Quits: fortuno51_ (~fortuno51@78.10.204.186) (Ping timeout: 252 seconds)
[10:33:57] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:37:39] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[10:38:10] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[10:49:09] *** Joins: karakedi (~eAC53C340@user/karakedi)
[10:51:54] <geirha> 20 goto 5    *snicker*
[10:53:22] *** Joins: lq820105 (~lq@116.228.78.178)
[10:53:30] *** Joins: manin (~X@185.242.190.95)
[10:55:56] *** Quits: lq (~lq@116.228.78.178) (Ping timeout: 244 seconds)
[10:59:00] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[10:59:23] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[11:02:52] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[11:08:11] <Helmholtz> `trap 'command' EXIT` if set in a bash script, executed command on ctrl+c or return 0 or return non-0 of the script
[11:08:22] <Helmholtz> If I use `RETURN` inside a function, `command` would not execute on ctrl+c/etc
[11:08:33] <Helmholtz> What is the equivalent of EXIT in a function?
[11:09:22] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:09:35] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[11:11:17] <pj> Helmholtz: RETURN
[11:11:42] <Helmholtz> pj, would it handle ctrl+c in the middle of function?
[11:13:09] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[11:13:09] *** Joins: ravan (~ravan@user/ravan)
[11:13:56] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[11:18:37] *** Joins: ravan (~ravan@user/ravan)
[11:20:14] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:20:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[11:20:45] *** Joins: arinov (~arinov@213.194.126.155)
[11:23:24] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[11:29:04] *** Joins: rtur (~weechat@mail.rtur.org)
[11:31:24] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:32:47] <geirha> No
[11:34:42] <pj> Helmholtz: Ctrl-C will get handled by EXIT
[11:35:50] <pj> if you want to explicitly check for Ctrl-C then I believe SIGTERM will do it.
[11:36:03] <geirha> s/TERM/INT/
[11:36:06] <Helmholtz> pj, so RETURN is not equivalent of EXIT
[11:36:11] <Helmholtz> for use inside functions
[11:36:39] <geirha> RETURN trap triggers when the function returns
[11:37:03] <geirha> just like EXIT trap triggers when the shell exits
[11:37:28] <Helmholtz> pj, In the function, I'm doing some temp file creation. I want to remove the temp files after any conditions (success/fail/sigterm/sigint/etc)
[11:38:12] <pj> EXIT is generally the correct trap for cleanup, but it will simply wait until the script itself exits.
[11:39:41] <pj> the only way for a script to terminate without triggering EXIT is if it gets a SIGKILL
[11:39:54] <pj> and you can't trap SIGKILL
[11:40:13] <geirha> in addition to the RETURN trap, you can add a check in the EXIT trap if $tmpfile is set, remove the file
[11:40:44] <Helmholtz> geirha, so I should again, use `trap 'command' EXIT` outside of my function (global level)?
[11:40:47] <pj> yeah.
[11:40:59] <Helmholtz> In that case, the `trap 'command' RETURN` would be redundant
[11:41:09] <geirha> no
[11:41:25] <geirha> that would catch the function returning
[11:41:35] <pj> Helmholtz: it doesn't matter where you set the trap, it will apply from that moment until it's explicitly unset.
[11:41:38] <geirha> the EXIT trap would catch the shell exiting due to a signal
[11:42:02] <pj> basically all traps are global (I think) no matter where they are set.
[11:42:12] <Helmholtz> I mean it would be much cleaner if removing the temp files associated with a function was done **inside** the function scopre not globally
[11:43:12] <pj> Helmholtz: if those files are only intended for the function that created them then yes.
[11:43:19] <geirha> it is done inside the function scope
[11:43:34] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: Reconnecting)
[11:43:42] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:44:10] <Helmholtz> pj, so in my function, I have named the temp file `my_scope_data_temp_xxx`...If I want to properly remove it when script is done (or interrupted), I have to make that variable global...which would be messy
[11:44:16] <pj> just set a RETURN trap and an EXIT trap to the same cleanup function that in turn removes both of the traps as part of the cleanup.
[11:44:35] <geirha> trap '[[ $tmpfile ]] && echo rm "$tmpfile"' EXIT
[11:45:13] <geirha> with a trap like that, if you have a function like   f() { local tmpfile; tmpfile=$(mktemp) ...; }  and you interrupt while inside the function, the EXIT trap will see the tmpfile variable and run the echo rm
[11:45:13] <Helmholtz> geirha, that tmpfile should be global (but it is local in my function)
[11:45:45] <Helmholtz> oh
[11:45:45] <geirha> if the script is interrupted outside the function, the tmpfile variable will not exist, so it doesn't do anything
[11:46:22] <pj> So the trap gets run in the scope where it's triggered.
[11:46:28] <geirha> yes
[11:48:51] <Helmholtz> meaning it *sees* the local variables if it happens to get triggered inside a function?
[11:48:58] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[11:49:12] <Helmholtz> even if the `trap '[[ $tmpfile ]] ...` is set globally
[11:49:15] <pj> so if you have trap 'rm "$tmpfile"' EXIT then $tmpfile is scoped locally, but if you have: cleanup () {  rm "$tmpfile"; }; trap cleanup EXIT then the trap is calling another function so the function doesn't see locally scoped vars.
[11:50:30] <Helmholtz> right..so cleanup of tempfiles set inside a function should be done globally
[11:50:32] <geirha> it will still work with the cleanup function
[11:50:54] <Helmholtz> this is some GOTO level fickery
[11:50:56] <pj> oh, the cleanup function will inherit the local scope, then?
[11:51:24] <geirha> # f() { local var=foo; g; }; g() { printf 'I can see %s from the outer scope\n' "$var"; }; f
[11:51:26] <shbot> geirha: I can see foo from the outer scope
[11:51:53] <pj> oh, okay, i didn't realize that.
[11:52:33] <pj> so when you call func2 from inside func1 func2 will inherit the local scope of vars from func1
[11:53:15] <geirha> when you reference a variable, it will check each scope upwards until it reaches the global scope
[11:53:17] <Helmholtz> pj wow really? didn't know that
[11:53:57] <geirha> "inherit" feels like an inaccurate description
[11:54:08] *** Quits: earnestly (~earnest@user/earnestly) (Quit: WeeChat 3.2)
[11:54:31] <geirha> and when you unset, it unsets one scope at a time
[11:56:00] <pj> # func1 () { local foo=1; printf '1=%s ' "$foo"; func2; printf '4=%s' "$foo"; }; func2 { printf '2=%s' "$foo"; local foo=2; printf '3=%s' "$foo"; }; func1;
[11:56:02] <shbot> pj: bash: syntax error near unexpected token `}'
[11:56:06] <pj> oops
[11:56:12] <pj> # func1 () { local foo=1; printf '1=%s ' "$foo"; func2; printf '4=%s' "$foo"; }; func2 () { printf '2=%s' "$foo"; local foo=2; printf '3=%s' "$foo"; }; func1;
[11:56:13] <shbot> pj: 1=1 2=13=24=1
[11:56:32] <pj> # func1 () { local foo=1; printf '1=%s ' "$foo"; func2; printf '4=%s ' "$foo"; }; func2 () { printf '2=%s ' "$foo"; local foo=2; printf '3=%s ' "$foo"; }; func1;
[11:56:34] <shbot> pj: 1=1 2=1 3=2 4=1
[11:57:01] <pj> # func1 () { local foo=1; printf '1=%s ' "$foo"; func2; printf '4=%s ' "$foo"; }; func2 () { printf '2=%s ' "$foo"; foo=3; local foo=2; printf '3=%s ' "$foo"; }; func1;
[11:57:03] <shbot> pj: 1=1 2=1 3=2 4=3
[11:57:07] *** Joins: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net)
[11:57:09] <pj> that's interesting
[11:57:20] <geirha> Hm. Looks like I'm wrong about the unset thing. Must've remembered that wrong
[11:57:24] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:57:29] <Helmholtz> Is this bot hosted on a VPS?
[11:57:38] <geirha> yes
[11:57:45] <pj> !shbot
[11:57:45] <greybot> shbot runs each session in a new VM as root. Feel free to play with the bot in #evalbot. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[11:58:19] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[11:59:47] <Helmholtz> geirha, it spins up some linux distro using qemu and passes the request to its bash?
[11:59:50] <Helmholtz> what distro?
[12:00:35] <geirha> sort-of. Not a full distro. It builds some commands, and the rest it copies from the host system (which is ubuntu)
[12:00:53] <osse> # lsb_release -a
[12:00:55] <shbot> osse: bash: lsb_release: command not found
[12:01:23] <osse> "Command not found" is a brilliant name for a distro
[12:01:25] <Helmholtz> # uname -a
[12:01:26] <shbot> Helmholtz: Linux bunnies 4.15.12 #11 Fri Mar 23 10:28:59 CET 2018 x86_64
[12:02:30] <Helmholtz> why is there a need to spin up a whole linux kernel? shouldn't it just directly execute bash as a limited user on host?
[12:04:57] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[12:06:40] <geirha> let random strangers run arbitrary code on your server? I'll pass
[12:07:23] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[12:07:57] <Helmholtz> geirha, did Fabrice Bellard write qemu initially?
[12:08:00] <Helmholtz> that thing spins up in 1 sec!?!
[12:08:58] <geirha> more or less
[12:10:46] *** Joins: earnestly (~earnest@user/earnestly)
[12:13:01] *** Joins: lavaball (felix@31.204.155.215)
[12:14:03] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[12:19:47] *** Joins: rendar (~rendar@user/rendar)
[12:20:09] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Ping timeout: 244 seconds)
[12:37:29] *** Joins: shad (~shad@user/shad)
[12:37:45] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[12:38:16] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:39:01] *** Quits: almostdvs (~almostdvs@162.154.206.233) (Ping timeout: 252 seconds)
[12:41:12] *** Joins: poebel (~poebel@user/poebel)
[12:50:15] *** Joins: diamondbond (~diamondbo@175.157.234.192)
[12:52:29] *** Joins: sublim20 (~sublim20@user/sublim20)
[12:58:55] *** Joins: gtristan (~tristan@223.38.29.207)
[12:59:41] <gtristan> Hi... when I run `find . -name "*.foo" -exec <command> {}`... how can I get it to abort on the first nonzero exit status ?
[13:00:05] *** Joins: sinaowolabi (~SinaOwola@160.152.61.139)
[13:00:46] <geirha> posix doesn't define any way to do that
[13:01:46] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[13:02:48] <earnestly> gtristan: The closest thing you can do with find is to use -ok instead of -exec and ^C manually.  Otherwise use a shell
[13:03:30] <gtristan> yeah I need this to be automated
[13:03:39] <gtristan> How do you mean "use a shell" ?
[13:04:01] <earnestly> gtristan: After {} do you use + or ;?
[13:04:01] <gtristan> `find . -name "*.foo" -exec $(<command> {})` ?
[13:04:04] <geirha> have find output the files and iterate with a while read loop
[13:04:23] <earnestly> Well, if this is POSIX, I'd use -exec sh and a for loop, but yeah
[13:04:28] *** Joins: mrwick (~mrwick@user/mrwick)
[13:04:29] <gtristan> earnestly, currently \;
[13:04:36] <gtristan> find . -name "*.foo" -exec <command> {} \;
[13:04:48] <gtristan> I'm not sure of the meaning of the \; to be frank
[13:04:59] <earnestly> gtristan: The manual explains what ; means, and how it differs from +
[13:05:02] <gtristan> I mean... this is actually not going to be an immensely huge list
[13:05:05] <gtristan> I could use a for loop
[13:05:06] <earnestly> gtristan: The \ is only there to stop the shell interpreting it
[13:05:23] <geirha> a while read loop, not a for loop
[13:05:58] <geirha> find . -name "*.foo" -print0 | while IFS= read -rd '' file; do cmd "$file" || break; done
[13:05:59] <earnestly> gtristan: If bash you could perhaps use globstar, it's still better to use find with POSIX if the directory is a tree
[13:06:00] <gtristan> A while read loop would let me handle an unlimited stream of filenames right ?
[13:06:11] <geirha> -print0 isn't poisix though, but at least both GNU and BSD agree on it
[13:06:22] *** Joins: legola (~legola@46.235.100.27)
[13:06:30] <gtristan> yeah not so picky about posix in this specific case
[13:06:40] <earnestly> So when I wrote 'for loop', I meant: -exec sh 'for arg; do command "$arg"; done' _ {} +
[13:06:54] <earnestly> gtristan: You might as well use globstar then
[13:07:09] <earnestly> for file in ./**; do command "$file"; done
[13:07:26] <earnestly> (shopt -s globstar).  Please read the manual about these things so you can understand what they do
[13:07:37] <geirha> for file in ./**/*.foo; do  that is
[13:07:47] <earnestly> Yeah
[13:07:54] <earnestly> Might want nullglob for this too
[13:08:00] <gtristan> what is the sauce to enable globstar again ?
[13:08:05] <gtristan> set smth ?
[13:08:10] *** Quits: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:08:14] <earnestly> gtristan: This response
[13:08:22] <earnestly> gtristan: Makes me scared of suggesting anything to you
[13:08:26] <gtristan> Hahaha
[13:08:31] *** Quits: Spydar007 (~spydar007@user/spydar007) (Remote host closed the connection)
[13:08:35] <earnestly> Because not only did I tell you how
[13:08:38] <gtristan> sorry I didn't notice
[13:08:49] <earnestly> But that I don't think you're going to do any due diligence and read the manual
[13:08:53] <earnestly> For these things
[13:08:53] *** Joins: Spydar007 (~spydar007@user/spydar007)
[13:09:36] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:09:42] <lesihctej> !globstar
[13:09:43] <greybot> In bash 4, when the globstar shell option is enabled ( shopt -s globstar ), the glob ** expands to all files and directories found recursively under the current directory, and **/ to all directories. Combinations like foo/**/*.txt work, but **.txt and foo** do not.
[13:11:44] *** Joins: frostwork (~frostwork@user/frostwork)
[13:12:07] *** Joins: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de)
[13:14:24] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 244 seconds)
[13:15:40] *** Joins: ravan (~ravan@42.201.198.151)
[13:16:28] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 244 seconds)
[13:18:50] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[13:19:16] <furrymcgee> there is --halt-on-error in gnu parrallel
[13:21:17] <geirha> and don't forget to cite
[13:21:33] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:23:01] *** Joins: Dev0n (~Dev0n@user/dev0n)
[13:24:12] *** Quits: Mo (~Mo@dynamic-095-112-246-182.95.112.pool.telefonica.de) (Ping timeout: 245 seconds)
[13:29:12] <furrymcgee> how is bash funded?
[13:30:56] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:31:36] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[13:31:59] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:32:07] *** Joins: xx (~xx@user/xx)
[13:35:11] *** Joins: keypusher (keypusher@user/keypusher)
[13:37:12] *** Quits: gtristan (~tristan@223.38.29.207) (Remote host closed the connection)
[13:37:30] *** Joins: gtristan (~tristan@223.38.29.207)
[13:41:36] <mrwick> having a problem with vi mode and editing commands that wrap - it seems the newline misplaces characters when in command mode. anyone have similar experiences or advice for eliminating?
[13:41:37] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[13:41:51] <Soliton> !faq fancy
[13:41:51] <greybot> https://mywiki.wooledge.org/BashFAQ/053 -- I have a fancy prompt with colors, and now bash doesn't seem to know how wide my terminal is.  Lines wrap around incorrectly.
[13:42:02] <sublim20> bash is funded by bad hygiene and body odor
[13:43:26] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:43:57] *** Joins: xa_ (~NesLs@176.54.204.222)
[13:44:20] <mrwick> oh it could be the prompt, which I change depending on vi mode
[13:44:28] *** Quits: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[13:49:01] <mrwick> when starting a shell with --noprofile and --norc the command mode still does not wrap correctly, the cursor is  always 3 characters to the left of the end of the line
[13:49:11] <mrwick> (when moving to the end of the line)
[13:50:44] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[13:51:24] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[13:51:26] *** Quits: xa_ (~NesLs@176.54.204.222) (Quit: Leaving)
[13:51:49] <mrwick> it seems to be the show-mode-in-prompt
[13:52:38] *** Quits: sinaowolabi (~SinaOwola@160.152.61.139) (Ping timeout: 244 seconds)
[13:59:52] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[13:59:52] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 244 seconds)
[14:01:03] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 276 seconds)
[14:02:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[14:03:03] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Ping timeout: 256 seconds)
[14:05:10] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[14:07:59] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:12:05] *** Joins: Afroboy (~afroboy@105.235.136.1)
[14:13:06] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[14:13:26] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[14:14:34] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[14:16:56] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[14:17:49] *** Joins: shad (~shad@user/shad)
[14:18:59] *** Quits: gtristan (~tristan@223.38.29.207) (Ping timeout: 244 seconds)
[14:24:09] *** Quits: diamondbond (~diamondbo@175.157.234.192) (Ping timeout: 244 seconds)
[14:26:14] *** Joins: almostdvs (~almostdvs@162.154.206.233)
[14:27:13] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:27:15] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 244 seconds)
[14:31:40] *** Joins: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479)
[14:32:57] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[14:34:59] *** Joins: vysn (~vysn@user/vysn)
[14:35:11] *** Joins: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com)
[14:35:33] *** Joins: mihael (~mihael@2001:4454:2fe:b300:bca1:ec33:79e2:bea)
[14:36:31] <mihael> `find . -type d -name "jenkins" -print 2>/dev/null` gives me an error: find: paths must precede expression: {}. How do I redirect stderr so I don't get the Permission denied outputs
[14:36:42] *** Joins: wwilliam (~afernande@73.197.2.152)
[14:36:42] *** Quits: wwilliam (~afernande@73.197.2.152) (Changing host)
[14:36:42] *** Joins: wwilliam (~afernande@user/wwilliam)
[14:37:33] <Soliton> # find . -type d -name "jenkins" -print 2>/dev/null
[14:37:34] <shbot> Soliton: no output
[14:37:46] <Soliton> you have no {} in your command at all.
[14:38:16] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:38:40] <djph> mihael: you mean like when it prints " ./some/directory : permission denied" ?
[14:39:15] <mihael> Soliton what's the use of {}?
[14:39:21] <mihael> djph exactly
[14:40:01] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[14:40:41] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Ping timeout: 244 seconds)
[14:41:44] <djph> find . -name "namehere" 2>/dev/null
[14:41:50] <utis> how does one get the ceiling of a number?
[14:43:21] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:43:49] <djph> utis: probably in Python or perl moreso than bash.
[14:44:18] <utis> maybe it could be done in bc?
[14:45:01] <djph> maybe.  I bet the manpage would provide illumination.
[14:45:05] <mihael> djph that doesn't work
[14:46:40] <Swahili> Q: Iterating over a list of keys (e.g. ( "xxxx-xxx" "yyyy-zyxz" )) and would like to exec a cmd that takes an argument of a particular syntax that looks like "( dataType { id=$id; field1=545x; field2=jdjdsj } )". I get the error "error: Found argument '{' which wasn't expected, or isn't valid in this context". How to pass an argument of this pattern?
[14:47:12] *** Joins: euouae (~euouae@user/euouae)
[14:47:54] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:47:56] <Swahili> https://paste.sh/MFIvHo1k#XXIJN-y2U5dgFTzSNavYCqJm
[14:48:18] <djph> mihael: oh? 
[14:48:39] <djph> !jq ? Swahili 
[14:48:40] *** Lysergsaeure is now known as acidsys
[14:48:48] <djph> !jq > Swahili 
[14:48:48] <greybot> Swahili: jq is a flexible and lightweight JSON processor: http://stedolan.github.com/jq/ . See #jq. Also, query JSON data with jshon: http://kmkeen.com/jshon/
[14:49:13] <Swahili> djph: thanks! yeh but the string I pass as an argument is not really json :I 
[14:49:43] *** Joins: xa_ (~NesLs@176.54.248.155)
[14:51:07] <mihael> Ah the 2>/dev/null works on my mac's terminal but not on centOS
[14:51:37] <djph> mihael: maybe a different version of find ?
[14:52:27] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[14:52:32] <mihael> `find --version` works on CentOS and it's find (GNU findutils) 4.5.11
[14:52:57] <djph> Swahili: well, bash doesn't do "structured data" 
[14:53:16] <djph> mihael: and the mac?
[14:53:33] *** Joins: toad-x (~quassel@31.223.78.184)
[14:53:45] <mihael> djph it says illegal option
[14:53:53] <djph> weird
[14:53:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:53:59] <mihael> yeah, it's pretty weird
[14:54:37] <Swahili> djph: right. could I eval a cmd in such way that I can have it pass the argument those characters? When I type it and run it in the terminal it works, but I'd like to iterate over a list of keys and thus the reason why I'm attempting to do this.
[14:54:38] <earnestly> Swahili: You need to provide real examples for any help to be useful
[14:54:56] <djph> find 4.8.0 here worked fine with the command I gave above (although I did double-check with 'find -type f' in /etc, as I know there's quite a bit there my account can't get at)
[14:55:18] <Swahili> earnestly: thanks! yes of course I have this paste.sh I posted above, the url is https://paste.sh/MFIvHo1k#XXIJN-y2U5dgFTzSNavYCqJm
[14:55:31] *** Joins: p-i- (~Ohmu@2403:6200:8870:da61:85fe:6e1c:4ca0:1396)
[14:56:07] <earnestly> > This is an encrypted paste site. Simply type or paste code here and share the URL.
[14:56:16] <p-i-> Does anyone know of a super-fast CLI method to download a file?  Using `requests` in Python is 20% faster than using cURL from bash (which kinda surprises me)
[14:56:34] <mihael> Yeah, it's pretty weird. Guess that's that for the command, at least I know it works on my mac but not on the server I'm connecting to. :D
[14:57:01] <djph> mihael: could also be something it's trying to print being problematic
[14:57:14] <Swahili> earnestly: https://pastebin.com/raw/6RRYkRqf
[14:57:23] *** Joins: reset (~reset@user/reset)
[14:57:27] <jelly> p-i-, http, no encryption?  Are you taking into account I/O variance (are you "downloading" into /dev/null)?
[14:57:59] <earnestly> Swahili: I'm not interested in these abstractions
[14:58:46] <earnestly> Swahili: And fwiw, don't bother, I'm not interested anymore even if you were to provide the truth
[14:59:01] <Soliton> mihael: the redirection is for the shell. find does not see it at all. perhaps show an error that belongs to the command you're showing.
[14:59:03] *** Quits: mihael (~mihael@2001:4454:2fe:b300:bca1:ec33:79e2:bea) (Quit: Client closed)
[14:59:16] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 252 seconds)
[14:59:41] <earnestly> p-i-: It's hard to believe requests would be faster since requests on a per-connection basis is twice as slow just to initiate it so perhaps there is something else giving you those numbers
[14:59:45] *** Joins: situ (situ@nat-pool-brq-t.redhat.com)
[14:59:47] <earnestly> Such as forking
[15:00:11] <earnestly> With curl if you have a new enough version there is -Z (--parallel) which can be beneficial for lots of small downloads iirc
[15:00:35] <p-i-> jelly: It's https. Download variance is huge, but the discrepancy between pycurl and Python requests is significant. I haven't benchmarked curl from CLI against python requests thoroughly yet.
[15:00:41] <Swahili> earnestly: sure, thanks, appreciated you had a look! it's a custom cmd and not a popular tool that takes a type that looks like, which is even longer, so just didn't want to make it hard to read.
[15:00:44] <earnestly> But ultimately the performance of a download is how much of the bandwidth you can saturate on both ends
[15:00:53] <p-i-> Mainly I was wondering if there is an optimization beyond curl.
[15:00:57] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Ping timeout: 245 seconds)
[15:01:04] <earnestly> You can't really optimise reality
[15:01:20] <earnestly> A hard limit like bandwidth is what it is
[15:01:47] <p-i-> The variance is huge: 10ms to 150ms. It's a 200kB download. So I'm looking at parallelizing it among 8 cores.
[15:01:53] <earnestly> You can break a file up into chunks, download them in parallel, but this will give you nothing because the same number of bytes need to be transfered.  Such parallelism can often be slower due to the overhead
[15:02:15] <earnestly> p-i-: Are you doing something like `for ...; do curl "$..."; done'?
[15:02:26] <Soliton> Swahili: just issue a proper command. the variable is nonsense.
[15:02:39] <p-i-> earnestly: I'm backgrounding each iteration
[15:02:44] <earnestly> Soliton: I'm sure there is some reason a variable is needed, but it's hard to tell
[15:03:03] <earnestly> p-i-: That's not what I asked, but I'll take that as a yes.  In which case, yes curl can be used a lot more intelligently
[15:03:25] <p-i-> earnestly: How so?
[15:03:38] <earnestly> p-i-: But it depends on how many global or local options you're using.  The general approach is to generate a curl config and pass it via stdin to -K - while using -Z
[15:04:07] <Swahili> Soliton: Oh right! Ok, I'll try that again!  
[15:04:21] <p-i-> gosh you guys are a mine of knowledge.
[15:04:26] <earnestly> p-i-: E.g. I made my own rss reader thing which does this: https://0x0.st/-v4V.txt (15 is the default, and is pretty good here.  More or less makes it worse)
[15:05:01] <earnestly> This requires a fairly new curl though, especially for that -w %{stderr}
[15:06:57] <earnestly> 7.63.0
[15:07:02] <p-i-> earnestly: Is there such a thing as doing pre-setup with curl? e.g. creating a 'session' that sorts out the SSL handshare, so when I do the download it can skip the preamble?
[15:07:09] <earnestly> 7.68.0 *
[15:07:36] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[15:08:30] <earnestly> p-i-: Read what parallel does
[15:09:53] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[15:10:06] <earnestly> p-i-: And curl does that session thing by default
[15:10:13] <Swahili> Soliton: thank you very much for pointing that out! Works now and its much easier to read!
[15:10:28] <earnestly> p-i-: (You have to disable it with --no-sessionid)
[15:11:19] <earnestly> p-i-: And if you do this often, the use of etag-compare can help skip unchanged resources
[15:12:24] *** Joins: besnn (~besnn@user/besnn)
[15:13:39] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Remote host closed the connection)
[15:14:32] <earnestly> (Using the config like this also avoids the issue of arg_max, which is a nice bonus)
[15:20:36] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[15:20:40] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Max SendQ exceeded)
[15:21:05] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[15:21:15] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Remote host closed the connection)
[15:26:46] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[15:28:27] <Swahili> Q: When passing optional arguments to a script, how to fallback to a default value? Example, pseudo code: arg=$1 || "SomeValue"
[15:29:48] <jetchisel> arg=${1:-SomeValue}
[15:30:17] <Swahili> jetchisel: thanks! what's the name of that syntax if you don't mind mentioning?
[15:30:24] <jetchisel> !:- > Swahili 
[15:30:24] <greybot> Swahili: ${parameter:-word} Use Default Values. If parameter is unset or null, the expansion of word is substituted. Otherwise, the value of parameter is substituted.
[15:30:40] <Swahili> Nice :) Thank you very much!
[15:30:46] <jetchisel> !pe > Swahili 
[15:30:46] <greybot> Swahili: Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[15:31:31] <jetchisel> yw
[15:31:34] <p-i-> earnestly: https://bpa.st/3YVQ does this look like a decent starting point?
[15:32:08] <Soliton> !check
[15:32:09] <checkbot> p-i-: Line 8: Useless echo? Instead of 'echo $(cmd)', just use 'cmd'. Line 19: $/${} is unnecessary on arithmetic variables. Line 24: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb80529 for all 6 issues.
[15:32:41] <earnestly> p-i-: No, this is silly
[15:33:20] <earnestly> And incorporated nothing I mentioned lol
[15:33:47] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 245 seconds)
[15:33:54] <earnestly> How can curl reuse session ids if you're spawning multiple curl instances?
[15:36:40] *** Quits: Lunatrius (~Lunatrius@77.38.92.228) (Ping timeout: 252 seconds)
[15:36:48] <earnestly> p-i-: Why are you downloading the same resource multiple times?
[15:38:06] <earnestly> p-i-: What are you trying to achieve here?
[15:38:23] *** Joins: goldfish (~goldfish@user/goldfish)
[15:38:33] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 244 seconds)
[15:38:38] <earnestly> Because I can only think you're trying to do some sort of benchmark by downloading something multiple times and timing how long it takes
[15:38:58] <earnestly> (But because the download is so tiny you'll end up getting nonsense numbers)
[15:39:15] *** Joins: cousteau (~cousteau@user/cousteau)
[15:39:58] *** Quits: Caffeinated (~Caffeine@user/alexdelarge) (Ping timeout: 252 seconds)
[15:40:15] *** Quits: pystardust (~pystardus@223.226.38.41) (Quit: nyaa~)
[15:41:00] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[15:42:54] <p-i-> earnestly: I'm trying to download the image as fast as possible (there's a potential trade signal in it). As I get high variance when I try to download it, I thought to spin up 8 simul downloads, to squash download-time variance.
[15:43:22] <earnestly> Sigh
[15:44:03] <earnestly> p-i-: You're using words that I don't think you understand
[15:44:06] <petemc> is that +EV?
[15:44:26] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:46:01] <earnestly> p-i-: I'm not going to help anymore but here's some ideas about how you can use bash a little better: https://0x0.st/-vJ3.txt - by using features bash already provides
[15:46:09] <FreeBDSM> `if ! var=$(command); then ...; fi` - is this an okay condition?
[15:46:16] <p-i-> I think I understand... variance ranges from 10ms to >150ms. There's a distribution with a "variance" (true I don't know if that term is well defined for nonstandard dists). "variation" maybe. If I just download once, I may get unlucky.
[15:46:19] *** Joins: Lunatrius (~Lunatrius@77.38.92.228)
[15:46:19] <earnestly> FreeBDSM: Yep
[15:46:19] <FreeBDSM> looks awful, saw it used by a colleague of mine
[15:46:55] <p-i-> earnestly: Thankyou, you've been super-helpful.
[15:46:56] <FreeBDSM> earnestly: I hoped one could find a corner case or something against such usage
[15:47:08] <earnestly> FreeBDSM: No, it's a good form
[15:47:23] <Soliton> you won't get the specific exit status though.
[15:47:26] <jetchisel> var=$(command) || ....
[15:47:36] <jetchisel> short-circuit ftw!
[15:47:39] <earnestly> p-i-: (epochrealtime is recent, from bash)
[15:49:36] *** Quits: xa_ (~NesLs@176.54.248.155) (Read error: Connection reset by peer)
[15:49:46] <earnestly> if ! var=$(command) ret=$?; then ...; fi' # heh
[15:49:52] <jetchisel> \0/
[15:50:31] <earnestly> FreeBDSM: As Soliton notes, that the if ! will set $? to 0 if the command failed and so you lose the exit status.  This is often fine, but worth noting
[15:51:09] *** Quits: keeganza (~keeganza@2001:470:69fc:105::c842) (Quit: You have been kicked for being idle)
[15:51:10] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (Quit: You have been kicked for being idle)
[15:51:28] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[15:52:40] <cousteau> earnestly: oh my god that's one crazy command.  I thought it was missing the [ ] somewhere. 
[15:54:03] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Ping timeout: 244 seconds)
[15:54:15] <FreeBDSM> earnestly: wouldn't the same occur with `var=$(command); if [[ -z "${var}" ]]; then ...`?
[15:54:26] <earnestly> FreeBDSM: Yes
[15:54:41] <Soliton> that checks the content of var not the exit code of command.
[15:54:44] <earnestly> FreeBDSM: Well, no that's not the same
[15:54:50] <earnestly> FreeBDSM: But in terms of exit status disappearing, yes
[15:56:12] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:57:03] *** Joins: xa_ (~NesLs@176.54.248.155)
[15:57:13] *** Joins: keir (~keir@user/keir)
[15:58:40] * cousteau suggests not using `...` to delimit/"highlight" code in this channel since it can create confusion.  I've seen people use/suggest ''...'', but personally I prefer ``...``
[16:01:35] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[16:01:35] *** Joins: ravan (~ravan@user/ravan)
[16:02:43] <p-i-> a=3.2; b=2.1; echo $((a-b))  # invalid arithmetic operator ... Is there any way to perform subtraction on 2 floats?
[16:03:13] <Soliton> !float
[16:03:13] <greybot> http://mywiki.wooledge.org/BashFAQ/022 -- How can I calculate with floating point numbers instead of just integers?
[16:03:30] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[16:05:31] *** Quits: stevenm (~stevenm@user/stevenm) (Read error: Connection reset by peer)
[16:05:45] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[16:08:00] *** Quits: wwilliam (~afernande@user/wwilliam) (Ping timeout: 244 seconds)
[16:08:07] *** Joins: wwallace (~afernande@63.240.73.102)
[16:10:26] *** Joins: greta (~androirc@vps-1946c2f8.vps.ovh.ca)
[16:10:59] *** Quits: xa_ (~NesLs@176.54.248.155) (Quit: Leaving)
[16:11:04] *** Joins: shad (~shad@user/shad)
[16:11:06] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Ping timeout: 244 seconds)
[16:11:23] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[16:11:59] <p-i-> Suppose I have spawned 8 background processes. Is there some way to execute a command when the first one completes? There's a possibility of a race condition... Is there a best practice here?
[16:12:25] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 252 seconds)
[16:12:47] *** Joins: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg)
[16:14:39] *** Joins: jrofd (~test@185.192.69.211)
[16:15:02] <geirha> wait -n
[16:15:18] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[16:15:26] *** Joins: xa_ (~NesLs@176.54.248.155)
[16:20:59] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Quit: Leaving)
[16:22:42] <p-i-> geirha: I still seem to sometimes get 2 processes completing before the wait hits. https://bpa.st/DTLA
[16:23:23] <p-i-> What if each process writes output to the same target file. When the 'wait' completes, am I guaranteed that the target file will be uncorrupted?
[16:23:46] <geirha> remove the "1" argument
[16:23:51] *** Joins: ecraven (ecraven@user/nex)
[16:24:06] <ecraven> hello ;) is there any way to check whether a script is *run* or *sourced*?
[16:24:16] <Soliton> !faq sourced
[16:24:16] <greybot> https://mywiki.wooledge.org/BashFAQ/109 -- How can I tell whether my script was sourced (dotted in) or executed?
[16:24:19] <ecraven> thanks!
[16:24:28] <koollman> p-i-: no
[16:24:53] <p-i-> Currently my background processes are writing to out_1 out_2 etc. So when wait completes, I could 'ls out_*' and choose the first file. But is there a cleaner way?
[16:25:38] <koollman> p-i-: seems clean enough. you could use cat to take all files and make a large one, if you prefer
[16:25:40] <ecraven> prefect, thanks again!
[16:25:47] *** Parts: ecraven (ecraven@user/nex) (Bye)
[16:26:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[16:26:51] <Soliton> why are you doing this time critical stuff in shell to begin with?
[16:26:55] <geirha> you need bash 5.1 to also get the pid of the process that completed
[16:27:20] *** Joins: kj (~kj@kj.aerisnetwork.net)
[16:27:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:28:04] <Soliton> spawning dozens of processes to download something faster just sounds like nonsense.
[16:28:11] <p-i-> Another way would be each time I write one of the files, I append the filename to a filenames.txt file. Then after the wait, I just take the first line of that file.
[16:28:13] *** Quits: jrofd (~test@185.192.69.211) (Remote host closed the connection)
[16:28:44] <p-i-> Soliton: It's the best way I've found to quasi-guarantee low latency on the download. It squashes the time variation hugely.
[16:29:52] <p-i-> I'm only doing it this way because I can't think of a better way to do it without a crazy amount of work.
[16:30:08] <Soliton> i guess you must have some really weird server to talk to.
[16:31:22] <p-i-> It's very performance-inconsistent, that's for sure. Sometimes it completes in 10ms, sometimes >150ms.
[16:32:06] <Soliton> still makes no sense to spawn multiple processes instead of one.
[16:34:24] <geirha> have each curl write to "img_$i.jpg.tmp" then rename it to "img_$i.jpg" when the curl succeeds.
[16:35:31] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[16:36:09] *** Joins: tristan__ (~tristan@223.38.30.100)
[16:36:24] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:37:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[16:37:56] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[16:39:11] <p-i-> geirha: Nice!
[16:40:23] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[16:41:10] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[16:41:17] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:42:47] *** Quits: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg) (Remote host closed the connection)
[16:43:14] *** Joins: AsenMx (~AsenMx@212-39-89-182.ip.btc-net.bg)
[16:44:23] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9488:1a92:bf74:981a)
[16:44:23] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9488:1a92:bf74:981a) (Changing host)
[16:44:23] *** Joins: skapata (~Skapata@user/skapata)
[16:44:27] *** Quits: AsenMx (~AsenMx@212-39-89-182.ip.btc-net.bg) (Max SendQ exceeded)
[16:44:47] <funabashi> Hi I would like some help with a simple script. https://pastebin.com/HPPvVp3x
[16:44:47] <pasteban> Paste is available without ads on https://pastebin.com/raw/HPPvVp3x
[16:44:55] *** Joins: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg)
[16:45:12] *** Quits: greta (~androirc@vps-1946c2f8.vps.ovh.ca) (Ping timeout: 244 seconds)
[16:45:35] <wstrnr> awk can be used for this kind of change
[16:46:33] <wwallace> !check
[16:46:34] <checkbot> wwallace: Looks good to me
[16:46:51] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[16:47:38] <wstrnr> # { echo a b c; echo bb cc; echo x y z; echo yy zz; echo yyy zzz; } | awk 'NF == 3 { head = $1; print; }; NF == 2 { printf head, $0 }'
[16:47:39] <shbot> wstrnr: a b c
[16:47:39] <shbot> wstrnr: ax y z
[16:47:39] <shbot> wstrnr: xx
[16:47:45] <wstrnr> no, not printf
[16:47:50] <wstrnr> sorry, typo
[16:47:53] <wstrnr> # { echo a b c; echo bb cc; echo x y z; echo yy zz; echo yyy zzz; } | awk 'NF == 3 { head = $1; print; }; NF == 2 { print head, $0 }'
[16:47:56] <shbot> wstrnr: a b c
[16:47:56] <shbot> wstrnr: a bb cc
[16:47:56] <shbot> wstrnr: etc... ( http://ix.io/3xJl )
[16:48:00] <wstrnr> this.
[16:48:20] <wstrnr> ah, you also had "CNAME"
[16:48:28] <wstrnr> ok, ok
[16:49:20] *** Quits: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg) (Ping timeout: 244 seconds)
[16:49:45] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:50:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:50:15] <wstrnr> # { echo a CNAME c; echo CNAME cc; echo ccc; echo x CNAME z; echo CNAME zz; echo CNAME zzz; echo zzzz; } | awk 'NF == 3 { head1 = $1; head2 = $2; print; }; NF == 2 { head2=$2; print head1, $0; }  NF == 1 { print head1, head2, $0 }'
[16:50:22] <shbot> wstrnr: a CNAME c
[16:50:22] <shbot> wstrnr: a CNAME cc
[16:50:22] <shbot> wstrnr: etc... ( http://ix.io/3xJn )
[16:50:53] <wstrnr> wrong.
[16:51:04] <wstrnr> # { echo a CNAME c; echo CNAME cc; echo ccc; echo x CNAME z; echo CNAME zz; echo CNAME zzz; echo zzzz; } | awk 'NF == 3 { head1 = $1; head2 = $2; print; }; NF == 2 { head2=$1; print head1, $0; }  NF == 1 { print head1, head2, $0 }'
[16:51:08] <wstrnr> now it should work...
[16:51:11] <shbot> wstrnr: a CNAME c
[16:51:11] <shbot> wstrnr: a CNAME cc
[16:51:11] <shbot> wstrnr: etc... ( http://ix.io/3xJo )
[16:51:57] *** Joins: jrofd (~test@cpc127052-lewi23-2-0-cust30.2-4.cable.virginm.net)
[16:51:58] <wstrnr> yes, now looks legit.  another pass of another awk will be needed to neatly "tabulate" the input, if it's really necessary
[16:53:23] <wstrnr> not a very hard thing to do.  thought it will require to store the entire table in memory until the end.  is it necessary?
[16:54:09] <Soliton> you can do it in the same awk. just store instead of print first.
[16:54:27] <Soliton> a static format might be enough though.
[16:55:06] <funabashi> how can awk solve this?
[16:57:05] <Soliton> did you black out?
[16:57:24] <funabashi> nah
[17:00:16] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[17:00:24] <wstrnr> this is the beginning...
[17:00:26] <wstrnr> { echo a CNAME c; echo CNAME cc; echo ccc; echo x CNAME z; echo CNAME zz; echo CNAME zzz; echo zzzz; } >file;  awk '{ for (i = 1; i <= NF; i++) tbl[NR * 3 + 3 - i] = $i }  END { for (line = 1; line <= NR; line++) { for (col = 0; col < 3; col++) printf("<%10s>", tbl[line * 3 + col]); print ""; }  }' file >out; cat file; echo; echo vs.; echo; cat out
[17:00:31] <wstrnr> i hope it all fit...
[17:00:42] <wstrnr> now we will add computation of column widths...
[17:00:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[17:02:24] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:03:22] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 245 seconds)
[17:04:39] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:08:46] <wstrnr> this is what i have so far... https://paste.debian.net/plain/1210069
[17:09:03] *** Joins: seninha (~seninha@user/seninha)
[17:09:31] <Soliton> you can compute the length right in the first loop.
[17:10:36] <funabashi> quite complicated
[17:11:28] <wstrnr> still broken but can be fixed: https://paste.debian.net/plain/1210070
[17:12:51] *** Joins: chha (~chhs@wikipedia/Bjelleklang)
[17:13:03] <funabashi> thnks
[17:14:12] *** Joins: karaktaka (~karaktaka@fry.ethernerd.net)
[17:16:11] <wstrnr> now it works: https://paste.debian.net/plain/1210073
[17:16:40] <Soliton> too complicated and it doesn't even contain the original fill in logic.
[17:17:10] *** Joins: greycat (~greg@209.142.155.49)
[17:17:22] <wstrnr> "too complicated".  it's just 1 loc!
[17:17:40] <Soliton> fust compute max length when you go through the lines initially and use %*s with printf.
[17:17:45] <Soliton> just*
[17:17:58] <wstrnr> i'm not sure awk will properly understand %*s
[17:18:16] <greycat> if only one could test such things
[17:20:11] <Soliton> being a oneliner just makes it unreadable not simpler.
[17:20:41] *** Quits: karaktaka (~karaktaka@fry.ethernerd.net) (Remote host closed the connection)
[17:21:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Ping timeout: 240 seconds)
[17:21:33] <Soliton> just conceptually though you: 1) fill in the missing fields and compute max length when going through all lines. 2) at the end you print with the computed max length for each field.
[17:22:03] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:22:53] *** Quits: ljharb (sid43720@user/ljharb) ()
[17:23:09] *** Joins: ljharb (sid43720@user/ljharb)
[17:24:59] *** Quits: situ (situ@nat-pool-brq-t.redhat.com) (Ping timeout: 244 seconds)
[17:28:22] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[17:29:07] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[17:29:13] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:29:55] *** Quits: hwrd (sid64402@tooting.irccloud.com) ()
[17:30:06] *** Joins: kj (~kj@kj.aerisnetwork.net)
[17:30:10] *** Joins: hwrd (sid64402@id-64402.lymington.irccloud.com)
[17:30:43] *** Joins: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net)
[17:31:04] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[17:31:40] *** Quits: BlackBishop (dexter@user/blackbishop) (Ping timeout: 240 seconds)
[17:31:54] <iconoclasthero> is there a way to put an if statement in a find -exec?
[17:31:54] <iconoclasthero> e.g.,     find /library/torrent -iname "*$1*" -exec if [ -w {} ]; then rm -ri {} ; else sudo rm -ri {} ; fi \;
[17:32:20] <Soliton> you need a shell for that.
[17:32:21] <greycat> You have to -exec a shell for this.  -exec sh -c 'if [ -w "$1" ]; then ...; fi' x {} \;
[17:33:01] <greycat> Also, it'll typically be more efficient to -exec a shell with multiple filenames passed to it, and use a for loop inside the shell.  -exec sh -c 'for f; do ...; done' x {} +
[17:33:31] <llua> why not just run find with sudo
[17:34:16] <iconoclasthero> i was looking to find a way to use sudo less inside the script.
[17:34:17] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 244 seconds)
[17:34:29] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[17:34:39] <wstrnr> by the way, it's one of known pitfalls, the {} inside the command. it's a code injection vulnerability
[17:34:57] <llua> well, with that, you are using it for every files that isn't writable vs using it once
[17:35:01] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[17:35:17] <wstrnr> !pf 52
[17:35:17] <greybot> https://mywiki.wooledge.org/BashPitfalls#pf52 -- Don't do this! -- find . -exec sh -c 'echo {}' \;
[17:35:31] *** Joins: kj (~kj@kj.aerisnetwork.net)
[17:36:19] <wstrnr> greycat of course wrote it right, but original conceptual explanation of iconoclasthero contained a hint of this pitfall
[17:38:14] <iconoclasthero> i'll need to look into this more.  i'm thinking it might just be better to chmod -R / chown -R the folders the script looks in so that i don't need to invoke sudo.
[17:38:20] <iconoclasthero> thanks
[17:39:27] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 244 seconds)
[17:40:40] <iconoclasthero> is there a writeup on the theory and use of -exec sh on the BashFAQ site?
[17:41:07] <greycat> It's in UsingFind and in BashProgramming, and probably several FAQ pages.
[17:41:35] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 252 seconds)
[17:41:50] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[17:41:52] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[17:42:13] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[17:43:16] <iconoclasthero> is there really much of an efficiency gain if we're talking about a maximum of tens of files instead of tens of thousands?
[17:44:10] *** Quits: caterfxo (~caterfxo@user/tangy) (Remote host closed the connection)
[17:44:37] *** Quits: keir (~keir@user/keir) (Ping timeout: 244 seconds)
[17:45:04] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Quit: .)
[17:45:22] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Remote host closed the connection)
[17:45:55] *** Joins: iconoclasthero_ (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net)
[17:46:02] *** Joins: BlackBishop (dexter@user/blackbishop)
[17:47:12] <earnestly> fork+exec can be quite costly for the tens of loops but it mostly matters at higher quantities.  Also depends on how often the loop is used
[17:48:11] *** Quits: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[17:48:15] *** Joins: keir (~keir@user/keir)
[17:48:53] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:51:19] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[17:55:02] *** Joins: asgas (~asgas@c-24-30-27-91.hsd1.ga.comcast.net)
[17:55:27] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: Ping timeout (120 seconds))
[17:55:59] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[18:00:27] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[18:01:37] *** Joins: tangy (tangy@user/tangy)
[18:01:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:02:54] *** Joins: keir (~keir@user/keir)
[18:03:16] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[18:03:21] *** Quits: asgas (~asgas@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Client closed)
[18:05:06] *** Joins: thiras (~thiras@user/thiras)
[18:07:55] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[18:07:58] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:08:22] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[18:09:25] *** Joins: besnn (~besnn@user/besnn)
[18:09:48] <tangy> poor wwilliam
[18:10:10] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[18:10:19] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[18:10:40] *** Quits: manin (~X@185.242.190.95) (Ping timeout: 252 seconds)
[18:11:53] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[18:13:43] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[18:14:28] *** Quits: gpol (~gpol@135-23-207-205.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[18:15:01] <jetchisel> funabashi: http://ix.io/3xJI  ##: Not robust enough but will work with your given data.
[18:16:07] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[18:16:30] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[18:17:44] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:19:25] <killall> can anyone recommend me a good bash blog or site for my rss news client
[18:19:49] <Psi-Jack> killall Feeds
[18:20:03] <Psi-Jack> Oh, not asking client. :p
[18:20:37] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[18:21:18] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 244 seconds)
[18:22:36] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:22:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:23:05] *** Joins: keir (~keir@user/keir)
[18:23:47] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Quit: Client closed)
[18:24:28] *** Joins: thiras_ (~thiras@user/thiras)
[18:25:12] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[18:25:42] *** Quits: Administratorte (~sq@tempest.math.colostate.edu) (Quit: WeeChat 3.1)
[18:25:53] <Soliton> !crap
[18:25:53] <greybot> The overwhelming majority of bash scripts, code, tutorials, and guides on the Internet are crap. Sturgeon was an optimist.
[18:26:05] <Soliton> i'm sure you can add rss feeds to that list.
[18:26:26] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[18:27:44] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Ping timeout: 256 seconds)
[18:29:48] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:31:10] <cousteau> Soliton: some time ago I tried to hack into the startup scripts for LibreOffice 
[18:31:27] <cousteau> I don't remember the details but I remember that I got angry 
[18:31:49] <cousteau> ``.  `` everywhere. 
[18:32:20] <greycat> obviously it's necessary to write a super-complicated init system for your word processor startup script
[18:32:25] *** Joins: gnit (~gnit@60-57-112-123f1.osk2.eonet.ne.jp)
[18:34:20] <cousteau> I mean it was probably not super complicated 
[18:34:51] <cousteau> Just using too many backticks and too few double quotes 
[18:35:38] <cousteau> Anyway, I guess my point is that that's not just restricted to the internet 
[18:37:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[18:38:04] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[18:38:28] *** Joins: shad (~shad@user/shad)
[18:38:28] *** Quits: Weather7774 (~Weather77@124-170-121-245.dyn.iinet.net.au) (Read error: Connection reset by peer)
[18:39:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:40:25] *** Joins: keir (~keir@user/keir)
[18:40:52] *** Quits: keir (~keir@user/keir) (Client Quit)
[18:41:17] *** Joins: keir (~keir@user/keir)
[18:47:32] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:47:51] *** Joins: keir (~keir@user/keir)
[18:53:00] *** Joins: icedjava37 (~icedjava3@62.1.215.170.dsl.dyn.forthnet.gr)
[18:54:30] *** Quits: mteo (francis@user/francis) (Remote host closed the connection)
[18:55:41] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[18:58:05] *** Joins: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it)
[18:58:17] *** Quits: gnit (~gnit@60-57-112-123f1.osk2.eonet.ne.jp) (Ping timeout: 256 seconds)
[18:59:40] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[19:03:40] *** Quits: Lunatrius (~Lunatrius@77.38.92.228) (Ping timeout: 240 seconds)
[19:04:35] *** Joins: Lunatrius (~Lunatrius@77.38.92.228)
[19:06:59] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:11:40] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Ping timeout (120 seconds))
[19:14:29] *** A_Dragon is now known as A_D
[19:14:32] *** A_D is now known as A_Dragon
[19:15:26] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[19:16:28] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[19:19:05] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:19:45] *** Joins: testuser321 (~wandering@115.187.42.137)
[19:21:31] *** Joins: mteo (francis@user/francis)
[19:23:53] *** Quits: poebel (~poebel@user/poebel) (Quit: Leaving)
[19:26:34] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Changing host)
[19:26:34] *** Joins: stevenm (~stevenm@user/stevenm)
[19:26:53] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[19:29:31] *** Quits: keir (~keir@user/keir) (Quit: keir)
[19:31:10] *** Quits: Pent (sid313808@tooting.irccloud.com) ()
[19:31:26] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[19:35:21] *** Joins: magla (~gelignite@55d4a93f.access.ecotel.net)
[19:36:23] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[19:36:38] *** Joins: codebam (~codebam@user/codebam)
[19:36:42] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[19:37:07] *** Joins: shad (~shad@user/shad)
[19:37:52] *** Joins: arinov (~arinov@5.24.96.241)
[19:38:40] *** Quits: tristan__ (~tristan@223.38.30.100) (Ping timeout: 240 seconds)
[19:40:35] *** Joins: greta (~androirc@vps-1946c2f8.vps.ovh.ca)
[19:42:09] *** Quits: thiras_ (~thiras@user/thiras) (Quit: Leaving)
[19:42:26] *** Joins: thiras (~thiras@user/thiras)
[19:44:15] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:74ce:2b07:aeff:fbe2)
[19:44:24] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[19:46:05] *** Joins: zro (~zro@user/zro)
[19:48:07] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:51:12] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[19:51:25] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[19:51:46] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[19:56:15] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[19:56:17] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 245 seconds)
[20:01:04] <codebam> I have a bunch of .png files, some of them are JPEGs though. so I can do `file *.png | grep JPEG` to get a list of all the ones that are jpegs but how can I loop over each filename from that?
[20:01:08] <codebam> each line looks like
[20:01:13] *** Quits: samsmith (~samsmith@adhafera.ssmith.co.uk) (Quit: Ping timeout (120 seconds))
[20:01:20] <codebam> ZHGF.png:      ...
[20:01:32] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 244 seconds)
[20:01:33] *** Joins: neltraus_ (~neltraus@supernova.neltraus.de)
[20:01:37] <codebam> I want to script converting them all into PNG files
[20:02:03] <greycat> for f in *.png; do if file "$f" | grep JPEG; then ...; fi; done
[20:02:19] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[20:02:27] <greycat> grep -q JPEG if you want it to be less noisy
[20:02:47] *** Quits: neltraus (~neltraus@supernova.neltraus.de) (Ping timeout: 240 seconds)
[20:02:57] *** Joins: jinsun (~quassel@user/jinsun)
[20:03:06] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[20:03:19] <earnestly> fwiw, identify -ping -format %m could be useful
[20:03:31] *** Joins: vaio (~gary@user/ghost)
[20:03:37] <earnestly> (If imagemagick is available)
[20:04:14] <codebam> oh that worked thank you
[20:04:24] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[20:04:43] <codebam> earnestly: I have imagemagick yes. why would I want to use that though? is it just more accurate than `file`?
[20:04:54] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[20:05:14] <earnestly> https://imagemagick.org/script/escape.php
[20:06:11] <earnestly> codebam: If you have the 'fine free' version of file you can use -b --mime-type to get image/jpeg
[20:06:31] <earnestly> Keep in mind that both tools can take multiple arguments and so may be better than testing each individually
[20:07:36] *** Quits: greta (~androirc@vps-1946c2f8.vps.ovh.ca) (Remote host closed the connection)
[20:07:47] *** Joins: greta (~androirc@vps-1946c2f8.vps.ovh.ca)
[20:08:11] <earnestly> For example: identify -ping -format '%m %d/%f\0' * | while read -rd '' format file; do case $format in PNG) ... ;; JPEG) ...; esac; done
[20:08:16] <earnestly> Hm
[20:08:19] <codebam> is that better than grepping for JPEG? I'm just optimizing them now with optipng but I'll see if I missed any when it's done
[20:08:22] <earnestly> It doesn't do \0 apparently
[20:08:40] <earnestly> codebam: It's better than calling file | grep for *every file*, yes
[20:09:04] <codebam> oh you just mean performance wise?
[20:09:26] <codebam> it wasn't that slow, there were about 4000 files, but if there were more I'd probably care more about performance
[20:09:53] <codebam> I'll see if I missed any when it's done though
[20:09:55] <earnestly> 4000 forks of file, grep and pipe construction.  lol
[20:10:02] <codebam> and probably use identify instead of file
[20:10:04] <codebam> yeah haha
[20:10:07] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:11:21] <greycat> earnestly: well, they didn't say it was 4000 files until just now.
[20:11:28] <earnestly> If each filename is ~500 bytes +- environment size then you'll hit ARG_MAX with the glob, hrm
[20:11:48] <earnestly> 500 bytes is pretty large enough
[20:11:56] <earnestly> greycat: I wonder if it might be nested too now
[20:12:07] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.2)
[20:12:23] *** Quits: Afroboy (~afroboy@105.235.136.1) (Quit: Leaving)
[20:13:06] <greycat> any solution that tries to avoid calling file(1) once per file is going to be a lot more complicated, because now you have to worry about how file(1) presents the filenames, and write a parser.
[20:13:25] <greycat> ("what if there's a space" "what if there's a colon" "what if there's a newline" etc.)
[20:13:37] <earnestly> Although I'm on a side path now because the lack of \0 from -format is disappointing
[20:14:08] <earnestly> The problem I have with file is that it's a POSIX tool
[20:14:16] <earnestly> But I don't know of a single posix implementation
[20:14:45] <greycat> It's not being *used* as a POSIX tool, though.  It's being used with knowledge that its output will contain a specific thing on this specific system.
[20:15:34] <earnestly> Most people seem to use the fine free file, which has --mime-type and --print0 but mime-type and print0 seem to be useless
[20:16:16] <earnestly> The posix thing is my own view.  I don't like it when they call themselves a standard tool but then don't behave anything like it should
[20:17:01] <earnestly> So because of this I feel like seeking out a defacto portable tool to replace it and hopefully in a manner that works better than the posix tool itself
[20:17:23] <earnestly> But anyway, identify doesn't do \0, so this has ruined everything.  I'll have to look into it
[20:17:45] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (Quit: The Lounge - https://thelounge.chat)
[20:17:57] *** Quits: sdu (~doo@185.44.146.64) (Remote host closed the connection)
[20:18:05] *** Joins: Noventicx (~Noventicx@crux.uberspace.de)
[20:18:35] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Ping timeout: 244 seconds)
[20:20:03] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[20:20:54] <emanuele6> earnestly: identify -ping -format $'%m %d/%f\0' *
[20:20:58] <emanuele6> :)
[20:21:50] <earnestly> emanuele6: First thing I tried, doesn't help.  Throw it at od and you'll see
[20:22:06] <earnestly> I have found though that to make file(1) useful you have to use -00 (twice)
[20:22:10] <Soliton> can't have an argument with NULs.
[20:22:55] <earnestly> # touch $'a\nb'; file -00 --mime-type a* a* | od -An -tc
[20:22:56] <shbot> earnestly:    a  \n   b  \0   i   n   o   d   e   /   x   -   e   m   p   t
[20:22:56] <shbot> earnestly:    y  \0   a  \n   b  \0   i   n   o   d   e   /   x   -   e   m
[20:22:56] <shbot> earnestly:    p   t   y  \0
[20:22:59] <greycat> Soliton is correct.  $'\0' is just an empty string.  The NUL byte is a string (argument) terminator, so it can never be a meaningful part of one.
[20:23:10] <emanuele6> oh, right
[20:23:22] <emanuele6> it looked like it was working, but it is just ignoring the \0
[20:23:22] <earnestly> It might be worth a bug report, I'll see
[20:23:31] <earnestly> So that -format can understand \0 like it does \n
[20:24:03] <emanuele6> greycat: yeah, that makes sense actually
[20:24:07] <emanuele6> my bad
[20:24:07] <earnestly> This is a kind of nice find for file though
[20:24:48] <emanuele6> command arguments are just c-strings so they can't have NUL characters in them
[20:25:19] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:25:25] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[20:27:00] <earnestly> # touch $'a\nb'; file -0 --mime-type a* a* | od -An -tc # just one -0
[20:27:02] <shbot> earnestly:    a  \n   b  \0   :       i   n   o   d   e   /   x   -   e   m
[20:27:02] <shbot> earnestly:    p   t   y  \n   a  \n   b  \0   :       i   n   o   d   e   /
[20:27:02] <shbot> earnestly:    x   -   e   m   p   t   y  \n
[20:27:14] <earnestly> Completely useless
[20:27:35] <greycat> how is it useless?
[20:27:44] *** Joins: stevenm_ (~stevenm@212.57.232.254)
[20:27:56] *** Joins: zoe (~zoe@fsf/member/zoe)
[20:28:15] <greycat> also, my file(1) page has a note about what happens if you specify -0 twice
[20:28:51] <greycat> even without the second -0 though, it looks parseable.  read until NUL, read until newline.  repeat.
[20:29:32] <earnestly> Perhaps you can assume the text until the next newline cannot contain newlines
[20:29:49] <earnestly> Also yeah, the manual is where I learned of -00
[20:30:01] *** Quits: dfdx (~F@user/dfdx) (Ping timeout: 248 seconds)
[20:30:28] *** Joins: aead (~aead@user/aead)
[20:30:28] *** Quits: stevenm (~stevenm@user/stevenm) (Ping timeout: 244 seconds)
[20:30:52] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:32:40] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[20:32:41] <earnestly> imagemagick's codebase is going to be difficult.  Their "core" tools like identify and co have no main, and it's not clear where options are parsed, or how options map to some code related to it
[20:32:58] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[20:33:46] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[20:34:27] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[20:36:09] *** Quits: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 244 seconds)
[20:36:09] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 244 seconds)
[20:37:41] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[20:37:47] <earnestly> Ah found it
[20:38:14] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[20:39:11] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[20:39:46] <earnestly> > MagickCore/property.c:    There are no newlines in path names, so it's safe as terminator.
[20:41:01] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Quit: Leaving)
[20:41:38] <earnestly> I wish
[20:41:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Ping timeout: 240 seconds)
[20:41:41] *** Joins: iomari891 (~iomari891@197.210.77.85)
[20:41:50] <Soliton> just have to define the world the way you want it.
[20:43:48] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[20:44:28] <earnestly> These days I think that it's probably reasonable to include \n in the VFS exclusions along with / and \0.  The argument is "someone might have a clever use for it that I haven't thought of" which I tend to agree with but in this case, I'm more inclined
[20:45:11] *** Joins: ravan_ (~ravan@42.201.198.151)
[20:45:16] <greycat> Too late now.  Files with newlines in their names exist now.  What are you going to do about those?
[20:45:51] <greycat> And then from the shell script writer's point of view: "OK, EarnestlyOS 7.3 made newlines in filenames impossible.  But my script also has to run on Linux, so... meh."
[20:45:52] *** Quits: magla (~gelignite@55d4a93f.access.ecotel.net) (Quit: Stay safe!)
[20:46:10] *** Quits: iomari891 (~iomari891@197.210.77.85) (Ping timeout: 240 seconds)
[20:46:27] <earnestly> Yeah, it's too late and Linus won't dare change it.  This came up in 2015 or so where someone proposed excluding all non-printing ASCII iirc, they tried to get \n when that didn't pan out
[20:47:58] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 252 seconds)
[20:48:11] <earnestly> greycat: I do have one script that depends on there being no newlines so I have a check at the start which makes sure.  It bails out if a newline is found.  https://0x0.st/-vvz.txt
[20:48:31] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[20:48:39] *** Joins: lavaball (felix@31.204.155.215)
[20:48:45] *** Joins: iomari891 (~iomari891@197.210.76.203)
[20:51:37] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Ping timeout: 256 seconds)
[20:52:46] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[20:54:45] *** Quits: Dotz0cat (~Dotz0cat@h168.196.117.75.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[20:55:12] <luva> I have following folder structure: /folder1/folder2/folder4 ,/ folder1/folder2/folder5 , /folder1/folder3/ . Now the question is, how can I use zip command and  exclude some folders, e.g. folder5 from zipping ?
[20:57:30] <llua> run: man zip
[20:57:41] <geirha> or use a less crappy archiver
[20:59:16] <luva> I used man zip but its really shit
[20:59:24] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 244 seconds)
[20:59:27] <luva> alright, so tar instead I guess
[21:00:13] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[21:00:41] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[21:01:39] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[21:01:40] *** Quits: bdeferme1 (~bdeferme@i.ctrl86.com) (Read error: Connection reset by peer)
[21:01:51] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[21:01:58] *** Joins: bdeferme1 (~bdeferme@i.ctrl86.com)
[21:02:28] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:02:30] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 244 seconds)
[21:03:46] *** Joins: stevenm__ (~stevenm@stevenm.keele.netcentral.co.uk)
[21:06:07] *** Quits: stevenm_ (~stevenm@212.57.232.254) (Ping timeout: 244 seconds)
[21:08:13] *** Joins: XV8 (~XV8@2601:5cb:c001:50:ed26:7d3a:d565:cdd4)
[21:14:47] *** Joins: ravan__ (~ravan@42.201.198.151)
[21:17:10] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 256 seconds)
[21:17:10] *** Quits: ravan_ (~ravan@42.201.198.151) (Ping timeout: 240 seconds)
[21:17:37] *** Quits: StathisA (~StathisA@ppp-94-64-72-58.home.otenet.gr) (Ping timeout: 252 seconds)
[21:18:44] <earnestly> This is the best kind of solution
[21:21:17] *** Quits: mnabid (uid448607@user/mnabid) ()
[21:21:33] *** Joins: mnabid (uid448607@user/mnabid)
[21:27:18] *** Joins: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c)
[21:27:58] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[21:28:35] <luva> https://stackoverflow.com/questions/984204/shell-command-to-tar-directory-excluding-certain-files-folders Im following this here, but it doesnt exclude the directories I want to..
[21:28:42] <luva> ive written "tar --exclude="./srv/Config/Nginx/nginx/www/stk/packs" --exclude="/srv/Config/STK/addons/" -cpvzf Config.tgz /srv/Config"
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:37] <greycat> You're passing an *absolute* path to tar as a starting point.  Don't do that.  You never want absolute paths in an archive.  In fact, GNU tar will yell at you for it, and will then strip the leading / from the starting point.
[21:30:46] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Ping timeout: 256 seconds)
[21:30:56] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:30:59] <greycat> So your --exclude commands may need to match the altered starting directory that GNU tar is performing.  It would be better if YOU removed the leading / instead.
[21:31:09] <greycat> Then your starting point and your --exclude would visibly match each other.
[21:32:02] *** Joins: goldfish (~goldfish@user/goldfish)
[21:34:51] <geirha> Another approach is to do the filtering with find:  cd /srv && find Config \( -path "*/STK/addons" -o -path "*/stk/packs" \) -prune -o -type f -print0 | pax -x ustar -0wf Config.tar
[21:35:51] *** Joins: tangyQED (tangy@user/tangy)
[21:36:40] *** Quits: tangy (tangy@user/tangy) (Ping timeout: 240 seconds)
[21:36:57] *** Joins: seninha (~seninha@user/seninha)
[21:37:33] *** Joins: tangy (tangy@user/tangy)
[21:38:03] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[21:38:34] <luva> greycat, I tried with tar --exclude="Config/Nginx/nginx/www/stk/packs" --exclude="Config/STK/addons/" -cpvzf Config.tgz Config , is that what you meant by relative paths? Because like this it still doesnt exclude
[21:39:23] <luva> geirha, that sounds a bit complicated since I was thinking tar already has an exclude option that should do the job shouldnt it?
[21:39:32] <greycat> for GNU tar, you want --exclude="Config/Nginx/nginx/www/stk/packs/*" and so on.
[21:39:36] <luva> Strange that I struggle with something as simple as that
[21:40:13] *** Quits: tangyQED (tangy@user/tangy) (Ping timeout: 244 seconds)
[21:40:29] *** Joins: Betal (~Betal@user/betal)
[21:40:49] <luva> tar --exclude="Config/Nginx/nginx/www/stk/packs/*" --exclude="Config/STK/addons/*" -cpvzf Config.tgz Config  <-- this still doesnt work
[21:40:58] <greycat> you did "cd /srv" first?
[21:41:02] <luva> yes
[21:41:30] <luva> one second, I may have put one path wrongly
[21:41:47] <luva> works now
[21:41:58] <luva> Thank you :) had one wrong path
[21:43:48] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[21:50:26] *** Quits: Strom (strom@fedora/strom) ()
[21:51:04] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 244 seconds)
[21:51:45] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[21:52:30] *** Joins: Strom (strom@fedora/strom)
[21:53:23] *** Joins: nickodd (~nickodd@user/nickodd)
[21:53:46] *** Quits: toad-x (~quassel@31.223.78.184) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:54:54] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: Quit)
[21:56:10] *** Quits: arinov (~arinov@5.24.96.241) (Ping timeout: 252 seconds)
[21:56:41] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[21:57:32] *** Quits: XV8 (~XV8@2601:5cb:c001:50:ed26:7d3a:d565:cdd4) (Quit: Leaving)
[22:00:13] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[22:01:06] *** Joins: uzee001 (~uzee@86.36.37.198)
[22:03:19] *** Quits: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c) (Ping timeout: 252 seconds)
[22:03:29] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net)
[22:03:57] *** Joins: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c)
[22:04:25] *** Quits: uzee (~uzee@86.36.37.198) (Ping timeout: 248 seconds)
[22:05:43] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:05:48] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:05:51] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:06:19] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:08:50] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:09:26] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:10:01] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[22:11:55] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:12:33] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:12:35] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[22:12:49] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Read error: Connection reset by peer)
[22:14:10] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[22:14:21] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[22:14:58] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:15:35] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:17:31] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:17:37] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[22:18:09] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:18:46] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:19:27] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net) (Ping timeout: 256 seconds)
[22:21:33] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:22:13] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:23:04] *** Joins: pystardust (~pystardus@223.226.38.41)
[22:24:56] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[22:25:08] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:25:48] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:26:17] *** Joins: chia (sid510567@id-510567.tinside.irccloud.com)
[22:27:36] *** Joins: koolazer (~koo@user/koolazer)
[22:28:17] *** Quits: pystardust (~pystardus@223.226.38.41) (Quit: nyaa~)
[22:28:24] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:29:05] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:31:40] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:32:20] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:32:38] *** Joins: sdu (~doo@185.44.146.64)
[22:33:38] *** Quits: chia (sid510567@id-510567.tinside.irccloud.com) ()
[22:33:44] *** Joins: besnn (~besnn@user/besnn)
[22:33:46] *** Quits: greta (~androirc@vps-1946c2f8.vps.ovh.ca) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[22:34:59] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 244 seconds)
[22:35:00] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[22:35:42] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:37:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[22:37:51] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[22:39:34] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:41:36] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Ping timeout: 256 seconds)
[22:41:55] *** Joins: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk)
[22:50:24] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[22:53:50] *** Joins: magla (~gelignite@55d4a93f.access.ecotel.net)
[22:54:24] *** Quits: icedjava37 (~icedjava3@62.1.215.170.dsl.dyn.forthnet.gr) (Quit: Leaving)
[23:00:31] *** Quits: magyar (~magyar@user/magyar) (Ping timeout: 252 seconds)
[23:03:18] *** Joins: sstory (~sstory@075-130-120-018.biz.spectrum.com)
[23:03:27] *** Quits: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c) (Ping timeout: 245 seconds)
[23:03:45] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:04:43] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[23:05:15] <sstory> in bash, given a filepath, how do I get just the file name portion?
[23:05:26] <phy1729> !basename
[23:05:26] <greybot> basename(1) can strip the directory and extension from a path (dir/subdir/file.ext -> file.ext or file). A parameter expansion can do it cleaner and *much* faster: "${path##*/}", "${path%.*}", at the cost of missing edge cases like path=/ or path=/path/to/dir/
[23:05:28] <greycat> ${mypath##*/}
[23:05:36] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[23:06:01] *** Joins: thiras (~thiras@user/thiras)
[23:06:16] <sstory> greycat: Thanks
[23:08:27] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 245 seconds)
[23:09:12] *** Joins: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c)
[23:13:03] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[23:14:59] *** Joins: nickodd (~nickodd@user/nickodd)
[23:15:49] *** Joins: tp43_ (~ndeem@2001:1970:502b:d701:a199:1a3e:abd1:ac4c)
[23:18:59] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:74ce:2b07:aeff:fbe2) (Remote host closed the connection)
[23:19:18] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:74ce:2b07:aeff:fbe2)
[23:21:26] *** Joins: Hax0r (~Hax0r@128.127.222.236)
[23:24:04] *** Joins: hoppity (~user@user/hoppity)
[23:24:18] <hoppity> How do I have some commands in a bash script run as another user?
[23:24:36] <greycat> sudo or some other OS-specific command
[23:24:38] <rs> Oh, the strain and excitement after completing that project in school in early soydev'ry. Bash'd basename!
[23:24:41] *** Joins: magyar (~magyar@user/magyar)
[23:24:45] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[23:25:02] <hoppity> greycat: sorry?
[23:25:28] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[23:25:32] <greycat> sudo is one of the more common OS-specific commands for running programs with altered privileges
[23:25:45] <hoppity> I want to run commands as the postgres user
[23:25:58] <greycat> is the *script* running as you, or as root?
[23:26:19] <hoppity> as me
[23:26:31] <greycat> then you'll need to configure sudo or one of its equivalents
[23:26:52] <hoppity> but how
[23:27:13] <greycat> by reading "man sudo" and "man sudoers" or asking your OS channel or asking the bots or asking the Google ...
[23:27:18] <greycat> !sudo
[23:27:18] <greybot> To use sudo commands in a script (without prompting for a password), put something like this into the sudoers(5) file: username ALL = NOPASSWD: /some/program
[23:27:52] <hoppity> oh googling.. why didn't I think of that..
[23:27:55] <hoppity> smh
[23:27:57] *** Parts: hoppity (~user@user/hoppity) (ERC (IRC client for Emacs 26.3))
[23:30:40] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:31:24] *** Quits: mnabid (uid448607@user/mnabid) (Quit: Connection closed for inactivity)
[23:33:23] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:34:38] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[23:38:37] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[23:39:23] <yitz> !google
[23:39:23] <greybot> Google is NOT a preferred source for learning bash, because almost all the "tutorials" and scripts out there are JUNK. Instead, ask a good question here or refer to the Guide and FAQ (see topic)
[23:41:17] *** Quits: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk) (Ping timeout: 252 seconds)
[23:42:03] *** Joins: RNeese (~rneese@2600:6c5c:6a00:c4e3:9d0:a64e:e8b3:86f4)
[23:42:24] <RNeese> hey guys 
[23:43:45] <greycat> yitz: they hopped away.  and google might be just barely good enough to learn how to use sudo if for some reason the bot's answer wasn't enough.
[23:43:57] <RNeese> ok having a issue 
[23:44:01] <RNeese> https://armbian.lane-fu.com/linx/710ih61w.txt
[23:44:12] <RNeese> its not mounting the mmc
[23:44:24] <RNeese> shellcheck says its fine
[23:46:46] <RNeese> where did I go wrong
[23:48:07] *** Joins: blingrang (~blingrang@user/blingrang)
[23:48:25] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[23:49:15] *** Quits: blingrang (~blingrang@user/blingrang) (Client Quit)
[23:49:53] *** Joins: Josk (~Guest80@220.133.134.37.dynamic.jazztel.es)
[23:53:22] *** Joins: Dotz0cat (~Dotz0cat@h210.68.213.151.dynamic.ip.windstream.net)
[23:53:27] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[23:54:14] <RNeese> https://armbian.lane-fu.com/linx/ub7ax1o6.txt
[23:54:20] <RNeese> thats a better follow
[23:54:34] <RNeese> but its not mounting the devices
[23:55:23] *** Parts: Josk (~Guest80@220.133.134.37.dynamic.jazztel.es) ()
[23:55:40] <yitz> !set-x > RNeese 
[23:55:41] <greybot> RNeese: set -x (or ''bash -x myscript'') makes bash output the exact command that it will run after parsing and expansion. You can put ''set -x'' just before the code you want to debug (turn off with ''set +x''). To add more information, change PS4 first: eg. PS4='+($?) $BASH_SOURCE:$FUNCNAME:$LINENO:'
[23:57:22] *** Joins: Dotz0cat_ (~Dotz0cat@h176.117.90.75.dynamic.ip.windstream.net)
[23:57:39] *** Quits: Dotz0cat (~Dotz0cat@h210.68.213.151.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[23:58:10] *** Dotz0cat_ is now known as Dotz0cat
[23:58:28] <greycat> "it's not mounting" sounds more like an OS channel question than a bash question
[23:59:45] <RNeese> no its the script the old script worked but I am adding in cheks to change some things
