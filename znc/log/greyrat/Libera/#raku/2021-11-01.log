[00:00:19] *** Joins: ramiroencinas (~ramiroenc@127.red-88-16-14.dynamicip.rima-tde.net)
[00:00:36] *** Quits: ramiroencinas (~ramiroenc@127.red-88-16-14.dynamicip.rima-tde.net) (Client Quit)
[00:19:37] *** Quits: xkr47 (xkr47@91-150-17-137.customer.karistelefon.fi) (Remote host closed the connection)
[00:20:57] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:af93:19b0:8b26:3fa2)
[00:25:58] *** Joins: xkr47 (xkr47@91-150-17-137.customer.karistelefon.fi)
[00:59:08] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (Read error: Connection reset by peer)
[00:59:24] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[01:10:37] *** Joins: gabriel80546 (~gabriel80@179.215.180.176)
[01:18:05] *** Quits: notna (~Thunderbi@2a02:2455:1761:6e00:849:5193:4cae:9571) (Remote host closed the connection)
[02:18:05] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:18:05] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:18:05] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:18:05] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:18:05] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:05] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[02:18:06] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[02:18:06] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[02:18:06] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[02:18:25] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[02:18:29] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[02:19:11] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[02:19:13] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[02:20:28] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[02:20:29] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[02:20:53] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[02:21:14] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[02:24:23] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:af93:19b0:8b26:3fa2) (Ping timeout: 260 seconds)
[02:29:18] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Ping timeout: 260 seconds)
[03:03:15] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[03:03:34] <melezhik> weekly: weekly update for Raku on #mybfio - https://mybf.io/?language=Raku&filter=top
[03:03:34] <notable6> melezhik, Noted! (weekly)
[03:04:34] *** Joins: Doc_Holliwould (~Doc_Holli@ipservice-092-218-232-041.092.218.pools.vodafone-ip.de)
[03:04:50] <Doc_Holliwould> m: role S {}; multi sub infix:<cmp>( S $a, S $b ) { say 'hi' }; sort map { $_ but S }, <a x b>
[03:04:51] <camelia> rakudo-moar 580b3ba79: ( no output )
[03:05:09] <Doc_Holliwould> why doesn't my multi get called here?
[03:08:13] *** Joins: andrea[m]123 (~andreanit@2001:470:69fc:105::1:28a8)
[03:10:31] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Ping timeout: 245 seconds)
[03:11:56] *** Quits: gabriel80546 (~gabriel80@179.215.180.176) (Quit: Connection closed)
[03:18:30] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[03:18:40] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[03:18:51] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[03:19:08] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[03:20:27] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[03:21:11] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[03:22:33] *** Quits: kjp (~kevin@180.216.69.113) (Quit: WeeChat 2.8)
[03:22:34] *** Parts: andrea[m]123 (~andreanit@2001:470:69fc:105::1:28a8) ()
[03:30:01] <japhb> Doc_Holliwould: your multi isn't in the scope of the definition of sort.
[03:30:45] <japhb> You can fake it by using a 2-arg function for sort, rather than a 1-arg, which is implicitly using the *builtin* cmp.
[03:32:26] *** Joins: andrea[m]123 (~andreanit@2001:470:69fc:105::1:28a8)
[03:32:56] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:34:25] *** Parts: andrea[m]123 (~andreanit@2001:470:69fc:105::1:28a8) ()
[03:40:48] *** Joins: kjp (~kevin@180.216.69.113)
[03:41:33] *** Joins: andrea[m]123 (~andreanit@2001:470:69fc:105::1:28a8)
[03:47:10] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:9d95:c71:11e4:3e0f)
[04:03:29] *** Quits: Guest6924 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Quit: WeeChat 3.3)
[04:08:30] *** Quits: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net) (Ping timeout: 260 seconds)
[04:19:51] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[04:20:21] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[04:20:57] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[04:24:20] *** Joins: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net)
[04:33:36] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:35:27] *** Joins: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se)
[04:38:06] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (Ping timeout: 260 seconds)
[04:44:00] *** Quits: Doc_Holliwould (~Doc_Holli@ipservice-092-218-232-041.092.218.pools.vodafone-ip.de) (Quit: Connection closed)
[05:20:09] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[06:00:27] *** Joins: aca (~aca@117.52.147.4)
[06:00:51] *** aca is now known as Guest9169
[06:20:47] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:9d95:c71:11e4:3e0f) (Ping timeout: 264 seconds)
[06:32:30] *** Quits: nine (~nine@comm.detonation.org) (Remote host closed the connection)
[06:32:36] *** Joins: nine (~nine@comm.detonation.org)
[07:18:48] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[07:19:11] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[07:43:06] *** Joins: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[07:43:41] *** Quits: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 265 seconds)
[07:44:03] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 260 seconds)
[07:44:05] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[07:44:33] *** Joins: tejr (~tejr@user/tejr)
[07:44:55] *** Quits: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 260 seconds)
[07:45:23] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 264 seconds)
[08:45:23] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:45:23] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:45:23] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:23] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:45:24] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:45:24] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:45:24] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:45:44] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[08:46:12] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[08:46:41] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:47:21] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[08:47:37] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[08:47:55] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[08:48:02] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[08:48:26] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:11:47] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[09:12:13] *** Joins: tejr (~tejr@user/tejr)
[09:24:12] *** Quits: oodani (~oodani@00dani.me) (*.net *.split)
[09:24:12] *** Quits: kybr (ky@2600:3c01::f03c:92ff:feb3:476f) (*.net *.split)
[09:24:12] *** Quits: pjlsergeant (sid143467@hampstead.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: rjbs (sid498898@uxbridge.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[09:24:12] *** Quits: gugod (gugod@li7-202.members.linode.com) (*.net *.split)
[09:24:12] *** Quits: polettix (~polettixx@linode.polettix.it) (*.net *.split)
[09:24:12] *** Quits: Juerd (juerd@computervrede.nl) (*.net *.split)
[09:24:26] *** Joins: polettix (~polettixx@linode.polettix.it)
[09:24:29] *** Joins: kybr (ky@2600:3c01::f03c:92ff:feb3:476f)
[09:24:33] *** Joins: gugod (gugod@li7-202.members.linode.com)
[09:24:35] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[09:24:48] *** Joins: rjbs (sid498898@id-498898.uxbridge.irccloud.com)
[09:24:50] *** Joins: oodani (~oodani@00dani.me)
[09:24:58] *** Joins: Juerd (juerd@computervrede.nl)
[09:25:05] *** Joins: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net)
[09:32:50] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[09:32:50] *** Quits: jast (jast@zoidberg.org) (*.net *.split)
[09:32:50] *** Quits: esh (~quassel@minnesota.heebs.ch) (*.net *.split)
[09:32:50] *** Quits: tinita (~irssi@astra.perl-community.de) (*.net *.split)
[09:32:50] *** Quits: dpk (~dpk@xn--issum-vva.nonceword.org) (*.net *.split)
[09:32:50] *** Quits: spacekookie (~kookie@hyperion.kookie.space) (*.net *.split)
[09:32:50] *** Quits: BinGOs (~bitbucket@user/bingos) (*.net *.split)
[09:32:51] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:32:58] *** Joins: dpk (~dpk@xn--issum-vva.nonceword.org)
[09:32:59] *** Joins: bingos (~bitbucket@user/bingos)
[09:33:02] *** Joins: tinita (~irssi@astra.perl-community.de)
[09:33:08] *** Quits: Guest9169 (~aca@117.52.147.4) (Quit: Connection closed)
[09:33:14] *** Joins: esh (~quassel@minnesota.heebs.ch)
[09:33:20] *** Joins: spacekookie (~kookie@hyperion.kookie.space)
[09:33:53] *** Joins: Henry151 (~bishop@user/henry151)
[09:47:45] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:48:13] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[09:48:17] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:48:26] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[09:48:30] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:49:11] *** Joins: seednode4 (~seednode@user/seednode)
[10:16:28] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[10:34:14] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:45:42] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[10:45:58] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[10:47:01] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[10:47:06] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[11:18:02] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[11:46:01] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[11:55:58] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[11:56:00] *** Joins: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[11:56:24] *** Quits: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:56:29] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[11:56:37] *** Joins: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[11:58:27] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[11:58:27] *** Quits: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se) (Read error: Connection reset by peer)
[12:05:34] *** Joins: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se)
[12:07:58] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (Ping timeout: 260 seconds)
[12:14:37] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[12:16:43] *** Quits: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se) (Ping timeout: 268 seconds)
[12:20:13] *** Joins: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se)
[12:23:31] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (Ping timeout: 268 seconds)
[12:25:16] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:26:41] *** Quits: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se) (Read error: Connection reset by peer)
[12:26:57] *** Joins: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se)
[12:42:30] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[12:46:57] *** Quits: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se) (Ping timeout: 268 seconds)
[12:47:36] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[13:21:40] <lizmat> notable6: weekly
[13:21:40] <notable6> lizmat, 2 notes: 2021-10-28T12:19:14Z <lizmat>: https://www.reddit.com/r/rakulang/   we have just passed the 1000 Rakoons mark!  ;  2021-10-31T23:33:34Z <melezhik>: weekly update for Raku on #mybfio - https://mybf.io/?language=Raku&filter=top
[13:22:01] *** Joins: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se)
[13:25:10] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (Ping timeout: 268 seconds)
[13:33:59] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[13:34:00] *** Quits: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se) (Read error: Connection reset by peer)
[14:34:01] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:34:02] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:47:33] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[14:58:38] <lizmat> notable6: weekly reset
[14:58:38] <notable6> lizmat, Moved existing notes to “weekly_2021-11-01T11:28:38Z”
[15:00:02] <[Coke]> Hope folks had a pleasant Halloween.
[15:00:14] <lizmat> oh, is that what that was?  :-)
[15:00:33] * lizmat just assumed Covid19 had turned ugly  :-)
[15:00:50] <Altreus> how do you think it started? :D
[15:24:35] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:bc44:afc4:50a0:6ab8)
[15:32:47] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:34:46] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[15:36:32] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:53:54] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[15:55:40] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[16:03:52] <discord-raku-bot> <Anton Antonov#7232> If you want to generate lists with random pet names or random bullshit job titles please take a look at the package `Data::Generators` . https://github.com/antononcube/Raku-Data-Generators
[16:13:22] *** Joins: dszz (~dszz@210-131-148-215.kanagawa.ap.gmo-isp.jp)
[16:18:13] *** Joins: bob (~bob@xlate0-11.curie.fr)
[16:18:26] *** Quits: bob (~bob@xlate0-11.curie.fr) (Client Quit)
[16:28:33] *** Joins: frost (~frost@user/frost)
[16:33:19] *** Quits: dszz (~dszz@210-131-148-215.kanagawa.ap.gmo-isp.jp) (Quit: Connection closed)
[16:34:03] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:35:02] *** Joins: Sgeo (~Sgeo@user/sgeo)
[16:55:24] <discord-raku-bot> <Skarsnik#7370> Hello there ^^
[16:57:04] *** Joins: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net)
[16:57:15] <Skarsnik> m:sub piko {react whenever Promise.in(1) { return 42;}}; piko();
[16:57:16] <evalable6> Skarsnik, rakudo-moar 580b3ba79: OUTPUT: «(exit code 1) MoarVM panic: Internal error: Unwound entire stack and missed handler␤»
[16:58:05] <Skarsnik> Today, in "Skarsnik does some Raku and find a new bug" xD
[17:07:50] <lizmat> And yet another Rakudo Weekly news hits the Net: https://rakudoweekly.blog/2021/11/01/2021-44-1000-rakoons/
[17:12:03] <Skarsnik> Nice :)
[17:19:14] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:33:24] <Skarsnik> Hm, I am trying to send request to a UPD server, it seems my second attempt at using print-to fail and prevent me from getting the reply
[17:37:37] <Skarsnik> It's my second attempt at reading the data that fail, not sure why :(
[17:39:39] <timo> well, with udp you never know! :D
[17:40:57] <Skarsnik> code is like sub write-socket ($towrite) {await $socket.print-to("127.0.0.1", 55355, $towrite);}
[17:41:32] <Skarsnik> sub read-socket {my $toret;
[17:41:33] <Skarsnik>  react whenever $socket.Supply -> $data { $toret = $data;
[17:41:33] <Skarsnik>    done();}
[17:41:33] <Skarsnik>  return $toret;}
[17:42:02] <Skarsnik> read-socket fails the second time (Yes I don't need a async api x))
[17:42:47] <ugexe> seems a bit odd that $socket would be a global variable, no?
[17:43:04] <Skarsnik> Died because of the exception:
[17:43:04] <Skarsnik>  connection already in progress
[17:43:09] <timo> hm, getting the supply twice, huh?
[17:43:34] <timo> i assume requesting the supply is what turns listening on
[17:43:46] <Skarsnik> it's just a dumb script to poke at RetroArch udp api
[17:44:11] <timo> perhaps you can't get .Supply a second time as fast unless you SO_REUSEADDR
[17:44:24] <ugexe> sure, but your computer only cares about logic not if its just a dumb script
[17:44:30] <timo> i'd really just grab $socket.Supply.Channel early and use that
[17:45:12] *** Joins: Resol (~Resol@S01061056119ccd94.cg.shawcable.net)
[17:49:01] <Skarsnik> Ok that worked, thank timo :)
[17:51:04] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Quit: WeeChat 3.3)
[17:54:25] *** Quits: Resol (~Resol@S01061056119ccd94.cg.shawcable.net) (Quit: Connection closed)
[17:54:45] <Skarsnik> How could I replace .raku On Buf/Blob to print Hex value and not Int?
[17:55:05] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).format("%x").say
[17:55:06] <camelia> rakudo-moar 580b3ba79: OUTPUT: «No such method 'format' for invocant of type 'Buf'␤  in block <unit> at <tmp> line 1␤␤»
[17:55:11] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).list.format("%x").say
[17:55:11] <camelia> rakudo-moar 580b3ba79: OUTPUT: «No such method 'format' for invocant of type 'List'␤  in block <unit> at <tmp> line 1␤␤»
[17:55:17] <timo> oh?
[17:55:23] <timo> ah
[17:55:28] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).fmt("%x").say
[17:55:28] <camelia> rakudo-moar 580b3ba79: OUTPUT: «No such method 'fmt' for invocant of type 'Buf'␤  in block <unit> at <tmp> line 1␤␤»
[17:55:32] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).list.fmt("%x").say
[17:55:32] <camelia> rakudo-moar 580b3ba79: OUTPUT: «1 2 a 14 5a 5b 5c␤»
[17:55:40] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).list.fmt("%02x", ",").say
[17:55:41] <camelia> rakudo-moar 580b3ba79: OUTPUT: «01,02,0a,14,5a,5b,5c␤»
[18:01:39] <japhb> Those buffer contents are giving me flashbacks of the last week's work (parsing ANSI control code schemes)
[18:08:52] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[18:21:15] *** Joins: Altai-man (~koto@94.142.239.45)
[18:21:43] *** Quits: Voldenet (~Voldenet@user/voldenet) (Remote host closed the connection)
[18:21:55] *** Quits: Altai-man (~koto@94.142.239.45) (Client Quit)
[18:22:31] <Skarsnik> damn, no method to search a buffer in another one x)
[18:24:41] *** Joins: Voldenet (~Voldenet@user/voldenet)
[18:31:07] *** Quits: gordonfish (~gordonfis@user/gordonfish) ()
[18:36:43] *** Joins: monkey_ (~user@190.104.116.31)
[18:58:58] *** Parts: andrea[m]123 (~andreanit@2001:470:69fc:105::1:28a8) ()
[19:23:12] *** Quits: monkey_ (~user@190.104.116.31) (Remote host closed the connection)
[19:32:12] *** Quits: Voldenet (~Voldenet@user/voldenet) (Quit: .)
[19:37:35] *** Joins: Voldenet (~Voldenet@user/voldenet)
[19:41:16] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[20:04:49] *** Joins: monkey_ (~user@190.104.116.31)
[20:29:25] *** Joins: andrea[m]123 (~andreanit@2001:470:69fc:105::1:28a8)
[20:42:23] *** Quits: monkey_ (~user@190.104.116.31) (Remote host closed the connection)
[20:48:46] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[20:50:20] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[21:12:36] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 268 seconds)
[21:32:29] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:34:14] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[21:36:22] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:bc44:afc4:50a0:6ab8) (Ping timeout: 260 seconds)
[21:37:13] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:9dc4:877c:4cec:30b6)
[21:43:18] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[21:43:50] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[21:47:46] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:9dc4:877c:4cec:30b6) (Ping timeout: 268 seconds)
[21:56:58] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[22:30:09] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[22:30:21] <melezhik> how can I check that an array includes another array?
[22:36:37] <ugexe> m: my @a = 1,2,3,4,5,6; my @b = 2,3,4; say @a.rotor(@b.elems => -(@b.elems - 1)).grep(* ~~ @b)
[22:36:37] <camelia> rakudo-moar 580b3ba79: OUTPUT: «((2 3 4))␤»
[22:37:11] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:3a97:eaba:c01a:d700)
[22:39:00] <melezhik> m: say (1,2,5).contains([1,2])
[22:39:00] <camelia> rakudo-moar 580b3ba79: OUTPUT: «Calling '.contains' on a List, did you mean 'needle (elem) list'?␤True␤  in block <unit> at <tmp> line 1␤»
[22:40:37] <ugexe> i dont think that does what you want
[22:41:06] <melezhik> m: say (1,2).contains([1,2,5])
[22:41:07] <camelia> rakudo-moar 580b3ba79: OUTPUT: «Calling '.contains' on a List, did you mean 'needle (elem) list'?␤False␤  in block <unit> at <tmp> line 1␤»
[22:41:14] <melezhik> ugexe why?
[22:41:19] <ugexe> maybe it does... i thought .contains stringified lists
[22:42:15] <ugexe> m: my @a = 1,2,3; say @a.contains("1 2")
[22:42:15] <camelia> rakudo-moar 580b3ba79: OUTPUT: «Calling '.contains' on a Array, did you mean 'needle (elem) list'?␤True␤  in block <unit> at <tmp> line 1␤»
[22:42:27] <ugexe> that probably isnt the behavior you desire 
[22:42:51] <melezhik> what do you mean ? warnings?
[22:43:06] <ugexe> well do you expect @a = 1,2,3 to contains "1 2"?
[22:43:14] <tonyo> m: my @a = 1,2; say "1 2".contains(@a)
[22:43:14] <camelia> rakudo-moar 580b3ba79: OUTPUT: «True␤»
[22:43:46] <tonyo> m: my $a = (1,2); say "1 25".contains($a)
[22:43:46] <camelia> rakudo-moar 580b3ba79: OUTPUT: «True␤»
[22:45:05] <melezhik> yeah, but I need check for arrays ... 
[22:46:06] <ugexe> yes, that is why we are telling you .contains doesnt work
[22:46:19] <melezhik> ok
[22:46:27] <ugexe> m: my @a = 1,2,3,4,5,6; my @b = 2,3,4; say @a.rotor(@b.elems => -(@b.elems - 1)).grep(* ~~ @b)
[22:46:28] <camelia> rakudo-moar 580b3ba79: OUTPUT: «((2 3 4))␤»
[22:46:45] <melezhik> so the only way is the code you've shared before?
[22:49:02] <MasterDuke> m: my @a = 1,2,3,4,5,6; my @b = 2,3,4; say @b (elem) @a.rotor(@b.elems => -(@b.elems - 1))    # i'm sort of surprised this doesn't work
[22:49:02] <camelia> rakudo-moar 580b3ba79: OUTPUT: «False␤»
[22:50:22] <ugexe> i mean you could use (&) but i assume you want the items in the same sequence 
[22:50:31] <ugexe> i.e. 1,2,3 doesnt match 1,2,9,3
[22:51:39] <melezhik> ah , no, I mean I don't need to take an order into account for this ...
[22:56:09] <MasterDuke> m: my @a = 1,2,"c",4,5,6; my @b = "c",8; say so all(@b.map(* (elem) @a)); my @c = "c",6; say so all(@c.map(* (elem) @a));
[22:56:09] <camelia> rakudo-moar 580b3ba79: OUTPUT: «False␤True␤»
[22:58:37] *** Joins: notna (~Thunderbi@2a02:2455:1761:6e00:d40d:e962:cc1c:b971)
[23:00:09] <tonyo> my $arr = [1,2,3]; my $search = [1,2]; say [&&] |([||] $arr.map(* == $_) for $search);
[23:00:10] <evalable6> tonyo, rakudo-moar 580b3ba79: OUTPUT: «True␤»
[23:00:16] <tonyo> if you don't care about order
[23:01:17] <tonyo> m: my $arr = [1,2,3]; my $search = [1,2,4]; say [&&] |([||] $arr.map(* == $_) for $search);
[23:01:18] <camelia> rakudo-moar 580b3ba79: OUTPUT: «True␤»
[23:01:21] <tonyo> oops.
[23:01:24] <tonyo> something like that
[23:04:33] <tonyo> m: my $arr = [1,2,3]; my $search = [1,2,4]; say [&&] ([||] $arr.map(* == $_) for |$search);
[23:04:33] <camelia> rakudo-moar 580b3ba79: OUTPUT: «False␤»
[23:04:41] <tonyo> m: my $arr = [1,2,3]; my $search = [1,2]; say [&&] ([||] $arr.map(* == $_) for |$search);
[23:04:42] <camelia> rakudo-moar 580b3ba79: OUTPUT: «True␤»
[23:09:14] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Quit: Ping timeout (120 seconds))
[23:12:04] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Bye)
[23:12:33] *** Joins: AntonOks (~AntonOks@95.157.3.181)
[23:15:54] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[23:15:56] <AntonOks> any feedback for that pull is highly appreciated...
[23:15:57] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:18:59] *** Quits: notna (~Thunderbi@2a02:2455:1761:6e00:d40d:e962:cc1c:b971) (Remote host closed the connection)
[23:19:46] *** Server sets mode: +nt 
[23:23:31] *** Quits: Kaiepi (~Kaiepi@156.34.44.192) (Remote host closed the connection)
[23:23:51] *** Joins: Kaiepi (~Kaiepi@156.34.44.192)
[23:31:41] *** Quits: AntonOks (~AntonOks@95.157.3.181) (Quit: Connection closed)
[23:35:29] *** Joins: stoned75 (~seb@78.203.129.116)
[23:42:03] <Geth> ¦ doc: cddc09f799 | (Stoned Elipot)++ | doc/Language/operators.pod6
[23:42:03] <Geth> ¦ doc: Document U+2A75 and U+2A76 operator aliases
[23:42:03] <Geth> ¦ doc: 
[23:42:03] <Geth> ¦ doc: ref #3922
[23:42:03] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/cddc09f799
[23:42:06] <linkable6> Link: https://docs.raku.org/language/operators
[23:42:50] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
