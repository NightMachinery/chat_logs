[00:16:33] *** Joins: bonhoeffer (~tim@068-113-196-027.res.spectrum.com)
[00:21:13] *** Quits: bonhoeffer (~tim@068-113-196-027.res.spectrum.com) (Remote host closed the connection)
[00:21:36] *** Joins: bonhoeffer (~tim@068-113-196-027.res.spectrum.com)
[00:30:25] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 246 seconds)
[00:30:49] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:32:38] *** Joins: Garb0 (~Garb0@user/garb0)
[00:35:43] *** Quits: Garb0 (~Garb0@user/garb0) (Read error: Connection reset by peer)
[00:41:02] *** Joins: Garb0 (~Garb0@user/garb0)
[00:41:06] *** Joins: ikke (~kevin@alpine/developer/ikke)
[00:49:38] *** Joins: Garb00 (~Garb0@user/garb0)
[00:51:38] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 255 seconds)
[00:55:45] <ikke> ruby-magic is failing with the error Magic::MagicError (could not find any valid magic files!). If I strace a simple script, I see this: https://tpaste.us/Lm6W. Why is it trying to look for those files in that location? /usr/local/bundle/gems/ruby-magic-0.4.0/ports does not exist.
[00:56:27] <ikke> This is in a ruby:2.7-alpine docker image
[00:58:05] <ikke> libmagic is installed, which has the mgc file in usr/share/misc/magic.mgc
[01:46:42] *** Joins: bandithijo (~bandithij@fedora/bandithijo)
[01:49:26] *** Joins: isekaijin (~pyon@user/pyon)
[01:56:24] *** Quits: bonhoeffer (~tim@068-113-196-027.res.spectrum.com) (Remote host closed the connection)
[02:01:08] *** Joins: bonhoeffer (~tim@068-113-196-027.res.spectrum.com)
[02:03:53] *** Quits: bandithijo (~bandithij@fedora/bandithijo) (Quit: WeeChat 3.2-rc1)
[02:07:35] *** Quits: bonhoeffer (~tim@068-113-196-027.res.spectrum.com) (Remote host closed the connection)
[02:07:57] *** Joins: bonhoeffer (~tim@068-113-196-027.res.spectrum.com)
[02:15:32] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[02:19:54] *** Quits: orbyt (~textual@172.92.4.78) (Quit: Textual IRC Client: www.textualapp.com)
[02:30:43] *** Quits: bonhoeffer (~tim@068-113-196-027.res.spectrum.com) (Ping timeout: 265 seconds)
[02:38:13] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[02:40:16] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 246 seconds)
[02:46:04] *** Quits: Garb00 (~Garb0@user/garb0) (Quit: Garb00)
[02:58:27] *** Joins: xall (~xall@2600:8800:8c02:3600:8401:de70:c883:5581)
[03:00:34] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 246 seconds)
[03:02:31] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[03:10:27] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[03:14:15] *** Joins: bonhoeffer (~tim@068-113-196-027.res.spectrum.com)
[03:15:50] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:30:13] *** Joins: FetidToot0 (~FetidToot@user/fetidtoot)
[03:32:28] *** Quits: FetidToot (~FetidToot@user/fetidtoot) (Ping timeout: 272 seconds)
[03:32:28] *** FetidToot0 is now known as FetidToot
[03:41:46] *** Quits: bonhoeffer (~tim@068-113-196-027.res.spectrum.com) (Ping timeout: 240 seconds)
[04:16:50] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[04:18:06] *** Joins: justache (~justache@user/justache)
[04:23:34] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[04:57:56] *** Joins: bandithijo (~bandithij@fedora/bandithijo)
[05:25:22] *** Joins: FetidToot3 (~FetidToot@user/fetidtoot)
[05:27:44] *** Quits: FetidToot (~FetidToot@user/fetidtoot) (Ping timeout: 272 seconds)
[05:27:44] *** FetidToot3 is now known as FetidToot
[05:44:56] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (Ping timeout: 252 seconds)
[06:24:10] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 240 seconds)
[06:26:34] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[06:28:58] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[06:35:32] *** Joins: bonhoeffer (~tim@068-113-196-027.res.spectrum.com)
[06:48:12] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[06:51:20] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 272 seconds)
[07:07:53] *** Joins: khanred (~khanred@user/khanred)
[07:18:10] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[07:19:50] *** Quits: bonhoeffer (~tim@068-113-196-027.res.spectrum.com) (Ping timeout: 272 seconds)
[07:23:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[07:28:27] *** Parts: khanred (~khanred@user/khanred) (Leaving)
[07:33:13] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[07:36:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:20:34] *** Quits: xall (~xall@2600:8800:8c02:3600:8401:de70:c883:5581) (Quit: Client closed)
[08:26:13] *** Quits: postmodern (~postmoder@user/postmodern) (Quit: Leaving)
[09:53:38] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 252 seconds)
[10:01:22] *** Quits: ansimita (~ansimita@user/ansimita) (Ping timeout: 240 seconds)
[10:02:27] *** Joins: lunarkitty (uid501895@user/pyra)
[10:19:28] *** Joins: ecso (~ecso@2600:6c4e:a00:340::1905)
[10:38:22] *** Quits: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca) (Ping timeout: 246 seconds)
[10:58:09] *** Joins: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca)
[11:06:45] *** Joins: hexreel (~hr@69.233.98.238)
[11:15:49] *** Joins: Garb0 (~Garb0@user/garb0)
[11:21:46] *** Quits: congratulated (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 246 seconds)
[11:28:00] *** Joins: congratulated (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:47:01] *** Joins: crawler (~crawler@user/crawler)
[11:54:00] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[11:54:19] *** Joins: sam113102 (~sam@modemcable229.128-202-24.mc.videotron.ca)
[11:54:58] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[11:55:23] *** Quits: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca) (Ping timeout: 255 seconds)
[11:55:25] *** sam113102 is now known as sam113101
[11:57:45] *** Joins: rhett (Username@174-126-122-77.cpe.sparklight.net)
[11:57:54] *** Quits: rhett (Username@174-126-122-77.cpe.sparklight.net) (Excess Flood)
[12:12:07] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[12:13:33] *** Quits: hexreel (~hr@69.233.98.238) (Quit: nyaa~)
[12:13:39] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[12:20:18] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:23:02] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[12:24:27] *** Joins: sagax (~sagax@213.138.71.146)
[12:24:30] <sagax> hi all
[12:24:32] <sagax> why ruby not have just Boolean class?
[12:25:28] <nakilon> why should it?
[12:26:21] <wnd> you can always create your own (and include support for FILE_NOT_FOUND) :-)
[12:26:46] <nakilon> though idk
[12:28:52] <sagax> because can be require `true` or `false` state
[12:29:05] <sagax> not only `true` or only `false`
[12:31:28] <nakilon> what is require stat?
[12:33:54] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[12:34:31] <sagax> example if Boolean; something; end
[12:38:01] <wnd> &>> [true, 1, '', 0, false, nil].map { |x| x ? true : false }
[12:38:24] <wnd> oh
[12:38:46] <wnd> in short, false and nil and falsey. everything (afaik) is truthy
[12:38:59] <wnd> s/everything/& else/
[12:39:09] <nakilon> ideally it sucks to build ifs around multiple types
[12:39:14] <nakilon> especially such as these
[12:44:37] *** Joins: niv (~niv@limbo.cypherpunks.io)
[13:04:12] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Quit: Leaving)
[13:05:58] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[13:21:26] *** Joins: Garb0 (~Garb0@user/garb0)
[13:25:58] <jhass[m]> case foo; when String; ...; when true, false; ...; end; not too bad IMO :P
[13:40:28] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 272 seconds)
[13:45:54] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[13:46:39] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[13:51:15] *** Joins: RougeR (~rougex250@user/rouger)
[13:52:05] *** Joins: Garb0 (~Garb0@user/garb0)
[13:59:46] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[14:02:41] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 252 seconds)
[14:06:56] *** Joins: Garb0 (~Garb0@user/garb0)
[14:18:38] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 252 seconds)
[14:20:37] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 246 seconds)
[14:26:17] *** Joins: molle (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk)
[14:28:38] *** Quits: mollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk) (Ping timeout: 252 seconds)
[14:42:56] *** Quits: peder (4822@nidur.ifi.uio.no) (Remote host closed the connection)
[14:44:41] <leah2> sagax: mruby has one ;)
[14:45:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[14:45:55] *** Joins: peder (4822@nidur.ifi.uio.no)
[14:46:43] *** Quits: crawler (~crawler@user/crawler) (Remote host closed the connection)
[14:48:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:49:09] <leah2> ofc you can do something like https://l2.re/19sOPo
[15:04:07] *** Quits: jhawthorn_ (~jhawthorn@user/jhawthorn) (Ping timeout: 258 seconds)
[15:07:52] *** Joins: jhawthorn (~jhawthorn@user/jhawthorn)
[15:08:04] *** Joins: crawler (~crawler@user/crawler)
[15:09:47] *** Quits: niv (~niv@limbo.cypherpunks.io) (Ping timeout: 252 seconds)
[15:24:05] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (Ping timeout: 252 seconds)
[15:30:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[15:35:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:39:00] *** Joins: niv (~niv@limbo.cypherpunks.io)
[15:49:10] *** Joins: Garb0 (~Garb0@user/garb0)
[16:08:57] *** Joins: Garb00 (~Garb0@user/garb0)
[16:10:59] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 255 seconds)
[16:21:41] *** Joins: bonhoeffer (~tim@068-113-196-027.res.spectrum.com)
[16:57:25] *** Quits: Garb00 (~Garb0@user/garb0) (Quit: Garb00)
[16:59:43] *** Joins: Garb0 (~Garb0@user/garb0)
[17:03:13] <rg> interesting
[17:11:00] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[17:14:32] <adam12> The `Boolean` class discussion has been going on since ~ 2006 or even earlier. Here's a recent-ish thread on it: https://bugs.ruby-lang.org/issues/12515
[17:15:38] <adam12> I can see the arguments against it, but also the benefits. I know the core team is a bit shy on adding new classes, but a Boolean superclass, a class to represent Time duration, and maybe even a result class would probably go a long way. Oh well.
[17:15:42] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[17:17:41] <leah2> instead of silly stuff like => assignment :p
[17:19:20] *** Joins: ignorand (~ignorand@186.179.192.124)
[17:32:23] *** Joins: royo25 (~supergeek@user/royo25)
[17:36:12] *** Quits: bonhoeffer (~tim@068-113-196-027.res.spectrum.com) (Remote host closed the connection)
[17:36:35] *** Joins: bonhoeffer (~tim@068-113-196-027.res.spectrum.com)
[17:42:16] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[17:43:49] <adam12> They had to add a special case for boolean to RBS, so it should probably have been done then :| 
[17:47:05] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[17:54:11] *** Joins: Garb00 (~Garb0@user/garb0)
[17:54:20] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (Ping timeout: 252 seconds)
[17:54:41] *** Quits: Garb0 (~Garb0@user/garb0) (Remote host closed the connection)
[17:56:33] *** Quits: gearnode (~gearnode@2a01cb000ce2c100b0b4e37bd756bdb4.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[17:57:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[17:57:14] *** Joins: gearnode (~gearnode@2a01cb000ce2c100b0b4e37bd756bdb4.ipv6.abo.wanadoo.fr)
[17:57:17] *** Quits: infernix (~nix@spirit.infernix.net) (Quit: ZNC - http://znc.sourceforge.net)
[17:57:26] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[17:57:42] *** Quits: jhawthorn (~jhawthorn@user/jhawthorn) (Quit: ZNC 1.8.2 - https://znc.in)
[17:58:08] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:00:02] *** Joins: jhawthorn (~jhawthorn@user/jhawthorn)
[18:01:57] *** Quits: bonhoeffer (~tim@068-113-196-027.res.spectrum.com) (Read error: Connection reset by peer)
[18:11:22] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[18:22:15] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[18:27:21] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[18:42:27] *** Joins: ansimita (~ansimita@user/ansimita)
[19:09:55] *** Quits: Garb00 (~Garb0@user/garb0) (Quit: Garb00)
[19:19:42] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[19:28:33] <rg> interesting how matz rejected that issue but added it to mruby later on?
[19:31:46] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 246 seconds)
[19:35:11] <adam12> rg: Indeed :P
[19:40:02] <leah2> yeah ruby 3 would have been a good option to break that :p
[20:00:33] *** Quits: royo25 (~supergeek@user/royo25) (Quit: Bye)
[20:15:22] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[20:17:39] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[20:29:54] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[20:30:14] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[20:34:54] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[20:36:40] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[20:37:47] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[20:58:26] <ignorand> I have class methods which connect to aws s3.
[20:58:59] *** Quits: bandithijo (~bandithij@fedora/bandithijo) (Ping timeout: 255 seconds)
[20:59:01] <ignorand> would it be best to make my client be a class variable? No need to 'connect/disconnect' for every call right?
[20:59:13] <ignorand> also, not sure how to 'close' the client
[20:59:28] <ignorand> I would think something like ```@@s3 = Aws::S3::Client.new if @@s3.nil?```
[20:59:34] *** Joins: orbyt (~textual@172.92.4.78)
[21:01:21] <adam12> ignorand: Unless you absolutely know what you're doing, avoid class variables (@@something) almost always.
[21:01:42] <adam12> ignorand: You're better off assigning it to a constant. Client = Aws::S3::Client.new
[21:01:49] <ignorand> adam12, okay, so avoiding it since I dont know :P
[21:02:07] <adam12> ignorand: If you need to "close" the client, you probably dont' want to assign it to a constant.
[21:02:27] <ignorand> adam12, but since I do self.def myfunction do I have to do client = Aws::S3::Client.new in every function?
[21:02:30] <adam12> ignorand: Can you show more code? Maybe give us a better idea.
[21:02:55] <adam12> Does Aws::S3::Client.new ever take args?
[21:03:29] <ignorand> adam12, https://dpaste.org/hmfR
[21:03:38] <ignorand> adam12, no args in my case
[21:03:46] <adam12> ignorand: Class variables look almost right on the surface, but they have strange effects in many cases that can be hard to debug.
[21:04:20] <adam12> ignorand: You could use a class instance variable, which is similar. def self.client; @client ||= Aws::S3::Client.new; end;. Then just call `client` where you need it.
[21:05:28] <adam12> The ||= syntax if you're not aware is an or-equals, and is a simple way to memoize some values. In this case, on the first call to `client`, it will assign to @client and return the value. Further calls to `client` just return the same value.
[21:08:04] <adam12> I'm not sure what closing an s3 client would do. It might not matter to close it.
[21:08:33] <ignorand> adam12, thanks
[21:08:36] <ignorand> lemme try this :)
[21:09:09] <ignorand> and what do I do if I want a constant string
[21:09:37] <adam12> Foobar = "constant string"
[21:09:52] <ignorand> and this will also be available for self.functions?
[21:10:10] <adam12> Actually, I'd probably call it FOOBAR in this case, but anything starting with a capital letter is a constant.
[21:10:13] <adam12> Yes.
[21:11:11] <ignorand> and I can just place it under private right?
[21:11:20] <ignorand> since it's only avail for the class
[21:12:23] <adam12> ignorand: Trick question. Yes it can go under `private`, but no it has no effect on the visibility of the constant.
[21:12:40] <ignorand> oow, lol
[21:12:47] <adam12> ignorand: you'd need to call `private_constant` with the name of the constant to make it private.
[21:13:06] <adam12> ignorand: the private, public, and protected statements only affect _methods_ in that class.
[21:13:13] <adam12> https://rubyapi.org/3.0/o/module#method-i-private_constant
[21:13:33] <ignorand> adam12, as long as it can't be changed it shouldnt matter :)
[21:13:55] <adam12> ignorand: If it's a string, freeze it. Ruby will complain if you re-assign constants, so that can help.
[21:14:08] <adam12> but there's nothign saying it will never change :P
[21:14:12] <adam12> bbl. lunch.
[21:15:45] <ignorand> yup: BUCKETNAME = 's3bucketforshorturls'.freeze
[21:47:32] *** Quits: AriT93 (~AriT93@173.226.103.218) (Remote host closed the connection)
[21:51:02] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[21:51:25] *** Joins: RougeR (~rougex250@user/rouger)
[22:16:21] <rg> private_constant wasn't for everybody when it arrived but in the end i think it upheld the spirit of ruby and how private doesn't strictly disallow access. 
[22:20:01] *** Quits: rg (~rg@user/rg) (Quit: Leaving)
[22:20:12] *** Joins: rg (~rg@user/rg)
[22:21:08] *** Joins: Ziyan (~ziyan@112.134.173.27)
[22:22:35] <Ziyan> I got a question about Ruby style. When we assign a chained method call to a variable (ex: variable = User.where(...).where(...))` do we align it 2 spaces from 'variable' or 2 spaces from 'User'. (https://gist.github.com/ziyan-junaideen/981f13f36a976390c4ee14a17ab8f060) 
[22:25:41] <adam12> Ziyan: I usually to the first. But I'd actually put `User` on it's own line too.
[22:26:09] <Ziyan> adam12 that is a good idea, never tried it... didn't know it was even legal :D 
[22:26:20] <leftylink> well. I prefer 2 spaces from variable, because 2 spaces from User is too much indentation. were I younger I'd even say "think of the bytes", but I guess these days people don't care about the bytes
[22:26:34] <leftylink> oh, to be young again...
[22:27:35] <adam12> Ziyan: I prefer it to indicate the line continues. For some reason `=` stands out more to me.
[22:27:45] <adam12> Ziyan: Similar to leading periods (vs trailing periods)
[22:40:45] *** Joins: menace (~someone@2001:a61:35bf:bb01:21e7:4eef:50fc:e7d5)
[22:40:59] *** Quits: menace (~someone@2001:a61:35bf:bb01:21e7:4eef:50fc:e7d5) (Changing host)
[22:40:59] *** Joins: menace (~someone@user/menace)
[22:41:01] *** menace is now known as Deknos
[22:41:53] <Ziyan> leftylink true that... i actually got this from a very new Ruby developer. We were having a discussion about the Ruby style guide on multi line chaining. He was not buying it. And he says a line should be 120 in width. I was like what do you do if your variable name is 120 chars long. May be its easier on the eye having it in the same vertical point but I prefer not to have neck or eye strain 🤭. May be I am a little old. 
[22:43:17] <weaksauce> if your variable name is 120 characters you have a bigger problem
[22:46:53] <adam12> I wonder if there's a limit to ruby variable name sizes...
[22:46:54] <Ziyan> adam12 yah, i am personally in to leading. I guess you are a trailing guy? It took me a lot of effort to get accept CoffeeScript objects definition ending with an equal `data =\n  blah: 123`. I am still not sure my brain agrees with it. I wonder how TypeScript is with Rails 6. 
[22:47:01] <adam12> Ziyan: No. Leading.
[22:47:12] <adam12> Ziyan: Which is why I was thankful when IRB received support for leading . in paste :)
[22:48:09] <adam12> I write very little Javascript since I agressively use Unpoly everywhere, so no comment :)
[22:49:17] <adam12> I can see how my comment about the trailing period could be misconstrued tho.
[22:49:50] *** Joins: pgib (~textual@173.38.117.69)
[22:50:12] <Ziyan> weaksauce yah, i was just trying to make a point. to highlight a conflict in his logic. my variable names are a little long, but not that long. I am like `User.each_with_index { |user, index|  blah(user, index) }. Ruby for me is about English.
[22:50:43] *** Joins: insolentworm (~root@vps-7db3bef3.vps.ovh.ca)
[22:50:45] <Ziyan> adam12 variable name length is an intersting question. Need to dig in to that. never actually thought if it could be a probelm.
[22:52:07] <adam12> >> eval("#{1_000_000.times.map { "A" }.join} = true")
[22:52:19] <adam12> ruby[bot]: ohai
[22:53:43] <Ziyan> adam12 i had to run it to confirm :D
[22:54:09] <adam12> Ziyan: I didn't bother testing with longer. :P
[22:54:28] <adam12> I don't want to crash my machine right now.
[22:54:37] <adam12> But I guess there's a theoretical limit somewhere.
[22:54:57] <gr33n7007h> probably until you run out of memory :p
[22:55:25] <adam12> gr33n7007h: I was thinking maybe something in racc about parsing labels.. but memory might be first :P
[22:55:52] <Ziyan> gr33n7007h yes I saw some articles saying there is no limit.
[22:57:10] <Ziyan> adam12 weaksauce leftylink gr33n7007h : nice chatting. its almost midnight in Sri Lanka and i am runnin on UPS because of a storm. I will log out for the day.  good day to you guys.
[22:57:20] <adam12> Ziyan: cheers.
[22:57:43] *** Quits: Ziyan (~ziyan@112.134.173.27) (Quit: Textual IRC Client: www.textualapp.com)
[22:58:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[22:58:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:09:43] *** Quits: insolentworm (~root@vps-7db3bef3.vps.ovh.ca) (Quit: WeeChat 3.2)
[23:13:24] *** Joins: insolentworm (~root@vps-7db3bef3.vps.ovh.ca)
[23:17:56] *** Quits: insolentworm (~root@vps-7db3bef3.vps.ovh.ca) (Client Quit)
[23:18:20] *** Joins: insolentworm (~root@vps-7db3bef3.vps.ovh.ca)
[23:34:14] *** Joins: xeel (~xeel@69.233.98.238)
[23:34:15] *** Joins: lunarkitty (uid501895@user/pyra)
[23:37:17] *** Quits: ignorand (~ignorand@186.179.192.124) (Ping timeout: 268 seconds)
